

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jan 04 08:01:39 2020

Microchip MPLAB XC8 C Compiler v2.10 (Pro license) build 20190730164152 Og9s 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	plic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text20,local,class=CODE,merge=1,delta=2
    26                           	psect	text21,local,class=CODE,merge=1,delta=2
    27                           	psect	text23,local,class=CODE,merge=1,delta=2
    28                           	psect	text29,local,class=CODE,merge=1,delta=2
    29                           	psect	text31,local,class=CODE,merge=1,delta=2
    30                           	psect	text32,local,class=CODE,merge=1,delta=2
    31                           	psect	text43,local,class=CODE,merge=1,delta=2
    32                           	psect	text45,local,class=CODE,merge=1,delta=2
    33                           	psect	text48,local,class=CODE,merge=1,delta=2
    34                           	psect	text50,local,class=CODE,merge=1,delta=2
    35                           	psect	text51,local,class=CODE,merge=1,delta=2
    36                           	psect	text55,local,class=CODE,merge=1,delta=2
    37                           	psect	text66,local,class=CODE,merge=1,delta=2
    38                           	psect	text72,local,class=CODE,merge=1,delta=2
    39                           	psect	text73,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	pa_nodes0,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F886 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458  0000                     	;# 
   459  0001                     	;# 
   460  0002                     	;# 
   461  0003                     	;# 
   462  0004                     	;# 
   463  0005                     	;# 
   464  0006                     	;# 
   465  0007                     	;# 
   466  0009                     	;# 
   467  000A                     	;# 
   468  000B                     	;# 
   469  000C                     	;# 
   470  000D                     	;# 
   471  000E                     	;# 
   472  000E                     	;# 
   473  000F                     	;# 
   474  0010                     	;# 
   475  0011                     	;# 
   476  0012                     	;# 
   477  0013                     	;# 
   478  0014                     	;# 
   479  0015                     	;# 
   480  0015                     	;# 
   481  0016                     	;# 
   482  0017                     	;# 
   483  0018                     	;# 
   484  0019                     	;# 
   485  001A                     	;# 
   486  001B                     	;# 
   487  001B                     	;# 
   488  001C                     	;# 
   489  001D                     	;# 
   490  001E                     	;# 
   491  001F                     	;# 
   492  0081                     	;# 
   493  0085                     	;# 
   494  0086                     	;# 
   495  0087                     	;# 
   496  0089                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  008F                     	;# 
   501  0090                     	;# 
   502  0091                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0096                     	;# 
   510  0097                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009A                     	;# 
   514  009B                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  0105                     	;# 
   520  0107                     	;# 
   521  0108                     	;# 
   522  0109                     	;# 
   523  010C                     	;# 
   524  010C                     	;# 
   525  010D                     	;# 
   526  010E                     	;# 
   527  010F                     	;# 
   528  0185                     	;# 
   529  0187                     	;# 
   530  0188                     	;# 
   531  0189                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  0000                     	;# 
   535  0001                     	;# 
   536  0002                     	;# 
   537  0003                     	;# 
   538  0004                     	;# 
   539  0005                     	;# 
   540  0006                     	;# 
   541  0007                     	;# 
   542  0009                     	;# 
   543  000A                     	;# 
   544  000B                     	;# 
   545  000C                     	;# 
   546  000D                     	;# 
   547  000E                     	;# 
   548  000E                     	;# 
   549  000F                     	;# 
   550  0010                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0013                     	;# 
   554  0014                     	;# 
   555  0015                     	;# 
   556  0015                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001B                     	;# 
   563  001B                     	;# 
   564  001C                     	;# 
   565  001D                     	;# 
   566  001E                     	;# 
   567  001F                     	;# 
   568  0081                     	;# 
   569  0085                     	;# 
   570  0086                     	;# 
   571  0087                     	;# 
   572  0089                     	;# 
   573  008C                     	;# 
   574  008D                     	;# 
   575  008E                     	;# 
   576  008F                     	;# 
   577  0090                     	;# 
   578  0091                     	;# 
   579  0092                     	;# 
   580  0093                     	;# 
   581  0093                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0097                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009A                     	;# 
   590  009B                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  0105                     	;# 
   596  0107                     	;# 
   597  0108                     	;# 
   598  0109                     	;# 
   599  010C                     	;# 
   600  010C                     	;# 
   601  010D                     	;# 
   602  010E                     	;# 
   603  010F                     	;# 
   604  0185                     	;# 
   605  0187                     	;# 
   606  0188                     	;# 
   607  0189                     	;# 
   608  018C                     	;# 
   609  018D                     	;# 
   610  0000                     	;# 
   611  0001                     	;# 
   612  0002                     	;# 
   613  0003                     	;# 
   614  0004                     	;# 
   615  0005                     	;# 
   616  0006                     	;# 
   617  0007                     	;# 
   618  0009                     	;# 
   619  000A                     	;# 
   620  000B                     	;# 
   621  000C                     	;# 
   622  000D                     	;# 
   623  000E                     	;# 
   624  000E                     	;# 
   625  000F                     	;# 
   626  0010                     	;# 
   627  0011                     	;# 
   628  0012                     	;# 
   629  0013                     	;# 
   630  0014                     	;# 
   631  0015                     	;# 
   632  0015                     	;# 
   633  0016                     	;# 
   634  0017                     	;# 
   635  0018                     	;# 
   636  0019                     	;# 
   637  001A                     	;# 
   638  001B                     	;# 
   639  001B                     	;# 
   640  001C                     	;# 
   641  001D                     	;# 
   642  001E                     	;# 
   643  001F                     	;# 
   644  0081                     	;# 
   645  0085                     	;# 
   646  0086                     	;# 
   647  0087                     	;# 
   648  0089                     	;# 
   649  008C                     	;# 
   650  008D                     	;# 
   651  008E                     	;# 
   652  008F                     	;# 
   653  0090                     	;# 
   654  0091                     	;# 
   655  0092                     	;# 
   656  0093                     	;# 
   657  0093                     	;# 
   658  0093                     	;# 
   659  0094                     	;# 
   660  0095                     	;# 
   661  0096                     	;# 
   662  0097                     	;# 
   663  0098                     	;# 
   664  0099                     	;# 
   665  009A                     	;# 
   666  009B                     	;# 
   667  009C                     	;# 
   668  009D                     	;# 
   669  009E                     	;# 
   670  009F                     	;# 
   671  0105                     	;# 
   672  0107                     	;# 
   673  0108                     	;# 
   674  0109                     	;# 
   675  010C                     	;# 
   676  010C                     	;# 
   677  010D                     	;# 
   678  010E                     	;# 
   679  010F                     	;# 
   680  0185                     	;# 
   681  0187                     	;# 
   682  0188                     	;# 
   683  0189                     	;# 
   684  018C                     	;# 
   685  018D                     	;# 
   686  0000                     	;# 
   687  0001                     	;# 
   688  0002                     	;# 
   689  0003                     	;# 
   690  0004                     	;# 
   691  0005                     	;# 
   692  0006                     	;# 
   693  0007                     	;# 
   694  0009                     	;# 
   695  000A                     	;# 
   696  000B                     	;# 
   697  000C                     	;# 
   698  000D                     	;# 
   699  000E                     	;# 
   700  000E                     	;# 
   701  000F                     	;# 
   702  0010                     	;# 
   703  0011                     	;# 
   704  0012                     	;# 
   705  0013                     	;# 
   706  0014                     	;# 
   707  0015                     	;# 
   708  0015                     	;# 
   709  0016                     	;# 
   710  0017                     	;# 
   711  0018                     	;# 
   712  0019                     	;# 
   713  001A                     	;# 
   714  001B                     	;# 
   715  001B                     	;# 
   716  001C                     	;# 
   717  001D                     	;# 
   718  001E                     	;# 
   719  001F                     	;# 
   720  0081                     	;# 
   721  0085                     	;# 
   722  0086                     	;# 
   723  0087                     	;# 
   724  0089                     	;# 
   725  008C                     	;# 
   726  008D                     	;# 
   727  008E                     	;# 
   728  008F                     	;# 
   729  0090                     	;# 
   730  0091                     	;# 
   731  0092                     	;# 
   732  0093                     	;# 
   733  0093                     	;# 
   734  0093                     	;# 
   735  0094                     	;# 
   736  0095                     	;# 
   737  0096                     	;# 
   738  0097                     	;# 
   739  0098                     	;# 
   740  0099                     	;# 
   741  009A                     	;# 
   742  009B                     	;# 
   743  009C                     	;# 
   744  009D                     	;# 
   745  009E                     	;# 
   746  009F                     	;# 
   747  0105                     	;# 
   748  0107                     	;# 
   749  0108                     	;# 
   750  0109                     	;# 
   751  010C                     	;# 
   752  010C                     	;# 
   753  010D                     	;# 
   754  010E                     	;# 
   755  010F                     	;# 
   756  0185                     	;# 
   757  0187                     	;# 
   758  0188                     	;# 
   759  0189                     	;# 
   760  018C                     	;# 
   761  018D                     	;# 
   762  0000                     	;# 
   763  0001                     	;# 
   764  0002                     	;# 
   765  0003                     	;# 
   766  0004                     	;# 
   767  0005                     	;# 
   768  0006                     	;# 
   769  0007                     	;# 
   770  0009                     	;# 
   771  000A                     	;# 
   772  000B                     	;# 
   773  000C                     	;# 
   774  000D                     	;# 
   775  000E                     	;# 
   776  000E                     	;# 
   777  000F                     	;# 
   778  0010                     	;# 
   779  0011                     	;# 
   780  0012                     	;# 
   781  0013                     	;# 
   782  0014                     	;# 
   783  0015                     	;# 
   784  0015                     	;# 
   785  0016                     	;# 
   786  0017                     	;# 
   787  0018                     	;# 
   788  0019                     	;# 
   789  001A                     	;# 
   790  001B                     	;# 
   791  001B                     	;# 
   792  001C                     	;# 
   793  001D                     	;# 
   794  001E                     	;# 
   795  001F                     	;# 
   796  0081                     	;# 
   797  0085                     	;# 
   798  0086                     	;# 
   799  0087                     	;# 
   800  0089                     	;# 
   801  008C                     	;# 
   802  008D                     	;# 
   803  008E                     	;# 
   804  008F                     	;# 
   805  0090                     	;# 
   806  0091                     	;# 
   807  0092                     	;# 
   808  0093                     	;# 
   809  0093                     	;# 
   810  0093                     	;# 
   811  0094                     	;# 
   812  0095                     	;# 
   813  0096                     	;# 
   814  0097                     	;# 
   815  0098                     	;# 
   816  0099                     	;# 
   817  009A                     	;# 
   818  009B                     	;# 
   819  009C                     	;# 
   820  009D                     	;# 
   821  009E                     	;# 
   822  009F                     	;# 
   823  0105                     	;# 
   824  0107                     	;# 
   825  0108                     	;# 
   826  0109                     	;# 
   827  010C                     	;# 
   828  010C                     	;# 
   829  010D                     	;# 
   830  010E                     	;# 
   831  010F                     	;# 
   832  0185                     	;# 
   833  0187                     	;# 
   834  0188                     	;# 
   835  0189                     	;# 
   836  018C                     	;# 
   837  018D                     	;# 
   838  0000                     	;# 
   839  0001                     	;# 
   840  0002                     	;# 
   841  0003                     	;# 
   842  0004                     	;# 
   843  0005                     	;# 
   844  0006                     	;# 
   845  0007                     	;# 
   846  0009                     	;# 
   847  000A                     	;# 
   848  000B                     	;# 
   849  000C                     	;# 
   850  000D                     	;# 
   851  000E                     	;# 
   852  000E                     	;# 
   853  000F                     	;# 
   854  0010                     	;# 
   855  0011                     	;# 
   856  0012                     	;# 
   857  0013                     	;# 
   858  0014                     	;# 
   859  0015                     	;# 
   860  0015                     	;# 
   861  0016                     	;# 
   862  0017                     	;# 
   863  0018                     	;# 
   864  0019                     	;# 
   865  001A                     	;# 
   866  001B                     	;# 
   867  001B                     	;# 
   868  001C                     	;# 
   869  001D                     	;# 
   870  001E                     	;# 
   871  001F                     	;# 
   872  0081                     	;# 
   873  0085                     	;# 
   874  0086                     	;# 
   875  0087                     	;# 
   876  0089                     	;# 
   877  008C                     	;# 
   878  008D                     	;# 
   879  008E                     	;# 
   880  008F                     	;# 
   881  0090                     	;# 
   882  0091                     	;# 
   883  0092                     	;# 
   884  0093                     	;# 
   885  0093                     	;# 
   886  0093                     	;# 
   887  0094                     	;# 
   888  0095                     	;# 
   889  0096                     	;# 
   890  0097                     	;# 
   891  0098                     	;# 
   892  0099                     	;# 
   893  009A                     	;# 
   894  009B                     	;# 
   895  009C                     	;# 
   896  009D                     	;# 
   897  009E                     	;# 
   898  009F                     	;# 
   899  0105                     	;# 
   900  0107                     	;# 
   901  0108                     	;# 
   902  0109                     	;# 
   903  010C                     	;# 
   904  010C                     	;# 
   905  010D                     	;# 
   906  010E                     	;# 
   907  010F                     	;# 
   908  0185                     	;# 
   909  0187                     	;# 
   910  0188                     	;# 
   911  0189                     	;# 
   912  018C                     	;# 
   913  018D                     	;# 
   914  0000                     	;# 
   915  0001                     	;# 
   916  0002                     	;# 
   917  0003                     	;# 
   918  0004                     	;# 
   919  0005                     	;# 
   920  0006                     	;# 
   921  0007                     	;# 
   922  0009                     	;# 
   923  000A                     	;# 
   924  000B                     	;# 
   925  000C                     	;# 
   926  000D                     	;# 
   927  000E                     	;# 
   928  000E                     	;# 
   929  000F                     	;# 
   930  0010                     	;# 
   931  0011                     	;# 
   932  0012                     	;# 
   933  0013                     	;# 
   934  0014                     	;# 
   935  0015                     	;# 
   936  0015                     	;# 
   937  0016                     	;# 
   938  0017                     	;# 
   939  0018                     	;# 
   940  0019                     	;# 
   941  001A                     	;# 
   942  001B                     	;# 
   943  001B                     	;# 
   944  001C                     	;# 
   945  001D                     	;# 
   946  001E                     	;# 
   947  001F                     	;# 
   948  0081                     	;# 
   949  0085                     	;# 
   950  0086                     	;# 
   951  0087                     	;# 
   952  0089                     	;# 
   953  008C                     	;# 
   954  008D                     	;# 
   955  008E                     	;# 
   956  008F                     	;# 
   957  0090                     	;# 
   958  0091                     	;# 
   959  0092                     	;# 
   960  0093                     	;# 
   961  0093                     	;# 
   962  0093                     	;# 
   963  0094                     	;# 
   964  0095                     	;# 
   965  0096                     	;# 
   966  0097                     	;# 
   967  0098                     	;# 
   968  0099                     	;# 
   969  009A                     	;# 
   970  009B                     	;# 
   971  009C                     	;# 
   972  009D                     	;# 
   973  009E                     	;# 
   974  009F                     	;# 
   975  0105                     	;# 
   976  0107                     	;# 
   977  0108                     	;# 
   978  0109                     	;# 
   979  010C                     	;# 
   980  010C                     	;# 
   981  010D                     	;# 
   982  010E                     	;# 
   983  010F                     	;# 
   984  0185                     	;# 
   985  0187                     	;# 
   986  0188                     	;# 
   987  0189                     	;# 
   988  018C                     	;# 
   989  018D                     	;# 
   990  0000                     	;# 
   991  0001                     	;# 
   992  0002                     	;# 
   993  0003                     	;# 
   994  0004                     	;# 
   995  0005                     	;# 
   996  0006                     	;# 
   997  0007                     	;# 
   998  0009                     	;# 
   999  000A                     	;# 
  1000  000B                     	;# 
  1001  000C                     	;# 
  1002  000D                     	;# 
  1003  000E                     	;# 
  1004  000E                     	;# 
  1005  000F                     	;# 
  1006  0010                     	;# 
  1007  0011                     	;# 
  1008  0012                     	;# 
  1009  0013                     	;# 
  1010  0014                     	;# 
  1011  0015                     	;# 
  1012  0015                     	;# 
  1013  0016                     	;# 
  1014  0017                     	;# 
  1015  0018                     	;# 
  1016  0019                     	;# 
  1017  001A                     	;# 
  1018  001B                     	;# 
  1019  001B                     	;# 
  1020  001C                     	;# 
  1021  001D                     	;# 
  1022  001E                     	;# 
  1023  001F                     	;# 
  1024  0081                     	;# 
  1025  0085                     	;# 
  1026  0086                     	;# 
  1027  0087                     	;# 
  1028  0089                     	;# 
  1029  008C                     	;# 
  1030  008D                     	;# 
  1031  008E                     	;# 
  1032  008F                     	;# 
  1033  0090                     	;# 
  1034  0091                     	;# 
  1035  0092                     	;# 
  1036  0093                     	;# 
  1037  0093                     	;# 
  1038  0093                     	;# 
  1039  0094                     	;# 
  1040  0095                     	;# 
  1041  0096                     	;# 
  1042  0097                     	;# 
  1043  0098                     	;# 
  1044  0099                     	;# 
  1045  009A                     	;# 
  1046  009B                     	;# 
  1047  009C                     	;# 
  1048  009D                     	;# 
  1049  009E                     	;# 
  1050  009F                     	;# 
  1051  0105                     	;# 
  1052  0107                     	;# 
  1053  0108                     	;# 
  1054  0109                     	;# 
  1055  010C                     	;# 
  1056  010C                     	;# 
  1057  010D                     	;# 
  1058  010E                     	;# 
  1059  010F                     	;# 
  1060  0185                     	;# 
  1061  0187                     	;# 
  1062  0188                     	;# 
  1063  0189                     	;# 
  1064  018C                     	;# 
  1065  018D                     	;# 
  1066                           
  1067                           	psect	idataBANK3
  1068  0000                     __pidataBANK3:	
  1069                           
  1070                           	psect	strings
  1071  1800                     __pstrings:	
  1072  1800                     stringtab:	
  1073  1800                     __stringtab:	
  1074                           
  1075                           ;	String table - string pointers are 1 byte each
  1076  1800  1BFF               	btfsc	btemp+1,7
  1077  1801  280A               	ljmp	stringcode
  1078  1802  1383               	bcf	3,7
  1079  1803  187F               	btfsc	btemp+1,0
  1080  1804  1783               	bsf	3,7
  1081  1805  0800               	movf	0,w
  1082  1806  0A84               	incf	4,f
  1083  1807  1903               	skipnz
  1084  1808  0AFF               	incf	btemp+1,f
  1085  1809  0008               	return
  1086  180A                     stringcode:	
  1087  180A                     stringdir:	
  1088  180A  3018               	movlw	high stringdir
  1089  180B  008A               	movwf	10
  1090  180C  0804               	movf	4,w
  1091  180D  0A84               	incf	4,f
  1092  180E  0782               	addwf	2,f
  1093  180F                     __stringbase:	
  1094  180F  3400               	retlw	0
  1095  1810                     __end_of__stringtab:	
  1096  1810                     log@coeff:	
  1097  1810  3400               	retlw	0
  1098  1811  3400               	retlw	0
  1099  1812  3400               	retlw	0
  1100  1813  3400               	retlw	0
  1101  1814  34C4               	retlw	196
  1102  1815  34FF               	retlw	255
  1103  1816  347F               	retlw	127
  1104  1817  343F               	retlw	63
  1105  1818  3480               	retlw	128
  1106  1819  34EF               	retlw	239
  1107  181A  34FF               	retlw	255
  1108  181B  34BE               	retlw	190
  1109  181C  3490               	retlw	144
  1110  181D  34E1               	retlw	225
  1111  181E  34A9               	retlw	169
  1112  181F  343E               	retlw	62
  1113  1820  34EC               	retlw	236
  1114  1821  3482               	retlw	130
  1115  1822  3476               	retlw	118
  1116  1823  34BE               	retlw	190
  1117  1824  3482               	retlw	130
  1118  1825  34AD               	retlw	173
  1119  1826  342B               	retlw	43
  1120  1827  343E               	retlw	62
  1121  1828  340E               	retlw	14
  1122  1829  343C               	retlw	60
  1123  182A  34C3               	retlw	195
  1124  182B  34BD               	retlw	189
  1125  182C  3487               	retlw	135
  1126  182D  34D1               	retlw	209
  1127  182E  3413               	retlw	19
  1128  182F  343D               	retlw	61
  1129  1830  3441               	retlw	65
  1130  1831  3478               	retlw	120
  1131  1832  34D3               	retlw	211
  1132  1833  34BB               	retlw	187
  1133  1834                     __end_oflog@coeff:	
  1134  1834                     _BETA:	
  1135                           
  1136                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1137  1834  3400               	retlw	0
  1138  1835  3460               	retlw	96
  1139  1836  3478               	retlw	120
  1140  1837  3445               	retlw	69
  1141  1838                     __end_of_BETA:	
  1142  1838                     _BALANCE_RESISTOR:	
  1143                           
  1144                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1145  1838  3400               	retlw	0
  1146  1839  3440               	retlw	64
  1147  183A  341C               	retlw	28
  1148  183B  3446               	retlw	70
  1149  183C                     __end_of_BALANCE_RESISTOR:	
  1150  0019                     _TXREG	set	25
  1151  0018                     _RCSTAbits	set	24
  1152  001A                     _RCREG	set	26
  1153  000E                     _TMR1L	set	14
  1154  000F                     _TMR1H	set	15
  1155  000C                     _PIR1bits	set	12
  1156  001E                     _ADRESH	set	30
  1157  001F                     _ADCON0bits	set	31
  1158  0005                     _PORTAbits	set	5
  1159  0007                     _PORTCbits	set	7
  1160  0010                     _T1CON	set	16
  1161  000B                     _INTCONbits	set	11
  1162  0006                     _PORTBbits	set	6
  1163  0009                     _PORTE	set	9
  1164  0007                     _PORTC	set	7
  1165  0005                     _PORTA	set	5
  1166  0013                     _SSPBUF	set	19
  1167  0014                     _SSPCON	set	20
  1168  0006                     _PORTB	set	6
  1169  00C4                     _CREN	set	196
  1170  0081                     _TMR1CS	set	129
  1171  0085                     _T1CKPS1	set	133
  1172  0084                     _T1CKPS0	set	132
  1173  008C                     _PIE1bits	set	140
  1174  0099                     _SPBRG	set	153
  1175  0098                     _TXSTAbits	set	152
  1176  009E                     _ADRESL	set	158
  1177  009F                     _ADCON1bits	set	159
  1178  009F                     _ADCON1	set	159
  1179  0095                     _WPUB	set	149
  1180  0081                     _OPTION_REGbits	set	129
  1181  0089                     _TRISE	set	137
  1182  0087                     _TRISC	set	135
  1183  0086                     _TRISB	set	134
  1184  0085                     _TRISA	set	133
  1185  008F                     _OSCCONbits	set	143
  1186  0094                     _SSPSTAT	set	148
  1187  0093                     _SSPADD	set	147
  1188  0091                     _SSPCON2	set	145
  1189  043F                     _TRISC7	set	1087
  1190  043E                     _TRISC6	set	1086
  1191  0460                     _TMR1IE	set	1120
  1192  048C                     _ACKEN	set	1164
  1193  048D                     _ACKDT	set	1165
  1194  048B                     _RCEN	set	1163
  1195  048A                     _PEN	set	1162
  1196  0489                     _RSEN	set	1161
  1197  0488                     _SEN	set	1160
  1198  043C                     _TRISC4	set	1084
  1199  043B                     _TRISC3	set	1083
  1200  010C                     _EEDATA	set	268
  1201  010D                     _EEADR	set	269
  1202  0187                     _BAUDCTLbits	set	391
  1203  018D                     _EECON2	set	397
  1204  018C                     _EECON1bits	set	396
  1205  0189                     _ANSELH	set	393
  1206  0188                     _ANSEL	set	392
  1207  183C                     STR_1:	
  1208  183C  3476               	retlw	118	;'v'
  1209  183D  3431               	retlw	49	;'1'
  1210  183E  342E               	retlw	46	;'.'
  1211  183F  3430               	retlw	48	;'0'
  1212  1840  342E               	retlw	46	;'.'
  1213  1841  3437               	retlw	55	;'7'
  1214  1842  3400               	retlw	0
  1215  1843                     STR_8:	
  1216  1843  344F               	retlw	79	;'O'
  1217  1844  344B               	retlw	75	;'K'
  1218  1845  3400               	retlw	0
  1219  1846                     STR_3:	
  1220  1846  3430               	retlw	48	;'0'
  1221  1847  3400               	retlw	0
  1222  1848                     STR_4:	
  1223  1848  343A               	retlw	58	;':'
  1224  1849  3400               	retlw	0
  1225  1847                     
  1226                           ; #config settings
  1227  0000                     
  1228                           	psect	cinit
  1229  0015                     start_initialization:	
  1230  0015                     __initialization:	
  1231                           
  1232                           ; Initialize objects allocated to BANK3
  1233  0015  1683               	bsf	3,5	;RP0=1, select bank3
  1234  0016  1703               	bsf	3,6	;RP1=1, select bank3
  1235                           
  1236                           ;initializer for _RL1Status
  1237  0017  3001               	movlw	1
  1238  0018  00DF               	movwf	__pdataBANK3& (0+127)
  1239                           
  1240                           ;initializer for _RL0Status
  1241  0019  00E0               	movwf	(__pdataBANK3+1)& (0+127)
  1242  001A  3090               	movlw	low __pbssBANK3
  1243                           
  1244                           ; Clear objects allocated to BANK3
  1245  001B  1783               	bsf	3,7	;select IRP bank2
  1246  001C  0084               	movwf	4
  1247  001D  30DC               	movlw	low (__pbssBANK3+76)
  1248  001E  120A  158A  2002  120A  118A  	fcall	clear_ram0
  1249                           
  1250                           ; Clear objects allocated to BANK2
  1251  0023  3010               	movlw	low __pbssBANK2
  1252  0024  0084               	movwf	4
  1253  0025  305A               	movlw	low (__pbssBANK2+74)
  1254  0026  120A  158A  2002   	fcall	clear_ram0
  1255                           
  1256                           ; Clear objects allocated to BANK1
  1257  0029  1303               	bcf	3,6	;RP1=0, select bank1
  1258  002A  01EE               	clrf	__pbssBANK1& (0+127)
  1259  002B  01EF               	clrf	(__pbssBANK1+1)& (0+127)
  1260                           
  1261                           ; Clear objects allocated to COMMON
  1262  002C  01F0               	clrf	__pbssCOMMON& (0+127)
  1263  002D  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1264  002E  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1265  002F  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1266  0030  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1267  0031  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1268  0032  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1269  0033                     end_of_initialization:	
  1270                           ;End of C runtime variable initialization code
  1271                           
  1272  0033                     __end_of__initialization:	
  1273  0033  0183               	clrf	3
  1274  0034  120A  118A  2E36   	ljmp	l7324	;jump to C main() function
  1275                           
  1276                           	psect	bssCOMMON
  1277  0070                     __pbssCOMMON:	
  1278  0070                     _SetPoint0:	
  1279  0070                     	ds	4
  1280  0074                     _hora:	
  1281  0074                     	ds	1
  1282  0075                     _segundo:	
  1283  0075                     	ds	1
  1284  0076                     _generic_status:	
  1285  0076                     	ds	1
  1286                           
  1287                           	psect	bssBANK1
  1288  00EE                     __pbssBANK1:	
  1289  00EE                     _TempoCNT_1:	
  1290  00EE                     	ds	1
  1291  00EF                     _TempoCNT_0:	
  1292  00EF                     	ds	1
  1293                           
  1294                           	psect	bssBANK3
  1295  0190                     __pbssBANK3:	
  1296  0190                     _Temperatura1:	
  1297  0190                     	ds	4
  1298  0194                     _Temperatura0:	
  1299  0194                     	ds	4
  1300  0198                     _SetPoint1:	
  1301  0198                     	ds	4
  1302  019C                     _Histerese0:	
  1303  019C                     	ds	4
  1304  01A0                     _tempodecorrido:	
  1305  01A0                     	ds	2
  1306  01A2                     _count:	
  1307  01A2                     	ds	2
  1308  01A4                     _header:	
  1309  01A4                     	ds	2
  1310  01A6                     _Status1:	
  1311  01A6                     	ds	2
  1312  01A8                     _Status0:	
  1313  01A8                     	ds	2
  1314  01AA                     _milisegundo:	
  1315  01AA                     	ds	2
  1316  01AC                     _Delay_Led_Usart:	
  1317  01AC                     	ds	2
  1318  01AE                     _Delay_Led_Tmr0:	
  1319  01AE                     	ds	2
  1320  01B0                     _Delay_Led_Memory:	
  1321  01B0                     	ds	2
  1322  01B2                     _pointer:	
  1323  01B2                     	ds	1
  1324  01B3                     _destino:	
  1325  01B3                     	ds	1
  1326  01B4                     _Board_Number:	
  1327  01B4                     	ds	1
  1328  01B5                     _canal:	
  1329  01B5                     	ds	1
  1330  01B6                     _TempoOFF_1:	
  1331  01B6                     	ds	1
  1332  01B7                     _TempoON_1:	
  1333  01B7                     	ds	1
  1334  01B8                     _Histerese1:	
  1335  01B8                     	ds	1
  1336  01B9                     _TempoOFF_0:	
  1337  01B9                     	ds	1
  1338  01BA                     _TempoON_0:	
  1339  01BA                     	ds	1
  1340  01BB                     _minuto:	
  1341  01BB                     	ds	1
  1342  01BC                     _texto:	
  1343  01BC                     	ds	16
  1344  01CC                     _usart_protocol:	
  1345  01CC                     	ds	16
  1346                           
  1347                           	psect	dataBANK3
  1348  01DF                     __pdataBANK3:	
  1349  01DF                     _RL1Status:	
  1350  01DF                     	ds	1
  1351  01E0                     _RL0Status:	
  1352  01E0                     	ds	1
  1353                           
  1354                           	psect	bssBANK2
  1355  0110                     __pbssBANK2:	
  1356  0110                     _usart_buffer:	
  1357  0110                     	ds	42
  1358  013A                     _buffer:	
  1359  013A                     	ds	32
  1360                           
  1361                           	psect	clrtext
  1362  0802                     clear_ram0:	
  1363                           ;	Called with FSR containing the base address, and
  1364                           ;	W with the last address+1
  1365                           
  1366  0802  0064               	clrwdt	;clear the watchdog before getting into this loop
  1367  0803                     clrloop0:	
  1368  0803  0180               	clrf	0	;clear RAM location pointed to by FSR
  1369  0804  0A84               	incf	4,f	;increment pointer
  1370  0805  0604               	xorwf	4,w	;XOR with final address
  1371  0806  1903               	btfsc	3,2	;have we reached the end yet?
  1372  0807  3400               	retlw	0	;all done for this memory range, return
  1373  0808  0604               	xorwf	4,w	;XOR again to restore value
  1374  0809  2803               	goto	clrloop0	;do the next byte
  1375                           
  1376                           	psect	cstackBANK3
  1377  01DC                     __pcstackBANK3:	
  1378  01DC                     ??_main:	
  1379                           
  1380                           ; 1 bytes @ 0x0
  1381  01DC                     	ds	3
  1382                           
  1383                           	psect	cstackBANK1
  1384  00A0                     __pcstackBANK1:	
  1385  00A0                     ?_eval_poly:	
  1386  00A0                     ?___fltol:	
  1387                           ; 4 bytes @ 0x0
  1388                           
  1389  00A0                     ?___fldiv:	
  1390                           ; 4 bytes @ 0x0
  1391                           
  1392  00A0                     ___fltol@f1:	
  1393                           ; 4 bytes @ 0x0
  1394                           
  1395  00A0                     ___fldiv@a:	
  1396                           ; 4 bytes @ 0x0
  1397                           
  1398  00A0                     eval_poly@x:	
  1399                           ; 4 bytes @ 0x0
  1400                           
  1401                           
  1402                           ; 4 bytes @ 0x0
  1403  00A0                     	ds	4
  1404  00A4                     ??___fltol:	
  1405  00A4                     eval_poly@d:	
  1406                           ; 1 bytes @ 0x4
  1407                           
  1408  00A4                     ___fldiv@b:	
  1409                           ; 1 bytes @ 0x4
  1410                           
  1411                           
  1412                           ; 4 bytes @ 0x4
  1413  00A4                     	ds	1
  1414  00A5                     eval_poly@n:	
  1415                           
  1416                           ; 2 bytes @ 0x5
  1417  00A5                     	ds	2
  1418  00A7                     ??_eval_poly:	
  1419                           
  1420                           ; 1 bytes @ 0x7
  1421  00A7                     	ds	1
  1422  00A8                     ?_USART_put_int:	
  1423  00A8                     ?_EEPROM_24C1025_Write_Int:	
  1424                           ; 1 bytes @ 0x8
  1425                           
  1426  00A8                     ??___fldiv:	
  1427                           ; 1 bytes @ 0x8
  1428                           
  1429  00A8                     USART_put_int@value:	
  1430                           ; 1 bytes @ 0x8
  1431                           
  1432  00A8                     EEPROM_24C1025_Write_Int@mem_add:	
  1433                           ; 2 bytes @ 0x8
  1434                           
  1435                           
  1436                           ; 4 bytes @ 0x8
  1437  00A8                     	ds	2
  1438  00AA                     USART_put_int@dado:	
  1439                           
  1440                           ; 1 bytes @ 0xA
  1441  00AA                     	ds	1
  1442  00AB                     ?_PROCULUS_Control_Register_Write:	
  1443  00AB                     ?_PROCULUS_VP_Write:	
  1444                           ; 1 bytes @ 0xB
  1445                           
  1446  00AB                     PROCULUS_Control_Register_Write@size:	
  1447                           ; 1 bytes @ 0xB
  1448                           
  1449  00AB                     PROCULUS_VP_Write@vp:	
  1450                           ; 1 bytes @ 0xB
  1451                           
  1452                           
  1453                           ; 2 bytes @ 0xB
  1454  00AB                     	ds	1
  1455  00AC                     ??_PROCULUS_Control_Register_Write:	
  1456  00AC                     EEPROM_24C1025_Write_Int@data:	
  1457                           ; 1 bytes @ 0xC
  1458                           
  1459  00AC                     ___fldiv@rem:	
  1460                           ; 2 bytes @ 0xC
  1461                           
  1462  00AC                     eval_poly@res:	
  1463                           ; 4 bytes @ 0xC
  1464                           
  1465                           
  1466                           ; 4 bytes @ 0xC
  1467  00AC                     	ds	1
  1468  00AD                     PROCULUS_Control_Register_Write@vetor:	
  1469  00AD                     PROCULUS_VP_Write@vetor:	
  1470                           ; 1 bytes @ 0xD
  1471                           
  1472                           
  1473                           ; 2 bytes @ 0xD
  1474  00AD                     	ds	1
  1475  00AE                     PROCULUS_Control_Register_Write@i:	
  1476  00AE                     EEPROM_24C1025_Write_Int@chip_add:	
  1477                           ; 1 bytes @ 0xE
  1478                           
  1479                           
  1480                           ; 1 bytes @ 0xE
  1481  00AE                     	ds	1
  1482  00AF                     ?_PROCULUS_Show_Screen:	
  1483  00AF                     ?_PROCULUS_Buzzer:	
  1484                           ; 1 bytes @ 0xF
  1485                           
  1486  00AF                     PROCULUS_VP_Write@size:	
  1487                           ; 1 bytes @ 0xF
  1488                           
  1489  00AF                     PROCULUS_Buzzer@time_ms_x_10:	
  1490                           ; 1 bytes @ 0xF
  1491                           
  1492  00AF                     PROCULUS_Show_Screen@screen:	
  1493                           ; 2 bytes @ 0xF
  1494                           
  1495  00AF                     EEPROM_24C1025_Write_Int@local:	
  1496                           ; 2 bytes @ 0xF
  1497                           
  1498                           
  1499                           ; 2 bytes @ 0xF
  1500  00AF                     	ds	1
  1501  00B0                     ??_PROCULUS_VP_Write:	
  1502  00B0                     ?_log:	
  1503                           ; 1 bytes @ 0x10
  1504                           
  1505  00B0                     ___fldiv@sign:	
  1506                           ; 4 bytes @ 0x10
  1507                           
  1508  00B0                     log@x:	
  1509                           ; 1 bytes @ 0x10
  1510                           
  1511                           
  1512                           ; 4 bytes @ 0x10
  1513  00B0                     	ds	1
  1514  00B1                     ?_Save_Log:	
  1515  00B1                     ?_EEPROM_24C1025_Fill_All:	
  1516                           ; 1 bytes @ 0x11
  1517                           
  1518  00B1                     PROCULUS_Buzzer@vetor:	
  1519                           ; 1 bytes @ 0x11
  1520                           
  1521  00B1                     EEPROM_24C1025_Fill_All@value:	
  1522                           ; 2 bytes @ 0x11
  1523                           
  1524  00B1                     ___fldiv@new_exp:	
  1525                           ; 2 bytes @ 0x11
  1526                           
  1527  00B1                     PROCULUS_Show_Screen@vetor:	
  1528                           ; 2 bytes @ 0x11
  1529                           
  1530  00B1                     Save_Log@add_datalog:	
  1531                           ; 3 bytes @ 0x11
  1532                           
  1533                           
  1534                           ; 4 bytes @ 0x11
  1535  00B1                     	ds	1
  1536  00B2                     PROCULUS_VP_Write@i:	
  1537                           
  1538                           ; 1 bytes @ 0x12
  1539  00B2                     	ds	1
  1540  00B3                     ?_PROCULUS_VP_Write_String:	
  1541  00B3                     EEPROM_24C1025_Fill_All@chip_add:	
  1542                           ; 1 bytes @ 0x13
  1543                           
  1544  00B3                     PROCULUS_VP_Write_String@vp:	
  1545                           ; 1 bytes @ 0x13
  1546                           
  1547  00B3                     ___fldiv@grs:	
  1548                           ; 2 bytes @ 0x13
  1549                           
  1550                           
  1551                           ; 4 bytes @ 0x13
  1552  00B3                     	ds	1
  1553  00B4                     EEPROM_24C1025_Fill_All@mem_add:	
  1554                           
  1555                           ; 4 bytes @ 0x14
  1556  00B4                     	ds	1
  1557  00B5                     ??_Save_Log:	
  1558  00B5                     PROCULUS_VP_Write_String@text:	
  1559                           ; 1 bytes @ 0x15
  1560                           
  1561                           
  1562                           ; 1 bytes @ 0x15
  1563  00B5                     	ds	2
  1564  00B7                     ___fldiv@bexp:	
  1565                           
  1566                           ; 1 bytes @ 0x17
  1567  00B7                     	ds	1
  1568  00B8                     ___fldiv@aexp:	
  1569                           
  1570                           ; 1 bytes @ 0x18
  1571  00B8                     	ds	1
  1572  00B9                     ??_Load_Work:	
  1573  00B9                     ?_ADC_Read_NTC:	
  1574                           ; 1 bytes @ 0x19
  1575                           
  1576                           
  1577                           ; 4 bytes @ 0x19
  1578  00B9                     	ds	4
  1579  00BD                     ??_Decodify_Command:	
  1580                           
  1581                           ; 1 bytes @ 0x1D
  1582  00BD                     	ds	1
  1583  00BE                     ADC_Read_NTC@calc:	
  1584                           
  1585                           ; 4 bytes @ 0x1E
  1586  00BE                     	ds	1
  1587  00BF                     Decodify_Command@hh:	
  1588                           
  1589                           ; 10 bytes @ 0x1F
  1590  00BF                     	ds	3
  1591  00C2                     ADC_Read_NTC@B:	
  1592                           
  1593                           ; 2 bytes @ 0x22
  1594  00C2                     	ds	2
  1595  00C4                     ADC_Read_NTC@resistencia:	
  1596                           
  1597                           ; 4 bytes @ 0x24
  1598  00C4                     	ds	4
  1599  00C8                     ADC_Read_NTC@i:	
  1600                           
  1601                           ; 1 bytes @ 0x28
  1602  00C8                     	ds	1
  1603  00C9                     ADC_Read_NTC@value:	
  1604  00C9                     Decodify_Command@mm:	
  1605                           ; 2 bytes @ 0x29
  1606                           
  1607                           
  1608                           ; 10 bytes @ 0x29
  1609  00C9                     	ds	2
  1610  00CB                     ADC_Read_NTC@temperatura:	
  1611                           
  1612                           ; 4 bytes @ 0x2B
  1613  00CB                     	ds	4
  1614  00CF                     ??_mediatemperaturaNTC:	
  1615                           
  1616                           ; 1 bytes @ 0x2F
  1617  00CF                     	ds	1
  1618  00D0                     _mediatemperaturaNTC$2292:	
  1619                           
  1620                           ; 4 bytes @ 0x30
  1621  00D0                     	ds	3
  1622  00D3                     Decodify_Command@ss:	
  1623                           
  1624                           ; 10 bytes @ 0x33
  1625  00D3                     	ds	1
  1626  00D4                     mediatemperaturaNTC@canal:	
  1627                           
  1628                           ; 1 bytes @ 0x34
  1629  00D4                     	ds	1
  1630  00D5                     mediatemperaturaNTC@Temp:	
  1631                           
  1632                           ; 4 bytes @ 0x35
  1633  00D5                     	ds	4
  1634  00D9                     mediatemperaturaNTC@i:	
  1635                           
  1636                           ; 1 bytes @ 0x39
  1637  00D9                     	ds	4
  1638  00DD                     Decodify_Command@dados:	
  1639                           
  1640                           ; 2 bytes @ 0x3D
  1641  00DD                     	ds	2
  1642  00DF                     Decodify_Command@add:	
  1643                           
  1644                           ; 1 bytes @ 0x3F
  1645  00DF                     	ds	1
  1646  00E0                     Decodify_Command@tempint:	
  1647                           
  1648                           ; 2 bytes @ 0x40
  1649  00E0                     	ds	2
  1650  00E2                     Decodify_Command@OutPut:	
  1651                           
  1652                           ; 4 bytes @ 0x42
  1653  00E2                     	ds	4
  1654  00E6                     Decodify_Command@tempchar:	
  1655                           
  1656                           ; 1 bytes @ 0x46
  1657  00E6                     	ds	1
  1658  00E7                     Decodify_Command@sizedata:	
  1659                           
  1660                           ; 1 bytes @ 0x47
  1661  00E7                     	ds	1
  1662  00E8                     Decodify_Command@add_24LCxxxx:	
  1663                           
  1664                           ; 4 bytes @ 0x48
  1665  00E8                     	ds	4
  1666  00EC                     main@reset:	
  1667                           
  1668                           ; 2 bytes @ 0x4C
  1669  00EC                     	ds	2
  1670                           
  1671                           	psect	cstackCOMMON
  1672  0077                     __pcstackCOMMON:	
  1673  0077                     ?_ADC_init:	
  1674  0077                     ?_Load_Work:	
  1675                           ; 1 bytes @ 0x0
  1676                           
  1677  0077                     ?_mediatemperaturaNTC:	
  1678                           ; 1 bytes @ 0x0
  1679                           
  1680  0077                     ?_Auto_Relay0:	
  1681                           ; 1 bytes @ 0x0
  1682                           
  1683  0077                     ?_Auto_Relay1:	
  1684                           ; 1 bytes @ 0x0
  1685                           
  1686  0077                     ?_Decodify_Command:	
  1687                           ; 1 bytes @ 0x0
  1688                           
  1689  0077                     ?_USART_to_Protocol:	
  1690                           ; 1 bytes @ 0x0
  1691                           
  1692  0077                     ?_Send_To_MB:	
  1693                           ; 1 bytes @ 0x0
  1694                           
  1695  0077                     ?_Send_Reply_OK:	
  1696                           ; 1 bytes @ 0x0
  1697                           
  1698  0077                     ?_EEPROM_Read_Byte:	
  1699                           ; 1 bytes @ 0x0
  1700                           
  1701  0077                     ?_USART_putc:	
  1702                           ; 1 bytes @ 0x0
  1703                           
  1704  0077                     ?_Package_Usart_is_for_me:	
  1705                           ; 1 bytes @ 0x0
  1706                           
  1707  0077                     ?_Rele0Ligado:	
  1708                           ; 1 bytes @ 0x0
  1709                           
  1710  0077                     ?_Rele1Ligado:	
  1711                           ; 1 bytes @ 0x0
  1712                           
  1713  0077                     ?_Rele0Desligado:	
  1714                           ; 1 bytes @ 0x0
  1715                           
  1716  0077                     ?_Rele1Desligado:	
  1717                           ; 1 bytes @ 0x0
  1718                           
  1719  0077                     ?_I2C_Master_Wait:	
  1720                           ; 1 bytes @ 0x0
  1721                           
  1722  0077                     ?_I2C_Master_Start:	
  1723                           ; 1 bytes @ 0x0
  1724                           
  1725  0077                     ?_I2C_Master_RepeatedStart:	
  1726                           ; 1 bytes @ 0x0
  1727                           
  1728  0077                     ?_I2C_Master_Stop:	
  1729                           ; 1 bytes @ 0x0
  1730                           
  1731  0077                     ?_main:	
  1732                           ; 1 bytes @ 0x0
  1733                           
  1734  0077                     ?_isr:	
  1735                           ; 1 bytes @ 0x0
  1736                           
  1737  0077                     ??_isr:	
  1738                           ; 1 bytes @ 0x0
  1739                           
  1740  0077                     ADC_Read_NTC@canal:	
  1741                           ; 1 bytes @ 0x0
  1742                           
  1743                           
  1744                           ; 1 bytes @ 0x0
  1745  0077                     	ds	4
  1746  007B                     isr@tempo:	
  1747                           
  1748                           ; 2 bytes @ 0x4
  1749  007B                     	ds	2
  1750                           
  1751                           	psect	cstackBANK0
  1752  0020                     __pcstackBANK0:	
  1753  0020                     ?___fleq:	
  1754  0020                     ?_my_delay_ms_WDT:	
  1755                           ; 1 bit 
  1756                           
  1757  0020                     ??_ADC_init:	
  1758                           ; 1 bytes @ 0x0
  1759                           
  1760  0020                     ?_USART_init:	
  1761                           ; 1 bytes @ 0x0
  1762                           
  1763  0020                     ??_USART_to_Protocol:	
  1764                           ; 1 bytes @ 0x0
  1765                           
  1766  0020                     ?_EEPROM_Write_Byte:	
  1767                           ; 1 bytes @ 0x0
  1768                           
  1769  0020                     ??_EEPROM_Read_Byte:	
  1770                           ; 1 bytes @ 0x0
  1771                           
  1772  0020                     ??_USART_putc:	
  1773                           ; 1 bytes @ 0x0
  1774                           
  1775  0020                     ?_strcpy:	
  1776                           ; 1 bytes @ 0x0
  1777                           
  1778  0020                     ?_strcat:	
  1779                           ; 1 bytes @ 0x0
  1780                           
  1781  0020                     ?_my_delay_ms:	
  1782                           ; 1 bytes @ 0x0
  1783                           
  1784  0020                     ??_Package_Usart_is_for_me:	
  1785                           ; 1 bytes @ 0x0
  1786                           
  1787  0020                     ??_Rele0Ligado:	
  1788                           ; 1 bytes @ 0x0
  1789                           
  1790  0020                     ??_Rele1Ligado:	
  1791                           ; 1 bytes @ 0x0
  1792                           
  1793  0020                     ??_Rele0Desligado:	
  1794                           ; 1 bytes @ 0x0
  1795                           
  1796  0020                     ??_Rele1Desligado:	
  1797                           ; 1 bytes @ 0x0
  1798                           
  1799  0020                     ?_PROCULUS_Delay:	
  1800                           ; 1 bytes @ 0x0
  1801                           
  1802  0020                     ??_I2C_Master_Wait:	
  1803                           ; 1 bytes @ 0x0
  1804                           
  1805  0020                     ??_I2C_Master_Start:	
  1806                           ; 1 bytes @ 0x0
  1807                           
  1808  0020                     ??_I2C_Master_RepeatedStart:	
  1809                           ; 1 bytes @ 0x0
  1810                           
  1811  0020                     ??_I2C_Master_Stop:	
  1812                           ; 1 bytes @ 0x0
  1813                           
  1814  0020                     ?_I2C_Master_Write:	
  1815                           ; 1 bytes @ 0x0
  1816                           
  1817  0020                     ?_strlen:	
  1818                           ; 1 bytes @ 0x0
  1819                           
  1820  0020                     ?_captura:	
  1821                           ; 2 bytes @ 0x0
  1822                           
  1823  0020                     ?__Umul8_16:	
  1824                           ; 2 bytes @ 0x0
  1825                           
  1826  0020                     ?_I2C_Master_Read:	
  1827                           ; 2 bytes @ 0x0
  1828                           
  1829  0020                     ?___lwdiv:	
  1830                           ; 2 bytes @ 0x0
  1831                           
  1832  0020                     ?___lwmod:	
  1833                           ; 2 bytes @ 0x0
  1834                           
  1835  0020                     ?___lldiv:	
  1836                           ; 2 bytes @ 0x0
  1837                           
  1838  0020                     EEPROM_Write_Byte@dado:	
  1839                           ; 4 bytes @ 0x0
  1840                           
  1841  0020                     Package_Usart_is_for_me@retorno:	
  1842                           ; 1 bytes @ 0x0
  1843                           
  1844  0020                     USART_putc@value:	
  1845                           ; 1 bytes @ 0x0
  1846                           
  1847  0020                     strcpy@from:	
  1848                           ; 1 bytes @ 0x0
  1849                           
  1850  0020                     __Umul8_16@multiplicand:	
  1851                           ; 1 bytes @ 0x0
  1852                           
  1853  0020                     I2C_Master_Write@d:	
  1854                           ; 1 bytes @ 0x0
  1855                           
  1856  0020                     I2C_Master_Read@a:	
  1857                           ; 2 bytes @ 0x0
  1858                           
  1859  0020                     PROCULUS_Delay@tempo_ms:	
  1860                           ; 2 bytes @ 0x0
  1861                           
  1862  0020                     ___lwdiv@divisor:	
  1863                           ; 2 bytes @ 0x0
  1864                           
  1865  0020                     ___lwmod@divisor:	
  1866                           ; 2 bytes @ 0x0
  1867                           
  1868  0020                     strcat@from:	
  1869                           ; 2 bytes @ 0x0
  1870                           
  1871  0020                     my_delay_ms@time:	
  1872                           ; 2 bytes @ 0x0
  1873                           
  1874  0020                     my_delay_ms_WDT@time:	
  1875                           ; 4 bytes @ 0x0
  1876                           
  1877  0020                     USART_init@baudrate:	
  1878                           ; 4 bytes @ 0x0
  1879                           
  1880  0020                     ___lldiv@divisor:	
  1881                           ; 4 bytes @ 0x0
  1882                           
  1883  0020                     ___fleq@ff1:	
  1884                           ; 4 bytes @ 0x0
  1885                           
  1886                           
  1887                           ; 4 bytes @ 0x0
  1888  0020                     	ds	1
  1889  0021                     ??_Send_To_MB:	
  1890  0021                     ?_USART_put_string:	
  1891                           ; 1 bytes @ 0x1
  1892                           
  1893  0021                     ??_EEPROM_Write_Byte:	
  1894                           ; 1 bytes @ 0x1
  1895                           
  1896  0021                     ?_USART_put_buffer:	
  1897                           ; 1 bytes @ 0x1
  1898                           
  1899  0021                     ??_strcpy:	
  1900                           ; 1 bytes @ 0x1
  1901                           
  1902  0021                     Send_To_MB@size:	
  1903                           ; 1 bytes @ 0x1
  1904                           
  1905  0021                     USART_put_buffer@size:	
  1906                           ; 1 bytes @ 0x1
  1907                           
  1908  0021                     USART_put_string@vetor:	
  1909                           ; 2 bytes @ 0x1
  1910                           
  1911                           
  1912                           ; 2 bytes @ 0x1
  1913  0021                     	ds	1
  1914  0022                     ?_EEPROM_24C1025_Write_Buffer:	
  1915  0022                     ?_EEPROM_24C1025_Write_Str:	
  1916                           ; 1 bytes @ 0x2
  1917                           
  1918  0022                     ??_strcat:	
  1919                           ; 1 bytes @ 0x2
  1920                           
  1921  0022                     ??_captura:	
  1922                           ; 1 bytes @ 0x2
  1923                           
  1924  0022                     ??_PROCULUS_Delay:	
  1925                           ; 1 bytes @ 0x2
  1926                           
  1927  0022                     ??_I2C_Master_Write:	
  1928                           ; 1 bytes @ 0x2
  1929                           
  1930  0022                     ??_I2C_Master_Read:	
  1931                           ; 1 bytes @ 0x2
  1932                           
  1933  0022                     EEPROM_Read_Byte@addr:	
  1934                           ; 1 bytes @ 0x2
  1935                           
  1936  0022                     strcpy@to:	
  1937                           ; 1 bytes @ 0x2
  1938                           
  1939  0022                     I2C_Master_Read@temp:	
  1940                           ; 1 bytes @ 0x2
  1941                           
  1942  0022                     USART_to_Protocol@i:	
  1943                           ; 2 bytes @ 0x2
  1944                           
  1945  0022                     ___lwdiv@dividend:	
  1946                           ; 2 bytes @ 0x2
  1947                           
  1948  0022                     ___lwmod@dividend:	
  1949                           ; 2 bytes @ 0x2
  1950                           
  1951  0022                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1952                           ; 2 bytes @ 0x2
  1953                           
  1954  0022                     EEPROM_24C1025_Write_Str@mem_add:	
  1955                           ; 4 bytes @ 0x2
  1956                           
  1957                           
  1958                           ; 4 bytes @ 0x2
  1959  0022                     	ds	1
  1960  0023                     ??_USART_put_string:	
  1961  0023                     ?_EEPROM_Read_String:	
  1962                           ; 1 bytes @ 0x3
  1963                           
  1964  0023                     ??_USART_put_buffer:	
  1965                           ; 1 bytes @ 0x3
  1966                           
  1967  0023                     ??_strlen:	
  1968                           ; 1 bytes @ 0x3
  1969                           
  1970  0023                     ??__Umul8_16:	
  1971                           ; 1 bytes @ 0x3
  1972                           
  1973  0023                     ?_EEPROM_Read_Integer:	
  1974                           ; 1 bytes @ 0x3
  1975                           
  1976  0023                     EEPROM_Write_Byte@addr:	
  1977                           ; 2 bytes @ 0x3
  1978                           
  1979  0023                     EEPROM_Read_String@dado:	
  1980                           ; 1 bytes @ 0x3
  1981                           
  1982  0023                     strcat@cp:	
  1983                           ; 1 bytes @ 0x3
  1984                           
  1985  0023                     strcpy@cp:	
  1986                           ; 1 bytes @ 0x3
  1987                           
  1988  0023                     strlen@cp:	
  1989                           ; 1 bytes @ 0x3
  1990                           
  1991  0023                     USART_put_string@ptr:	
  1992                           ; 1 bytes @ 0x3
  1993                           
  1994  0023                     __Umul8_16@product:	
  1995                           ; 2 bytes @ 0x3
  1996                           
  1997                           
  1998                           ; 2 bytes @ 0x3
  1999  0023                     	ds	1
  2000  0024                     ??_my_delay_ms_WDT:	
  2001  0024                     ??_USART_init:	
  2002                           ; 1 bytes @ 0x4
  2003                           
  2004  0024                     ??_EEPROM_Read_String:	
  2005                           ; 1 bytes @ 0x4
  2006                           
  2007  0024                     ?_EEPROM_24C1025_Read_Buffer:	
  2008                           ; 1 bytes @ 0x4
  2009                           
  2010  0024                     ?_EEPROM_24C1025_Read_Str:	
  2011                           ; 1 bytes @ 0x4
  2012                           
  2013  0024                     ??_my_delay_ms:	
  2014                           ; 1 bytes @ 0x4
  2015                           
  2016  0024                     ??___lwdiv:	
  2017                           ; 1 bytes @ 0x4
  2018                           
  2019  0024                     ??___lwmod:	
  2020                           ; 1 bytes @ 0x4
  2021                           
  2022  0024                     EEPROM_Write_Byte@last_GIE:	
  2023                           ; 1 bytes @ 0x4
  2024                           
  2025  0024                     EEPROM_Read_String@addr:	
  2026                           ; 1 bytes @ 0x4
  2027                           
  2028  0024                     USART_init@i:	
  2029                           ; 1 bytes @ 0x4
  2030                           
  2031  0024                     USART_to_Protocol@usart_protocol:	
  2032                           ; 1 bytes @ 0x4
  2033                           
  2034  0024                     ___lwdiv@counter:	
  2035                           ; 1 bytes @ 0x4
  2036                           
  2037  0024                     ___lwmod@counter:	
  2038                           ; 1 bytes @ 0x4
  2039                           
  2040  0024                     strcat@to:	
  2041                           ; 1 bytes @ 0x4
  2042                           
  2043  0024                     strlen@s:	
  2044                           ; 1 bytes @ 0x4
  2045                           
  2046  0024                     PROCULUS_Delay@i:	
  2047                           ; 1 bytes @ 0x4
  2048                           
  2049  0024                     EEPROM_24C1025_Read_Buffer@mem_add:	
  2050                           ; 2 bytes @ 0x4
  2051                           
  2052  0024                     EEPROM_24C1025_Read_Str@mem_add:	
  2053                           ; 4 bytes @ 0x4
  2054                           
  2055  0024                     ___lldiv@dividend:	
  2056                           ; 4 bytes @ 0x4
  2057                           
  2058  0024                     ___fleq@ff2:	
  2059                           ; 4 bytes @ 0x4
  2060                           
  2061                           
  2062                           ; 4 bytes @ 0x4
  2063  0024                     	ds	1
  2064  0025                     ?_EEPROM_Write_Integer:	
  2065  0025                     ??_Send_Reply_OK:	
  2066                           ; 1 bytes @ 0x5
  2067                           
  2068  0025                     ?_EEPROM_Write_String:	
  2069                           ; 1 bytes @ 0x5
  2070                           
  2071  0025                     EEPROM_Write_String@dado:	
  2072                           ; 1 bytes @ 0x5
  2073                           
  2074  0025                     EEPROM_Read_String@c:	
  2075                           ; 1 bytes @ 0x5
  2076                           
  2077  0025                     USART_put_buffer@loop:	
  2078                           ; 1 bytes @ 0x5
  2079                           
  2080  0025                     EEPROM_Write_Integer@dado:	
  2081                           ; 1 bytes @ 0x5
  2082                           
  2083  0025                     ___lwdiv@quotient:	
  2084                           ; 2 bytes @ 0x5
  2085                           
  2086  0025                     __Umul8_16@word_mpld:	
  2087                           ; 2 bytes @ 0x5
  2088                           
  2089                           
  2090                           ; 2 bytes @ 0x5
  2091  0025                     	ds	1
  2092  0026                     ??_EEPROM_Read_Integer:	
  2093  0026                     ??_EEPROM_Write_String:	
  2094                           ; 1 bytes @ 0x6
  2095                           
  2096  0026                     EEPROM_Read_Integer@addr:	
  2097                           ; 1 bytes @ 0x6
  2098                           
  2099  0026                     EEPROM_Write_String@addr:	
  2100                           ; 1 bytes @ 0x6
  2101                           
  2102  0026                     USART_put_buffer@ptr:	
  2103                           ; 1 bytes @ 0x6
  2104                           
  2105  0026                     EEPROM_24C1025_Write_Buffer@sizedata:	
  2106                           ; 1 bytes @ 0x6
  2107                           
  2108  0026                     EEPROM_24C1025_Write_Str@data:	
  2109                           ; 1 bytes @ 0x6
  2110                           
  2111  0026                     my_delay_ms@i:	
  2112                           ; 1 bytes @ 0x6
  2113                           
  2114  0026                     my_delay_ms_WDT@i:	
  2115                           ; 4 bytes @ 0x6
  2116                           
  2117                           
  2118                           ; 4 bytes @ 0x6
  2119  0026                     	ds	1
  2120  0027                     ??_EEPROM_Write_Integer:	
  2121  0027                     ??_EEPROM_24C1025_Write_Str:	
  2122                           ; 1 bytes @ 0x7
  2123                           
  2124  0027                     ?_utoa:	
  2125                           ; 1 bytes @ 0x7
  2126                           
  2127  0027                     EEPROM_Read_Integer@ptr:	
  2128                           ; 1 bytes @ 0x7
  2129                           
  2130  0027                     USART_put_buffer@vetor:	
  2131                           ; 1 bytes @ 0x7
  2132                           
  2133  0027                     __Umul8_16@multiplier:	
  2134                           ; 1 bytes @ 0x7
  2135                           
  2136  0027                     EEPROM_24C1025_Write_Buffer@data:	
  2137                           ; 1 bytes @ 0x7
  2138                           
  2139  0027                     utoa@val:	
  2140                           ; 2 bytes @ 0x7
  2141                           
  2142                           
  2143                           ; 2 bytes @ 0x7
  2144  0027                     	ds	1
  2145  0028                     ??___lldiv:	
  2146  0028                     ??___fleq:	
  2147                           ; 1 bytes @ 0x8
  2148                           
  2149  0028                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2150                           ; 1 bytes @ 0x8
  2151                           
  2152  0028                     EEPROM_24C1025_Read_Str@texto:	
  2153                           ; 1 bytes @ 0x8
  2154                           
  2155  0028                     EEPROM_Read_Integer@result:	
  2156                           ; 1 bytes @ 0x8
  2157                           
  2158  0028                     ___lldiv@quotient:	
  2159                           ; 2 bytes @ 0x8
  2160                           
  2161                           
  2162                           ; 4 bytes @ 0x8
  2163  0028                     	ds	1
  2164  0029                     ??_EEPROM_24C1025_Write_Buffer:	
  2165  0029                     ??_EEPROM_24C1025_Read_Str:	
  2166                           ; 1 bytes @ 0x9
  2167                           
  2168  0029                     EEPROM_Write_Integer@addr:	
  2169                           ; 1 bytes @ 0x9
  2170                           
  2171  0029                     EEPROM_24C1025_Write_Str@chip_add:	
  2172                           ; 1 bytes @ 0x9
  2173                           
  2174  0029                     EEPROM_24C1025_Read_Buffer@data:	
  2175                           ; 1 bytes @ 0x9
  2176                           
  2177  0029                     utoa@base:	
  2178                           ; 2 bytes @ 0x9
  2179                           
  2180                           
  2181                           ; 2 bytes @ 0x9
  2182  0029                     	ds	1
  2183  002A                     EEPROM_Write_Integer@ptr:	
  2184  002A                     EEPROM_Read_Integer@i:	
  2185                           ; 1 bytes @ 0xA
  2186                           
  2187  002A                     EEPROM_24C1025_Write_Str@range:	
  2188                           ; 1 bytes @ 0xA
  2189                           
  2190                           
  2191                           ; 1 bytes @ 0xA
  2192  002A                     	ds	1
  2193  002B                     ??_EEPROM_24C1025_Read_Buffer:	
  2194  002B                     ??_utoa:	
  2195                           ; 1 bytes @ 0xB
  2196                           
  2197  002B                     ?___xxtofl:	
  2198                           ; 1 bytes @ 0xB
  2199                           
  2200  002B                     EEPROM_Write_Integer@i:	
  2201                           ; 4 bytes @ 0xB
  2202                           
  2203  002B                     EEPROM_24C1025_Write_Buffer@count:	
  2204                           ; 1 bytes @ 0xB
  2205                           
  2206  002B                     EEPROM_24C1025_Write_Str@ctrl:	
  2207                           ; 1 bytes @ 0xB
  2208                           
  2209  002B                     EEPROM_24C1025_Read_Str@cnt:	
  2210                           ; 1 bytes @ 0xB
  2211                           
  2212  002B                     utoa@v:	
  2213                           ; 1 bytes @ 0xB
  2214                           
  2215  002B                     ___xxtofl@val:	
  2216                           ; 2 bytes @ 0xB
  2217                           
  2218                           
  2219                           ; 4 bytes @ 0xB
  2220  002B                     	ds	1
  2221  002C                     ?_frexp:	
  2222  002C                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2223                           ; 4 bytes @ 0xC
  2224                           
  2225  002C                     EEPROM_24C1025_Read_Str@chip_add:	
  2226                           ; 1 bytes @ 0xC
  2227                           
  2228  002C                     ___lldiv@counter:	
  2229                           ; 1 bytes @ 0xC
  2230                           
  2231  002C                     frexp@value:	
  2232                           ; 1 bytes @ 0xC
  2233                           
  2234                           
  2235                           ; 4 bytes @ 0xC
  2236  002C                     	ds	1
  2237  002D                     ?_I2C_Master_Init:	
  2238  002D                     EEPROM_24C1025_Write_Buffer@range:	
  2239                           ; 1 bytes @ 0xD
  2240                           
  2241  002D                     EEPROM_24C1025_Read_Buffer@cnt_1518:	
  2242                           ; 1 bytes @ 0xD
  2243                           
  2244  002D                     EEPROM_24C1025_Read_Str@range:	
  2245                           ; 1 bytes @ 0xD
  2246                           
  2247  002D                     utoa@c:	
  2248                           ; 1 bytes @ 0xD
  2249                           
  2250  002D                     I2C_Master_Init@c:	
  2251                           ; 1 bytes @ 0xD
  2252                           
  2253                           
  2254                           ; 4 bytes @ 0xD
  2255  002D                     	ds	1
  2256  002E                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2257  002E                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2258                           ; 1 bytes @ 0xE
  2259                           
  2260  002E                     EEPROM_24C1025_Read_Str@ctrl:	
  2261                           ; 1 bytes @ 0xE
  2262                           
  2263  002E                     utoa@buf:	
  2264                           ; 1 bytes @ 0xE
  2265                           
  2266                           
  2267                           ; 1 bytes @ 0xE
  2268  002E                     	ds	1
  2269  002F                     ?_EEPROM_24C1025_Write_Byte:	
  2270  002F                     ?_itoa:	
  2271                           ; 1 bytes @ 0xF
  2272                           
  2273  002F                     ??___xxtofl:	
  2274                           ; 1 bytes @ 0xF
  2275                           
  2276  002F                     EEPROM_24C1025_Read_Buffer@range:	
  2277                           ; 1 bytes @ 0xF
  2278                           
  2279  002F                     itoa@val:	
  2280                           ; 1 bytes @ 0xF
  2281                           
  2282  002F                     EEPROM_24C1025_Write_Byte@mem_add:	
  2283                           ; 2 bytes @ 0xF
  2284                           
  2285                           
  2286                           ; 4 bytes @ 0xF
  2287  002F                     	ds	1
  2288  0030                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2289  0030                     frexp@eptr:	
  2290                           ; 1 bytes @ 0x10
  2291                           
  2292                           
  2293                           ; 1 bytes @ 0x10
  2294  0030                     	ds	1
  2295  0031                     ?_EEPROM_24C1025_Read_Byte:	
  2296  0031                     ??_frexp:	
  2297                           ; 1 bytes @ 0x11
  2298                           
  2299  0031                     ??_I2C_Master_Init:	
  2300                           ; 1 bytes @ 0x11
  2301                           
  2302  0031                     ?_EEPROM_24C1025_Read_Int:	
  2303                           ; 1 bytes @ 0x11
  2304                           
  2305  0031                     itoa@base:	
  2306                           ; 2 bytes @ 0x11
  2307                           
  2308  0031                     EEPROM_24C1025_Read_Byte@mem_add:	
  2309                           ; 2 bytes @ 0x11
  2310                           
  2311  0031                     EEPROM_24C1025_Read_Int@mem_add:	
  2312                           ; 4 bytes @ 0x11
  2313                           
  2314                           
  2315                           ; 4 bytes @ 0x11
  2316  0031                     	ds	2
  2317  0033                     ??_itoa:	
  2318  0033                     EEPROM_24C1025_Write_Byte@data:	
  2319                           ; 1 bytes @ 0x13
  2320                           
  2321  0033                     ___xxtofl@sign:	
  2322                           ; 1 bytes @ 0x13
  2323                           
  2324                           
  2325                           ; 1 bytes @ 0x13
  2326  0033                     	ds	1
  2327  0034                     ??_EEPROM_24C1025_Write_Byte:	
  2328  0034                     EEPROM_24C1025_Write_Byte@chip_add:	
  2329                           ; 1 bytes @ 0x14
  2330                           
  2331  0034                     ___xxtofl@exp:	
  2332                           ; 1 bytes @ 0x14
  2333                           
  2334  0034                     itoa@buf:	
  2335                           ; 1 bytes @ 0x14
  2336                           
  2337                           
  2338                           ; 1 bytes @ 0x14
  2339  0034                     	ds	1
  2340  0035                     ??_EEPROM_24C1025_Read_Byte:	
  2341  0035                     ??_EEPROM_24C1025_Read_Int:	
  2342                           ; 1 bytes @ 0x15
  2343                           
  2344  0035                     EEPROM_24C1025_Read_Byte@chip_add:	
  2345                           ; 1 bytes @ 0x15
  2346                           
  2347  0035                     EEPROM_24C1025_Read_Int@chip_add:	
  2348                           ; 1 bytes @ 0x15
  2349                           
  2350  0035                     ___xxtofl@arg:	
  2351                           ; 1 bytes @ 0x15
  2352                           
  2353                           
  2354                           ; 4 bytes @ 0x15
  2355  0035                     	ds	1
  2356  0036                     EEPROM_24C1025_Read_Byte@data:	
  2357  0036                     EEPROM_24C1025_Read_Int@data:	
  2358                           ; 1 bytes @ 0x16
  2359                           
  2360                           
  2361                           ; 2 bytes @ 0x16
  2362  0036                     	ds	3
  2363  0039                     ?___fladd:	
  2364  0039                     ___fladd@b:	
  2365                           ; 4 bytes @ 0x19
  2366                           
  2367                           
  2368                           ; 4 bytes @ 0x19
  2369  0039                     	ds	4
  2370  003D                     ___fladd@a:	
  2371                           
  2372                           ; 4 bytes @ 0x1D
  2373  003D                     	ds	4
  2374  0041                     ??___fladd:	
  2375                           
  2376                           ; 1 bytes @ 0x21
  2377  0041                     	ds	8
  2378  0049                     ___fladd@signs:	
  2379                           
  2380                           ; 1 bytes @ 0x29
  2381  0049                     	ds	1
  2382  004A                     ___fladd@aexp:	
  2383                           
  2384                           ; 1 bytes @ 0x2A
  2385  004A                     	ds	1
  2386  004B                     ___fladd@bexp:	
  2387                           
  2388                           ; 1 bytes @ 0x2B
  2389  004B                     	ds	1
  2390  004C                     ___fladd@grs:	
  2391                           
  2392                           ; 1 bytes @ 0x2C
  2393  004C                     	ds	1
  2394  004D                     ?___flsub:	
  2395  004D                     ___flsub@a:	
  2396                           ; 4 bytes @ 0x2D
  2397                           
  2398                           
  2399                           ; 4 bytes @ 0x2D
  2400  004D                     	ds	4
  2401  0051                     ___flsub@b:	
  2402                           
  2403                           ; 4 bytes @ 0x31
  2404  0051                     	ds	4
  2405  0055                     ?___flge:	
  2406  0055                     ??___flsub:	
  2407                           ; 1 bit 
  2408                           
  2409  0055                     ?___flmul:	
  2410                           ; 1 bytes @ 0x35
  2411                           
  2412  0055                     ___flge@ff1:	
  2413                           ; 4 bytes @ 0x35
  2414                           
  2415  0055                     ___flmul@b:	
  2416                           ; 4 bytes @ 0x35
  2417                           
  2418                           
  2419                           ; 4 bytes @ 0x35
  2420  0055                     	ds	4
  2421  0059                     ___flge@ff2:	
  2422  0059                     ___flmul@a:	
  2423                           ; 4 bytes @ 0x39
  2424                           
  2425                           
  2426                           ; 4 bytes @ 0x39
  2427  0059                     	ds	4
  2428  005D                     ??___flge:	
  2429  005D                     ??___flmul:	
  2430                           ; 1 bytes @ 0x3D
  2431                           
  2432                           
  2433                           ; 1 bytes @ 0x3D
  2434  005D                     	ds	4
  2435  0061                     ??_Auto_Relay0:	
  2436  0061                     ??_Auto_Relay1:	
  2437                           ; 1 bytes @ 0x41
  2438                           
  2439  0061                     ___flmul@sign:	
  2440                           ; 1 bytes @ 0x41
  2441                           
  2442                           
  2443                           ; 1 bytes @ 0x41
  2444  0061                     	ds	1
  2445  0062                     ___flmul@aexp:	
  2446                           
  2447                           ; 1 bytes @ 0x42
  2448  0062                     	ds	1
  2449  0063                     ___flmul@bexp:	
  2450                           
  2451                           ; 1 bytes @ 0x43
  2452  0063                     	ds	1
  2453  0064                     ___flmul@grs:	
  2454                           
  2455                           ; 4 bytes @ 0x44
  2456  0064                     	ds	4
  2457  0068                     ___flmul@prod:	
  2458                           
  2459                           ; 4 bytes @ 0x48
  2460  0068                     	ds	4
  2461  006C                     ___flmul@temp:	
  2462                           
  2463                           ; 2 bytes @ 0x4C
  2464  006C                     	ds	2
  2465  006E                     ??_log:	
  2466  006E                     ___fltol@sign1:	
  2467                           ; 1 bytes @ 0x4E
  2468                           
  2469  006E                     log@exponent:	
  2470                           ; 1 bytes @ 0x4E
  2471                           
  2472                           
  2473                           ; 2 bytes @ 0x4E
  2474  006E                     	ds	1
  2475  006F                     ___fltol@exp1:	
  2476                           
  2477                           ; 1 bytes @ 0x4F
  2478  006F                     	ds	1
  2479  0070                     ??_USART_put_int:	
  2480  0070                     ??_EEPROM_24C1025_Write_Int:	
  2481                           ; 1 bytes @ 0x50
  2482                           
  2483  0070                     ??_EEPROM_24C1025_Fill_All:	
  2484                           ; 1 bytes @ 0x50
  2485                           
  2486  0070                     ??_PROCULUS_Show_Screen:	
  2487                           ; 1 bytes @ 0x50
  2488                           
  2489  0070                     ??_PROCULUS_Buzzer:	
  2490                           ; 1 bytes @ 0x50
  2491                           
  2492  0070                     ??_PROCULUS_VP_Write_String:	
  2493                           ; 1 bytes @ 0x50
  2494                           
  2495  0070                     ??_ADC_Read_NTC:	
  2496                           ; 1 bytes @ 0x50
  2497                           
  2498                           
  2499                           	psect	maintext
  2500  0636                     __pmaintext:	
  2501                           ; 1 bytes @ 0x50
  2502 ;;
  2503 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2504 ;;
  2505 ;; *************** function _main *****************
  2506 ;; Defined at:
  2507 ;;		line 145 in file "SlaveLiofilizadorVer1.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  reset           2   76[BANK1 ] unsigned int 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : B00/0
  2518 ;;		On exit  : 300/300
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2521 ;;      Params:         0       0       0       0       0
  2522 ;;      Locals:         0       0       2       0       0
  2523 ;;      Temps:          0       0       0       3       0
  2524 ;;      Totals:         0       0       2       3       0
  2525 ;;Total ram usage:        5 bytes
  2526 ;; Hardware stack levels required when called:    7
  2527 ;; This function calls:
  2528 ;;		_ADC_init
  2529 ;;		_Auto_Relay0
  2530 ;;		_Auto_Relay1
  2531 ;;		_Decodify_Command
  2532 ;;		_EEPROM_Read_Integer
  2533 ;;		_EEPROM_Write_Integer
  2534 ;;		_I2C_Master_Init
  2535 ;;		_Load_Work
  2536 ;;		_USART_init
  2537 ;;		_mediatemperaturaNTC
  2538 ;;		_my_delay_ms_WDT
  2539 ;; This function is called by:
  2540 ;;		Startup code after reset
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           
  2545                           ;psect for function _main
  2546  0636                     _main:	
  2547  0636                     l7324:	
  2548                           ;incstack = 0
  2549                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2550                           
  2551                           
  2552                           ;SlaveLiofilizadorVer1.c: 146:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2553  0636  3002               	movlw	2
  2554  0637  1683               	bsf	3,5	;RP0=1, select bank3
  2555  0638  1703               	bsf	3,6	;RP1=1, select bank3
  2556  0639  00DE               	movwf	(??_main^(0+384)+2)
  2557  063A  3004               	movlw	4
  2558  063B  00DD               	movwf	(??_main^(0+384)+1)
  2559  063C  30B9               	movlw	185
  2560  063D  00DC               	movwf	??_main^(0+384)
  2561  063E                     u6537:	
  2562  063E  0BDC               	decfsz	??_main^(0+384),f
  2563  063F  2E3E               	goto	u6537
  2564  0640  0BDD               	decfsz	(??_main^(0+384)+1),f
  2565  0641  2E3E               	goto	u6537
  2566  0642  0BDE               	decfsz	(??_main^(0+384)+2),f
  2567  0643  2E3E               	goto	u6537
  2568  0644  2E45               	nop2
  2569                           
  2570                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF0=1;
  2571  0645  1683               	bsf	3,5	;RP0=1, select bank1
  2572  0646  1303               	bcf	3,6	;RP1=0, select bank1
  2573  0647  160F               	bsf	15,4	;volatile
  2574                           
  2575                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF1=1;
  2576  0648  168F               	bsf	15,5	;volatile
  2577                           
  2578                           ;SlaveLiofilizadorVer1.c: 149:      OSCCONbits.IRCF2=1;
  2579  0649  170F               	bsf	15,6	;volatile
  2580                           
  2581                           ;SlaveLiofilizadorVer1.c: 151:      PORTA=0;
  2582  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2583  064B  0185               	clrf	5	;volatile
  2584                           
  2585                           ;SlaveLiofilizadorVer1.c: 152:      PORTB=0;
  2586  064C  0186               	clrf	6	;volatile
  2587                           
  2588                           ;SlaveLiofilizadorVer1.c: 153:      PORTC=0;
  2589  064D  0187               	clrf	7	;volatile
  2590                           
  2591                           ;SlaveLiofilizadorVer1.c: 154:      PORTE=0;
  2592  064E  0189               	clrf	9	;volatile
  2593                           
  2594                           ;SlaveLiofilizadorVer1.c: 155:      TRISA=0b11101111;
  2595  064F  30EF               	movlw	239
  2596  0650  1683               	bsf	3,5	;RP0=1, select bank1
  2597  0651  0085               	movwf	5	;volatile
  2598                           
  2599                           ;SlaveLiofilizadorVer1.c: 156:      TRISB=0b00001111;
  2600  0652  300F               	movlw	15
  2601  0653  0086               	movwf	6	;volatile
  2602                           
  2603                           ;SlaveLiofilizadorVer1.c: 157:      TRISC=0xF0;
  2604  0654  30F0               	movlw	240
  2605  0655  0087               	movwf	7	;volatile
  2606                           
  2607                           ;SlaveLiofilizadorVer1.c: 158:      TRISE=0xFF;
  2608  0656  30FF               	movlw	255
  2609  0657  0089               	movwf	9	;volatile
  2610                           
  2611                           ;SlaveLiofilizadorVer1.c: 160:      ANSEL=0x00000011;
  2612  0658  3011               	movlw	17
  2613  0659  1703               	bsf	3,6	;RP1=1, select bank3
  2614  065A  0088               	movwf	8	;volatile
  2615                           
  2616                           ;SlaveLiofilizadorVer1.c: 161:      ANSELH=0x00000000;
  2617  065B  0189               	clrf	9	;volatile
  2618                           
  2619                           ;SlaveLiofilizadorVer1.c: 163:      OPTION_REGbits.nRBPU=0;
  2620  065C  1303               	bcf	3,6	;RP1=0, select bank1
  2621  065D  1381               	bcf	1,7	;volatile
  2622                           
  2623                           ;SlaveLiofilizadorVer1.c: 164:      WPUB=0b00001111;
  2624  065E  300F               	movlw	15
  2625  065F  0095               	movwf	21	;volatile
  2626                           
  2627                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB7 =1;
  2628  0660  1283               	bcf	3,5	;RP0=0, select bank0
  2629  0661  1786               	bsf	6,7	;volatile
  2630                           
  2631                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB6 =1;
  2632  0662  1706               	bsf	6,6	;volatile
  2633                           
  2634                           ;SlaveLiofilizadorVer1.c: 169:      PORTBbits.RB5=1;
  2635  0663  1686               	bsf	6,5	;volatile
  2636                           
  2637                           ;SlaveLiofilizadorVer1.c: 170:      my_delay_ms_WDT(1000);
  2638  0664  3003               	movlw	3
  2639  0665  01A3               	clrf	my_delay_ms_WDT@time+3
  2640  0666  01A2               	clrf	my_delay_ms_WDT@time+2
  2641  0667  00A1               	movwf	my_delay_ms_WDT@time+1
  2642  0668  30E8               	movlw	232
  2643  0669  00A0               	movwf	my_delay_ms_WDT@time
  2644  066A  160A  158A  24B4  120A  118A  	fcall	_my_delay_ms_WDT
  2645                           
  2646                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.T0CS=0;
  2647  066F  1683               	bsf	3,5	;RP0=1, select bank1
  2648  0670  1281               	bcf	1,5	;volatile
  2649                           
  2650                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PSA =1;
  2651  0671  1581               	bsf	1,3	;volatile
  2652                           
  2653                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS0 =1;
  2654  0672  1401               	bsf	1,0	;volatile
  2655                           
  2656                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS1 =1;
  2657  0673  1481               	bsf	1,1	;volatile
  2658                           
  2659                           ;SlaveLiofilizadorVer1.c: 176:      OPTION_REGbits.PS2 =1;
  2660  0674  1501               	bsf	1,2	;volatile
  2661                           
  2662                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.T0IE =0;
  2663  0675  128B               	bcf	11,5	;volatile
  2664                           
  2665                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.INTE =0;
  2666  0676  120B               	bcf	11,4	;volatile
  2667                           
  2668                           ;SlaveLiofilizadorVer1.c: 179:      INTCONbits.GIE =1;
  2669  0677  178B               	bsf	11,7	;volatile
  2670                           
  2671                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.PEIE = 1;
  2672  0678  170B               	bsf	11,6	;volatile
  2673                           
  2674                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS0=1;
  2675  0679  1283               	bcf	3,5	;RP0=0, select bank0
  2676  067A  1610               	bsf	16,4	;volatile
  2677                           
  2678                           ;SlaveLiofilizadorVer1.c: 184:      T1CKPS1=1;
  2679  067B  1690               	bsf	16,5	;volatile
  2680                           
  2681                           ;SlaveLiofilizadorVer1.c: 185:      TMR1CS=0;
  2682  067C  1090               	bcf	16,1	;volatile
  2683                           
  2684                           ;SlaveLiofilizadorVer1.c: 186:      TMR1IE=1;
  2685  067D  1683               	bsf	3,5	;RP0=1, select bank1
  2686  067E  140C               	bsf	12,0	;volatile
  2687                           
  2688                           ;SlaveLiofilizadorVer1.c: 187:      T1CON=1;
  2689  067F  3001               	movlw	1
  2690  0680  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0681  0090               	movwf	16	;volatile
  2692  0682  0064               	clrwdt	;# 
  2693                           
  2694                           ;SlaveLiofilizadorVer1.c: 194:      ADC_init();
  2695  0683  160A  118A  2005  120A  118A  	fcall	_ADC_init
  2696                           
  2697                           ;SlaveLiofilizadorVer1.c: 195:      I2C_Master_Init(100000);
  2698  0688  3001               	movlw	1
  2699  0689  01B0               	clrf	I2C_Master_Init@c+3
  2700  068A  00AF               	movwf	I2C_Master_Init@c+2
  2701  068B  3086               	movlw	134
  2702  068C  00AE               	movwf	I2C_Master_Init@c+1
  2703  068D  30A0               	movlw	160
  2704  068E  00AD               	movwf	I2C_Master_Init@c
  2705  068F  160A  158A  2633  120A  118A  	fcall	_I2C_Master_Init
  2706                           
  2707                           ;SlaveLiofilizadorVer1.c: 196:      USART_init(115200);
  2708  0694  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0695  3001               	movlw	1
  2710  0696  01A3               	clrf	USART_init@baudrate+3
  2711  0697  00A2               	movwf	USART_init@baudrate+2
  2712  0698  30C2               	movlw	194
  2713  0699  00A1               	movwf	USART_init@baudrate+1
  2714  069A  01A0               	clrf	USART_init@baudrate
  2715  069B  160A  158A  2515  120A  118A  	fcall	_USART_init
  2716                           
  2717                           ;SlaveLiofilizadorVer1.c: 202:      {;SlaveLiofilizadorVer1.c: 203:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 204:      reset=EEPROM_Read_Integer(0x10);
  2718  06A0  3010               	movlw	16
  2719  06A1  120A  118A  2602  120A  118A  	fcall	_EEPROM_Read_Integer
  2720  06A6  0824               	movf	?_EEPROM_Read_Integer+1,w
  2721  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  2722  06A8  00ED               	movwf	(main@reset+1)^(0+128)
  2723  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  2724  06AA  0823               	movf	?_EEPROM_Read_Integer,w
  2725  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  2726  06AC  00EC               	movwf	main@reset^(0+128)
  2727                           
  2728                           ;SlaveLiofilizadorVer1.c: 205:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2729  06AD  0F6C               	incfsz	main@reset^(0+128),w
  2730  06AE  2EBB               	goto	l7394
  2731  06AF  0A6D               	incf	(main@reset+1)^(0+128),w
  2732  06B0  1D03               	btfss	3,2
  2733  06B1  2EBB               	goto	l7394
  2734  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  2735  06B3  3010               	movlw	16
  2736  06B4  01A5               	clrf	EEPROM_Write_Integer@dado
  2737  06B5  01A6               	clrf	EEPROM_Write_Integer@dado+1
  2738  06B6  160A  158A  26A8  120A  118A  	fcall	_EEPROM_Write_Integer
  2739  06BB                     l7394:	
  2740                           
  2741                           ;SlaveLiofilizadorVer1.c: 206:      reset++;
  2742  06BB  1683               	bsf	3,5	;RP0=1, select bank1
  2743  06BC  1303               	bcf	3,6	;RP1=0, select bank1
  2744  06BD  0AEC               	incf	main@reset^(0+128),f
  2745  06BE  1903               	skipnz
  2746  06BF  0AED               	incf	(main@reset+1)^(0+128),f
  2747                           
  2748                           ;SlaveLiofilizadorVer1.c: 207:      EEPROM_Write_Integer(0x10,reset);
  2749  06C0  086D               	movf	(main@reset+1)^(0+128),w
  2750  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  2751  06C2  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2752  06C3  1683               	bsf	3,5	;RP0=1, select bank1
  2753  06C4  086C               	movf	main@reset^(0+128),w
  2754  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  2755  06C6  00A5               	movwf	EEPROM_Write_Integer@dado
  2756  06C7  3010               	movlw	16
  2757  06C8  160A  158A  26A8  120A  118A  	fcall	_EEPROM_Write_Integer
  2758                           
  2759                           ;SlaveLiofilizadorVer1.c: 208:      };SlaveLiofilizadorVer1.c: 212:      Delay_Led_Tmr0 
      +                          = 0;
  2760  06CD  1683               	bsf	3,5	;RP0=1, select bank3
  2761  06CE  1703               	bsf	3,6	;RP1=1, select bank3
  2762  06CF  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  2763  06D0  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  2764                           
  2765                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Usart = 0;
  2766  06D1  01AC               	clrf	_Delay_Led_Usart^(0+384)	;volatile
  2767  06D2  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2768                           
  2769                           ;SlaveLiofilizadorVer1.c: 214:      Delay_Led_Memory = 0;
  2770  06D3  01B0               	clrf	_Delay_Led_Memory^(0+384)	;volatile
  2771  06D4  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  2772                           
  2773                           ;SlaveLiofilizadorVer1.c: 216:      segundo=0;
  2774  06D5  01F5               	clrf	_segundo	;volatile
  2775                           
  2776                           ;SlaveLiofilizadorVer1.c: 217:      hora=0;
  2777  06D6  01F4               	clrf	_hora	;volatile
  2778                           
  2779                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC0=0;
  2780  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  2781  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  2782  06D9  1007               	bcf	7,0	;volatile
  2783                           
  2784                           ;SlaveLiofilizadorVer1.c: 219:      PORTCbits.RC1=0;
  2785  06DA  1087               	bcf	7,1	;volatile
  2786                           
  2787                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA2=0;
  2788  06DB  1105               	bcf	5,2	;volatile
  2789                           
  2790                           ;SlaveLiofilizadorVer1.c: 221:      PORTAbits.RA3=0;
  2791  06DC  1185               	bcf	5,3	;volatile
  2792                           
  2793                           ;SlaveLiofilizadorVer1.c: 224:      Board_Number=(((0x0F)&(~PORTB)));
  2794  06DD  0906               	comf	6,w	;volatile
  2795  06DE  1683               	bsf	3,5	;RP0=1, select bank3
  2796  06DF  1703               	bsf	3,6	;RP1=1, select bank3
  2797  06E0  00B4               	movwf	_Board_Number^(0+384)
  2798  06E1  300F               	movlw	15
  2799  06E2  05B4               	andwf	_Board_Number^(0+384),f
  2800                           
  2801                           ;SlaveLiofilizadorVer1.c: 225:      canal=1;
  2802  06E3  01B5               	clrf	_canal^(0+384)
  2803  06E4  0AB5               	incf	_canal^(0+384),f
  2804                           
  2805                           ;SlaveLiofilizadorVer1.c: 239:      Load_Work();
  2806  06E5  120A  118A  2509  120A  118A  	fcall	_Load_Work
  2807                           
  2808                           ;SlaveLiofilizadorVer1.c: 240:      generic_status.flag_global_hot=0;
  2809  06EA  1376               	bcf	_generic_status,6
  2810  06EB                     l7424:	
  2811                           
  2812                           ;SlaveLiofilizadorVer1.c: 247:           {;SlaveLiofilizadorVer1.c: 249:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2813  06EB  17F6               	bsf	_generic_status,7
  2814                           
  2815                           ;SlaveLiofilizadorVer1.c: 253:          if(++canal==2) canal=0;
  2816  06EC  1683               	bsf	3,5	;RP0=1, select bank3
  2817  06ED  1703               	bsf	3,6	;RP1=1, select bank3
  2818  06EE  3002               	movlw	2
  2819  06EF  0AB5               	incf	_canal^(0+384),f
  2820  06F0  0635               	xorwf	_canal^(0+384),w
  2821  06F1  1903               	btfsc	3,2
  2822  06F2  01B5               	clrf	_canal^(0+384)
  2823                           
  2824                           ;SlaveLiofilizadorVer1.c: 254:          mediatemperaturaNTC(canal);
  2825  06F3  0835               	movf	_canal^(0+384),w
  2826  06F4  160A  118A  2010  120A  118A  	fcall	_mediatemperaturaNTC
  2827                           
  2828                           ;SlaveLiofilizadorVer1.c: 257:          if(generic_status.flag_global_hot)
  2829  06F9  1F76               	btfss	_generic_status,6
  2830  06FA  2F06               	goto	l287
  2831                           
  2832                           ;SlaveLiofilizadorVer1.c: 258:             {;SlaveLiofilizadorVer1.c: 259:              
      +                          Auto_Relay0();
  2833  06FB  120A  118A  2351  120A  118A  	fcall	_Auto_Relay0
  2834                           
  2835                           ;SlaveLiofilizadorVer1.c: 260:              Auto_Relay1();
  2836  0700  120A  118A  23AB  120A  118A  	fcall	_Auto_Relay1
  2837                           
  2838                           ;SlaveLiofilizadorVer1.c: 261:             }
  2839  0705  2F0A               	goto	l288
  2840  0706                     l287:	
  2841                           ;SlaveLiofilizadorVer1.c: 262:          else
  2842                           
  2843                           
  2844                           ;SlaveLiofilizadorVer1.c: 263:             {;SlaveLiofilizadorVer1.c: 264:             P
      +                          ORTCbits.RC0=0;
  2845  0706  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0707  1303               	bcf	3,6	;RP1=0, select bank0
  2847  0708  1007               	bcf	7,0	;volatile
  2848                           
  2849                           ;SlaveLiofilizadorVer1.c: 265:             PORTCbits.RC1=0;
  2850  0709  1087               	bcf	7,1	;volatile
  2851  070A                     l288:	
  2852                           ;SlaveLiofilizadorVer1.c: 266:             }
  2853                           
  2854                           
  2855                           ;SlaveLiofilizadorVer1.c: 284:          if(generic_status.flag_usart_rx==1)
  2856  070A  1C76               	btfss	_generic_status,0
  2857  070B  2EEB               	goto	l7424
  2858                           
  2859                           ;SlaveLiofilizadorVer1.c: 285:             {;SlaveLiofilizadorVer1.c: 286:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2860  070C  1283               	bcf	3,5	;RP0=0, select bank2
  2861  070D  1703               	bsf	3,6	;RP1=1, select bank2
  2862  070E  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2863  070F  1683               	bsf	3,5	;RP0=1, select bank3
  2864  0710  00A5               	movwf	(_header+1)^(0+384)
  2865  0711  1283               	bcf	3,5	;RP0=0, select bank2
  2866  0712  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2867  0713  1683               	bsf	3,5	;RP0=1, select bank3
  2868  0714  00A4               	movwf	_header^(0+384)
  2869                           
  2870                           ;SlaveLiofilizadorVer1.c: 287:             if(header==0xAABB)
  2871  0715  3ABB               	xorlw	187
  2872  0716  30AA               	movlw	170
  2873  0717  1903               	skipnz
  2874  0718  0625               	xorwf	(_header+1)^(0+384),w
  2875  0719  1D03               	btfss	3,2
  2876  071A  2EEB               	goto	l7424
  2877                           
  2878                           ;SlaveLiofilizadorVer1.c: 288:                {;SlaveLiofilizadorVer1.c: 289:           
      +                               destino =usart_buffer[3];
  2879  071B  1283               	bcf	3,5	;RP0=0, select bank2
  2880  071C  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2881  071D  1683               	bsf	3,5	;RP0=1, select bank3
  2882  071E  00B3               	movwf	_destino^(0+384)
  2883                           
  2884                           ;SlaveLiofilizadorVer1.c: 290:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2885  071F  0634               	xorwf	_Board_Number^(0+384),w
  2886  0720  1903               	skipnz
  2887  0721  2F24               	goto	l7444
  2888  0722  0F33               	incfsz	_destino^(0+384),w
  2889  0723  2EEB               	goto	l7424
  2890  0724                     l7444:	
  2891                           
  2892                           ;SlaveLiofilizadorVer1.c: 291:                       {;SlaveLiofilizadorVer1.c: 292:    
      +                                             Delay_Led_Usart=20;
  2893  0724  3014               	movlw	20
  2894  0725  00AC               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  2895  0726  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2896                           
  2897                           ;SlaveLiofilizadorVer1.c: 293:                       Decodify_Command();
  2898  0727  120A  158A  203F  120A  118A  	fcall	_Decodify_Command
  2899                           
  2900                           ;SlaveLiofilizadorVer1.c: 294:                       generic_status.flag_usart_rx=0;
  2901  072C  1076               	bcf	_generic_status,0
  2902                           
  2903                           ;SlaveLiofilizadorVer1.c: 297:             }
  2904  072D  2EEB               	goto	l7424
  2905  072E                     __end_of_main:	
  2906                           
  2907                           	psect	text1
  2908  1CB4                     __ptext1:	
  2909 ;; *************** function _my_delay_ms_WDT *****************
  2910 ;; Defined at:
  2911 ;;		line 13 in file "my_delay.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  time            4    0[BANK0 ] long 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  i               4    6[BANK0 ] long 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		wreg, status,2, status,0, btemp+1
  2920 ;; Tracked objects:
  2921 ;;		On entry : 300/0
  2922 ;;		On exit  : 300/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2925 ;;      Params:         0       4       0       0       0
  2926 ;;      Locals:         0       4       0       0       0
  2927 ;;      Temps:          0       2       0       0       0
  2928 ;;      Totals:         0      10       0       0       0
  2929 ;;Total ram usage:       10 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    1
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_main
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           
  2940                           ;psect for function _my_delay_ms_WDT
  2941  1CB4                     _my_delay_ms_WDT:	
  2942                           
  2943                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
  2944                           
  2945                           ;incstack = 0
  2946                           ; Regs used in _my_delay_ms_WDT: [wreg+status,2+status,0+btemp+1]
  2947  1CB4  01A6               	clrf	my_delay_ms_WDT@i
  2948  1CB5  01A7               	clrf	my_delay_ms_WDT@i+1
  2949  1CB6  01A8               	clrf	my_delay_ms_WDT@i+2
  2950  1CB7  01A9               	clrf	my_delay_ms_WDT@i+3
  2951  1CB8                     l5336:	
  2952  1CB8  0829               	movf	my_delay_ms_WDT@i+3,w
  2953  1CB9  3A80               	xorlw	128
  2954  1CBA  00FF               	movwf	127
  2955  1CBB  0823               	movf	my_delay_ms_WDT@time+3,w
  2956  1CBC  3A80               	xorlw	128
  2957  1CBD  027F               	subwf	127,w
  2958  1CBE  1D03               	skipz
  2959  1CBF  2CCA               	goto	u4593
  2960  1CC0  0822               	movf	my_delay_ms_WDT@time+2,w
  2961  1CC1  0228               	subwf	my_delay_ms_WDT@i+2,w
  2962  1CC2  1D03               	skipz
  2963  1CC3  2CCA               	goto	u4593
  2964  1CC4  0821               	movf	my_delay_ms_WDT@time+1,w
  2965  1CC5  0227               	subwf	my_delay_ms_WDT@i+1,w
  2966  1CC6  1D03               	skipz
  2967  1CC7  2CCA               	goto	u4593
  2968  1CC8  0820               	movf	my_delay_ms_WDT@time,w
  2969  1CC9  0226               	subwf	my_delay_ms_WDT@i,w
  2970  1CCA                     u4593:	
  2971  1CCA  1803               	btfsc	3,0
  2972  1CCB  0008               	return
  2973  1CCC  0064               	clrwdt	;# 
  2974                           
  2975                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
  2976  1CCD  3003               	movlw	3
  2977  1CCE  1283               	bcf	3,5	;RP0=0, select bank0
  2978  1CCF  1303               	bcf	3,6	;RP1=0, select bank0
  2979  1CD0  00A5               	movwf	??_my_delay_ms_WDT+1
  2980  1CD1  3097               	movlw	151
  2981  1CD2  00A4               	movwf	??_my_delay_ms_WDT
  2982  1CD3                     u6547:	
  2983  1CD3  0BA4               	decfsz	??_my_delay_ms_WDT,f
  2984  1CD4  2CD3               	goto	u6547
  2985  1CD5  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
  2986  1CD6  2CD3               	goto	u6547
  2987                           
  2988                           ;my_delay.c: 19:             }
  2989  1CD7  1283               	bcf	3,5	;RP0=0, select bank0
  2990  1CD8  1303               	bcf	3,6	;RP1=0, select bank0
  2991  1CD9  0AA6               	incf	my_delay_ms_WDT@i,f
  2992  1CDA  1903               	skipnz
  2993  1CDB  0AA7               	incf	my_delay_ms_WDT@i+1,f
  2994  1CDC  1903               	skipnz
  2995  1CDD  0AA8               	incf	my_delay_ms_WDT@i+2,f
  2996  1CDE  1903               	skipnz
  2997  1CDF  0AA9               	incf	my_delay_ms_WDT@i+3,f
  2998  1CE0  2CB8               	goto	l5336
  2999  1CE1                     __end_of_my_delay_ms_WDT:	
  3000                           
  3001                           	psect	text2
  3002  1010                     __ptext2:	
  3003 ;; *************** function _mediatemperaturaNTC *****************
  3004 ;; Defined at:
  3005 ;;		line 680 in file "SlaveLiofilizadorVer1.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;  canal           1    wreg     unsigned char 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  canal           1   52[BANK1 ] unsigned char 
  3010 ;;  Temp            4   53[BANK1 ] float 
  3011 ;;  i               1   57[BANK1 ] unsigned char 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 300/300
  3018 ;;		On exit  : 100/100
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3021 ;;      Params:         0       0       0       0       0
  3022 ;;      Locals:         0       0      10       0       0
  3023 ;;      Temps:          0       0       1       0       0
  3024 ;;      Totals:         0       0      11       0       0
  3025 ;;Total ram usage:       11 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    6
  3028 ;; This function calls:
  3029 ;;		_ADC_Read_NTC
  3030 ;;		_Package_Usart_is_for_me
  3031 ;;		_Rele0Ligado
  3032 ;;		_Rele1Ligado
  3033 ;;		___fladd
  3034 ;;		___fldiv
  3035 ;;		___xxtofl
  3036 ;;		_my_delay_ms
  3037 ;; This function is called by:
  3038 ;;		_main
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           
  3043                           ;psect for function _mediatemperaturaNTC
  3044  1010                     _mediatemperaturaNTC:	
  3045                           
  3046                           ;incstack = 0
  3047                           ; Regs used in _mediatemperaturaNTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3048                           ;mediatemperaturaNTC@canal stored from wreg
  3049  1010  1303               	bcf	3,6	;RP1=0, select bank1
  3050  1011  00D4               	movwf	mediatemperaturaNTC@canal^(0+128)
  3051                           
  3052                           ;SlaveLiofilizadorVer1.c: 680: void mediatemperaturaNTC(unsigned char canal);SlaveLiofil
      +                          izadorVer1.c: 681:      {;SlaveLiofilizadorVer1.c: 682:      float Temp;;SlaveLiofilizad
      +                          orVer1.c: 683:      char i;;SlaveLiofilizadorVer1.c: 685:      ADCON0bits.CHS=canal;
  3053  1012  00CF               	movwf	??_mediatemperaturaNTC^(0+128)
  3054  1013  0DCF               	rlf	??_mediatemperaturaNTC^(0+128),f
  3055  1014  0DCF               	rlf	??_mediatemperaturaNTC^(0+128),f
  3056  1015  1283               	bcf	3,5	;RP0=0, select bank0
  3057  1016  081F               	movf	31,w	;volatile
  3058  1017  1683               	bsf	3,5	;RP0=1, select bank1
  3059  1018  064F               	xorwf	??_mediatemperaturaNTC^(0+128),w
  3060  1019  39C3               	andlw	-61
  3061  101A  064F               	xorwf	??_mediatemperaturaNTC^(0+128),w
  3062  101B  1283               	bcf	3,5	;RP0=0, select bank0
  3063  101C  009F               	movwf	31	;volatile
  3064                           
  3065                           ;SlaveLiofilizadorVer1.c: 686:      my_delay_ms(1);
  3066  101D  01A0               	clrf	my_delay_ms@time
  3067  101E  0AA0               	incf	my_delay_ms@time,f
  3068  101F  01A1               	clrf	my_delay_ms@time+1
  3069  1020  01A2               	clrf	my_delay_ms@time+2
  3070  1021  01A3               	clrf	my_delay_ms@time+3
  3071  1022  27D4  160A  118A   	fcall	_my_delay_ms
  3072                           
  3073                           ;SlaveLiofilizadorVer1.c: 688:      Temp=0;
  3074  1025  1683               	bsf	3,5	;RP0=1, select bank1
  3075  1026  01D5               	clrf	mediatemperaturaNTC@Temp^(0+128)
  3076  1027  01D6               	clrf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3077  1028  01D7               	clrf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3078  1029  01D8               	clrf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3079                           
  3080                           ;SlaveLiofilizadorVer1.c: 690:      for(i=1;i<15;i++)
  3081  102A  01D9               	clrf	mediatemperaturaNTC@i^(0+128)
  3082  102B  0AD9               	incf	mediatemperaturaNTC@i^(0+128),f
  3083  102C                     l7004:	
  3084                           
  3085                           ;SlaveLiofilizadorVer1.c: 691:          {;SlaveLiofilizadorVer1.c: 692:          Temp+=A
      +                          DC_Read_NTC(canal);
  3086  102C  2337  160A  118A   	fcall	_ADC_Read_NTC
  3087  102F  083C               	movf	(?_ADC_Read_NTC+3)^(0+128),w
  3088  1030  00D3               	movwf	(_mediatemperaturaNTC$2292+3)^(0+128)
  3089  1031  083B               	movf	(?_ADC_Read_NTC+2)^(0+128),w
  3090  1032  00D2               	movwf	(_mediatemperaturaNTC$2292+2)^(0+128)
  3091  1033  083A               	movf	(?_ADC_Read_NTC+1)^(0+128),w
  3092  1034  00D1               	movwf	(_mediatemperaturaNTC$2292+1)^(0+128)
  3093  1035  0839               	movf	?_ADC_Read_NTC^(0+128),w
  3094  1036  00D0               	movwf	_mediatemperaturaNTC$2292^(0+128)
  3095                           
  3096                           ;SlaveLiofilizadorVer1.c: 691:          {;SlaveLiofilizadorVer1.c: 692:          Temp+=A
      +                          DC_Read_NTC(canal);
  3097  1037  0853               	movf	(_mediatemperaturaNTC$2292+3)^(0+128),w
  3098  1038  1283               	bcf	3,5	;RP0=0, select bank0
  3099  1039  00BC               	movwf	___fladd@b+3
  3100  103A  1683               	bsf	3,5	;RP0=1, select bank1
  3101  103B  0852               	movf	(_mediatemperaturaNTC$2292+2)^(0+128),w
  3102  103C  1283               	bcf	3,5	;RP0=0, select bank0
  3103  103D  00BB               	movwf	___fladd@b+2
  3104  103E  1683               	bsf	3,5	;RP0=1, select bank1
  3105  103F  0851               	movf	(_mediatemperaturaNTC$2292+1)^(0+128),w
  3106  1040  1283               	bcf	3,5	;RP0=0, select bank0
  3107  1041  00BA               	movwf	___fladd@b+1
  3108  1042  1683               	bsf	3,5	;RP0=1, select bank1
  3109  1043  0850               	movf	_mediatemperaturaNTC$2292^(0+128),w
  3110  1044  1283               	bcf	3,5	;RP0=0, select bank0
  3111  1045  00B9               	movwf	___fladd@b
  3112  1046  1683               	bsf	3,5	;RP0=1, select bank1
  3113  1047  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3114  1048  1283               	bcf	3,5	;RP0=0, select bank0
  3115  1049  00C0               	movwf	___fladd@a+3
  3116  104A  1683               	bsf	3,5	;RP0=1, select bank1
  3117  104B  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3118  104C  1283               	bcf	3,5	;RP0=0, select bank0
  3119  104D  00BF               	movwf	___fladd@a+2
  3120  104E  1683               	bsf	3,5	;RP0=1, select bank1
  3121  104F  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3122  1050  1283               	bcf	3,5	;RP0=0, select bank0
  3123  1051  00BE               	movwf	___fladd@a+1
  3124  1052  1683               	bsf	3,5	;RP0=1, select bank1
  3125  1053  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3126  1054  1283               	bcf	3,5	;RP0=0, select bank0
  3127  1055  00BD               	movwf	___fladd@a
  3128  1056  21C8  160A  118A   	fcall	___fladd
  3129  1059  083C               	movf	?___fladd+3,w
  3130  105A  1683               	bsf	3,5	;RP0=1, select bank1
  3131  105B  00D8               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3132  105C  1283               	bcf	3,5	;RP0=0, select bank0
  3133  105D  083B               	movf	?___fladd+2,w
  3134  105E  1683               	bsf	3,5	;RP0=1, select bank1
  3135  105F  00D7               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3136  1060  1283               	bcf	3,5	;RP0=0, select bank0
  3137  1061  083A               	movf	?___fladd+1,w
  3138  1062  1683               	bsf	3,5	;RP0=1, select bank1
  3139  1063  00D6               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3140  1064  1283               	bcf	3,5	;RP0=0, select bank0
  3141  1065  0839               	movf	?___fladd,w
  3142  1066  1683               	bsf	3,5	;RP0=1, select bank1
  3143  1067  00D5               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3144                           
  3145                           ;SlaveLiofilizadorVer1.c: 693:          if(Package_Usart_is_for_me()==1) break;
  3146  1068  275F  160A  118A   	fcall	_Package_Usart_is_for_me
  3147  106B  3A01               	xorlw	1
  3148  106C  1903               	btfsc	3,2
  3149  106D  2894               	goto	l7032
  3150                           
  3151                           ;SlaveLiofilizadorVer1.c: 695:          if(generic_status.flag_global_hot)
  3152  106E  1F76               	btfss	_generic_status,6
  3153  106F  288D               	goto	l7028
  3154                           
  3155                           ;SlaveLiofilizadorVer1.c: 696:            {;SlaveLiofilizadorVer1.c: 698:            if(
      +                          (TempoCNT_0==0)&&
  3156  1070  1683               	bsf	3,5	;RP0=1, select bank1
  3157  1071  086F               	movf	_TempoCNT_0^(0+128),w	;volatile
  3158  1072  1D03               	btfss	3,2
  3159  1073  287E               	goto	l7020
  3160  1074  1703               	bsf	3,6	;RP1=1, select bank3
  3161  1075  0B60               	decfsz	_RL0Status^(0+384),w
  3162  1076  287E               	goto	l7020
  3163  1077  0328               	decf	_Status0^(0+384),w
  3164  1078  0429               	iorwf	(_Status0+1)^(0+384),w
  3165  1079  1D03               	btfss	3,2
  3166  107A  287E               	goto	l7020
  3167                           
  3168                           ;SlaveLiofilizadorVer1.c: 700:               (Status0==1)) Rele0Ligado();
  3169  107B  20EF  160A  118A   	fcall	_Rele0Ligado
  3170  107E                     l7020:	
  3171                           
  3172                           ;SlaveLiofilizadorVer1.c: 702:            if((TempoCNT_1==0)&&
  3173  107E  1683               	bsf	3,5	;RP0=1, select bank1
  3174  107F  1303               	bcf	3,6	;RP1=0, select bank1
  3175  1080  086E               	movf	_TempoCNT_1^(0+128),w	;volatile
  3176  1081  1D03               	btfss	3,2
  3177  1082  288D               	goto	l7028
  3178  1083  1703               	bsf	3,6	;RP1=1, select bank3
  3179  1084  0B5F               	decfsz	_RL1Status^(0+384),w
  3180  1085  288D               	goto	l7028
  3181  1086  0326               	decf	_Status1^(0+384),w
  3182  1087  0427               	iorwf	(_Status1+1)^(0+384),w
  3183  1088  1D03               	btfss	3,2
  3184  1089  288D               	goto	l7028
  3185                           
  3186                           ;SlaveLiofilizadorVer1.c: 704:               (Status1==1)) Rele1Ligado();
  3187  108A  2106  160A  118A   	fcall	_Rele1Ligado
  3188  108D                     l7028:	
  3189                           
  3190                           ;SlaveLiofilizadorVer1.c: 707:          }
  3191  108D  1683               	bsf	3,5	;RP0=1, select bank1
  3192  108E  1303               	bcf	3,6	;RP1=0, select bank1
  3193  108F  300F               	movlw	15
  3194  1090  0AD9               	incf	mediatemperaturaNTC@i^(0+128),f
  3195  1091  0259               	subwf	mediatemperaturaNTC@i^(0+128),w
  3196  1092  1C03               	skipc
  3197  1093  282C               	goto	l7004
  3198  1094                     l7032:	
  3199                           
  3200                           ;SlaveLiofilizadorVer1.c: 708:      if(i<10)
  3201  1094  300A               	movlw	10
  3202  1095  1683               	bsf	3,5	;RP0=1, select bank1
  3203  1096  0259               	subwf	mediatemperaturaNTC@i^(0+128),w
  3204  1097  1C03               	btfss	3,0
  3205  1098  0008               	return
  3206                           
  3207                           ;SlaveLiofilizadorVer1.c: 713:      if(i==15)
  3208  1099  300F               	movlw	15
  3209  109A  0659               	xorwf	mediatemperaturaNTC@i^(0+128),w
  3210  109B  1D03               	btfss	3,2
  3211  109C  28AC               	goto	l7040
  3212                           
  3213                           ;SlaveLiofilizadorVer1.c: 714:         Temp/=(i-1);
  3214  109D  0859               	movf	mediatemperaturaNTC@i^(0+128),w
  3215  109E  3EFF               	addlw	255
  3216  109F  1283               	bcf	3,5	;RP0=0, select bank0
  3217  10A0  00AB               	movwf	___xxtofl@val
  3218  10A1  30FF               	movlw	255
  3219  10A2  1803               	skipnc
  3220  10A3  3000               	movlw	0
  3221  10A4  00AC               	movwf	___xxtofl@val+1
  3222  10A5  01AD               	clrf	___xxtofl@val+2
  3223  10A6  1BAC               	btfsc	___xxtofl@val+1,7
  3224  10A7  03AD               	decf	___xxtofl@val+2,f
  3225  10A8  082D               	movf	___xxtofl@val+2,w
  3226  10A9  00AE               	movwf	___xxtofl@val+3
  3227  10AA  3001               	movlw	1
  3228  10AB  28B3               	goto	L1
  3229  10AC                     l7040:	
  3230                           
  3231                           ;SlaveLiofilizadorVer1.c: 716:         Temp/=(i);
  3232  10AC  0859               	movf	mediatemperaturaNTC@i^(0+128),w
  3233  10AD  1283               	bcf	3,5	;RP0=0, select bank0
  3234  10AE  120A  118A  24EF  160A  118A  	fcall	PL72	;call to abstracted procedure
  3235  10B3                     L1:	
  3236  10B3  24A9  160A  118A   	fcall	___xxtofl
  3237  10B6  2775  160A  118A   	fcall	PL18	;call to abstracted procedure
  3238  10B9  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3239  10BA  00A7               	movwf	(___fldiv@b+3)^(0+128)
  3240  10BB  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3241  10BC  00A6               	movwf	(___fldiv@b+2)^(0+128)
  3242  10BD  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3243  10BE  00A5               	movwf	(___fldiv@b+1)^(0+128)
  3244  10BF  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3245  10C0  00A4               	movwf	___fldiv@b^(0+128)
  3246  10C1  2517  160A  118A   	fcall	___fldiv
  3247  10C4  0823               	movf	(?___fldiv+3)^(0+128),w
  3248  10C5  00D8               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3249  10C6  0822               	movf	(?___fldiv+2)^(0+128),w
  3250  10C7  00D7               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3251  10C8  0821               	movf	(?___fldiv+1)^(0+128),w
  3252  10C9  00D6               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3253  10CA  0820               	movf	?___fldiv^(0+128),w
  3254  10CB  00D5               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3255                           
  3256                           ;SlaveLiofilizadorVer1.c: 718:      if(canal==0)
  3257  10CC  0854               	movf	mediatemperaturaNTC@canal^(0+128),w
  3258  10CD  1D03               	btfss	3,2
  3259  10CE  28DF               	goto	l7046
  3260                           
  3261                           ;SlaveLiofilizadorVer1.c: 719:         {;SlaveLiofilizadorVer1.c: 720:         Temperatu
      +                          ra0=Temp;
  3262  10CF  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3263  10D0  1703               	bsf	3,6	;RP1=1, select bank3
  3264  10D1  0097               	movwf	(_Temperatura0+3)^(0+384)
  3265  10D2  1303               	bcf	3,6	;RP1=0, select bank1
  3266  10D3  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3267  10D4  1703               	bsf	3,6	;RP1=1, select bank3
  3268  10D5  0096               	movwf	(_Temperatura0+2)^(0+384)
  3269  10D6  1303               	bcf	3,6	;RP1=0, select bank1
  3270  10D7  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3271  10D8  1703               	bsf	3,6	;RP1=1, select bank3
  3272  10D9  0095               	movwf	(_Temperatura0+1)^(0+384)
  3273  10DA  1303               	bcf	3,6	;RP1=0, select bank1
  3274  10DB  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3275  10DC  1703               	bsf	3,6	;RP1=1, select bank3
  3276  10DD  0094               	movwf	_Temperatura0^(0+384)
  3277                           
  3278                           ;SlaveLiofilizadorVer1.c: 721:         }
  3279  10DE  0008               	return
  3280  10DF                     l7046:	
  3281                           
  3282                           ;SlaveLiofilizadorVer1.c: 723:         {;SlaveLiofilizadorVer1.c: 724:         Temperatu
      +                          ra1=Temp;
  3283  10DF  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3284  10E0  1703               	bsf	3,6	;RP1=1, select bank3
  3285  10E1  0093               	movwf	(_Temperatura1+3)^(0+384)
  3286  10E2  1303               	bcf	3,6	;RP1=0, select bank1
  3287  10E3  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3288  10E4  1703               	bsf	3,6	;RP1=1, select bank3
  3289  10E5  0092               	movwf	(_Temperatura1+2)^(0+384)
  3290  10E6  1303               	bcf	3,6	;RP1=0, select bank1
  3291  10E7  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3292  10E8  1703               	bsf	3,6	;RP1=1, select bank3
  3293  10E9  0091               	movwf	(_Temperatura1+1)^(0+384)
  3294  10EA  1303               	bcf	3,6	;RP1=0, select bank1
  3295  10EB  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3296  10EC  1703               	bsf	3,6	;RP1=1, select bank3
  3297  10ED  0090               	movwf	_Temperatura1^(0+384)
  3298  10EE  0008               	return
  3299  10EF                     __end_of_mediatemperaturaNTC:	
  3300  10EF                     __ptext70:	
  3301 ;; *************** function _Rele0Ligado *****************
  3302 ;; Defined at:
  3303 ;;		line 937 in file "SlaveLiofilizadorVer1.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      void 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0
  3312 ;; Tracked objects:
  3313 ;;		On entry : 100/300
  3314 ;;		On exit  : 200/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3317 ;;      Params:         0       0       0       0       0
  3318 ;;      Locals:         0       0       0       0       0
  3319 ;;      Temps:          0       0       0       0       0
  3320 ;;      Totals:         0       0       0       0       0
  3321 ;;Total ram usage:        0 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    1
  3324 ;; This function calls:
  3325 ;;		Nothing
  3326 ;; This function is called by:
  3327 ;;		_mediatemperaturaNTC
  3328 ;;		_Auto_Relay0
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           
  3333                           ;psect for function _Rele0Ligado
  3334  10EF                     _Rele0Ligado:	
  3335  10EF                     l6868:	
  3336                           ;incstack = 0
  3337                           ; Regs used in _Rele0Ligado: [wreg+status,2+status,0]
  3338                           
  3339                           
  3340                           ;SlaveLiofilizadorVer1.c: 940:         if(TempoCNT_0==0)
  3341  10EF  1303               	bcf	3,6	;RP1=0, select bank1
  3342  10F0  086F               	movf	_TempoCNT_0^(0+128),w	;volatile
  3343  10F1  1D03               	btfss	3,2
  3344  10F2  0008               	return
  3345                           
  3346                           ;SlaveLiofilizadorVer1.c: 941:             {;SlaveLiofilizadorVer1.c: 944:             i
      +                          f(PORTCbits.RC0==0)
  3347  10F3  1283               	bcf	3,5	;RP0=0, select bank0
  3348  10F4  1807               	btfsc	7,0	;volatile
  3349  10F5  28FE               	goto	l6876
  3350                           
  3351                           ;SlaveLiofilizadorVer1.c: 945:               {;SlaveLiofilizadorVer1.c: 946:            
      +                             TempoCNT_0=TempoON_0;
  3352  10F6  1683               	bsf	3,5	;RP0=1, select bank3
  3353  10F7  1703               	bsf	3,6	;RP1=1, select bank3
  3354  10F8  083A               	movf	_TempoON_0^(0+384),w
  3355  10F9  1303               	bcf	3,6	;RP1=0, select bank1
  3356  10FA  00EF               	movwf	_TempoCNT_0^(0+128)	;volatile
  3357                           
  3358                           ;SlaveLiofilizadorVer1.c: 947:               PORTCbits.RC0=1;
  3359  10FB  1283               	bcf	3,5	;RP0=0, select bank0
  3360  10FC  1407               	bsf	7,0	;volatile
  3361                           
  3362                           ;SlaveLiofilizadorVer1.c: 948:               }
  3363  10FD  0008               	return
  3364  10FE                     l6876:	
  3365                           
  3366                           ;SlaveLiofilizadorVer1.c: 950:               {;SlaveLiofilizadorVer1.c: 951:            
      +                             TempoCNT_0=TempoOFF_0;
  3367  10FE  1683               	bsf	3,5	;RP0=1, select bank3
  3368  10FF  1703               	bsf	3,6	;RP1=1, select bank3
  3369  1100  0839               	movf	_TempoOFF_0^(0+384),w
  3370  1101  1303               	bcf	3,6	;RP1=0, select bank1
  3371  1102  00EF               	movwf	_TempoCNT_0^(0+128)	;volatile
  3372                           
  3373                           ;SlaveLiofilizadorVer1.c: 952:               PORTCbits.RC0=0;
  3374  1103  1283               	bcf	3,5	;RP0=0, select bank0
  3375  1104  1007               	bcf	7,0	;volatile
  3376  1105  0008               	return
  3377  1106                     __end_of_Rele0Ligado:	
  3378  1106                     __ptext64:	
  3379 ;; *************** function _Rele1Ligado *****************
  3380 ;; Defined at:
  3381 ;;		line 958 in file "SlaveLiofilizadorVer1.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;		None
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;		None
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/300
  3392 ;;		On exit  : 200/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3395 ;;      Params:         0       0       0       0       0
  3396 ;;      Locals:         0       0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0
  3398 ;;      Totals:         0       0       0       0       0
  3399 ;;Total ram usage:        0 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    1
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_mediatemperaturaNTC
  3406 ;;		_Auto_Relay1
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           
  3411                           ;psect for function _Rele1Ligado
  3412  1106                     _Rele1Ligado:	
  3413  1106                     l6880:	
  3414                           ;incstack = 0
  3415                           ; Regs used in _Rele1Ligado: [wreg+status,2+status,0]
  3416                           
  3417                           
  3418                           ;SlaveLiofilizadorVer1.c: 961:         if(TempoCNT_1==0)
  3419  1106  1683               	bsf	3,5	;RP0=1, select bank1
  3420  1107  1303               	bcf	3,6	;RP1=0, select bank1
  3421  1108  086E               	movf	_TempoCNT_1^(0+128),w	;volatile
  3422  1109  1D03               	btfss	3,2
  3423  110A  0008               	return
  3424                           
  3425                           ;SlaveLiofilizadorVer1.c: 962:             {;SlaveLiofilizadorVer1.c: 965:             i
      +                          f(PORTCbits.RC1==0)
  3426  110B  1283               	bcf	3,5	;RP0=0, select bank0
  3427  110C  1887               	btfsc	7,1	;volatile
  3428  110D  2916               	goto	l6888
  3429                           
  3430                           ;SlaveLiofilizadorVer1.c: 966:               {;SlaveLiofilizadorVer1.c: 967:            
      +                             TempoCNT_1=TempoON_1;
  3431  110E  1683               	bsf	3,5	;RP0=1, select bank3
  3432  110F  1703               	bsf	3,6	;RP1=1, select bank3
  3433  1110  0837               	movf	_TempoON_1^(0+384),w
  3434  1111  1303               	bcf	3,6	;RP1=0, select bank1
  3435  1112  00EE               	movwf	_TempoCNT_1^(0+128)	;volatile
  3436                           
  3437                           ;SlaveLiofilizadorVer1.c: 968:               PORTCbits.RC1=1;
  3438  1113  1283               	bcf	3,5	;RP0=0, select bank0
  3439  1114  1487               	bsf	7,1	;volatile
  3440                           
  3441                           ;SlaveLiofilizadorVer1.c: 969:               }
  3442  1115  0008               	return
  3443  1116                     l6888:	
  3444                           
  3445                           ;SlaveLiofilizadorVer1.c: 971:               {;SlaveLiofilizadorVer1.c: 972:            
      +                             TempoCNT_1=TempoOFF_1;
  3446  1116  1683               	bsf	3,5	;RP0=1, select bank3
  3447  1117  1703               	bsf	3,6	;RP1=1, select bank3
  3448  1118  0836               	movf	_TempoOFF_1^(0+384),w
  3449  1119  1303               	bcf	3,6	;RP1=0, select bank1
  3450  111A  00EE               	movwf	_TempoCNT_1^(0+128)	;volatile
  3451                           
  3452                           ;SlaveLiofilizadorVer1.c: 973:               PORTCbits.RC1=0;
  3453  111B  1283               	bcf	3,5	;RP0=0, select bank0
  3454  111C  1087               	bcf	7,1	;volatile
  3455  111D  0008               	return
  3456  111E                     __end_of_Rele1Ligado:	
  3457  111E                     __ptext9:	
  3458 ;; *************** function _eval_poly *****************
  3459 ;; Defined at:
  3460 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\evalpoly.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  x               4    0[BANK1 ] PTR int 
  3463 ;;  d               1    4[BANK1 ] PTR const 
  3464 ;;		 -> log@coeff(36), 
  3465 ;;  n               2    5[BANK1 ] int 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  res             4   12[BANK1 ] int 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  4    0[BANK1 ] int 
  3470 ;; Registers used:
  3471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 300/100
  3474 ;;		On exit  : 300/100
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3477 ;;      Params:         0       0       7       0       0
  3478 ;;      Locals:         0       0       4       0       0
  3479 ;;      Temps:          0       0       5       0       0
  3480 ;;      Totals:         0       0      16       0       0
  3481 ;;Total ram usage:       16 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    3
  3484 ;; This function calls:
  3485 ;;		___fladd
  3486 ;;		___flmul
  3487 ;; This function is called by:
  3488 ;;		_log
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           
  3493                           ;psect for function _eval_poly
  3494  111E                     _eval_poly:	
  3495                           
  3496                           ;incstack = 0
  3497                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3498  111E  0825               	movf	eval_poly@n^(0+128),w
  3499  111F  00A7               	movwf	??_eval_poly^(0+128)
  3500  1120  3001               	movlw	1
  3501  1121  1003               	clrc
  3502  1122                     L2:	
  3503  1122  0DA7               	rlf	??_eval_poly^(0+128),f
  3504  1123  3EFF               	addlw	-1
  3505  1124  1003               	clrc
  3506  1125  1D03               	skipz
  3507  1126  2922               	goto	L2
  3508  1127  0D27               	rlf	??_eval_poly^(0+128),w
  3509  1128  0724               	addwf	eval_poly@d^(0+128),w
  3510  1129  0084               	movwf	4
  3511  112A  160A  158A  200A  160A  118A  	fcall	stringdir
  3512  112F  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3513  1130  160A  158A  200A  160A  118A  	fcall	stringdir
  3514  1135  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3515  1136  160A  158A  200A  160A  118A  	fcall	stringdir
  3516  113B  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3517  113C  160A  158A  200A  160A  118A  	fcall	stringdir
  3518  1141  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3519  1142  082B               	movf	(??_eval_poly+4)^(0+128),w
  3520  1143  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3521  1144  082A               	movf	(??_eval_poly+3)^(0+128),w
  3522  1145  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3523  1146  0829               	movf	(??_eval_poly+2)^(0+128),w
  3524  1147  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3525  1148  0828               	movf	(??_eval_poly+1)^(0+128),w
  3526  1149                     L4:	
  3527  1149  00AC               	movwf	eval_poly@res^(0+128)
  3528  114A  0825               	movf	eval_poly@n^(0+128),w
  3529  114B  0426               	iorwf	(eval_poly@n+1)^(0+128),w
  3530  114C  1903               	btfsc	3,2
  3531  114D  29BF               	goto	l6304
  3532  114E  30FF               	movlw	-1
  3533  114F  07A5               	addwf	eval_poly@n^(0+128),f
  3534  1150  1C03               	skipc
  3535  1151  03A6               	decf	(eval_poly@n+1)^(0+128),f
  3536  1152  0825               	movf	eval_poly@n^(0+128),w
  3537  1153  00A7               	movwf	??_eval_poly^(0+128)
  3538  1154  3001               	movlw	1
  3539  1155  1003               	clrc
  3540  1156                     L3:	
  3541  1156  0DA7               	rlf	??_eval_poly^(0+128),f
  3542  1157  3EFF               	addlw	-1
  3543  1158  1003               	clrc
  3544  1159  1D03               	skipz
  3545  115A  2956               	goto	L3
  3546  115B  0D27               	rlf	??_eval_poly^(0+128),w
  3547  115C  0724               	addwf	eval_poly@d^(0+128),w
  3548  115D  0084               	movwf	4
  3549  115E  160A  158A  200A  160A  118A  	fcall	stringdir
  3550  1163  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3551  1164  160A  158A  200A  160A  118A  	fcall	stringdir
  3552  1169  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3553  116A  160A  158A  200A  160A  118A  	fcall	stringdir
  3554  116F  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3555  1170  160A  158A  200A  160A  118A  	fcall	stringdir
  3556  1175  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3557  1176  082B               	movf	(??_eval_poly+4)^(0+128),w
  3558  1177  1283               	bcf	3,5	;RP0=0, select bank0
  3559  1178  00BC               	movwf	___fladd@b+3
  3560  1179  1683               	bsf	3,5	;RP0=1, select bank1
  3561  117A  082A               	movf	(??_eval_poly+3)^(0+128),w
  3562  117B  1283               	bcf	3,5	;RP0=0, select bank0
  3563  117C  00BB               	movwf	___fladd@b+2
  3564  117D  1683               	bsf	3,5	;RP0=1, select bank1
  3565  117E  0829               	movf	(??_eval_poly+2)^(0+128),w
  3566  117F  1283               	bcf	3,5	;RP0=0, select bank0
  3567  1180  00BA               	movwf	___fladd@b+1
  3568  1181  1683               	bsf	3,5	;RP0=1, select bank1
  3569  1182  0828               	movf	(??_eval_poly+1)^(0+128),w
  3570  1183  1283               	bcf	3,5	;RP0=0, select bank0
  3571  1184  00B9               	movwf	___fladd@b
  3572  1185  1683               	bsf	3,5	;RP0=1, select bank1
  3573  1186  082F               	movf	(eval_poly@res+3)^(0+128),w
  3574  1187  1283               	bcf	3,5	;RP0=0, select bank0
  3575  1188  00D8               	movwf	___flmul@b+3
  3576  1189  1683               	bsf	3,5	;RP0=1, select bank1
  3577  118A  082E               	movf	(eval_poly@res+2)^(0+128),w
  3578  118B  1283               	bcf	3,5	;RP0=0, select bank0
  3579  118C  00D7               	movwf	___flmul@b+2
  3580  118D  1683               	bsf	3,5	;RP0=1, select bank1
  3581  118E  082D               	movf	(eval_poly@res+1)^(0+128),w
  3582  118F  1283               	bcf	3,5	;RP0=0, select bank0
  3583  1190  00D6               	movwf	___flmul@b+1
  3584  1191  1683               	bsf	3,5	;RP0=1, select bank1
  3585  1192  082C               	movf	eval_poly@res^(0+128),w
  3586  1193  1283               	bcf	3,5	;RP0=0, select bank0
  3587  1194  00D5               	movwf	___flmul@b
  3588  1195  1683               	bsf	3,5	;RP0=1, select bank1
  3589  1196  0823               	movf	(eval_poly@x+3)^(0+128),w
  3590  1197  1283               	bcf	3,5	;RP0=0, select bank0
  3591  1198  00DC               	movwf	___flmul@a+3
  3592  1199  1683               	bsf	3,5	;RP0=1, select bank1
  3593  119A  0822               	movf	(eval_poly@x+2)^(0+128),w
  3594  119B  1283               	bcf	3,5	;RP0=0, select bank0
  3595  119C  00DB               	movwf	___flmul@a+2
  3596  119D  1683               	bsf	3,5	;RP0=1, select bank1
  3597  119E  0821               	movf	(eval_poly@x+1)^(0+128),w
  3598  119F  1283               	bcf	3,5	;RP0=0, select bank0
  3599  11A0  00DA               	movwf	___flmul@a+1
  3600  11A1  1683               	bsf	3,5	;RP0=1, select bank1
  3601  11A2  0820               	movf	eval_poly@x^(0+128),w
  3602  11A3  1283               	bcf	3,5	;RP0=0, select bank0
  3603  11A4  00D9               	movwf	___flmul@a
  3604  11A5  120A  118A  20EB  160A  118A  	fcall	___flmul
  3605  11AA  278F  160A  118A   	fcall	PL28	;call to abstracted procedure
  3606  11AD  21C8  160A  118A   	fcall	___fladd
  3607  11B0  083C               	movf	?___fladd+3,w
  3608  11B1  1683               	bsf	3,5	;RP0=1, select bank1
  3609  11B2  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3610  11B3  1283               	bcf	3,5	;RP0=0, select bank0
  3611  11B4  083B               	movf	?___fladd+2,w
  3612  11B5  1683               	bsf	3,5	;RP0=1, select bank1
  3613  11B6  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3614  11B7  1283               	bcf	3,5	;RP0=0, select bank0
  3615  11B8  083A               	movf	?___fladd+1,w
  3616  11B9  1683               	bsf	3,5	;RP0=1, select bank1
  3617  11BA  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3618  11BB  1283               	bcf	3,5	;RP0=0, select bank0
  3619  11BC  0839               	movf	?___fladd,w
  3620  11BD  1683               	bsf	3,5	;RP0=1, select bank1
  3621  11BE  2949               	goto	L4
  3622  11BF                     l6304:	
  3623  11BF  082F               	movf	(eval_poly@res+3)^(0+128),w
  3624  11C0  00A3               	movwf	(?_eval_poly+3)^(0+128)
  3625  11C1  082E               	movf	(eval_poly@res+2)^(0+128),w
  3626  11C2  00A2               	movwf	(?_eval_poly+2)^(0+128)
  3627  11C3  082D               	movf	(eval_poly@res+1)^(0+128),w
  3628  11C4  00A1               	movwf	(?_eval_poly+1)^(0+128)
  3629  11C5  082C               	movf	eval_poly@res^(0+128),w
  3630  11C6  00A0               	movwf	?_eval_poly^(0+128)
  3631  11C7  0008               	return
  3632  11C8                     __end_of_eval_poly:	
  3633  11C8                     __ptext68:	
  3634 ;; *************** function ___fladd *****************
  3635 ;; Defined at:
  3636 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  b               4   25[BANK0 ] void 
  3639 ;;  a               4   29[BANK0 ] void 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  grs             1   44[BANK0 ] unsigned char 
  3642 ;;  bexp            1   43[BANK0 ] unsigned char 
  3643 ;;  aexp            1   42[BANK0 ] unsigned char 
  3644 ;;  signs           1   41[BANK0 ] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  4   25[BANK0 ] unsigned char 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, status,0, btemp+1
  3649 ;; Tracked objects:
  3650 ;;		On entry : 300/0
  3651 ;;		On exit  : 300/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3654 ;;      Params:         0       8       0       0       0
  3655 ;;      Locals:         0       4       0       0       0
  3656 ;;      Temps:          0       8       0       0       0
  3657 ;;      Totals:         0      20       0       0       0
  3658 ;;Total ram usage:       20 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    1
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_mediatemperaturaNTC
  3665 ;;		_ADC_Read_NTC
  3666 ;;		___flsub
  3667 ;;		_log
  3668 ;;		_eval_poly
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           
  3673                           ;psect for function ___fladd
  3674  11C8                     ___fladd:	
  3675                           
  3676                           ;incstack = 0
  3677                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3678  11C8  083C               	movf	___fladd@b+3,w
  3679  11C9  00C9               	movwf	___fladd@signs
  3680  11CA  3080               	movlw	128
  3681  11CB  05C9               	andwf	___fladd@signs,f
  3682  11CC  1003               	clrc
  3683  11CD  0D3C               	rlf	___fladd@b+3,w
  3684  11CE  00CB               	movwf	___fladd@bexp
  3685  11CF  1BBB               	btfsc	___fladd@b+2,7
  3686  11D0  144B               	bsf	___fladd@bexp,0
  3687  11D1  084B               	movf	___fladd@bexp,w
  3688  11D2  1903               	btfsc	3,2
  3689  11D3  29DC               	goto	l1283
  3690  11D4  0F4B               	incfsz	___fladd@bexp,w
  3691  11D5  29DA               	goto	l1284
  3692  11D6  01B9               	clrf	___fladd@b
  3693  11D7  01BA               	clrf	___fladd@b+1
  3694  11D8  01BB               	clrf	___fladd@b+2
  3695  11D9  01BC               	clrf	___fladd@b+3
  3696  11DA                     l1284:	
  3697  11DA  17BB               	bsf	___fladd@b+2,7
  3698  11DB  29DF               	goto	L19
  3699  11DC                     l1283:	
  3700  11DC  01B9               	clrf	___fladd@b
  3701  11DD  01BA               	clrf	___fladd@b+1
  3702  11DE  01BB               	clrf	___fladd@b+2
  3703  11DF                     L19:	
  3704  11DF  01BC               	clrf	___fladd@b+3
  3705  11E0  0840               	movf	___fladd@a+3,w
  3706  11E1  00CA               	movwf	___fladd@aexp
  3707  11E2  3080               	movlw	128
  3708  11E3  05CA               	andwf	___fladd@aexp,f
  3709  11E4  084A               	movf	___fladd@aexp,w
  3710  11E5  0649               	xorwf	___fladd@signs,w
  3711  11E6  1D03               	btfss	3,2
  3712  11E7  1749               	bsf	___fladd@signs,6
  3713  11E8  1003               	clrc
  3714  11E9  0D40               	rlf	___fladd@a+3,w
  3715  11EA  00CA               	movwf	___fladd@aexp
  3716  11EB  1BBF               	btfsc	___fladd@a+2,7
  3717  11EC  144A               	bsf	___fladd@aexp,0
  3718  11ED  084A               	movf	___fladd@aexp,w
  3719  11EE  1903               	btfsc	3,2
  3720  11EF  29F8               	goto	l1288
  3721  11F0  0F4A               	incfsz	___fladd@aexp,w
  3722  11F1  29F6               	goto	l1289
  3723  11F2  01BD               	clrf	___fladd@a
  3724  11F3  01BE               	clrf	___fladd@a+1
  3725  11F4  01BF               	clrf	___fladd@a+2
  3726  11F5  01C0               	clrf	___fladd@a+3
  3727  11F6                     l1289:	
  3728  11F6  17BF               	bsf	___fladd@a+2,7
  3729  11F7  29FB               	goto	L20
  3730  11F8                     l1288:	
  3731  11F8  01BD               	clrf	___fladd@a
  3732  11F9  01BE               	clrf	___fladd@a+1
  3733  11FA  01BF               	clrf	___fladd@a+2
  3734  11FB                     L20:	
  3735  11FB  01C0               	clrf	___fladd@a+3
  3736  11FC  084B               	movf	___fladd@bexp,w
  3737  11FD  024A               	subwf	___fladd@aexp,w
  3738  11FE  1803               	skipnc
  3739  11FF  2A22               	goto	l3916
  3740  1200  1F49               	btfss	___fladd@signs,6
  3741  1201  2A04               	goto	l3886
  3742  1202  3080               	movlw	128
  3743  1203  06C9               	xorwf	___fladd@signs,f
  3744  1204                     l3886:	
  3745  1204  084B               	movf	___fladd@bexp,w
  3746  1205  00CC               	movwf	___fladd@grs
  3747  1206  084A               	movf	___fladd@aexp,w
  3748  1207  00CB               	movwf	___fladd@bexp
  3749  1208  084C               	movf	___fladd@grs,w
  3750  1209  00CA               	movwf	___fladd@aexp
  3751  120A  0839               	movf	___fladd@b,w
  3752  120B  00CC               	movwf	___fladd@grs
  3753  120C  083D               	movf	___fladd@a,w
  3754  120D  00B9               	movwf	___fladd@b
  3755  120E  084C               	movf	___fladd@grs,w
  3756  120F  00BD               	movwf	___fladd@a
  3757  1210  083A               	movf	___fladd@b+1,w
  3758  1211  00CC               	movwf	___fladd@grs
  3759  1212  083E               	movf	___fladd@a+1,w
  3760  1213  00BA               	movwf	___fladd@b+1
  3761  1214  084C               	movf	___fladd@grs,w
  3762  1215  00BE               	movwf	___fladd@a+1
  3763  1216  083B               	movf	___fladd@b+2,w
  3764  1217  00CC               	movwf	___fladd@grs
  3765  1218  083F               	movf	___fladd@a+2,w
  3766  1219  00BB               	movwf	___fladd@b+2
  3767  121A  084C               	movf	___fladd@grs,w
  3768  121B  00BF               	movwf	___fladd@a+2
  3769  121C  083C               	movf	___fladd@b+3,w
  3770  121D  00CC               	movwf	___fladd@grs
  3771  121E  0840               	movf	___fladd@a+3,w
  3772  121F  00BC               	movwf	___fladd@b+3
  3773  1220  084C               	movf	___fladd@grs,w
  3774  1221  00C0               	movwf	___fladd@a+3
  3775  1222                     l3916:	
  3776  1222  01CC               	clrf	___fladd@grs
  3777  1223  084A               	movf	___fladd@aexp,w
  3778  1224  00C1               	movwf	??___fladd
  3779  1225  01C2               	clrf	??___fladd+1
  3780  1226  0842               	movf	??___fladd+1,w
  3781  1227  00C4               	movwf	??___fladd+3
  3782  1228  084B               	movf	___fladd@bexp,w
  3783  1229  0241               	subwf	??___fladd,w
  3784  122A  00C3               	movwf	??___fladd+2
  3785  122B  1C03               	skipc
  3786  122C  03C4               	decf	??___fladd+3,f
  3787  122D  0844               	movf	??___fladd+3,w
  3788  122E  3A80               	xorlw	128
  3789  122F  00FF               	movwf	127
  3790  1230  3080               	movlw	128
  3791  1231  027F               	subwf	127,w
  3792  1232  1D03               	skipz
  3793  1233  2A36               	goto	u2735
  3794  1234  301A               	movlw	26
  3795  1235  0243               	subwf	??___fladd+2,w
  3796  1236                     u2735:	
  3797  1236  1C03               	skipc
  3798  1237  2A57               	goto	l3932
  3799  1238  1283               	bcf	3,5	;RP0=0, select bank0
  3800  1239  1303               	bcf	3,6	;RP1=0, select bank0
  3801  123A  083C               	movf	___fladd@b+3,w
  3802  123B  043B               	iorwf	___fladd@b+2,w
  3803  123C  043A               	iorwf	___fladd@b+1,w
  3804  123D  0439               	iorwf	___fladd@b,w
  3805  123E  1903               	btfsc	3,2
  3806  123F  2A42               	goto	u2740
  3807  1240  3001               	movlw	1
  3808  1241  2A43               	goto	u2750
  3809  1242                     u2740:	
  3810  1242  3000               	movlw	0
  3811  1243                     u2750:	
  3812  1243  00CC               	movwf	___fladd@grs
  3813  1244  01B9               	clrf	___fladd@b
  3814  1245  01BA               	clrf	___fladd@b+1
  3815  1246  01BB               	clrf	___fladd@b+2
  3816  1247  01BC               	clrf	___fladd@b+3
  3817  1248  084A               	movf	___fladd@aexp,w
  3818  1249  00CB               	movwf	___fladd@bexp
  3819  124A  2A5D               	goto	l1294
  3820  124B                     l1296:	
  3821  124B  1C4C               	btfss	___fladd@grs,0
  3822  124C  2A52               	goto	l1297
  3823  124D  1003               	clrc
  3824  124E  0C4C               	rrf	___fladd@grs,w
  3825  124F  3801               	iorlw	1
  3826  1250  00CC               	movwf	___fladd@grs
  3827  1251  2A54               	goto	l1298
  3828  1252                     l1297:	
  3829  1252  1003               	clrc
  3830  1253  0CCC               	rrf	___fladd@grs,f
  3831  1254                     l1298:	
  3832  1254  27B3  160A  118A   	fcall	PL50	;call to abstracted procedure
  3833  1257                     l3932:	
  3834  1257  1283               	bcf	3,5	;RP0=0, select bank0
  3835  1258  1303               	bcf	3,6	;RP1=0, select bank0
  3836  1259  084A               	movf	___fladd@aexp,w
  3837  125A  024B               	subwf	___fladd@bexp,w
  3838  125B  1C03               	skipc
  3839  125C  2A4B               	goto	l1296
  3840  125D                     l1294:	
  3841  125D  1B49               	btfsc	___fladd@signs,6
  3842  125E  2A86               	goto	l3952
  3843  125F  084B               	movf	___fladd@bexp,w
  3844  1260  1D03               	btfss	3,2
  3845  1261  2A63               	goto	l3938
  3846  1262  2FCF               	ljmp	PL68	;call to abstracted procedure
  3847  1263                     l3938:	
  3848  1263  083D               	movf	___fladd@a,w
  3849  1264  07B9               	addwf	___fladd@b,f
  3850  1265  083E               	movf	___fladd@a+1,w
  3851  1266  1103               	clrz
  3852  1267  1803               	skipnc
  3853  1268  3E01               	addlw	1
  3854  1269  1D03               	btfss	3,2
  3855  126A  07BA               	addwf	___fladd@b+1,f
  3856  126B  083F               	movf	___fladd@a+2,w
  3857  126C  1103               	clrz
  3858  126D  1803               	skipnc
  3859  126E  3E01               	addlw	1
  3860  126F  1D03               	btfss	3,2
  3861  1270  07BB               	addwf	___fladd@b+2,f
  3862  1271  0840               	movf	___fladd@a+3,w
  3863  1272  1103               	clrz
  3864  1273  1803               	skipnc
  3865  1274  3E01               	addlw	1
  3866  1275  1D03               	btfss	3,2
  3867  1276  07BC               	addwf	___fladd@b+3,f
  3868  1277  1C3C               	btfss	___fladd@b+3,0
  3869  1278  2B02               	goto	l3982
  3870  1279  1C4C               	btfss	___fladd@grs,0
  3871  127A  2A80               	goto	l1305
  3872  127B  1003               	clrc
  3873  127C  0C4C               	rrf	___fladd@grs,w
  3874  127D  3801               	iorlw	1
  3875  127E  00CC               	movwf	___fladd@grs
  3876  127F  2A82               	goto	l1306
  3877  1280                     l1305:	
  3878  1280  1003               	clrc
  3879  1281  0CCC               	rrf	___fladd@grs,f
  3880  1282                     l1306:	
  3881  1282  27B3  160A  118A   	fcall	PL50	;call to abstracted procedure
  3882  1285  2B02               	goto	l3982
  3883  1286                     l3952:	
  3884  1286  083C               	movf	___fladd@b+3,w
  3885  1287  3A80               	xorlw	128
  3886  1288  00FF               	movwf	127
  3887  1289  0840               	movf	___fladd@a+3,w
  3888  128A  3A80               	xorlw	128
  3889  128B  027F               	subwf	127,w
  3890  128C  1D03               	skipz
  3891  128D  2A98               	goto	u2853
  3892  128E  083F               	movf	___fladd@a+2,w
  3893  128F  023B               	subwf	___fladd@b+2,w
  3894  1290  1D03               	skipz
  3895  1291  2A98               	goto	u2853
  3896  1292  083E               	movf	___fladd@a+1,w
  3897  1293  023A               	subwf	___fladd@b+1,w
  3898  1294  1D03               	skipz
  3899  1295  2A98               	goto	u2853
  3900  1296  083D               	movf	___fladd@a,w
  3901  1297  0239               	subwf	___fladd@b,w
  3902  1298                     u2853:	
  3903  1298  1803               	skipnc
  3904  1299  2AD8               	goto	l3962
  3905  129A  30FF               	movlw	255
  3906  129B  00C1               	movwf	??___fladd
  3907  129C  00C2               	movwf	??___fladd+1
  3908  129D  00C3               	movwf	??___fladd+2
  3909  129E  00C4               	movwf	??___fladd+3
  3910  129F  083D               	movf	___fladd@a,w
  3911  12A0  00C5               	movwf	??___fladd+4
  3912  12A1  083E               	movf	___fladd@a+1,w
  3913  12A2  00C6               	movwf	??___fladd+5
  3914  12A3  083F               	movf	___fladd@a+2,w
  3915  12A4  00C7               	movwf	??___fladd+6
  3916  12A5  0840               	movf	___fladd@a+3,w
  3917  12A6  00C8               	movwf	??___fladd+7
  3918  12A7  0839               	movf	___fladd@b,w
  3919  12A8  02C5               	subwf	??___fladd+4,f
  3920  12A9  083A               	movf	___fladd@b+1,w
  3921  12AA  1C03               	skipc
  3922  12AB  0F3A               	incfsz	___fladd@b+1,w
  3923  12AC  02C6               	subwf	??___fladd+5,f
  3924  12AD  083B               	movf	___fladd@b+2,w
  3925  12AE  1C03               	skipc
  3926  12AF  0F3B               	incfsz	___fladd@b+2,w
  3927  12B0  02C7               	subwf	??___fladd+6,f
  3928  12B1  083C               	movf	___fladd@b+3,w
  3929  12B2  1C03               	skipc
  3930  12B3  0F3C               	incfsz	___fladd@b+3,w
  3931  12B4  02C8               	subwf	??___fladd+7,f
  3932  12B5  0845               	movf	??___fladd+4,w
  3933  12B6  07C1               	addwf	??___fladd,f
  3934  12B7  0846               	movf	??___fladd+5,w
  3935  12B8  1803               	skipnc
  3936  12B9  0F46               	incfsz	??___fladd+5,w
  3937  12BA  07C2               	addwf	??___fladd+1,f
  3938  12BB  0847               	movf	??___fladd+6,w
  3939  12BC  1803               	skipnc
  3940  12BD  0F47               	incfsz	??___fladd+6,w
  3941  12BE  07C3               	addwf	??___fladd+2,f
  3942  12BF  0848               	movf	??___fladd+7,w
  3943  12C0  1803               	skipnc
  3944  12C1  0A48               	incf	??___fladd+7,w
  3945  12C2  07C4               	addwf	??___fladd+3,f
  3946  12C3  0844               	movf	??___fladd+3,w
  3947  12C4  00BC               	movwf	___fladd@b+3
  3948  12C5  0843               	movf	??___fladd+2,w
  3949  12C6  00BB               	movwf	___fladd@b+2
  3950  12C7  0842               	movf	??___fladd+1,w
  3951  12C8  00BA               	movwf	___fladd@b+1
  3952  12C9  0841               	movf	??___fladd,w
  3953  12CA  00B9               	movwf	___fladd@b
  3954  12CB  3080               	movlw	128
  3955  12CC  06C9               	xorwf	___fladd@signs,f
  3956  12CD  09CC               	comf	___fladd@grs,f
  3957  12CE  0FCC               	incfsz	___fladd@grs,f
  3958  12CF  2AE6               	goto	l1311
  3959  12D0  0AB9               	incf	___fladd@b,f
  3960  12D1  1903               	skipnz
  3961  12D2  0ABA               	incf	___fladd@b+1,f
  3962  12D3  1903               	skipnz
  3963  12D4  0ABB               	incf	___fladd@b+2,f
  3964  12D5  1903               	skipnz
  3965  12D6  0ABC               	incf	___fladd@b+3,f
  3966  12D7  2AE6               	goto	l1311
  3967  12D8                     l3962:	
  3968  12D8  083D               	movf	___fladd@a,w
  3969  12D9  02B9               	subwf	___fladd@b,f
  3970  12DA  083E               	movf	___fladd@a+1,w
  3971  12DB  1C03               	skipc
  3972  12DC  0F3E               	incfsz	___fladd@a+1,w
  3973  12DD  02BA               	subwf	___fladd@b+1,f
  3974  12DE  083F               	movf	___fladd@a+2,w
  3975  12DF  1C03               	skipc
  3976  12E0  0F3F               	incfsz	___fladd@a+2,w
  3977  12E1  02BB               	subwf	___fladd@b+2,f
  3978  12E2  0840               	movf	___fladd@a+3,w
  3979  12E3  1C03               	skipc
  3980  12E4  0F40               	incfsz	___fladd@a+3,w
  3981  12E5  02BC               	subwf	___fladd@b+3,f
  3982  12E6                     l1311:	
  3983  12E6  083C               	movf	___fladd@b+3,w
  3984  12E7  043B               	iorwf	___fladd@b+2,w
  3985  12E8  043A               	iorwf	___fladd@b+1,w
  3986  12E9  0439               	iorwf	___fladd@b,w
  3987  12EA  1D03               	skipz
  3988  12EB  2B00               	goto	l3980
  3989  12EC  084C               	movf	___fladd@grs,w
  3990  12ED  1D03               	btfss	3,2
  3991  12EE  2B00               	goto	l3980
  3992  12EF  2FCF               	ljmp	PL68	;call to abstracted procedure
  3993  12F0                     l3968:	
  3994  12F0  1003               	clrc
  3995  12F1  0DB9               	rlf	___fladd@b,f
  3996  12F2  0DBA               	rlf	___fladd@b+1,f
  3997  12F3  0DBB               	rlf	___fladd@b+2,f
  3998  12F4  0DBC               	rlf	___fladd@b+3,f
  3999  12F5  1BCC               	btfsc	___fladd@grs,7
  4000  12F6  1439               	bsf	___fladd@b,0
  4001  12F7  1C4C               	btfss	___fladd@grs,0
  4002  12F8  2AFB               	goto	l1316
  4003  12F9  1403               	setc
  4004  12FA  2AFC               	goto	L21
  4005  12FB                     l1316:	
  4006  12FB  1003               	clrc
  4007  12FC                     L21:	
  4008  12FC  0DCC               	rlf	___fladd@grs,f
  4009  12FD  084B               	movf	___fladd@bexp,w
  4010  12FE  1D03               	btfss	3,2
  4011  12FF  03CB               	decf	___fladd@bexp,f
  4012  1300                     l3980:	
  4013  1300  1FBB               	btfss	___fladd@b+2,7
  4014  1301  2AF0               	goto	l3968
  4015  1302                     l3982:	
  4016  1302  01CA               	clrf	___fladd@aexp
  4017  1303  1FCC               	btfss	___fladd@grs,7
  4018  1304  2B0D               	goto	l3992
  4019  1305  084C               	movf	___fladd@grs,w
  4020  1306  397F               	andlw	127
  4021  1307  1903               	btfsc	3,2
  4022  1308  1839               	btfsc	___fladd@b,0
  4023  1309  2B0B               	goto	l3988
  4024  130A  2B0D               	goto	l3992
  4025  130B                     l3988:	
  4026  130B  01CA               	clrf	___fladd@aexp
  4027  130C  0ACA               	incf	___fladd@aexp,f
  4028  130D                     l3992:	
  4029  130D  084A               	movf	___fladd@aexp,w
  4030  130E  1903               	btfsc	3,2
  4031  130F  2B20               	goto	l4004
  4032  1310  0AB9               	incf	___fladd@b,f
  4033  1311  1903               	skipnz
  4034  1312  0ABA               	incf	___fladd@b+1,f
  4035  1313  1903               	skipnz
  4036  1314  0ABB               	incf	___fladd@b+2,f
  4037  1315  1903               	skipnz
  4038  1316  0ABC               	incf	___fladd@b+3,f
  4039  1317  1C3C               	btfss	___fladd@b+3,0
  4040  1318  2B20               	goto	l4004
  4041  1319  0D3C               	rlf	___fladd@b+3,w
  4042  131A  0CBC               	rrf	___fladd@b+3,f
  4043  131B  0CBB               	rrf	___fladd@b+2,f
  4044  131C  0CBA               	rrf	___fladd@b+1,f
  4045  131D  0CB9               	rrf	___fladd@b,f
  4046  131E  0F4B               	incfsz	___fladd@bexp,w
  4047  131F  0ACB               	incf	___fladd@bexp,f
  4048  1320                     l4004:	
  4049  1320  0A4B               	incf	___fladd@bexp,w
  4050  1321  1D03               	btfss	3,2
  4051  1322  084B               	movf	___fladd@bexp,w
  4052  1323  1D03               	btfss	3,2
  4053  1324  2B2C               	goto	l4012
  4054  1325  01B9               	clrf	___fladd@b
  4055  1326  01BA               	clrf	___fladd@b+1
  4056  1327  01BB               	clrf	___fladd@b+2
  4057  1328  01BC               	clrf	___fladd@b+3
  4058  1329  084B               	movf	___fladd@bexp,w
  4059  132A  1903               	btfsc	3,2
  4060  132B  01C9               	clrf	___fladd@signs
  4061  132C                     l4012:	
  4062  132C  1C4B               	btfss	___fladd@bexp,0
  4063  132D  2B30               	goto	l1331
  4064  132E  17BB               	bsf	___fladd@b+2,7
  4065  132F  2B31               	goto	l4016
  4066  1330                     l1331:	
  4067  1330  13BB               	bcf	___fladd@b+2,7
  4068  1331                     l4016:	
  4069  1331  1003               	clrc
  4070  1332  0C4B               	rrf	___fladd@bexp,w
  4071  1333  00BC               	movwf	___fladd@b+3
  4072  1334  1BC9               	btfsc	___fladd@signs,7
  4073  1335  17BC               	bsf	___fladd@b+3,7
  4074  1336  0008               	return
  4075  1337                     __end_of___fladd:	
  4076  1337                     __ptext5:	
  4077 ;; *************** function _ADC_Read_NTC *****************
  4078 ;; Defined at:
  4079 ;;		line 56 in file "adc.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  canal           1    wreg     unsigned char 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  canal           1    0[COMMON] unsigned char 
  4084 ;;  temperatura     4   43[BANK1 ] float 
  4085 ;;  resistencia     4   36[BANK1 ] float 
  4086 ;;  calc            4   30[BANK1 ] float 
  4087 ;;  value           2   41[BANK1 ] unsigned int 
  4088 ;;  B               2   34[BANK1 ] int 
  4089 ;;  i               1   40[BANK1 ] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  4   25[BANK1 ] float 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 300/100
  4096 ;;		On exit  : 300/100
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4099 ;;      Params:         0       0       5       0       0
  4100 ;;      Locals:         0       0      17       0       0
  4101 ;;      Temps:          0       0       0       0       0
  4102 ;;      Totals:         0       0      22       0       0
  4103 ;;Total ram usage:       22 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    5
  4106 ;; This function calls:
  4107 ;;		___fladd
  4108 ;;		___fldiv
  4109 ;;		___flmul
  4110 ;;		___flsub
  4111 ;;		___lwdiv
  4112 ;;		___xxtofl
  4113 ;;		_captura
  4114 ;;		_log
  4115 ;; This function is called by:
  4116 ;;		_mediatemperaturaNTC
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           
  4121                           ;psect for function _ADC_Read_NTC
  4122  1337                     _ADC_Read_NTC:	
  4123                           
  4124                           ;adc.c: 57:     int B = 3975;
  4125                           
  4126                           ;incstack = 0
  4127                           ; Regs used in _ADC_Read_NTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4128  1337  3087               	movlw	135
  4129  1338  00C2               	movwf	ADC_Read_NTC@B^(0+128)
  4130  1339  300F               	movlw	15
  4131  133A  00C3               	movwf	(ADC_Read_NTC@B^(0+128)+1)
  4132                           
  4133                           ;adc.c: 58:     float resistencia;;adc.c: 59:     float temperatura;;adc.c: 60:     floa
      +                          t calc;;adc.c: 61:     unsigned int value;;adc.c: 62:     unsigned char i;;adc.c: 64:   
      +                            value=0;
  4134  133B  01C9               	clrf	ADC_Read_NTC@value^(0+128)
  4135  133C  01CA               	clrf	(ADC_Read_NTC@value+1)^(0+128)
  4136                           
  4137                           ;adc.c: 65:     for(i=1;i<=50;i++)
  4138  133D  01C8               	clrf	ADC_Read_NTC@i^(0+128)
  4139  133E  0AC8               	incf	ADC_Read_NTC@i^(0+128),f
  4140  133F                     l6838:	
  4141                           
  4142                           ;adc.c: 66:         value+=captura();
  4143  133F  267E  160A  118A   	fcall	_captura
  4144  1342  0820               	movf	?_captura,w
  4145  1343  1683               	bsf	3,5	;RP0=1, select bank1
  4146  1344  07C9               	addwf	ADC_Read_NTC@value^(0+128),f
  4147  1345  1803               	skipnc
  4148  1346  0ACA               	incf	(ADC_Read_NTC@value+1)^(0+128),f
  4149  1347  1283               	bcf	3,5	;RP0=0, select bank0
  4150  1348  0821               	movf	?_captura+1,w
  4151  1349  1683               	bsf	3,5	;RP0=1, select bank1
  4152  134A  07CA               	addwf	(ADC_Read_NTC@value+1)^(0+128),f
  4153  134B  3033               	movlw	51
  4154  134C  0AC8               	incf	ADC_Read_NTC@i^(0+128),f
  4155  134D  0248               	subwf	ADC_Read_NTC@i^(0+128),w
  4156  134E  1C03               	skipc
  4157  134F  2B3F               	goto	l6838
  4158                           
  4159                           ;adc.c: 67:     value/=(i-1);
  4160  1350  0848               	movf	ADC_Read_NTC@i^(0+128),w
  4161  1351  1283               	bcf	3,5	;RP0=0, select bank0
  4162  1352  00A0               	movwf	___lwdiv@divisor
  4163  1353  30FF               	movlw	255
  4164  1354  01A1               	clrf	___lwdiv@divisor+1
  4165  1355  07A0               	addwf	___lwdiv@divisor,f
  4166  1356  1803               	skipnc
  4167  1357  0AA1               	incf	___lwdiv@divisor+1,f
  4168  1358  07A1               	addwf	___lwdiv@divisor+1,f
  4169  1359  1683               	bsf	3,5	;RP0=1, select bank1
  4170  135A  084A               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  4171  135B  1283               	bcf	3,5	;RP0=0, select bank0
  4172  135C  00A3               	movwf	___lwdiv@dividend+1
  4173  135D  1683               	bsf	3,5	;RP0=1, select bank1
  4174  135E  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4175  135F  1283               	bcf	3,5	;RP0=0, select bank0
  4176  1360  00A2               	movwf	___lwdiv@dividend
  4177  1361  2654  160A  118A   	fcall	___lwdiv
  4178  1364  0821               	movf	?___lwdiv+1,w
  4179  1365  1683               	bsf	3,5	;RP0=1, select bank1
  4180  1366  00CA               	movwf	(ADC_Read_NTC@value+1)^(0+128)
  4181  1367  1283               	bcf	3,5	;RP0=0, select bank0
  4182  1368  0820               	movf	?___lwdiv,w
  4183  1369  1683               	bsf	3,5	;RP0=1, select bank1
  4184  136A  00C9               	movwf	ADC_Read_NTC@value^(0+128)
  4185                           
  4186                           ;adc.c: 68:     resistencia =(1023.0-value);
  4187  136B  2785  160A  118A   	fcall	PL24	;call to abstracted procedure
  4188  136E  24A9  160A  118A   	fcall	___xxtofl
  4189  1371  2798  160A  118A   	fcall	PL32	;call to abstracted procedure
  4190  1374  3044               	movlw	68
  4191  1375  00D4               	movwf	___flsub@b+3
  4192  1376  307F               	movlw	127
  4193  1377  00D3               	movwf	___flsub@b+2
  4194  1378  30C0               	movlw	192
  4195  1379  00D2               	movwf	___flsub@b+1
  4196  137A  01D1               	clrf	___flsub@b
  4197  137B  2638  160A  118A   	fcall	___flsub
  4198  137E  0850               	movf	?___flsub+3,w
  4199  137F  1683               	bsf	3,5	;RP0=1, select bank1
  4200  1380  00C7               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4201  1381  1283               	bcf	3,5	;RP0=0, select bank0
  4202  1382  084F               	movf	?___flsub+2,w
  4203  1383  1683               	bsf	3,5	;RP0=1, select bank1
  4204  1384  00C6               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4205  1385  1283               	bcf	3,5	;RP0=0, select bank0
  4206  1386  084E               	movf	?___flsub+1,w
  4207  1387  1683               	bsf	3,5	;RP0=1, select bank1
  4208  1388  00C5               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4209  1389  1283               	bcf	3,5	;RP0=0, select bank0
  4210  138A  084D               	movf	?___flsub,w
  4211  138B  1683               	bsf	3,5	;RP0=1, select bank1
  4212  138C  00C4               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4213                           
  4214                           ;adc.c: 69:     resistencia*=(10000.0-value);
  4215  138D  3046               	movlw	70
  4216  138E  1283               	bcf	3,5	;RP0=0, select bank0
  4217  138F  00D4               	movwf	___flsub@b+3
  4218  1390  301C               	movlw	28
  4219  1391  00D3               	movwf	___flsub@b+2
  4220  1392  3040               	movlw	64
  4221  1393  00D2               	movwf	___flsub@b+1
  4222  1394  01D1               	clrf	___flsub@b
  4223  1395  1683               	bsf	3,5	;RP0=1, select bank1
  4224  1396  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4225  1397  2785  160A  118A   	fcall	PL24	;call to abstracted procedure
  4226  139A  24A9  160A  118A   	fcall	___xxtofl
  4227  139D  2798  160A  118A   	fcall	PL32	;call to abstracted procedure
  4228  13A0  2638               	fcall	___flsub
  4229  13A1  0850               	movf	?___flsub+3,w
  4230  13A2  00D8               	movwf	___flmul@b+3
  4231  13A3  084F               	movf	?___flsub+2,w
  4232  13A4  00D7               	movwf	___flmul@b+2
  4233  13A5  084E               	movf	?___flsub+1,w
  4234  13A6  00D6               	movwf	___flmul@b+1
  4235  13A7  084D               	movf	?___flsub,w
  4236  13A8  00D5               	movwf	___flmul@b
  4237  13A9  1683               	bsf	3,5	;RP0=1, select bank1
  4238  13AA  0847               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4239  13AB  1283               	bcf	3,5	;RP0=0, select bank0
  4240  13AC  00DC               	movwf	___flmul@a+3
  4241  13AD  1683               	bsf	3,5	;RP0=1, select bank1
  4242  13AE  0846               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4243  13AF  1283               	bcf	3,5	;RP0=0, select bank0
  4244  13B0  00DB               	movwf	___flmul@a+2
  4245  13B1  1683               	bsf	3,5	;RP0=1, select bank1
  4246  13B2  0845               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4247  13B3  1283               	bcf	3,5	;RP0=0, select bank0
  4248  13B4  00DA               	movwf	___flmul@a+1
  4249  13B5  1683               	bsf	3,5	;RP0=1, select bank1
  4250  13B6  0844               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4251  13B7  1283               	bcf	3,5	;RP0=0, select bank0
  4252  13B8  00D9               	movwf	___flmul@a
  4253  13B9  120A  118A  20EB  160A  118A  	fcall	___flmul
  4254  13BE  0858               	movf	?___flmul+3,w
  4255  13BF  1683               	bsf	3,5	;RP0=1, select bank1
  4256  13C0  00C7               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4257  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4258  13C2  0857               	movf	?___flmul+2,w
  4259  13C3  1683               	bsf	3,5	;RP0=1, select bank1
  4260  13C4  00C6               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4261  13C5  1283               	bcf	3,5	;RP0=0, select bank0
  4262  13C6  0856               	movf	?___flmul+1,w
  4263  13C7  1683               	bsf	3,5	;RP0=1, select bank1
  4264  13C8  00C5               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4265  13C9  1283               	bcf	3,5	;RP0=0, select bank0
  4266  13CA  0855               	movf	?___flmul,w
  4267  13CB  1683               	bsf	3,5	;RP0=1, select bank1
  4268  13CC  00C4               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4269                           
  4270                           ;adc.c: 70:     temperatura =value*10000.0/resistencia;
  4271  13CD  0847               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4272  13CE  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4273  13CF  0846               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4274  13D0  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4275  13D1  0845               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4276  13D2  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4277  13D3  0844               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4278  13D4  00A0               	movwf	___fldiv@a^(0+128)
  4279  13D5  3046               	movlw	70
  4280  13D6  1283               	bcf	3,5	;RP0=0, select bank0
  4281  13D7  00D8               	movwf	___flmul@b+3
  4282  13D8  301C               	movlw	28
  4283  13D9  00D7               	movwf	___flmul@b+2
  4284  13DA  3040               	movlw	64
  4285  13DB  00D6               	movwf	___flmul@b+1
  4286  13DC  01D5               	clrf	___flmul@b
  4287  13DD  1683               	bsf	3,5	;RP0=1, select bank1
  4288  13DE  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4289  13DF  2785  160A  118A   	fcall	PL24	;call to abstracted procedure
  4290  13E2  24A9  160A  118A   	fcall	___xxtofl
  4291  13E5  27AA               	fcall	PL48	;call to abstracted procedure
  4292  13E6  120A  118A  20EB  160A  118A  	fcall	___flmul
  4293  13EB  0858               	movf	?___flmul+3,w
  4294  13EC  1683               	bsf	3,5	;RP0=1, select bank1
  4295  13ED  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4296  13EE  1283               	bcf	3,5	;RP0=0, select bank0
  4297  13EF  0857               	movf	?___flmul+2,w
  4298  13F0  1683               	bsf	3,5	;RP0=1, select bank1
  4299  13F1  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4300  13F2  1283               	bcf	3,5	;RP0=0, select bank0
  4301  13F3  0856               	movf	?___flmul+1,w
  4302  13F4  1683               	bsf	3,5	;RP0=1, select bank1
  4303  13F5  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4304  13F6  1283               	bcf	3,5	;RP0=0, select bank0
  4305  13F7  0855               	movf	?___flmul,w
  4306  13F8  1683               	bsf	3,5	;RP0=1, select bank1
  4307  13F9  00A4               	movwf	___fldiv@b^(0+128)
  4308  13FA  2517  160A  118A   	fcall	___fldiv
  4309  13FD  27A1  160A  118A   	fcall	PL34	;call to abstracted procedure
  4310                           
  4311                           ;adc.c: 71:     calc=temperatura;
  4312  1400  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4313  1401  00C1               	movwf	(ADC_Read_NTC@calc+3)^(0+128)
  4314  1402  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4315  1403  00C0               	movwf	(ADC_Read_NTC@calc+2)^(0+128)
  4316  1404  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4317  1405  00BF               	movwf	(ADC_Read_NTC@calc+1)^(0+128)
  4318  1406  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4319  1407  00BE               	movwf	ADC_Read_NTC@calc^(0+128)
  4320                           
  4321                           ;adc.c: 72:     temperatura =log(calc);
  4322  1408  0841               	movf	(ADC_Read_NTC@calc+3)^(0+128),w
  4323  1409  00B3               	movwf	(log@x+3)^(0+128)
  4324  140A  0840               	movf	(ADC_Read_NTC@calc+2)^(0+128),w
  4325  140B  00B2               	movwf	(log@x+2)^(0+128)
  4326  140C  083F               	movf	(ADC_Read_NTC@calc+1)^(0+128),w
  4327  140D  00B1               	movwf	(log@x+1)^(0+128)
  4328  140E  083E               	movf	ADC_Read_NTC@calc^(0+128),w
  4329  140F  00B0               	movwf	log@x^(0+128)
  4330  1410  268C  160A  118A   	fcall	_log
  4331  1413  0833               	movf	(?_log+3)^(0+128),w
  4332  1414  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4333  1415  0832               	movf	(?_log+2)^(0+128),w
  4334  1416  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4335  1417  0831               	movf	(?_log+1)^(0+128),w
  4336  1418  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4337  1419  0830               	movf	?_log^(0+128),w
  4338  141A  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4339                           
  4340                           ;adc.c: 73:     temperatura/=B;
  4341  141B  0842               	movf	ADC_Read_NTC@B^(0+128),w
  4342  141C  1283               	bcf	3,5	;RP0=0, select bank0
  4343  141D  00AB               	movwf	___xxtofl@val
  4344  141E  1683               	bsf	3,5	;RP0=1, select bank1
  4345  141F  0843               	movf	(ADC_Read_NTC@B+1)^(0+128),w
  4346  1420  1283               	bcf	3,5	;RP0=0, select bank0
  4347  1421  27BC  160A  118A   	fcall	PL54	;call to abstracted procedure
  4348  1424  24A9  160A  118A   	fcall	___xxtofl
  4349  1427  2775  160A  118A   	fcall	PL18	;call to abstracted procedure
  4350  142A  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4351  142B  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4352  142C  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4353  142D  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4354  142E  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4355  142F  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4356  1430  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4357  1431  00A4               	movwf	___fldiv@b^(0+128)
  4358  1432  2517  160A  118A   	fcall	___fldiv
  4359  1435  27A1  160A  118A   	fcall	PL34	;call to abstracted procedure
  4360                           
  4361                           ;adc.c: 74:     temperatura+=1/(25+273.15);
  4362  1438  303B               	movlw	59
  4363  1439  1283               	bcf	3,5	;RP0=0, select bank0
  4364  143A  00BC               	movwf	___fladd@b+3
  4365  143B  305B               	movlw	91
  4366  143C  00BB               	movwf	___fladd@b+2
  4367  143D  30CF               	movlw	207
  4368  143E  00BA               	movwf	___fladd@b+1
  4369  143F  300F               	movlw	15
  4370  1440  00B9               	movwf	___fladd@b
  4371  1441  1683               	bsf	3,5	;RP0=1, select bank1
  4372  1442  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4373  1443  1283               	bcf	3,5	;RP0=0, select bank0
  4374  1444  00C0               	movwf	___fladd@a+3
  4375  1445  1683               	bsf	3,5	;RP0=1, select bank1
  4376  1446  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4377  1447  1283               	bcf	3,5	;RP0=0, select bank0
  4378  1448  00BF               	movwf	___fladd@a+2
  4379  1449  1683               	bsf	3,5	;RP0=1, select bank1
  4380  144A  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4381  144B  1283               	bcf	3,5	;RP0=0, select bank0
  4382  144C  00BE               	movwf	___fladd@a+1
  4383  144D  1683               	bsf	3,5	;RP0=1, select bank1
  4384  144E  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4385  144F  1283               	bcf	3,5	;RP0=0, select bank0
  4386  1450  00BD               	movwf	___fladd@a
  4387  1451  21C8  160A  118A   	fcall	___fladd
  4388  1454  083C               	movf	?___fladd+3,w
  4389  1455  1683               	bsf	3,5	;RP0=1, select bank1
  4390  1456  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4391  1457  1283               	bcf	3,5	;RP0=0, select bank0
  4392  1458  083B               	movf	?___fladd+2,w
  4393  1459  1683               	bsf	3,5	;RP0=1, select bank1
  4394  145A  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4395  145B  1283               	bcf	3,5	;RP0=0, select bank0
  4396  145C  083A               	movf	?___fladd+1,w
  4397  145D  1683               	bsf	3,5	;RP0=1, select bank1
  4398  145E  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4399  145F  1283               	bcf	3,5	;RP0=0, select bank0
  4400  1460  0839               	movf	?___fladd,w
  4401  1461  1683               	bsf	3,5	;RP0=1, select bank1
  4402  1462  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4403                           
  4404                           ;adc.c: 75:     temperatura =1/temperatura;
  4405  1463  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4406  1464  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4407  1465  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4408  1466  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4409  1467  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4410  1468  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4411  1469  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4412  146A  00A0               	movwf	___fldiv@a^(0+128)
  4413  146B  303F               	movlw	63
  4414  146C  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4415  146D  3080               	movlw	128
  4416  146E  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4417  146F  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4418  1470  01A4               	clrf	___fldiv@b^(0+128)
  4419  1471  2517  160A  118A   	fcall	___fldiv
  4420  1474  27A1  160A  118A   	fcall	PL34	;call to abstracted procedure
  4421                           
  4422                           ;adc.c: 76:     temperatura-=273.15;
  4423  1477  3043               	movlw	67
  4424  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4425  1479  00D0               	movwf	___flsub@a+3
  4426  147A  3088               	movlw	136
  4427  147B  00CF               	movwf	___flsub@a+2
  4428  147C  3093               	movlw	147
  4429  147D  00CE               	movwf	___flsub@a+1
  4430  147E  3033               	movlw	51
  4431  147F  00CD               	movwf	___flsub@a
  4432  1480  1683               	bsf	3,5	;RP0=1, select bank1
  4433  1481  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4434  1482  1283               	bcf	3,5	;RP0=0, select bank0
  4435  1483  00D4               	movwf	___flsub@b+3
  4436  1484  1683               	bsf	3,5	;RP0=1, select bank1
  4437  1485  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4438  1486  1283               	bcf	3,5	;RP0=0, select bank0
  4439  1487  00D3               	movwf	___flsub@b+2
  4440  1488  1683               	bsf	3,5	;RP0=1, select bank1
  4441  1489  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4442  148A  1283               	bcf	3,5	;RP0=0, select bank0
  4443  148B  00D2               	movwf	___flsub@b+1
  4444  148C  1683               	bsf	3,5	;RP0=1, select bank1
  4445  148D  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4446  148E  1283               	bcf	3,5	;RP0=0, select bank0
  4447  148F  00D1               	movwf	___flsub@b
  4448  1490  2638               	fcall	___flsub
  4449  1491  0850               	movf	?___flsub+3,w
  4450  1492  1683               	bsf	3,5	;RP0=1, select bank1
  4451  1493  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4452  1494  1283               	bcf	3,5	;RP0=0, select bank0
  4453  1495  084F               	movf	?___flsub+2,w
  4454  1496  1683               	bsf	3,5	;RP0=1, select bank1
  4455  1497  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4456  1498  1283               	bcf	3,5	;RP0=0, select bank0
  4457  1499  084E               	movf	?___flsub+1,w
  4458  149A  1683               	bsf	3,5	;RP0=1, select bank1
  4459  149B  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4460  149C  1283               	bcf	3,5	;RP0=0, select bank0
  4461  149D  084D               	movf	?___flsub,w
  4462  149E  1683               	bsf	3,5	;RP0=1, select bank1
  4463  149F  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4464                           
  4465                           ;adc.c: 78:     return temperatura;
  4466  14A0  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4467  14A1  00BC               	movwf	(?_ADC_Read_NTC+3)^(0+128)
  4468  14A2  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4469  14A3  00BB               	movwf	(?_ADC_Read_NTC+2)^(0+128)
  4470  14A4  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4471  14A5  00BA               	movwf	(?_ADC_Read_NTC+1)^(0+128)
  4472  14A6  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4473  14A7  00B9               	movwf	?_ADC_Read_NTC^(0+128)
  4474  14A8  0008               	return
  4475  14A9                     __end_of_ADC_Read_NTC:	
  4476  14A9                     __ptext63:	
  4477 ;; *************** function ___xxtofl *****************
  4478 ;; Defined at:
  4479 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  sign            1    wreg     unsigned char 
  4482 ;;  val             4   11[BANK0 ] long 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  sign            1   19[BANK0 ] unsigned char 
  4485 ;;  arg             4   21[BANK0 ] unsigned long 
  4486 ;;  exp             1   20[BANK0 ] unsigned char 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  4   11[BANK0 ] unsigned char 
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 300/0
  4493 ;;		On exit  : 300/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4496 ;;      Params:         0       4       0       0       0
  4497 ;;      Locals:         0       6       0       0       0
  4498 ;;      Temps:          0       4       0       0       0
  4499 ;;      Totals:         0      14       0       0       0
  4500 ;;Total ram usage:       14 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    1
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_mediatemperaturaNTC
  4507 ;;		_Auto_Relay1
  4508 ;;		_Load_Work
  4509 ;;		_ADC_Read_NTC
  4510 ;;		_log
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           
  4515                           ;psect for function ___xxtofl
  4516  14A9                     ___xxtofl:	
  4517                           
  4518                           ;incstack = 0
  4519                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4520                           ;___xxtofl@sign stored from wreg
  4521  14A9  00B3               	movwf	___xxtofl@sign
  4522  14AA  0833               	movf	___xxtofl@sign,w
  4523  14AB  1D03               	btfss	3,2
  4524  14AC  1FAE               	btfss	___xxtofl@val+3,7
  4525  14AD  2CBE               	goto	l4348
  4526  14AE  092B               	comf	___xxtofl@val,w
  4527  14AF  00B5               	movwf	___xxtofl@arg
  4528  14B0  092C               	comf	___xxtofl@val+1,w
  4529  14B1  00B6               	movwf	___xxtofl@arg+1
  4530  14B2  092D               	comf	___xxtofl@val+2,w
  4531  14B3  00B7               	movwf	___xxtofl@arg+2
  4532  14B4  092E               	comf	___xxtofl@val+3,w
  4533  14B5  00B8               	movwf	___xxtofl@arg+3
  4534  14B6  0AB5               	incf	___xxtofl@arg,f
  4535  14B7  1903               	skipnz
  4536  14B8  0AB6               	incf	___xxtofl@arg+1,f
  4537  14B9  1903               	skipnz
  4538  14BA  0AB7               	incf	___xxtofl@arg+2,f
  4539  14BB  1903               	skipnz
  4540  14BC  0AB8               	incf	___xxtofl@arg+3,f
  4541  14BD  2CC6               	goto	l1424
  4542  14BE                     l4348:	
  4543  14BE  082E               	movf	___xxtofl@val+3,w
  4544  14BF  00B8               	movwf	___xxtofl@arg+3
  4545  14C0  082D               	movf	___xxtofl@val+2,w
  4546  14C1  00B7               	movwf	___xxtofl@arg+2
  4547  14C2  082C               	movf	___xxtofl@val+1,w
  4548  14C3  00B6               	movwf	___xxtofl@arg+1
  4549  14C4  082B               	movf	___xxtofl@val,w
  4550  14C5  00B5               	movwf	___xxtofl@arg
  4551  14C6                     l1424:	
  4552  14C6  082E               	movf	___xxtofl@val+3,w
  4553  14C7  042D               	iorwf	___xxtofl@val+2,w
  4554  14C8  042C               	iorwf	___xxtofl@val+1,w
  4555  14C9  042B               	iorwf	___xxtofl@val,w
  4556  14CA  1D03               	skipz
  4557  14CB  2CD1               	goto	l4352
  4558  14CC  01AB               	clrf	?___xxtofl
  4559  14CD  01AC               	clrf	?___xxtofl+1
  4560  14CE  01AD               	clrf	?___xxtofl+2
  4561  14CF  01AE               	clrf	?___xxtofl+3
  4562  14D0  0008               	return
  4563  14D1                     l4352:	
  4564  14D1  3096               	movlw	150
  4565  14D2  00B4               	movwf	___xxtofl@exp
  4566  14D3                     l4356:	
  4567  14D3  30FE               	movlw	254
  4568  14D4  0538               	andwf	___xxtofl@arg+3,w
  4569  14D5  1903               	btfsc	3,2
  4570  14D6  2CE7               	goto	l4360
  4571  14D7  0AB4               	incf	___xxtofl@exp,f
  4572  14D8  27C9  160A  118A   	fcall	PL66	;call to abstracted procedure
  4573  14DB  2CD3               	goto	l4356
  4574  14DC                     l4358:	
  4575  14DC  0AB4               	incf	___xxtofl@exp,f
  4576  14DD  0AB5               	incf	___xxtofl@arg,f
  4577  14DE  1903               	skipnz
  4578  14DF  0AB6               	incf	___xxtofl@arg+1,f
  4579  14E0  1903               	skipnz
  4580  14E1  0AB7               	incf	___xxtofl@arg+2,f
  4581  14E2  1903               	skipnz
  4582  14E3  0AB8               	incf	___xxtofl@arg+3,f
  4583  14E4  27C9  160A  118A   	fcall	PL66	;call to abstracted procedure
  4584  14E7                     l4360:	
  4585  14E7  30FF               	movlw	255
  4586  14E8  0538               	andwf	___xxtofl@arg+3,w
  4587  14E9  1903               	btfsc	3,2
  4588  14EA  2CF6               	goto	l4364
  4589  14EB  2CDC               	goto	l4358
  4590  14EC                     l4366:	
  4591  14EC  3002               	movlw	2
  4592  14ED  0234               	subwf	___xxtofl@exp,w
  4593  14EE  1C03               	btfss	3,0
  4594  14EF  2CF8               	goto	l1437
  4595  14F0  03B4               	decf	___xxtofl@exp,f
  4596  14F1  1003               	clrc
  4597  14F2  0DB5               	rlf	___xxtofl@arg,f
  4598  14F3  0DB6               	rlf	___xxtofl@arg+1,f
  4599  14F4  0DB7               	rlf	___xxtofl@arg+2,f
  4600  14F5  0DB8               	rlf	___xxtofl@arg+3,f
  4601  14F6                     l4364:	
  4602  14F6  1FB7               	btfss	___xxtofl@arg+2,7
  4603  14F7  2CEC               	goto	l4366
  4604  14F8                     l1437:	
  4605  14F8  1C34               	btfss	___xxtofl@exp,0
  4606  14F9  13B7               	bcf	___xxtofl@arg+2,7
  4607  14FA  1003               	clrc
  4608  14FB  0CB4               	rrf	___xxtofl@exp,f
  4609  14FC  0834               	movf	___xxtofl@exp,w
  4610  14FD  00B2               	movwf	??___xxtofl+3
  4611  14FE  01B1               	clrf	??___xxtofl+2
  4612  14FF  01B0               	clrf	??___xxtofl+1
  4613  1500  01AF               	clrf	??___xxtofl
  4614  1501  082F               	movf	??___xxtofl,w
  4615  1502  04B5               	iorwf	___xxtofl@arg,f
  4616  1503  0830               	movf	??___xxtofl+1,w
  4617  1504  04B6               	iorwf	___xxtofl@arg+1,f
  4618  1505  0831               	movf	??___xxtofl+2,w
  4619  1506  04B7               	iorwf	___xxtofl@arg+2,f
  4620  1507  0832               	movf	??___xxtofl+3,w
  4621  1508  04B8               	iorwf	___xxtofl@arg+3,f
  4622  1509  0833               	movf	___xxtofl@sign,w
  4623  150A  1D03               	btfss	3,2
  4624  150B  1FAE               	btfss	___xxtofl@val+3,7
  4625  150C  2D0E               	goto	l4378
  4626  150D  17B8               	bsf	___xxtofl@arg+3,7
  4627  150E                     l4378:	
  4628  150E  0838               	movf	___xxtofl@arg+3,w
  4629  150F  00AE               	movwf	?___xxtofl+3
  4630  1510  0837               	movf	___xxtofl@arg+2,w
  4631  1511  00AD               	movwf	?___xxtofl+2
  4632  1512  0836               	movf	___xxtofl@arg+1,w
  4633  1513  00AC               	movwf	?___xxtofl+1
  4634  1514  0835               	movf	___xxtofl@arg,w
  4635  1515  00AB               	movwf	?___xxtofl
  4636  1516  0008               	return
  4637  1517                     __end_of___xxtofl:	
  4638  1517                     __ptext40:	
  4639 ;; *************** function ___fldiv *****************
  4640 ;; Defined at:
  4641 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  a               4    0[BANK1 ] void 
  4644 ;;  b               4    4[BANK1 ] void 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  grs             4   19[BANK1 ] unsigned long 
  4647 ;;  rem             4   12[BANK1 ] unsigned long 
  4648 ;;  new_exp         2   17[BANK1 ] int 
  4649 ;;  aexp            1   24[BANK1 ] unsigned char 
  4650 ;;  bexp            1   23[BANK1 ] unsigned char 
  4651 ;;  sign            1   16[BANK1 ] unsigned char 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  4    0[BANK1 ] unsigned char 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0, btemp+1
  4656 ;; Tracked objects:
  4657 ;;		On entry : 300/100
  4658 ;;		On exit  : 300/100
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4661 ;;      Params:         0       0       8       0       0
  4662 ;;      Locals:         0       0      13       0       0
  4663 ;;      Temps:          0       0       4       0       0
  4664 ;;      Totals:         0       0      25       0       0
  4665 ;;Total ram usage:       25 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    1
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_mediatemperaturaNTC
  4672 ;;		_Load_Work
  4673 ;;		_ADC_Read_NTC
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           
  4678                           ;psect for function ___fldiv
  4679  1517                     ___fldiv:	
  4680                           
  4681                           ;incstack = 0
  4682                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4683  1517  0827               	movf	(___fldiv@b^(0+128)+3),w
  4684  1518  00B0               	movwf	___fldiv@sign^(0+128)
  4685  1519  3080               	movlw	128
  4686  151A  05B0               	andwf	___fldiv@sign^(0+128),f
  4687  151B  1003               	clrc
  4688  151C  0D27               	rlf	(___fldiv@b^(0+128)+3),w
  4689  151D  00B7               	movwf	___fldiv@bexp^(0+128)
  4690  151E  1BA6               	btfsc	(___fldiv@b^(0+128)+2),7
  4691  151F  1437               	bsf	___fldiv@bexp^(0+128),0
  4692  1520  0837               	movf	___fldiv@bexp^(0+128),w
  4693  1521  1903               	btfsc	3,2
  4694  1522  2D2C               	goto	l1340
  4695  1523  0F37               	incfsz	___fldiv@bexp^(0+128),w
  4696  1524  2D29               	goto	l1341
  4697  1525  01A4               	clrf	___fldiv@b^(0+128)
  4698  1526  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4699  1527  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4700  1528  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4701  1529                     l1341:	
  4702  1529  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  4703  152A  01A7               	clrf	(___fldiv@b^(0+128)+3)
  4704  152B  2D30               	goto	l4698
  4705  152C                     l1340:	
  4706  152C  01A4               	clrf	___fldiv@b^(0+128)
  4707  152D  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4708  152E  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4709  152F  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4710  1530                     l4698:	
  4711  1530  0823               	movf	(___fldiv@a^(0+128)+3),w
  4712  1531  3980               	andlw	128
  4713  1532  06B0               	xorwf	___fldiv@sign^(0+128),f
  4714  1533  1003               	clrc
  4715  1534  0D23               	rlf	(___fldiv@a^(0+128)+3),w
  4716  1535  00B8               	movwf	___fldiv@aexp^(0+128)
  4717  1536  1BA2               	btfsc	(___fldiv@a^(0+128)+2),7
  4718  1537  1438               	bsf	___fldiv@aexp^(0+128),0
  4719  1538  0838               	movf	___fldiv@aexp^(0+128),w
  4720  1539  1903               	btfsc	3,2
  4721  153A  2D44               	goto	l1344
  4722  153B  0F38               	incfsz	___fldiv@aexp^(0+128),w
  4723  153C  2D41               	goto	l1345
  4724  153D  01A0               	clrf	___fldiv@a^(0+128)
  4725  153E  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4726  153F  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4727  1540  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4728  1541                     l1345:	
  4729  1541  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  4730  1542  01A3               	clrf	(___fldiv@a^(0+128)+3)
  4731  1543  2D48               	goto	l4712
  4732  1544                     l1344:	
  4733  1544  01A0               	clrf	___fldiv@a^(0+128)
  4734  1545  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4735  1546  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4736  1547  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4737  1548                     l4712:	
  4738  1548  0823               	movf	(___fldiv@a+3)^(0+128),w
  4739  1549  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  4740  154A  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  4741  154B  0420               	iorwf	___fldiv@a^(0+128),w
  4742  154C  1D03               	skipz
  4743  154D  2D61               	goto	l4724
  4744  154E  3080               	movlw	128
  4745  154F  01A4               	clrf	___fldiv@b^(0+128)
  4746  1550  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4747  1551  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4748  1552  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4749  1553  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  4750  1554  307F               	movlw	127
  4751  1555  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  4752  1556                     L17:	
  4753  1556  0830               	movf	___fldiv@sign^(0+128),w
  4754  1557  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  4755  1558  0827               	movf	(___fldiv@b+3)^(0+128),w
  4756  1559  00A3               	movwf	(?___fldiv+3)^(0+128)
  4757  155A  0826               	movf	(___fldiv@b+2)^(0+128),w
  4758  155B  00A2               	movwf	(?___fldiv+2)^(0+128)
  4759  155C  0825               	movf	(___fldiv@b+1)^(0+128),w
  4760  155D  00A1               	movwf	(?___fldiv+1)^(0+128)
  4761  155E  0824               	movf	___fldiv@b^(0+128),w
  4762  155F  00A0               	movwf	?___fldiv^(0+128)
  4763  1560  0008               	return
  4764  1561                     l4724:	
  4765  1561  0837               	movf	___fldiv@bexp^(0+128),w
  4766  1562  1D03               	btfss	3,2
  4767  1563  2D69               	goto	l4732
  4768  1564  01A0               	clrf	?___fldiv^(0+128)
  4769  1565  01A1               	clrf	(?___fldiv+1)^(0+128)
  4770  1566  01A2               	clrf	(?___fldiv+2)^(0+128)
  4771  1567  01A3               	clrf	(?___fldiv+3)^(0+128)
  4772  1568  0008               	return
  4773  1569                     l4732:	
  4774  1569  0837               	movf	___fldiv@bexp^(0+128),w
  4775  156A  00B1               	movwf	___fldiv@new_exp^(0+128)
  4776  156B  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4777  156C  0838               	movf	___fldiv@aexp^(0+128),w
  4778  156D  02B1               	subwf	___fldiv@new_exp^(0+128),f
  4779  156E  1C03               	skipc
  4780  156F  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4781  1570  307F               	movlw	127
  4782  1571  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4783  1572  1803               	skipnc
  4784  1573  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  4785  1574  0827               	movf	(___fldiv@b+3)^(0+128),w
  4786  1575  00AF               	movwf	(___fldiv@rem+3)^(0+128)
  4787  1576  0826               	movf	(___fldiv@b+2)^(0+128),w
  4788  1577  00AE               	movwf	(___fldiv@rem+2)^(0+128)
  4789  1578  0825               	movf	(___fldiv@b+1)^(0+128),w
  4790  1579  00AD               	movwf	(___fldiv@rem+1)^(0+128)
  4791  157A  0824               	movf	___fldiv@b^(0+128),w
  4792  157B  00AC               	movwf	___fldiv@rem^(0+128)
  4793  157C  01A4               	clrf	___fldiv@b^(0+128)
  4794  157D  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4795  157E  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4796  157F  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4797  1580  01B3               	clrf	___fldiv@grs^(0+128)
  4798  1581  01B4               	clrf	(___fldiv@grs+1)^(0+128)
  4799  1582  01B5               	clrf	(___fldiv@grs+2)^(0+128)
  4800  1583  01B6               	clrf	(___fldiv@grs+3)^(0+128)
  4801  1584  01B8               	clrf	___fldiv@aexp^(0+128)
  4802  1585                     l4758:	
  4803  1585  301A               	movlw	26
  4804  1586  0238               	subwf	___fldiv@aexp^(0+128),w
  4805  1587  1803               	btfsc	3,0
  4806  1588  2DBE               	goto	l4760
  4807  1589  0838               	movf	___fldiv@aexp^(0+128),w
  4808  158A  1903               	btfsc	3,2
  4809  158B  2D9D               	goto	l4750
  4810  158C  1003               	clrc
  4811  158D  0DAC               	rlf	___fldiv@rem^(0+128),f
  4812  158E  0DAD               	rlf	(___fldiv@rem+1)^(0+128),f
  4813  158F  0DAE               	rlf	(___fldiv@rem+2)^(0+128),f
  4814  1590  0DAF               	rlf	(___fldiv@rem+3)^(0+128),f
  4815  1591  1003               	clrc
  4816  1592  0DA4               	rlf	___fldiv@b^(0+128),f
  4817  1593  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4818  1594  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4819  1595  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4820  1596  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4821  1597  1424               	bsf	___fldiv@b^(0+128),0
  4822  1598  1003               	clrc
  4823  1599  0DB3               	rlf	___fldiv@grs^(0+128),f
  4824  159A  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4825  159B  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4826  159C  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4827  159D                     l4750:	
  4828  159D  0823               	movf	(___fldiv@a+3)^(0+128),w
  4829  159E  022F               	subwf	(___fldiv@rem+3)^(0+128),w
  4830  159F  1D03               	skipz
  4831  15A0  2DAB               	goto	u4045
  4832  15A1  0822               	movf	(___fldiv@a+2)^(0+128),w
  4833  15A2  022E               	subwf	(___fldiv@rem+2)^(0+128),w
  4834  15A3  1D03               	skipz
  4835  15A4  2DAB               	goto	u4045
  4836  15A5  0821               	movf	(___fldiv@a+1)^(0+128),w
  4837  15A6  022D               	subwf	(___fldiv@rem+1)^(0+128),w
  4838  15A7  1D03               	skipz
  4839  15A8  2DAB               	goto	u4045
  4840  15A9  0820               	movf	___fldiv@a^(0+128),w
  4841  15AA  022C               	subwf	___fldiv@rem^(0+128),w
  4842  15AB                     u4045:	
  4843  15AB  1C03               	skipc
  4844  15AC  2DBC               	goto	l4756
  4845  15AD  1736               	bsf	(___fldiv@grs^(0+128)+3),6
  4846  15AE  0820               	movf	___fldiv@a^(0+128),w
  4847  15AF  02AC               	subwf	___fldiv@rem^(0+128),f
  4848  15B0  0821               	movf	(___fldiv@a+1)^(0+128),w
  4849  15B1  1C03               	skipc
  4850  15B2  0F21               	incfsz	(___fldiv@a+1)^(0+128),w
  4851  15B3  02AD               	subwf	(___fldiv@rem+1)^(0+128),f
  4852  15B4  0822               	movf	(___fldiv@a+2)^(0+128),w
  4853  15B5  1C03               	skipc
  4854  15B6  0F22               	incfsz	(___fldiv@a+2)^(0+128),w
  4855  15B7  02AE               	subwf	(___fldiv@rem+2)^(0+128),f
  4856  15B8  0823               	movf	(___fldiv@a+3)^(0+128),w
  4857  15B9  1C03               	skipc
  4858  15BA  0F23               	incfsz	(___fldiv@a+3)^(0+128),w
  4859  15BB  02AF               	subwf	(___fldiv@rem+3)^(0+128),f
  4860  15BC                     l4756:	
  4861  15BC  0AB8               	incf	___fldiv@aexp^(0+128),f
  4862  15BD  2D85               	goto	l4758
  4863  15BE                     l4760:	
  4864  15BE  082F               	movf	(___fldiv@rem+3)^(0+128),w
  4865  15BF  042E               	iorwf	(___fldiv@rem+2)^(0+128),w
  4866  15C0  042D               	iorwf	(___fldiv@rem+1)^(0+128),w
  4867  15C1  042C               	iorwf	___fldiv@rem^(0+128),w
  4868  15C2  1D03               	btfss	3,2
  4869  15C3  1433               	bsf	___fldiv@grs^(0+128),0
  4870  15C4                     l4774:	
  4871  15C4  1BA6               	btfsc	(___fldiv@b+2)^(0+128),7
  4872  15C5  2DD7               	goto	l4776
  4873  15C6  1003               	clrc
  4874  15C7  0DA4               	rlf	___fldiv@b^(0+128),f
  4875  15C8  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4876  15C9  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4877  15CA  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4878  15CB  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4879  15CC  1424               	bsf	___fldiv@b^(0+128),0
  4880  15CD  30FF               	movlw	-1
  4881  15CE  1003               	clrc
  4882  15CF  0DB3               	rlf	___fldiv@grs^(0+128),f
  4883  15D0  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4884  15D1  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4885  15D2  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4886  15D3  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4887  15D4  1C03               	skipc
  4888  15D5  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4889  15D6  2DC4               	goto	l4774
  4890  15D7                     l4776:	
  4891  15D7  01B8               	clrf	___fldiv@aexp^(0+128)
  4892  15D8  1FB6               	btfss	(___fldiv@grs+3)^(0+128),7
  4893  15D9  2DED               	goto	l4786
  4894  15DA  0833               	movf	___fldiv@grs^(0+128),w
  4895  15DB  00A8               	movwf	??___fldiv^(0+128)
  4896  15DC  0834               	movf	(___fldiv@grs+1)^(0+128),w
  4897  15DD  00A9               	movwf	(??___fldiv^(0+128)+1)
  4898  15DE  0835               	movf	(___fldiv@grs+2)^(0+128),w
  4899  15DF  00AA               	movwf	(??___fldiv^(0+128)+2)
  4900  15E0  307F               	movlw	127
  4901  15E1  0536               	andwf	(___fldiv@grs+3)^(0+128),w
  4902  15E2  00AB               	movwf	(??___fldiv^(0+128)+3)
  4903  15E3  082B               	movf	(??___fldiv+3)^(0+128),w
  4904  15E4  042A               	iorwf	(??___fldiv+2)^(0+128),w
  4905  15E5  0429               	iorwf	(??___fldiv+1)^(0+128),w
  4906  15E6  0428               	iorwf	??___fldiv^(0+128),w
  4907  15E7  1903               	skipnz
  4908  15E8  1824               	btfsc	___fldiv@b^(0+128),0
  4909  15E9  2DEB               	goto	l4782
  4910  15EA  2DED               	goto	l4786
  4911  15EB                     l4782:	
  4912  15EB  01B8               	clrf	___fldiv@aexp^(0+128)
  4913  15EC  0AB8               	incf	___fldiv@aexp^(0+128),f
  4914  15ED                     l4786:	
  4915  15ED  0838               	movf	___fldiv@aexp^(0+128),w
  4916  15EE  1903               	btfsc	3,2
  4917  15EF  2E01               	goto	l4796
  4918  15F0  0AA4               	incf	___fldiv@b^(0+128),f
  4919  15F1  1903               	skipnz
  4920  15F2  0AA5               	incf	(___fldiv@b+1)^(0+128),f
  4921  15F3  1903               	skipnz
  4922  15F4  0AA6               	incf	(___fldiv@b+2)^(0+128),f
  4923  15F5  1903               	skipnz
  4924  15F6  0AA7               	incf	(___fldiv@b+3)^(0+128),f
  4925  15F7  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  4926  15F8  2E01               	goto	l4796
  4927  15F9  0D27               	rlf	(___fldiv@b+3)^(0+128),w
  4928  15FA  0CA7               	rrf	(___fldiv@b+3)^(0+128),f
  4929  15FB  0CA6               	rrf	(___fldiv@b+2)^(0+128),f
  4930  15FC  0CA5               	rrf	(___fldiv@b+1)^(0+128),f
  4931  15FD  0CA4               	rrf	___fldiv@b^(0+128),f
  4932  15FE  0AB1               	incf	___fldiv@new_exp^(0+128),f
  4933  15FF  1903               	skipnz
  4934  1600  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  4935  1601                     l4796:	
  4936  1601  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  4937  1602  3A80               	xorlw	128
  4938  1603  00FF               	movwf	127
  4939  1604  3080               	movlw	128
  4940  1605  027F               	subwf	127,w
  4941  1606  1D03               	skipz
  4942  1607  2E0A               	goto	u4145
  4943  1608  30FF               	movlw	255
  4944  1609  0231               	subwf	___fldiv@new_exp^(0+128),w
  4945  160A                     u4145:	
  4946  160A  1C03               	skipc
  4947  160B  2E15               	goto	l4802
  4948  160C  30FF               	movlw	255
  4949  160D  1683               	bsf	3,5	;RP0=1, select bank1
  4950  160E  1303               	bcf	3,6	;RP1=0, select bank1
  4951  160F  00B1               	movwf	___fldiv@new_exp^(0+128)
  4952  1610  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4953  1611  01A4               	clrf	___fldiv@b^(0+128)
  4954  1612  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4955  1613  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4956  1614  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4957  1615                     l4802:	
  4958  1615  1683               	bsf	3,5	;RP0=1, select bank1
  4959  1616  1303               	bcf	3,6	;RP1=0, select bank1
  4960  1617  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  4961  1618  3A80               	xorlw	128
  4962  1619  00FF               	movwf	127
  4963  161A  3080               	movlw	128
  4964  161B  027F               	subwf	127,w
  4965  161C  1D03               	skipz
  4966  161D  2E20               	goto	u4155
  4967  161E  3001               	movlw	1
  4968  161F  0231               	subwf	___fldiv@new_exp^(0+128),w
  4969  1620                     u4155:	
  4970  1620  1803               	skipnc
  4971  1621  2E2B               	goto	l4808
  4972  1622  1683               	bsf	3,5	;RP0=1, select bank1
  4973  1623  1303               	bcf	3,6	;RP1=0, select bank1
  4974  1624  01B1               	clrf	___fldiv@new_exp^(0+128)
  4975  1625  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4976  1626  01A4               	clrf	___fldiv@b^(0+128)
  4977  1627  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4978  1628  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4979  1629  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4980  162A  01B0               	clrf	___fldiv@sign^(0+128)
  4981  162B                     l4808:	
  4982  162B  1683               	bsf	3,5	;RP0=1, select bank1
  4983  162C  1303               	bcf	3,6	;RP1=0, select bank1
  4984  162D  0831               	movf	___fldiv@new_exp^(0+128),w
  4985  162E  00B7               	movwf	___fldiv@bexp^(0+128)
  4986  162F  1C37               	btfss	___fldiv@bexp^(0+128),0
  4987  1630  2E33               	goto	l1369
  4988  1631  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  4989  1632  2E34               	goto	l4814
  4990  1633                     l1369:	
  4991  1633  13A6               	bcf	(___fldiv@b^(0+128)+2),7
  4992  1634                     l4814:	
  4993  1634  1003               	clrc
  4994  1635  0C37               	rrf	___fldiv@bexp^(0+128),w
  4995  1636  00A7               	movwf	(___fldiv@b^(0+128)+3)
  4996  1637  2D56               	goto	L17
  4997  1638                     __end_of___fldiv:	
  4998  1638                     __ptext67:	
  4999 ;; *************** function ___flsub *****************
  5000 ;; Defined at:
  5001 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  a               4   45[BANK0 ] void 
  5004 ;;  b               4   49[BANK0 ] void 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  4   45[BANK0 ] void 
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5011 ;; Tracked objects:
  5012 ;;		On entry : 300/0
  5013 ;;		On exit  : 300/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5016 ;;      Params:         0       8       0       0       0
  5017 ;;      Locals:         0       0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0
  5019 ;;      Totals:         0       8       0       0       0
  5020 ;;Total ram usage:        8 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:    2
  5023 ;; This function calls:
  5024 ;;		___fladd
  5025 ;; This function is called by:
  5026 ;;		_Auto_Relay0
  5027 ;;		_Auto_Relay1
  5028 ;;		_ADC_Read_NTC
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           
  5033                           ;psect for function ___flsub
  5034  1638                     ___flsub:	
  5035                           
  5036                           ;incstack = 0
  5037                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5038  1638  3080               	movlw	128
  5039  1639  06D0               	xorwf	___flsub@a+3,f
  5040  163A  0854               	movf	___flsub@b+3,w
  5041  163B  00BC               	movwf	___fladd@b+3
  5042  163C  0853               	movf	___flsub@b+2,w
  5043  163D  00BB               	movwf	___fladd@b+2
  5044  163E  0852               	movf	___flsub@b+1,w
  5045  163F  00BA               	movwf	___fladd@b+1
  5046  1640  0851               	movf	___flsub@b,w
  5047  1641  00B9               	movwf	___fladd@b
  5048  1642  0850               	movf	___flsub@a+3,w
  5049  1643  00C0               	movwf	___fladd@a+3
  5050  1644  084F               	movf	___flsub@a+2,w
  5051  1645  00BF               	movwf	___fladd@a+2
  5052  1646  084E               	movf	___flsub@a+1,w
  5053  1647  00BE               	movwf	___fladd@a+1
  5054  1648  084D               	movf	___flsub@a,w
  5055  1649  00BD               	movwf	___fladd@a
  5056  164A  21C8               	fcall	___fladd
  5057  164B  083C               	movf	?___fladd+3,w
  5058  164C  00D0               	movwf	?___flsub+3
  5059  164D  083B               	movf	?___fladd+2,w
  5060  164E  00CF               	movwf	?___flsub+2
  5061  164F  083A               	movf	?___fladd+1,w
  5062  1650  00CE               	movwf	?___flsub+1
  5063  1651  0839               	movf	?___fladd,w
  5064  1652  00CD               	movwf	?___flsub
  5065  1653  0008               	return
  5066  1654                     __end_of___flsub:	
  5067  1654                     __ptext34:	
  5068 ;; *************** function ___lwdiv *****************
  5069 ;; Defined at:
  5070 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;  divisor         2    0[BANK0 ] unsigned int 
  5073 ;;  dividend        2    2[BANK0 ] unsigned int 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  quotient        2    5[BANK0 ] unsigned int 
  5076 ;;  counter         1    4[BANK0 ] unsigned char 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  2    0[BANK0 ] unsigned int 
  5079 ;; Registers used:
  5080 ;;		wreg, status,2, status,0
  5081 ;; Tracked objects:
  5082 ;;		On entry : 300/0
  5083 ;;		On exit  : 300/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5086 ;;      Params:         0       4       0       0       0
  5087 ;;      Locals:         0       3       0       0       0
  5088 ;;      Temps:          0       0       0       0       0
  5089 ;;      Totals:         0       7       0       0       0
  5090 ;;Total ram usage:        7 bytes
  5091 ;; Hardware stack levels used:    1
  5092 ;; Hardware stack levels required when called:    1
  5093 ;; This function calls:
  5094 ;;		Nothing
  5095 ;; This function is called by:
  5096 ;;		_ADC_Read_NTC
  5097 ;;		_PROCULUS_Buzzer
  5098 ;;		_utoa
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           
  5103                           ;psect for function ___lwdiv
  5104  1654                     ___lwdiv:	
  5105                           
  5106                           ;incstack = 0
  5107                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5108  1654  01A5               	clrf	___lwdiv@quotient
  5109  1655  01A6               	clrf	___lwdiv@quotient+1
  5110  1656  0820               	movf	___lwdiv@divisor,w
  5111  1657  0421               	iorwf	___lwdiv@divisor+1,w
  5112  1658  1903               	btfsc	3,2
  5113  1659  2E79               	goto	l6274
  5114  165A  01A4               	clrf	___lwdiv@counter
  5115  165B                     L15:	
  5116  165B  0AA4               	incf	___lwdiv@counter,f
  5117  165C  1BA1               	btfsc	___lwdiv@divisor+1,7
  5118  165D  2E62               	goto	l6262
  5119  165E  1003               	clrc
  5120  165F  0DA0               	rlf	___lwdiv@divisor,f
  5121  1660  0DA1               	rlf	___lwdiv@divisor+1,f
  5122  1661  2E5B               	goto	L15
  5123  1662                     l6262:	
  5124  1662  1003               	clrc
  5125  1663  0DA5               	rlf	___lwdiv@quotient,f
  5126  1664  0DA6               	rlf	___lwdiv@quotient+1,f
  5127  1665  0821               	movf	___lwdiv@divisor+1,w
  5128  1666  0223               	subwf	___lwdiv@dividend+1,w
  5129  1667  1D03               	skipz
  5130  1668  2E6B               	goto	u5575
  5131  1669  0820               	movf	___lwdiv@divisor,w
  5132  166A  0222               	subwf	___lwdiv@dividend,w
  5133  166B                     u5575:	
  5134  166B  1C03               	skipc
  5135  166C  2E75               	goto	L16
  5136  166D  0820               	movf	___lwdiv@divisor,w
  5137  166E  02A2               	subwf	___lwdiv@dividend,f
  5138  166F  0821               	movf	___lwdiv@divisor+1,w
  5139  1670  1C03               	skipc
  5140  1671  03A3               	decf	___lwdiv@dividend+1,f
  5141  1672  02A3               	subwf	___lwdiv@dividend+1,f
  5142  1673  1425               	bsf	___lwdiv@quotient,0
  5143  1674  1003               	clrc
  5144  1675                     L16:	
  5145  1675  0CA1               	rrf	___lwdiv@divisor+1,f
  5146  1676  0CA0               	rrf	___lwdiv@divisor,f
  5147  1677  0BA4               	decfsz	___lwdiv@counter,f
  5148  1678  2E62               	goto	l6262
  5149  1679                     l6274:	
  5150  1679  0826               	movf	___lwdiv@quotient+1,w
  5151  167A  00A1               	movwf	?___lwdiv+1
  5152  167B  0825               	movf	___lwdiv@quotient,w
  5153  167C  00A0               	movwf	?___lwdiv
  5154  167D  0008               	return
  5155  167E                     __end_of___lwdiv:	
  5156  167E                     __ptext10:	
  5157 ;; *************** function _captura *****************
  5158 ;; Defined at:
  5159 ;;		line 123 in file "adc.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;		None
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  2    0[BANK0 ] unsigned int 
  5166 ;; Registers used:
  5167 ;;		wreg
  5168 ;; Tracked objects:
  5169 ;;		On entry : 300/100
  5170 ;;		On exit  : 300/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5173 ;;      Params:         0       2       0       0       0
  5174 ;;      Locals:         0       0       0       0       0
  5175 ;;      Temps:          0       0       0       0       0
  5176 ;;      Totals:         0       2       0       0       0
  5177 ;;Total ram usage:        2 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    1
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_ADC_Read_NTC
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           
  5188                           ;psect for function _captura
  5189  167E                     _captura:	
  5190                           
  5191                           ;adc.c: 124:     ADCON0bits.GO=1;
  5192                           
  5193                           ;incstack = 0
  5194                           ; Regs used in _captura: [wreg]
  5195  167E  1283               	bcf	3,5	;RP0=0, select bank0
  5196  167F  149F               	bsf	31,1	;volatile
  5197  1680                     l450:	
  5198                           ;adc.c: 128:           }
  5199                           
  5200                           
  5201                           ;adc.c: 125:     while(ADCON0bits.GO)
  5202  1680  189F               	btfsc	31,1	;volatile
  5203  1681  2E80               	goto	l450
  5204                           
  5205                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  5206  1682  081E               	movf	30,w	;volatile
  5207  1683  00A1               	movwf	?_captura+1
  5208  1684  01A0               	clrf	?_captura
  5209  1685  1683               	bsf	3,5	;RP0=1, select bank1
  5210  1686  081E               	movf	30,w	;volatile
  5211  1687  1283               	bcf	3,5	;RP0=0, select bank0
  5212  1688  07A0               	addwf	?_captura,f
  5213  1689  1803               	skipnc
  5214  168A  0AA1               	incf	?_captura+1,f
  5215  168B  0008               	return
  5216  168C                     __end_of_captura:	
  5217  168C                     __ptext6:	
  5218 ;; *************** function _log *****************
  5219 ;; Defined at:
  5220 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\log.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  x               4   16[BANK1 ] float 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  exponent        2   78[BANK0 ] int 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  4   16[BANK1 ] int 
  5227 ;; Registers used:
  5228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 300/100
  5231 ;;		On exit  : 300/100
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5234 ;;      Params:         0       0       4       0       0
  5235 ;;      Locals:         0       2       0       0       0
  5236 ;;      Temps:          0       0       0       0       0
  5237 ;;      Totals:         0       2       4       0       0
  5238 ;;Total ram usage:        6 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    4
  5241 ;; This function calls:
  5242 ;;		___fladd
  5243 ;;		___fleq
  5244 ;;		___flge
  5245 ;;		___flmul
  5246 ;;		___xxtofl
  5247 ;;		_eval_poly
  5248 ;;		_frexp
  5249 ;; This function is called by:
  5250 ;;		_ADC_Read_NTC
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           
  5255                           ;psect for function _log
  5256  168C                     _log:	
  5257                           
  5258                           ;incstack = 0
  5259                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5260  168C  0833               	movf	(log@x+3)^(0+128),w
  5261  168D  1283               	bcf	3,5	;RP0=0, select bank0
  5262  168E  00D8               	movwf	___flge@ff1+3
  5263  168F  1683               	bsf	3,5	;RP0=1, select bank1
  5264  1690  0832               	movf	(log@x+2)^(0+128),w
  5265  1691  1283               	bcf	3,5	;RP0=0, select bank0
  5266  1692  00D7               	movwf	___flge@ff1+2
  5267  1693  1683               	bsf	3,5	;RP0=1, select bank1
  5268  1694  0831               	movf	(log@x+1)^(0+128),w
  5269  1695  1283               	bcf	3,5	;RP0=0, select bank0
  5270  1696  00D6               	movwf	___flge@ff1+1
  5271  1697  1683               	bsf	3,5	;RP0=1, select bank1
  5272  1698  0830               	movf	log@x^(0+128),w
  5273  1699  1283               	bcf	3,5	;RP0=0, select bank0
  5274  169A  00D5               	movwf	___flge@ff1
  5275  169B  01D9               	clrf	___flge@ff2
  5276  169C  01DA               	clrf	___flge@ff2+1
  5277  169D  01DB               	clrf	___flge@ff2+2
  5278  169E  01DC               	clrf	___flge@ff2+3
  5279  169F  120A  118A  241E  160A  118A  	fcall	___flge
  5280  16A4  1803               	btfsc	3,0
  5281  16A5  2EA7               	goto	l6462
  5282  16A6  2FC3               	ljmp	PL62	;call to abstracted procedure
  5283  16A7                     l6462:	
  5284  16A7  1683               	bsf	3,5	;RP0=1, select bank1
  5285  16A8  0833               	movf	(log@x+3)^(0+128),w
  5286  16A9  1283               	bcf	3,5	;RP0=0, select bank0
  5287  16AA  00A3               	movwf	___fleq@ff1+3
  5288  16AB  1683               	bsf	3,5	;RP0=1, select bank1
  5289  16AC  0832               	movf	(log@x+2)^(0+128),w
  5290  16AD  1283               	bcf	3,5	;RP0=0, select bank0
  5291  16AE  00A2               	movwf	___fleq@ff1+2
  5292  16AF  1683               	bsf	3,5	;RP0=1, select bank1
  5293  16B0  0831               	movf	(log@x+1)^(0+128),w
  5294  16B1  1283               	bcf	3,5	;RP0=0, select bank0
  5295  16B2  00A1               	movwf	___fleq@ff1+1
  5296  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  5297  16B4  0830               	movf	log@x^(0+128),w
  5298  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  5299  16B6  120A  118A  27AB  160A  118A  	fcall	PL74	;call to abstracted procedure
  5300  16BB  120A  118A  2775  160A  118A  	fcall	___fleq
  5301  16C0  1C03               	btfss	3,0
  5302  16C1  2EC3               	goto	l6466
  5303  16C2  2FC3               	ljmp	PL62	;call to abstracted procedure
  5304  16C3                     l6466:	
  5305  16C3  30BF               	movlw	191
  5306  16C4  00BC               	movwf	___fladd@b+3
  5307  16C5  3080               	movlw	128
  5308  16C6  00BB               	movwf	___fladd@b+2
  5309  16C7  3040               	movlw	64
  5310  16C8  01BA               	clrf	___fladd@b+1
  5311  16C9  01B9               	clrf	___fladd@b
  5312  16CA  00D8               	movwf	___flmul@b+3
  5313  16CB  306E               	movlw	(low (log@exponent| 0))& (0+255)
  5314  16CC  01D7               	clrf	___flmul@b+2
  5315  16CD  01D6               	clrf	___flmul@b+1
  5316  16CE  01D5               	clrf	___flmul@b
  5317  16CF  00B0               	movwf	frexp@eptr
  5318  16D0  1683               	bsf	3,5	;RP0=1, select bank1
  5319  16D1  0833               	movf	(log@x+3)^(0+128),w
  5320  16D2  1283               	bcf	3,5	;RP0=0, select bank0
  5321  16D3  00AF               	movwf	frexp@value+3
  5322  16D4  1683               	bsf	3,5	;RP0=1, select bank1
  5323  16D5  0832               	movf	(log@x+2)^(0+128),w
  5324  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  5325  16D7  00AE               	movwf	frexp@value+2
  5326  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  5327  16D9  0831               	movf	(log@x+1)^(0+128),w
  5328  16DA  1283               	bcf	3,5	;RP0=0, select bank0
  5329  16DB  00AD               	movwf	frexp@value+1
  5330  16DC  1683               	bsf	3,5	;RP0=1, select bank1
  5331  16DD  0830               	movf	log@x^(0+128),w
  5332  16DE  1283               	bcf	3,5	;RP0=0, select bank0
  5333  16DF  00AC               	movwf	frexp@value
  5334  16E0  120A  118A  272E  160A  118A  	fcall	_frexp
  5335  16E5  082F               	movf	?_frexp+3,w
  5336  16E6  00DC               	movwf	___flmul@a+3
  5337  16E7  082E               	movf	?_frexp+2,w
  5338  16E8  00DB               	movwf	___flmul@a+2
  5339  16E9  082D               	movf	?_frexp+1,w
  5340  16EA  00DA               	movwf	___flmul@a+1
  5341  16EB  082C               	movf	?_frexp,w
  5342  16EC  00D9               	movwf	___flmul@a
  5343  16ED  120A  118A  20EB  160A  118A  	fcall	___flmul
  5344  16F2  278F  160A  118A   	fcall	PL28	;call to abstracted procedure
  5345  16F5  21C8  160A  118A   	fcall	___fladd
  5346  16F8  083C               	movf	?___fladd+3,w
  5347  16F9  1683               	bsf	3,5	;RP0=1, select bank1
  5348  16FA  00B3               	movwf	(log@x+3)^(0+128)
  5349  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  5350  16FC  083B               	movf	?___fladd+2,w
  5351  16FD  1683               	bsf	3,5	;RP0=1, select bank1
  5352  16FE  00B2               	movwf	(log@x+2)^(0+128)
  5353  16FF  1283               	bcf	3,5	;RP0=0, select bank0
  5354  1700  083A               	movf	?___fladd+1,w
  5355  1701  1683               	bsf	3,5	;RP0=1, select bank1
  5356  1702  00B1               	movwf	(log@x+1)^(0+128)
  5357  1703  1283               	bcf	3,5	;RP0=0, select bank0
  5358  1704  0839               	movf	?___fladd,w
  5359  1705  1683               	bsf	3,5	;RP0=1, select bank1
  5360  1706  00B0               	movwf	log@x^(0+128)
  5361  1707  30FF               	movlw	-1
  5362  1708  1283               	bcf	3,5	;RP0=0, select bank0
  5363  1709  07EE               	addwf	log@exponent,f
  5364  170A  1C03               	skipc
  5365  170B  03EF               	decf	log@exponent+1,f
  5366  170C  1683               	bsf	3,5	;RP0=1, select bank1
  5367  170D  0833               	movf	(log@x+3)^(0+128),w
  5368  170E  00A3               	movwf	(eval_poly@x+3)^(0+128)
  5369  170F  0832               	movf	(log@x+2)^(0+128),w
  5370  1710  00A2               	movwf	(eval_poly@x+2)^(0+128)
  5371  1711  0831               	movf	(log@x+1)^(0+128),w
  5372  1712  00A1               	movwf	(eval_poly@x+1)^(0+128)
  5373  1713  0830               	movf	log@x^(0+128),w
  5374  1714  00A0               	movwf	eval_poly@x^(0+128)
  5375  1715  3001               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  5376  1716  00A4               	movwf	eval_poly@d^(0+128)
  5377  1717  3008               	movlw	8
  5378  1718  00A5               	movwf	eval_poly@n^(0+128)
  5379  1719  01A6               	clrf	(eval_poly@n+1)^(0+128)
  5380  171A  211E  160A  118A   	fcall	_eval_poly
  5381  171D  0823               	movf	(?_eval_poly+3)^(0+128),w
  5382  171E  00B3               	movwf	(log@x+3)^(0+128)
  5383  171F  0822               	movf	(?_eval_poly+2)^(0+128),w
  5384  1720  00B2               	movwf	(log@x+2)^(0+128)
  5385  1721  0821               	movf	(?_eval_poly+1)^(0+128),w
  5386  1722  00B1               	movwf	(log@x+1)^(0+128)
  5387  1723  0820               	movf	?_eval_poly^(0+128),w
  5388  1724  00B0               	movwf	log@x^(0+128)
  5389  1725  0833               	movf	(log@x+3)^(0+128),w
  5390  1726  1283               	bcf	3,5	;RP0=0, select bank0
  5391  1727  00BC               	movwf	___fladd@b+3
  5392  1728  1683               	bsf	3,5	;RP0=1, select bank1
  5393  1729  0832               	movf	(log@x+2)^(0+128),w
  5394  172A  1283               	bcf	3,5	;RP0=0, select bank0
  5395  172B  00BB               	movwf	___fladd@b+2
  5396  172C  1683               	bsf	3,5	;RP0=1, select bank1
  5397  172D  0831               	movf	(log@x+1)^(0+128),w
  5398  172E  1283               	bcf	3,5	;RP0=0, select bank0
  5399  172F  00BA               	movwf	___fladd@b+1
  5400  1730  1683               	bsf	3,5	;RP0=1, select bank1
  5401  1731  0830               	movf	log@x^(0+128),w
  5402  1732  1283               	bcf	3,5	;RP0=0, select bank0
  5403  1733  00B9               	movwf	___fladd@b
  5404  1734  303F               	movlw	63
  5405  1735  00D8               	movwf	___flmul@b+3
  5406  1736  3031               	movlw	49
  5407  1737  00D7               	movwf	___flmul@b+2
  5408  1738  3072               	movlw	114
  5409  1739  00D6               	movwf	___flmul@b+1
  5410  173A  3018               	movlw	24
  5411  173B  00D5               	movwf	___flmul@b
  5412  173C  086E               	movf	log@exponent,w
  5413  173D  00AB               	movwf	___xxtofl@val
  5414  173E  086F               	movf	log@exponent+1,w
  5415  173F  27BC  160A  118A   	fcall	PL54	;call to abstracted procedure
  5416  1742  24A9  160A  118A   	fcall	___xxtofl
  5417  1745  27AA               	fcall	PL48	;call to abstracted procedure
  5418  1746  120A  118A  20EB  160A  118A  	fcall	___flmul
  5419  174B  278F  160A  118A   	fcall	PL28	;call to abstracted procedure
  5420  174E  21C8               	fcall	___fladd
  5421  174F  083C               	movf	?___fladd+3,w
  5422  1750  1683               	bsf	3,5	;RP0=1, select bank1
  5423  1751  00B3               	movwf	(?_log+3)^(0+128)
  5424  1752  1283               	bcf	3,5	;RP0=0, select bank0
  5425  1753  083B               	movf	?___fladd+2,w
  5426  1754  1683               	bsf	3,5	;RP0=1, select bank1
  5427  1755  00B2               	movwf	(?_log+2)^(0+128)
  5428  1756  1283               	bcf	3,5	;RP0=0, select bank0
  5429  1757  083A               	movf	?___fladd+1,w
  5430  1758  1683               	bsf	3,5	;RP0=1, select bank1
  5431  1759  00B1               	movwf	(?_log+1)^(0+128)
  5432  175A  1283               	bcf	3,5	;RP0=0, select bank0
  5433  175B  0839               	movf	?___fladd,w
  5434  175C  1683               	bsf	3,5	;RP0=1, select bank1
  5435  175D  00B0               	movwf	?_log^(0+128)
  5436  175E  0008               	return
  5437  175F                     __end_of_log:	
  5438  175F                     __ptext4:	
  5439 ;; *************** function _Package_Usart_is_for_me *****************
  5440 ;; Defined at:
  5441 ;;		line 8 in file "protocolo.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;		None
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  retorno         1    0[BANK0 ] unsigned char 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  1    wreg      unsigned char 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0
  5450 ;; Tracked objects:
  5451 ;;		On entry : 300/100
  5452 ;;		On exit  : 300/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5455 ;;      Params:         0       0       0       0       0
  5456 ;;      Locals:         0       1       0       0       0
  5457 ;;      Temps:          0       0       0       0       0
  5458 ;;      Totals:         0       1       0       0       0
  5459 ;;Total ram usage:        1 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; Hardware stack levels required when called:    1
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_mediatemperaturaNTC
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           
  5470                           ;psect for function _Package_Usart_is_for_me
  5471  175F                     _Package_Usart_is_for_me:	
  5472                           
  5473                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5474                           
  5475                           ;incstack = 0
  5476                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5477  175F  1C76               	btfss	_generic_status,0
  5478  1760  2F70               	goto	l5256
  5479                           
  5480                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5481  1761  1283               	bcf	3,5	;RP0=0, select bank2
  5482  1762  1703               	bsf	3,6	;RP1=1, select bank2
  5483  1763  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5484  1764  1683               	bsf	3,5	;RP0=1, select bank3
  5485  1765  0634               	xorwf	_Board_Number^(0+384),w
  5486  1766  1903               	skipnz
  5487  1767  2F6B               	goto	l738
  5488  1768  1283               	bcf	3,5	;RP0=0, select bank2
  5489  1769  0F13               	incfsz	(_usart_buffer^(0+256)+3),w	;volatile
  5490  176A  2F70               	goto	l5256
  5491  176B                     l738:	
  5492                           
  5493                           ;protocolo.c: 13:             retorno=1;
  5494  176B  1283               	bcf	3,5	;RP0=0, select bank0
  5495  176C  1303               	bcf	3,6	;RP1=0, select bank0
  5496  176D  01A0               	clrf	Package_Usart_is_for_me@retorno
  5497  176E  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5498  176F  2F73               	goto	l5260
  5499  1770                     l5256:	
  5500                           
  5501                           ;protocolo.c: 15:             retorno=0;
  5502  1770  1283               	bcf	3,5	;RP0=0, select bank0
  5503  1771  1303               	bcf	3,6	;RP1=0, select bank0
  5504  1772  01A0               	clrf	Package_Usart_is_for_me@retorno
  5505  1773                     l5260:	
  5506                           
  5507                           ;protocolo.c: 21:      return retorno;
  5508  1773  0820               	movf	Package_Usart_is_for_me@retorno,w
  5509  1774  0008               	return
  5510  1775                     __end_of_Package_Usart_is_for_me:	
  5511  1775                     PL18:	
  5512  1775  082E               	movf	?___xxtofl+3,w
  5513  1776  1683               	bsf	3,5	;RP0=1, select bank1
  5514  1777  00A3               	movwf	(___fldiv@a+3)^(0+128)
  5515  1778  1283               	bcf	3,5	;RP0=0, select bank0
  5516  1779  082D               	movf	?___xxtofl+2,w
  5517  177A  1683               	bsf	3,5	;RP0=1, select bank1
  5518  177B  00A2               	movwf	(___fldiv@a+2)^(0+128)
  5519  177C  1283               	bcf	3,5	;RP0=0, select bank0
  5520  177D  082C               	movf	?___xxtofl+1,w
  5521  177E  1683               	bsf	3,5	;RP0=1, select bank1
  5522  177F  00A1               	movwf	(___fldiv@a+1)^(0+128)
  5523  1780  1283               	bcf	3,5	;RP0=0, select bank0
  5524  1781  082B               	movf	?___xxtofl,w
  5525  1782  1683               	bsf	3,5	;RP0=1, select bank1
  5526  1783  00A0               	movwf	___fldiv@a^(0+128)
  5527  1784  0008               	return
  5528  1785                     __end_ofPL18:	
  5529  1785                     PL24:	
  5530  1785  1283               	bcf	3,5	;RP0=0, select bank0
  5531  1786  00AB               	movwf	___xxtofl@val
  5532  1787  1683               	bsf	3,5	;RP0=1, select bank1
  5533  1788  084A               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  5534  1789  1283               	bcf	3,5	;RP0=0, select bank0
  5535  178A  00AC               	movwf	___xxtofl@val+1
  5536  178B  3000               	movlw	0
  5537  178C  01AD               	clrf	___xxtofl@val+2
  5538  178D  01AE               	clrf	___xxtofl@val+3
  5539  178E  0008               	return
  5540  178F                     __end_ofPL24:	
  5541  178F                     PL28:	
  5542  178F  0858               	movf	?___flmul+3,w
  5543  1790  00C0               	movwf	___fladd@a+3
  5544  1791  0857               	movf	?___flmul+2,w
  5545  1792  00BF               	movwf	___fladd@a+2
  5546  1793  0856               	movf	?___flmul+1,w
  5547  1794  00BE               	movwf	___fladd@a+1
  5548  1795  0855               	movf	?___flmul,w
  5549  1796  00BD               	movwf	___fladd@a
  5550  1797  0008               	return
  5551  1798                     __end_ofPL28:	
  5552  1798                     PL32:	
  5553  1798  082E               	movf	?___xxtofl+3,w
  5554  1799  00D0               	movwf	___flsub@a+3
  5555  179A  082D               	movf	?___xxtofl+2,w
  5556  179B  00CF               	movwf	___flsub@a+2
  5557  179C  082C               	movf	?___xxtofl+1,w
  5558  179D  00CE               	movwf	___flsub@a+1
  5559  179E  082B               	movf	?___xxtofl,w
  5560  179F  00CD               	movwf	___flsub@a
  5561  17A0  0008               	return
  5562  17A1                     __end_ofPL32:	
  5563  17A1                     PL34:	
  5564  17A1  0823               	movf	(?___fldiv+3)^(0+128),w
  5565  17A2  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  5566  17A3  0822               	movf	(?___fldiv+2)^(0+128),w
  5567  17A4  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  5568  17A5  0821               	movf	(?___fldiv+1)^(0+128),w
  5569  17A6  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  5570  17A7  0820               	movf	?___fldiv^(0+128),w
  5571  17A8  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  5572  17A9  0008               	return
  5573  17AA                     __end_ofPL34:	
  5574  17AA                     PL48:	
  5575  17AA  082E               	movf	?___xxtofl+3,w
  5576  17AB  00DC               	movwf	___flmul@a+3
  5577  17AC  082D               	movf	?___xxtofl+2,w
  5578  17AD  00DB               	movwf	___flmul@a+2
  5579  17AE  082C               	movf	?___xxtofl+1,w
  5580  17AF  00DA               	movwf	___flmul@a+1
  5581  17B0  082B               	movf	?___xxtofl,w
  5582  17B1  00D9               	movwf	___flmul@a
  5583  17B2  0008               	return
  5584  17B3                     __end_ofPL48:	
  5585  17B3                     PL50:	
  5586  17B3  1839               	btfsc	___fladd@b,0
  5587  17B4  17CC               	bsf	___fladd@grs,7
  5588  17B5  0D3C               	rlf	___fladd@b+3,w
  5589  17B6  0CBC               	rrf	___fladd@b+3,f
  5590  17B7  0CBB               	rrf	___fladd@b+2,f
  5591  17B8  0CBA               	rrf	___fladd@b+1,f
  5592  17B9  0CB9               	rrf	___fladd@b,f
  5593  17BA  0ACB               	incf	___fladd@bexp,f
  5594  17BB  0008               	return
  5595  17BC                     __end_ofPL50:	
  5596  17BC                     PL54:	
  5597  17BC  00AC               	movwf	___xxtofl@val+1
  5598  17BD  3000               	movlw	0
  5599  17BE  1BAC               	btfsc	___xxtofl@val+1,7
  5600  17BF  30FF               	movlw	255
  5601  17C0  00AD               	movwf	___xxtofl@val+2
  5602  17C1  00AE               	movwf	___xxtofl@val+3
  5603  17C2  3401               	retlw	1
  5604  17C3                     __end_ofPL54:	
  5605  17C3                     PL62:	
  5606  17C3  1683               	bsf	3,5	;RP0=1, select bank1
  5607  17C4  01B0               	clrf	?_log^(0+128)
  5608  17C5  01B1               	clrf	(?_log+1)^(0+128)
  5609  17C6  01B2               	clrf	(?_log+2)^(0+128)
  5610  17C7  01B3               	clrf	(?_log+3)^(0+128)
  5611  17C8  0008               	return
  5612  17C9                     __end_ofPL62:	
  5613  17C9                     PL66:	
  5614  17C9  1003               	clrc
  5615  17CA  0CB8               	rrf	___xxtofl@arg+3,f
  5616  17CB  0CB7               	rrf	___xxtofl@arg+2,f
  5617  17CC  0CB6               	rrf	___xxtofl@arg+1,f
  5618  17CD  0CB5               	rrf	___xxtofl@arg,f
  5619  17CE  0008               	return
  5620  17CF                     __end_ofPL66:	
  5621  17CF                     PL68:	
  5622  17CF  01B9               	clrf	?___fladd
  5623  17D0  01BA               	clrf	?___fladd+1
  5624  17D1  01BB               	clrf	?___fladd+2
  5625  17D2  01BC               	clrf	?___fladd+3
  5626  17D3  0008               	return
  5627  17D4                     __end_ofPL68:	
  5628  17D4                     __ptext3:	
  5629 ;; *************** function _my_delay_ms *****************
  5630 ;; Defined at:
  5631 ;;		line 5 in file "my_delay.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  time            4    0[BANK0 ] long 
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  i               4    6[BANK0 ] long 
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      void 
  5638 ;; Registers used:
  5639 ;;		wreg, status,2, status,0, btemp+1
  5640 ;; Tracked objects:
  5641 ;;		On entry : 300/0
  5642 ;;		On exit  : 300/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5645 ;;      Params:         0       4       0       0       0
  5646 ;;      Locals:         0       4       0       0       0
  5647 ;;      Temps:          0       2       0       0       0
  5648 ;;      Totals:         0      10       0       0       0
  5649 ;;Total ram usage:       10 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    1
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		_mediatemperaturaNTC
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           
  5660                           ;psect for function _my_delay_ms
  5661  17D4                     _my_delay_ms:	
  5662                           
  5663                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5664                           
  5665                           ;incstack = 0
  5666                           ; Regs used in _my_delay_ms: [wreg+status,2+status,0+btemp+1]
  5667  17D4  01A6               	clrf	my_delay_ms@i
  5668  17D5  01A7               	clrf	my_delay_ms@i+1
  5669  17D6  01A8               	clrf	my_delay_ms@i+2
  5670  17D7  01A9               	clrf	my_delay_ms@i+3
  5671  17D8                     l5206:	
  5672  17D8  0829               	movf	my_delay_ms@i+3,w
  5673  17D9  3A80               	xorlw	128
  5674  17DA  00FF               	movwf	127
  5675  17DB  0823               	movf	my_delay_ms@time+3,w
  5676  17DC  3A80               	xorlw	128
  5677  17DD  027F               	subwf	127,w
  5678  17DE  1D03               	skipz
  5679  17DF  2FEA               	goto	u4453
  5680  17E0  0822               	movf	my_delay_ms@time+2,w
  5681  17E1  0228               	subwf	my_delay_ms@i+2,w
  5682  17E2  1D03               	skipz
  5683  17E3  2FEA               	goto	u4453
  5684  17E4  0821               	movf	my_delay_ms@time+1,w
  5685  17E5  0227               	subwf	my_delay_ms@i+1,w
  5686  17E6  1D03               	skipz
  5687  17E7  2FEA               	goto	u4453
  5688  17E8  0820               	movf	my_delay_ms@time,w
  5689  17E9  0226               	subwf	my_delay_ms@i,w
  5690  17EA                     u4453:	
  5691  17EA  1803               	btfsc	3,0
  5692  17EB  0008               	return
  5693                           
  5694                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5695  17EC  3003               	movlw	3
  5696  17ED  1283               	bcf	3,5	;RP0=0, select bank0
  5697  17EE  1303               	bcf	3,6	;RP1=0, select bank0
  5698  17EF  00A5               	movwf	??_my_delay_ms+1
  5699  17F0  3097               	movlw	151
  5700  17F1  00A4               	movwf	??_my_delay_ms
  5701  17F2                     u6557:	
  5702  17F2  0BA4               	decfsz	??_my_delay_ms,f
  5703  17F3  2FF2               	goto	u6557
  5704  17F4  0BA5               	decfsz	??_my_delay_ms+1,f
  5705  17F5  2FF2               	goto	u6557
  5706                           
  5707                           ;my_delay.c: 10:             }
  5708  17F6  1283               	bcf	3,5	;RP0=0, select bank0
  5709  17F7  1303               	bcf	3,6	;RP1=0, select bank0
  5710  17F8  0AA6               	incf	my_delay_ms@i,f
  5711  17F9  1903               	skipnz
  5712  17FA  0AA7               	incf	my_delay_ms@i+1,f
  5713  17FB  1903               	skipnz
  5714  17FC  0AA8               	incf	my_delay_ms@i+2,f
  5715  17FD  1903               	skipnz
  5716  17FE  0AA9               	incf	my_delay_ms@i+3,f
  5717  17FF  2FD8               	goto	l5206
  5718  1800                     __end_of_my_delay_ms:	
  5719                           
  5720                           	psect	text7
  5721  072E                     __ptext7:	
  5722 ;; *************** function _frexp *****************
  5723 ;; Defined at:
  5724 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\frexp.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  value           4   12[BANK0 ] int 
  5727 ;;  eptr            1   16[BANK0 ] PTR int 
  5728 ;;		 -> log@exponent(2), 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;		None
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  4   12[BANK0 ] PTR int 
  5733 ;; Registers used:
  5734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5735 ;; Tracked objects:
  5736 ;;		On entry : 300/0
  5737 ;;		On exit  : B00/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5740 ;;      Params:         0       5       0       0       0
  5741 ;;      Locals:         0       0       0       0       0
  5742 ;;      Temps:          0       2       0       0       0
  5743 ;;      Totals:         0       7       0       0       0
  5744 ;;Total ram usage:        7 bytes
  5745 ;; Hardware stack levels used:    1
  5746 ;; Hardware stack levels required when called:    2
  5747 ;; This function calls:
  5748 ;;		___fleq
  5749 ;; This function is called by:
  5750 ;;		_log
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           
  5755                           ;psect for function _frexp
  5756  072E                     _frexp:	
  5757                           
  5758                           ;incstack = 0
  5759                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5760  072E  082F               	movf	frexp@value+3,w
  5761  072F  00A3               	movwf	___fleq@ff1+3
  5762  0730  082E               	movf	frexp@value+2,w
  5763  0731  00A2               	movwf	___fleq@ff1+2
  5764  0732  082D               	movf	frexp@value+1,w
  5765  0733  00A1               	movwf	___fleq@ff1+1
  5766  0734  082C               	movf	frexp@value,w
  5767  0735  27AB  120A  118A   	fcall	PL74	;call to abstracted procedure
  5768  0738  2775  120A  118A   	fcall	___fleq
  5769  073B  1C03               	btfss	3,0
  5770  073C  2F48               	goto	l4390
  5771  073D  0830               	movf	frexp@eptr,w
  5772  073E  0084               	movwf	4
  5773  073F  1383               	bcf	3,7	;select IRP bank0
  5774  0740  0180               	clrf	0
  5775  0741  0A84               	incf	4,f
  5776  0742  0180               	clrf	0
  5777  0743  01AC               	clrf	?_frexp
  5778  0744  01AD               	clrf	?_frexp+1
  5779  0745  01AE               	clrf	?_frexp+2
  5780  0746  01AF               	clrf	?_frexp+3
  5781  0747  0008               	return
  5782  0748                     l4390:	
  5783  0748  082F               	movf	frexp@value+3,w
  5784  0749  397F               	andlw	127
  5785  074A  00B1               	movwf	??_frexp
  5786  074B  01B2               	clrf	??_frexp+1
  5787  074C  1003               	clrc
  5788  074D  0DB1               	rlf	??_frexp,f
  5789  074E  0DB2               	rlf	??_frexp+1,f
  5790  074F  0830               	movf	frexp@eptr,w
  5791  0750  0084               	movwf	4
  5792  0751  0831               	movf	??_frexp,w
  5793  0752  1383               	bcf	3,7	;select IRP bank0
  5794  0753  0080               	movwf	0
  5795  0754  0A84               	incf	4,f
  5796  0755  0832               	movf	??_frexp+1,w
  5797  0756  0080               	movwf	0
  5798  0757  0D2E               	rlf	frexp@value+2,w
  5799  0758  0D2E               	rlf	frexp@value+2,w
  5800  0759  3901               	andlw	1
  5801  075A  00B1               	movwf	??_frexp
  5802  075B  01B2               	clrf	??_frexp+1
  5803  075C  0830               	movf	frexp@eptr,w
  5804  075D  0084               	movwf	4
  5805  075E  0831               	movf	??_frexp,w
  5806  075F  0480               	iorwf	0,f
  5807  0760  0A84               	incf	4,f
  5808  0761  0832               	movf	??_frexp+1,w
  5809  0762  0480               	iorwf	0,f
  5810  0763  0830               	movf	frexp@eptr,w
  5811  0764  0084               	movwf	4
  5812  0765  3082               	movlw	130
  5813  0766  0780               	addwf	0,f
  5814  0767  0F84               	incfsz	4,f
  5815  0768  0800               	movf	0,w
  5816  0769  1803               	skipnc
  5817  076A  0A00               	incf	0,w
  5818  076B  00FF               	movwf	127
  5819  076C  3EFF               	addlw	255
  5820  076D  0080               	movwf	0
  5821  076E  0384               	decf	4,f
  5822  076F  082F               	movf	frexp@value+3,w
  5823  0770  3980               	andlw	-128
  5824  0771  383F               	iorlw	63
  5825  0772  00AF               	movwf	frexp@value+3
  5826  0773  13AE               	bcf	frexp@value+2,7
  5827  0774  0008               	return
  5828  0775                     __end_of_frexp:	
  5829  0775                     __ptext8:	
  5830 ;; *************** function ___fleq *****************
  5831 ;; Defined at:
  5832 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  ff1             4    0[BANK0 ] PTR int 
  5835 ;;  ff2             4    4[BANK0 ] PTR int 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;		None
  5838 ;; Return value:  Size  Location     Type
  5839 ;;		None               void
  5840 ;; Registers used:
  5841 ;;		wreg, status,2, status,0
  5842 ;; Tracked objects:
  5843 ;;		On entry : 300/0
  5844 ;;		On exit  : 300/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5847 ;;      Params:         0       8       0       0       0
  5848 ;;      Locals:         0       0       0       0       0
  5849 ;;      Temps:          0       4       0       0       0
  5850 ;;      Totals:         0      12       0       0       0
  5851 ;;Total ram usage:       12 bytes
  5852 ;; Hardware stack levels used:    1
  5853 ;; Hardware stack levels required when called:    1
  5854 ;; This function calls:
  5855 ;;		Nothing
  5856 ;; This function is called by:
  5857 ;;		_log
  5858 ;;		_frexp
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           
  5863                           ;psect for function ___fleq
  5864  0775                     ___fleq:	
  5865                           
  5866                           ;incstack = 0
  5867                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  5868  0775  3080               	movlw	128
  5869  0776  01A8               	clrf	??___fleq
  5870  0777  01A9               	clrf	??___fleq+1
  5871  0778  0522               	andwf	___fleq@ff1+2,w
  5872  0779  00AA               	movwf	??___fleq+2
  5873  077A  307F               	movlw	127
  5874  077B  0523               	andwf	___fleq@ff1+3,w
  5875  077C  00AB               	movwf	??___fleq+3
  5876  077D  042A               	iorwf	??___fleq+2,w
  5877  077E  0429               	iorwf	??___fleq+1,w
  5878  077F  0428               	iorwf	??___fleq,w
  5879  0780  1D03               	skipz
  5880  0781  2F86               	goto	l3828
  5881  0782  01A0               	clrf	___fleq@ff1
  5882  0783  01A1               	clrf	___fleq@ff1+1
  5883  0784  01A2               	clrf	___fleq@ff1+2
  5884  0785  01A3               	clrf	___fleq@ff1+3
  5885  0786                     l3828:	
  5886  0786  3080               	movlw	128
  5887  0787  01A8               	clrf	??___fleq
  5888  0788  01A9               	clrf	??___fleq+1
  5889  0789  0526               	andwf	___fleq@ff2+2,w
  5890  078A  00AA               	movwf	??___fleq+2
  5891  078B  307F               	movlw	127
  5892  078C  0527               	andwf	___fleq@ff2+3,w
  5893  078D  00AB               	movwf	??___fleq+3
  5894  078E  042A               	iorwf	??___fleq+2,w
  5895  078F  0429               	iorwf	??___fleq+1,w
  5896  0790  0428               	iorwf	??___fleq,w
  5897  0791  1D03               	skipz
  5898  0792  2F97               	goto	l3832
  5899  0793  01A4               	clrf	___fleq@ff2
  5900  0794  01A5               	clrf	___fleq@ff2+1
  5901  0795  01A6               	clrf	___fleq@ff2+2
  5902  0796  01A7               	clrf	___fleq@ff2+3
  5903  0797                     l3832:	
  5904  0797  0827               	movf	___fleq@ff2+3,w
  5905  0798  0623               	xorwf	___fleq@ff1+3,w
  5906  0799  1D03               	skipz
  5907  079A  2FA5               	goto	u2635
  5908  079B  0826               	movf	___fleq@ff2+2,w
  5909  079C  0622               	xorwf	___fleq@ff1+2,w
  5910  079D  1D03               	skipz
  5911  079E  2FA5               	goto	u2635
  5912  079F  0825               	movf	___fleq@ff2+1,w
  5913  07A0  0621               	xorwf	___fleq@ff1+1,w
  5914  07A1  1D03               	skipz
  5915  07A2  2FA5               	goto	u2635
  5916  07A3  0824               	movf	___fleq@ff2,w
  5917  07A4  0620               	xorwf	___fleq@ff1,w
  5918  07A5                     u2635:	
  5919  07A5  1903               	skipnz
  5920  07A6  2FA9               	goto	l3836
  5921  07A7  1003               	clrc
  5922  07A8  0008               	return
  5923  07A9                     l3836:	
  5924  07A9  1403               	setc
  5925  07AA  0008               	return
  5926  07AB                     __end_of___fleq:	
  5927  07AB                     PL74:	
  5928  07AB  00A0               	movwf	___fleq@ff1
  5929  07AC  01A4               	clrf	___fleq@ff2
  5930  07AD  01A5               	clrf	___fleq@ff2+1
  5931  07AE  01A6               	clrf	___fleq@ff2+2
  5932  07AF  01A7               	clrf	___fleq@ff2+3
  5933  07B0  0008               	return
  5934  07B1                     __end_ofPL74:	
  5935                           
  5936                           	psect	text11
  5937  1D15                     __ptext11:	
  5938 ;; *************** function _USART_init *****************
  5939 ;; Defined at:
  5940 ;;		line 18 in file "usart.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  baudrate        4    0[BANK0 ] unsigned long 
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;  i               1    4[BANK0 ] unsigned char 
  5945 ;;  erro            1    0        unsigned char 
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  1    wreg      void 
  5948 ;; Registers used:
  5949 ;;		wreg, status,2, status,0
  5950 ;; Tracked objects:
  5951 ;;		On entry : 300/0
  5952 ;;		On exit  : 300/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5955 ;;      Params:         0       4       0       0       0
  5956 ;;      Locals:         0       1       0       0       0
  5957 ;;      Temps:          0       0       0       0       0
  5958 ;;      Totals:         0       5       0       0       0
  5959 ;;Total ram usage:        5 bytes
  5960 ;; Hardware stack levels used:    1
  5961 ;; Hardware stack levels required when called:    1
  5962 ;; This function calls:
  5963 ;;		Nothing
  5964 ;; This function is called by:
  5965 ;;		_main
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           
  5970                           ;psect for function _USART_init
  5971  1D15                     _USART_init:	
  5972                           
  5973                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  5974                           
  5975                           ;incstack = 0
  5976                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  5977  1D15  304B               	movlw	75
  5978  1D16  0621               	xorwf	USART_init@baudrate+1,w
  5979  1D17  0420               	iorwf	USART_init@baudrate,w
  5980  1D18  0422               	iorwf	USART_init@baudrate+2,w
  5981  1D19  0423               	iorwf	USART_init@baudrate+3,w
  5982  1D1A  1D03               	btfss	3,2
  5983  1D1B  2D26               	goto	l6952
  5984                           
  5985                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  5986  1D1C  1798               	bsf	24,7	;volatile
  5987                           
  5988                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  5989  1D1D  1618               	bsf	24,4	;volatile
  5990                           
  5991                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  5992  1D1E  1683               	bsf	3,5	;RP0=1, select bank1
  5993  1D1F  1518               	bsf	24,2	;volatile
  5994                           
  5995                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  5996  1D20  1218               	bcf	24,4	;volatile
  5997                           
  5998                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  5999  1D21  1318               	bcf	24,6	;volatile
  6000                           
  6001                           ;usart.c: 32:           SPBRG =12;
  6002  1D22  300C               	movlw	12
  6003  1D23  0099               	movwf	25	;volatile
  6004                           
  6005                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  6006  1D24  170B               	bsf	11,6	;volatile
  6007  1D25  2D3F               	goto	L5
  6008  1D26                     l6952:	
  6009                           ;usart.c: 35:           }
  6010                           
  6011                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  6012                           
  6013  1D26  30C2               	movlw	194
  6014  1D27  0621               	xorwf	USART_init@baudrate+1,w
  6015  1D28  1D03               	skipz
  6016  1D29  2D40               	goto	l6972
  6017  1D2A  0322               	decf	USART_init@baudrate+2,w
  6018  1D2B  0420               	iorwf	USART_init@baudrate,w
  6019  1D2C  0423               	iorwf	USART_init@baudrate+3,w
  6020  1D2D  1D03               	btfss	3,2
  6021  1D2E  2D40               	goto	l6972
  6022                           
  6023                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  6024  1D2F  3010               	movlw	16
  6025  1D30  1683               	bsf	3,5	;RP0=1, select bank1
  6026  1D31  0099               	movwf	25	;volatile
  6027                           
  6028                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  6029  1D32  1703               	bsf	3,6	;RP1=1, select bank3
  6030  1D33  1587               	bsf	7,3	;volatile
  6031                           
  6032                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  6033  1D34  1303               	bcf	3,6	;RP1=0, select bank1
  6034  1D35  1518               	bsf	24,2	;volatile
  6035                           
  6036                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  6037  1D36  1283               	bcf	3,5	;RP0=0, select bank0
  6038  1D37  1798               	bsf	24,7	;volatile
  6039                           
  6040                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  6041  1D38  1683               	bsf	3,5	;RP0=1, select bank1
  6042  1D39  1218               	bcf	24,4	;volatile
  6043                           
  6044                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  6045  1D3A  1318               	bcf	24,6	;volatile
  6046                           
  6047                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  6048  1D3B  1283               	bcf	3,5	;RP0=0, select bank0
  6049  1D3C  1618               	bsf	24,4	;volatile
  6050                           
  6051                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  6052  1D3D  170B               	bsf	11,6	;volatile
  6053                           
  6054                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  6055  1D3E  1683               	bsf	3,5	;RP0=1, select bank1
  6056  1D3F                     L5:	
  6057  1D3F  168C               	bsf	12,5	;volatile
  6058  1D40                     l6972:	
  6059                           
  6060                           ;usart.c: 68:      TRISC6= 1;
  6061  1D40  1683               	bsf	3,5	;RP0=1, select bank1
  6062  1D41  1707               	bsf	7,6	;volatile
  6063                           
  6064                           ;usart.c: 69:      TRISC7= 1;
  6065  1D42  1787               	bsf	7,7	;volatile
  6066                           
  6067                           ;usart.c: 71:      CREN=0;
  6068  1D43  1283               	bcf	3,5	;RP0=0, select bank0
  6069  1D44  1218               	bcf	24,4	;volatile
  6070                           
  6071                           ;usart.c: 72:      CREN=1;
  6072  1D45  1618               	bsf	24,4	;volatile
  6073                           
  6074                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  6075  1D46  01A4               	clrf	USART_init@i
  6076  1D47                     l6986:	
  6077  1D47  081A               	movf	26,w	;volatile
  6078  1D48  300F               	movlw	15
  6079  1D49  0AA4               	incf	USART_init@i,f
  6080  1D4A  0224               	subwf	USART_init@i,w
  6081  1D4B  1803               	btfsc	3,0
  6082  1D4C  0008               	return
  6083  1D4D  2D47               	goto	l6986
  6084  1D4E                     __end_of_USART_init:	
  6085                           
  6086                           	psect	text12
  6087  1E33                     __ptext12:	
  6088 ;; *************** function _I2C_Master_Init *****************
  6089 ;; Defined at:
  6090 ;;		line 7 in file "I2C.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;  c               4   13[BANK0 ] const unsigned long 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;		None
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  1    wreg      void 
  6097 ;; Registers used:
  6098 ;;		wreg, status,2, status,0, pclath, cstack
  6099 ;; Tracked objects:
  6100 ;;		On entry : 300/0
  6101 ;;		On exit  : 300/100
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6104 ;;      Params:         0       4       0       0       0
  6105 ;;      Locals:         0       0       0       0       0
  6106 ;;      Temps:          0       4       0       0       0
  6107 ;;      Totals:         0       8       0       0       0
  6108 ;;Total ram usage:        8 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:    2
  6111 ;; This function calls:
  6112 ;;		___lldiv
  6113 ;; This function is called by:
  6114 ;;		_main
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           
  6119                           ;psect for function _I2C_Master_Init
  6120  1E33                     _I2C_Master_Init:	
  6121                           
  6122                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  6123                           
  6124                           ;incstack = 0
  6125                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  6126  1E33  3028               	movlw	40
  6127  1E34  0094               	movwf	20	;volatile
  6128                           
  6129                           ;I2C.c: 11:   SSPCON2 = 0;
  6130  1E35  1683               	bsf	3,5	;RP0=1, select bank1
  6131  1E36  0191               	clrf	17	;volatile
  6132                           
  6133                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  6134  1E37  1283               	bcf	3,5	;RP0=0, select bank0
  6135  1E38  082D               	movf	I2C_Master_Init@c,w
  6136  1E39  00B1               	movwf	??_I2C_Master_Init
  6137  1E3A  082E               	movf	I2C_Master_Init@c+1,w
  6138  1E3B  00B2               	movwf	??_I2C_Master_Init+1
  6139  1E3C  082F               	movf	I2C_Master_Init@c+2,w
  6140  1E3D  00B3               	movwf	??_I2C_Master_Init+2
  6141  1E3E  0830               	movf	I2C_Master_Init@c+3,w
  6142  1E3F  00B4               	movwf	??_I2C_Master_Init+3
  6143  1E40  3002               	movlw	2
  6144  1E41                     u6115:	
  6145  1E41  1003               	clrc
  6146  1E42  0DB1               	rlf	??_I2C_Master_Init,f
  6147  1E43  0DB2               	rlf	??_I2C_Master_Init+1,f
  6148  1E44  0DB3               	rlf	??_I2C_Master_Init+2,f
  6149  1E45  0DB4               	rlf	??_I2C_Master_Init+3,f
  6150  1E46  3EFF               	addlw	-1
  6151  1E47  1D03               	skipz
  6152  1E48  2E41               	goto	u6115
  6153  1E49  0834               	movf	??_I2C_Master_Init+3,w
  6154  1E4A  00A3               	movwf	___lldiv@divisor+3
  6155  1E4B  0833               	movf	??_I2C_Master_Init+2,w
  6156  1E4C  00A2               	movwf	___lldiv@divisor+2
  6157  1E4D  0832               	movf	??_I2C_Master_Init+1,w
  6158  1E4E  00A1               	movwf	___lldiv@divisor+1
  6159  1E4F  0831               	movf	??_I2C_Master_Init,w
  6160  1E50  00A0               	movwf	___lldiv@divisor
  6161  1E51  307A               	movlw	122
  6162  1E52  01A7               	clrf	___lldiv@dividend+3
  6163  1E53  00A6               	movwf	___lldiv@dividend+2
  6164  1E54  3012               	movlw	18
  6165  1E55  00A5               	movwf	___lldiv@dividend+1
  6166  1E56  01A4               	clrf	___lldiv@dividend
  6167  1E57  2660               	fcall	___lldiv
  6168  1E58  0820               	movf	?___lldiv,w
  6169  1E59  3EFF               	addlw	255
  6170  1E5A  1683               	bsf	3,5	;RP0=1, select bank1
  6171  1E5B  0093               	movwf	19	;volatile
  6172                           
  6173                           ;I2C.c: 13:   SSPSTAT = 0;
  6174  1E5C  0194               	clrf	20	;volatile
  6175                           
  6176                           ;I2C.c: 14:   TRISC3 = 1;
  6177  1E5D  1587               	bsf	7,3	;volatile
  6178                           
  6179                           ;I2C.c: 15:   TRISC4 = 1;
  6180  1E5E  1607               	bsf	7,4	;volatile
  6181  1E5F  0008               	return
  6182  1E60                     __end_of_I2C_Master_Init:	
  6183  1E60                     __ptext13:	
  6184 ;; *************** function ___lldiv *****************
  6185 ;; Defined at:
  6186 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;  divisor         4    0[BANK0 ] unsigned long 
  6189 ;;  dividend        4    4[BANK0 ] unsigned long 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;  quotient        4    8[BANK0 ] unsigned long 
  6192 ;;  counter         1   12[BANK0 ] unsigned char 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  4    0[BANK0 ] unsigned long 
  6195 ;; Registers used:
  6196 ;;		wreg, status,2, status,0
  6197 ;; Tracked objects:
  6198 ;;		On entry : 300/0
  6199 ;;		On exit  : 300/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6202 ;;      Params:         0       8       0       0       0
  6203 ;;      Locals:         0       5       0       0       0
  6204 ;;      Temps:          0       0       0       0       0
  6205 ;;      Totals:         0      13       0       0       0
  6206 ;;Total ram usage:       13 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    1
  6209 ;; This function calls:
  6210 ;;		Nothing
  6211 ;; This function is called by:
  6212 ;;		_I2C_Master_Init
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           
  6217                           ;psect for function ___lldiv
  6218  1E60                     ___lldiv:	
  6219                           
  6220                           ;incstack = 0
  6221                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6222  1E60  01A8               	clrf	___lldiv@quotient
  6223  1E61  01A9               	clrf	___lldiv@quotient+1
  6224  1E62  01AA               	clrf	___lldiv@quotient+2
  6225  1E63  01AB               	clrf	___lldiv@quotient+3
  6226  1E64  0823               	movf	___lldiv@divisor+3,w
  6227  1E65  0422               	iorwf	___lldiv@divisor+2,w
  6228  1E66  0421               	iorwf	___lldiv@divisor+1,w
  6229  1E67  0420               	iorwf	___lldiv@divisor,w
  6230  1E68  1903               	skipnz
  6231  1E69  2E9F               	goto	l6918
  6232  1E6A  01AC               	clrf	___lldiv@counter
  6233  1E6B                     L6:	
  6234  1E6B  0AAC               	incf	___lldiv@counter,f
  6235  1E6C  1BA3               	btfsc	___lldiv@divisor+3,7
  6236  1E6D  2E74               	goto	l6906
  6237  1E6E  1003               	clrc
  6238  1E6F  0DA0               	rlf	___lldiv@divisor,f
  6239  1E70  0DA1               	rlf	___lldiv@divisor+1,f
  6240  1E71  0DA2               	rlf	___lldiv@divisor+2,f
  6241  1E72  0DA3               	rlf	___lldiv@divisor+3,f
  6242  1E73  2E6B               	goto	L6
  6243  1E74                     l6906:	
  6244  1E74  1003               	clrc
  6245  1E75  0DA8               	rlf	___lldiv@quotient,f
  6246  1E76  0DA9               	rlf	___lldiv@quotient+1,f
  6247  1E77  0DAA               	rlf	___lldiv@quotient+2,f
  6248  1E78  0DAB               	rlf	___lldiv@quotient+3,f
  6249  1E79  0823               	movf	___lldiv@divisor+3,w
  6250  1E7A  0227               	subwf	___lldiv@dividend+3,w
  6251  1E7B  1D03               	skipz
  6252  1E7C  2E87               	goto	u6095
  6253  1E7D  0822               	movf	___lldiv@divisor+2,w
  6254  1E7E  0226               	subwf	___lldiv@dividend+2,w
  6255  1E7F  1D03               	skipz
  6256  1E80  2E87               	goto	u6095
  6257  1E81  0821               	movf	___lldiv@divisor+1,w
  6258  1E82  0225               	subwf	___lldiv@dividend+1,w
  6259  1E83  1D03               	skipz
  6260  1E84  2E87               	goto	u6095
  6261  1E85  0820               	movf	___lldiv@divisor,w
  6262  1E86  0224               	subwf	___lldiv@dividend,w
  6263  1E87                     u6095:	
  6264  1E87  1C03               	skipc
  6265  1E88  2E99               	goto	L7
  6266  1E89  0820               	movf	___lldiv@divisor,w
  6267  1E8A  02A4               	subwf	___lldiv@dividend,f
  6268  1E8B  0821               	movf	___lldiv@divisor+1,w
  6269  1E8C  1C03               	skipc
  6270  1E8D  0F21               	incfsz	___lldiv@divisor+1,w
  6271  1E8E  02A5               	subwf	___lldiv@dividend+1,f
  6272  1E8F  0822               	movf	___lldiv@divisor+2,w
  6273  1E90  1C03               	skipc
  6274  1E91  0F22               	incfsz	___lldiv@divisor+2,w
  6275  1E92  02A6               	subwf	___lldiv@dividend+2,f
  6276  1E93  0823               	movf	___lldiv@divisor+3,w
  6277  1E94  1C03               	skipc
  6278  1E95  0F23               	incfsz	___lldiv@divisor+3,w
  6279  1E96  02A7               	subwf	___lldiv@dividend+3,f
  6280  1E97  1428               	bsf	___lldiv@quotient,0
  6281  1E98  1003               	clrc
  6282  1E99                     L7:	
  6283  1E99  0CA3               	rrf	___lldiv@divisor+3,f
  6284  1E9A  0CA2               	rrf	___lldiv@divisor+2,f
  6285  1E9B  0CA1               	rrf	___lldiv@divisor+1,f
  6286  1E9C  0CA0               	rrf	___lldiv@divisor,f
  6287  1E9D  0BAC               	decfsz	___lldiv@counter,f
  6288  1E9E  2E74               	goto	l6906
  6289  1E9F                     l6918:	
  6290  1E9F  082B               	movf	___lldiv@quotient+3,w
  6291  1EA0  00A3               	movwf	?___lldiv+3
  6292  1EA1  082A               	movf	___lldiv@quotient+2,w
  6293  1EA2  00A2               	movwf	?___lldiv+2
  6294  1EA3  0829               	movf	___lldiv@quotient+1,w
  6295  1EA4  00A1               	movwf	?___lldiv+1
  6296  1EA5  0828               	movf	___lldiv@quotient,w
  6297  1EA6  00A0               	movwf	?___lldiv
  6298  1EA7  0008               	return
  6299  1EA8                     __end_of___lldiv:	
  6300                           
  6301                           	psect	text15
  6302  1C50                     __ptext15:	
  6303 ;; *************** function _strcpy *****************
  6304 ;; Defined at:
  6305 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;  to              1    wreg     PTR unsigned char 
  6308 ;;		 -> texto(16), 
  6309 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  6310 ;;		 -> STR_2(1), 
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;  to              1    2[BANK0 ] PTR unsigned char 
  6313 ;;		 -> texto(16), 
  6314 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  6315 ;;		 -> texto(16), 
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  1    wreg      PTR unsigned char 
  6318 ;; Registers used:
  6319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6320 ;; Tracked objects:
  6321 ;;		On entry : B00/0
  6322 ;;		On exit  : B00/800
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6325 ;;      Params:         0       1       0       0       0
  6326 ;;      Locals:         0       2       0       0       0
  6327 ;;      Temps:          0       1       0       0       0
  6328 ;;      Totals:         0       4       0       0       0
  6329 ;;Total ram usage:        4 bytes
  6330 ;; Hardware stack levels used:    2
  6331 ;; Hardware stack levels required when called:    1
  6332 ;; This function calls:
  6333 ;;		Nothing
  6334 ;; This function is called by:
  6335 ;;		_Decodify_Command
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           
  6340                           ;psect for function _strcpy
  6341  1C50                     _strcpy:	
  6342                           
  6343                           ;incstack = 0
  6344                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  6345                           ;strcpy@to stored from wreg
  6346  1C50  00A2               	movwf	strcpy@to
  6347  1C51  00A3               	movwf	strcpy@cp
  6348  1C52                     l5174:	
  6349  1C52  0820               	movf	strcpy@from,w
  6350  1C53  0084               	movwf	4
  6351  1C54  160A  158A  200A  160A  158A  	fcall	stringdir
  6352  1C59  00A1               	movwf	??_strcpy
  6353  1C5A  0823               	movf	strcpy@cp,w
  6354  1C5B  0084               	movwf	4
  6355  1C5C  0821               	movf	??_strcpy,w
  6356  1C5D  1783               	bsf	3,7	;select IRP bank2
  6357  1C5E  0080               	movwf	0
  6358  1C5F  0800               	movf	0,w
  6359  1C60  1903               	btfsc	3,2
  6360  1C61  0008               	return
  6361  1C62  0AA3               	incf	strcpy@cp,f
  6362  1C63  0AA0               	incf	strcpy@from,f
  6363  1C64  2C52               	goto	l5174
  6364  1C65                     __end_of_strcpy:	
  6365                           
  6366                           	psect	text18
  6367  1DC0                     __ptext18:	
  6368 ;; *************** function _utoa *****************
  6369 ;; Defined at:
  6370 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  buf             1    wreg     PTR unsigned char 
  6373 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6374 ;;  val             2    7[BANK0 ] unsigned int 
  6375 ;;  base            2    9[BANK0 ] int 
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  6378 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6379 ;;  v               2   11[BANK0 ] unsigned int 
  6380 ;;  c               1   13[BANK0 ] unsigned char 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      PTR unsigned char 
  6383 ;; Registers used:
  6384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6385 ;; Tracked objects:
  6386 ;;		On entry : 300/0
  6387 ;;		On exit  : B00/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6390 ;;      Params:         0       4       0       0       0
  6391 ;;      Locals:         0       4       0       0       0
  6392 ;;      Temps:          0       0       0       0       0
  6393 ;;      Totals:         0       8       0       0       0
  6394 ;;Total ram usage:        8 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; Hardware stack levels required when called:    2
  6397 ;; This function calls:
  6398 ;;		___lwdiv
  6399 ;;		___lwmod
  6400 ;; This function is called by:
  6401 ;;		_itoa
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           
  6406                           ;psect for function _utoa
  6407  1DC0                     _utoa:	
  6408                           
  6409                           ;incstack = 0
  6410                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6411                           ;utoa@buf stored from wreg
  6412  1DC0  00AE               	movwf	utoa@buf
  6413  1DC1  0828               	movf	utoa@val+1,w
  6414  1DC2  00AC               	movwf	utoa@v+1
  6415  1DC3  0827               	movf	utoa@val,w
  6416  1DC4  00AB               	movwf	utoa@v
  6417  1DC5                     l6516:	
  6418  1DC5  082A               	movf	utoa@base+1,w
  6419  1DC6  00A1               	movwf	___lwdiv@divisor+1
  6420  1DC7  0829               	movf	utoa@base,w
  6421  1DC8  00A0               	movwf	___lwdiv@divisor
  6422  1DC9  082C               	movf	utoa@v+1,w
  6423  1DCA  00A3               	movwf	___lwdiv@dividend+1
  6424  1DCB  082B               	movf	utoa@v,w
  6425  1DCC  00A2               	movwf	___lwdiv@dividend
  6426  1DCD  160A  118A  2654  160A  158A  	fcall	___lwdiv
  6427  1DD2  0821               	movf	?___lwdiv+1,w
  6428  1DD3  00AC               	movwf	utoa@v+1
  6429  1DD4  0820               	movf	?___lwdiv,w
  6430  1DD5  00AB               	movwf	utoa@v
  6431  1DD6  0AAE               	incf	utoa@buf,f
  6432  1DD7  042C               	iorwf	utoa@v+1,w
  6433  1DD8  1D03               	btfss	3,2
  6434  1DD9  2DC5               	goto	l6516
  6435  1DDA  082E               	movf	utoa@buf,w
  6436  1DDB  0084               	movwf	4
  6437  1DDC  1383               	bcf	3,7	;select IRP bank0
  6438  1DDD  0180               	clrf	0
  6439  1DDE  03AE               	decf	utoa@buf,f
  6440  1DDF                     l6526:	
  6441  1DDF  082A               	movf	utoa@base+1,w
  6442  1DE0  00A1               	movwf	___lwmod@divisor+1
  6443  1DE1  0829               	movf	utoa@base,w
  6444  1DE2  00A0               	movwf	___lwmod@divisor
  6445  1DE3  0828               	movf	utoa@val+1,w
  6446  1DE4  00A3               	movwf	___lwmod@dividend+1
  6447  1DE5  0827               	movf	utoa@val,w
  6448  1DE6  00A2               	movwf	___lwmod@dividend
  6449  1DE7  260F               	fcall	___lwmod
  6450  1DE8  0820               	movf	?___lwmod,w
  6451  1DE9  00AD               	movwf	utoa@c
  6452  1DEA  082A               	movf	utoa@base+1,w
  6453  1DEB  00A1               	movwf	___lwdiv@divisor+1
  6454  1DEC  0829               	movf	utoa@base,w
  6455  1DED  00A0               	movwf	___lwdiv@divisor
  6456  1DEE  0828               	movf	utoa@val+1,w
  6457  1DEF  00A3               	movwf	___lwdiv@dividend+1
  6458  1DF0  0827               	movf	utoa@val,w
  6459  1DF1  00A2               	movwf	___lwdiv@dividend
  6460  1DF2  160A  118A  2654  160A  158A  	fcall	___lwdiv
  6461  1DF7  0821               	movf	?___lwdiv+1,w
  6462  1DF8  00A8               	movwf	utoa@val+1
  6463  1DF9  0820               	movf	?___lwdiv,w
  6464  1DFA  00A7               	movwf	utoa@val
  6465  1DFB  300A               	movlw	10
  6466  1DFC  022D               	subwf	utoa@c,w
  6467  1DFD  1C03               	skipc
  6468  1DFE  2E01               	goto	l1451
  6469  1DFF  3007               	movlw	7
  6470  1E00  07AD               	addwf	utoa@c,f
  6471  1E01                     l1451:	
  6472  1E01  3030               	movlw	48
  6473  1E02  07AD               	addwf	utoa@c,f
  6474  1E03  082E               	movf	utoa@buf,w
  6475  1E04  0084               	movwf	4
  6476  1E05  082D               	movf	utoa@c,w
  6477  1E06  1383               	bcf	3,7	;select IRP bank0
  6478  1E07  0080               	movwf	0
  6479  1E08  03AE               	decf	utoa@buf,f
  6480  1E09  0827               	movf	utoa@val,w
  6481  1E0A  0428               	iorwf	utoa@val+1,w
  6482  1E0B  1D03               	btfss	3,2
  6483  1E0C  2DDF               	goto	l6526
  6484                           
  6485                           ;	Return value of _utoa is never used
  6486  1E0D  0AAE               	incf	utoa@buf,f
  6487  1E0E  0008               	return
  6488  1E0F                     __end_of_utoa:	
  6489  1E0F                     __ptext19:	
  6490 ;; *************** function ___lwmod *****************
  6491 ;; Defined at:
  6492 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  divisor         2    0[BANK0 ] unsigned int 
  6495 ;;  dividend        2    2[BANK0 ] unsigned int 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  counter         1    4[BANK0 ] unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  2    0[BANK0 ] unsigned int 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2, status,0
  6502 ;; Tracked objects:
  6503 ;;		On entry : 300/0
  6504 ;;		On exit  : 300/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6507 ;;      Params:         0       4       0       0       0
  6508 ;;      Locals:         0       1       0       0       0
  6509 ;;      Temps:          0       0       0       0       0
  6510 ;;      Totals:         0       5       0       0       0
  6511 ;;Total ram usage:        5 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:    1
  6514 ;; This function calls:
  6515 ;;		Nothing
  6516 ;; This function is called by:
  6517 ;;		_utoa
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           
  6522                           ;psect for function ___lwmod
  6523  1E0F                     ___lwmod:	
  6524                           
  6525                           ;incstack = 0
  6526                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6527  1E0F  0820               	movf	___lwmod@divisor,w
  6528  1E10  0421               	iorwf	___lwmod@divisor+1,w
  6529  1E11  1903               	btfsc	3,2
  6530  1E12  2E2E               	goto	l6294
  6531  1E13  01A4               	clrf	___lwmod@counter
  6532  1E14                     L12:	
  6533  1E14  0AA4               	incf	___lwmod@counter,f
  6534  1E15  1BA1               	btfsc	___lwmod@divisor+1,7
  6535  1E16  2E1B               	goto	l6286
  6536  1E17  1003               	clrc
  6537  1E18  0DA0               	rlf	___lwmod@divisor,f
  6538  1E19  0DA1               	rlf	___lwmod@divisor+1,f
  6539  1E1A  2E14               	goto	L12
  6540  1E1B                     l6286:	
  6541  1E1B  0821               	movf	___lwmod@divisor+1,w
  6542  1E1C  0223               	subwf	___lwmod@dividend+1,w
  6543  1E1D  1D03               	skipz
  6544  1E1E  2E21               	goto	u5615
  6545  1E1F  0820               	movf	___lwmod@divisor,w
  6546  1E20  0222               	subwf	___lwmod@dividend,w
  6547  1E21                     u5615:	
  6548  1E21  1C03               	skipc
  6549  1E22  2E2A               	goto	L13
  6550  1E23  0820               	movf	___lwmod@divisor,w
  6551  1E24  02A2               	subwf	___lwmod@dividend,f
  6552  1E25  0821               	movf	___lwmod@divisor+1,w
  6553  1E26  1C03               	skipc
  6554  1E27  03A3               	decf	___lwmod@dividend+1,f
  6555  1E28  02A3               	subwf	___lwmod@dividend+1,f
  6556  1E29  1003               	clrc
  6557  1E2A                     L13:	
  6558  1E2A  0CA1               	rrf	___lwmod@divisor+1,f
  6559  1E2B  0CA0               	rrf	___lwmod@divisor,f
  6560  1E2C  0BA4               	decfsz	___lwmod@counter,f
  6561  1E2D  2E1B               	goto	l6286
  6562  1E2E                     l6294:	
  6563  1E2E  0823               	movf	___lwmod@dividend+1,w
  6564  1E2F  00A1               	movwf	?___lwmod+1
  6565  1E30  0822               	movf	___lwmod@dividend,w
  6566  1E31  00A0               	movwf	?___lwmod
  6567  1E32  0008               	return
  6568  1E33                     __end_of___lwmod:	
  6569                           
  6570                           	psect	text20
  6571  07B1                     __ptext20:	
  6572 ;; *************** function _USART_to_Protocol *****************
  6573 ;; Defined at:
  6574 ;;		line 77 in file "usart.c"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;  usart_protoc    1    wreg     PTR struct .
  6577 ;;		 -> usart_protocol(16), 
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  6580 ;;		 -> usart_protocol(16), 
  6581 ;;  i               2    2[BANK0 ] int 
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6586 ;; Tracked objects:
  6587 ;;		On entry : 300/300
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6591 ;;      Params:         0       0       0       0       0
  6592 ;;      Locals:         0       3       0       0       0
  6593 ;;      Temps:          0       2       0       0       0
  6594 ;;      Totals:         0       5       0       0       0
  6595 ;;Total ram usage:        5 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    1
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_Decodify_Command
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           
  6606                           ;psect for function _USART_to_Protocol
  6607  07B1                     _USART_to_Protocol:	
  6608                           
  6609                           ;incstack = 0
  6610                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  6611                           ;USART_to_Protocol@usart_protocol stored from wreg
  6612  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  6613  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  6614  07B3  00A4               	movwf	USART_to_Protocol@usart_protocol
  6615                           
  6616                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  6617  07B4  0084               	movwf	4
  6618  07B5  1703               	bsf	3,6	;RP1=1, select bank2
  6619  07B6  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  6620  07B7  1783               	bsf	3,7	;select IRP bank2
  6621  07B8  0080               	movwf	0
  6622  07B9  0A84               	incf	4,f
  6623  07BA  0810               	movf	_usart_buffer^(0+256),w	;volatile
  6624  07BB  0080               	movwf	0
  6625                           
  6626                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  6627  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  6628  07BD  0824               	movf	USART_to_Protocol@usart_protocol,w
  6629  07BE  3E02               	addlw	2
  6630  07BF  0084               	movwf	4
  6631  07C0  1703               	bsf	3,6	;RP1=1, select bank2
  6632  07C1  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  6633  07C2  0080               	movwf	0
  6634                           
  6635                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  6636  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  6637  07C4  0824               	movf	USART_to_Protocol@usart_protocol,w
  6638  07C5  3E03               	addlw	3
  6639  07C6  0084               	movwf	4
  6640  07C7  1703               	bsf	3,6	;RP1=1, select bank2
  6641  07C8  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  6642  07C9  0080               	movwf	0
  6643                           
  6644                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  6645  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  6646  07CB  0824               	movf	USART_to_Protocol@usart_protocol,w
  6647  07CC  3E04               	addlw	4
  6648  07CD  0084               	movwf	4
  6649  07CE  1703               	bsf	3,6	;RP1=1, select bank2
  6650  07CF  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  6651  07D0  0080               	movwf	0
  6652                           
  6653                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  6654  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  6655  07D2  0824               	movf	USART_to_Protocol@usart_protocol,w
  6656  07D3  3E05               	addlw	5
  6657  07D4  0084               	movwf	4
  6658  07D5  1703               	bsf	3,6	;RP1=1, select bank2
  6659  07D6  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  6660  07D7  0080               	movwf	0
  6661                           
  6662                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  6663  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  6664  07D9  01A2               	clrf	USART_to_Protocol@i
  6665  07DA  01A3               	clrf	USART_to_Protocol@i+1
  6666  07DB                     l4912:	
  6667  07DB  0824               	movf	USART_to_Protocol@usart_protocol,w
  6668  07DC  3E05               	addlw	5
  6669  07DD  0084               	movwf	4
  6670  07DE  0823               	movf	USART_to_Protocol@i+1,w
  6671  07DF  3A80               	xorlw	128
  6672  07E0  00A0               	movwf	??_USART_to_Protocol
  6673  07E1  3080               	movlw	128
  6674  07E2  0220               	subwf	??_USART_to_Protocol,w
  6675  07E3  1D03               	skipz
  6676  07E4  2FE7               	goto	u4215
  6677  07E5  0800               	movf	0,w
  6678  07E6  0222               	subwf	USART_to_Protocol@i,w
  6679  07E7                     u4215:	
  6680  07E7  1803               	btfsc	3,0
  6681  07E8  0008               	return
  6682                           
  6683                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  6684  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  6685  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  6686  07EB  0822               	movf	USART_to_Protocol@i,w
  6687  07EC  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  6688  07ED  0084               	movwf	4
  6689  07EE  1783               	bsf	3,7	;select IRP bank2
  6690  07EF  0800               	movf	0,w
  6691  07F0  00A0               	movwf	??_USART_to_Protocol
  6692  07F1  0822               	movf	USART_to_Protocol@i,w
  6693  07F2  0724               	addwf	USART_to_Protocol@usart_protocol,w
  6694  07F3  00A1               	movwf	??_USART_to_Protocol+1
  6695  07F4  3E06               	addlw	6
  6696  07F5  0084               	movwf	4
  6697  07F6  0820               	movf	??_USART_to_Protocol,w
  6698  07F7  0080               	movwf	0
  6699  07F8  0AA2               	incf	USART_to_Protocol@i,f
  6700  07F9  1903               	skipnz
  6701  07FA  0AA3               	incf	USART_to_Protocol@i+1,f
  6702  07FB  2FDB               	goto	l4912
  6703  07FC                     __end_of_USART_to_Protocol:	
  6704                           
  6705                           	psect	text21
  6706  1C98                     __ptext21:	
  6707 ;; *************** function _USART_put_buffer *****************
  6708 ;; Defined at:
  6709 ;;		line 99 in file "usart.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;  vetor           1    wreg     PTR unsigned char 
  6712 ;;		 -> buffer(32), 
  6713 ;;  size            2    1[BANK0 ] unsigned int 
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;  vetor           1    7[BANK0 ] PTR unsigned char 
  6716 ;;		 -> buffer(32), 
  6717 ;;  ptr             1    6[BANK0 ] PTR unsigned char 
  6718 ;;		 -> USART_put_buffer@vetor(1), 
  6719 ;;  loop            1    5[BANK0 ] unsigned char 
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  1    wreg      void 
  6722 ;; Registers used:
  6723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6724 ;; Tracked objects:
  6725 ;;		On entry : 300/0
  6726 ;;		On exit  : 300/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6729 ;;      Params:         0       2       0       0       0
  6730 ;;      Locals:         0       3       0       0       0
  6731 ;;      Temps:          0       2       0       0       0
  6732 ;;      Totals:         0       7       0       0       0
  6733 ;;Total ram usage:        7 bytes
  6734 ;; Hardware stack levels used:    1
  6735 ;; Hardware stack levels required when called:    2
  6736 ;; This function calls:
  6737 ;;		_USART_putc
  6738 ;; This function is called by:
  6739 ;;		_Decodify_Command
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           
  6744                           ;psect for function _USART_put_buffer
  6745  1C98                     _USART_put_buffer:	
  6746                           
  6747                           ;incstack = 0
  6748                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6749                           ;USART_put_buffer@vetor stored from wreg
  6750  1C98  00A7               	movwf	USART_put_buffer@vetor
  6751  1C99  3027               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  6752                           
  6753                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  6754  1C9A  01A5               	clrf	USART_put_buffer@loop
  6755                           
  6756                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  6757  1C9B  00A6               	movwf	USART_put_buffer@ptr
  6758  1C9C                     l4970:	
  6759                           ;usart.c: 105:     while(loop<size)
  6760                           
  6761                           
  6762                           ;usart.c: 105:     while(loop<size)
  6763  1C9C  0825               	movf	USART_put_buffer@loop,w
  6764  1C9D  00A3               	movwf	??_USART_put_buffer
  6765  1C9E  01A4               	clrf	??_USART_put_buffer+1
  6766  1C9F  0822               	movf	USART_put_buffer@size+1,w
  6767  1CA0  0224               	subwf	??_USART_put_buffer+1,w
  6768  1CA1  1D03               	skipz
  6769  1CA2  2CA5               	goto	u4265
  6770  1CA3  0821               	movf	USART_put_buffer@size,w
  6771  1CA4  0223               	subwf	??_USART_put_buffer,w
  6772  1CA5                     u4265:	
  6773  1CA5  1803               	btfsc	3,0
  6774  1CA6  0008               	return
  6775                           
  6776                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  6777  1CA7  0826               	movf	USART_put_buffer@ptr,w
  6778  1CA8  0084               	movwf	4
  6779  1CA9  1383               	bcf	3,7	;select IRP bank0
  6780  1CAA  0800               	movf	0,w
  6781  1CAB  120A  158A  23DD  160A  158A  	fcall	_USART_putc
  6782                           
  6783                           ;usart.c: 108:         ptr++;
  6784  1CB0  1283               	bcf	3,5	;RP0=0, select bank0
  6785  1CB1  0AA6               	incf	USART_put_buffer@ptr,f
  6786                           
  6787                           ;usart.c: 109:         loop++;
  6788  1CB2  0AA5               	incf	USART_put_buffer@loop,f
  6789  1CB3  2C9C               	goto	l4970
  6790  1CB4                     __end_of_USART_put_buffer:	
  6791                           
  6792                           	psect	text23
  6793  1CE1                     __ptext23:	
  6794 ;; *************** function _Send_Reply_OK *****************
  6795 ;; Defined at:
  6796 ;;		line 658 in file "SlaveLiofilizadorVer1.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;		None
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;		None
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  1    wreg      void 
  6803 ;; Registers used:
  6804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6805 ;; Tracked objects:
  6806 ;;		On entry : 100/100
  6807 ;;		On exit  : 300/100
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6810 ;;      Params:         0       0       0       0       0
  6811 ;;      Locals:         0       0       0       0       0
  6812 ;;      Temps:          0       0       0       0       0
  6813 ;;      Totals:         0       0       0       0       0
  6814 ;;Total ram usage:        0 bytes
  6815 ;; Hardware stack levels used:    1
  6816 ;; Hardware stack levels required when called:    3
  6817 ;; This function calls:
  6818 ;;		_USART_put_string
  6819 ;; This function is called by:
  6820 ;;		_Decodify_Command
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           
  6825                           ;psect for function _Send_Reply_OK
  6826  1CE1                     _Send_Reply_OK:	
  6827  1CE1                     l6578:	
  6828                           ;incstack = 0
  6829                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6830                           
  6831                           
  6832                           ;SlaveLiofilizadorVer1.c: 659:      USART_put_string("OK");
  6833  1CE1  3034               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  6834  1CE2  1283               	bcf	3,5	;RP0=0, select bank0
  6835  1CE3  1303               	bcf	3,6	;RP1=0, select bank0
  6836  1CE4  00A1               	movwf	USART_put_string@vetor
  6837  1CE5  3080               	movlw	128
  6838  1CE6  00A2               	movwf	USART_put_string@vetor+1
  6839  1CE7  2CE8               	ljmp	l6332
  6840  1CE8                     __end_of_Send_Reply_OK:	
  6841  1CE8                     __ptext24:	
  6842 ;; *************** function _USART_put_string *****************
  6843 ;; Defined at:
  6844 ;;		line 168 in file "usart.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  6847 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  6850 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  1    wreg      void 
  6853 ;; Registers used:
  6854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6855 ;; Tracked objects:
  6856 ;;		On entry : 300/0
  6857 ;;		On exit  : 300/100
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6860 ;;      Params:         0       2       0       0       0
  6861 ;;      Locals:         0       2       0       0       0
  6862 ;;      Temps:          0       0       0       0       0
  6863 ;;      Totals:         0       4       0       0       0
  6864 ;;Total ram usage:        4 bytes
  6865 ;; Hardware stack levels used:    1
  6866 ;; Hardware stack levels required when called:    2
  6867 ;; This function calls:
  6868 ;;		_USART_putc
  6869 ;; This function is called by:
  6870 ;;		_Decodify_Command
  6871 ;;		_Send_Reply_OK
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           
  6876                           ;psect for function _USART_put_string
  6877  1CE8                     _USART_put_string:	
  6878  1CE8                     l6332:	
  6879                           ;incstack = 0
  6880                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6881                           
  6882                           
  6883                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  6884  1CE8  0821               	movf	USART_put_string@vetor,w
  6885  1CE9  00A3               	movwf	USART_put_string@ptr
  6886  1CEA  0822               	movf	USART_put_string@vetor+1,w
  6887  1CEB  00A4               	movwf	USART_put_string@ptr+1
  6888  1CEC                     l6338:	
  6889                           ;usart.c: 172:     while(*(ptr)){
  6890                           
  6891                           
  6892                           ;usart.c: 172:     while(*(ptr)){
  6893  1CEC  0824               	movf	USART_put_string@ptr+1,w
  6894  1CED  00FF               	movwf	127
  6895  1CEE  0823               	movf	USART_put_string@ptr,w
  6896  1CEF  0084               	movwf	4
  6897  1CF0  160A  158A  2000  160A  158A  	fcall	stringtab
  6898  1CF5  3A00               	xorlw	0
  6899  1CF6  1903               	btfsc	3,2
  6900  1CF7  2D0B               	goto	l6340
  6901                           
  6902                           ;usart.c: 173:         USART_putc(*(ptr));
  6903  1CF8  0824               	movf	USART_put_string@ptr+1,w
  6904  1CF9  00FF               	movwf	127
  6905  1CFA  0823               	movf	USART_put_string@ptr,w
  6906  1CFB  0084               	movwf	4
  6907  1CFC  160A  158A  2000  160A  158A  	fcall	stringtab
  6908  1D01  120A  158A  23DD  160A  158A  	fcall	_USART_putc
  6909                           
  6910                           ;usart.c: 174:         ptr++;
  6911  1D06  1283               	bcf	3,5	;RP0=0, select bank0
  6912  1D07  0AA3               	incf	USART_put_string@ptr,f
  6913  1D08  1903               	skipnz
  6914  1D09  0AA4               	incf	USART_put_string@ptr+1,f
  6915  1D0A  2CEC               	goto	l6338
  6916  1D0B                     l6340:	
  6917                           
  6918                           ;usart.c: 176:     USART_putc(*(ptr));
  6919  1D0B  0824               	movf	USART_put_string@ptr+1,w
  6920  1D0C  00FF               	movwf	127
  6921  1D0D  0823               	movf	USART_put_string@ptr,w
  6922  1D0E  0084               	movwf	4
  6923  1D0F  160A  158A  2000   	fcall	stringtab
  6924  1D12  120A  158A  2BDD   	ljmp	_USART_putc
  6925  1D15                     __end_of_USART_put_string:	
  6926                           
  6927                           	psect	text29
  6928  1C29                     __ptext29:	
  6929 ;; *************** function _PROCULUS_VP_Write_String *****************
  6930 ;; Defined at:
  6931 ;;		line 205 in file "proculus.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  vp              2   19[BANK1 ] unsigned int 
  6934 ;;  text            1   21[BANK1 ] PTR unsigned char 
  6935 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;		None
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  1    wreg      void 
  6940 ;; Registers used:
  6941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6942 ;; Tracked objects:
  6943 ;;		On entry : 300/100
  6944 ;;		On exit  : 300/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6947 ;;      Params:         0       0       3       0       0
  6948 ;;      Locals:         0       0       0       0       0
  6949 ;;      Temps:          0       0       0       0       0
  6950 ;;      Totals:         0       0       3       0       0
  6951 ;;Total ram usage:        3 bytes
  6952 ;; Hardware stack levels used:    1
  6953 ;; Hardware stack levels required when called:    4
  6954 ;; This function calls:
  6955 ;;		_PROCULUS_VP_Write
  6956 ;;		_strlen
  6957 ;; This function is called by:
  6958 ;;		_Decodify_Command
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962                           
  6963                           ;psect for function _PROCULUS_VP_Write_String
  6964  1C29                     _PROCULUS_VP_Write_String:	
  6965                           
  6966                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  6967                           
  6968                           ;incstack = 0
  6969                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6970  1C29  0834               	movf	(PROCULUS_VP_Write_String@vp+1)^(0+128),w
  6971  1C2A  00AC               	movwf	(PROCULUS_VP_Write@vp+1)^(0+128)
  6972  1C2B  0833               	movf	PROCULUS_VP_Write_String@vp^(0+128),w
  6973  1C2C  00AB               	movwf	PROCULUS_VP_Write@vp^(0+128)
  6974  1C2D  0835               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  6975  1C2E  00AD               	movwf	PROCULUS_VP_Write@vetor^(0+128)
  6976  1C2F  3001               	movlw	1
  6977  1C30  00AE               	movwf	(PROCULUS_VP_Write@vetor+1)^(0+128)
  6978  1C31  0835               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  6979  1C32  120A  158A  2795   	fcall	_strlen
  6980  1C35  0820               	movf	?_strlen,w
  6981  1C36  3E01               	addlw	1
  6982  1C37  1683               	bsf	3,5	;RP0=1, select bank1
  6983  1C38  00AF               	movwf	PROCULUS_VP_Write@size^(0+128)
  6984  1C39  120A  158A  280A   	ljmp	l6492
  6985  1C3C                     __end_of_PROCULUS_VP_Write_String:	
  6986                           
  6987                           	psect	text31
  6988  080A                     __ptext31:	
  6989 ;; *************** function _PROCULUS_VP_Write *****************
  6990 ;; Defined at:
  6991 ;;		line 40 in file "proculus.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  vp              2   11[BANK1 ] unsigned int 
  6994 ;;  vetor           2   13[BANK1 ] PTR unsigned char 
  6995 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  6996 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  6997 ;;  size            1   15[BANK1 ] unsigned char 
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;  i               1   18[BANK1 ] unsigned char 
  7000 ;; Return value:  Size  Location     Type
  7001 ;;                  1    wreg      void 
  7002 ;; Registers used:
  7003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7004 ;; Tracked objects:
  7005 ;;		On entry : B00/900
  7006 ;;		On exit  : 300/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7009 ;;      Params:         0       0       5       0       0
  7010 ;;      Locals:         0       0       1       0       0
  7011 ;;      Temps:          0       0       2       0       0
  7012 ;;      Totals:         0       0       8       0       0
  7013 ;;Total ram usage:        8 bytes
  7014 ;; Hardware stack levels used:    1
  7015 ;; Hardware stack levels required when called:    3
  7016 ;; This function calls:
  7017 ;;		_PROCULUS_Delay
  7018 ;;		_USART_put_int
  7019 ;;		_USART_putc
  7020 ;; This function is called by:
  7021 ;;		_PROCULUS_VP_Write_String
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           
  7026                           ;psect for function _PROCULUS_VP_Write
  7027  080A                     _PROCULUS_VP_Write:	
  7028  080A                     l6492:	
  7029                           ;incstack = 0
  7030                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7031                           
  7032                           
  7033                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  7034  080A  30A5               	movlw	165
  7035  080B  00A8               	movwf	USART_put_int@value^(0+128)
  7036  080C  305A               	movlw	90
  7037  080D  00A9               	movwf	(USART_put_int@value^(0+128)+1)
  7038  080E  2787  120A  158A   	fcall	_USART_put_int
  7039                           
  7040                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  7041  0811  082F               	movf	PROCULUS_VP_Write@size^(0+128),w
  7042  0812  3E03               	addlw	3
  7043  0813  23DD  120A  158A   	fcall	_USART_putc
  7044                           
  7045                           ;proculus.c: 43:      USART_putc(0x82);
  7046  0816  3082               	movlw	130
  7047  0817  23DD  120A  158A   	fcall	_USART_putc
  7048                           
  7049                           ;proculus.c: 44:      USART_put_int(vp);
  7050  081A  082C               	movf	(PROCULUS_VP_Write@vp+1)^(0+128),w
  7051  081B  00A9               	movwf	(USART_put_int@value+1)^(0+128)
  7052  081C  082B               	movf	PROCULUS_VP_Write@vp^(0+128),w
  7053  081D  00A8               	movwf	USART_put_int@value^(0+128)
  7054  081E  2787  120A  158A   	fcall	_USART_put_int
  7055                           
  7056                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  7057  0821  01B2               	clrf	PROCULUS_VP_Write@i^(0+128)
  7058  0822                     l6504:	
  7059  0822  082F               	movf	PROCULUS_VP_Write@size^(0+128),w
  7060  0823  0232               	subwf	PROCULUS_VP_Write@i^(0+128),w
  7061  0824  1803               	btfsc	3,0
  7062  0825  2838               	goto	l6506
  7063                           
  7064                           ;proculus.c: 46:          USART_putc(vetor[i]);
  7065  0826  0832               	movf	PROCULUS_VP_Write@i^(0+128),w
  7066  0827  072D               	addwf	PROCULUS_VP_Write@vetor^(0+128),w
  7067  0828  00B0               	movwf	??_PROCULUS_VP_Write^(0+128)
  7068  0829  082E               	movf	(PROCULUS_VP_Write@vetor+1)^(0+128),w
  7069  082A  1803               	skipnc
  7070  082B  3E01               	addlw	1
  7071  082C  00B1               	movwf	(??_PROCULUS_VP_Write^(0+128)+1)
  7072  082D  0830               	movf	??_PROCULUS_VP_Write^(0+128),w
  7073  082E  0084               	movwf	4
  7074  082F  1783               	bsf	3,7
  7075  0830  1C31               	btfss	(??_PROCULUS_VP_Write+1)^(0+128),0
  7076  0831  1383               	bcf	3,7
  7077  0832  0800               	movf	0,w
  7078  0833  23DD  120A  158A   	fcall	_USART_putc
  7079  0836  0AB2               	incf	PROCULUS_VP_Write@i^(0+128),f
  7080  0837  2822               	goto	l6504
  7081  0838                     l6506:	
  7082                           
  7083                           ;proculus.c: 48:      PROCULUS_Delay(1);
  7084  0838  1283               	bcf	3,5	;RP0=0, select bank0
  7085  0839  01A0               	clrf	PROCULUS_Delay@tempo_ms
  7086  083A  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  7087  083B  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  7088  083C  160A  158A  2DA6   	ljmp	l4268
  7089  083F                     __end_of_PROCULUS_VP_Write:	
  7090  083F                     __ptext14:	
  7091 ;; *************** function _Decodify_Command *****************
  7092 ;; Defined at:
  7093 ;;		line 305 in file "SlaveLiofilizadorVer1.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;		None
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  ss             10   51[BANK1 ] unsigned char [10]
  7098 ;;  mm             10   41[BANK1 ] unsigned char [10]
  7099 ;;  hh             10   31[BANK1 ] unsigned char [10]
  7100 ;;  sizedata        1   71[BANK1 ] unsigned char 
  7101 ;;  add             1   63[BANK1 ] unsigned char 
  7102 ;;  add_24LCxxxx    4   72[BANK1 ] unsigned long 
  7103 ;;  OutPut          4   66[BANK1 ] float 
  7104 ;;  tempint         2   64[BANK1 ] int 
  7105 ;;  dados           2   61[BANK1 ] int 
  7106 ;;  tempchar        1   70[BANK1 ] unsigned char 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  1    wreg      void 
  7109 ;; Registers used:
  7110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7111 ;; Tracked objects:
  7112 ;;		On entry : 300/300
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7116 ;;      Params:         0       0       0       0       0
  7117 ;;      Locals:         0       0      45       0       0
  7118 ;;      Temps:          0       0       2       0       0
  7119 ;;      Totals:         0       0      47       0       0
  7120 ;;Total ram usage:       47 bytes
  7121 ;; Hardware stack levels used:    1
  7122 ;; Hardware stack levels required when called:    6
  7123 ;; This function calls:
  7124 ;;		_EEPROM_24C1025_Fill_All
  7125 ;;		_EEPROM_24C1025_Read_Buffer
  7126 ;;		_EEPROM_24C1025_Read_Byte
  7127 ;;		_EEPROM_24C1025_Read_Int
  7128 ;;		_EEPROM_24C1025_Read_Str
  7129 ;;		_EEPROM_24C1025_Write_Buffer
  7130 ;;		_EEPROM_24C1025_Write_Byte
  7131 ;;		_EEPROM_24C1025_Write_Int
  7132 ;;		_EEPROM_24C1025_Write_Str
  7133 ;;		_EEPROM_Read_Byte
  7134 ;;		_EEPROM_Read_Integer
  7135 ;;		_EEPROM_Read_String
  7136 ;;		_EEPROM_Write_Byte
  7137 ;;		_EEPROM_Write_Integer
  7138 ;;		_EEPROM_Write_String
  7139 ;;		_Load_Work
  7140 ;;		_PROCULUS_Buzzer
  7141 ;;		_PROCULUS_Show_Screen
  7142 ;;		_PROCULUS_VP_Write_String
  7143 ;;		_Save_Log
  7144 ;;		_Send_Reply_OK
  7145 ;;		_Send_To_MB
  7146 ;;		_USART_put_buffer
  7147 ;;		_USART_put_int
  7148 ;;		_USART_put_string
  7149 ;;		_USART_putc
  7150 ;;		_USART_to_Protocol
  7151 ;;		___flmul
  7152 ;;		___fltol
  7153 ;;		_itoa
  7154 ;;		_strcat
  7155 ;;		_strcpy
  7156 ;;		_strlen
  7157 ;; This function is called by:
  7158 ;;		_main
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           
  7163                           ;psect for function _Decodify_Command
  7164  083F                     _Decodify_Command:	
  7165                           
  7166                           ;SlaveLiofilizadorVer1.c: 307:     int dados;;SlaveLiofilizadorVer1.c: 308:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 309:     int tempint;;SlaveLiofilizadorVer1.c: 310:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 311:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 323:     USART_to_Protocol(&usart_protocol);
  7167                           
  7168                           ;incstack = 0
  7169                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7170  083F  30CC               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  7171  0840  120A  118A  27B1  120A  158A  	fcall	_USART_to_Protocol
  7172                           
  7173                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  7174  0845  1683               	bsf	3,5	;RP0=1, select bank3
  7175  0846  1703               	bsf	3,6	;RP1=1, select bank3
  7176  0847  0853               	movf	(_usart_protocol^(0+384)+7),w
  7177  0848  1303               	bcf	3,6	;RP1=0, select bank1
  7178  0849  00EB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  7179                           
  7180                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  7181  084A  1703               	bsf	3,6	;RP1=1, select bank3
  7182  084B  0854               	movf	(_usart_protocol^(0+384)+8),w
  7183  084C  1303               	bcf	3,6	;RP1=0, select bank1
  7184  084D  00EA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  7185                           
  7186                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  7187  084E  1703               	bsf	3,6	;RP1=1, select bank3
  7188  084F  0855               	movf	(_usart_protocol^(0+384)+9),w
  7189  0850  1303               	bcf	3,6	;RP1=0, select bank1
  7190  0851  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  7191                           
  7192                           ;SlaveLiofilizadorVer1.c: 328:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  7193  0852  1703               	bsf	3,6	;RP1=1, select bank3
  7194  0853  0856               	movf	(_usart_protocol^(0+384)+10),w
  7195  0854  1303               	bcf	3,6	;RP1=0, select bank1
  7196  0855  00E8               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  7197                           
  7198                           ;SlaveLiofilizadorVer1.c: 335:     switch(usart_protocol.command){
  7199  0856  2B43               	goto	l7316
  7200  0857                     l7106:	
  7201                           
  7202                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  7203  0857  300B               	movlw	11
  7204  0858  23A1               	fcall	_Send_To_MB
  7205                           
  7206                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string("v1.0.7");
  7207  0859  302D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  7208  085A  1283               	bcf	3,5	;RP0=0, select bank0
  7209  085B  00A1               	movwf	USART_put_string@vetor
  7210  085C  3080               	movlw	128
  7211  085D  00A2               	movwf	USART_put_string@vetor+1
  7212  085E  160A  158A  2CE8   	ljmp	l6332
  7213  0861                     l7110:	
  7214                           ;SlaveLiofilizadorVer1.c: 346:              break;
  7215                           
  7216                           
  7217                           ;SlaveLiofilizadorVer1.c: 349:              if(usart_protocol.value[0]==0)
  7218  0861  1703               	bsf	3,6	;RP1=1, select bank3
  7219  0862  0852               	movf	(_usart_protocol^(0+384)+6),w
  7220  0863  1D03               	btfss	3,2
  7221  0864  2873               	goto	l7114
  7222                           
  7223                           ;SlaveLiofilizadorVer1.c: 350:                 OutPut=Temperatura0;
  7224  0865  0817               	movf	(_Temperatura0+3)^(0+384),w
  7225  0866  1303               	bcf	3,6	;RP1=0, select bank1
  7226  0867  00E5               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  7227  0868  1703               	bsf	3,6	;RP1=1, select bank3
  7228  0869  0816               	movf	(_Temperatura0+2)^(0+384),w
  7229  086A  1303               	bcf	3,6	;RP1=0, select bank1
  7230  086B  00E4               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  7231  086C  1703               	bsf	3,6	;RP1=1, select bank3
  7232  086D  0815               	movf	(_Temperatura0+1)^(0+384),w
  7233  086E  1303               	bcf	3,6	;RP1=0, select bank1
  7234  086F  00E3               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  7235  0870  1703               	bsf	3,6	;RP1=1, select bank3
  7236  0871  0814               	movf	_Temperatura0^(0+384),w
  7237  0872  2880               	goto	L8
  7238  0873                     l7114:	
  7239                           
  7240                           ;SlaveLiofilizadorVer1.c: 352:                 OutPut=Temperatura1;
  7241  0873  0813               	movf	(_Temperatura1+3)^(0+384),w
  7242  0874  1303               	bcf	3,6	;RP1=0, select bank1
  7243  0875  00E5               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  7244  0876  1703               	bsf	3,6	;RP1=1, select bank3
  7245  0877  0812               	movf	(_Temperatura1+2)^(0+384),w
  7246  0878  1303               	bcf	3,6	;RP1=0, select bank1
  7247  0879  00E4               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  7248  087A  1703               	bsf	3,6	;RP1=1, select bank3
  7249  087B  0811               	movf	(_Temperatura1+1)^(0+384),w
  7250  087C  1303               	bcf	3,6	;RP1=0, select bank1
  7251  087D  00E3               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  7252  087E  1703               	bsf	3,6	;RP1=1, select bank3
  7253  087F  0810               	movf	_Temperatura1^(0+384),w
  7254  0880                     L8:	
  7255  0880  1303               	bcf	3,6	;RP1=0, select bank1
  7256  0881  00E2               	movwf	Decodify_Command@OutPut^(0+128)
  7257                           
  7258                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  7259  0882  3041               	movlw	65
  7260  0883  1283               	bcf	3,5	;RP0=0, select bank0
  7261  0884  00D8               	movwf	___flmul@b+3
  7262  0885  3020               	movlw	32
  7263  0886  00D7               	movwf	___flmul@b+2
  7264  0887  01D6               	clrf	___flmul@b+1
  7265  0888  01D5               	clrf	___flmul@b
  7266  0889  1683               	bsf	3,5	;RP0=1, select bank1
  7267  088A  0865               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  7268  088B  1283               	bcf	3,5	;RP0=0, select bank0
  7269  088C  00DC               	movwf	___flmul@a+3
  7270  088D  1683               	bsf	3,5	;RP0=1, select bank1
  7271  088E  0864               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  7272  088F  1283               	bcf	3,5	;RP0=0, select bank0
  7273  0890  00DB               	movwf	___flmul@a+2
  7274  0891  1683               	bsf	3,5	;RP0=1, select bank1
  7275  0892  0863               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  7276  0893  1283               	bcf	3,5	;RP0=0, select bank0
  7277  0894  00DA               	movwf	___flmul@a+1
  7278  0895  1683               	bsf	3,5	;RP0=1, select bank1
  7279  0896  0862               	movf	Decodify_Command@OutPut^(0+128),w
  7280  0897  1283               	bcf	3,5	;RP0=0, select bank0
  7281  0898  00D9               	movwf	___flmul@a
  7282  0899  120A  118A  20EB  120A  158A  	fcall	___flmul
  7283  089E  0858               	movf	?___flmul+3,w
  7284  089F  1683               	bsf	3,5	;RP0=1, select bank1
  7285  08A0  00E5               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  7286  08A1  1283               	bcf	3,5	;RP0=0, select bank0
  7287  08A2  0857               	movf	?___flmul+2,w
  7288  08A3  1683               	bsf	3,5	;RP0=1, select bank1
  7289  08A4  00E4               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  7290  08A5  1283               	bcf	3,5	;RP0=0, select bank0
  7291  08A6  0856               	movf	?___flmul+1,w
  7292  08A7  1683               	bsf	3,5	;RP0=1, select bank1
  7293  08A8  00E3               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  7294  08A9  1283               	bcf	3,5	;RP0=0, select bank0
  7295  08AA  0855               	movf	?___flmul,w
  7296  08AB  1683               	bsf	3,5	;RP0=1, select bank1
  7297  08AC  00E2               	movwf	Decodify_Command@OutPut^(0+128)
  7298                           
  7299                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  7300  08AD  138B               	bcf	11,7	;volatile
  7301                           
  7302                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  7303  08AE  3002               	movlw	2
  7304  08AF  23A1               	fcall	_Send_To_MB
  7305                           
  7306                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  7307  08B0  0865               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  7308  08B1  00A3               	movwf	(___fltol@f1+3)^(0+128)
  7309  08B2  0864               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  7310  08B3  00A2               	movwf	(___fltol@f1+2)^(0+128)
  7311  08B4  0863               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  7312  08B5  00A1               	movwf	(___fltol@f1+1)^(0+128)
  7313  08B6  0862               	movf	Decodify_Command@OutPut^(0+128),w
  7314  08B7  00A0               	movwf	___fltol@f1^(0+128)
  7315  08B8  120A  118A  225A  120A  158A  	fcall	___fltol
  7316  08BD  1683               	bsf	3,5	;RP0=1, select bank1
  7317  08BE  0821               	movf	(?___fltol+1)^(0+128),w
  7318  08BF  00A9               	movwf	(USART_put_int@value+1)^(0+128)
  7319  08C0  0820               	movf	?___fltol^(0+128),w
  7320  08C1  00A8               	movwf	USART_put_int@value^(0+128)
  7321  08C2  2787               	fcall	_USART_put_int
  7322                           
  7323                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  7324  08C3  178B               	bsf	11,7	;volatile
  7325                           
  7326                           ;SlaveLiofilizadorVer1.c: 375:              break;
  7327  08C4  0008               	return
  7328  08C5                     l7126:	
  7329                           
  7330                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  7331  08C5  1703               	bsf	3,6	;RP1=1, select bank3
  7332  08C6  0852               	movf	(_usart_protocol^(0+384)+6),w
  7333  08C7  1303               	bcf	3,6	;RP1=0, select bank1
  7334  08C8  00EB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  7335                           
  7336                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  7337  08C9  1703               	bsf	3,6	;RP1=1, select bank3
  7338  08CA  0853               	movf	(_usart_protocol^(0+384)+7),w
  7339  08CB  1303               	bcf	3,6	;RP1=0, select bank1
  7340  08CC  00EA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  7341                           
  7342                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  7343  08CD  1703               	bsf	3,6	;RP1=1, select bank3
  7344  08CE  0854               	movf	(_usart_protocol^(0+384)+8),w
  7345  08CF  1303               	bcf	3,6	;RP1=0, select bank1
  7346  08D0  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  7347                           
  7348                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  7349  08D1  1703               	bsf	3,6	;RP1=1, select bank3
  7350  08D2  0855               	movf	(_usart_protocol^(0+384)+9),w
  7351  08D3  1303               	bcf	3,6	;RP1=0, select bank1
  7352  08D4  00E8               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  7353                           
  7354                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  7355  08D5  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7356  08D6  00B4               	movwf	(Save_Log@add_datalog+3)^(0+128)
  7357  08D7  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7358  08D8  00B3               	movwf	(Save_Log@add_datalog+2)^(0+128)
  7359  08D9  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7360  08DA  00B2               	movwf	(Save_Log@add_datalog+1)^(0+128)
  7361  08DB  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7362  08DC  00B1               	movwf	Save_Log@add_datalog^(0+128)
  7363  08DD  120A  118A  2068   	fcall	_Save_Log
  7364                           
  7365                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  7366  08E0  1683               	bsf	3,5	;RP0=1, select bank3
  7367  08E1  1703               	bsf	3,6	;RP1=1, select bank3
  7368  08E2  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  7369  08E3  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  7370                           
  7371                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  7372  08E4  01AA               	clrf	_milisegundo^(0+384)	;volatile
  7373  08E5  01AB               	clrf	(_milisegundo+1)^(0+384)	;volatile
  7374                           
  7375                           ;SlaveLiofilizadorVer1.c: 387:              break;
  7376  08E6  0008               	return
  7377  08E7                     l7134:	
  7378                           
  7379                           ;SlaveLiofilizadorVer1.c: 391:              if(usart_protocol.value[0]==0)
  7380  08E7  1703               	bsf	3,6	;RP1=1, select bank3
  7381  08E8  0852               	movf	(_usart_protocol^(0+384)+6),w
  7382  08E9  1D03               	btfss	3,2
  7383  08EA  28ED               	goto	l307
  7384                           
  7385                           ;SlaveLiofilizadorVer1.c: 392:                 generic_status.flag_global_hot=0;
  7386  08EB  1376               	bcf	_generic_status,6
  7387  08EC  0008               	return
  7388  08ED                     l307:	
  7389                           ;SlaveLiofilizadorVer1.c: 393:              else
  7390                           
  7391                           
  7392                           ;SlaveLiofilizadorVer1.c: 394:                 generic_status.flag_global_hot=1;
  7393  08ED  1776               	bsf	_generic_status,6
  7394  08EE  0008               	return
  7395  08EF                     l7138:	
  7396                           
  7397                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  7398  08EF  3002               	movlw	2
  7399  08F0  23A1  120A  158A   	fcall	_Send_To_MB
  7400                           
  7401                           ;SlaveLiofilizadorVer1.c: 409:              USART_put_int(3);
  7402  08F3  3003               	movlw	3
  7403  08F4  00A8               	movwf	USART_put_int@value^(0+128)
  7404  08F5  01A9               	clrf	(USART_put_int@value+1)^(0+128)
  7405  08F6  2F87               	ljmp	l6160
  7406  08F7                     l7142:	
  7407                           ;SlaveLiofilizadorVer1.c: 411:              break;
  7408                           
  7409                           
  7410                           ;SlaveLiofilizadorVer1.c: 420:              Send_To_MB(3);
  7411  08F7  3003               	movlw	3
  7412  08F8  23A1               	fcall	_Send_To_MB
  7413                           
  7414                           ;SlaveLiofilizadorVer1.c: 421:              Send_Reply_OK();
  7415  08F9  160A  158A  24E1  120A  158A  	fcall	_Send_Reply_OK
  7416                           
  7417                           ;SlaveLiofilizadorVer1.c: 422:              Load_Work();
  7418  08FE  120A  118A  2D09   	ljmp	l6544
  7419  0901                     l7148:	
  7420                           ;SlaveLiofilizadorVer1.c: 423:              break;
  7421                           
  7422                           
  7423                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  7424  0901  1703               	bsf	3,6	;RP1=1, select bank3
  7425  0902  0853               	movf	(_usart_protocol^(0+384)+7),w
  7426  0903  1283               	bcf	3,5	;RP0=0, select bank0
  7427  0904  1303               	bcf	3,6	;RP1=0, select bank0
  7428  0905  00A0               	movwf	EEPROM_Write_Byte@dado
  7429  0906  1683               	bsf	3,5	;RP0=1, select bank3
  7430  0907  1703               	bsf	3,6	;RP1=1, select bank3
  7431  0908  0852               	movf	(_usart_protocol^(0+384)+6),w
  7432  0909  160A  158A  26E3  120A  158A  	fcall	_EEPROM_Write_Byte
  7433  090E                     L9:	
  7434                           
  7435                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  7436  090E  3003               	movlw	3
  7437  090F  23A1               	fcall	_Send_To_MB
  7438                           
  7439                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  7440  0910  160A  158A  2CE1   	ljmp	l6578
  7441  0913                     l7152:	
  7442                           ;SlaveLiofilizadorVer1.c: 432:              break;
  7443                           
  7444                           
  7445                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  7446  0913  1703               	bsf	3,6	;RP1=1, select bank3
  7447  0914  0852               	movf	(_usart_protocol^(0+384)+6),w
  7448  0915  120A  118A  25E1  120A  158A  	fcall	_EEPROM_Read_Byte
  7449  091A  1683               	bsf	3,5	;RP0=1, select bank1
  7450  091B  1303               	bcf	3,6	;RP1=0, select bank1
  7451  091C  00E6               	movwf	Decodify_Command@tempchar^(0+128)
  7452                           
  7453                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  7454  091D  3001               	movlw	1
  7455  091E  23A1  120A  158A   	fcall	_Send_To_MB
  7456                           
  7457                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  7458  0921  0866               	movf	Decodify_Command@tempchar^(0+128),w
  7459  0922  2BDD               	ljmp	_USART_putc
  7460  0923                     l7158:	
  7461                           ;SlaveLiofilizadorVer1.c: 437:              break;
  7462                           
  7463                           
  7464                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  7465  0923  1703               	bsf	3,6	;RP1=1, select bank3
  7466  0924  0852               	movf	(_usart_protocol^(0+384)+6),w
  7467  0925  1303               	bcf	3,6	;RP1=0, select bank1
  7468  0926  00DF               	movwf	Decodify_Command@add^(0+128)
  7469                           
  7470                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  7471  0927  1703               	bsf	3,6	;RP1=1, select bank3
  7472  0928  0853               	movf	(_usart_protocol^(0+384)+7),w
  7473  0929  1303               	bcf	3,6	;RP1=0, select bank1
  7474  092A  00DE               	movwf	(Decodify_Command@dados+1)^(0+128)
  7475  092B  1703               	bsf	3,6	;RP1=1, select bank3
  7476  092C  0854               	movf	(_usart_protocol^(0+384)+8),w
  7477  092D  1303               	bcf	3,6	;RP1=0, select bank1
  7478  092E  00DD               	movwf	Decodify_Command@dados^(0+128)
  7479                           
  7480                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  7481  092F  085E               	movf	(Decodify_Command@dados+1)^(0+128),w
  7482  0930  1283               	bcf	3,5	;RP0=0, select bank0
  7483  0931  00A6               	movwf	EEPROM_Write_Integer@dado+1
  7484  0932  1683               	bsf	3,5	;RP0=1, select bank1
  7485  0933  085D               	movf	Decodify_Command@dados^(0+128),w
  7486  0934  1283               	bcf	3,5	;RP0=0, select bank0
  7487  0935  00A5               	movwf	EEPROM_Write_Integer@dado
  7488  0936  1683               	bsf	3,5	;RP0=1, select bank1
  7489  0937  085F               	movf	Decodify_Command@add^(0+128),w
  7490  0938  160A  158A  26A8  120A  158A  	fcall	_EEPROM_Write_Integer
  7491  093D  290E               	goto	L9
  7492  093E                     l7166:	
  7493                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  7494                           
  7495                           
  7496                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  7497  093E  1703               	bsf	3,6	;RP1=1, select bank3
  7498  093F  0852               	movf	(_usart_protocol^(0+384)+6),w
  7499  0940  120A  118A  2602  120A  158A  	fcall	_EEPROM_Read_Integer
  7500  0945  0824               	movf	?_EEPROM_Read_Integer+1,w
  7501  0946  1683               	bsf	3,5	;RP0=1, select bank1
  7502  0947  00E1               	movwf	(Decodify_Command@tempint+1)^(0+128)
  7503  0948  1283               	bcf	3,5	;RP0=0, select bank0
  7504  0949  0823               	movf	?_EEPROM_Read_Integer,w
  7505  094A                     L10:	
  7506  094A  1683               	bsf	3,5	;RP0=1, select bank1
  7507  094B  00E0               	movwf	Decodify_Command@tempint^(0+128)
  7508                           
  7509                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  7510  094C  3002               	movlw	2
  7511  094D  23A1  120A  158A   	fcall	_Send_To_MB
  7512                           
  7513                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  7514  0950  0861               	movf	(Decodify_Command@tempint+1)^(0+128),w
  7515  0951  00A9               	movwf	(USART_put_int@value+1)^(0+128)
  7516  0952  0860               	movf	Decodify_Command@tempint^(0+128),w
  7517  0953  00A8               	movwf	USART_put_int@value^(0+128)
  7518  0954  2F87               	ljmp	l6160
  7519  0955                     l7172:	
  7520                           ;SlaveLiofilizadorVer1.c: 452:              break;
  7521                           
  7522                           
  7523                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  7524  0955  30D3               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  7525  0956  1283               	bcf	3,5	;RP0=0, select bank0
  7526  0957  00A5               	movwf	EEPROM_Write_String@dado
  7527  0958  1683               	bsf	3,5	;RP0=1, select bank3
  7528  0959  1703               	bsf	3,6	;RP1=1, select bank3
  7529  095A  0852               	movf	(_usart_protocol^(0+384)+6),w
  7530  095B  160A  158A  26CB  120A  158A  	fcall	_EEPROM_Write_String
  7531  0960  290E               	goto	L9
  7532  0961                     l7178:	
  7533                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  7534                           
  7535                           
  7536                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 463:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  7537  0961  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7538  0962  1283               	bcf	3,5	;RP0=0, select bank0
  7539  0963  00A3               	movwf	EEPROM_Read_String@dado
  7540  0964  1683               	bsf	3,5	;RP0=1, select bank3
  7541  0965  1703               	bsf	3,6	;RP1=1, select bank3
  7542  0966  0852               	movf	(_usart_protocol^(0+384)+6),w
  7543  0967  120A  118A  24F5  120A  158A  	fcall	_EEPROM_Read_String
  7544                           
  7545                           ;SlaveLiofilizadorVer1.c: 464:              Send_To_MB(sizeof(texto));
  7546  096C  3010               	movlw	16
  7547  096D                     L11:	
  7548  096D  23A1  120A  158A   	fcall	_Send_To_MB
  7549                           
  7550                           ;SlaveLiofilizadorVer1.c: 465:              USART_put_string(texto);
  7551  0970  27F4               	fcall	PL80	;call to abstracted procedure
  7552  0971  160A  158A  2CE8   	ljmp	l6332
  7553  0974                     l7184:	
  7554                           ;SlaveLiofilizadorVer1.c: 466:              break;
  7555                           
  7556                           
  7557                           ;SlaveLiofilizadorVer1.c: 471:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  7558  0974  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7559  0975  1283               	bcf	3,5	;RP0=0, select bank0
  7560  0976  00B2               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  7561  0977  1683               	bsf	3,5	;RP0=1, select bank1
  7562  0978  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7563  0979  1283               	bcf	3,5	;RP0=0, select bank0
  7564  097A  00B1               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  7565  097B  1683               	bsf	3,5	;RP0=1, select bank1
  7566  097C  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7567  097D  1283               	bcf	3,5	;RP0=0, select bank0
  7568  097E  00B0               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  7569  097F  1683               	bsf	3,5	;RP0=1, select bank1
  7570  0980  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7571  0981  1283               	bcf	3,5	;RP0=0, select bank0
  7572  0982  00AF               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  7573  0983  1683               	bsf	3,5	;RP0=1, select bank3
  7574  0984  1703               	bsf	3,6	;RP1=1, select bank3
  7575  0985  0857               	movf	(_usart_protocol^(0+384)+11),w
  7576  0986  1283               	bcf	3,5	;RP0=0, select bank0
  7577  0987  1303               	bcf	3,6	;RP1=0, select bank0
  7578  0988  00B3               	movwf	EEPROM_24C1025_Write_Byte@data
  7579  0989  1683               	bsf	3,5	;RP0=1, select bank3
  7580  098A  1703               	bsf	3,6	;RP1=1, select bank3
  7581  098B  0852               	movf	(_usart_protocol^(0+384)+6),w
  7582  098C  160A  158A  243C  120A  158A  	fcall	_EEPROM_24C1025_Write_Byte
  7583  0991  290E               	goto	L9
  7584  0992                     l7190:	
  7585                           ;SlaveLiofilizadorVer1.c: 474:              Send_To_MB(3);
  7586                           
  7587                           
  7588                           ;SlaveLiofilizadorVer1.c: 478:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  7589  0992  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7590  0993  1283               	bcf	3,5	;RP0=0, select bank0
  7591  0994  00B4               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  7592  0995  1683               	bsf	3,5	;RP0=1, select bank1
  7593  0996  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7594  0997  1283               	bcf	3,5	;RP0=0, select bank0
  7595  0998  00B3               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  7596  0999  1683               	bsf	3,5	;RP0=1, select bank1
  7597  099A  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7598  099B  1283               	bcf	3,5	;RP0=0, select bank0
  7599  099C  00B2               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  7600  099D  1683               	bsf	3,5	;RP0=1, select bank1
  7601  099E  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7602  099F  1283               	bcf	3,5	;RP0=0, select bank0
  7603  09A0  00B1               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  7604  09A1  1683               	bsf	3,5	;RP0=1, select bank3
  7605  09A2  1703               	bsf	3,6	;RP1=1, select bank3
  7606  09A3  0852               	movf	(_usart_protocol^(0+384)+6),w
  7607  09A4  160A  158A  2465  120A  158A  	fcall	_EEPROM_24C1025_Read_Byte
  7608  09A9  1683               	bsf	3,5	;RP0=1, select bank1
  7609  09AA  00E6               	movwf	Decodify_Command@tempchar^(0+128)
  7610                           
  7611                           ;SlaveLiofilizadorVer1.c: 482:              Send_To_MB(1);
  7612  09AB  3001               	movlw	1
  7613  09AC  23A1  120A  158A   	fcall	_Send_To_MB
  7614                           
  7615                           ;SlaveLiofilizadorVer1.c: 483:              USART_putc(tempchar);
  7616  09AF  0866               	movf	Decodify_Command@tempchar^(0+128),w
  7617  09B0  2BDD               	ljmp	_USART_putc
  7618  09B1                     l7196:	
  7619                           ;SlaveLiofilizadorVer1.c: 484:              break;
  7620                           
  7621                           
  7622                           ;SlaveLiofilizadorVer1.c: 486:              {;SlaveLiofilizadorVer1.c: 487:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  7623  09B1  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7624  09B2  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  7625  09B3  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7626  09B4  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  7627  09B5  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7628  09B6  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  7629  09B7  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7630  09B8  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  7631  09B9  1703               	bsf	3,6	;RP1=1, select bank3
  7632  09BA  0857               	movf	(_usart_protocol^(0+384)+11),w
  7633  09BB  1303               	bcf	3,6	;RP1=0, select bank1
  7634  09BC  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  7635  09BD  1703               	bsf	3,6	;RP1=1, select bank3
  7636  09BE  0858               	movf	(_usart_protocol^(0+384)+12),w
  7637  09BF  1303               	bcf	3,6	;RP1=0, select bank1
  7638  09C0  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  7639  09C1  1703               	bsf	3,6	;RP1=1, select bank3
  7640  09C2  0852               	movf	(_usart_protocol^(0+384)+6),w
  7641  09C3  120A  118A  20CC  120A  158A  	fcall	_EEPROM_24C1025_Write_Int
  7642  09C8  290E               	goto	L9
  7643  09C9                     l7202:	
  7644                           ;SlaveLiofilizadorVer1.c: 492:              Send_To_MB(3);
  7645                           
  7646                           
  7647                           ;SlaveLiofilizadorVer1.c: 497:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  7648  09C9  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7649  09CA  1283               	bcf	3,5	;RP0=0, select bank0
  7650  09CB  00B4               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  7651  09CC  1683               	bsf	3,5	;RP0=1, select bank1
  7652  09CD  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7653  09CE  1283               	bcf	3,5	;RP0=0, select bank0
  7654  09CF  00B3               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  7655  09D0  1683               	bsf	3,5	;RP0=1, select bank1
  7656  09D1  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7657  09D2  1283               	bcf	3,5	;RP0=0, select bank0
  7658  09D3  00B2               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  7659  09D4  1683               	bsf	3,5	;RP0=1, select bank1
  7660  09D5  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7661  09D6  1283               	bcf	3,5	;RP0=0, select bank0
  7662  09D7  00B1               	movwf	EEPROM_24C1025_Read_Int@mem_add
  7663  09D8  1683               	bsf	3,5	;RP0=1, select bank3
  7664  09D9  1703               	bsf	3,6	;RP1=1, select bank3
  7665  09DA  0852               	movf	(_usart_protocol^(0+384)+6),w
  7666  09DB  160A  158A  247D  120A  158A  	fcall	_EEPROM_24C1025_Read_Int
  7667  09E0  0832               	movf	?_EEPROM_24C1025_Read_Int+1,w
  7668  09E1  1683               	bsf	3,5	;RP0=1, select bank1
  7669  09E2  00E1               	movwf	(Decodify_Command@tempint+1)^(0+128)
  7670  09E3  1283               	bcf	3,5	;RP0=0, select bank0
  7671  09E4  0831               	movf	?_EEPROM_24C1025_Read_Int,w
  7672  09E5  294A               	goto	L10
  7673  09E6                     l7208:	
  7674                           ;SlaveLiofilizadorVer1.c: 499:              Send_To_MB(2);
  7675                           
  7676                           
  7677                           ;SlaveLiofilizadorVer1.c: 505:              {;SlaveLiofilizadorVer1.c: 506:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 507:              sizedata=usart_protocol.value
      +                          [5];
  7678  09E6  1703               	bsf	3,6	;RP1=1, select bank3
  7679  09E7  0857               	movf	(_usart_protocol^(0+384)+11),w
  7680  09E8  1303               	bcf	3,6	;RP1=0, select bank1
  7681  09E9  00E7               	movwf	Decodify_Command@sizedata^(0+128)
  7682                           
  7683                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  7684  09EA  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7685  09EB  1283               	bcf	3,5	;RP0=0, select bank0
  7686  09EC  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  7687  09ED  1683               	bsf	3,5	;RP0=1, select bank1
  7688  09EE  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7689  09EF  1283               	bcf	3,5	;RP0=0, select bank0
  7690  09F0  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  7691  09F1  1683               	bsf	3,5	;RP0=1, select bank1
  7692  09F2  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7693  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  7694  09F4  00A5               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  7695  09F5  1683               	bsf	3,5	;RP0=1, select bank1
  7696  09F6  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7697  09F7  1283               	bcf	3,5	;RP0=0, select bank0
  7698  09F8  00A4               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  7699  09F9  1683               	bsf	3,5	;RP0=1, select bank1
  7700  09FA  0867               	movf	Decodify_Command@sizedata^(0+128),w
  7701  09FB  1283               	bcf	3,5	;RP0=0, select bank0
  7702  09FC  00A8               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  7703  09FD  303A               	movlw	(low (_buffer| (0+256)))& (0+255)
  7704  09FE  00A9               	movwf	EEPROM_24C1025_Read_Buffer@data
  7705  09FF  3001               	movlw	1
  7706  0A00  00AA               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  7707  0A01  1683               	bsf	3,5	;RP0=1, select bank3
  7708  0A02  1703               	bsf	3,6	;RP1=1, select bank3
  7709  0A03  0852               	movf	(_usart_protocol^(0+384)+6),w
  7710  0A04  2570  120A  158A   	fcall	_EEPROM_24C1025_Read_Buffer
  7711                           
  7712                           ;SlaveLiofilizadorVer1.c: 515:              Send_To_MB(sizedata);
  7713  0A07  1683               	bsf	3,5	;RP0=1, select bank1
  7714  0A08  1303               	bcf	3,6	;RP1=0, select bank1
  7715  0A09  0867               	movf	Decodify_Command@sizedata^(0+128),w
  7716  0A0A  23A1               	fcall	_Send_To_MB
  7717                           
  7718                           ;SlaveLiofilizadorVer1.c: 516:              USART_put_buffer(buffer,sizedata);
  7719  0A0B  0867               	movf	Decodify_Command@sizedata^(0+128),w
  7720  0A0C  1283               	bcf	3,5	;RP0=0, select bank0
  7721  0A0D  00A1               	movwf	USART_put_buffer@size
  7722  0A0E  303A               	movlw	(low (_buffer| (0+256)))& (0+255)
  7723  0A0F  01A2               	clrf	USART_put_buffer@size+1
  7724  0A10  160A  158A  2C98   	ljmp	_USART_put_buffer
  7725  0A13                     l7216:	
  7726                           ;SlaveLiofilizadorVer1.c: 517:              };SlaveLiofilizadorVer1.c: 518:             
      +                           break;
  7727                           
  7728                           
  7729                           ;SlaveLiofilizadorVer1.c: 521:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  7730  0A13  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7731  0A14  1283               	bcf	3,5	;RP0=0, select bank0
  7732  0A15  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  7733  0A16  1683               	bsf	3,5	;RP0=1, select bank1
  7734  0A17  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7735  0A18  1283               	bcf	3,5	;RP0=0, select bank0
  7736  0A19  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  7737  0A1A  1683               	bsf	3,5	;RP0=1, select bank1
  7738  0A1B  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7739  0A1C  1283               	bcf	3,5	;RP0=0, select bank0
  7740  0A1D  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  7741  0A1E  1683               	bsf	3,5	;RP0=1, select bank1
  7742  0A1F  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7743  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  7744  0A21  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  7745  0A22  1683               	bsf	3,5	;RP0=1, select bank3
  7746  0A23  1703               	bsf	3,6	;RP1=1, select bank3
  7747  0A24  0857               	movf	(_usart_protocol^(0+384)+11),w
  7748  0A25  1283               	bcf	3,5	;RP0=0, select bank0
  7749  0A26  1303               	bcf	3,6	;RP1=0, select bank0
  7750  0A27  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  7751  0A28  30D8               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  7752  0A29  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
  7753  0A2A  3001               	movlw	1
  7754  0A2B  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  7755  0A2C  1683               	bsf	3,5	;RP0=1, select bank3
  7756  0A2D  1703               	bsf	3,6	;RP1=1, select bank3
  7757  0A2E  0852               	movf	(_usart_protocol^(0+384)+6),w
  7758  0A2F  2653  120A  158A   	fcall	_EEPROM_24C1025_Write_Buffer
  7759  0A32  290E               	goto	L9
  7760  0A33                     l7222:	
  7761                           ;SlaveLiofilizadorVer1.c: 526:              Send_To_MB(3);
  7762                           
  7763                           
  7764                           ;SlaveLiofilizadorVer1.c: 531:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  7765  0A33  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7766  0A34  1283               	bcf	3,5	;RP0=0, select bank0
  7767  0A35  00A5               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  7768  0A36  1683               	bsf	3,5	;RP0=1, select bank1
  7769  0A37  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7770  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  7771  0A39  00A4               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  7772  0A3A  1683               	bsf	3,5	;RP0=1, select bank1
  7773  0A3B  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7774  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  7775  0A3D  00A3               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  7776  0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  7777  0A3F  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7778  0A40  1283               	bcf	3,5	;RP0=0, select bank0
  7779  0A41  00A2               	movwf	EEPROM_24C1025_Write_Str@mem_add
  7780  0A42  30D7               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  7781  0A43  00A6               	movwf	EEPROM_24C1025_Write_Str@data
  7782  0A44  1683               	bsf	3,5	;RP0=1, select bank3
  7783  0A45  1703               	bsf	3,6	;RP1=1, select bank3
  7784  0A46  0852               	movf	(_usart_protocol^(0+384)+6),w
  7785  0A47  23EE  120A  158A   	fcall	_EEPROM_24C1025_Write_Str
  7786  0A4A  290E               	goto	L9
  7787  0A4B                     l7228:	
  7788                           ;SlaveLiofilizadorVer1.c: 534:              Send_To_MB(3);
  7789                           
  7790                           
  7791                           ;SlaveLiofilizadorVer1.c: 538:              {;SlaveLiofilizadorVer1.c: 539:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  7792  0A4B  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7793  0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  7794  0A4D  00A7               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  7795  0A4E  1683               	bsf	3,5	;RP0=1, select bank1
  7796  0A4F  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7797  0A50  1283               	bcf	3,5	;RP0=0, select bank0
  7798  0A51  00A6               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  7799  0A52  1683               	bsf	3,5	;RP0=1, select bank1
  7800  0A53  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7801  0A54  1283               	bcf	3,5	;RP0=0, select bank0
  7802  0A55  00A5               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  7803  0A56  1683               	bsf	3,5	;RP0=1, select bank1
  7804  0A57  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7805  0A58  1283               	bcf	3,5	;RP0=0, select bank0
  7806  0A59  00A4               	movwf	EEPROM_24C1025_Read_Str@mem_add
  7807  0A5A  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7808  0A5B  00A8               	movwf	EEPROM_24C1025_Read_Str@texto
  7809  0A5C  1683               	bsf	3,5	;RP0=1, select bank3
  7810  0A5D  1703               	bsf	3,6	;RP1=1, select bank3
  7811  0A5E  0852               	movf	(_usart_protocol^(0+384)+6),w
  7812  0A5F  248B  120A  158A   	fcall	_EEPROM_24C1025_Read_Str
  7813                           
  7814                           ;SlaveLiofilizadorVer1.c: 543:              Send_To_MB(strlen(texto));
  7815  0A62  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7816  0A63  2795  120A  158A   	fcall	_strlen
  7817  0A66  0820               	movf	?_strlen,w
  7818  0A67  296D               	goto	L11
  7819  0A68                     l7232:	
  7820                           
  7821                           ;SlaveLiofilizadorVer1.c: 549:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  7822  0A68  1703               	bsf	3,6	;RP1=1, select bank3
  7823  0A69  0853               	movf	(_usart_protocol^(0+384)+7),w
  7824  0A6A  1303               	bcf	3,6	;RP1=0, select bank1
  7825  0A6B  00B1               	movwf	EEPROM_24C1025_Fill_All@value^(0+128)
  7826  0A6C  01B2               	clrf	(EEPROM_24C1025_Fill_All@value+1)^(0+128)
  7827  0A6D  1703               	bsf	3,6	;RP1=1, select bank3
  7828  0A6E  0852               	movf	(_usart_protocol^(0+384)+6),w
  7829  0A6F  120A  118A  2037  120A  158A  	fcall	_EEPROM_24C1025_Fill_All
  7830  0A74  290E               	goto	L9
  7831  0A75                     l7238:	
  7832                           ;SlaveLiofilizadorVer1.c: 551:              Send_To_MB(3);
  7833                           
  7834                           
  7835                           ;SlaveLiofilizadorVer1.c: 556:              {;SlaveLiofilizadorVer1.c: 557:             
      +                           char hh[10];;SlaveLiofilizadorVer1.c: 558:              char mm[10];;SlaveLiofilizadorV
      +                          er1.c: 559:              char ss[10];;SlaveLiofilizadorVer1.c: 561:              itoa(hh
      +                          ,hora,10);
  7836  0A75  0874               	movf	_hora,w	;volatile
  7837  0A76  1283               	bcf	3,5	;RP0=0, select bank0
  7838  0A77  00AF               	movwf	itoa@val
  7839  0A78  300A               	movlw	10
  7840  0A79  01B0               	clrf	itoa@val+1
  7841  0A7A  00B1               	movwf	itoa@base
  7842  0A7B  30BF               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7843  0A7C  01B2               	clrf	itoa@base+1
  7844  0A7D  276D  120A  158A   	fcall	_itoa
  7845                           
  7846                           ;SlaveLiofilizadorVer1.c: 562:              itoa(mm,minuto,10);
  7847  0A80  1683               	bsf	3,5	;RP0=1, select bank3
  7848  0A81  1703               	bsf	3,6	;RP1=1, select bank3
  7849  0A82  083B               	movf	_minuto^(0+384),w	;volatile
  7850  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  7851  0A84  1303               	bcf	3,6	;RP1=0, select bank0
  7852  0A85  00AF               	movwf	itoa@val
  7853  0A86  300A               	movlw	10
  7854  0A87  01B0               	clrf	itoa@val+1
  7855  0A88  00B1               	movwf	itoa@base
  7856  0A89  30C9               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7857  0A8A  01B2               	clrf	itoa@base+1
  7858  0A8B  276D  120A  158A   	fcall	_itoa
  7859                           
  7860                           ;SlaveLiofilizadorVer1.c: 563:              itoa(ss,segundo,10);
  7861  0A8E  0875               	movf	_segundo,w	;volatile
  7862  0A8F  00AF               	movwf	itoa@val
  7863  0A90  300A               	movlw	10
  7864  0A91  01B0               	clrf	itoa@val+1
  7865  0A92  00B1               	movwf	itoa@base
  7866  0A93  30D3               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7867  0A94  01B2               	clrf	itoa@base+1
  7868  0A95  276D               	fcall	_itoa
  7869                           
  7870                           ;SlaveLiofilizadorVer1.c: 566:              strcpy(texto,"");
  7871  0A96  3038               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  7872  0A97  00A0               	movwf	strcpy@from
  7873  0A98  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7874  0A99  160A  158A  2450  120A  158A  	fcall	_strcpy
  7875                           
  7876                           ;SlaveLiofilizadorVer1.c: 567:              if (hh[1]==0)
  7877  0A9E  1683               	bsf	3,5	;RP0=1, select bank1
  7878  0A9F  0840               	movf	(Decodify_Command@hh^(0+128)+1),w
  7879  0AA0  1D03               	btfss	3,2
  7880  0AA1  2AAA               	goto	l7246
  7881                           
  7882                           ;SlaveLiofilizadorVer1.c: 568:                 {;SlaveLiofilizadorVer1.c: 569:          
      +                                 strcat(texto,"0");
  7883  0AA2  27CE  120A  158A   	fcall	PL52	;call to abstracted procedure
  7884  0AA5  23BD  120A  158A   	fcall	_strcat
  7885                           
  7886                           ;SlaveLiofilizadorVer1.c: 570:                 hh[2]=0;
  7887  0AA8  1683               	bsf	3,5	;RP0=1, select bank1
  7888  0AA9  01C1               	clrf	(Decodify_Command@hh^(0+128)+2)
  7889  0AAA                     l7246:	
  7890                           
  7891                           ;SlaveLiofilizadorVer1.c: 572:              strcat(texto,hh);
  7892  0AAA  30BF               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7893  0AAB  1283               	bcf	3,5	;RP0=0, select bank0
  7894  0AAC  00A0               	movwf	strcat@from
  7895  0AAD  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7896  0AAE  01A1               	clrf	strcat@from+1
  7897  0AAF  23BD  120A  158A   	fcall	_strcat
  7898                           
  7899                           ;SlaveLiofilizadorVer1.c: 573:              strcat(texto,":");
  7900  0AB2  27E9  120A  158A   	fcall	PL76	;call to abstracted procedure
  7901  0AB5  23BD  120A  158A   	fcall	_strcat
  7902                           
  7903                           ;SlaveLiofilizadorVer1.c: 574:              if(mm[1]==0)
  7904  0AB8  1683               	bsf	3,5	;RP0=1, select bank1
  7905  0AB9  084A               	movf	(Decodify_Command@mm^(0+128)+1),w
  7906  0ABA  1D03               	btfss	3,2
  7907  0ABB  2AC4               	goto	l7256
  7908                           
  7909                           ;SlaveLiofilizadorVer1.c: 575:                 {;SlaveLiofilizadorVer1.c: 576:          
      +                                 strcat(texto,"0");
  7910  0ABC  27CE  120A  158A   	fcall	PL52	;call to abstracted procedure
  7911  0ABF  23BD  120A  158A   	fcall	_strcat
  7912                           
  7913                           ;SlaveLiofilizadorVer1.c: 577:                 mm[2]=0;
  7914  0AC2  1683               	bsf	3,5	;RP0=1, select bank1
  7915  0AC3  01CB               	clrf	(Decodify_Command@mm^(0+128)+2)
  7916  0AC4                     l7256:	
  7917                           
  7918                           ;SlaveLiofilizadorVer1.c: 579:              strcat(texto,mm);
  7919  0AC4  30C9               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7920  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  7921  0AC6  00A0               	movwf	strcat@from
  7922  0AC7  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7923  0AC8  01A1               	clrf	strcat@from+1
  7924  0AC9  23BD  120A  158A   	fcall	_strcat
  7925                           
  7926                           ;SlaveLiofilizadorVer1.c: 580:              strcat(texto,":");
  7927  0ACC  27E9  120A  158A   	fcall	PL76	;call to abstracted procedure
  7928  0ACF  23BD  120A  158A   	fcall	_strcat
  7929                           
  7930                           ;SlaveLiofilizadorVer1.c: 581:              if(ss[1]==0)
  7931  0AD2  1683               	bsf	3,5	;RP0=1, select bank1
  7932  0AD3  0854               	movf	(Decodify_Command@ss^(0+128)+1),w
  7933  0AD4  1D03               	btfss	3,2
  7934  0AD5  2ADE               	goto	l7266
  7935                           
  7936                           ;SlaveLiofilizadorVer1.c: 582:                 {;SlaveLiofilizadorVer1.c: 583:          
      +                                 strcat(texto,"0");
  7937  0AD6  27CE  120A  158A   	fcall	PL52	;call to abstracted procedure
  7938  0AD9  23BD  120A  158A   	fcall	_strcat
  7939                           
  7940                           ;SlaveLiofilizadorVer1.c: 584:                 ss[2]=0;
  7941  0ADC  1683               	bsf	3,5	;RP0=1, select bank1
  7942  0ADD  01D5               	clrf	(Decodify_Command@ss^(0+128)+2)
  7943  0ADE                     l7266:	
  7944                           
  7945                           ;SlaveLiofilizadorVer1.c: 586:              strcat(texto,ss);
  7946  0ADE  30D3               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7947  0ADF  1283               	bcf	3,5	;RP0=0, select bank0
  7948  0AE0  00A0               	movwf	strcat@from
  7949  0AE1  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7950  0AE2  01A1               	clrf	strcat@from+1
  7951  0AE3  23BD  120A  158A   	fcall	_strcat
  7952                           
  7953                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(strlen(texto));
  7954  0AE6  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7955  0AE7  2795  120A  158A   	fcall	_strlen
  7956  0AEA  0820               	movf	?_strlen,w
  7957  0AEB  23A1  120A  158A   	fcall	_Send_To_MB
  7958                           
  7959                           ;SlaveLiofilizadorVer1.c: 588:              USART_put_string(texto);
  7960  0AEE  27F4               	fcall	PL80	;call to abstracted procedure
  7961  0AEF  160A  158A  24E8  120A  158A  	fcall	_USART_put_string
  7962                           
  7963                           ;SlaveLiofilizadorVer1.c: 589:              USART_putc(0);
  7964  0AF4  3000               	movlw	0
  7965  0AF5  2BDD               	ljmp	_USART_putc
  7966  0AF6                     l7274:	
  7967                           ;SlaveLiofilizadorVer1.c: 590:              };SlaveLiofilizadorVer1.c: 591:             
      +                           break;
  7968                           
  7969                           
  7970                           ;SlaveLiofilizadorVer1.c: 594:              hora=usart_protocol.value[0];
  7971  0AF6  1703               	bsf	3,6	;RP1=1, select bank3
  7972  0AF7  0852               	movf	(_usart_protocol^(0+384)+6),w
  7973  0AF8  00F4               	movwf	_hora	;volatile
  7974                           
  7975                           ;SlaveLiofilizadorVer1.c: 595:              minuto=usart_protocol.value[1];
  7976  0AF9  0853               	movf	(_usart_protocol^(0+384)+7),w
  7977  0AFA  00BB               	movwf	_minuto^(0+384)	;volatile
  7978                           
  7979                           ;SlaveLiofilizadorVer1.c: 596:              segundo=usart_protocol.value[2];
  7980  0AFB  0854               	movf	(_usart_protocol^(0+384)+8),w
  7981  0AFC  00F5               	movwf	_segundo	;volatile
  7982  0AFD  290E               	goto	L9
  7983  0AFE                     l7280:	
  7984                           ;SlaveLiofilizadorVer1.c: 597:              Send_To_MB(3);
  7985                           
  7986                           
  7987                           ;SlaveLiofilizadorVer1.c: 602:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7988  0AFE  1703               	bsf	3,6	;RP1=1, select bank3
  7989  0AFF  0852               	movf	(_usart_protocol^(0+384)+6),w
  7990  0B00  1303               	bcf	3,6	;RP1=0, select bank1
  7991  0B01  00AF               	movwf	PROCULUS_Show_Screen@screen^(0+128)
  7992  0B02  01B0               	clrf	(PROCULUS_Show_Screen@screen+1)^(0+128)
  7993  0B03  160A  158A  254E  120A  158A  	fcall	_PROCULUS_Show_Screen
  7994  0B08  290E               	goto	L9
  7995  0B09                     l7286:	
  7996                           ;SlaveLiofilizadorVer1.c: 603:              Send_To_MB(3);
  7997                           
  7998                           
  7999                           ;SlaveLiofilizadorVer1.c: 608:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  8000  0B09  1703               	bsf	3,6	;RP1=1, select bank3
  8001  0B0A  0852               	movf	(_usart_protocol^(0+384)+6),w
  8002  0B0B  1303               	bcf	3,6	;RP1=0, select bank1
  8003  0B0C  00B0               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  8004  0B0D  1703               	bsf	3,6	;RP1=1, select bank3
  8005  0B0E  0853               	movf	(_usart_protocol^(0+384)+7),w
  8006  0B0F  1303               	bcf	3,6	;RP1=0, select bank1
  8007  0B10  00AF               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  8008  0B11  160A  158A  2558  120A  158A  	fcall	_PROCULUS_Buzzer
  8009  0B16  290E               	goto	L9
  8010  0B17                     l7292:	
  8011                           ;SlaveLiofilizadorVer1.c: 610:              Send_To_MB(3);
  8012                           
  8013                           
  8014                           ;SlaveLiofilizadorVer1.c: 614:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  8015  0B17  1703               	bsf	3,6	;RP1=1, select bank3
  8016  0B18  0852               	movf	(_usart_protocol^(0+384)+6),w
  8017  0B19  1303               	bcf	3,6	;RP1=0, select bank1
  8018  0B1A  00B4               	movwf	(PROCULUS_VP_Write_String@vp+1)^(0+128)
  8019  0B1B  1703               	bsf	3,6	;RP1=1, select bank3
  8020  0B1C  0853               	movf	(_usart_protocol^(0+384)+7),w
  8021  0B1D  1303               	bcf	3,6	;RP1=0, select bank1
  8022  0B1E  00B3               	movwf	PROCULUS_VP_Write_String@vp^(0+128)
  8023  0B1F  30D4               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  8024  0B20  00B5               	movwf	PROCULUS_VP_Write_String@text^(0+128)
  8025  0B21  160A  158A  2429  120A  158A  	fcall	_PROCULUS_VP_Write_String
  8026  0B26  290E               	goto	L9
  8027  0B27                     l7298:	
  8028                           ;SlaveLiofilizadorVer1.c: 617:              Send_To_MB(3);
  8029                           
  8030                           
  8031                           ;SlaveLiofilizadorVer1.c: 623:              if(usart_protocol.value[0]==0)
  8032  0B27  1703               	bsf	3,6	;RP1=1, select bank3
  8033  0B28  0852               	movf	(_usart_protocol^(0+384)+6),w
  8034  0B29  1D03               	btfss	3,2
  8035  0B2A  2B36               	goto	l7304
  8036                           
  8037                           ;SlaveLiofilizadorVer1.c: 624:                 {;SlaveLiofilizadorVer1.c: 625:          
      +                                 if(!usart_protocol.value[1])
  8038  0B2B  0853               	movf	(_usart_protocol^(0+384)+7),w
  8039  0B2C  1D03               	btfss	3,2
  8040  0B2D  2B32               	goto	l336
  8041                           
  8042                           ;SlaveLiofilizadorVer1.c: 626:                    PORTCbits.RC0=0;
  8043  0B2E  1283               	bcf	3,5	;RP0=0, select bank0
  8044  0B2F  1303               	bcf	3,6	;RP1=0, select bank0
  8045  0B30  1007               	bcf	7,0	;volatile
  8046  0B31  290E               	goto	L9
  8047  0B32                     l336:	
  8048                           ;SlaveLiofilizadorVer1.c: 627:                 else
  8049                           
  8050                           
  8051                           ;SlaveLiofilizadorVer1.c: 628:                    PORTCbits.RC0=1;
  8052  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  8053  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  8054  0B34  1407               	bsf	7,0	;volatile
  8055  0B35  290E               	goto	L9
  8056  0B36                     l7304:	
  8057  0B36  0B52               	decfsz	(_usart_protocol^(0+384)+6),w
  8058  0B37  290E               	goto	L9
  8059                           
  8060                           ;SlaveLiofilizadorVer1.c: 631:                      {;SlaveLiofilizadorVer1.c: 632:     
      +                                            if(!usart_protocol.value[1])
  8061  0B38  0853               	movf	(_usart_protocol^(0+384)+7),w
  8062  0B39  1D03               	btfss	3,2
  8063  0B3A  2B3F               	goto	l340
  8064                           
  8065                           ;SlaveLiofilizadorVer1.c: 633:                          PORTCbits.RC1=0;
  8066  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  8067  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  8068  0B3D  1087               	bcf	7,1	;volatile
  8069  0B3E  290E               	goto	L9
  8070  0B3F                     l340:	
  8071                           ;SlaveLiofilizadorVer1.c: 634:                       else
  8072                           
  8073                           
  8074                           ;SlaveLiofilizadorVer1.c: 635:                          PORTCbits.RC1=1;
  8075  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  8076  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  8077  0B41  1487               	bsf	7,1	;volatile
  8078  0B42  290E               	goto	L9
  8079  0B43                     l7316:	
  8080                           ;SlaveLiofilizadorVer1.c: 637:              Send_To_MB(3);
  8081                           
  8082  0B43  1703               	bsf	3,6	;RP1=1, select bank3
  8083  0B44  0850               	movf	(_usart_protocol^(0+384)+4),w
  8084  0B45  1303               	bcf	3,6	;RP1=0, select bank1
  8085  0B46  00BD               	movwf	??_Decodify_Command^(0+128)
  8086  0B47  01BE               	clrf	(??_Decodify_Command^(0+128)+1)
  8087                           
  8088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8089                           ; Switch size 1, requested type "space"
  8090                           ; Number of cases is 1, Range of values is 0 to 0
  8091                           ; switch strategies available:
  8092                           ; Name         Instructions Cycles
  8093                           ; simple_byte            4     3 (average)
  8094                           ; direct_byte           11     8 (fixed)
  8095                           ; jumptable            260     6 (fixed)
  8096                           ;	Chosen strategy is simple_byte
  8097  0B48  083E               	movf	(??_Decodify_Command+1)^(0+128),w
  8098  0B49  3A00               	xorlw	0	; case 0
  8099  0B4A  1903               	skipnz
  8100  0B4B  2B4D               	goto	l7480
  8101  0B4C  2BA0               	goto	l342
  8102  0B4D                     l7480:	
  8103                           
  8104                           ; Switch size 1, requested type "space"
  8105                           ; Number of cases is 27, Range of values is 1 to 43
  8106                           ; switch strategies available:
  8107                           ; Name         Instructions Cycles
  8108                           ; simple_byte           82    42 (average)
  8109                           ; direct_byte          140    11 (fixed)
  8110                           ; jumptable            263     9 (fixed)
  8111                           ;	Chosen strategy is simple_byte
  8112  0B4D  083D               	movf	??_Decodify_Command^(0+128),w
  8113  0B4E  3A01               	xorlw	1	; case 1
  8114  0B4F  1903               	skipnz
  8115  0B50  28F7               	goto	l7142
  8116  0B51  3A03               	xorlw	3	; case 2
  8117  0B52  1903               	skipnz
  8118  0B53  28C5               	goto	l7126
  8119  0B54  3A01               	xorlw	1	; case 3
  8120  0B55  1903               	skipnz
  8121  0B56  28EF               	goto	l7138
  8122  0B57  3A0B               	xorlw	11	; case 8
  8123  0B58  1903               	skipnz
  8124  0B59  2901               	goto	l7148
  8125  0B5A  3A01               	xorlw	1	; case 9
  8126  0B5B  1903               	skipnz
  8127  0B5C  2913               	goto	l7152
  8128  0B5D  3A03               	xorlw	3	; case 10
  8129  0B5E  1903               	skipnz
  8130  0B5F  2923               	goto	l7158
  8131  0B60  3A01               	xorlw	1	; case 11
  8132  0B61  1903               	skipnz
  8133  0B62  293E               	goto	l7166
  8134  0B63  3A07               	xorlw	7	; case 12
  8135  0B64  1903               	skipnz
  8136  0B65  2955               	goto	l7172
  8137  0B66  3A01               	xorlw	1	; case 13
  8138  0B67  1903               	skipnz
  8139  0B68  2961               	goto	l7178
  8140  0B69  3A1C               	xorlw	28	; case 17
  8141  0B6A  1903               	skipnz
  8142  0B6B  2974               	goto	l7184
  8143  0B6C  3A03               	xorlw	3	; case 18
  8144  0B6D  1903               	skipnz
  8145  0B6E  2992               	goto	l7190
  8146  0B6F  3A01               	xorlw	1	; case 19
  8147  0B70  1903               	skipnz
  8148  0B71  29B1               	goto	l7196
  8149  0B72  3A07               	xorlw	7	; case 20
  8150  0B73  1903               	skipnz
  8151  0B74  29C9               	goto	l7202
  8152  0B75  3A01               	xorlw	1	; case 21
  8153  0B76  1903               	skipnz
  8154  0B77  2A33               	goto	l7222
  8155  0B78  3A03               	xorlw	3	; case 22
  8156  0B79  1903               	skipnz
  8157  0B7A  2A4B               	goto	l7228
  8158  0B7B  3A01               	xorlw	1	; case 23
  8159  0B7C  1903               	skipnz
  8160  0B7D  2A13               	goto	l7216
  8161  0B7E  3A0F               	xorlw	15	; case 24
  8162  0B7F  1903               	skipnz
  8163  0B80  29E6               	goto	l7208
  8164  0B81  3A01               	xorlw	1	; case 25
  8165  0B82  1903               	skipnz
  8166  0B83  2A68               	goto	l7232
  8167  0B84  3A03               	xorlw	3	; case 26
  8168  0B85  1903               	skipnz
  8169  0B86  2861               	goto	l7110
  8170  0B87  3A04               	xorlw	4	; case 30
  8171  0B88  1903               	skipnz
  8172  0B89  2AF6               	goto	l7274
  8173  0B8A  3A01               	xorlw	1	; case 31
  8174  0B8B  1903               	skipnz
  8175  0B8C  2A75               	goto	l7238
  8176  0B8D  3A3F               	xorlw	63	; case 32
  8177  0B8E  1903               	skipnz
  8178  0B8F  2AFE               	goto	l7280
  8179  0B90  3A01               	xorlw	1	; case 33
  8180  0B91  1903               	skipnz
  8181  0B92  2B09               	goto	l7286
  8182  0B93  3A05               	xorlw	5	; case 36
  8183  0B94  1903               	skipnz
  8184  0B95  2B17               	goto	l7292
  8185  0B96  3A02               	xorlw	2	; case 38
  8186  0B97  1903               	skipnz
  8187  0B98  2B27               	goto	l7298
  8188  0B99  3A0C               	xorlw	12	; case 42
  8189  0B9A  1903               	skipnz
  8190  0B9B  28E7               	goto	l7134
  8191  0B9C  3A01               	xorlw	1	; case 43
  8192  0B9D  1903               	skipnz
  8193  0B9E  2857               	goto	l7106
  8194  0B9F  2BA0               	goto	l342
  8195  0BA0                     l342:	
  8196  0BA0  0008               	return
  8197  0BA1                     __end_of_Decodify_Command:	
  8198  0BA1                     __ptext22:	
  8199 ;; *************** function _Send_To_MB *****************
  8200 ;; Defined at:
  8201 ;;		line 647 in file "SlaveLiofilizadorVer1.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;  size            1    wreg     unsigned char 
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;  size            1    1[BANK0 ] unsigned char 
  8206 ;; Return value:  Size  Location     Type
  8207 ;;                  1    wreg      void 
  8208 ;; Registers used:
  8209 ;;		wreg, status,2, status,0, pclath, cstack
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/100
  8212 ;;		On exit  : 300/100
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8215 ;;      Params:         0       0       0       0       0
  8216 ;;      Locals:         0       1       0       0       0
  8217 ;;      Temps:          0       0       0       0       0
  8218 ;;      Totals:         0       1       0       0       0
  8219 ;;Total ram usage:        1 bytes
  8220 ;; Hardware stack levels used:    1
  8221 ;; Hardware stack levels required when called:    2
  8222 ;; This function calls:
  8223 ;;		_USART_putc
  8224 ;; This function is called by:
  8225 ;;		_Decodify_Command
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           
  8230                           ;psect for function _Send_To_MB
  8231  0BA1                     _Send_To_MB:	
  8232                           
  8233                           ;incstack = 0
  8234                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  8235                           ;Send_To_MB@size stored from wreg
  8236  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  8237  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  8238  0BA3  00A1               	movwf	Send_To_MB@size
  8239                           
  8240                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(0xAA);
  8241  0BA4  30AA               	movlw	170
  8242  0BA5  23DD  120A  158A   	fcall	_USART_putc
  8243                           
  8244                           ;SlaveLiofilizadorVer1.c: 650:      USART_putc(0xBB);
  8245  0BA8  30BB               	movlw	187
  8246  0BA9  23DD  120A  158A   	fcall	_USART_putc
  8247                           
  8248                           ;SlaveLiofilizadorVer1.c: 651:      USART_putc(Board_Number);
  8249  0BAC  1703               	bsf	3,6	;RP1=1, select bank3
  8250  0BAD  0834               	movf	_Board_Number^(0+384),w
  8251  0BAE  23DD  120A  158A   	fcall	_USART_putc
  8252                           
  8253                           ;SlaveLiofilizadorVer1.c: 652:      USART_putc(0x00);
  8254  0BB1  3000               	movlw	0
  8255  0BB2  23DD  120A  158A   	fcall	_USART_putc
  8256                           
  8257                           ;SlaveLiofilizadorVer1.c: 653:      USART_putc(usart_protocol.command);
  8258  0BB5  1703               	bsf	3,6	;RP1=1, select bank3
  8259  0BB6  0850               	movf	(_usart_protocol^(0+384)+4),w
  8260  0BB7  23DD  120A  158A   	fcall	_USART_putc
  8261                           
  8262                           ;SlaveLiofilizadorVer1.c: 654:      USART_putc(size);
  8263  0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  8264  0BBB  0821               	movf	Send_To_MB@size,w
  8265  0BBC  2BDD               	ljmp	_USART_putc
  8266  0BBD                     __end_of_Send_To_MB:	
  8267  0BBD                     __ptext16:	
  8268 ;; *************** function _strcat *****************
  8269 ;; Defined at:
  8270 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;  to              1    wreg     PTR unsigned char 
  8273 ;;		 -> texto(16), 
  8274 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  8275 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  8276 ;;		 -> STR_3(2), Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;  to              1    4[BANK0 ] PTR unsigned char 
  8279 ;;		 -> texto(16), 
  8280 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  8281 ;;		 -> texto(16), 
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  1    wreg      PTR unsigned char 
  8284 ;; Registers used:
  8285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  8286 ;; Tracked objects:
  8287 ;;		On entry : B00/800
  8288 ;;		On exit  : B00/800
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8291 ;;      Params:         0       2       0       0       0
  8292 ;;      Locals:         0       2       0       0       0
  8293 ;;      Temps:          0       1       0       0       0
  8294 ;;      Totals:         0       5       0       0       0
  8295 ;;Total ram usage:        5 bytes
  8296 ;; Hardware stack levels used:    2
  8297 ;; Hardware stack levels required when called:    1
  8298 ;; This function calls:
  8299 ;;		Nothing
  8300 ;; This function is called by:
  8301 ;;		_Decodify_Command
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           
  8306                           ;psect for function _strcat
  8307  0BBD                     _strcat:	
  8308                           
  8309                           ;incstack = 0
  8310                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  8311                           ;strcat@to stored from wreg
  8312  0BBD  00A4               	movwf	strcat@to
  8313  0BBE  00A3               	movwf	strcat@cp
  8314  0BBF                     l5180:	
  8315  0BBF  0823               	movf	strcat@cp,w
  8316  0BC0  0084               	movwf	4
  8317  0BC1  0800               	movf	0,w
  8318  0BC2  1903               	btfsc	3,2
  8319  0BC3  2BCA               	goto	l5184
  8320  0BC4  0AA3               	incf	strcat@cp,f
  8321  0BC5  2BBF               	goto	l5180
  8322  0BC6                     l5182:	
  8323  0BC6  0AA3               	incf	strcat@cp,f
  8324  0BC7  0AA0               	incf	strcat@from,f
  8325  0BC8  1903               	skipnz
  8326  0BC9  0AA1               	incf	strcat@from+1,f
  8327  0BCA                     l5184:	
  8328  0BCA  0821               	movf	strcat@from+1,w
  8329  0BCB  00FF               	movwf	127
  8330  0BCC  0820               	movf	strcat@from,w
  8331  0BCD  0084               	movwf	4
  8332  0BCE  160A  158A  2000  120A  158A  	fcall	stringtab
  8333  0BD3  00A2               	movwf	??_strcat
  8334  0BD4  0823               	movf	strcat@cp,w
  8335  0BD5  0084               	movwf	4
  8336  0BD6  0822               	movf	??_strcat,w
  8337  0BD7  1783               	bsf	3,7	;select IRP bank2
  8338  0BD8  0080               	movwf	0
  8339  0BD9  0800               	movf	0,w
  8340  0BDA  1903               	btfsc	3,2
  8341  0BDB  0008               	return
  8342  0BDC  2BC6               	goto	l5182
  8343  0BDD                     __end_of_strcat:	
  8344  0BDD                     __ptext37:	
  8345 ;; *************** function _USART_putc *****************
  8346 ;; Defined at:
  8347 ;;		line 89 in file "usart.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;  value           1    wreg     unsigned char 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  value           1    0[BANK0 ] unsigned char 
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  1    wreg      void 
  8354 ;; Registers used:
  8355 ;;		wreg
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/100
  8358 ;;		On exit  : 300/100
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8361 ;;      Params:         0       0       0       0       0
  8362 ;;      Locals:         0       1       0       0       0
  8363 ;;      Temps:          0       0       0       0       0
  8364 ;;      Totals:         0       1       0       0       0
  8365 ;;Total ram usage:        1 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:    1
  8368 ;; This function calls:
  8369 ;;		Nothing
  8370 ;; This function is called by:
  8371 ;;		_Decodify_Command
  8372 ;;		_Send_To_MB
  8373 ;;		_PROCULUS_Control_Register_Write
  8374 ;;		_PROCULUS_VP_Write
  8375 ;;		_USART_put_buffer
  8376 ;;		_USART_put_int
  8377 ;;		_USART_put_string
  8378 ;; This function uses a non-reentrant model
  8379 ;;
  8380                           
  8381                           
  8382                           ;psect for function _USART_putc
  8383  0BDD                     _USART_putc:	
  8384                           
  8385                           ;incstack = 0
  8386                           ; Regs used in _USART_putc: [wreg]
  8387                           ;USART_putc@value stored from wreg
  8388  0BDD  1283               	bcf	3,5	;RP0=0, select bank0
  8389  0BDE  1303               	bcf	3,6	;RP1=0, select bank0
  8390  0BDF  00A0               	movwf	USART_putc@value
  8391                           
  8392                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
  8393  0BE0  3014               	movlw	20
  8394  0BE1  1683               	bsf	3,5	;RP0=1, select bank3
  8395  0BE2  1703               	bsf	3,6	;RP1=1, select bank3
  8396  0BE3  00AC               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  8397  0BE4  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  8398  0BE5                     l796:	
  8399                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
  8400                           
  8401  0BE5  1303               	bcf	3,6	;RP1=0, select bank1
  8402  0BE6  1C98               	btfss	24,1	;volatile
  8403  0BE7  2BE5               	goto	l796
  8404                           
  8405                           ;usart.c: 93:     TXREG=value;
  8406  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  8407  0BE9  0820               	movf	USART_putc@value,w
  8408  0BEA  0099               	movwf	25	;volatile
  8409                           
  8410                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
  8411  0BEB  1683               	bsf	3,5	;RP0=1, select bank1
  8412  0BEC  1698               	bsf	24,5	;volatile
  8413  0BED  0008               	return
  8414  0BEE                     __end_of_USART_putc:	
  8415  0BEE                     __ptext47:	
  8416 ;; *************** function _EEPROM_24C1025_Write_Str *****************
  8417 ;; Defined at:
  8418 ;;		line 142 in file "EEPROM_24C1025.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  chip_add        1    wreg     unsigned char 
  8421 ;;  mem_add         4    2[BANK0 ] unsigned long 
  8422 ;;  data            1    6[BANK0 ] PTR unsigned char 
  8423 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;  chip_add        1    9[BANK0 ] unsigned char 
  8426 ;;  ctrl            1   11[BANK0 ] unsigned char 
  8427 ;;  range           1   10[BANK0 ] unsigned char 
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  1    wreg      void 
  8430 ;; Registers used:
  8431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8432 ;; Tracked objects:
  8433 ;;		On entry : 300/300
  8434 ;;		On exit  : 0/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8437 ;;      Params:         0       5       0       0       0
  8438 ;;      Locals:         0       3       0       0       0
  8439 ;;      Temps:          0       2       0       0       0
  8440 ;;      Totals:         0      10       0       0       0
  8441 ;;Total ram usage:       10 bytes
  8442 ;; Hardware stack levels used:    1
  8443 ;; Hardware stack levels required when called:    3
  8444 ;; This function calls:
  8445 ;;		_I2C_Master_Start
  8446 ;;		_I2C_Master_Stop
  8447 ;;		_I2C_Master_Write
  8448 ;; This function is called by:
  8449 ;;		_Decodify_Command
  8450 ;; This function uses a non-reentrant model
  8451 ;;
  8452                           
  8453                           
  8454                           ;psect for function _EEPROM_24C1025_Write_Str
  8455  0BEE                     _EEPROM_24C1025_Write_Str:	
  8456                           
  8457                           ;incstack = 0
  8458                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8459                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
  8460  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  8461  0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  8462  0BF0  00A9               	movwf	EEPROM_24C1025_Write_Str@chip_add
  8463                           
  8464                           ;EEPROM_24C1025.c: 144:      unsigned char ctrl;;EEPROM_24C1025.c: 146:      if(mem_add>
      +                          0x1FFFF) return;
  8465  0BF1  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  8466  0BF2  1D03               	btfss	3,2
  8467  0BF3  0008               	return
  8468  0BF4  3002               	movlw	2
  8469  0BF5  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  8470  0BF6  1D03               	skipz
  8471  0BF7  2BFE               	goto	u5873
  8472  0BF8  3000               	movlw	0
  8473  0BF9  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  8474  0BFA  1D03               	skipz
  8475  0BFB  2BFE               	goto	u5873
  8476  0BFC  3000               	movlw	0
  8477  0BFD  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  8478  0BFE                     u5873:	
  8479  0BFE  1803               	btfsc	3,0
  8480  0BFF  0008               	return
  8481  0C00                     L18:	
  8482                           
  8483                           ;EEPROM_24C1025.c: 148:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8484  0C00  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  8485  0C01  1D03               	btfss	3,2
  8486  0C02  2C0F               	goto	l6624
  8487  0C03  3001               	movlw	1
  8488  0C04  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  8489  0C05  1D03               	skipz
  8490  0C06  2C0D               	goto	u5883
  8491  0C07  3000               	movlw	0
  8492  0C08  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  8493  0C09  1D03               	skipz
  8494  0C0A  2C0D               	goto	u5883
  8495  0C0B  3000               	movlw	0
  8496  0C0C  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  8497  0C0D                     u5883:	
  8498  0C0D  1C03               	btfss	3,0
  8499  0C0E  2C12               	goto	l6626
  8500  0C0F                     l6624:	
  8501  0C0F  3008               	movlw	8
  8502  0C10  00AA               	movwf	EEPROM_24C1025_Write_Str@range
  8503  0C11  2C13               	goto	l6628
  8504  0C12                     l6626:	
  8505  0C12  01AA               	clrf	EEPROM_24C1025_Write_Str@range
  8506  0C13                     l6628:	
  8507                           
  8508                           ;EEPROM_24C1025.c: 149:      ctrl=chip_add;
  8509  0C13  0829               	movf	EEPROM_24C1025_Write_Str@chip_add,w
  8510  0C14  00AB               	movwf	EEPROM_24C1025_Write_Str@ctrl
  8511  0C15  30A0               	movlw	160
  8512                           
  8513                           ;EEPROM_24C1025.c: 150:      ctrl<<=1;
  8514  0C16  1003               	clrc
  8515  0C17  0DAB               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
  8516                           
  8517                           ;EEPROM_24C1025.c: 151:      ctrl |= 0xA0;
  8518  0C18  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  8519                           
  8520                           ;EEPROM_24C1025.c: 152:      ctrl |= range;
  8521  0C19  082A               	movf	EEPROM_24C1025_Write_Str@range,w
  8522  0C1A  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  8523                           
  8524                           ;EEPROM_24C1025.c: 154:      I2C_Master_Start();
  8525  0C1B  2734  120A  158A   	fcall	_I2C_Master_Start
  8526                           
  8527                           ;EEPROM_24C1025.c: 155:      I2C_Master_Write(ctrl);
  8528  0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  8529  0C1F  082B               	movf	EEPROM_24C1025_Write_Str@ctrl,w
  8530  0C20  00A0               	movwf	I2C_Master_Write@d
  8531  0C21  01A1               	clrf	I2C_Master_Write@d+1
  8532  0C22  272E  120A  158A   	fcall	_I2C_Master_Write
  8533                           
  8534                           ;EEPROM_24C1025.c: 156:      I2C_Master_Write(((char *)&mem_add)[1]);
  8535  0C25  0823               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
  8536  0C26  00A0               	movwf	I2C_Master_Write@d
  8537  0C27  01A1               	clrf	I2C_Master_Write@d+1
  8538  0C28  272E  120A  158A   	fcall	_I2C_Master_Write
  8539                           
  8540                           ;EEPROM_24C1025.c: 157:      I2C_Master_Write(((char *)&mem_add)[0]);
  8541  0C2B  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  8542  0C2C  00A0               	movwf	I2C_Master_Write@d
  8543  0C2D  01A1               	clrf	I2C_Master_Write@d+1
  8544  0C2E  272E  120A  158A   	fcall	_I2C_Master_Write
  8545  0C31                     l6688:	
  8546                           ;EEPROM_24C1025.c: 158:      while(*data)
  8547                           
  8548                           
  8549                           ;EEPROM_24C1025.c: 158:      while(*data)
  8550  0C31  0826               	movf	EEPROM_24C1025_Write_Str@data,w
  8551  0C32  0084               	movwf	4
  8552  0C33  1783               	bsf	3,7	;select IRP bank2
  8553  0C34  0800               	movf	0,w
  8554  0C35  1903               	btfsc	3,2
  8555  0C36  2C78               	goto	l6690
  8556                           
  8557                           ;EEPROM_24C1025.c: 159:           {;EEPROM_24C1025.c: 160:           if(mem_add>0x1FFFF)
      +                           return;
  8558  0C37  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  8559  0C38  1D03               	btfss	3,2
  8560  0C39  0008               	return
  8561  0C3A  3002               	movlw	2
  8562  0C3B  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  8563  0C3C  1D03               	skipz
  8564  0C3D  2C44               	goto	u5893
  8565  0C3E  3000               	movlw	0
  8566  0C3F  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  8567  0C40  1D03               	skipz
  8568  0C41  2C44               	goto	u5893
  8569  0C42  3000               	movlw	0
  8570  0C43  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  8571  0C44                     u5893:	
  8572  0C44  1803               	btfsc	3,0
  8573  0C45  0008               	return
  8574                           
  8575                           ;EEPROM_24C1025.c: 161:           if((mem_add+1)%128==0)
  8576  0C46  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  8577  0C47  3E01               	addlw	1
  8578  0C48  397F               	andlw	127
  8579  0C49  1D03               	btfss	3,2
  8580  0C4A  2C69               	goto	l6682
  8581                           
  8582                           ;EEPROM_24C1025.c: 162:             {;EEPROM_24C1025.c: 163:             I2C_Master_Writ
      +                          e(*data);
  8583  0C4B  27E3  120A  158A   	fcall	PL64	;call to abstracted procedure
  8584  0C4E  272E  120A  158A   	fcall	_I2C_Master_Write
  8585                           
  8586                           ;EEPROM_24C1025.c: 164:             I2C_Master_Stop();
  8587  0C51  273C  120A  158A   	fcall	_I2C_Master_Stop
  8588                           
  8589                           ;EEPROM_24C1025.c: 166:             _delay((unsigned long)((5)*(8000000/4000.0)));
  8590  0C54  300D               	movlw	13
  8591  0C55  1283               	bcf	3,5	;RP0=0, select bank0
  8592  0C56  1303               	bcf	3,6	;RP1=0, select bank0
  8593  0C57  00A8               	movwf	??_EEPROM_24C1025_Write_Str+1
  8594  0C58  30FB               	movlw	251
  8595  0C59  00A7               	movwf	??_EEPROM_24C1025_Write_Str
  8596  0C5A                     u6607:	
  8597  0C5A  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
  8598  0C5B  2C5A               	goto	u6607
  8599  0C5C  0BA8               	decfsz	??_EEPROM_24C1025_Write_Str+1,f
  8600  0C5D  2C5A               	goto	u6607
  8601                           
  8602                           ;EEPROM_24C1025.c: 167:             mem_add++;
  8603  0C5E  1283               	bcf	3,5	;RP0=0, select bank0
  8604  0C5F  1303               	bcf	3,6	;RP1=0, select bank0
  8605  0C60  0AA2               	incf	EEPROM_24C1025_Write_Str@mem_add,f
  8606  0C61  1903               	skipnz
  8607  0C62  0AA3               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
  8608  0C63  1903               	skipnz
  8609  0C64  0AA4               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
  8610  0C65  1903               	skipnz
  8611  0C66  0AA5               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
  8612                           
  8613                           ;EEPROM_24C1025.c: 168:             data++;
  8614  0C67  0AA6               	incf	EEPROM_24C1025_Write_Str@data,f
  8615  0C68  2C00               	goto	L18
  8616  0C69                     l6682:	
  8617                           ;EEPROM_24C1025.c: 169:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8618                           
  8619                           
  8620                           ;EEPROM_24C1025.c: 181:             {;EEPROM_24C1025.c: 182:             I2C_Master_Writ
      +                          e(*data);
  8621  0C69  27E3  120A  158A   	fcall	PL64	;call to abstracted procedure
  8622  0C6C  272E  120A  158A   	fcall	_I2C_Master_Write
  8623                           
  8624                           ;EEPROM_24C1025.c: 183:             data++;
  8625  0C6F  0AA6               	incf	EEPROM_24C1025_Write_Str@data,f
  8626                           
  8627                           ;EEPROM_24C1025.c: 184:             mem_add++;
  8628  0C70  0AA2               	incf	EEPROM_24C1025_Write_Str@mem_add,f
  8629  0C71  1903               	skipnz
  8630  0C72  0AA3               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
  8631  0C73  1903               	skipnz
  8632  0C74  0AA4               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
  8633  0C75  1903               	skipnz
  8634  0C76  0AA5               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
  8635  0C77  2C31               	goto	l6688
  8636  0C78                     l6690:	
  8637                           
  8638                           ;EEPROM_24C1025.c: 187:      I2C_Master_Write(0);
  8639  0C78  01A0               	clrf	I2C_Master_Write@d
  8640  0C79  01A1               	clrf	I2C_Master_Write@d+1
  8641  0C7A  272E  120A  158A   	fcall	_I2C_Master_Write
  8642                           
  8643                           ;EEPROM_24C1025.c: 188:      I2C_Master_Stop();
  8644  0C7D  273C  120A  158A   	fcall	_I2C_Master_Stop
  8645                           
  8646                           ;EEPROM_24C1025.c: 189:      _delay((unsigned long)((5)*(8000000/4000.0)));
  8647  0C80  300D               	movlw	13
  8648  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  8649  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  8650  0C83  00A8               	movwf	??_EEPROM_24C1025_Write_Str+1
  8651  0C84  30FB               	movlw	251
  8652  0C85  00A7               	movwf	??_EEPROM_24C1025_Write_Str
  8653  0C86                     u6617:	
  8654  0C86  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
  8655  0C87  2C86               	goto	u6617
  8656  0C88  0BA8               	decfsz	??_EEPROM_24C1025_Write_Str+1,f
  8657  0C89  2C86               	goto	u6617
  8658  0C8A  0008               	return
  8659  0C8B                     __end_of_EEPROM_24C1025_Write_Str:	
  8660  0C8B                     __ptext49:	
  8661 ;; *************** function _EEPROM_24C1025_Read_Str *****************
  8662 ;; Defined at:
  8663 ;;		line 196 in file "EEPROM_24C1025.c"
  8664 ;; Parameters:    Size  Location     Type
  8665 ;;  chip_add        1    wreg     unsigned char 
  8666 ;;  mem_add         4    4[BANK0 ] unsigned long 
  8667 ;;  texto           1    8[BANK0 ] PTR unsigned char 
  8668 ;;		 -> texto(16), 
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;  chip_add        1   12[BANK0 ] unsigned char 
  8671 ;;  ctrl            1   14[BANK0 ] unsigned char 
  8672 ;;  range           1   13[BANK0 ] unsigned char 
  8673 ;;  cnt             1   11[BANK0 ] unsigned char 
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  1    wreg      void 
  8676 ;; Registers used:
  8677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8678 ;; Tracked objects:
  8679 ;;		On entry : 300/300
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8683 ;;      Params:         0       5       0       0       0
  8684 ;;      Locals:         0       4       0       0       0
  8685 ;;      Temps:          0       2       0       0       0
  8686 ;;      Totals:         0      11       0       0       0
  8687 ;;Total ram usage:       11 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; Hardware stack levels required when called:    3
  8690 ;; This function calls:
  8691 ;;		_I2C_Master_Read
  8692 ;;		_I2C_Master_RepeatedStart
  8693 ;;		_I2C_Master_Start
  8694 ;;		_I2C_Master_Stop
  8695 ;;		_I2C_Master_Write
  8696 ;; This function is called by:
  8697 ;;		_Decodify_Command
  8698 ;; This function uses a non-reentrant model
  8699 ;;
  8700                           
  8701                           
  8702                           ;psect for function _EEPROM_24C1025_Read_Str
  8703  0C8B                     _EEPROM_24C1025_Read_Str:	
  8704                           
  8705                           ;incstack = 0
  8706                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8707                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
  8708  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  8709  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  8710  0C8D  00AC               	movwf	EEPROM_24C1025_Read_Str@chip_add
  8711                           
  8712                           ;EEPROM_24C1025.c: 198:      unsigned char range=0;
  8713  0C8E  01AD               	clrf	EEPROM_24C1025_Read_Str@range
  8714                           
  8715                           ;EEPROM_24C1025.c: 199:      unsigned char ctrl;;EEPROM_24C1025.c: 201:      if(mem_add>
      +                          0x1FFFF) return;
  8716  0C8F  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8717  0C90  1D03               	btfss	3,2
  8718  0C91  0008               	return
  8719  0C92  3002               	movlw	2
  8720  0C93  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8721  0C94  1D03               	skipz
  8722  0C95  2C9C               	goto	u5933
  8723  0C96  3000               	movlw	0
  8724  0C97  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8725  0C98  1D03               	skipz
  8726  0C99  2C9C               	goto	u5933
  8727  0C9A  3000               	movlw	0
  8728  0C9B  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8729  0C9C                     u5933:	
  8730  0C9C  1803               	btfsc	3,0
  8731  0C9D  0008               	return
  8732                           
  8733                           ;EEPROM_24C1025.c: 203:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8734  0C9E  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8735  0C9F  1D03               	btfss	3,2
  8736  0CA0  2CAD               	goto	l6702
  8737  0CA1  3001               	movlw	1
  8738  0CA2  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8739  0CA3  1D03               	skipz
  8740  0CA4  2CAB               	goto	u5943
  8741  0CA5  3000               	movlw	0
  8742  0CA6  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8743  0CA7  1D03               	skipz
  8744  0CA8  2CAB               	goto	u5943
  8745  0CA9  3000               	movlw	0
  8746  0CAA  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8747  0CAB                     u5943:	
  8748  0CAB  1C03               	btfss	3,0
  8749  0CAC  2CB0               	goto	l6704
  8750  0CAD                     l6702:	
  8751  0CAD  3008               	movlw	8
  8752  0CAE  00AD               	movwf	EEPROM_24C1025_Read_Str@range
  8753  0CAF  2CB1               	goto	l6706
  8754  0CB0                     l6704:	
  8755  0CB0  01AD               	clrf	EEPROM_24C1025_Read_Str@range
  8756  0CB1                     l6706:	
  8757                           
  8758                           ;EEPROM_24C1025.c: 204:      ctrl=chip_add;
  8759                           
  8760                           ;EEPROM_24C1025.c: 205:      ctrl<<=1;
  8761                           
  8762                           ;EEPROM_24C1025.c: 206:      ctrl |= 0xA0;
  8763                           
  8764                           ;EEPROM_24C1025.c: 207:      ctrl |= 0b00000001;
  8765                           
  8766                           ;EEPROM_24C1025.c: 208:      ctrl |= range;
  8767  0CB1  27B1  120A  158A   	fcall	PL42	;call to abstracted procedure
  8768                           
  8769                           ;EEPROM_24C1025.c: 210:      I2C_Master_Start();
  8770  0CB4  2734  120A  158A   	fcall	_I2C_Master_Start
  8771                           
  8772                           ;EEPROM_24C1025.c: 211:      I2C_Master_Write(ctrl & 0xFE);
  8773  0CB7  27FA  120A  158A   	fcall	PL82	;call to abstracted procedure
  8774  0CBA  272E  120A  158A   	fcall	_I2C_Master_Write
  8775                           
  8776                           ;EEPROM_24C1025.c: 212:      I2C_Master_Write(((char *)&mem_add)[1]);
  8777  0CBD  0825               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8778  0CBE  00A0               	movwf	I2C_Master_Write@d
  8779  0CBF  01A1               	clrf	I2C_Master_Write@d+1
  8780  0CC0  272E  120A  158A   	fcall	_I2C_Master_Write
  8781                           
  8782                           ;EEPROM_24C1025.c: 213:      I2C_Master_Write(((char *)&mem_add)[0]);
  8783  0CC3  0824               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  8784  0CC4  00A0               	movwf	I2C_Master_Write@d
  8785  0CC5  01A1               	clrf	I2C_Master_Write@d+1
  8786  0CC6  272E  120A  158A   	fcall	_I2C_Master_Write
  8787                           
  8788                           ;EEPROM_24C1025.c: 214:      I2C_Master_RepeatedStart();
  8789  0CC9  276A  120A  158A   	fcall	_I2C_Master_RepeatedStart
  8790                           
  8791                           ;EEPROM_24C1025.c: 215:      I2C_Master_Write(ctrl);
  8792  0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  8793  0CCD  082E               	movf	EEPROM_24C1025_Read_Str@ctrl,w
  8794  0CCE  00A0               	movwf	I2C_Master_Write@d
  8795  0CCF  01A1               	clrf	I2C_Master_Write@d+1
  8796  0CD0  272E  120A  158A   	fcall	_I2C_Master_Write
  8797                           
  8798                           ;EEPROM_24C1025.c: 217:      cnt=0;
  8799  0CD3  01AB               	clrf	EEPROM_24C1025_Read_Str@cnt
  8800  0CD4                     l6730:	
  8801                           
  8802                           ;EEPROM_24C1025.c: 219:            if(mem_add>0x1FFFF) break;
  8803  0CD4  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8804  0CD5  1D03               	btfss	3,2
  8805  0CD6  2D5E               	goto	l6784
  8806  0CD7  3002               	movlw	2
  8807  0CD8  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8808  0CD9  1D03               	skipz
  8809  0CDA  2CE1               	goto	u5953
  8810  0CDB  3000               	movlw	0
  8811  0CDC  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8812  0CDD  1D03               	skipz
  8813  0CDE  2CE1               	goto	u5953
  8814  0CDF  3000               	movlw	0
  8815  0CE0  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8816  0CE1                     u5953:	
  8817  0CE1  1803               	btfsc	3,0
  8818  0CE2  2D5E               	goto	l6784
  8819                           
  8820                           ;EEPROM_24C1025.c: 220:            if((mem_add+1)%128==0)
  8821  0CE3  0824               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  8822  0CE4  3E01               	addlw	1
  8823  0CE5  397F               	andlw	127
  8824  0CE6  1D03               	btfss	3,2
  8825  0CE7  2D3F               	goto	l6774
  8826                           
  8827                           ;EEPROM_24C1025.c: 221:              {;EEPROM_24C1025.c: 222:              (*texto)=I2C_
      +                          Master_Read(0);
  8828  0CE8  0828               	movf	EEPROM_24C1025_Read_Str@texto,w
  8829  0CE9  0084               	movwf	4
  8830  0CEA  01A0               	clrf	I2C_Master_Read@a
  8831  0CEB  01A1               	clrf	I2C_Master_Read@a+1
  8832  0CEC  273F  120A  158A   	fcall	_I2C_Master_Read
  8833  0CEF  0820               	movf	?_I2C_Master_Read,w
  8834  0CF0  1783               	bsf	3,7	;select IRP bank2
  8835  0CF1  0080               	movwf	0
  8836                           
  8837                           ;EEPROM_24C1025.c: 223:              I2C_Master_Stop();
  8838  0CF2  273C  120A  158A   	fcall	_I2C_Master_Stop
  8839                           
  8840                           ;EEPROM_24C1025.c: 225:              _delay((unsigned long)((5)*(8000000/4000.0)));
  8841  0CF5  300D               	movlw	13
  8842  0CF6  1283               	bcf	3,5	;RP0=0, select bank0
  8843  0CF7  1303               	bcf	3,6	;RP1=0, select bank0
  8844  0CF8  00AA               	movwf	??_EEPROM_24C1025_Read_Str+1
  8845  0CF9  30FB               	movlw	251
  8846  0CFA  00A9               	movwf	??_EEPROM_24C1025_Read_Str
  8847  0CFB                     u6627:	
  8848  0CFB  0BA9               	decfsz	??_EEPROM_24C1025_Read_Str,f
  8849  0CFC  2CFB               	goto	u6627
  8850  0CFD  0BAA               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
  8851  0CFE  2CFB               	goto	u6627
  8852                           
  8853                           ;EEPROM_24C1025.c: 226:              mem_add++;
  8854  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  8855  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  8856  0D01  0AA4               	incf	EEPROM_24C1025_Read_Str@mem_add,f
  8857  0D02  1903               	skipnz
  8858  0D03  0AA5               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
  8859  0D04  1903               	skipnz
  8860  0D05  0AA6               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
  8861  0D06  1903               	skipnz
  8862  0D07  0AA7               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
  8863                           
  8864                           ;EEPROM_24C1025.c: 227:              texto++;
  8865  0D08  0AA8               	incf	EEPROM_24C1025_Read_Str@texto,f
  8866                           
  8867                           ;EEPROM_24C1025.c: 228:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8868  0D09  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8869  0D0A  1D03               	btfss	3,2
  8870  0D0B  2D18               	goto	l6748
  8871  0D0C  3001               	movlw	1
  8872  0D0D  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8873  0D0E  1D03               	skipz
  8874  0D0F  2D16               	goto	u5973
  8875  0D10  3000               	movlw	0
  8876  0D11  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8877  0D12  1D03               	skipz
  8878  0D13  2D16               	goto	u5973
  8879  0D14  3000               	movlw	0
  8880  0D15  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8881  0D16                     u5973:	
  8882  0D16  1C03               	btfss	3,0
  8883  0D17  2D1B               	goto	l6750
  8884  0D18                     l6748:	
  8885  0D18  3008               	movlw	8
  8886  0D19  00AD               	movwf	EEPROM_24C1025_Read_Str@range
  8887  0D1A  2D1C               	goto	l6752
  8888  0D1B                     l6750:	
  8889  0D1B  01AD               	clrf	EEPROM_24C1025_Read_Str@range
  8890  0D1C                     l6752:	
  8891                           
  8892                           ;EEPROM_24C1025.c: 229:              ctrl=chip_add;
  8893                           
  8894                           ;EEPROM_24C1025.c: 230:              ctrl<<=1;
  8895                           
  8896                           ;EEPROM_24C1025.c: 231:              ctrl |= 0xA0;
  8897                           
  8898                           ;EEPROM_24C1025.c: 232:              ctrl |= 0b00000001;
  8899                           
  8900                           ;EEPROM_24C1025.c: 233:              ctrl |= range;
  8901  0D1C  27B1  120A  158A   	fcall	PL42	;call to abstracted procedure
  8902                           
  8903                           ;EEPROM_24C1025.c: 235:              I2C_Master_Start();
  8904  0D1F  2734  120A  158A   	fcall	_I2C_Master_Start
  8905                           
  8906                           ;EEPROM_24C1025.c: 236:              I2C_Master_Write(ctrl & 0xFE);
  8907  0D22  27FA  120A  158A   	fcall	PL82	;call to abstracted procedure
  8908  0D25  272E  120A  158A   	fcall	_I2C_Master_Write
  8909                           
  8910                           ;EEPROM_24C1025.c: 237:              I2C_Master_Write(((char *)&mem_add)[1]);
  8911  0D28  0825               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8912  0D29  00A0               	movwf	I2C_Master_Write@d
  8913  0D2A  01A1               	clrf	I2C_Master_Write@d+1
  8914  0D2B  272E  120A  158A   	fcall	_I2C_Master_Write
  8915                           
  8916                           ;EEPROM_24C1025.c: 238:              I2C_Master_Write(((char *)&mem_add)[0]);
  8917  0D2E  0824               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  8918  0D2F  00A0               	movwf	I2C_Master_Write@d
  8919  0D30  01A1               	clrf	I2C_Master_Write@d+1
  8920  0D31  272E  120A  158A   	fcall	_I2C_Master_Write
  8921                           
  8922                           ;EEPROM_24C1025.c: 239:              I2C_Master_RepeatedStart();
  8923  0D34  276A  120A  158A   	fcall	_I2C_Master_RepeatedStart
  8924                           
  8925                           ;EEPROM_24C1025.c: 240:              I2C_Master_Write(ctrl);
  8926  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  8927  0D38  082E               	movf	EEPROM_24C1025_Read_Str@ctrl,w
  8928  0D39  00A0               	movwf	I2C_Master_Write@d
  8929  0D3A  01A1               	clrf	I2C_Master_Write@d+1
  8930  0D3B  272E  120A  158A   	fcall	_I2C_Master_Write
  8931                           
  8932                           ;EEPROM_24C1025.c: 241:              }
  8933  0D3E  2D57               	goto	l6782
  8934  0D3F                     l6774:	
  8935                           
  8936                           ;EEPROM_24C1025.c: 243:              {;EEPROM_24C1025.c: 244:              (*texto)=I2C_
      +                          Master_Read(1);
  8937  0D3F  0828               	movf	EEPROM_24C1025_Read_Str@texto,w
  8938  0D40  0084               	movwf	4
  8939  0D41  01A0               	clrf	I2C_Master_Read@a
  8940  0D42  0AA0               	incf	I2C_Master_Read@a,f
  8941  0D43  01A1               	clrf	I2C_Master_Read@a+1
  8942  0D44  273F  120A  158A   	fcall	_I2C_Master_Read
  8943  0D47  0820               	movf	?_I2C_Master_Read,w
  8944  0D48  1783               	bsf	3,7	;select IRP bank2
  8945  0D49  0080               	movwf	0
  8946                           
  8947                           ;EEPROM_24C1025.c: 245:              if((*texto)==0)break;
  8948  0D4A  0828               	movf	EEPROM_24C1025_Read_Str@texto,w
  8949  0D4B  0084               	movwf	4
  8950  0D4C  0800               	movf	0,w
  8951  0D4D  1903               	btfsc	3,2
  8952  0D4E  2D5E               	goto	l6784
  8953                           
  8954                           ;EEPROM_24C1025.c: 246:              texto++;
  8955  0D4F  0AA8               	incf	EEPROM_24C1025_Read_Str@texto,f
  8956                           
  8957                           ;EEPROM_24C1025.c: 247:              mem_add++;
  8958  0D50  0AA4               	incf	EEPROM_24C1025_Read_Str@mem_add,f
  8959  0D51  1903               	skipnz
  8960  0D52  0AA5               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
  8961  0D53  1903               	skipnz
  8962  0D54  0AA6               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
  8963  0D55  1903               	skipnz
  8964  0D56  0AA7               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
  8965  0D57                     l6782:	
  8966                           
  8967                           ;EEPROM_24C1025.c: 249:        }while((cnt++)<64);
  8968  0D57  082B               	movf	EEPROM_24C1025_Read_Str@cnt,w
  8969  0D58  0AAB               	incf	EEPROM_24C1025_Read_Str@cnt,f
  8970  0D59  00A9               	movwf	??_EEPROM_24C1025_Read_Str
  8971  0D5A  3040               	movlw	64
  8972  0D5B  0229               	subwf	??_EEPROM_24C1025_Read_Str,w
  8973  0D5C  1C03               	skipc
  8974  0D5D  2CD4               	goto	l6730
  8975  0D5E                     l6784:	
  8976                           
  8977                           ;EEPROM_24C1025.c: 251:      I2C_Master_Read(0);
  8978  0D5E  01A0               	clrf	I2C_Master_Read@a
  8979  0D5F  01A1               	clrf	I2C_Master_Read@a+1
  8980  0D60  273F  120A  158A   	fcall	_I2C_Master_Read
  8981                           
  8982                           ;EEPROM_24C1025.c: 252:      I2C_Master_Stop();
  8983  0D63  273C  120A  158A   	fcall	_I2C_Master_Stop
  8984                           
  8985                           ;EEPROM_24C1025.c: 253:      _delay((unsigned long)((650)*(8000000/4000000.0)));
  8986  0D66  30B9               	movlw	185
  8987  0D67  1283               	bcf	3,5	;RP0=0, select bank0
  8988  0D68  1303               	bcf	3,6	;RP1=0, select bank0
  8989  0D69  00A9               	movwf	??_EEPROM_24C1025_Read_Str
  8990  0D6A                     u6637:	
  8991  0D6A  2D6B               	nop2
  8992  0D6B  2D6C               	nop2
  8993  0D6C  0BA9               	decfsz	??_EEPROM_24C1025_Read_Str,f
  8994  0D6D  2D6A               	goto	u6637
  8995  0D6E  2D6F               	nop2
  8996  0D6F  0008               	return
  8997  0D70                     __end_of_EEPROM_24C1025_Read_Str:	
  8998  0D70                     __ptext52:	
  8999 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
  9000 ;; Defined at:
  9001 ;;		line 74 in file "EEPROM_24C1025.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;  chip_add        1    wreg     unsigned char 
  9004 ;;  mem_add         4    4[BANK0 ] unsigned long 
  9005 ;;  sizedata        1    8[BANK0 ] unsigned char 
  9006 ;;  data            2    9[BANK0 ] PTR unsigned char 
  9007 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), buffer(32), 
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;  chip_add        1   14[BANK0 ] unsigned char 
  9010 ;;  cnt             1   13[BANK0 ] unsigned char 
  9011 ;;  ctrl            1   16[BANK0 ] unsigned char 
  9012 ;;  range           1   15[BANK0 ] unsigned char 
  9013 ;;  cnt             1    0        unsigned char 
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  1    wreg      void 
  9016 ;; Registers used:
  9017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/300
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9023 ;;      Params:         0       7       0       0       0
  9024 ;;      Locals:         0       4       0       0       0
  9025 ;;      Temps:          0       2       0       0       0
  9026 ;;      Totals:         0      13       0       0       0
  9027 ;;Total ram usage:       13 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; Hardware stack levels required when called:    3
  9030 ;; This function calls:
  9031 ;;		_I2C_Master_Read
  9032 ;;		_I2C_Master_RepeatedStart
  9033 ;;		_I2C_Master_Start
  9034 ;;		_I2C_Master_Stop
  9035 ;;		_I2C_Master_Write
  9036 ;; This function is called by:
  9037 ;;		_Decodify_Command
  9038 ;;		_EEPROM_24C1025_Read_Byte
  9039 ;;		_EEPROM_24C1025_Read_Int
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           
  9044                           ;psect for function _EEPROM_24C1025_Read_Buffer
  9045  0D70                     _EEPROM_24C1025_Read_Buffer:	
  9046                           
  9047                           ;incstack = 0
  9048                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9049                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
  9050  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  9051  0D71  1303               	bcf	3,6	;RP1=0, select bank0
  9052  0D72  00AE               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
  9053                           
  9054                           ;EEPROM_24C1025.c: 81:      unsigned char ctrl;;EEPROM_24C1025.c: 83:      Delay_Led_Mem
      +                          ory=20;
  9055                           
  9056                           ;EEPROM_24C1025.c: 85:      if(mem_add>0x1FFFF) return;
  9057  0D73  27D4  120A  158A   	fcall	PL56	;call to abstracted procedure
  9058  0D76  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  9059  0D77  1D03               	btfss	3,2
  9060  0D78  0008               	return
  9061  0D79  3002               	movlw	2
  9062  0D7A  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  9063  0D7B  1D03               	skipz
  9064  0D7C  2D83               	goto	u5683
  9065  0D7D  3000               	movlw	0
  9066  0D7E  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9067  0D7F  1D03               	skipz
  9068  0D80  2D83               	goto	u5683
  9069  0D81  3000               	movlw	0
  9070  0D82  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9071  0D83                     u5683:	
  9072  0D83  1803               	btfsc	3,0
  9073  0D84  0008               	return
  9074                           
  9075                           ;EEPROM_24C1025.c: 87:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9076  0D85  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  9077  0D86  1D03               	btfss	3,2
  9078  0D87  2D94               	goto	l6356
  9079  0D88  3001               	movlw	1
  9080  0D89  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  9081  0D8A  1D03               	skipz
  9082  0D8B  2D92               	goto	u5693
  9083  0D8C  3000               	movlw	0
  9084  0D8D  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9085  0D8E  1D03               	skipz
  9086  0D8F  2D92               	goto	u5693
  9087  0D90  3000               	movlw	0
  9088  0D91  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9089  0D92                     u5693:	
  9090  0D92  1C03               	btfss	3,0
  9091  0D93  2D97               	goto	l6358
  9092  0D94                     l6356:	
  9093  0D94  3008               	movlw	8
  9094  0D95  00AF               	movwf	EEPROM_24C1025_Read_Buffer@range
  9095  0D96  2D98               	goto	l6360
  9096  0D97                     l6358:	
  9097  0D97  01AF               	clrf	EEPROM_24C1025_Read_Buffer@range
  9098  0D98                     l6360:	
  9099                           
  9100                           ;EEPROM_24C1025.c: 88:      ctrl=chip_add;
  9101                           
  9102                           ;EEPROM_24C1025.c: 89:      ctrl<<=1;
  9103                           
  9104                           ;EEPROM_24C1025.c: 90:      ctrl |= 0xA0;
  9105                           
  9106                           ;EEPROM_24C1025.c: 91:      ctrl |= 0b00000001;
  9107                           
  9108                           ;EEPROM_24C1025.c: 92:      ctrl |= range;
  9109  0D98  27BB  120A  158A   	fcall	PL44	;call to abstracted procedure
  9110                           
  9111                           ;EEPROM_24C1025.c: 94:      I2C_Master_Start();
  9112  0D9B  2734  120A  158A   	fcall	_I2C_Master_Start
  9113                           
  9114                           ;EEPROM_24C1025.c: 95:      I2C_Master_Write(ctrl & 0xFE);
  9115  0D9E  27EE  120A  158A   	fcall	PL78	;call to abstracted procedure
  9116  0DA1  272E  120A  158A   	fcall	_I2C_Master_Write
  9117                           
  9118                           ;EEPROM_24C1025.c: 96:      I2C_Master_Write(((char *)&mem_add)[1]);
  9119  0DA4  0825               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9120  0DA5  00A0               	movwf	I2C_Master_Write@d
  9121  0DA6  01A1               	clrf	I2C_Master_Write@d+1
  9122  0DA7  272E  120A  158A   	fcall	_I2C_Master_Write
  9123                           
  9124                           ;EEPROM_24C1025.c: 97:      I2C_Master_Write(((char *)&mem_add)[0]);
  9125  0DAA  0824               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9126  0DAB  00A0               	movwf	I2C_Master_Write@d
  9127  0DAC  01A1               	clrf	I2C_Master_Write@d+1
  9128  0DAD  272E  120A  158A   	fcall	_I2C_Master_Write
  9129                           
  9130                           ;EEPROM_24C1025.c: 98:      I2C_Master_RepeatedStart();
  9131  0DB0  276A  120A  158A   	fcall	_I2C_Master_RepeatedStart
  9132                           
  9133                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(ctrl);
  9134  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  9135  0DB4  0830               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
  9136  0DB5  00A0               	movwf	I2C_Master_Write@d
  9137  0DB6  01A1               	clrf	I2C_Master_Write@d+1
  9138  0DB7  272E  120A  158A   	fcall	_I2C_Master_Write
  9139                           
  9140                           ;EEPROM_24C1025.c: 101:      for(char cnt=0;cnt<(sizedata);cnt++)
  9141  0DBA  01AD               	clrf	EEPROM_24C1025_Read_Buffer@cnt_1518
  9142  0DBB                     l6436:	
  9143  0DBB  0828               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
  9144  0DBC  022D               	subwf	EEPROM_24C1025_Read_Buffer@cnt_1518,w
  9145  0DBD  1803               	btfsc	3,0
  9146  0DBE  2E41               	goto	l6438
  9147                           
  9148                           ;EEPROM_24C1025.c: 102:         {;EEPROM_24C1025.c: 103:            if(mem_add>0x1FFFF) 
      +                          break;
  9149  0DBF  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  9150  0DC0  1D03               	btfss	3,2
  9151  0DC1  2E41               	goto	l6438
  9152  0DC2  3002               	movlw	2
  9153  0DC3  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  9154  0DC4  1D03               	skipz
  9155  0DC5  2DCC               	goto	u5703
  9156  0DC6  3000               	movlw	0
  9157  0DC7  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9158  0DC8  1D03               	skipz
  9159  0DC9  2DCC               	goto	u5703
  9160  0DCA  3000               	movlw	0
  9161  0DCB  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9162  0DCC                     u5703:	
  9163  0DCC  1803               	btfsc	3,0
  9164  0DCD  2E41               	goto	l6438
  9165                           
  9166                           ;EEPROM_24C1025.c: 104:            if((mem_add+1)%128==0)
  9167  0DCE  0824               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9168  0DCF  3E01               	addlw	1
  9169  0DD0  397F               	andlw	127
  9170  0DD1  1D03               	btfss	3,2
  9171  0DD2  2E2B               	goto	l6428
  9172                           
  9173                           ;EEPROM_24C1025.c: 105:              {;EEPROM_24C1025.c: 106:              (*data)=I2C_M
      +                          aster_Read(0);
  9174  0DD3  27DC  120A  158A   	fcall	PL58	;call to abstracted procedure
  9175  0DD6  01A1               	clrf	I2C_Master_Read@a+1
  9176  0DD7  273F  120A  158A   	fcall	_I2C_Master_Read
  9177  0DDA  0820               	movf	?_I2C_Master_Read,w
  9178  0DDB  0080               	movwf	0
  9179                           
  9180                           ;EEPROM_24C1025.c: 107:              I2C_Master_Stop();
  9181  0DDC  273C  120A  158A   	fcall	_I2C_Master_Stop
  9182                           
  9183                           ;EEPROM_24C1025.c: 109:              _delay((unsigned long)((5)*(8000000/4000.0)));
  9184  0DDF  300D               	movlw	13
  9185  0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  9186  0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  9187  0DE2  00AC               	movwf	??_EEPROM_24C1025_Read_Buffer+1
  9188  0DE3  30FB               	movlw	251
  9189  0DE4  00AB               	movwf	??_EEPROM_24C1025_Read_Buffer
  9190  0DE5                     u6647:	
  9191  0DE5  0BAB               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
  9192  0DE6  2DE5               	goto	u6647
  9193  0DE7  0BAC               	decfsz	??_EEPROM_24C1025_Read_Buffer+1,f
  9194  0DE8  2DE5               	goto	u6647
  9195                           
  9196                           ;EEPROM_24C1025.c: 110:              mem_add++;
  9197  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  9198  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  9199  0DEB  0AA4               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
  9200  0DEC  1903               	skipnz
  9201  0DED  0AA5               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
  9202  0DEE  1903               	skipnz
  9203  0DEF  0AA6               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
  9204  0DF0  1903               	skipnz
  9205  0DF1  0AA7               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
  9206                           
  9207                           ;EEPROM_24C1025.c: 111:              data++;
  9208  0DF2  0AA9               	incf	EEPROM_24C1025_Read_Buffer@data,f
  9209  0DF3  1903               	skipnz
  9210  0DF4  0AAA               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
  9211                           
  9212                           ;EEPROM_24C1025.c: 112:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9213  0DF5  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  9214  0DF6  1D03               	btfss	3,2
  9215  0DF7  2E04               	goto	l6402
  9216  0DF8  3001               	movlw	1
  9217  0DF9  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  9218  0DFA  1D03               	skipz
  9219  0DFB  2E02               	goto	u5723
  9220  0DFC  3000               	movlw	0
  9221  0DFD  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9222  0DFE  1D03               	skipz
  9223  0DFF  2E02               	goto	u5723
  9224  0E00  3000               	movlw	0
  9225  0E01  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9226  0E02                     u5723:	
  9227  0E02  1C03               	btfss	3,0
  9228  0E03  2E07               	goto	l6404
  9229  0E04                     l6402:	
  9230  0E04  3008               	movlw	8
  9231  0E05  00AF               	movwf	EEPROM_24C1025_Read_Buffer@range
  9232  0E06  2E08               	goto	l6406
  9233  0E07                     l6404:	
  9234  0E07  01AF               	clrf	EEPROM_24C1025_Read_Buffer@range
  9235  0E08                     l6406:	
  9236                           
  9237                           ;EEPROM_24C1025.c: 113:              ctrl=chip_add;
  9238                           
  9239                           ;EEPROM_24C1025.c: 114:              ctrl<<=1;
  9240                           
  9241                           ;EEPROM_24C1025.c: 115:              ctrl |= 0xA0;
  9242                           
  9243                           ;EEPROM_24C1025.c: 116:              ctrl |= 0b00000001;
  9244                           
  9245                           ;EEPROM_24C1025.c: 117:              ctrl |= range;
  9246  0E08  27BB  120A  158A   	fcall	PL44	;call to abstracted procedure
  9247                           
  9248                           ;EEPROM_24C1025.c: 119:              I2C_Master_Start();
  9249  0E0B  2734  120A  158A   	fcall	_I2C_Master_Start
  9250                           
  9251                           ;EEPROM_24C1025.c: 120:              I2C_Master_Write(ctrl & 0xFE);
  9252  0E0E  27EE  120A  158A   	fcall	PL78	;call to abstracted procedure
  9253  0E11  272E  120A  158A   	fcall	_I2C_Master_Write
  9254                           
  9255                           ;EEPROM_24C1025.c: 121:              I2C_Master_Write(((char *)&mem_add)[1]);
  9256  0E14  0825               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9257  0E15  00A0               	movwf	I2C_Master_Write@d
  9258  0E16  01A1               	clrf	I2C_Master_Write@d+1
  9259  0E17  272E  120A  158A   	fcall	_I2C_Master_Write
  9260                           
  9261                           ;EEPROM_24C1025.c: 122:              I2C_Master_Write(((char *)&mem_add)[0]);
  9262  0E1A  0824               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9263  0E1B  00A0               	movwf	I2C_Master_Write@d
  9264  0E1C  01A1               	clrf	I2C_Master_Write@d+1
  9265  0E1D  272E  120A  158A   	fcall	_I2C_Master_Write
  9266                           
  9267                           ;EEPROM_24C1025.c: 123:              I2C_Master_RepeatedStart();
  9268  0E20  276A  120A  158A   	fcall	_I2C_Master_RepeatedStart
  9269                           
  9270                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl);
  9271  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  9272  0E24  0830               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
  9273  0E25  00A0               	movwf	I2C_Master_Write@d
  9274  0E26  01A1               	clrf	I2C_Master_Write@d+1
  9275  0E27  272E  120A  158A   	fcall	_I2C_Master_Write
  9276                           
  9277                           ;EEPROM_24C1025.c: 125:              }
  9278  0E2A  2E3F               	goto	l6434
  9279  0E2B                     l6428:	
  9280                           
  9281                           ;EEPROM_24C1025.c: 127:              {;EEPROM_24C1025.c: 128:              (*data)=I2C_M
      +                          aster_Read(1);
  9282  0E2B  27DC  120A  158A   	fcall	PL58	;call to abstracted procedure
  9283  0E2E  0AA0               	incf	I2C_Master_Read@a,f
  9284  0E2F  01A1               	clrf	I2C_Master_Read@a+1
  9285  0E30  273F  120A  158A   	fcall	_I2C_Master_Read
  9286  0E33  0820               	movf	?_I2C_Master_Read,w
  9287  0E34  0080               	movwf	0
  9288                           
  9289                           ;EEPROM_24C1025.c: 129:              data++;
  9290  0E35  0AA9               	incf	EEPROM_24C1025_Read_Buffer@data,f
  9291  0E36  1903               	skipnz
  9292  0E37  0AAA               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
  9293                           
  9294                           ;EEPROM_24C1025.c: 130:              mem_add++;
  9295  0E38  0AA4               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
  9296  0E39  1903               	skipnz
  9297  0E3A  0AA5               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
  9298  0E3B  1903               	skipnz
  9299  0E3C  0AA6               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
  9300  0E3D  1903               	skipnz
  9301  0E3E  0AA7               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
  9302  0E3F                     l6434:	
  9303                           
  9304                           ;EEPROM_24C1025.c: 132:         }
  9305  0E3F  0AAD               	incf	EEPROM_24C1025_Read_Buffer@cnt_1518,f
  9306  0E40  2DBB               	goto	l6436
  9307  0E41                     l6438:	
  9308                           
  9309                           ;EEPROM_24C1025.c: 133:         I2C_Master_Read(0);
  9310  0E41  01A0               	clrf	I2C_Master_Read@a
  9311  0E42  01A1               	clrf	I2C_Master_Read@a+1
  9312  0E43  273F  120A  158A   	fcall	_I2C_Master_Read
  9313                           
  9314                           ;EEPROM_24C1025.c: 134:         I2C_Master_Stop();
  9315  0E46  273C  120A  158A   	fcall	_I2C_Master_Stop
  9316                           
  9317                           ;EEPROM_24C1025.c: 135:         _delay((unsigned long)((650)*(8000000/4000000.0)));
  9318  0E49  30B9               	movlw	185
  9319  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  9320  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  9321  0E4C  00AB               	movwf	??_EEPROM_24C1025_Read_Buffer
  9322  0E4D                     u6657:	
  9323  0E4D  2E4E               	nop2
  9324  0E4E  2E4F               	nop2
  9325  0E4F  0BAB               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
  9326  0E50  2E4D               	goto	u6657
  9327  0E51  2E52               	nop2
  9328  0E52  0008               	return
  9329  0E53                     __end_of_EEPROM_24C1025_Read_Buffer:	
  9330  0E53                     __ptext57:	
  9331 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
  9332 ;; Defined at:
  9333 ;;		line 13 in file "EEPROM_24C1025.c"
  9334 ;; Parameters:    Size  Location     Type
  9335 ;;  chip_add        1    wreg     unsigned char 
  9336 ;;  mem_add         4    2[BANK0 ] unsigned long 
  9337 ;;  sizedata        1    6[BANK0 ] unsigned char 
  9338 ;;  data            2    7[BANK0 ] PTR unsigned char 
  9339 ;;		 -> EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(1), usart_protocol.value(10), usart_protocol(1
      +6), 
  9340 ;; Auto vars:     Size  Location     Type
  9341 ;;  chip_add        1   12[BANK0 ] unsigned char 
  9342 ;;  ctrl            1   14[BANK0 ] unsigned char 
  9343 ;;  range           1   13[BANK0 ] unsigned char 
  9344 ;;  count           1   11[BANK0 ] unsigned char 
  9345 ;; Return value:  Size  Location     Type
  9346 ;;                  1    wreg      void 
  9347 ;; Registers used:
  9348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9349 ;; Tracked objects:
  9350 ;;		On entry : 0/300
  9351 ;;		On exit  : 0/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9354 ;;      Params:         0       7       0       0       0
  9355 ;;      Locals:         0       4       0       0       0
  9356 ;;      Temps:          0       2       0       0       0
  9357 ;;      Totals:         0      13       0       0       0
  9358 ;;Total ram usage:       13 bytes
  9359 ;; Hardware stack levels used:    1
  9360 ;; Hardware stack levels required when called:    3
  9361 ;; This function calls:
  9362 ;;		_I2C_Master_Start
  9363 ;;		_I2C_Master_Stop
  9364 ;;		_I2C_Master_Write
  9365 ;; This function is called by:
  9366 ;;		_Decodify_Command
  9367 ;;		_EEPROM_24C1025_Write_Byte
  9368 ;;		_EEPROM_24C1025_Write_Int
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           
  9373                           ;psect for function _EEPROM_24C1025_Write_Buffer
  9374  0E53                     _EEPROM_24C1025_Write_Buffer:	
  9375                           
  9376                           ;incstack = 0
  9377                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack
      +                          ]
  9378                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
  9379  0E53  1283               	bcf	3,5	;RP0=0, select bank0
  9380  0E54  1303               	bcf	3,6	;RP1=0, select bank0
  9381  0E55  00AC               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
  9382                           
  9383                           ;EEPROM_24C1025.c: 19:      unsigned char ctrl;;EEPROM_24C1025.c: 20:      unsigned char
      +                           count;;EEPROM_24C1025.c: 22:      Delay_Led_Memory=20;
  9384                           
  9385                           ;EEPROM_24C1025.c: 24:      if(mem_add>0x1FFFF) return;
  9386  0E56  27D4  120A  158A   	fcall	PL56	;call to abstracted procedure
  9387  0E59  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  9388  0E5A  1D03               	btfss	3,2
  9389  0E5B  0008               	return
  9390  0E5C  3002               	movlw	2
  9391  0E5D  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  9392  0E5E  1D03               	skipz
  9393  0E5F  2E66               	goto	u5493
  9394  0E60  3000               	movlw	0
  9395  0E61  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  9396  0E62  1D03               	skipz
  9397  0E63  2E66               	goto	u5493
  9398  0E64  3000               	movlw	0
  9399  0E65  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  9400  0E66                     u5493:	
  9401  0E66  1803               	btfsc	3,0
  9402  0E67  0008               	return
  9403                           
  9404                           ;EEPROM_24C1025.c: 26:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9405  0E68  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  9406  0E69  1D03               	btfss	3,2
  9407  0E6A  2E77               	goto	l6176
  9408  0E6B  3001               	movlw	1
  9409  0E6C  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  9410  0E6D  1D03               	skipz
  9411  0E6E  2E75               	goto	u5503
  9412  0E6F  3000               	movlw	0
  9413  0E70  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  9414  0E71  1D03               	skipz
  9415  0E72  2E75               	goto	u5503
  9416  0E73  3000               	movlw	0
  9417  0E74  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  9418  0E75                     u5503:	
  9419  0E75  1C03               	btfss	3,0
  9420  0E76  2E7A               	goto	l6178
  9421  0E77                     l6176:	
  9422  0E77  3008               	movlw	8
  9423  0E78  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
  9424  0E79  2E7B               	goto	l6180
  9425  0E7A                     l6178:	
  9426  0E7A  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
  9427  0E7B                     l6180:	
  9428                           
  9429                           ;EEPROM_24C1025.c: 27:      ctrl=chip_add;
  9430                           
  9431                           ;EEPROM_24C1025.c: 28:      ctrl<<=1;
  9432                           
  9433                           ;EEPROM_24C1025.c: 29:      ctrl |= 0xA0;
  9434                           
  9435                           ;EEPROM_24C1025.c: 30:      ctrl |= range;
  9436  0E7B  27C5  120A  158A   	fcall	PL46	;call to abstracted procedure
  9437                           
  9438                           ;EEPROM_24C1025.c: 32:      I2C_Master_Start();
  9439  0E7E  2734  120A  158A   	fcall	_I2C_Master_Start
  9440                           
  9441                           ;EEPROM_24C1025.c: 33:      I2C_Master_Write(ctrl);
  9442  0E81  1283               	bcf	3,5	;RP0=0, select bank0
  9443  0E82  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
  9444  0E83  00A0               	movwf	I2C_Master_Write@d
  9445  0E84  01A1               	clrf	I2C_Master_Write@d+1
  9446  0E85  272E  120A  158A   	fcall	_I2C_Master_Write
  9447                           
  9448                           ;EEPROM_24C1025.c: 34:      I2C_Master_Write(((char *)&mem_add)[1]);
  9449  0E88  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  9450  0E89  00A0               	movwf	I2C_Master_Write@d
  9451  0E8A  01A1               	clrf	I2C_Master_Write@d+1
  9452  0E8B  272E  120A  158A   	fcall	_I2C_Master_Write
  9453                           
  9454                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(((char *)&mem_add)[0]);
  9455  0E8E  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
  9456  0E8F  00A0               	movwf	I2C_Master_Write@d
  9457  0E90  01A1               	clrf	I2C_Master_Write@d+1
  9458  0E91  272E  120A  158A   	fcall	_I2C_Master_Write
  9459                           
  9460                           ;EEPROM_24C1025.c: 36:      for(count=0;count<(sizedata-1);count++)
  9461  0E94  01AB               	clrf	EEPROM_24C1025_Write_Buffer@count
  9462  0E95                     l6244:	
  9463  0E95  0826               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
  9464  0E96  3EFF               	addlw	255
  9465  0E97  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
  9466  0E98  30FF               	movlw	255
  9467  0E99  1803               	skipnc
  9468  0E9A  3000               	movlw	0
  9469  0E9B  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
  9470  0E9C  3A80               	xorlw	128
  9471  0E9D  3C80               	sublw	128
  9472  0E9E  1D03               	skipz
  9473  0E9F  2EA2               	goto	u5545
  9474  0EA0  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
  9475  0EA1  022B               	subwf	EEPROM_24C1025_Write_Buffer@count,w
  9476  0EA2                     u5545:	
  9477  0EA2  1803               	btfsc	3,0
  9478  0EA3  2F18               	goto	l6246
  9479                           
  9480                           ;EEPROM_24C1025.c: 37:           {;EEPROM_24C1025.c: 38:           if(mem_add>0x1FFFF) r
      +                          eturn;
  9481  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  9482  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  9483  0EA6  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  9484  0EA7  1D03               	btfss	3,2
  9485  0EA8  0008               	return
  9486  0EA9  3002               	movlw	2
  9487  0EAA  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  9488  0EAB  1D03               	skipz
  9489  0EAC  2EB3               	goto	u5513
  9490  0EAD  3000               	movlw	0
  9491  0EAE  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  9492  0EAF  1D03               	skipz
  9493  0EB0  2EB3               	goto	u5513
  9494  0EB1  3000               	movlw	0
  9495  0EB2  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  9496  0EB3                     u5513:	
  9497  0EB3  1803               	btfsc	3,0
  9498  0EB4  0008               	return
  9499                           
  9500                           ;EEPROM_24C1025.c: 39:           if((mem_add+1)%128==0)
  9501  0EB5  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
  9502  0EB6  3E01               	addlw	1
  9503  0EB7  397F               	andlw	127
  9504  0EB8  1D03               	btfss	3,2
  9505  0EB9  2F06               	goto	l6236
  9506                           
  9507                           ;EEPROM_24C1025.c: 40:             {;EEPROM_24C1025.c: 41:             I2C_Master_Write(
      +                          *data);
  9508  0EBA  27A8  120A  158A   	fcall	PL30	;call to abstracted procedure
  9509  0EBD  272E  120A  158A   	fcall	_I2C_Master_Write
  9510                           
  9511                           ;EEPROM_24C1025.c: 42:             I2C_Master_Stop();
  9512  0EC0  273C  120A  158A   	fcall	_I2C_Master_Stop
  9513                           
  9514                           ;EEPROM_24C1025.c: 44:             _delay((unsigned long)((5)*(8000000/4000.0)));
  9515  0EC3  300D               	movlw	13
  9516  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  9517  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  9518  0EC6  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
  9519  0EC7  30FB               	movlw	251
  9520  0EC8  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
  9521  0EC9                     u6667:	
  9522  0EC9  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
  9523  0ECA  2EC9               	goto	u6667
  9524  0ECB  0BAA               	decfsz	??_EEPROM_24C1025_Write_Buffer+1,f
  9525  0ECC  2EC9               	goto	u6667
  9526                           
  9527                           ;EEPROM_24C1025.c: 45:             mem_add++;
  9528  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  9529  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  9530  0ECF  0AA2               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
  9531  0ED0  1903               	skipnz
  9532  0ED1  0AA3               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
  9533  0ED2  1903               	skipnz
  9534  0ED3  0AA4               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
  9535  0ED4  1903               	skipnz
  9536  0ED5  0AA5               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
  9537                           
  9538                           ;EEPROM_24C1025.c: 46:             data++;
  9539  0ED6  0AA7               	incf	EEPROM_24C1025_Write_Buffer@data,f
  9540  0ED7  1903               	skipnz
  9541  0ED8  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
  9542                           
  9543                           ;EEPROM_24C1025.c: 47:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9544  0ED9  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  9545  0EDA  1D03               	btfss	3,2
  9546  0EDB  2EE8               	goto	l6216
  9547  0EDC  3001               	movlw	1
  9548  0EDD  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  9549  0EDE  1D03               	skipz
  9550  0EDF  2EE6               	goto	u5533
  9551  0EE0  3000               	movlw	0
  9552  0EE1  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  9553  0EE2  1D03               	skipz
  9554  0EE3  2EE6               	goto	u5533
  9555  0EE4  3000               	movlw	0
  9556  0EE5  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  9557  0EE6                     u5533:	
  9558  0EE6  1C03               	btfss	3,0
  9559  0EE7  2EEB               	goto	l6218
  9560  0EE8                     l6216:	
  9561  0EE8  3008               	movlw	8
  9562  0EE9  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
  9563  0EEA  2EEC               	goto	l6220
  9564  0EEB                     l6218:	
  9565  0EEB  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
  9566  0EEC                     l6220:	
  9567                           
  9568                           ;EEPROM_24C1025.c: 48:             ctrl=chip_add;
  9569                           
  9570                           ;EEPROM_24C1025.c: 49:             ctrl<<=1;
  9571                           
  9572                           ;EEPROM_24C1025.c: 50:             ctrl |= 0xA0;
  9573                           
  9574                           ;EEPROM_24C1025.c: 51:             ctrl |= range;
  9575  0EEC  27C5  120A  158A   	fcall	PL46	;call to abstracted procedure
  9576                           
  9577                           ;EEPROM_24C1025.c: 53:             I2C_Master_Start();
  9578  0EEF  2734  120A  158A   	fcall	_I2C_Master_Start
  9579                           
  9580                           ;EEPROM_24C1025.c: 54:             I2C_Master_Write(ctrl);
  9581  0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  9582  0EF3  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
  9583  0EF4  00A0               	movwf	I2C_Master_Write@d
  9584  0EF5  01A1               	clrf	I2C_Master_Write@d+1
  9585  0EF6  272E  120A  158A   	fcall	_I2C_Master_Write
  9586                           
  9587                           ;EEPROM_24C1025.c: 55:             I2C_Master_Write(((char *)&mem_add)[1]);
  9588  0EF9  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  9589  0EFA  00A0               	movwf	I2C_Master_Write@d
  9590  0EFB  01A1               	clrf	I2C_Master_Write@d+1
  9591  0EFC  272E  120A  158A   	fcall	_I2C_Master_Write
  9592                           
  9593                           ;EEPROM_24C1025.c: 56:             I2C_Master_Write(((char *)&mem_add)[0]);
  9594  0EFF  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
  9595  0F00  00A0               	movwf	I2C_Master_Write@d
  9596  0F01  01A1               	clrf	I2C_Master_Write@d+1
  9597  0F02  272E  120A  158A   	fcall	_I2C_Master_Write
  9598                           
  9599                           ;EEPROM_24C1025.c: 57:             }
  9600  0F05  2F16               	goto	l6242
  9601  0F06                     l6236:	
  9602                           
  9603                           ;EEPROM_24C1025.c: 59:             {;EEPROM_24C1025.c: 60:             I2C_Master_Write(
      +                          *data);
  9604  0F06  27A8  120A  158A   	fcall	PL30	;call to abstracted procedure
  9605  0F09  272E  120A  158A   	fcall	_I2C_Master_Write
  9606                           
  9607                           ;EEPROM_24C1025.c: 61:             data++;
  9608  0F0C  0AA7               	incf	EEPROM_24C1025_Write_Buffer@data,f
  9609  0F0D  1903               	skipnz
  9610  0F0E  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
  9611                           
  9612                           ;EEPROM_24C1025.c: 62:             mem_add++;
  9613  0F0F  0AA2               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
  9614  0F10  1903               	skipnz
  9615  0F11  0AA3               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
  9616  0F12  1903               	skipnz
  9617  0F13  0AA4               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
  9618  0F14  1903               	skipnz
  9619  0F15  0AA5               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
  9620  0F16                     l6242:	
  9621                           
  9622                           ;EEPROM_24C1025.c: 64:      }
  9623  0F16  0AAB               	incf	EEPROM_24C1025_Write_Buffer@count,f
  9624  0F17  2E95               	goto	l6244
  9625  0F18                     l6246:	
  9626                           
  9627                           ;EEPROM_24C1025.c: 65:      I2C_Master_Write(*data);
  9628  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  9629  0F19  1303               	bcf	3,6	;RP1=0, select bank0
  9630  0F1A  27A8  120A  158A   	fcall	PL30	;call to abstracted procedure
  9631  0F1D  272E  120A  158A   	fcall	_I2C_Master_Write
  9632                           
  9633                           ;EEPROM_24C1025.c: 66:      I2C_Master_Stop();
  9634  0F20  273C  120A  158A   	fcall	_I2C_Master_Stop
  9635                           
  9636                           ;EEPROM_24C1025.c: 67:      _delay((unsigned long)((5)*(8000000/4000.0)));
  9637  0F23  300D               	movlw	13
  9638  0F24  1283               	bcf	3,5	;RP0=0, select bank0
  9639  0F25  1303               	bcf	3,6	;RP1=0, select bank0
  9640  0F26  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
  9641  0F27  30FB               	movlw	251
  9642  0F28  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
  9643  0F29                     u6677:	
  9644  0F29  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
  9645  0F2A  2F29               	goto	u6677
  9646  0F2B  0BAA               	decfsz	??_EEPROM_24C1025_Write_Buffer+1,f
  9647  0F2C  2F29               	goto	u6677
  9648  0F2D  0008               	return
  9649  0F2E                     __end_of_EEPROM_24C1025_Write_Buffer:	
  9650  0F2E                     __ptext58:	
  9651 ;; *************** function _I2C_Master_Write *****************
  9652 ;; Defined at:
  9653 ;;		line 64 in file "I2C.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;  d               2    0[BANK0 ] unsigned int 
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;		None
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  1    wreg      void 
  9660 ;; Registers used:
  9661 ;;		wreg, status,2, status,0, pclath, cstack
  9662 ;; Tracked objects:
  9663 ;;		On entry : 300/0
  9664 ;;		On exit  : 300/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9667 ;;      Params:         0       2       0       0       0
  9668 ;;      Locals:         0       0       0       0       0
  9669 ;;      Temps:          0       0       0       0       0
  9670 ;;      Totals:         0       2       0       0       0
  9671 ;;Total ram usage:        2 bytes
  9672 ;; Hardware stack levels used:    1
  9673 ;; Hardware stack levels required when called:    2
  9674 ;; This function calls:
  9675 ;;		_I2C_Master_Wait
  9676 ;; This function is called by:
  9677 ;;		_EEPROM_24C1025_Write_Buffer
  9678 ;;		_EEPROM_24C1025_Read_Buffer
  9679 ;;		_EEPROM_24C1025_Write_Str
  9680 ;;		_EEPROM_24C1025_Read_Str
  9681 ;; This function uses a non-reentrant model
  9682 ;;
  9683                           
  9684                           
  9685                           ;psect for function _I2C_Master_Write
  9686  0F2E                     _I2C_Master_Write:	
  9687                           
  9688                           ;I2C.c: 64: void I2C_Master_Write(unsigned d);I2C.c: 65: {;I2C.c: 66:   generic_status.f
      +                          lag_main_loop_WDT=1;
  9689                           
  9690                           ;incstack = 0
  9691                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  9692  0F2E  17F6               	bsf	_generic_status,7
  9693                           
  9694                           ;I2C.c: 67:   I2C_Master_Wait();
  9695  0F2F  2761               	fcall	_I2C_Master_Wait
  9696                           
  9697                           ;I2C.c: 68:   SSPBUF = d;
  9698  0F30  1283               	bcf	3,5	;RP0=0, select bank0
  9699  0F31  0820               	movf	I2C_Master_Write@d,w
  9700  0F32  0093               	movwf	19	;volatile
  9701  0F33  0008               	return
  9702  0F34                     __end_of_I2C_Master_Write:	
  9703  0F34                     __ptext60:	
  9704 ;; *************** function _I2C_Master_Start *****************
  9705 ;; Defined at:
  9706 ;;		line 45 in file "I2C.c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;		None
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;		None
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  1    wreg      void 
  9713 ;; Registers used:
  9714 ;;		wreg, status,2, status,0, pclath, cstack
  9715 ;; Tracked objects:
  9716 ;;		On entry : 300/0
  9717 ;;		On exit  : 300/100
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9720 ;;      Params:         0       0       0       0       0
  9721 ;;      Locals:         0       0       0       0       0
  9722 ;;      Temps:          0       0       0       0       0
  9723 ;;      Totals:         0       0       0       0       0
  9724 ;;Total ram usage:        0 bytes
  9725 ;; Hardware stack levels used:    1
  9726 ;; Hardware stack levels required when called:    2
  9727 ;; This function calls:
  9728 ;;		_I2C_Master_Wait
  9729 ;; This function is called by:
  9730 ;;		_EEPROM_24C1025_Write_Buffer
  9731 ;;		_EEPROM_24C1025_Read_Buffer
  9732 ;;		_EEPROM_24C1025_Write_Str
  9733 ;;		_EEPROM_24C1025_Read_Str
  9734 ;; This function uses a non-reentrant model
  9735 ;;
  9736                           
  9737                           
  9738                           ;psect for function _I2C_Master_Start
  9739  0F34                     _I2C_Master_Start:	
  9740                           
  9741                           ;I2C.c: 47:   Delay_Led_Memory=20;
  9742                           
  9743                           ;incstack = 0
  9744                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  9745  0F34  3014               	movlw	20
  9746  0F35  1683               	bsf	3,5	;RP0=1, select bank3
  9747  0F36  1703               	bsf	3,6	;RP1=1, select bank3
  9748  0F37  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
  9749  0F38  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  9750                           
  9751                           ;I2C.c: 48:   I2C_Master_Wait();
  9752  0F39  2761               	fcall	_I2C_Master_Wait
  9753                           
  9754                           ;I2C.c: 49:   SEN = 1;
  9755  0F3A  1411               	bsf	17,0	;volatile
  9756  0F3B  0008               	return
  9757  0F3C                     __end_of_I2C_Master_Start:	
  9758  0F3C                     __ptext59:	
  9759 ;; *************** function _I2C_Master_Stop *****************
  9760 ;; Defined at:
  9761 ;;		line 58 in file "I2C.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;		None
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;		None
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  1    wreg      void 
  9768 ;; Registers used:
  9769 ;;		wreg, status,2, status,0, pclath, cstack
  9770 ;; Tracked objects:
  9771 ;;		On entry : 300/800
  9772 ;;		On exit  : 300/100
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9775 ;;      Params:         0       0       0       0       0
  9776 ;;      Locals:         0       0       0       0       0
  9777 ;;      Temps:          0       0       0       0       0
  9778 ;;      Totals:         0       0       0       0       0
  9779 ;;Total ram usage:        0 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; Hardware stack levels required when called:    2
  9782 ;; This function calls:
  9783 ;;		_I2C_Master_Wait
  9784 ;; This function is called by:
  9785 ;;		_EEPROM_24C1025_Write_Buffer
  9786 ;;		_EEPROM_24C1025_Read_Buffer
  9787 ;;		_EEPROM_24C1025_Write_Str
  9788 ;;		_EEPROM_24C1025_Read_Str
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           
  9793                           ;psect for function _I2C_Master_Stop
  9794  0F3C                     _I2C_Master_Stop:	
  9795                           
  9796                           ;I2C.c: 60:   I2C_Master_Wait();
  9797                           
  9798                           ;incstack = 0
  9799                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  9800  0F3C  2761               	fcall	_I2C_Master_Wait
  9801                           
  9802                           ;I2C.c: 61:   PEN = 1;
  9803  0F3D  1511               	bsf	17,2	;volatile
  9804  0F3E  0008               	return
  9805  0F3F                     __end_of_I2C_Master_Stop:	
  9806  0F3F                     __ptext54:	
  9807 ;; *************** function _I2C_Master_Read *****************
  9808 ;; Defined at:
  9809 ;;		line 71 in file "I2C.c"
  9810 ;; Parameters:    Size  Location     Type
  9811 ;;  a               2    0[BANK0 ] unsigned short 
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;  temp            2    2[BANK0 ] unsigned short 
  9814 ;; Return value:  Size  Location     Type
  9815 ;;                  2    0[BANK0 ] unsigned short 
  9816 ;; Registers used:
  9817 ;;		wreg, status,2, status,0, pclath, cstack
  9818 ;; Tracked objects:
  9819 ;;		On entry : 300/0
  9820 ;;		On exit  : 300/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9823 ;;      Params:         0       2       0       0       0
  9824 ;;      Locals:         0       2       0       0       0
  9825 ;;      Temps:          0       0       0       0       0
  9826 ;;      Totals:         0       4       0       0       0
  9827 ;;Total ram usage:        4 bytes
  9828 ;; Hardware stack levels used:    1
  9829 ;; Hardware stack levels required when called:    2
  9830 ;; This function calls:
  9831 ;;		_I2C_Master_Wait
  9832 ;; This function is called by:
  9833 ;;		_EEPROM_24C1025_Read_Buffer
  9834 ;;		_EEPROM_24C1025_Read_Str
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           
  9839                           ;psect for function _I2C_Master_Read
  9840  0F3F                     _I2C_Master_Read:	
  9841                           
  9842                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:   u
      +                          nsigned short temp;;I2C.c: 74:   generic_status.flag_main_loop_WDT=1;
  9843                           
  9844                           ;incstack = 0
  9845                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  9846  0F3F  17F6               	bsf	_generic_status,7
  9847                           
  9848                           ;I2C.c: 75:   I2C_Master_Wait();
  9849  0F40  2761  120A  158A   	fcall	_I2C_Master_Wait
  9850                           
  9851                           ;I2C.c: 76:   RCEN = 1;
  9852  0F43  1591               	bsf	17,3	;volatile
  9853                           
  9854                           ;I2C.c: 77:   I2C_Master_Wait();
  9855  0F44  2761  120A  158A   	fcall	_I2C_Master_Wait
  9856                           
  9857                           ;I2C.c: 78:   temp = SSPBUF;
  9858  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  9859  0F48  0813               	movf	19,w	;volatile
  9860  0F49  00A2               	movwf	I2C_Master_Read@temp
  9861  0F4A  01A3               	clrf	I2C_Master_Read@temp+1
  9862                           
  9863                           ;I2C.c: 79:   I2C_Master_Wait();
  9864  0F4B  2761  120A  158A   	fcall	_I2C_Master_Wait
  9865                           
  9866                           ;I2C.c: 80:   ACKDT = (a)?0:1;
  9867  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  9868  0F4F  0820               	movf	I2C_Master_Read@a,w
  9869  0F50  0421               	iorwf	I2C_Master_Read@a+1,w
  9870  0F51  1D03               	btfss	3,2
  9871  0F52  2F57               	goto	u5470
  9872  0F53  1683               	bsf	3,5	;RP0=1, select bank1
  9873  0F54  1303               	bcf	3,6	;RP1=0, select bank1
  9874  0F55  1691               	bsf	17,5	;volatile
  9875  0F56  2F5A               	goto	l6154
  9876  0F57                     u5470:	
  9877  0F57  1683               	bsf	3,5	;RP0=1, select bank1
  9878  0F58  1303               	bcf	3,6	;RP1=0, select bank1
  9879  0F59  1291               	bcf	17,5	;volatile
  9880  0F5A                     l6154:	
  9881                           
  9882                           ;I2C.c: 81:   ACKEN = 1;
  9883  0F5A  1611               	bsf	17,4	;volatile
  9884                           
  9885                           ;I2C.c: 82:   return temp;
  9886  0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  9887  0F5C  0823               	movf	I2C_Master_Read@temp+1,w
  9888  0F5D  00A1               	movwf	?_I2C_Master_Read+1
  9889  0F5E  0822               	movf	I2C_Master_Read@temp,w
  9890  0F5F  00A0               	movwf	?_I2C_Master_Read
  9891  0F60  0008               	return
  9892  0F61                     __end_of_I2C_Master_Read:	
  9893  0F61                     __ptext61:	
  9894 ;; *************** function _I2C_Master_Wait *****************
  9895 ;; Defined at:
  9896 ;;		line 40 in file "I2C.c"
  9897 ;; Parameters:    Size  Location     Type
  9898 ;;		None
  9899 ;; Auto vars:     Size  Location     Type
  9900 ;;		None
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  1    wreg      void 
  9903 ;; Registers used:
  9904 ;;		wreg, status,2
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 300/100
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9910 ;;      Params:         0       0       0       0       0
  9911 ;;      Locals:         0       0       0       0       0
  9912 ;;      Temps:          0       0       0       0       0
  9913 ;;      Totals:         0       0       0       0       0
  9914 ;;Total ram usage:        0 bytes
  9915 ;; Hardware stack levels used:    1
  9916 ;; Hardware stack levels required when called:    1
  9917 ;; This function calls:
  9918 ;;		Nothing
  9919 ;; This function is called by:
  9920 ;;		_I2C_Master_Start
  9921 ;;		_I2C_Master_RepeatedStart
  9922 ;;		_I2C_Master_Stop
  9923 ;;		_I2C_Master_Write
  9924 ;;		_I2C_Master_Read
  9925 ;; This function uses a non-reentrant model
  9926 ;;
  9927                           
  9928                           
  9929                           ;psect for function _I2C_Master_Wait
  9930  0F61                     _I2C_Master_Wait:	
  9931  0F61                     l49:	
  9932                           ;I2C.c: 42:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  9933                           
  9934                           ;incstack = 0
  9935                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  9936                           
  9937  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  9938  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  9939  0F63  1914               	btfsc	20,2	;volatile
  9940  0F64  2F61               	goto	l49
  9941  0F65  0811               	movf	17,w	;volatile
  9942  0F66  391F               	andlw	31
  9943  0F67  1903               	btfsc	3,2
  9944  0F68  0008               	return
  9945  0F69  2F61               	goto	l49
  9946  0F6A                     __end_of_I2C_Master_Wait:	
  9947  0F6A                     __ptext53:	
  9948 ;; *************** function _I2C_Master_RepeatedStart *****************
  9949 ;; Defined at:
  9950 ;;		line 52 in file "I2C.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;		None
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;		None
  9955 ;; Return value:  Size  Location     Type
  9956 ;;                  1    wreg      void 
  9957 ;; Registers used:
  9958 ;;		wreg, status,2, status,0, pclath, cstack
  9959 ;; Tracked objects:
  9960 ;;		On entry : 300/0
  9961 ;;		On exit  : 300/100
  9962 ;;		Unchanged: 0/0
  9963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9964 ;;      Params:         0       0       0       0       0
  9965 ;;      Locals:         0       0       0       0       0
  9966 ;;      Temps:          0       0       0       0       0
  9967 ;;      Totals:         0       0       0       0       0
  9968 ;;Total ram usage:        0 bytes
  9969 ;; Hardware stack levels used:    1
  9970 ;; Hardware stack levels required when called:    2
  9971 ;; This function calls:
  9972 ;;		_I2C_Master_Wait
  9973 ;; This function is called by:
  9974 ;;		_EEPROM_24C1025_Read_Buffer
  9975 ;;		_EEPROM_24C1025_Read_Str
  9976 ;; This function uses a non-reentrant model
  9977 ;;
  9978                           
  9979                           
  9980                           ;psect for function _I2C_Master_RepeatedStart
  9981  0F6A                     _I2C_Master_RepeatedStart:	
  9982                           
  9983                           ;I2C.c: 54:   I2C_Master_Wait();
  9984                           
  9985                           ;incstack = 0
  9986                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  9987  0F6A  2761               	fcall	_I2C_Master_Wait
  9988                           
  9989                           ;I2C.c: 55:   RSEN = 1;
  9990  0F6B  1491               	bsf	17,1	;volatile
  9991  0F6C  0008               	return
  9992  0F6D                     __end_of_I2C_Master_RepeatedStart:	
  9993  0F6D                     __ptext17:	
  9994 ;; *************** function _itoa *****************
  9995 ;; Defined at:
  9996 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;  buf             1    wreg     PTR unsigned char 
  9999 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
 10000 ;;  val             2   15[BANK0 ] int 
 10001 ;;  base            2   17[BANK0 ] int 
 10002 ;; Auto vars:     Size  Location     Type
 10003 ;;  buf             1   20[BANK0 ] PTR unsigned char 
 10004 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
 10005 ;;  cp              1    0        PTR unsigned char 
 10006 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
 10007 ;; Return value:  Size  Location     Type
 10008 ;;                  1    wreg      PTR unsigned char 
 10009 ;; Registers used:
 10010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10011 ;; Tracked objects:
 10012 ;;		On entry : 300/0
 10013 ;;		On exit  : B00/0
 10014 ;;		Unchanged: 0/0
 10015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10016 ;;      Params:         0       4       0       0       0
 10017 ;;      Locals:         0       2       0       0       0
 10018 ;;      Temps:          0       0       0       0       0
 10019 ;;      Totals:         0       6       0       0       0
 10020 ;;Total ram usage:        6 bytes
 10021 ;; Hardware stack levels used:    1
 10022 ;; Hardware stack levels required when called:    3
 10023 ;; This function calls:
 10024 ;;		_utoa
 10025 ;; This function is called by:
 10026 ;;		_Decodify_Command
 10027 ;; This function uses a non-reentrant model
 10028 ;;
 10029                           
 10030                           
 10031                           ;psect for function _itoa
 10032  0F6D                     _itoa:	
 10033                           
 10034                           ;incstack = 0
 10035                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10036                           ;itoa@buf stored from wreg
 10037  0F6D  00B4               	movwf	itoa@buf
 10038  0F6E  1FB0               	btfss	itoa@val+1,7
 10039  0F6F  2F7B               	goto	l6810
 10040  0F70  0834               	movf	itoa@buf,w
 10041  0F71  0084               	movwf	4
 10042  0F72  302D               	movlw	45
 10043  0F73  1383               	bcf	3,7	;select IRP bank0
 10044  0F74  0080               	movwf	0
 10045  0F75  0AB4               	incf	itoa@buf,f
 10046  0F76  09AF               	comf	itoa@val,f
 10047  0F77  09B0               	comf	itoa@val+1,f
 10048  0F78  0AAF               	incf	itoa@val,f
 10049  0F79  1903               	skipnz
 10050  0F7A  0AB0               	incf	itoa@val+1,f
 10051  0F7B                     l6810:	
 10052  0F7B  0830               	movf	itoa@val+1,w
 10053  0F7C  00A8               	movwf	utoa@val+1
 10054  0F7D  082F               	movf	itoa@val,w
 10055  0F7E  00A7               	movwf	utoa@val
 10056  0F7F  0832               	movf	itoa@base+1,w
 10057  0F80  00AA               	movwf	utoa@base+1
 10058  0F81  0831               	movf	itoa@base,w
 10059  0F82  00A9               	movwf	utoa@base
 10060  0F83  0834               	movf	itoa@buf,w
 10061  0F84  160A  158A  2DC0   	ljmp	_utoa
 10062  0F87                     __end_of_itoa:	
 10063  0F87                     __ptext36:	
 10064 ;; *************** function _USART_put_int *****************
 10065 ;; Defined at:
 10066 ;;		line 138 in file "usart.c"
 10067 ;; Parameters:    Size  Location     Type
 10068 ;;  value           2    8[BANK1 ] int 
 10069 ;; Auto vars:     Size  Location     Type
 10070 ;;  dado            1   10[BANK1 ] PTR unsigned char 
 10071 ;;		 -> USART_put_int@value(2), 
 10072 ;; Return value:  Size  Location     Type
 10073 ;;                  1    wreg      void 
 10074 ;; Registers used:
 10075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10076 ;; Tracked objects:
 10077 ;;		On entry : 300/100
 10078 ;;		On exit  : 300/100
 10079 ;;		Unchanged: 0/0
 10080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10081 ;;      Params:         0       0       2       0       0
 10082 ;;      Locals:         0       0       1       0       0
 10083 ;;      Temps:          0       0       0       0       0
 10084 ;;      Totals:         0       0       3       0       0
 10085 ;;Total ram usage:        3 bytes
 10086 ;; Hardware stack levels used:    1
 10087 ;; Hardware stack levels required when called:    2
 10088 ;; This function calls:
 10089 ;;		_USART_putc
 10090 ;; This function is called by:
 10091 ;;		_Decodify_Command
 10092 ;;		_PROCULUS_Control_Register_Write
 10093 ;;		_PROCULUS_VP_Write
 10094 ;; This function uses a non-reentrant model
 10095 ;;
 10096                           
 10097                           
 10098                           ;psect for function _USART_put_int
 10099  0F87                     _USART_put_int:	
 10100  0F87                     l6160:	
 10101                           ;incstack = 0
 10102                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10103                           
 10104                           
 10105                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
 10106  0F87  30A8               	movlw	(low (USART_put_int@value| 0))& (0+255)
 10107  0F88  00AA               	movwf	USART_put_int@dado^(0+128)
 10108                           
 10109                           ;usart.c: 141:      USART_putc(*(dado+1));
 10110  0F89  0A2A               	incf	USART_put_int@dado^(0+128),w
 10111  0F8A  0084               	movwf	4
 10112  0F8B  1383               	bcf	3,7	;select IRP bank0
 10113  0F8C  0800               	movf	0,w
 10114  0F8D  23DD  120A  158A   	fcall	_USART_putc
 10115                           
 10116                           ;usart.c: 142:      USART_putc(*dado);
 10117  0F90  082A               	movf	USART_put_int@dado^(0+128),w
 10118  0F91  0084               	movwf	4
 10119  0F92  1383               	bcf	3,7	;select IRP bank0
 10120  0F93  0800               	movf	0,w
 10121  0F94  2BDD               	ljmp	_USART_putc
 10122  0F95                     __end_of_USART_put_int:	
 10123  0F95                     __ptext30:	
 10124 ;; *************** function _strlen *****************
 10125 ;; Defined at:
 10126 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
 10127 ;; Parameters:    Size  Location     Type
 10128 ;;  s               1    wreg     PTR const unsigned char 
 10129 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
 10130 ;; Auto vars:     Size  Location     Type
 10131 ;;  s               1    4[BANK0 ] PTR const unsigned char 
 10132 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
 10133 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
 10134 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
 10135 ;; Return value:  Size  Location     Type
 10136 ;;                  2    0[BANK0 ] unsigned int 
 10137 ;; Registers used:
 10138 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/300
 10141 ;;		On exit  : B00/800
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10144 ;;      Params:         0       3       0       0       0
 10145 ;;      Locals:         0       2       0       0       0
 10146 ;;      Temps:          0       0       0       0       0
 10147 ;;      Totals:         0       5       0       0       0
 10148 ;;Total ram usage:        5 bytes
 10149 ;; Hardware stack levels used:    1
 10150 ;; Hardware stack levels required when called:    1
 10151 ;; This function calls:
 10152 ;;		Nothing
 10153 ;; This function is called by:
 10154 ;;		_Decodify_Command
 10155 ;;		_PROCULUS_VP_Write_String
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159                           
 10160                           ;psect for function _strlen
 10161  0F95                     _strlen:	
 10162                           
 10163                           ;incstack = 0
 10164                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 10165                           ;strlen@s stored from wreg
 10166  0F95  1283               	bcf	3,5	;RP0=0, select bank0
 10167  0F96  1303               	bcf	3,6	;RP1=0, select bank0
 10168  0F97  00A4               	movwf	strlen@s
 10169  0F98  00A3               	movwf	strlen@cp
 10170  0F99                     l6446:	
 10171  0F99  0823               	movf	strlen@cp,w
 10172  0F9A  0084               	movwf	4
 10173  0F9B  1783               	bsf	3,7	;select IRP bank2
 10174  0F9C  0800               	movf	0,w
 10175  0F9D  1903               	btfsc	3,2
 10176  0F9E  2FA1               	goto	l6448
 10177  0F9F  0AA3               	incf	strlen@cp,f
 10178  0FA0  2F99               	goto	l6446
 10179  0FA1                     l6448:	
 10180  0FA1  0824               	movf	strlen@s,w
 10181  0FA2  0223               	subwf	strlen@cp,w
 10182  0FA3  00A0               	movwf	?_strlen
 10183  0FA4  01A1               	clrf	?_strlen+1
 10184  0FA5  1BA0               	btfsc	?_strlen,7
 10185  0FA6  03A1               	decf	?_strlen+1,f
 10186  0FA7  0008               	return
 10187  0FA8                     __end_of_strlen:	
 10188  0FA8                     PL30:	
 10189  0FA8  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 10190  0FA9  0084               	movwf	4
 10191  0FAA  1783               	bsf	3,7
 10192  0FAB  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 10193  0FAC  1383               	bcf	3,7
 10194  0FAD  0800               	movf	0,w
 10195  0FAE  00A0               	movwf	I2C_Master_Write@d
 10196  0FAF  01A1               	clrf	I2C_Master_Write@d+1
 10197  0FB0  0008               	return
 10198  0FB1                     __end_ofPL30:	
 10199  0FB1                     PL42:	
 10200  0FB1  082C               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10201  0FB2  00AE               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10202  0FB3  30A0               	movlw	160
 10203  0FB4  1003               	clrc
 10204  0FB5  0DAE               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10205  0FB6  04AE               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10206  0FB7  142E               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10207  0FB8  082D               	movf	EEPROM_24C1025_Read_Str@range,w
 10208  0FB9  04AE               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10209  0FBA  0008               	return
 10210  0FBB                     __end_ofPL42:	
 10211  0FBB                     PL44:	
 10212  0FBB  082E               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 10213  0FBC  00B0               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 10214  0FBD  30A0               	movlw	160
 10215  0FBE  1003               	clrc
 10216  0FBF  0DB0               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10217  0FC0  04B0               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10218  0FC1  1430               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 10219  0FC2  082F               	movf	EEPROM_24C1025_Read_Buffer@range,w
 10220  0FC3  04B0               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10221  0FC4  0008               	return
 10222  0FC5                     __end_ofPL44:	
 10223  0FC5                     PL46:	
 10224  0FC5  082C               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 10225  0FC6  00AE               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 10226  0FC7  30A0               	movlw	160
 10227  0FC8  1003               	clrc
 10228  0FC9  0DAE               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 10229  0FCA  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 10230  0FCB  082D               	movf	EEPROM_24C1025_Write_Buffer@range,w
 10231  0FCC  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 10232  0FCD  0008               	return
 10233  0FCE                     __end_ofPL46:	
 10234  0FCE                     PL52:	
 10235  0FCE  3037               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
 10236  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
 10237  0FD0  00A0               	movwf	strcat@from
 10238  0FD1  3080               	movlw	128
 10239  0FD2  00A1               	movwf	strcat@from+1
 10240  0FD3  34BC               	retlw	(low (_texto| (0+256)))& (0+255)
 10241  0FD4                     __end_ofPL52:	
 10242  0FD4                     PL56:	
 10243  0FD4  3014               	movlw	20
 10244  0FD5  1683               	bsf	3,5	;RP0=1, select bank3
 10245  0FD6  1703               	bsf	3,6	;RP1=1, select bank3
 10246  0FD7  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 10247  0FD8  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 10248  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
 10249  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
 10250  0FDB  0008               	return
 10251  0FDC                     __end_ofPL56:	
 10252  0FDC                     PL58:	
 10253  0FDC  0829               	movf	EEPROM_24C1025_Read_Buffer@data,w
 10254  0FDD  0084               	movwf	4
 10255  0FDE  1783               	bsf	3,7
 10256  0FDF  1C2A               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 10257  0FE0  1383               	bcf	3,7
 10258  0FE1  01A0               	clrf	I2C_Master_Read@a
 10259  0FE2  0008               	return
 10260  0FE3                     __end_ofPL58:	
 10261  0FE3                     PL64:	
 10262  0FE3  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 10263  0FE4  0084               	movwf	4
 10264  0FE5  0800               	movf	0,w
 10265  0FE6  00A0               	movwf	I2C_Master_Write@d
 10266  0FE7  01A1               	clrf	I2C_Master_Write@d+1
 10267  0FE8  0008               	return
 10268  0FE9                     __end_ofPL64:	
 10269  0FE9                     PL76:	
 10270  0FE9  3039               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
 10271  0FEA  00A0               	movwf	strcat@from
 10272  0FEB  3080               	movlw	128
 10273  0FEC  00A1               	movwf	strcat@from+1
 10274  0FED  34BC               	retlw	(low (_texto| (0+256)))& (0+255)
 10275  0FEE                     __end_ofPL76:	
 10276  0FEE                     PL78:	
 10277  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
 10278  0FEF  0830               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10279  0FF0  39FE               	andlw	254
 10280  0FF1  00A0               	movwf	I2C_Master_Write@d
 10281  0FF2  01A1               	clrf	I2C_Master_Write@d+1
 10282  0FF3  0008               	return
 10283  0FF4                     __end_ofPL78:	
 10284  0FF4                     PL80:	
 10285  0FF4  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
 10286  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
 10287  0FF6  00A1               	movwf	USART_put_string@vetor
 10288  0FF7  3001               	movlw	1
 10289  0FF8  00A2               	movwf	USART_put_string@vetor+1
 10290  0FF9  0008               	return
 10291  0FFA                     __end_ofPL80:	
 10292  0FFA                     PL82:	
 10293  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
 10294  0FFB  082E               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10295  0FFC  39FE               	andlw	254
 10296  0FFD  00A0               	movwf	I2C_Master_Write@d
 10297  0FFE  01A1               	clrf	I2C_Master_Write@d+1
 10298  0FFF  0008               	return
 10299  1000                     __end_ofPL82:	
 10300                           
 10301                           	psect	text32
 10302  1D4E                     __ptext32:	
 10303 ;; *************** function _PROCULUS_Show_Screen *****************
 10304 ;; Defined at:
 10305 ;;		line 243 in file "proculus.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;  screen          2   15[BANK1 ] unsigned int 
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;  vetor           3   17[BANK1 ] unsigned char [3]
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  1    wreg      void 
 10312 ;; Registers used:
 10313 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10314 ;; Tracked objects:
 10315 ;;		On entry : 300/100
 10316 ;;		On exit  : 300/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10319 ;;      Params:         0       0       2       0       0
 10320 ;;      Locals:         0       0       3       0       0
 10321 ;;      Temps:          0       0       0       0       0
 10322 ;;      Totals:         0       0       5       0       0
 10323 ;;Total ram usage:        5 bytes
 10324 ;; Hardware stack levels used:    1
 10325 ;; Hardware stack levels required when called:    4
 10326 ;; This function calls:
 10327 ;;		_PROCULUS_Control_Register_Write
 10328 ;; This function is called by:
 10329 ;;		_Decodify_Command
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           
 10334                           ;psect for function _PROCULUS_Show_Screen
 10335  1D4E                     _PROCULUS_Show_Screen:	
 10336                           
 10337                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
 10338                           
 10339                           ;incstack = 0
 10340                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10341  1D4E  3003               	movlw	3
 10342  1D4F  00B1               	movwf	PROCULUS_Show_Screen@vetor^(0+128)
 10343                           
 10344                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
 10345  1D50  0830               	movf	(PROCULUS_Show_Screen@screen^(0+128)+1),w
 10346  1D51  00B2               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+1)
 10347                           
 10348                           ;proculus.c: 247:      vetor[2] = (char) screen;
 10349  1D52  082F               	movf	PROCULUS_Show_Screen@screen^(0+128),w
 10350  1D53  00B3               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+2)
 10351                           
 10352                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
 10353  1D54  3003               	movlw	3
 10354  1D55  00AB               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
 10355  1D56  30B1               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
 10356  1D57  2D78               	ljmp	_PROCULUS_Control_Register_Write
 10357  1D58                     __end_of_PROCULUS_Show_Screen:	
 10358  1D58                     __ptext33:	
 10359 ;; *************** function _PROCULUS_Buzzer *****************
 10360 ;; Defined at:
 10361 ;;		line 223 in file "proculus.c"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;  time_ms_x_10    2   15[BANK1 ] unsigned int 
 10364 ;; Auto vars:     Size  Location     Type
 10365 ;;  vetor           2   17[BANK1 ] unsigned char [2]
 10366 ;; Return value:  Size  Location     Type
 10367 ;;                  1    wreg      void 
 10368 ;; Registers used:
 10369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10370 ;; Tracked objects:
 10371 ;;		On entry : 300/100
 10372 ;;		On exit  : 300/0
 10373 ;;		Unchanged: 0/0
 10374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10375 ;;      Params:         0       0       2       0       0
 10376 ;;      Locals:         0       0       2       0       0
 10377 ;;      Temps:          0       0       0       0       0
 10378 ;;      Totals:         0       0       4       0       0
 10379 ;;Total ram usage:        4 bytes
 10380 ;; Hardware stack levels used:    1
 10381 ;; Hardware stack levels required when called:    4
 10382 ;; This function calls:
 10383 ;;		_PROCULUS_Control_Register_Write
 10384 ;;		___lwdiv
 10385 ;; This function is called by:
 10386 ;;		_Decodify_Command
 10387 ;; This function uses a non-reentrant model
 10388 ;;
 10389                           
 10390                           
 10391                           ;psect for function _PROCULUS_Buzzer
 10392  1D58                     _PROCULUS_Buzzer:	
 10393                           
 10394                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
 10395                           
 10396                           ;incstack = 0
 10397                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10398  1D58  300A               	movlw	10
 10399  1D59  1283               	bcf	3,5	;RP0=0, select bank0
 10400  1D5A  00A0               	movwf	___lwdiv@divisor
 10401  1D5B  01A1               	clrf	___lwdiv@divisor+1
 10402  1D5C  1683               	bsf	3,5	;RP0=1, select bank1
 10403  1D5D  0830               	movf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128),w
 10404  1D5E  1283               	bcf	3,5	;RP0=0, select bank0
 10405  1D5F  00A3               	movwf	___lwdiv@dividend+1
 10406  1D60  1683               	bsf	3,5	;RP0=1, select bank1
 10407  1D61  082F               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
 10408  1D62  1283               	bcf	3,5	;RP0=0, select bank0
 10409  1D63  00A2               	movwf	___lwdiv@dividend
 10410  1D64  160A  118A  2654  160A  158A  	fcall	___lwdiv
 10411  1D69  0821               	movf	?___lwdiv+1,w
 10412  1D6A  1683               	bsf	3,5	;RP0=1, select bank1
 10413  1D6B  00B0               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
 10414  1D6C  1283               	bcf	3,5	;RP0=0, select bank0
 10415  1D6D  0820               	movf	?___lwdiv,w
 10416  1D6E  1683               	bsf	3,5	;RP0=1, select bank1
 10417  1D6F  00AF               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
 10418                           
 10419                           ;proculus.c: 226:      vetor[0]=0x02;
 10420  1D70  3002               	movlw	2
 10421  1D71  00B1               	movwf	PROCULUS_Buzzer@vetor^(0+128)
 10422                           
 10423                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
 10424  1D72  082F               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
 10425  1D73  00B2               	movwf	(PROCULUS_Buzzer@vetor^(0+128)+1)
 10426                           
 10427                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
 10428  1D74  3002               	movlw	2
 10429  1D75  00AB               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
 10430  1D76  30B1               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
 10431  1D77  2D78               	ljmp	_PROCULUS_Control_Register_Write
 10432  1D78                     __end_of_PROCULUS_Buzzer:	
 10433  1D78                     __ptext35:	
 10434 ;; *************** function _PROCULUS_Control_Register_Write *****************
 10435 ;; Defined at:
 10436 ;;		line 13 in file "proculus.c"
 10437 ;; Parameters:    Size  Location     Type
 10438 ;;  vetor           1    wreg     PTR unsigned char 
 10439 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10440 ;;  size            1   11[BANK1 ] unsigned char 
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;  vetor           1   13[BANK1 ] PTR unsigned char 
 10443 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10444 ;;  i               1   14[BANK1 ] unsigned char 
 10445 ;; Return value:  Size  Location     Type
 10446 ;;                  1    wreg      void 
 10447 ;; Registers used:
 10448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10449 ;; Tracked objects:
 10450 ;;		On entry : 300/100
 10451 ;;		On exit  : 300/0
 10452 ;;		Unchanged: 0/0
 10453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10454 ;;      Params:         0       0       1       0       0
 10455 ;;      Locals:         0       0       2       0       0
 10456 ;;      Temps:          0       0       1       0       0
 10457 ;;      Totals:         0       0       4       0       0
 10458 ;;Total ram usage:        4 bytes
 10459 ;; Hardware stack levels used:    1
 10460 ;; Hardware stack levels required when called:    3
 10461 ;; This function calls:
 10462 ;;		_PROCULUS_Delay
 10463 ;;		_USART_put_int
 10464 ;;		_USART_putc
 10465 ;; This function is called by:
 10466 ;;		_PROCULUS_Buzzer
 10467 ;;		_PROCULUS_Show_Screen
 10468 ;; This function uses a non-reentrant model
 10469 ;;
 10470                           
 10471                           
 10472                           ;psect for function _PROCULUS_Control_Register_Write
 10473  1D78                     _PROCULUS_Control_Register_Write:	
 10474                           
 10475                           ;incstack = 0
 10476                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
 10477                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
 10478  1D78  00AD               	movwf	PROCULUS_Control_Register_Write@vetor^(0+128)
 10479                           
 10480                           ;proculus.c: 14:      USART_put_int(0x5AA5);
 10481  1D79  30A5               	movlw	165
 10482  1D7A  00A8               	movwf	USART_put_int@value^(0+128)
 10483  1D7B  305A               	movlw	90
 10484  1D7C  00A9               	movwf	(USART_put_int@value^(0+128)+1)
 10485  1D7D  120A  158A  2787  160A  158A  	fcall	_USART_put_int
 10486                           
 10487                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
 10488  1D82  082B               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
 10489  1D83  3E01               	addlw	1
 10490  1D84  120A  158A  23DD  160A  158A  	fcall	_USART_putc
 10491                           
 10492                           ;proculus.c: 16:      USART_putc(0x80);
 10493  1D89  3080               	movlw	128
 10494  1D8A  120A  158A  23DD  160A  158A  	fcall	_USART_putc
 10495                           
 10496                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
 10497  1D8F  01AE               	clrf	PROCULUS_Control_Register_Write@i^(0+128)
 10498  1D90                     l6488:	
 10499  1D90  082B               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
 10500  1D91  022E               	subwf	PROCULUS_Control_Register_Write@i^(0+128),w
 10501  1D92  1803               	btfsc	3,0
 10502  1D93  2DA1               	goto	l6490
 10503                           
 10504                           ;proculus.c: 18:          USART_putc(vetor[i]);
 10505  1D94  082E               	movf	PROCULUS_Control_Register_Write@i^(0+128),w
 10506  1D95  072D               	addwf	PROCULUS_Control_Register_Write@vetor^(0+128),w
 10507  1D96  00AC               	movwf	??_PROCULUS_Control_Register_Write^(0+128)
 10508  1D97  0084               	movwf	4
 10509  1D98  1383               	bcf	3,7	;select IRP bank0
 10510  1D99  0800               	movf	0,w
 10511  1D9A  120A  158A  23DD  160A  158A  	fcall	_USART_putc
 10512  1D9F  0AAE               	incf	PROCULUS_Control_Register_Write@i^(0+128),f
 10513  1DA0  2D90               	goto	l6488
 10514  1DA1                     l6490:	
 10515                           
 10516                           ;proculus.c: 19:      PROCULUS_Delay(1);
 10517  1DA1  1283               	bcf	3,5	;RP0=0, select bank0
 10518  1DA2  01A0               	clrf	PROCULUS_Delay@tempo_ms
 10519  1DA3  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
 10520  1DA4  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
 10521  1DA5  2DA6               	ljmp	l4268
 10522  1DA6                     __end_of_PROCULUS_Control_Register_Write:	
 10523  1DA6                     __ptext38:	
 10524 ;; *************** function _PROCULUS_Delay *****************
 10525 ;; Defined at:
 10526 ;;		line 267 in file "proculus.c"
 10527 ;; Parameters:    Size  Location     Type
 10528 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
 10529 ;; Auto vars:     Size  Location     Type
 10530 ;;  i               2    4[BANK0 ] unsigned int 
 10531 ;; Return value:  Size  Location     Type
 10532 ;;                  1    wreg      void 
 10533 ;; Registers used:
 10534 ;;		wreg, status,2, status,0
 10535 ;; Tracked objects:
 10536 ;;		On entry : 300/800
 10537 ;;		On exit  : 300/0
 10538 ;;		Unchanged: 0/0
 10539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10540 ;;      Params:         0       2       0       0       0
 10541 ;;      Locals:         0       2       0       0       0
 10542 ;;      Temps:          0       2       0       0       0
 10543 ;;      Totals:         0       6       0       0       0
 10544 ;;Total ram usage:        6 bytes
 10545 ;; Hardware stack levels used:    1
 10546 ;; Hardware stack levels required when called:    1
 10547 ;; This function calls:
 10548 ;;		Nothing
 10549 ;; This function is called by:
 10550 ;;		_PROCULUS_Control_Register_Write
 10551 ;;		_PROCULUS_VP_Write
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           
 10555                           
 10556                           ;psect for function _PROCULUS_Delay
 10557  1DA6                     _PROCULUS_Delay:	
 10558  1DA6                     l4268:	
 10559                           ;incstack = 0
 10560                           ; Regs used in _PROCULUS_Delay: [wreg+status,2+status,0]
 10561                           
 10562                           
 10563                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
 10564  1DA6  01A4               	clrf	PROCULUS_Delay@i
 10565  1DA7  01A5               	clrf	PROCULUS_Delay@i+1
 10566  1DA8                     l4274:	
 10567  1DA8  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
 10568  1DA9  0225               	subwf	PROCULUS_Delay@i+1,w
 10569  1DAA  1D03               	skipz
 10570  1DAB  2DAE               	goto	u3395
 10571  1DAC  0820               	movf	PROCULUS_Delay@tempo_ms,w
 10572  1DAD  0224               	subwf	PROCULUS_Delay@i,w
 10573  1DAE                     u3395:	
 10574  1DAE  1803               	btfsc	3,0
 10575  1DAF  0008               	return
 10576                           
 10577                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
 10578  1DB0  3003               	movlw	3
 10579  1DB1  1283               	bcf	3,5	;RP0=0, select bank0
 10580  1DB2  1303               	bcf	3,6	;RP1=0, select bank0
 10581  1DB3  00A3               	movwf	??_PROCULUS_Delay+1
 10582  1DB4  3097               	movlw	151
 10583  1DB5  00A2               	movwf	??_PROCULUS_Delay
 10584  1DB6                     u6567:	
 10585  1DB6  0BA2               	decfsz	??_PROCULUS_Delay,f
 10586  1DB7  2DB6               	goto	u6567
 10587  1DB8  0BA3               	decfsz	??_PROCULUS_Delay+1,f
 10588  1DB9  2DB6               	goto	u6567
 10589                           
 10590                           ;proculus.c: 270:     }
 10591  1DBA  1283               	bcf	3,5	;RP0=0, select bank0
 10592  1DBB  1303               	bcf	3,6	;RP1=0, select bank0
 10593  1DBC  0AA4               	incf	PROCULUS_Delay@i,f
 10594  1DBD  1903               	skipnz
 10595  1DBE  0AA5               	incf	PROCULUS_Delay@i+1,f
 10596  1DBF  2DA8               	goto	l4274
 10597  1DC0                     __end_of_PROCULUS_Delay:	
 10598                           
 10599                           	psect	text43
 10600  1EA8                     __ptext43:	
 10601 ;; *************** function _EEPROM_Write_Integer *****************
 10602 ;; Defined at:
 10603 ;;		line 68 in file "eeprom.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;  addr            1    wreg     unsigned char 
 10606 ;;  dado            2    5[BANK0 ] unsigned int 
 10607 ;; Auto vars:     Size  Location     Type
 10608 ;;  addr            1    9[BANK0 ] unsigned char 
 10609 ;;  i               1   11[BANK0 ] unsigned char 
 10610 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
 10611 ;;		 -> EEPROM_Write_Integer@dado(2), 
 10612 ;;  addr_memo       1    0        unsigned char 
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  1    wreg      void 
 10615 ;; Registers used:
 10616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10617 ;; Tracked objects:
 10618 ;;		On entry : 200/0
 10619 ;;		On exit  : 0/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10622 ;;      Params:         0       2       0       0       0
 10623 ;;      Locals:         0       3       0       0       0
 10624 ;;      Temps:          0       2       0       0       0
 10625 ;;      Totals:         0       7       0       0       0
 10626 ;;Total ram usage:        7 bytes
 10627 ;; Hardware stack levels used:    1
 10628 ;; Hardware stack levels required when called:    2
 10629 ;; This function calls:
 10630 ;;		_EEPROM_Write_Byte
 10631 ;; This function is called by:
 10632 ;;		_main
 10633 ;;		_Decodify_Command
 10634 ;; This function uses a non-reentrant model
 10635 ;;
 10636                           
 10637                           
 10638                           ;psect for function _EEPROM_Write_Integer
 10639  1EA8                     _EEPROM_Write_Integer:	
 10640                           
 10641                           ;incstack = 0
 10642                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10643                           ;EEPROM_Write_Integer@addr stored from wreg
 10644  1EA8  1283               	bcf	3,5	;RP0=0, select bank0
 10645  1EA9  00A9               	movwf	EEPROM_Write_Integer@addr
 10646                           
 10647                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
 10648  1EAA  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
 10649  1EAB  00AA               	movwf	EEPROM_Write_Integer@ptr
 10650                           
 10651                           ;eeprom.c: 75:       for (i=0;i<2;i++)
 10652  1EAC  01AB               	clrf	EEPROM_Write_Integer@i
 10653  1EAD                     l4858:	
 10654                           
 10655                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
 10656  1EAD  082A               	movf	EEPROM_Write_Integer@ptr,w
 10657  1EAE  0084               	movwf	4
 10658  1EAF  1383               	bcf	3,7	;select IRP bank0
 10659  1EB0  0800               	movf	0,w
 10660  1EB1  00A0               	movwf	EEPROM_Write_Byte@dado
 10661  1EB2  0829               	movf	EEPROM_Write_Integer@addr,w
 10662  1EB3  26E3  160A  158A   	fcall	_EEPROM_Write_Byte
 10663  1EB6  1283               	bcf	3,5	;RP0=0, select bank0
 10664  1EB7  1303               	bcf	3,6	;RP1=0, select bank0
 10665  1EB8  3002               	movlw	2
 10666  1EB9  0AAA               	incf	EEPROM_Write_Integer@ptr,f
 10667  1EBA  0AA9               	incf	EEPROM_Write_Integer@addr,f
 10668  1EBB  0AAB               	incf	EEPROM_Write_Integer@i,f
 10669  1EBC  022B               	subwf	EEPROM_Write_Integer@i,w
 10670  1EBD  1C03               	skipc
 10671  1EBE  2EAD               	goto	l4858
 10672                           
 10673                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
 10674  1EBF  304E               	movlw	78
 10675  1EC0  1283               	bcf	3,5	;RP0=0, select bank0
 10676  1EC1  1303               	bcf	3,6	;RP1=0, select bank0
 10677  1EC2  00A8               	movwf	??_EEPROM_Write_Integer+1
 10678  1EC3  30EA               	movlw	234
 10679  1EC4  00A7               	movwf	??_EEPROM_Write_Integer
 10680  1EC5                     u6577:	
 10681  1EC5  0BA7               	decfsz	??_EEPROM_Write_Integer,f
 10682  1EC6  2EC5               	goto	u6577
 10683  1EC7  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
 10684  1EC8  2EC5               	goto	u6577
 10685  1EC9  0000               	nop
 10686  1ECA  0008               	return
 10687  1ECB                     __end_of_EEPROM_Write_Integer:	
 10688  1ECB                     __ptext42:	
 10689 ;; *************** function _EEPROM_Write_String *****************
 10690 ;; Defined at:
 10691 ;;		line 97 in file "eeprom.c"
 10692 ;; Parameters:    Size  Location     Type
 10693 ;;  addr            1    wreg     unsigned char 
 10694 ;;  dado            1    5[BANK0 ] PTR unsigned char 
 10695 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10696 ;; Auto vars:     Size  Location     Type
 10697 ;;  addr            1    6[BANK0 ] unsigned char 
 10698 ;; Return value:  Size  Location     Type
 10699 ;;                  1    wreg      void 
 10700 ;; Registers used:
 10701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10702 ;; Tracked objects:
 10703 ;;		On entry : 300/300
 10704 ;;		On exit  : 0/0
 10705 ;;		Unchanged: 0/0
 10706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10707 ;;      Params:         0       1       0       0       0
 10708 ;;      Locals:         0       1       0       0       0
 10709 ;;      Temps:          0       0       0       0       0
 10710 ;;      Totals:         0       2       0       0       0
 10711 ;;Total ram usage:        2 bytes
 10712 ;; Hardware stack levels used:    1
 10713 ;; Hardware stack levels required when called:    2
 10714 ;; This function calls:
 10715 ;;		_EEPROM_Write_Byte
 10716 ;; This function is called by:
 10717 ;;		_Decodify_Command
 10718 ;; This function uses a non-reentrant model
 10719 ;;
 10720                           
 10721                           
 10722                           ;psect for function _EEPROM_Write_String
 10723  1ECB                     _EEPROM_Write_String:	
 10724                           
 10725                           ;incstack = 0
 10726                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10727                           ;EEPROM_Write_String@addr stored from wreg
 10728  1ECB  1283               	bcf	3,5	;RP0=0, select bank0
 10729  1ECC  1303               	bcf	3,6	;RP1=0, select bank0
 10730  1ECD  00A6               	movwf	EEPROM_Write_String@addr
 10731  1ECE                     l6588:	
 10732                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
 10733                           
 10734                           
 10735                           ;eeprom.c: 99:     while(*dado)
 10736  1ECE  0825               	movf	EEPROM_Write_String@dado,w
 10737  1ECF  0084               	movwf	4
 10738  1ED0  1783               	bsf	3,7	;select IRP bank2
 10739  1ED1  0800               	movf	0,w
 10740  1ED2  1903               	btfsc	3,2
 10741  1ED3  2EDF               	goto	l6590
 10742                           
 10743                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
 10744  1ED4  271E  160A  158A   	fcall	PL70	;call to abstracted procedure
 10745  1ED7  26E3  160A  158A   	fcall	_EEPROM_Write_Byte
 10746                           
 10747                           ;eeprom.c: 102:      addr++;
 10748  1EDA  1283               	bcf	3,5	;RP0=0, select bank0
 10749  1EDB  1303               	bcf	3,6	;RP1=0, select bank0
 10750  1EDC  0AA6               	incf	EEPROM_Write_String@addr,f
 10751                           
 10752                           ;eeprom.c: 103:      dado++;
 10753  1EDD  0AA5               	incf	EEPROM_Write_String@dado,f
 10754  1EDE  2ECE               	goto	l6588
 10755  1EDF                     l6590:	
 10756                           
 10757                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
 10758  1EDF  271E  160A  158A   	fcall	PL70	;call to abstracted procedure
 10759  1EE2  2EE3               	ljmp	_EEPROM_Write_Byte
 10760  1EE3                     __end_of_EEPROM_Write_String:	
 10761  1EE3                     __ptext44:	
 10762 ;; *************** function _EEPROM_Write_Byte *****************
 10763 ;; Defined at:
 10764 ;;		line 21 in file "eeprom.c"
 10765 ;; Parameters:    Size  Location     Type
 10766 ;;  addr            1    wreg     unsigned char 
 10767 ;;  dado            1    0[BANK0 ] unsigned char 
 10768 ;; Auto vars:     Size  Location     Type
 10769 ;;  addr            1    3[BANK0 ] unsigned char 
 10770 ;;  last_GIE        1    4[BANK0 ] unsigned char 
 10771 ;; Return value:  Size  Location     Type
 10772 ;;                  1    wreg      void 
 10773 ;; Registers used:
 10774 ;;		wreg, status,2, status,0
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/300
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10780 ;;      Params:         0       1       0       0       0
 10781 ;;      Locals:         0       2       0       0       0
 10782 ;;      Temps:          0       2       0       0       0
 10783 ;;      Totals:         0       5       0       0       0
 10784 ;;Total ram usage:        5 bytes
 10785 ;; Hardware stack levels used:    1
 10786 ;; Hardware stack levels required when called:    1
 10787 ;; This function calls:
 10788 ;;		Nothing
 10789 ;; This function is called by:
 10790 ;;		_Decodify_Command
 10791 ;;		_EEPROM_Write_Integer
 10792 ;;		_EEPROM_Write_String
 10793 ;; This function uses a non-reentrant model
 10794 ;;
 10795                           
 10796                           
 10797                           ;psect for function _EEPROM_Write_Byte
 10798  1EE3                     _EEPROM_Write_Byte:	
 10799                           
 10800                           ;incstack = 0
 10801                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
 10802                           ;EEPROM_Write_Byte@addr stored from wreg
 10803  1EE3  1283               	bcf	3,5	;RP0=0, select bank0
 10804  1EE4  1303               	bcf	3,6	;RP1=0, select bank0
 10805  1EE5  00A3               	movwf	EEPROM_Write_Byte@addr
 10806                           
 10807                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
 10808  1EE6  3014               	movlw	20
 10809  1EE7  1683               	bsf	3,5	;RP0=1, select bank3
 10810  1EE8  1703               	bsf	3,6	;RP1=1, select bank3
 10811  1EE9  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 10812  1EEA  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 10813  1EEB                     l474:	
 10814                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
 10815                           
 10816  1EEB  188C               	btfsc	12,1	;volsfr
 10817  1EEC  2EEB               	goto	l474
 10818                           
 10819                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
 10820  1EED  1F8B               	btfss	11,7	;volatile
 10821  1EEE  2EF4               	goto	l4450
 10822                           
 10823                           ;eeprom.c: 28:           last_GIE=1;
 10824  1EEF  1283               	bcf	3,5	;RP0=0, select bank0
 10825  1EF0  1303               	bcf	3,6	;RP1=0, select bank0
 10826  1EF1  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10827  1EF2  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
 10828  1EF3  2EF7               	goto	l4452
 10829  1EF4                     l4450:	
 10830                           
 10831                           ;eeprom.c: 30:           last_GIE=0;
 10832  1EF4  1283               	bcf	3,5	;RP0=0, select bank0
 10833  1EF5  1303               	bcf	3,6	;RP1=0, select bank0
 10834  1EF6  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10835  1EF7                     l4452:	
 10836                           
 10837                           ;eeprom.c: 32:        EEADR=addr;
 10838  1EF7  0823               	movf	EEPROM_Write_Byte@addr,w
 10839  1EF8  1703               	bsf	3,6	;RP1=1, select bank2
 10840  1EF9  008D               	movwf	13	;volatile
 10841                           
 10842                           ;eeprom.c: 33:        EEDATA=dado;
 10843  1EFA  1303               	bcf	3,6	;RP1=0, select bank0
 10844  1EFB  0820               	movf	EEPROM_Write_Byte@dado,w
 10845  1EFC  1703               	bsf	3,6	;RP1=1, select bank2
 10846  1EFD  008C               	movwf	12	;volatile
 10847                           
 10848                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
 10849  1EFE  1683               	bsf	3,5	;RP0=1, select bank3
 10850  1EFF  138C               	bcf	12,7	;volsfr
 10851                           
 10852                           ;eeprom.c: 35:        EECON1bits.WREN=1;
 10853  1F00  150C               	bsf	12,2	;volsfr
 10854                           
 10855                           ;eeprom.c: 36:        INTCONbits.GIE=0;
 10856  1F01  138B               	bcf	11,7	;volatile
 10857                           
 10858                           ;eeprom.c: 37:        EECON2=0x55;
 10859  1F02  3055               	movlw	85
 10860  1F03  008D               	movwf	13	;volsfr
 10861                           
 10862                           ;eeprom.c: 38:        EECON2=0xAA;
 10863  1F04  30AA               	movlw	170
 10864  1F05  008D               	movwf	13	;volsfr
 10865                           
 10866                           ;eeprom.c: 39:        EECON1bits.WR=1;
 10867  1F06  148C               	bsf	12,1	;volsfr
 10868                           
 10869                           ;eeprom.c: 41:        if(last_GIE==1)
 10870  1F07  1283               	bcf	3,5	;RP0=0, select bank0
 10871  1F08  1303               	bcf	3,6	;RP1=0, select bank0
 10872  1F09  0324               	decf	EEPROM_Write_Byte@last_GIE,w
 10873  1F0A  1D03               	btfss	3,2
 10874  1F0B  2F0E               	goto	l479
 10875                           
 10876                           ;eeprom.c: 42:           INTCONbits.GIE=1;
 10877  1F0C  178B               	bsf	11,7	;volatile
 10878  1F0D  2F0F               	goto	l480
 10879  1F0E                     l479:	
 10880                           ;eeprom.c: 43:        else
 10881                           
 10882                           
 10883                           ;eeprom.c: 44:           INTCONbits.GIE=0;
 10884  1F0E  138B               	bcf	11,7	;volatile
 10885  1F0F                     l480:	
 10886                           
 10887                           ;eeprom.c: 46:        EECON1bits.WREN=0;
 10888  1F0F  1683               	bsf	3,5	;RP0=1, select bank3
 10889  1F10  1703               	bsf	3,6	;RP1=1, select bank3
 10890  1F11  110C               	bcf	12,2	;volsfr
 10891                           
 10892                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
 10893  1F12  304E               	movlw	78
 10894  1F13  1283               	bcf	3,5	;RP0=0, select bank0
 10895  1F14  1303               	bcf	3,6	;RP1=0, select bank0
 10896  1F15  00A2               	movwf	??_EEPROM_Write_Byte+1
 10897  1F16  30EA               	movlw	234
 10898  1F17  00A1               	movwf	??_EEPROM_Write_Byte
 10899  1F18                     u6587:	
 10900  1F18  0BA1               	decfsz	??_EEPROM_Write_Byte,f
 10901  1F19  2F18               	goto	u6587
 10902  1F1A  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
 10903  1F1B  2F18               	goto	u6587
 10904  1F1C  0000               	nop
 10905  1F1D  0008               	return
 10906  1F1E                     __end_of_EEPROM_Write_Byte:	
 10907  1F1E                     PL70:	
 10908  1F1E  0825               	movf	EEPROM_Write_String@dado,w
 10909  1F1F  0084               	movwf	4
 10910  1F20  0800               	movf	0,w
 10911  1F21  00A0               	movwf	EEPROM_Write_Byte@dado
 10912  1F22  0826               	movf	EEPROM_Write_String@addr,w
 10913  1F23  0008               	return
 10914  1F24                     __end_ofPL70:	
 10915                           
 10916                           	psect	text45
 10917  04F5                     __ptext45:	
 10918 ;; *************** function _EEPROM_Read_String *****************
 10919 ;; Defined at:
 10920 ;;		line 109 in file "eeprom.c"
 10921 ;; Parameters:    Size  Location     Type
 10922 ;;  addr            1    wreg     unsigned char 
 10923 ;;  dado            1    3[BANK0 ] PTR unsigned char 
 10924 ;;		 -> texto(16), 
 10925 ;; Auto vars:     Size  Location     Type
 10926 ;;  addr            1    4[BANK0 ] unsigned char 
 10927 ;;  c               1    5[BANK0 ] unsigned char 
 10928 ;; Return value:  Size  Location     Type
 10929 ;;                  1    wreg      void 
 10930 ;; Registers used:
 10931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10932 ;; Tracked objects:
 10933 ;;		On entry : 300/300
 10934 ;;		On exit  : B00/800
 10935 ;;		Unchanged: 0/0
 10936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10937 ;;      Params:         0       1       0       0       0
 10938 ;;      Locals:         0       2       0       0       0
 10939 ;;      Temps:          0       0       0       0       0
 10940 ;;      Totals:         0       3       0       0       0
 10941 ;;Total ram usage:        3 bytes
 10942 ;; Hardware stack levels used:    1
 10943 ;; Hardware stack levels required when called:    2
 10944 ;; This function calls:
 10945 ;;		_EEPROM_Read_Byte
 10946 ;; This function is called by:
 10947 ;;		_Decodify_Command
 10948 ;; This function uses a non-reentrant model
 10949 ;;
 10950                           
 10951                           
 10952                           ;psect for function _EEPROM_Read_String
 10953  04F5                     _EEPROM_Read_String:	
 10954                           
 10955                           ;incstack = 0
 10956                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10957                           ;EEPROM_Read_String@addr stored from wreg
 10958  04F5  1283               	bcf	3,5	;RP0=0, select bank0
 10959  04F6  1303               	bcf	3,6	;RP1=0, select bank0
 10960  04F7  00A4               	movwf	EEPROM_Read_String@addr
 10961  04F8                     l506:	
 10962                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 10963                           
 10964                           
 10965                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10966  04F8  0824               	movf	EEPROM_Read_String@addr,w
 10967  04F9  25E1  120A  118A   	fcall	_EEPROM_Read_Byte
 10968  04FC  1303               	bcf	3,6	;RP1=0, select bank0
 10969  04FD  00A5               	movwf	EEPROM_Read_String@c
 10970  04FE  0AA4               	incf	EEPROM_Read_String@addr,f
 10971                           
 10972                           ;eeprom.c: 114:         *(dado++)=c;
 10973  04FF  0823               	movf	EEPROM_Read_String@dado,w
 10974  0500  0084               	movwf	4
 10975  0501  0825               	movf	EEPROM_Read_String@c,w
 10976  0502  1783               	bsf	3,7	;select IRP bank2
 10977  0503  0080               	movwf	0
 10978  0504  0AA3               	incf	EEPROM_Read_String@dado,f
 10979                           
 10980                           ;eeprom.c: 116:       }while(c);
 10981  0505  0825               	movf	EEPROM_Read_String@c,w
 10982  0506  1903               	btfsc	3,2
 10983  0507  0008               	return
 10984  0508  2CF8               	goto	l506
 10985  0509                     __end_of_EEPROM_Read_String:	
 10986  0509                     __ptext39:	
 10987 ;; *************** function _Load_Work *****************
 10988 ;; Defined at:
 10989 ;;		line 982 in file "SlaveLiofilizadorVer1.c"
 10990 ;; Parameters:    Size  Location     Type
 10991 ;;		None
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;		None
 10994 ;; Return value:  Size  Location     Type
 10995 ;;                  1    wreg      void 
 10996 ;; Registers used:
 10997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10998 ;; Tracked objects:
 10999 ;;		On entry : 100/300
 11000 ;;		On exit  : 300/200
 11001 ;;		Unchanged: 0/0
 11002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11003 ;;      Params:         0       0       0       0       0
 11004 ;;      Locals:         0       0       0       0       0
 11005 ;;      Temps:          0       0       4       0       0
 11006 ;;      Totals:         0       0       4       0       0
 11007 ;;Total ram usage:        4 bytes
 11008 ;; Hardware stack levels used:    1
 11009 ;; Hardware stack levels required when called:    3
 11010 ;; This function calls:
 11011 ;;		_EEPROM_Read_Byte
 11012 ;;		_EEPROM_Read_Integer
 11013 ;;		___fldiv
 11014 ;;		___xxtofl
 11015 ;; This function is called by:
 11016 ;;		_main
 11017 ;;		_Decodify_Command
 11018 ;; This function uses a non-reentrant model
 11019 ;;
 11020                           
 11021                           
 11022                           ;psect for function _Load_Work
 11023  0509                     _Load_Work:	
 11024  0509                     l6544:	
 11025                           ;incstack = 0
 11026                           ; Regs used in _Load_Work: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11027                           
 11028                           
 11029                           ;SlaveLiofilizadorVer1.c: 985:      SetPoint0 = EEPROM_Read_Integer(0);
 11030  0509  3000               	movlw	0
 11031  050A  2602  120A  118A   	fcall	_EEPROM_Read_Integer
 11032  050D  261D               	fcall	PL16	;call to abstracted procedure
 11033  050E  160A  118A  24A9  120A  118A  	fcall	___xxtofl
 11034  0513  082E               	movf	?___xxtofl+3,w
 11035  0514  00F3               	movwf	_SetPoint0+3	;volatile
 11036  0515  082D               	movf	?___xxtofl+2,w
 11037  0516  00F2               	movwf	_SetPoint0+2	;volatile
 11038  0517  082C               	movf	?___xxtofl+1,w
 11039  0518  00F1               	movwf	_SetPoint0+1	;volatile
 11040  0519  082B               	movf	?___xxtofl,w
 11041  051A  00F0               	movwf	_SetPoint0	;volatile
 11042                           
 11043                           ;SlaveLiofilizadorVer1.c: 986:      SetPoint0/=10;
 11044  051B  3041               	movlw	65
 11045  051C  1683               	bsf	3,5	;RP0=1, select bank1
 11046  051D  00A3               	movwf	(___fldiv@a+3)^(0+128)
 11047  051E  3020               	movlw	32
 11048  051F  00A2               	movwf	(___fldiv@a+2)^(0+128)
 11049  0520  01A1               	clrf	(___fldiv@a+1)^(0+128)
 11050  0521  01A0               	clrf	___fldiv@a^(0+128)
 11051  0522  0873               	movf	_SetPoint0+3,w	;volatile
 11052  0523  00A7               	movwf	(___fldiv@b+3)^(0+128)
 11053  0524  0872               	movf	_SetPoint0+2,w	;volatile
 11054  0525  00A6               	movwf	(___fldiv@b+2)^(0+128)
 11055  0526  0871               	movf	_SetPoint0+1,w	;volatile
 11056  0527  00A5               	movwf	(___fldiv@b+1)^(0+128)
 11057  0528  0870               	movf	_SetPoint0,w	;volatile
 11058  0529  00A4               	movwf	___fldiv@b^(0+128)
 11059  052A  160A  118A  2517  120A  118A  	fcall	___fldiv
 11060  052F  0823               	movf	(?___fldiv+3)^(0+128),w
 11061  0530  00F3               	movwf	_SetPoint0+3	;volatile
 11062  0531  0822               	movf	(?___fldiv+2)^(0+128),w
 11063  0532  00F2               	movwf	_SetPoint0+2	;volatile
 11064  0533  0821               	movf	(?___fldiv+1)^(0+128),w
 11065  0534  00F1               	movwf	_SetPoint0+1	;volatile
 11066  0535  0820               	movf	?___fldiv^(0+128),w
 11067  0536  00F0               	movwf	_SetPoint0	;volatile
 11068                           
 11069                           ;SlaveLiofilizadorVer1.c: 987:      TempoON_0 = EEPROM_Read_Byte(2);
 11070  0537  3002               	movlw	2
 11071  0538  25E1  120A  118A   	fcall	_EEPROM_Read_Byte
 11072  053B  1683               	bsf	3,5	;RP0=1, select bank3
 11073  053C  00BA               	movwf	_TempoON_0^(0+384)
 11074                           
 11075                           ;SlaveLiofilizadorVer1.c: 988:      TempoOFF_0= EEPROM_Read_Byte(3);
 11076  053D  3003               	movlw	3
 11077  053E  25E1  120A  118A   	fcall	_EEPROM_Read_Byte
 11078  0541  1683               	bsf	3,5	;RP0=1, select bank3
 11079  0542  00B9               	movwf	_TempoOFF_0^(0+384)
 11080                           
 11081                           ;SlaveLiofilizadorVer1.c: 989:      Histerese0= EEPROM_Read_Byte(4);
 11082  0543  3004               	movlw	4
 11083  0544  25E1               	fcall	_EEPROM_Read_Byte
 11084  0545  1303               	bcf	3,6	;RP1=0, select bank0
 11085  0546  00AB               	movwf	___xxtofl@val
 11086  0547  3000               	movlw	0
 11087  0548  01AC               	clrf	___xxtofl@val+1
 11088  0549  01AD               	clrf	___xxtofl@val+2
 11089  054A  01AE               	clrf	___xxtofl@val+3
 11090  054B  160A  118A  24A9  120A  118A  	fcall	___xxtofl
 11091  0550  082E               	movf	?___xxtofl+3,w
 11092  0551  1683               	bsf	3,5	;RP0=1, select bank3
 11093  0552  1703               	bsf	3,6	;RP1=1, select bank3
 11094  0553  009F               	movwf	(_Histerese0+3)^(0+384)
 11095  0554  1283               	bcf	3,5	;RP0=0, select bank0
 11096  0555  1303               	bcf	3,6	;RP1=0, select bank0
 11097  0556  082D               	movf	?___xxtofl+2,w
 11098  0557  1683               	bsf	3,5	;RP0=1, select bank3
 11099  0558  1703               	bsf	3,6	;RP1=1, select bank3
 11100  0559  009E               	movwf	(_Histerese0+2)^(0+384)
 11101  055A  1283               	bcf	3,5	;RP0=0, select bank0
 11102  055B  1303               	bcf	3,6	;RP1=0, select bank0
 11103  055C  082C               	movf	?___xxtofl+1,w
 11104  055D  1683               	bsf	3,5	;RP0=1, select bank3
 11105  055E  1703               	bsf	3,6	;RP1=1, select bank3
 11106  055F  009D               	movwf	(_Histerese0+1)^(0+384)
 11107  0560  1283               	bcf	3,5	;RP0=0, select bank0
 11108  0561  1303               	bcf	3,6	;RP1=0, select bank0
 11109  0562  082B               	movf	?___xxtofl,w
 11110  0563  1683               	bsf	3,5	;RP0=1, select bank3
 11111  0564  1703               	bsf	3,6	;RP1=1, select bank3
 11112  0565  009C               	movwf	_Histerese0^(0+384)
 11113                           
 11114                           ;SlaveLiofilizadorVer1.c: 990:      Status0 = EEPROM_Read_Integer(5);
 11115  0566  3005               	movlw	5
 11116  0567  2602  120A  118A   	fcall	_EEPROM_Read_Integer
 11117  056A  0824               	movf	?_EEPROM_Read_Integer+1,w
 11118  056B  1683               	bsf	3,5	;RP0=1, select bank3
 11119  056C  1703               	bsf	3,6	;RP1=1, select bank3
 11120  056D  00A9               	movwf	(_Status0+1)^(0+384)
 11121  056E  1283               	bcf	3,5	;RP0=0, select bank0
 11122  056F  1303               	bcf	3,6	;RP1=0, select bank0
 11123  0570  0823               	movf	?_EEPROM_Read_Integer,w
 11124  0571  1683               	bsf	3,5	;RP0=1, select bank3
 11125  0572  1703               	bsf	3,6	;RP1=1, select bank3
 11126  0573  00A8               	movwf	_Status0^(0+384)
 11127                           
 11128                           ;SlaveLiofilizadorVer1.c: 992:      SetPoint1 = EEPROM_Read_Integer(7);
 11129  0574  3007               	movlw	7
 11130  0575  2602  120A  118A   	fcall	_EEPROM_Read_Integer
 11131  0578  261D               	fcall	PL16	;call to abstracted procedure
 11132  0579  160A  118A  24A9  120A  118A  	fcall	___xxtofl
 11133  057E  082E               	movf	?___xxtofl+3,w
 11134  057F  1683               	bsf	3,5	;RP0=1, select bank3
 11135  0580  1703               	bsf	3,6	;RP1=1, select bank3
 11136  0581  009B               	movwf	(_SetPoint1+3)^(0+384)	;volatile
 11137  0582  1283               	bcf	3,5	;RP0=0, select bank0
 11138  0583  1303               	bcf	3,6	;RP1=0, select bank0
 11139  0584  082D               	movf	?___xxtofl+2,w
 11140  0585  1683               	bsf	3,5	;RP0=1, select bank3
 11141  0586  1703               	bsf	3,6	;RP1=1, select bank3
 11142  0587  009A               	movwf	(_SetPoint1+2)^(0+384)	;volatile
 11143  0588  1283               	bcf	3,5	;RP0=0, select bank0
 11144  0589  1303               	bcf	3,6	;RP1=0, select bank0
 11145  058A  082C               	movf	?___xxtofl+1,w
 11146  058B  1683               	bsf	3,5	;RP0=1, select bank3
 11147  058C  1703               	bsf	3,6	;RP1=1, select bank3
 11148  058D  0099               	movwf	(_SetPoint1+1)^(0+384)	;volatile
 11149  058E  1283               	bcf	3,5	;RP0=0, select bank0
 11150  058F  1303               	bcf	3,6	;RP1=0, select bank0
 11151  0590  082B               	movf	?___xxtofl,w
 11152  0591  1683               	bsf	3,5	;RP0=1, select bank3
 11153  0592  1703               	bsf	3,6	;RP1=1, select bank3
 11154  0593  0098               	movwf	_SetPoint1^(0+384)	;volatile
 11155                           
 11156                           ;SlaveLiofilizadorVer1.c: 993:      SetPoint1/=10;
 11157  0594  3041               	movlw	65
 11158  0595  1303               	bcf	3,6	;RP1=0, select bank1
 11159  0596  00A3               	movwf	(___fldiv@a+3)^(0+128)
 11160  0597  3020               	movlw	32
 11161  0598  00A2               	movwf	(___fldiv@a+2)^(0+128)
 11162  0599  01A1               	clrf	(___fldiv@a+1)^(0+128)
 11163  059A  01A0               	clrf	___fldiv@a^(0+128)
 11164  059B  1703               	bsf	3,6	;RP1=1, select bank3
 11165  059C  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
 11166  059D  1303               	bcf	3,6	;RP1=0, select bank1
 11167  059E  00A7               	movwf	(___fldiv@b+3)^(0+128)
 11168  059F  1703               	bsf	3,6	;RP1=1, select bank3
 11169  05A0  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
 11170  05A1  1303               	bcf	3,6	;RP1=0, select bank1
 11171  05A2  00A6               	movwf	(___fldiv@b+2)^(0+128)
 11172  05A3  1703               	bsf	3,6	;RP1=1, select bank3
 11173  05A4  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
 11174  05A5  1303               	bcf	3,6	;RP1=0, select bank1
 11175  05A6  00A5               	movwf	(___fldiv@b+1)^(0+128)
 11176  05A7  1703               	bsf	3,6	;RP1=1, select bank3
 11177  05A8  0818               	movf	_SetPoint1^(0+384),w	;volatile
 11178  05A9  1303               	bcf	3,6	;RP1=0, select bank1
 11179  05AA  00A4               	movwf	___fldiv@b^(0+128)
 11180  05AB  160A  118A  2517  120A  118A  	fcall	___fldiv
 11181  05B0  0823               	movf	(?___fldiv+3)^(0+128),w
 11182  05B1  1703               	bsf	3,6	;RP1=1, select bank3
 11183  05B2  009B               	movwf	(_SetPoint1+3)^(0+384)	;volatile
 11184  05B3  1303               	bcf	3,6	;RP1=0, select bank1
 11185  05B4  0822               	movf	(?___fldiv+2)^(0+128),w
 11186  05B5  1703               	bsf	3,6	;RP1=1, select bank3
 11187  05B6  009A               	movwf	(_SetPoint1+2)^(0+384)	;volatile
 11188  05B7  1303               	bcf	3,6	;RP1=0, select bank1
 11189  05B8  0821               	movf	(?___fldiv+1)^(0+128),w
 11190  05B9  1703               	bsf	3,6	;RP1=1, select bank3
 11191  05BA  0099               	movwf	(_SetPoint1+1)^(0+384)	;volatile
 11192  05BB  1303               	bcf	3,6	;RP1=0, select bank1
 11193  05BC  0820               	movf	?___fldiv^(0+128),w
 11194  05BD  1703               	bsf	3,6	;RP1=1, select bank3
 11195  05BE  0098               	movwf	_SetPoint1^(0+384)	;volatile
 11196                           
 11197                           ;SlaveLiofilizadorVer1.c: 994:      TempoON_1 = EEPROM_Read_Byte(9);
 11198  05BF  3009               	movlw	9
 11199  05C0  25E1  120A  118A   	fcall	_EEPROM_Read_Byte
 11200  05C3  1683               	bsf	3,5	;RP0=1, select bank3
 11201  05C4  00B7               	movwf	_TempoON_1^(0+384)
 11202                           
 11203                           ;SlaveLiofilizadorVer1.c: 995:      TempoOFF_1= EEPROM_Read_Byte(10);
 11204  05C5  300A               	movlw	10
 11205  05C6  25E1  120A  118A   	fcall	_EEPROM_Read_Byte
 11206  05C9  1683               	bsf	3,5	;RP0=1, select bank3
 11207  05CA  00B6               	movwf	_TempoOFF_1^(0+384)
 11208                           
 11209                           ;SlaveLiofilizadorVer1.c: 996:      Histerese1= EEPROM_Read_Byte(11);
 11210  05CB  300B               	movlw	11
 11211  05CC  25E1  120A  118A   	fcall	_EEPROM_Read_Byte
 11212  05CF  1683               	bsf	3,5	;RP0=1, select bank3
 11213  05D0  00B8               	movwf	_Histerese1^(0+384)
 11214                           
 11215                           ;SlaveLiofilizadorVer1.c: 997:      Status1 = EEPROM_Read_Integer(12);
 11216  05D1  300C               	movlw	12
 11217  05D2  2602  120A  118A   	fcall	_EEPROM_Read_Integer
 11218  05D5  0824               	movf	?_EEPROM_Read_Integer+1,w
 11219  05D6  1683               	bsf	3,5	;RP0=1, select bank3
 11220  05D7  1703               	bsf	3,6	;RP1=1, select bank3
 11221  05D8  00A7               	movwf	(_Status1+1)^(0+384)
 11222  05D9  1283               	bcf	3,5	;RP0=0, select bank0
 11223  05DA  1303               	bcf	3,6	;RP1=0, select bank0
 11224  05DB  0823               	movf	?_EEPROM_Read_Integer,w
 11225  05DC  1683               	bsf	3,5	;RP0=1, select bank3
 11226  05DD  1703               	bsf	3,6	;RP1=1, select bank3
 11227  05DE  00A6               	movwf	_Status1^(0+384)
 11228                           
 11229                           ;SlaveLiofilizadorVer1.c: 999:      statuspower.bits=EEPROM_Read_Byte(14);
 11230  05DF  300E               	movlw	14
 11231  05E0  2DE1               	ljmp	_EEPROM_Read_Byte
 11232  05E1                     __end_of_Load_Work:	
 11233  05E1                     __ptext46:	
 11234 ;; *************** function _EEPROM_Read_Byte *****************
 11235 ;; Defined at:
 11236 ;;		line 52 in file "eeprom.c"
 11237 ;; Parameters:    Size  Location     Type
 11238 ;;  addr            1    wreg     unsigned char 
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;  addr            1    2[BANK0 ] unsigned char 
 11241 ;; Return value:  Size  Location     Type
 11242 ;;                  1    wreg      unsigned char 
 11243 ;; Registers used:
 11244 ;;		wreg
 11245 ;; Tracked objects:
 11246 ;;		On entry : 0/300
 11247 ;;		On exit  : 300/200
 11248 ;;		Unchanged: 0/0
 11249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11250 ;;      Params:         0       0       0       0       0
 11251 ;;      Locals:         0       1       0       0       0
 11252 ;;      Temps:          0       2       0       0       0
 11253 ;;      Totals:         0       3       0       0       0
 11254 ;;Total ram usage:        3 bytes
 11255 ;; Hardware stack levels used:    1
 11256 ;; Hardware stack levels required when called:    1
 11257 ;; This function calls:
 11258 ;;		Nothing
 11259 ;; This function is called by:
 11260 ;;		_Decodify_Command
 11261 ;;		_Load_Work
 11262 ;;		_EEPROM_Read_Integer
 11263 ;;		_EEPROM_Read_String
 11264 ;; This function uses a non-reentrant model
 11265 ;;
 11266                           
 11267                           
 11268                           ;psect for function _EEPROM_Read_Byte
 11269  05E1                     _EEPROM_Read_Byte:	
 11270                           
 11271                           ;incstack = 0
 11272                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 11273                           ;EEPROM_Read_Byte@addr stored from wreg
 11274  05E1  1283               	bcf	3,5	;RP0=0, select bank0
 11275  05E2  1303               	bcf	3,6	;RP1=0, select bank0
 11276  05E3  00A2               	movwf	EEPROM_Read_Byte@addr
 11277                           
 11278                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 11279  05E4  3014               	movlw	20
 11280  05E5  1683               	bsf	3,5	;RP0=1, select bank3
 11281  05E6  1703               	bsf	3,6	;RP1=1, select bank3
 11282  05E7  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 11283  05E8  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 11284  05E9                     l484:	
 11285                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 11286                           
 11287  05E9  188C               	btfsc	12,1	;volsfr
 11288  05EA  2DE9               	goto	l484
 11289                           
 11290                           ;eeprom.c: 57:    EEADR=addr;
 11291  05EB  1283               	bcf	3,5	;RP0=0, select bank0
 11292  05EC  1303               	bcf	3,6	;RP1=0, select bank0
 11293  05ED  0822               	movf	EEPROM_Read_Byte@addr,w
 11294  05EE  1703               	bsf	3,6	;RP1=1, select bank2
 11295  05EF  008D               	movwf	13	;volatile
 11296                           
 11297                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 11298  05F0  1683               	bsf	3,5	;RP0=1, select bank3
 11299  05F1  138C               	bcf	12,7	;volsfr
 11300                           
 11301                           ;eeprom.c: 59:    EECON1bits.RD=1;
 11302  05F2  140C               	bsf	12,0	;volsfr
 11303                           
 11304                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 11305  05F3  304E               	movlw	78
 11306  05F4  1283               	bcf	3,5	;RP0=0, select bank0
 11307  05F5  1303               	bcf	3,6	;RP1=0, select bank0
 11308  05F6  00A1               	movwf	??_EEPROM_Read_Byte+1
 11309  05F7  30EA               	movlw	234
 11310  05F8  00A0               	movwf	??_EEPROM_Read_Byte
 11311  05F9                     u6597:	
 11312  05F9  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 11313  05FA  2DF9               	goto	u6597
 11314  05FB  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 11315  05FC  2DF9               	goto	u6597
 11316  05FD  0000               	nop
 11317                           
 11318                           ;eeprom.c: 61:    return EEDATA;
 11319  05FE  1283               	bcf	3,5	;RP0=0, select bank2
 11320  05FF  1703               	bsf	3,6	;RP1=1, select bank2
 11321  0600  080C               	movf	12,w	;volatile
 11322  0601  0008               	return
 11323  0602                     __end_of_EEPROM_Read_Byte:	
 11324  0602                     __ptext41:	
 11325 ;; *************** function _EEPROM_Read_Integer *****************
 11326 ;; Defined at:
 11327 ;;		line 81 in file "eeprom.c"
 11328 ;; Parameters:    Size  Location     Type
 11329 ;;  addr            1    wreg     unsigned char 
 11330 ;; Auto vars:     Size  Location     Type
 11331 ;;  addr            1    6[BANK0 ] unsigned char 
 11332 ;;  result          2    8[BANK0 ] unsigned int 
 11333 ;;  i               1   10[BANK0 ] unsigned char 
 11334 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 11335 ;;		 -> EEPROM_Read_Integer@result(2), 
 11336 ;; Return value:  Size  Location     Type
 11337 ;;                  2    3[BANK0 ] unsigned int 
 11338 ;; Registers used:
 11339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11340 ;; Tracked objects:
 11341 ;;		On entry : 0/0
 11342 ;;		On exit  : B00/0
 11343 ;;		Unchanged: 0/0
 11344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11345 ;;      Params:         0       3       0       0       0
 11346 ;;      Locals:         0       5       0       0       0
 11347 ;;      Temps:          0       0       0       0       0
 11348 ;;      Totals:         0       8       0       0       0
 11349 ;;Total ram usage:        8 bytes
 11350 ;; Hardware stack levels used:    1
 11351 ;; Hardware stack levels required when called:    2
 11352 ;; This function calls:
 11353 ;;		_EEPROM_Read_Byte
 11354 ;; This function is called by:
 11355 ;;		_main
 11356 ;;		_Decodify_Command
 11357 ;;		_Load_Work
 11358 ;; This function uses a non-reentrant model
 11359 ;;
 11360                           
 11361                           
 11362                           ;psect for function _EEPROM_Read_Integer
 11363  0602                     _EEPROM_Read_Integer:	
 11364                           
 11365                           ;incstack = 0
 11366                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11367                           ;EEPROM_Read_Integer@addr stored from wreg
 11368  0602  1283               	bcf	3,5	;RP0=0, select bank0
 11369  0603  1303               	bcf	3,6	;RP1=0, select bank0
 11370  0604  00A6               	movwf	EEPROM_Read_Integer@addr
 11371                           
 11372                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 11373  0605  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 11374  0606  00A7               	movwf	EEPROM_Read_Integer@ptr
 11375                           
 11376                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 11377  0607  01AA               	clrf	EEPROM_Read_Integer@i
 11378  0608                     l6316:	
 11379                           
 11380                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 11381  0608  0827               	movf	EEPROM_Read_Integer@ptr,w
 11382  0609  0084               	movwf	4
 11383  060A  0826               	movf	EEPROM_Read_Integer@addr,w
 11384  060B  25E1  120A  118A   	fcall	_EEPROM_Read_Byte
 11385  060E  1383               	bcf	3,7	;select IRP bank0
 11386  060F  0080               	movwf	0
 11387  0610  1303               	bcf	3,6	;RP1=0, select bank0
 11388  0611  3002               	movlw	2
 11389  0612  0AA6               	incf	EEPROM_Read_Integer@addr,f
 11390  0613  0AA7               	incf	EEPROM_Read_Integer@ptr,f
 11391  0614  0AAA               	incf	EEPROM_Read_Integer@i,f
 11392  0615  022A               	subwf	EEPROM_Read_Integer@i,w
 11393  0616  1C03               	skipc
 11394  0617  2E08               	goto	l6316
 11395                           
 11396                           ;eeprom.c: 89:       return result;
 11397  0618  0829               	movf	EEPROM_Read_Integer@result+1,w
 11398  0619  00A4               	movwf	?_EEPROM_Read_Integer+1
 11399  061A  0828               	movf	EEPROM_Read_Integer@result,w
 11400  061B  00A3               	movwf	?_EEPROM_Read_Integer
 11401  061C  0008               	return
 11402  061D                     __end_of_EEPROM_Read_Integer:	
 11403  061D                     PL16:	
 11404  061D  0823               	movf	?_EEPROM_Read_Integer,w
 11405  061E  1683               	bsf	3,5	;RP0=1, select bank1
 11406  061F  00B9               	movwf	??_Load_Work^(0+128)
 11407  0620  1283               	bcf	3,5	;RP0=0, select bank0
 11408  0621  0824               	movf	?_EEPROM_Read_Integer+1,w
 11409  0622  1683               	bsf	3,5	;RP0=1, select bank1
 11410  0623  00BA               	movwf	(??_Load_Work^(0+128)+1)
 11411  0624  01BB               	clrf	(??_Load_Work^(0+128)+2)
 11412  0625  01BC               	clrf	(??_Load_Work^(0+128)+3)
 11413  0626  083C               	movf	(??_Load_Work+3)^(0+128),w
 11414  0627  1283               	bcf	3,5	;RP0=0, select bank0
 11415  0628  00AE               	movwf	___xxtofl@val+3
 11416  0629  1683               	bsf	3,5	;RP0=1, select bank1
 11417  062A  083B               	movf	(??_Load_Work+2)^(0+128),w
 11418  062B  1283               	bcf	3,5	;RP0=0, select bank0
 11419  062C  00AD               	movwf	___xxtofl@val+2
 11420  062D  1683               	bsf	3,5	;RP0=1, select bank1
 11421  062E  083A               	movf	(??_Load_Work+1)^(0+128),w
 11422  062F  1283               	bcf	3,5	;RP0=0, select bank0
 11423  0630  00AC               	movwf	___xxtofl@val+1
 11424  0631  1683               	bsf	3,5	;RP0=1, select bank1
 11425  0632  0839               	movf	??_Load_Work^(0+128),w
 11426  0633  1283               	bcf	3,5	;RP0=0, select bank0
 11427  0634  00AB               	movwf	___xxtofl@val
 11428  0635  3400               	retlw	0
 11429  0636                     __end_ofPL16:	
 11430                           
 11431                           	psect	text48
 11432  1C3C                     __ptext48:	
 11433 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 11434 ;; Defined at:
 11435 ;;		line 262 in file "EEPROM_24C1025.c"
 11436 ;; Parameters:    Size  Location     Type
 11437 ;;  chip_add        1    wreg     unsigned char 
 11438 ;;  mem_add         4   15[BANK0 ] unsigned long 
 11439 ;;  data            1   19[BANK0 ] unsigned char 
 11440 ;; Auto vars:     Size  Location     Type
 11441 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11442 ;; Return value:  Size  Location     Type
 11443 ;;                  1    wreg      void 
 11444 ;; Registers used:
 11445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11446 ;; Tracked objects:
 11447 ;;		On entry : 300/300
 11448 ;;		On exit  : 0/0
 11449 ;;		Unchanged: 0/0
 11450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11451 ;;      Params:         0       5       0       0       0
 11452 ;;      Locals:         0       1       0       0       0
 11453 ;;      Temps:          0       0       0       0       0
 11454 ;;      Totals:         0       6       0       0       0
 11455 ;;Total ram usage:        6 bytes
 11456 ;; Hardware stack levels used:    1
 11457 ;; Hardware stack levels required when called:    4
 11458 ;; This function calls:
 11459 ;;		_EEPROM_24C1025_Write_Buffer
 11460 ;; This function is called by:
 11461 ;;		_Decodify_Command
 11462 ;; This function uses a non-reentrant model
 11463 ;;
 11464                           
 11465                           
 11466                           ;psect for function _EEPROM_24C1025_Write_Byte
 11467  1C3C                     _EEPROM_24C1025_Write_Byte:	
 11468                           
 11469                           ;incstack = 0
 11470                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11471                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 11472  1C3C  1283               	bcf	3,5	;RP0=0, select bank0
 11473  1C3D  1303               	bcf	3,6	;RP1=0, select bank0
 11474  1C3E  00B4               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 11475                           
 11476                           ;EEPROM_24C1025.c: 263:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 11477  1C3F  0832               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 11478  1C40  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 11479  1C41  0831               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 11480  1C42  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 11481  1C43  0830               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 11482  1C44  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 11483  1C45  082F               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 11484  1C46  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 11485  1C47  3033               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 11486  1C48  01A6               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 11487  1C49  0AA6               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 11488  1C4A  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 11489  1C4B  01A8               	clrf	EEPROM_24C1025_Write_Buffer@data+1
 11490  1C4C  0834               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 11491  1C4D  120A  158A  2E53   	ljmp	_EEPROM_24C1025_Write_Buffer
 11492  1C50                     __end_of_EEPROM_24C1025_Write_Byte:	
 11493                           
 11494                           	psect	text50
 11495  1C7D                     __ptext50:	
 11496 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 11497 ;; Defined at:
 11498 ;;		line 281 in file "EEPROM_24C1025.c"
 11499 ;; Parameters:    Size  Location     Type
 11500 ;;  chip_add        1    wreg     unsigned char 
 11501 ;;  mem_add         4   17[BANK0 ] unsigned long 
 11502 ;; Auto vars:     Size  Location     Type
 11503 ;;  chip_add        1   21[BANK0 ] unsigned char 
 11504 ;;  data            2   22[BANK0 ] unsigned char [2]
 11505 ;; Return value:  Size  Location     Type
 11506 ;;                  2   17[BANK0 ] unsigned int 
 11507 ;; Registers used:
 11508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11509 ;; Tracked objects:
 11510 ;;		On entry : 300/300
 11511 ;;		On exit  : 300/0
 11512 ;;		Unchanged: 0/0
 11513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11514 ;;      Params:         0       4       0       0       0
 11515 ;;      Locals:         0       3       0       0       0
 11516 ;;      Temps:          0       0       0       0       0
 11517 ;;      Totals:         0       7       0       0       0
 11518 ;;Total ram usage:        7 bytes
 11519 ;; Hardware stack levels used:    1
 11520 ;; Hardware stack levels required when called:    4
 11521 ;; This function calls:
 11522 ;;		_EEPROM_24C1025_Read_Buffer
 11523 ;; This function is called by:
 11524 ;;		_Decodify_Command
 11525 ;; This function uses a non-reentrant model
 11526 ;;
 11527                           
 11528                           
 11529                           ;psect for function _EEPROM_24C1025_Read_Int
 11530  1C7D                     _EEPROM_24C1025_Read_Int:	
 11531                           
 11532                           ;incstack = 0
 11533                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11534                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 11535  1C7D  1283               	bcf	3,5	;RP0=0, select bank0
 11536  1C7E  1303               	bcf	3,6	;RP1=0, select bank0
 11537  1C7F  00B5               	movwf	EEPROM_24C1025_Read_Int@chip_add
 11538                           
 11539                           ;EEPROM_24C1025.c: 282:     char data[2];;EEPROM_24C1025.c: 283:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 11540  1C80  0834               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 11541  1C81  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11542  1C82  0833               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 11543  1C83  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11544  1C84  0832               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 11545  1C85  00A5               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11546  1C86  0831               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 11547  1C87  00A4               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11548  1C88  3002               	movlw	2
 11549  1C89  00A8               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 11550  1C8A  3036               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 11551  1C8B  00A9               	movwf	EEPROM_24C1025_Read_Buffer@data
 11552  1C8C  01AA               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 11553  1C8D  0835               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 11554  1C8E  120A  158A  2570   	fcall	_EEPROM_24C1025_Read_Buffer
 11555                           
 11556                           ;EEPROM_24C1025.c: 284:     return (data[0]<<8)+data[1];
 11557  1C91  1283               	bcf	3,5	;RP0=0, select bank0
 11558  1C92  1303               	bcf	3,6	;RP1=0, select bank0
 11559  1C93  0836               	movf	EEPROM_24C1025_Read_Int@data,w
 11560  1C94  00B2               	movwf	?_EEPROM_24C1025_Read_Int+1
 11561  1C95  0837               	movf	EEPROM_24C1025_Read_Int@data+1,w
 11562  1C96  00B1               	movwf	?_EEPROM_24C1025_Read_Int
 11563  1C97  0008               	return
 11564  1C98                     __end_of_EEPROM_24C1025_Read_Int:	
 11565                           
 11566                           	psect	text51
 11567  1C65                     __ptext51:	
 11568 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 11569 ;; Defined at:
 11570 ;;		line 267 in file "EEPROM_24C1025.c"
 11571 ;; Parameters:    Size  Location     Type
 11572 ;;  chip_add        1    wreg     unsigned char 
 11573 ;;  mem_add         4   17[BANK0 ] unsigned long 
 11574 ;; Auto vars:     Size  Location     Type
 11575 ;;  chip_add        1   21[BANK0 ] unsigned char 
 11576 ;;  data            1   22[BANK0 ] unsigned char 
 11577 ;; Return value:  Size  Location     Type
 11578 ;;                  1    wreg      unsigned char 
 11579 ;; Registers used:
 11580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11581 ;; Tracked objects:
 11582 ;;		On entry : 300/300
 11583 ;;		On exit  : 300/0
 11584 ;;		Unchanged: 0/0
 11585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11586 ;;      Params:         0       4       0       0       0
 11587 ;;      Locals:         0       2       0       0       0
 11588 ;;      Temps:          0       0       0       0       0
 11589 ;;      Totals:         0       6       0       0       0
 11590 ;;Total ram usage:        6 bytes
 11591 ;; Hardware stack levels used:    1
 11592 ;; Hardware stack levels required when called:    4
 11593 ;; This function calls:
 11594 ;;		_EEPROM_24C1025_Read_Buffer
 11595 ;; This function is called by:
 11596 ;;		_Decodify_Command
 11597 ;; This function uses a non-reentrant model
 11598 ;;
 11599                           
 11600                           
 11601                           ;psect for function _EEPROM_24C1025_Read_Byte
 11602  1C65                     _EEPROM_24C1025_Read_Byte:	
 11603                           
 11604                           ;incstack = 0
 11605                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11606                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 11607  1C65  1283               	bcf	3,5	;RP0=0, select bank0
 11608  1C66  1303               	bcf	3,6	;RP1=0, select bank0
 11609  1C67  00B5               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 11610                           
 11611                           ;EEPROM_24C1025.c: 268:     char data;;EEPROM_24C1025.c: 269:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 11612  1C68  0834               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 11613  1C69  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11614  1C6A  0833               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 11615  1C6B  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11616  1C6C  0832               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 11617  1C6D  00A5               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11618  1C6E  0831               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 11619  1C6F  00A4               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11620  1C70  3036               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 11621  1C71  01A8               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 11622  1C72  0AA8               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 11623  1C73  00A9               	movwf	EEPROM_24C1025_Read_Buffer@data
 11624  1C74  01AA               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 11625  1C75  0835               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 11626  1C76  120A  158A  2570   	fcall	_EEPROM_24C1025_Read_Buffer
 11627                           
 11628                           ;EEPROM_24C1025.c: 270:     return data;
 11629  1C79  1283               	bcf	3,5	;RP0=0, select bank0
 11630  1C7A  1303               	bcf	3,6	;RP1=0, select bank0
 11631  1C7B  0836               	movf	EEPROM_24C1025_Read_Byte@data,w
 11632  1C7C  0008               	return
 11633  1C7D                     __end_of_EEPROM_24C1025_Read_Byte:	
 11634                           
 11635                           	psect	text55
 11636  0037                     __ptext55:	
 11637 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 11638 ;; Defined at:
 11639 ;;		line 288 in file "EEPROM_24C1025.c"
 11640 ;; Parameters:    Size  Location     Type
 11641 ;;  chip_add        1    wreg     unsigned char 
 11642 ;;  value           2   17[BANK1 ] unsigned int 
 11643 ;; Auto vars:     Size  Location     Type
 11644 ;;  chip_add        1   19[BANK1 ] unsigned char 
 11645 ;;  mem_add         4   20[BANK1 ] unsigned long 
 11646 ;; Return value:  Size  Location     Type
 11647 ;;                  1    wreg      void 
 11648 ;; Registers used:
 11649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11650 ;; Tracked objects:
 11651 ;;		On entry : 300/300
 11652 ;;		On exit  : 300/100
 11653 ;;		Unchanged: 0/0
 11654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11655 ;;      Params:         0       0       2       0       0
 11656 ;;      Locals:         0       0       5       0       0
 11657 ;;      Temps:          0       0       0       0       0
 11658 ;;      Totals:         0       0       7       0       0
 11659 ;;Total ram usage:        7 bytes
 11660 ;; Hardware stack levels used:    1
 11661 ;; Hardware stack levels required when called:    5
 11662 ;; This function calls:
 11663 ;;		_EEPROM_24C1025_Write_Int
 11664 ;; This function is called by:
 11665 ;;		_Decodify_Command
 11666 ;; This function uses a non-reentrant model
 11667 ;;
 11668                           
 11669                           
 11670                           ;psect for function _EEPROM_24C1025_Fill_All
 11671  0037                     _EEPROM_24C1025_Fill_All:	
 11672                           
 11673                           ;incstack = 0
 11674                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11675                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 11676  0037  1303               	bcf	3,6	;RP1=0, select bank1
 11677  0038  00B3               	movwf	EEPROM_24C1025_Fill_All@chip_add^(0+128)
 11678                           
 11679                           ;EEPROM_24C1025.c: 289:      unsigned long mem_add;;EEPROM_24C1025.c: 290:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 11680  0039  01B4               	clrf	EEPROM_24C1025_Fill_All@mem_add^(0+128)
 11681  003A  01B5               	clrf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128)
 11682  003B  01B6               	clrf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128)
 11683  003C  01B7               	clrf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128)
 11684  003D                     l6794:	
 11685                           
 11686                           ;EEPROM_24C1025.c: 291:         {;EEPROM_24C1025.c: 292:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 11687  003D  0837               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 11688  003E  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
 11689  003F  0836               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 11690  0040  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
 11691  0041  0835               	movf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 11692  0042  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
 11693  0043  0834               	movf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 11694  0044  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
 11695  0045  0832               	movf	(EEPROM_24C1025_Fill_All@value+1)^(0+128),w
 11696  0046  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
 11697  0047  0831               	movf	EEPROM_24C1025_Fill_All@value^(0+128),w
 11698  0048  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
 11699  0049  0833               	movf	EEPROM_24C1025_Fill_All@chip_add^(0+128),w
 11700  004A  20CC  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 11701  004D  0064               	clrwdt	;# 
 11702                           
 11703                           ;EEPROM_24C1025.c: 294:         }
 11704  004E  3002               	movlw	2
 11705  004F  1683               	bsf	3,5	;RP0=1, select bank1
 11706  0050  1303               	bcf	3,6	;RP1=0, select bank1
 11707  0051  07B4               	addwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),f
 11708  0052  3001               	movlw	1
 11709  0053  1803               	skipnc
 11710  0054  07B5               	addwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),f
 11711  0055  1803               	skipnc
 11712  0056  07B6               	addwf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),f
 11713  0057  1803               	skipnc
 11714  0058  07B7               	addwf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),f
 11715  0059  0837               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 11716  005A  1D03               	btfss	3,2
 11717  005B  0008               	return
 11718  005C  0836               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 11719  005D  1D03               	btfss	3,2
 11720  005E  0008               	return
 11721  005F  3004               	movlw	4
 11722  0060  0235               	subwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 11723  0061  1D03               	skipz
 11724  0062  2865               	goto	u6003
 11725  0063  3000               	movlw	0
 11726  0064  0234               	subwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 11727  0065                     u6003:	
 11728  0065  1803               	btfsc	3,0
 11729  0066  0008               	return
 11730  0067  283D               	goto	l6794
 11731  0068                     __end_of_EEPROM_24C1025_Fill_All:	
 11732  0068                     __ptext25:	
 11733 ;; *************** function _Save_Log *****************
 11734 ;; Defined at:
 11735 ;;		line 1005 in file "SlaveLiofilizadorVer1.c"
 11736 ;; Parameters:    Size  Location     Type
 11737 ;;  add_datalog     4   17[BANK1 ] unsigned long 
 11738 ;; Auto vars:     Size  Location     Type
 11739 ;;		None
 11740 ;; Return value:  Size  Location     Type
 11741 ;;                  1    wreg      void 
 11742 ;; Registers used:
 11743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11744 ;; Tracked objects:
 11745 ;;		On entry : 300/100
 11746 ;;		On exit  : 0/0
 11747 ;;		Unchanged: 0/0
 11748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11749 ;;      Params:         0       0       4       0       0
 11750 ;;      Locals:         0       0       0       0       0
 11751 ;;      Temps:          0       0       4       0       0
 11752 ;;      Totals:         0       0       8       0       0
 11753 ;;Total ram usage:        8 bytes
 11754 ;; Hardware stack levels used:    1
 11755 ;; Hardware stack levels required when called:    5
 11756 ;; This function calls:
 11757 ;;		_EEPROM_24C1025_Write_Int
 11758 ;;		___flmul
 11759 ;;		___fltol
 11760 ;; This function is called by:
 11761 ;;		_Decodify_Command
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           
 11765                           
 11766                           ;psect for function _Save_Log
 11767  0068                     _Save_Log:	
 11768                           
 11769                           ;SlaveLiofilizadorVer1.c: 1006:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (int) (
      +                          Temperatura0*10.0));
 11770                           
 11771                           ;incstack = 0
 11772                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11773  0068  2340  120A  118A   	fcall	PL40	;call to abstracted procedure
 11774  006B  0817               	movf	(_Temperatura0+3)^(0+384),w
 11775  006C  1283               	bcf	3,5	;RP0=0, select bank0
 11776  006D  1303               	bcf	3,6	;RP1=0, select bank0
 11777  006E  00DC               	movwf	___flmul@a+3
 11778  006F  1683               	bsf	3,5	;RP0=1, select bank3
 11779  0070  1703               	bsf	3,6	;RP1=1, select bank3
 11780  0071  0816               	movf	(_Temperatura0+2)^(0+384),w
 11781  0072  1283               	bcf	3,5	;RP0=0, select bank0
 11782  0073  1303               	bcf	3,6	;RP1=0, select bank0
 11783  0074  00DB               	movwf	___flmul@a+2
 11784  0075  1683               	bsf	3,5	;RP0=1, select bank3
 11785  0076  1703               	bsf	3,6	;RP1=1, select bank3
 11786  0077  0815               	movf	(_Temperatura0+1)^(0+384),w
 11787  0078  1283               	bcf	3,5	;RP0=0, select bank0
 11788  0079  1303               	bcf	3,6	;RP1=0, select bank0
 11789  007A  00DA               	movwf	___flmul@a+1
 11790  007B  1683               	bsf	3,5	;RP0=1, select bank3
 11791  007C  1703               	bsf	3,6	;RP1=1, select bank3
 11792  007D  0814               	movf	_Temperatura0^(0+384),w
 11793  007E  2336  120A  118A   	fcall	PL38	;call to abstracted procedure
 11794  0081  20EB  120A  118A   	fcall	___flmul
 11795  0084  2309  120A  118A   	fcall	PL20	;call to abstracted procedure
 11796  0087  225A  120A  118A   	fcall	___fltol
 11797  008A  1683               	bsf	3,5	;RP0=1, select bank1
 11798  008B  0821               	movf	(?___fltol+1)^(0+128),w
 11799  008C  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
 11800  008D  0820               	movf	?___fltol^(0+128),w
 11801  008E  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
 11802  008F  3000               	movlw	0
 11803  0090  20CC  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 11804                           
 11805                           ;SlaveLiofilizadorVer1.c: 1007:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (int) (
      +                          Temperatura1*10.0));
 11806  0093  1683               	bsf	3,5	;RP0=1, select bank1
 11807  0094  1303               	bcf	3,6	;RP1=0, select bank1
 11808  0095  2340  120A  118A   	fcall	PL40	;call to abstracted procedure
 11809  0098  0813               	movf	(_Temperatura1+3)^(0+384),w
 11810  0099  1283               	bcf	3,5	;RP0=0, select bank0
 11811  009A  1303               	bcf	3,6	;RP1=0, select bank0
 11812  009B  00DC               	movwf	___flmul@a+3
 11813  009C  1683               	bsf	3,5	;RP0=1, select bank3
 11814  009D  1703               	bsf	3,6	;RP1=1, select bank3
 11815  009E  0812               	movf	(_Temperatura1+2)^(0+384),w
 11816  009F  1283               	bcf	3,5	;RP0=0, select bank0
 11817  00A0  1303               	bcf	3,6	;RP1=0, select bank0
 11818  00A1  00DB               	movwf	___flmul@a+2
 11819  00A2  1683               	bsf	3,5	;RP0=1, select bank3
 11820  00A3  1703               	bsf	3,6	;RP1=1, select bank3
 11821  00A4  0811               	movf	(_Temperatura1+1)^(0+384),w
 11822  00A5  1283               	bcf	3,5	;RP0=0, select bank0
 11823  00A6  1303               	bcf	3,6	;RP1=0, select bank0
 11824  00A7  00DA               	movwf	___flmul@a+1
 11825  00A8  1683               	bsf	3,5	;RP0=1, select bank3
 11826  00A9  1703               	bsf	3,6	;RP1=1, select bank3
 11827  00AA  0810               	movf	_Temperatura1^(0+384),w
 11828  00AB  2336  120A  118A   	fcall	PL38	;call to abstracted procedure
 11829  00AE  20EB  120A  118A   	fcall	___flmul
 11830  00B1  2309  120A  118A   	fcall	PL20	;call to abstracted procedure
 11831  00B4  225A  120A  118A   	fcall	___fltol
 11832  00B7  1683               	bsf	3,5	;RP0=1, select bank1
 11833  00B8  0821               	movf	(?___fltol+1)^(0+128),w
 11834  00B9  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
 11835  00BA  0820               	movf	?___fltol^(0+128),w
 11836  00BB  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
 11837  00BC  3001               	movlw	1
 11838  00BD  20CC  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 11839                           
 11840                           ;SlaveLiofilizadorVer1.c: 1009:      EEPROM_24C1025_Write_Int(0x00, add_datalog+2, 0xFFF
      +                          F);
 11841  00C0  22D7  120A  118A   	fcall	PL12	;call to abstracted procedure
 11842  00C3  3000               	movlw	0
 11843  00C4  20CC  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 11844                           
 11845                           ;SlaveLiofilizadorVer1.c: 1010:      EEPROM_24C1025_Write_Int(0x01, add_datalog+2, 0xFFF
      +                          F);
 11846  00C7  22D7  120A  118A   	fcall	PL12	;call to abstracted procedure
 11847  00CA  3001               	movlw	1
 11848  00CB  28CC               	ljmp	_EEPROM_24C1025_Write_Int
 11849  00CC                     __end_of_Save_Log:	
 11850  00CC                     __ptext56:	
 11851 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 11852 ;; Defined at:
 11853 ;;		line 273 in file "EEPROM_24C1025.c"
 11854 ;; Parameters:    Size  Location     Type
 11855 ;;  chip_add        1    wreg     unsigned char 
 11856 ;;  mem_add         4    8[BANK1 ] unsigned long 
 11857 ;;  data            2   12[BANK1 ] int 
 11858 ;; Auto vars:     Size  Location     Type
 11859 ;;  chip_add        1   14[BANK1 ] unsigned char 
 11860 ;;  local           2   15[BANK1 ] unsigned char [2]
 11861 ;; Return value:  Size  Location     Type
 11862 ;;                  1    wreg      void 
 11863 ;; Registers used:
 11864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11865 ;; Tracked objects:
 11866 ;;		On entry : 100/300
 11867 ;;		On exit  : 0/0
 11868 ;;		Unchanged: 0/0
 11869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11870 ;;      Params:         0       0       6       0       0
 11871 ;;      Locals:         0       0       3       0       0
 11872 ;;      Temps:          0       0       0       0       0
 11873 ;;      Totals:         0       0       9       0       0
 11874 ;;Total ram usage:        9 bytes
 11875 ;; Hardware stack levels used:    1
 11876 ;; Hardware stack levels required when called:    4
 11877 ;; This function calls:
 11878 ;;		_EEPROM_24C1025_Write_Buffer
 11879 ;; This function is called by:
 11880 ;;		_Decodify_Command
 11881 ;;		_Save_Log
 11882 ;;		_EEPROM_24C1025_Fill_All
 11883 ;; This function uses a non-reentrant model
 11884 ;;
 11885                           
 11886                           
 11887                           ;psect for function _EEPROM_24C1025_Write_Int
 11888  00CC                     _EEPROM_24C1025_Write_Int:	
 11889                           
 11890                           ;incstack = 0
 11891                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11892                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 11893  00CC  1303               	bcf	3,6	;RP1=0, select bank1
 11894  00CD  00AE               	movwf	EEPROM_24C1025_Write_Int@chip_add^(0+128)
 11895                           
 11896                           ;EEPROM_24C1025.c: 274:      char local[2];;EEPROM_24C1025.c: 275:      local[0]=((char 
      +                          *)&data)[1];
 11897  00CE  082D               	movf	(EEPROM_24C1025_Write_Int@data^(0+128)+1),w
 11898  00CF  00AF               	movwf	EEPROM_24C1025_Write_Int@local^(0+128)
 11899                           
 11900                           ;EEPROM_24C1025.c: 276:      local[1]=((char *)&data)[0];
 11901  00D0  082C               	movf	EEPROM_24C1025_Write_Int@data^(0+128),w
 11902  00D1  00B0               	movwf	(EEPROM_24C1025_Write_Int@local^(0+128)+1)
 11903                           
 11904                           ;EEPROM_24C1025.c: 277:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 11905  00D2  082B               	movf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128),w
 11906  00D3  1283               	bcf	3,5	;RP0=0, select bank0
 11907  00D4  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 11908  00D5  1683               	bsf	3,5	;RP0=1, select bank1
 11909  00D6  082A               	movf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128),w
 11910  00D7  1283               	bcf	3,5	;RP0=0, select bank0
 11911  00D8  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 11912  00D9  1683               	bsf	3,5	;RP0=1, select bank1
 11913  00DA  0829               	movf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128),w
 11914  00DB  1283               	bcf	3,5	;RP0=0, select bank0
 11915  00DC  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 11916  00DD  1683               	bsf	3,5	;RP0=1, select bank1
 11917  00DE  0828               	movf	EEPROM_24C1025_Write_Int@mem_add^(0+128),w
 11918  00DF  1283               	bcf	3,5	;RP0=0, select bank0
 11919  00E0  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 11920  00E1  3002               	movlw	2
 11921  00E2  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 11922  00E3  30AF               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 11923  00E4  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 11924  00E5  01A8               	clrf	EEPROM_24C1025_Write_Buffer@data+1
 11925  00E6  1683               	bsf	3,5	;RP0=1, select bank1
 11926  00E7  082E               	movf	EEPROM_24C1025_Write_Int@chip_add^(0+128),w
 11927  00E8  120A  158A  2E53   	ljmp	_EEPROM_24C1025_Write_Buffer
 11928  00EB                     __end_of_EEPROM_24C1025_Write_Int:	
 11929  00EB                     __ptext27:	
 11930 ;; *************** function ___flmul *****************
 11931 ;; Defined at:
 11932 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
 11933 ;; Parameters:    Size  Location     Type
 11934 ;;  b               4   53[BANK0 ] long 
 11935 ;;  a               4   57[BANK0 ] long 
 11936 ;; Auto vars:     Size  Location     Type
 11937 ;;  prod            4   72[BANK0 ] struct .
 11938 ;;  grs             4   68[BANK0 ] unsigned long 
 11939 ;;  temp            2   76[BANK0 ] struct .
 11940 ;;  bexp            1   67[BANK0 ] unsigned char 
 11941 ;;  aexp            1   66[BANK0 ] unsigned char 
 11942 ;;  sign            1   65[BANK0 ] unsigned char 
 11943 ;; Return value:  Size  Location     Type
 11944 ;;                  4   53[BANK0 ] unsigned char 
 11945 ;; Registers used:
 11946 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11947 ;; Tracked objects:
 11948 ;;		On entry : 300/0
 11949 ;;		On exit  : 300/0
 11950 ;;		Unchanged: 0/0
 11951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11952 ;;      Params:         0       8       0       0       0
 11953 ;;      Locals:         0      13       0       0       0
 11954 ;;      Temps:          0       4       0       0       0
 11955 ;;      Totals:         0      25       0       0       0
 11956 ;;Total ram usage:       25 bytes
 11957 ;; Hardware stack levels used:    1
 11958 ;; Hardware stack levels required when called:    2
 11959 ;; This function calls:
 11960 ;;		__Umul8_16
 11961 ;; This function is called by:
 11962 ;;		_Decodify_Command
 11963 ;;		_Save_Log
 11964 ;;		_ADC_Read_NTC
 11965 ;;		_log
 11966 ;;		_eval_poly
 11967 ;; This function uses a non-reentrant model
 11968 ;;
 11969                           
 11970                           
 11971                           ;psect for function ___flmul
 11972  00EB                     ___flmul:	
 11973                           
 11974                           ;incstack = 0
 11975                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 11976  00EB  0858               	movf	___flmul@b+3,w
 11977  00EC  00E1               	movwf	___flmul@sign
 11978  00ED  3080               	movlw	128
 11979  00EE  05E1               	andwf	___flmul@sign,f
 11980  00EF  1003               	clrc
 11981  00F0  0D58               	rlf	___flmul@b+3,w
 11982  00F1  00E3               	movwf	___flmul@bexp
 11983  00F2  1BD7               	btfsc	___flmul@b+2,7
 11984  00F3  1463               	bsf	___flmul@bexp,0
 11985  00F4  0863               	movf	___flmul@bexp,w
 11986  00F5  1903               	btfsc	3,2
 11987  00F6  28FF               	goto	l1376
 11988  00F7  0F63               	incfsz	___flmul@bexp,w
 11989  00F8  28FD               	goto	l1377
 11990  00F9  01D5               	clrf	___flmul@b
 11991  00FA  01D6               	clrf	___flmul@b+1
 11992  00FB  01D7               	clrf	___flmul@b+2
 11993  00FC  01D8               	clrf	___flmul@b+3
 11994  00FD                     l1377:	
 11995  00FD  17D7               	bsf	___flmul@b+2,7
 11996  00FE  2903               	goto	l6032
 11997  00FF                     l1376:	
 11998  00FF  01D5               	clrf	___flmul@b
 11999  0100  01D6               	clrf	___flmul@b+1
 12000  0101  01D7               	clrf	___flmul@b+2
 12001  0102  01D8               	clrf	___flmul@b+3
 12002  0103                     l6032:	
 12003  0103  085C               	movf	___flmul@a+3,w
 12004  0104  3980               	andlw	128
 12005  0105  06E1               	xorwf	___flmul@sign,f
 12006  0106  1003               	clrc
 12007  0107  0D5C               	rlf	___flmul@a+3,w
 12008  0108  00E2               	movwf	___flmul@aexp
 12009  0109  1BDB               	btfsc	___flmul@a+2,7
 12010  010A  1462               	bsf	___flmul@aexp,0
 12011  010B  0862               	movf	___flmul@aexp,w
 12012  010C  1903               	btfsc	3,2
 12013  010D  2916               	goto	l1380
 12014  010E  0F62               	incfsz	___flmul@aexp,w
 12015  010F  2914               	goto	l1381
 12016  0110  01D9               	clrf	___flmul@a
 12017  0111  01DA               	clrf	___flmul@a+1
 12018  0112  01DB               	clrf	___flmul@a+2
 12019  0113  01DC               	clrf	___flmul@a+3
 12020  0114                     l1381:	
 12021  0114  17DB               	bsf	___flmul@a+2,7
 12022  0115  291A               	goto	l6044
 12023  0116                     l1380:	
 12024  0116  01D9               	clrf	___flmul@a
 12025  0117  01DA               	clrf	___flmul@a+1
 12026  0118  01DB               	clrf	___flmul@a+2
 12027  0119  01DC               	clrf	___flmul@a+3
 12028  011A                     l6044:	
 12029  011A  0862               	movf	___flmul@aexp,w
 12030  011B  1D03               	btfss	3,2
 12031  011C  0863               	movf	___flmul@bexp,w
 12032  011D  1D03               	btfss	3,2
 12033  011E  2924               	goto	l6048
 12034  011F  01D5               	clrf	?___flmul
 12035  0120  01D6               	clrf	?___flmul+1
 12036  0121  01D7               	clrf	?___flmul+2
 12037  0122  01D8               	clrf	?___flmul+3
 12038  0123  0008               	return
 12039  0124                     l6048:	
 12040  0124  0855               	movf	___flmul@b,w
 12041  0125  00A0               	movwf	__Umul8_16@multiplicand
 12042  0126  085B               	movf	___flmul@a+2,w
 12043  0127  223F  120A  118A   	fcall	__Umul8_16
 12044  012A  0821               	movf	?__Umul8_16+1,w
 12045  012B  00ED               	movwf	___flmul@temp+1
 12046  012C  0820               	movf	?__Umul8_16,w
 12047  012D  00EC               	movwf	___flmul@temp
 12048  012E  00E4               	movwf	___flmul@grs
 12049  012F  01E5               	clrf	___flmul@grs+1
 12050  0130  01E6               	clrf	___flmul@grs+2
 12051  0131  01E7               	clrf	___flmul@grs+3
 12052  0132  086D               	movf	___flmul@temp+1,w
 12053  0133  00E8               	movwf	___flmul@prod
 12054  0134  01E9               	clrf	___flmul@prod+1
 12055  0135  01EA               	clrf	___flmul@prod+2
 12056  0136  01EB               	clrf	___flmul@prod+3
 12057  0137  0856               	movf	___flmul@b+1,w
 12058  0138  00A0               	movwf	__Umul8_16@multiplicand
 12059  0139  085A               	movf	___flmul@a+1,w
 12060  013A  223F  120A  118A   	fcall	__Umul8_16
 12061  013D  2319  120A  118A   	fcall	PL22	;call to abstracted procedure
 12062  0140  1803               	skipnc
 12063  0141  07E9               	addwf	___flmul@prod+1,f
 12064  0142  1803               	skipnc
 12065  0143  07EA               	addwf	___flmul@prod+2,f
 12066  0144  1803               	skipnc
 12067  0145  07EB               	addwf	___flmul@prod+3,f
 12068  0146  0857               	movf	___flmul@b+2,w
 12069  0147  00A0               	movwf	__Umul8_16@multiplicand
 12070  0148  0859               	movf	___flmul@a,w
 12071  0149  223F  120A  118A   	fcall	__Umul8_16
 12072  014C  2319  120A  118A   	fcall	PL22	;call to abstracted procedure
 12073  014F  2328  120A  118A   	fcall	PL26	;call to abstracted procedure
 12074  0152  0856               	movf	___flmul@b+1,w
 12075  0153  00A0               	movwf	__Umul8_16@multiplicand
 12076  0154  0859               	movf	___flmul@a,w
 12077  0155  223F  120A  118A   	fcall	__Umul8_16
 12078  0158  22B4  120A  118A   	fcall	PL4	;call to abstracted procedure
 12079  015B  1803               	skipnc
 12080  015C  3E01               	addlw	1
 12081  015D  1D03               	btfss	3,2
 12082  015E  07E7               	addwf	___flmul@grs+3,f
 12083  015F  0855               	movf	___flmul@b,w
 12084  0160  00A0               	movwf	__Umul8_16@multiplicand
 12085  0161  085A               	movf	___flmul@a+1,w
 12086  0162  223F  120A  118A   	fcall	__Umul8_16
 12087  0165  22B4  120A  118A   	fcall	PL4	;call to abstracted procedure
 12088  0168  1803               	skipnc
 12089  0169  3E01               	addlw	1
 12090  016A  1D03               	btfss	3,2
 12091  016B  07E7               	addwf	___flmul@grs+3,f
 12092  016C  0866               	movf	___flmul@grs+2,w
 12093  016D  00E7               	movwf	___flmul@grs+3
 12094  016E  0865               	movf	___flmul@grs+1,w
 12095  016F  00E6               	movwf	___flmul@grs+2
 12096  0170  0864               	movf	___flmul@grs,w
 12097  0171  00E5               	movwf	___flmul@grs+1
 12098  0172  01E4               	clrf	___flmul@grs
 12099  0173  0855               	movf	___flmul@b,w
 12100  0174  00A0               	movwf	__Umul8_16@multiplicand
 12101  0175  0859               	movf	___flmul@a,w
 12102  0176  223F  120A  118A   	fcall	__Umul8_16
 12103  0179  22B4  120A  118A   	fcall	PL4	;call to abstracted procedure
 12104  017C  1803               	skipnc
 12105  017D  3E01               	addlw	1
 12106  017E  1D03               	btfss	3,2
 12107  017F  07E7               	addwf	___flmul@grs+3,f
 12108  0180  0856               	movf	___flmul@b+1,w
 12109  0181  00A0               	movwf	__Umul8_16@multiplicand
 12110  0182  085B               	movf	___flmul@a+2,w
 12111  0183  223F  120A  118A   	fcall	__Umul8_16
 12112  0186  0821               	movf	?__Umul8_16+1,w
 12113  0187  22CE  120A  118A   	fcall	PL8	;call to abstracted procedure
 12114  018A  22F8  120A  118A   	fcall	PL14	;call to abstracted procedure
 12115  018D  234A  120A  118A   	fcall	PL60	;call to abstracted procedure
 12116  0190  085A               	movf	___flmul@a+1,w
 12117  0191  223F  120A  118A   	fcall	__Umul8_16
 12118  0194  0821               	movf	?__Umul8_16+1,w
 12119  0195  22CE  120A  118A   	fcall	PL8	;call to abstracted procedure
 12120  0198  22F8  120A  118A   	fcall	PL14	;call to abstracted procedure
 12121  019B  234A  120A  118A   	fcall	PL60	;call to abstracted procedure
 12122  019E  085B               	movf	___flmul@a+2,w
 12123  019F  223F  120A  118A   	fcall	__Umul8_16
 12124  01A2  0821               	movf	?__Umul8_16+1,w
 12125  01A3  22CE  120A  118A   	fcall	PL8	;call to abstracted procedure
 12126  01A6  085F               	movf	??___flmul+2,w
 12127  01A7  00E0               	movwf	??___flmul+3
 12128  01A8  085E               	movf	??___flmul+1,w
 12129  01A9  00DF               	movwf	??___flmul+2
 12130  01AA  085D               	movf	??___flmul,w
 12131  01AB  00DE               	movwf	??___flmul+1
 12132  01AC  01DD               	clrf	??___flmul
 12133  01AD  22F8  120A  118A   	fcall	PL14	;call to abstracted procedure
 12134  01B0  1803               	skipnc
 12135  01B1  3E01               	addlw	1
 12136  01B2  1D03               	btfss	3,2
 12137  01B3  07EB               	addwf	___flmul@prod+3,f
 12138  01B4  0867               	movf	___flmul@grs+3,w
 12139  01B5  07E8               	addwf	___flmul@prod,f
 12140  01B6  3001               	movlw	1
 12141  01B7  2328  120A  118A   	fcall	PL26	;call to abstracted procedure
 12142  01BA  0863               	movf	___flmul@bexp,w
 12143  01BB  00EC               	movwf	___flmul@temp
 12144  01BC  01ED               	clrf	___flmul@temp+1
 12145  01BD  0862               	movf	___flmul@aexp,w
 12146  01BE  07EC               	addwf	___flmul@temp,f
 12147  01BF  1803               	skipnc
 12148  01C0  0AED               	incf	___flmul@temp+1,f
 12149  01C1  3082               	movlw	-126
 12150  01C2                     L14:	
 12151  01C2  07EC               	addwf	___flmul@temp,f
 12152  01C3  1C03               	skipc
 12153  01C4  03ED               	decf	___flmul@temp+1,f
 12154  01C5  1BEA               	btfsc	___flmul@prod+2,7
 12155  01C6  29D5               	goto	l6096
 12156  01C7  1003               	clrc
 12157  01C8  0DE8               	rlf	___flmul@prod,f
 12158  01C9  0DE9               	rlf	___flmul@prod+1,f
 12159  01CA  0DEA               	rlf	___flmul@prod+2,f
 12160  01CB  0DEB               	rlf	___flmul@prod+3,f
 12161  01CC  1BE7               	btfsc	___flmul@grs+3,7
 12162  01CD  1468               	bsf	___flmul@prod,0
 12163  01CE  30FF               	movlw	-1
 12164  01CF  1003               	clrc
 12165  01D0  0DE4               	rlf	___flmul@grs,f
 12166  01D1  0DE5               	rlf	___flmul@grs+1,f
 12167  01D2  0DE6               	rlf	___flmul@grs+2,f
 12168  01D3  0DE7               	rlf	___flmul@grs+3,f
 12169  01D4  29C2               	goto	L14
 12170  01D5                     l6096:	
 12171  01D5  01E2               	clrf	___flmul@aexp
 12172  01D6  1FE7               	btfss	___flmul@grs+3,7
 12173  01D7  29EA               	goto	l6106
 12174  01D8  0864               	movf	___flmul@grs,w
 12175  01D9  00DD               	movwf	??___flmul
 12176  01DA  0865               	movf	___flmul@grs+1,w
 12177  01DB  00DE               	movwf	??___flmul+1
 12178  01DC  0866               	movf	___flmul@grs+2,w
 12179  01DD  00DF               	movwf	??___flmul+2
 12180  01DE  307F               	movlw	127
 12181  01DF  0567               	andwf	___flmul@grs+3,w
 12182  01E0  00E0               	movwf	??___flmul+3
 12183  01E1  045F               	iorwf	??___flmul+2,w
 12184  01E2  045E               	iorwf	??___flmul+1,w
 12185  01E3  045D               	iorwf	??___flmul,w
 12186  01E4  1903               	skipnz
 12187  01E5  1868               	btfsc	___flmul@prod,0
 12188  01E6  29E8               	goto	l6102
 12189  01E7  29EA               	goto	l6106
 12190  01E8                     l6102:	
 12191  01E8  01E2               	clrf	___flmul@aexp
 12192  01E9  0AE2               	incf	___flmul@aexp,f
 12193  01EA                     l6106:	
 12194  01EA  0862               	movf	___flmul@aexp,w
 12195  01EB  1903               	btfsc	3,2
 12196  01EC  29FE               	goto	l6116
 12197  01ED  0AE8               	incf	___flmul@prod,f
 12198  01EE  1903               	skipnz
 12199  01EF  0AE9               	incf	___flmul@prod+1,f
 12200  01F0  1903               	skipnz
 12201  01F1  0AEA               	incf	___flmul@prod+2,f
 12202  01F2  1903               	skipnz
 12203  01F3  0AEB               	incf	___flmul@prod+3,f
 12204  01F4  1C6B               	btfss	___flmul@prod+3,0
 12205  01F5  29FE               	goto	l6116
 12206  01F6  0D6B               	rlf	___flmul@prod+3,w
 12207  01F7  0CEB               	rrf	___flmul@prod+3,f
 12208  01F8  0CEA               	rrf	___flmul@prod+2,f
 12209  01F9  0CE9               	rrf	___flmul@prod+1,f
 12210  01FA  0CE8               	rrf	___flmul@prod,f
 12211  01FB  0AEC               	incf	___flmul@temp,f
 12212  01FC  1903               	skipnz
 12213  01FD  0AED               	incf	___flmul@temp+1,f
 12214  01FE                     l6116:	
 12215  01FE  086D               	movf	___flmul@temp+1,w
 12216  01FF  3A80               	xorlw	128
 12217  0200  00FF               	movwf	127
 12218  0201  3080               	movlw	128
 12219  0202  027F               	subwf	127,w
 12220  0203  1D03               	skipz
 12221  0204  2A07               	goto	u5445
 12222  0205  30FF               	movlw	255
 12223  0206  026C               	subwf	___flmul@temp,w
 12224  0207                     u5445:	
 12225  0207  1C03               	skipc
 12226  0208  2A12               	goto	l6120
 12227  0209  307F               	movlw	127
 12228  020A  1283               	bcf	3,5	;RP0=0, select bank0
 12229  020B  1303               	bcf	3,6	;RP1=0, select bank0
 12230  020C  00EB               	movwf	___flmul@prod+3
 12231  020D  3080               	movlw	128
 12232  020E  00EA               	movwf	___flmul@prod+2
 12233  020F  01E9               	clrf	___flmul@prod+1
 12234  0210  01E8               	clrf	___flmul@prod
 12235  0211  2A34               	goto	l1398
 12236  0212                     l6120:	
 12237  0212  1283               	bcf	3,5	;RP0=0, select bank0
 12238  0213  1303               	bcf	3,6	;RP1=0, select bank0
 12239  0214  086D               	movf	___flmul@temp+1,w
 12240  0215  3A80               	xorlw	128
 12241  0216  00FF               	movwf	127
 12242  0217  3080               	movlw	128
 12243  0218  027F               	subwf	127,w
 12244  0219  1D03               	skipz
 12245  021A  2A1D               	goto	u5455
 12246  021B  3001               	movlw	1
 12247  021C  026C               	subwf	___flmul@temp,w
 12248  021D                     u5455:	
 12249  021D  1803               	skipnc
 12250  021E  2A27               	goto	l6126
 12251  021F  1283               	bcf	3,5	;RP0=0, select bank0
 12252  0220  1303               	bcf	3,6	;RP1=0, select bank0
 12253  0221  01E8               	clrf	___flmul@prod
 12254  0222  01E9               	clrf	___flmul@prod+1
 12255  0223  01EA               	clrf	___flmul@prod+2
 12256  0224  01EB               	clrf	___flmul@prod+3
 12257  0225  01E1               	clrf	___flmul@sign
 12258  0226  2A34               	goto	l1398
 12259  0227                     l6126:	
 12260  0227  1283               	bcf	3,5	;RP0=0, select bank0
 12261  0228  1303               	bcf	3,6	;RP1=0, select bank0
 12262  0229  086C               	movf	___flmul@temp,w
 12263  022A  00E3               	movwf	___flmul@bexp
 12264  022B  307F               	movlw	127
 12265  022C  05EA               	andwf	___flmul@prod+2,f
 12266  022D  3000               	movlw	0
 12267  022E  01EB               	clrf	___flmul@prod+3
 12268  022F  1863               	btfsc	___flmul@bexp,0
 12269  0230  17EA               	bsf	___flmul@prod+2,7
 12270  0231  1003               	clrc
 12271  0232  0C63               	rrf	___flmul@bexp,w
 12272  0233  00EB               	movwf	___flmul@prod+3
 12273  0234                     l1398:	
 12274  0234  0861               	movf	___flmul@sign,w
 12275  0235  04EB               	iorwf	___flmul@prod+3,f
 12276  0236  086B               	movf	___flmul@prod+3,w
 12277  0237  00D8               	movwf	?___flmul+3
 12278  0238  086A               	movf	___flmul@prod+2,w
 12279  0239  00D7               	movwf	?___flmul+2
 12280  023A  0869               	movf	___flmul@prod+1,w
 12281  023B  00D6               	movwf	?___flmul+1
 12282  023C  0868               	movf	___flmul@prod,w
 12283  023D  00D5               	movwf	?___flmul
 12284  023E  0008               	return
 12285  023F                     __end_of___flmul:	
 12286  023F                     __ptext28:	
 12287 ;; *************** function __Umul8_16 *****************
 12288 ;; Defined at:
 12289 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
 12290 ;; Parameters:    Size  Location     Type
 12291 ;;  multiplier      1    wreg     unsigned char 
 12292 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 12293 ;; Auto vars:     Size  Location     Type
 12294 ;;  multiplier      1    7[BANK0 ] unsigned char 
 12295 ;;  word_mpld       2    5[BANK0 ] unsigned int 
 12296 ;;  product         2    3[BANK0 ] unsigned int 
 12297 ;; Return value:  Size  Location     Type
 12298 ;;                  2    0[BANK0 ] unsigned int 
 12299 ;; Registers used:
 12300 ;;		wreg, status,2, status,0
 12301 ;; Tracked objects:
 12302 ;;		On entry : 300/0
 12303 ;;		On exit  : 300/0
 12304 ;;		Unchanged: 0/0
 12305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12306 ;;      Params:         0       3       0       0       0
 12307 ;;      Locals:         0       5       0       0       0
 12308 ;;      Temps:          0       0       0       0       0
 12309 ;;      Totals:         0       8       0       0       0
 12310 ;;Total ram usage:        8 bytes
 12311 ;; Hardware stack levels used:    1
 12312 ;; Hardware stack levels required when called:    1
 12313 ;; This function calls:
 12314 ;;		Nothing
 12315 ;; This function is called by:
 12316 ;;		___flmul
 12317 ;; This function uses a non-reentrant model
 12318 ;;
 12319                           
 12320                           
 12321                           ;psect for function __Umul8_16
 12322  023F                     __Umul8_16:	
 12323                           
 12324                           ;incstack = 0
 12325                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 12326                           ;__Umul8_16@multiplier stored from wreg
 12327  023F  00A7               	movwf	__Umul8_16@multiplier
 12328  0240  01A3               	clrf	__Umul8_16@product
 12329  0241  01A4               	clrf	__Umul8_16@product+1
 12330  0242  0820               	movf	__Umul8_16@multiplicand,w
 12331  0243  00A5               	movwf	__Umul8_16@word_mpld
 12332  0244  01A6               	clrf	__Umul8_16@word_mpld+1
 12333  0245                     l5988:	
 12334  0245  1C27               	btfss	__Umul8_16@multiplier,0
 12335  0246  2A4D               	goto	l5992
 12336  0247  0825               	movf	__Umul8_16@word_mpld,w
 12337  0248  07A3               	addwf	__Umul8_16@product,f
 12338  0249  1803               	skipnc
 12339  024A  0AA4               	incf	__Umul8_16@product+1,f
 12340  024B  0826               	movf	__Umul8_16@word_mpld+1,w
 12341  024C  07A4               	addwf	__Umul8_16@product+1,f
 12342  024D                     l5992:	
 12343  024D  1003               	clrc
 12344  024E  0DA5               	rlf	__Umul8_16@word_mpld,f
 12345  024F  0DA6               	rlf	__Umul8_16@word_mpld+1,f
 12346  0250  1003               	clrc
 12347  0251  0CA7               	rrf	__Umul8_16@multiplier,f
 12348  0252  0827               	movf	__Umul8_16@multiplier,w
 12349  0253  1D03               	btfss	3,2
 12350  0254  2A45               	goto	l5988
 12351  0255  0824               	movf	__Umul8_16@product+1,w
 12352  0256  00A1               	movwf	?__Umul8_16+1
 12353  0257  0823               	movf	__Umul8_16@product,w
 12354  0258  00A0               	movwf	?__Umul8_16
 12355  0259  0008               	return
 12356  025A                     __end_of__Umul8_16:	
 12357  025A                     __ptext26:	
 12358 ;; *************** function ___fltol *****************
 12359 ;; Defined at:
 12360 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;  f1              4    0[BANK1 ] void 
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;  exp1            1   79[BANK0 ] unsigned char 
 12365 ;;  sign1           1   78[BANK0 ] unsigned char 
 12366 ;; Return value:  Size  Location     Type
 12367 ;;                  4    0[BANK1 ] long 
 12368 ;; Registers used:
 12369 ;;		wreg, status,2, status,0
 12370 ;; Tracked objects:
 12371 ;;		On entry : 300/100
 12372 ;;		On exit  : 200/0
 12373 ;;		Unchanged: 0/0
 12374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12375 ;;      Params:         0       0       4       0       0
 12376 ;;      Locals:         0       2       0       0       0
 12377 ;;      Temps:          0       0       4       0       0
 12378 ;;      Totals:         0       2       8       0       0
 12379 ;;Total ram usage:       10 bytes
 12380 ;; Hardware stack levels used:    1
 12381 ;; Hardware stack levels required when called:    1
 12382 ;; This function calls:
 12383 ;;		Nothing
 12384 ;; This function is called by:
 12385 ;;		_Decodify_Command
 12386 ;;		_Save_Log
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           
 12391                           ;psect for function ___fltol
 12392  025A                     ___fltol:	
 12393                           
 12394                           ;incstack = 0
 12395                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 12396  025A  1003               	clrc
 12397  025B  0D22               	rlf	(___fltol@f1+2)^(0+128),w
 12398  025C  0D23               	rlf	(___fltol@f1+3)^(0+128),w
 12399  025D  1283               	bcf	3,5	;RP0=0, select bank0
 12400  025E  00EF               	movwf	___fltol@exp1
 12401  025F  086F               	movf	___fltol@exp1,w
 12402  0260  1D03               	btfss	3,2
 12403  0261  2A68               	goto	l4644
 12404  0262                     l4642:	
 12405  0262  1683               	bsf	3,5	;RP0=1, select bank1
 12406  0263  01A0               	clrf	?___fltol^(0+128)
 12407  0264  01A1               	clrf	(?___fltol+1)^(0+128)
 12408  0265  01A2               	clrf	(?___fltol+2)^(0+128)
 12409  0266  01A3               	clrf	(?___fltol+3)^(0+128)
 12410  0267  0008               	return
 12411  0268                     l4644:	
 12412  0268  1683               	bsf	3,5	;RP0=1, select bank1
 12413  0269  0820               	movf	___fltol@f1^(0+128),w
 12414  026A  00A4               	movwf	??___fltol^(0+128)
 12415  026B  0821               	movf	(___fltol@f1+1)^(0+128),w
 12416  026C  00A5               	movwf	(??___fltol^(0+128)+1)
 12417  026D  0822               	movf	(___fltol@f1+2)^(0+128),w
 12418  026E  00A6               	movwf	(??___fltol^(0+128)+2)
 12419  026F  0823               	movf	(___fltol@f1+3)^(0+128),w
 12420  0270  00A7               	movwf	(??___fltol^(0+128)+3)
 12421  0271  301F               	movlw	31
 12422  0272                     u3875:	
 12423  0272  1003               	clrc
 12424  0273  0CA7               	rrf	(??___fltol^(0+128)+3),f
 12425  0274  0CA6               	rrf	(??___fltol^(0+128)+2),f
 12426  0275  0CA5               	rrf	(??___fltol^(0+128)+1),f
 12427  0276  0CA4               	rrf	??___fltol^(0+128),f
 12428  0277  3EFF               	addlw	-1
 12429  0278  1D03               	skipz
 12430  0279  2A72               	goto	u3875
 12431  027A  0824               	movf	??___fltol^(0+128),w
 12432  027B  1283               	bcf	3,5	;RP0=0, select bank0
 12433  027C  00EE               	movwf	___fltol@sign1
 12434  027D  1683               	bsf	3,5	;RP0=1, select bank1
 12435  027E  3096               	movlw	150
 12436  027F  17A2               	bsf	(___fltol@f1^(0+128)+2),7
 12437  0280  01A3               	clrf	(___fltol@f1+3)^(0+128)
 12438  0281  1283               	bcf	3,5	;RP0=0, select bank0
 12439  0282  02EF               	subwf	___fltol@exp1,f
 12440  0283  1FEF               	btfss	___fltol@exp1,7
 12441  0284  2A94               	goto	l4662
 12442  0285  086F               	movf	___fltol@exp1,w
 12443  0286  3A80               	xorlw	128
 12444  0287  3E97               	addlw	151
 12445  0288  1C03               	btfss	3,0
 12446  0289  2A62               	goto	l4642
 12447  028A                     l4658:	
 12448  028A  1003               	clrc
 12449  028B  1683               	bsf	3,5	;RP0=1, select bank1
 12450  028C  0CA3               	rrf	(___fltol@f1+3)^(0+128),f
 12451  028D  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
 12452  028E  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
 12453  028F  0CA0               	rrf	___fltol@f1^(0+128),f
 12454  0290  1283               	bcf	3,5	;RP0=0, select bank0
 12455  0291  0FEF               	incfsz	___fltol@exp1,f
 12456  0292  2A8A               	goto	l4658
 12457  0293  2AA4               	goto	l4670
 12458  0294                     l4662:	
 12459  0294  3020               	movlw	32
 12460  0295  026F               	subwf	___fltol@exp1,w
 12461  0296  1803               	btfsc	3,0
 12462  0297  2A62               	goto	l4642
 12463  0298                     l4668:	
 12464  0298  086F               	movf	___fltol@exp1,w
 12465  0299  1903               	btfsc	3,2
 12466  029A  2AA4               	goto	l4670
 12467  029B  1003               	clrc
 12468  029C  1683               	bsf	3,5	;RP0=1, select bank1
 12469  029D  0DA0               	rlf	___fltol@f1^(0+128),f
 12470  029E  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
 12471  029F  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
 12472  02A0  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
 12473  02A1  1283               	bcf	3,5	;RP0=0, select bank0
 12474  02A2  03EF               	decf	___fltol@exp1,f
 12475  02A3  2A98               	goto	l4668
 12476  02A4                     l4670:	
 12477  02A4  086E               	movf	___fltol@sign1,w
 12478  02A5  1903               	btfsc	3,2
 12479  02A6  0008               	return
 12480  02A7  1683               	bsf	3,5	;RP0=1, select bank1
 12481  02A8  09A0               	comf	___fltol@f1^(0+128),f
 12482  02A9  09A1               	comf	(___fltol@f1+1)^(0+128),f
 12483  02AA  09A2               	comf	(___fltol@f1+2)^(0+128),f
 12484  02AB  09A3               	comf	(___fltol@f1+3)^(0+128),f
 12485  02AC  0AA0               	incf	___fltol@f1^(0+128),f
 12486  02AD  1903               	skipnz
 12487  02AE  0AA1               	incf	(___fltol@f1+1)^(0+128),f
 12488  02AF  1903               	skipnz
 12489  02B0  0AA2               	incf	(___fltol@f1+2)^(0+128),f
 12490  02B1  1903               	skipnz
 12491  02B2  0AA3               	incf	(___fltol@f1+3)^(0+128),f
 12492  02B3  0008               	return
 12493  02B4                     __end_of___fltol:	
 12494  02B4                     PL4:	
 12495  02B4  0821               	movf	?__Umul8_16+1,w
 12496  02B5  00ED               	movwf	___flmul@temp+1
 12497  02B6  0820               	movf	?__Umul8_16,w
 12498  02B7  00EC               	movwf	___flmul@temp
 12499  02B8  00DD               	movwf	??___flmul
 12500  02B9  086D               	movf	___flmul@temp+1,w
 12501  02BA  00DE               	movwf	??___flmul+1
 12502  02BB  01DF               	clrf	??___flmul+2
 12503  02BC  01E0               	clrf	??___flmul+3
 12504  02BD  085D               	movf	??___flmul,w
 12505  02BE  07E4               	addwf	___flmul@grs,f
 12506  02BF  085E               	movf	??___flmul+1,w
 12507  02C0  1103               	clrz
 12508  02C1  1803               	skipnc
 12509  02C2  3E01               	addlw	1
 12510  02C3  1D03               	btfss	3,2
 12511  02C4  07E5               	addwf	___flmul@grs+1,f
 12512  02C5  085F               	movf	??___flmul+2,w
 12513  02C6  1103               	clrz
 12514  02C7  1803               	skipnc
 12515  02C8  3E01               	addlw	1
 12516  02C9  1D03               	btfss	3,2
 12517  02CA  07E6               	addwf	___flmul@grs+2,f
 12518  02CB  0860               	movf	??___flmul+3,w
 12519  02CC  1103               	clrz
 12520  02CD  0008               	return
 12521  02CE                     __end_ofPL4:	
 12522  02CE                     PL8:	
 12523  02CE  00ED               	movwf	___flmul@temp+1
 12524  02CF  0820               	movf	?__Umul8_16,w
 12525  02D0  00EC               	movwf	___flmul@temp
 12526  02D1  00DD               	movwf	??___flmul
 12527  02D2  086D               	movf	___flmul@temp+1,w
 12528  02D3  00DE               	movwf	??___flmul+1
 12529  02D4  01DF               	clrf	??___flmul+2
 12530  02D5  01E0               	clrf	??___flmul+3
 12531  02D6  0008               	return
 12532  02D7                     __end_ofPL8:	
 12533  02D7                     PL12:	
 12534  02D7  3002               	movlw	2
 12535  02D8  1683               	bsf	3,5	;RP0=1, select bank1
 12536  02D9  1303               	bcf	3,6	;RP1=0, select bank1
 12537  02DA  00B5               	movwf	??_Save_Log^(0+128)
 12538  02DB  01B6               	clrf	(??_Save_Log^(0+128)+1)
 12539  02DC  01B7               	clrf	(??_Save_Log^(0+128)+2)
 12540  02DD  01B8               	clrf	(??_Save_Log^(0+128)+3)
 12541  02DE  0831               	movf	Save_Log@add_datalog^(0+128),w
 12542  02DF  07B5               	addwf	??_Save_Log^(0+128),f
 12543  02E0  0832               	movf	(Save_Log@add_datalog+1)^(0+128),w
 12544  02E1  1803               	skipnc
 12545  02E2  0F32               	incfsz	(Save_Log@add_datalog+1)^(0+128),w
 12546  02E3  07B6               	addwf	(??_Save_Log^(0+128)+1),f
 12547  02E4  0833               	movf	(Save_Log@add_datalog+2)^(0+128),w
 12548  02E5  1803               	skipnc
 12549  02E6  0F33               	incfsz	(Save_Log@add_datalog+2)^(0+128),w
 12550  02E7  07B7               	addwf	(??_Save_Log^(0+128)+2),f
 12551  02E8  0834               	movf	(Save_Log@add_datalog+3)^(0+128),w
 12552  02E9  1803               	skipnc
 12553  02EA  0A34               	incf	(Save_Log@add_datalog+3)^(0+128),w
 12554  02EB  07B8               	addwf	(??_Save_Log^(0+128)+3),f
 12555  02EC  0838               	movf	(??_Save_Log+3)^(0+128),w
 12556  02ED  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
 12557  02EE  0837               	movf	(??_Save_Log+2)^(0+128),w
 12558  02EF  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
 12559  02F0  0836               	movf	(??_Save_Log+1)^(0+128),w
 12560  02F1  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
 12561  02F2  0835               	movf	??_Save_Log^(0+128),w
 12562  02F3  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
 12563  02F4  30FF               	movlw	255
 12564  02F5  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
 12565  02F6  00AD               	movwf	(EEPROM_24C1025_Write_Int@data^(0+128)+1)
 12566  02F7  0008               	return
 12567  02F8                     __end_ofPL12:	
 12568  02F8                     PL14:	
 12569  02F8  085D               	movf	??___flmul,w
 12570  02F9  07E8               	addwf	___flmul@prod,f
 12571  02FA  085E               	movf	??___flmul+1,w
 12572  02FB  1103               	clrz
 12573  02FC  1803               	skipnc
 12574  02FD  3E01               	addlw	1
 12575  02FE  1D03               	btfss	3,2
 12576  02FF  07E9               	addwf	___flmul@prod+1,f
 12577  0300  085F               	movf	??___flmul+2,w
 12578  0301  1103               	clrz
 12579  0302  1803               	skipnc
 12580  0303  3E01               	addlw	1
 12581  0304  1D03               	btfss	3,2
 12582  0305  07EA               	addwf	___flmul@prod+2,f
 12583  0306  0860               	movf	??___flmul+3,w
 12584  0307  1103               	clrz
 12585  0308  0008               	return
 12586  0309                     __end_ofPL14:	
 12587  0309                     PL20:	
 12588  0309  0858               	movf	?___flmul+3,w
 12589  030A  1683               	bsf	3,5	;RP0=1, select bank1
 12590  030B  00A3               	movwf	(___fltol@f1+3)^(0+128)
 12591  030C  1283               	bcf	3,5	;RP0=0, select bank0
 12592  030D  0857               	movf	?___flmul+2,w
 12593  030E  1683               	bsf	3,5	;RP0=1, select bank1
 12594  030F  00A2               	movwf	(___fltol@f1+2)^(0+128)
 12595  0310  1283               	bcf	3,5	;RP0=0, select bank0
 12596  0311  0856               	movf	?___flmul+1,w
 12597  0312  1683               	bsf	3,5	;RP0=1, select bank1
 12598  0313  00A1               	movwf	(___fltol@f1+1)^(0+128)
 12599  0314  1283               	bcf	3,5	;RP0=0, select bank0
 12600  0315  0855               	movf	?___flmul,w
 12601  0316  1683               	bsf	3,5	;RP0=1, select bank1
 12602  0317  00A0               	movwf	___fltol@f1^(0+128)
 12603  0318  0008               	return
 12604  0319                     __end_ofPL20:	
 12605  0319                     PL22:	
 12606  0319  0821               	movf	?__Umul8_16+1,w
 12607  031A  00ED               	movwf	___flmul@temp+1
 12608  031B  0820               	movf	?__Umul8_16,w
 12609  031C  00EC               	movwf	___flmul@temp
 12610  031D  07E4               	addwf	___flmul@grs,f
 12611  031E  3001               	movlw	1
 12612  031F  1803               	skipnc
 12613  0320  07E5               	addwf	___flmul@grs+1,f
 12614  0321  1803               	skipnc
 12615  0322  07E6               	addwf	___flmul@grs+2,f
 12616  0323  1803               	skipnc
 12617  0324  07E7               	addwf	___flmul@grs+3,f
 12618  0325  086D               	movf	___flmul@temp+1,w
 12619  0326  07E8               	addwf	___flmul@prod,f
 12620  0327  3401               	retlw	1
 12621  0328                     __end_ofPL22:	
 12622  0328                     PL26:	
 12623  0328  1803               	skipnc
 12624  0329  07E9               	addwf	___flmul@prod+1,f
 12625  032A  1803               	skipnc
 12626  032B  07EA               	addwf	___flmul@prod+2,f
 12627  032C  1803               	skipnc
 12628  032D  07EB               	addwf	___flmul@prod+3,f
 12629  032E  0866               	movf	___flmul@grs+2,w
 12630  032F  00E7               	movwf	___flmul@grs+3
 12631  0330  0865               	movf	___flmul@grs+1,w
 12632  0331  00E6               	movwf	___flmul@grs+2
 12633  0332  0864               	movf	___flmul@grs,w
 12634  0333  00E5               	movwf	___flmul@grs+1
 12635  0334  01E4               	clrf	___flmul@grs
 12636  0335  0008               	return
 12637  0336                     __end_ofPL26:	
 12638  0336                     PL38:	
 12639  0336  1283               	bcf	3,5	;RP0=0, select bank0
 12640  0337  1303               	bcf	3,6	;RP1=0, select bank0
 12641  0338  00D9               	movwf	___flmul@a
 12642  0339  3041               	movlw	65
 12643  033A  00D8               	movwf	___flmul@b+3
 12644  033B  3020               	movlw	32
 12645  033C  00D7               	movwf	___flmul@b+2
 12646  033D  01D6               	clrf	___flmul@b+1
 12647  033E  01D5               	clrf	___flmul@b
 12648  033F  0008               	return
 12649  0340                     __end_ofPL38:	
 12650  0340                     PL40:	
 12651  0340  0834               	movf	(Save_Log@add_datalog+3)^(0+128),w
 12652  0341  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
 12653  0342  0833               	movf	(Save_Log@add_datalog+2)^(0+128),w
 12654  0343  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
 12655  0344  0832               	movf	(Save_Log@add_datalog+1)^(0+128),w
 12656  0345  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
 12657  0346  0831               	movf	Save_Log@add_datalog^(0+128),w
 12658  0347  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
 12659  0348  1703               	bsf	3,6	;RP1=1, select bank3
 12660  0349  0008               	return
 12661  034A                     __end_ofPL40:	
 12662  034A                     PL60:	
 12663  034A  1803               	skipnc
 12664  034B  3E01               	addlw	1
 12665  034C  1D03               	btfss	3,2
 12666  034D  07EB               	addwf	___flmul@prod+3,f
 12667  034E  0857               	movf	___flmul@b+2,w
 12668  034F  00A0               	movwf	__Umul8_16@multiplicand
 12669  0350  0008               	return
 12670  0351                     __end_ofPL60:	
 12671                           
 12672                           	psect	text66
 12673  0351                     __ptext66:	
 12674 ;; *************** function _Auto_Relay0 *****************
 12675 ;; Defined at:
 12676 ;;		line 857 in file "SlaveLiofilizadorVer1.c"
 12677 ;; Parameters:    Size  Location     Type
 12678 ;;		None
 12679 ;; Auto vars:     Size  Location     Type
 12680 ;;		None
 12681 ;; Return value:  Size  Location     Type
 12682 ;;                  1    wreg      void 
 12683 ;; Registers used:
 12684 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12685 ;; Tracked objects:
 12686 ;;		On entry : 100/300
 12687 ;;		On exit  : 200/0
 12688 ;;		Unchanged: 0/0
 12689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12690 ;;      Params:         0       0       0       0       0
 12691 ;;      Locals:         0       0       0       0       0
 12692 ;;      Temps:          0       0       0       0       0
 12693 ;;      Totals:         0       0       0       0       0
 12694 ;;Total ram usage:        0 bytes
 12695 ;; Hardware stack levels used:    1
 12696 ;; Hardware stack levels required when called:    3
 12697 ;; This function calls:
 12698 ;;		_Rele0Desligado
 12699 ;;		_Rele0Ligado
 12700 ;;		___flge
 12701 ;;		___flsub
 12702 ;; This function is called by:
 12703 ;;		_main
 12704 ;; This function uses a non-reentrant model
 12705 ;;
 12706                           
 12707                           
 12708                           ;psect for function _Auto_Relay0
 12709  0351                     _Auto_Relay0:	
 12710                           
 12711                           ;SlaveLiofilizadorVer1.c: 858:              if(Status0==0)
 12712                           
 12713                           ;incstack = 0
 12714                           ; Regs used in _Auto_Relay0: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12715  0351  1703               	bsf	3,6	;RP1=1, select bank3
 12716  0352  0828               	movf	_Status0^(0+384),w
 12717  0353  0429               	iorwf	(_Status0+1)^(0+384),w
 12718  0354  1D03               	btfss	3,2
 12719  0355  2B57               	goto	l7052
 12720  0356                     l7050:	
 12721                           
 12722                           ;SlaveLiofilizadorVer1.c: 859:                  {;SlaveLiofilizadorVer1.c: 860:         
      +                                   Rele0Desligado();
 12723  0356  2C8C               	ljmp	l6892
 12724  0357                     l7052:	
 12725                           ;SlaveLiofilizadorVer1.c: 861:                  }
 12726                           
 12727                           
 12728                           ;SlaveLiofilizadorVer1.c: 863:                  {;SlaveLiofilizadorVer1.c: 865:         
      +                                   if (Temperatura0<=(SetPoint0-Histerese0))
 12729  0357  081F               	movf	(_Histerese0+3)^(0+384),w
 12730  0358  1283               	bcf	3,5	;RP0=0, select bank0
 12731  0359  1303               	bcf	3,6	;RP1=0, select bank0
 12732  035A  00D0               	movwf	___flsub@a+3
 12733  035B  1683               	bsf	3,5	;RP0=1, select bank3
 12734  035C  1703               	bsf	3,6	;RP1=1, select bank3
 12735  035D  081E               	movf	(_Histerese0+2)^(0+384),w
 12736  035E  1283               	bcf	3,5	;RP0=0, select bank0
 12737  035F  1303               	bcf	3,6	;RP1=0, select bank0
 12738  0360  00CF               	movwf	___flsub@a+2
 12739  0361  1683               	bsf	3,5	;RP0=1, select bank3
 12740  0362  1703               	bsf	3,6	;RP1=1, select bank3
 12741  0363  081D               	movf	(_Histerese0+1)^(0+384),w
 12742  0364  1283               	bcf	3,5	;RP0=0, select bank0
 12743  0365  1303               	bcf	3,6	;RP1=0, select bank0
 12744  0366  00CE               	movwf	___flsub@a+1
 12745  0367  1683               	bsf	3,5	;RP0=1, select bank3
 12746  0368  1703               	bsf	3,6	;RP1=1, select bank3
 12747  0369  081C               	movf	_Histerese0^(0+384),w
 12748  036A  1283               	bcf	3,5	;RP0=0, select bank0
 12749  036B  1303               	bcf	3,6	;RP1=0, select bank0
 12750  036C  00CD               	movwf	___flsub@a
 12751  036D  0873               	movf	_SetPoint0+3,w	;volatile
 12752  036E  00D4               	movwf	___flsub@b+3
 12753  036F  0872               	movf	_SetPoint0+2,w	;volatile
 12754  0370  00D3               	movwf	___flsub@b+2
 12755  0371  0871               	movf	_SetPoint0+1,w	;volatile
 12756  0372  00D2               	movwf	___flsub@b+1
 12757  0373  0870               	movf	_SetPoint0,w	;volatile
 12758  0374  00D1               	movwf	___flsub@b
 12759  0375  160A  118A  2638  120A  118A  	fcall	___flsub
 12760  037A  24E7  120A  118A   	fcall	PL36	;call to abstracted procedure
 12761  037D  24C5  120A  118A   	fcall	PL6	;call to abstracted procedure
 12762  0380  241E  120A  118A   	fcall	___flge
 12763  0383  1C03               	btfss	3,0
 12764  0384  2B91               	goto	l7058
 12765                           
 12766                           ;SlaveLiofilizadorVer1.c: 866:                     {;SlaveLiofilizadorVer1.c: 867:      
      +                                         RL0Status=1;
 12767  0385  1683               	bsf	3,5	;RP0=1, select bank3
 12768  0386  1703               	bsf	3,6	;RP1=1, select bank3
 12769  0387  01E0               	clrf	_RL0Status^(0+384)
 12770  0388  0AE0               	incf	_RL0Status^(0+384),f
 12771  0389  2B8E               	goto	l7056
 12772  038A                     l7060:	
 12773                           
 12774                           ;SlaveLiofilizadorVer1.c: 871:                           {;SlaveLiofilizadorVer1.c: 872:
      +                                                     if(RL0Status==1)
 12775  038A  1683               	bsf	3,5	;RP0=1, select bank3
 12776  038B  1703               	bsf	3,6	;RP1=1, select bank3
 12777  038C  0B60               	decfsz	_RL0Status^(0+384),w
 12778  038D  2B56               	goto	l7050
 12779  038E                     l7056:	
 12780                           
 12781                           ;SlaveLiofilizadorVer1.c: 868:                     Rele0Ligado();
 12782  038E  160A  118A  28EF   	ljmp	l6868
 12783  0391                     l7058:	
 12784                           ;SlaveLiofilizadorVer1.c: 869:                     }
 12785                           
 12786  0391  24DF  120A  118A   	fcall	PL10	;call to abstracted procedure
 12787  0394  24C5  120A  118A   	fcall	PL6	;call to abstracted procedure
 12788  0397  241E  120A  118A   	fcall	___flge
 12789  039A  1803               	btfsc	3,0
 12790  039B  2B8A               	goto	l7060
 12791  039C  24DF  120A  118A   	fcall	PL10	;call to abstracted procedure
 12792  039F  24C5  120A  118A   	fcall	PL6	;call to abstracted procedure
 12793  03A2  241E  120A  118A   	fcall	___flge
 12794  03A5  1803               	btfsc	3,0
 12795  03A6  0008               	return
 12796                           
 12797                           ;SlaveLiofilizadorVer1.c: 882:                           {;SlaveLiofilizadorVer1.c: 883:
      +                                                     RL0Status=0;
 12798  03A7  1683               	bsf	3,5	;RP0=1, select bank3
 12799  03A8  1703               	bsf	3,6	;RP1=1, select bank3
 12800  03A9  01E0               	clrf	_RL0Status^(0+384)
 12801  03AA  2B56               	goto	l7050
 12802  03AB                     __end_of_Auto_Relay0:	
 12803  03AB                     __ptext62:	
 12804 ;; *************** function _Auto_Relay1 *****************
 12805 ;; Defined at:
 12806 ;;		line 893 in file "SlaveLiofilizadorVer1.c"
 12807 ;; Parameters:    Size  Location     Type
 12808 ;;		None
 12809 ;; Auto vars:     Size  Location     Type
 12810 ;;		None
 12811 ;; Return value:  Size  Location     Type
 12812 ;;                  1    wreg      void 
 12813 ;; Registers used:
 12814 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12815 ;; Tracked objects:
 12816 ;;		On entry : 200/100
 12817 ;;		On exit  : 200/0
 12818 ;;		Unchanged: 0/0
 12819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12820 ;;      Params:         0       0       0       0       0
 12821 ;;      Locals:         0       0       0       0       0
 12822 ;;      Temps:          0       0       0       0       0
 12823 ;;      Totals:         0       0       0       0       0
 12824 ;;Total ram usage:        0 bytes
 12825 ;; Hardware stack levels used:    1
 12826 ;; Hardware stack levels required when called:    3
 12827 ;; This function calls:
 12828 ;;		_Rele1Desligado
 12829 ;;		_Rele1Ligado
 12830 ;;		___flge
 12831 ;;		___flsub
 12832 ;;		___xxtofl
 12833 ;; This function is called by:
 12834 ;;		_main
 12835 ;; This function uses a non-reentrant model
 12836 ;;
 12837                           
 12838                           
 12839                           ;psect for function _Auto_Relay1
 12840  03AB                     _Auto_Relay1:	
 12841                           
 12842                           ;SlaveLiofilizadorVer1.c: 894:              if(Status1==0)
 12843                           
 12844                           ;incstack = 0
 12845                           ; Regs used in _Auto_Relay1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12846  03AB  1683               	bsf	3,5	;RP0=1, select bank3
 12847  03AC  1703               	bsf	3,6	;RP1=1, select bank3
 12848  03AD  0826               	movf	_Status1^(0+384),w
 12849  03AE  0427               	iorwf	(_Status1+1)^(0+384),w
 12850  03AF  1D03               	btfss	3,2
 12851  03B0  2BB2               	goto	l7076
 12852  03B1                     l7074:	
 12853                           
 12854                           ;SlaveLiofilizadorVer1.c: 895:                  {;SlaveLiofilizadorVer1.c: 896:         
      +                                   Rele1Desligado();
 12855  03B1  2C90               	ljmp	l6894
 12856  03B2                     l7076:	
 12857                           ;SlaveLiofilizadorVer1.c: 897:                  }
 12858                           
 12859                           
 12860                           ;SlaveLiofilizadorVer1.c: 899:                  {;SlaveLiofilizadorVer1.c: 901:         
      +                                   if (Temperatura1<=(SetPoint1-Histerese1))
 12861  03B2  0838               	movf	_Histerese1^(0+384),w
 12862  03B3  1283               	bcf	3,5	;RP0=0, select bank0
 12863  03B4  1303               	bcf	3,6	;RP1=0, select bank0
 12864  03B5  24EF               	fcall	PL72	;call to abstracted procedure
 12865  03B6  160A  118A  24A9  120A  118A  	fcall	___xxtofl
 12866  03BB  160A  118A  2798  120A  118A  	fcall	PL32	;call to abstracted procedure
 12867  03C0  1683               	bsf	3,5	;RP0=1, select bank3
 12868  03C1  1703               	bsf	3,6	;RP1=1, select bank3
 12869  03C2  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
 12870  03C3  1283               	bcf	3,5	;RP0=0, select bank0
 12871  03C4  1303               	bcf	3,6	;RP1=0, select bank0
 12872  03C5  00D4               	movwf	___flsub@b+3
 12873  03C6  1683               	bsf	3,5	;RP0=1, select bank3
 12874  03C7  1703               	bsf	3,6	;RP1=1, select bank3
 12875  03C8  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
 12876  03C9  1283               	bcf	3,5	;RP0=0, select bank0
 12877  03CA  1303               	bcf	3,6	;RP1=0, select bank0
 12878  03CB  00D3               	movwf	___flsub@b+2
 12879  03CC  1683               	bsf	3,5	;RP0=1, select bank3
 12880  03CD  1703               	bsf	3,6	;RP1=1, select bank3
 12881  03CE  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
 12882  03CF  1283               	bcf	3,5	;RP0=0, select bank0
 12883  03D0  1303               	bcf	3,6	;RP1=0, select bank0
 12884  03D1  00D2               	movwf	___flsub@b+1
 12885  03D2  1683               	bsf	3,5	;RP0=1, select bank3
 12886  03D3  1703               	bsf	3,6	;RP1=1, select bank3
 12887  03D4  0818               	movf	_SetPoint1^(0+384),w	;volatile
 12888  03D5  1283               	bcf	3,5	;RP0=0, select bank0
 12889  03D6  1303               	bcf	3,6	;RP1=0, select bank0
 12890  03D7  00D1               	movwf	___flsub@b
 12891  03D8  160A  118A  2638  120A  118A  	fcall	___flsub
 12892  03DD  24E7  120A  118A   	fcall	PL36	;call to abstracted procedure
 12893  03E0  00D5               	movwf	___flge@ff1
 12894  03E1  1683               	bsf	3,5	;RP0=1, select bank3
 12895  03E2  1703               	bsf	3,6	;RP1=1, select bank3
 12896  03E3  0813               	movf	(_Temperatura1+3)^(0+384),w
 12897  03E4  1283               	bcf	3,5	;RP0=0, select bank0
 12898  03E5  1303               	bcf	3,6	;RP1=0, select bank0
 12899  03E6  00DC               	movwf	___flge@ff2+3
 12900  03E7  1683               	bsf	3,5	;RP0=1, select bank3
 12901  03E8  1703               	bsf	3,6	;RP1=1, select bank3
 12902  03E9  0812               	movf	(_Temperatura1+2)^(0+384),w
 12903  03EA  1283               	bcf	3,5	;RP0=0, select bank0
 12904  03EB  1303               	bcf	3,6	;RP1=0, select bank0
 12905  03EC  00DB               	movwf	___flge@ff2+2
 12906  03ED  1683               	bsf	3,5	;RP0=1, select bank3
 12907  03EE  1703               	bsf	3,6	;RP1=1, select bank3
 12908  03EF  0811               	movf	(_Temperatura1+1)^(0+384),w
 12909  03F0  1283               	bcf	3,5	;RP0=0, select bank0
 12910  03F1  1303               	bcf	3,6	;RP1=0, select bank0
 12911  03F2  00DA               	movwf	___flge@ff2+1
 12912  03F3  1683               	bsf	3,5	;RP0=1, select bank3
 12913  03F4  1703               	bsf	3,6	;RP1=1, select bank3
 12914  03F5  0810               	movf	_Temperatura1^(0+384),w
 12915  03F6  1283               	bcf	3,5	;RP0=0, select bank0
 12916  03F7  1303               	bcf	3,6	;RP1=0, select bank0
 12917  03F8  00D9               	movwf	___flge@ff2
 12918  03F9  241E  120A  118A   	fcall	___flge
 12919  03FC  1C03               	btfss	3,0
 12920  03FD  2C0A               	goto	l7082
 12921                           
 12922                           ;SlaveLiofilizadorVer1.c: 902:                     {;SlaveLiofilizadorVer1.c: 903:      
      +                                         RL1Status=1;
 12923  03FE  1683               	bsf	3,5	;RP0=1, select bank3
 12924  03FF  1703               	bsf	3,6	;RP1=1, select bank3
 12925  0400  01DF               	clrf	_RL1Status^(0+384)
 12926  0401  0ADF               	incf	_RL1Status^(0+384),f
 12927  0402  2C07               	goto	l7080
 12928  0403                     l7084:	
 12929                           
 12930                           ;SlaveLiofilizadorVer1.c: 907:                           {;SlaveLiofilizadorVer1.c: 908:
      +                                                     if(RL1Status==1)
 12931  0403  1683               	bsf	3,5	;RP0=1, select bank3
 12932  0404  1703               	bsf	3,6	;RP1=1, select bank3
 12933  0405  0B5F               	decfsz	_RL1Status^(0+384),w
 12934  0406  2BB1               	goto	l7074
 12935  0407                     l7080:	
 12936                           
 12937                           ;SlaveLiofilizadorVer1.c: 904:                     Rele1Ligado();
 12938  0407  160A  118A  2906   	ljmp	l6880
 12939  040A                     l7082:	
 12940                           ;SlaveLiofilizadorVer1.c: 905:                     }
 12941                           
 12942  040A  2494  120A  118A   	fcall	PL2	;call to abstracted procedure
 12943  040D  241E  120A  118A   	fcall	___flge
 12944  0410  1803               	btfsc	3,0
 12945  0411  2C03               	goto	l7084
 12946  0412  2494  120A  118A   	fcall	PL2	;call to abstracted procedure
 12947  0415  241E  120A  118A   	fcall	___flge
 12948  0418  1803               	btfsc	3,0
 12949  0419  0008               	return
 12950                           
 12951                           ;SlaveLiofilizadorVer1.c: 918:                           {;SlaveLiofilizadorVer1.c: 919:
      +                                                     RL1Status=0;
 12952  041A  1683               	bsf	3,5	;RP0=1, select bank3
 12953  041B  1703               	bsf	3,6	;RP1=1, select bank3
 12954  041C  01DF               	clrf	_RL1Status^(0+384)
 12955  041D  2BB1               	goto	l7074
 12956  041E                     __end_of_Auto_Relay1:	
 12957  041E                     __ptext69:	
 12958 ;; *************** function ___flge *****************
 12959 ;; Defined at:
 12960 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
 12961 ;; Parameters:    Size  Location     Type
 12962 ;;  ff1             4   53[BANK0 ] unsigned char 
 12963 ;;  ff2             4   57[BANK0 ] unsigned char 
 12964 ;; Auto vars:     Size  Location     Type
 12965 ;;		None
 12966 ;; Return value:  Size  Location     Type
 12967 ;;		None               void
 12968 ;; Registers used:
 12969 ;;		wreg, status,2, status,0
 12970 ;; Tracked objects:
 12971 ;;		On entry : 300/0
 12972 ;;		On exit  : 300/0
 12973 ;;		Unchanged: 0/0
 12974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12975 ;;      Params:         0       8       0       0       0
 12976 ;;      Locals:         0       0       0       0       0
 12977 ;;      Temps:          0       4       0       0       0
 12978 ;;      Totals:         0      12       0       0       0
 12979 ;;Total ram usage:       12 bytes
 12980 ;; Hardware stack levels used:    1
 12981 ;; Hardware stack levels required when called:    1
 12982 ;; This function calls:
 12983 ;;		Nothing
 12984 ;; This function is called by:
 12985 ;;		_Auto_Relay0
 12986 ;;		_Auto_Relay1
 12987 ;;		_log
 12988 ;; This function uses a non-reentrant model
 12989 ;;
 12990                           
 12991                           
 12992                           ;psect for function ___flge
 12993  041E                     ___flge:	
 12994                           
 12995                           ;incstack = 0
 12996                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12997  041E  3080               	movlw	128
 12998  041F  01DD               	clrf	??___flge
 12999  0420  01DE               	clrf	??___flge+1
 13000  0421  0557               	andwf	___flge@ff1+2,w
 13001  0422  00DF               	movwf	??___flge+2
 13002  0423  307F               	movlw	127
 13003  0424  0558               	andwf	___flge@ff1+3,w
 13004  0425  00E0               	movwf	??___flge+3
 13005  0426  045F               	iorwf	??___flge+2,w
 13006  0427  045E               	iorwf	??___flge+1,w
 13007  0428  045D               	iorwf	??___flge,w
 13008  0429  1D03               	skipz
 13009  042A  2C2F               	goto	l4280
 13010  042B  01D5               	clrf	___flge@ff1
 13011  042C  01D6               	clrf	___flge@ff1+1
 13012  042D  01D7               	clrf	___flge@ff1+2
 13013  042E  01D8               	clrf	___flge@ff1+3
 13014  042F                     l4280:	
 13015  042F  3080               	movlw	128
 13016  0430  01DD               	clrf	??___flge
 13017  0431  01DE               	clrf	??___flge+1
 13018  0432  055B               	andwf	___flge@ff2+2,w
 13019  0433  00DF               	movwf	??___flge+2
 13020  0434  307F               	movlw	127
 13021  0435  055C               	andwf	___flge@ff2+3,w
 13022  0436  00E0               	movwf	??___flge+3
 13023  0437  045F               	iorwf	??___flge+2,w
 13024  0438  045E               	iorwf	??___flge+1,w
 13025  0439  045D               	iorwf	??___flge,w
 13026  043A  1D03               	skipz
 13027  043B  2C40               	goto	l1172
 13028  043C  01D9               	clrf	___flge@ff2
 13029  043D  01DA               	clrf	___flge@ff2+1
 13030  043E  01DB               	clrf	___flge@ff2+2
 13031  043F  01DC               	clrf	___flge@ff2+3
 13032  0440                     l1172:	
 13033  0440  1FD8               	btfss	___flge@ff1+3,7
 13034  0441  2C5D               	goto	l4286
 13035  0442  3080               	movlw	128
 13036  0443  01DD               	clrf	??___flge
 13037  0444  01DE               	clrf	??___flge+1
 13038  0445  01DF               	clrf	??___flge+2
 13039  0446  00E0               	movwf	??___flge+3
 13040  0447  0855               	movf	___flge@ff1,w
 13041  0448  02DD               	subwf	??___flge,f
 13042  0449  0856               	movf	___flge@ff1+1,w
 13043  044A  1C03               	skipc
 13044  044B  0F56               	incfsz	___flge@ff1+1,w
 13045  044C  02DE               	subwf	??___flge+1,f
 13046  044D  0857               	movf	___flge@ff1+2,w
 13047  044E  1C03               	skipc
 13048  044F  0F57               	incfsz	___flge@ff1+2,w
 13049  0450  02DF               	subwf	??___flge+2,f
 13050  0451  0858               	movf	___flge@ff1+3,w
 13051  0452  1C03               	skipc
 13052  0453  0F58               	incfsz	___flge@ff1+3,w
 13053  0454  02E0               	subwf	??___flge+3,f
 13054  0455  0860               	movf	??___flge+3,w
 13055  0456  00D8               	movwf	___flge@ff1+3
 13056  0457  085F               	movf	??___flge+2,w
 13057  0458  00D7               	movwf	___flge@ff1+2
 13058  0459  085E               	movf	??___flge+1,w
 13059  045A  00D6               	movwf	___flge@ff1+1
 13060  045B  085D               	movf	??___flge,w
 13061  045C  00D5               	movwf	___flge@ff1
 13062  045D                     l4286:	
 13063  045D  1FDC               	btfss	___flge@ff2+3,7
 13064  045E  2C7A               	goto	l1174
 13065  045F  3080               	movlw	128
 13066  0460  01DD               	clrf	??___flge
 13067  0461  01DE               	clrf	??___flge+1
 13068  0462  01DF               	clrf	??___flge+2
 13069  0463  00E0               	movwf	??___flge+3
 13070  0464  0859               	movf	___flge@ff2,w
 13071  0465  02DD               	subwf	??___flge,f
 13072  0466  085A               	movf	___flge@ff2+1,w
 13073  0467  1C03               	skipc
 13074  0468  0F5A               	incfsz	___flge@ff2+1,w
 13075  0469  02DE               	subwf	??___flge+1,f
 13076  046A  085B               	movf	___flge@ff2+2,w
 13077  046B  1C03               	skipc
 13078  046C  0F5B               	incfsz	___flge@ff2+2,w
 13079  046D  02DF               	subwf	??___flge+2,f
 13080  046E  085C               	movf	___flge@ff2+3,w
 13081  046F  1C03               	skipc
 13082  0470  0F5C               	incfsz	___flge@ff2+3,w
 13083  0471  02E0               	subwf	??___flge+3,f
 13084  0472  0860               	movf	??___flge+3,w
 13085  0473  00DC               	movwf	___flge@ff2+3
 13086  0474  085F               	movf	??___flge+2,w
 13087  0475  00DB               	movwf	___flge@ff2+2
 13088  0476  085E               	movf	??___flge+1,w
 13089  0477  00DA               	movwf	___flge@ff2+1
 13090  0478  085D               	movf	??___flge,w
 13091  0479  00D9               	movwf	___flge@ff2
 13092  047A                     l1174:	
 13093  047A  3080               	movlw	128
 13094  047B  06D8               	xorwf	___flge@ff1+3,f
 13095  047C  06DC               	xorwf	___flge@ff2+3,f
 13096  047D  085C               	movf	___flge@ff2+3,w
 13097  047E  0258               	subwf	___flge@ff1+3,w
 13098  047F  1D03               	skipz
 13099  0480  0008               	return
 13100  0481  085B               	movf	___flge@ff2+2,w
 13101  0482  0257               	subwf	___flge@ff1+2,w
 13102  0483  1D03               	skipz
 13103  0484  0008               	return
 13104  0485  085A               	movf	___flge@ff2+1,w
 13105  0486  0256               	subwf	___flge@ff1+1,w
 13106  0487  1D03               	skipz
 13107  0488  0008               	return
 13108  0489  0859               	movf	___flge@ff2,w
 13109  048A  0255               	subwf	___flge@ff1,w
 13110  048B  0008               	return
 13111  048C                     __end_of___flge:	
 13112  048C                     __ptext71:	
 13113 ;; *************** function _Rele0Desligado *****************
 13114 ;; Defined at:
 13115 ;;		line 928 in file "SlaveLiofilizadorVer1.c"
 13116 ;; Parameters:    Size  Location     Type
 13117 ;;		None
 13118 ;; Auto vars:     Size  Location     Type
 13119 ;;		None
 13120 ;; Return value:  Size  Location     Type
 13121 ;;                  1    wreg      void 
 13122 ;; Registers used:
 13123 ;;		None
 13124 ;; Tracked objects:
 13125 ;;		On entry : 100/300
 13126 ;;		On exit  : 300/0
 13127 ;;		Unchanged: 0/0
 13128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13129 ;;      Params:         0       0       0       0       0
 13130 ;;      Locals:         0       0       0       0       0
 13131 ;;      Temps:          0       0       0       0       0
 13132 ;;      Totals:         0       0       0       0       0
 13133 ;;Total ram usage:        0 bytes
 13134 ;; Hardware stack levels used:    1
 13135 ;; Hardware stack levels required when called:    1
 13136 ;; This function calls:
 13137 ;;		Nothing
 13138 ;; This function is called by:
 13139 ;;		_Auto_Relay0
 13140 ;; This function uses a non-reentrant model
 13141 ;;
 13142                           
 13143                           
 13144                           ;psect for function _Rele0Desligado
 13145  048C                     _Rele0Desligado:	
 13146  048C                     l6892:	
 13147                           ;incstack = 0
 13148                           ; Regs used in _Rele0Desligado: []
 13149                           
 13150                           
 13151                           ;SlaveLiofilizadorVer1.c: 929:      PORTCbits.RC0=0;
 13152  048C  1283               	bcf	3,5	;RP0=0, select bank0
 13153  048D  1303               	bcf	3,6	;RP1=0, select bank0
 13154  048E  1007               	bcf	7,0	;volatile
 13155  048F  0008               	return
 13156  0490                     __end_of_Rele0Desligado:	
 13157  0490                     __ptext65:	
 13158 ;; *************** function _Rele1Desligado *****************
 13159 ;; Defined at:
 13160 ;;		line 932 in file "SlaveLiofilizadorVer1.c"
 13161 ;; Parameters:    Size  Location     Type
 13162 ;;		None
 13163 ;; Auto vars:     Size  Location     Type
 13164 ;;		None
 13165 ;; Return value:  Size  Location     Type
 13166 ;;                  1    wreg      void 
 13167 ;; Registers used:
 13168 ;;		None
 13169 ;; Tracked objects:
 13170 ;;		On entry : 0/300
 13171 ;;		On exit  : 300/0
 13172 ;;		Unchanged: 0/0
 13173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13174 ;;      Params:         0       0       0       0       0
 13175 ;;      Locals:         0       0       0       0       0
 13176 ;;      Temps:          0       0       0       0       0
 13177 ;;      Totals:         0       0       0       0       0
 13178 ;;Total ram usage:        0 bytes
 13179 ;; Hardware stack levels used:    1
 13180 ;; Hardware stack levels required when called:    1
 13181 ;; This function calls:
 13182 ;;		Nothing
 13183 ;; This function is called by:
 13184 ;;		_Auto_Relay1
 13185 ;; This function uses a non-reentrant model
 13186 ;;
 13187                           
 13188                           
 13189                           ;psect for function _Rele1Desligado
 13190  0490                     _Rele1Desligado:	
 13191  0490                     l6894:	
 13192                           ;incstack = 0
 13193                           ; Regs used in _Rele1Desligado: []
 13194                           
 13195                           
 13196                           ;SlaveLiofilizadorVer1.c: 933:      PORTCbits.RC1=0;
 13197  0490  1283               	bcf	3,5	;RP0=0, select bank0
 13198  0491  1303               	bcf	3,6	;RP1=0, select bank0
 13199  0492  1087               	bcf	7,1	;volatile
 13200  0493  0008               	return
 13201  0494                     __end_of_Rele1Desligado:	
 13202  0494                     PL2:	
 13203  0494  1683               	bsf	3,5	;RP0=1, select bank3
 13204  0495  1703               	bsf	3,6	;RP1=1, select bank3
 13205  0496  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
 13206  0497  1283               	bcf	3,5	;RP0=0, select bank0
 13207  0498  1303               	bcf	3,6	;RP1=0, select bank0
 13208  0499  00D8               	movwf	___flge@ff1+3
 13209  049A  1683               	bsf	3,5	;RP0=1, select bank3
 13210  049B  1703               	bsf	3,6	;RP1=1, select bank3
 13211  049C  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
 13212  049D  1283               	bcf	3,5	;RP0=0, select bank0
 13213  049E  1303               	bcf	3,6	;RP1=0, select bank0
 13214  049F  00D7               	movwf	___flge@ff1+2
 13215  04A0  1683               	bsf	3,5	;RP0=1, select bank3
 13216  04A1  1703               	bsf	3,6	;RP1=1, select bank3
 13217  04A2  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
 13218  04A3  1283               	bcf	3,5	;RP0=0, select bank0
 13219  04A4  1303               	bcf	3,6	;RP1=0, select bank0
 13220  04A5  00D6               	movwf	___flge@ff1+1
 13221  04A6  1683               	bsf	3,5	;RP0=1, select bank3
 13222  04A7  1703               	bsf	3,6	;RP1=1, select bank3
 13223  04A8  0818               	movf	_SetPoint1^(0+384),w	;volatile
 13224  04A9  1283               	bcf	3,5	;RP0=0, select bank0
 13225  04AA  1303               	bcf	3,6	;RP1=0, select bank0
 13226  04AB  00D5               	movwf	___flge@ff1
 13227  04AC  1683               	bsf	3,5	;RP0=1, select bank3
 13228  04AD  1703               	bsf	3,6	;RP1=1, select bank3
 13229  04AE  0813               	movf	(_Temperatura1+3)^(0+384),w
 13230  04AF  1283               	bcf	3,5	;RP0=0, select bank0
 13231  04B0  1303               	bcf	3,6	;RP1=0, select bank0
 13232  04B1  00DC               	movwf	___flge@ff2+3
 13233  04B2  1683               	bsf	3,5	;RP0=1, select bank3
 13234  04B3  1703               	bsf	3,6	;RP1=1, select bank3
 13235  04B4  0812               	movf	(_Temperatura1+2)^(0+384),w
 13236  04B5  1283               	bcf	3,5	;RP0=0, select bank0
 13237  04B6  1303               	bcf	3,6	;RP1=0, select bank0
 13238  04B7  00DB               	movwf	___flge@ff2+2
 13239  04B8  1683               	bsf	3,5	;RP0=1, select bank3
 13240  04B9  1703               	bsf	3,6	;RP1=1, select bank3
 13241  04BA  0811               	movf	(_Temperatura1+1)^(0+384),w
 13242  04BB  1283               	bcf	3,5	;RP0=0, select bank0
 13243  04BC  1303               	bcf	3,6	;RP1=0, select bank0
 13244  04BD  00DA               	movwf	___flge@ff2+1
 13245  04BE  1683               	bsf	3,5	;RP0=1, select bank3
 13246  04BF  1703               	bsf	3,6	;RP1=1, select bank3
 13247  04C0  0810               	movf	_Temperatura1^(0+384),w
 13248  04C1  1283               	bcf	3,5	;RP0=0, select bank0
 13249  04C2  1303               	bcf	3,6	;RP1=0, select bank0
 13250  04C3  00D9               	movwf	___flge@ff2
 13251  04C4  0008               	return
 13252  04C5                     __end_ofPL2:	
 13253  04C5                     PL6:	
 13254  04C5  00D5               	movwf	___flge@ff1
 13255  04C6  1683               	bsf	3,5	;RP0=1, select bank3
 13256  04C7  1703               	bsf	3,6	;RP1=1, select bank3
 13257  04C8  0817               	movf	(_Temperatura0+3)^(0+384),w
 13258  04C9  1283               	bcf	3,5	;RP0=0, select bank0
 13259  04CA  1303               	bcf	3,6	;RP1=0, select bank0
 13260  04CB  00DC               	movwf	___flge@ff2+3
 13261  04CC  1683               	bsf	3,5	;RP0=1, select bank3
 13262  04CD  1703               	bsf	3,6	;RP1=1, select bank3
 13263  04CE  0816               	movf	(_Temperatura0+2)^(0+384),w
 13264  04CF  1283               	bcf	3,5	;RP0=0, select bank0
 13265  04D0  1303               	bcf	3,6	;RP1=0, select bank0
 13266  04D1  00DB               	movwf	___flge@ff2+2
 13267  04D2  1683               	bsf	3,5	;RP0=1, select bank3
 13268  04D3  1703               	bsf	3,6	;RP1=1, select bank3
 13269  04D4  0815               	movf	(_Temperatura0+1)^(0+384),w
 13270  04D5  1283               	bcf	3,5	;RP0=0, select bank0
 13271  04D6  1303               	bcf	3,6	;RP1=0, select bank0
 13272  04D7  00DA               	movwf	___flge@ff2+1
 13273  04D8  1683               	bsf	3,5	;RP0=1, select bank3
 13274  04D9  1703               	bsf	3,6	;RP1=1, select bank3
 13275  04DA  0814               	movf	_Temperatura0^(0+384),w
 13276  04DB  1283               	bcf	3,5	;RP0=0, select bank0
 13277  04DC  1303               	bcf	3,6	;RP1=0, select bank0
 13278  04DD  00D9               	movwf	___flge@ff2
 13279  04DE  0008               	return
 13280  04DF                     __end_ofPL6:	
 13281  04DF                     PL10:	
 13282  04DF  0873               	movf	_SetPoint0+3,w	;volatile
 13283  04E0  00D8               	movwf	___flge@ff1+3
 13284  04E1  0872               	movf	_SetPoint0+2,w	;volatile
 13285  04E2  00D7               	movwf	___flge@ff1+2
 13286  04E3  0871               	movf	_SetPoint0+1,w	;volatile
 13287  04E4  00D6               	movwf	___flge@ff1+1
 13288  04E5  0870               	movf	_SetPoint0,w	;volatile
 13289  04E6  0008               	return
 13290  04E7                     __end_ofPL10:	
 13291  04E7                     PL36:	
 13292  04E7  0850               	movf	?___flsub+3,w
 13293  04E8  00D8               	movwf	___flge@ff1+3
 13294  04E9  084F               	movf	?___flsub+2,w
 13295  04EA  00D7               	movwf	___flge@ff1+2
 13296  04EB  084E               	movf	?___flsub+1,w
 13297  04EC  00D6               	movwf	___flge@ff1+1
 13298  04ED  084D               	movf	?___flsub,w
 13299  04EE  0008               	return
 13300  04EF                     __end_ofPL36:	
 13301  04EF                     PL72:	
 13302  04EF  00AB               	movwf	___xxtofl@val
 13303  04F0  3001               	movlw	1
 13304  04F1  01AC               	clrf	___xxtofl@val+1
 13305  04F2  01AD               	clrf	___xxtofl@val+2
 13306  04F3  01AE               	clrf	___xxtofl@val+3
 13307  04F4  0008               	return
 13308  04F5                     __end_ofPL72:	
 13309                           
 13310                           	psect	text72
 13311  1005                     __ptext72:	
 13312 ;; *************** function _ADC_init *****************
 13313 ;; Defined at:
 13314 ;;		line 10 in file "adc.c"
 13315 ;; Parameters:    Size  Location     Type
 13316 ;;		None
 13317 ;; Auto vars:     Size  Location     Type
 13318 ;;		None
 13319 ;; Return value:  Size  Location     Type
 13320 ;;                  1    wreg      void 
 13321 ;; Registers used:
 13322 ;;		wreg, status,2, status,0
 13323 ;; Tracked objects:
 13324 ;;		On entry : 0/100
 13325 ;;		On exit  : 300/0
 13326 ;;		Unchanged: 0/0
 13327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13328 ;;      Params:         0       0       0       0       0
 13329 ;;      Locals:         0       0       0       0       0
 13330 ;;      Temps:          0       0       0       0       0
 13331 ;;      Totals:         0       0       0       0       0
 13332 ;;Total ram usage:        0 bytes
 13333 ;; Hardware stack levels used:    1
 13334 ;; Hardware stack levels required when called:    1
 13335 ;; This function calls:
 13336 ;;		Nothing
 13337 ;; This function is called by:
 13338 ;;		_main
 13339 ;; This function uses a non-reentrant model
 13340 ;;
 13341                           
 13342                           
 13343                           ;psect for function _ADC_init
 13344  1005                     _ADC_init:	
 13345                           
 13346                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13347                           
 13348                           ;incstack = 0
 13349                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13350  1005  30C0               	movlw	192
 13351  1006  1283               	bcf	3,5	;RP0=0, select bank0
 13352  1007  1303               	bcf	3,6	;RP1=0, select bank0
 13353  1008  049F               	iorwf	31,f	;volatile
 13354                           
 13355                           ;adc.c: 12:      ADCON1=0b10000000;
 13356  1009  3080               	movlw	128
 13357  100A  1683               	bsf	3,5	;RP0=1, select bank1
 13358  100B  009F               	movwf	31	;volatile
 13359                           
 13360                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13361  100C  179F               	bsf	31,7	;volatile
 13362                           
 13363                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13364  100D  1283               	bcf	3,5	;RP0=0, select bank0
 13365  100E  141F               	bsf	31,0	;volatile
 13366  100F  0008               	return
 13367  1010                     __end_of_ADC_init:	
 13368                           
 13369                           	psect	text73
 13370  1F24                     __ptext73:	
 13371 ;; *************** function _isr *****************
 13372 ;; Defined at:
 13373 ;;		line 29 in file "isr.c"
 13374 ;; Parameters:    Size  Location     Type
 13375 ;;		None
 13376 ;; Auto vars:     Size  Location     Type
 13377 ;;  tempo           2    4[COMMON] unsigned int 
 13378 ;; Return value:  Size  Location     Type
 13379 ;;                  1    wreg      void 
 13380 ;; Registers used:
 13381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13382 ;; Tracked objects:
 13383 ;;		On entry : 0/0
 13384 ;;		On exit  : 300/0
 13385 ;;		Unchanged: 0/0
 13386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13387 ;;      Params:         0       0       0       0       0
 13388 ;;      Locals:         2       0       0       0       0
 13389 ;;      Temps:          4       0       0       0       0
 13390 ;;      Totals:         6       0       0       0       0
 13391 ;;Total ram usage:        6 bytes
 13392 ;; Hardware stack levels used:    1
 13393 ;; This function calls:
 13394 ;;		Nothing
 13395 ;; This function is called by:
 13396 ;;		Interrupt level 1
 13397 ;; This function uses a non-reentrant model
 13398 ;;
 13399                           
 13400                           
 13401                           ;psect for function _isr
 13402  1F24                     _isr:	
 13403                           
 13404                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13405  1F24  188B               	btfsc	11,1	;volatile
 13406                           
 13407                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13408  1F25  108B               	bcf	11,1	;volatile
 13409                           
 13410                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13411                           
 13412                           ;isr.c: 37:       }
 13413  1F26  1C0C               	btfss	12,0	;volatile
 13414  1F27  2F9F               	goto	i1l5916
 13415                           
 13416                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13417  1F28  30B1               	movlw	177
 13418  1F29  008F               	movwf	15	;volatile
 13419                           
 13420                           ;isr.c: 42:                 TMR1L=0xF3;
 13421  1F2A  30F3               	movlw	243
 13422  1F2B  008E               	movwf	14	;volatile
 13423                           
 13424                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13425  1F2C  100C               	bcf	12,0	;volatile
 13426                           
 13427                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13428  1F2D  1FF6               	btfss	_generic_status,7
 13429  1F2E  2F31               	goto	i1l5864
 13430                           
 13431                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13432  1F2F  13F6               	bcf	_generic_status,7
 13433  1F30  0064               	clrwdt	;# 
 13434  1F31                     i1l5864:	
 13435                           
 13436                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13437  1F31  300A               	movlw	10
 13438  1F32  1683               	bsf	3,5	;RP0=1, select bank3
 13439  1F33  1703               	bsf	3,6	;RP1=1, select bank3
 13440  1F34  07AE               	addwf	_Delay_Led_Tmr0^(0+384),f	;volatile
 13441  1F35  1803               	skipnc
 13442  1F36  0AAF               	incf	(_Delay_Led_Tmr0+1)^(0+384),f	;volatile
 13443                           
 13444                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13445  1F37  3003               	movlw	3
 13446  1F38  022F               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13447  1F39  30E8               	movlw	232
 13448  1F3A  1903               	skipnz
 13449  1F3B  022E               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13450  1F3C  1C03               	skipc
 13451  1F3D  2F40               	goto	i1l5868
 13452                           
 13453                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13454  1F3E  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
 13455  1F3F  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
 13456  1F40                     i1l5868:	
 13457                           
 13458                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13459  1F40  3001               	movlw	1
 13460  1F41  022F               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13461  1F42  30F4               	movlw	244
 13462  1F43  1903               	skipnz
 13463  1F44  022E               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13464  1F45  1803               	skipnc
 13465  1F46  2F4B               	goto	i1l563
 13466                           
 13467                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13468  1F47  1283               	bcf	3,5	;RP0=0, select bank0
 13469  1F48  1303               	bcf	3,6	;RP1=0, select bank0
 13470  1F49  1786               	bsf	6,7	;volatile
 13471  1F4A  2F4E               	goto	i1l5872
 13472  1F4B                     i1l563:	
 13473                           ;isr.c: 56:                 else
 13474                           
 13475                           
 13476                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13477  1F4B  1283               	bcf	3,5	;RP0=0, select bank0
 13478  1F4C  1303               	bcf	3,6	;RP1=0, select bank0
 13479  1F4D  1386               	bcf	6,7	;volatile
 13480  1F4E                     i1l5872:	
 13481                           
 13482                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13483  1F4E  1683               	bsf	3,5	;RP0=1, select bank3
 13484  1F4F  1703               	bsf	3,6	;RP1=1, select bank3
 13485  1F50  082C               	movf	_Delay_Led_Usart^(0+384),w	;volatile
 13486  1F51  042D               	iorwf	(_Delay_Led_Usart+1)^(0+384),w	;volatile
 13487  1F52  1903               	btfsc	3,2
 13488  1F53  2F5E               	goto	i1l565
 13489                           
 13490                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13491  1F54  300A               	movlw	10
 13492  1F55  02AC               	subwf	_Delay_Led_Usart^(0+384),f	;volatile
 13493  1F56  3000               	movlw	0
 13494  1F57  1C03               	skipc
 13495  1F58  03AD               	decf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13496  1F59  02AD               	subwf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13497                           
 13498                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13499  1F5A  1283               	bcf	3,5	;RP0=0, select bank0
 13500  1F5B  1303               	bcf	3,6	;RP1=0, select bank0
 13501  1F5C  1706               	bsf	6,6	;volatile
 13502                           
 13503                           ;isr.c: 63:                    }
 13504  1F5D  2F61               	goto	i1l5878
 13505  1F5E                     i1l565:	
 13506                           ;isr.c: 64:                 else{
 13507                           
 13508                           
 13509                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13510  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
 13511  1F5F  1303               	bcf	3,6	;RP1=0, select bank0
 13512  1F60  1306               	bcf	6,6	;volatile
 13513  1F61                     i1l5878:	
 13514                           
 13515                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13516  1F61  1683               	bsf	3,5	;RP0=1, select bank3
 13517  1F62  1703               	bsf	3,6	;RP1=1, select bank3
 13518  1F63  0830               	movf	_Delay_Led_Memory^(0+384),w	;volatile
 13519  1F64  0431               	iorwf	(_Delay_Led_Memory+1)^(0+384),w	;volatile
 13520  1F65  1903               	btfsc	3,2
 13521  1F66  2F71               	goto	i1l567
 13522                           
 13523                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13524  1F67  300A               	movlw	10
 13525  1F68  02B0               	subwf	_Delay_Led_Memory^(0+384),f	;volatile
 13526  1F69  3000               	movlw	0
 13527  1F6A  1C03               	skipc
 13528  1F6B  03B1               	decf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13529  1F6C  02B1               	subwf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13530                           
 13531                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13532  1F6D  1283               	bcf	3,5	;RP0=0, select bank0
 13533  1F6E  1303               	bcf	3,6	;RP1=0, select bank0
 13534  1F6F  1686               	bsf	6,5	;volatile
 13535                           
 13536                           ;isr.c: 71:                    }
 13537  1F70  2F74               	goto	i1l5884
 13538  1F71                     i1l567:	
 13539                           ;isr.c: 72:                 else{
 13540                           
 13541                           
 13542                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13543  1F71  1283               	bcf	3,5	;RP0=0, select bank0
 13544  1F72  1303               	bcf	3,6	;RP1=0, select bank0
 13545  1F73  1286               	bcf	6,5	;volatile
 13546  1F74                     i1l5884:	
 13547                           
 13548                           ;isr.c: 77:                 tempodecorrido+=10;
 13549  1F74  300A               	movlw	10
 13550  1F75  1683               	bsf	3,5	;RP0=1, select bank3
 13551  1F76  1703               	bsf	3,6	;RP1=1, select bank3
 13552  1F77  07A0               	addwf	_tempodecorrido^(0+384),f	;volatile
 13553  1F78  1803               	skipnc
 13554  1F79  0AA1               	incf	(_tempodecorrido+1)^(0+384),f	;volatile
 13555                           
 13556                           ;isr.c: 78:                 milisegundo+=10;
 13557  1F7A  07AA               	addwf	_milisegundo^(0+384),f	;volatile
 13558  1F7B  1803               	skipnc
 13559  1F7C  0AAB               	incf	(_milisegundo+1)^(0+384),f	;volatile
 13560                           
 13561                           ;isr.c: 79:                 if(milisegundo==1000){
 13562  1F7D  30E8               	movlw	232
 13563  1F7E  062A               	xorwf	_milisegundo^(0+384),w	;volatile
 13564  1F7F  3003               	movlw	3
 13565  1F80  1903               	skipnz
 13566  1F81  062B               	xorwf	(_milisegundo+1)^(0+384),w	;volatile
 13567  1F82  1D03               	btfss	3,2
 13568  1F83  2F9F               	goto	i1l5916
 13569                           
 13570                           ;isr.c: 80:                    milisegundo=0;
 13571  1F84  01AA               	clrf	_milisegundo^(0+384)	;volatile
 13572  1F85  01AB               	clrf	(_milisegundo+1)^(0+384)	;volatile
 13573                           
 13574                           ;isr.c: 81:                    segundo++;
 13575  1F86  0AF5               	incf	_segundo,f	;volatile
 13576                           
 13577                           ;isr.c: 84:                    if(TempoCNT_0>0) TempoCNT_0--;
 13578  1F87  1303               	bcf	3,6	;RP1=0, select bank1
 13579  1F88  086F               	movf	_TempoCNT_0^(0+128),w	;volatile
 13580  1F89  1D03               	btfss	3,2
 13581  1F8A  03EF               	decf	_TempoCNT_0^(0+128),f	;volatile
 13582                           
 13583                           ;isr.c: 85:                    if(TempoCNT_1>0) TempoCNT_1--;
 13584  1F8B  086E               	movf	_TempoCNT_1^(0+128),w	;volatile
 13585  1F8C  1D03               	btfss	3,2
 13586  1F8D  03EE               	decf	_TempoCNT_1^(0+128),f	;volatile
 13587                           
 13588                           ;isr.c: 88:                    if(segundo==60){
 13589  1F8E  303C               	movlw	60
 13590  1F8F  0675               	xorwf	_segundo,w	;volatile
 13591  1F90  1D03               	btfss	3,2
 13592  1F91  2F9F               	goto	i1l5916
 13593                           
 13594                           ;isr.c: 89:                       segundo=0;
 13595  1F92  01F5               	clrf	_segundo	;volatile
 13596                           
 13597                           ;isr.c: 90:                       minuto++;
 13598  1F93  1703               	bsf	3,6	;RP1=1, select bank3
 13599  1F94  0ABB               	incf	_minuto^(0+384),f	;volatile
 13600                           
 13601                           ;isr.c: 91:                       if(minuto==60){
 13602  1F95  303C               	movlw	60
 13603  1F96  063B               	xorwf	_minuto^(0+384),w	;volatile
 13604  1F97  1D03               	btfss	3,2
 13605  1F98  2F9F               	goto	i1l5916
 13606                           
 13607                           ;isr.c: 92:                          minuto=0;
 13608  1F99  01BB               	clrf	_minuto^(0+384)	;volatile
 13609                           
 13610                           ;isr.c: 93:                          hora++;
 13611  1F9A  0AF4               	incf	_hora,f	;volatile
 13612                           
 13613                           ;isr.c: 94:                          if(hora==24){
 13614  1F9B  3018               	movlw	24
 13615  1F9C  0674               	xorwf	_hora,w	;volatile
 13616  1F9D  1903               	btfsc	3,2
 13617                           
 13618                           ;isr.c: 95:                             hora=0;
 13619  1F9E  01F4               	clrf	_hora	;volatile
 13620  1F9F                     i1l5916:	
 13621                           ;isr.c: 99:                 }
 13622                           
 13623                           
 13624                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13625  1F9F  1283               	bcf	3,5	;RP0=0, select bank0
 13626  1FA0  1303               	bcf	3,6	;RP1=0, select bank0
 13627  1FA1  1E8C               	btfss	12,5	;volatile
 13628  1FA2  2FF4               	goto	i1l583
 13629  1FA3  301E               	movlw	30
 13630                           
 13631                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13632  1FA4  1476               	bsf	_generic_status,0
 13633                           
 13634                           ;isr.c: 109:         tempo=30;
 13635  1FA5  00FB               	movwf	isr@tempo
 13636  1FA6  01FC               	clrf	isr@tempo+1
 13637                           
 13638                           ;isr.c: 110:         count=0;
 13639  1FA7  1683               	bsf	3,5	;RP0=1, select bank3
 13640  1FA8  1703               	bsf	3,6	;RP1=1, select bank3
 13641  1FA9  01A2               	clrf	_count^(0+384)	;volatile
 13642  1FAA  01A3               	clrf	(_count+1)^(0+384)	;volatile
 13643                           
 13644                           ;isr.c: 111:         pointer=usart_buffer;
 13645  1FAB  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13646  1FAC  00B2               	movwf	_pointer^(0+384)
 13647  1FAD                     i1l5936:	
 13648                           ;isr.c: 112:         while(tempo)
 13649                           
 13650                           
 13651                           ;isr.c: 112:         while(tempo)
 13652  1FAD  087B               	movf	isr@tempo,w
 13653  1FAE  047C               	iorwf	isr@tempo+1,w
 13654  1FAF  1903               	btfsc	3,2
 13655  1FB0  2FDC               	goto	i1l5938
 13656                           
 13657                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13658  1FB1  1283               	bcf	3,5	;RP0=0, select bank0
 13659  1FB2  1303               	bcf	3,6	;RP1=0, select bank0
 13660  1FB3  1E8C               	btfss	12,5	;volatile
 13661  1FB4  2FD5               	goto	i1l5934
 13662                           
 13663                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13664  1FB5  1683               	bsf	3,5	;RP0=1, select bank3
 13665  1FB6  1703               	bsf	3,6	;RP1=1, select bank3
 13666  1FB7  0832               	movf	_pointer^(0+384),w
 13667  1FB8  0084               	movwf	4
 13668  1FB9  1283               	bcf	3,5	;RP0=0, select bank0
 13669  1FBA  1303               	bcf	3,6	;RP1=0, select bank0
 13670  1FBB  081A               	movf	26,w	;volatile
 13671  1FBC  1783               	bsf	3,7	;select IRP bank2
 13672  1FBD  0080               	movwf	0
 13673                           
 13674                           ;isr.c: 118:                 if(count<32+10 -1)
 13675  1FBE  1683               	bsf	3,5	;RP0=1, select bank3
 13676  1FBF  1703               	bsf	3,6	;RP1=1, select bank3
 13677  1FC0  0823               	movf	(_count+1)^(0+384),w	;volatile
 13678  1FC1  3A80               	xorlw	128
 13679  1FC2  00FF               	movwf	127
 13680  1FC3  3080               	movlw	128
 13681  1FC4  027F               	subwf	127,w
 13682  1FC5  1D03               	skipz
 13683  1FC6  2FC9               	goto	u516_25
 13684  1FC7  3029               	movlw	41
 13685  1FC8  0222               	subwf	_count^(0+384),w	;volatile
 13686  1FC9                     u516_25:	
 13687  1FC9  1803               	skipnc
 13688  1FCA  2FD1               	goto	i1l5932
 13689                           
 13690                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13691  1FCB  1683               	bsf	3,5	;RP0=1, select bank3
 13692  1FCC  1703               	bsf	3,6	;RP1=1, select bank3
 13693  1FCD  0AA2               	incf	_count^(0+384),f	;volatile
 13694  1FCE  1903               	skipnz
 13695  1FCF  0AA3               	incf	(_count+1)^(0+384),f	;volatile
 13696                           
 13697                           ;isr.c: 121:                    pointer++;
 13698  1FD0  0AB2               	incf	_pointer^(0+384),f
 13699  1FD1                     i1l5932:	
 13700                           
 13701                           ;isr.c: 123:                 tempo=30;
 13702  1FD1  301E               	movlw	30
 13703  1FD2  00FB               	movwf	isr@tempo
 13704  1FD3  01FC               	clrf	isr@tempo+1
 13705                           
 13706                           ;isr.c: 124:             }
 13707  1FD4  2FAD               	goto	i1l5936
 13708  1FD5                     i1l5934:	
 13709                           
 13710                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13711  1FD5  3001               	movlw	1
 13712  1FD6  02FB               	subwf	isr@tempo,f
 13713  1FD7  3000               	movlw	0
 13714  1FD8  1C03               	skipc
 13715  1FD9  03FC               	decf	isr@tempo+1,f
 13716  1FDA  02FC               	subwf	isr@tempo+1,f
 13717  1FDB  2FAD               	goto	i1l5936
 13718  1FDC                     i1l5938:	
 13719                           
 13720                           ;isr.c: 131:         (*pointer)=0;
 13721  1FDC  1683               	bsf	3,5	;RP0=1, select bank3
 13722  1FDD  1703               	bsf	3,6	;RP1=1, select bank3
 13723  1FDE  0832               	movf	_pointer^(0+384),w
 13724  1FDF  0084               	movwf	4
 13725  1FE0  1783               	bsf	3,7	;select IRP bank2
 13726  1FE1  0180               	clrf	0
 13727                           
 13728                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13729  1FE2  1283               	bcf	3,5	;RP0=0, select bank0
 13730  1FE3  1303               	bcf	3,6	;RP1=0, select bank0
 13731  1FE4  1C98               	btfss	24,1	;volatile
 13732  1FE5  2FF4               	goto	i1l583
 13733                           
 13734                           ;isr.c: 134:            CREN=0;
 13735  1FE6  1218               	bcf	24,4	;volatile
 13736                           
 13737                           ;isr.c: 135:            CREN=1;
 13738  1FE7  1618               	bsf	24,4	;volatile
 13739                           
 13740                           ;isr.c: 136:            tempo=RCREG;
 13741  1FE8  081A               	movf	26,w	;volatile
 13742  1FE9  00FB               	movwf	isr@tempo
 13743  1FEA  01FC               	clrf	isr@tempo+1
 13744                           
 13745                           ;isr.c: 137:            tempo=RCREG;
 13746  1FEB  081A               	movf	26,w	;volatile
 13747  1FEC  00FB               	movwf	isr@tempo
 13748  1FED  01FC               	clrf	isr@tempo+1
 13749                           
 13750                           ;isr.c: 138:            tempo=RCREG;
 13751  1FEE  081A               	movf	26,w	;volatile
 13752  1FEF  00FB               	movwf	isr@tempo
 13753  1FF0  01FC               	clrf	isr@tempo+1
 13754                           
 13755                           ;isr.c: 139:            usart_buffer[0]=0;
 13756  1FF1  1703               	bsf	3,6	;RP1=1, select bank2
 13757  1FF2  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13758                           
 13759                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13760  1FF3  14F6               	bsf	_generic_status,1
 13761  1FF4                     i1l583:	
 13762  1FF4  087A               	movf	??_isr+3,w
 13763  1FF5  1303               	bcf	3,6	;RP1=0, select bank0
 13764  1FF6  00FF               	movwf	127
 13765  1FF7  0879               	movf	??_isr+2,w
 13766  1FF8  008A               	movwf	10
 13767  1FF9  0878               	movf	??_isr+1,w
 13768  1FFA  0084               	movwf	4
 13769  1FFB  0E77               	swapf	??_isr^(0+4294967168),w
 13770  1FFC  0083               	movwf	3
 13771  1FFD  0EFE               	swapf	126,f
 13772  1FFE  0E7E               	swapf	126,w
 13773  1FFF  0009               	retfie
 13774  2000                     __end_of_isr:	
 13775  007E                     btemp	set	126	;btemp
 13776  007E                     wtemp0	set	126
 13777                           
 13778                           	psect	intentry
 13779  0004                     __pintentry:	
 13780                           ;incstack = 0
 13781                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13782                           
 13783  0004                     interrupt_function:	
 13784  007E                     saved_w	set	btemp
 13785  0004  00FE               	movwf	btemp
 13786  0005  0E03               	swapf	3,w
 13787  0006  00F7               	movwf	??_isr
 13788  0007  0804               	movf	4,w
 13789  0008  00F8               	movwf	??_isr+1
 13790  0009  080A               	movf	10,w
 13791  000A  00F9               	movwf	??_isr+2
 13792  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13793  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13794  000D  087F               	movf	btemp+1,w
 13795  000E  00FA               	movwf	??_isr+3
 13796  000F  160A  158A  2F24   	ljmp	_isr


Data Sizes:
    Strings     14
    Constant    44
    Data        2
    BSS         159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80     80      80
    BANK1            80     78      80
    BANK3            96      3      81
    BANK2            96      0      74

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(1) Largest target is 36
		 -> log@coeff(CODE[36]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_2(CODE[1]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 32
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), buffer(BANK2[32]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 16
		 -> EEPROM_24C1025_Write_Int@local(BANK1[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK1[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 32
		 -> buffer(BANK2[32]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> USART_put_buffer@vetor(BANK0[1]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 16
		 -> usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK1[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK1[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 42
		 -> NULL(NULL[0]), usart_buffer(BANK2[42]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _ADC_Read_NTC->_log
    _log->___flmul
    _frexp->___fleq
    _eval_poly->___flmul
    _I2C_Master_Init->___lldiv
    _Decodify_Command->___fltol
    _itoa->_utoa
    _utoa->___lwdiv
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->___fltol
    ___fltol->___flmul
    ___flmul->___flsub
    _USART_put_int->___fltol
    ___fldiv->___flmul
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_I2C_Master_Write
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_I2C_Master_Read
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_I2C_Master_Write
    _Auto_Relay1->___flge
    ___xxtofl->_EEPROM_Read_Integer
    _Auto_Relay0->___flge
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flge->___flsub

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command
    _mediatemperaturaNTC->_ADC_Read_NTC
    _ADC_Read_NTC->___fldiv
    _log->_eval_poly
    _Decodify_Command->_Load_Work
    _Save_Log->_EEPROM_24C1025_Write_Int
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _Load_Work->___fldiv
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  157322
                                             76 BANK1      2     2      0
                                              0 BANK3      3     3      0
                           _ADC_init
                        _Auto_Relay0
                        _Auto_Relay1
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                          _Load_Work
                         _USART_init
                _mediatemperaturaNTC
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     122
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _mediatemperaturaNTC                                 11    11      0   50861
                                             47 BANK1     11    11      0
                       _ADC_Read_NTC
            _Package_Usart_is_for_me
                        _Rele0Ligado
                        _Rele1Ligado
                            ___fladd
                            ___fldiv
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     248
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Read_NTC                                        23    18      5   42641
                                             25 BANK1     22    17      5
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___lwdiv
                           ___xxtofl
                            _captura
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   23460
                                             78 BANK0      2     2      0
                                             16 BANK1      4     0      4
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     896
                                             12 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     520
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     9      7    9716
                                              0 BANK1     16     9      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           6     2      4     220
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    47    47      0   87000
                                             29 BANK1     47    47      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                          _Load_Work
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                               _itoa
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               5     3      2     970
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 6     2      4    2941
                                             15 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     4      4    2060
                                              7 BANK0      8     4      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     7     5      2     224
                                              1 BANK0      7     5      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      53
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     602
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     602
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             8     4      4   11976
                                             17 BANK1      8     4      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             78 BANK0      2     2      0
                                              0 BANK1      8     4      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5434
                                             53 BANK0     25    17      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            8     5      3     980
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             3     0      3    3333
                                             19 BANK1      3     0      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     2      3     238
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2822
                                             11 BANK1      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 5     3      2    2095
                                             15 BANK1      5     3      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      4     2      2    3050
                                             15 BANK1      4     2      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     992
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1829
                                             11 BANK1      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        3     1      2     964
                                              8 BANK1      3     1      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Load_Work                                            4     4      0    3953
                                             25 BANK1      4     4      0
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2544
                                              0 BANK1     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Integer                                  8     5      3     229
                                              3 BANK0      8     5      3
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  2     1      1     623
                                              5 BANK0      2     1      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     727
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     372
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   3     2      1     245
                                              3 BANK0      3     2      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    3886
                                              2 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    4866
                                             15 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    4596
                                              4 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              7     3      4    5486
                                             17 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    5452
                                             17 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          14     7      7    5226
                                              4 BANK0     13     6      7
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2     605
                                              0 BANK0      4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    6122
                                             17 BANK1      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                             9     3      6    5871
                                              8 BANK1      9     3      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    4584
                                              2 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    3091
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Auto_Relay1                                          0     0      0    7379
                     _Rele1Desligado
                        _Rele1Ligado
                             ___flge
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1158
                                             11 BANK0     14    10      4
                   _EEPROM_Read_Byte (ARG)
                _EEPROM_Read_Integer (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele1Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele1Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Auto_Relay0                                          0     0      0    6221
                     _Rele0Desligado
                        _Rele0Ligado
                             ___flge
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4723
                                             45 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    3758
                                             25 BANK0     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    1498
                                             53 BANK0     12     4      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele0Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele0Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  6     6      0      28
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Auto_Relay0
     _Rele0Desligado
     _Rele0Ligado
     ___flge
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___flsub
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
   _Auto_Relay1
     _Rele1Desligado
     _Rele1Ligado
     ___flge
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___flsub
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___xxtofl
       _EEPROM_Read_Byte (ARG)
       _EEPROM_Read_Integer (ARG)
         _EEPROM_Read_Byte
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___flsub (ARG)
               ___fladd
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _Load_Work
       _EEPROM_Read_Byte
       _EEPROM_Read_Integer
         _EEPROM_Read_Byte
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___flsub (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _EEPROM_Read_Byte (ARG)
                     _EEPROM_Read_Integer (ARG)
                       _EEPROM_Read_Byte
                   _frexp (ARG)
                     ___fleq
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___flsub (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _EEPROM_Read_Byte (ARG)
                     _EEPROM_Read_Integer (ARG)
                       _EEPROM_Read_Byte
                   _frexp (ARG)
                     ___fleq
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___flsub (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _EEPROM_Read_Byte (ARG)
                     _EEPROM_Read_Integer (ARG)
                       _EEPROM_Read_Byte
                   _frexp (ARG)
                     ___fleq
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___flsub (ARG)
               ___fladd
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
       ___flmul
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
       ___fladd (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
       _frexp (ARG)
         ___fleq
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _strcat
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _Load_Work
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___xxtofl
       _EEPROM_Read_Byte (ARG)
       _EEPROM_Read_Integer (ARG)
         _EEPROM_Read_Byte
   _USART_init
   _mediatemperaturaNTC
     _ADC_Read_NTC
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___flmul
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___flsub
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___lwdiv
       ___xxtofl
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
       _captura
       _log
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___fleq
         ___flge
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _eval_poly
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___flsub (ARG)
               ___fladd
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
         _frexp
           ___fleq
     _Package_Usart_is_for_me
     _Rele0Ligado
     _Rele1Ligado
     ___fladd
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
       _frexp (ARG)
         ___fleq
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___xxtofl
       _EEPROM_Read_Byte (ARG)
       _EEPROM_Read_Integer (ARG)
         _EEPROM_Read_Byte
     _my_delay_ms
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      3      51       9       84.4%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      4A      11       77.1%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     4E      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     148      12        0.0%
ABS                  0      0     148       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jan 04 08:01:39 2020

                              _USART_putc 0BDD                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 00B8                              ___fldiv@bexp 00B7  
                                       pc 0002                              ___fldiv@sign 00B0  
                                      PL2 0494                                        PL4 02B4  
                                      PL6 04C5                                        PL8 02CE  
                                      l49 0F61           EEPROM_24C1025_Read_Buffer@range 002F  
        EEPROM_24C1025_Write_Str@chip_add 0029                                        fsr 0004  
                           _USART_put_int 0F87                  Decodify_Command@tempchar 00E6  
                     __Umul8_16@word_mpld 0025                                       PL10 04DF  
                                     PL20 0309                                       PL12 02D7  
                                     PL30 0FA8                                       PL22 0319  
                                     PL14 02F8                                       PL40 0340  
                                     PL32 1798                                       PL24 1785  
                                     PL16 061D                                       PL50 17B3  
                                     PL42 0FB1                                       PL34 17A1  
                                     PL26 0328                                       PL18 1775  
                                     PL60 034A                                       PL52 0FCE  
                                     PL44 0FBB                                       PL36 04E7  
                                     PL28 178F                                       PL70 1F1E  
                                     PL62 17C3                                       PL54 17BC  
                                     PL46 0FC5                                       PL38 0336  
                                     PL80 0FF4                                       PL72 04EF  
                                     PL64 0FE3                                       PL56 0FD4  
                                     PL48 17AA                                       PL82 0FFA  
                                     PL74 07AB                                       PL66 17C9  
                                     PL58 0FDC                                       PL76 0FE9  
                                     PL68 17CF                                       PL78 0FEE  
      EEPROM_24C1025_Read_Buffer@cnt_1518 002D              PROCULUS_VP_Write_String@text 00B5  
                                     l307 08ED                                       l340 0B3F  
                                     l342 0BA0                                       l336 0B32  
                                     l506 04F8                                       l450 1680  
                                     l287 0706                                       l480 1F0F  
                                     l288 070A                                       l474 1EEB  
                                     l484 05E9                                       l479 1F0E  
                                     l738 176B                                       l796 0BE5  
                                     _PEN 048A                              __CFG_CPD$OFF 0000  
                                     _SEN 0488        EEPROM_24C1025_Read_Buffer@chip_add 002E  
                Decodify_Command@sizedata 00E7                                       _log 168C  
                                     _isr 1F24                                       fsr0 0004  
                           ??_Auto_Relay0 0061                             ??_Auto_Relay1 0061  
                                     indf 0000                 __end_of_EEPROM_Write_Byte 1F1E  
                            __CFG_IESO$ON 0000                              ___flmul@aexp 0062  
                            ___flmul@bexp 0063                    PROCULUS_VP_Write@vetor 00AD  
            ?_EEPROM_24C1025_Write_Buffer 0022                              ___flmul@sign 0061  
                            ___flmul@temp 006C                              ___flmul@prod 0068  
 __end_of_PROCULUS_Control_Register_Write 1DA6  __size_of_PROCULUS_Control_Register_Write 002E  
       ??_PROCULUS_Control_Register_Write 00AC          ?_PROCULUS_Control_Register_Write 00AB  
         _PROCULUS_Control_Register_Write 1D78                              __CFG_LVP$OFF 0000  
                   ??_mediatemperaturaNTC 00CF                              ___fltol@exp1 006F  
                                    l1311 12E6                                      l1305 1280  
                                    l1306 1282                                      l1331 1330  
                                    l1172 0440                                      l1316 12FB  
                                    l1340 152C                                      l1341 1529  
                                    l1174 047A                                      l1424 14C6  
                                    l1344 1544                                      l1345 1541  
                                    l1283 11DC                                      l1451 1E01  
                                    l4012 132C                                      l4004 1320  
                                    l1284 11DA                                      l1380 0116  
                                    l1437 14F8                                      l1381 0114  
                                    l1294 125D                                      l4016 1331  
                                    l1296 124B                                      l1288 11F8  
                                    l1376 00FF                                      l1297 1252  
                                    l1289 11F6                                      l1369 1633  
                                    l1377 00FD                                      l1298 1254  
                                    l1398 0234                                      l6102 01E8  
                                    l5206 17D8                                      l4280 042F  
                                    l4360 14E7                                      l4352 14D1  
                                    l6120 0212                                      l6032 0103  
                                    l4450 1EF4                                      l4274 1DA8  
                                    l6106 01EA                                      l4364 14F6  
                                    l4356 14D3                                      l4348 14BE  
                                    l6220 0EEC                                      l4452 1EF7  
                                    l4268 1DA6                                      l6116 01FE  
                                    l6044 011A                                      l5180 0BBF  
                                    l5260 1773                                      l7020 107E  
                                    l7004 102C                                      l4286 045D  
                                    l4366 14EC                                      l4358 14DC  
                                    l6126 0227                                      l5182 0BC6  
                                    l5174 1C52                                      l7110 0861  
                                    l4390 0748                                      l6216 0EE8  
                                    l4712 1548                                      l6160 0F87  
                                    l6048 0124                                      l5184 0BCA  
                                    l6304 11BF                                      l3832 0797  
                                    l5256 1770                                      l7040 10AC  
                                    l7032 1094                                      l5336 1CB8  
                                    l7050 0356                                      l4378 150E  
                                    l6242 0F16                                      l6218 0EEB  
                                    l6154 0F5A                                      l6402 0E04  
                                    l4802 1615                                      l4642 0262  
                                    l7202 09C9                                      l7114 0873  
                                    l7106 0857                                      l3932 1257  
                                    l3916 1222                                      l7060 038A  
                                    l7052 0357                                      l6236 0F06  
                                    l6244 0E95                                      l6180 0E7B  
                                    l6404 0E07                                      l6316 0608  
                                    l4732 1569                                      l4724 1561  
                                    l4644 0268                                      l6340 1D0B  
                                    l6332 1CE8                                      l3836 07A9  
                                    l3828 0786                                      l7028 108D  
                                    l6246 0F18                                      l6406 0E08  
                                    l4814 1634                                      l4750 159D  
                                    l6262 1662                                      l4670 02A4  
                                    l4662 0294                                      l7222 0A33  
                                    l7142 08F7                                      l7134 08E7  
                                    l7126 08C5                                      l7046 10DF  
                                    l3952 1286                                      l7056 038E  
                                    l7080 0407                                      l6176 0E77  
                                    l6360 0D98                                      l4808 162B  
                                    l4760 15BE                                      l6504 0822  
                                    l6096 01D5                                      l4912 07DB  
                                    l7304 0B36                                      l7232 0A68  
                                    l7216 0A13                                      l7208 09E6  
                                    l7152 0913                                      l3962 12D8  
                                    l3938 1263                                      l7058 0391  
                                    l7082 040A                                      l7074 03B1  
                                    l6178 0E7A                                      l6434 0E3F  
                                    l6274 1679                                      l6506 0838  
                                    l4658 028A                                      l6338 1CEC  
                                    l7138 08EF                                      l3980 1300  
                                    l7084 0403                                      l7076 03B2  
                                    l6428 0E2B                                      l6436 0DBB  
                                    l6356 0D94                                      l4756 15BC  
                                    l4668 0298                                      l6516 1DC5  
                                    l7228 0A4B                                      l7172 0955  
                                    l7148 0901                                      l7316 0B43  
                                    l7324 0636                                      ?_log 00B0  
                                    l3982 1302                                      l3886 1204  
                                    l6438 0E41                                      l6358 0D97  
                                    l6702 0CAD                                      l4782 15EB  
                                    l4774 15C4                                      l4758 1585  
                                    l6446 0F99                                      l6286 1E1B  
                                    l6294 1E2E                                      l6526 1DDF  
                                    l7246 0AAA                                      l7238 0A75  
                                    l7190 0992                                      l7166 093E  
                                    l7158 0923                                      l6462 16A7  
                                    l3992 130D                                      l3968 12F0  
                                    l6704 0CB0                                      l6624 0C0F  
                                    l4776 15D7                                      l6544 0509  
                                    l6448 0FA1                                      l7280 0AFE  
                                    l7256 0AC4                                      l7184 0974  
                                    l7424 06EB                                      l6730 0CD4  
                                    l6706 0CB1                                      l6626 0C12  
                                    l4858 1EAD                                      l4786 15ED  
                                    l4698 1530                                      l6490 1DA1  
                                    l4970 1C9C                                      l6810 0F7B  
                                    l7274 0AF6                                      l7266 0ADE  
                                    l7178 0961                                      l6466 16C3  
                                    l3988 130B                                      l6628 0C13  
                                    l4796 1601                                      l6492 080A  
                                    l7292 0B17                                      l7196 09B1  
                                    l7444 0724                                      ?_isr 0077  
                                    l6750 0D1B                                      l6590 1EDF  
                                    l7286 0B09                                      l6752 0D1C  
                                    l6488 1D90                                      l7480 0B4D  
                                    l6690 0C78                                      l6682 0C69  
                                    l6578 1CE1                                      l7298 0B27  
                                    l6906 1E74                                      l7394 06BB  
                                    l6748 0D18                                      l6588 1ECE  
                                    l6782 0D57                                      l6774 0D3F  
                                    l6918 1E9F                                      l6838 133F  
                                    l6880 1106                                      l6784 0D5E  
                                    l6688 0C31                                      l5992 024D  
                                    l6952 1D26                                      l6794 003D  
                                    l6892 048C                                      l6876 10FE  
                                    l6868 10EF                                      l5988 0245  
                                    l6972 1D40                                      l6894 0490  
                                    l6888 1116                                      l6986 1D47  
                                    _BETA 1834                                      STR_1 183C  
                            __CFG_WDTE$ON 0000                                      STR_2 1847  
                                    STR_3 1846                                      STR_4 1848  
                                    STR_5 1846                                      STR_6 1848  
                                    STR_7 1846                                      STR_8 1843  
                                    _CREN 00C4                                      u4045 15AB  
                                    u4215 07E7                                      u4145 160A  
                                    u6003 0065                                      u4155 1620  
                                    u2635 07A5                                      u2740 1242  
                                    u2750 1243                                      u2735 1236  
                                    u4265 1CA5                                      u3395 1DAE  
                                    u6115 1E41                                      u2853 1298  
                                    u4453 17EA                                      u5503 0E75  
                                    u5513 0EB3                                      _RCEN 048B  
                                    u5533 0EE6                                      u5445 0207  
                                    u5470 0F57                                      u5703 0DCC  
                                    u5455 021D                                      u5615 1E21  
                                    u6095 1E87                                      u5545 0EA2  
                                    u4593 1CCA                                      u5723 0E02  
                                    u3875 0272                                      u5493 0E66  
                                    u6607 0C5A                                      u5575 166B  
                                    u6617 0C86                                      u6537 063E  
                                    u5683 0D83                                      u6627 0CFB  
                                    u6547 1CD3                                      u5693 0D92  
                                    u6637 0D6A                                      u5933 0C9C  
                                    u6557 17F2                                      u6647 0DE5  
                                    u5943 0CAB                                      u6567 1DB6  
                                    u6657 0E4D                                      u5953 0CE1  
                                    u5873 0BFE                                      u6577 1EC5  
                                    u6667 0EC9                                      u5883 0C0D  
                                    u6587 1F18                                      u6677 0F29  
                                    u5973 0D16                                      u5893 0C44  
                                    u6597 05F9                                      _RSEN 0489  
                                    _WPUB 0095                      PROCULUS_Buzzer@vetor 00B1  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
        __end_of_I2C_Master_RepeatedStart 0F6D                                      _main 0636  
                                    _hora 0074                                      _itoa 0F6D  
       __size_of_EEPROM_24C1025_Write_Int 001F                                      btemp 007E  
                                    _utoa 1DC0         __size_of_EEPROM_24C1025_Write_Str 009D  
                                    log@x 00B0                 ?_EEPROM_24C1025_Write_Int 00A8  
                           __CFG_BOREN$ON 0000                 ?_EEPROM_24C1025_Write_Str 0022  
             __size_of_EEPROM_Read_String 0014                                      start 0012  
                        __end_of_ADC_init 1010                          _BALANCE_RESISTOR 1838  
                         ___fldiv@new_exp 00B1        EEPROM_24C1025_Read_Buffer@sizedata 0028  
                           ??_Rele0Ligado 0020                             ??_Rele1Ligado 0020  
                                   ??_log 006E                                     ??_isr 0077  
                        ?_I2C_Master_Init 002D                          ?_I2C_Master_Read 0020  
                        ?_I2C_Master_Wait 0077                          ?_I2C_Master_Stop 0077  
                          ?_USART_put_int 00A8                     __size_of_ADC_Read_NTC 0172  
                           ___fltol@sign1 006E                           __end_of___fladd 1337  
                                   ?_main 0077                                     _ACKEN 048C  
                                   _ACKDT 048D                           __end_of___fldiv 1638  
                                   ?_itoa 002F                                     _EEADR 010D  
                         __end_of___flmul 023F                           __end_of___flsub 1654  
                         __end_of___fltol 02B4                                     _ANSEL 0188  
                         __end_of___lldiv 1EA8                                     ?_utoa 0027  
                                   _T1CON 0010                           __end_of___lwdiv 167E  
                         __end_of___lwmod 1E33                                     i1l563 1F4B  
                                   i1l565 1F5E                                     i1l583 1FF4  
                                   i1l567 1F71                                     _RCREG 001A  
                                   _TMR1H 000F                                     _TMR1L 000E  
                                   _SPBRG 0099                                     _PORTA 0005  
                                   _PORTB 0006                                     _PORTC 0007  
                                   _PORTE 0009                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
         EEPROM_24C1025_Read_Int@chip_add 0035                                     _TRISE 0089  
                                   _TXREG 0019                           __end_of_captura 168C  
                           __CFG_PWRTE$ON 0000                              _usart_buffer 0110  
               EEPROM_Read_Integer@result 0028                                     _canal 01B5  
            __size_of_EEPROM_Read_Integer 001B                                     _count 01A2  
                                   _frexp 072E             ??_EEPROM_24C1025_Write_Buffer 0029  
      __size_of_EEPROM_24C1025_Write_Byte 0014                                     _texto 01BC  
              ?_EEPROM_24C1025_Write_Byte 002F                       __end_of_Auto_Relay0 03AB  
                     __end_of_Auto_Relay1 041E                                     pclath 000A  
                                   utoa@c 002D                                     utoa@v 002B  
                                   status 0003                                     wtemp0 007E  
                 ADC_Read_NTC@resistencia 00C4           EEPROM_24C1025_Read_Byte@mem_add 0031  
                            __end_of_BETA 1838                   ADC_Read_NTC@temperatura 00CB  
                 __size_of_PROCULUS_Delay 001A                            __CFG_MCLRE$OFF 0000  
       __size_of_PROCULUS_VP_Write_String 0013                               ?_USART_init 0020  
                         __initialization 0015                 ?_PROCULUS_VP_Write_String 00B3  
                            _ADC_Read_NTC 1337                               ?_USART_putc 0077  
                             log@exponent 006E                              __end_of_main 072E  
                              _Histerese0 019C                                _Histerese1 01B8  
                            __end_of_itoa 0F87                              __end_of_utoa 1E0F  
                          Send_To_MB@size 0021                          _USART_put_buffer 1C98  
                __end_of_EEPROM_Read_Byte 0602                                    ??_main 01DC  
                                  ??_itoa 0033                          __end_of_Save_Log 00CC  
                                  ??_utoa 002B                       __end_of_Rele0Ligado 1106  
                        _USART_put_string 1CE8                       __end_of_Rele1Ligado 111E  
                   EEPROM_Write_Byte@addr 0023                     EEPROM_Write_Byte@dado 0020  
              __size_of_EEPROM_Write_Byte 003B                         ?_I2C_Master_Start 0077  
               EEPROM_Write_Byte@last_GIE 0024                  _mediatemperaturaNTC$2292 00D0  
                       ?_I2C_Master_Write 0020                        ??_I2C_Master_Start 0020  
                                  _ADCON1 009F                        ??_I2C_Master_Write 0022  
               PROCULUS_Show_Screen@vetor 00B1                                    ?_frexp 002C  
                                  _ADRESH 001E                                    _ADRESL 009E  
                                  _EEDATA 010C                                    _EECON2 018D  
                              _Send_To_MB 0BA1                     EEPROM_Write_Integer@i 002B  
                                  _ANSELH 0189              __end_of_PROCULUS_Show_Screen 1D58  
                          _Rele0Desligado 048C                                    i1l5932 1FD1  
                                  i1l5916 1F9F                                    i1l5934 1FD5  
                                  i1l5936 1FAD                                    i1l5872 1F4E  
                                  i1l5864 1F31                                    i1l5938 1FDC  
                                  i1l5884 1F74                                    i1l5868 1F40  
                                  i1l5878 1F61                                    u516_25 1FC9  
       __end_of_EEPROM_24C1025_Write_Byte 1C50                              ?_my_delay_ms 0020  
                                  _TMR1IE 0460                                    _TMR1CS 0081  
                ?_EEPROM_24C1025_Fill_All 00B1                        __size_of_Load_Work 00D8  
                                  _SSPADD 0093                                    _TRISC3 043B  
                                  _TRISC4 043C                                    _TRISC6 043E  
                                  _TRISC7 043F                                    _SSPCON 0014  
                                  _SSPBUF 0013            EEPROM_24C1025_Fill_All@mem_add 00B4  
                        __end_of___xxtofl 1517                            _Rele1Desligado 0490  
                      PROCULUS_VP_Write@i 00B2                  __end_of_Decodify_Command 0BA1  
                              _TempoCNT_0 00EF                                _TempoCNT_1 00EE  
                              _TempoOFF_0 01B9                                _TempoOFF_1 01B6  
                ?_EEPROM_24C1025_Read_Int 0031                  ?_EEPROM_24C1025_Read_Str 0024  
                _I2C_Master_RepeatedStart 0F6A      __size_of_EEPROM_24C1025_Write_Buffer 00DB  
                                  ___flge 041E                                    ___fleq 0775  
                               ??___fladd 0041                                 ??___fldiv 00A8  
                               ??___flmul 005D                                 ??___flsub 0055  
                               ??___fltol 00A4                           ??_USART_put_int 0070  
                               ??___lldiv 0028                                    _header 01A4  
                               ??___lwdiv 0024                                 ??___lwmod 0024  
                                  _buffer 013A                         _USART_to_Protocol 07B1  
                         USART_putc@value 0020                                    _minuto 01BB  
                               ??_captura 0022                        ?_USART_to_Protocol 0077  
            Decodify_Command@add_24LCxxxx 00E8                                    _strcat 0BBD  
                                  _strcpy 1C50                                    _strlen 0F95  
       EEPROM_24C1025_Read_Buffer@mem_add 0024          __end_of_EEPROM_24C1025_Read_Byte 1C7D  
                      __size_of__Umul8_16 001B                               _Auto_Relay0 0351  
                             _Auto_Relay1 03AB                                    saved_w 007E  
       EEPROM_24C1025_Write_Byte@chip_add 0034                                 ?_ADC_init 0077  
                     ??_USART_to_Protocol 0020                       __size_of_USART_init 0039  
                  __end_of_Rele0Desligado 0490                       __size_of_USART_putc 0011  
                              ___flge@ff1 0055                                ___flge@ff2 0059  
                  __end_of_Rele1Desligado 0494                              ___xxtofl@arg 0035  
                            ___xxtofl@exp 0034                              ___xxtofl@val 002B  
                              ___fleq@ff1 0020                                ___fleq@ff2 0024  
                        __end_oflog@coeff 1834                   __end_of__initialization 0033  
     PROCULUS_Control_Register_Write@size 00AB                              eval_poly@res 00AC  
                              ___fltol@f1 00A0                              _Board_Number 01B4  
                          __pcstackCOMMON 0077                  __size_of_PROCULUS_Buzzer 0020  
               __end_of_USART_to_Protocol 07FC                              __pidataBANK3 0000  
                             _Rele0Ligado 10EF                             __end_of_frexp 0775  
                             _Rele1Ligado 1106                     USART_put_string@vetor 0021  
                              __end_ofPL2 04C5                                __end_ofPL4 02CE  
                              __end_ofPL6 04DF                                __end_ofPL8 02D7  
                       __end_of_Load_Work 05E1                       my_delay_ms_WDT@time 0020  
           __size_of_EEPROM_Write_Integer 0023                  __size_of_my_delay_ms_WDT 002D  
                          _OPTION_REGbits 0081                  __end_of_BALANCE_RESISTOR 183C  
        __end_of_EEPROM_24C1025_Write_Int 00EB                        Decodify_Command@hh 00BF  
                      Decodify_Command@mm 00C9          __end_of_EEPROM_24C1025_Write_Str 0C8B  
                      Decodify_Command@ss 00D3                      USART_put_buffer@loop 0025  
                    USART_put_buffer@size 0021                                ??_ADC_init 0020  
             __end_of_EEPROM_Write_String 1EE3           __end_of_EEPROM_24C1025_Fill_All 0068  
                         ?_Rele0Desligado 0077                                   ??_frexp 0031  
                             ?_Send_To_MB 0077                    __size_of_Send_Reply_OK 0007  
                              __pbssBANK1 00EE                                __pbssBANK2 0110  
                              __pbssBANK3 0190                        __size_of_eval_poly 00AA  
                         ?_Rele1Desligado 0077           __end_of_EEPROM_24C1025_Read_Int 1C98  
         __end_of_EEPROM_24C1025_Read_Str 0D70                  ?_Package_Usart_is_for_me 0077  
                               ?_Save_Log 00B1                            _PROCULUS_Delay 1DA6  
                       __end_of__Umul8_16 025A                                __pmaintext 0636  
                                 ?___flge 0055                                   ?___fleq 0020  
                     Save_Log@add_datalog 00B1                       _EEPROM_Read_Integer 0602  
              PROCULUS_Show_Screen@screen 00AF                                __pintentry 0004  
                    mediatemperaturaNTC@i 00D9                      _PROCULUS_Show_Screen 1D4E  
                                 ?_strcat 0020                                   _T1CKPS0 0084  
                                 _T1CKPS1 0085                                   ?_strcpy 0020  
                                 ?_strlen 0020               __end_of_mediatemperaturaNTC 10EF  
                               ?___xxtofl 002B                      ?_EEPROM_Read_Integer 0023  
                   Decodify_Command@dados 00DD               EEPROM_24C1025_Read_Int@data 0036  
                                 _SSPCON2 0091          __end_of_PROCULUS_VP_Write_String 1C3C  
                 EEPROM_Read_Integer@addr 0026                                   _SSPSTAT 0094  
                _EEPROM_24C1025_Read_Byte 1C65                                __stringtab 1800  
                     PROCULUS_VP_Write@vp 00AB               ??_EEPROM_24C1025_Write_Byte 0034  
                __end_of_USART_put_buffer 1CB4                __end_of_EEPROM_Read_String 0509  
                  __end_of_PROCULUS_Delay 1DC0                  __end_of_USART_put_string 1D15  
                    __size_of_my_delay_ms 002C                                ??_Save_Log 00B5  
                         PROCULUS_Delay@i 0024                              ??_USART_init 0024  
             EEPROM_24C1025_Read_Str@ctrl 002E                              ??_USART_putc 0020  
              __size_of_USART_to_Protocol 004B               PROCULUS_Buzzer@time_ms_x_10 00AF  
                                 _Status0 01A8                                   _Status1 01A6  
                         __size_of___flge 006E                           __size_of___fleq 0036  
                                 ___fladd 11C8                                   ___fldiv 1517  
                EEPROM_Write_Integer@addr 0029                                   ___flmul 00EB  
                EEPROM_Write_Integer@dado 0025                                   ___flsub 1638  
                                 ___fltol 025A                                   ___lldiv 1E60  
                                 ___lwdiv 1654                                   ___lwmod 1E0F  
                           _Send_Reply_OK 1CE1                       __size_of_Send_To_MB 001C  
                   ?_PROCULUS_Show_Screen 00AF                         __end_of_eval_poly 11C8  
                                 _captura 167E                                   __ptext1 1CB4  
                                 __ptext2 1010                                   __ptext3 17D4  
                                 __ptext4 175F                                   __ptext5 1337  
                                 __ptext6 168C                                   __ptext7 072E  
                                 __ptext8 0775                                   __ptext9 111E  
                       ??_PROCULUS_Buzzer 0070                                   _destino 01B3  
                       ?_EEPROM_Read_Byte 0077                           __size_of_strcat 0020  
                         __size_of_strcpy 0015                           __size_of_strlen 0013  
                            __size_of_log 00D3                              __size_of_isr 00DC  
                              ??___xxtofl 002F                        ??_EEPROM_Read_Byte 0020  
                                 _segundo 0075                  __size_of_I2C_Master_Init 002D  
                __size_of_I2C_Master_Read 0022                            _usart_protocol 01CC  
                   ??_EEPROM_Read_Integer 0026                  __size_of_I2C_Master_Wait 0009  
                __size_of_I2C_Master_Stop 0003             EEPROM_24C1025_Write_Int@local 00AF  
                                 _pointer 01B2             EEPROM_24C1025_Write_Byte@data 0033  
                                 clrloop0 0803                        __end_of_USART_init 1D4E  
         __end_of_Package_Usart_is_for_me 1775                        __end_of_USART_putc 0BEE  
                    end_of_initialization 0033                  _EEPROM_24C1025_Write_Int 00CC  
                       ??_my_delay_ms_WDT 0024                  _EEPROM_24C1025_Write_Str 0BEE  
              ??_I2C_Master_RepeatedStart 0020                                   itoa@buf 0034  
                                 itoa@val 002F                           ?_PROCULUS_Delay 0020  
                         my_delay_ms@time 0020           EEPROM_24C1025_Write_Buffer@data 0027  
         EEPROM_24C1025_Write_Buffer@ctrl 002E                          ADC_Read_NTC@calc 00BE  
               __size_of_I2C_Master_Start 0008                 __size_of_I2C_Master_Write 0006  
                       ?_Decodify_Command 0077                           ___lldiv@divisor 0020  
                         ___lldiv@counter 002C                                 _RL0Status 01E0  
                               _RL1Status 01DF                        ??_Decodify_Command 00BD  
                               _RCSTAbits 0018                          I2C_Master_Init@c 002D  
                        I2C_Master_Read@a 0020                            ?_Send_Reply_OK 0077  
                                 utoa@buf 002E                 _EEPROM_24C1025_Write_Byte 1C3C  
                                 utoa@val 0027          __size_of_EEPROM_24C1025_Fill_All 0031  
                                 strlen@s 0024                        USART_to_Protocol@i 0022  
                               _PORTAbits 0005                                 _PORTBbits 0006  
                               _PORTCbits 0007                          _Delay_Led_Memory 01B0  
            ??_EEPROM_24C1025_Read_Buffer 002B             EEPROM_24C1025_Write_Str@range 002A  
                mediatemperaturaNTC@canal 00D4                               ___fladd@grs 004C  
        __size_of_EEPROM_24C1025_Read_Int 001B          __size_of_EEPROM_24C1025_Read_Str 00E5  
                            ?_Auto_Relay0 0077                              ?_Auto_Relay1 0077  
                           ___xxtofl@sign 0033       __end_of_EEPROM_24C1025_Write_Buffer 0F2E  
             _EEPROM_24C1025_Write_Buffer 0E53                               ___fldiv@grs 00B3  
                             ___fldiv@rem 00AC      PROCULUS_Control_Register_Write@vetor 00AD  
        EEPROM_24C1025_Write_Buffer@count 002B           EEPROM_24C1025_Write_Int@mem_add 00A8  
        EEPROM_24C1025_Write_Buffer@range 002D                         __size_of_ADC_init 000B  
                 Decodify_Command@tempint 00E0                     PROCULUS_VP_Write@size 00AF  
         EEPROM_24C1025_Read_Str@chip_add 002C                               ___flmul@grs 0064  
                _PROCULUS_VP_Write_String 1C29                                 _TXSTAbits 0098  
     __size_of_EEPROM_24C1025_Read_Buffer 00E3                    PROCULUS_Delay@tempo_ms 0020  
                  ??_PROCULUS_Show_Screen 0070                              ?_Rele0Ligado 0077  
                            ?_Rele1Ligado 0077                            __end_of___flge 048C  
                          __end_of___fleq 07AB                     __end_of_USART_put_int 0F95  
                             _BAUDCTLbits 0187                          ??_Rele0Desligado 0020  
                          __end_of_strcat 0BDD                            __end_of_strcpy 1C65  
                          __end_of_strlen 0FA8                               __end_ofPL10 04E7  
                             __end_ofPL20 0319                               __end_ofPL12 02F8  
                             __end_ofPL30 0FB1                               __end_ofPL22 0328  
                             __end_ofPL14 0309                               __end_ofPL40 034A  
                             __end_ofPL32 17A1                               __end_ofPL24 178F  
                             __end_ofPL16 0636                               __end_ofPL50 17BC  
                             __end_ofPL42 0FBB                               __end_ofPL34 17AA  
                             __end_ofPL26 0336                               __end_ofPL18 1785  
                             __end_ofPL60 0351                               __end_ofPL52 0FD4  
                             __end_ofPL44 0FC5                               __end_ofPL36 04EF  
                             __end_ofPL28 1798                               __end_ofPL70 1F24  
                             __end_ofPL62 17C9                               __end_ofPL54 17C3  
                             __end_ofPL46 0FCE                               __end_ofPL38 0340  
                             __end_ofPL80 0FFA                               __end_ofPL72 04F5  
                             __end_ofPL64 0FE9                               __end_ofPL56 0FDC  
                             __end_ofPL48 17B3                               __end_ofPL82 1000  
                             __end_ofPL74 07B1                               __end_ofPL66 17CF  
                             __end_ofPL58 0FE3                               __end_ofPL76 0FEE  
                             __end_ofPL68 17D4                               __end_ofPL78 0FF4  
                     start_initialization 0015                                eval_poly@d 00A4  
                              eval_poly@n 00A5                                eval_poly@x 00A0  
                        ??_Rele1Desligado 0020                                 _Load_Work 0509  
                             __end_of_log 175F                               __end_of_isr 2000  
                             USART_init@i 0024                              ??_Send_To_MB 0021  
                              frexp@value 002C                         ??_I2C_Master_Init 0031  
                       ??_I2C_Master_Read 0022                         ??_I2C_Master_Wait 0020  
                       ??_I2C_Master_Stop 0020              __end_of_EEPROM_Write_Integer 1ECB  
        EEPROM_24C1025_Write_Int@chip_add 00AE                                 _SetPoint0 0070  
                               _SetPoint1 0198                  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                     Decodify_Command@add 00DF                                 _TempoON_0 01BA  
                               _TempoON_1 01B7                     USART_put_buffer@vetor 0027  
                         ??_Send_Reply_OK 0025                                  ??___flge 005D  
                                ??___fleq 0028                         __size_of_Save_Log 0064  
                               __Umul8_16 023F                               __pdataBANK3 01DF  
                      __end_of_Send_To_MB 0BBD          __size_of_Package_Usart_is_for_me 0016  
                                ??_strcat 0022                                  ??_strcpy 0021  
                                ??_strlen 0023                ??_EEPROM_24C1025_Read_Byte 0035  
      EEPROM_24C1025_Write_Buffer@mem_add 0022                                 ___fladd@a 003D  
                               ___fladd@b 0039          EEPROM_24C1025_Write_Byte@mem_add 002F  
                               ___fldiv@a 00A0                                 ___fldiv@b 00A4  
                               ___flmul@a 0059                                 ___flmul@b 0055  
                             __pbssCOMMON 0070                                 ___flsub@a 004D  
                               ___flsub@b 0051                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                           __pcstackBANK3 01DC                                ?_Load_Work 0077  
                       _PROCULUS_VP_Write 080A                         __size_of___xxtofl 006E  
                      ?_PROCULUS_VP_Write 00AB                       USART_put_buffer@ptr 0026  
                       ?_USART_put_buffer 0021              __size_of_EEPROM_Write_String 0018  
                        _I2C_Master_Start 0F34                        ??_USART_put_buffer 0023  
                        _I2C_Master_Write 0F2E                       ??_PROCULUS_VP_Write 00B0  
                          _tempodecorrido 01A0                         ?_USART_put_string 0021  
                         _PROCULUS_Buzzer 1D58                          ___lwdiv@dividend 0022  
                           ?_ADC_Read_NTC 00B9            Package_Usart_is_for_me@retorno 0020  
                      ??_USART_put_string 0023                                  ?___fladd 0039  
                                ?___fldiv 00A0                   _EEPROM_24C1025_Fill_All 0037  
                                ?___flmul 0055                                  ?___flsub 004D  
                                ?___fltol 00A0                                  ?___lldiv 0020  
                              ?__Umul8_16 0020                        _EEPROM_Read_String 04F5  
                                ?___lwdiv 0020                                  ?___lwmod 0020  
      __end_of_EEPROM_24C1025_Read_Buffer 0E53                _EEPROM_24C1025_Read_Buffer 0D70  
                                ?_captura 0020                                 __pstrings 1800  
                         _my_delay_ms_WDT 1CB4                   _EEPROM_24C1025_Read_Int 1C7D  
                 _EEPROM_24C1025_Read_Str 0C8B                    EEPROM_Read_Integer@ptr 0027  
              ??_EEPROM_24C1025_Write_Int 0070                ??_EEPROM_24C1025_Write_Str 0027  
                     ?_EEPROM_Read_String 0023                                 _eval_poly 111E  
               __end_of_PROCULUS_VP_Write 083F                EEPROM_24C1025_Read_Str@cnt 002B  
                                _ADC_init 1005                          ___lwdiv@quotient 0025  
                 EEPROM_Write_Integer@ptr 002A                      __size_of_Auto_Relay0 005A  
                    __size_of_Auto_Relay1 0073                          ??_PROCULUS_Delay 0022  
                          __size_of_frexp 0047            EEPROM_24C1025_Read_Buffer@data 0029  
            __size_of_mediatemperaturaNTC 00DF            EEPROM_24C1025_Read_Buffer@ctrl 0030  
                           ??_my_delay_ms 0024                 __size_of_EEPROM_Read_Byte 0021  
                       interrupt_function 0004           EEPROM_24C1025_Write_Str@mem_add 0022  
                    ??_EEPROM_Read_String 0024                                 clear_ram0 0802  
                                _PIE1bits 008C                            ??_ADC_Read_NTC 0070  
                                _PIR1bits 000C          PROCULUS_Control_Register_Write@i 00AE  
                  Decodify_Command@OutPut 00E2                   mediatemperaturaNTC@Temp 00D5  
                         _Delay_Led_Usart 01AC              EEPROM_24C1025_Read_Byte@data 0036  
                    __size_of_Rele0Ligado 0017                      __size_of_Rele1Ligado 0018  
             __end_of_EEPROM_Read_Integer 061D                                _ADCON0bits 001F  
                             __stringbase 180F                                _ADCON1bits 009F  
               __size_of_Decodify_Command 0362                      _EEPROM_Write_Integer 1EA8  
          EEPROM_24C1025_Read_Int@mem_add 0031                                ?_eval_poly 00A0  
                               main@reset 00EC                               ??_Load_Work 00B9  
              ??_PROCULUS_VP_Write_String 0070                       I2C_Master_Read@temp 0022  
                 __end_of_PROCULUS_Buzzer 1D78                            _generic_status 0076  
                               frexp@eptr 0030                                _EECON1bits 018C  
                                _Save_Log 0068                 ??_EEPROM_24C1025_Fill_All 0070  
                     __end_of_my_delay_ms 1800              EEPROM_24C1025_Read_Str@range 002D  
            EEPROM_24C1025_Read_Str@texto 0028                   __end_of_my_delay_ms_WDT 1CE1  
                            my_delay_ms@i 0026                             ADC_Read_NTC@B 00C2  
                           ADC_Read_NTC@i 00C8                               ??__Umul8_16 0023  
       __size_of_I2C_Master_RepeatedStart 0003                          __size_of___fladd 016F  
               ??_EEPROM_24C1025_Read_Int 0035                   _Package_Usart_is_for_me 175F  
                        __size_of___fldiv 0121                 ??_EEPROM_24C1025_Read_Str 0029  
                        __size_of___flmul 0154                 ?_I2C_Master_RepeatedStart 0077  
                        __size_of___flsub 001C                          __size_of___fltol 005A  
                        __size_of___lldiv 0048                          __size_of___lwdiv 002A  
                        __size_of___lwmod 0024                        __end_of__stringtab 1810  
     EEPROM_24C1025_Write_Buffer@chip_add 002C                       USART_put_string@ptr 0023  
                        __size_of_captura 000E                     ?_EEPROM_Write_Integer 0025  
                            _Temperatura0 0194                              _Temperatura1 0190  
                         _I2C_Master_Init 1E33                           _I2C_Master_Read 0F3F  
                                ___xxtofl 14A9                __size_of_PROCULUS_VP_Write 0035  
                         _I2C_Master_Wait 0F61                                strcat@from 0020  
        EEPROM_24C1025_Read_Byte@chip_add 0035                           _I2C_Master_Stop 0F3C  
                         ___lwdiv@divisor 0020                           ___lwdiv@counter 0024  
                                __ptext10 167E                                  __ptext11 1D15  
                                __ptext20 07B1                                  __ptext12 1E33  
                                __ptext21 1C98                                  __ptext13 1E60  
                                __ptext30 0F95                                  __ptext22 0BA1  
                                __ptext14 083F                                  __ptext31 080A  
                                __ptext23 1CE1                                  __ptext15 1C50  
                                __ptext40 1517                                  __ptext32 1D4E  
                                __ptext24 1CE8                                  __ptext16 0BBD  
                                __ptext41 0602                                  __ptext33 1D58  
                                __ptext25 0068                                  __ptext17 0F6D  
                                __ptext50 1C7D                                  __ptext42 1ECB  
                                __ptext34 1654                                  __ptext26 025A  
                                __ptext18 1DC0                                  __ptext51 1C65  
                                __ptext43 1EA8                                  __ptext35 1D78  
                                __ptext27 00EB                                  __ptext19 1E0F  
                                __ptext60 0F34                                  __ptext52 0D70  
                                __ptext44 1EE3                                  __ptext36 0F87  
                                __ptext28 023F                                  __ptext61 0F61  
                                __ptext53 0F6A                                  __ptext45 04F5  
                                __ptext37 0BDD                                  __ptext29 1C29  
                                __ptext70 10EF                                  __ptext62 03AB  
                                __ptext54 0F3F                                  __ptext46 05E1  
                                __ptext38 1DA6                                  __ptext71 048C  
                                __ptext63 14A9                                  __ptext55 0037  
                                __ptext47 0BEE                                  __ptext39 0509  
                                __ptext72 1005                                  __ptext64 1106  
                                __ptext56 00CC                                  __ptext48 1C3C  
                                __ptext73 1F24                                  __ptext65 0490  
                                __ptext57 0E53                                  __ptext49 0C8B  
                                __ptext66 0351                                  __ptext58 0F2E  
                                __ptext67 1638                                  __ptext59 0F3C  
                                __ptext68 11C8                                  __ptext69 041E  
                       __CFG_BOR4V$BOR40V 0000                        USART_put_int@value 00A8  
                              strcpy@from 0020                             __size_of_main 00F8  
                           __size_of_itoa 001A                             __size_of_utoa 004F  
            EEPROM_24C1025_Fill_All@value 00B1                PROCULUS_VP_Write_String@vp 00B3  
     EEPROM_24C1025_Write_Buffer@sizedata 0026                               _milisegundo 01AA  
                          _Delay_Led_Tmr0 01AE             __size_of_PROCULUS_Show_Screen 000A  
                     _EEPROM_Write_String 1ECB                                  log@coeff 1810  
                __end_of_I2C_Master_Start 0F3C                  __end_of_I2C_Master_Write 0F34  
                              _INTCONbits 000B                               ??_eval_poly 00A7  
                    __end_of_ADC_Read_NTC 14A9                                  isr@tempo 007B  
                                itoa@base 0031                      EEPROM_Read_Byte@addr 0022  
                  EEPROM_Read_String@addr 0024                    EEPROM_Read_String@dado 0023  
                        my_delay_ms_WDT@i 0026                                  intlevel1 0000  
                        ?_PROCULUS_Buzzer 00AF                         USART_put_int@dado 00AA  
                        _EEPROM_Read_Byte 05E1                               _my_delay_ms 17D4  
                       ADC_Read_NTC@canal 0077                          ___lwmod@dividend 0022  
                    ?_EEPROM_Write_String 0025                          ___lldiv@dividend 0024  
                  __size_of_USART_put_int 000E              EEPROM_24C1025_Write_Int@data 00AC  
                    EEPROM_Read_Integer@i 002A                   EEPROM_Write_String@addr 0026  
                 EEPROM_Write_String@dado 0025                         ADC_Read_NTC@value 00C9  
                      USART_init@baudrate 0020                                 stringcode 180A  
                              _OSCCONbits 008F                 ??_Package_Usart_is_for_me 0020  
                        ?_my_delay_ms_WDT 0020                     __end_of_Send_Reply_OK 1CE8  
                     _mediatemperaturaNTC 1010                   __end_of_I2C_Master_Init 1E60  
                 __end_of_I2C_Master_Read 0F61                   __end_of_I2C_Master_Wait 0F6A  
                 __end_of_I2C_Master_Stop 0F3F              EEPROM_24C1025_Write_Str@data 0026  
            EEPROM_24C1025_Write_Str@ctrl 002B                 __size_of_USART_put_buffer 001C  
             ?_EEPROM_24C1025_Read_Buffer 0024           EEPROM_24C1025_Fill_All@chip_add 00B3  
                  ??_EEPROM_Write_Integer 0027                                  utoa@base 0029  
                  __Umul8_16@multiplicand 0020           USART_to_Protocol@usart_protocol 0024  
                        _Decodify_Command 083F                                  strcat@cp 0023  
                                strcat@to 0024                 __size_of_USART_put_string 002D  
                        ___lldiv@quotient 0028                         I2C_Master_Write@d 0020  
                         ___lwmod@divisor 0020                                  strcpy@cp 0023  
                                strlen@cp 0023                                  strcpy@to 0022  
                         ___lwmod@counter 0024                                  stringdir 180A  
                                stringtab 1800                         _EEPROM_Write_Byte 1EE3  
          EEPROM_24C1025_Read_Str@mem_add 0024                             ___fladd@signs 0049  
                    ?_mediatemperaturaNTC 0077                        ?_EEPROM_Write_Byte 0020  
                   ??_EEPROM_Write_String 0026                   __size_of_Rele0Desligado 0004  
                            ___fladd@aexp 004A                              ___fladd@bexp 004B  
       __size_of_EEPROM_24C1025_Read_Byte 0018                 ?_EEPROM_24C1025_Read_Byte 0031  
                     EEPROM_Read_String@c 0025                      __Umul8_16@multiplier 0027  
                 __size_of_Rele1Desligado 0004                       ??_EEPROM_Write_Byte 0021  
                       __Umul8_16@product 0023                                _USART_init 1D15  
