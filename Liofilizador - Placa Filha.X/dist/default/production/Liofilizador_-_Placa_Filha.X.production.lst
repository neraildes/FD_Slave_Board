

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 30 13:19:10 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 2.20
    78                           ; Generated 12/02/2020 GMT
    79                           ; 
    80                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F886 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0093                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0095                     	;# 
   162  0096                     	;# 
   163  0097                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  0105                     	;# 
   173  0107                     	;# 
   174  0108                     	;# 
   175  0109                     	;# 
   176  010C                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  0185                     	;# 
   182  0187                     	;# 
   183  0188                     	;# 
   184  0189                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0009                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  000D                     	;# 
   200  000E                     	;# 
   201  000E                     	;# 
   202  000F                     	;# 
   203  0010                     	;# 
   204  0011                     	;# 
   205  0012                     	;# 
   206  0013                     	;# 
   207  0014                     	;# 
   208  0015                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001B                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  001D                     	;# 
   219  001E                     	;# 
   220  001F                     	;# 
   221  0081                     	;# 
   222  0085                     	;# 
   223  0086                     	;# 
   224  0087                     	;# 
   225  0089                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  008F                     	;# 
   230  0090                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0095                     	;# 
   238  0096                     	;# 
   239  0097                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  0105                     	;# 
   249  0107                     	;# 
   250  0108                     	;# 
   251  0109                     	;# 
   252  010C                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  0185                     	;# 
   258  0187                     	;# 
   259  0188                     	;# 
   260  0189                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0009                     	;# 
   272  000A                     	;# 
   273  000B                     	;# 
   274  000C                     	;# 
   275  000D                     	;# 
   276  000E                     	;# 
   277  000E                     	;# 
   278  000F                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0013                     	;# 
   283  0014                     	;# 
   284  0015                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0017                     	;# 
   288  0018                     	;# 
   289  0019                     	;# 
   290  001A                     	;# 
   291  001B                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  001D                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  0081                     	;# 
   298  0085                     	;# 
   299  0086                     	;# 
   300  0087                     	;# 
   301  0089                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  008E                     	;# 
   305  008F                     	;# 
   306  0090                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0093                     	;# 
   312  0094                     	;# 
   313  0095                     	;# 
   314  0096                     	;# 
   315  0097                     	;# 
   316  0098                     	;# 
   317  0099                     	;# 
   318  009A                     	;# 
   319  009B                     	;# 
   320  009C                     	;# 
   321  009D                     	;# 
   322  009E                     	;# 
   323  009F                     	;# 
   324  0105                     	;# 
   325  0107                     	;# 
   326  0108                     	;# 
   327  0109                     	;# 
   328  010C                     	;# 
   329  010C                     	;# 
   330  010D                     	;# 
   331  010E                     	;# 
   332  010F                     	;# 
   333  0185                     	;# 
   334  0187                     	;# 
   335  0188                     	;# 
   336  0189                     	;# 
   337  018C                     	;# 
   338  018D                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0009                     	;# 
   348  000A                     	;# 
   349  000B                     	;# 
   350  000C                     	;# 
   351  000D                     	;# 
   352  000E                     	;# 
   353  000E                     	;# 
   354  000F                     	;# 
   355  0010                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0013                     	;# 
   359  0014                     	;# 
   360  0015                     	;# 
   361  0015                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001B                     	;# 
   369  001C                     	;# 
   370  001D                     	;# 
   371  001E                     	;# 
   372  001F                     	;# 
   373  0081                     	;# 
   374  0085                     	;# 
   375  0086                     	;# 
   376  0087                     	;# 
   377  0089                     	;# 
   378  008C                     	;# 
   379  008D                     	;# 
   380  008E                     	;# 
   381  008F                     	;# 
   382  0090                     	;# 
   383  0091                     	;# 
   384  0092                     	;# 
   385  0093                     	;# 
   386  0093                     	;# 
   387  0093                     	;# 
   388  0094                     	;# 
   389  0095                     	;# 
   390  0096                     	;# 
   391  0097                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  009F                     	;# 
   400  0105                     	;# 
   401  0107                     	;# 
   402  0108                     	;# 
   403  0109                     	;# 
   404  010C                     	;# 
   405  010C                     	;# 
   406  010D                     	;# 
   407  010E                     	;# 
   408  010F                     	;# 
   409  0185                     	;# 
   410  0187                     	;# 
   411  0188                     	;# 
   412  0189                     	;# 
   413  018C                     	;# 
   414  018D                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  000E                     	;# 
   429  000E                     	;# 
   430  000F                     	;# 
   431  0010                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0013                     	;# 
   435  0014                     	;# 
   436  0015                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  001D                     	;# 
   447  001E                     	;# 
   448  001F                     	;# 
   449  0081                     	;# 
   450  0085                     	;# 
   451  0086                     	;# 
   452  0087                     	;# 
   453  0089                     	;# 
   454  008C                     	;# 
   455  008D                     	;# 
   456  008E                     	;# 
   457  008F                     	;# 
   458  0090                     	;# 
   459  0091                     	;# 
   460  0092                     	;# 
   461  0093                     	;# 
   462  0093                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0095                     	;# 
   466  0096                     	;# 
   467  0097                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009A                     	;# 
   471  009B                     	;# 
   472  009C                     	;# 
   473  009D                     	;# 
   474  009E                     	;# 
   475  009F                     	;# 
   476  0105                     	;# 
   477  0107                     	;# 
   478  0108                     	;# 
   479  0109                     	;# 
   480  010C                     	;# 
   481  010C                     	;# 
   482  010D                     	;# 
   483  010E                     	;# 
   484  010F                     	;# 
   485  0185                     	;# 
   486  0187                     	;# 
   487  0188                     	;# 
   488  0189                     	;# 
   489  018C                     	;# 
   490  018D                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0009                     	;# 
   500  000A                     	;# 
   501  000B                     	;# 
   502  000C                     	;# 
   503  000D                     	;# 
   504  000E                     	;# 
   505  000E                     	;# 
   506  000F                     	;# 
   507  0010                     	;# 
   508  0011                     	;# 
   509  0012                     	;# 
   510  0013                     	;# 
   511  0014                     	;# 
   512  0015                     	;# 
   513  0015                     	;# 
   514  0016                     	;# 
   515  0017                     	;# 
   516  0018                     	;# 
   517  0019                     	;# 
   518  001A                     	;# 
   519  001B                     	;# 
   520  001B                     	;# 
   521  001C                     	;# 
   522  001D                     	;# 
   523  001E                     	;# 
   524  001F                     	;# 
   525  0081                     	;# 
   526  0085                     	;# 
   527  0086                     	;# 
   528  0087                     	;# 
   529  0089                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  008F                     	;# 
   534  0090                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0093                     	;# 
   538  0093                     	;# 
   539  0093                     	;# 
   540  0094                     	;# 
   541  0095                     	;# 
   542  0096                     	;# 
   543  0097                     	;# 
   544  0098                     	;# 
   545  0099                     	;# 
   546  009A                     	;# 
   547  009B                     	;# 
   548  009C                     	;# 
   549  009D                     	;# 
   550  009E                     	;# 
   551  009F                     	;# 
   552  0105                     	;# 
   553  0107                     	;# 
   554  0108                     	;# 
   555  0109                     	;# 
   556  010C                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  0185                     	;# 
   562  0187                     	;# 
   563  0188                     	;# 
   564  0189                     	;# 
   565  018C                     	;# 
   566  018D                     	;# 
   567  0000                     	;# 
   568  0001                     	;# 
   569  0002                     	;# 
   570  0003                     	;# 
   571  0004                     	;# 
   572  0005                     	;# 
   573  0006                     	;# 
   574  0007                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  000D                     	;# 
   580  000E                     	;# 
   581  000E                     	;# 
   582  000F                     	;# 
   583  0010                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0014                     	;# 
   588  0015                     	;# 
   589  0015                     	;# 
   590  0016                     	;# 
   591  0017                     	;# 
   592  0018                     	;# 
   593  0019                     	;# 
   594  001A                     	;# 
   595  001B                     	;# 
   596  001B                     	;# 
   597  001C                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  0081                     	;# 
   602  0085                     	;# 
   603  0086                     	;# 
   604  0087                     	;# 
   605  0089                     	;# 
   606  008C                     	;# 
   607  008D                     	;# 
   608  008E                     	;# 
   609  008F                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0092                     	;# 
   613  0093                     	;# 
   614  0093                     	;# 
   615  0093                     	;# 
   616  0094                     	;# 
   617  0095                     	;# 
   618  0096                     	;# 
   619  0097                     	;# 
   620  0098                     	;# 
   621  0099                     	;# 
   622  009A                     	;# 
   623  009B                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  009F                     	;# 
   628  0105                     	;# 
   629  0107                     	;# 
   630  0108                     	;# 
   631  0109                     	;# 
   632  010C                     	;# 
   633  010C                     	;# 
   634  010D                     	;# 
   635  010E                     	;# 
   636  010F                     	;# 
   637  0185                     	;# 
   638  0187                     	;# 
   639  0188                     	;# 
   640  0189                     	;# 
   641  018C                     	;# 
   642  018D                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  000E                     	;# 
   658  000F                     	;# 
   659  0010                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  001D                     	;# 
   675  001E                     	;# 
   676  001F                     	;# 
   677  0081                     	;# 
   678  0085                     	;# 
   679  0086                     	;# 
   680  0087                     	;# 
   681  0089                     	;# 
   682  008C                     	;# 
   683  008D                     	;# 
   684  008E                     	;# 
   685  008F                     	;# 
   686  0090                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0093                     	;# 
   690  0093                     	;# 
   691  0093                     	;# 
   692  0094                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0097                     	;# 
   696  0098                     	;# 
   697  0099                     	;# 
   698  009A                     	;# 
   699  009B                     	;# 
   700  009C                     	;# 
   701  009D                     	;# 
   702  009E                     	;# 
   703  009F                     	;# 
   704  0105                     	;# 
   705  0107                     	;# 
   706  0108                     	;# 
   707  0109                     	;# 
   708  010C                     	;# 
   709  010C                     	;# 
   710  010D                     	;# 
   711  010E                     	;# 
   712  010F                     	;# 
   713  0185                     	;# 
   714  0187                     	;# 
   715  0188                     	;# 
   716  0189                     	;# 
   717  018C                     	;# 
   718  018D                     	;# 
   719  0000                     	;# 
   720  0001                     	;# 
   721  0002                     	;# 
   722  0003                     	;# 
   723  0004                     	;# 
   724  0005                     	;# 
   725  0006                     	;# 
   726  0007                     	;# 
   727  0009                     	;# 
   728  000A                     	;# 
   729  000B                     	;# 
   730  000C                     	;# 
   731  000D                     	;# 
   732  000E                     	;# 
   733  000E                     	;# 
   734  000F                     	;# 
   735  0010                     	;# 
   736  0011                     	;# 
   737  0012                     	;# 
   738  0013                     	;# 
   739  0014                     	;# 
   740  0015                     	;# 
   741  0015                     	;# 
   742  0016                     	;# 
   743  0017                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  001B                     	;# 
   748  001B                     	;# 
   749  001C                     	;# 
   750  001D                     	;# 
   751  001E                     	;# 
   752  001F                     	;# 
   753  0081                     	;# 
   754  0085                     	;# 
   755  0086                     	;# 
   756  0087                     	;# 
   757  0089                     	;# 
   758  008C                     	;# 
   759  008D                     	;# 
   760  008E                     	;# 
   761  008F                     	;# 
   762  0090                     	;# 
   763  0091                     	;# 
   764  0092                     	;# 
   765  0093                     	;# 
   766  0093                     	;# 
   767  0093                     	;# 
   768  0094                     	;# 
   769  0095                     	;# 
   770  0096                     	;# 
   771  0097                     	;# 
   772  0098                     	;# 
   773  0099                     	;# 
   774  009A                     	;# 
   775  009B                     	;# 
   776  009C                     	;# 
   777  009D                     	;# 
   778  009E                     	;# 
   779  009F                     	;# 
   780  0105                     	;# 
   781  0107                     	;# 
   782  0108                     	;# 
   783  0109                     	;# 
   784  010C                     	;# 
   785  010C                     	;# 
   786  010D                     	;# 
   787  010E                     	;# 
   788  010F                     	;# 
   789  0185                     	;# 
   790  0187                     	;# 
   791  0188                     	;# 
   792  0189                     	;# 
   793  018C                     	;# 
   794  018D                     	;# 
   795  0000                     	;# 
   796  0001                     	;# 
   797  0002                     	;# 
   798  0003                     	;# 
   799  0004                     	;# 
   800  0005                     	;# 
   801  0006                     	;# 
   802  0007                     	;# 
   803  0009                     	;# 
   804  000A                     	;# 
   805  000B                     	;# 
   806  000C                     	;# 
   807  000D                     	;# 
   808  000E                     	;# 
   809  000E                     	;# 
   810  000F                     	;# 
   811  0010                     	;# 
   812  0011                     	;# 
   813  0012                     	;# 
   814  0013                     	;# 
   815  0014                     	;# 
   816  0015                     	;# 
   817  0015                     	;# 
   818  0016                     	;# 
   819  0017                     	;# 
   820  0018                     	;# 
   821  0019                     	;# 
   822  001A                     	;# 
   823  001B                     	;# 
   824  001B                     	;# 
   825  001C                     	;# 
   826  001D                     	;# 
   827  001E                     	;# 
   828  001F                     	;# 
   829  0081                     	;# 
   830  0085                     	;# 
   831  0086                     	;# 
   832  0087                     	;# 
   833  0089                     	;# 
   834  008C                     	;# 
   835  008D                     	;# 
   836  008E                     	;# 
   837  008F                     	;# 
   838  0090                     	;# 
   839  0091                     	;# 
   840  0092                     	;# 
   841  0093                     	;# 
   842  0093                     	;# 
   843  0093                     	;# 
   844  0094                     	;# 
   845  0095                     	;# 
   846  0096                     	;# 
   847  0097                     	;# 
   848  0098                     	;# 
   849  0099                     	;# 
   850  009A                     	;# 
   851  009B                     	;# 
   852  009C                     	;# 
   853  009D                     	;# 
   854  009E                     	;# 
   855  009F                     	;# 
   856  0105                     	;# 
   857  0107                     	;# 
   858  0108                     	;# 
   859  0109                     	;# 
   860  010C                     	;# 
   861  010C                     	;# 
   862  010D                     	;# 
   863  010E                     	;# 
   864  010F                     	;# 
   865  0185                     	;# 
   866  0187                     	;# 
   867  0188                     	;# 
   868  0189                     	;# 
   869  018C                     	;# 
   870  018D                     	;# 
   871  0000                     	;# 
   872  0001                     	;# 
   873  0002                     	;# 
   874  0003                     	;# 
   875  0004                     	;# 
   876  0005                     	;# 
   877  0006                     	;# 
   878  0007                     	;# 
   879  0009                     	;# 
   880  000A                     	;# 
   881  000B                     	;# 
   882  000C                     	;# 
   883  000D                     	;# 
   884  000E                     	;# 
   885  000E                     	;# 
   886  000F                     	;# 
   887  0010                     	;# 
   888  0011                     	;# 
   889  0012                     	;# 
   890  0013                     	;# 
   891  0014                     	;# 
   892  0015                     	;# 
   893  0015                     	;# 
   894  0016                     	;# 
   895  0017                     	;# 
   896  0018                     	;# 
   897  0019                     	;# 
   898  001A                     	;# 
   899  001B                     	;# 
   900  001B                     	;# 
   901  001C                     	;# 
   902  001D                     	;# 
   903  001E                     	;# 
   904  001F                     	;# 
   905  0081                     	;# 
   906  0085                     	;# 
   907  0086                     	;# 
   908  0087                     	;# 
   909  0089                     	;# 
   910  008C                     	;# 
   911  008D                     	;# 
   912  008E                     	;# 
   913  008F                     	;# 
   914  0090                     	;# 
   915  0091                     	;# 
   916  0092                     	;# 
   917  0093                     	;# 
   918  0093                     	;# 
   919  0093                     	;# 
   920  0094                     	;# 
   921  0095                     	;# 
   922  0096                     	;# 
   923  0097                     	;# 
   924  0098                     	;# 
   925  0099                     	;# 
   926  009A                     	;# 
   927  009B                     	;# 
   928  009C                     	;# 
   929  009D                     	;# 
   930  009E                     	;# 
   931  009F                     	;# 
   932  0105                     	;# 
   933  0107                     	;# 
   934  0108                     	;# 
   935  0109                     	;# 
   936  010C                     	;# 
   937  010C                     	;# 
   938  010D                     	;# 
   939  010E                     	;# 
   940  010F                     	;# 
   941  0185                     	;# 
   942  0187                     	;# 
   943  0188                     	;# 
   944  0189                     	;# 
   945  018C                     	;# 
   946  018D                     	;# 
   947  0000                     	;# 
   948  0001                     	;# 
   949  0002                     	;# 
   950  0003                     	;# 
   951  0004                     	;# 
   952  0005                     	;# 
   953  0006                     	;# 
   954  0007                     	;# 
   955  0009                     	;# 
   956  000A                     	;# 
   957  000B                     	;# 
   958  000C                     	;# 
   959  000D                     	;# 
   960  000E                     	;# 
   961  000E                     	;# 
   962  000F                     	;# 
   963  0010                     	;# 
   964  0011                     	;# 
   965  0012                     	;# 
   966  0013                     	;# 
   967  0014                     	;# 
   968  0015                     	;# 
   969  0015                     	;# 
   970  0016                     	;# 
   971  0017                     	;# 
   972  0018                     	;# 
   973  0019                     	;# 
   974  001A                     	;# 
   975  001B                     	;# 
   976  001B                     	;# 
   977  001C                     	;# 
   978  001D                     	;# 
   979  001E                     	;# 
   980  001F                     	;# 
   981  0081                     	;# 
   982  0085                     	;# 
   983  0086                     	;# 
   984  0087                     	;# 
   985  0089                     	;# 
   986  008C                     	;# 
   987  008D                     	;# 
   988  008E                     	;# 
   989  008F                     	;# 
   990  0090                     	;# 
   991  0091                     	;# 
   992  0092                     	;# 
   993  0093                     	;# 
   994  0093                     	;# 
   995  0093                     	;# 
   996  0094                     	;# 
   997  0095                     	;# 
   998  0096                     	;# 
   999  0097                     	;# 
  1000  0098                     	;# 
  1001  0099                     	;# 
  1002  009A                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  009F                     	;# 
  1008  0105                     	;# 
  1009  0107                     	;# 
  1010  0108                     	;# 
  1011  0109                     	;# 
  1012  010C                     	;# 
  1013  010C                     	;# 
  1014  010D                     	;# 
  1015  010E                     	;# 
  1016  010F                     	;# 
  1017  0185                     	;# 
  1018  0187                     	;# 
  1019  0188                     	;# 
  1020  0189                     	;# 
  1021  018C                     	;# 
  1022  018D                     	;# 
  1023  0000                     	;# 
  1024  0001                     	;# 
  1025  0002                     	;# 
  1026  0003                     	;# 
  1027  0004                     	;# 
  1028  0005                     	;# 
  1029  0006                     	;# 
  1030  0007                     	;# 
  1031  0009                     	;# 
  1032  000A                     	;# 
  1033  000B                     	;# 
  1034  000C                     	;# 
  1035  000D                     	;# 
  1036  000E                     	;# 
  1037  000E                     	;# 
  1038  000F                     	;# 
  1039  0010                     	;# 
  1040  0011                     	;# 
  1041  0012                     	;# 
  1042  0013                     	;# 
  1043  0014                     	;# 
  1044  0015                     	;# 
  1045  0015                     	;# 
  1046  0016                     	;# 
  1047  0017                     	;# 
  1048  0018                     	;# 
  1049  0019                     	;# 
  1050  001A                     	;# 
  1051  001B                     	;# 
  1052  001B                     	;# 
  1053  001C                     	;# 
  1054  001D                     	;# 
  1055  001E                     	;# 
  1056  001F                     	;# 
  1057  0081                     	;# 
  1058  0085                     	;# 
  1059  0086                     	;# 
  1060  0087                     	;# 
  1061  0089                     	;# 
  1062  008C                     	;# 
  1063  008D                     	;# 
  1064  008E                     	;# 
  1065  008F                     	;# 
  1066  0090                     	;# 
  1067  0091                     	;# 
  1068  0092                     	;# 
  1069  0093                     	;# 
  1070  0093                     	;# 
  1071  0093                     	;# 
  1072  0094                     	;# 
  1073  0095                     	;# 
  1074  0096                     	;# 
  1075  0097                     	;# 
  1076  0098                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009C                     	;# 
  1081  009D                     	;# 
  1082  009E                     	;# 
  1083  009F                     	;# 
  1084  0105                     	;# 
  1085  0107                     	;# 
  1086  0108                     	;# 
  1087  0109                     	;# 
  1088  010C                     	;# 
  1089  010C                     	;# 
  1090  010D                     	;# 
  1091  010E                     	;# 
  1092  010F                     	;# 
  1093  0185                     	;# 
  1094  0187                     	;# 
  1095  0188                     	;# 
  1096  0189                     	;# 
  1097  018C                     	;# 
  1098  018D                     	;# 
  1099  0000                     	;# 
  1100  0001                     	;# 
  1101  0002                     	;# 
  1102  0003                     	;# 
  1103  0004                     	;# 
  1104  0005                     	;# 
  1105  0006                     	;# 
  1106  0007                     	;# 
  1107  0009                     	;# 
  1108  000A                     	;# 
  1109  000B                     	;# 
  1110  000C                     	;# 
  1111  000D                     	;# 
  1112  000E                     	;# 
  1113  000E                     	;# 
  1114  000F                     	;# 
  1115  0010                     	;# 
  1116  0011                     	;# 
  1117  0012                     	;# 
  1118  0013                     	;# 
  1119  0014                     	;# 
  1120  0015                     	;# 
  1121  0015                     	;# 
  1122  0016                     	;# 
  1123  0017                     	;# 
  1124  0018                     	;# 
  1125  0019                     	;# 
  1126  001A                     	;# 
  1127  001B                     	;# 
  1128  001B                     	;# 
  1129  001C                     	;# 
  1130  001D                     	;# 
  1131  001E                     	;# 
  1132  001F                     	;# 
  1133  0081                     	;# 
  1134  0085                     	;# 
  1135  0086                     	;# 
  1136  0087                     	;# 
  1137  0089                     	;# 
  1138  008C                     	;# 
  1139  008D                     	;# 
  1140  008E                     	;# 
  1141  008F                     	;# 
  1142  0090                     	;# 
  1143  0091                     	;# 
  1144  0092                     	;# 
  1145  0093                     	;# 
  1146  0093                     	;# 
  1147  0093                     	;# 
  1148  0094                     	;# 
  1149  0095                     	;# 
  1150  0096                     	;# 
  1151  0097                     	;# 
  1152  0098                     	;# 
  1153  0099                     	;# 
  1154  009A                     	;# 
  1155  009B                     	;# 
  1156  009C                     	;# 
  1157  009D                     	;# 
  1158  009E                     	;# 
  1159  009F                     	;# 
  1160  0105                     	;# 
  1161  0107                     	;# 
  1162  0108                     	;# 
  1163  0109                     	;# 
  1164  010C                     	;# 
  1165  010C                     	;# 
  1166  010D                     	;# 
  1167  010E                     	;# 
  1168  010F                     	;# 
  1169  0185                     	;# 
  1170  0187                     	;# 
  1171  0188                     	;# 
  1172  0189                     	;# 
  1173  018C                     	;# 
  1174  018D                     	;# 
  1175                           
  1176                           	psect	strings
  1177  1800                     __pstrings:
  1178  1800                     stringtab:
  1179  1800                     __stringtab:
  1180                           
  1181                           ;	String table - string pointers are 1 byte each
  1182  1800  1BFF               	btfsc	btemp+1,7
  1183  1801  280A               	ljmp	stringcode
  1184  1802  1383               	bcf	3,7
  1185  1803  187F               	btfsc	btemp+1,0
  1186  1804  1783               	bsf	3,7
  1187  1805  0800               	movf	0,w
  1188  1806  0A84               	incf	4,f
  1189  1807  1903               	skipnz
  1190  1808  0AFF               	incf	btemp+1,f
  1191  1809  0008               	return
  1192  180A                     stringcode:
  1193  180A                     stringdir:
  1194  180A  3018               	movlw	high stringdir
  1195  180B  008A               	movwf	10
  1196  180C  0804               	movf	4,w
  1197  180D  0A84               	incf	4,f
  1198  180E  0782               	addwf	2,f
  1199  180F                     __stringbase:
  1200  180F  3400               	retlw	0
  1201  1810                     __end_of__stringtab:
  1202  1810                     _PT100_TRANSLADA:
  1203  1810  3466               	retlw	102
  1204  1811  3466               	retlw	102
  1205  1812  34A6               	retlw	166
  1206  1813  34BF               	retlw	191
  1207  1814                     __end_of_PT100_TRANSLADA:
  1208  1814                     _PT100_CONSTANT:
  1209  1814  3414               	retlw	20
  1210  1815  34AE               	retlw	174
  1211  1816  342B               	retlw	43
  1212  1817  34C1               	retlw	193
  1213  1818                     __end_of_PT100_CONSTANT:
  1214  1818                     _RESISTOR_ROOM_TEMP:
  1215                           
  1216                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1217  1818  3400               	retlw	0
  1218  1819  3440               	retlw	64
  1219  181A  341C               	retlw	28
  1220  181B  3446               	retlw	70
  1221  181C                     __end_of_RESISTOR_ROOM_TEMP:
  1222  181C                     _ROOM_TEMP:
  1223                           
  1224                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1225  181C  3466               	retlw	102
  1226  181D  3486               	retlw	134
  1227  181E  3496               	retlw	150
  1228  181F  3443               	retlw	67
  1229  1820                     __end_of_ROOM_TEMP:
  1230  1820                     _MAX_ADC:
  1231                           
  1232                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1233  1820  3400               	retlw	0
  1234  1821  34C0               	retlw	192
  1235  1822  347F               	retlw	127
  1236  1823  3444               	retlw	68
  1237  1824                     __end_of_MAX_ADC:
  1238  1824                     log@coeff:
  1239  1824  3400               	retlw	0
  1240  1825  3400               	retlw	0
  1241  1826  3400               	retlw	0
  1242  1827  3400               	retlw	0
  1243  1828  34C4               	retlw	196
  1244  1829  34FF               	retlw	255
  1245  182A  347F               	retlw	127
  1246  182B  343F               	retlw	63
  1247  182C  3480               	retlw	128
  1248  182D  34EF               	retlw	239
  1249  182E  34FF               	retlw	255
  1250  182F  34BE               	retlw	190
  1251  1830  3490               	retlw	144
  1252  1831  34E1               	retlw	225
  1253  1832  34A9               	retlw	169
  1254  1833  343E               	retlw	62
  1255  1834  34EC               	retlw	236
  1256  1835  3482               	retlw	130
  1257  1836  3476               	retlw	118
  1258  1837  34BE               	retlw	190
  1259  1838  3482               	retlw	130
  1260  1839  34AD               	retlw	173
  1261  183A  342B               	retlw	43
  1262  183B  343E               	retlw	62
  1263  183C  340E               	retlw	14
  1264  183D  343C               	retlw	60
  1265  183E  34C3               	retlw	195
  1266  183F  34BD               	retlw	189
  1267  1840  3487               	retlw	135
  1268  1841  34D1               	retlw	209
  1269  1842  3413               	retlw	19
  1270  1843  343D               	retlw	61
  1271  1844  3441               	retlw	65
  1272  1845  3478               	retlw	120
  1273  1846  34D3               	retlw	211
  1274  1847  34BB               	retlw	187
  1275  1848                     __end_oflog@coeff:
  1276  1848                     _BETA:
  1277                           
  1278                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1279  1848  3400               	retlw	0
  1280  1849  3460               	retlw	96
  1281  184A  3478               	retlw	120
  1282  184B  3445               	retlw	69
  1283  184C                     __end_of_BETA:
  1284  184C                     _BALANCE_RESISTOR:
  1285                           
  1286                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1287  184C  3400               	retlw	0
  1288  184D  3440               	retlw	64
  1289  184E  341C               	retlw	28
  1290  184F  3446               	retlw	70
  1291  1850                     __end_of_BALANCE_RESISTOR:
  1292  0019                     _TXREG	set	25
  1293  0018                     _RCSTAbits	set	24
  1294  001A                     _RCREG	set	26
  1295  000E                     _TMR1L	set	14
  1296  000F                     _TMR1H	set	15
  1297  000C                     _PIR1bits	set	12
  1298  001E                     _ADRESH	set	30
  1299  001F                     _ADCON0bits	set	31
  1300  0005                     _PORTAbits	set	5
  1301  0007                     _PORTCbits	set	7
  1302  0010                     _T1CON	set	16
  1303  0006                     _PORTBbits	set	6
  1304  0009                     _PORTE	set	9
  1305  0007                     _PORTC	set	7
  1306  0005                     _PORTA	set	5
  1307  0013                     _SSPBUF	set	19
  1308  000B                     _INTCONbits	set	11
  1309  0014                     _SSPCON	set	20
  1310  0006                     _PORTB	set	6
  1311  00C4                     _CREN	set	196
  1312  0081                     _TMR1CS	set	129
  1313  0085                     _T1CKPS1	set	133
  1314  0084                     _T1CKPS0	set	132
  1315  008C                     _PIE1bits	set	140
  1316  0099                     _SPBRG	set	153
  1317  0098                     _TXSTAbits	set	152
  1318  009E                     _ADRESL	set	158
  1319  009F                     _ADCON1	set	159
  1320  009F                     _ADCON1bits	set	159
  1321  0095                     _WPUB	set	149
  1322  0081                     _OPTION_REGbits	set	129
  1323  0089                     _TRISE	set	137
  1324  0087                     _TRISC	set	135
  1325  0086                     _TRISB	set	134
  1326  0085                     _TRISA	set	133
  1327  008F                     _OSCCONbits	set	143
  1328  0091                     _SSPCON2bits	set	145
  1329  0094                     _SSPSTAT	set	148
  1330  0093                     _SSPADD	set	147
  1331  0091                     _SSPCON2	set	145
  1332  043F                     _TRISC7	set	1087
  1333  043E                     _TRISC6	set	1086
  1334  0460                     _TMR1IE	set	1120
  1335  043C                     _TRISC4	set	1084
  1336  043B                     _TRISC3	set	1083
  1337  010C                     _EEDATA	set	268
  1338  010D                     _EEADR	set	269
  1339  0187                     _BAUDCTLbits	set	391
  1340  018D                     _EECON2	set	397
  1341  018C                     _EECON1bits	set	396
  1342  0189                     _ANSELH	set	393
  1343  0188                     _ANSEL	set	392
  1344  1850                     STR_1:
  1345  1850  3476               	retlw	118	;'v'
  1346  1851  3431               	retlw	49	;'1'
  1347  1852  342E               	retlw	46	;'.'
  1348  1853  3430               	retlw	48	;'0'
  1349  1854  342E               	retlw	46	;'.'
  1350  1855  3432               	retlw	50	;'2'
  1351  1856  3431               	retlw	49	;'1'
  1352  1857  3400               	retlw	0
  1353  1858                     STR_2:
  1354  1858  344F               	retlw	79	;'O'
  1355  1859  344B               	retlw	75	;'K'
  1356  185A  3400               	retlw	0
  1357                           
  1358                           	psect	cinit
  1359  0015                     start_initialization:	
  1360                           ; #config settings
  1361                           
  1362  0015                     __initialization:
  1363                           
  1364                           ; Clear objects allocated to COMMON
  1365  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1366  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1367  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1368  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1369  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1370  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1371                           
  1372                           ; Clear objects allocated to BANK1
  1373  001B  1383               	bcf	3,7	;select IRP bank0
  1374  001C  30C9               	movlw	low __pbssBANK1
  1375  001D  0084               	movwf	4
  1376  001E  30E5               	movlw	low (__pbssBANK1+28)
  1377  001F  160A  158A  206C  120A  118A  	fcall	clear_ram0
  1378                           
  1379                           ; Clear objects allocated to BANK3
  1380  0024  1783               	bsf	3,7	;select IRP bank2
  1381  0025  3090               	movlw	low __pbssBANK3
  1382  0026  0084               	movwf	4
  1383  0027  30EB               	movlw	low (__pbssBANK3+91)
  1384  0028  160A  158A  206C  120A  118A  	fcall	clear_ram0
  1385                           
  1386                           ; Clear objects allocated to BANK2
  1387  002D  3010               	movlw	low __pbssBANK2
  1388  002E  0084               	movwf	4
  1389  002F  3044               	movlw	low (__pbssBANK2+52)
  1390  0030  160A  158A  206C   	fcall	clear_ram0
  1391  0033                     end_of_initialization:	
  1392                           ;End of C runtime variable initialization code
  1393                           
  1394  0033                     __end_of__initialization:
  1395  0033  0183               	clrf	3
  1396  0034  160A  118A  291B   	ljmp	_main	;jump to C main() function
  1397                           
  1398                           	psect	bssCOMMON
  1399  0078                     __pbssCOMMON:
  1400  0078                     _Delay_Led_Tmr0:
  1401  0078                     	ds	2
  1402  007A                     _minuto:
  1403  007A                     	ds	1
  1404  007B                     _statuspower_memo:
  1405  007B                     	ds	1
  1406  007C                     _hora:
  1407  007C                     	ds	1
  1408  007D                     _segundo:
  1409  007D                     	ds	1
  1410                           
  1411                           	psect	bssBANK1
  1412  00C9                     __pbssBANK1:
  1413  00C9                     _Tensao1:
  1414  00C9                     	ds	4
  1415  00CD                     _Vaccum0:
  1416  00CD                     	ds	4
  1417  00D1                     _errno:
  1418  00D1                     	ds	2
  1419  00D3                     _tempodecorrido:
  1420  00D3                     	ds	2
  1421  00D5                     _count:
  1422  00D5                     	ds	2
  1423  00D7                     _header:
  1424  00D7                     	ds	2
  1425  00D9                     _milisegundo:
  1426  00D9                     	ds	2
  1427  00DB                     _Delay_Led_Usart:
  1428  00DB                     	ds	2
  1429  00DD                     _Delay_Led_Memory:
  1430  00DD                     	ds	2
  1431  00DF                     _pointer:
  1432  00DF                     	ds	1
  1433  00E0                     _destino:
  1434  00E0                     	ds	1
  1435  00E1                     _Board_Number:
  1436  00E1                     	ds	1
  1437  00E2                     _canal:
  1438  00E2                     	ds	1
  1439  00E3                     _statuspower:
  1440  00E3                     	ds	1
  1441  00E4                     _generic_status:
  1442  00E4                     	ds	1
  1443                           
  1444                           	psect	bssBANK3
  1445  0190                     __pbssBANK3:
  1446  0190                     _usart_protocol:
  1447  0190                     	ds	58
  1448  01CA                     _buffer:
  1449  01CA                     	ds	33
  1450                           
  1451                           	psect	bssBANK2
  1452  0110                     __pbssBANK2:
  1453  0110                     _usart_buffer:
  1454  0110                     	ds	52
  1455                           
  1456                           	psect	clrtext
  1457  186C                     clear_ram0:	
  1458                           ;	Called with FSR containing the base address, and
  1459                           ;	W with the last address+1
  1460                           
  1461  186C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1462  186D                     clrloop0:
  1463  186D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1464  186E  0A84               	incf	4,f	;increment pointer
  1465  186F  0604               	xorwf	4,w	;XOR with final address
  1466  1870  1903               	btfsc	3,2	;have we reached the end yet?
  1467  1871  3400               	retlw	0	;all done for this memory range, return
  1468  1872  0604               	xorwf	4,w	;XOR again to restore value
  1469  1873  286D               	goto	clrloop0	;do the next byte
  1470                           
  1471                           	psect	cstackBANK1
  1472  00A0                     __pcstackBANK1:
  1473  00A0                     ?_USART_put_int:
  1474  00A0                     ?_EEPROM_24C1025_Write_Int:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  00A0                     USART_put_int@value:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  00A0                     EEPROM_24C1025_Write_Int@mem_add:	
  1481                           ; 2 bytes @ 0x0
  1482                           
  1483  00A0                     _MediaPlacaVaccum$2372:	
  1484                           ; 4 bytes @ 0x0
  1485                           
  1486                           
  1487                           ; 4 bytes @ 0x0
  1488  00A0                     	ds	2
  1489  00A2                     ??_USART_put_int:
  1490                           
  1491                           ; 1 bytes @ 0x2
  1492  00A2                     	ds	1
  1493  00A3                     USART_put_int@dado:
  1494                           
  1495                           ; 1 bytes @ 0x3
  1496  00A3                     	ds	1
  1497  00A4                     ?_PROCULUS_Control_Register_Write:
  1498  00A4                     ?_PROCULUS_VP_Write:	
  1499                           ; 1 bytes @ 0x4
  1500                           
  1501  00A4                     MediaPlacaVaccum@canal:	
  1502                           ; 1 bytes @ 0x4
  1503                           
  1504  00A4                     PROCULUS_Control_Register_Write@size:	
  1505                           ; 1 bytes @ 0x4
  1506                           
  1507  00A4                     EEPROM_24C1025_Write_Int@data:	
  1508                           ; 1 bytes @ 0x4
  1509                           
  1510  00A4                     PROCULUS_VP_Write@vp:	
  1511                           ; 2 bytes @ 0x4
  1512                           
  1513                           
  1514                           ; 2 bytes @ 0x4
  1515  00A4                     	ds	1
  1516  00A5                     ??_PROCULUS_Control_Register_Write:
  1517  00A5                     MediaPlacaVaccum@i:	
  1518                           ; 1 bytes @ 0x5
  1519                           
  1520                           
  1521                           ; 2 bytes @ 0x5
  1522  00A5                     	ds	1
  1523  00A6                     ??_EEPROM_24C1025_Write_Int:
  1524  00A6                     PROCULUS_Control_Register_Write@vetor:	
  1525                           ; 1 bytes @ 0x6
  1526                           
  1527  00A6                     PROCULUS_VP_Write@vetor:	
  1528                           ; 1 bytes @ 0x6
  1529                           
  1530                           
  1531                           ; 2 bytes @ 0x6
  1532  00A6                     	ds	1
  1533  00A7                     EEPROM_24C1025_Write_Int@chip_add:
  1534  00A7                     PROCULUS_Control_Register_Write@i:	
  1535                           ; 1 bytes @ 0x7
  1536                           
  1537  00A7                     MediaPlacaVaccum@Temp:	
  1538                           ; 1 bytes @ 0x7
  1539                           
  1540                           
  1541                           ; 4 bytes @ 0x7
  1542  00A7                     	ds	1
  1543  00A8                     ?_PROCULUS_Show_Screen:
  1544  00A8                     ?_PROCULUS_Buzzer:	
  1545                           ; 1 bytes @ 0x8
  1546                           
  1547  00A8                     PROCULUS_VP_Write@size:	
  1548                           ; 1 bytes @ 0x8
  1549                           
  1550  00A8                     EEPROM_24C1025_Write_Int@local:	
  1551                           ; 1 bytes @ 0x8
  1552                           
  1553  00A8                     PROCULUS_Buzzer@time_ms_x_10:	
  1554                           ; 2 bytes @ 0x8
  1555                           
  1556  00A8                     PROCULUS_Show_Screen@screen:	
  1557                           ; 2 bytes @ 0x8
  1558                           
  1559                           
  1560                           ; 2 bytes @ 0x8
  1561  00A8                     	ds	1
  1562  00A9                     ??_PROCULUS_VP_Write:
  1563                           
  1564                           ; 1 bytes @ 0x9
  1565  00A9                     	ds	1
  1566  00AA                     ?_Save_Log:
  1567  00AA                     ??_PROCULUS_Show_Screen:	
  1568                           ; 1 bytes @ 0xA
  1569                           
  1570  00AA                     ??_PROCULUS_Buzzer:	
  1571                           ; 1 bytes @ 0xA
  1572                           
  1573  00AA                     ?_EEPROM_24C1025_Fill_All:	
  1574                           ; 1 bytes @ 0xA
  1575                           
  1576  00AA                     EEPROM_24C1025_Fill_All@value:	
  1577                           ; 1 bytes @ 0xA
  1578                           
  1579  00AA                     Save_Log@add_datalog:	
  1580                           ; 2 bytes @ 0xA
  1581                           
  1582                           
  1583                           ; 4 bytes @ 0xA
  1584  00AA                     	ds	1
  1585  00AB                     PROCULUS_VP_Write@i:
  1586  00AB                     PROCULUS_Buzzer@vetor:	
  1587                           ; 1 bytes @ 0xB
  1588                           
  1589  00AB                     PROCULUS_Show_Screen@vetor:	
  1590                           ; 2 bytes @ 0xB
  1591                           
  1592                           
  1593                           ; 3 bytes @ 0xB
  1594  00AB                     	ds	1
  1595  00AC                     ?_PROCULUS_VP_Write_String:
  1596  00AC                     EEPROM_24C1025_Fill_All@chip_add:	
  1597                           ; 1 bytes @ 0xC
  1598                           
  1599  00AC                     PROCULUS_VP_Write_String@vp:	
  1600                           ; 1 bytes @ 0xC
  1601                           
  1602                           
  1603                           ; 2 bytes @ 0xC
  1604  00AC                     	ds	1
  1605  00AD                     EEPROM_24C1025_Fill_All@mem_add:
  1606                           
  1607                           ; 4 bytes @ 0xD
  1608  00AD                     	ds	1
  1609  00AE                     PROCULUS_VP_Write_String@text:
  1610                           
  1611                           ; 1 bytes @ 0xE
  1612  00AE                     	ds	1
  1613  00AF                     ??_PROCULUS_VP_Write_String:
  1614                           
  1615                           ; 1 bytes @ 0xF
  1616  00AF                     	ds	2
  1617  00B1                     ??_Decodify_Command:
  1618                           
  1619                           ; 1 bytes @ 0x11
  1620  00B1                     	ds	4
  1621  00B5                     Decodify_Command@dados:
  1622                           
  1623                           ; 2 bytes @ 0x15
  1624  00B5                     	ds	2
  1625  00B7                     Decodify_Command@add:
  1626                           
  1627                           ; 1 bytes @ 0x17
  1628  00B7                     	ds	1
  1629  00B8                     Decodify_Command@sizedata:
  1630                           
  1631                           ; 1 bytes @ 0x18
  1632  00B8                     	ds	1
  1633  00B9                     Decodify_Command@tempint:
  1634                           
  1635                           ; 2 bytes @ 0x19
  1636  00B9                     	ds	2
  1637  00BB                     Decodify_Command@OutPut:
  1638                           
  1639                           ; 4 bytes @ 0x1B
  1640  00BB                     	ds	4
  1641  00BF                     Decodify_Command@tempchar:
  1642                           
  1643                           ; 1 bytes @ 0x1F
  1644  00BF                     	ds	1
  1645  00C0                     Decodify_Command@add_24LCxxxx:
  1646                           
  1647                           ; 4 bytes @ 0x20
  1648  00C0                     	ds	4
  1649  00C4                     ??_main:
  1650                           
  1651                           ; 1 bytes @ 0x24
  1652  00C4                     	ds	3
  1653  00C7                     main@reset:
  1654                           
  1655                           ; 2 bytes @ 0x27
  1656  00C7                     	ds	2
  1657                           
  1658                           	psect	cstackCOMMON
  1659  0070                     __pcstackCOMMON:
  1660  0070                     ?_I2C_Master_Start:
  1661  0070                     ?_I2C_Master_Stop:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664  0070                     ?_I2C_Master_RepeatedStart:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667  0070                     ?_USART_putc:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670  0070                     ?_ADC_init:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673  0070                     ?_MediaPlacaVaccum:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676  0070                     ?_Decodify_Command:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679  0070                     ?_USART_to_Protocol:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0070                     ?_Send_To_MB:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685  0070                     ?_Send_Reply_OK:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688  0070                     ?_EEPROM_Read_Byte:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691  0070                     ?_Package_Usart_is_for_me:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694  0070                     ?_I2C_Master_Wait:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697  0070                     ?_main:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0070                     ?_isr:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703  0070                     ??_isr:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706                           
  1707                           ; 1 bytes @ 0x0
  1708  0070                     	ds	6
  1709  0076                     isr@tempo:
  1710                           
  1711                           ; 2 bytes @ 0x6
  1712  0076                     	ds	2
  1713                           
  1714                           	psect	cstackBANK0
  1715  0020                     __pcstackBANK0:
  1716  0020                     ?___flge:
  1717  0020                     ?_my_delay_ms_WDT:	
  1718                           ; 1 bit 
  1719                           
  1720  0020                     ??_USART_putc:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0020                     ??_ADC_init:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0020                     ?_USART_init:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0020                     ??_USART_to_Protocol:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  0020                     ?_strcpy:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  0020                     ?_EEPROM_Write_Byte:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738  0020                     ??_EEPROM_Read_Byte:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741  0020                     ?_my_delay_ms:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744  0020                     ??_Package_Usart_is_for_me:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747  0020                     ?_PROCULUS_Delay:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750  0020                     ??_I2C_Master_Wait:	
  1751                           ; 1 bytes @ 0x0
  1752                           
  1753  0020                     ?_strlen:	
  1754                           ; 1 bytes @ 0x0
  1755                           
  1756  0020                     ?_captura:	
  1757                           ; 2 bytes @ 0x0
  1758                           
  1759  0020                     ?__Umul8_16:	
  1760                           ; 2 bytes @ 0x0
  1761                           
  1762  0020                     ?___lwdiv:	
  1763                           ; 2 bytes @ 0x0
  1764                           
  1765  0020                     ?___lldiv:	
  1766                           ; 2 bytes @ 0x0
  1767                           
  1768  0020                     ?___xxtofl:	
  1769                           ; 4 bytes @ 0x0
  1770                           
  1771  0020                     EEPROM_Write_Byte@dado:	
  1772                           ; 4 bytes @ 0x0
  1773                           
  1774  0020                     Package_Usart_is_for_me@retorno:	
  1775                           ; 1 bytes @ 0x0
  1776                           
  1777  0020                     USART_putc@value:	
  1778                           ; 1 bytes @ 0x0
  1779                           
  1780  0020                     __Umul8_16@multiplicand:	
  1781                           ; 1 bytes @ 0x0
  1782                           
  1783  0020                     strcpy@from:	
  1784                           ; 1 bytes @ 0x0
  1785                           
  1786  0020                     PROCULUS_Delay@tempo_ms:	
  1787                           ; 1 bytes @ 0x0
  1788                           
  1789  0020                     ___lwdiv@divisor:	
  1790                           ; 2 bytes @ 0x0
  1791                           
  1792  0020                     my_delay_ms@time:	
  1793                           ; 2 bytes @ 0x0
  1794                           
  1795  0020                     my_delay_ms_WDT@time:	
  1796                           ; 4 bytes @ 0x0
  1797                           
  1798  0020                     USART_init@baudrate:	
  1799                           ; 4 bytes @ 0x0
  1800                           
  1801  0020                     ___lldiv@divisor:	
  1802                           ; 4 bytes @ 0x0
  1803                           
  1804  0020                     ___flge@ff1:	
  1805                           ; 4 bytes @ 0x0
  1806                           
  1807  0020                     ___xxtofl@val:	
  1808                           ; 4 bytes @ 0x0
  1809                           
  1810                           
  1811                           ; 4 bytes @ 0x0
  1812  0020                     	ds	1
  1813  0021                     ??_strcpy:
  1814  0021                     ??_Send_To_MB:	
  1815                           ; 1 bytes @ 0x1
  1816                           
  1817  0021                     ?_USART_put_string:	
  1818                           ; 1 bytes @ 0x1
  1819                           
  1820  0021                     ??_EEPROM_Write_Byte:	
  1821                           ; 1 bytes @ 0x1
  1822                           
  1823  0021                     Send_To_MB@size:	
  1824                           ; 1 bytes @ 0x1
  1825                           
  1826  0021                     USART_put_string@vetor:	
  1827                           ; 1 bytes @ 0x1
  1828                           
  1829                           
  1830                           ; 2 bytes @ 0x1
  1831  0021                     	ds	1
  1832  0022                     ??_strlen:
  1833  0022                     ??_captura:	
  1834                           ; 1 bytes @ 0x2
  1835                           
  1836  0022                     ??_PROCULUS_Delay:	
  1837                           ; 1 bytes @ 0x2
  1838                           
  1839  0022                     ??__Umul8_16:	
  1840                           ; 1 bytes @ 0x2
  1841                           
  1842  0022                     I2C_Master_Wait@tempo:	
  1843                           ; 1 bytes @ 0x2
  1844                           
  1845  0022                     EEPROM_Read_Byte@addr:	
  1846                           ; 1 bytes @ 0x2
  1847                           
  1848  0022                     strcpy@to:	
  1849                           ; 1 bytes @ 0x2
  1850                           
  1851  0022                     USART_to_Protocol@i:	
  1852                           ; 1 bytes @ 0x2
  1853                           
  1854  0022                     ___lwdiv@dividend:	
  1855                           ; 2 bytes @ 0x2
  1856                           
  1857                           
  1858                           ; 2 bytes @ 0x2
  1859  0022                     	ds	1
  1860  0023                     ??_I2C_Master_Start:
  1861  0023                     ?_I2C_Master_Write:	
  1862                           ; 1 bytes @ 0x3
  1863                           
  1864  0023                     ??_I2C_Master_Stop:	
  1865                           ; 1 bytes @ 0x3
  1866                           
  1867  0023                     ??_I2C_Master_RepeatedStart:	
  1868                           ; 1 bytes @ 0x3
  1869                           
  1870  0023                     ??_USART_put_string:	
  1871                           ; 1 bytes @ 0x3
  1872                           
  1873  0023                     ?_EEPROM_Read_String:	
  1874                           ; 1 bytes @ 0x3
  1875                           
  1876  0023                     ?_I2C_Master_Read:	
  1877                           ; 1 bytes @ 0x3
  1878                           
  1879  0023                     ?_EEPROM_Read_Integer:	
  1880                           ; 2 bytes @ 0x3
  1881                           
  1882  0023                     EEPROM_Write_Byte@addr:	
  1883                           ; 2 bytes @ 0x3
  1884                           
  1885  0023                     EEPROM_Read_String@dado:	
  1886                           ; 1 bytes @ 0x3
  1887                           
  1888  0023                     strcpy@cp:	
  1889                           ; 1 bytes @ 0x3
  1890                           
  1891  0023                     strlen@cp:	
  1892                           ; 1 bytes @ 0x3
  1893                           
  1894  0023                     I2C_Master_Write@d:	
  1895                           ; 1 bytes @ 0x3
  1896                           
  1897  0023                     I2C_Master_Read@a:	
  1898                           ; 2 bytes @ 0x3
  1899                           
  1900  0023                     USART_put_string@ptr:	
  1901                           ; 2 bytes @ 0x3
  1902                           
  1903                           
  1904                           ; 2 bytes @ 0x3
  1905  0023                     	ds	1
  1906  0024                     ??_my_delay_ms_WDT:
  1907  0024                     ??_USART_init:	
  1908                           ; 1 bytes @ 0x4
  1909                           
  1910  0024                     ??_EEPROM_Read_String:	
  1911                           ; 1 bytes @ 0x4
  1912                           
  1913  0024                     ??_my_delay_ms:	
  1914                           ; 1 bytes @ 0x4
  1915                           
  1916  0024                     ??___lwdiv:	
  1917                           ; 1 bytes @ 0x4
  1918                           
  1919  0024                     ??___xxtofl:	
  1920                           ; 1 bytes @ 0x4
  1921                           
  1922  0024                     EEPROM_Write_Byte@last_GIE:	
  1923                           ; 1 bytes @ 0x4
  1924                           
  1925  0024                     USART_to_Protocol@usart_protocol:	
  1926                           ; 1 bytes @ 0x4
  1927                           
  1928  0024                     strlen@s:	
  1929                           ; 1 bytes @ 0x4
  1930                           
  1931  0024                     PROCULUS_Delay@i:	
  1932                           ; 1 bytes @ 0x4
  1933                           
  1934  0024                     __Umul8_16@product:	
  1935                           ; 2 bytes @ 0x4
  1936                           
  1937  0024                     ___lldiv@dividend:	
  1938                           ; 2 bytes @ 0x4
  1939                           
  1940  0024                     ___flge@ff2:	
  1941                           ; 4 bytes @ 0x4
  1942                           
  1943                           
  1944                           ; 4 bytes @ 0x4
  1945  0024                     	ds	1
  1946  0025                     ??_I2C_Master_Write:
  1947  0025                     ??_I2C_Master_Read:	
  1948                           ; 1 bytes @ 0x5
  1949                           
  1950  0025                     ??_EEPROM_Read_Integer:	
  1951                           ; 1 bytes @ 0x5
  1952                           
  1953  0025                     ?_EEPROM_Write_Integer:	
  1954                           ; 1 bytes @ 0x5
  1955                           
  1956  0025                     ??_Send_Reply_OK:	
  1957                           ; 1 bytes @ 0x5
  1958                           
  1959  0025                     ?_EEPROM_Write_String:	
  1960                           ; 1 bytes @ 0x5
  1961                           
  1962  0025                     EEPROM_Write_String@dado:	
  1963                           ; 1 bytes @ 0x5
  1964                           
  1965  0025                     EEPROM_Read_String@addr:	
  1966                           ; 1 bytes @ 0x5
  1967                           
  1968  0025                     USART_init@i:	
  1969                           ; 1 bytes @ 0x5
  1970                           
  1971  0025                     EEPROM_Write_Integer@dado:	
  1972                           ; 1 bytes @ 0x5
  1973                           
  1974  0025                     ___lwdiv@quotient:	
  1975                           ; 2 bytes @ 0x5
  1976                           
  1977                           
  1978                           ; 2 bytes @ 0x5
  1979  0025                     	ds	1
  1980  0026                     ??_EEPROM_Write_String:
  1981  0026                     EEPROM_Read_Integer@addr:	
  1982                           ; 1 bytes @ 0x6
  1983                           
  1984  0026                     EEPROM_Read_String@c:	
  1985                           ; 1 bytes @ 0x6
  1986                           
  1987  0026                     __Umul8_16@word_mpld:	
  1988                           ; 1 bytes @ 0x6
  1989                           
  1990  0026                     my_delay_ms@i:	
  1991                           ; 2 bytes @ 0x6
  1992                           
  1993  0026                     my_delay_ms_WDT@i:	
  1994                           ; 4 bytes @ 0x6
  1995                           
  1996                           
  1997                           ; 4 bytes @ 0x6
  1998  0026                     	ds	1
  1999  0027                     ??_EEPROM_Write_Integer:
  2000  0027                     EEPROM_Read_Integer@ptr:	
  2001                           ; 1 bytes @ 0x7
  2002                           
  2003  0027                     EEPROM_Write_String@addr:	
  2004                           ; 1 bytes @ 0x7
  2005                           
  2006  0027                     ___lwdiv@counter:	
  2007                           ; 1 bytes @ 0x7
  2008                           
  2009  0027                     I2C_Master_Read@temp:	
  2010                           ; 1 bytes @ 0x7
  2011                           
  2012                           
  2013                           ; 2 bytes @ 0x7
  2014  0027                     	ds	1
  2015  0028                     ??___lldiv:
  2016  0028                     ??___flge:	
  2017                           ; 1 bytes @ 0x8
  2018                           
  2019  0028                     __Umul8_16@multiplier:	
  2020                           ; 1 bytes @ 0x8
  2021                           
  2022  0028                     ___xxtofl@sign:	
  2023                           ; 1 bytes @ 0x8
  2024                           
  2025  0028                     EEPROM_Read_Integer@result:	
  2026                           ; 1 bytes @ 0x8
  2027                           
  2028                           
  2029                           ; 2 bytes @ 0x8
  2030  0028                     	ds	1
  2031  0029                     ?_EEPROM_24C1025_Read_Buffer_USART:
  2032  0029                     ?_EEPROM_24C1025_Read_Str:	
  2033                           ; 1 bytes @ 0x9
  2034                           
  2035  0029                     EEPROM_Write_Integer@ptr:	
  2036                           ; 1 bytes @ 0x9
  2037                           
  2038  0029                     ___xxtofl@exp:	
  2039                           ; 1 bytes @ 0x9
  2040                           
  2041  0029                     EEPROM_24C1025_Read_Buffer_USART@mem_add:	
  2042                           ; 1 bytes @ 0x9
  2043                           
  2044  0029                     EEPROM_24C1025_Read_Str@mem_add:	
  2045                           ; 4 bytes @ 0x9
  2046                           
  2047  0029                     ___lldiv@quotient:	
  2048                           ; 4 bytes @ 0x9
  2049                           
  2050                           
  2051                           ; 4 bytes @ 0x9
  2052  0029                     	ds	1
  2053  002A                     ?_EEPROM_24C1025_Write_Buffer:
  2054  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  2055                           ; 1 bytes @ 0xA
  2056                           
  2057  002A                     ?_EEPROM_24C1025_Write_Str:	
  2058                           ; 1 bytes @ 0xA
  2059                           
  2060  002A                     EEPROM_Write_Integer@addr:	
  2061                           ; 1 bytes @ 0xA
  2062                           
  2063  002A                     EEPROM_Read_Integer@i:	
  2064                           ; 1 bytes @ 0xA
  2065                           
  2066  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  2067                           ; 1 bytes @ 0xA
  2068                           
  2069  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  2070                           ; 4 bytes @ 0xA
  2071                           
  2072  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  2073                           ; 4 bytes @ 0xA
  2074                           
  2075  002A                     ___xxtofl@arg:	
  2076                           ; 4 bytes @ 0xA
  2077                           
  2078                           
  2079                           ; 4 bytes @ 0xA
  2080  002A                     	ds	1
  2081  002B                     EEPROM_Write_Integer@i:
  2082                           
  2083                           ; 1 bytes @ 0xB
  2084  002B                     	ds	2
  2085  002D                     EEPROM_24C1025_Read_Buffer_USART@sizedata:
  2086  002D                     EEPROM_24C1025_Read_Str@buffer:	
  2087                           ; 1 bytes @ 0xD
  2088                           
  2089  002D                     ___lldiv@counter:	
  2090                           ; 1 bytes @ 0xD
  2091                           
  2092                           
  2093                           ; 1 bytes @ 0xD
  2094  002D                     	ds	1
  2095  002E                     ??_EEPROM_24C1025_Read_Str:
  2096  002E                     ?_I2C_Master_Init:	
  2097                           ; 1 bytes @ 0xE
  2098                           
  2099  002E                     ?_ADC_Media_10bits:	
  2100                           ; 1 bytes @ 0xE
  2101                           
  2102  002E                     ?___fldiv:	
  2103                           ; 4 bytes @ 0xE
  2104                           
  2105  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  2106                           ; 4 bytes @ 0xE
  2107                           
  2108  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2109                           ; 1 bytes @ 0xE
  2110                           
  2111  002E                     EEPROM_24C1025_Read_Buffer_USART@data:	
  2112                           ; 1 bytes @ 0xE
  2113                           
  2114  002E                     EEPROM_24C1025_Write_Str@data:	
  2115                           ; 1 bytes @ 0xE
  2116                           
  2117  002E                     I2C_Master_Init@c:	
  2118                           ; 1 bytes @ 0xE
  2119                           
  2120  002E                     ___fldiv@a:	
  2121                           ; 4 bytes @ 0xE
  2122                           
  2123                           
  2124                           ; 4 bytes @ 0xE
  2125  002E                     	ds	1
  2126  002F                     ??_EEPROM_24C1025_Read_Buffer_USART:
  2127  002F                     ??_EEPROM_24C1025_Write_Str:	
  2128                           ; 1 bytes @ 0xF
  2129                           
  2130  002F                     EEPROM_24C1025_Read_Buffer@data:	
  2131                           ; 1 bytes @ 0xF
  2132                           
  2133  002F                     EEPROM_24C1025_Write_Buffer@data:	
  2134                           ; 1 bytes @ 0xF
  2135                           
  2136                           
  2137                           ; 2 bytes @ 0xF
  2138  002F                     	ds	1
  2139  0030                     ??_EEPROM_24C1025_Read_Buffer:
  2140  0030                     EEPROM_24C1025_Read_Str@cnt:	
  2141                           ; 1 bytes @ 0x10
  2142                           
  2143                           
  2144                           ; 1 bytes @ 0x10
  2145  0030                     	ds	1
  2146  0031                     ??_EEPROM_24C1025_Write_Buffer:
  2147  0031                     EEPROM_24C1025_Read_Buffer_USART@cnt_117:	
  2148                           ; 1 bytes @ 0x11
  2149                           
  2150  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  2151                           ; 1 bytes @ 0x11
  2152                           
  2153  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  2154                           ; 1 bytes @ 0x11
  2155                           
  2156                           
  2157                           ; 1 bytes @ 0x11
  2158  0031                     	ds	1
  2159  0032                     ??_ADC_Media_10bits:
  2160  0032                     ??_I2C_Master_Init:	
  2161                           ; 1 bytes @ 0x12
  2162                           
  2163  0032                     EEPROM_24C1025_Read_Buffer@cnt_108:	
  2164                           ; 1 bytes @ 0x12
  2165                           
  2166  0032                     EEPROM_24C1025_Read_Buffer_USART@chip_add:	
  2167                           ; 1 bytes @ 0x12
  2168                           
  2169  0032                     EEPROM_24C1025_Write_Str@range:	
  2170                           ; 1 bytes @ 0x12
  2171                           
  2172  0032                     EEPROM_24C1025_Read_Str@range:	
  2173                           ; 1 bytes @ 0x12
  2174                           
  2175  0032                     ___fldiv@b:	
  2176                           ; 1 bytes @ 0x12
  2177                           
  2178                           
  2179                           ; 4 bytes @ 0x12
  2180  0032                     	ds	1
  2181  0033                     EEPROM_24C1025_Write_Buffer@count:
  2182  0033                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2183                           ; 1 bytes @ 0x13
  2184                           
  2185  0033                     EEPROM_24C1025_Read_Buffer_USART@range:	
  2186                           ; 1 bytes @ 0x13
  2187                           
  2188  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2189                           ; 1 bytes @ 0x13
  2190                           
  2191  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2192                           ; 1 bytes @ 0x13
  2193                           
  2194  0033                     ADC_Media_10bits@canal:	
  2195                           ; 1 bytes @ 0x13
  2196                           
  2197                           
  2198                           ; 1 bytes @ 0x13
  2199  0033                     	ds	1
  2200  0034                     EEPROM_24C1025_Write_Buffer@chip_add:
  2201  0034                     EEPROM_24C1025_Read_Buffer@range:	
  2202                           ; 1 bytes @ 0x14
  2203                           
  2204  0034                     EEPROM_24C1025_Read_Buffer_USART@ctrl:	
  2205                           ; 1 bytes @ 0x14
  2206                           
  2207  0034                     ADC_Media_10bits@value:	
  2208                           ; 1 bytes @ 0x14
  2209                           
  2210                           
  2211                           ; 2 bytes @ 0x14
  2212  0034                     	ds	1
  2213  0035                     EEPROM_24C1025_Write_Buffer@range:
  2214  0035                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2215                           ; 1 bytes @ 0x15
  2216                           
  2217                           
  2218                           ; 1 bytes @ 0x15
  2219  0035                     	ds	1
  2220  0036                     ?_EEPROM_24C1025_Read_Byte:
  2221  0036                     ??___fldiv:	
  2222                           ; 1 bytes @ 0x16
  2223                           
  2224  0036                     ?_EEPROM_24C1025_Read_Int:	
  2225                           ; 1 bytes @ 0x16
  2226                           
  2227  0036                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2228                           ; 2 bytes @ 0x16
  2229                           
  2230  0036                     ADC_Media_10bits@i:	
  2231                           ; 1 bytes @ 0x16
  2232                           
  2233  0036                     EEPROM_24C1025_Read_Byte@mem_add:	
  2234                           ; 1 bytes @ 0x16
  2235                           
  2236  0036                     EEPROM_24C1025_Read_Int@mem_add:	
  2237                           ; 4 bytes @ 0x16
  2238                           
  2239                           
  2240                           ; 4 bytes @ 0x16
  2241  0036                     	ds	1
  2242  0037                     ?_EEPROM_24C1025_Write_Byte:
  2243  0037                     ?___fladd:	
  2244                           ; 1 bytes @ 0x17
  2245                           
  2246  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2247                           ; 4 bytes @ 0x17
  2248                           
  2249  0037                     ___fladd@b:	
  2250                           ; 4 bytes @ 0x17
  2251                           
  2252                           
  2253                           ; 4 bytes @ 0x17
  2254  0037                     	ds	3
  2255  003A                     ??_EEPROM_24C1025_Read_Byte:
  2256  003A                     ??_EEPROM_24C1025_Read_Int:	
  2257                           ; 1 bytes @ 0x1A
  2258                           
  2259                           
  2260                           ; 1 bytes @ 0x1A
  2261  003A                     	ds	1
  2262  003B                     EEPROM_24C1025_Write_Byte@data:
  2263  003B                     EEPROM_24C1025_Read_Byte@chip_add:	
  2264                           ; 1 bytes @ 0x1B
  2265                           
  2266  003B                     ___fladd@a:	
  2267                           ; 1 bytes @ 0x1B
  2268                           
  2269  003B                     ___fldiv@rem:	
  2270                           ; 4 bytes @ 0x1B
  2271                           
  2272                           
  2273                           ; 4 bytes @ 0x1B
  2274  003B                     	ds	1
  2275  003C                     ??_EEPROM_24C1025_Write_Byte:
  2276  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2277                           ; 1 bytes @ 0x1C
  2278                           
  2279  003C                     EEPROM_24C1025_Read_Byte@data:	
  2280                           ; 1 bytes @ 0x1C
  2281                           
  2282  003C                     EEPROM_24C1025_Read_Int@chip_add:	
  2283                           ; 1 bytes @ 0x1C
  2284                           
  2285                           
  2286                           ; 1 bytes @ 0x1C
  2287  003C                     	ds	1
  2288  003D                     EEPROM_24C1025_Read_Int@data:
  2289                           
  2290                           ; 2 bytes @ 0x1D
  2291  003D                     	ds	2
  2292  003F                     ??___fladd:
  2293  003F                     ___fldiv@sign:	
  2294                           ; 1 bytes @ 0x1F
  2295                           
  2296                           
  2297                           ; 1 bytes @ 0x1F
  2298  003F                     	ds	1
  2299  0040                     ___fldiv@new_exp:
  2300                           
  2301                           ; 2 bytes @ 0x20
  2302  0040                     	ds	2
  2303  0042                     ___fldiv@grs:
  2304                           
  2305                           ; 4 bytes @ 0x22
  2306  0042                     	ds	4
  2307  0046                     ___fldiv@bexp:
  2308                           
  2309                           ; 1 bytes @ 0x26
  2310  0046                     	ds	1
  2311  0047                     ___fladd@signs:
  2312  0047                     ___fldiv@aexp:	
  2313                           ; 1 bytes @ 0x27
  2314                           
  2315                           
  2316                           ; 1 bytes @ 0x27
  2317  0047                     	ds	1
  2318  0048                     ___fladd@aexp:
  2319                           
  2320                           ; 1 bytes @ 0x28
  2321  0048                     	ds	1
  2322  0049                     ___fladd@bexp:
  2323                           
  2324                           ; 1 bytes @ 0x29
  2325  0049                     	ds	1
  2326  004A                     ___fladd@grs:
  2327                           
  2328                           ; 1 bytes @ 0x2A
  2329  004A                     	ds	1
  2330  004B                     ?___flsub:
  2331  004B                     ?___flmul:	
  2332                           ; 4 bytes @ 0x2B
  2333                           
  2334  004B                     ___flsub@a:	
  2335                           ; 4 bytes @ 0x2B
  2336                           
  2337  004B                     ___flmul@b:	
  2338                           ; 4 bytes @ 0x2B
  2339                           
  2340                           
  2341                           ; 4 bytes @ 0x2B
  2342  004B                     	ds	4
  2343  004F                     ___flsub@b:
  2344  004F                     ___flmul@a:	
  2345                           ; 4 bytes @ 0x2F
  2346                           
  2347                           
  2348                           ; 4 bytes @ 0x2F
  2349  004F                     	ds	4
  2350  0053                     ??___flsub:
  2351  0053                     ??___flmul:	
  2352                           ; 1 bytes @ 0x33
  2353                           
  2354                           
  2355                           ; 1 bytes @ 0x33
  2356  0053                     	ds	5
  2357  0058                     ___flmul@sign:
  2358                           
  2359                           ; 1 bytes @ 0x38
  2360  0058                     	ds	1
  2361  0059                     ___flmul@aexp:
  2362                           
  2363                           ; 1 bytes @ 0x39
  2364  0059                     	ds	1
  2365  005A                     ___flmul@grs:
  2366                           
  2367                           ; 4 bytes @ 0x3A
  2368  005A                     	ds	4
  2369  005E                     ___flmul@bexp:
  2370                           
  2371                           ; 1 bytes @ 0x3E
  2372  005E                     	ds	1
  2373  005F                     ___flmul@prod:
  2374                           
  2375                           ; 4 bytes @ 0x3F
  2376  005F                     	ds	4
  2377  0063                     ___flmul@temp:
  2378                           
  2379                           ; 2 bytes @ 0x43
  2380  0063                     	ds	2
  2381  0065                     ??_MediaPlacaVaccum:
  2382  0065                     ?___fltol:	
  2383                           ; 1 bytes @ 0x45
  2384                           
  2385  0065                     ___fltol@f1:	
  2386                           ; 4 bytes @ 0x45
  2387                           
  2388                           
  2389                           ; 4 bytes @ 0x45
  2390  0065                     	ds	4
  2391  0069                     ??___fltol:
  2392                           
  2393                           ; 1 bytes @ 0x49
  2394  0069                     	ds	5
  2395  006E                     ___fltol@sign1:
  2396                           
  2397                           ; 1 bytes @ 0x4E
  2398  006E                     	ds	1
  2399  006F                     ___fltol@exp1:
  2400                           
  2401                           ; 1 bytes @ 0x4F
  2402  006F                     	ds	1
  2403  0070                     ??_Save_Log:
  2404  0070                     ??_EEPROM_24C1025_Fill_All:	
  2405                           ; 1 bytes @ 0x50
  2406                           
  2407                           
  2408                           	psect	maintext
  2409  111B                     __pmaintext:	
  2410                           ; 1 bytes @ 0x50
  2411 ;;
  2412 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2413 ;;
  2414 ;; *************** function _main *****************
  2415 ;; Defined at:
  2416 ;;		line 144 in file "SlaveLiofilizadorVer1.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;		None
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  reset           2   39[BANK1 ] unsigned int 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : B00/0
  2427 ;;		On exit  : 300/100
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         0       0       0       0       0
  2431 ;;      Locals:         0       0       2       0       0
  2432 ;;      Temps:          0       0       3       0       0
  2433 ;;      Totals:         0       0       5       0       0
  2434 ;;Total ram usage:        5 bytes
  2435 ;; Hardware stack levels required when called: 7
  2436 ;; This function calls:
  2437 ;;		_ADC_init
  2438 ;;		_Decodify_Command
  2439 ;;		_EEPROM_Read_Integer
  2440 ;;		_EEPROM_Write_Integer
  2441 ;;		_I2C_Master_Init
  2442 ;;		_MediaPlacaVaccum
  2443 ;;		_USART_init
  2444 ;;		_my_delay_ms_WDT
  2445 ;; This function is called by:
  2446 ;;		Startup code after reset
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           
  2451                           ;psect for function _main
  2452  111B                     _main:
  2453                           
  2454                           ;SlaveLiofilizadorVer1.c: 145:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2455                           
  2456                           ;incstack = 0
  2457                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2458  111B  3002               	movlw	2
  2459  111C  1683               	bsf	3,5	;RP0=1, select bank1
  2460  111D  1303               	bcf	3,6	;RP1=0, select bank1
  2461  111E  00C6               	movwf	(??_main^(0+128)+2)
  2462  111F  3004               	movlw	4
  2463  1120  00C5               	movwf	(??_main^(0+128)+1)
  2464  1121  30B9               	movlw	185
  2465  1122  00C4               	movwf	??_main^(0+128)
  2466  1123                     u5517:
  2467  1123  0BC4               	decfsz	??_main^(0+128),f
  2468  1124  2923               	goto	u5517
  2469  1125  0BC5               	decfsz	(??_main^(0+128)+1),f
  2470  1126  2923               	goto	u5517
  2471  1127  0BC6               	decfsz	(??_main^(0+128)+2),f
  2472  1128  2923               	goto	u5517
  2473  1129  292A               	nop2
  2474                           
  2475                           ;SlaveLiofilizadorVer1.c: 146:      OSCCONbits.IRCF0=1;
  2476  112A  1683               	bsf	3,5	;RP0=1, select bank1
  2477  112B  1303               	bcf	3,6	;RP1=0, select bank1
  2478  112C  160F               	bsf	15,4	;volatile
  2479                           
  2480                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF1=1;
  2481  112D  168F               	bsf	15,5	;volatile
  2482                           
  2483                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF2=1;
  2484  112E  170F               	bsf	15,6	;volatile
  2485                           
  2486                           ;SlaveLiofilizadorVer1.c: 150:      PORTA=0;
  2487  112F  1283               	bcf	3,5	;RP0=0, select bank0
  2488  1130  0185               	clrf	5	;volatile
  2489                           
  2490                           ;SlaveLiofilizadorVer1.c: 151:      PORTB=0;
  2491  1131  0186               	clrf	6	;volatile
  2492                           
  2493                           ;SlaveLiofilizadorVer1.c: 152:      PORTC=0;
  2494  1132  0187               	clrf	7	;volatile
  2495                           
  2496                           ;SlaveLiofilizadorVer1.c: 153:      PORTE=0;
  2497  1133  0189               	clrf	9	;volatile
  2498                           
  2499                           ;SlaveLiofilizadorVer1.c: 154:      TRISA=0b11101111;
  2500  1134  30EF               	movlw	239
  2501  1135  1683               	bsf	3,5	;RP0=1, select bank1
  2502  1136  0085               	movwf	5	;volatile
  2503                           
  2504                           ;SlaveLiofilizadorVer1.c: 155:      TRISB=0b00001111;
  2505  1137  300F               	movlw	15
  2506  1138  0086               	movwf	6	;volatile
  2507                           
  2508                           ;SlaveLiofilizadorVer1.c: 156:      TRISC=0xF0;
  2509  1139  30F0               	movlw	240
  2510  113A  0087               	movwf	7	;volatile
  2511                           
  2512                           ;SlaveLiofilizadorVer1.c: 157:      TRISE=0xFF;
  2513  113B  30FF               	movlw	255
  2514  113C  0089               	movwf	9	;volatile
  2515                           
  2516                           ;SlaveLiofilizadorVer1.c: 159:      ANSEL=0x00000011;
  2517  113D  3011               	movlw	17
  2518  113E  1703               	bsf	3,6	;RP1=1, select bank3
  2519  113F  0088               	movwf	8	;volatile
  2520                           
  2521                           ;SlaveLiofilizadorVer1.c: 160:      ANSELH=0x00000000;
  2522  1140  0189               	clrf	9	;volatile
  2523                           
  2524                           ;SlaveLiofilizadorVer1.c: 162:      OPTION_REGbits.nRBPU=0;
  2525  1141  1303               	bcf	3,6	;RP1=0, select bank1
  2526  1142  1381               	bcf	1,7	;volatile
  2527                           
  2528                           ;SlaveLiofilizadorVer1.c: 163:      WPUB=0b00001111;
  2529  1143  300F               	movlw	15
  2530  1144  0095               	movwf	21	;volatile
  2531                           
  2532                           ;SlaveLiofilizadorVer1.c: 166:      PORTBbits.RB7 =1;
  2533  1145  1283               	bcf	3,5	;RP0=0, select bank0
  2534  1146  1786               	bsf	6,7	;volatile
  2535                           
  2536                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB6 =1;
  2537  1147  1706               	bsf	6,6	;volatile
  2538                           
  2539                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB5=1;
  2540  1148  1686               	bsf	6,5	;volatile
  2541                           
  2542                           ;SlaveLiofilizadorVer1.c: 169:      my_delay_ms_WDT(1000);
  2543  1149  3000               	movlw	0
  2544  114A  00A3               	movwf	my_delay_ms_WDT@time+3
  2545  114B  3000               	movlw	0
  2546  114C  00A2               	movwf	my_delay_ms_WDT@time+2
  2547  114D  3003               	movlw	3
  2548  114E  00A1               	movwf	my_delay_ms_WDT@time+1
  2549  114F  30E8               	movlw	232
  2550  1150  00A0               	movwf	my_delay_ms_WDT@time
  2551  1151  160A  158A  2448  160A  118A  	fcall	_my_delay_ms_WDT
  2552                           
  2553                           ;SlaveLiofilizadorVer1.c: 171:      OPTION_REGbits.T0CS=0;
  2554  1156  1683               	bsf	3,5	;RP0=1, select bank1
  2555  1157  1281               	bcf	1,5	;volatile
  2556                           
  2557                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.PSA =1;
  2558  1158  1581               	bsf	1,3	;volatile
  2559                           
  2560                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PS0 =1;
  2561  1159  1401               	bsf	1,0	;volatile
  2562                           
  2563                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS1 =1;
  2564  115A  1481               	bsf	1,1	;volatile
  2565                           
  2566                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS2 =1;
  2567  115B  1501               	bsf	1,2	;volatile
  2568                           
  2569                           ;SlaveLiofilizadorVer1.c: 176:      INTCONbits.T0IE =0;
  2570  115C  128B               	bcf	11,5	;volatile
  2571                           
  2572                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.INTE =0;
  2573  115D  120B               	bcf	11,4	;volatile
  2574                           
  2575                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.GIE =1;
  2576  115E  178B               	bsf	11,7	;volatile
  2577                           
  2578                           ;SlaveLiofilizadorVer1.c: 181:      INTCONbits.PEIE = 1;
  2579  115F  170B               	bsf	11,6	;volatile
  2580                           
  2581                           ;SlaveLiofilizadorVer1.c: 182:      T1CKPS0=1;
  2582  1160  1283               	bcf	3,5	;RP0=0, select bank0
  2583  1161  1610               	bsf	16,4	;volatile
  2584                           
  2585                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS1=1;
  2586  1162  1690               	bsf	16,5	;volatile
  2587                           
  2588                           ;SlaveLiofilizadorVer1.c: 184:      TMR1CS=0;
  2589  1163  1090               	bcf	16,1	;volatile
  2590                           
  2591                           ;SlaveLiofilizadorVer1.c: 185:      TMR1IE=1;
  2592  1164  1683               	bsf	3,5	;RP0=1, select bank1
  2593  1165  140C               	bsf	12,0	;volatile
  2594                           
  2595                           ;SlaveLiofilizadorVer1.c: 186:      T1CON=1;
  2596  1166  3001               	movlw	1
  2597  1167  1283               	bcf	3,5	;RP0=0, select bank0
  2598  1168  0090               	movwf	16	;volatile
  2599  1169  0064               	clrwdt	;# 
  2600                           
  2601                           ;SlaveLiofilizadorVer1.c: 193:      ADC_init();
  2602  116A  160A  158A  2090  160A  118A  	fcall	_ADC_init
  2603                           
  2604                           ;SlaveLiofilizadorVer1.c: 194:      I2C_Master_Init(100000);
  2605  116F  3000               	movlw	0
  2606  1170  00B1               	movwf	I2C_Master_Init@c+3
  2607  1171  3001               	movlw	1
  2608  1172  00B0               	movwf	I2C_Master_Init@c+2
  2609  1173  3086               	movlw	134
  2610  1174  00AF               	movwf	I2C_Master_Init@c+1
  2611  1175  30A0               	movlw	160
  2612  1176  00AE               	movwf	I2C_Master_Init@c
  2613  1177  160A  158A  2310  160A  118A  	fcall	_I2C_Master_Init
  2614                           
  2615                           ;SlaveLiofilizadorVer1.c: 195:      USART_init(115200);
  2616  117C  3000               	movlw	0
  2617  117D  1283               	bcf	3,5	;RP0=0, select bank0
  2618  117E  00A3               	movwf	USART_init@baudrate+3
  2619  117F  3001               	movlw	1
  2620  1180  00A2               	movwf	USART_init@baudrate+2
  2621  1181  30C2               	movlw	194
  2622  1182  00A1               	movwf	USART_init@baudrate+1
  2623  1183  3000               	movlw	0
  2624  1184  00A0               	movwf	USART_init@baudrate
  2625  1185  120A  158A  2000  160A  118A  	fcall	_USART_init
  2626                           
  2627                           ;SlaveLiofilizadorVer1.c: 201:      {;SlaveLiofilizadorVer1.c: 202:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 203:      reset=EEPROM_Read_Integer(0x10);
  2628  118A  3010               	movlw	16
  2629  118B  160A  158A  22BC  160A  118A  	fcall	_EEPROM_Read_Integer
  2630  1190  0824               	movf	?_EEPROM_Read_Integer+1,w
  2631  1191  1683               	bsf	3,5	;RP0=1, select bank1
  2632  1192  00C8               	movwf	(main@reset+1)^(0+128)
  2633  1193  1283               	bcf	3,5	;RP0=0, select bank0
  2634  1194  0823               	movf	?_EEPROM_Read_Integer,w
  2635  1195  1683               	bsf	3,5	;RP0=1, select bank1
  2636  1196  00C7               	movwf	main@reset^(0+128)
  2637                           
  2638                           ;SlaveLiofilizadorVer1.c: 204:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2639  1197  0A47               	incf	main@reset^(0+128),w
  2640  1198  1D03               	skipz
  2641  1199  29A7               	goto	l5921
  2642  119A  0A48               	incf	(main@reset+1)^(0+128),w
  2643  119B  1D03               	btfss	3,2
  2644  119C  29A7               	goto	l5921
  2645  119D  3000               	movlw	0
  2646  119E  1283               	bcf	3,5	;RP0=0, select bank0
  2647  119F  00A5               	movwf	EEPROM_Write_Integer@dado
  2648  11A0  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2649  11A1  3010               	movlw	16
  2650  11A2  160A  158A  2341  160A  118A  	fcall	_EEPROM_Write_Integer
  2651  11A7                     l5921:
  2652                           
  2653                           ;SlaveLiofilizadorVer1.c: 205:      reset++;
  2654  11A7  3001               	movlw	1
  2655  11A8  1683               	bsf	3,5	;RP0=1, select bank1
  2656  11A9  1303               	bcf	3,6	;RP1=0, select bank1
  2657  11AA  07C7               	addwf	main@reset^(0+128),f
  2658  11AB  1803               	skipnc
  2659  11AC  0AC8               	incf	(main@reset+1)^(0+128),f
  2660  11AD  3000               	movlw	0
  2661  11AE  07C8               	addwf	(main@reset+1)^(0+128),f
  2662                           
  2663                           ;SlaveLiofilizadorVer1.c: 206:      EEPROM_Write_Integer(0x10,reset);
  2664  11AF  0848               	movf	(main@reset+1)^(0+128),w
  2665  11B0  1283               	bcf	3,5	;RP0=0, select bank0
  2666  11B1  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2667  11B2  1683               	bsf	3,5	;RP0=1, select bank1
  2668  11B3  0847               	movf	main@reset^(0+128),w
  2669  11B4  1283               	bcf	3,5	;RP0=0, select bank0
  2670  11B5  00A5               	movwf	EEPROM_Write_Integer@dado
  2671  11B6  3010               	movlw	16
  2672  11B7  160A  158A  2341  160A  118A  	fcall	_EEPROM_Write_Integer
  2673                           
  2674                           ;SlaveLiofilizadorVer1.c: 207:      };SlaveLiofilizadorVer1.c: 211:      Delay_Led_Tmr0 
      +                          = 0;
  2675  11BC  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2676  11BD  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2677                           
  2678                           ;SlaveLiofilizadorVer1.c: 212:      Delay_Led_Usart = 0;
  2679  11BE  1683               	bsf	3,5	;RP0=1, select bank1
  2680  11BF  1303               	bcf	3,6	;RP1=0, select bank1
  2681  11C0  01DB               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2682  11C1  01DC               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2683                           
  2684                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Memory = 0;
  2685  11C2  01DD               	clrf	_Delay_Led_Memory^(0+128)	;volatile
  2686  11C3  01DE               	clrf	(_Delay_Led_Memory+1)^(0+128)	;volatile
  2687                           
  2688                           ;SlaveLiofilizadorVer1.c: 215:      segundo=0;
  2689  11C4  01FD               	clrf	_segundo	;volatile
  2690                           
  2691                           ;SlaveLiofilizadorVer1.c: 216:      hora=0;
  2692  11C5  01FC               	clrf	_hora	;volatile
  2693                           
  2694                           ;SlaveLiofilizadorVer1.c: 217:      PORTCbits.RC0=0;
  2695  11C6  1283               	bcf	3,5	;RP0=0, select bank0
  2696  11C7  1007               	bcf	7,0	;volatile
  2697                           
  2698                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC1=0;
  2699  11C8  1087               	bcf	7,1	;volatile
  2700                           
  2701                           ;SlaveLiofilizadorVer1.c: 219:      PORTAbits.RA2=0;
  2702  11C9  1105               	bcf	5,2	;volatile
  2703                           
  2704                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA3=0;
  2705  11CA  1185               	bcf	5,3	;volatile
  2706                           
  2707                           ;SlaveLiofilizadorVer1.c: 223:      Board_Number=(((0x0F)&(~PORTB)));
  2708  11CB  0906               	comf	6,w	;volatile
  2709  11CC  390F               	andlw	15
  2710  11CD  1683               	bsf	3,5	;RP0=1, select bank1
  2711  11CE  00C4               	movwf	??_main^(0+128)
  2712  11CF  0844               	movf	??_main^(0+128),w
  2713  11D0  00E1               	movwf	_Board_Number^(0+128)
  2714                           
  2715                           ;SlaveLiofilizadorVer1.c: 224:      canal=1;
  2716  11D1  01E2               	clrf	_canal^(0+128)
  2717  11D2  0AE2               	incf	_canal^(0+128),f
  2718                           
  2719                           ;SlaveLiofilizadorVer1.c: 232:      statuspower.flag_global_vacuo=0;
  2720  11D3  1163               	bcf	_statuspower^(0+128),2
  2721  11D4                     l5947:
  2722                           
  2723                           ;SlaveLiofilizadorVer1.c: 246:           {;SlaveLiofilizadorVer1.c: 248:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2724  11D4  17E4               	bsf	_generic_status^(0+128),7
  2725                           
  2726                           ;SlaveLiofilizadorVer1.c: 274:          if(++canal==2) canal=0;
  2727  11D5  3001               	movlw	1
  2728  11D6  00C4               	movwf	??_main^(0+128)
  2729  11D7  0844               	movf	??_main^(0+128),w
  2730  11D8  07E2               	addwf	_canal^(0+128),f
  2731  11D9  3002               	movlw	2
  2732  11DA  0662               	xorwf	_canal^(0+128),w
  2733  11DB  1903               	btfsc	3,2
  2734  11DC  01E2               	clrf	_canal^(0+128)
  2735                           
  2736                           ;SlaveLiofilizadorVer1.c: 275:          MediaPlacaVaccum(canal);
  2737  11DD  0862               	movf	_canal^(0+128),w
  2738  11DE  120A  118A  2037  160A  118A  	fcall	_MediaPlacaVaccum
  2739                           
  2740                           ;SlaveLiofilizadorVer1.c: 283:          if(generic_status.flag_usart_rx==1)
  2741  11E3  1683               	bsf	3,5	;RP0=1, select bank1
  2742  11E4  1C64               	btfss	_generic_status^(0+128),0
  2743  11E5  29D4               	goto	l5947
  2744                           
  2745                           ;SlaveLiofilizadorVer1.c: 284:             {;SlaveLiofilizadorVer1.c: 285:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2746  11E6  1283               	bcf	3,5	;RP0=0, select bank2
  2747  11E7  1703               	bsf	3,6	;RP1=1, select bank2
  2748  11E8  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2749  11E9  1683               	bsf	3,5	;RP0=1, select bank1
  2750  11EA  1303               	bcf	3,6	;RP1=0, select bank1
  2751  11EB  00D8               	movwf	(_header+1)^(0+128)
  2752  11EC  1283               	bcf	3,5	;RP0=0, select bank2
  2753  11ED  1703               	bsf	3,6	;RP1=1, select bank2
  2754  11EE  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2755  11EF  1683               	bsf	3,5	;RP0=1, select bank1
  2756  11F0  1303               	bcf	3,6	;RP1=0, select bank1
  2757  11F1  00D7               	movwf	_header^(0+128)
  2758                           
  2759                           ;SlaveLiofilizadorVer1.c: 286:             if(header==0xAABB)
  2760  11F2  30BB               	movlw	187
  2761  11F3  0657               	xorwf	_header^(0+128),w
  2762  11F4  30AA               	movlw	170
  2763  11F5  1903               	skipnz
  2764  11F6  0658               	xorwf	(_header+1)^(0+128),w
  2765  11F7  1D03               	btfss	3,2
  2766  11F8  29D4               	goto	l5947
  2767                           
  2768                           ;SlaveLiofilizadorVer1.c: 287:                {;SlaveLiofilizadorVer1.c: 288:           
      +                               destino =usart_buffer[3];
  2769  11F9  1283               	bcf	3,5	;RP0=0, select bank2
  2770  11FA  1703               	bsf	3,6	;RP1=1, select bank2
  2771  11FB  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2772  11FC  1683               	bsf	3,5	;RP0=1, select bank1
  2773  11FD  1303               	bcf	3,6	;RP1=0, select bank1
  2774  11FE  00C4               	movwf	??_main^(0+128)
  2775  11FF  0844               	movf	??_main^(0+128),w
  2776  1200  00E0               	movwf	_destino^(0+128)
  2777                           
  2778                           ;SlaveLiofilizadorVer1.c: 289:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2779  1201  0860               	movf	_destino^(0+128),w
  2780  1202  0661               	xorwf	_Board_Number^(0+128),w
  2781  1203  1D03               	btfss	3,2
  2782  1204  0A60               	incf	_destino^(0+128),w
  2783  1205  1D03               	btfss	3,2
  2784  1206  29D4               	goto	l5947
  2785                           
  2786                           ;SlaveLiofilizadorVer1.c: 290:                       {;SlaveLiofilizadorVer1.c: 291:    
      +                                             Delay_Led_Usart=20;
  2787  1207  3014               	movlw	20
  2788  1208  00DB               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2789  1209  3000               	movlw	0
  2790  120A  00DC               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2791                           
  2792                           ;SlaveLiofilizadorVer1.c: 292:                       Decodify_Command();
  2793  120B  120A  118A  23FF  160A  118A  	fcall	_Decodify_Command
  2794                           
  2795                           ;SlaveLiofilizadorVer1.c: 293:                       generic_status.flag_usart_rx=0;
  2796  1210  1683               	bsf	3,5	;RP0=1, select bank1
  2797  1211  1303               	bcf	3,6	;RP1=0, select bank1
  2798  1212  1064               	bcf	_generic_status^(0+128),0
  2799                           
  2800                           ;SlaveLiofilizadorVer1.c: 296:             }
  2801  1213  29D4               	goto	l5947
  2802  1214                     __end_of_main:
  2803                           
  2804                           	psect	text1
  2805  0800                     __ptext1:	
  2806 ;; *************** function _USART_init *****************
  2807 ;; Defined at:
  2808 ;;		line 18 in file "usart.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  baudrate        4    0[BANK0 ] unsigned long 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  i               1    5[BANK0 ] unsigned char 
  2813 ;;  erro            1    0        unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0
  2818 ;; Tracked objects:
  2819 ;;		On entry : 300/0
  2820 ;;		On exit  : 300/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2823 ;;      Params:         0       4       0       0       0
  2824 ;;      Locals:         0       1       0       0       0
  2825 ;;      Temps:          0       1       0       0       0
  2826 ;;      Totals:         0       6       0       0       0
  2827 ;;Total ram usage:        6 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; Hardware stack levels required when called: 1
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_main
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function _USART_init
  2839  0800                     _USART_init:
  2840                           
  2841                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  2842                           
  2843                           ;incstack = 0
  2844                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  2845  0800  304B               	movlw	75
  2846  0801  0621               	xorwf	USART_init@baudrate+1,w
  2847  0802  0420               	iorwf	USART_init@baudrate,w
  2848  0803  0422               	iorwf	USART_init@baudrate+2,w
  2849  0804  0423               	iorwf	USART_init@baudrate+3,w
  2850  0805  1D03               	btfss	3,2
  2851  0806  2813               	goto	l5025
  2852                           
  2853                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  2854  0807  1283               	bcf	3,5	;RP0=0, select bank0
  2855  0808  1303               	bcf	3,6	;RP1=0, select bank0
  2856  0809  1798               	bsf	24,7	;volatile
  2857                           
  2858                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  2859  080A  1618               	bsf	24,4	;volatile
  2860                           
  2861                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  2862  080B  1683               	bsf	3,5	;RP0=1, select bank1
  2863  080C  1518               	bsf	24,2	;volatile
  2864                           
  2865                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  2866  080D  1218               	bcf	24,4	;volatile
  2867                           
  2868                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  2869  080E  1318               	bcf	24,6	;volatile
  2870                           
  2871                           ;usart.c: 32:           SPBRG =12;
  2872  080F  300C               	movlw	12
  2873  0810  0099               	movwf	25	;volatile
  2874                           
  2875                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  2876  0811  170B               	bsf	11,6	;volatile
  2877  0812  282F               	goto	L1
  2878  0813                     l5025:	
  2879                           ;usart.c: 35:           }
  2880                           
  2881                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  2882                           
  2883  0813  30C2               	movlw	194
  2884  0814  1283               	bcf	3,5	;RP0=0, select bank0
  2885  0815  1303               	bcf	3,6	;RP1=0, select bank0
  2886  0816  0621               	xorwf	USART_init@baudrate+1,w
  2887  0817  1D03               	skipz
  2888  0818  2830               	goto	l5045
  2889  0819  0322               	decf	USART_init@baudrate+2,w
  2890  081A  0420               	iorwf	USART_init@baudrate,w
  2891  081B  0423               	iorwf	USART_init@baudrate+3,w
  2892  081C  1D03               	btfss	3,2
  2893  081D  2830               	goto	l5045
  2894                           
  2895                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  2896  081E  3010               	movlw	16
  2897  081F  1683               	bsf	3,5	;RP0=1, select bank1
  2898  0820  1303               	bcf	3,6	;RP1=0, select bank1
  2899  0821  0099               	movwf	25	;volatile
  2900                           
  2901                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  2902  0822  1703               	bsf	3,6	;RP1=1, select bank3
  2903  0823  1587               	bsf	7,3	;volatile
  2904                           
  2905                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  2906  0824  1303               	bcf	3,6	;RP1=0, select bank1
  2907  0825  1518               	bsf	24,2	;volatile
  2908                           
  2909                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  2910  0826  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0827  1798               	bsf	24,7	;volatile
  2912                           
  2913                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  2914  0828  1683               	bsf	3,5	;RP0=1, select bank1
  2915  0829  1218               	bcf	24,4	;volatile
  2916                           
  2917                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  2918  082A  1318               	bcf	24,6	;volatile
  2919                           
  2920                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  2921  082B  1283               	bcf	3,5	;RP0=0, select bank0
  2922  082C  1618               	bsf	24,4	;volatile
  2923                           
  2924                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  2925  082D  170B               	bsf	11,6	;volatile
  2926                           
  2927                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  2928  082E  1683               	bsf	3,5	;RP0=1, select bank1
  2929  082F                     L1:
  2930  082F  168C               	bsf	12,5	;volatile
  2931  0830                     l5045:
  2932                           
  2933                           ;usart.c: 68:      TRISC6= 1;
  2934  0830  1683               	bsf	3,5	;RP0=1, select bank1
  2935  0831  1303               	bcf	3,6	;RP1=0, select bank1
  2936  0832  1707               	bsf	7,6	;volatile
  2937                           
  2938                           ;usart.c: 69:      TRISC7= 1;
  2939  0833  1787               	bsf	7,7	;volatile
  2940                           
  2941                           ;usart.c: 71:      CREN=0;
  2942  0834  1283               	bcf	3,5	;RP0=0, select bank0
  2943  0835  1218               	bcf	24,4	;volatile
  2944                           
  2945                           ;usart.c: 72:      CREN=1;
  2946  0836  1618               	bsf	24,4	;volatile
  2947                           
  2948                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  2949  0837  01A5               	clrf	USART_init@i
  2950  0838                     l5059:
  2951  0838  081A               	movf	26,w	;volatile
  2952  0839  3001               	movlw	1
  2953  083A  00A4               	movwf	??_USART_init
  2954  083B  0824               	movf	??_USART_init,w
  2955  083C  07A5               	addwf	USART_init@i,f
  2956  083D  300F               	movlw	15
  2957  083E  0225               	subwf	USART_init@i,w
  2958  083F  1803               	btfsc	3,0
  2959  0840  0008               	return
  2960  0841  2838               	goto	l5059
  2961  0842                     __end_of_USART_init:
  2962                           
  2963                           	psect	text2
  2964  0037                     __ptext2:	
  2965 ;; *************** function _MediaPlacaVaccum *****************
  2966 ;; Defined at:
  2967 ;;		line 740 in file "SlaveLiofilizadorVer1.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  canal           1    wreg     unsigned char 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  canal           1    4[BANK1 ] unsigned char 
  2972 ;;  Temp            4    7[BANK1 ] float 
  2973 ;;  Valor           4    0        float 
  2974 ;;  i               2    5[BANK1 ] unsigned int 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 300/100
  2981 ;;		On exit  : 200/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2984 ;;      Params:         0       0       0       0       0
  2985 ;;      Locals:         0       0      11       0       0
  2986 ;;      Temps:          0       1       0       0       0
  2987 ;;      Totals:         0       1      11       0       0
  2988 ;;Total ram usage:       12 bytes
  2989 ;; Hardware stack levels used: 1
  2990 ;; Hardware stack levels required when called: 3
  2991 ;; This function calls:
  2992 ;;		_ADC_Media_10bits
  2993 ;;		_Package_Usart_is_for_me
  2994 ;;		___fladd
  2995 ;;		___fldiv
  2996 ;;		___flge
  2997 ;;		___flmul
  2998 ;;		___flsub
  2999 ;;		___xxtofl
  3000 ;;		_my_delay_ms
  3001 ;; This function is called by:
  3002 ;;		_main
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           
  3007                           ;psect for function _MediaPlacaVaccum
  3008  0037                     _MediaPlacaVaccum:
  3009                           
  3010                           ;incstack = 0
  3011                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3012                           ;MediaPlacaVaccum@canal stored from wreg
  3013  0037  00A4               	movwf	MediaPlacaVaccum@canal^(0+128)
  3014                           
  3015                           ;SlaveLiofilizadorVer1.c: 741:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 742:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 746:      if(canal==0)
  3016  0038  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3017  0039  1D03               	btfss	3,2
  3018  003A  2AEA               	goto	l439
  3019                           
  3020                           ;SlaveLiofilizadorVer1.c: 747:        {;SlaveLiofilizadorVer1.c: 748:        ADCON1bits.
      +                          VCFG0=1;
  3021  003B  161F               	bsf	31,4	;volatile
  3022                           
  3023                           ;SlaveLiofilizadorVer1.c: 749:        ADCON1bits.VCFG1=1;
  3024  003C  169F               	bsf	31,5	;volatile
  3025                           
  3026                           ;SlaveLiofilizadorVer1.c: 750:        ADCON0bits.CHS=canal;
  3027  003D  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3028  003E  1283               	bcf	3,5	;RP0=0, select bank0
  3029  003F  00E5               	movwf	??_MediaPlacaVaccum
  3030  0040  0DE5               	rlf	??_MediaPlacaVaccum,f
  3031  0041  0DE5               	rlf	??_MediaPlacaVaccum,f
  3032  0042  081F               	movf	31,w	;volatile
  3033  0043  0665               	xorwf	??_MediaPlacaVaccum,w
  3034  0044  39C3               	andlw	-61
  3035  0045  0665               	xorwf	??_MediaPlacaVaccum,w
  3036  0046  009F               	movwf	31	;volatile
  3037                           
  3038                           ;SlaveLiofilizadorVer1.c: 751:        my_delay_ms(1);
  3039  0047  3000               	movlw	0
  3040  0048  00A3               	movwf	my_delay_ms@time+3
  3041  0049  3000               	movlw	0
  3042  004A  00A2               	movwf	my_delay_ms@time+2
  3043  004B  3000               	movlw	0
  3044  004C  00A1               	movwf	my_delay_ms@time+1
  3045  004D  3001               	movlw	1
  3046  004E  00A0               	movwf	my_delay_ms@time
  3047  004F  160A  158A  2411  120A  118A  	fcall	_my_delay_ms
  3048                           
  3049                           ;SlaveLiofilizadorVer1.c: 752:        Temp=0;
  3050  0054  3000               	movlw	0
  3051  0055  1683               	bsf	3,5	;RP0=1, select bank1
  3052  0056  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3053  0057  3000               	movlw	0
  3054  0058  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3055  0059  3000               	movlw	0
  3056  005A  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3057  005B  3000               	movlw	0
  3058  005C  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3059                           
  3060                           ;SlaveLiofilizadorVer1.c: 754:        for(i=1;i<15;i++)
  3061  005D  3001               	movlw	1
  3062  005E  00A5               	movwf	MediaPlacaVaccum@i^(0+128)
  3063  005F  3000               	movlw	0
  3064  0060  00A6               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3065  0061                     l5081:
  3066                           
  3067                           ;SlaveLiofilizadorVer1.c: 755:            {;SlaveLiofilizadorVer1.c: 756:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3068  0061  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3069  0062  160A  158A  25D1  120A  118A  	fcall	_ADC_Media_10bits
  3070  0067  0831               	movf	?_ADC_Media_10bits+3,w
  3071  0068  00BA               	movwf	___fladd@b+3
  3072  0069  0830               	movf	?_ADC_Media_10bits+2,w
  3073  006A  00B9               	movwf	___fladd@b+2
  3074  006B  082F               	movf	?_ADC_Media_10bits+1,w
  3075  006C  00B8               	movwf	___fladd@b+1
  3076  006D  082E               	movf	?_ADC_Media_10bits,w
  3077  006E  00B7               	movwf	___fladd@b
  3078  006F  1683               	bsf	3,5	;RP0=1, select bank1
  3079  0070  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3080  0071  1283               	bcf	3,5	;RP0=0, select bank0
  3081  0072  00BE               	movwf	___fladd@a+3
  3082  0073  1683               	bsf	3,5	;RP0=1, select bank1
  3083  0074  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3084  0075  1283               	bcf	3,5	;RP0=0, select bank0
  3085  0076  00BD               	movwf	___fladd@a+2
  3086  0077  1683               	bsf	3,5	;RP0=1, select bank1
  3087  0078  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3088  0079  1283               	bcf	3,5	;RP0=0, select bank0
  3089  007A  00BC               	movwf	___fladd@a+1
  3090  007B  1683               	bsf	3,5	;RP0=1, select bank1
  3091  007C  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3092  007D  1283               	bcf	3,5	;RP0=0, select bank0
  3093  007E  00BB               	movwf	___fladd@a
  3094  007F  120A  158A  22DE  120A  118A  	fcall	___fladd
  3095  0084  083A               	movf	?___fladd+3,w
  3096  0085  1683               	bsf	3,5	;RP0=1, select bank1
  3097  0086  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3098  0087  1283               	bcf	3,5	;RP0=0, select bank0
  3099  0088  0839               	movf	?___fladd+2,w
  3100  0089  1683               	bsf	3,5	;RP0=1, select bank1
  3101  008A  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3102  008B  1283               	bcf	3,5	;RP0=0, select bank0
  3103  008C  0838               	movf	?___fladd+1,w
  3104  008D  1683               	bsf	3,5	;RP0=1, select bank1
  3105  008E  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3106  008F  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0090  0837               	movf	?___fladd,w
  3108  0091  1683               	bsf	3,5	;RP0=1, select bank1
  3109  0092  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3110                           
  3111                           ;SlaveLiofilizadorVer1.c: 757:            if(Package_Usart_is_for_me()==1) break;
  3112  0093  160A  158A  214B  120A  118A  	fcall	_Package_Usart_is_for_me
  3113  0098  3A01               	xorlw	1
  3114  0099  1903               	btfsc	3,2
  3115  009A  28A9               	goto	l5089
  3116                           
  3117                           ;SlaveLiofilizadorVer1.c: 758:            }
  3118  009B  3001               	movlw	1
  3119  009C  1683               	bsf	3,5	;RP0=1, select bank1
  3120  009D  07A5               	addwf	MediaPlacaVaccum@i^(0+128),f
  3121  009E  1803               	skipnc
  3122  009F  0AA6               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3123  00A0  3000               	movlw	0
  3124  00A1  07A6               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3125  00A2  3000               	movlw	0
  3126  00A3  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3127  00A4  300F               	movlw	15
  3128  00A5  1903               	skipnz
  3129  00A6  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3130  00A7  1C03               	skipc
  3131  00A8  2861               	goto	l5081
  3132  00A9                     l5089:
  3133                           
  3134                           ;SlaveLiofilizadorVer1.c: 759:        if(i<10)
  3135  00A9  3000               	movlw	0
  3136  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  3137  00AB  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3138  00AC  300A               	movlw	10
  3139  00AD  1903               	skipnz
  3140  00AE  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3141  00AF  1C03               	btfss	3,0
  3142  00B0  0008               	return
  3143                           
  3144                           ;SlaveLiofilizadorVer1.c: 765:        if(i==15)
  3145  00B1  300F               	movlw	15
  3146  00B2  0625               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3147  00B3  0426               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3148  00B4  1D03               	btfss	3,2
  3149  00B5  28C0               	goto	l5097
  3150                           
  3151                           ;SlaveLiofilizadorVer1.c: 766:          Temp/=(i-1);
  3152  00B6  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3153  00B7  3EFF               	addlw	255
  3154  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  3155  00B9  00A0               	movwf	___xxtofl@val
  3156  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  3157  00BB  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3158  00BC  1803               	skipnc
  3159  00BD  3E01               	addlw	1
  3160  00BE  3EFF               	addlw	255
  3161  00BF  28C5               	goto	L2
  3162  00C0                     l5097:
  3163                           
  3164                           ;SlaveLiofilizadorVer1.c: 768:          Temp/=(i);
  3165  00C0  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3166  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  3167  00C2  00A0               	movwf	___xxtofl@val
  3168  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  3169  00C4  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3170  00C5                     L2:
  3171  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  3172  00C6  00A1               	movwf	___xxtofl@val+1
  3173  00C7  01A2               	clrf	___xxtofl@val+2
  3174  00C8  01A3               	clrf	___xxtofl@val+3
  3175  00C9  3000               	movlw	0
  3176  00CA  120A  118A  274B  120A  118A  	fcall	___xxtofl
  3177  00CF  0823               	movf	?___xxtofl+3,w
  3178  00D0  00B1               	movwf	___fldiv@a+3
  3179  00D1  0822               	movf	?___xxtofl+2,w
  3180  00D2  00B0               	movwf	___fldiv@a+2
  3181  00D3  0821               	movf	?___xxtofl+1,w
  3182  00D4  00AF               	movwf	___fldiv@a+1
  3183  00D5  0820               	movf	?___xxtofl,w
  3184  00D6  00AE               	movwf	___fldiv@a
  3185  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  3186  00D8  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3187  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  3188  00DA  00B5               	movwf	___fldiv@b+3
  3189  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  3190  00DC  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3191  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  3192  00DE  00B4               	movwf	___fldiv@b+2
  3193  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  3194  00E0  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3195  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  3196  00E2  00B3               	movwf	___fldiv@b+1
  3197  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  3198  00E4  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3199  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  3200  00E6  00B2               	movwf	___fldiv@b
  3201  00E7  120A  158A  213D  120A  118A  	fcall	___fldiv
  3202  00EC  0831               	movf	?___fldiv+3,w
  3203  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  3204  00EE  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3205  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  3206  00F0  0830               	movf	?___fldiv+2,w
  3207  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  3208  00F2  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3209  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  3210  00F4  082F               	movf	?___fldiv+1,w
  3211  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  3212  00F6  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3213  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  3214  00F8  082E               	movf	?___fldiv,w
  3215  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  3216  00FA  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3217                           
  3218                           ;SlaveLiofilizadorVer1.c: 770:        if(Temp<615)
  3219  00FB  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3220  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  3221  00FD  00A3               	movwf	___flge@ff1+3
  3222  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  3223  00FF  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3224  0100  1283               	bcf	3,5	;RP0=0, select bank0
  3225  0101  00A2               	movwf	___flge@ff1+2
  3226  0102  1683               	bsf	3,5	;RP0=1, select bank1
  3227  0103  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3228  0104  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0105  00A1               	movwf	___flge@ff1+1
  3230  0106  1683               	bsf	3,5	;RP0=1, select bank1
  3231  0107  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3232  0108  1283               	bcf	3,5	;RP0=0, select bank0
  3233  0109  00A0               	movwf	___flge@ff1
  3234  010A  3044               	movlw	68
  3235  010B  00A7               	movwf	___flge@ff2+3
  3236  010C  3019               	movlw	25
  3237  010D  00A6               	movwf	___flge@ff2+2
  3238  010E  30C0               	movlw	192
  3239  010F  00A5               	movwf	___flge@ff2+1
  3240  0110  3000               	movlw	0
  3241  0111  00A4               	movwf	___flge@ff2
  3242  0112  160A  158A  276D  120A  118A  	fcall	___flge
  3243  0117  1803               	btfsc	3,0
  3244  0118  29C9               	goto	l5103
  3245                           
  3246                           ;SlaveLiofilizadorVer1.c: 771:           {;SlaveLiofilizadorVer1.c: 772:           Vaccu
      +                          m0 =1023.0-(Temp-454.0);
  3247  0119  30C3               	movlw	195
  3248  011A  00BA               	movwf	___fladd@b+3
  3249  011B  30E3               	movlw	227
  3250  011C  00B9               	movwf	___fladd@b+2
  3251  011D  3000               	movlw	0
  3252  011E  00B8               	movwf	___fladd@b+1
  3253  011F  3000               	movlw	0
  3254  0120  00B7               	movwf	___fladd@b
  3255  0121  1683               	bsf	3,5	;RP0=1, select bank1
  3256  0122  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3257  0123  1283               	bcf	3,5	;RP0=0, select bank0
  3258  0124  00BE               	movwf	___fladd@a+3
  3259  0125  1683               	bsf	3,5	;RP0=1, select bank1
  3260  0126  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3261  0127  1283               	bcf	3,5	;RP0=0, select bank0
  3262  0128  00BD               	movwf	___fladd@a+2
  3263  0129  1683               	bsf	3,5	;RP0=1, select bank1
  3264  012A  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3265  012B  1283               	bcf	3,5	;RP0=0, select bank0
  3266  012C  00BC               	movwf	___fladd@a+1
  3267  012D  1683               	bsf	3,5	;RP0=1, select bank1
  3268  012E  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3269  012F  1283               	bcf	3,5	;RP0=0, select bank0
  3270  0130  00BB               	movwf	___fladd@a
  3271  0131  120A  158A  22DE  120A  118A  	fcall	___fladd
  3272  0136  083A               	movf	?___fladd+3,w
  3273  0137  1683               	bsf	3,5	;RP0=1, select bank1
  3274  0138  00A3               	movwf	(_MediaPlacaVaccum$2372+3)^(0+128)
  3275  0139  1283               	bcf	3,5	;RP0=0, select bank0
  3276  013A  0839               	movf	?___fladd+2,w
  3277  013B  1683               	bsf	3,5	;RP0=1, select bank1
  3278  013C  00A2               	movwf	(_MediaPlacaVaccum$2372+2)^(0+128)
  3279  013D  1283               	bcf	3,5	;RP0=0, select bank0
  3280  013E  0838               	movf	?___fladd+1,w
  3281  013F  1683               	bsf	3,5	;RP0=1, select bank1
  3282  0140  00A1               	movwf	(_MediaPlacaVaccum$2372+1)^(0+128)
  3283  0141  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0142  0837               	movf	?___fladd,w
  3285  0143  1683               	bsf	3,5	;RP0=1, select bank1
  3286  0144  00A0               	movwf	_MediaPlacaVaccum$2372^(0+128)
  3287                           
  3288                           ;SlaveLiofilizadorVer1.c: 771:           {;SlaveLiofilizadorVer1.c: 772:           Vaccu
      +                          m0 =1023.0-(Temp-454.0);
  3289  0145  0823               	movf	(_MediaPlacaVaccum$2372+3)^(0+128),w
  3290  0146  1283               	bcf	3,5	;RP0=0, select bank0
  3291  0147  00CE               	movwf	___flsub@a+3
  3292  0148  1683               	bsf	3,5	;RP0=1, select bank1
  3293  0149  0822               	movf	(_MediaPlacaVaccum$2372+2)^(0+128),w
  3294  014A  1283               	bcf	3,5	;RP0=0, select bank0
  3295  014B  00CD               	movwf	___flsub@a+2
  3296  014C  1683               	bsf	3,5	;RP0=1, select bank1
  3297  014D  0821               	movf	(_MediaPlacaVaccum$2372+1)^(0+128),w
  3298  014E  1283               	bcf	3,5	;RP0=0, select bank0
  3299  014F  00CC               	movwf	___flsub@a+1
  3300  0150  1683               	bsf	3,5	;RP0=1, select bank1
  3301  0151  0820               	movf	_MediaPlacaVaccum$2372^(0+128),w
  3302  0152  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0153  00CB               	movwf	___flsub@a
  3304  0154  3044               	movlw	68
  3305  0155  00D2               	movwf	___flsub@b+3
  3306  0156  307F               	movlw	127
  3307  0157  00D1               	movwf	___flsub@b+2
  3308  0158  30C0               	movlw	192
  3309  0159  00D0               	movwf	___flsub@b+1
  3310  015A  3000               	movlw	0
  3311  015B  00CF               	movwf	___flsub@b
  3312  015C  160A  158A  219F  120A  118A  	fcall	___flsub
  3313  0161  084E               	movf	?___flsub+3,w
  3314  0162  1683               	bsf	3,5	;RP0=1, select bank1
  3315  0163  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3316  0164  1283               	bcf	3,5	;RP0=0, select bank0
  3317  0165  084D               	movf	?___flsub+2,w
  3318  0166  1683               	bsf	3,5	;RP0=1, select bank1
  3319  0167  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3320  0168  1283               	bcf	3,5	;RP0=0, select bank0
  3321  0169  084C               	movf	?___flsub+1,w
  3322  016A  1683               	bsf	3,5	;RP0=1, select bank1
  3323  016B  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3324  016C  1283               	bcf	3,5	;RP0=0, select bank0
  3325  016D  084B               	movf	?___flsub,w
  3326  016E  1683               	bsf	3,5	;RP0=1, select bank1
  3327  016F  00CD               	movwf	_Vaccum0^(0+128)
  3328                           
  3329                           ;SlaveLiofilizadorVer1.c: 773:           Vaccum0*=1.9550342131;
  3330  0170  303F               	movlw	63
  3331  0171  1283               	bcf	3,5	;RP0=0, select bank0
  3332  0172  00CE               	movwf	___flmul@b+3
  3333  0173  30FA               	movlw	250
  3334  0174  00CD               	movwf	___flmul@b+2
  3335  0175  303E               	movlw	62
  3336  0176  00CC               	movwf	___flmul@b+1
  3337  0177  3090               	movlw	144
  3338  0178  00CB               	movwf	___flmul@b
  3339  0179  1683               	bsf	3,5	;RP0=1, select bank1
  3340  017A  0850               	movf	(_Vaccum0+3)^(0+128),w
  3341  017B  1283               	bcf	3,5	;RP0=0, select bank0
  3342  017C  00D2               	movwf	___flmul@a+3
  3343  017D  1683               	bsf	3,5	;RP0=1, select bank1
  3344  017E  084F               	movf	(_Vaccum0+2)^(0+128),w
  3345  017F  1283               	bcf	3,5	;RP0=0, select bank0
  3346  0180  00D1               	movwf	___flmul@a+2
  3347  0181  1683               	bsf	3,5	;RP0=1, select bank1
  3348  0182  084E               	movf	(_Vaccum0+1)^(0+128),w
  3349  0183  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0184  00D0               	movwf	___flmul@a+1
  3351  0185  1683               	bsf	3,5	;RP0=1, select bank1
  3352  0186  084D               	movf	_Vaccum0^(0+128),w
  3353  0187  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0188  00CF               	movwf	___flmul@a
  3355  0189  120A  158A  250B  120A  118A  	fcall	___flmul
  3356  018E  084E               	movf	?___flmul+3,w
  3357  018F  1683               	bsf	3,5	;RP0=1, select bank1
  3358  0190  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3359  0191  1283               	bcf	3,5	;RP0=0, select bank0
  3360  0192  084D               	movf	?___flmul+2,w
  3361  0193  1683               	bsf	3,5	;RP0=1, select bank1
  3362  0194  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3363  0195  1283               	bcf	3,5	;RP0=0, select bank0
  3364  0196  084C               	movf	?___flmul+1,w
  3365  0197  1683               	bsf	3,5	;RP0=1, select bank1
  3366  0198  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3367  0199  1283               	bcf	3,5	;RP0=0, select bank0
  3368  019A  084B               	movf	?___flmul,w
  3369  019B  1683               	bsf	3,5	;RP0=1, select bank1
  3370  019C  00CD               	movwf	_Vaccum0^(0+128)
  3371                           
  3372                           ;SlaveLiofilizadorVer1.c: 774:           Vaccum0-=((Temp-454.0)*5.2);
  3373  019D  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3374  019E  1283               	bcf	3,5	;RP0=0, select bank0
  3375  019F  00BE               	movwf	___fladd@a+3
  3376  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  3377  01A1  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3378  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  3379  01A3  00BD               	movwf	___fladd@a+2
  3380  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  3381  01A5  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3382  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  3383  01A7  00BC               	movwf	___fladd@a+1
  3384  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  3385  01A9  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3386  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  3387  01AB  00BB               	movwf	___fladd@a
  3388  01AC  30C3               	movlw	195
  3389  01AD  00BA               	movwf	___fladd@b+3
  3390  01AE  30E3               	movlw	227
  3391  01AF  00B9               	movwf	___fladd@b+2
  3392  01B0  3000               	movlw	0
  3393  01B1  00B8               	movwf	___fladd@b+1
  3394  01B2  3000               	movlw	0
  3395  01B3  00B7               	movwf	___fladd@b
  3396  01B4  120A  158A  22DE  120A  118A  	fcall	___fladd
  3397  01B9  083A               	movf	?___fladd+3,w
  3398  01BA  00D2               	movwf	___flmul@a+3
  3399  01BB  0839               	movf	?___fladd+2,w
  3400  01BC  00D1               	movwf	___flmul@a+2
  3401  01BD  0838               	movf	?___fladd+1,w
  3402  01BE  00D0               	movwf	___flmul@a+1
  3403  01BF  0837               	movf	?___fladd,w
  3404  01C0  00CF               	movwf	___flmul@a
  3405  01C1  3040               	movlw	64
  3406  01C2  00CE               	movwf	___flmul@b+3
  3407  01C3  30A6               	movlw	166
  3408  01C4  00CD               	movwf	___flmul@b+2
  3409  01C5  3066               	movlw	102
  3410  01C6  00CC               	movwf	___flmul@b+1
  3411  01C7  3066               	movlw	102
  3412  01C8  2A78               	goto	L3
  3413  01C9                     l5103:	
  3414                           ;SlaveLiofilizadorVer1.c: 775:           }
  3415                           
  3416                           ;SlaveLiofilizadorVer1.c: 774:           Vaccum0-=((Temp-454.0)*5.2);
  3417                           
  3418                           
  3419                           ;SlaveLiofilizadorVer1.c: 777:           {;SlaveLiofilizadorVer1.c: 778:           Vaccu
      +                          m0 =1023.0-(Temp-616.0);
  3420  01C9  30C4               	movlw	196
  3421  01CA  00BA               	movwf	___fladd@b+3
  3422  01CB  301A               	movlw	26
  3423  01CC  00B9               	movwf	___fladd@b+2
  3424  01CD  3000               	movlw	0
  3425  01CE  00B8               	movwf	___fladd@b+1
  3426  01CF  3000               	movlw	0
  3427  01D0  00B7               	movwf	___fladd@b
  3428  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  3429  01D2  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3430  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  3431  01D4  00BE               	movwf	___fladd@a+3
  3432  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  3433  01D6  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3434  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  3435  01D8  00BD               	movwf	___fladd@a+2
  3436  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  3437  01DA  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3438  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  3439  01DC  00BC               	movwf	___fladd@a+1
  3440  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  3441  01DE  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3442  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  3443  01E0  00BB               	movwf	___fladd@a
  3444  01E1  120A  158A  22DE  120A  118A  	fcall	___fladd
  3445  01E6  083A               	movf	?___fladd+3,w
  3446  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  3447  01E8  00A3               	movwf	(_MediaPlacaVaccum$2372+3)^(0+128)
  3448  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  3449  01EA  0839               	movf	?___fladd+2,w
  3450  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  3451  01EC  00A2               	movwf	(_MediaPlacaVaccum$2372+2)^(0+128)
  3452  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  3453  01EE  0838               	movf	?___fladd+1,w
  3454  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  3455  01F0  00A1               	movwf	(_MediaPlacaVaccum$2372+1)^(0+128)
  3456  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  3457  01F2  0837               	movf	?___fladd,w
  3458  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  3459  01F4  00A0               	movwf	_MediaPlacaVaccum$2372^(0+128)
  3460                           
  3461                           ;SlaveLiofilizadorVer1.c: 777:           {;SlaveLiofilizadorVer1.c: 778:           Vaccu
      +                          m0 =1023.0-(Temp-616.0);
  3462  01F5  0823               	movf	(_MediaPlacaVaccum$2372+3)^(0+128),w
  3463  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  3464  01F7  00CE               	movwf	___flsub@a+3
  3465  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  3466  01F9  0822               	movf	(_MediaPlacaVaccum$2372+2)^(0+128),w
  3467  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  3468  01FB  00CD               	movwf	___flsub@a+2
  3469  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  3470  01FD  0821               	movf	(_MediaPlacaVaccum$2372+1)^(0+128),w
  3471  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  3472  01FF  00CC               	movwf	___flsub@a+1
  3473  0200  1683               	bsf	3,5	;RP0=1, select bank1
  3474  0201  0820               	movf	_MediaPlacaVaccum$2372^(0+128),w
  3475  0202  1283               	bcf	3,5	;RP0=0, select bank0
  3476  0203  00CB               	movwf	___flsub@a
  3477  0204  3044               	movlw	68
  3478  0205  00D2               	movwf	___flsub@b+3
  3479  0206  307F               	movlw	127
  3480  0207  00D1               	movwf	___flsub@b+2
  3481  0208  30C0               	movlw	192
  3482  0209  00D0               	movwf	___flsub@b+1
  3483  020A  3000               	movlw	0
  3484  020B  00CF               	movwf	___flsub@b
  3485  020C  160A  158A  219F  120A  118A  	fcall	___flsub
  3486  0211  084E               	movf	?___flsub+3,w
  3487  0212  1683               	bsf	3,5	;RP0=1, select bank1
  3488  0213  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3489  0214  1283               	bcf	3,5	;RP0=0, select bank0
  3490  0215  084D               	movf	?___flsub+2,w
  3491  0216  1683               	bsf	3,5	;RP0=1, select bank1
  3492  0217  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3493  0218  1283               	bcf	3,5	;RP0=0, select bank0
  3494  0219  084C               	movf	?___flsub+1,w
  3495  021A  1683               	bsf	3,5	;RP0=1, select bank1
  3496  021B  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3497  021C  1283               	bcf	3,5	;RP0=0, select bank0
  3498  021D  084B               	movf	?___flsub,w
  3499  021E  1683               	bsf	3,5	;RP0=1, select bank1
  3500  021F  00CD               	movwf	_Vaccum0^(0+128)
  3501                           
  3502                           ;SlaveLiofilizadorVer1.c: 779:           Vaccum0*=0.828934506;
  3503  0220  303F               	movlw	63
  3504  0221  1283               	bcf	3,5	;RP0=0, select bank0
  3505  0222  00CE               	movwf	___flmul@b+3
  3506  0223  3054               	movlw	84
  3507  0224  00CD               	movwf	___flmul@b+2
  3508  0225  3035               	movlw	53
  3509  0226  00CC               	movwf	___flmul@b+1
  3510  0227  300D               	movlw	13
  3511  0228  00CB               	movwf	___flmul@b
  3512  0229  1683               	bsf	3,5	;RP0=1, select bank1
  3513  022A  0850               	movf	(_Vaccum0+3)^(0+128),w
  3514  022B  1283               	bcf	3,5	;RP0=0, select bank0
  3515  022C  00D2               	movwf	___flmul@a+3
  3516  022D  1683               	bsf	3,5	;RP0=1, select bank1
  3517  022E  084F               	movf	(_Vaccum0+2)^(0+128),w
  3518  022F  1283               	bcf	3,5	;RP0=0, select bank0
  3519  0230  00D1               	movwf	___flmul@a+2
  3520  0231  1683               	bsf	3,5	;RP0=1, select bank1
  3521  0232  084E               	movf	(_Vaccum0+1)^(0+128),w
  3522  0233  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0234  00D0               	movwf	___flmul@a+1
  3524  0235  1683               	bsf	3,5	;RP0=1, select bank1
  3525  0236  084D               	movf	_Vaccum0^(0+128),w
  3526  0237  1283               	bcf	3,5	;RP0=0, select bank0
  3527  0238  00CF               	movwf	___flmul@a
  3528  0239  120A  158A  250B  120A  118A  	fcall	___flmul
  3529  023E  084E               	movf	?___flmul+3,w
  3530  023F  1683               	bsf	3,5	;RP0=1, select bank1
  3531  0240  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3532  0241  1283               	bcf	3,5	;RP0=0, select bank0
  3533  0242  084D               	movf	?___flmul+2,w
  3534  0243  1683               	bsf	3,5	;RP0=1, select bank1
  3535  0244  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3536  0245  1283               	bcf	3,5	;RP0=0, select bank0
  3537  0246  084C               	movf	?___flmul+1,w
  3538  0247  1683               	bsf	3,5	;RP0=1, select bank1
  3539  0248  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3540  0249  1283               	bcf	3,5	;RP0=0, select bank0
  3541  024A  084B               	movf	?___flmul,w
  3542  024B  1683               	bsf	3,5	;RP0=1, select bank1
  3543  024C  00CD               	movwf	_Vaccum0^(0+128)
  3544                           
  3545                           ;SlaveLiofilizadorVer1.c: 780:           Vaccum0-=((Temp-616.0)*2.34);
  3546  024D  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3547  024E  1283               	bcf	3,5	;RP0=0, select bank0
  3548  024F  00BE               	movwf	___fladd@a+3
  3549  0250  1683               	bsf	3,5	;RP0=1, select bank1
  3550  0251  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3551  0252  1283               	bcf	3,5	;RP0=0, select bank0
  3552  0253  00BD               	movwf	___fladd@a+2
  3553  0254  1683               	bsf	3,5	;RP0=1, select bank1
  3554  0255  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3555  0256  1283               	bcf	3,5	;RP0=0, select bank0
  3556  0257  00BC               	movwf	___fladd@a+1
  3557  0258  1683               	bsf	3,5	;RP0=1, select bank1
  3558  0259  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3559  025A  1283               	bcf	3,5	;RP0=0, select bank0
  3560  025B  00BB               	movwf	___fladd@a
  3561  025C  30C4               	movlw	196
  3562  025D  00BA               	movwf	___fladd@b+3
  3563  025E  301A               	movlw	26
  3564  025F  00B9               	movwf	___fladd@b+2
  3565  0260  3000               	movlw	0
  3566  0261  00B8               	movwf	___fladd@b+1
  3567  0262  3000               	movlw	0
  3568  0263  00B7               	movwf	___fladd@b
  3569  0264  120A  158A  22DE  120A  118A  	fcall	___fladd
  3570  0269  083A               	movf	?___fladd+3,w
  3571  026A  00D2               	movwf	___flmul@a+3
  3572  026B  0839               	movf	?___fladd+2,w
  3573  026C  00D1               	movwf	___flmul@a+2
  3574  026D  0838               	movf	?___fladd+1,w
  3575  026E  00D0               	movwf	___flmul@a+1
  3576  026F  0837               	movf	?___fladd,w
  3577  0270  00CF               	movwf	___flmul@a
  3578  0271  3040               	movlw	64
  3579  0272  00CE               	movwf	___flmul@b+3
  3580  0273  3015               	movlw	21
  3581  0274  00CD               	movwf	___flmul@b+2
  3582  0275  30C2               	movlw	194
  3583  0276  00CC               	movwf	___flmul@b+1
  3584  0277  308F               	movlw	143
  3585  0278                     L3:
  3586  0278  00CB               	movwf	___flmul@b
  3587  0279  120A  158A  250B  120A  118A  	fcall	___flmul
  3588  027E  084E               	movf	?___flmul+3,w
  3589  027F  1683               	bsf	3,5	;RP0=1, select bank1
  3590  0280  00A3               	movwf	(_MediaPlacaVaccum$2372+3)^(0+128)
  3591  0281  1283               	bcf	3,5	;RP0=0, select bank0
  3592  0282  084D               	movf	?___flmul+2,w
  3593  0283  1683               	bsf	3,5	;RP0=1, select bank1
  3594  0284  00A2               	movwf	(_MediaPlacaVaccum$2372+2)^(0+128)
  3595  0285  1283               	bcf	3,5	;RP0=0, select bank0
  3596  0286  084C               	movf	?___flmul+1,w
  3597  0287  1683               	bsf	3,5	;RP0=1, select bank1
  3598  0288  00A1               	movwf	(_MediaPlacaVaccum$2372+1)^(0+128)
  3599  0289  1283               	bcf	3,5	;RP0=0, select bank0
  3600  028A  084B               	movf	?___flmul,w
  3601  028B  1683               	bsf	3,5	;RP0=1, select bank1
  3602  028C  00A0               	movwf	_MediaPlacaVaccum$2372^(0+128)
  3603                           
  3604                           ;SlaveLiofilizadorVer1.c: 780:           Vaccum0-=((Temp-616.0)*2.34);
  3605  028D  0823               	movf	(_MediaPlacaVaccum$2372+3)^(0+128),w
  3606  028E  1283               	bcf	3,5	;RP0=0, select bank0
  3607  028F  00CE               	movwf	___flsub@a+3
  3608  0290  1683               	bsf	3,5	;RP0=1, select bank1
  3609  0291  0822               	movf	(_MediaPlacaVaccum$2372+2)^(0+128),w
  3610  0292  1283               	bcf	3,5	;RP0=0, select bank0
  3611  0293  00CD               	movwf	___flsub@a+2
  3612  0294  1683               	bsf	3,5	;RP0=1, select bank1
  3613  0295  0821               	movf	(_MediaPlacaVaccum$2372+1)^(0+128),w
  3614  0296  1283               	bcf	3,5	;RP0=0, select bank0
  3615  0297  00CC               	movwf	___flsub@a+1
  3616  0298  1683               	bsf	3,5	;RP0=1, select bank1
  3617  0299  0820               	movf	_MediaPlacaVaccum$2372^(0+128),w
  3618  029A  1283               	bcf	3,5	;RP0=0, select bank0
  3619  029B  00CB               	movwf	___flsub@a
  3620  029C  1683               	bsf	3,5	;RP0=1, select bank1
  3621  029D  0850               	movf	(_Vaccum0+3)^(0+128),w
  3622  029E  1283               	bcf	3,5	;RP0=0, select bank0
  3623  029F  00D2               	movwf	___flsub@b+3
  3624  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  3625  02A1  084F               	movf	(_Vaccum0+2)^(0+128),w
  3626  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  3627  02A3  00D1               	movwf	___flsub@b+2
  3628  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  3629  02A5  084E               	movf	(_Vaccum0+1)^(0+128),w
  3630  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  3631  02A7  00D0               	movwf	___flsub@b+1
  3632  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  3633  02A9  084D               	movf	_Vaccum0^(0+128),w
  3634  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  3635  02AB  00CF               	movwf	___flsub@b
  3636  02AC  160A  158A  219F  120A  118A  	fcall	___flsub
  3637  02B1  084E               	movf	?___flsub+3,w
  3638  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  3639  02B3  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3640  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  3641  02B5  084D               	movf	?___flsub+2,w
  3642  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  3643  02B7  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3644  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  3645  02B9  084C               	movf	?___flsub+1,w
  3646  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  3647  02BB  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3648  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  3649  02BD  084B               	movf	?___flsub,w
  3650  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  3651  02BF  00CD               	movwf	_Vaccum0^(0+128)
  3652                           
  3653                           ;SlaveLiofilizadorVer1.c: 784:        if(Vaccum0>2000)Vaccum0=2000;
  3654  02C0  3044               	movlw	68
  3655  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  3656  02C2  00A3               	movwf	___flge@ff1+3
  3657  02C3  30FA               	movlw	250
  3658  02C4  00A2               	movwf	___flge@ff1+2
  3659  02C5  3000               	movlw	0
  3660  02C6  00A1               	movwf	___flge@ff1+1
  3661  02C7  3000               	movlw	0
  3662  02C8  00A0               	movwf	___flge@ff1
  3663  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  3664  02CA  0850               	movf	(_Vaccum0+3)^(0+128),w
  3665  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  3666  02CC  00A7               	movwf	___flge@ff2+3
  3667  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  3668  02CE  084F               	movf	(_Vaccum0+2)^(0+128),w
  3669  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  3670  02D0  00A6               	movwf	___flge@ff2+2
  3671  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  3672  02D2  084E               	movf	(_Vaccum0+1)^(0+128),w
  3673  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  3674  02D4  00A5               	movwf	___flge@ff2+1
  3675  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  3676  02D6  084D               	movf	_Vaccum0^(0+128),w
  3677  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  3678  02D8  00A4               	movwf	___flge@ff2
  3679  02D9  160A  158A  276D  120A  118A  	fcall	___flge
  3680  02DE  1803               	btfsc	3,0
  3681  02DF  0008               	return
  3682  02E0  3044               	movlw	68
  3683  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  3684  02E2  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3685  02E3  30FA               	movlw	250
  3686  02E4  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3687  02E5  3000               	movlw	0
  3688  02E6  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3689  02E7  3000               	movlw	0
  3690  02E8  00CD               	movwf	_Vaccum0^(0+128)
  3691  02E9  0008               	return
  3692  02EA                     l439:	
  3693                           ;SlaveLiofilizadorVer1.c: 795:      else
  3694                           
  3695                           
  3696                           ;SlaveLiofilizadorVer1.c: 796:        {;SlaveLiofilizadorVer1.c: 797:        ADCON1bits.
      +                          VCFG0=0;
  3697  02EA  121F               	bcf	31,4	;volatile
  3698                           
  3699                           ;SlaveLiofilizadorVer1.c: 798:        ADCON1bits.VCFG1=0;
  3700  02EB  129F               	bcf	31,5	;volatile
  3701                           
  3702                           ;SlaveLiofilizadorVer1.c: 799:        ADCON0bits.CHS=canal;
  3703  02EC  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3704  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  3705  02EE  00E5               	movwf	??_MediaPlacaVaccum
  3706  02EF  0DE5               	rlf	??_MediaPlacaVaccum,f
  3707  02F0  0DE5               	rlf	??_MediaPlacaVaccum,f
  3708  02F1  081F               	movf	31,w	;volatile
  3709  02F2  0665               	xorwf	??_MediaPlacaVaccum,w
  3710  02F3  39C3               	andlw	-61
  3711  02F4  0665               	xorwf	??_MediaPlacaVaccum,w
  3712  02F5  009F               	movwf	31	;volatile
  3713                           
  3714                           ;SlaveLiofilizadorVer1.c: 800:        my_delay_ms(1);
  3715  02F6  3000               	movlw	0
  3716  02F7  00A3               	movwf	my_delay_ms@time+3
  3717  02F8  3000               	movlw	0
  3718  02F9  00A2               	movwf	my_delay_ms@time+2
  3719  02FA  3000               	movlw	0
  3720  02FB  00A1               	movwf	my_delay_ms@time+1
  3721  02FC  3001               	movlw	1
  3722  02FD  00A0               	movwf	my_delay_ms@time
  3723  02FE  160A  158A  2411  120A  118A  	fcall	_my_delay_ms
  3724                           
  3725                           ;SlaveLiofilizadorVer1.c: 801:        Temp=0;
  3726  0303  3000               	movlw	0
  3727  0304  1683               	bsf	3,5	;RP0=1, select bank1
  3728  0305  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3729  0306  3000               	movlw	0
  3730  0307  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3731  0308  3000               	movlw	0
  3732  0309  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3733  030A  3000               	movlw	0
  3734  030B  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3735                           
  3736                           ;SlaveLiofilizadorVer1.c: 803:        for(i=1;i<15;i++)
  3737  030C  3001               	movlw	1
  3738  030D  00A5               	movwf	MediaPlacaVaccum@i^(0+128)
  3739  030E  3000               	movlw	0
  3740  030F  00A6               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3741  0310                     l5121:
  3742                           
  3743                           ;SlaveLiofilizadorVer1.c: 804:            {;SlaveLiofilizadorVer1.c: 807:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3744  0310  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3745  0311  160A  158A  25D1  120A  118A  	fcall	_ADC_Media_10bits
  3746  0316  0831               	movf	?_ADC_Media_10bits+3,w
  3747  0317  00BA               	movwf	___fladd@b+3
  3748  0318  0830               	movf	?_ADC_Media_10bits+2,w
  3749  0319  00B9               	movwf	___fladd@b+2
  3750  031A  082F               	movf	?_ADC_Media_10bits+1,w
  3751  031B  00B8               	movwf	___fladd@b+1
  3752  031C  082E               	movf	?_ADC_Media_10bits,w
  3753  031D  00B7               	movwf	___fladd@b
  3754  031E  1683               	bsf	3,5	;RP0=1, select bank1
  3755  031F  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3756  0320  1283               	bcf	3,5	;RP0=0, select bank0
  3757  0321  00BE               	movwf	___fladd@a+3
  3758  0322  1683               	bsf	3,5	;RP0=1, select bank1
  3759  0323  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3760  0324  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0325  00BD               	movwf	___fladd@a+2
  3762  0326  1683               	bsf	3,5	;RP0=1, select bank1
  3763  0327  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3764  0328  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0329  00BC               	movwf	___fladd@a+1
  3766  032A  1683               	bsf	3,5	;RP0=1, select bank1
  3767  032B  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3768  032C  1283               	bcf	3,5	;RP0=0, select bank0
  3769  032D  00BB               	movwf	___fladd@a
  3770  032E  120A  158A  22DE  120A  118A  	fcall	___fladd
  3771  0333  083A               	movf	?___fladd+3,w
  3772  0334  1683               	bsf	3,5	;RP0=1, select bank1
  3773  0335  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3774  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3775  0337  0839               	movf	?___fladd+2,w
  3776  0338  1683               	bsf	3,5	;RP0=1, select bank1
  3777  0339  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3778  033A  1283               	bcf	3,5	;RP0=0, select bank0
  3779  033B  0838               	movf	?___fladd+1,w
  3780  033C  1683               	bsf	3,5	;RP0=1, select bank1
  3781  033D  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3782  033E  1283               	bcf	3,5	;RP0=0, select bank0
  3783  033F  0837               	movf	?___fladd,w
  3784  0340  1683               	bsf	3,5	;RP0=1, select bank1
  3785  0341  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3786                           
  3787                           ;SlaveLiofilizadorVer1.c: 808:            if(Package_Usart_is_for_me()==1) break;
  3788  0342  160A  158A  214B  120A  118A  	fcall	_Package_Usart_is_for_me
  3789  0347  3A01               	xorlw	1
  3790  0348  1903               	btfsc	3,2
  3791  0349  2B58               	goto	l5129
  3792                           
  3793                           ;SlaveLiofilizadorVer1.c: 809:            }
  3794  034A  3001               	movlw	1
  3795  034B  1683               	bsf	3,5	;RP0=1, select bank1
  3796  034C  07A5               	addwf	MediaPlacaVaccum@i^(0+128),f
  3797  034D  1803               	skipnc
  3798  034E  0AA6               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3799  034F  3000               	movlw	0
  3800  0350  07A6               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3801  0351  3000               	movlw	0
  3802  0352  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3803  0353  300F               	movlw	15
  3804  0354  1903               	skipnz
  3805  0355  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3806  0356  1C03               	skipc
  3807  0357  2B10               	goto	l5121
  3808  0358                     l5129:
  3809                           
  3810                           ;SlaveLiofilizadorVer1.c: 810:         if(i<10)
  3811  0358  3000               	movlw	0
  3812  0359  1683               	bsf	3,5	;RP0=1, select bank1
  3813  035A  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3814  035B  300A               	movlw	10
  3815  035C  1903               	skipnz
  3816  035D  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3817  035E  1C03               	btfss	3,0
  3818  035F  0008               	return
  3819                           
  3820                           ;SlaveLiofilizadorVer1.c: 816:        if(i==15)
  3821  0360  300F               	movlw	15
  3822  0361  0625               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3823  0362  0426               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3824  0363  1D03               	btfss	3,2
  3825  0364  2B6F               	goto	l5137
  3826                           
  3827                           ;SlaveLiofilizadorVer1.c: 817:          Temp/=(i-1);
  3828  0365  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3829  0366  3EFF               	addlw	255
  3830  0367  1283               	bcf	3,5	;RP0=0, select bank0
  3831  0368  00A0               	movwf	___xxtofl@val
  3832  0369  1683               	bsf	3,5	;RP0=1, select bank1
  3833  036A  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3834  036B  1803               	skipnc
  3835  036C  3E01               	addlw	1
  3836  036D  3EFF               	addlw	255
  3837  036E  2B74               	goto	L4
  3838  036F                     l5137:
  3839                           
  3840                           ;SlaveLiofilizadorVer1.c: 819:          Temp/=(i);
  3841  036F  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3842  0370  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0371  00A0               	movwf	___xxtofl@val
  3844  0372  1683               	bsf	3,5	;RP0=1, select bank1
  3845  0373  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3846  0374                     L4:
  3847  0374  1283               	bcf	3,5	;RP0=0, select bank0
  3848  0375  00A1               	movwf	___xxtofl@val+1
  3849  0376  01A2               	clrf	___xxtofl@val+2
  3850  0377  01A3               	clrf	___xxtofl@val+3
  3851  0378  3000               	movlw	0
  3852  0379  120A  118A  274B  120A  118A  	fcall	___xxtofl
  3853  037E  0823               	movf	?___xxtofl+3,w
  3854  037F  00B1               	movwf	___fldiv@a+3
  3855  0380  0822               	movf	?___xxtofl+2,w
  3856  0381  00B0               	movwf	___fldiv@a+2
  3857  0382  0821               	movf	?___xxtofl+1,w
  3858  0383  00AF               	movwf	___fldiv@a+1
  3859  0384  0820               	movf	?___xxtofl,w
  3860  0385  00AE               	movwf	___fldiv@a
  3861  0386  1683               	bsf	3,5	;RP0=1, select bank1
  3862  0387  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3863  0388  1283               	bcf	3,5	;RP0=0, select bank0
  3864  0389  00B5               	movwf	___fldiv@b+3
  3865  038A  1683               	bsf	3,5	;RP0=1, select bank1
  3866  038B  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3867  038C  1283               	bcf	3,5	;RP0=0, select bank0
  3868  038D  00B4               	movwf	___fldiv@b+2
  3869  038E  1683               	bsf	3,5	;RP0=1, select bank1
  3870  038F  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3871  0390  1283               	bcf	3,5	;RP0=0, select bank0
  3872  0391  00B3               	movwf	___fldiv@b+1
  3873  0392  1683               	bsf	3,5	;RP0=1, select bank1
  3874  0393  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3875  0394  1283               	bcf	3,5	;RP0=0, select bank0
  3876  0395  00B2               	movwf	___fldiv@b
  3877  0396  120A  158A  213D  120A  118A  	fcall	___fldiv
  3878  039B  0831               	movf	?___fldiv+3,w
  3879  039C  1683               	bsf	3,5	;RP0=1, select bank1
  3880  039D  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3881  039E  1283               	bcf	3,5	;RP0=0, select bank0
  3882  039F  0830               	movf	?___fldiv+2,w
  3883  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  3884  03A1  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3885  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3886  03A3  082F               	movf	?___fldiv+1,w
  3887  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  3888  03A5  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3889  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  3890  03A7  082E               	movf	?___fldiv,w
  3891  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  3892  03A9  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3893                           
  3894                           ;SlaveLiofilizadorVer1.c: 821:         Tensao1 =Temp*0.558296;
  3895  03AA  303F               	movlw	63
  3896  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  3897  03AC  00CE               	movwf	___flmul@b+3
  3898  03AD  300E               	movlw	14
  3899  03AE  00CD               	movwf	___flmul@b+2
  3900  03AF  30EC               	movlw	236
  3901  03B0  00CC               	movwf	___flmul@b+1
  3902  03B1  307D               	movlw	125
  3903  03B2  00CB               	movwf	___flmul@b
  3904  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  3905  03B4  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3906  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  3907  03B6  00D2               	movwf	___flmul@a+3
  3908  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  3909  03B8  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3910  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  3911  03BA  00D1               	movwf	___flmul@a+2
  3912  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  3913  03BC  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3914  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  3915  03BE  00D0               	movwf	___flmul@a+1
  3916  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  3917  03C0  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3918  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  3919  03C2  00CF               	movwf	___flmul@a
  3920  03C3  120A  158A  250B  120A  118A  	fcall	___flmul
  3921  03C8  084E               	movf	?___flmul+3,w
  3922  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  3923  03CA  00CC               	movwf	(_Tensao1+3)^(0+128)
  3924  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  3925  03CC  084D               	movf	?___flmul+2,w
  3926  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  3927  03CE  00CB               	movwf	(_Tensao1+2)^(0+128)
  3928  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3929  03D0  084C               	movf	?___flmul+1,w
  3930  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  3931  03D2  00CA               	movwf	(_Tensao1+1)^(0+128)
  3932  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  3933  03D4  084B               	movf	?___flmul,w
  3934  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  3935  03D6  00C9               	movwf	_Tensao1^(0+128)
  3936                           
  3937                           ;SlaveLiofilizadorVer1.c: 822:         if(Tensao1<15) Tensao1=0;
  3938  03D7  084C               	movf	(_Tensao1+3)^(0+128),w
  3939  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  3940  03D9  00A3               	movwf	___flge@ff1+3
  3941  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  3942  03DB  084B               	movf	(_Tensao1+2)^(0+128),w
  3943  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  3944  03DD  00A2               	movwf	___flge@ff1+2
  3945  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  3946  03DF  084A               	movf	(_Tensao1+1)^(0+128),w
  3947  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  3948  03E1  00A1               	movwf	___flge@ff1+1
  3949  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  3950  03E3  0849               	movf	_Tensao1^(0+128),w
  3951  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  3952  03E5  00A0               	movwf	___flge@ff1
  3953  03E6  3041               	movlw	65
  3954  03E7  00A7               	movwf	___flge@ff2+3
  3955  03E8  3070               	movlw	112
  3956  03E9  00A6               	movwf	___flge@ff2+2
  3957  03EA  3000               	movlw	0
  3958  03EB  00A5               	movwf	___flge@ff2+1
  3959  03EC  3000               	movlw	0
  3960  03ED  00A4               	movwf	___flge@ff2
  3961  03EE  160A  158A  276D  120A  118A  	fcall	___flge
  3962  03F3  1803               	btfsc	3,0
  3963  03F4  0008               	return
  3964  03F5  3000               	movlw	0
  3965  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  3966  03F7  00CC               	movwf	(_Tensao1+3)^(0+128)
  3967  03F8  3000               	movlw	0
  3968  03F9  00CB               	movwf	(_Tensao1+2)^(0+128)
  3969  03FA  3000               	movlw	0
  3970  03FB  00CA               	movwf	(_Tensao1+1)^(0+128)
  3971  03FC  3000               	movlw	0
  3972  03FD  00C9               	movwf	_Tensao1^(0+128)
  3973  03FE  0008               	return
  3974  03FF                     __end_of_MediaPlacaVaccum:
  3975                           
  3976                           	psect	text3
  3977  199F                     __ptext3:	
  3978 ;; *************** function ___flsub *****************
  3979 ;; Defined at:
  3980 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  a               4   43[BANK0 ] void 
  3983 ;;  b               4   47[BANK0 ] void 
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  4   43[BANK0 ] void 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : 300/0
  3992 ;;		On exit  : 300/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3995 ;;      Params:         0       8       0       0       0
  3996 ;;      Locals:         0       0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0
  3998 ;;      Totals:         0       8       0       0       0
  3999 ;;Total ram usage:        8 bytes
  4000 ;; Hardware stack levels used: 1
  4001 ;; Hardware stack levels required when called: 2
  4002 ;; This function calls:
  4003 ;;		___fladd
  4004 ;; This function is called by:
  4005 ;;		_MediaPlacaVaccum
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           
  4010                           ;psect for function ___flsub
  4011  199F                     ___flsub:
  4012                           
  4013                           ;incstack = 0
  4014                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4015  199F  3080               	movlw	128
  4016  19A0  06CE               	xorwf	___flsub@a+3,f
  4017  19A1  0852               	movf	___flsub@b+3,w
  4018  19A2  00BA               	movwf	___fladd@b+3
  4019  19A3  0851               	movf	___flsub@b+2,w
  4020  19A4  00B9               	movwf	___fladd@b+2
  4021  19A5  0850               	movf	___flsub@b+1,w
  4022  19A6  00B8               	movwf	___fladd@b+1
  4023  19A7  084F               	movf	___flsub@b,w
  4024  19A8  00B7               	movwf	___fladd@b
  4025  19A9  084E               	movf	___flsub@a+3,w
  4026  19AA  00BE               	movwf	___fladd@a+3
  4027  19AB  084D               	movf	___flsub@a+2,w
  4028  19AC  00BD               	movwf	___fladd@a+2
  4029  19AD  084C               	movf	___flsub@a+1,w
  4030  19AE  00BC               	movwf	___fladd@a+1
  4031  19AF  084B               	movf	___flsub@a,w
  4032  19B0  00BB               	movwf	___fladd@a
  4033  19B1  120A  158A  22DE   	fcall	___fladd
  4034  19B4  083A               	movf	?___fladd+3,w
  4035  19B5  00CE               	movwf	?___flsub+3
  4036  19B6  0839               	movf	?___fladd+2,w
  4037  19B7  00CD               	movwf	?___flsub+2
  4038  19B8  0838               	movf	?___fladd+1,w
  4039  19B9  00CC               	movwf	?___flsub+1
  4040  19BA  0837               	movf	?___fladd,w
  4041  19BB  00CB               	movwf	?___flsub
  4042  19BC  0008               	return
  4043  19BD                     __end_of___flsub:
  4044                           
  4045                           	psect	text4
  4046  0ADE                     __ptext4:	
  4047 ;; *************** function ___fladd *****************
  4048 ;; Defined at:
  4049 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  b               4   23[BANK0 ] void 
  4052 ;;  a               4   27[BANK0 ] void 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  grs             1   42[BANK0 ] unsigned char 
  4055 ;;  bexp            1   41[BANK0 ] unsigned char 
  4056 ;;  aexp            1   40[BANK0 ] unsigned char 
  4057 ;;  signs           1   39[BANK0 ] unsigned char 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  4   23[BANK0 ] unsigned char 
  4060 ;; Registers used:
  4061 ;;		wreg, status,2, status,0, btemp+1
  4062 ;; Tracked objects:
  4063 ;;		On entry : 300/0
  4064 ;;		On exit  : 300/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4067 ;;      Params:         0       8       0       0       0
  4068 ;;      Locals:         0       4       0       0       0
  4069 ;;      Temps:          0       8       0       0       0
  4070 ;;      Totals:         0      20       0       0       0
  4071 ;;Total ram usage:       20 bytes
  4072 ;; Hardware stack levels used: 1
  4073 ;; Hardware stack levels required when called: 1
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_MediaPlacaVaccum
  4078 ;;		___flsub
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           
  4083                           ;psect for function ___fladd
  4084  0ADE                     ___fladd:
  4085                           
  4086                           ;incstack = 0
  4087                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4088  0ADE  083A               	movf	___fladd@b+3,w
  4089  0ADF  3980               	andlw	128
  4090  0AE0  00BF               	movwf	??___fladd
  4091  0AE1  083F               	movf	??___fladd,w
  4092  0AE2  00C7               	movwf	___fladd@signs
  4093  0AE3  083A               	movf	___fladd@b+3,w
  4094  0AE4  00BF               	movwf	??___fladd
  4095  0AE5  073F               	addwf	??___fladd,w
  4096  0AE6  00C0               	movwf	??___fladd+1
  4097  0AE7  0840               	movf	??___fladd+1,w
  4098  0AE8  00C9               	movwf	___fladd@bexp
  4099  0AE9  1BB9               	btfsc	___fladd@b+2,7
  4100  0AEA  1449               	bsf	___fladd@bexp,0
  4101  0AEB  0849               	movf	___fladd@bexp,w
  4102  0AEC  1903               	btfsc	3,2
  4103  0AED  2AFC               	goto	l4007
  4104  0AEE  0A49               	incf	___fladd@bexp,w
  4105  0AEF  1D03               	btfss	3,2
  4106  0AF0  2AF9               	goto	l4003
  4107  0AF1  3000               	movlw	0
  4108  0AF2  00BA               	movwf	___fladd@b+3
  4109  0AF3  3000               	movlw	0
  4110  0AF4  00B9               	movwf	___fladd@b+2
  4111  0AF5  3000               	movlw	0
  4112  0AF6  00B8               	movwf	___fladd@b+1
  4113  0AF7  3000               	movlw	0
  4114  0AF8  00B7               	movwf	___fladd@b
  4115  0AF9                     l4003:
  4116  0AF9  17B9               	bsf	___fladd@b+2,7
  4117  0AFA  01BA               	clrf	___fladd@b+3
  4118  0AFB  2B04               	goto	l4009
  4119  0AFC                     l4007:
  4120  0AFC  3000               	movlw	0
  4121  0AFD  00BA               	movwf	___fladd@b+3
  4122  0AFE  3000               	movlw	0
  4123  0AFF  00B9               	movwf	___fladd@b+2
  4124  0B00  3000               	movlw	0
  4125  0B01  00B8               	movwf	___fladd@b+1
  4126  0B02  3000               	movlw	0
  4127  0B03  00B7               	movwf	___fladd@b
  4128  0B04                     l4009:
  4129  0B04  083E               	movf	___fladd@a+3,w
  4130  0B05  3980               	andlw	128
  4131  0B06  00BF               	movwf	??___fladd
  4132  0B07  083F               	movf	??___fladd,w
  4133  0B08  00C8               	movwf	___fladd@aexp
  4134  0B09  0848               	movf	___fladd@aexp,w
  4135  0B0A  0647               	xorwf	___fladd@signs,w
  4136  0B0B  1D03               	btfss	3,2
  4137  0B0C  1747               	bsf	___fladd@signs,6
  4138  0B0D  083E               	movf	___fladd@a+3,w
  4139  0B0E  00BF               	movwf	??___fladd
  4140  0B0F  073F               	addwf	??___fladd,w
  4141  0B10  00C0               	movwf	??___fladd+1
  4142  0B11  0840               	movf	??___fladd+1,w
  4143  0B12  00C8               	movwf	___fladd@aexp
  4144  0B13  1BBD               	btfsc	___fladd@a+2,7
  4145  0B14  1448               	bsf	___fladd@aexp,0
  4146  0B15  0848               	movf	___fladd@aexp,w
  4147  0B16  1903               	btfsc	3,2
  4148  0B17  2B26               	goto	l4031
  4149  0B18  0A48               	incf	___fladd@aexp,w
  4150  0B19  1D03               	btfss	3,2
  4151  0B1A  2B23               	goto	l4027
  4152  0B1B  3000               	movlw	0
  4153  0B1C  00BE               	movwf	___fladd@a+3
  4154  0B1D  3000               	movlw	0
  4155  0B1E  00BD               	movwf	___fladd@a+2
  4156  0B1F  3000               	movlw	0
  4157  0B20  00BC               	movwf	___fladd@a+1
  4158  0B21  3000               	movlw	0
  4159  0B22  00BB               	movwf	___fladd@a
  4160  0B23                     l4027:
  4161  0B23  17BD               	bsf	___fladd@a+2,7
  4162  0B24  01BE               	clrf	___fladd@a+3
  4163  0B25  2B2E               	goto	l1290
  4164  0B26                     l4031:
  4165  0B26  3000               	movlw	0
  4166  0B27  00BE               	movwf	___fladd@a+3
  4167  0B28  3000               	movlw	0
  4168  0B29  00BD               	movwf	___fladd@a+2
  4169  0B2A  3000               	movlw	0
  4170  0B2B  00BC               	movwf	___fladd@a+1
  4171  0B2C  3000               	movlw	0
  4172  0B2D  00BB               	movwf	___fladd@a
  4173  0B2E                     l1290:
  4174  0B2E  0849               	movf	___fladd@bexp,w
  4175  0B2F  0248               	subwf	___fladd@aexp,w
  4176  0B30  1803               	skipnc
  4177  0B31  2B74               	goto	l4067
  4178  0B32  1F47               	btfss	___fladd@signs,6
  4179  0B33  2B38               	goto	l4037
  4180  0B34  3080               	movlw	128
  4181  0B35  00BF               	movwf	??___fladd
  4182  0B36  083F               	movf	??___fladd,w
  4183  0B37  06C7               	xorwf	___fladd@signs,f
  4184  0B38                     l4037:
  4185  0B38  0849               	movf	___fladd@bexp,w
  4186  0B39  00BF               	movwf	??___fladd
  4187  0B3A  083F               	movf	??___fladd,w
  4188  0B3B  00CA               	movwf	___fladd@grs
  4189  0B3C  0848               	movf	___fladd@aexp,w
  4190  0B3D  00BF               	movwf	??___fladd
  4191  0B3E  083F               	movf	??___fladd,w
  4192  0B3F  00C9               	movwf	___fladd@bexp
  4193  0B40  084A               	movf	___fladd@grs,w
  4194  0B41  00BF               	movwf	??___fladd
  4195  0B42  083F               	movf	??___fladd,w
  4196  0B43  00C8               	movwf	___fladd@aexp
  4197  0B44  0837               	movf	___fladd@b,w
  4198  0B45  00BF               	movwf	??___fladd
  4199  0B46  083F               	movf	??___fladd,w
  4200  0B47  00CA               	movwf	___fladd@grs
  4201  0B48  083B               	movf	___fladd@a,w
  4202  0B49  00BF               	movwf	??___fladd
  4203  0B4A  083F               	movf	??___fladd,w
  4204  0B4B  00B7               	movwf	___fladd@b
  4205  0B4C  084A               	movf	___fladd@grs,w
  4206  0B4D  00BF               	movwf	??___fladd
  4207  0B4E  083F               	movf	??___fladd,w
  4208  0B4F  00BB               	movwf	___fladd@a
  4209  0B50  0838               	movf	___fladd@b+1,w
  4210  0B51  00BF               	movwf	??___fladd
  4211  0B52  083F               	movf	??___fladd,w
  4212  0B53  00CA               	movwf	___fladd@grs
  4213  0B54  083C               	movf	___fladd@a+1,w
  4214  0B55  00BF               	movwf	??___fladd
  4215  0B56  083F               	movf	??___fladd,w
  4216  0B57  00B8               	movwf	___fladd@b+1
  4217  0B58  084A               	movf	___fladd@grs,w
  4218  0B59  00BF               	movwf	??___fladd
  4219  0B5A  083F               	movf	??___fladd,w
  4220  0B5B  00BC               	movwf	___fladd@a+1
  4221  0B5C  0839               	movf	___fladd@b+2,w
  4222  0B5D  00BF               	movwf	??___fladd
  4223  0B5E  083F               	movf	??___fladd,w
  4224  0B5F  00CA               	movwf	___fladd@grs
  4225  0B60  083D               	movf	___fladd@a+2,w
  4226  0B61  00BF               	movwf	??___fladd
  4227  0B62  083F               	movf	??___fladd,w
  4228  0B63  00B9               	movwf	___fladd@b+2
  4229  0B64  084A               	movf	___fladd@grs,w
  4230  0B65  00BF               	movwf	??___fladd
  4231  0B66  083F               	movf	??___fladd,w
  4232  0B67  00BD               	movwf	___fladd@a+2
  4233  0B68  083A               	movf	___fladd@b+3,w
  4234  0B69  00BF               	movwf	??___fladd
  4235  0B6A  083F               	movf	??___fladd,w
  4236  0B6B  00CA               	movwf	___fladd@grs
  4237  0B6C  083E               	movf	___fladd@a+3,w
  4238  0B6D  00BF               	movwf	??___fladd
  4239  0B6E  083F               	movf	??___fladd,w
  4240  0B6F  00BA               	movwf	___fladd@b+3
  4241  0B70  084A               	movf	___fladd@grs,w
  4242  0B71  00BF               	movwf	??___fladd
  4243  0B72  083F               	movf	??___fladd,w
  4244  0B73  00BE               	movwf	___fladd@a+3
  4245  0B74                     l4067:
  4246  0B74  01CA               	clrf	___fladd@grs
  4247  0B75  0848               	movf	___fladd@aexp,w
  4248  0B76  00BF               	movwf	??___fladd
  4249  0B77  01C0               	clrf	??___fladd+1
  4250  0B78  0840               	movf	??___fladd+1,w
  4251  0B79  00C2               	movwf	??___fladd+3
  4252  0B7A  0849               	movf	___fladd@bexp,w
  4253  0B7B  023F               	subwf	??___fladd,w
  4254  0B7C  00C1               	movwf	??___fladd+2
  4255  0B7D  1C03               	skipc
  4256  0B7E  03C2               	decf	??___fladd+3,f
  4257  0B7F  0842               	movf	??___fladd+3,w
  4258  0B80  3A80               	xorlw	128
  4259  0B81  00FF               	movwf	127
  4260  0B82  3080               	movlw	128
  4261  0B83  027F               	subwf	127,w
  4262  0B84  1D03               	skipz
  4263  0B85  2B88               	goto	u3295
  4264  0B86  301A               	movlw	26
  4265  0B87  0241               	subwf	??___fladd+2,w
  4266  0B88                     u3295:
  4267  0B88  1C03               	skipc
  4268  0B89  2BC1               	goto	l4085
  4269  0B8A  1283               	bcf	3,5	;RP0=0, select bank0
  4270  0B8B  1303               	bcf	3,6	;RP1=0, select bank0
  4271  0B8C  083A               	movf	___fladd@b+3,w
  4272  0B8D  0439               	iorwf	___fladd@b+2,w
  4273  0B8E  0438               	iorwf	___fladd@b+1,w
  4274  0B8F  0437               	iorwf	___fladd@b,w
  4275  0B90  1903               	btfsc	3,2
  4276  0B91  2B94               	goto	u3300
  4277  0B92  3001               	movlw	1
  4278  0B93  2B95               	goto	u3310
  4279  0B94                     u3300:
  4280  0B94  3000               	movlw	0
  4281  0B95                     u3310:
  4282  0B95  00BF               	movwf	??___fladd
  4283  0B96  083F               	movf	??___fladd,w
  4284  0B97  00CA               	movwf	___fladd@grs
  4285  0B98  3000               	movlw	0
  4286  0B99  00BA               	movwf	___fladd@b+3
  4287  0B9A  3000               	movlw	0
  4288  0B9B  00B9               	movwf	___fladd@b+2
  4289  0B9C  3000               	movlw	0
  4290  0B9D  00B8               	movwf	___fladd@b+1
  4291  0B9E  3000               	movlw	0
  4292  0B9F  00B7               	movwf	___fladd@b
  4293  0BA0  0848               	movf	___fladd@aexp,w
  4294  0BA1  00BF               	movwf	??___fladd
  4295  0BA2  083F               	movf	??___fladd,w
  4296  0BA3  00C9               	movwf	___fladd@bexp
  4297  0BA4  2BC7               	goto	l1294
  4298  0BA5                     l1296:
  4299  0BA5  1C4A               	btfss	___fladd@grs,0
  4300  0BA6  2BB0               	goto	l4075
  4301  0BA7  084A               	movf	___fladd@grs,w
  4302  0BA8  00BF               	movwf	??___fladd
  4303  0BA9  1003               	clrc
  4304  0BAA  0C3F               	rrf	??___fladd,w
  4305  0BAB  3801               	iorlw	1
  4306  0BAC  00C0               	movwf	??___fladd+1
  4307  0BAD  0840               	movf	??___fladd+1,w
  4308  0BAE  00CA               	movwf	___fladd@grs
  4309  0BAF  2BB2               	goto	l4077
  4310  0BB0                     l4075:
  4311  0BB0  1003               	clrc
  4312  0BB1  0CCA               	rrf	___fladd@grs,f
  4313  0BB2                     l4077:
  4314  0BB2  1837               	btfsc	___fladd@b,0
  4315  0BB3  17CA               	bsf	___fladd@grs,7
  4316  0BB4  3001               	movlw	1
  4317  0BB5  00BF               	movwf	??___fladd
  4318  0BB6                     u3345:
  4319  0BB6  0D3A               	rlf	___fladd@b+3,w
  4320  0BB7  0CBA               	rrf	___fladd@b+3,f
  4321  0BB8  0CB9               	rrf	___fladd@b+2,f
  4322  0BB9  0CB8               	rrf	___fladd@b+1,f
  4323  0BBA  0CB7               	rrf	___fladd@b,f
  4324  0BBB  0BBF               	decfsz	??___fladd& (0+127),f
  4325  0BBC  2BB6               	goto	u3345
  4326  0BBD  3001               	movlw	1
  4327  0BBE  00BF               	movwf	??___fladd
  4328  0BBF  083F               	movf	??___fladd,w
  4329  0BC0  07C9               	addwf	___fladd@bexp,f
  4330  0BC1                     l4085:
  4331  0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  4332  0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  4333  0BC3  0848               	movf	___fladd@aexp,w
  4334  0BC4  0249               	subwf	___fladd@bexp,w
  4335  0BC5  1C03               	skipc
  4336  0BC6  2BA5               	goto	l1296
  4337  0BC7                     l1294:
  4338  0BC7  1B47               	btfsc	___fladd@signs,6
  4339  0BC8  2C08               	goto	l4111
  4340  0BC9  0849               	movf	___fladd@bexp,w
  4341  0BCA  1D03               	btfss	3,2
  4342  0BCB  2BD5               	goto	l4093
  4343  0BCC  3000               	movlw	0
  4344  0BCD  00BA               	movwf	?___fladd+3
  4345  0BCE  3000               	movlw	0
  4346  0BCF  00B9               	movwf	?___fladd+2
  4347  0BD0  3000               	movlw	0
  4348  0BD1  00B8               	movwf	?___fladd+1
  4349  0BD2  3000               	movlw	0
  4350  0BD3  00B7               	movwf	?___fladd
  4351  0BD4  0008               	return
  4352  0BD5                     l4093:
  4353  0BD5  083B               	movf	___fladd@a,w
  4354  0BD6  07B7               	addwf	___fladd@b,f
  4355  0BD7  083C               	movf	___fladd@a+1,w
  4356  0BD8  1103               	clrz
  4357  0BD9  1803               	skipnc
  4358  0BDA  3E01               	addlw	1
  4359  0BDB  1D03               	btfss	3,2
  4360  0BDC  07B8               	addwf	___fladd@b+1,f
  4361  0BDD  083D               	movf	___fladd@a+2,w
  4362  0BDE  1103               	clrz
  4363  0BDF  1803               	skipnc
  4364  0BE0  3E01               	addlw	1
  4365  0BE1  1D03               	btfss	3,2
  4366  0BE2  07B9               	addwf	___fladd@b+2,f
  4367  0BE3  083E               	movf	___fladd@a+3,w
  4368  0BE4  1103               	clrz
  4369  0BE5  1803               	skipnc
  4370  0BE6  3E01               	addlw	1
  4371  0BE7  1D03               	btfss	3,2
  4372  0BE8  07BA               	addwf	___fladd@b+3,f
  4373  0BE9  1C3A               	btfss	___fladd@b+3,0
  4374  0BEA  2CAA               	goto	l4145
  4375  0BEB  1C4A               	btfss	___fladd@grs,0
  4376  0BEC  2BF6               	goto	l4101
  4377  0BED  084A               	movf	___fladd@grs,w
  4378  0BEE  00BF               	movwf	??___fladd
  4379  0BEF  1003               	clrc
  4380  0BF0  0C3F               	rrf	??___fladd,w
  4381  0BF1  3801               	iorlw	1
  4382  0BF2  00C0               	movwf	??___fladd+1
  4383  0BF3  0840               	movf	??___fladd+1,w
  4384  0BF4  00CA               	movwf	___fladd@grs
  4385  0BF5  2BF8               	goto	l4103
  4386  0BF6                     l4101:
  4387  0BF6  1003               	clrc
  4388  0BF7  0CCA               	rrf	___fladd@grs,f
  4389  0BF8                     l4103:
  4390  0BF8  1837               	btfsc	___fladd@b,0
  4391  0BF9  17CA               	bsf	___fladd@grs,7
  4392  0BFA  3001               	movlw	1
  4393  0BFB  00BF               	movwf	??___fladd
  4394  0BFC                     u3425:
  4395  0BFC  0D3A               	rlf	___fladd@b+3,w
  4396  0BFD  0CBA               	rrf	___fladd@b+3,f
  4397  0BFE  0CB9               	rrf	___fladd@b+2,f
  4398  0BFF  0CB8               	rrf	___fladd@b+1,f
  4399  0C00  0CB7               	rrf	___fladd@b,f
  4400  0C01  0BBF               	decfsz	??___fladd& (0+127),f
  4401  0C02  2BFC               	goto	u3425
  4402  0C03  3001               	movlw	1
  4403  0C04  00BF               	movwf	??___fladd
  4404  0C05  083F               	movf	??___fladd,w
  4405  0C06  07C9               	addwf	___fladd@bexp,f
  4406  0C07  2CAA               	goto	l4145
  4407  0C08                     l4111:
  4408  0C08  083A               	movf	___fladd@b+3,w
  4409  0C09  3A80               	xorlw	128
  4410  0C0A  00FF               	movwf	127
  4411  0C0B  083E               	movf	___fladd@a+3,w
  4412  0C0C  3A80               	xorlw	128
  4413  0C0D  027F               	subwf	127,w
  4414  0C0E  1D03               	skipz
  4415  0C0F  2C1A               	goto	u3433
  4416  0C10  083D               	movf	___fladd@a+2,w
  4417  0C11  0239               	subwf	___fladd@b+2,w
  4418  0C12  1D03               	skipz
  4419  0C13  2C1A               	goto	u3433
  4420  0C14  083C               	movf	___fladd@a+1,w
  4421  0C15  0238               	subwf	___fladd@b+1,w
  4422  0C16  1D03               	skipz
  4423  0C17  2C1A               	goto	u3433
  4424  0C18  083B               	movf	___fladd@a,w
  4425  0C19  0237               	subwf	___fladd@b,w
  4426  0C1A                     u3433:
  4427  0C1A  1803               	skipnc
  4428  0C1B  2C72               	goto	l4121
  4429  0C1C  30FF               	movlw	255
  4430  0C1D  00BF               	movwf	??___fladd
  4431  0C1E  30FF               	movlw	255
  4432  0C1F  00C0               	movwf	??___fladd+1
  4433  0C20  30FF               	movlw	255
  4434  0C21  00C1               	movwf	??___fladd+2
  4435  0C22  30FF               	movlw	255
  4436  0C23  00C2               	movwf	??___fladd+3
  4437  0C24  083B               	movf	___fladd@a,w
  4438  0C25  00C3               	movwf	??___fladd+4
  4439  0C26  083C               	movf	___fladd@a+1,w
  4440  0C27  00C4               	movwf	??___fladd+5
  4441  0C28  083D               	movf	___fladd@a+2,w
  4442  0C29  00C5               	movwf	??___fladd+6
  4443  0C2A  083E               	movf	___fladd@a+3,w
  4444  0C2B  00C6               	movwf	??___fladd+7
  4445  0C2C  0837               	movf	___fladd@b,w
  4446  0C2D  02C3               	subwf	??___fladd+4,f
  4447  0C2E  0838               	movf	___fladd@b+1,w
  4448  0C2F  1C03               	skipc
  4449  0C30  0F38               	incfsz	___fladd@b+1,w
  4450  0C31  2C33               	goto	u3441
  4451  0C32  2C34               	goto	u3442
  4452  0C33                     u3441:
  4453  0C33  02C4               	subwf	??___fladd+5,f
  4454  0C34                     u3442:
  4455  0C34  0839               	movf	___fladd@b+2,w
  4456  0C35  1C03               	skipc
  4457  0C36  0F39               	incfsz	___fladd@b+2,w
  4458  0C37  2C39               	goto	u3443
  4459  0C38  2C3A               	goto	u3444
  4460  0C39                     u3443:
  4461  0C39  02C5               	subwf	??___fladd+6,f
  4462  0C3A                     u3444:
  4463  0C3A  083A               	movf	___fladd@b+3,w
  4464  0C3B  1C03               	skipc
  4465  0C3C  0F3A               	incfsz	___fladd@b+3,w
  4466  0C3D  2C3F               	goto	u3445
  4467  0C3E  2C40               	goto	u3446
  4468  0C3F                     u3445:
  4469  0C3F  02C6               	subwf	??___fladd+7,f
  4470  0C40                     u3446:
  4471  0C40  0843               	movf	??___fladd+4,w
  4472  0C41  07BF               	addwf	??___fladd,f
  4473  0C42  0844               	movf	??___fladd+5,w
  4474  0C43  1803               	skipnc
  4475  0C44  0F44               	incfsz	??___fladd+5,w
  4476  0C45  2C47               	goto	u3450
  4477  0C46  2C48               	goto	u3451
  4478  0C47                     u3450:
  4479  0C47  07C0               	addwf	??___fladd+1,f
  4480  0C48                     u3451:
  4481  0C48  0845               	movf	??___fladd+6,w
  4482  0C49  1803               	skipnc
  4483  0C4A  0F45               	incfsz	??___fladd+6,w
  4484  0C4B  2C4D               	goto	u3452
  4485  0C4C  2C4E               	goto	u3453
  4486  0C4D                     u3452:
  4487  0C4D  07C1               	addwf	??___fladd+2,f
  4488  0C4E                     u3453:
  4489  0C4E  0846               	movf	??___fladd+7,w
  4490  0C4F  1803               	skipnc
  4491  0C50  0A46               	incf	??___fladd+7,w
  4492  0C51  07C2               	addwf	??___fladd+3,f
  4493  0C52  0842               	movf	??___fladd+3,w
  4494  0C53  00BA               	movwf	___fladd@b+3
  4495  0C54  0841               	movf	??___fladd+2,w
  4496  0C55  00B9               	movwf	___fladd@b+2
  4497  0C56  0840               	movf	??___fladd+1,w
  4498  0C57  00B8               	movwf	___fladd@b+1
  4499  0C58  083F               	movf	??___fladd,w
  4500  0C59  00B7               	movwf	___fladd@b
  4501  0C5A  3080               	movlw	128
  4502  0C5B  00BF               	movwf	??___fladd
  4503  0C5C  083F               	movf	??___fladd,w
  4504  0C5D  06C7               	xorwf	___fladd@signs,f
  4505  0C5E  09CA               	comf	___fladd@grs,f
  4506  0C5F  0ACA               	incf	___fladd@grs,f
  4507  0C60  084A               	movf	___fladd@grs,w
  4508  0C61  1D03               	btfss	3,2
  4509  0C62  2C80               	goto	l1311
  4510  0C63  3001               	movlw	1
  4511  0C64  07B7               	addwf	___fladd@b,f
  4512  0C65  3000               	movlw	0
  4513  0C66  1803               	skipnc
  4514  0C67  3001               	movlw	1
  4515  0C68  07B8               	addwf	___fladd@b+1,f
  4516  0C69  3000               	movlw	0
  4517  0C6A  1803               	skipnc
  4518  0C6B  3001               	movlw	1
  4519  0C6C  07B9               	addwf	___fladd@b+2,f
  4520  0C6D  3000               	movlw	0
  4521  0C6E  1803               	skipnc
  4522  0C6F  3001               	movlw	1
  4523  0C70  07BA               	addwf	___fladd@b+3,f
  4524  0C71  2C80               	goto	l1311
  4525  0C72                     l4121:
  4526  0C72  083B               	movf	___fladd@a,w
  4527  0C73  02B7               	subwf	___fladd@b,f
  4528  0C74  083C               	movf	___fladd@a+1,w
  4529  0C75  1C03               	skipc
  4530  0C76  0F3C               	incfsz	___fladd@a+1,w
  4531  0C77  02B8               	subwf	___fladd@b+1,f
  4532  0C78  083D               	movf	___fladd@a+2,w
  4533  0C79  1C03               	skipc
  4534  0C7A  0F3D               	incfsz	___fladd@a+2,w
  4535  0C7B  02B9               	subwf	___fladd@b+2,f
  4536  0C7C  083E               	movf	___fladd@a+3,w
  4537  0C7D  1C03               	skipc
  4538  0C7E  0F3E               	incfsz	___fladd@a+3,w
  4539  0C7F  02BA               	subwf	___fladd@b+3,f
  4540  0C80                     l1311:
  4541  0C80  083A               	movf	___fladd@b+3,w
  4542  0C81  0439               	iorwf	___fladd@b+2,w
  4543  0C82  0438               	iorwf	___fladd@b+1,w
  4544  0C83  0437               	iorwf	___fladd@b,w
  4545  0C84  1D03               	skipz
  4546  0C85  2CA8               	goto	l4143
  4547  0C86  084A               	movf	___fladd@grs,w
  4548  0C87  1D03               	btfss	3,2
  4549  0C88  2CA8               	goto	l4143
  4550  0C89  3000               	movlw	0
  4551  0C8A  00BA               	movwf	?___fladd+3
  4552  0C8B  3000               	movlw	0
  4553  0C8C  00B9               	movwf	?___fladd+2
  4554  0C8D  3000               	movlw	0
  4555  0C8E  00B8               	movwf	?___fladd+1
  4556  0C8F  3000               	movlw	0
  4557  0C90  00B7               	movwf	?___fladd
  4558  0C91  0008               	return
  4559  0C92                     l4129:
  4560  0C92  3001               	movlw	1
  4561  0C93  00BF               	movwf	??___fladd
  4562  0C94                     u3495:
  4563  0C94  1003               	clrc
  4564  0C95  0DB7               	rlf	___fladd@b,f
  4565  0C96  0DB8               	rlf	___fladd@b+1,f
  4566  0C97  0DB9               	rlf	___fladd@b+2,f
  4567  0C98  0DBA               	rlf	___fladd@b+3,f
  4568  0C99  0BBF               	decfsz	??___fladd,f
  4569  0C9A  2C94               	goto	u3495
  4570  0C9B  1BCA               	btfsc	___fladd@grs,7
  4571  0C9C  1437               	bsf	___fladd@b,0
  4572  0C9D  1C4A               	btfss	___fladd@grs,0
  4573  0C9E  2CA1               	goto	l4137
  4574  0C9F  1403               	setc
  4575  0CA0  2CA2               	goto	L5
  4576  0CA1                     l4137:
  4577  0CA1  1003               	clrc
  4578  0CA2                     L5:
  4579  0CA2  0DCA               	rlf	___fladd@grs,f
  4580  0CA3  0849               	movf	___fladd@bexp,w
  4581  0CA4  1903               	btfsc	3,2
  4582  0CA5  2CA8               	goto	l4143
  4583  0CA6  3001               	movlw	1
  4584  0CA7  02C9               	subwf	___fladd@bexp,f
  4585  0CA8                     l4143:
  4586  0CA8  1FB9               	btfss	___fladd@b+2,7
  4587  0CA9  2C92               	goto	l4129
  4588  0CAA                     l4145:
  4589  0CAA  01C8               	clrf	___fladd@aexp
  4590  0CAB  1FCA               	btfss	___fladd@grs,7
  4591  0CAC  2CB5               	goto	l4155
  4592  0CAD  084A               	movf	___fladd@grs,w
  4593  0CAE  397F               	andlw	127
  4594  0CAF  1903               	btfsc	3,2
  4595  0CB0  1837               	btfsc	___fladd@b,0
  4596  0CB1  2CB3               	goto	l4151
  4597  0CB2  2CB5               	goto	l4155
  4598  0CB3                     l4151:
  4599  0CB3  01C8               	clrf	___fladd@aexp
  4600  0CB4  0AC8               	incf	___fladd@aexp,f
  4601  0CB5                     l4155:
  4602  0CB5  0848               	movf	___fladd@aexp,w
  4603  0CB6  1903               	btfsc	3,2
  4604  0CB7  2CE8               	goto	l1324
  4605  0CB8  3001               	movlw	1
  4606  0CB9  07B7               	addwf	___fladd@b,f
  4607  0CBA  3000               	movlw	0
  4608  0CBB  1803               	skipnc
  4609  0CBC  3001               	movlw	1
  4610  0CBD  07B8               	addwf	___fladd@b+1,f
  4611  0CBE  3000               	movlw	0
  4612  0CBF  1803               	skipnc
  4613  0CC0  3001               	movlw	1
  4614  0CC1  07B9               	addwf	___fladd@b+2,f
  4615  0CC2  3000               	movlw	0
  4616  0CC3  1803               	skipnc
  4617  0CC4  3001               	movlw	1
  4618  0CC5  07BA               	addwf	___fladd@b+3,f
  4619  0CC6  1C3A               	btfss	___fladd@b+3,0
  4620  0CC7  2CE8               	goto	l1324
  4621  0CC8  0837               	movf	___fladd@b,w
  4622  0CC9  00BF               	movwf	??___fladd
  4623  0CCA  0838               	movf	___fladd@b+1,w
  4624  0CCB  00C0               	movwf	??___fladd+1
  4625  0CCC  0839               	movf	___fladd@b+2,w
  4626  0CCD  00C1               	movwf	??___fladd+2
  4627  0CCE  083A               	movf	___fladd@b+3,w
  4628  0CCF  00C2               	movwf	??___fladd+3
  4629  0CD0  3001               	movlw	1
  4630  0CD1  00C3               	movwf	??___fladd+4
  4631  0CD2                     u3595:
  4632  0CD2  0D42               	rlf	??___fladd+3,w
  4633  0CD3  0CC2               	rrf	??___fladd+3,f
  4634  0CD4  0CC1               	rrf	??___fladd+2,f
  4635  0CD5  0CC0               	rrf	??___fladd+1,f
  4636  0CD6  0CBF               	rrf	??___fladd,f
  4637  0CD7  0BC3               	decfsz	??___fladd+4,f
  4638  0CD8  2CD2               	goto	u3595
  4639  0CD9  0842               	movf	??___fladd+3,w
  4640  0CDA  00BA               	movwf	___fladd@b+3
  4641  0CDB  0841               	movf	??___fladd+2,w
  4642  0CDC  00B9               	movwf	___fladd@b+2
  4643  0CDD  0840               	movf	??___fladd+1,w
  4644  0CDE  00B8               	movwf	___fladd@b+1
  4645  0CDF  083F               	movf	??___fladd,w
  4646  0CE0  00B7               	movwf	___fladd@b
  4647  0CE1  0A49               	incf	___fladd@bexp,w
  4648  0CE2  1903               	btfsc	3,2
  4649  0CE3  2CE8               	goto	l1324
  4650  0CE4  3001               	movlw	1
  4651  0CE5  00BF               	movwf	??___fladd
  4652  0CE6  083F               	movf	??___fladd,w
  4653  0CE7  07C9               	addwf	___fladd@bexp,f
  4654  0CE8                     l1324:
  4655  0CE8  0A49               	incf	___fladd@bexp,w
  4656  0CE9  1D03               	btfss	3,2
  4657  0CEA  0849               	movf	___fladd@bexp,w
  4658  0CEB  1D03               	btfss	3,2
  4659  0CEC  2CF8               	goto	l4173
  4660  0CED  3000               	movlw	0
  4661  0CEE  00BA               	movwf	___fladd@b+3
  4662  0CEF  3000               	movlw	0
  4663  0CF0  00B9               	movwf	___fladd@b+2
  4664  0CF1  3000               	movlw	0
  4665  0CF2  00B8               	movwf	___fladd@b+1
  4666  0CF3  3000               	movlw	0
  4667  0CF4  00B7               	movwf	___fladd@b
  4668  0CF5  0849               	movf	___fladd@bexp,w
  4669  0CF6  1903               	btfsc	3,2
  4670  0CF7  01C7               	clrf	___fladd@signs
  4671  0CF8                     l4173:
  4672  0CF8  1C49               	btfss	___fladd@bexp,0
  4673  0CF9  2CFC               	goto	l4177
  4674  0CFA  17B9               	bsf	___fladd@b+2,7
  4675  0CFB  2D00               	goto	l1332
  4676  0CFC                     l4177:
  4677  0CFC  307F               	movlw	127
  4678  0CFD  00BF               	movwf	??___fladd
  4679  0CFE  083F               	movf	??___fladd,w
  4680  0CFF  05B9               	andwf	___fladd@b+2,f
  4681  0D00                     l1332:
  4682  0D00  0849               	movf	___fladd@bexp,w
  4683  0D01  00BF               	movwf	??___fladd
  4684  0D02  1003               	clrc
  4685  0D03  0C3F               	rrf	??___fladd,w
  4686  0D04  00C0               	movwf	??___fladd+1
  4687  0D05  0840               	movf	??___fladd+1,w
  4688  0D06  00BA               	movwf	___fladd@b+3
  4689  0D07  1FC7               	btfss	___fladd@signs,7
  4690  0D08  0008               	return
  4691  0D09  17BA               	bsf	___fladd@b+3,7
  4692  0D0A  0008               	return
  4693  0D0B                     __end_of___fladd:
  4694                           
  4695                           	psect	text5
  4696  1F6D                     __ptext5:	
  4697 ;; *************** function ___flge *****************
  4698 ;; Defined at:
  4699 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;  ff1             4    0[BANK0 ] unsigned char 
  4702 ;;  ff2             4    4[BANK0 ] unsigned char 
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;		None
  4705 ;; Return value:  Size  Location     Type
  4706 ;;		None               void
  4707 ;; Registers used:
  4708 ;;		wreg, status,2, status,0
  4709 ;; Tracked objects:
  4710 ;;		On entry : 300/0
  4711 ;;		On exit  : 300/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4714 ;;      Params:         0       8       0       0       0
  4715 ;;      Locals:         0       0       0       0       0
  4716 ;;      Temps:          0       4       0       0       0
  4717 ;;      Totals:         0      12       0       0       0
  4718 ;;Total ram usage:       12 bytes
  4719 ;; Hardware stack levels used: 1
  4720 ;; Hardware stack levels required when called: 1
  4721 ;; This function calls:
  4722 ;;		Nothing
  4723 ;; This function is called by:
  4724 ;;		_MediaPlacaVaccum
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           
  4729                           ;psect for function ___flge
  4730  1F6D                     ___flge:
  4731                           
  4732                           ;incstack = 0
  4733                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4734  1F6D  3000               	movlw	0
  4735  1F6E  0520               	andwf	___flge@ff1,w
  4736  1F6F  00A8               	movwf	??___flge
  4737  1F70  3000               	movlw	0
  4738  1F71  0521               	andwf	___flge@ff1+1,w
  4739  1F72  00A9               	movwf	??___flge+1
  4740  1F73  3080               	movlw	128
  4741  1F74  0522               	andwf	___flge@ff1+2,w
  4742  1F75  00AA               	movwf	??___flge+2
  4743  1F76  307F               	movlw	127
  4744  1F77  0523               	andwf	___flge@ff1+3,w
  4745  1F78  00AB               	movwf	??___flge+3
  4746  1F79  082B               	movf	??___flge+3,w
  4747  1F7A  042A               	iorwf	??___flge+2,w
  4748  1F7B  0429               	iorwf	??___flge+1,w
  4749  1F7C  0428               	iorwf	??___flge,w
  4750  1F7D  1D03               	skipz
  4751  1F7E  2F87               	goto	l1171
  4752  1F7F  3000               	movlw	0
  4753  1F80  00A3               	movwf	___flge@ff1+3
  4754  1F81  3000               	movlw	0
  4755  1F82  00A2               	movwf	___flge@ff1+2
  4756  1F83  3000               	movlw	0
  4757  1F84  00A1               	movwf	___flge@ff1+1
  4758  1F85  3000               	movlw	0
  4759  1F86  00A0               	movwf	___flge@ff1
  4760  1F87                     l1171:
  4761  1F87  3000               	movlw	0
  4762  1F88  0524               	andwf	___flge@ff2,w
  4763  1F89  00A8               	movwf	??___flge
  4764  1F8A  3000               	movlw	0
  4765  1F8B  0525               	andwf	___flge@ff2+1,w
  4766  1F8C  00A9               	movwf	??___flge+1
  4767  1F8D  3080               	movlw	128
  4768  1F8E  0526               	andwf	___flge@ff2+2,w
  4769  1F8F  00AA               	movwf	??___flge+2
  4770  1F90  307F               	movlw	127
  4771  1F91  0527               	andwf	___flge@ff2+3,w
  4772  1F92  00AB               	movwf	??___flge+3
  4773  1F93  082B               	movf	??___flge+3,w
  4774  1F94  042A               	iorwf	??___flge+2,w
  4775  1F95  0429               	iorwf	??___flge+1,w
  4776  1F96  0428               	iorwf	??___flge,w
  4777  1F97  1D03               	skipz
  4778  1F98  2FA1               	goto	l4833
  4779  1F99  3000               	movlw	0
  4780  1F9A  00A7               	movwf	___flge@ff2+3
  4781  1F9B  3000               	movlw	0
  4782  1F9C  00A6               	movwf	___flge@ff2+2
  4783  1F9D  3000               	movlw	0
  4784  1F9E  00A5               	movwf	___flge@ff2+1
  4785  1F9F  3000               	movlw	0
  4786  1FA0  00A4               	movwf	___flge@ff2
  4787  1FA1                     l4833:
  4788  1FA1  1FA3               	btfss	___flge@ff1+3,7
  4789  1FA2  2FC7               	goto	l4837
  4790  1FA3  3000               	movlw	0
  4791  1FA4  00A8               	movwf	??___flge
  4792  1FA5  3000               	movlw	0
  4793  1FA6  00A9               	movwf	??___flge+1
  4794  1FA7  3000               	movlw	0
  4795  1FA8  00AA               	movwf	??___flge+2
  4796  1FA9  3080               	movlw	128
  4797  1FAA  00AB               	movwf	??___flge+3
  4798  1FAB  0820               	movf	___flge@ff1,w
  4799  1FAC  02A8               	subwf	??___flge,f
  4800  1FAD  0821               	movf	___flge@ff1+1,w
  4801  1FAE  1C03               	skipc
  4802  1FAF  0F21               	incfsz	___flge@ff1+1,w
  4803  1FB0  2FB2               	goto	u4561
  4804  1FB1  2FB3               	goto	u4562
  4805  1FB2                     u4561:
  4806  1FB2  02A9               	subwf	??___flge+1,f
  4807  1FB3                     u4562:
  4808  1FB3  0822               	movf	___flge@ff1+2,w
  4809  1FB4  1C03               	skipc
  4810  1FB5  0F22               	incfsz	___flge@ff1+2,w
  4811  1FB6  2FB8               	goto	u4563
  4812  1FB7  2FB9               	goto	u4564
  4813  1FB8                     u4563:
  4814  1FB8  02AA               	subwf	??___flge+2,f
  4815  1FB9                     u4564:
  4816  1FB9  0823               	movf	___flge@ff1+3,w
  4817  1FBA  1C03               	skipc
  4818  1FBB  0F23               	incfsz	___flge@ff1+3,w
  4819  1FBC  2FBE               	goto	u4565
  4820  1FBD  2FBF               	goto	u4566
  4821  1FBE                     u4565:
  4822  1FBE  02AB               	subwf	??___flge+3,f
  4823  1FBF                     u4566:
  4824  1FBF  082B               	movf	??___flge+3,w
  4825  1FC0  00A3               	movwf	___flge@ff1+3
  4826  1FC1  082A               	movf	??___flge+2,w
  4827  1FC2  00A2               	movwf	___flge@ff1+2
  4828  1FC3  0829               	movf	??___flge+1,w
  4829  1FC4  00A1               	movwf	___flge@ff1+1
  4830  1FC5  0828               	movf	??___flge,w
  4831  1FC6  00A0               	movwf	___flge@ff1
  4832  1FC7                     l4837:
  4833  1FC7  1FA7               	btfss	___flge@ff2+3,7
  4834  1FC8  2FED               	goto	l1174
  4835  1FC9  3000               	movlw	0
  4836  1FCA  00A8               	movwf	??___flge
  4837  1FCB  3000               	movlw	0
  4838  1FCC  00A9               	movwf	??___flge+1
  4839  1FCD  3000               	movlw	0
  4840  1FCE  00AA               	movwf	??___flge+2
  4841  1FCF  3080               	movlw	128
  4842  1FD0  00AB               	movwf	??___flge+3
  4843  1FD1  0824               	movf	___flge@ff2,w
  4844  1FD2  02A8               	subwf	??___flge,f
  4845  1FD3  0825               	movf	___flge@ff2+1,w
  4846  1FD4  1C03               	skipc
  4847  1FD5  0F25               	incfsz	___flge@ff2+1,w
  4848  1FD6  2FD8               	goto	u4581
  4849  1FD7  2FD9               	goto	u4582
  4850  1FD8                     u4581:
  4851  1FD8  02A9               	subwf	??___flge+1,f
  4852  1FD9                     u4582:
  4853  1FD9  0826               	movf	___flge@ff2+2,w
  4854  1FDA  1C03               	skipc
  4855  1FDB  0F26               	incfsz	___flge@ff2+2,w
  4856  1FDC  2FDE               	goto	u4583
  4857  1FDD  2FDF               	goto	u4584
  4858  1FDE                     u4583:
  4859  1FDE  02AA               	subwf	??___flge+2,f
  4860  1FDF                     u4584:
  4861  1FDF  0827               	movf	___flge@ff2+3,w
  4862  1FE0  1C03               	skipc
  4863  1FE1  0F27               	incfsz	___flge@ff2+3,w
  4864  1FE2  2FE4               	goto	u4585
  4865  1FE3  2FE5               	goto	u4586
  4866  1FE4                     u4585:
  4867  1FE4  02AB               	subwf	??___flge+3,f
  4868  1FE5                     u4586:
  4869  1FE5  082B               	movf	??___flge+3,w
  4870  1FE6  00A7               	movwf	___flge@ff2+3
  4871  1FE7  082A               	movf	??___flge+2,w
  4872  1FE8  00A6               	movwf	___flge@ff2+2
  4873  1FE9  0829               	movf	??___flge+1,w
  4874  1FEA  00A5               	movwf	___flge@ff2+1
  4875  1FEB  0828               	movf	??___flge,w
  4876  1FEC  00A4               	movwf	___flge@ff2
  4877  1FED                     l1174:
  4878  1FED  3080               	movlw	128
  4879  1FEE  06A3               	xorwf	___flge@ff1+3,f
  4880  1FEF  3080               	movlw	128
  4881  1FF0  06A7               	xorwf	___flge@ff2+3,f
  4882  1FF1  0827               	movf	___flge@ff2+3,w
  4883  1FF2  0223               	subwf	___flge@ff1+3,w
  4884  1FF3  1D03               	skipz
  4885  1FF4  0008               	return
  4886  1FF5  0826               	movf	___flge@ff2+2,w
  4887  1FF6  0222               	subwf	___flge@ff1+2,w
  4888  1FF7  1D03               	skipz
  4889  1FF8  0008               	return
  4890  1FF9  0825               	movf	___flge@ff2+1,w
  4891  1FFA  0221               	subwf	___flge@ff1+1,w
  4892  1FFB  1D03               	skipz
  4893  1FFC  0008               	return
  4894  1FFD  0824               	movf	___flge@ff2,w
  4895  1FFE  0220               	subwf	___flge@ff1,w
  4896  1FFF  0008               	return
  4897  2000                     __end_of___flge:
  4898                           
  4899                           	psect	text6
  4900  093D                     __ptext6:	
  4901 ;; *************** function ___fldiv *****************
  4902 ;; Defined at:
  4903 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;  a               4   14[BANK0 ] unsigned char 
  4906 ;;  b               4   18[BANK0 ] unsigned char 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  grs             4   34[BANK0 ] unsigned long 
  4909 ;;  rem             4   27[BANK0 ] unsigned long 
  4910 ;;  new_exp         2   32[BANK0 ] int 
  4911 ;;  aexp            1   39[BANK0 ] unsigned char 
  4912 ;;  bexp            1   38[BANK0 ] unsigned char 
  4913 ;;  sign            1   31[BANK0 ] unsigned char 
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  4   14[BANK0 ] unsigned char 
  4916 ;; Registers used:
  4917 ;;		wreg, status,2, status,0, btemp+1
  4918 ;; Tracked objects:
  4919 ;;		On entry : 300/0
  4920 ;;		On exit  : 300/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4923 ;;      Params:         0       8       0       0       0
  4924 ;;      Locals:         0      13       0       0       0
  4925 ;;      Temps:          0       5       0       0       0
  4926 ;;      Totals:         0      26       0       0       0
  4927 ;;Total ram usage:       26 bytes
  4928 ;; Hardware stack levels used: 1
  4929 ;; Hardware stack levels required when called: 1
  4930 ;; This function calls:
  4931 ;;		Nothing
  4932 ;; This function is called by:
  4933 ;;		_MediaPlacaVaccum
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           
  4938                           ;psect for function ___fldiv
  4939  093D                     ___fldiv:
  4940                           
  4941                           ;incstack = 0
  4942                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4943  093D  0835               	movf	___fldiv@b+3,w
  4944  093E  3980               	andlw	128
  4945  093F  00B6               	movwf	??___fldiv
  4946  0940  0836               	movf	??___fldiv,w
  4947  0941  00BF               	movwf	___fldiv@sign
  4948  0942  0835               	movf	___fldiv@b+3,w
  4949  0943  00B6               	movwf	??___fldiv
  4950  0944  0736               	addwf	??___fldiv,w
  4951  0945  00B7               	movwf	??___fldiv+1
  4952  0946  0837               	movf	??___fldiv+1,w
  4953  0947  00C6               	movwf	___fldiv@bexp
  4954  0948  1BB4               	btfsc	___fldiv@b+2,7
  4955  0949  1446               	bsf	___fldiv@bexp,0
  4956  094A  0846               	movf	___fldiv@bexp,w
  4957  094B  1903               	btfsc	3,2
  4958  094C  295B               	goto	l4871
  4959  094D  0A46               	incf	___fldiv@bexp,w
  4960  094E  1D03               	btfss	3,2
  4961  094F  2958               	goto	l4867
  4962  0950  3000               	movlw	0
  4963  0951  00B5               	movwf	___fldiv@b+3
  4964  0952  3000               	movlw	0
  4965  0953  00B4               	movwf	___fldiv@b+2
  4966  0954  3000               	movlw	0
  4967  0955  00B3               	movwf	___fldiv@b+1
  4968  0956  3000               	movlw	0
  4969  0957  00B2               	movwf	___fldiv@b
  4970  0958                     l4867:
  4971  0958  17B4               	bsf	___fldiv@b+2,7
  4972  0959  01B5               	clrf	___fldiv@b+3
  4973  095A  2963               	goto	l4873
  4974  095B                     l4871:
  4975  095B  3000               	movlw	0
  4976  095C  00B5               	movwf	___fldiv@b+3
  4977  095D  3000               	movlw	0
  4978  095E  00B4               	movwf	___fldiv@b+2
  4979  095F  3000               	movlw	0
  4980  0960  00B3               	movwf	___fldiv@b+1
  4981  0961  3000               	movlw	0
  4982  0962  00B2               	movwf	___fldiv@b
  4983  0963                     l4873:
  4984  0963  0831               	movf	___fldiv@a+3,w
  4985  0964  3980               	andlw	128
  4986  0965  00B6               	movwf	??___fldiv
  4987  0966  0836               	movf	??___fldiv,w
  4988  0967  06BF               	xorwf	___fldiv@sign,f
  4989  0968  0831               	movf	___fldiv@a+3,w
  4990  0969  00B6               	movwf	??___fldiv
  4991  096A  0736               	addwf	??___fldiv,w
  4992  096B  00B7               	movwf	??___fldiv+1
  4993  096C  0837               	movf	??___fldiv+1,w
  4994  096D  00C7               	movwf	___fldiv@aexp
  4995  096E  1BB0               	btfsc	___fldiv@a+2,7
  4996  096F  1447               	bsf	___fldiv@aexp,0
  4997  0970  0847               	movf	___fldiv@aexp,w
  4998  0971  1903               	btfsc	3,2
  4999  0972  2981               	goto	l4891
  5000  0973  0A47               	incf	___fldiv@aexp,w
  5001  0974  1D03               	btfss	3,2
  5002  0975  297E               	goto	l4887
  5003  0976  3000               	movlw	0
  5004  0977  00B1               	movwf	___fldiv@a+3
  5005  0978  3000               	movlw	0
  5006  0979  00B0               	movwf	___fldiv@a+2
  5007  097A  3000               	movlw	0
  5008  097B  00AF               	movwf	___fldiv@a+1
  5009  097C  3000               	movlw	0
  5010  097D  00AE               	movwf	___fldiv@a
  5011  097E                     l4887:
  5012  097E  17B0               	bsf	___fldiv@a+2,7
  5013  097F  01B1               	clrf	___fldiv@a+3
  5014  0980  2989               	goto	l1346
  5015  0981                     l4891:
  5016  0981  3000               	movlw	0
  5017  0982  00B1               	movwf	___fldiv@a+3
  5018  0983  3000               	movlw	0
  5019  0984  00B0               	movwf	___fldiv@a+2
  5020  0985  3000               	movlw	0
  5021  0986  00AF               	movwf	___fldiv@a+1
  5022  0987  3000               	movlw	0
  5023  0988  00AE               	movwf	___fldiv@a
  5024  0989                     l1346:
  5025  0989  0831               	movf	___fldiv@a+3,w
  5026  098A  0430               	iorwf	___fldiv@a+2,w
  5027  098B  042F               	iorwf	___fldiv@a+1,w
  5028  098C  042E               	iorwf	___fldiv@a,w
  5029  098D  1D03               	skipz
  5030  098E  29A8               	goto	l4901
  5031  098F  3000               	movlw	0
  5032  0990  00B5               	movwf	___fldiv@b+3
  5033  0991  3000               	movlw	0
  5034  0992  00B4               	movwf	___fldiv@b+2
  5035  0993  3000               	movlw	0
  5036  0994  00B3               	movwf	___fldiv@b+1
  5037  0995  3000               	movlw	0
  5038  0996  00B2               	movwf	___fldiv@b
  5039  0997  3080               	movlw	128
  5040  0998  04B4               	iorwf	___fldiv@b+2,f
  5041  0999  307F               	movlw	127
  5042  099A  04B5               	iorwf	___fldiv@b+3,f
  5043  099B                     L7:
  5044  099B  083F               	movf	___fldiv@sign,w
  5045  099C  00B6               	movwf	??___fldiv
  5046  099D  0836               	movf	??___fldiv,w
  5047  099E  04B5               	iorwf	___fldiv@b+3,f
  5048  099F  0835               	movf	___fldiv@b+3,w
  5049  09A0  00B1               	movwf	?___fldiv+3
  5050  09A1  0834               	movf	___fldiv@b+2,w
  5051  09A2  00B0               	movwf	?___fldiv+2
  5052  09A3  0833               	movf	___fldiv@b+1,w
  5053  09A4  00AF               	movwf	?___fldiv+1
  5054  09A5  0832               	movf	___fldiv@b,w
  5055  09A6  00AE               	movwf	?___fldiv
  5056  09A7  0008               	return
  5057  09A8                     l4901:
  5058  09A8  0846               	movf	___fldiv@bexp,w
  5059  09A9  1D03               	btfss	3,2
  5060  09AA  29B4               	goto	l4907
  5061  09AB  3000               	movlw	0
  5062  09AC  00B1               	movwf	?___fldiv+3
  5063  09AD  3000               	movlw	0
  5064  09AE  00B0               	movwf	?___fldiv+2
  5065  09AF  3000               	movlw	0
  5066  09B0  00AF               	movwf	?___fldiv+1
  5067  09B1  3000               	movlw	0
  5068  09B2  00AE               	movwf	?___fldiv
  5069  09B3  0008               	return
  5070  09B4                     l4907:
  5071  09B4  0846               	movf	___fldiv@bexp,w
  5072  09B5  00B6               	movwf	??___fldiv
  5073  09B6  01B7               	clrf	??___fldiv+1
  5074  09B7  0837               	movf	??___fldiv+1,w
  5075  09B8  00B9               	movwf	??___fldiv+3
  5076  09B9  0847               	movf	___fldiv@aexp,w
  5077  09BA  0236               	subwf	??___fldiv,w
  5078  09BB  00B8               	movwf	??___fldiv+2
  5079  09BC  1C03               	skipc
  5080  09BD  03B9               	decf	??___fldiv+3,f
  5081  09BE  0838               	movf	??___fldiv+2,w
  5082  09BF  3E7F               	addlw	127
  5083  09C0  00C0               	movwf	___fldiv@new_exp
  5084  09C1  0839               	movf	??___fldiv+3,w
  5085  09C2  1803               	skipnc
  5086  09C3  3E01               	addlw	1
  5087  09C4  3E00               	addlw	0
  5088  09C5  00C1               	movwf	___fldiv@new_exp+1
  5089  09C6  0835               	movf	___fldiv@b+3,w
  5090  09C7  00BE               	movwf	___fldiv@rem+3
  5091  09C8  0834               	movf	___fldiv@b+2,w
  5092  09C9  00BD               	movwf	___fldiv@rem+2
  5093  09CA  0833               	movf	___fldiv@b+1,w
  5094  09CB  00BC               	movwf	___fldiv@rem+1
  5095  09CC  0832               	movf	___fldiv@b,w
  5096  09CD  00BB               	movwf	___fldiv@rem
  5097  09CE  3000               	movlw	0
  5098  09CF  00B5               	movwf	___fldiv@b+3
  5099  09D0  3000               	movlw	0
  5100  09D1  00B4               	movwf	___fldiv@b+2
  5101  09D2  3000               	movlw	0
  5102  09D3  00B3               	movwf	___fldiv@b+1
  5103  09D4  3000               	movlw	0
  5104  09D5  00B2               	movwf	___fldiv@b
  5105  09D6  3000               	movlw	0
  5106  09D7  00C5               	movwf	___fldiv@grs+3
  5107  09D8  3000               	movlw	0
  5108  09D9  00C4               	movwf	___fldiv@grs+2
  5109  09DA  3000               	movlw	0
  5110  09DB  00C3               	movwf	___fldiv@grs+1
  5111  09DC  3000               	movlw	0
  5112  09DD  00C2               	movwf	___fldiv@grs
  5113  09DE  01C7               	clrf	___fldiv@aexp
  5114  09DF                     l4935:
  5115  09DF  301A               	movlw	26
  5116  09E0  0247               	subwf	___fldiv@aexp,w
  5117  09E1  1803               	btfsc	3,0
  5118  09E2  2A27               	goto	l4937
  5119  09E3  0847               	movf	___fldiv@aexp,w
  5120  09E4  1903               	btfsc	3,2
  5121  09E5  2A03               	goto	l4927
  5122  09E6  3001               	movlw	1
  5123  09E7  00B6               	movwf	??___fldiv
  5124  09E8                     u4695:
  5125  09E8  1003               	clrc
  5126  09E9  0DBB               	rlf	___fldiv@rem,f
  5127  09EA  0DBC               	rlf	___fldiv@rem+1,f
  5128  09EB  0DBD               	rlf	___fldiv@rem+2,f
  5129  09EC  0DBE               	rlf	___fldiv@rem+3,f
  5130  09ED  0BB6               	decfsz	??___fldiv,f
  5131  09EE  29E8               	goto	u4695
  5132  09EF  3001               	movlw	1
  5133  09F0  00B6               	movwf	??___fldiv
  5134  09F1                     u4705:
  5135  09F1  1003               	clrc
  5136  09F2  0DB2               	rlf	___fldiv@b,f
  5137  09F3  0DB3               	rlf	___fldiv@b+1,f
  5138  09F4  0DB4               	rlf	___fldiv@b+2,f
  5139  09F5  0DB5               	rlf	___fldiv@b+3,f
  5140  09F6  0BB6               	decfsz	??___fldiv,f
  5141  09F7  29F1               	goto	u4705
  5142  09F8  1BC5               	btfsc	___fldiv@grs+3,7
  5143  09F9  1432               	bsf	___fldiv@b,0
  5144  09FA  3001               	movlw	1
  5145  09FB  00B6               	movwf	??___fldiv
  5146  09FC                     u4725:
  5147  09FC  1003               	clrc
  5148  09FD  0DC2               	rlf	___fldiv@grs,f
  5149  09FE  0DC3               	rlf	___fldiv@grs+1,f
  5150  09FF  0DC4               	rlf	___fldiv@grs+2,f
  5151  0A00  0DC5               	rlf	___fldiv@grs+3,f
  5152  0A01  0BB6               	decfsz	??___fldiv,f
  5153  0A02  29FC               	goto	u4725
  5154  0A03                     l4927:
  5155  0A03  0831               	movf	___fldiv@a+3,w
  5156  0A04  023E               	subwf	___fldiv@rem+3,w
  5157  0A05  1D03               	skipz
  5158  0A06  2A11               	goto	u4735
  5159  0A07  0830               	movf	___fldiv@a+2,w
  5160  0A08  023D               	subwf	___fldiv@rem+2,w
  5161  0A09  1D03               	skipz
  5162  0A0A  2A11               	goto	u4735
  5163  0A0B  082F               	movf	___fldiv@a+1,w
  5164  0A0C  023C               	subwf	___fldiv@rem+1,w
  5165  0A0D  1D03               	skipz
  5166  0A0E  2A11               	goto	u4735
  5167  0A0F  082E               	movf	___fldiv@a,w
  5168  0A10  023B               	subwf	___fldiv@rem,w
  5169  0A11                     u4735:
  5170  0A11  1C03               	skipc
  5171  0A12  2A22               	goto	l4933
  5172  0A13  1745               	bsf	___fldiv@grs+3,6
  5173  0A14  082E               	movf	___fldiv@a,w
  5174  0A15  02BB               	subwf	___fldiv@rem,f
  5175  0A16  082F               	movf	___fldiv@a+1,w
  5176  0A17  1C03               	skipc
  5177  0A18  0F2F               	incfsz	___fldiv@a+1,w
  5178  0A19  02BC               	subwf	___fldiv@rem+1,f
  5179  0A1A  0830               	movf	___fldiv@a+2,w
  5180  0A1B  1C03               	skipc
  5181  0A1C  0F30               	incfsz	___fldiv@a+2,w
  5182  0A1D  02BD               	subwf	___fldiv@rem+2,f
  5183  0A1E  0831               	movf	___fldiv@a+3,w
  5184  0A1F  1C03               	skipc
  5185  0A20  0F31               	incfsz	___fldiv@a+3,w
  5186  0A21  02BE               	subwf	___fldiv@rem+3,f
  5187  0A22                     l4933:
  5188  0A22  3001               	movlw	1
  5189  0A23  00B6               	movwf	??___fldiv
  5190  0A24  0836               	movf	??___fldiv,w
  5191  0A25  07C7               	addwf	___fldiv@aexp,f
  5192  0A26  29DF               	goto	l4935
  5193  0A27                     l4937:
  5194  0A27  083E               	movf	___fldiv@rem+3,w
  5195  0A28  043D               	iorwf	___fldiv@rem+2,w
  5196  0A29  043C               	iorwf	___fldiv@rem+1,w
  5197  0A2A  043B               	iorwf	___fldiv@rem,w
  5198  0A2B  1D03               	btfss	3,2
  5199  0A2C  1442               	bsf	___fldiv@grs,0
  5200  0A2D                     l4951:
  5201  0A2D  1BB4               	btfsc	___fldiv@b+2,7
  5202  0A2E  2A4A               	goto	l4953
  5203  0A2F  3001               	movlw	1
  5204  0A30  00B6               	movwf	??___fldiv
  5205  0A31                     u4765:
  5206  0A31  1003               	clrc
  5207  0A32  0DB2               	rlf	___fldiv@b,f
  5208  0A33  0DB3               	rlf	___fldiv@b+1,f
  5209  0A34  0DB4               	rlf	___fldiv@b+2,f
  5210  0A35  0DB5               	rlf	___fldiv@b+3,f
  5211  0A36  0BB6               	decfsz	??___fldiv,f
  5212  0A37  2A31               	goto	u4765
  5213  0A38  1BC5               	btfsc	___fldiv@grs+3,7
  5214  0A39  1432               	bsf	___fldiv@b,0
  5215  0A3A  3001               	movlw	1
  5216  0A3B  00B6               	movwf	??___fldiv
  5217  0A3C                     u4785:
  5218  0A3C  1003               	clrc
  5219  0A3D  0DC2               	rlf	___fldiv@grs,f
  5220  0A3E  0DC3               	rlf	___fldiv@grs+1,f
  5221  0A3F  0DC4               	rlf	___fldiv@grs+2,f
  5222  0A40  0DC5               	rlf	___fldiv@grs+3,f
  5223  0A41  0BB6               	decfsz	??___fldiv,f
  5224  0A42  2A3C               	goto	u4785
  5225  0A43  30FF               	movlw	255
  5226  0A44  07C0               	addwf	___fldiv@new_exp,f
  5227  0A45  1803               	skipnc
  5228  0A46  0AC1               	incf	___fldiv@new_exp+1,f
  5229  0A47  30FF               	movlw	255
  5230  0A48  07C1               	addwf	___fldiv@new_exp+1,f
  5231  0A49  2A2D               	goto	l4951
  5232  0A4A                     l4953:
  5233  0A4A  01C7               	clrf	___fldiv@aexp
  5234  0A4B  1FC5               	btfss	___fldiv@grs+3,7
  5235  0A4C  2A63               	goto	l4963
  5236  0A4D  30FF               	movlw	255
  5237  0A4E  0542               	andwf	___fldiv@grs,w
  5238  0A4F  00B6               	movwf	??___fldiv
  5239  0A50  30FF               	movlw	255
  5240  0A51  0543               	andwf	___fldiv@grs+1,w
  5241  0A52  00B7               	movwf	??___fldiv+1
  5242  0A53  30FF               	movlw	255
  5243  0A54  0544               	andwf	___fldiv@grs+2,w
  5244  0A55  00B8               	movwf	??___fldiv+2
  5245  0A56  307F               	movlw	127
  5246  0A57  0545               	andwf	___fldiv@grs+3,w
  5247  0A58  00B9               	movwf	??___fldiv+3
  5248  0A59  0839               	movf	??___fldiv+3,w
  5249  0A5A  0438               	iorwf	??___fldiv+2,w
  5250  0A5B  0437               	iorwf	??___fldiv+1,w
  5251  0A5C  0436               	iorwf	??___fldiv,w
  5252  0A5D  1903               	skipnz
  5253  0A5E  1832               	btfsc	___fldiv@b,0
  5254  0A5F  2A61               	goto	l4959
  5255  0A60  2A63               	goto	l4963
  5256  0A61                     l4959:
  5257  0A61  01C7               	clrf	___fldiv@aexp
  5258  0A62  0AC7               	incf	___fldiv@aexp,f
  5259  0A63                     l4963:
  5260  0A63  0847               	movf	___fldiv@aexp,w
  5261  0A64  1903               	btfsc	3,2
  5262  0A65  2A95               	goto	l4973
  5263  0A66  3001               	movlw	1
  5264  0A67  07B2               	addwf	___fldiv@b,f
  5265  0A68  3000               	movlw	0
  5266  0A69  1803               	skipnc
  5267  0A6A  3001               	movlw	1
  5268  0A6B  07B3               	addwf	___fldiv@b+1,f
  5269  0A6C  3000               	movlw	0
  5270  0A6D  1803               	skipnc
  5271  0A6E  3001               	movlw	1
  5272  0A6F  07B4               	addwf	___fldiv@b+2,f
  5273  0A70  3000               	movlw	0
  5274  0A71  1803               	skipnc
  5275  0A72  3001               	movlw	1
  5276  0A73  07B5               	addwf	___fldiv@b+3,f
  5277  0A74  1C35               	btfss	___fldiv@b+3,0
  5278  0A75  2A95               	goto	l4973
  5279  0A76  0832               	movf	___fldiv@b,w
  5280  0A77  00B6               	movwf	??___fldiv
  5281  0A78  0833               	movf	___fldiv@b+1,w
  5282  0A79  00B7               	movwf	??___fldiv+1
  5283  0A7A  0834               	movf	___fldiv@b+2,w
  5284  0A7B  00B8               	movwf	??___fldiv+2
  5285  0A7C  0835               	movf	___fldiv@b+3,w
  5286  0A7D  00B9               	movwf	??___fldiv+3
  5287  0A7E  3001               	movlw	1
  5288  0A7F  00BA               	movwf	??___fldiv+4
  5289  0A80                     u4855:
  5290  0A80  0D39               	rlf	??___fldiv+3,w
  5291  0A81  0CB9               	rrf	??___fldiv+3,f
  5292  0A82  0CB8               	rrf	??___fldiv+2,f
  5293  0A83  0CB7               	rrf	??___fldiv+1,f
  5294  0A84  0CB6               	rrf	??___fldiv,f
  5295  0A85  0BBA               	decfsz	??___fldiv+4,f
  5296  0A86  2A80               	goto	u4855
  5297  0A87  0839               	movf	??___fldiv+3,w
  5298  0A88  00B5               	movwf	___fldiv@b+3
  5299  0A89  0838               	movf	??___fldiv+2,w
  5300  0A8A  00B4               	movwf	___fldiv@b+2
  5301  0A8B  0837               	movf	??___fldiv+1,w
  5302  0A8C  00B3               	movwf	___fldiv@b+1
  5303  0A8D  0836               	movf	??___fldiv,w
  5304  0A8E  00B2               	movwf	___fldiv@b
  5305  0A8F  3001               	movlw	1
  5306  0A90  07C0               	addwf	___fldiv@new_exp,f
  5307  0A91  1803               	skipnc
  5308  0A92  0AC1               	incf	___fldiv@new_exp+1,f
  5309  0A93  3000               	movlw	0
  5310  0A94  07C1               	addwf	___fldiv@new_exp+1,f
  5311  0A95                     l4973:
  5312  0A95  0841               	movf	___fldiv@new_exp+1,w
  5313  0A96  3A80               	xorlw	128
  5314  0A97  00FF               	movwf	127
  5315  0A98  3080               	movlw	128
  5316  0A99  027F               	subwf	127,w
  5317  0A9A  1D03               	skipz
  5318  0A9B  2A9E               	goto	u4865
  5319  0A9C  30FF               	movlw	255
  5320  0A9D  0240               	subwf	___fldiv@new_exp,w
  5321  0A9E                     u4865:
  5322  0A9E  1C03               	skipc
  5323  0A9F  2AAE               	goto	l4977
  5324  0AA0  30FF               	movlw	255
  5325  0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  5326  0AA2  1303               	bcf	3,6	;RP1=0, select bank0
  5327  0AA3  00C0               	movwf	___fldiv@new_exp
  5328  0AA4  3000               	movlw	0
  5329  0AA5  00C1               	movwf	___fldiv@new_exp+1
  5330  0AA6  3000               	movlw	0
  5331  0AA7  00B5               	movwf	___fldiv@b+3
  5332  0AA8  3000               	movlw	0
  5333  0AA9  00B4               	movwf	___fldiv@b+2
  5334  0AAA  3000               	movlw	0
  5335  0AAB  00B3               	movwf	___fldiv@b+1
  5336  0AAC  3000               	movlw	0
  5337  0AAD  00B2               	movwf	___fldiv@b
  5338  0AAE                     l4977:
  5339  0AAE  1283               	bcf	3,5	;RP0=0, select bank0
  5340  0AAF  1303               	bcf	3,6	;RP1=0, select bank0
  5341  0AB0  0841               	movf	___fldiv@new_exp+1,w
  5342  0AB1  3A80               	xorlw	128
  5343  0AB2  00FF               	movwf	127
  5344  0AB3  3080               	movlw	128
  5345  0AB4  027F               	subwf	127,w
  5346  0AB5  1D03               	skipz
  5347  0AB6  2AB9               	goto	u4875
  5348  0AB7  3001               	movlw	1
  5349  0AB8  0240               	subwf	___fldiv@new_exp,w
  5350  0AB9                     u4875:
  5351  0AB9  1803               	skipnc
  5352  0ABA  2AC8               	goto	l1368
  5353  0ABB  1283               	bcf	3,5	;RP0=0, select bank0
  5354  0ABC  1303               	bcf	3,6	;RP1=0, select bank0
  5355  0ABD  01C0               	clrf	___fldiv@new_exp
  5356  0ABE  01C1               	clrf	___fldiv@new_exp+1
  5357  0ABF  3000               	movlw	0
  5358  0AC0  00B5               	movwf	___fldiv@b+3
  5359  0AC1  3000               	movlw	0
  5360  0AC2  00B4               	movwf	___fldiv@b+2
  5361  0AC3  3000               	movlw	0
  5362  0AC4  00B3               	movwf	___fldiv@b+1
  5363  0AC5  3000               	movlw	0
  5364  0AC6  00B2               	movwf	___fldiv@b
  5365  0AC7  01BF               	clrf	___fldiv@sign
  5366  0AC8                     l1368:
  5367  0AC8  1283               	bcf	3,5	;RP0=0, select bank0
  5368  0AC9  1303               	bcf	3,6	;RP1=0, select bank0
  5369  0ACA  0840               	movf	___fldiv@new_exp,w
  5370  0ACB  00B6               	movwf	??___fldiv
  5371  0ACC  0836               	movf	??___fldiv,w
  5372  0ACD  00C6               	movwf	___fldiv@bexp
  5373  0ACE  1C46               	btfss	___fldiv@bexp,0
  5374  0ACF  2AD2               	goto	l4989
  5375  0AD0  17B4               	bsf	___fldiv@b+2,7
  5376  0AD1  2AD6               	goto	l1370
  5377  0AD2                     l4989:
  5378  0AD2  307F               	movlw	127
  5379  0AD3  00B6               	movwf	??___fldiv
  5380  0AD4  0836               	movf	??___fldiv,w
  5381  0AD5  05B4               	andwf	___fldiv@b+2,f
  5382  0AD6                     l1370:
  5383  0AD6  0846               	movf	___fldiv@bexp,w
  5384  0AD7  00B6               	movwf	??___fldiv
  5385  0AD8  1003               	clrc
  5386  0AD9  0C36               	rrf	??___fldiv,w
  5387  0ADA  00B7               	movwf	??___fldiv+1
  5388  0ADB  0837               	movf	??___fldiv+1,w
  5389  0ADC  00B5               	movwf	___fldiv@b+3
  5390  0ADD  299B               	goto	L7
  5391  0ADE                     __end_of___fldiv:
  5392                           
  5393                           	psect	text7
  5394  194B                     __ptext7:	
  5395 ;; *************** function _Package_Usart_is_for_me *****************
  5396 ;; Defined at:
  5397 ;;		line 8 in file "protocolo.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;		None
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;  retorno         1    0[BANK0 ] unsigned char 
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  1    wreg      unsigned char 
  5404 ;; Registers used:
  5405 ;;		wreg, status,2, status,0
  5406 ;; Tracked objects:
  5407 ;;		On entry : 300/100
  5408 ;;		On exit  : 300/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5411 ;;      Params:         0       0       0       0       0
  5412 ;;      Locals:         0       1       0       0       0
  5413 ;;      Temps:          0       0       0       0       0
  5414 ;;      Totals:         0       1       0       0       0
  5415 ;;Total ram usage:        1 bytes
  5416 ;; Hardware stack levels used: 1
  5417 ;; Hardware stack levels required when called: 1
  5418 ;; This function calls:
  5419 ;;		Nothing
  5420 ;; This function is called by:
  5421 ;;		_MediaPlacaVaccum
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function _Package_Usart_is_for_me
  5427  194B                     _Package_Usart_is_for_me:
  5428                           
  5429                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5430                           
  5431                           ;incstack = 0
  5432                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5433  194B  1C64               	btfss	_generic_status^(0+128),0
  5434  194C  295F               	goto	l4795
  5435                           
  5436                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5437  194D  1283               	bcf	3,5	;RP0=0, select bank2
  5438  194E  1703               	bsf	3,6	;RP1=1, select bank2
  5439  194F  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5440  1950  1683               	bsf	3,5	;RP0=1, select bank1
  5441  1951  1303               	bcf	3,6	;RP1=0, select bank1
  5442  1952  0661               	xorwf	_Board_Number^(0+128),w
  5443  1953  1903               	skipnz
  5444  1954  295A               	goto	l817
  5445  1955  1283               	bcf	3,5	;RP0=0, select bank2
  5446  1956  1703               	bsf	3,6	;RP1=1, select bank2
  5447  1957  0A13               	incf	(_usart_buffer^(0+256)+3),w	;volatile
  5448  1958  1D03               	btfss	3,2
  5449  1959  295F               	goto	l4795
  5450  195A                     l817:
  5451                           
  5452                           ;protocolo.c: 13:             retorno=1;
  5453  195A  1283               	bcf	3,5	;RP0=0, select bank0
  5454  195B  1303               	bcf	3,6	;RP1=0, select bank0
  5455  195C  01A0               	clrf	Package_Usart_is_for_me@retorno
  5456  195D  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5457  195E  2962               	goto	l4799
  5458  195F                     l4795:
  5459                           
  5460                           ;protocolo.c: 15:             retorno=0;
  5461  195F  1283               	bcf	3,5	;RP0=0, select bank0
  5462  1960  1303               	bcf	3,6	;RP1=0, select bank0
  5463  1961  01A0               	clrf	Package_Usart_is_for_me@retorno
  5464  1962                     l4799:
  5465                           
  5466                           ;protocolo.c: 21:      return retorno;
  5467  1962  0820               	movf	Package_Usart_is_for_me@retorno,w
  5468  1963  0008               	return
  5469  1964                     __end_of_Package_Usart_is_for_me:
  5470                           
  5471                           	psect	text8
  5472  1DD1                     __ptext8:	
  5473 ;; *************** function _ADC_Media_10bits *****************
  5474 ;; Defined at:
  5475 ;;		line 20 in file "adc.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  canal           1    wreg     unsigned char 
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;  canal           1   19[BANK0 ] unsigned char 
  5480 ;;  value           2   20[BANK0 ] unsigned int 
  5481 ;;  i               1   22[BANK0 ] unsigned char 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  4   14[BANK0 ] float 
  5484 ;; Registers used:
  5485 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5486 ;; Tracked objects:
  5487 ;;		On entry : 300/100
  5488 ;;		On exit  : 300/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5491 ;;      Params:         0       4       0       0       0
  5492 ;;      Locals:         0       4       0       0       0
  5493 ;;      Temps:          0       1       0       0       0
  5494 ;;      Totals:         0       9       0       0       0
  5495 ;;Total ram usage:        9 bytes
  5496 ;; Hardware stack levels used: 1
  5497 ;; Hardware stack levels required when called: 2
  5498 ;; This function calls:
  5499 ;;		___lwdiv
  5500 ;;		___xxtofl
  5501 ;;		_captura
  5502 ;;		_my_delay_ms
  5503 ;; This function is called by:
  5504 ;;		_MediaPlacaVaccum
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           
  5509                           ;psect for function _ADC_Media_10bits
  5510  1DD1                     _ADC_Media_10bits:
  5511                           
  5512                           ;incstack = 0
  5513                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5514                           ;ADC_Media_10bits@canal stored from wreg
  5515  1DD1  1283               	bcf	3,5	;RP0=0, select bank0
  5516  1DD2  00B3               	movwf	ADC_Media_10bits@canal
  5517                           
  5518                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5519  1DD3  0833               	movf	ADC_Media_10bits@canal,w
  5520  1DD4  00B2               	movwf	??_ADC_Media_10bits
  5521  1DD5  0DB2               	rlf	??_ADC_Media_10bits,f
  5522  1DD6  0DB2               	rlf	??_ADC_Media_10bits,f
  5523  1DD7  081F               	movf	31,w	;volatile
  5524  1DD8  0632               	xorwf	??_ADC_Media_10bits,w
  5525  1DD9  39C3               	andlw	-61
  5526  1DDA  0632               	xorwf	??_ADC_Media_10bits,w
  5527  1DDB  009F               	movwf	31	;volatile
  5528                           
  5529                           ;adc.c: 24:       my_delay_ms(1);
  5530  1DDC  3000               	movlw	0
  5531  1DDD  00A3               	movwf	my_delay_ms@time+3
  5532  1DDE  3000               	movlw	0
  5533  1DDF  00A2               	movwf	my_delay_ms@time+2
  5534  1DE0  3000               	movlw	0
  5535  1DE1  00A1               	movwf	my_delay_ms@time+1
  5536  1DE2  3001               	movlw	1
  5537  1DE3  00A0               	movwf	my_delay_ms@time
  5538  1DE4  160A  158A  2411  160A  158A  	fcall	_my_delay_ms
  5539                           
  5540                           ;adc.c: 26:       value=0;
  5541  1DE9  01B4               	clrf	ADC_Media_10bits@value
  5542  1DEA  01B5               	clrf	ADC_Media_10bits@value+1
  5543                           
  5544                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5545  1DEB  01B6               	clrf	ADC_Media_10bits@i
  5546  1DEC  0AB6               	incf	ADC_Media_10bits@i,f
  5547  1DED                     l4777:
  5548                           
  5549                           ;adc.c: 28:           value+=captura();
  5550  1DED  160A  158A  2086  160A  158A  	fcall	_captura
  5551  1DF2  0820               	movf	?_captura,w
  5552  1DF3  07B4               	addwf	ADC_Media_10bits@value,f
  5553  1DF4  1803               	skipnc
  5554  1DF5  0AB5               	incf	ADC_Media_10bits@value+1,f
  5555  1DF6  0821               	movf	?_captura+1,w
  5556  1DF7  07B5               	addwf	ADC_Media_10bits@value+1,f
  5557  1DF8  3001               	movlw	1
  5558  1DF9  00B2               	movwf	??_ADC_Media_10bits
  5559  1DFA  0832               	movf	??_ADC_Media_10bits,w
  5560  1DFB  07B6               	addwf	ADC_Media_10bits@i,f
  5561  1DFC  3033               	movlw	51
  5562  1DFD  0236               	subwf	ADC_Media_10bits@i,w
  5563  1DFE  1C03               	skipc
  5564  1DFF  2DED               	goto	l4777
  5565                           
  5566                           ;adc.c: 29:       value/=(i-1);
  5567  1E00  0836               	movf	ADC_Media_10bits@i,w
  5568  1E01  3EFF               	addlw	255
  5569  1E02  00A0               	movwf	___lwdiv@divisor
  5570  1E03  30FF               	movlw	255
  5571  1E04  1803               	skipnc
  5572  1E05  3000               	movlw	0
  5573  1E06  00A1               	movwf	___lwdiv@divisor+1
  5574  1E07  0835               	movf	ADC_Media_10bits@value+1,w
  5575  1E08  00A3               	movwf	___lwdiv@dividend+1
  5576  1E09  0834               	movf	ADC_Media_10bits@value,w
  5577  1E0A  00A2               	movwf	___lwdiv@dividend
  5578  1E0B  160A  158A  24BC  160A  158A  	fcall	___lwdiv
  5579  1E10  0821               	movf	?___lwdiv+1,w
  5580  1E11  00B5               	movwf	ADC_Media_10bits@value+1
  5581  1E12  0820               	movf	?___lwdiv,w
  5582  1E13  00B4               	movwf	ADC_Media_10bits@value
  5583                           
  5584                           ;adc.c: 30:       return value;
  5585  1E14  0834               	movf	ADC_Media_10bits@value,w
  5586  1E15  00A0               	movwf	___xxtofl@val
  5587  1E16  0835               	movf	ADC_Media_10bits@value+1,w
  5588  1E17  00A1               	movwf	___xxtofl@val+1
  5589  1E18  01A2               	clrf	___xxtofl@val+2
  5590  1E19  01A3               	clrf	___xxtofl@val+3
  5591  1E1A  3000               	movlw	0
  5592  1E1B  120A  118A  274B   	fcall	___xxtofl
  5593  1E1E  0823               	movf	?___xxtofl+3,w
  5594  1E1F  00B1               	movwf	?_ADC_Media_10bits+3
  5595  1E20  0822               	movf	?___xxtofl+2,w
  5596  1E21  00B0               	movwf	?_ADC_Media_10bits+2
  5597  1E22  0821               	movf	?___xxtofl+1,w
  5598  1E23  00AF               	movwf	?_ADC_Media_10bits+1
  5599  1E24  0820               	movf	?___xxtofl,w
  5600  1E25  00AE               	movwf	?_ADC_Media_10bits
  5601  1E26  0008               	return
  5602  1E27                     __end_of_ADC_Media_10bits:
  5603                           
  5604                           	psect	text9
  5605  1C11                     __ptext9:	
  5606 ;; *************** function _my_delay_ms *****************
  5607 ;; Defined at:
  5608 ;;		line 5 in file "my_delay.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  time            4    0[BANK0 ] long 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  i               4    6[BANK0 ] long 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      void 
  5615 ;; Registers used:
  5616 ;;		wreg, btemp+1
  5617 ;; Tracked objects:
  5618 ;;		On entry : 300/0
  5619 ;;		On exit  : 300/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5622 ;;      Params:         0       4       0       0       0
  5623 ;;      Locals:         0       4       0       0       0
  5624 ;;      Temps:          0       2       0       0       0
  5625 ;;      Totals:         0      10       0       0       0
  5626 ;;Total ram usage:       10 bytes
  5627 ;; Hardware stack levels used: 1
  5628 ;; Hardware stack levels required when called: 1
  5629 ;; This function calls:
  5630 ;;		Nothing
  5631 ;; This function is called by:
  5632 ;;		_MediaPlacaVaccum
  5633 ;;		_ADC_Media_10bits
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           
  5638                           ;psect for function _my_delay_ms
  5639  1C11                     _my_delay_ms:
  5640                           
  5641                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5642                           
  5643                           ;incstack = 0
  5644                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5645  1C11  3000               	movlw	0
  5646  1C12  00A9               	movwf	my_delay_ms@i+3
  5647  1C13  3000               	movlw	0
  5648  1C14  00A8               	movwf	my_delay_ms@i+2
  5649  1C15  3000               	movlw	0
  5650  1C16  00A7               	movwf	my_delay_ms@i+1
  5651  1C17  3000               	movlw	0
  5652  1C18  00A6               	movwf	my_delay_ms@i
  5653  1C19                     l3887:
  5654  1C19  0829               	movf	my_delay_ms@i+3,w
  5655  1C1A  3A80               	xorlw	128
  5656  1C1B  00FF               	movwf	127
  5657  1C1C  0823               	movf	my_delay_ms@time+3,w
  5658  1C1D  3A80               	xorlw	128
  5659  1C1E  027F               	subwf	127,w
  5660  1C1F  1D03               	skipz
  5661  1C20  2C2B               	goto	u2993
  5662  1C21  0822               	movf	my_delay_ms@time+2,w
  5663  1C22  0228               	subwf	my_delay_ms@i+2,w
  5664  1C23  1D03               	skipz
  5665  1C24  2C2B               	goto	u2993
  5666  1C25  0821               	movf	my_delay_ms@time+1,w
  5667  1C26  0227               	subwf	my_delay_ms@i+1,w
  5668  1C27  1D03               	skipz
  5669  1C28  2C2B               	goto	u2993
  5670  1C29  0820               	movf	my_delay_ms@time,w
  5671  1C2A  0226               	subwf	my_delay_ms@i,w
  5672  1C2B                     u2993:
  5673  1C2B  1803               	btfsc	3,0
  5674  1C2C  0008               	return
  5675                           
  5676                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5677  1C2D  3003               	movlw	3
  5678  1C2E  1283               	bcf	3,5	;RP0=0, select bank0
  5679  1C2F  1303               	bcf	3,6	;RP1=0, select bank0
  5680  1C30  00A5               	movwf	??_my_delay_ms+1
  5681  1C31  3097               	movlw	151
  5682  1C32  00A4               	movwf	??_my_delay_ms
  5683  1C33                     u5527:
  5684  1C33  0BA4               	decfsz	??_my_delay_ms,f
  5685  1C34  2C33               	goto	u5527
  5686  1C35  0BA5               	decfsz	??_my_delay_ms+1,f
  5687  1C36  2C33               	goto	u5527
  5688                           
  5689                           ;my_delay.c: 10:             }
  5690  1C37  3001               	movlw	1
  5691  1C38  1283               	bcf	3,5	;RP0=0, select bank0
  5692  1C39  1303               	bcf	3,6	;RP1=0, select bank0
  5693  1C3A  07A6               	addwf	my_delay_ms@i,f
  5694  1C3B  3000               	movlw	0
  5695  1C3C  1803               	skipnc
  5696  1C3D  3001               	movlw	1
  5697  1C3E  07A7               	addwf	my_delay_ms@i+1,f
  5698  1C3F  3000               	movlw	0
  5699  1C40  1803               	skipnc
  5700  1C41  3001               	movlw	1
  5701  1C42  07A8               	addwf	my_delay_ms@i+2,f
  5702  1C43  3000               	movlw	0
  5703  1C44  1803               	skipnc
  5704  1C45  3001               	movlw	1
  5705  1C46  07A9               	addwf	my_delay_ms@i+3,f
  5706  1C47  2C19               	goto	l3887
  5707  1C48                     __end_of_my_delay_ms:
  5708                           
  5709                           	psect	text10
  5710  1886                     __ptext10:	
  5711 ;; *************** function _captura *****************
  5712 ;; Defined at:
  5713 ;;		line 140 in file "adc.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;		None
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  2    0[BANK0 ] unsigned int 
  5720 ;; Registers used:
  5721 ;;		wreg
  5722 ;; Tracked objects:
  5723 ;;		On entry : 300/0
  5724 ;;		On exit  : 300/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5727 ;;      Params:         0       2       0       0       0
  5728 ;;      Locals:         0       0       0       0       0
  5729 ;;      Temps:          0       0       0       0       0
  5730 ;;      Totals:         0       2       0       0       0
  5731 ;;Total ram usage:        2 bytes
  5732 ;; Hardware stack levels used: 1
  5733 ;; Hardware stack levels required when called: 1
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_ADC_Media_10bits
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           
  5742                           ;psect for function _captura
  5743  1886                     _captura:
  5744                           
  5745                           ;adc.c: 141:     ADCON0bits.GO=1;
  5746                           
  5747                           ;incstack = 0
  5748                           ; Regs used in _captura: [wreg]
  5749  1886  149F               	bsf	31,1	;volatile
  5750  1887                     l495:	
  5751                           ;adc.c: 145:           }
  5752                           
  5753                           
  5754                           ;adc.c: 142:     while(ADCON0bits.GO)
  5755  1887  189F               	btfsc	31,1	;volatile
  5756  1888  2887               	goto	l495
  5757                           
  5758                           ;adc.c: 146:     return ((ADRESH<<8)+ADRESL);
  5759  1889  081E               	movf	30,w	;volatile
  5760  188A  00A1               	movwf	?_captura+1
  5761  188B  1683               	bsf	3,5	;RP0=1, select bank1
  5762  188C  081E               	movf	30,w	;volatile
  5763  188D  1283               	bcf	3,5	;RP0=0, select bank0
  5764  188E  00A0               	movwf	?_captura
  5765  188F  0008               	return
  5766  1890                     __end_of_captura:
  5767                           
  5768                           	psect	text11
  5769  074B                     __ptext11:	
  5770 ;; *************** function ___xxtofl *****************
  5771 ;; Defined at:
  5772 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  sign            1    wreg     unsigned char 
  5775 ;;  val             4    0[BANK0 ] long 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  sign            1    8[BANK0 ] unsigned char 
  5778 ;;  arg             4   10[BANK0 ] unsigned long 
  5779 ;;  exp             1    9[BANK0 ] unsigned char 
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  4    0[BANK0 ] unsigned char 
  5782 ;; Registers used:
  5783 ;;		wreg, status,2, status,0
  5784 ;; Tracked objects:
  5785 ;;		On entry : 300/0
  5786 ;;		On exit  : 300/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5789 ;;      Params:         0       4       0       0       0
  5790 ;;      Locals:         0       6       0       0       0
  5791 ;;      Temps:          0       4       0       0       0
  5792 ;;      Totals:         0      14       0       0       0
  5793 ;;Total ram usage:       14 bytes
  5794 ;; Hardware stack levels used: 1
  5795 ;; Hardware stack levels required when called: 1
  5796 ;; This function calls:
  5797 ;;		Nothing
  5798 ;; This function is called by:
  5799 ;;		_MediaPlacaVaccum
  5800 ;;		_ADC_Media_10bits
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           
  5805                           ;psect for function ___xxtofl
  5806  074B                     ___xxtofl:
  5807                           
  5808                           ;incstack = 0
  5809                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5810                           ;___xxtofl@sign stored from wreg
  5811  074B  00A8               	movwf	___xxtofl@sign
  5812  074C  0828               	movf	___xxtofl@sign,w
  5813  074D  1D03               	btfss	3,2
  5814  074E  1FA3               	btfss	___xxtofl@val+3,7
  5815  074F  2F60               	goto	l4329
  5816  0750  0920               	comf	___xxtofl@val,w
  5817  0751  00AA               	movwf	___xxtofl@arg
  5818  0752  0921               	comf	___xxtofl@val+1,w
  5819  0753  00AB               	movwf	___xxtofl@arg+1
  5820  0754  0922               	comf	___xxtofl@val+2,w
  5821  0755  00AC               	movwf	___xxtofl@arg+2
  5822  0756  0923               	comf	___xxtofl@val+3,w
  5823  0757  00AD               	movwf	___xxtofl@arg+3
  5824  0758  0AAA               	incf	___xxtofl@arg,f
  5825  0759  1903               	skipnz
  5826  075A  0AAB               	incf	___xxtofl@arg+1,f
  5827  075B  1903               	skipnz
  5828  075C  0AAC               	incf	___xxtofl@arg+2,f
  5829  075D  1903               	skipnz
  5830  075E  0AAD               	incf	___xxtofl@arg+3,f
  5831  075F  2F68               	goto	l1430
  5832  0760                     l4329:
  5833  0760  0823               	movf	___xxtofl@val+3,w
  5834  0761  00AD               	movwf	___xxtofl@arg+3
  5835  0762  0822               	movf	___xxtofl@val+2,w
  5836  0763  00AC               	movwf	___xxtofl@arg+2
  5837  0764  0821               	movf	___xxtofl@val+1,w
  5838  0765  00AB               	movwf	___xxtofl@arg+1
  5839  0766  0820               	movf	___xxtofl@val,w
  5840  0767  00AA               	movwf	___xxtofl@arg
  5841  0768                     l1430:
  5842  0768  0823               	movf	___xxtofl@val+3,w
  5843  0769  0422               	iorwf	___xxtofl@val+2,w
  5844  076A  0421               	iorwf	___xxtofl@val+1,w
  5845  076B  0420               	iorwf	___xxtofl@val,w
  5846  076C  1D03               	skipz
  5847  076D  2F77               	goto	l4335
  5848  076E  3000               	movlw	0
  5849  076F  00A3               	movwf	?___xxtofl+3
  5850  0770  3000               	movlw	0
  5851  0771  00A2               	movwf	?___xxtofl+2
  5852  0772  3000               	movlw	0
  5853  0773  00A1               	movwf	?___xxtofl+1
  5854  0774  3000               	movlw	0
  5855  0775  00A0               	movwf	?___xxtofl
  5856  0776  0008               	return
  5857  0777                     l4335:
  5858  0777  3096               	movlw	150
  5859  0778  00A4               	movwf	??___xxtofl
  5860  0779  0824               	movf	??___xxtofl,w
  5861  077A  00A9               	movwf	___xxtofl@exp
  5862  077B                     l4339:
  5863  077B  30FE               	movlw	254
  5864  077C  052D               	andwf	___xxtofl@arg+3,w
  5865  077D  1903               	btfsc	3,2
  5866  077E  2FA8               	goto	l1436
  5867  077F  3001               	movlw	1
  5868  0780  00A4               	movwf	??___xxtofl
  5869  0781  0824               	movf	??___xxtofl,w
  5870  0782  07A9               	addwf	___xxtofl@exp,f
  5871  0783  3001               	movlw	1
  5872  0784                     u4055:
  5873  0784  1003               	clrc
  5874  0785  0CAD               	rrf	___xxtofl@arg+3,f
  5875  0786  0CAC               	rrf	___xxtofl@arg+2,f
  5876  0787  0CAB               	rrf	___xxtofl@arg+1,f
  5877  0788  0CAA               	rrf	___xxtofl@arg,f
  5878  0789  3EFF               	addlw	-1
  5879  078A  1D03               	skipz
  5880  078B  2F84               	goto	u4055
  5881  078C  2F7B               	goto	l4339
  5882  078D                     l4341:
  5883  078D  3001               	movlw	1
  5884  078E  00A4               	movwf	??___xxtofl
  5885  078F  0824               	movf	??___xxtofl,w
  5886  0790  07A9               	addwf	___xxtofl@exp,f
  5887  0791  3001               	movlw	1
  5888  0792  07AA               	addwf	___xxtofl@arg,f
  5889  0793  3000               	movlw	0
  5890  0794  1803               	skipnc
  5891  0795  3001               	movlw	1
  5892  0796  07AB               	addwf	___xxtofl@arg+1,f
  5893  0797  3000               	movlw	0
  5894  0798  1803               	skipnc
  5895  0799  3001               	movlw	1
  5896  079A  07AC               	addwf	___xxtofl@arg+2,f
  5897  079B  3000               	movlw	0
  5898  079C  1803               	skipnc
  5899  079D  3001               	movlw	1
  5900  079E  07AD               	addwf	___xxtofl@arg+3,f
  5901  079F  3001               	movlw	1
  5902  07A0                     u4075:
  5903  07A0  1003               	clrc
  5904  07A1  0CAD               	rrf	___xxtofl@arg+3,f
  5905  07A2  0CAC               	rrf	___xxtofl@arg+2,f
  5906  07A3  0CAB               	rrf	___xxtofl@arg+1,f
  5907  07A4  0CAA               	rrf	___xxtofl@arg,f
  5908  07A5  3EFF               	addlw	-1
  5909  07A6  1D03               	skipz
  5910  07A7  2FA0               	goto	u4075
  5911  07A8                     l1436:
  5912  07A8  30FF               	movlw	255
  5913  07A9  052D               	andwf	___xxtofl@arg+3,w
  5914  07AA  1903               	btfsc	3,2
  5915  07AB  2FBC               	goto	l4349
  5916  07AC  2F8D               	goto	l4341
  5917  07AD                     l4351:
  5918  07AD  3002               	movlw	2
  5919  07AE  0229               	subwf	___xxtofl@exp,w
  5920  07AF  1C03               	btfss	3,0
  5921  07B0  2FBE               	goto	l1443
  5922  07B1  3001               	movlw	1
  5923  07B2  02A9               	subwf	___xxtofl@exp,f
  5924  07B3  3001               	movlw	1
  5925  07B4  00A4               	movwf	??___xxtofl
  5926  07B5                     u4095:
  5927  07B5  1003               	clrc
  5928  07B6  0DAA               	rlf	___xxtofl@arg,f
  5929  07B7  0DAB               	rlf	___xxtofl@arg+1,f
  5930  07B8  0DAC               	rlf	___xxtofl@arg+2,f
  5931  07B9  0DAD               	rlf	___xxtofl@arg+3,f
  5932  07BA  0BA4               	decfsz	??___xxtofl,f
  5933  07BB  2FB5               	goto	u4095
  5934  07BC                     l4349:
  5935  07BC  1FAC               	btfss	___xxtofl@arg+2,7
  5936  07BD  2FAD               	goto	l4351
  5937  07BE                     l1443:
  5938  07BE  1829               	btfsc	___xxtofl@exp,0
  5939  07BF  2FC8               	goto	l1444
  5940  07C0  30FF               	movlw	255
  5941  07C1  05AA               	andwf	___xxtofl@arg,f
  5942  07C2  30FF               	movlw	255
  5943  07C3  05AB               	andwf	___xxtofl@arg+1,f
  5944  07C4  307F               	movlw	127
  5945  07C5  05AC               	andwf	___xxtofl@arg+2,f
  5946  07C6  30FF               	movlw	255
  5947  07C7  05AD               	andwf	___xxtofl@arg+3,f
  5948  07C8                     l1444:
  5949  07C8  1003               	clrc
  5950  07C9  0CA9               	rrf	___xxtofl@exp,f
  5951  07CA  0829               	movf	___xxtofl@exp,w
  5952  07CB  00A4               	movwf	??___xxtofl
  5953  07CC  01A5               	clrf	??___xxtofl+1
  5954  07CD  01A6               	clrf	??___xxtofl+2
  5955  07CE  01A7               	clrf	??___xxtofl+3
  5956  07CF  3018               	movlw	24
  5957  07D0                     u4135:
  5958  07D0  1003               	clrc
  5959  07D1  0DA4               	rlf	??___xxtofl,f
  5960  07D2  0DA5               	rlf	??___xxtofl+1,f
  5961  07D3  0DA6               	rlf	??___xxtofl+2,f
  5962  07D4  0DA7               	rlf	??___xxtofl+3,f
  5963  07D5  3EFF               	addlw	-1
  5964  07D6  1D03               	skipz
  5965  07D7  2FD0               	goto	u4135
  5966  07D8  0824               	movf	??___xxtofl,w
  5967  07D9  04AA               	iorwf	___xxtofl@arg,f
  5968  07DA  0825               	movf	??___xxtofl+1,w
  5969  07DB  04AB               	iorwf	___xxtofl@arg+1,f
  5970  07DC  0826               	movf	??___xxtofl+2,w
  5971  07DD  04AC               	iorwf	___xxtofl@arg+2,f
  5972  07DE  0827               	movf	??___xxtofl+3,w
  5973  07DF  04AD               	iorwf	___xxtofl@arg+3,f
  5974  07E0  0828               	movf	___xxtofl@sign,w
  5975  07E1  1D03               	btfss	3,2
  5976  07E2  1FA3               	btfss	___xxtofl@val+3,7
  5977  07E3  2FE5               	goto	l4363
  5978  07E4  17AD               	bsf	___xxtofl@arg+3,7
  5979  07E5                     l4363:
  5980  07E5  082D               	movf	___xxtofl@arg+3,w
  5981  07E6  00A3               	movwf	?___xxtofl+3
  5982  07E7  082C               	movf	___xxtofl@arg+2,w
  5983  07E8  00A2               	movwf	?___xxtofl+2
  5984  07E9  082B               	movf	___xxtofl@arg+1,w
  5985  07EA  00A1               	movwf	?___xxtofl+1
  5986  07EB  082A               	movf	___xxtofl@arg,w
  5987  07EC  00A0               	movwf	?___xxtofl
  5988  07ED  0008               	return
  5989  07EE                     __end_of___xxtofl:
  5990                           
  5991                           	psect	text12
  5992  1B10                     __ptext12:	
  5993 ;; *************** function _I2C_Master_Init *****************
  5994 ;; Defined at:
  5995 ;;		line 7 in file "I2C.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;  c               4   14[BANK0 ] const unsigned long 
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;		None
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  1    wreg      void 
  6002 ;; Registers used:
  6003 ;;		wreg, status,2, status,0, pclath, cstack
  6004 ;; Tracked objects:
  6005 ;;		On entry : 300/0
  6006 ;;		On exit  : 300/100
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6009 ;;      Params:         0       4       0       0       0
  6010 ;;      Locals:         0       0       0       0       0
  6011 ;;      Temps:          0       4       0       0       0
  6012 ;;      Totals:         0       8       0       0       0
  6013 ;;Total ram usage:        8 bytes
  6014 ;; Hardware stack levels used: 1
  6015 ;; Hardware stack levels required when called: 2
  6016 ;; This function calls:
  6017 ;;		___lldiv
  6018 ;; This function is called by:
  6019 ;;		_main
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           
  6024                           ;psect for function _I2C_Master_Init
  6025  1B10                     _I2C_Master_Init:
  6026                           
  6027                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  6028                           
  6029                           ;incstack = 0
  6030                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  6031  1B10  3028               	movlw	40
  6032  1B11  0094               	movwf	20	;volatile
  6033                           
  6034                           ;I2C.c: 11:   SSPCON2 = 0;
  6035  1B12  1683               	bsf	3,5	;RP0=1, select bank1
  6036  1B13  0191               	clrf	17	;volatile
  6037                           
  6038                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  6039  1B14  1283               	bcf	3,5	;RP0=0, select bank0
  6040  1B15  082E               	movf	I2C_Master_Init@c,w
  6041  1B16  00B2               	movwf	??_I2C_Master_Init
  6042  1B17  082F               	movf	I2C_Master_Init@c+1,w
  6043  1B18  00B3               	movwf	??_I2C_Master_Init+1
  6044  1B19  0830               	movf	I2C_Master_Init@c+2,w
  6045  1B1A  00B4               	movwf	??_I2C_Master_Init+2
  6046  1B1B  0831               	movf	I2C_Master_Init@c+3,w
  6047  1B1C  00B5               	movwf	??_I2C_Master_Init+3
  6048  1B1D  3002               	movlw	2
  6049  1B1E                     u4895:
  6050  1B1E  1003               	clrc
  6051  1B1F  0DB2               	rlf	??_I2C_Master_Init,f
  6052  1B20  0DB3               	rlf	??_I2C_Master_Init+1,f
  6053  1B21  0DB4               	rlf	??_I2C_Master_Init+2,f
  6054  1B22  0DB5               	rlf	??_I2C_Master_Init+3,f
  6055  1B23  3EFF               	addlw	-1
  6056  1B24  1D03               	skipz
  6057  1B25  2B1E               	goto	u4895
  6058  1B26  0835               	movf	??_I2C_Master_Init+3,w
  6059  1B27  00A3               	movwf	___lldiv@divisor+3
  6060  1B28  0834               	movf	??_I2C_Master_Init+2,w
  6061  1B29  00A2               	movwf	___lldiv@divisor+2
  6062  1B2A  0833               	movf	??_I2C_Master_Init+1,w
  6063  1B2B  00A1               	movwf	___lldiv@divisor+1
  6064  1B2C  0832               	movf	??_I2C_Master_Init,w
  6065  1B2D  00A0               	movwf	___lldiv@divisor
  6066  1B2E  3000               	movlw	0
  6067  1B2F  00A7               	movwf	___lldiv@dividend+3
  6068  1B30  307A               	movlw	122
  6069  1B31  00A6               	movwf	___lldiv@dividend+2
  6070  1B32  3012               	movlw	18
  6071  1B33  00A5               	movwf	___lldiv@dividend+1
  6072  1B34  3000               	movlw	0
  6073  1B35  00A4               	movwf	___lldiv@dividend
  6074  1B36  160A  158A  2627   	fcall	___lldiv
  6075  1B39  0820               	movf	?___lldiv,w
  6076  1B3A  3EFF               	addlw	255
  6077  1B3B  1683               	bsf	3,5	;RP0=1, select bank1
  6078  1B3C  0093               	movwf	19	;volatile
  6079                           
  6080                           ;I2C.c: 13:   SSPSTAT = 0;
  6081  1B3D  0194               	clrf	20	;volatile
  6082                           
  6083                           ;I2C.c: 14:   TRISC3 = 1;
  6084  1B3E  1587               	bsf	7,3	;volatile
  6085                           
  6086                           ;I2C.c: 15:   TRISC4 = 1;
  6087  1B3F  1607               	bsf	7,4	;volatile
  6088  1B40  0008               	return
  6089  1B41                     __end_of_I2C_Master_Init:
  6090                           
  6091                           	psect	text13
  6092  1E27                     __ptext13:	
  6093 ;; *************** function ___lldiv *****************
  6094 ;; Defined at:
  6095 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;  divisor         4    0[BANK0 ] unsigned long 
  6098 ;;  dividend        4    4[BANK0 ] unsigned long 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  quotient        4    9[BANK0 ] unsigned long 
  6101 ;;  counter         1   13[BANK0 ] unsigned char 
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  4    0[BANK0 ] unsigned long 
  6104 ;; Registers used:
  6105 ;;		wreg, status,2, status,0
  6106 ;; Tracked objects:
  6107 ;;		On entry : 300/0
  6108 ;;		On exit  : 300/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6111 ;;      Params:         0       8       0       0       0
  6112 ;;      Locals:         0       5       0       0       0
  6113 ;;      Temps:          0       1       0       0       0
  6114 ;;      Totals:         0      14       0       0       0
  6115 ;;Total ram usage:       14 bytes
  6116 ;; Hardware stack levels used: 1
  6117 ;; Hardware stack levels required when called: 1
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_I2C_Master_Init
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           
  6126                           ;psect for function ___lldiv
  6127  1E27                     ___lldiv:
  6128                           
  6129                           ;incstack = 0
  6130                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6131  1E27  3000               	movlw	0
  6132  1E28  00AC               	movwf	___lldiv@quotient+3
  6133  1E29  3000               	movlw	0
  6134  1E2A  00AB               	movwf	___lldiv@quotient+2
  6135  1E2B  3000               	movlw	0
  6136  1E2C  00AA               	movwf	___lldiv@quotient+1
  6137  1E2D  3000               	movlw	0
  6138  1E2E  00A9               	movwf	___lldiv@quotient
  6139  1E2F  0823               	movf	___lldiv@divisor+3,w
  6140  1E30  0422               	iorwf	___lldiv@divisor+2,w
  6141  1E31  0421               	iorwf	___lldiv@divisor+1,w
  6142  1E32  0420               	iorwf	___lldiv@divisor,w
  6143  1E33  1903               	skipnz
  6144  1E34  2E7C               	goto	l4823
  6145  1E35  01AD               	clrf	___lldiv@counter
  6146  1E36  0AAD               	incf	___lldiv@counter,f
  6147  1E37                     l4809:
  6148  1E37  1BA3               	btfsc	___lldiv@divisor+3,7
  6149  1E38  2E47               	goto	l4811
  6150  1E39  3001               	movlw	1
  6151  1E3A  00A8               	movwf	??___lldiv
  6152  1E3B                     u4475:
  6153  1E3B  1003               	clrc
  6154  1E3C  0DA0               	rlf	___lldiv@divisor,f
  6155  1E3D  0DA1               	rlf	___lldiv@divisor+1,f
  6156  1E3E  0DA2               	rlf	___lldiv@divisor+2,f
  6157  1E3F  0DA3               	rlf	___lldiv@divisor+3,f
  6158  1E40  0BA8               	decfsz	??___lldiv,f
  6159  1E41  2E3B               	goto	u4475
  6160  1E42  3001               	movlw	1
  6161  1E43  00A8               	movwf	??___lldiv
  6162  1E44  0828               	movf	??___lldiv,w
  6163  1E45  07AD               	addwf	___lldiv@counter,f
  6164  1E46  2E37               	goto	l4809
  6165  1E47                     l4811:
  6166  1E47  3001               	movlw	1
  6167  1E48  00A8               	movwf	??___lldiv
  6168  1E49                     u4495:
  6169  1E49  1003               	clrc
  6170  1E4A  0DA9               	rlf	___lldiv@quotient,f
  6171  1E4B  0DAA               	rlf	___lldiv@quotient+1,f
  6172  1E4C  0DAB               	rlf	___lldiv@quotient+2,f
  6173  1E4D  0DAC               	rlf	___lldiv@quotient+3,f
  6174  1E4E  0BA8               	decfsz	??___lldiv,f
  6175  1E4F  2E49               	goto	u4495
  6176  1E50  0823               	movf	___lldiv@divisor+3,w
  6177  1E51  0227               	subwf	___lldiv@dividend+3,w
  6178  1E52  1D03               	skipz
  6179  1E53  2E5E               	goto	u4505
  6180  1E54  0822               	movf	___lldiv@divisor+2,w
  6181  1E55  0226               	subwf	___lldiv@dividend+2,w
  6182  1E56  1D03               	skipz
  6183  1E57  2E5E               	goto	u4505
  6184  1E58  0821               	movf	___lldiv@divisor+1,w
  6185  1E59  0225               	subwf	___lldiv@dividend+1,w
  6186  1E5A  1D03               	skipz
  6187  1E5B  2E5E               	goto	u4505
  6188  1E5C  0820               	movf	___lldiv@divisor,w
  6189  1E5D  0224               	subwf	___lldiv@dividend,w
  6190  1E5E                     u4505:
  6191  1E5E  1C03               	skipc
  6192  1E5F  2E6F               	goto	l4819
  6193  1E60  0820               	movf	___lldiv@divisor,w
  6194  1E61  02A4               	subwf	___lldiv@dividend,f
  6195  1E62  0821               	movf	___lldiv@divisor+1,w
  6196  1E63  1C03               	skipc
  6197  1E64  0F21               	incfsz	___lldiv@divisor+1,w
  6198  1E65  02A5               	subwf	___lldiv@dividend+1,f
  6199  1E66  0822               	movf	___lldiv@divisor+2,w
  6200  1E67  1C03               	skipc
  6201  1E68  0F22               	incfsz	___lldiv@divisor+2,w
  6202  1E69  02A6               	subwf	___lldiv@dividend+2,f
  6203  1E6A  0823               	movf	___lldiv@divisor+3,w
  6204  1E6B  1C03               	skipc
  6205  1E6C  0F23               	incfsz	___lldiv@divisor+3,w
  6206  1E6D  02A7               	subwf	___lldiv@dividend+3,f
  6207  1E6E  1429               	bsf	___lldiv@quotient,0
  6208  1E6F                     l4819:
  6209  1E6F  3001               	movlw	1
  6210  1E70                     u4515:
  6211  1E70  1003               	clrc
  6212  1E71  0CA3               	rrf	___lldiv@divisor+3,f
  6213  1E72  0CA2               	rrf	___lldiv@divisor+2,f
  6214  1E73  0CA1               	rrf	___lldiv@divisor+1,f
  6215  1E74  0CA0               	rrf	___lldiv@divisor,f
  6216  1E75  3EFF               	addlw	-1
  6217  1E76  1D03               	skipz
  6218  1E77  2E70               	goto	u4515
  6219  1E78  3001               	movlw	1
  6220  1E79  02AD               	subwf	___lldiv@counter,f
  6221  1E7A  1D03               	btfss	3,2
  6222  1E7B  2E47               	goto	l4811
  6223  1E7C                     l4823:
  6224  1E7C  082C               	movf	___lldiv@quotient+3,w
  6225  1E7D  00A3               	movwf	?___lldiv+3
  6226  1E7E  082B               	movf	___lldiv@quotient+2,w
  6227  1E7F  00A2               	movwf	?___lldiv+2
  6228  1E80  082A               	movf	___lldiv@quotient+1,w
  6229  1E81  00A1               	movwf	?___lldiv+1
  6230  1E82  0829               	movf	___lldiv@quotient,w
  6231  1E83  00A0               	movwf	?___lldiv
  6232  1E84  0008               	return
  6233  1E85                     __end_of___lldiv:
  6234                           
  6235                           	psect	text14
  6236  03FF                     __ptext14:	
  6237 ;; *************** function _Decodify_Command *****************
  6238 ;; Defined at:
  6239 ;;		line 304 in file "SlaveLiofilizadorVer1.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;		None
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  sizedata        1   24[BANK1 ] unsigned char 
  6244 ;;  add             1   23[BANK1 ] unsigned char 
  6245 ;;  add_24LCxxxx    4   32[BANK1 ] unsigned long 
  6246 ;;  OutPut          4   27[BANK1 ] float 
  6247 ;;  tempint         2   25[BANK1 ] int 
  6248 ;;  dados           2   21[BANK1 ] int 
  6249 ;;  tempchar        1   31[BANK1 ] unsigned char 
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  1    wreg      void 
  6252 ;; Registers used:
  6253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6254 ;; Tracked objects:
  6255 ;;		On entry : 300/100
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6259 ;;      Params:         0       0       0       0       0
  6260 ;;      Locals:         0       0      15       0       0
  6261 ;;      Temps:          0       0       4       0       0
  6262 ;;      Totals:         0       0      19       0       0
  6263 ;;Total ram usage:       19 bytes
  6264 ;; Hardware stack levels used: 1
  6265 ;; Hardware stack levels required when called: 6
  6266 ;; This function calls:
  6267 ;;		_EEPROM_24C1025_Fill_All
  6268 ;;		_EEPROM_24C1025_Read_Buffer_USART
  6269 ;;		_EEPROM_24C1025_Read_Byte
  6270 ;;		_EEPROM_24C1025_Read_Int
  6271 ;;		_EEPROM_24C1025_Read_Str
  6272 ;;		_EEPROM_24C1025_Write_Buffer
  6273 ;;		_EEPROM_24C1025_Write_Byte
  6274 ;;		_EEPROM_24C1025_Write_Int
  6275 ;;		_EEPROM_24C1025_Write_Str
  6276 ;;		_EEPROM_Read_Byte
  6277 ;;		_EEPROM_Read_Integer
  6278 ;;		_EEPROM_Read_String
  6279 ;;		_EEPROM_Write_Byte
  6280 ;;		_EEPROM_Write_Integer
  6281 ;;		_EEPROM_Write_String
  6282 ;;		_PROCULUS_Buzzer
  6283 ;;		_PROCULUS_Show_Screen
  6284 ;;		_PROCULUS_VP_Write_String
  6285 ;;		_Save_Log
  6286 ;;		_Send_Reply_OK
  6287 ;;		_Send_To_MB
  6288 ;;		_USART_put_int
  6289 ;;		_USART_put_string
  6290 ;;		_USART_putc
  6291 ;;		_USART_to_Protocol
  6292 ;;		___flmul
  6293 ;;		___fltol
  6294 ;;		_strcpy
  6295 ;;		_strlen
  6296 ;; This function is called by:
  6297 ;;		_main
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           
  6302                           ;psect for function _Decodify_Command
  6303  03FF                     _Decodify_Command:
  6304                           
  6305                           ;SlaveLiofilizadorVer1.c: 306:     int dados;;SlaveLiofilizadorVer1.c: 307:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 308:     int tempint;;SlaveLiofilizadorVer1.c: 309:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 310:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 322:     USART_to_Protocol(&usart_protocol);
  6306                           
  6307                           ;incstack = 0
  6308                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6309  03FF  3090               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6310  0400  160A  158A  257C  120A  118A  	fcall	_USART_to_Protocol
  6311                           
  6312                           ;SlaveLiofilizadorVer1.c: 324:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6313  0405  1683               	bsf	3,5	;RP0=1, select bank3
  6314  0406  1703               	bsf	3,6	;RP1=1, select bank3
  6315  0407  0817               	movf	(_usart_protocol^(0+384)+7),w
  6316  0408  1303               	bcf	3,6	;RP1=0, select bank1
  6317  0409  00B1               	movwf	??_Decodify_Command^(0+128)
  6318  040A  0831               	movf	??_Decodify_Command^(0+128),w
  6319  040B  00C3               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6320                           
  6321                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6322  040C  1703               	bsf	3,6	;RP1=1, select bank3
  6323  040D  0818               	movf	(_usart_protocol^(0+384)+8),w
  6324  040E  1303               	bcf	3,6	;RP1=0, select bank1
  6325  040F  00B1               	movwf	??_Decodify_Command^(0+128)
  6326  0410  0831               	movf	??_Decodify_Command^(0+128),w
  6327  0411  00C2               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6328                           
  6329                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6330  0412  1703               	bsf	3,6	;RP1=1, select bank3
  6331  0413  0819               	movf	(_usart_protocol^(0+384)+9),w
  6332  0414  1303               	bcf	3,6	;RP1=0, select bank1
  6333  0415  00B1               	movwf	??_Decodify_Command^(0+128)
  6334  0416  0831               	movf	??_Decodify_Command^(0+128),w
  6335  0417  00C1               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6336                           
  6337                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6338  0418  1703               	bsf	3,6	;RP1=1, select bank3
  6339  0419  081A               	movf	(_usart_protocol^(0+384)+10),w
  6340  041A  1303               	bcf	3,6	;RP1=0, select bank1
  6341  041B  00B1               	movwf	??_Decodify_Command^(0+128)
  6342  041C  0831               	movf	??_Decodify_Command^(0+128),w
  6343  041D  00C0               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6344                           
  6345                           ;SlaveLiofilizadorVer1.c: 334:     switch(usart_protocol.command){
  6346  041E  2EF9               	goto	l5845
  6347  041F                     l5685:
  6348                           
  6349                           ;SlaveLiofilizadorVer1.c: 343:              strcpy(buffer,"v1.0.21");
  6350  041F  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6351  0420  00B1               	movwf	??_Decodify_Command^(0+128)
  6352  0421  0831               	movf	??_Decodify_Command^(0+128),w
  6353  0422  1283               	bcf	3,5	;RP0=0, select bank0
  6354  0423  00A0               	movwf	strcpy@from
  6355  0424  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6356  0425  160A  158A  2181  120A  118A  	fcall	_strcpy
  6357                           
  6358                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  6359  042A  300B               	movlw	11
  6360  042B                     L10:
  6361  042B  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6362                           
  6363                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string(buffer);
  6364  0430  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6365  0431  1283               	bcf	3,5	;RP0=0, select bank0
  6366  0432  00A1               	movwf	USART_put_string@vetor
  6367  0433  3001               	movlw	1
  6368  0434  00A2               	movwf	USART_put_string@vetor+1
  6369  0435  160A  158A  2373   	fcall	_USART_put_string
  6370                           
  6371                           ;SlaveLiofilizadorVer1.c: 346:              break;
  6372  0438  0008               	return
  6373  0439                     l5691:
  6374                           
  6375                           ;SlaveLiofilizadorVer1.c: 363:              if(usart_protocol.value[0]==0)
  6376  0439  1703               	bsf	3,6	;RP1=1, select bank3
  6377  043A  0816               	movf	(_usart_protocol^(0+384)+6),w
  6378  043B  1D03               	btfss	3,2
  6379  043C  2C46               	goto	l5695
  6380                           
  6381                           ;SlaveLiofilizadorVer1.c: 364:                 OutPut=Tensao1;
  6382  043D  1303               	bcf	3,6	;RP1=0, select bank1
  6383  043E  084C               	movf	(_Tensao1+3)^(0+128),w
  6384  043F  00BE               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6385  0440  084B               	movf	(_Tensao1+2)^(0+128),w
  6386  0441  00BD               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6387  0442  084A               	movf	(_Tensao1+1)^(0+128),w
  6388  0443  00BC               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6389  0444  0849               	movf	_Tensao1^(0+128),w
  6390  0445  2C4E               	goto	L8
  6391  0446                     l5695:
  6392                           
  6393                           ;SlaveLiofilizadorVer1.c: 366:                 OutPut=Vaccum0;
  6394  0446  1303               	bcf	3,6	;RP1=0, select bank1
  6395  0447  0850               	movf	(_Vaccum0+3)^(0+128),w
  6396  0448  00BE               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6397  0449  084F               	movf	(_Vaccum0+2)^(0+128),w
  6398  044A  00BD               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6399  044B  084E               	movf	(_Vaccum0+1)^(0+128),w
  6400  044C  00BC               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6401  044D  084D               	movf	_Vaccum0^(0+128),w
  6402  044E                     L8:
  6403  044E  00BB               	movwf	Decodify_Command@OutPut^(0+128)
  6404                           
  6405                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  6406  044F  3041               	movlw	65
  6407  0450  1283               	bcf	3,5	;RP0=0, select bank0
  6408  0451  00CE               	movwf	___flmul@b+3
  6409  0452  3020               	movlw	32
  6410  0453  00CD               	movwf	___flmul@b+2
  6411  0454  3000               	movlw	0
  6412  0455  00CC               	movwf	___flmul@b+1
  6413  0456  3000               	movlw	0
  6414  0457  00CB               	movwf	___flmul@b
  6415  0458  1683               	bsf	3,5	;RP0=1, select bank1
  6416  0459  083E               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6417  045A  1283               	bcf	3,5	;RP0=0, select bank0
  6418  045B  00D2               	movwf	___flmul@a+3
  6419  045C  1683               	bsf	3,5	;RP0=1, select bank1
  6420  045D  083D               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6421  045E  1283               	bcf	3,5	;RP0=0, select bank0
  6422  045F  00D1               	movwf	___flmul@a+2
  6423  0460  1683               	bsf	3,5	;RP0=1, select bank1
  6424  0461  083C               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6425  0462  1283               	bcf	3,5	;RP0=0, select bank0
  6426  0463  00D0               	movwf	___flmul@a+1
  6427  0464  1683               	bsf	3,5	;RP0=1, select bank1
  6428  0465  083B               	movf	Decodify_Command@OutPut^(0+128),w
  6429  0466  1283               	bcf	3,5	;RP0=0, select bank0
  6430  0467  00CF               	movwf	___flmul@a
  6431  0468  120A  158A  250B  120A  118A  	fcall	___flmul
  6432  046D  084E               	movf	?___flmul+3,w
  6433  046E  1683               	bsf	3,5	;RP0=1, select bank1
  6434  046F  00BE               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6435  0470  1283               	bcf	3,5	;RP0=0, select bank0
  6436  0471  084D               	movf	?___flmul+2,w
  6437  0472  1683               	bsf	3,5	;RP0=1, select bank1
  6438  0473  00BD               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6439  0474  1283               	bcf	3,5	;RP0=0, select bank0
  6440  0475  084C               	movf	?___flmul+1,w
  6441  0476  1683               	bsf	3,5	;RP0=1, select bank1
  6442  0477  00BC               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6443  0478  1283               	bcf	3,5	;RP0=0, select bank0
  6444  0479  084B               	movf	?___flmul,w
  6445  047A  1683               	bsf	3,5	;RP0=1, select bank1
  6446  047B  00BB               	movwf	Decodify_Command@OutPut^(0+128)
  6447                           
  6448                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  6449  047C  138B               	bcf	11,7	;volatile
  6450                           
  6451                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  6452  047D  3002               	movlw	2
  6453  047E  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6454                           
  6455                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  6456  0483  083E               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6457  0484  1283               	bcf	3,5	;RP0=0, select bank0
  6458  0485  00E8               	movwf	___fltol@f1+3
  6459  0486  1683               	bsf	3,5	;RP0=1, select bank1
  6460  0487  083D               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6461  0488  1283               	bcf	3,5	;RP0=0, select bank0
  6462  0489  00E7               	movwf	___fltol@f1+2
  6463  048A  1683               	bsf	3,5	;RP0=1, select bank1
  6464  048B  083C               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6465  048C  1283               	bcf	3,5	;RP0=0, select bank0
  6466  048D  00E6               	movwf	___fltol@f1+1
  6467  048E  1683               	bsf	3,5	;RP0=1, select bank1
  6468  048F  083B               	movf	Decodify_Command@OutPut^(0+128),w
  6469  0490  1283               	bcf	3,5	;RP0=0, select bank0
  6470  0491  00E5               	movwf	___fltol@f1
  6471  0492  160A  158A  2685  120A  118A  	fcall	___fltol
  6472  0497  0866               	movf	?___fltol+1,w
  6473  0498  1683               	bsf	3,5	;RP0=1, select bank1
  6474  0499  00A1               	movwf	(USART_put_int@value+1)^(0+128)
  6475  049A  1283               	bcf	3,5	;RP0=0, select bank0
  6476  049B  0865               	movf	?___fltol,w
  6477  049C  1683               	bsf	3,5	;RP0=1, select bank1
  6478  049D  00A0               	movwf	USART_put_int@value^(0+128)
  6479  049E  160A  158A  20C1   	fcall	_USART_put_int
  6480                           
  6481                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  6482  04A1  178B               	bsf	11,7	;volatile
  6483                           
  6484                           ;SlaveLiofilizadorVer1.c: 375:              break;
  6485  04A2  0008               	return
  6486  04A3                     l5707:
  6487                           
  6488                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6489  04A3  1703               	bsf	3,6	;RP1=1, select bank3
  6490  04A4  0816               	movf	(_usart_protocol^(0+384)+6),w
  6491  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  6492  04A6  00B1               	movwf	??_Decodify_Command^(0+128)
  6493  04A7  0831               	movf	??_Decodify_Command^(0+128),w
  6494  04A8  00C3               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6495                           
  6496                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6497  04A9  1703               	bsf	3,6	;RP1=1, select bank3
  6498  04AA  0817               	movf	(_usart_protocol^(0+384)+7),w
  6499  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  6500  04AC  00B1               	movwf	??_Decodify_Command^(0+128)
  6501  04AD  0831               	movf	??_Decodify_Command^(0+128),w
  6502  04AE  00C2               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6503                           
  6504                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6505  04AF  1703               	bsf	3,6	;RP1=1, select bank3
  6506  04B0  0818               	movf	(_usart_protocol^(0+384)+8),w
  6507  04B1  1303               	bcf	3,6	;RP1=0, select bank1
  6508  04B2  00B1               	movwf	??_Decodify_Command^(0+128)
  6509  04B3  0831               	movf	??_Decodify_Command^(0+128),w
  6510  04B4  00C1               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6511                           
  6512                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6513  04B5  1703               	bsf	3,6	;RP1=1, select bank3
  6514  04B6  0819               	movf	(_usart_protocol^(0+384)+9),w
  6515  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  6516  04B8  00B1               	movwf	??_Decodify_Command^(0+128)
  6517  04B9  0831               	movf	??_Decodify_Command^(0+128),w
  6518  04BA  00C0               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6519                           
  6520                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  6521  04BB  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6522  04BC  00AD               	movwf	(Save_Log@add_datalog+3)^(0+128)
  6523  04BD  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6524  04BE  00AC               	movwf	(Save_Log@add_datalog+2)^(0+128)
  6525  04BF  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6526  04C0  00AB               	movwf	(Save_Log@add_datalog+1)^(0+128)
  6527  04C1  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6528  04C2  00AA               	movwf	Save_Log@add_datalog^(0+128)
  6529  04C3  160A  158A  26F0   	fcall	_Save_Log
  6530                           
  6531                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  6532  04C6  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6533  04C7  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6534                           
  6535                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  6536  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  6537  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  6538  04CA  01D9               	clrf	_milisegundo^(0+128)	;volatile
  6539  04CB  01DA               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6540                           
  6541                           ;SlaveLiofilizadorVer1.c: 387:              break;
  6542  04CC  0008               	return
  6543  04CD                     l5715:
  6544                           
  6545                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  6546  04CD  3002               	movlw	2
  6547  04CE  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6548                           
  6549                           ;SlaveLiofilizadorVer1.c: 401:              USART_put_int(1);
  6550  04D3  3001               	movlw	1
  6551  04D4  00A0               	movwf	USART_put_int@value^(0+128)
  6552  04D5  3000               	movlw	0
  6553  04D6  00A1               	movwf	(USART_put_int@value^(0+128)+1)
  6554  04D7  160A  158A  20C1   	fcall	_USART_put_int
  6555                           
  6556                           ;SlaveLiofilizadorVer1.c: 411:              break;
  6557  04DA  0008               	return
  6558  04DB                     l5719:
  6559                           
  6560                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  6561  04DB  1703               	bsf	3,6	;RP1=1, select bank3
  6562  04DC  0817               	movf	(_usart_protocol^(0+384)+7),w
  6563  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  6564  04DE  00B1               	movwf	??_Decodify_Command^(0+128)
  6565  04DF  0831               	movf	??_Decodify_Command^(0+128),w
  6566  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  6567  04E1  00A0               	movwf	EEPROM_Write_Byte@dado
  6568  04E2  1683               	bsf	3,5	;RP0=1, select bank3
  6569  04E3  1703               	bsf	3,6	;RP1=1, select bank3
  6570  04E4  0816               	movf	(_usart_protocol^(0+384)+6),w
  6571  04E5  160A  158A  2480  120A  118A  	fcall	_EEPROM_Write_Byte
  6572  04EA                     L9:
  6573                           
  6574                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  6575  04EA  3003               	movlw	3
  6576  04EB  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6577                           
  6578                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  6579  04F0  160A  158A  207D   	fcall	_Send_Reply_OK
  6580                           
  6581                           ;SlaveLiofilizadorVer1.c: 432:              break;
  6582  04F3  0008               	return
  6583  04F4                     l5723:
  6584                           
  6585                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6586  04F4  1703               	bsf	3,6	;RP1=1, select bank3
  6587  04F5  0816               	movf	(_usart_protocol^(0+384)+6),w
  6588  04F6  160A  158A  21FE  120A  118A  	fcall	_EEPROM_Read_Byte
  6589  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  6590  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  6591  04FD  00B1               	movwf	??_Decodify_Command^(0+128)
  6592  04FE  0831               	movf	??_Decodify_Command^(0+128),w
  6593  04FF  00BF               	movwf	Decodify_Command@tempchar^(0+128)
  6594                           
  6595                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  6596  0500  3001               	movlw	1
  6597  0501  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6598                           
  6599                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  6600  0506  083F               	movf	Decodify_Command@tempchar^(0+128),w
  6601  0507  160A  158A  20B1   	fcall	_USART_putc
  6602                           
  6603                           ;SlaveLiofilizadorVer1.c: 437:              break;
  6604  050A  0008               	return
  6605  050B                     l5729:
  6606                           
  6607                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  6608  050B  1703               	bsf	3,6	;RP1=1, select bank3
  6609  050C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6610  050D  1303               	bcf	3,6	;RP1=0, select bank1
  6611  050E  00B1               	movwf	??_Decodify_Command^(0+128)
  6612  050F  0831               	movf	??_Decodify_Command^(0+128),w
  6613  0510  00B7               	movwf	Decodify_Command@add^(0+128)
  6614                           
  6615                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6616  0511  1703               	bsf	3,6	;RP1=1, select bank3
  6617  0512  0818               	movf	(_usart_protocol^(0+384)+8),w
  6618  0513  1303               	bcf	3,6	;RP1=0, select bank1
  6619  0514  00B1               	movwf	??_Decodify_Command^(0+128)
  6620  0515  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6621  0516  1703               	bsf	3,6	;RP1=1, select bank3
  6622  0517  0817               	movf	(_usart_protocol^(0+384)+7),w
  6623  0518  1303               	bcf	3,6	;RP1=0, select bank1
  6624  0519  00B3               	movwf	(??_Decodify_Command+2)^(0+128)
  6625  051A  01B4               	clrf	((??_Decodify_Command+2)^(0+128)+1)
  6626  051B  0833               	movf	(??_Decodify_Command+2)^(0+128),w
  6627  051C  00B4               	movwf	((??_Decodify_Command+2)^(0+128)+1)
  6628  051D  01B3               	clrf	(??_Decodify_Command+2)^(0+128)
  6629  051E  0831               	movf	??_Decodify_Command^(0+128),w
  6630  051F  0433               	iorwf	(??_Decodify_Command+2)^(0+128),w
  6631  0520  00B5               	movwf	Decodify_Command@dados^(0+128)
  6632  0521  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6633  0522  0434               	iorwf	(??_Decodify_Command+3)^(0+128),w
  6634  0523  00B6               	movwf	(Decodify_Command@dados+1)^(0+128)
  6635                           
  6636                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  6637  0524  0836               	movf	(Decodify_Command@dados+1)^(0+128),w
  6638  0525  1283               	bcf	3,5	;RP0=0, select bank0
  6639  0526  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6640  0527  1683               	bsf	3,5	;RP0=1, select bank1
  6641  0528  0835               	movf	Decodify_Command@dados^(0+128),w
  6642  0529  1283               	bcf	3,5	;RP0=0, select bank0
  6643  052A  00A5               	movwf	EEPROM_Write_Integer@dado
  6644  052B  1683               	bsf	3,5	;RP0=1, select bank1
  6645  052C  0837               	movf	Decodify_Command@add^(0+128),w
  6646  052D  160A  158A  2341  120A  118A  	fcall	_EEPROM_Write_Integer
  6647  0532  2CEA               	goto	L9
  6648  0533                     l5739:	
  6649                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  6650                           
  6651                           
  6652                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6653  0533  1703               	bsf	3,6	;RP1=1, select bank3
  6654  0534  0816               	movf	(_usart_protocol^(0+384)+6),w
  6655  0535  160A  158A  22BC  120A  118A  	fcall	_EEPROM_Read_Integer
  6656  053A  0824               	movf	?_EEPROM_Read_Integer+1,w
  6657  053B  1683               	bsf	3,5	;RP0=1, select bank1
  6658  053C  00BA               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6659  053D  1283               	bcf	3,5	;RP0=0, select bank0
  6660  053E  0823               	movf	?_EEPROM_Read_Integer,w
  6661  053F                     L11:
  6662  053F  1683               	bsf	3,5	;RP0=1, select bank1
  6663  0540  00B9               	movwf	Decodify_Command@tempint^(0+128)
  6664                           
  6665                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  6666  0541  3002               	movlw	2
  6667  0542  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6668                           
  6669                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  6670  0547  083A               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6671  0548  00A1               	movwf	(USART_put_int@value+1)^(0+128)
  6672  0549  0839               	movf	Decodify_Command@tempint^(0+128),w
  6673  054A  00A0               	movwf	USART_put_int@value^(0+128)
  6674  054B  160A  158A  20C1   	fcall	_USART_put_int
  6675                           
  6676                           ;SlaveLiofilizadorVer1.c: 452:              break;
  6677  054E  0008               	return
  6678  054F                     l5745:
  6679                           
  6680                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  6681  054F  3097               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6682  0550  00B1               	movwf	??_Decodify_Command^(0+128)
  6683  0551  0831               	movf	??_Decodify_Command^(0+128),w
  6684  0552  1283               	bcf	3,5	;RP0=0, select bank0
  6685  0553  00A5               	movwf	EEPROM_Write_String@dado
  6686  0554  1683               	bsf	3,5	;RP0=1, select bank3
  6687  0555  1703               	bsf	3,6	;RP1=1, select bank3
  6688  0556  0816               	movf	(_usart_protocol^(0+384)+6),w
  6689  0557  160A  118A  2002  120A  118A  	fcall	_EEPROM_Write_String
  6690  055C  2CEA               	goto	L9
  6691  055D                     l5751:	
  6692                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  6693                           
  6694                           
  6695                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 462:             
      +                           EEPROM_Read_String(usart_protocol.value[0],buffer);
  6696  055D  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6697  055E  00B1               	movwf	??_Decodify_Command^(0+128)
  6698  055F  0831               	movf	??_Decodify_Command^(0+128),w
  6699  0560  1283               	bcf	3,5	;RP0=0, select bank0
  6700  0561  00A3               	movwf	EEPROM_Read_String@dado
  6701  0562  1683               	bsf	3,5	;RP0=1, select bank3
  6702  0563  1703               	bsf	3,6	;RP1=1, select bank3
  6703  0564  0816               	movf	(_usart_protocol^(0+384)+6),w
  6704  0565  160A  158A  21BD  120A  118A  	fcall	_EEPROM_Read_String
  6705                           
  6706                           ;SlaveLiofilizadorVer1.c: 463:              Send_To_MB(sizeof(buffer));
  6707  056A  3021               	movlw	33
  6708  056B  2C2B               	goto	L10
  6709  056C                     l5757:
  6710                           
  6711                           ;SlaveLiofilizadorVer1.c: 470:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6712  056C  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6713  056D  1283               	bcf	3,5	;RP0=0, select bank0
  6714  056E  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6715  056F  1683               	bsf	3,5	;RP0=1, select bank1
  6716  0570  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6717  0571  1283               	bcf	3,5	;RP0=0, select bank0
  6718  0572  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6719  0573  1683               	bsf	3,5	;RP0=1, select bank1
  6720  0574  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6721  0575  1283               	bcf	3,5	;RP0=0, select bank0
  6722  0576  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6723  0577  1683               	bsf	3,5	;RP0=1, select bank1
  6724  0578  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6725  0579  1283               	bcf	3,5	;RP0=0, select bank0
  6726  057A  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6727  057B  1683               	bsf	3,5	;RP0=1, select bank3
  6728  057C  1703               	bsf	3,6	;RP1=1, select bank3
  6729  057D  081B               	movf	(_usart_protocol^(0+384)+11),w
  6730  057E  1303               	bcf	3,6	;RP1=0, select bank1
  6731  057F  00B1               	movwf	??_Decodify_Command^(0+128)
  6732  0580  0831               	movf	??_Decodify_Command^(0+128),w
  6733  0581  1283               	bcf	3,5	;RP0=0, select bank0
  6734  0582  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  6735  0583  1683               	bsf	3,5	;RP0=1, select bank3
  6736  0584  1703               	bsf	3,6	;RP1=1, select bank3
  6737  0585  0816               	movf	(_usart_protocol^(0+384)+6),w
  6738  0586  160A  158A  20EB  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6739  058B  2CEA               	goto	L9
  6740  058C                     l5763:	
  6741                           ;SlaveLiofilizadorVer1.c: 473:              Send_To_MB(3);
  6742                           
  6743                           
  6744                           ;SlaveLiofilizadorVer1.c: 477:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6745  058C  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6746  058D  1283               	bcf	3,5	;RP0=0, select bank0
  6747  058E  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6748  058F  1683               	bsf	3,5	;RP0=1, select bank1
  6749  0590  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6750  0591  1283               	bcf	3,5	;RP0=0, select bank0
  6751  0592  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6752  0593  1683               	bsf	3,5	;RP0=1, select bank1
  6753  0594  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6754  0595  1283               	bcf	3,5	;RP0=0, select bank0
  6755  0596  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6756  0597  1683               	bsf	3,5	;RP0=1, select bank1
  6757  0598  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6758  0599  1283               	bcf	3,5	;RP0=0, select bank0
  6759  059A  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6760  059B  1683               	bsf	3,5	;RP0=1, select bank3
  6761  059C  1703               	bsf	3,6	;RP1=1, select bank3
  6762  059D  0816               	movf	(_usart_protocol^(0+384)+6),w
  6763  059E  160A  158A  2119  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6764  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  6765  05A4  00B1               	movwf	??_Decodify_Command^(0+128)
  6766  05A5  0831               	movf	??_Decodify_Command^(0+128),w
  6767  05A6  00BF               	movwf	Decodify_Command@tempchar^(0+128)
  6768                           
  6769                           ;SlaveLiofilizadorVer1.c: 481:              Send_To_MB(1);
  6770  05A7  3001               	movlw	1
  6771  05A8  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6772                           
  6773                           ;SlaveLiofilizadorVer1.c: 482:              USART_putc(tempchar);
  6774  05AD  083F               	movf	Decodify_Command@tempchar^(0+128),w
  6775  05AE  160A  158A  20B1   	fcall	_USART_putc
  6776                           
  6777                           ;SlaveLiofilizadorVer1.c: 483:              break;
  6778  05B1  0008               	return
  6779  05B2                     l5769:
  6780                           
  6781                           ;SlaveLiofilizadorVer1.c: 485:              {;SlaveLiofilizadorVer1.c: 486:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6782  05B2  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6783  05B3  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  6784  05B4  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6785  05B5  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  6786  05B6  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6787  05B7  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  6788  05B8  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6789  05B9  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  6790  05BA  1703               	bsf	3,6	;RP1=1, select bank3
  6791  05BB  081C               	movf	(_usart_protocol^(0+384)+12),w
  6792  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  6793  05BD  00B1               	movwf	??_Decodify_Command^(0+128)
  6794  05BE  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6795  05BF  1703               	bsf	3,6	;RP1=1, select bank3
  6796  05C0  081B               	movf	(_usart_protocol^(0+384)+11),w
  6797  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  6798  05C2  00B3               	movwf	(??_Decodify_Command+2)^(0+128)
  6799  05C3  01B4               	clrf	((??_Decodify_Command+2)^(0+128)+1)
  6800  05C4  0833               	movf	(??_Decodify_Command+2)^(0+128),w
  6801  05C5  00B4               	movwf	((??_Decodify_Command+2)^(0+128)+1)
  6802  05C6  01B3               	clrf	(??_Decodify_Command+2)^(0+128)
  6803  05C7  0831               	movf	??_Decodify_Command^(0+128),w
  6804  05C8  0433               	iorwf	(??_Decodify_Command+2)^(0+128),w
  6805  05C9  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  6806  05CA  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6807  05CB  0434               	iorwf	(??_Decodify_Command+3)^(0+128),w
  6808  05CC  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  6809  05CD  1703               	bsf	3,6	;RP1=1, select bank3
  6810  05CE  0816               	movf	(_usart_protocol^(0+384)+6),w
  6811  05CF  160A  158A  2293  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6812  05D4  2CEA               	goto	L9
  6813  05D5                     l5775:	
  6814                           ;SlaveLiofilizadorVer1.c: 491:              Send_To_MB(3);
  6815                           
  6816                           
  6817                           ;SlaveLiofilizadorVer1.c: 496:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6818  05D5  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6819  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  6820  05D7  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6821  05D8  1683               	bsf	3,5	;RP0=1, select bank1
  6822  05D9  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6823  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  6824  05DB  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6825  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  6826  05DD  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6827  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  6828  05DF  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6829  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  6830  05E1  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6831  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  6832  05E3  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6833  05E4  1683               	bsf	3,5	;RP0=1, select bank3
  6834  05E5  1703               	bsf	3,6	;RP1=1, select bank3
  6835  05E6  0816               	movf	(_usart_protocol^(0+384)+6),w
  6836  05E7  160A  158A  2243  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6837  05EC  0837               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6838  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  6839  05EE  00BA               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6840  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  6841  05F0  0836               	movf	?_EEPROM_24C1025_Read_Int,w
  6842  05F1  2D3F               	goto	L11
  6843  05F2                     l5781:	
  6844                           ;SlaveLiofilizadorVer1.c: 498:              Send_To_MB(2);
  6845                           
  6846                           
  6847                           ;SlaveLiofilizadorVer1.c: 504:              {;SlaveLiofilizadorVer1.c: 505:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 506:              sizedata=usart_protocol.value
      +                          [5];
  6848  05F2  1703               	bsf	3,6	;RP1=1, select bank3
  6849  05F3  081B               	movf	(_usart_protocol^(0+384)+11),w
  6850  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  6851  05F5  00B1               	movwf	??_Decodify_Command^(0+128)
  6852  05F6  0831               	movf	??_Decodify_Command^(0+128),w
  6853  05F7  00B8               	movwf	Decodify_Command@sizedata^(0+128)
  6854                           
  6855                           ;SlaveLiofilizadorVer1.c: 507:              Send_To_MB(sizedata);
  6856  05F8  0838               	movf	Decodify_Command@sizedata^(0+128),w
  6857  05F9  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6858                           
  6859                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer_USART(usart_proto
      +                          col.value[0],
  6860  05FE  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6861  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  6862  0600  00AC               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3
  6863  0601  1683               	bsf	3,5	;RP0=1, select bank1
  6864  0602  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6865  0603  1283               	bcf	3,5	;RP0=0, select bank0
  6866  0604  00AB               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2
  6867  0605  1683               	bsf	3,5	;RP0=1, select bank1
  6868  0606  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6869  0607  1283               	bcf	3,5	;RP0=0, select bank0
  6870  0608  00AA               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1
  6871  0609  1683               	bsf	3,5	;RP0=1, select bank1
  6872  060A  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6873  060B  1283               	bcf	3,5	;RP0=0, select bank0
  6874  060C  00A9               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add
  6875  060D  1683               	bsf	3,5	;RP0=1, select bank1
  6876  060E  0838               	movf	Decodify_Command@sizedata^(0+128),w
  6877  060F  00B1               	movwf	??_Decodify_Command^(0+128)
  6878  0610  0831               	movf	??_Decodify_Command^(0+128),w
  6879  0611  1283               	bcf	3,5	;RP0=0, select bank0
  6880  0612  00AD               	movwf	EEPROM_24C1025_Read_Buffer_USART@sizedata
  6881  0613  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6882  0614  1683               	bsf	3,5	;RP0=1, select bank1
  6883  0615  00B2               	movwf	(??_Decodify_Command+1)^(0+128)
  6884  0616  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6885  0617  1283               	bcf	3,5	;RP0=0, select bank0
  6886  0618  00AE               	movwf	EEPROM_24C1025_Read_Buffer_USART@data
  6887  0619  1683               	bsf	3,5	;RP0=1, select bank3
  6888  061A  1703               	bsf	3,6	;RP1=1, select bank3
  6889  061B  0816               	movf	(_usart_protocol^(0+384)+6),w
  6890  061C  160A  118A  2504   	fcall	_EEPROM_24C1025_Read_Buffer_USART
  6891                           
  6892                           ;SlaveLiofilizadorVer1.c: 513:              };SlaveLiofilizadorVer1.c: 514:             
      +                           break;
  6893  061F  0008               	return
  6894  0620                     l5787:
  6895                           
  6896                           ;SlaveLiofilizadorVer1.c: 517:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6897  0620  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6898  0621  1283               	bcf	3,5	;RP0=0, select bank0
  6899  0622  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6900  0623  1683               	bsf	3,5	;RP0=1, select bank1
  6901  0624  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6902  0625  1283               	bcf	3,5	;RP0=0, select bank0
  6903  0626  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6904  0627  1683               	bsf	3,5	;RP0=1, select bank1
  6905  0628  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6906  0629  1283               	bcf	3,5	;RP0=0, select bank0
  6907  062A  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6908  062B  1683               	bsf	3,5	;RP0=1, select bank1
  6909  062C  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6910  062D  1283               	bcf	3,5	;RP0=0, select bank0
  6911  062E  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6912  062F  1683               	bsf	3,5	;RP0=1, select bank3
  6913  0630  1703               	bsf	3,6	;RP1=1, select bank3
  6914  0631  081B               	movf	(_usart_protocol^(0+384)+11),w
  6915  0632  1303               	bcf	3,6	;RP1=0, select bank1
  6916  0633  00B1               	movwf	??_Decodify_Command^(0+128)
  6917  0634  0831               	movf	??_Decodify_Command^(0+128),w
  6918  0635  1283               	bcf	3,5	;RP0=0, select bank0
  6919  0636  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6920  0637  309C               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6921  0638  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6922  0639  3001               	movlw	1
  6923  063A  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6924  063B  1683               	bsf	3,5	;RP0=1, select bank3
  6925  063C  1703               	bsf	3,6	;RP1=1, select bank3
  6926  063D  0816               	movf	(_usart_protocol^(0+384)+6),w
  6927  063E  160A  118A  2214  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6928  0643  2CEA               	goto	L9
  6929  0644                     l5793:	
  6930                           ;SlaveLiofilizadorVer1.c: 522:              Send_To_MB(3);
  6931                           
  6932                           
  6933                           ;SlaveLiofilizadorVer1.c: 527:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6934  0644  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6935  0645  1283               	bcf	3,5	;RP0=0, select bank0
  6936  0646  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6937  0647  1683               	bsf	3,5	;RP0=1, select bank1
  6938  0648  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6939  0649  1283               	bcf	3,5	;RP0=0, select bank0
  6940  064A  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6941  064B  1683               	bsf	3,5	;RP0=1, select bank1
  6942  064C  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6943  064D  1283               	bcf	3,5	;RP0=0, select bank0
  6944  064E  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6945  064F  1683               	bsf	3,5	;RP0=1, select bank1
  6946  0650  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6947  0651  1283               	bcf	3,5	;RP0=0, select bank0
  6948  0652  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6949  0653  309B               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6950  0654  1683               	bsf	3,5	;RP0=1, select bank1
  6951  0655  00B1               	movwf	??_Decodify_Command^(0+128)
  6952  0656  0831               	movf	??_Decodify_Command^(0+128),w
  6953  0657  1283               	bcf	3,5	;RP0=0, select bank0
  6954  0658  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6955  0659  1683               	bsf	3,5	;RP0=1, select bank3
  6956  065A  1703               	bsf	3,6	;RP1=1, select bank3
  6957  065B  0816               	movf	(_usart_protocol^(0+384)+6),w
  6958  065C  120A  158A  2042  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6959  0661  2CEA               	goto	L9
  6960  0662                     l5799:	
  6961                           ;SlaveLiofilizadorVer1.c: 530:              Send_To_MB(3);
  6962                           
  6963                           
  6964                           ;SlaveLiofilizadorVer1.c: 534:              {;SlaveLiofilizadorVer1.c: 535:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6965  0662  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6966  0663  1283               	bcf	3,5	;RP0=0, select bank0
  6967  0664  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6968  0665  1683               	bsf	3,5	;RP0=1, select bank1
  6969  0666  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6970  0667  1283               	bcf	3,5	;RP0=0, select bank0
  6971  0668  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6972  0669  1683               	bsf	3,5	;RP0=1, select bank1
  6973  066A  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6974  066B  1283               	bcf	3,5	;RP0=0, select bank0
  6975  066C  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6976  066D  1683               	bsf	3,5	;RP0=1, select bank1
  6977  066E  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6978  066F  1283               	bcf	3,5	;RP0=0, select bank0
  6979  0670  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6980  0671  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6981  0672  1683               	bsf	3,5	;RP0=1, select bank1
  6982  0673  00B1               	movwf	??_Decodify_Command^(0+128)
  6983  0674  0831               	movf	??_Decodify_Command^(0+128),w
  6984  0675  1283               	bcf	3,5	;RP0=0, select bank0
  6985  0676  00AD               	movwf	EEPROM_24C1025_Read_Str@buffer
  6986  0677  1683               	bsf	3,5	;RP0=1, select bank3
  6987  0678  1703               	bsf	3,6	;RP1=1, select bank3
  6988  0679  0816               	movf	(_usart_protocol^(0+384)+6),w
  6989  067A  160A  118A  238A  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6990                           
  6991                           ;SlaveLiofilizadorVer1.c: 539:              Send_To_MB(strlen(buffer)+1);
  6992  067F  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6993  0680  160A  158A  2132  120A  118A  	fcall	_strlen
  6994  0685  0820               	movf	?_strlen,w
  6995  0686  3E01               	addlw	1
  6996  0687  2C2B               	goto	L10
  6997  0688                     l5803:
  6998                           
  6999                           ;SlaveLiofilizadorVer1.c: 545:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  7000  0688  1703               	bsf	3,6	;RP1=1, select bank3
  7001  0689  0817               	movf	(_usart_protocol^(0+384)+7),w
  7002  068A  1303               	bcf	3,6	;RP1=0, select bank1
  7003  068B  00B1               	movwf	??_Decodify_Command^(0+128)
  7004  068C  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  7005  068D  0831               	movf	??_Decodify_Command^(0+128),w
  7006  068E  00AA               	movwf	EEPROM_24C1025_Fill_All@value^(0+128)
  7007  068F  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  7008  0690  00AB               	movwf	(EEPROM_24C1025_Fill_All@value+1)^(0+128)
  7009  0691  1703               	bsf	3,6	;RP1=1, select bank3
  7010  0692  0816               	movf	(_usart_protocol^(0+384)+6),w
  7011  0693  160A  158A  24F8  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  7012  0698  2CEA               	goto	L9
  7013  0699                     l5809:	
  7014                           ;SlaveLiofilizadorVer1.c: 547:              Send_To_MB(3);
  7015                           
  7016                           
  7017                           ;SlaveLiofilizadorVer1.c: 552:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7018  0699  1703               	bsf	3,6	;RP1=1, select bank3
  7019  069A  0816               	movf	(_usart_protocol^(0+384)+6),w
  7020  069B  1303               	bcf	3,6	;RP1=0, select bank1
  7021  069C  00B1               	movwf	??_Decodify_Command^(0+128)
  7022  069D  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  7023  069E  0831               	movf	??_Decodify_Command^(0+128),w
  7024  069F  00A8               	movwf	PROCULUS_Show_Screen@screen^(0+128)
  7025  06A0  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  7026  06A1  00A9               	movwf	(PROCULUS_Show_Screen@screen+1)^(0+128)
  7027  06A2  160A  158A  20D6  120A  118A  	fcall	_PROCULUS_Show_Screen
  7028  06A7  2CEA               	goto	L9
  7029  06A8                     l5815:	
  7030                           ;SlaveLiofilizadorVer1.c: 553:              Send_To_MB(3);
  7031                           
  7032                           
  7033                           ;SlaveLiofilizadorVer1.c: 558:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7034  06A8  1703               	bsf	3,6	;RP1=1, select bank3
  7035  06A9  0816               	movf	(_usart_protocol^(0+384)+6),w
  7036  06AA  1303               	bcf	3,6	;RP1=0, select bank1
  7037  06AB  00B1               	movwf	??_Decodify_Command^(0+128)
  7038  06AC  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  7039  06AD  0831               	movf	??_Decodify_Command^(0+128),w
  7040  06AE  00B2               	movwf	(??_Decodify_Command^(0+128)+1)
  7041  06AF  01B1               	clrf	??_Decodify_Command^(0+128)
  7042  06B0  1703               	bsf	3,6	;RP1=1, select bank3
  7043  06B1  0817               	movf	(_usart_protocol^(0+384)+7),w
  7044  06B2  1303               	bcf	3,6	;RP1=0, select bank1
  7045  06B3  0731               	addwf	??_Decodify_Command^(0+128),w
  7046  06B4  00A8               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  7047  06B5  3000               	movlw	0
  7048  06B6  1803               	skipnc
  7049  06B7  3001               	movlw	1
  7050  06B8  0732               	addwf	(??_Decodify_Command+1)^(0+128),w
  7051  06B9  00A9               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  7052  06BA  160A  158A  22E6  120A  118A  	fcall	_PROCULUS_Buzzer
  7053  06BF  2CEA               	goto	L9
  7054  06C0                     l5821:	
  7055                           ;SlaveLiofilizadorVer1.c: 560:              Send_To_MB(3);
  7056                           
  7057                           
  7058                           ;SlaveLiofilizadorVer1.c: 564:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  7059  06C0  1703               	bsf	3,6	;RP1=1, select bank3
  7060  06C1  0816               	movf	(_usart_protocol^(0+384)+6),w
  7061  06C2  1303               	bcf	3,6	;RP1=0, select bank1
  7062  06C3  00B1               	movwf	??_Decodify_Command^(0+128)
  7063  06C4  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  7064  06C5  0831               	movf	??_Decodify_Command^(0+128),w
  7065  06C6  00B2               	movwf	(??_Decodify_Command^(0+128)+1)
  7066  06C7  01B1               	clrf	??_Decodify_Command^(0+128)
  7067  06C8  1703               	bsf	3,6	;RP1=1, select bank3
  7068  06C9  0817               	movf	(_usart_protocol^(0+384)+7),w
  7069  06CA  1303               	bcf	3,6	;RP1=0, select bank1
  7070  06CB  0731               	addwf	??_Decodify_Command^(0+128),w
  7071  06CC  00AC               	movwf	PROCULUS_VP_Write_String@vp^(0+128)
  7072  06CD  3000               	movlw	0
  7073  06CE  1803               	skipnc
  7074  06CF  3001               	movlw	1
  7075  06D0  0732               	addwf	(??_Decodify_Command+1)^(0+128),w
  7076  06D1  00AD               	movwf	(PROCULUS_VP_Write_String@vp+1)^(0+128)
  7077  06D2  3098               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  7078  06D3  00B3               	movwf	(??_Decodify_Command+2)^(0+128)
  7079  06D4  0833               	movf	(??_Decodify_Command+2)^(0+128),w
  7080  06D5  00AE               	movwf	PROCULUS_VP_Write_String@text^(0+128)
  7081  06D6  160A  158A  2101  120A  118A  	fcall	_PROCULUS_VP_Write_String
  7082  06DB  2CEA               	goto	L9
  7083  06DC                     l5827:	
  7084                           ;SlaveLiofilizadorVer1.c: 567:              Send_To_MB(3);
  7085                           
  7086                           
  7087                           ;SlaveLiofilizadorVer1.c: 573:              if(usart_protocol.value[0]==0)
  7088  06DC  1703               	bsf	3,6	;RP1=1, select bank3
  7089  06DD  0816               	movf	(_usart_protocol^(0+384)+6),w
  7090  06DE  1D03               	btfss	3,2
  7091  06DF  2EEB               	goto	l5833
  7092                           
  7093                           ;SlaveLiofilizadorVer1.c: 574:                 {;SlaveLiofilizadorVer1.c: 575:          
      +                                 if(!usart_protocol.value[1])
  7094  06E0  0817               	movf	(_usart_protocol^(0+384)+7),w
  7095  06E1  1D03               	btfss	3,2
  7096  06E2  2EE7               	goto	l424
  7097                           
  7098                           ;SlaveLiofilizadorVer1.c: 576:                    PORTCbits.RC0=0;
  7099  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  7100  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  7101  06E5  1007               	bcf	7,0	;volatile
  7102  06E6  2CEA               	goto	L9
  7103  06E7                     l424:	
  7104                           ;SlaveLiofilizadorVer1.c: 577:                 else
  7105                           
  7106                           
  7107                           ;SlaveLiofilizadorVer1.c: 578:                    PORTCbits.RC0=1;
  7108  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  7109  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  7110  06E9  1407               	bsf	7,0	;volatile
  7111  06EA  2CEA               	goto	L9
  7112  06EB                     l5833:
  7113  06EB  0316               	decf	(_usart_protocol^(0+384)+6),w
  7114  06EC  1D03               	btfss	3,2
  7115  06ED  2CEA               	goto	L9
  7116                           
  7117                           ;SlaveLiofilizadorVer1.c: 581:                      {;SlaveLiofilizadorVer1.c: 582:     
      +                                            if(!usart_protocol.value[1])
  7118  06EE  0817               	movf	(_usart_protocol^(0+384)+7),w
  7119  06EF  1D03               	btfss	3,2
  7120  06F0  2EF5               	goto	l428
  7121                           
  7122                           ;SlaveLiofilizadorVer1.c: 583:                          PORTCbits.RC1=0;
  7123  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  7124  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  7125  06F3  1087               	bcf	7,1	;volatile
  7126  06F4  2CEA               	goto	L9
  7127  06F5                     l428:	
  7128                           ;SlaveLiofilizadorVer1.c: 584:                       else
  7129                           
  7130                           
  7131                           ;SlaveLiofilizadorVer1.c: 585:                          PORTCbits.RC1=1;
  7132  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  7133  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  7134  06F7  1487               	bsf	7,1	;volatile
  7135  06F8  2CEA               	goto	L9
  7136  06F9                     l5845:	
  7137                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(3);
  7138                           
  7139  06F9  1703               	bsf	3,6	;RP1=1, select bank3
  7140  06FA  0814               	movf	(_usart_protocol^(0+384)+4),w
  7141  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  7142  06FC  00B1               	movwf	??_Decodify_Command^(0+128)
  7143  06FD  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  7144                           
  7145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7146                           ; Switch size 1, requested type "simple"
  7147                           ; Number of cases is 1, Range of values is 0 to 0
  7148                           ; switch strategies available:
  7149                           ; Name         Instructions Cycles
  7150                           ; simple_byte            4     3 (average)
  7151                           ; direct_byte           11     8 (fixed)
  7152                           ; jumptable            260     6 (fixed)
  7153                           ;	Chosen strategy is simple_byte
  7154  06FE  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  7155  06FF  3A00               	xorlw	0	; case 0
  7156  0700  1903               	skipnz
  7157  0701  2F03               	goto	l5991
  7158  0702  2F4A               	goto	l430
  7159  0703                     l5991:
  7160                           
  7161                           ; Switch size 1, requested type "simple"
  7162                           ; Number of cases is 23, Range of values is 2 to 65
  7163                           ; switch strategies available:
  7164                           ; Name         Instructions Cycles
  7165                           ; simple_byte           70    36 (average)
  7166                           ; direct_byte          203    11 (fixed)
  7167                           ; jumptable            263     9 (fixed)
  7168                           ;	Chosen strategy is simple_byte
  7169  0703  0831               	movf	??_Decodify_Command^(0+128),w
  7170  0704  3A02               	xorlw	2	; case 2
  7171  0705  1903               	skipnz
  7172  0706  2CA3               	goto	l5707
  7173  0707  3A01               	xorlw	1	; case 3
  7174  0708  1903               	skipnz
  7175  0709  2CCD               	goto	l5715
  7176  070A  3A0B               	xorlw	11	; case 8
  7177  070B  1903               	skipnz
  7178  070C  2CDB               	goto	l5719
  7179  070D  3A01               	xorlw	1	; case 9
  7180  070E  1903               	skipnz
  7181  070F  2CF4               	goto	l5723
  7182  0710  3A03               	xorlw	3	; case 10
  7183  0711  1903               	skipnz
  7184  0712  2D0B               	goto	l5729
  7185  0713  3A01               	xorlw	1	; case 11
  7186  0714  1903               	skipnz
  7187  0715  2D33               	goto	l5739
  7188  0716  3A07               	xorlw	7	; case 12
  7189  0717  1903               	skipnz
  7190  0718  2D4F               	goto	l5745
  7191  0719  3A01               	xorlw	1	; case 13
  7192  071A  1903               	skipnz
  7193  071B  2D5D               	goto	l5751
  7194  071C  3A1C               	xorlw	28	; case 17
  7195  071D  1903               	skipnz
  7196  071E  2D6C               	goto	l5757
  7197  071F  3A03               	xorlw	3	; case 18
  7198  0720  1903               	skipnz
  7199  0721  2D8C               	goto	l5763
  7200  0722  3A01               	xorlw	1	; case 19
  7201  0723  1903               	skipnz
  7202  0724  2DB2               	goto	l5769
  7203  0725  3A07               	xorlw	7	; case 20
  7204  0726  1903               	skipnz
  7205  0727  2DD5               	goto	l5775
  7206  0728  3A01               	xorlw	1	; case 21
  7207  0729  1903               	skipnz
  7208  072A  2E44               	goto	l5793
  7209  072B  3A03               	xorlw	3	; case 22
  7210  072C  1903               	skipnz
  7211  072D  2E62               	goto	l5799
  7212  072E  3A01               	xorlw	1	; case 23
  7213  072F  1903               	skipnz
  7214  0730  2E20               	goto	l5787
  7215  0731  3A0F               	xorlw	15	; case 24
  7216  0732  1903               	skipnz
  7217  0733  2DF2               	goto	l5781
  7218  0734  3A01               	xorlw	1	; case 25
  7219  0735  1903               	skipnz
  7220  0736  2E88               	goto	l5803
  7221  0737  3A03               	xorlw	3	; case 26
  7222  0738  1903               	skipnz
  7223  0739  2C39               	goto	l5691
  7224  073A  3A38               	xorlw	56	; case 34
  7225  073B  1903               	skipnz
  7226  073C  2EC0               	goto	l5821
  7227  073D  3A06               	xorlw	6	; case 36
  7228  073E  1903               	skipnz
  7229  073F  2EA8               	goto	l5815
  7230  0740  3A01               	xorlw	1	; case 37
  7231  0741  1903               	skipnz
  7232  0742  2E99               	goto	l5809
  7233  0743  3A15               	xorlw	21	; case 48
  7234  0744  1903               	skipnz
  7235  0745  2EDC               	goto	l5827
  7236  0746  3A71               	xorlw	113	; case 65
  7237  0747  1903               	skipnz
  7238  0748  2C1F               	goto	l5685
  7239  0749  2F4A               	goto	l430
  7240  074A                     l430:
  7241  074A  0008               	return
  7242  074B                     __end_of_Decodify_Command:
  7243                           
  7244                           	psect	text15
  7245  1981                     __ptext15:	
  7246 ;; *************** function _strcpy *****************
  7247 ;; Defined at:
  7248 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcpy.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;  to              1    wreg     PTR unsigned char 
  7251 ;;		 -> buffer(33), 
  7252 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  7253 ;;		 -> STR_1(8), 
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;  to              1    2[BANK0 ] PTR unsigned char 
  7256 ;;		 -> buffer(33), 
  7257 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7258 ;;		 -> buffer(33), 
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  1    wreg      PTR unsigned char 
  7261 ;; Registers used:
  7262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7263 ;; Tracked objects:
  7264 ;;		On entry : 300/0
  7265 ;;		On exit  : B00/800
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7268 ;;      Params:         0       1       0       0       0
  7269 ;;      Locals:         0       2       0       0       0
  7270 ;;      Temps:          0       1       0       0       0
  7271 ;;      Totals:         0       4       0       0       0
  7272 ;;Total ram usage:        4 bytes
  7273 ;; Hardware stack levels used: 2
  7274 ;; Hardware stack levels required when called: 1
  7275 ;; This function calls:
  7276 ;;		Nothing
  7277 ;; This function is called by:
  7278 ;;		_Decodify_Command
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           
  7283                           ;psect for function _strcpy
  7284  1981                     _strcpy:
  7285                           
  7286                           ;incstack = 0
  7287                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  7288                           ;strcpy@to stored from wreg
  7289  1981  00A2               	movwf	strcpy@to
  7290  1982  0822               	movf	strcpy@to,w
  7291  1983  00A1               	movwf	??_strcpy
  7292  1984  0821               	movf	??_strcpy,w
  7293  1985  00A3               	movwf	strcpy@cp
  7294  1986                     l4721:
  7295  1986  0820               	movf	strcpy@from,w
  7296  1987  0084               	movwf	4
  7297  1988  160A  158A  200A  160A  158A  	fcall	stringdir
  7298  198D  00A1               	movwf	??_strcpy
  7299  198E  0823               	movf	strcpy@cp,w
  7300  198F  0084               	movwf	4
  7301  1990  0821               	movf	??_strcpy,w
  7302  1991  1783               	bsf	3,7	;select IRP bank2
  7303  1992  0080               	movwf	0
  7304  1993  0800               	movf	0,w
  7305  1994  1903               	btfsc	3,2
  7306  1995  0008               	return
  7307  1996  3001               	movlw	1
  7308  1997  00A1               	movwf	??_strcpy
  7309  1998  0821               	movf	??_strcpy,w
  7310  1999  07A3               	addwf	strcpy@cp,f
  7311  199A  3001               	movlw	1
  7312  199B  00A1               	movwf	??_strcpy
  7313  199C  0821               	movf	??_strcpy,w
  7314  199D  07A0               	addwf	strcpy@from,f
  7315  199E  2986               	goto	l4721
  7316  199F                     __end_of_strcpy:
  7317                           
  7318                           	psect	text16
  7319  1D7C                     __ptext16:	
  7320 ;; *************** function _USART_to_Protocol *****************
  7321 ;; Defined at:
  7322 ;;		line 77 in file "usart.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  usart_protoc    1    wreg     PTR struct .
  7325 ;;		 -> usart_protocol(58), 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  7328 ;;		 -> usart_protocol(58), 
  7329 ;;  i               2    2[BANK0 ] int 
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  1    wreg      void 
  7332 ;; Registers used:
  7333 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7334 ;; Tracked objects:
  7335 ;;		On entry : 300/100
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7339 ;;      Params:         0       0       0       0       0
  7340 ;;      Locals:         0       3       0       0       0
  7341 ;;      Temps:          0       2       0       0       0
  7342 ;;      Totals:         0       5       0       0       0
  7343 ;;Total ram usage:        5 bytes
  7344 ;; Hardware stack levels used: 1
  7345 ;; Hardware stack levels required when called: 1
  7346 ;; This function calls:
  7347 ;;		Nothing
  7348 ;; This function is called by:
  7349 ;;		_Decodify_Command
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           
  7354                           ;psect for function _USART_to_Protocol
  7355  1D7C                     _USART_to_Protocol:
  7356                           
  7357                           ;incstack = 0
  7358                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  7359                           ;USART_to_Protocol@usart_protocol stored from wreg
  7360  1D7C  1283               	bcf	3,5	;RP0=0, select bank0
  7361  1D7D  00A4               	movwf	USART_to_Protocol@usart_protocol
  7362                           
  7363                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  7364  1D7E  0824               	movf	USART_to_Protocol@usart_protocol,w
  7365  1D7F  0084               	movwf	4
  7366  1D80  1703               	bsf	3,6	;RP1=1, select bank2
  7367  1D81  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  7368  1D82  1783               	bsf	3,7	;select IRP bank2
  7369  1D83  0080               	movwf	0
  7370  1D84  0A84               	incf	4,f
  7371  1D85  0810               	movf	_usart_buffer^(0+256),w	;volatile
  7372  1D86  0080               	movwf	0
  7373                           
  7374                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  7375  1D87  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  7376  1D88  1303               	bcf	3,6	;RP1=0, select bank0
  7377  1D89  00A0               	movwf	??_USART_to_Protocol
  7378  1D8A  0824               	movf	USART_to_Protocol@usart_protocol,w
  7379  1D8B  3E02               	addlw	2
  7380  1D8C  0084               	movwf	4
  7381  1D8D  0820               	movf	??_USART_to_Protocol,w
  7382  1D8E  0080               	movwf	0
  7383                           
  7384                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  7385  1D8F  1703               	bsf	3,6	;RP1=1, select bank2
  7386  1D90  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  7387  1D91  1303               	bcf	3,6	;RP1=0, select bank0
  7388  1D92  00A0               	movwf	??_USART_to_Protocol
  7389  1D93  0824               	movf	USART_to_Protocol@usart_protocol,w
  7390  1D94  3E03               	addlw	3
  7391  1D95  0084               	movwf	4
  7392  1D96  0820               	movf	??_USART_to_Protocol,w
  7393  1D97  0080               	movwf	0
  7394                           
  7395                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  7396  1D98  1703               	bsf	3,6	;RP1=1, select bank2
  7397  1D99  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  7398  1D9A  1303               	bcf	3,6	;RP1=0, select bank0
  7399  1D9B  00A0               	movwf	??_USART_to_Protocol
  7400  1D9C  0824               	movf	USART_to_Protocol@usart_protocol,w
  7401  1D9D  3E04               	addlw	4
  7402  1D9E  0084               	movwf	4
  7403  1D9F  0820               	movf	??_USART_to_Protocol,w
  7404  1DA0  0080               	movwf	0
  7405                           
  7406                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  7407  1DA1  1703               	bsf	3,6	;RP1=1, select bank2
  7408  1DA2  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  7409  1DA3  1303               	bcf	3,6	;RP1=0, select bank0
  7410  1DA4  00A0               	movwf	??_USART_to_Protocol
  7411  1DA5  0824               	movf	USART_to_Protocol@usart_protocol,w
  7412  1DA6  3E05               	addlw	5
  7413  1DA7  0084               	movwf	4
  7414  1DA8  0820               	movf	??_USART_to_Protocol,w
  7415  1DA9  0080               	movwf	0
  7416                           
  7417                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  7418  1DAA  01A2               	clrf	USART_to_Protocol@i
  7419  1DAB  01A3               	clrf	USART_to_Protocol@i+1
  7420  1DAC                     l4715:
  7421  1DAC  0824               	movf	USART_to_Protocol@usart_protocol,w
  7422  1DAD  3E05               	addlw	5
  7423  1DAE  0084               	movwf	4
  7424  1DAF  0823               	movf	USART_to_Protocol@i+1,w
  7425  1DB0  3A80               	xorlw	128
  7426  1DB1  00A0               	movwf	??_USART_to_Protocol
  7427  1DB2  3080               	movlw	128
  7428  1DB3  0220               	subwf	??_USART_to_Protocol,w
  7429  1DB4  1D03               	skipz
  7430  1DB5  2DB8               	goto	u4385
  7431  1DB6  0800               	movf	0,w
  7432  1DB7  0222               	subwf	USART_to_Protocol@i,w
  7433  1DB8                     u4385:
  7434  1DB8  1803               	btfsc	3,0
  7435  1DB9  0008               	return
  7436                           
  7437                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  7438  1DBA  1283               	bcf	3,5	;RP0=0, select bank0
  7439  1DBB  1303               	bcf	3,6	;RP1=0, select bank0
  7440  1DBC  0822               	movf	USART_to_Protocol@i,w
  7441  1DBD  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  7442  1DBE  0084               	movwf	4
  7443  1DBF  1783               	bsf	3,7	;select IRP bank2
  7444  1DC0  0800               	movf	0,w
  7445  1DC1  00A0               	movwf	??_USART_to_Protocol
  7446  1DC2  0822               	movf	USART_to_Protocol@i,w
  7447  1DC3  0724               	addwf	USART_to_Protocol@usart_protocol,w
  7448  1DC4  00A1               	movwf	??_USART_to_Protocol+1
  7449  1DC5  0821               	movf	??_USART_to_Protocol+1,w
  7450  1DC6  3E06               	addlw	6
  7451  1DC7  0084               	movwf	4
  7452  1DC8  0820               	movf	??_USART_to_Protocol,w
  7453  1DC9  0080               	movwf	0
  7454  1DCA  3001               	movlw	1
  7455  1DCB  07A2               	addwf	USART_to_Protocol@i,f
  7456  1DCC  1803               	skipnc
  7457  1DCD  0AA3               	incf	USART_to_Protocol@i+1,f
  7458  1DCE  3000               	movlw	0
  7459  1DCF  07A3               	addwf	USART_to_Protocol@i+1,f
  7460  1DD0  2DAC               	goto	l4715
  7461  1DD1                     __end_of_USART_to_Protocol:
  7462                           
  7463                           	psect	text17
  7464  1A6B                     __ptext17:	
  7465 ;; *************** function _Send_To_MB *****************
  7466 ;; Defined at:
  7467 ;;		line 597 in file "SlaveLiofilizadorVer1.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;  size            1    wreg     unsigned char 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  size            1    1[BANK0 ] unsigned char 
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  1    wreg      void 
  7474 ;; Registers used:
  7475 ;;		wreg, status,2, status,0, pclath, cstack
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/800
  7478 ;;		On exit  : 300/100
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7481 ;;      Params:         0       0       0       0       0
  7482 ;;      Locals:         0       1       0       0       0
  7483 ;;      Temps:          0       0       0       0       0
  7484 ;;      Totals:         0       1       0       0       0
  7485 ;;Total ram usage:        1 bytes
  7486 ;; Hardware stack levels used: 1
  7487 ;; Hardware stack levels required when called: 2
  7488 ;; This function calls:
  7489 ;;		_USART_putc
  7490 ;; This function is called by:
  7491 ;;		_Decodify_Command
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           
  7496                           ;psect for function _Send_To_MB
  7497  1A6B                     _Send_To_MB:
  7498                           
  7499                           ;incstack = 0
  7500                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  7501                           ;Send_To_MB@size stored from wreg
  7502  1A6B  1283               	bcf	3,5	;RP0=0, select bank0
  7503  1A6C  1303               	bcf	3,6	;RP1=0, select bank0
  7504  1A6D  00A1               	movwf	Send_To_MB@size
  7505                           
  7506                           ;SlaveLiofilizadorVer1.c: 599:      USART_putc(0xAA);
  7507  1A6E  30AA               	movlw	170
  7508  1A6F  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  7509                           
  7510                           ;SlaveLiofilizadorVer1.c: 600:      USART_putc(0xBB);
  7511  1A74  30BB               	movlw	187
  7512  1A75  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  7513                           
  7514                           ;SlaveLiofilizadorVer1.c: 601:      USART_putc(Board_Number);
  7515  1A7A  0861               	movf	_Board_Number^(0+128),w
  7516  1A7B  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  7517                           
  7518                           ;SlaveLiofilizadorVer1.c: 602:      USART_putc(0x00);
  7519  1A80  3000               	movlw	0
  7520  1A81  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  7521                           
  7522                           ;SlaveLiofilizadorVer1.c: 603:      USART_putc(usart_protocol.command);
  7523  1A86  1703               	bsf	3,6	;RP1=1, select bank3
  7524  1A87  0814               	movf	(_usart_protocol^(0+384)+4),w
  7525  1A88  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  7526                           
  7527                           ;SlaveLiofilizadorVer1.c: 604:      USART_putc(size);
  7528  1A8D  1283               	bcf	3,5	;RP0=0, select bank0
  7529  1A8E  0821               	movf	Send_To_MB@size,w
  7530  1A8F  160A  158A  20B1   	fcall	_USART_putc
  7531  1A92  0008               	return
  7532  1A93                     __end_of_Send_To_MB:
  7533                           
  7534                           	psect	text18
  7535  187D                     __ptext18:	
  7536 ;; *************** function _Send_Reply_OK *****************
  7537 ;; Defined at:
  7538 ;;		line 608 in file "SlaveLiofilizadorVer1.c"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;		None
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;		None
  7543 ;; Return value:  Size  Location     Type
  7544 ;;                  1    wreg      void 
  7545 ;; Registers used:
  7546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7547 ;; Tracked objects:
  7548 ;;		On entry : 300/100
  7549 ;;		On exit  : 300/100
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7552 ;;      Params:         0       0       0       0       0
  7553 ;;      Locals:         0       0       0       0       0
  7554 ;;      Temps:          0       0       0       0       0
  7555 ;;      Totals:         0       0       0       0       0
  7556 ;;Total ram usage:        0 bytes
  7557 ;; Hardware stack levels used: 1
  7558 ;; Hardware stack levels required when called: 3
  7559 ;; This function calls:
  7560 ;;		_USART_put_string
  7561 ;; This function is called by:
  7562 ;;		_Decodify_Command
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           
  7567                           ;psect for function _Send_Reply_OK
  7568  187D                     _Send_Reply_OK:
  7569                           
  7570                           ;SlaveLiofilizadorVer1.c: 609:      USART_put_string("OK");
  7571                           
  7572                           ;incstack = 0
  7573                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7574  187D  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7575  187E  1283               	bcf	3,5	;RP0=0, select bank0
  7576  187F  00A1               	movwf	USART_put_string@vetor
  7577  1880  3080               	movlw	128
  7578  1881  00A2               	movwf	USART_put_string@vetor+1
  7579  1882  160A  158A  2373   	fcall	_USART_put_string
  7580  1885  0008               	return
  7581  1886                     __end_of_Send_Reply_OK:
  7582                           
  7583                           	psect	text19
  7584  1B73                     __ptext19:	
  7585 ;; *************** function _USART_put_string *****************
  7586 ;; Defined at:
  7587 ;;		line 167 in file "usart.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  7590 ;;		 -> STR_2(3), buffer(33), 
  7591 ;; Auto vars:     Size  Location     Type
  7592 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  7593 ;;		 -> STR_2(3), buffer(33), 
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  1    wreg      void 
  7596 ;; Registers used:
  7597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7598 ;; Tracked objects:
  7599 ;;		On entry : 300/800
  7600 ;;		On exit  : 300/100
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7603 ;;      Params:         0       2       0       0       0
  7604 ;;      Locals:         0       2       0       0       0
  7605 ;;      Temps:          0       0       0       0       0
  7606 ;;      Totals:         0       4       0       0       0
  7607 ;;Total ram usage:        4 bytes
  7608 ;; Hardware stack levels used: 1
  7609 ;; Hardware stack levels required when called: 2
  7610 ;; This function calls:
  7611 ;;		_USART_putc
  7612 ;; This function is called by:
  7613 ;;		_Decodify_Command
  7614 ;;		_Send_Reply_OK
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           
  7618                           
  7619                           ;psect for function _USART_put_string
  7620  1B73                     _USART_put_string:
  7621                           
  7622                           ;usart.c: 167: void USART_put_string(char *vetor);usart.c: 168: {;usart.c: 169:     char
      +                           *ptr;;usart.c: 170:     ptr=vetor;
  7623                           
  7624                           ;incstack = 0
  7625                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7626  1B73  0821               	movf	USART_put_string@vetor,w
  7627  1B74  00A3               	movwf	USART_put_string@ptr
  7628  1B75  0822               	movf	USART_put_string@vetor+1,w
  7629  1B76  00A4               	movwf	USART_put_string@ptr+1
  7630  1B77                     l3831:	
  7631                           ;usart.c: 171:     while(*ptr){
  7632                           
  7633                           
  7634                           ;usart.c: 171:     while(*ptr){
  7635  1B77  0824               	movf	USART_put_string@ptr+1,w
  7636  1B78  00FF               	movwf	127
  7637  1B79  0823               	movf	USART_put_string@ptr,w
  7638  1B7A  0084               	movwf	4
  7639  1B7B  160A  158A  2000  160A  158A  	fcall	stringtab
  7640  1B80  3A00               	xorlw	0
  7641  1B81  1903               	btfsc	3,2
  7642  1B82  2B99               	goto	l3833
  7643                           
  7644                           ;usart.c: 172:         USART_putc(*ptr);
  7645  1B83  0824               	movf	USART_put_string@ptr+1,w
  7646  1B84  00FF               	movwf	127
  7647  1B85  0823               	movf	USART_put_string@ptr,w
  7648  1B86  0084               	movwf	4
  7649  1B87  160A  158A  2000  160A  158A  	fcall	stringtab
  7650  1B8C  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  7651                           
  7652                           ;usart.c: 173:         ptr++;
  7653  1B91  3001               	movlw	1
  7654  1B92  1283               	bcf	3,5	;RP0=0, select bank0
  7655  1B93  07A3               	addwf	USART_put_string@ptr,f
  7656  1B94  1803               	skipnc
  7657  1B95  0AA4               	incf	USART_put_string@ptr+1,f
  7658  1B96  3000               	movlw	0
  7659  1B97  07A4               	addwf	USART_put_string@ptr+1,f
  7660  1B98  2B77               	goto	l3831
  7661  1B99                     l3833:
  7662                           
  7663                           ;usart.c: 175:     USART_putc(*ptr);
  7664  1B99  0824               	movf	USART_put_string@ptr+1,w
  7665  1B9A  00FF               	movwf	127
  7666  1B9B  0823               	movf	USART_put_string@ptr,w
  7667  1B9C  0084               	movwf	4
  7668  1B9D  160A  158A  2000  160A  158A  	fcall	stringtab
  7669  1BA2  160A  158A  20B1   	fcall	_USART_putc
  7670  1BA5  0008               	return
  7671  1BA6                     __end_of_USART_put_string:
  7672                           
  7673                           	psect	text20
  7674  1EF0                     __ptext20:	
  7675 ;; *************** function _Save_Log *****************
  7676 ;; Defined at:
  7677 ;;		line 992 in file "SlaveLiofilizadorVer1.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;  add_datalog     4   10[BANK1 ] unsigned long 
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;		None
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  1    wreg      void 
  7684 ;; Registers used:
  7685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7686 ;; Tracked objects:
  7687 ;;		On entry : 300/100
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7691 ;;      Params:         0       0       4       0       0
  7692 ;;      Locals:         0       0       0       0       0
  7693 ;;      Temps:          0       0       0       0       0
  7694 ;;      Totals:         0       0       4       0       0
  7695 ;;Total ram usage:        4 bytes
  7696 ;; Hardware stack levels used: 1
  7697 ;; Hardware stack levels required when called: 5
  7698 ;; This function calls:
  7699 ;;		_EEPROM_24C1025_Write_Int
  7700 ;;		___flmul
  7701 ;;		___fltol
  7702 ;; This function is called by:
  7703 ;;		_Decodify_Command
  7704 ;; This function uses a non-reentrant model
  7705 ;;
  7706                           
  7707                           
  7708                           ;psect for function _Save_Log
  7709  1EF0                     _Save_Log:
  7710                           
  7711                           ;SlaveLiofilizadorVer1.c: 993:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (Tensao1
      +                          *10.0));
  7712                           
  7713                           ;incstack = 0
  7714                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7715  1EF0  082D               	movf	(Save_Log@add_datalog+3)^(0+128),w
  7716  1EF1  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  7717  1EF2  082C               	movf	(Save_Log@add_datalog+2)^(0+128),w
  7718  1EF3  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  7719  1EF4  082B               	movf	(Save_Log@add_datalog+1)^(0+128),w
  7720  1EF5  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  7721  1EF6  082A               	movf	Save_Log@add_datalog^(0+128),w
  7722  1EF7  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  7723  1EF8  084C               	movf	(_Tensao1+3)^(0+128),w
  7724  1EF9  1283               	bcf	3,5	;RP0=0, select bank0
  7725  1EFA  00D2               	movwf	___flmul@a+3
  7726  1EFB  1683               	bsf	3,5	;RP0=1, select bank1
  7727  1EFC  084B               	movf	(_Tensao1+2)^(0+128),w
  7728  1EFD  1283               	bcf	3,5	;RP0=0, select bank0
  7729  1EFE  00D1               	movwf	___flmul@a+2
  7730  1EFF  1683               	bsf	3,5	;RP0=1, select bank1
  7731  1F00  084A               	movf	(_Tensao1+1)^(0+128),w
  7732  1F01  1283               	bcf	3,5	;RP0=0, select bank0
  7733  1F02  00D0               	movwf	___flmul@a+1
  7734  1F03  1683               	bsf	3,5	;RP0=1, select bank1
  7735  1F04  0849               	movf	_Tensao1^(0+128),w
  7736  1F05  1283               	bcf	3,5	;RP0=0, select bank0
  7737  1F06  00CF               	movwf	___flmul@a
  7738  1F07  3041               	movlw	65
  7739  1F08  00CE               	movwf	___flmul@b+3
  7740  1F09  3020               	movlw	32
  7741  1F0A  00CD               	movwf	___flmul@b+2
  7742  1F0B  3000               	movlw	0
  7743  1F0C  00CC               	movwf	___flmul@b+1
  7744  1F0D  3000               	movlw	0
  7745  1F0E  00CB               	movwf	___flmul@b
  7746  1F0F  120A  158A  250B  160A  158A  	fcall	___flmul
  7747  1F14  084E               	movf	?___flmul+3,w
  7748  1F15  00E8               	movwf	___fltol@f1+3
  7749  1F16  084D               	movf	?___flmul+2,w
  7750  1F17  00E7               	movwf	___fltol@f1+2
  7751  1F18  084C               	movf	?___flmul+1,w
  7752  1F19  00E6               	movwf	___fltol@f1+1
  7753  1F1A  084B               	movf	?___flmul,w
  7754  1F1B  00E5               	movwf	___fltol@f1
  7755  1F1C  160A  158A  2685  160A  158A  	fcall	___fltol
  7756  1F21  0866               	movf	?___fltol+1,w
  7757  1F22  1683               	bsf	3,5	;RP0=1, select bank1
  7758  1F23  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  7759  1F24  1283               	bcf	3,5	;RP0=0, select bank0
  7760  1F25  0865               	movf	?___fltol,w
  7761  1F26  1683               	bsf	3,5	;RP0=1, select bank1
  7762  1F27  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  7763  1F28  3000               	movlw	0
  7764  1F29  160A  158A  2293  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
  7765                           
  7766                           ;SlaveLiofilizadorVer1.c: 994:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (Vaccum0
      +                          *10.0));
  7767  1F2E  1683               	bsf	3,5	;RP0=1, select bank1
  7768  1F2F  1303               	bcf	3,6	;RP1=0, select bank1
  7769  1F30  082D               	movf	(Save_Log@add_datalog+3)^(0+128),w
  7770  1F31  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  7771  1F32  082C               	movf	(Save_Log@add_datalog+2)^(0+128),w
  7772  1F33  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  7773  1F34  082B               	movf	(Save_Log@add_datalog+1)^(0+128),w
  7774  1F35  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  7775  1F36  082A               	movf	Save_Log@add_datalog^(0+128),w
  7776  1F37  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  7777  1F38  0850               	movf	(_Vaccum0+3)^(0+128),w
  7778  1F39  1283               	bcf	3,5	;RP0=0, select bank0
  7779  1F3A  00D2               	movwf	___flmul@a+3
  7780  1F3B  1683               	bsf	3,5	;RP0=1, select bank1
  7781  1F3C  084F               	movf	(_Vaccum0+2)^(0+128),w
  7782  1F3D  1283               	bcf	3,5	;RP0=0, select bank0
  7783  1F3E  00D1               	movwf	___flmul@a+2
  7784  1F3F  1683               	bsf	3,5	;RP0=1, select bank1
  7785  1F40  084E               	movf	(_Vaccum0+1)^(0+128),w
  7786  1F41  1283               	bcf	3,5	;RP0=0, select bank0
  7787  1F42  00D0               	movwf	___flmul@a+1
  7788  1F43  1683               	bsf	3,5	;RP0=1, select bank1
  7789  1F44  084D               	movf	_Vaccum0^(0+128),w
  7790  1F45  1283               	bcf	3,5	;RP0=0, select bank0
  7791  1F46  00CF               	movwf	___flmul@a
  7792  1F47  3041               	movlw	65
  7793  1F48  00CE               	movwf	___flmul@b+3
  7794  1F49  3020               	movlw	32
  7795  1F4A  00CD               	movwf	___flmul@b+2
  7796  1F4B  3000               	movlw	0
  7797  1F4C  00CC               	movwf	___flmul@b+1
  7798  1F4D  3000               	movlw	0
  7799  1F4E  00CB               	movwf	___flmul@b
  7800  1F4F  120A  158A  250B  160A  158A  	fcall	___flmul
  7801  1F54  084E               	movf	?___flmul+3,w
  7802  1F55  00E8               	movwf	___fltol@f1+3
  7803  1F56  084D               	movf	?___flmul+2,w
  7804  1F57  00E7               	movwf	___fltol@f1+2
  7805  1F58  084C               	movf	?___flmul+1,w
  7806  1F59  00E6               	movwf	___fltol@f1+1
  7807  1F5A  084B               	movf	?___flmul,w
  7808  1F5B  00E5               	movwf	___fltol@f1
  7809  1F5C  160A  158A  2685  160A  158A  	fcall	___fltol
  7810  1F61  0866               	movf	?___fltol+1,w
  7811  1F62  1683               	bsf	3,5	;RP0=1, select bank1
  7812  1F63  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  7813  1F64  1283               	bcf	3,5	;RP0=0, select bank0
  7814  1F65  0865               	movf	?___fltol,w
  7815  1F66  1683               	bsf	3,5	;RP0=1, select bank1
  7816  1F67  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  7817  1F68  3001               	movlw	1
  7818  1F69  160A  158A  2293   	fcall	_EEPROM_24C1025_Write_Int
  7819  1F6C  0008               	return
  7820  1F6D                     __end_of_Save_Log:
  7821                           
  7822                           	psect	text21
  7823  1E85                     __ptext21:	
  7824 ;; *************** function ___fltol *****************
  7825 ;; Defined at:
  7826 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  f1              4   69[BANK0 ] void 
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;  exp1            1   79[BANK0 ] unsigned char 
  7831 ;;  sign1           1   78[BANK0 ] unsigned char 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  4   69[BANK0 ] long 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0
  7836 ;; Tracked objects:
  7837 ;;		On entry : 300/0
  7838 ;;		On exit  : 300/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7841 ;;      Params:         0       4       0       0       0
  7842 ;;      Locals:         0       2       0       0       0
  7843 ;;      Temps:          0       5       0       0       0
  7844 ;;      Totals:         0      11       0       0       0
  7845 ;;Total ram usage:       11 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; Hardware stack levels required when called: 1
  7848 ;; This function calls:
  7849 ;;		Nothing
  7850 ;; This function is called by:
  7851 ;;		_Decodify_Command
  7852 ;;		_Save_Log
  7853 ;; This function uses a non-reentrant model
  7854 ;;
  7855                           
  7856                           
  7857                           ;psect for function ___fltol
  7858  1E85                     ___fltol:
  7859                           
  7860                           ;incstack = 0
  7861                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7862  1E85  1003               	clrc
  7863  1E86  0D67               	rlf	___fltol@f1+2,w
  7864  1E87  0D68               	rlf	___fltol@f1+3,w
  7865  1E88  00E9               	movwf	??___fltol
  7866  1E89  0869               	movf	??___fltol,w
  7867  1E8A  00EF               	movwf	___fltol@exp1
  7868  1E8B  086F               	movf	___fltol@exp1,w
  7869  1E8C  1D03               	btfss	3,2
  7870  1E8D  2E97               	goto	l3933
  7871  1E8E                     l3929:
  7872  1E8E  3000               	movlw	0
  7873  1E8F  00E8               	movwf	?___fltol+3
  7874  1E90  3000               	movlw	0
  7875  1E91  00E7               	movwf	?___fltol+2
  7876  1E92  3000               	movlw	0
  7877  1E93  00E6               	movwf	?___fltol+1
  7878  1E94  3000               	movlw	0
  7879  1E95  00E5               	movwf	?___fltol
  7880  1E96  0008               	return
  7881  1E97                     l3933:
  7882  1E97  0865               	movf	___fltol@f1,w
  7883  1E98  00E9               	movwf	??___fltol
  7884  1E99  0866               	movf	___fltol@f1+1,w
  7885  1E9A  00EA               	movwf	??___fltol+1
  7886  1E9B  0867               	movf	___fltol@f1+2,w
  7887  1E9C  00EB               	movwf	??___fltol+2
  7888  1E9D  0868               	movf	___fltol@f1+3,w
  7889  1E9E  00EC               	movwf	??___fltol+3
  7890  1E9F  301F               	movlw	31
  7891  1EA0                     u3045:
  7892  1EA0  1003               	clrc
  7893  1EA1  0CEC               	rrf	??___fltol+3,f
  7894  1EA2  0CEB               	rrf	??___fltol+2,f
  7895  1EA3  0CEA               	rrf	??___fltol+1,f
  7896  1EA4  0CE9               	rrf	??___fltol,f
  7897  1EA5  3EFF               	addlw	-1
  7898  1EA6  1D03               	skipz
  7899  1EA7  2EA0               	goto	u3045
  7900  1EA8  0869               	movf	??___fltol,w
  7901  1EA9  00ED               	movwf	??___fltol+4
  7902  1EAA  086D               	movf	??___fltol+4,w
  7903  1EAB  00EE               	movwf	___fltol@sign1
  7904  1EAC  17E7               	bsf	___fltol@f1+2,7
  7905  1EAD  30FF               	movlw	255
  7906  1EAE  05E5               	andwf	___fltol@f1,f
  7907  1EAF  30FF               	movlw	255
  7908  1EB0  05E6               	andwf	___fltol@f1+1,f
  7909  1EB1  30FF               	movlw	255
  7910  1EB2  05E7               	andwf	___fltol@f1+2,f
  7911  1EB3  3000               	movlw	0
  7912  1EB4  05E8               	andwf	___fltol@f1+3,f
  7913  1EB5  3096               	movlw	150
  7914  1EB6  02EF               	subwf	___fltol@exp1,f
  7915  1EB7  1FEF               	btfss	___fltol@exp1,7
  7916  1EB8  2ECE               	goto	l3951
  7917  1EB9  086F               	movf	___fltol@exp1,w
  7918  1EBA  3A80               	xorlw	128
  7919  1EBB  3E97               	addlw	151
  7920  1EBC  1C03               	btfss	3,0
  7921  1EBD  2E8E               	goto	l3929
  7922  1EBE                     l3949:
  7923  1EBE  3001               	movlw	1
  7924  1EBF                     u3075:
  7925  1EBF  1003               	clrc
  7926  1EC0  0CE8               	rrf	___fltol@f1+3,f
  7927  1EC1  0CE7               	rrf	___fltol@f1+2,f
  7928  1EC2  0CE6               	rrf	___fltol@f1+1,f
  7929  1EC3  0CE5               	rrf	___fltol@f1,f
  7930  1EC4  3EFF               	addlw	-1
  7931  1EC5  1D03               	skipz
  7932  1EC6  2EBF               	goto	u3075
  7933  1EC7  3001               	movlw	1
  7934  1EC8  00E9               	movwf	??___fltol
  7935  1EC9  0869               	movf	??___fltol,w
  7936  1ECA  07EF               	addwf	___fltol@exp1,f
  7937  1ECB  1903               	btfsc	3,2
  7938  1ECC  2EE1               	goto	l3959
  7939  1ECD  2EBE               	goto	l3949
  7940  1ECE                     l3951:
  7941  1ECE  3020               	movlw	32
  7942  1ECF  026F               	subwf	___fltol@exp1,w
  7943  1ED0  1803               	btfsc	3,0
  7944  1ED1  2E8E               	goto	l3929
  7945  1ED2                     l1190:
  7946  1ED2  086F               	movf	___fltol@exp1,w
  7947  1ED3  1903               	btfsc	3,2
  7948  1ED4  2EE1               	goto	l3959
  7949  1ED5  3001               	movlw	1
  7950  1ED6  00E9               	movwf	??___fltol
  7951  1ED7                     u3105:
  7952  1ED7  1003               	clrc
  7953  1ED8  0DE5               	rlf	___fltol@f1,f
  7954  1ED9  0DE6               	rlf	___fltol@f1+1,f
  7955  1EDA  0DE7               	rlf	___fltol@f1+2,f
  7956  1EDB  0DE8               	rlf	___fltol@f1+3,f
  7957  1EDC  0BE9               	decfsz	??___fltol,f
  7958  1EDD  2ED7               	goto	u3105
  7959  1EDE  3001               	movlw	1
  7960  1EDF  02EF               	subwf	___fltol@exp1,f
  7961  1EE0  2ED2               	goto	l1190
  7962  1EE1                     l3959:
  7963  1EE1  086E               	movf	___fltol@sign1,w
  7964  1EE2  1903               	btfsc	3,2
  7965  1EE3  0008               	return
  7966  1EE4  09E5               	comf	___fltol@f1,f
  7967  1EE5  09E6               	comf	___fltol@f1+1,f
  7968  1EE6  09E7               	comf	___fltol@f1+2,f
  7969  1EE7  09E8               	comf	___fltol@f1+3,f
  7970  1EE8  0AE5               	incf	___fltol@f1,f
  7971  1EE9  1903               	skipnz
  7972  1EEA  0AE6               	incf	___fltol@f1+1,f
  7973  1EEB  1903               	skipnz
  7974  1EEC  0AE7               	incf	___fltol@f1+2,f
  7975  1EED  1903               	skipnz
  7976  1EEE  0AE8               	incf	___fltol@f1+3,f
  7977  1EEF  0008               	return
  7978  1EF0                     __end_of___fltol:
  7979                           
  7980                           	psect	text22
  7981  0D0B                     __ptext22:	
  7982 ;; *************** function ___flmul *****************
  7983 ;; Defined at:
  7984 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;  b               4   43[BANK0 ] long 
  7987 ;;  a               4   47[BANK0 ] long 
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;  prod            4   63[BANK0 ] struct .
  7990 ;;  grs             4   58[BANK0 ] unsigned long 
  7991 ;;  temp            2   67[BANK0 ] struct .
  7992 ;;  bexp            1   62[BANK0 ] unsigned char 
  7993 ;;  aexp            1   57[BANK0 ] unsigned char 
  7994 ;;  sign            1   56[BANK0 ] unsigned char 
  7995 ;; Return value:  Size  Location     Type
  7996 ;;                  4   43[BANK0 ] unsigned char 
  7997 ;; Registers used:
  7998 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7999 ;; Tracked objects:
  8000 ;;		On entry : 300/0
  8001 ;;		On exit  : 300/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8004 ;;      Params:         0       8       0       0       0
  8005 ;;      Locals:         0      13       0       0       0
  8006 ;;      Temps:          0       5       0       0       0
  8007 ;;      Totals:         0      26       0       0       0
  8008 ;;Total ram usage:       26 bytes
  8009 ;; Hardware stack levels used: 1
  8010 ;; Hardware stack levels required when called: 2
  8011 ;; This function calls:
  8012 ;;		__Umul8_16
  8013 ;; This function is called by:
  8014 ;;		_Decodify_Command
  8015 ;;		_MediaPlacaVaccum
  8016 ;;		_Save_Log
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           
  8021                           ;psect for function ___flmul
  8022  0D0B                     ___flmul:
  8023                           
  8024                           ;incstack = 0
  8025                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8026  0D0B  084E               	movf	___flmul@b+3,w
  8027  0D0C  3980               	andlw	128
  8028  0D0D  00D3               	movwf	??___flmul
  8029  0D0E  0853               	movf	??___flmul,w
  8030  0D0F  00D8               	movwf	___flmul@sign
  8031  0D10  084E               	movf	___flmul@b+3,w
  8032  0D11  00D3               	movwf	??___flmul
  8033  0D12  0753               	addwf	??___flmul,w
  8034  0D13  00D4               	movwf	??___flmul+1
  8035  0D14  0854               	movf	??___flmul+1,w
  8036  0D15  00DE               	movwf	___flmul@bexp
  8037  0D16  1BCD               	btfsc	___flmul@b+2,7
  8038  0D17  145E               	bsf	___flmul@bexp,0
  8039  0D18  085E               	movf	___flmul@bexp,w
  8040  0D19  1903               	btfsc	3,2
  8041  0D1A  2D28               	goto	l4199
  8042  0D1B  0A5E               	incf	___flmul@bexp,w
  8043  0D1C  1D03               	btfss	3,2
  8044  0D1D  2D26               	goto	l4197
  8045  0D1E  3000               	movlw	0
  8046  0D1F  00CE               	movwf	___flmul@b+3
  8047  0D20  3000               	movlw	0
  8048  0D21  00CD               	movwf	___flmul@b+2
  8049  0D22  3000               	movlw	0
  8050  0D23  00CC               	movwf	___flmul@b+1
  8051  0D24  3000               	movlw	0
  8052  0D25  00CB               	movwf	___flmul@b
  8053  0D26                     l4197:
  8054  0D26  17CD               	bsf	___flmul@b+2,7
  8055  0D27  2D30               	goto	l4201
  8056  0D28                     l4199:
  8057  0D28  3000               	movlw	0
  8058  0D29  00CE               	movwf	___flmul@b+3
  8059  0D2A  3000               	movlw	0
  8060  0D2B  00CD               	movwf	___flmul@b+2
  8061  0D2C  3000               	movlw	0
  8062  0D2D  00CC               	movwf	___flmul@b+1
  8063  0D2E  3000               	movlw	0
  8064  0D2F  00CB               	movwf	___flmul@b
  8065  0D30                     l4201:
  8066  0D30  0852               	movf	___flmul@a+3,w
  8067  0D31  3980               	andlw	128
  8068  0D32  00D3               	movwf	??___flmul
  8069  0D33  0853               	movf	??___flmul,w
  8070  0D34  06D8               	xorwf	___flmul@sign,f
  8071  0D35  0852               	movf	___flmul@a+3,w
  8072  0D36  00D3               	movwf	??___flmul
  8073  0D37  0753               	addwf	??___flmul,w
  8074  0D38  00D4               	movwf	??___flmul+1
  8075  0D39  0854               	movf	??___flmul+1,w
  8076  0D3A  00D9               	movwf	___flmul@aexp
  8077  0D3B  1BD1               	btfsc	___flmul@a+2,7
  8078  0D3C  1459               	bsf	___flmul@aexp,0
  8079  0D3D  0859               	movf	___flmul@aexp,w
  8080  0D3E  1903               	btfsc	3,2
  8081  0D3F  2D4D               	goto	l4217
  8082  0D40  0A59               	incf	___flmul@aexp,w
  8083  0D41  1D03               	btfss	3,2
  8084  0D42  2D4B               	goto	l4215
  8085  0D43  3000               	movlw	0
  8086  0D44  00D2               	movwf	___flmul@a+3
  8087  0D45  3000               	movlw	0
  8088  0D46  00D1               	movwf	___flmul@a+2
  8089  0D47  3000               	movlw	0
  8090  0D48  00D0               	movwf	___flmul@a+1
  8091  0D49  3000               	movlw	0
  8092  0D4A  00CF               	movwf	___flmul@a
  8093  0D4B                     l4215:
  8094  0D4B  17D1               	bsf	___flmul@a+2,7
  8095  0D4C  2D55               	goto	l4219
  8096  0D4D                     l4217:
  8097  0D4D  3000               	movlw	0
  8098  0D4E  00D2               	movwf	___flmul@a+3
  8099  0D4F  3000               	movlw	0
  8100  0D50  00D1               	movwf	___flmul@a+2
  8101  0D51  3000               	movlw	0
  8102  0D52  00D0               	movwf	___flmul@a+1
  8103  0D53  3000               	movlw	0
  8104  0D54  00CF               	movwf	___flmul@a
  8105  0D55                     l4219:
  8106  0D55  0859               	movf	___flmul@aexp,w
  8107  0D56  1D03               	btfss	3,2
  8108  0D57  085E               	movf	___flmul@bexp,w
  8109  0D58  1D03               	btfss	3,2
  8110  0D59  2D63               	goto	l4227
  8111  0D5A  3000               	movlw	0
  8112  0D5B  00CE               	movwf	?___flmul+3
  8113  0D5C  3000               	movlw	0
  8114  0D5D  00CD               	movwf	?___flmul+2
  8115  0D5E  3000               	movlw	0
  8116  0D5F  00CC               	movwf	?___flmul+1
  8117  0D60  3000               	movlw	0
  8118  0D61  00CB               	movwf	?___flmul
  8119  0D62  0008               	return
  8120  0D63                     l4227:
  8121  0D63  084B               	movf	___flmul@b,w
  8122  0D64  00D3               	movwf	??___flmul
  8123  0D65  0853               	movf	??___flmul,w
  8124  0D66  00A0               	movwf	__Umul8_16@multiplicand
  8125  0D67  0851               	movf	___flmul@a+2,w
  8126  0D68  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8127  0D6D  0821               	movf	?__Umul8_16+1,w
  8128  0D6E  00E4               	movwf	___flmul@temp+1
  8129  0D6F  0820               	movf	?__Umul8_16,w
  8130  0D70  00E3               	movwf	___flmul@temp
  8131  0D71  0863               	movf	___flmul@temp,w
  8132  0D72  00D3               	movwf	??___flmul
  8133  0D73  01D4               	clrf	??___flmul+1
  8134  0D74  01D5               	clrf	??___flmul+2
  8135  0D75  01D6               	clrf	??___flmul+3
  8136  0D76  0856               	movf	??___flmul+3,w
  8137  0D77  00DD               	movwf	___flmul@grs+3
  8138  0D78  0855               	movf	??___flmul+2,w
  8139  0D79  00DC               	movwf	___flmul@grs+2
  8140  0D7A  0854               	movf	??___flmul+1,w
  8141  0D7B  00DB               	movwf	___flmul@grs+1
  8142  0D7C  0853               	movf	??___flmul,w
  8143  0D7D  00DA               	movwf	___flmul@grs
  8144  0D7E  0864               	movf	___flmul@temp+1,w
  8145  0D7F  00D3               	movwf	??___flmul
  8146  0D80  01D4               	clrf	??___flmul+1
  8147  0D81  01D5               	clrf	??___flmul+2
  8148  0D82  01D6               	clrf	??___flmul+3
  8149  0D83  0856               	movf	??___flmul+3,w
  8150  0D84  00E2               	movwf	___flmul@prod+3
  8151  0D85  0855               	movf	??___flmul+2,w
  8152  0D86  00E1               	movwf	___flmul@prod+2
  8153  0D87  0854               	movf	??___flmul+1,w
  8154  0D88  00E0               	movwf	___flmul@prod+1
  8155  0D89  0853               	movf	??___flmul,w
  8156  0D8A  00DF               	movwf	___flmul@prod
  8157  0D8B  084C               	movf	___flmul@b+1,w
  8158  0D8C  00D3               	movwf	??___flmul
  8159  0D8D  0853               	movf	??___flmul,w
  8160  0D8E  00A0               	movwf	__Umul8_16@multiplicand
  8161  0D8F  0850               	movf	___flmul@a+1,w
  8162  0D90  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8163  0D95  0821               	movf	?__Umul8_16+1,w
  8164  0D96  00E4               	movwf	___flmul@temp+1
  8165  0D97  0820               	movf	?__Umul8_16,w
  8166  0D98  00E3               	movwf	___flmul@temp
  8167  0D99  0863               	movf	___flmul@temp,w
  8168  0D9A  00D3               	movwf	??___flmul
  8169  0D9B  01D4               	clrf	??___flmul+1
  8170  0D9C  01D5               	clrf	??___flmul+2
  8171  0D9D  01D6               	clrf	??___flmul+3
  8172  0D9E  0853               	movf	??___flmul,w
  8173  0D9F  07DA               	addwf	___flmul@grs,f
  8174  0DA0  0854               	movf	??___flmul+1,w
  8175  0DA1  1103               	clrz
  8176  0DA2  1803               	skipnc
  8177  0DA3  3E01               	addlw	1
  8178  0DA4  1D03               	btfss	3,2
  8179  0DA5  07DB               	addwf	___flmul@grs+1,f
  8180  0DA6  0855               	movf	??___flmul+2,w
  8181  0DA7  1103               	clrz
  8182  0DA8  1803               	skipnc
  8183  0DA9  3E01               	addlw	1
  8184  0DAA  1D03               	btfss	3,2
  8185  0DAB  07DC               	addwf	___flmul@grs+2,f
  8186  0DAC  0856               	movf	??___flmul+3,w
  8187  0DAD  1103               	clrz
  8188  0DAE  1803               	skipnc
  8189  0DAF  3E01               	addlw	1
  8190  0DB0  1D03               	btfss	3,2
  8191  0DB1  07DD               	addwf	___flmul@grs+3,f
  8192  0DB2  0864               	movf	___flmul@temp+1,w
  8193  0DB3  00D3               	movwf	??___flmul
  8194  0DB4  01D4               	clrf	??___flmul+1
  8195  0DB5  01D5               	clrf	??___flmul+2
  8196  0DB6  01D6               	clrf	??___flmul+3
  8197  0DB7  0853               	movf	??___flmul,w
  8198  0DB8  07DF               	addwf	___flmul@prod,f
  8199  0DB9  0854               	movf	??___flmul+1,w
  8200  0DBA  1103               	clrz
  8201  0DBB  1803               	skipnc
  8202  0DBC  3E01               	addlw	1
  8203  0DBD  1D03               	btfss	3,2
  8204  0DBE  07E0               	addwf	___flmul@prod+1,f
  8205  0DBF  0855               	movf	??___flmul+2,w
  8206  0DC0  1103               	clrz
  8207  0DC1  1803               	skipnc
  8208  0DC2  3E01               	addlw	1
  8209  0DC3  1D03               	btfss	3,2
  8210  0DC4  07E1               	addwf	___flmul@prod+2,f
  8211  0DC5  0856               	movf	??___flmul+3,w
  8212  0DC6  1103               	clrz
  8213  0DC7  1803               	skipnc
  8214  0DC8  3E01               	addlw	1
  8215  0DC9  1D03               	btfss	3,2
  8216  0DCA  07E2               	addwf	___flmul@prod+3,f
  8217  0DCB  084D               	movf	___flmul@b+2,w
  8218  0DCC  00D3               	movwf	??___flmul
  8219  0DCD  0853               	movf	??___flmul,w
  8220  0DCE  00A0               	movwf	__Umul8_16@multiplicand
  8221  0DCF  084F               	movf	___flmul@a,w
  8222  0DD0  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8223  0DD5  0821               	movf	?__Umul8_16+1,w
  8224  0DD6  00E4               	movwf	___flmul@temp+1
  8225  0DD7  0820               	movf	?__Umul8_16,w
  8226  0DD8  00E3               	movwf	___flmul@temp
  8227  0DD9  0863               	movf	___flmul@temp,w
  8228  0DDA  00D3               	movwf	??___flmul
  8229  0DDB  01D4               	clrf	??___flmul+1
  8230  0DDC  01D5               	clrf	??___flmul+2
  8231  0DDD  01D6               	clrf	??___flmul+3
  8232  0DDE  0853               	movf	??___flmul,w
  8233  0DDF  07DA               	addwf	___flmul@grs,f
  8234  0DE0  0854               	movf	??___flmul+1,w
  8235  0DE1  1103               	clrz
  8236  0DE2  1803               	skipnc
  8237  0DE3  3E01               	addlw	1
  8238  0DE4  1D03               	btfss	3,2
  8239  0DE5  07DB               	addwf	___flmul@grs+1,f
  8240  0DE6  0855               	movf	??___flmul+2,w
  8241  0DE7  1103               	clrz
  8242  0DE8  1803               	skipnc
  8243  0DE9  3E01               	addlw	1
  8244  0DEA  1D03               	btfss	3,2
  8245  0DEB  07DC               	addwf	___flmul@grs+2,f
  8246  0DEC  0856               	movf	??___flmul+3,w
  8247  0DED  1103               	clrz
  8248  0DEE  1803               	skipnc
  8249  0DEF  3E01               	addlw	1
  8250  0DF0  1D03               	btfss	3,2
  8251  0DF1  07DD               	addwf	___flmul@grs+3,f
  8252  0DF2  0864               	movf	___flmul@temp+1,w
  8253  0DF3  00D3               	movwf	??___flmul
  8254  0DF4  01D4               	clrf	??___flmul+1
  8255  0DF5  01D5               	clrf	??___flmul+2
  8256  0DF6  01D6               	clrf	??___flmul+3
  8257  0DF7  0853               	movf	??___flmul,w
  8258  0DF8  07DF               	addwf	___flmul@prod,f
  8259  0DF9  0854               	movf	??___flmul+1,w
  8260  0DFA  1103               	clrz
  8261  0DFB  1803               	skipnc
  8262  0DFC  3E01               	addlw	1
  8263  0DFD  1D03               	btfss	3,2
  8264  0DFE  07E0               	addwf	___flmul@prod+1,f
  8265  0DFF  0855               	movf	??___flmul+2,w
  8266  0E00  1103               	clrz
  8267  0E01  1803               	skipnc
  8268  0E02  3E01               	addlw	1
  8269  0E03  1D03               	btfss	3,2
  8270  0E04  07E1               	addwf	___flmul@prod+2,f
  8271  0E05  0856               	movf	??___flmul+3,w
  8272  0E06  1103               	clrz
  8273  0E07  1803               	skipnc
  8274  0E08  3E01               	addlw	1
  8275  0E09  1D03               	btfss	3,2
  8276  0E0A  07E2               	addwf	___flmul@prod+3,f
  8277  0E0B  3008               	movlw	8
  8278  0E0C  00D3               	movwf	??___flmul
  8279  0E0D                     u3785:
  8280  0E0D  1003               	clrc
  8281  0E0E  0DDA               	rlf	___flmul@grs,f
  8282  0E0F  0DDB               	rlf	___flmul@grs+1,f
  8283  0E10  0DDC               	rlf	___flmul@grs+2,f
  8284  0E11  0DDD               	rlf	___flmul@grs+3,f
  8285  0E12  0BD3               	decfsz	??___flmul,f
  8286  0E13  2E0D               	goto	u3785
  8287  0E14  084C               	movf	___flmul@b+1,w
  8288  0E15  00D3               	movwf	??___flmul
  8289  0E16  0853               	movf	??___flmul,w
  8290  0E17  00A0               	movwf	__Umul8_16@multiplicand
  8291  0E18  084F               	movf	___flmul@a,w
  8292  0E19  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8293  0E1E  0821               	movf	?__Umul8_16+1,w
  8294  0E1F  00E4               	movwf	___flmul@temp+1
  8295  0E20  0820               	movf	?__Umul8_16,w
  8296  0E21  00E3               	movwf	___flmul@temp
  8297  0E22  0863               	movf	___flmul@temp,w
  8298  0E23  00D3               	movwf	??___flmul
  8299  0E24  0864               	movf	___flmul@temp+1,w
  8300  0E25  00D4               	movwf	??___flmul+1
  8301  0E26  01D5               	clrf	??___flmul+2
  8302  0E27  01D6               	clrf	??___flmul+3
  8303  0E28  0853               	movf	??___flmul,w
  8304  0E29  07DA               	addwf	___flmul@grs,f
  8305  0E2A  0854               	movf	??___flmul+1,w
  8306  0E2B  1103               	clrz
  8307  0E2C  1803               	skipnc
  8308  0E2D  3E01               	addlw	1
  8309  0E2E  1D03               	btfss	3,2
  8310  0E2F  07DB               	addwf	___flmul@grs+1,f
  8311  0E30  0855               	movf	??___flmul+2,w
  8312  0E31  1103               	clrz
  8313  0E32  1803               	skipnc
  8314  0E33  3E01               	addlw	1
  8315  0E34  1D03               	btfss	3,2
  8316  0E35  07DC               	addwf	___flmul@grs+2,f
  8317  0E36  0856               	movf	??___flmul+3,w
  8318  0E37  1103               	clrz
  8319  0E38  1803               	skipnc
  8320  0E39  3E01               	addlw	1
  8321  0E3A  1D03               	btfss	3,2
  8322  0E3B  07DD               	addwf	___flmul@grs+3,f
  8323  0E3C  084B               	movf	___flmul@b,w
  8324  0E3D  00D3               	movwf	??___flmul
  8325  0E3E  0853               	movf	??___flmul,w
  8326  0E3F  00A0               	movwf	__Umul8_16@multiplicand
  8327  0E40  0850               	movf	___flmul@a+1,w
  8328  0E41  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8329  0E46  0821               	movf	?__Umul8_16+1,w
  8330  0E47  00E4               	movwf	___flmul@temp+1
  8331  0E48  0820               	movf	?__Umul8_16,w
  8332  0E49  00E3               	movwf	___flmul@temp
  8333  0E4A  0863               	movf	___flmul@temp,w
  8334  0E4B  00D3               	movwf	??___flmul
  8335  0E4C  0864               	movf	___flmul@temp+1,w
  8336  0E4D  00D4               	movwf	??___flmul+1
  8337  0E4E  01D5               	clrf	??___flmul+2
  8338  0E4F  01D6               	clrf	??___flmul+3
  8339  0E50  0853               	movf	??___flmul,w
  8340  0E51  07DA               	addwf	___flmul@grs,f
  8341  0E52  0854               	movf	??___flmul+1,w
  8342  0E53  1103               	clrz
  8343  0E54  1803               	skipnc
  8344  0E55  3E01               	addlw	1
  8345  0E56  1D03               	btfss	3,2
  8346  0E57  07DB               	addwf	___flmul@grs+1,f
  8347  0E58  0855               	movf	??___flmul+2,w
  8348  0E59  1103               	clrz
  8349  0E5A  1803               	skipnc
  8350  0E5B  3E01               	addlw	1
  8351  0E5C  1D03               	btfss	3,2
  8352  0E5D  07DC               	addwf	___flmul@grs+2,f
  8353  0E5E  0856               	movf	??___flmul+3,w
  8354  0E5F  1103               	clrz
  8355  0E60  1803               	skipnc
  8356  0E61  3E01               	addlw	1
  8357  0E62  1D03               	btfss	3,2
  8358  0E63  07DD               	addwf	___flmul@grs+3,f
  8359  0E64  3008               	movlw	8
  8360  0E65  00D3               	movwf	??___flmul
  8361  0E66                     u3815:
  8362  0E66  1003               	clrc
  8363  0E67  0DDA               	rlf	___flmul@grs,f
  8364  0E68  0DDB               	rlf	___flmul@grs+1,f
  8365  0E69  0DDC               	rlf	___flmul@grs+2,f
  8366  0E6A  0DDD               	rlf	___flmul@grs+3,f
  8367  0E6B  0BD3               	decfsz	??___flmul,f
  8368  0E6C  2E66               	goto	u3815
  8369  0E6D  084B               	movf	___flmul@b,w
  8370  0E6E  00D3               	movwf	??___flmul
  8371  0E6F  0853               	movf	??___flmul,w
  8372  0E70  00A0               	movwf	__Umul8_16@multiplicand
  8373  0E71  084F               	movf	___flmul@a,w
  8374  0E72  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8375  0E77  0821               	movf	?__Umul8_16+1,w
  8376  0E78  00E4               	movwf	___flmul@temp+1
  8377  0E79  0820               	movf	?__Umul8_16,w
  8378  0E7A  00E3               	movwf	___flmul@temp
  8379  0E7B  0863               	movf	___flmul@temp,w
  8380  0E7C  00D3               	movwf	??___flmul
  8381  0E7D  0864               	movf	___flmul@temp+1,w
  8382  0E7E  00D4               	movwf	??___flmul+1
  8383  0E7F  01D5               	clrf	??___flmul+2
  8384  0E80  01D6               	clrf	??___flmul+3
  8385  0E81  0853               	movf	??___flmul,w
  8386  0E82  07DA               	addwf	___flmul@grs,f
  8387  0E83  0854               	movf	??___flmul+1,w
  8388  0E84  1103               	clrz
  8389  0E85  1803               	skipnc
  8390  0E86  3E01               	addlw	1
  8391  0E87  1D03               	btfss	3,2
  8392  0E88  07DB               	addwf	___flmul@grs+1,f
  8393  0E89  0855               	movf	??___flmul+2,w
  8394  0E8A  1103               	clrz
  8395  0E8B  1803               	skipnc
  8396  0E8C  3E01               	addlw	1
  8397  0E8D  1D03               	btfss	3,2
  8398  0E8E  07DC               	addwf	___flmul@grs+2,f
  8399  0E8F  0856               	movf	??___flmul+3,w
  8400  0E90  1103               	clrz
  8401  0E91  1803               	skipnc
  8402  0E92  3E01               	addlw	1
  8403  0E93  1D03               	btfss	3,2
  8404  0E94  07DD               	addwf	___flmul@grs+3,f
  8405  0E95  084C               	movf	___flmul@b+1,w
  8406  0E96  00D3               	movwf	??___flmul
  8407  0E97  0853               	movf	??___flmul,w
  8408  0E98  00A0               	movwf	__Umul8_16@multiplicand
  8409  0E99  0851               	movf	___flmul@a+2,w
  8410  0E9A  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8411  0E9F  0821               	movf	?__Umul8_16+1,w
  8412  0EA0  00E4               	movwf	___flmul@temp+1
  8413  0EA1  0820               	movf	?__Umul8_16,w
  8414  0EA2  00E3               	movwf	___flmul@temp
  8415  0EA3  0863               	movf	___flmul@temp,w
  8416  0EA4  00D3               	movwf	??___flmul
  8417  0EA5  0864               	movf	___flmul@temp+1,w
  8418  0EA6  00D4               	movwf	??___flmul+1
  8419  0EA7  01D5               	clrf	??___flmul+2
  8420  0EA8  01D6               	clrf	??___flmul+3
  8421  0EA9  0853               	movf	??___flmul,w
  8422  0EAA  07DF               	addwf	___flmul@prod,f
  8423  0EAB  0854               	movf	??___flmul+1,w
  8424  0EAC  1103               	clrz
  8425  0EAD  1803               	skipnc
  8426  0EAE  3E01               	addlw	1
  8427  0EAF  1D03               	btfss	3,2
  8428  0EB0  07E0               	addwf	___flmul@prod+1,f
  8429  0EB1  0855               	movf	??___flmul+2,w
  8430  0EB2  1103               	clrz
  8431  0EB3  1803               	skipnc
  8432  0EB4  3E01               	addlw	1
  8433  0EB5  1D03               	btfss	3,2
  8434  0EB6  07E1               	addwf	___flmul@prod+2,f
  8435  0EB7  0856               	movf	??___flmul+3,w
  8436  0EB8  1103               	clrz
  8437  0EB9  1803               	skipnc
  8438  0EBA  3E01               	addlw	1
  8439  0EBB  1D03               	btfss	3,2
  8440  0EBC  07E2               	addwf	___flmul@prod+3,f
  8441  0EBD  084D               	movf	___flmul@b+2,w
  8442  0EBE  00D3               	movwf	??___flmul
  8443  0EBF  0853               	movf	??___flmul,w
  8444  0EC0  00A0               	movwf	__Umul8_16@multiplicand
  8445  0EC1  0850               	movf	___flmul@a+1,w
  8446  0EC2  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8447  0EC7  0821               	movf	?__Umul8_16+1,w
  8448  0EC8  00E4               	movwf	___flmul@temp+1
  8449  0EC9  0820               	movf	?__Umul8_16,w
  8450  0ECA  00E3               	movwf	___flmul@temp
  8451  0ECB  0863               	movf	___flmul@temp,w
  8452  0ECC  00D3               	movwf	??___flmul
  8453  0ECD  0864               	movf	___flmul@temp+1,w
  8454  0ECE  00D4               	movwf	??___flmul+1
  8455  0ECF  01D5               	clrf	??___flmul+2
  8456  0ED0  01D6               	clrf	??___flmul+3
  8457  0ED1  0853               	movf	??___flmul,w
  8458  0ED2  07DF               	addwf	___flmul@prod,f
  8459  0ED3  0854               	movf	??___flmul+1,w
  8460  0ED4  1103               	clrz
  8461  0ED5  1803               	skipnc
  8462  0ED6  3E01               	addlw	1
  8463  0ED7  1D03               	btfss	3,2
  8464  0ED8  07E0               	addwf	___flmul@prod+1,f
  8465  0ED9  0855               	movf	??___flmul+2,w
  8466  0EDA  1103               	clrz
  8467  0EDB  1803               	skipnc
  8468  0EDC  3E01               	addlw	1
  8469  0EDD  1D03               	btfss	3,2
  8470  0EDE  07E1               	addwf	___flmul@prod+2,f
  8471  0EDF  0856               	movf	??___flmul+3,w
  8472  0EE0  1103               	clrz
  8473  0EE1  1803               	skipnc
  8474  0EE2  3E01               	addlw	1
  8475  0EE3  1D03               	btfss	3,2
  8476  0EE4  07E2               	addwf	___flmul@prod+3,f
  8477  0EE5  084D               	movf	___flmul@b+2,w
  8478  0EE6  00D3               	movwf	??___flmul
  8479  0EE7  0853               	movf	??___flmul,w
  8480  0EE8  00A0               	movwf	__Umul8_16@multiplicand
  8481  0EE9  0851               	movf	___flmul@a+2,w
  8482  0EEA  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8483  0EEF  0821               	movf	?__Umul8_16+1,w
  8484  0EF0  00E4               	movwf	___flmul@temp+1
  8485  0EF1  0820               	movf	?__Umul8_16,w
  8486  0EF2  00E3               	movwf	___flmul@temp
  8487  0EF3  0863               	movf	___flmul@temp,w
  8488  0EF4  00D3               	movwf	??___flmul
  8489  0EF5  0864               	movf	___flmul@temp+1,w
  8490  0EF6  00D4               	movwf	??___flmul+1
  8491  0EF7  01D5               	clrf	??___flmul+2
  8492  0EF8  01D6               	clrf	??___flmul+3
  8493  0EF9  3008               	movlw	8
  8494  0EFA                     u3855:
  8495  0EFA  1003               	clrc
  8496  0EFB  0DD3               	rlf	??___flmul,f
  8497  0EFC  0DD4               	rlf	??___flmul+1,f
  8498  0EFD  0DD5               	rlf	??___flmul+2,f
  8499  0EFE  0DD6               	rlf	??___flmul+3,f
  8500  0EFF  3EFF               	addlw	-1
  8501  0F00  1D03               	skipz
  8502  0F01  2EFA               	goto	u3855
  8503  0F02  0853               	movf	??___flmul,w
  8504  0F03  07DF               	addwf	___flmul@prod,f
  8505  0F04  0854               	movf	??___flmul+1,w
  8506  0F05  1103               	clrz
  8507  0F06  1803               	skipnc
  8508  0F07  3E01               	addlw	1
  8509  0F08  1D03               	btfss	3,2
  8510  0F09  07E0               	addwf	___flmul@prod+1,f
  8511  0F0A  0855               	movf	??___flmul+2,w
  8512  0F0B  1103               	clrz
  8513  0F0C  1803               	skipnc
  8514  0F0D  3E01               	addlw	1
  8515  0F0E  1D03               	btfss	3,2
  8516  0F0F  07E1               	addwf	___flmul@prod+2,f
  8517  0F10  0856               	movf	??___flmul+3,w
  8518  0F11  1103               	clrz
  8519  0F12  1803               	skipnc
  8520  0F13  3E01               	addlw	1
  8521  0F14  1D03               	btfss	3,2
  8522  0F15  07E2               	addwf	___flmul@prod+3,f
  8523  0F16  085D               	movf	___flmul@grs+3,w
  8524  0F17  00D3               	movwf	??___flmul
  8525  0F18  01D4               	clrf	??___flmul+1
  8526  0F19  01D5               	clrf	??___flmul+2
  8527  0F1A  01D6               	clrf	??___flmul+3
  8528  0F1B  0853               	movf	??___flmul,w
  8529  0F1C  07DF               	addwf	___flmul@prod,f
  8530  0F1D  0854               	movf	??___flmul+1,w
  8531  0F1E  1103               	clrz
  8532  0F1F  1803               	skipnc
  8533  0F20  3E01               	addlw	1
  8534  0F21  1D03               	btfss	3,2
  8535  0F22  07E0               	addwf	___flmul@prod+1,f
  8536  0F23  0855               	movf	??___flmul+2,w
  8537  0F24  1103               	clrz
  8538  0F25  1803               	skipnc
  8539  0F26  3E01               	addlw	1
  8540  0F27  1D03               	btfss	3,2
  8541  0F28  07E1               	addwf	___flmul@prod+2,f
  8542  0F29  0856               	movf	??___flmul+3,w
  8543  0F2A  1103               	clrz
  8544  0F2B  1803               	skipnc
  8545  0F2C  3E01               	addlw	1
  8546  0F2D  1D03               	btfss	3,2
  8547  0F2E  07E2               	addwf	___flmul@prod+3,f
  8548  0F2F  3008               	movlw	8
  8549  0F30  00D3               	movwf	??___flmul
  8550  0F31                     u3885:
  8551  0F31  1003               	clrc
  8552  0F32  0DDA               	rlf	___flmul@grs,f
  8553  0F33  0DDB               	rlf	___flmul@grs+1,f
  8554  0F34  0DDC               	rlf	___flmul@grs+2,f
  8555  0F35  0DDD               	rlf	___flmul@grs+3,f
  8556  0F36  0BD3               	decfsz	??___flmul,f
  8557  0F37  2F31               	goto	u3885
  8558  0F38  085E               	movf	___flmul@bexp,w
  8559  0F39  0759               	addwf	___flmul@aexp,w
  8560  0F3A  00D3               	movwf	??___flmul
  8561  0F3B  01D4               	clrf	??___flmul+1
  8562  0F3C  0DD4               	rlf	??___flmul+1,f
  8563  0F3D  0853               	movf	??___flmul,w
  8564  0F3E  3E82               	addlw	130
  8565  0F3F  00E3               	movwf	___flmul@temp
  8566  0F40  0854               	movf	??___flmul+1,w
  8567  0F41  1803               	skipnc
  8568  0F42  3E01               	addlw	1
  8569  0F43  3EFF               	addlw	255
  8570  0F44  00E4               	movwf	___flmul@temp+1
  8571  0F45                     l4279:
  8572  0F45  1BE1               	btfsc	___flmul@prod+2,7
  8573  0F46  2F62               	goto	l4281
  8574  0F47  3001               	movlw	1
  8575  0F48  00D3               	movwf	??___flmul
  8576  0F49                     u3895:
  8577  0F49  1003               	clrc
  8578  0F4A  0DDF               	rlf	___flmul@prod,f
  8579  0F4B  0DE0               	rlf	___flmul@prod+1,f
  8580  0F4C  0DE1               	rlf	___flmul@prod+2,f
  8581  0F4D  0DE2               	rlf	___flmul@prod+3,f
  8582  0F4E  0BD3               	decfsz	??___flmul,f
  8583  0F4F  2F49               	goto	u3895
  8584  0F50  1BDD               	btfsc	___flmul@grs+3,7
  8585  0F51  145F               	bsf	___flmul@prod,0
  8586  0F52  3001               	movlw	1
  8587  0F53  00D3               	movwf	??___flmul
  8588  0F54                     u3915:
  8589  0F54  1003               	clrc
  8590  0F55  0DDA               	rlf	___flmul@grs,f
  8591  0F56  0DDB               	rlf	___flmul@grs+1,f
  8592  0F57  0DDC               	rlf	___flmul@grs+2,f
  8593  0F58  0DDD               	rlf	___flmul@grs+3,f
  8594  0F59  0BD3               	decfsz	??___flmul,f
  8595  0F5A  2F54               	goto	u3915
  8596  0F5B  30FF               	movlw	255
  8597  0F5C  07E3               	addwf	___flmul@temp,f
  8598  0F5D  1803               	skipnc
  8599  0F5E  0AE4               	incf	___flmul@temp+1,f
  8600  0F5F  30FF               	movlw	255
  8601  0F60  07E4               	addwf	___flmul@temp+1,f
  8602  0F61  2F45               	goto	l4279
  8603  0F62                     l4281:
  8604  0F62  01D9               	clrf	___flmul@aexp
  8605  0F63  1FDD               	btfss	___flmul@grs+3,7
  8606  0F64  2F7B               	goto	l4291
  8607  0F65  30FF               	movlw	255
  8608  0F66  055A               	andwf	___flmul@grs,w
  8609  0F67  00D3               	movwf	??___flmul
  8610  0F68  30FF               	movlw	255
  8611  0F69  055B               	andwf	___flmul@grs+1,w
  8612  0F6A  00D4               	movwf	??___flmul+1
  8613  0F6B  30FF               	movlw	255
  8614  0F6C  055C               	andwf	___flmul@grs+2,w
  8615  0F6D  00D5               	movwf	??___flmul+2
  8616  0F6E  307F               	movlw	127
  8617  0F6F  055D               	andwf	___flmul@grs+3,w
  8618  0F70  00D6               	movwf	??___flmul+3
  8619  0F71  0856               	movf	??___flmul+3,w
  8620  0F72  0455               	iorwf	??___flmul+2,w
  8621  0F73  0454               	iorwf	??___flmul+1,w
  8622  0F74  0453               	iorwf	??___flmul,w
  8623  0F75  1903               	skipnz
  8624  0F76  185F               	btfsc	___flmul@prod,0
  8625  0F77  2F79               	goto	l4287
  8626  0F78  2F7B               	goto	l4291
  8627  0F79                     l4287:
  8628  0F79  01D9               	clrf	___flmul@aexp
  8629  0F7A  0AD9               	incf	___flmul@aexp,f
  8630  0F7B                     l4291:
  8631  0F7B  0859               	movf	___flmul@aexp,w
  8632  0F7C  1903               	btfsc	3,2
  8633  0F7D  2FAD               	goto	l4301
  8634  0F7E  3001               	movlw	1
  8635  0F7F  07DF               	addwf	___flmul@prod,f
  8636  0F80  3000               	movlw	0
  8637  0F81  1803               	skipnc
  8638  0F82  3001               	movlw	1
  8639  0F83  07E0               	addwf	___flmul@prod+1,f
  8640  0F84  3000               	movlw	0
  8641  0F85  1803               	skipnc
  8642  0F86  3001               	movlw	1
  8643  0F87  07E1               	addwf	___flmul@prod+2,f
  8644  0F88  3000               	movlw	0
  8645  0F89  1803               	skipnc
  8646  0F8A  3001               	movlw	1
  8647  0F8B  07E2               	addwf	___flmul@prod+3,f
  8648  0F8C  1C62               	btfss	___flmul@prod+3,0
  8649  0F8D  2FAD               	goto	l4301
  8650  0F8E  085F               	movf	___flmul@prod,w
  8651  0F8F  00D3               	movwf	??___flmul
  8652  0F90  0860               	movf	___flmul@prod+1,w
  8653  0F91  00D4               	movwf	??___flmul+1
  8654  0F92  0861               	movf	___flmul@prod+2,w
  8655  0F93  00D5               	movwf	??___flmul+2
  8656  0F94  0862               	movf	___flmul@prod+3,w
  8657  0F95  00D6               	movwf	??___flmul+3
  8658  0F96  3001               	movlw	1
  8659  0F97  00D7               	movwf	??___flmul+4
  8660  0F98                     u3985:
  8661  0F98  0D56               	rlf	??___flmul+3,w
  8662  0F99  0CD6               	rrf	??___flmul+3,f
  8663  0F9A  0CD5               	rrf	??___flmul+2,f
  8664  0F9B  0CD4               	rrf	??___flmul+1,f
  8665  0F9C  0CD3               	rrf	??___flmul,f
  8666  0F9D  0BD7               	decfsz	??___flmul+4,f
  8667  0F9E  2F98               	goto	u3985
  8668  0F9F  0856               	movf	??___flmul+3,w
  8669  0FA0  00E2               	movwf	___flmul@prod+3
  8670  0FA1  0855               	movf	??___flmul+2,w
  8671  0FA2  00E1               	movwf	___flmul@prod+2
  8672  0FA3  0854               	movf	??___flmul+1,w
  8673  0FA4  00E0               	movwf	___flmul@prod+1
  8674  0FA5  0853               	movf	??___flmul,w
  8675  0FA6  00DF               	movwf	___flmul@prod
  8676  0FA7  3001               	movlw	1
  8677  0FA8  07E3               	addwf	___flmul@temp,f
  8678  0FA9  1803               	skipnc
  8679  0FAA  0AE4               	incf	___flmul@temp+1,f
  8680  0FAB  3000               	movlw	0
  8681  0FAC  07E4               	addwf	___flmul@temp+1,f
  8682  0FAD                     l4301:
  8683  0FAD  0864               	movf	___flmul@temp+1,w
  8684  0FAE  3A80               	xorlw	128
  8685  0FAF  00FF               	movwf	127
  8686  0FB0  3080               	movlw	128
  8687  0FB1  027F               	subwf	127,w
  8688  0FB2  1D03               	skipz
  8689  0FB3  2FB6               	goto	u3995
  8690  0FB4  30FF               	movlw	255
  8691  0FB5  0263               	subwf	___flmul@temp,w
  8692  0FB6                     u3995:
  8693  0FB6  1C03               	skipc
  8694  0FB7  2FC3               	goto	l4305
  8695  0FB8  307F               	movlw	127
  8696  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  8697  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  8698  0FBB  00E2               	movwf	___flmul@prod+3
  8699  0FBC  3080               	movlw	128
  8700  0FBD  00E1               	movwf	___flmul@prod+2
  8701  0FBE  3000               	movlw	0
  8702  0FBF  00E0               	movwf	___flmul@prod+1
  8703  0FC0  3000               	movlw	0
  8704  0FC1  00DF               	movwf	___flmul@prod
  8705  0FC2  2FF3               	goto	l1398
  8706  0FC3                     l4305:
  8707  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  8708  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  8709  0FC5  0864               	movf	___flmul@temp+1,w
  8710  0FC6  3A80               	xorlw	128
  8711  0FC7  00FF               	movwf	127
  8712  0FC8  3080               	movlw	128
  8713  0FC9  027F               	subwf	127,w
  8714  0FCA  1D03               	skipz
  8715  0FCB  2FCE               	goto	u4005
  8716  0FCC  3001               	movlw	1
  8717  0FCD  0263               	subwf	___flmul@temp,w
  8718  0FCE                     u4005:
  8719  0FCE  1803               	skipnc
  8720  0FCF  2FDC               	goto	l4311
  8721  0FD0  3000               	movlw	0
  8722  0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  8723  0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  8724  0FD3  00E2               	movwf	___flmul@prod+3
  8725  0FD4  3000               	movlw	0
  8726  0FD5  00E1               	movwf	___flmul@prod+2
  8727  0FD6  3000               	movlw	0
  8728  0FD7  00E0               	movwf	___flmul@prod+1
  8729  0FD8  3000               	movlw	0
  8730  0FD9  00DF               	movwf	___flmul@prod
  8731  0FDA  01D8               	clrf	___flmul@sign
  8732  0FDB  2FF3               	goto	l1398
  8733  0FDC                     l4311:
  8734  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  8735  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  8736  0FDE  0863               	movf	___flmul@temp,w
  8737  0FDF  00D3               	movwf	??___flmul
  8738  0FE0  0853               	movf	??___flmul,w
  8739  0FE1  00DE               	movwf	___flmul@bexp
  8740  0FE2  30FF               	movlw	255
  8741  0FE3  05DF               	andwf	___flmul@prod,f
  8742  0FE4  30FF               	movlw	255
  8743  0FE5  05E0               	andwf	___flmul@prod+1,f
  8744  0FE6  307F               	movlw	127
  8745  0FE7  05E1               	andwf	___flmul@prod+2,f
  8746  0FE8  3000               	movlw	0
  8747  0FE9  05E2               	andwf	___flmul@prod+3,f
  8748  0FEA  185E               	btfsc	___flmul@bexp,0
  8749  0FEB  17E1               	bsf	___flmul@prod+2,7
  8750  0FEC  085E               	movf	___flmul@bexp,w
  8751  0FED  00D3               	movwf	??___flmul
  8752  0FEE  1003               	clrc
  8753  0FEF  0C53               	rrf	??___flmul,w
  8754  0FF0  00D4               	movwf	??___flmul+1
  8755  0FF1  0854               	movf	??___flmul+1,w
  8756  0FF2  00E2               	movwf	___flmul@prod+3
  8757  0FF3                     l1398:
  8758  0FF3  0858               	movf	___flmul@sign,w
  8759  0FF4  00D3               	movwf	??___flmul
  8760  0FF5  0853               	movf	??___flmul,w
  8761  0FF6  04E2               	iorwf	___flmul@prod+3,f
  8762  0FF7  0862               	movf	___flmul@prod+3,w
  8763  0FF8  00CE               	movwf	?___flmul+3
  8764  0FF9  0861               	movf	___flmul@prod+2,w
  8765  0FFA  00CD               	movwf	?___flmul+2
  8766  0FFB  0860               	movf	___flmul@prod+1,w
  8767  0FFC  00CC               	movwf	?___flmul+1
  8768  0FFD  085F               	movf	___flmul@prod,w
  8769  0FFE  00CB               	movwf	?___flmul
  8770  0FFF  0008               	return
  8771  1000                     __end_of___flmul:
  8772                           
  8773                           	psect	text23
  8774  1A20                     __ptext23:	
  8775 ;; *************** function __Umul8_16 *****************
  8776 ;; Defined at:
  8777 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;  multiplier      1    wreg     unsigned char 
  8780 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8783 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8784 ;;  product         2    4[BANK0 ] unsigned int 
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  2    0[BANK0 ] unsigned int 
  8787 ;; Registers used:
  8788 ;;		wreg, status,2, status,0
  8789 ;; Tracked objects:
  8790 ;;		On entry : 300/0
  8791 ;;		On exit  : 300/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8794 ;;      Params:         0       2       0       0       0
  8795 ;;      Locals:         0       5       0       0       0
  8796 ;;      Temps:          0       2       0       0       0
  8797 ;;      Totals:         0       9       0       0       0
  8798 ;;Total ram usage:        9 bytes
  8799 ;; Hardware stack levels used: 1
  8800 ;; Hardware stack levels required when called: 1
  8801 ;; This function calls:
  8802 ;;		Nothing
  8803 ;; This function is called by:
  8804 ;;		___flmul
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           
  8809                           ;psect for function __Umul8_16
  8810  1A20                     __Umul8_16:
  8811                           
  8812                           ;incstack = 0
  8813                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8814                           ;__Umul8_16@multiplier stored from wreg
  8815  1A20  00A8               	movwf	__Umul8_16@multiplier
  8816  1A21  01A4               	clrf	__Umul8_16@product
  8817  1A22  01A5               	clrf	__Umul8_16@product+1
  8818  1A23  0820               	movf	__Umul8_16@multiplicand,w
  8819  1A24  00A2               	movwf	??__Umul8_16
  8820  1A25  01A3               	clrf	??__Umul8_16+1
  8821  1A26  0822               	movf	??__Umul8_16,w
  8822  1A27  00A6               	movwf	__Umul8_16@word_mpld
  8823  1A28  0823               	movf	??__Umul8_16+1,w
  8824  1A29  00A7               	movwf	__Umul8_16@word_mpld+1
  8825  1A2A                     l3717:
  8826  1A2A  1C28               	btfss	__Umul8_16@multiplier,0
  8827  1A2B  2A32               	goto	l1405
  8828  1A2C  0826               	movf	__Umul8_16@word_mpld,w
  8829  1A2D  07A4               	addwf	__Umul8_16@product,f
  8830  1A2E  1803               	skipnc
  8831  1A2F  0AA5               	incf	__Umul8_16@product+1,f
  8832  1A30  0827               	movf	__Umul8_16@word_mpld+1,w
  8833  1A31  07A5               	addwf	__Umul8_16@product+1,f
  8834  1A32                     l1405:
  8835  1A32  3001               	movlw	1
  8836  1A33                     u2855:
  8837  1A33  1003               	clrc
  8838  1A34  0DA6               	rlf	__Umul8_16@word_mpld,f
  8839  1A35  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8840  1A36  3EFF               	addlw	-1
  8841  1A37  1D03               	skipz
  8842  1A38  2A33               	goto	u2855
  8843  1A39  1003               	clrc
  8844  1A3A  0CA8               	rrf	__Umul8_16@multiplier,f
  8845  1A3B  0828               	movf	__Umul8_16@multiplier,w
  8846  1A3C  1D03               	btfss	3,2
  8847  1A3D  2A2A               	goto	l3717
  8848  1A3E  0825               	movf	__Umul8_16@product+1,w
  8849  1A3F  00A1               	movwf	?__Umul8_16+1
  8850  1A40  0824               	movf	__Umul8_16@product,w
  8851  1A41  00A0               	movwf	?__Umul8_16
  8852  1A42  0008               	return
  8853  1A43                     __end_of__Umul8_16:
  8854                           
  8855                           	psect	text24
  8856  1901                     __ptext24:	
  8857 ;; *************** function _PROCULUS_VP_Write_String *****************
  8858 ;; Defined at:
  8859 ;;		line 205 in file "proculus.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  vp              2   12[BANK1 ] unsigned int 
  8862 ;;  text            1   14[BANK1 ] PTR unsigned char 
  8863 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;		None
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  1    wreg      void 
  8868 ;; Registers used:
  8869 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8870 ;; Tracked objects:
  8871 ;;		On entry : 300/100
  8872 ;;		On exit  : 300/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8875 ;;      Params:         0       0       3       0       0
  8876 ;;      Locals:         0       0       0       0       0
  8877 ;;      Temps:          0       0       1       0       0
  8878 ;;      Totals:         0       0       4       0       0
  8879 ;;Total ram usage:        4 bytes
  8880 ;; Hardware stack levels used: 1
  8881 ;; Hardware stack levels required when called: 4
  8882 ;; This function calls:
  8883 ;;		_PROCULUS_VP_Write
  8884 ;;		_strlen
  8885 ;; This function is called by:
  8886 ;;		_Decodify_Command
  8887 ;; This function uses a non-reentrant model
  8888 ;;
  8889                           
  8890                           
  8891                           ;psect for function _PROCULUS_VP_Write_String
  8892  1901                     _PROCULUS_VP_Write_String:
  8893                           
  8894                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  8895                           
  8896                           ;incstack = 0
  8897                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8898  1901  082D               	movf	(PROCULUS_VP_Write_String@vp+1)^(0+128),w
  8899  1902  00A5               	movwf	(PROCULUS_VP_Write@vp+1)^(0+128)
  8900  1903  082C               	movf	PROCULUS_VP_Write_String@vp^(0+128),w
  8901  1904  00A4               	movwf	PROCULUS_VP_Write@vp^(0+128)
  8902  1905  082E               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  8903  1906  00A6               	movwf	PROCULUS_VP_Write@vetor^(0+128)
  8904  1907  3001               	movlw	1
  8905  1908  00A7               	movwf	(PROCULUS_VP_Write@vetor+1)^(0+128)
  8906  1909  082E               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  8907  190A  160A  158A  2132  160A  158A  	fcall	_strlen
  8908  190F  0820               	movf	?_strlen,w
  8909  1910  3E01               	addlw	1
  8910  1911  1683               	bsf	3,5	;RP0=1, select bank1
  8911  1912  00AF               	movwf	??_PROCULUS_VP_Write_String^(0+128)
  8912  1913  082F               	movf	??_PROCULUS_VP_Write_String^(0+128),w
  8913  1914  00A8               	movwf	PROCULUS_VP_Write@size^(0+128)
  8914  1915  160A  158A  2538   	fcall	_PROCULUS_VP_Write
  8915  1918  0008               	return
  8916  1919                     __end_of_PROCULUS_VP_Write_String:
  8917                           
  8918                           	psect	text25
  8919  1932                     __ptext25:	
  8920 ;; *************** function _strlen *****************
  8921 ;; Defined at:
  8922 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  8923 ;; Parameters:    Size  Location     Type
  8924 ;;  s               1    wreg     PTR const unsigned char 
  8925 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  8928 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8929 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  8930 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  2    0[BANK0 ] unsigned int 
  8933 ;; Registers used:
  8934 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/300
  8937 ;;		On exit  : B00/800
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8940 ;;      Params:         0       2       0       0       0
  8941 ;;      Locals:         0       2       0       0       0
  8942 ;;      Temps:          0       1       0       0       0
  8943 ;;      Totals:         0       5       0       0       0
  8944 ;;Total ram usage:        5 bytes
  8945 ;; Hardware stack levels used: 1
  8946 ;; Hardware stack levels required when called: 1
  8947 ;; This function calls:
  8948 ;;		Nothing
  8949 ;; This function is called by:
  8950 ;;		_Decodify_Command
  8951 ;;		_PROCULUS_VP_Write_String
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           
  8956                           ;psect for function _strlen
  8957  1932                     _strlen:
  8958                           
  8959                           ;incstack = 0
  8960                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8961                           ;strlen@s stored from wreg
  8962  1932  1283               	bcf	3,5	;RP0=0, select bank0
  8963  1933  1303               	bcf	3,6	;RP1=0, select bank0
  8964  1934  00A4               	movwf	strlen@s
  8965  1935  0824               	movf	strlen@s,w
  8966  1936  00A2               	movwf	??_strlen
  8967  1937  0822               	movf	??_strlen,w
  8968  1938  00A3               	movwf	strlen@cp
  8969  1939                     l3877:
  8970  1939  0823               	movf	strlen@cp,w
  8971  193A  0084               	movwf	4
  8972  193B  1783               	bsf	3,7	;select IRP bank2
  8973  193C  0800               	movf	0,w
  8974  193D  1903               	btfsc	3,2
  8975  193E  2944               	goto	l3879
  8976  193F  3001               	movlw	1
  8977  1940  00A2               	movwf	??_strlen
  8978  1941  0822               	movf	??_strlen,w
  8979  1942  07A3               	addwf	strlen@cp,f
  8980  1943  2939               	goto	l3877
  8981  1944                     l3879:
  8982  1944  0824               	movf	strlen@s,w
  8983  1945  0223               	subwf	strlen@cp,w
  8984  1946  00A0               	movwf	?_strlen
  8985  1947  01A1               	clrf	?_strlen+1
  8986  1948  1BA0               	btfsc	?_strlen,7
  8987  1949  03A1               	decf	?_strlen+1,f
  8988  194A  0008               	return
  8989  194B                     __end_of_strlen:
  8990                           
  8991                           	psect	text26
  8992  1D38                     __ptext26:	
  8993 ;; *************** function _PROCULUS_VP_Write *****************
  8994 ;; Defined at:
  8995 ;;		line 40 in file "proculus.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;  vp              2    4[BANK1 ] unsigned int 
  8998 ;;  vetor           2    6[BANK1 ] PTR unsigned char 
  8999 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  9000 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(52), usart_protocol(58), 
  9001 ;;  size            1    8[BANK1 ] unsigned char 
  9002 ;; Auto vars:     Size  Location     Type
  9003 ;;  i               1   11[BANK1 ] unsigned char 
  9004 ;; Return value:  Size  Location     Type
  9005 ;;                  1    wreg      void 
  9006 ;; Registers used:
  9007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9008 ;; Tracked objects:
  9009 ;;		On entry : B00/900
  9010 ;;		On exit  : 300/0
  9011 ;;		Unchanged: 0/0
  9012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9013 ;;      Params:         0       0       5       0       0
  9014 ;;      Locals:         0       0       1       0       0
  9015 ;;      Temps:          0       0       2       0       0
  9016 ;;      Totals:         0       0       8       0       0
  9017 ;;Total ram usage:        8 bytes
  9018 ;; Hardware stack levels used: 1
  9019 ;; Hardware stack levels required when called: 3
  9020 ;; This function calls:
  9021 ;;		_PROCULUS_Delay
  9022 ;;		_USART_put_int
  9023 ;;		_USART_putc
  9024 ;; This function is called by:
  9025 ;;		_PROCULUS_VP_Write_String
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029                           
  9030                           ;psect for function _PROCULUS_VP_Write
  9031  1D38                     _PROCULUS_VP_Write:
  9032                           
  9033                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  9034                           
  9035                           ;incstack = 0
  9036                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9037  1D38  30A5               	movlw	165
  9038  1D39  00A0               	movwf	USART_put_int@value^(0+128)
  9039  1D3A  305A               	movlw	90
  9040  1D3B  00A1               	movwf	(USART_put_int@value^(0+128)+1)
  9041  1D3C  160A  158A  20C1  160A  158A  	fcall	_USART_put_int
  9042                           
  9043                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  9044  1D41  0828               	movf	PROCULUS_VP_Write@size^(0+128),w
  9045  1D42  3E03               	addlw	3
  9046  1D43  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  9047                           
  9048                           ;proculus.c: 43:      USART_putc(0x82);
  9049  1D48  3082               	movlw	130
  9050  1D49  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  9051                           
  9052                           ;proculus.c: 44:      USART_put_int(vp);
  9053  1D4E  0825               	movf	(PROCULUS_VP_Write@vp+1)^(0+128),w
  9054  1D4F  00A1               	movwf	(USART_put_int@value+1)^(0+128)
  9055  1D50  0824               	movf	PROCULUS_VP_Write@vp^(0+128),w
  9056  1D51  00A0               	movwf	USART_put_int@value^(0+128)
  9057  1D52  160A  158A  20C1  160A  158A  	fcall	_USART_put_int
  9058                           
  9059                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  9060  1D57  01AB               	clrf	PROCULUS_VP_Write@i^(0+128)
  9061  1D58                     l5653:
  9062  1D58  0828               	movf	PROCULUS_VP_Write@size^(0+128),w
  9063  1D59  022B               	subwf	PROCULUS_VP_Write@i^(0+128),w
  9064  1D5A  1803               	btfsc	3,0
  9065  1D5B  2D73               	goto	l5655
  9066                           
  9067                           ;proculus.c: 46:          USART_putc(vetor[i]);
  9068  1D5C  082B               	movf	PROCULUS_VP_Write@i^(0+128),w
  9069  1D5D  0726               	addwf	PROCULUS_VP_Write@vetor^(0+128),w
  9070  1D5E  00A9               	movwf	??_PROCULUS_VP_Write^(0+128)
  9071  1D5F  0827               	movf	(PROCULUS_VP_Write@vetor+1)^(0+128),w
  9072  1D60  1803               	skipnc
  9073  1D61  3E01               	addlw	1
  9074  1D62  00AA               	movwf	(??_PROCULUS_VP_Write^(0+128)+1)
  9075  1D63  0829               	movf	??_PROCULUS_VP_Write^(0+128),w
  9076  1D64  0084               	movwf	4
  9077  1D65  1783               	bsf	3,7
  9078  1D66  1C2A               	btfss	(??_PROCULUS_VP_Write+1)^(0+128),0
  9079  1D67  1383               	bcf	3,7
  9080  1D68  0800               	movf	0,w
  9081  1D69  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  9082  1D6E  3001               	movlw	1
  9083  1D6F  00A9               	movwf	??_PROCULUS_VP_Write^(0+128)
  9084  1D70  0829               	movf	??_PROCULUS_VP_Write^(0+128),w
  9085  1D71  07AB               	addwf	PROCULUS_VP_Write@i^(0+128),f
  9086  1D72  2D58               	goto	l5653
  9087  1D73                     l5655:
  9088                           
  9089                           ;proculus.c: 48:      PROCULUS_Delay(1);
  9090  1D73  3001               	movlw	1
  9091  1D74  1283               	bcf	3,5	;RP0=0, select bank0
  9092  1D75  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9093  1D76  3000               	movlw	0
  9094  1D77  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9095  1D78  160A  158A  2164   	fcall	_PROCULUS_Delay
  9096  1D7B  0008               	return
  9097  1D7C                     __end_of_PROCULUS_VP_Write:
  9098                           
  9099                           	psect	text27
  9100  18D6                     __ptext27:	
  9101 ;; *************** function _PROCULUS_Show_Screen *****************
  9102 ;; Defined at:
  9103 ;;		line 243 in file "proculus.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;  screen          2    8[BANK1 ] unsigned int 
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;  vetor           3   11[BANK1 ] unsigned char [3]
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  1    wreg      void 
  9110 ;; Registers used:
  9111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9112 ;; Tracked objects:
  9113 ;;		On entry : 300/100
  9114 ;;		On exit  : 300/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9117 ;;      Params:         0       0       2       0       0
  9118 ;;      Locals:         0       0       3       0       0
  9119 ;;      Temps:          0       0       1       0       0
  9120 ;;      Totals:         0       0       6       0       0
  9121 ;;Total ram usage:        6 bytes
  9122 ;; Hardware stack levels used: 1
  9123 ;; Hardware stack levels required when called: 4
  9124 ;; This function calls:
  9125 ;;		_PROCULUS_Control_Register_Write
  9126 ;; This function is called by:
  9127 ;;		_Decodify_Command
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           
  9131                           
  9132                           ;psect for function _PROCULUS_Show_Screen
  9133  18D6                     _PROCULUS_Show_Screen:
  9134                           
  9135                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9136                           
  9137                           ;incstack = 0
  9138                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9139  18D6  3003               	movlw	3
  9140  18D7  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  9141  18D8  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  9142  18D9  00AB               	movwf	PROCULUS_Show_Screen@vetor^(0+128)
  9143                           
  9144                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9145  18DA  0829               	movf	(PROCULUS_Show_Screen@screen^(0+128)+1),w
  9146  18DB  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  9147  18DC  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  9148  18DD  00AC               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+1)
  9149                           
  9150                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9151  18DE  0828               	movf	PROCULUS_Show_Screen@screen^(0+128),w
  9152  18DF  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  9153  18E0  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  9154  18E1  00AD               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+2)
  9155                           
  9156                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9157  18E2  3003               	movlw	3
  9158  18E3  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  9159  18E4  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  9160  18E5  00A4               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
  9161  18E6  30AB               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9162  18E7  160A  158A  23DB   	fcall	_PROCULUS_Control_Register_Write
  9163  18EA  0008               	return
  9164  18EB                     __end_of_PROCULUS_Show_Screen:
  9165                           
  9166                           	psect	text28
  9167  1AE6                     __ptext28:	
  9168 ;; *************** function _PROCULUS_Buzzer *****************
  9169 ;; Defined at:
  9170 ;;		line 223 in file "proculus.c"
  9171 ;; Parameters:    Size  Location     Type
  9172 ;;  time_ms_x_10    2    8[BANK1 ] unsigned int 
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;  vetor           2   11[BANK1 ] unsigned char [2]
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  1    wreg      void 
  9177 ;; Registers used:
  9178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9179 ;; Tracked objects:
  9180 ;;		On entry : 300/100
  9181 ;;		On exit  : 300/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9184 ;;      Params:         0       0       2       0       0
  9185 ;;      Locals:         0       0       2       0       0
  9186 ;;      Temps:          0       0       1       0       0
  9187 ;;      Totals:         0       0       5       0       0
  9188 ;;Total ram usage:        5 bytes
  9189 ;; Hardware stack levels used: 1
  9190 ;; Hardware stack levels required when called: 4
  9191 ;; This function calls:
  9192 ;;		_PROCULUS_Control_Register_Write
  9193 ;;		___lwdiv
  9194 ;; This function is called by:
  9195 ;;		_Decodify_Command
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           
  9200                           ;psect for function _PROCULUS_Buzzer
  9201  1AE6                     _PROCULUS_Buzzer:
  9202                           
  9203                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  9204                           
  9205                           ;incstack = 0
  9206                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9207  1AE6  300A               	movlw	10
  9208  1AE7  1283               	bcf	3,5	;RP0=0, select bank0
  9209  1AE8  00A0               	movwf	___lwdiv@divisor
  9210  1AE9  3000               	movlw	0
  9211  1AEA  00A1               	movwf	___lwdiv@divisor+1
  9212  1AEB  1683               	bsf	3,5	;RP0=1, select bank1
  9213  1AEC  0829               	movf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128),w
  9214  1AED  1283               	bcf	3,5	;RP0=0, select bank0
  9215  1AEE  00A3               	movwf	___lwdiv@dividend+1
  9216  1AEF  1683               	bsf	3,5	;RP0=1, select bank1
  9217  1AF0  0828               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
  9218  1AF1  1283               	bcf	3,5	;RP0=0, select bank0
  9219  1AF2  00A2               	movwf	___lwdiv@dividend
  9220  1AF3  160A  158A  24BC  160A  158A  	fcall	___lwdiv
  9221  1AF8  0821               	movf	?___lwdiv+1,w
  9222  1AF9  1683               	bsf	3,5	;RP0=1, select bank1
  9223  1AFA  00A9               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  9224  1AFB  1283               	bcf	3,5	;RP0=0, select bank0
  9225  1AFC  0820               	movf	?___lwdiv,w
  9226  1AFD  1683               	bsf	3,5	;RP0=1, select bank1
  9227  1AFE  00A8               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  9228                           
  9229                           ;proculus.c: 226:      vetor[0]=0x02;
  9230  1AFF  3002               	movlw	2
  9231  1B00  00AA               	movwf	??_PROCULUS_Buzzer^(0+128)
  9232  1B01  082A               	movf	??_PROCULUS_Buzzer^(0+128),w
  9233  1B02  00AB               	movwf	PROCULUS_Buzzer@vetor^(0+128)
  9234                           
  9235                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  9236  1B03  0828               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
  9237  1B04  00AA               	movwf	??_PROCULUS_Buzzer^(0+128)
  9238  1B05  082A               	movf	??_PROCULUS_Buzzer^(0+128),w
  9239  1B06  00AC               	movwf	(PROCULUS_Buzzer@vetor^(0+128)+1)
  9240                           
  9241                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9242  1B07  3002               	movlw	2
  9243  1B08  00AA               	movwf	??_PROCULUS_Buzzer^(0+128)
  9244  1B09  082A               	movf	??_PROCULUS_Buzzer^(0+128),w
  9245  1B0A  00A4               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
  9246  1B0B  30AB               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9247  1B0C  160A  158A  23DB   	fcall	_PROCULUS_Control_Register_Write
  9248  1B0F  0008               	return
  9249  1B10                     __end_of_PROCULUS_Buzzer:
  9250                           
  9251                           	psect	text29
  9252  1CBC                     __ptext29:	
  9253 ;; *************** function ___lwdiv *****************
  9254 ;; Defined at:
  9255 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;  divisor         2    0[BANK0 ] unsigned int 
  9258 ;;  dividend        2    2[BANK0 ] unsigned int 
  9259 ;; Auto vars:     Size  Location     Type
  9260 ;;  quotient        2    5[BANK0 ] unsigned int 
  9261 ;;  counter         1    7[BANK0 ] unsigned char 
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  2    0[BANK0 ] unsigned int 
  9264 ;; Registers used:
  9265 ;;		wreg, status,2, status,0
  9266 ;; Tracked objects:
  9267 ;;		On entry : 300/0
  9268 ;;		On exit  : 300/0
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9271 ;;      Params:         0       4       0       0       0
  9272 ;;      Locals:         0       3       0       0       0
  9273 ;;      Temps:          0       1       0       0       0
  9274 ;;      Totals:         0       8       0       0       0
  9275 ;;Total ram usage:        8 bytes
  9276 ;; Hardware stack levels used: 1
  9277 ;; Hardware stack levels required when called: 1
  9278 ;; This function calls:
  9279 ;;		Nothing
  9280 ;; This function is called by:
  9281 ;;		_ADC_Media_10bits
  9282 ;;		_PROCULUS_Buzzer
  9283 ;; This function uses a non-reentrant model
  9284 ;;
  9285                           
  9286                           
  9287                           ;psect for function ___lwdiv
  9288  1CBC                     ___lwdiv:
  9289                           
  9290                           ;incstack = 0
  9291                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9292  1CBC  01A5               	clrf	___lwdiv@quotient
  9293  1CBD  01A6               	clrf	___lwdiv@quotient+1
  9294  1CBE  0820               	movf	___lwdiv@divisor,w
  9295  1CBF  0421               	iorwf	___lwdiv@divisor+1,w
  9296  1CC0  1903               	btfsc	3,2
  9297  1CC1  2CF3               	goto	l3985
  9298  1CC2  01A7               	clrf	___lwdiv@counter
  9299  1CC3  0AA7               	incf	___lwdiv@counter,f
  9300  1CC4                     l3973:
  9301  1CC4  1BA1               	btfsc	___lwdiv@divisor+1,7
  9302  1CC5  2CD2               	goto	l3975
  9303  1CC6  3001               	movlw	1
  9304  1CC7                     u3145:
  9305  1CC7  1003               	clrc
  9306  1CC8  0DA0               	rlf	___lwdiv@divisor,f
  9307  1CC9  0DA1               	rlf	___lwdiv@divisor+1,f
  9308  1CCA  3EFF               	addlw	-1
  9309  1CCB  1D03               	skipz
  9310  1CCC  2CC7               	goto	u3145
  9311  1CCD  3001               	movlw	1
  9312  1CCE  00A4               	movwf	??___lwdiv
  9313  1CCF  0824               	movf	??___lwdiv,w
  9314  1CD0  07A7               	addwf	___lwdiv@counter,f
  9315  1CD1  2CC4               	goto	l3973
  9316  1CD2                     l3975:
  9317  1CD2  3001               	movlw	1
  9318  1CD3                     u3165:
  9319  1CD3  1003               	clrc
  9320  1CD4  0DA5               	rlf	___lwdiv@quotient,f
  9321  1CD5  0DA6               	rlf	___lwdiv@quotient+1,f
  9322  1CD6  3EFF               	addlw	-1
  9323  1CD7  1D03               	skipz
  9324  1CD8  2CD3               	goto	u3165
  9325  1CD9  0821               	movf	___lwdiv@divisor+1,w
  9326  1CDA  0223               	subwf	___lwdiv@dividend+1,w
  9327  1CDB  1D03               	skipz
  9328  1CDC  2CDF               	goto	u3175
  9329  1CDD  0820               	movf	___lwdiv@divisor,w
  9330  1CDE  0222               	subwf	___lwdiv@dividend,w
  9331  1CDF                     u3175:
  9332  1CDF  1C03               	skipc
  9333  1CE0  2CE8               	goto	l3981
  9334  1CE1  0820               	movf	___lwdiv@divisor,w
  9335  1CE2  02A2               	subwf	___lwdiv@dividend,f
  9336  1CE3  0821               	movf	___lwdiv@divisor+1,w
  9337  1CE4  1C03               	skipc
  9338  1CE5  03A3               	decf	___lwdiv@dividend+1,f
  9339  1CE6  02A3               	subwf	___lwdiv@dividend+1,f
  9340  1CE7  1425               	bsf	___lwdiv@quotient,0
  9341  1CE8                     l3981:
  9342  1CE8  3001               	movlw	1
  9343  1CE9                     u3185:
  9344  1CE9  1003               	clrc
  9345  1CEA  0CA1               	rrf	___lwdiv@divisor+1,f
  9346  1CEB  0CA0               	rrf	___lwdiv@divisor,f
  9347  1CEC  3EFF               	addlw	-1
  9348  1CED  1D03               	skipz
  9349  1CEE  2CE9               	goto	u3185
  9350  1CEF  3001               	movlw	1
  9351  1CF0  02A7               	subwf	___lwdiv@counter,f
  9352  1CF1  1D03               	btfss	3,2
  9353  1CF2  2CD2               	goto	l3975
  9354  1CF3                     l3985:
  9355  1CF3  0826               	movf	___lwdiv@quotient+1,w
  9356  1CF4  00A1               	movwf	?___lwdiv+1
  9357  1CF5  0825               	movf	___lwdiv@quotient,w
  9358  1CF6  00A0               	movwf	?___lwdiv
  9359  1CF7  0008               	return
  9360  1CF8                     __end_of___lwdiv:
  9361                           
  9362                           	psect	text30
  9363  1BDB                     __ptext30:	
  9364 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9365 ;; Defined at:
  9366 ;;		line 13 in file "proculus.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;  vetor           1    wreg     PTR unsigned char 
  9369 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9370 ;;  size            1    4[BANK1 ] unsigned char 
  9371 ;; Auto vars:     Size  Location     Type
  9372 ;;  vetor           1    6[BANK1 ] PTR unsigned char 
  9373 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9374 ;;  i               1    7[BANK1 ] unsigned char 
  9375 ;; Return value:  Size  Location     Type
  9376 ;;                  1    wreg      void 
  9377 ;; Registers used:
  9378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9379 ;; Tracked objects:
  9380 ;;		On entry : 300/100
  9381 ;;		On exit  : 300/0
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9384 ;;      Params:         0       0       1       0       0
  9385 ;;      Locals:         0       0       2       0       0
  9386 ;;      Temps:          0       0       1       0       0
  9387 ;;      Totals:         0       0       4       0       0
  9388 ;;Total ram usage:        4 bytes
  9389 ;; Hardware stack levels used: 1
  9390 ;; Hardware stack levels required when called: 3
  9391 ;; This function calls:
  9392 ;;		_PROCULUS_Delay
  9393 ;;		_USART_put_int
  9394 ;;		_USART_putc
  9395 ;; This function is called by:
  9396 ;;		_PROCULUS_Buzzer
  9397 ;;		_PROCULUS_Show_Screen
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           
  9402                           ;psect for function _PROCULUS_Control_Register_Write
  9403  1BDB                     _PROCULUS_Control_Register_Write:
  9404                           
  9405                           ;incstack = 0
  9406                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  9407                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9408  1BDB  00A6               	movwf	PROCULUS_Control_Register_Write@vetor^(0+128)
  9409                           
  9410                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9411  1BDC  30A5               	movlw	165
  9412  1BDD  00A0               	movwf	USART_put_int@value^(0+128)
  9413  1BDE  305A               	movlw	90
  9414  1BDF  00A1               	movwf	(USART_put_int@value^(0+128)+1)
  9415  1BE0  160A  158A  20C1  160A  158A  	fcall	_USART_put_int
  9416                           
  9417                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9418  1BE5  0824               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
  9419  1BE6  3E01               	addlw	1
  9420  1BE7  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  9421                           
  9422                           ;proculus.c: 16:      USART_putc(0x80);
  9423  1BEC  3080               	movlw	128
  9424  1BED  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  9425                           
  9426                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9427  1BF2  01A7               	clrf	PROCULUS_Control_Register_Write@i^(0+128)
  9428  1BF3                     l3907:
  9429  1BF3  0824               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
  9430  1BF4  0227               	subwf	PROCULUS_Control_Register_Write@i^(0+128),w
  9431  1BF5  1803               	btfsc	3,0
  9432  1BF6  2C08               	goto	l3909
  9433                           
  9434                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9435  1BF7  0827               	movf	PROCULUS_Control_Register_Write@i^(0+128),w
  9436  1BF8  0726               	addwf	PROCULUS_Control_Register_Write@vetor^(0+128),w
  9437  1BF9  00A5               	movwf	??_PROCULUS_Control_Register_Write^(0+128)
  9438  1BFA  0825               	movf	??_PROCULUS_Control_Register_Write^(0+128),w
  9439  1BFB  0084               	movwf	4
  9440  1BFC  1383               	bcf	3,7	;select IRP bank0
  9441  1BFD  0800               	movf	0,w
  9442  1BFE  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  9443  1C03  3001               	movlw	1
  9444  1C04  00A5               	movwf	??_PROCULUS_Control_Register_Write^(0+128)
  9445  1C05  0825               	movf	??_PROCULUS_Control_Register_Write^(0+128),w
  9446  1C06  07A7               	addwf	PROCULUS_Control_Register_Write@i^(0+128),f
  9447  1C07  2BF3               	goto	l3907
  9448  1C08                     l3909:
  9449                           
  9450                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9451  1C08  3001               	movlw	1
  9452  1C09  1283               	bcf	3,5	;RP0=0, select bank0
  9453  1C0A  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9454  1C0B  3000               	movlw	0
  9455  1C0C  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9456  1C0D  160A  158A  2164   	fcall	_PROCULUS_Delay
  9457  1C10  0008               	return
  9458  1C11                     __end_of_PROCULUS_Control_Register_Write:
  9459                           
  9460                           	psect	text31
  9461  18C1                     __ptext31:	
  9462 ;; *************** function _USART_put_int *****************
  9463 ;; Defined at:
  9464 ;;		line 137 in file "usart.c"
  9465 ;; Parameters:    Size  Location     Type
  9466 ;;  value           2    0[BANK1 ] int 
  9467 ;; Auto vars:     Size  Location     Type
  9468 ;;  dado            1    3[BANK1 ] PTR unsigned char 
  9469 ;;		 -> USART_put_int@value(2), 
  9470 ;; Return value:  Size  Location     Type
  9471 ;;                  1    wreg      void 
  9472 ;; Registers used:
  9473 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9474 ;; Tracked objects:
  9475 ;;		On entry : 300/100
  9476 ;;		On exit  : 300/100
  9477 ;;		Unchanged: 0/0
  9478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9479 ;;      Params:         0       0       2       0       0
  9480 ;;      Locals:         0       0       1       0       0
  9481 ;;      Temps:          0       0       1       0       0
  9482 ;;      Totals:         0       0       4       0       0
  9483 ;;Total ram usage:        4 bytes
  9484 ;; Hardware stack levels used: 1
  9485 ;; Hardware stack levels required when called: 2
  9486 ;; This function calls:
  9487 ;;		_USART_putc
  9488 ;; This function is called by:
  9489 ;;		_Decodify_Command
  9490 ;;		_PROCULUS_Control_Register_Write
  9491 ;;		_PROCULUS_VP_Write
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           
  9495                           
  9496                           ;psect for function _USART_put_int
  9497  18C1                     _USART_put_int:
  9498                           
  9499                           ;usart.c: 138:      char *dado;;usart.c: 139:      dado=(char*)&value;
  9500                           
  9501                           ;incstack = 0
  9502                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9503  18C1  30A0               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9504  18C2  00A2               	movwf	??_USART_put_int^(0+128)
  9505  18C3  0822               	movf	??_USART_put_int^(0+128),w
  9506  18C4  00A3               	movwf	USART_put_int@dado^(0+128)
  9507                           
  9508                           ;usart.c: 140:      USART_putc(*(dado+1));
  9509  18C5  0A23               	incf	USART_put_int@dado^(0+128),w
  9510  18C6  0084               	movwf	4
  9511  18C7  1383               	bcf	3,7	;select IRP bank0
  9512  18C8  0800               	movf	0,w
  9513  18C9  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  9514                           
  9515                           ;usart.c: 141:      USART_putc(*dado);
  9516  18CE  0823               	movf	USART_put_int@dado^(0+128),w
  9517  18CF  0084               	movwf	4
  9518  18D0  1383               	bcf	3,7	;select IRP bank0
  9519  18D1  0800               	movf	0,w
  9520  18D2  160A  158A  20B1   	fcall	_USART_putc
  9521  18D5  0008               	return
  9522  18D6                     __end_of_USART_put_int:
  9523                           
  9524                           	psect	text32
  9525  1964                     __ptext32:	
  9526 ;; *************** function _PROCULUS_Delay *****************
  9527 ;; Defined at:
  9528 ;;		line 267 in file "proculus.c"
  9529 ;; Parameters:    Size  Location     Type
  9530 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;  i               2    4[BANK0 ] unsigned int 
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  1    wreg      void 
  9535 ;; Registers used:
  9536 ;;		wreg, status,2
  9537 ;; Tracked objects:
  9538 ;;		On entry : 300/800
  9539 ;;		On exit  : 300/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9542 ;;      Params:         0       2       0       0       0
  9543 ;;      Locals:         0       2       0       0       0
  9544 ;;      Temps:          0       2       0       0       0
  9545 ;;      Totals:         0       6       0       0       0
  9546 ;;Total ram usage:        6 bytes
  9547 ;; Hardware stack levels used: 1
  9548 ;; Hardware stack levels required when called: 1
  9549 ;; This function calls:
  9550 ;;		Nothing
  9551 ;; This function is called by:
  9552 ;;		_PROCULUS_Control_Register_Write
  9553 ;;		_PROCULUS_VP_Write
  9554 ;; This function uses a non-reentrant model
  9555 ;;
  9556                           
  9557                           
  9558                           ;psect for function _PROCULUS_Delay
  9559  1964                     _PROCULUS_Delay:
  9560                           
  9561                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9562                           
  9563                           ;incstack = 0
  9564                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
  9565  1964  01A4               	clrf	PROCULUS_Delay@i
  9566  1965  01A5               	clrf	PROCULUS_Delay@i+1
  9567  1966                     l800:
  9568  1966  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9569  1967  0225               	subwf	PROCULUS_Delay@i+1,w
  9570  1968  1D03               	skipz
  9571  1969  296C               	goto	u2835
  9572  196A  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9573  196B  0224               	subwf	PROCULUS_Delay@i,w
  9574  196C                     u2835:
  9575  196C  1803               	btfsc	3,0
  9576  196D  0008               	return
  9577                           
  9578                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9579  196E  3003               	movlw	3
  9580  196F  1283               	bcf	3,5	;RP0=0, select bank0
  9581  1970  1303               	bcf	3,6	;RP1=0, select bank0
  9582  1971  00A3               	movwf	??_PROCULUS_Delay+1
  9583  1972  3097               	movlw	151
  9584  1973  00A2               	movwf	??_PROCULUS_Delay
  9585  1974                     u5537:
  9586  1974  0BA2               	decfsz	??_PROCULUS_Delay,f
  9587  1975  2974               	goto	u5537
  9588  1976  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9589  1977  2974               	goto	u5537
  9590                           
  9591                           ;proculus.c: 270:     }
  9592  1978  3001               	movlw	1
  9593  1979  1283               	bcf	3,5	;RP0=0, select bank0
  9594  197A  1303               	bcf	3,6	;RP1=0, select bank0
  9595  197B  07A4               	addwf	PROCULUS_Delay@i,f
  9596  197C  1803               	skipnc
  9597  197D  0AA5               	incf	PROCULUS_Delay@i+1,f
  9598  197E  3000               	movlw	0
  9599  197F  07A5               	addwf	PROCULUS_Delay@i+1,f
  9600  1980  2966               	goto	l800
  9601  1981                     __end_of_PROCULUS_Delay:
  9602                           
  9603                           	psect	text33
  9604  1002                     __ptext33:	
  9605 ;; *************** function _EEPROM_Write_String *****************
  9606 ;; Defined at:
  9607 ;;		line 97 in file "eeprom.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;  addr            1    wreg     unsigned char 
  9610 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9611 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;  addr            1    7[BANK0 ] unsigned char 
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  1    wreg      void 
  9616 ;; Registers used:
  9617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9618 ;; Tracked objects:
  9619 ;;		On entry : 300/300
  9620 ;;		On exit  : 0/0
  9621 ;;		Unchanged: 0/0
  9622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9623 ;;      Params:         0       1       0       0       0
  9624 ;;      Locals:         0       1       0       0       0
  9625 ;;      Temps:          0       1       0       0       0
  9626 ;;      Totals:         0       3       0       0       0
  9627 ;;Total ram usage:        3 bytes
  9628 ;; Hardware stack levels used: 1
  9629 ;; Hardware stack levels required when called: 2
  9630 ;; This function calls:
  9631 ;;		_EEPROM_Write_Byte
  9632 ;; This function is called by:
  9633 ;;		_Decodify_Command
  9634 ;; This function uses a non-reentrant model
  9635 ;;
  9636                           
  9637                           
  9638                           ;psect for function _EEPROM_Write_String
  9639  1002                     _EEPROM_Write_String:
  9640                           
  9641                           ;incstack = 0
  9642                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9643                           ;EEPROM_Write_String@addr stored from wreg
  9644  1002  1283               	bcf	3,5	;RP0=0, select bank0
  9645  1003  1303               	bcf	3,6	;RP1=0, select bank0
  9646  1004  00A7               	movwf	EEPROM_Write_String@addr
  9647  1005                     l4737:	
  9648                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9649                           
  9650                           
  9651                           ;eeprom.c: 99:     while(*dado)
  9652  1005  0825               	movf	EEPROM_Write_String@dado,w
  9653  1006  0084               	movwf	4
  9654  1007  1783               	bsf	3,7	;select IRP bank2
  9655  1008  0800               	movf	0,w
  9656  1009  1903               	btfsc	3,2
  9657  100A  2822               	goto	l4739
  9658                           
  9659                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9660  100B  0825               	movf	EEPROM_Write_String@dado,w
  9661  100C  0084               	movwf	4
  9662  100D  0800               	movf	0,w
  9663  100E  00A6               	movwf	??_EEPROM_Write_String
  9664  100F  0826               	movf	??_EEPROM_Write_String,w
  9665  1010  00A0               	movwf	EEPROM_Write_Byte@dado
  9666  1011  0827               	movf	EEPROM_Write_String@addr,w
  9667  1012  160A  158A  2480  160A  118A  	fcall	_EEPROM_Write_Byte
  9668                           
  9669                           ;eeprom.c: 102:      addr++;
  9670  1017  3001               	movlw	1
  9671  1018  1283               	bcf	3,5	;RP0=0, select bank0
  9672  1019  1303               	bcf	3,6	;RP1=0, select bank0
  9673  101A  00A6               	movwf	??_EEPROM_Write_String
  9674  101B  0826               	movf	??_EEPROM_Write_String,w
  9675  101C  07A7               	addwf	EEPROM_Write_String@addr,f
  9676                           
  9677                           ;eeprom.c: 103:      dado++;
  9678  101D  3001               	movlw	1
  9679  101E  00A6               	movwf	??_EEPROM_Write_String
  9680  101F  0826               	movf	??_EEPROM_Write_String,w
  9681  1020  07A5               	addwf	EEPROM_Write_String@dado,f
  9682  1021  2805               	goto	l4737
  9683  1022                     l4739:
  9684                           
  9685                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9686  1022  0825               	movf	EEPROM_Write_String@dado,w
  9687  1023  0084               	movwf	4
  9688  1024  0800               	movf	0,w
  9689  1025  00A6               	movwf	??_EEPROM_Write_String
  9690  1026  0826               	movf	??_EEPROM_Write_String,w
  9691  1027  00A0               	movwf	EEPROM_Write_Byte@dado
  9692  1028  0827               	movf	EEPROM_Write_String@addr,w
  9693  1029  160A  158A  2480   	fcall	_EEPROM_Write_Byte
  9694  102C  0008               	return
  9695  102D                     __end_of_EEPROM_Write_String:
  9696                           
  9697                           	psect	text34
  9698  1B41                     __ptext34:	
  9699 ;; *************** function _EEPROM_Write_Integer *****************
  9700 ;; Defined at:
  9701 ;;		line 68 in file "eeprom.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;  addr            1    wreg     unsigned char 
  9704 ;;  dado            2    5[BANK0 ] unsigned int 
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;  addr            1   10[BANK0 ] unsigned char 
  9707 ;;  i               1   11[BANK0 ] unsigned char 
  9708 ;;  ptr             1    9[BANK0 ] PTR unsigned char 
  9709 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9710 ;;  addr_memo       1    0        unsigned char 
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  1    wreg      void 
  9713 ;; Registers used:
  9714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9715 ;; Tracked objects:
  9716 ;;		On entry : 200/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9720 ;;      Params:         0       2       0       0       0
  9721 ;;      Locals:         0       3       0       0       0
  9722 ;;      Temps:          0       2       0       0       0
  9723 ;;      Totals:         0       7       0       0       0
  9724 ;;Total ram usage:        7 bytes
  9725 ;; Hardware stack levels used: 1
  9726 ;; Hardware stack levels required when called: 2
  9727 ;; This function calls:
  9728 ;;		_EEPROM_Write_Byte
  9729 ;; This function is called by:
  9730 ;;		_main
  9731 ;;		_Decodify_Command
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735                           
  9736                           ;psect for function _EEPROM_Write_Integer
  9737  1B41                     _EEPROM_Write_Integer:
  9738                           
  9739                           ;incstack = 0
  9740                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9741                           ;EEPROM_Write_Integer@addr stored from wreg
  9742  1B41  1283               	bcf	3,5	;RP0=0, select bank0
  9743  1B42  00AA               	movwf	EEPROM_Write_Integer@addr
  9744                           
  9745                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9746  1B43  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9747  1B44  00A7               	movwf	??_EEPROM_Write_Integer
  9748  1B45  0827               	movf	??_EEPROM_Write_Integer,w
  9749  1B46  00A9               	movwf	EEPROM_Write_Integer@ptr
  9750                           
  9751                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9752  1B47  01AB               	clrf	EEPROM_Write_Integer@i
  9753  1B48                     l4687:
  9754                           
  9755                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9756  1B48  0829               	movf	EEPROM_Write_Integer@ptr,w
  9757  1B49  0084               	movwf	4
  9758  1B4A  1383               	bcf	3,7	;select IRP bank0
  9759  1B4B  0800               	movf	0,w
  9760  1B4C  00A7               	movwf	??_EEPROM_Write_Integer
  9761  1B4D  0827               	movf	??_EEPROM_Write_Integer,w
  9762  1B4E  00A0               	movwf	EEPROM_Write_Byte@dado
  9763  1B4F  082A               	movf	EEPROM_Write_Integer@addr,w
  9764  1B50  160A  158A  2480  160A  158A  	fcall	_EEPROM_Write_Byte
  9765  1B55  3001               	movlw	1
  9766  1B56  1283               	bcf	3,5	;RP0=0, select bank0
  9767  1B57  1303               	bcf	3,6	;RP1=0, select bank0
  9768  1B58  00A7               	movwf	??_EEPROM_Write_Integer
  9769  1B59  0827               	movf	??_EEPROM_Write_Integer,w
  9770  1B5A  07A9               	addwf	EEPROM_Write_Integer@ptr,f
  9771  1B5B  3001               	movlw	1
  9772  1B5C  00A7               	movwf	??_EEPROM_Write_Integer
  9773  1B5D  0827               	movf	??_EEPROM_Write_Integer,w
  9774  1B5E  07AA               	addwf	EEPROM_Write_Integer@addr,f
  9775  1B5F  3001               	movlw	1
  9776  1B60  00A7               	movwf	??_EEPROM_Write_Integer
  9777  1B61  0827               	movf	??_EEPROM_Write_Integer,w
  9778  1B62  07AB               	addwf	EEPROM_Write_Integer@i,f
  9779  1B63  3002               	movlw	2
  9780  1B64  022B               	subwf	EEPROM_Write_Integer@i,w
  9781  1B65  1C03               	skipc
  9782  1B66  2B48               	goto	l4687
  9783                           
  9784                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9785  1B67  304E               	movlw	78
  9786  1B68  1283               	bcf	3,5	;RP0=0, select bank0
  9787  1B69  1303               	bcf	3,6	;RP1=0, select bank0
  9788  1B6A  00A8               	movwf	??_EEPROM_Write_Integer+1
  9789  1B6B  30EA               	movlw	234
  9790  1B6C  00A7               	movwf	??_EEPROM_Write_Integer
  9791  1B6D                     u5547:
  9792  1B6D  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9793  1B6E  2B6D               	goto	u5547
  9794  1B6F  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9795  1B70  2B6D               	goto	u5547
  9796  1B71  0000               	nop
  9797  1B72  0008               	return
  9798  1B73                     __end_of_EEPROM_Write_Integer:
  9799                           
  9800                           	psect	text35
  9801  1C80                     __ptext35:	
  9802 ;; *************** function _EEPROM_Write_Byte *****************
  9803 ;; Defined at:
  9804 ;;		line 21 in file "eeprom.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;  addr            1    wreg     unsigned char 
  9807 ;;  dado            1    0[BANK0 ] unsigned char 
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;  addr            1    3[BANK0 ] unsigned char 
  9810 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9811 ;; Return value:  Size  Location     Type
  9812 ;;                  1    wreg      void 
  9813 ;; Registers used:
  9814 ;;		wreg, status,2, status,0
  9815 ;; Tracked objects:
  9816 ;;		On entry : 0/300
  9817 ;;		On exit  : 0/0
  9818 ;;		Unchanged: 0/0
  9819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9820 ;;      Params:         0       1       0       0       0
  9821 ;;      Locals:         0       2       0       0       0
  9822 ;;      Temps:          0       2       0       0       0
  9823 ;;      Totals:         0       5       0       0       0
  9824 ;;Total ram usage:        5 bytes
  9825 ;; Hardware stack levels used: 1
  9826 ;; Hardware stack levels required when called: 1
  9827 ;; This function calls:
  9828 ;;		Nothing
  9829 ;; This function is called by:
  9830 ;;		_Decodify_Command
  9831 ;;		_EEPROM_Write_Integer
  9832 ;;		_EEPROM_Write_String
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           
  9837                           ;psect for function _EEPROM_Write_Byte
  9838  1C80                     _EEPROM_Write_Byte:
  9839                           
  9840                           ;incstack = 0
  9841                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9842                           ;EEPROM_Write_Byte@addr stored from wreg
  9843  1C80  1283               	bcf	3,5	;RP0=0, select bank0
  9844  1C81  1303               	bcf	3,6	;RP1=0, select bank0
  9845  1C82  00A3               	movwf	EEPROM_Write_Byte@addr
  9846                           
  9847                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9848  1C83  3014               	movlw	20
  9849  1C84  1683               	bsf	3,5	;RP0=1, select bank1
  9850  1C85  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9851  1C86  3000               	movlw	0
  9852  1C87  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9853  1C88                     l519:	
  9854                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9855                           
  9856  1C88  1703               	bsf	3,6	;RP1=1, select bank3
  9857  1C89  188C               	btfsc	12,1	;volsfr
  9858  1C8A  2C88               	goto	l519
  9859                           
  9860                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9861  1C8B  1F8B               	btfss	11,7	;volatile
  9862  1C8C  2C92               	goto	l3839
  9863                           
  9864                           ;eeprom.c: 28:           last_GIE=1;
  9865  1C8D  1283               	bcf	3,5	;RP0=0, select bank0
  9866  1C8E  1303               	bcf	3,6	;RP1=0, select bank0
  9867  1C8F  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9868  1C90  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9869  1C91  2C95               	goto	l3841
  9870  1C92                     l3839:
  9871                           
  9872                           ;eeprom.c: 30:           last_GIE=0;
  9873  1C92  1283               	bcf	3,5	;RP0=0, select bank0
  9874  1C93  1303               	bcf	3,6	;RP1=0, select bank0
  9875  1C94  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9876  1C95                     l3841:
  9877                           
  9878                           ;eeprom.c: 32:        EEADR=addr;
  9879  1C95  0823               	movf	EEPROM_Write_Byte@addr,w
  9880  1C96  1703               	bsf	3,6	;RP1=1, select bank2
  9881  1C97  008D               	movwf	13	;volatile
  9882                           
  9883                           ;eeprom.c: 33:        EEDATA=dado;
  9884  1C98  1303               	bcf	3,6	;RP1=0, select bank0
  9885  1C99  0820               	movf	EEPROM_Write_Byte@dado,w
  9886  1C9A  1703               	bsf	3,6	;RP1=1, select bank2
  9887  1C9B  008C               	movwf	12	;volatile
  9888                           
  9889                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9890  1C9C  1683               	bsf	3,5	;RP0=1, select bank3
  9891  1C9D  138C               	bcf	12,7	;volsfr
  9892                           
  9893                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9894  1C9E  150C               	bsf	12,2	;volsfr
  9895                           
  9896                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9897  1C9F  138B               	bcf	11,7	;volatile
  9898                           
  9899                           ;eeprom.c: 37:        EECON2=0x55;
  9900  1CA0  3055               	movlw	85
  9901  1CA1  008D               	movwf	13	;volsfr
  9902                           
  9903                           ;eeprom.c: 38:        EECON2=0xAA;
  9904  1CA2  30AA               	movlw	170
  9905  1CA3  008D               	movwf	13	;volsfr
  9906                           
  9907                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9908  1CA4  148C               	bsf	12,1	;volsfr
  9909                           
  9910                           ;eeprom.c: 41:        if(last_GIE==1)
  9911  1CA5  1283               	bcf	3,5	;RP0=0, select bank0
  9912  1CA6  1303               	bcf	3,6	;RP1=0, select bank0
  9913  1CA7  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9914  1CA8  1D03               	btfss	3,2
  9915  1CA9  2CAC               	goto	l524
  9916                           
  9917                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9918  1CAA  178B               	bsf	11,7	;volatile
  9919  1CAB  2CAD               	goto	l525
  9920  1CAC                     l524:	
  9921                           ;eeprom.c: 43:        else
  9922                           
  9923                           
  9924                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9925  1CAC  138B               	bcf	11,7	;volatile
  9926  1CAD                     l525:
  9927                           
  9928                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9929  1CAD  1683               	bsf	3,5	;RP0=1, select bank3
  9930  1CAE  1703               	bsf	3,6	;RP1=1, select bank3
  9931  1CAF  110C               	bcf	12,2	;volsfr
  9932                           
  9933                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9934  1CB0  304E               	movlw	78
  9935  1CB1  1283               	bcf	3,5	;RP0=0, select bank0
  9936  1CB2  1303               	bcf	3,6	;RP1=0, select bank0
  9937  1CB3  00A2               	movwf	??_EEPROM_Write_Byte+1
  9938  1CB4  30EA               	movlw	234
  9939  1CB5  00A1               	movwf	??_EEPROM_Write_Byte
  9940  1CB6                     u5557:
  9941  1CB6  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9942  1CB7  2CB6               	goto	u5557
  9943  1CB8  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9944  1CB9  2CB6               	goto	u5557
  9945  1CBA  0000               	nop
  9946  1CBB  0008               	return
  9947  1CBC                     __end_of_EEPROM_Write_Byte:
  9948                           
  9949                           	psect	text36
  9950  19BD                     __ptext36:	
  9951 ;; *************** function _EEPROM_Read_String *****************
  9952 ;; Defined at:
  9953 ;;		line 109 in file "eeprom.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;  addr            1    wreg     unsigned char 
  9956 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  9957 ;;		 -> buffer(33), 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;  addr            1    5[BANK0 ] unsigned char 
  9960 ;;  c               1    6[BANK0 ] unsigned char 
  9961 ;; Return value:  Size  Location     Type
  9962 ;;                  1    wreg      void 
  9963 ;; Registers used:
  9964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9965 ;; Tracked objects:
  9966 ;;		On entry : 300/300
  9967 ;;		On exit  : B00/800
  9968 ;;		Unchanged: 0/0
  9969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9970 ;;      Params:         0       1       0       0       0
  9971 ;;      Locals:         0       2       0       0       0
  9972 ;;      Temps:          0       1       0       0       0
  9973 ;;      Totals:         0       4       0       0       0
  9974 ;;Total ram usage:        4 bytes
  9975 ;; Hardware stack levels used: 1
  9976 ;; Hardware stack levels required when called: 2
  9977 ;; This function calls:
  9978 ;;		_EEPROM_Read_Byte
  9979 ;; This function is called by:
  9980 ;;		_Decodify_Command
  9981 ;; This function uses a non-reentrant model
  9982 ;;
  9983                           
  9984                           
  9985                           ;psect for function _EEPROM_Read_String
  9986  19BD                     _EEPROM_Read_String:
  9987                           
  9988                           ;incstack = 0
  9989                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9990                           ;EEPROM_Read_String@addr stored from wreg
  9991  19BD  1283               	bcf	3,5	;RP0=0, select bank0
  9992  19BE  1303               	bcf	3,6	;RP1=0, select bank0
  9993  19BF  00A5               	movwf	EEPROM_Read_String@addr
  9994  19C0                     l551:	
  9995                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
  9996                           
  9997                           
  9998                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
  9999  19C0  0825               	movf	EEPROM_Read_String@addr,w
 10000  19C1  160A  158A  21FE  160A  158A  	fcall	_EEPROM_Read_Byte
 10001  19C6  1303               	bcf	3,6	;RP1=0, select bank0
 10002  19C7  00A4               	movwf	??_EEPROM_Read_String
 10003  19C8  0824               	movf	??_EEPROM_Read_String,w
 10004  19C9  00A6               	movwf	EEPROM_Read_String@c
 10005  19CA  3001               	movlw	1
 10006  19CB  00A4               	movwf	??_EEPROM_Read_String
 10007  19CC  0824               	movf	??_EEPROM_Read_String,w
 10008  19CD  07A5               	addwf	EEPROM_Read_String@addr,f
 10009                           
 10010                           ;eeprom.c: 114:         *(dado++)=c;
 10011  19CE  0826               	movf	EEPROM_Read_String@c,w
 10012  19CF  00A4               	movwf	??_EEPROM_Read_String
 10013  19D0  0823               	movf	EEPROM_Read_String@dado,w
 10014  19D1  0084               	movwf	4
 10015  19D2  0824               	movf	??_EEPROM_Read_String,w
 10016  19D3  1783               	bsf	3,7	;select IRP bank2
 10017  19D4  0080               	movwf	0
 10018  19D5  3001               	movlw	1
 10019  19D6  00A4               	movwf	??_EEPROM_Read_String
 10020  19D7  0824               	movf	??_EEPROM_Read_String,w
 10021  19D8  07A3               	addwf	EEPROM_Read_String@dado,f
 10022                           
 10023                           ;eeprom.c: 116:       }while(c);
 10024  19D9  0826               	movf	EEPROM_Read_String@c,w
 10025  19DA  1903               	btfsc	3,2
 10026  19DB  0008               	return
 10027  19DC  29C0               	goto	l551
 10028  19DD                     __end_of_EEPROM_Read_String:
 10029                           
 10030                           	psect	text37
 10031  1ABC                     __ptext37:	
 10032 ;; *************** function _EEPROM_Read_Integer *****************
 10033 ;; Defined at:
 10034 ;;		line 81 in file "eeprom.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;  addr            1    wreg     unsigned char 
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;  addr            1    6[BANK0 ] unsigned char 
 10039 ;;  result          2    8[BANK0 ] unsigned int 
 10040 ;;  i               1   10[BANK0 ] unsigned char 
 10041 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 10042 ;;		 -> EEPROM_Read_Integer@result(2), 
 10043 ;; Return value:  Size  Location     Type
 10044 ;;                  2    3[BANK0 ] unsigned int 
 10045 ;; Registers used:
 10046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10047 ;; Tracked objects:
 10048 ;;		On entry : 0/0
 10049 ;;		On exit  : B00/0
 10050 ;;		Unchanged: 0/0
 10051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10052 ;;      Params:         0       2       0       0       0
 10053 ;;      Locals:         0       5       0       0       0
 10054 ;;      Temps:          0       1       0       0       0
 10055 ;;      Totals:         0       8       0       0       0
 10056 ;;Total ram usage:        8 bytes
 10057 ;; Hardware stack levels used: 1
 10058 ;; Hardware stack levels required when called: 2
 10059 ;; This function calls:
 10060 ;;		_EEPROM_Read_Byte
 10061 ;; This function is called by:
 10062 ;;		_main
 10063 ;;		_Decodify_Command
 10064 ;; This function uses a non-reentrant model
 10065 ;;
 10066                           
 10067                           
 10068                           ;psect for function _EEPROM_Read_Integer
 10069  1ABC                     _EEPROM_Read_Integer:
 10070                           
 10071                           ;incstack = 0
 10072                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10073                           ;EEPROM_Read_Integer@addr stored from wreg
 10074  1ABC  1283               	bcf	3,5	;RP0=0, select bank0
 10075  1ABD  1303               	bcf	3,6	;RP1=0, select bank0
 10076  1ABE  00A6               	movwf	EEPROM_Read_Integer@addr
 10077                           
 10078                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 10079  1ABF  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 10080  1AC0  00A5               	movwf	??_EEPROM_Read_Integer
 10081  1AC1  0825               	movf	??_EEPROM_Read_Integer,w
 10082  1AC2  00A7               	movwf	EEPROM_Read_Integer@ptr
 10083                           
 10084                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 10085  1AC3  01AA               	clrf	EEPROM_Read_Integer@i
 10086  1AC4                     l4663:
 10087                           
 10088                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 10089  1AC4  0826               	movf	EEPROM_Read_Integer@addr,w
 10090  1AC5  160A  158A  21FE  160A  158A  	fcall	_EEPROM_Read_Byte
 10091  1ACA  1303               	bcf	3,6	;RP1=0, select bank0
 10092  1ACB  00A5               	movwf	??_EEPROM_Read_Integer
 10093  1ACC  0827               	movf	EEPROM_Read_Integer@ptr,w
 10094  1ACD  0084               	movwf	4
 10095  1ACE  0825               	movf	??_EEPROM_Read_Integer,w
 10096  1ACF  1383               	bcf	3,7	;select IRP bank0
 10097  1AD0  0080               	movwf	0
 10098  1AD1  3001               	movlw	1
 10099  1AD2  00A5               	movwf	??_EEPROM_Read_Integer
 10100  1AD3  0825               	movf	??_EEPROM_Read_Integer,w
 10101  1AD4  07A6               	addwf	EEPROM_Read_Integer@addr,f
 10102  1AD5  3001               	movlw	1
 10103  1AD6  00A5               	movwf	??_EEPROM_Read_Integer
 10104  1AD7  0825               	movf	??_EEPROM_Read_Integer,w
 10105  1AD8  07A7               	addwf	EEPROM_Read_Integer@ptr,f
 10106  1AD9  3001               	movlw	1
 10107  1ADA  00A5               	movwf	??_EEPROM_Read_Integer
 10108  1ADB  0825               	movf	??_EEPROM_Read_Integer,w
 10109  1ADC  07AA               	addwf	EEPROM_Read_Integer@i,f
 10110  1ADD  3002               	movlw	2
 10111  1ADE  022A               	subwf	EEPROM_Read_Integer@i,w
 10112  1ADF  1C03               	skipc
 10113  1AE0  2AC4               	goto	l4663
 10114                           
 10115                           ;eeprom.c: 89:       return result;
 10116  1AE1  0829               	movf	EEPROM_Read_Integer@result+1,w
 10117  1AE2  00A4               	movwf	?_EEPROM_Read_Integer+1
 10118  1AE3  0828               	movf	EEPROM_Read_Integer@result,w
 10119  1AE4  00A3               	movwf	?_EEPROM_Read_Integer
 10120  1AE5  0008               	return
 10121  1AE6                     __end_of_EEPROM_Read_Integer:
 10122                           
 10123                           	psect	text38
 10124  19FE                     __ptext38:	
 10125 ;; *************** function _EEPROM_Read_Byte *****************
 10126 ;; Defined at:
 10127 ;;		line 52 in file "eeprom.c"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;  addr            1    wreg     unsigned char 
 10130 ;; Auto vars:     Size  Location     Type
 10131 ;;  addr            1    2[BANK0 ] unsigned char 
 10132 ;; Return value:  Size  Location     Type
 10133 ;;                  1    wreg      unsigned char 
 10134 ;; Registers used:
 10135 ;;		wreg
 10136 ;; Tracked objects:
 10137 ;;		On entry : 0/300
 10138 ;;		On exit  : 300/200
 10139 ;;		Unchanged: 0/0
 10140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10141 ;;      Params:         0       0       0       0       0
 10142 ;;      Locals:         0       1       0       0       0
 10143 ;;      Temps:          0       2       0       0       0
 10144 ;;      Totals:         0       3       0       0       0
 10145 ;;Total ram usage:        3 bytes
 10146 ;; Hardware stack levels used: 1
 10147 ;; Hardware stack levels required when called: 1
 10148 ;; This function calls:
 10149 ;;		Nothing
 10150 ;; This function is called by:
 10151 ;;		_Decodify_Command
 10152 ;;		_EEPROM_Read_Integer
 10153 ;;		_EEPROM_Read_String
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           
 10158                           ;psect for function _EEPROM_Read_Byte
 10159  19FE                     _EEPROM_Read_Byte:
 10160                           
 10161                           ;incstack = 0
 10162                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 10163                           ;EEPROM_Read_Byte@addr stored from wreg
 10164  19FE  1283               	bcf	3,5	;RP0=0, select bank0
 10165  19FF  1303               	bcf	3,6	;RP1=0, select bank0
 10166  1A00  00A2               	movwf	EEPROM_Read_Byte@addr
 10167                           
 10168                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 10169  1A01  3014               	movlw	20
 10170  1A02  1683               	bsf	3,5	;RP0=1, select bank1
 10171  1A03  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 10172  1A04  3000               	movlw	0
 10173  1A05  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 10174  1A06                     l529:	
 10175                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 10176                           
 10177  1A06  1703               	bsf	3,6	;RP1=1, select bank3
 10178  1A07  188C               	btfsc	12,1	;volsfr
 10179  1A08  2A06               	goto	l529
 10180                           
 10181                           ;eeprom.c: 57:    EEADR=addr;
 10182  1A09  1283               	bcf	3,5	;RP0=0, select bank0
 10183  1A0A  1303               	bcf	3,6	;RP1=0, select bank0
 10184  1A0B  0822               	movf	EEPROM_Read_Byte@addr,w
 10185  1A0C  1703               	bsf	3,6	;RP1=1, select bank2
 10186  1A0D  008D               	movwf	13	;volatile
 10187                           
 10188                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 10189  1A0E  1683               	bsf	3,5	;RP0=1, select bank3
 10190  1A0F  138C               	bcf	12,7	;volsfr
 10191                           
 10192                           ;eeprom.c: 59:    EECON1bits.RD=1;
 10193  1A10  140C               	bsf	12,0	;volsfr
 10194                           
 10195                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 10196  1A11  304E               	movlw	78
 10197  1A12  1283               	bcf	3,5	;RP0=0, select bank0
 10198  1A13  1303               	bcf	3,6	;RP1=0, select bank0
 10199  1A14  00A1               	movwf	??_EEPROM_Read_Byte+1
 10200  1A15  30EA               	movlw	234
 10201  1A16  00A0               	movwf	??_EEPROM_Read_Byte
 10202  1A17                     u5567:
 10203  1A17  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 10204  1A18  2A17               	goto	u5567
 10205  1A19  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 10206  1A1A  2A17               	goto	u5567
 10207  1A1B  0000               	nop
 10208                           
 10209                           ;eeprom.c: 61:    return EEDATA;
 10210  1A1C  1283               	bcf	3,5	;RP0=0, select bank2
 10211  1A1D  1703               	bsf	3,6	;RP1=1, select bank2
 10212  1A1E  080C               	movf	12,w	;volatile
 10213  1A1F  0008               	return
 10214  1A20                     __end_of_EEPROM_Read_Byte:
 10215                           
 10216                           	psect	text39
 10217  0842                     __ptext39:	
 10218 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 10219 ;; Defined at:
 10220 ;;		line 220 in file "EEPROM_24C1025.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;  chip_add        1    wreg     unsigned char 
 10223 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10224 ;;  data            1   14[BANK0 ] PTR unsigned char 
 10225 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10228 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10229 ;;  range           1   18[BANK0 ] unsigned char 
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  1    wreg      void 
 10232 ;; Registers used:
 10233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10234 ;; Tracked objects:
 10235 ;;		On entry : 300/300
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10239 ;;      Params:         0       5       0       0       0
 10240 ;;      Locals:         0       3       0       0       0
 10241 ;;      Temps:          0       2       0       0       0
 10242 ;;      Totals:         0      10       0       0       0
 10243 ;;Total ram usage:       10 bytes
 10244 ;; Hardware stack levels used: 1
 10245 ;; Hardware stack levels required when called: 3
 10246 ;; This function calls:
 10247 ;;		_I2C_Master_Start
 10248 ;;		_I2C_Master_Stop
 10249 ;;		_I2C_Master_Write
 10250 ;;		_my_delay_ms_WDT
 10251 ;; This function is called by:
 10252 ;;		_Decodify_Command
 10253 ;; This function uses a non-reentrant model
 10254 ;;
 10255                           
 10256                           
 10257                           ;psect for function _EEPROM_24C1025_Write_Str
 10258  0842                     _EEPROM_24C1025_Write_Str:
 10259                           
 10260                           ;incstack = 0
 10261                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10262                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 10263  0842  1283               	bcf	3,5	;RP0=0, select bank0
 10264  0843  1303               	bcf	3,6	;RP1=0, select bank0
 10265  0844  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
 10266                           
 10267                           ;EEPROM_24C1025.c: 222:      unsigned char ctrl;;EEPROM_24C1025.c: 224:      if(mem_add>
      +                          0x1FFFF) return;
 10268  0845  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10269  0846  1D03               	btfss	3,2
 10270  0847  0008               	return
 10271  0848  3002               	movlw	2
 10272  0849  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10273  084A  1D03               	skipz
 10274  084B  2854               	goto	u4223
 10275  084C  3000               	movlw	0
 10276  084D  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10277  084E  1D03               	skipz
 10278  084F  2854               	goto	u4223
 10279  0850  3000               	movlw	0
 10280  0851  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10281  0852  1D03               	skipz
 10282  0853  2854               	goto	u4223
 10283  0854                     u4223:
 10284  0854  1803               	btfsc	3,0
 10285  0855  0008               	return
 10286                           
 10287                           ;EEPROM_24C1025.c: 226:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10288  0856  1283               	bcf	3,5	;RP0=0, select bank0
 10289  0857  1303               	bcf	3,6	;RP1=0, select bank0
 10290  0858                     L12:
 10291  0858  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10292  0859  1D03               	btfss	3,2
 10293  085A  2869               	goto	l4465
 10294  085B  3001               	movlw	1
 10295  085C  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10296  085D  1D03               	skipz
 10297  085E  2867               	goto	u4233
 10298  085F  3000               	movlw	0
 10299  0860  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10300  0861  1D03               	skipz
 10301  0862  2867               	goto	u4233
 10302  0863  3000               	movlw	0
 10303  0864  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10304  0865  1D03               	skipz
 10305  0866  2867               	goto	u4233
 10306  0867                     u4233:
 10307  0867  1C03               	btfss	3,0
 10308  0868  2870               	goto	l4467
 10309  0869                     l4465:
 10310  0869  3008               	movlw	8
 10311  086A  1283               	bcf	3,5	;RP0=0, select bank0
 10312  086B  1303               	bcf	3,6	;RP1=0, select bank0
 10313  086C  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10314  086D  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10315  086E  00B2               	movwf	EEPROM_24C1025_Write_Str@range
 10316  086F  2873               	goto	l4469
 10317  0870                     l4467:
 10318  0870  1283               	bcf	3,5	;RP0=0, select bank0
 10319  0871  1303               	bcf	3,6	;RP1=0, select bank0
 10320  0872  01B2               	clrf	EEPROM_24C1025_Write_Str@range
 10321  0873                     l4469:
 10322                           
 10323                           ;EEPROM_24C1025.c: 227:      ctrl=chip_add;
 10324  0873  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 10325  0874  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10326  0875  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10327  0876  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
 10328                           
 10329                           ;EEPROM_24C1025.c: 228:      ctrl<<=1;
 10330  0877  1003               	clrc
 10331  0878  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 10332                           
 10333                           ;EEPROM_24C1025.c: 229:      ctrl |= 0xA0;
 10334  0879  30A0               	movlw	160
 10335  087A  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10336  087B  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10337  087C  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10338                           
 10339                           ;EEPROM_24C1025.c: 230:      ctrl |= range;
 10340  087D  0832               	movf	EEPROM_24C1025_Write_Str@range,w
 10341  087E  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10342  087F  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10343  0880  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10344                           
 10345                           ;EEPROM_24C1025.c: 232:      I2C_Master_Start();
 10346  0881  120A  118A  27EE  120A  158A  	fcall	_I2C_Master_Start
 10347                           
 10348                           ;EEPROM_24C1025.c: 233:      I2C_Master_Write(ctrl);
 10349  0886  1283               	bcf	3,5	;RP0=0, select bank0
 10350  0887  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 10351  0888  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10352  0889  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10353  088A  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10354  088B  00A3               	movwf	I2C_Master_Write@d
 10355  088C  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10356  088D  00A4               	movwf	I2C_Master_Write@d+1
 10357  088E  160A  158A  209B  120A  158A  	fcall	_I2C_Master_Write
 10358                           
 10359                           ;EEPROM_24C1025.c: 234:      I2C_Master_Write(((char *)&mem_add)[1]);
 10360  0893  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10361  0894  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10362  0895  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10363  0896  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10364  0897  00A3               	movwf	I2C_Master_Write@d
 10365  0898  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10366  0899  00A4               	movwf	I2C_Master_Write@d+1
 10367  089A  160A  158A  209B  120A  158A  	fcall	_I2C_Master_Write
 10368                           
 10369                           ;EEPROM_24C1025.c: 235:      I2C_Master_Write(((char *)&mem_add)[0]);
 10370  089F  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10371  08A0  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10372  08A1  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10373  08A2  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10374  08A3  00A3               	movwf	I2C_Master_Write@d
 10375  08A4  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10376  08A5  00A4               	movwf	I2C_Master_Write@d+1
 10377  08A6  160A  158A  209B  120A  158A  	fcall	_I2C_Master_Write
 10378  08AB                     l4529:	
 10379                           ;EEPROM_24C1025.c: 236:      while(*data)
 10380                           
 10381                           
 10382                           ;EEPROM_24C1025.c: 236:      while(*data)
 10383  08AB  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10384  08AC  0084               	movwf	4
 10385  08AD  1783               	bsf	3,7	;select IRP bank2
 10386  08AE  0800               	movf	0,w
 10387  08AF  1903               	btfsc	3,2
 10388  08B0  2923               	goto	l4531
 10389  08B1  0064               	clrwdt	;# 
 10390                           
 10391                           ;EEPROM_24C1025.c: 239:           if(mem_add>0x1FFFF) return;
 10392  08B2  1283               	bcf	3,5	;RP0=0, select bank0
 10393  08B3  1303               	bcf	3,6	;RP1=0, select bank0
 10394  08B4  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10395  08B5  1D03               	btfss	3,2
 10396  08B6  0008               	return
 10397  08B7  3002               	movlw	2
 10398  08B8  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10399  08B9  1D03               	skipz
 10400  08BA  28C3               	goto	u4243
 10401  08BB  3000               	movlw	0
 10402  08BC  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10403  08BD  1D03               	skipz
 10404  08BE  28C3               	goto	u4243
 10405  08BF  3000               	movlw	0
 10406  08C0  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10407  08C1  1D03               	skipz
 10408  08C2  28C3               	goto	u4243
 10409  08C3                     u4243:
 10410  08C3  1803               	btfsc	3,0
 10411  08C4  0008               	return
 10412                           
 10413                           ;EEPROM_24C1025.c: 240:           if((mem_add+1)%128==0)
 10414  08C5  1283               	bcf	3,5	;RP0=0, select bank0
 10415  08C6  1303               	bcf	3,6	;RP1=0, select bank0
 10416  08C7  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10417  08C8  3E01               	addlw	1
 10418  08C9  397F               	andlw	127
 10419  08CA  1D03               	btfss	3,2
 10420  08CB  2901               	goto	l4523
 10421                           
 10422                           ;EEPROM_24C1025.c: 241:             {;EEPROM_24C1025.c: 242:             I2C_Master_Writ
      +                          e(*data);
 10423  08CC  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10424  08CD  0084               	movwf	4
 10425  08CE  1783               	bsf	3,7	;select IRP bank2
 10426  08CF  0800               	movf	0,w
 10427  08D0  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10428  08D1  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10429  08D2  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10430  08D3  00A3               	movwf	I2C_Master_Write@d
 10431  08D4  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10432  08D5  00A4               	movwf	I2C_Master_Write@d+1
 10433  08D6  160A  158A  209B  120A  158A  	fcall	_I2C_Master_Write
 10434                           
 10435                           ;EEPROM_24C1025.c: 243:             I2C_Master_Stop();
 10436  08DB  160A  158A  2074  120A  158A  	fcall	_I2C_Master_Stop
 10437                           
 10438                           ;EEPROM_24C1025.c: 245:             my_delay_ms_WDT(5);
 10439  08E0  3000               	movlw	0
 10440  08E1  1283               	bcf	3,5	;RP0=0, select bank0
 10441  08E2  00A3               	movwf	my_delay_ms_WDT@time+3
 10442  08E3  3000               	movlw	0
 10443  08E4  00A2               	movwf	my_delay_ms_WDT@time+2
 10444  08E5  3000               	movlw	0
 10445  08E6  00A1               	movwf	my_delay_ms_WDT@time+1
 10446  08E7  3005               	movlw	5
 10447  08E8  00A0               	movwf	my_delay_ms_WDT@time
 10448  08E9  160A  158A  2448  120A  158A  	fcall	_my_delay_ms_WDT
 10449                           
 10450                           ;EEPROM_24C1025.c: 246:             mem_add++;
 10451  08EE  3001               	movlw	1
 10452  08EF  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10453  08F0  3000               	movlw	0
 10454  08F1  1803               	skipnc
 10455  08F2  3001               	movlw	1
 10456  08F3  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10457  08F4  3000               	movlw	0
 10458  08F5  1803               	skipnc
 10459  08F6  3001               	movlw	1
 10460  08F7  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10461  08F8  3000               	movlw	0
 10462  08F9  1803               	skipnc
 10463  08FA  3001               	movlw	1
 10464  08FB  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10465                           
 10466                           ;EEPROM_24C1025.c: 247:             data++;
 10467  08FC  3001               	movlw	1
 10468  08FD  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10469  08FE  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10470  08FF  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10471  0900  2858               	goto	L12
 10472  0901                     l4523:	
 10473                           ;EEPROM_24C1025.c: 248:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10474                           
 10475                           
 10476                           ;EEPROM_24C1025.c: 260:             {;EEPROM_24C1025.c: 261:             I2C_Master_Writ
      +                          e(*data);
 10477  0901  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10478  0902  0084               	movwf	4
 10479  0903  1783               	bsf	3,7	;select IRP bank2
 10480  0904  0800               	movf	0,w
 10481  0905  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10482  0906  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10483  0907  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10484  0908  00A3               	movwf	I2C_Master_Write@d
 10485  0909  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10486  090A  00A4               	movwf	I2C_Master_Write@d+1
 10487  090B  160A  158A  209B  120A  158A  	fcall	_I2C_Master_Write
 10488                           
 10489                           ;EEPROM_24C1025.c: 262:             data++;
 10490  0910  3001               	movlw	1
 10491  0911  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10492  0912  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10493  0913  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10494                           
 10495                           ;EEPROM_24C1025.c: 263:             mem_add++;
 10496  0914  3001               	movlw	1
 10497  0915  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10498  0916  3000               	movlw	0
 10499  0917  1803               	skipnc
 10500  0918  3001               	movlw	1
 10501  0919  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10502  091A  3000               	movlw	0
 10503  091B  1803               	skipnc
 10504  091C  3001               	movlw	1
 10505  091D  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10506  091E  3000               	movlw	0
 10507  091F  1803               	skipnc
 10508  0920  3001               	movlw	1
 10509  0921  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10510  0922  28AB               	goto	l4529
 10511  0923                     l4531:
 10512                           
 10513                           ;EEPROM_24C1025.c: 266:      I2C_Master_Write(0);
 10514  0923  3000               	movlw	0
 10515  0924  00A3               	movwf	I2C_Master_Write@d
 10516  0925  00A4               	movwf	I2C_Master_Write@d+1
 10517  0926  160A  158A  209B  120A  158A  	fcall	_I2C_Master_Write
 10518                           
 10519                           ;EEPROM_24C1025.c: 267:      I2C_Master_Stop();
 10520  092B  160A  158A  2074  120A  158A  	fcall	_I2C_Master_Stop
 10521                           
 10522                           ;EEPROM_24C1025.c: 268:      my_delay_ms_WDT(5);
 10523  0930  3000               	movlw	0
 10524  0931  1283               	bcf	3,5	;RP0=0, select bank0
 10525  0932  00A3               	movwf	my_delay_ms_WDT@time+3
 10526  0933  3000               	movlw	0
 10527  0934  00A2               	movwf	my_delay_ms_WDT@time+2
 10528  0935  3000               	movlw	0
 10529  0936  00A1               	movwf	my_delay_ms_WDT@time+1
 10530  0937  3005               	movlw	5
 10531  0938  00A0               	movwf	my_delay_ms_WDT@time
 10532  0939  160A  158A  2448   	fcall	_my_delay_ms_WDT
 10533  093C  0008               	return
 10534  093D                     __end_of_EEPROM_24C1025_Write_Str:
 10535                           
 10536                           	psect	text40
 10537  18EB                     __ptext40:	
 10538 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 10539 ;; Defined at:
 10540 ;;		line 341 in file "EEPROM_24C1025.c"
 10541 ;; Parameters:    Size  Location     Type
 10542 ;;  chip_add        1    wreg     unsigned char 
 10543 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10544 ;;  data            1   27[BANK0 ] unsigned char 
 10545 ;; Auto vars:     Size  Location     Type
 10546 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10547 ;; Return value:  Size  Location     Type
 10548 ;;                  1    wreg      void 
 10549 ;; Registers used:
 10550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10551 ;; Tracked objects:
 10552 ;;		On entry : 300/300
 10553 ;;		On exit  : 0/0
 10554 ;;		Unchanged: 0/0
 10555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10556 ;;      Params:         0       5       0       0       0
 10557 ;;      Locals:         0       1       0       0       0
 10558 ;;      Temps:          0       0       0       0       0
 10559 ;;      Totals:         0       6       0       0       0
 10560 ;;Total ram usage:        6 bytes
 10561 ;; Hardware stack levels used: 1
 10562 ;; Hardware stack levels required when called: 4
 10563 ;; This function calls:
 10564 ;;		_EEPROM_24C1025_Write_Buffer
 10565 ;; This function is called by:
 10566 ;;		_Decodify_Command
 10567 ;; This function uses a non-reentrant model
 10568 ;;
 10569                           
 10570                           
 10571                           ;psect for function _EEPROM_24C1025_Write_Byte
 10572  18EB                     _EEPROM_24C1025_Write_Byte:
 10573                           
 10574                           ;incstack = 0
 10575                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
 10576                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 10577  18EB  1283               	bcf	3,5	;RP0=0, select bank0
 10578  18EC  1303               	bcf	3,6	;RP1=0, select bank0
 10579  18ED  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 10580                           
 10581                           ;EEPROM_24C1025.c: 342:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 10582  18EE  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 10583  18EF  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10584  18F0  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 10585  18F1  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10586  18F2  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 10587  18F3  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10588  18F4  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 10589  18F5  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10590  18F6  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 10591  18F7  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 10592  18F8  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 10593  18F9  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 10594  18FA  3000               	movlw	0
 10595  18FB  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 10596  18FC  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 10597  18FD  160A  118A  2214   	fcall	_EEPROM_24C1025_Write_Buffer
 10598  1900  0008               	return
 10599  1901                     __end_of_EEPROM_24C1025_Write_Byte:
 10600                           
 10601                           	psect	text41
 10602  138A                     __ptext41:	
 10603 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10604 ;; Defined at:
 10605 ;;		line 275 in file "EEPROM_24C1025.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;  chip_add        1    wreg     unsigned char 
 10608 ;;  mem_add         4    9[BANK0 ] unsigned long 
 10609 ;;  buffer          1   13[BANK0 ] PTR unsigned char 
 10610 ;;		 -> buffer(33), 
 10611 ;; Auto vars:     Size  Location     Type
 10612 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10613 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10614 ;;  range           1   18[BANK0 ] unsigned char 
 10615 ;;  cnt             1   16[BANK0 ] unsigned char 
 10616 ;; Return value:  Size  Location     Type
 10617 ;;                  1    wreg      void 
 10618 ;; Registers used:
 10619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10620 ;; Tracked objects:
 10621 ;;		On entry : 300/300
 10622 ;;		On exit  : 0/0
 10623 ;;		Unchanged: 0/0
 10624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10625 ;;      Params:         0       5       0       0       0
 10626 ;;      Locals:         0       4       0       0       0
 10627 ;;      Temps:          0       2       0       0       0
 10628 ;;      Totals:         0      11       0       0       0
 10629 ;;Total ram usage:       11 bytes
 10630 ;; Hardware stack levels used: 1
 10631 ;; Hardware stack levels required when called: 3
 10632 ;; This function calls:
 10633 ;;		_I2C_Master_Read
 10634 ;;		_I2C_Master_RepeatedStart
 10635 ;;		_I2C_Master_Start
 10636 ;;		_I2C_Master_Stop
 10637 ;;		_I2C_Master_Write
 10638 ;; This function is called by:
 10639 ;;		_Decodify_Command
 10640 ;; This function uses a non-reentrant model
 10641 ;;
 10642                           
 10643                           
 10644                           ;psect for function _EEPROM_24C1025_Read_Str
 10645  138A                     _EEPROM_24C1025_Read_Str:
 10646                           
 10647                           ;incstack = 0
 10648                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10649                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10650  138A  1283               	bcf	3,5	;RP0=0, select bank0
 10651  138B  1303               	bcf	3,6	;RP1=0, select bank0
 10652  138C  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10653                           
 10654                           ;EEPROM_24C1025.c: 277:      unsigned char range=0;
 10655  138D  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10656                           
 10657                           ;EEPROM_24C1025.c: 278:      unsigned char ctrl;;EEPROM_24C1025.c: 280:      if(mem_add>
      +                          0x1FFFF) return;
 10658  138E  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10659  138F  1D03               	btfss	3,2
 10660  1390  0008               	return
 10661  1391  3002               	movlw	2
 10662  1392  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10663  1393  1D03               	skipz
 10664  1394  2B9D               	goto	u4283
 10665  1395  3000               	movlw	0
 10666  1396  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10667  1397  1D03               	skipz
 10668  1398  2B9D               	goto	u4283
 10669  1399  3000               	movlw	0
 10670  139A  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10671  139B  1D03               	skipz
 10672  139C  2B9D               	goto	u4283
 10673  139D                     u4283:
 10674  139D  1803               	btfsc	3,0
 10675  139E  0008               	return
 10676                           
 10677                           ;EEPROM_24C1025.c: 282:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10678  139F  1283               	bcf	3,5	;RP0=0, select bank0
 10679  13A0  1303               	bcf	3,6	;RP1=0, select bank0
 10680  13A1  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10681  13A2  1D03               	btfss	3,2
 10682  13A3  2BB2               	goto	l4543
 10683  13A4  3001               	movlw	1
 10684  13A5  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10685  13A6  1D03               	skipz
 10686  13A7  2BB0               	goto	u4293
 10687  13A8  3000               	movlw	0
 10688  13A9  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10689  13AA  1D03               	skipz
 10690  13AB  2BB0               	goto	u4293
 10691  13AC  3000               	movlw	0
 10692  13AD  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10693  13AE  1D03               	skipz
 10694  13AF  2BB0               	goto	u4293
 10695  13B0                     u4293:
 10696  13B0  1C03               	btfss	3,0
 10697  13B1  2BB9               	goto	l4545
 10698  13B2                     l4543:
 10699  13B2  3008               	movlw	8
 10700  13B3  1283               	bcf	3,5	;RP0=0, select bank0
 10701  13B4  1303               	bcf	3,6	;RP1=0, select bank0
 10702  13B5  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10703  13B6  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10704  13B7  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10705  13B8  2BBC               	goto	l4547
 10706  13B9                     l4545:
 10707  13B9  1283               	bcf	3,5	;RP0=0, select bank0
 10708  13BA  1303               	bcf	3,6	;RP1=0, select bank0
 10709  13BB  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10710  13BC                     l4547:
 10711                           
 10712                           ;EEPROM_24C1025.c: 283:      ctrl=chip_add;
 10713  13BC  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10714  13BD  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10715  13BE  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10716  13BF  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10717                           
 10718                           ;EEPROM_24C1025.c: 284:      ctrl<<=1;
 10719  13C0  1003               	clrc
 10720  13C1  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10721                           
 10722                           ;EEPROM_24C1025.c: 285:      ctrl |= 0xA0;
 10723  13C2  30A0               	movlw	160
 10724  13C3  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10725  13C4  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10726  13C5  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10727                           
 10728                           ;EEPROM_24C1025.c: 286:      ctrl |= 0b00000001;
 10729  13C6  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10730                           
 10731                           ;EEPROM_24C1025.c: 287:      ctrl |= range;
 10732  13C7  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10733  13C8  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10734  13C9  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10735  13CA  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10736                           
 10737                           ;EEPROM_24C1025.c: 289:      I2C_Master_Start();
 10738  13CB  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 10739                           
 10740                           ;EEPROM_24C1025.c: 290:      I2C_Master_Write(ctrl & 0xFE);
 10741  13D0  1283               	bcf	3,5	;RP0=0, select bank0
 10742  13D1  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10743  13D2  39FE               	andlw	254
 10744  13D3  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10745  13D4  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10746  13D5  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10747  13D6  00A3               	movwf	I2C_Master_Write@d
 10748  13D7  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10749  13D8  00A4               	movwf	I2C_Master_Write@d+1
 10750  13D9  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10751                           
 10752                           ;EEPROM_24C1025.c: 291:      I2C_Master_Write(((char *)&mem_add)[1]);
 10753  13DE  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10754  13DF  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10755  13E0  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10756  13E1  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10757  13E2  00A3               	movwf	I2C_Master_Write@d
 10758  13E3  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10759  13E4  00A4               	movwf	I2C_Master_Write@d+1
 10760  13E5  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10761                           
 10762                           ;EEPROM_24C1025.c: 292:      I2C_Master_Write(((char *)&mem_add)[0]);
 10763  13EA  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10764  13EB  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10765  13EC  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10766  13ED  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10767  13EE  00A3               	movwf	I2C_Master_Write@d
 10768  13EF  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10769  13F0  00A4               	movwf	I2C_Master_Write@d+1
 10770  13F1  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10771                           
 10772                           ;EEPROM_24C1025.c: 293:      I2C_Master_RepeatedStart();
 10773  13F6  160A  158A  20A6  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10774                           
 10775                           ;EEPROM_24C1025.c: 294:      I2C_Master_Write(ctrl);
 10776  13FB  1283               	bcf	3,5	;RP0=0, select bank0
 10777  13FC  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10778  13FD  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10779  13FE  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10780  13FF  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10781  1400  00A3               	movwf	I2C_Master_Write@d
 10782  1401  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10783  1402  00A4               	movwf	I2C_Master_Write@d+1
 10784  1403  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10785                           
 10786                           ;EEPROM_24C1025.c: 296:      cnt=0;
 10787  1408  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
 10788  1409                     l4569:
 10789                           
 10790                           ;EEPROM_24C1025.c: 298:            if(mem_add>0x1FFFF) break;
 10791  1409  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10792  140A  1D03               	btfss	3,2
 10793  140B  2CEB               	goto	l4625
 10794  140C  3002               	movlw	2
 10795  140D  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10796  140E  1D03               	skipz
 10797  140F  2C18               	goto	u4303
 10798  1410  3000               	movlw	0
 10799  1411  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10800  1412  1D03               	skipz
 10801  1413  2C18               	goto	u4303
 10802  1414  3000               	movlw	0
 10803  1415  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10804  1416  1D03               	skipz
 10805  1417  2C18               	goto	u4303
 10806  1418                     u4303:
 10807  1418  1803               	btfsc	3,0
 10808  1419  2CEB               	goto	l4625
 10809                           
 10810                           ;EEPROM_24C1025.c: 299:            if((mem_add+1)%128==0)
 10811  141A  1283               	bcf	3,5	;RP0=0, select bank0
 10812  141B  1303               	bcf	3,6	;RP1=0, select bank0
 10813  141C  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10814  141D  3E01               	addlw	1
 10815  141E  397F               	andlw	127
 10816  141F  1D03               	btfss	3,2
 10817  1420  2CBB               	goto	l4613
 10818                           
 10819                           ;EEPROM_24C1025.c: 300:              {;EEPROM_24C1025.c: 301:              (*buffer)=I2C
      +                          _Master_Read(0);
 10820  1421  3000               	movlw	0
 10821  1422  00A3               	movwf	I2C_Master_Read@a
 10822  1423  00A4               	movwf	I2C_Master_Read@a+1
 10823  1424  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 10824  1429  0823               	movf	?_I2C_Master_Read,w
 10825  142A  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10826  142B  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10827  142C  0084               	movwf	4
 10828  142D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10829  142E  1783               	bsf	3,7	;select IRP bank2
 10830  142F  0080               	movwf	0
 10831                           
 10832                           ;EEPROM_24C1025.c: 302:              I2C_Master_Stop();
 10833  1430  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 10834                           
 10835                           ;EEPROM_24C1025.c: 304:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10836  1435  300D               	movlw	13
 10837  1436  1283               	bcf	3,5	;RP0=0, select bank0
 10838  1437  1303               	bcf	3,6	;RP1=0, select bank0
 10839  1438  00AF               	movwf	??_EEPROM_24C1025_Read_Str+1
 10840  1439  30FB               	movlw	251
 10841  143A  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10842  143B                     u5577:
 10843  143B  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10844  143C  2C3B               	goto	u5577
 10845  143D  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10846  143E  2C3B               	goto	u5577
 10847                           
 10848                           ;EEPROM_24C1025.c: 305:              mem_add++;
 10849  143F  3001               	movlw	1
 10850  1440  1283               	bcf	3,5	;RP0=0, select bank0
 10851  1441  1303               	bcf	3,6	;RP1=0, select bank0
 10852  1442  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10853  1443  3000               	movlw	0
 10854  1444  1803               	skipnc
 10855  1445  3001               	movlw	1
 10856  1446  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10857  1447  3000               	movlw	0
 10858  1448  1803               	skipnc
 10859  1449  3001               	movlw	1
 10860  144A  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10861  144B  3000               	movlw	0
 10862  144C  1803               	skipnc
 10863  144D  3001               	movlw	1
 10864  144E  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10865                           
 10866                           ;EEPROM_24C1025.c: 306:              buffer++;
 10867  144F  3001               	movlw	1
 10868  1450  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10869  1451  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10870  1452  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10871                           
 10872                           ;EEPROM_24C1025.c: 307:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10873  1453  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10874  1454  1D03               	btfss	3,2
 10875  1455  2C64               	goto	l4587
 10876  1456  3001               	movlw	1
 10877  1457  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10878  1458  1D03               	skipz
 10879  1459  2C62               	goto	u4323
 10880  145A  3000               	movlw	0
 10881  145B  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10882  145C  1D03               	skipz
 10883  145D  2C62               	goto	u4323
 10884  145E  3000               	movlw	0
 10885  145F  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10886  1460  1D03               	skipz
 10887  1461  2C62               	goto	u4323
 10888  1462                     u4323:
 10889  1462  1C03               	btfss	3,0
 10890  1463  2C6B               	goto	l4589
 10891  1464                     l4587:
 10892  1464  3008               	movlw	8
 10893  1465  1283               	bcf	3,5	;RP0=0, select bank0
 10894  1466  1303               	bcf	3,6	;RP1=0, select bank0
 10895  1467  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10896  1468  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10897  1469  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10898  146A  2C6E               	goto	l4591
 10899  146B                     l4589:
 10900  146B  1283               	bcf	3,5	;RP0=0, select bank0
 10901  146C  1303               	bcf	3,6	;RP1=0, select bank0
 10902  146D  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10903  146E                     l4591:
 10904                           
 10905                           ;EEPROM_24C1025.c: 308:              ctrl=chip_add;
 10906  146E  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10907  146F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10908  1470  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10909  1471  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10910                           
 10911                           ;EEPROM_24C1025.c: 309:              ctrl<<=1;
 10912  1472  1003               	clrc
 10913  1473  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10914                           
 10915                           ;EEPROM_24C1025.c: 310:              ctrl |= 0xA0;
 10916  1474  30A0               	movlw	160
 10917  1475  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10918  1476  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10919  1477  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10920                           
 10921                           ;EEPROM_24C1025.c: 311:              ctrl |= 0b00000001;
 10922  1478  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10923                           
 10924                           ;EEPROM_24C1025.c: 312:              ctrl |= range;
 10925  1479  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10926  147A  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10927  147B  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10928  147C  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10929                           
 10930                           ;EEPROM_24C1025.c: 314:              I2C_Master_Start();
 10931  147D  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 10932                           
 10933                           ;EEPROM_24C1025.c: 315:              I2C_Master_Write(ctrl & 0xFE);
 10934  1482  1283               	bcf	3,5	;RP0=0, select bank0
 10935  1483  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10936  1484  39FE               	andlw	254
 10937  1485  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10938  1486  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10939  1487  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10940  1488  00A3               	movwf	I2C_Master_Write@d
 10941  1489  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10942  148A  00A4               	movwf	I2C_Master_Write@d+1
 10943  148B  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10944                           
 10945                           ;EEPROM_24C1025.c: 316:              I2C_Master_Write(((char *)&mem_add)[1]);
 10946  1490  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10947  1491  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10948  1492  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10949  1493  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10950  1494  00A3               	movwf	I2C_Master_Write@d
 10951  1495  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10952  1496  00A4               	movwf	I2C_Master_Write@d+1
 10953  1497  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10954                           
 10955                           ;EEPROM_24C1025.c: 317:              I2C_Master_Write(((char *)&mem_add)[0]);
 10956  149C  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10957  149D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10958  149E  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10959  149F  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10960  14A0  00A3               	movwf	I2C_Master_Write@d
 10961  14A1  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10962  14A2  00A4               	movwf	I2C_Master_Write@d+1
 10963  14A3  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10964                           
 10965                           ;EEPROM_24C1025.c: 318:              I2C_Master_RepeatedStart();
 10966  14A8  160A  158A  20A6  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10967                           
 10968                           ;EEPROM_24C1025.c: 319:              I2C_Master_Write(ctrl);
 10969  14AD  1283               	bcf	3,5	;RP0=0, select bank0
 10970  14AE  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10971  14AF  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10972  14B0  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10973  14B1  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10974  14B2  00A3               	movwf	I2C_Master_Write@d
 10975  14B3  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10976  14B4  00A4               	movwf	I2C_Master_Write@d+1
 10977  14B5  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10978                           
 10979                           ;EEPROM_24C1025.c: 320:              }
 10980  14BA  2CE2               	goto	l4623
 10981  14BB                     l4613:
 10982                           
 10983                           ;EEPROM_24C1025.c: 322:              {;EEPROM_24C1025.c: 323:              (*buffer)=I2C
      +                          _Master_Read(1);
 10984  14BB  3001               	movlw	1
 10985  14BC  00A3               	movwf	I2C_Master_Read@a
 10986  14BD  3000               	movlw	0
 10987  14BE  00A4               	movwf	I2C_Master_Read@a+1
 10988  14BF  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 10989  14C4  0823               	movf	?_I2C_Master_Read,w
 10990  14C5  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10991  14C6  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10992  14C7  0084               	movwf	4
 10993  14C8  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10994  14C9  1783               	bsf	3,7	;select IRP bank2
 10995  14CA  0080               	movwf	0
 10996                           
 10997                           ;EEPROM_24C1025.c: 324:              if((*buffer)==0)break;
 10998  14CB  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10999  14CC  0084               	movwf	4
 11000  14CD  0800               	movf	0,w
 11001  14CE  1903               	btfsc	3,2
 11002  14CF  2CEB               	goto	l4625
 11003                           
 11004                           ;EEPROM_24C1025.c: 325:              buffer++;
 11005  14D0  3001               	movlw	1
 11006  14D1  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 11007  14D2  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 11008  14D3  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 11009                           
 11010                           ;EEPROM_24C1025.c: 326:              mem_add++;
 11011  14D4  3001               	movlw	1
 11012  14D5  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11013  14D6  3000               	movlw	0
 11014  14D7  1803               	skipnc
 11015  14D8  3001               	movlw	1
 11016  14D9  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11017  14DA  3000               	movlw	0
 11018  14DB  1803               	skipnc
 11019  14DC  3001               	movlw	1
 11020  14DD  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11021  14DE  3000               	movlw	0
 11022  14DF  1803               	skipnc
 11023  14E0  3001               	movlw	1
 11024  14E1  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11025  14E2                     l4623:
 11026                           
 11027                           ;EEPROM_24C1025.c: 328:        }while((cnt++)<64);
 11028  14E2  3001               	movlw	1
 11029  14E3  07B0               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 11030  14E4  30FF               	movlw	-1
 11031  14E5  0730               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 11032  14E6  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 11033  14E7  3040               	movlw	64
 11034  14E8  022E               	subwf	??_EEPROM_24C1025_Read_Str,w
 11035  14E9  1C03               	skipc
 11036  14EA  2C09               	goto	l4569
 11037  14EB                     l4625:
 11038                           
 11039                           ;EEPROM_24C1025.c: 330:      I2C_Master_Read(0);
 11040  14EB  3000               	movlw	0
 11041  14EC  1283               	bcf	3,5	;RP0=0, select bank0
 11042  14ED  1303               	bcf	3,6	;RP1=0, select bank0
 11043  14EE  00A3               	movwf	I2C_Master_Read@a
 11044  14EF  00A4               	movwf	I2C_Master_Read@a+1
 11045  14F0  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 11046                           
 11047                           ;EEPROM_24C1025.c: 331:      I2C_Master_Stop();
 11048  14F5  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 11049                           
 11050                           ;EEPROM_24C1025.c: 332:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11051  14FA  30B9               	movlw	185
 11052  14FB  1283               	bcf	3,5	;RP0=0, select bank0
 11053  14FC  1303               	bcf	3,6	;RP1=0, select bank0
 11054  14FD  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 11055  14FE                     u5587:
 11056  14FE  2CFF               	nop2
 11057  14FF  2D00               	nop2
 11058  1500  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11059  1501  2CFE               	goto	u5587
 11060  1502  2D03               	nop2
 11061  1503  0008               	return
 11062  1504                     __end_of_EEPROM_24C1025_Read_Str:
 11063                           
 11064                           	psect	text42
 11065  1A43                     __ptext42:	
 11066 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 11067 ;; Defined at:
 11068 ;;		line 360 in file "EEPROM_24C1025.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;  chip_add        1    wreg     unsigned char 
 11071 ;;  mem_add         4   22[BANK0 ] unsigned long 
 11072 ;; Auto vars:     Size  Location     Type
 11073 ;;  chip_add        1   28[BANK0 ] unsigned char 
 11074 ;;  data            2   29[BANK0 ] unsigned char [2]
 11075 ;; Return value:  Size  Location     Type
 11076 ;;                  2   22[BANK0 ] unsigned int 
 11077 ;; Registers used:
 11078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11079 ;; Tracked objects:
 11080 ;;		On entry : 300/300
 11081 ;;		On exit  : 300/0
 11082 ;;		Unchanged: 0/0
 11083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11084 ;;      Params:         0       4       0       0       0
 11085 ;;      Locals:         0       3       0       0       0
 11086 ;;      Temps:          0       2       0       0       0
 11087 ;;      Totals:         0       9       0       0       0
 11088 ;;Total ram usage:        9 bytes
 11089 ;; Hardware stack levels used: 1
 11090 ;; Hardware stack levels required when called: 4
 11091 ;; This function calls:
 11092 ;;		_EEPROM_24C1025_Read_Buffer
 11093 ;; This function is called by:
 11094 ;;		_Decodify_Command
 11095 ;; This function uses a non-reentrant model
 11096 ;;
 11097                           
 11098                           
 11099                           ;psect for function _EEPROM_24C1025_Read_Int
 11100  1A43                     _EEPROM_24C1025_Read_Int:
 11101                           
 11102                           ;incstack = 0
 11103                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11104                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 11105  1A43  1283               	bcf	3,5	;RP0=0, select bank0
 11106  1A44  1303               	bcf	3,6	;RP1=0, select bank0
 11107  1A45  00BC               	movwf	EEPROM_24C1025_Read_Int@chip_add
 11108                           
 11109                           ;EEPROM_24C1025.c: 361:     char data[2];;EEPROM_24C1025.c: 362:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 11110  1A46  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 11111  1A47  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11112  1A48  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 11113  1A49  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11114  1A4A  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 11115  1A4B  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11116  1A4C  0836               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 11117  1A4D  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11118  1A4E  3002               	movlw	2
 11119  1A4F  00BA               	movwf	??_EEPROM_24C1025_Read_Int
 11120  1A50  083A               	movf	??_EEPROM_24C1025_Read_Int,w
 11121  1A51  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 11122  1A52  303D               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 11123  1A53  00BB               	movwf	??_EEPROM_24C1025_Read_Int+1
 11124  1A54  083B               	movf	??_EEPROM_24C1025_Read_Int+1,w
 11125  1A55  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11126  1A56  083C               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 11127  1A57  160A  118A  2682   	fcall	_EEPROM_24C1025_Read_Buffer
 11128                           
 11129                           ;EEPROM_24C1025.c: 363:     return (data[0]<<8)+data[1];
 11130  1A5A  1283               	bcf	3,5	;RP0=0, select bank0
 11131  1A5B  1303               	bcf	3,6	;RP1=0, select bank0
 11132  1A5C  083D               	movf	EEPROM_24C1025_Read_Int@data,w
 11133  1A5D  00BA               	movwf	??_EEPROM_24C1025_Read_Int
 11134  1A5E  01BB               	clrf	??_EEPROM_24C1025_Read_Int+1
 11135  1A5F  083A               	movf	??_EEPROM_24C1025_Read_Int,w
 11136  1A60  00BB               	movwf	??_EEPROM_24C1025_Read_Int+1
 11137  1A61  01BA               	clrf	??_EEPROM_24C1025_Read_Int
 11138  1A62  083E               	movf	EEPROM_24C1025_Read_Int@data+1,w
 11139  1A63  073A               	addwf	??_EEPROM_24C1025_Read_Int,w
 11140  1A64  00B6               	movwf	?_EEPROM_24C1025_Read_Int
 11141  1A65  3000               	movlw	0
 11142  1A66  1803               	skipnc
 11143  1A67  3001               	movlw	1
 11144  1A68  073B               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 11145  1A69  00B7               	movwf	?_EEPROM_24C1025_Read_Int+1
 11146  1A6A  0008               	return
 11147  1A6B                     __end_of_EEPROM_24C1025_Read_Int:
 11148                           
 11149                           	psect	text43
 11150  1919                     __ptext43:	
 11151 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 11152 ;; Defined at:
 11153 ;;		line 346 in file "EEPROM_24C1025.c"
 11154 ;; Parameters:    Size  Location     Type
 11155 ;;  chip_add        1    wreg     unsigned char 
 11156 ;;  mem_add         4   22[BANK0 ] unsigned long 
 11157 ;; Auto vars:     Size  Location     Type
 11158 ;;  chip_add        1   27[BANK0 ] unsigned char 
 11159 ;;  data            1   28[BANK0 ] unsigned char 
 11160 ;; Return value:  Size  Location     Type
 11161 ;;                  1    wreg      unsigned char 
 11162 ;; Registers used:
 11163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11164 ;; Tracked objects:
 11165 ;;		On entry : 300/300
 11166 ;;		On exit  : 300/0
 11167 ;;		Unchanged: 0/0
 11168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11169 ;;      Params:         0       4       0       0       0
 11170 ;;      Locals:         0       2       0       0       0
 11171 ;;      Temps:          0       1       0       0       0
 11172 ;;      Totals:         0       7       0       0       0
 11173 ;;Total ram usage:        7 bytes
 11174 ;; Hardware stack levels used: 1
 11175 ;; Hardware stack levels required when called: 4
 11176 ;; This function calls:
 11177 ;;		_EEPROM_24C1025_Read_Buffer
 11178 ;; This function is called by:
 11179 ;;		_Decodify_Command
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183                           
 11184                           ;psect for function _EEPROM_24C1025_Read_Byte
 11185  1919                     _EEPROM_24C1025_Read_Byte:
 11186                           
 11187                           ;incstack = 0
 11188                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11189                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 11190  1919  1283               	bcf	3,5	;RP0=0, select bank0
 11191  191A  1303               	bcf	3,6	;RP1=0, select bank0
 11192  191B  00BB               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 11193                           
 11194                           ;EEPROM_24C1025.c: 347:     char data;;EEPROM_24C1025.c: 348:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 11195  191C  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 11196  191D  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11197  191E  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 11198  191F  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11199  1920  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 11200  1921  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11201  1922  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 11202  1923  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11203  1924  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 11204  1925  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 11205  1926  303C               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 11206  1927  00BA               	movwf	??_EEPROM_24C1025_Read_Byte
 11207  1928  083A               	movf	??_EEPROM_24C1025_Read_Byte,w
 11208  1929  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11209  192A  083B               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 11210  192B  160A  118A  2682   	fcall	_EEPROM_24C1025_Read_Buffer
 11211                           
 11212                           ;EEPROM_24C1025.c: 349:     return data;
 11213  192E  1283               	bcf	3,5	;RP0=0, select bank0
 11214  192F  1303               	bcf	3,6	;RP1=0, select bank0
 11215  1930  083C               	movf	EEPROM_24C1025_Read_Byte@data,w
 11216  1931  0008               	return
 11217  1932                     __end_of_EEPROM_24C1025_Read_Byte:
 11218                           
 11219                           	psect	text44
 11220  1682                     __ptext44:	
 11221 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 11222 ;; Defined at:
 11223 ;;		line 77 in file "EEPROM_24C1025.c"
 11224 ;; Parameters:    Size  Location     Type
 11225 ;;  chip_add        1    wreg     unsigned char 
 11226 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11227 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11228 ;;  data            1   15[BANK0 ] PTR unsigned char 
 11229 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 11230 ;; Auto vars:     Size  Location     Type
 11231 ;;  chip_add        1   19[BANK0 ] unsigned char 
 11232 ;;  cnt             1   18[BANK0 ] unsigned char 
 11233 ;;  ctrl            1   21[BANK0 ] unsigned char 
 11234 ;;  range           1   20[BANK0 ] unsigned char 
 11235 ;;  cnt             1    0        unsigned char 
 11236 ;; Return value:  Size  Location     Type
 11237 ;;                  1    wreg      void 
 11238 ;; Registers used:
 11239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11240 ;; Tracked objects:
 11241 ;;		On entry : 300/0
 11242 ;;		On exit  : 0/0
 11243 ;;		Unchanged: 0/0
 11244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11245 ;;      Params:         0       6       0       0       0
 11246 ;;      Locals:         0       4       0       0       0
 11247 ;;      Temps:          0       2       0       0       0
 11248 ;;      Totals:         0      12       0       0       0
 11249 ;;Total ram usage:       12 bytes
 11250 ;; Hardware stack levels used: 1
 11251 ;; Hardware stack levels required when called: 3
 11252 ;; This function calls:
 11253 ;;		_I2C_Master_Read
 11254 ;;		_I2C_Master_RepeatedStart
 11255 ;;		_I2C_Master_Start
 11256 ;;		_I2C_Master_Stop
 11257 ;;		_I2C_Master_Write
 11258 ;;		_my_delay_ms_WDT
 11259 ;; This function is called by:
 11260 ;;		_EEPROM_24C1025_Read_Byte
 11261 ;;		_EEPROM_24C1025_Read_Int
 11262 ;; This function uses a non-reentrant model
 11263 ;;
 11264                           
 11265                           
 11266                           ;psect for function _EEPROM_24C1025_Read_Buffer
 11267  1682                     _EEPROM_24C1025_Read_Buffer:
 11268                           
 11269                           ;incstack = 0
 11270                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 11271                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 11272  1682  00B3               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 11273                           
 11274                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 11275  1683  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 11276                           
 11277                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 11278  1684  3014               	movlw	20
 11279  1685  1683               	bsf	3,5	;RP0=1, select bank1
 11280  1686  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11281  1687  3000               	movlw	0
 11282  1688  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11283                           
 11284                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 11285  1689  1283               	bcf	3,5	;RP0=0, select bank0
 11286  168A  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11287  168B  1D03               	btfss	3,2
 11288  168C  0008               	return
 11289  168D  3002               	movlw	2
 11290  168E  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11291  168F  1D03               	skipz
 11292  1690  2E99               	goto	u2873
 11293  1691  3000               	movlw	0
 11294  1692  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11295  1693  1D03               	skipz
 11296  1694  2E99               	goto	u2873
 11297  1695  3000               	movlw	0
 11298  1696  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11299  1697  1D03               	skipz
 11300  1698  2E99               	goto	u2873
 11301  1699                     u2873:
 11302  1699  1803               	btfsc	3,0
 11303  169A  0008               	return
 11304                           
 11305                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11306  169B  1283               	bcf	3,5	;RP0=0, select bank0
 11307  169C  1303               	bcf	3,6	;RP1=0, select bank0
 11308  169D  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11309  169E  1D03               	btfss	3,2
 11310  169F  2EAE               	goto	l3737
 11311  16A0  3001               	movlw	1
 11312  16A1  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11313  16A2  1D03               	skipz
 11314  16A3  2EAC               	goto	u2883
 11315  16A4  3000               	movlw	0
 11316  16A5  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11317  16A6  1D03               	skipz
 11318  16A7  2EAC               	goto	u2883
 11319  16A8  3000               	movlw	0
 11320  16A9  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11321  16AA  1D03               	skipz
 11322  16AB  2EAC               	goto	u2883
 11323  16AC                     u2883:
 11324  16AC  1C03               	btfss	3,0
 11325  16AD  2EB5               	goto	l3739
 11326  16AE                     l3737:
 11327  16AE  3008               	movlw	8
 11328  16AF  1283               	bcf	3,5	;RP0=0, select bank0
 11329  16B0  1303               	bcf	3,6	;RP1=0, select bank0
 11330  16B1  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11331  16B2  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11332  16B3  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
 11333  16B4  2EB8               	goto	l3741
 11334  16B5                     l3739:
 11335  16B5  1283               	bcf	3,5	;RP0=0, select bank0
 11336  16B6  1303               	bcf	3,6	;RP1=0, select bank0
 11337  16B7  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 11338  16B8                     l3741:
 11339                           
 11340                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 11341  16B8  0833               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11342  16B9  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11343  16BA  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11344  16BB  00B5               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11345                           
 11346                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 11347  16BC  1003               	clrc
 11348  16BD  0DB5               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11349                           
 11350                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 11351  16BE  30A0               	movlw	160
 11352  16BF  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11353  16C0  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11354  16C1  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11355                           
 11356                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 11357  16C2  1435               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11358                           
 11359                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 11360  16C3  0834               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11361  16C4  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11362  16C5  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11363  16C6  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11364                           
 11365                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 11366  16C7  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 11367                           
 11368                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 11369  16CC  1283               	bcf	3,5	;RP0=0, select bank0
 11370  16CD  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11371  16CE  39FE               	andlw	254
 11372  16CF  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11373  16D0  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11374  16D1  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11375  16D2  00A3               	movwf	I2C_Master_Write@d
 11376  16D3  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11377  16D4  00A4               	movwf	I2C_Master_Write@d+1
 11378  16D5  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11379                           
 11380                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 11381  16DA  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11382  16DB  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11383  16DC  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11384  16DD  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11385  16DE  00A3               	movwf	I2C_Master_Write@d
 11386  16DF  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11387  16E0  00A4               	movwf	I2C_Master_Write@d+1
 11388  16E1  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11389                           
 11390                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 11391  16E6  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11392  16E7  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11393  16E8  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11394  16E9  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11395  16EA  00A3               	movwf	I2C_Master_Write@d
 11396  16EB  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11397  16EC  00A4               	movwf	I2C_Master_Write@d+1
 11398  16ED  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11399                           
 11400                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 11401  16F2  160A  158A  20A6  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11402                           
 11403                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 11404  16F7  1283               	bcf	3,5	;RP0=0, select bank0
 11405  16F8  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11406  16F9  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11407  16FA  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11408  16FB  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11409  16FC  00A3               	movwf	I2C_Master_Write@d
 11410  16FD  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11411  16FE  00A4               	movwf	I2C_Master_Write@d+1
 11412  16FF  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11413                           
 11414                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 11415  1704  01B2               	clrf	EEPROM_24C1025_Read_Buffer@cnt_108
 11416  1705                     l3815:
 11417  1705  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 11418  1706  0232               	subwf	EEPROM_24C1025_Read_Buffer@cnt_108,w
 11419  1707  1803               	btfsc	3,0
 11420  1708  2FE7               	goto	l3817
 11421  1709  0064               	clrwdt	;# 
 11422                           
 11423                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 11424  170A  1283               	bcf	3,5	;RP0=0, select bank0
 11425  170B  1303               	bcf	3,6	;RP1=0, select bank0
 11426  170C  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11427  170D  1D03               	btfss	3,2
 11428  170E  2FE7               	goto	l3817
 11429  170F  3002               	movlw	2
 11430  1710  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11431  1711  1D03               	skipz
 11432  1712  2F1B               	goto	u2893
 11433  1713  3000               	movlw	0
 11434  1714  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11435  1715  1D03               	skipz
 11436  1716  2F1B               	goto	u2893
 11437  1717  3000               	movlw	0
 11438  1718  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11439  1719  1D03               	skipz
 11440  171A  2F1B               	goto	u2893
 11441  171B                     u2893:
 11442  171B  1803               	btfsc	3,0
 11443  171C  2FE7               	goto	l3817
 11444                           
 11445                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 11446  171D  1283               	bcf	3,5	;RP0=0, select bank0
 11447  171E  1303               	bcf	3,6	;RP1=0, select bank0
 11448  171F  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11449  1720  3E01               	addlw	1
 11450  1721  397F               	andlw	127
 11451  1722  1D03               	btfss	3,2
 11452  1723  2FC0               	goto	l3807
 11453                           
 11454                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 11455  1724  3000               	movlw	0
 11456  1725  00A3               	movwf	I2C_Master_Read@a
 11457  1726  00A4               	movwf	I2C_Master_Read@a+1
 11458  1727  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 11459  172C  0823               	movf	?_I2C_Master_Read,w
 11460  172D  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11461  172E  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11462  172F  0084               	movwf	4
 11463  1730  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11464  1731  1383               	bcf	3,7	;select IRP bank0
 11465  1732  0080               	movwf	0
 11466                           
 11467                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 11468  1733  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 11469                           
 11470                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 11471  1738  3000               	movlw	0
 11472  1739  1283               	bcf	3,5	;RP0=0, select bank0
 11473  173A  00A3               	movwf	my_delay_ms_WDT@time+3
 11474  173B  3000               	movlw	0
 11475  173C  00A2               	movwf	my_delay_ms_WDT@time+2
 11476  173D  3000               	movlw	0
 11477  173E  00A1               	movwf	my_delay_ms_WDT@time+1
 11478  173F  3005               	movlw	5
 11479  1740  00A0               	movwf	my_delay_ms_WDT@time
 11480  1741  160A  158A  2448  160A  118A  	fcall	_my_delay_ms_WDT
 11481                           
 11482                           ;EEPROM_24C1025.c: 114:              mem_add++;
 11483  1746  3001               	movlw	1
 11484  1747  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11485  1748  3000               	movlw	0
 11486  1749  1803               	skipnc
 11487  174A  3001               	movlw	1
 11488  174B  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11489  174C  3000               	movlw	0
 11490  174D  1803               	skipnc
 11491  174E  3001               	movlw	1
 11492  174F  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11493  1750  3000               	movlw	0
 11494  1751  1803               	skipnc
 11495  1752  3001               	movlw	1
 11496  1753  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11497                           
 11498                           ;EEPROM_24C1025.c: 115:              data++;
 11499  1754  3001               	movlw	1
 11500  1755  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11501  1756  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11502  1757  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11503                           
 11504                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11505  1758  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11506  1759  1D03               	btfss	3,2
 11507  175A  2F69               	goto	l3781
 11508  175B  3001               	movlw	1
 11509  175C  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11510  175D  1D03               	skipz
 11511  175E  2F67               	goto	u2913
 11512  175F  3000               	movlw	0
 11513  1760  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11514  1761  1D03               	skipz
 11515  1762  2F67               	goto	u2913
 11516  1763  3000               	movlw	0
 11517  1764  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11518  1765  1D03               	skipz
 11519  1766  2F67               	goto	u2913
 11520  1767                     u2913:
 11521  1767  1C03               	btfss	3,0
 11522  1768  2F70               	goto	l3783
 11523  1769                     l3781:
 11524  1769  3008               	movlw	8
 11525  176A  1283               	bcf	3,5	;RP0=0, select bank0
 11526  176B  1303               	bcf	3,6	;RP1=0, select bank0
 11527  176C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11528  176D  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11529  176E  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
 11530  176F  2F73               	goto	l3785
 11531  1770                     l3783:
 11532  1770  1283               	bcf	3,5	;RP0=0, select bank0
 11533  1771  1303               	bcf	3,6	;RP1=0, select bank0
 11534  1772  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 11535  1773                     l3785:
 11536                           
 11537                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 11538  1773  0833               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11539  1774  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11540  1775  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11541  1776  00B5               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11542                           
 11543                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 11544  1777  1003               	clrc
 11545  1778  0DB5               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11546                           
 11547                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 11548  1779  30A0               	movlw	160
 11549  177A  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11550  177B  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11551  177C  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11552                           
 11553                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 11554  177D  1435               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11555                           
 11556                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 11557  177E  0834               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11558  177F  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11559  1780  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11560  1781  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11561                           
 11562                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 11563  1782  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 11564                           
 11565                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 11566  1787  1283               	bcf	3,5	;RP0=0, select bank0
 11567  1788  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11568  1789  39FE               	andlw	254
 11569  178A  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11570  178B  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11571  178C  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11572  178D  00A3               	movwf	I2C_Master_Write@d
 11573  178E  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11574  178F  00A4               	movwf	I2C_Master_Write@d+1
 11575  1790  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11576                           
 11577                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 11578  1795  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11579  1796  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11580  1797  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11581  1798  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11582  1799  00A3               	movwf	I2C_Master_Write@d
 11583  179A  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11584  179B  00A4               	movwf	I2C_Master_Write@d+1
 11585  179C  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11586                           
 11587                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 11588  17A1  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11589  17A2  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11590  17A3  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11591  17A4  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11592  17A5  00A3               	movwf	I2C_Master_Write@d
 11593  17A6  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11594  17A7  00A4               	movwf	I2C_Master_Write@d+1
 11595  17A8  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11596                           
 11597                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 11598  17AD  160A  158A  20A6  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11599                           
 11600                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 11601  17B2  1283               	bcf	3,5	;RP0=0, select bank0
 11602  17B3  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11603  17B4  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11604  17B5  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11605  17B6  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11606  17B7  00A3               	movwf	I2C_Master_Write@d
 11607  17B8  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11608  17B9  00A4               	movwf	I2C_Master_Write@d+1
 11609  17BA  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11610                           
 11611                           ;EEPROM_24C1025.c: 129:              }
 11612  17BF  2FE2               	goto	l3813
 11613  17C0                     l3807:
 11614                           
 11615                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 11616  17C0  3001               	movlw	1
 11617  17C1  00A3               	movwf	I2C_Master_Read@a
 11618  17C2  3000               	movlw	0
 11619  17C3  00A4               	movwf	I2C_Master_Read@a+1
 11620  17C4  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 11621  17C9  0823               	movf	?_I2C_Master_Read,w
 11622  17CA  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11623  17CB  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11624  17CC  0084               	movwf	4
 11625  17CD  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11626  17CE  1383               	bcf	3,7	;select IRP bank0
 11627  17CF  0080               	movwf	0
 11628                           
 11629                           ;EEPROM_24C1025.c: 133:              data++;
 11630  17D0  3001               	movlw	1
 11631  17D1  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11632  17D2  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11633  17D3  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11634                           
 11635                           ;EEPROM_24C1025.c: 134:              mem_add++;
 11636  17D4  3001               	movlw	1
 11637  17D5  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11638  17D6  3000               	movlw	0
 11639  17D7  1803               	skipnc
 11640  17D8  3001               	movlw	1
 11641  17D9  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11642  17DA  3000               	movlw	0
 11643  17DB  1803               	skipnc
 11644  17DC  3001               	movlw	1
 11645  17DD  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11646  17DE  3000               	movlw	0
 11647  17DF  1803               	skipnc
 11648  17E0  3001               	movlw	1
 11649  17E1  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11650  17E2                     l3813:
 11651                           
 11652                           ;EEPROM_24C1025.c: 136:         }
 11653  17E2  3001               	movlw	1
 11654  17E3  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11655  17E4  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11656  17E5  07B2               	addwf	EEPROM_24C1025_Read_Buffer@cnt_108,f
 11657  17E6  2F05               	goto	l3815
 11658  17E7                     l3817:
 11659                           
 11660                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 11661  17E7  3000               	movlw	0
 11662  17E8  1283               	bcf	3,5	;RP0=0, select bank0
 11663  17E9  1303               	bcf	3,6	;RP1=0, select bank0
 11664  17EA  00A3               	movwf	I2C_Master_Read@a
 11665  17EB  00A4               	movwf	I2C_Master_Read@a+1
 11666  17EC  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 11667                           
 11668                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 11669  17F1  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 11670                           
 11671                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11672  17F6  30B9               	movlw	185
 11673  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 11674  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 11675  17F9  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11676  17FA                     u5597:
 11677  17FA  2FFB               	nop2
 11678  17FB  2FFC               	nop2
 11679  17FC  0BB0               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11680  17FD  2FFA               	goto	u5597
 11681  17FE  2FFF               	nop2
 11682  17FF  0008               	return
 11683  1800                     __end_of_EEPROM_24C1025_Read_Buffer:
 11684                           
 11685                           	psect	text45
 11686  1504                     __ptext45:	
 11687 ;; *************** function _EEPROM_24C1025_Read_Buffer_USART *****************
 11688 ;; Defined at:
 11689 ;;		line 148 in file "EEPROM_24C1025.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;  chip_add        1    wreg     unsigned char 
 11692 ;;  mem_add         4    9[BANK0 ] unsigned long 
 11693 ;;  sizedata        1   13[BANK0 ] unsigned char 
 11694 ;;  data            1   14[BANK0 ] PTR unsigned char 
 11695 ;;		 -> buffer(33), 
 11696 ;; Auto vars:     Size  Location     Type
 11697 ;;  chip_add        1   18[BANK0 ] unsigned char 
 11698 ;;  cnt             1   17[BANK0 ] unsigned char 
 11699 ;;  ctrl            1   20[BANK0 ] unsigned char 
 11700 ;;  range           1   19[BANK0 ] unsigned char 
 11701 ;;  cnt             1    0        unsigned char 
 11702 ;; Return value:  Size  Location     Type
 11703 ;;                  1    wreg      void 
 11704 ;; Registers used:
 11705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11706 ;; Tracked objects:
 11707 ;;		On entry : 300/300
 11708 ;;		On exit  : 0/0
 11709 ;;		Unchanged: 0/0
 11710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11711 ;;      Params:         0       6       0       0       0
 11712 ;;      Locals:         0       4       0       0       0
 11713 ;;      Temps:          0       2       0       0       0
 11714 ;;      Totals:         0      12       0       0       0
 11715 ;;Total ram usage:       12 bytes
 11716 ;; Hardware stack levels used: 1
 11717 ;; Hardware stack levels required when called: 3
 11718 ;; This function calls:
 11719 ;;		_I2C_Master_Read
 11720 ;;		_I2C_Master_RepeatedStart
 11721 ;;		_I2C_Master_Start
 11722 ;;		_I2C_Master_Stop
 11723 ;;		_I2C_Master_Write
 11724 ;;		_USART_putc
 11725 ;; This function is called by:
 11726 ;;		_Decodify_Command
 11727 ;; This function uses a non-reentrant model
 11728 ;;
 11729                           
 11730                           
 11731                           ;psect for function _EEPROM_24C1025_Read_Buffer_USART
 11732  1504                     _EEPROM_24C1025_Read_Buffer_USART:
 11733                           
 11734                           ;incstack = 0
 11735                           ; Regs used in _EEPROM_24C1025_Read_Buffer_USART: [wreg-fsr0h+status,2+status,0+pclath+c
      +                          stack]
 11736                           ;EEPROM_24C1025_Read_Buffer_USART@chip_add stored from wreg
 11737  1504  1283               	bcf	3,5	;RP0=0, select bank0
 11738  1505  1303               	bcf	3,6	;RP1=0, select bank0
 11739  1506  00B2               	movwf	EEPROM_24C1025_Read_Buffer_USART@chip_add
 11740                           
 11741                           ;EEPROM_24C1025.c: 154:      unsigned char range=0;
 11742  1507  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11743                           
 11744                           ;EEPROM_24C1025.c: 155:      unsigned char ctrl;;EEPROM_24C1025.c: 157:      Delay_Led_M
      +                          emory=20;
 11745  1508  3014               	movlw	20
 11746  1509  1683               	bsf	3,5	;RP0=1, select bank1
 11747  150A  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11748  150B  3000               	movlw	0
 11749  150C  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11750                           
 11751                           ;EEPROM_24C1025.c: 159:      if(mem_add>0x1FFFF) return;
 11752  150D  1283               	bcf	3,5	;RP0=0, select bank0
 11753  150E  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11754  150F  1D03               	btfss	3,2
 11755  1510  0008               	return
 11756  1511  3002               	movlw	2
 11757  1512  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11758  1513  1D03               	skipz
 11759  1514  2D1D               	goto	u4163
 11760  1515  3000               	movlw	0
 11761  1516  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11762  1517  1D03               	skipz
 11763  1518  2D1D               	goto	u4163
 11764  1519  3000               	movlw	0
 11765  151A  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11766  151B  1D03               	skipz
 11767  151C  2D1D               	goto	u4163
 11768  151D                     u4163:
 11769  151D  1803               	btfsc	3,0
 11770  151E  0008               	return
 11771                           
 11772                           ;EEPROM_24C1025.c: 161:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11773  151F  1283               	bcf	3,5	;RP0=0, select bank0
 11774  1520  1303               	bcf	3,6	;RP1=0, select bank0
 11775  1521  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11776  1522  1D03               	btfss	3,2
 11777  1523  2D32               	goto	l4377
 11778  1524  3001               	movlw	1
 11779  1525  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11780  1526  1D03               	skipz
 11781  1527  2D30               	goto	u4173
 11782  1528  3000               	movlw	0
 11783  1529  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11784  152A  1D03               	skipz
 11785  152B  2D30               	goto	u4173
 11786  152C  3000               	movlw	0
 11787  152D  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11788  152E  1D03               	skipz
 11789  152F  2D30               	goto	u4173
 11790  1530                     u4173:
 11791  1530  1C03               	btfss	3,0
 11792  1531  2D39               	goto	l4379
 11793  1532                     l4377:
 11794  1532  3008               	movlw	8
 11795  1533  1283               	bcf	3,5	;RP0=0, select bank0
 11796  1534  1303               	bcf	3,6	;RP1=0, select bank0
 11797  1535  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11798  1536  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11799  1537  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11800  1538  2D3C               	goto	l4381
 11801  1539                     l4379:
 11802  1539  1283               	bcf	3,5	;RP0=0, select bank0
 11803  153A  1303               	bcf	3,6	;RP1=0, select bank0
 11804  153B  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11805  153C                     l4381:
 11806                           
 11807                           ;EEPROM_24C1025.c: 162:      ctrl=chip_add;
 11808  153C  0832               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11809  153D  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11810  153E  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11811  153F  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11812                           
 11813                           ;EEPROM_24C1025.c: 163:      ctrl<<=1;
 11814  1540  1003               	clrc
 11815  1541  0DB4               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11816                           
 11817                           ;EEPROM_24C1025.c: 164:      ctrl |= 0xA0;
 11818  1542  30A0               	movlw	160
 11819  1543  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11820  1544  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11821  1545  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11822                           
 11823                           ;EEPROM_24C1025.c: 165:      ctrl |= 0b00000001;
 11824  1546  1434               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11825                           
 11826                           ;EEPROM_24C1025.c: 166:      ctrl |= range;
 11827  1547  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11828  1548  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11829  1549  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11830  154A  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11831                           
 11832                           ;EEPROM_24C1025.c: 168:      I2C_Master_Start();
 11833  154B  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 11834                           
 11835                           ;EEPROM_24C1025.c: 169:      I2C_Master_Write(ctrl & 0xFE);
 11836  1550  1283               	bcf	3,5	;RP0=0, select bank0
 11837  1551  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11838  1552  39FE               	andlw	254
 11839  1553  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11840  1554  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11841  1555  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11842  1556  00A3               	movwf	I2C_Master_Write@d
 11843  1557  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11844  1558  00A4               	movwf	I2C_Master_Write@d+1
 11845  1559  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11846                           
 11847                           ;EEPROM_24C1025.c: 170:      I2C_Master_Write(((char *)&mem_add)[1]);
 11848  155E  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11849  155F  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11850  1560  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11851  1561  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11852  1562  00A3               	movwf	I2C_Master_Write@d
 11853  1563  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11854  1564  00A4               	movwf	I2C_Master_Write@d+1
 11855  1565  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11856                           
 11857                           ;EEPROM_24C1025.c: 171:      I2C_Master_Write(((char *)&mem_add)[0]);
 11858  156A  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11859  156B  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11860  156C  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11861  156D  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11862  156E  00A3               	movwf	I2C_Master_Write@d
 11863  156F  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11864  1570  00A4               	movwf	I2C_Master_Write@d+1
 11865  1571  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11866                           
 11867                           ;EEPROM_24C1025.c: 172:      I2C_Master_RepeatedStart();
 11868  1576  160A  158A  20A6  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11869                           
 11870                           ;EEPROM_24C1025.c: 173:      I2C_Master_Write(ctrl);
 11871  157B  1283               	bcf	3,5	;RP0=0, select bank0
 11872  157C  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11873  157D  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11874  157E  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11875  157F  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11876  1580  00A3               	movwf	I2C_Master_Write@d
 11877  1581  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11878  1582  00A4               	movwf	I2C_Master_Write@d+1
 11879  1583  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11880                           
 11881                           ;EEPROM_24C1025.c: 175:      for(char cnt=0;cnt<(sizedata);cnt++)
 11882  1588  01B1               	clrf	EEPROM_24C1025_Read_Buffer_USART@cnt_117
 11883  1589                     l4451:
 11884  1589  082D               	movf	EEPROM_24C1025_Read_Buffer_USART@sizedata,w
 11885  158A  0231               	subwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,w
 11886  158B  1803               	btfsc	3,0
 11887  158C  2E69               	goto	l4453
 11888  158D  0064               	clrwdt	;# 
 11889                           
 11890                           ;EEPROM_24C1025.c: 178:            if(mem_add>0x1FFFF) break;
 11891  158E  1283               	bcf	3,5	;RP0=0, select bank0
 11892  158F  1303               	bcf	3,6	;RP1=0, select bank0
 11893  1590  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11894  1591  1D03               	btfss	3,2
 11895  1592  2E69               	goto	l4453
 11896  1593  3002               	movlw	2
 11897  1594  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11898  1595  1D03               	skipz
 11899  1596  2D9F               	goto	u4183
 11900  1597  3000               	movlw	0
 11901  1598  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11902  1599  1D03               	skipz
 11903  159A  2D9F               	goto	u4183
 11904  159B  3000               	movlw	0
 11905  159C  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11906  159D  1D03               	skipz
 11907  159E  2D9F               	goto	u4183
 11908  159F                     u4183:
 11909  159F  1803               	btfsc	3,0
 11910  15A0  2E69               	goto	l4453
 11911                           
 11912                           ;EEPROM_24C1025.c: 179:            if((mem_add+1)%128==0)
 11913  15A1  1283               	bcf	3,5	;RP0=0, select bank0
 11914  15A2  1303               	bcf	3,6	;RP1=0, select bank0
 11915  15A3  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11916  15A4  3E01               	addlw	1
 11917  15A5  397F               	andlw	127
 11918  15A6  1D03               	btfss	3,2
 11919  15A7  2E3D               	goto	l4445
 11920                           
 11921                           ;EEPROM_24C1025.c: 180:              {;EEPROM_24C1025.c: 181:              (*data)=I2C_M
      +                          aster_Read(0);
 11922  15A8  3000               	movlw	0
 11923  15A9  00A3               	movwf	I2C_Master_Read@a
 11924  15AA  00A4               	movwf	I2C_Master_Read@a+1
 11925  15AB  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 11926  15B0  0823               	movf	?_I2C_Master_Read,w
 11927  15B1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11928  15B2  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11929  15B3  0084               	movwf	4
 11930  15B4  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11931  15B5  1783               	bsf	3,7	;select IRP bank2
 11932  15B6  0080               	movwf	0
 11933                           
 11934                           ;EEPROM_24C1025.c: 182:              I2C_Master_Stop();
 11935  15B7  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 11936                           
 11937                           ;EEPROM_24C1025.c: 183:              USART_putc(*data);
 11938  15BC  1283               	bcf	3,5	;RP0=0, select bank0
 11939  15BD  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11940  15BE  0084               	movwf	4
 11941  15BF  1783               	bsf	3,7	;select IRP bank2
 11942  15C0  0800               	movf	0,w
 11943  15C1  160A  158A  20B1  160A  118A  	fcall	_USART_putc
 11944                           
 11945                           ;EEPROM_24C1025.c: 186:              mem_add++;
 11946  15C6  3001               	movlw	1
 11947  15C7  1283               	bcf	3,5	;RP0=0, select bank0
 11948  15C8  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11949  15C9  3000               	movlw	0
 11950  15CA  1803               	skipnc
 11951  15CB  3001               	movlw	1
 11952  15CC  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11953  15CD  3000               	movlw	0
 11954  15CE  1803               	skipnc
 11955  15CF  3001               	movlw	1
 11956  15D0  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11957  15D1  3000               	movlw	0
 11958  15D2  1803               	skipnc
 11959  15D3  3001               	movlw	1
 11960  15D4  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11961                           
 11962                           ;EEPROM_24C1025.c: 188:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11963  15D5  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11964  15D6  1D03               	btfss	3,2
 11965  15D7  2DE6               	goto	l4419
 11966  15D8  3001               	movlw	1
 11967  15D9  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11968  15DA  1D03               	skipz
 11969  15DB  2DE4               	goto	u4203
 11970  15DC  3000               	movlw	0
 11971  15DD  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11972  15DE  1D03               	skipz
 11973  15DF  2DE4               	goto	u4203
 11974  15E0  3000               	movlw	0
 11975  15E1  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11976  15E2  1D03               	skipz
 11977  15E3  2DE4               	goto	u4203
 11978  15E4                     u4203:
 11979  15E4  1C03               	btfss	3,0
 11980  15E5  2DED               	goto	l4421
 11981  15E6                     l4419:
 11982  15E6  3008               	movlw	8
 11983  15E7  1283               	bcf	3,5	;RP0=0, select bank0
 11984  15E8  1303               	bcf	3,6	;RP1=0, select bank0
 11985  15E9  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11986  15EA  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11987  15EB  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11988  15EC  2DF0               	goto	l4423
 11989  15ED                     l4421:
 11990  15ED  1283               	bcf	3,5	;RP0=0, select bank0
 11991  15EE  1303               	bcf	3,6	;RP1=0, select bank0
 11992  15EF  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11993  15F0                     l4423:
 11994                           
 11995                           ;EEPROM_24C1025.c: 189:              ctrl=chip_add;
 11996  15F0  0832               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11997  15F1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11998  15F2  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11999  15F3  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 12000                           
 12001                           ;EEPROM_24C1025.c: 190:              ctrl<<=1;
 12002  15F4  1003               	clrc
 12003  15F5  0DB4               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 12004                           
 12005                           ;EEPROM_24C1025.c: 191:              ctrl |= 0xA0;
 12006  15F6  30A0               	movlw	160
 12007  15F7  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12008  15F8  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12009  15F9  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 12010                           
 12011                           ;EEPROM_24C1025.c: 192:              ctrl |= 0b00000001;
 12012  15FA  1434               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 12013                           
 12014                           ;EEPROM_24C1025.c: 193:              ctrl |= range;
 12015  15FB  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 12016  15FC  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12017  15FD  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12018  15FE  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 12019                           
 12020                           ;EEPROM_24C1025.c: 195:              I2C_Master_Start();
 12021  15FF  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 12022                           
 12023                           ;EEPROM_24C1025.c: 196:              I2C_Master_Write(ctrl & 0xFE);
 12024  1604  1283               	bcf	3,5	;RP0=0, select bank0
 12025  1605  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 12026  1606  39FE               	andlw	254
 12027  1607  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12028  1608  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 12029  1609  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12030  160A  00A3               	movwf	I2C_Master_Write@d
 12031  160B  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 12032  160C  00A4               	movwf	I2C_Master_Write@d+1
 12033  160D  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12034                           
 12035                           ;EEPROM_24C1025.c: 197:              I2C_Master_Write(((char *)&mem_add)[1]);
 12036  1612  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 12037  1613  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12038  1614  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 12039  1615  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12040  1616  00A3               	movwf	I2C_Master_Write@d
 12041  1617  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 12042  1618  00A4               	movwf	I2C_Master_Write@d+1
 12043  1619  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12044                           
 12045                           ;EEPROM_24C1025.c: 198:              I2C_Master_Write(((char *)&mem_add)[0]);
 12046  161E  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 12047  161F  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12048  1620  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 12049  1621  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12050  1622  00A3               	movwf	I2C_Master_Write@d
 12051  1623  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 12052  1624  00A4               	movwf	I2C_Master_Write@d+1
 12053  1625  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12054                           
 12055                           ;EEPROM_24C1025.c: 199:              I2C_Master_RepeatedStart();
 12056  162A  160A  158A  20A6  160A  118A  	fcall	_I2C_Master_RepeatedStart
 12057                           
 12058                           ;EEPROM_24C1025.c: 200:              I2C_Master_Write(ctrl);
 12059  162F  1283               	bcf	3,5	;RP0=0, select bank0
 12060  1630  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 12061  1631  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12062  1632  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 12063  1633  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12064  1634  00A3               	movwf	I2C_Master_Write@d
 12065  1635  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 12066  1636  00A4               	movwf	I2C_Master_Write@d+1
 12067  1637  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12068                           
 12069                           ;EEPROM_24C1025.c: 201:              }
 12070  163C  2E64               	goto	l4449
 12071  163D                     l4445:
 12072                           
 12073                           ;EEPROM_24C1025.c: 203:              {;EEPROM_24C1025.c: 204:              (*data)=I2C_M
      +                          aster_Read(1);
 12074  163D  3001               	movlw	1
 12075  163E  00A3               	movwf	I2C_Master_Read@a
 12076  163F  3000               	movlw	0
 12077  1640  00A4               	movwf	I2C_Master_Read@a+1
 12078  1641  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 12079  1646  0823               	movf	?_I2C_Master_Read,w
 12080  1647  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12081  1648  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 12082  1649  0084               	movwf	4
 12083  164A  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12084  164B  1783               	bsf	3,7	;select IRP bank2
 12085  164C  0080               	movwf	0
 12086                           
 12087                           ;EEPROM_24C1025.c: 205:              USART_putc(*data);
 12088  164D  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 12089  164E  0084               	movwf	4
 12090  164F  0800               	movf	0,w
 12091  1650  160A  158A  20B1  160A  118A  	fcall	_USART_putc
 12092                           
 12093                           ;EEPROM_24C1025.c: 207:              mem_add++;
 12094  1655  3001               	movlw	1
 12095  1656  1283               	bcf	3,5	;RP0=0, select bank0
 12096  1657  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 12097  1658  3000               	movlw	0
 12098  1659  1803               	skipnc
 12099  165A  3001               	movlw	1
 12100  165B  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 12101  165C  3000               	movlw	0
 12102  165D  1803               	skipnc
 12103  165E  3001               	movlw	1
 12104  165F  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 12105  1660  3000               	movlw	0
 12106  1661  1803               	skipnc
 12107  1662  3001               	movlw	1
 12108  1663  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 12109  1664                     l4449:
 12110                           
 12111                           ;EEPROM_24C1025.c: 209:         }
 12112  1664  3001               	movlw	1
 12113  1665  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12114  1666  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12115  1667  07B1               	addwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,f
 12116  1668  2D89               	goto	l4451
 12117  1669                     l4453:
 12118                           
 12119                           ;EEPROM_24C1025.c: 210:         I2C_Master_Read(0);
 12120  1669  3000               	movlw	0
 12121  166A  1283               	bcf	3,5	;RP0=0, select bank0
 12122  166B  1303               	bcf	3,6	;RP1=0, select bank0
 12123  166C  00A3               	movwf	I2C_Master_Read@a
 12124  166D  00A4               	movwf	I2C_Master_Read@a+1
 12125  166E  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 12126                           
 12127                           ;EEPROM_24C1025.c: 211:         I2C_Master_Stop();
 12128  1673  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 12129                           
 12130                           ;EEPROM_24C1025.c: 212:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 12131  1678  30B9               	movlw	185
 12132  1679  1283               	bcf	3,5	;RP0=0, select bank0
 12133  167A  1303               	bcf	3,6	;RP1=0, select bank0
 12134  167B  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12135  167C                     u5607:
 12136  167C  2E7D               	nop2
 12137  167D  2E7E               	nop2
 12138  167E  0BAF               	decfsz	??_EEPROM_24C1025_Read_Buffer_USART,f
 12139  167F  2E7C               	goto	u5607
 12140  1680  2E81               	nop2
 12141  1681  0008               	return
 12142  1682                     __end_of_EEPROM_24C1025_Read_Buffer_USART:
 12143                           
 12144                           	psect	text46
 12145  18B1                     __ptext46:	
 12146 ;; *************** function _USART_putc *****************
 12147 ;; Defined at:
 12148 ;;		line 89 in file "usart.c"
 12149 ;; Parameters:    Size  Location     Type
 12150 ;;  value           1    wreg     unsigned char 
 12151 ;; Auto vars:     Size  Location     Type
 12152 ;;  value           1    0[BANK0 ] unsigned char 
 12153 ;; Return value:  Size  Location     Type
 12154 ;;                  1    wreg      void 
 12155 ;; Registers used:
 12156 ;;		wreg
 12157 ;; Tracked objects:
 12158 ;;		On entry : 0/100
 12159 ;;		On exit  : 300/100
 12160 ;;		Unchanged: 0/0
 12161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12162 ;;      Params:         0       0       0       0       0
 12163 ;;      Locals:         0       1       0       0       0
 12164 ;;      Temps:          0       0       0       0       0
 12165 ;;      Totals:         0       1       0       0       0
 12166 ;;Total ram usage:        1 bytes
 12167 ;; Hardware stack levels used: 1
 12168 ;; Hardware stack levels required when called: 1
 12169 ;; This function calls:
 12170 ;;		Nothing
 12171 ;; This function is called by:
 12172 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12173 ;;		_Decodify_Command
 12174 ;;		_Send_To_MB
 12175 ;;		_PROCULUS_Control_Register_Write
 12176 ;;		_PROCULUS_VP_Write
 12177 ;;		_USART_put_int
 12178 ;;		_USART_put_string
 12179 ;; This function uses a non-reentrant model
 12180 ;;
 12181                           
 12182                           
 12183                           ;psect for function _USART_putc
 12184  18B1                     _USART_putc:
 12185                           
 12186                           ;incstack = 0
 12187                           ; Regs used in _USART_putc: [wreg]
 12188                           ;USART_putc@value stored from wreg
 12189  18B1  1283               	bcf	3,5	;RP0=0, select bank0
 12190  18B2  1303               	bcf	3,6	;RP1=0, select bank0
 12191  18B3  00A0               	movwf	USART_putc@value
 12192                           
 12193                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 12194  18B4  3014               	movlw	20
 12195  18B5  1683               	bsf	3,5	;RP0=1, select bank1
 12196  18B6  00DB               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 12197  18B7  3000               	movlw	0
 12198  18B8  00DC               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 12199  18B9                     l880:	
 12200                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 12201                           
 12202  18B9  1C98               	btfss	24,1	;volatile
 12203  18BA  28B9               	goto	l880
 12204                           
 12205                           ;usart.c: 93:     TXREG=value;
 12206  18BB  1283               	bcf	3,5	;RP0=0, select bank0
 12207  18BC  0820               	movf	USART_putc@value,w
 12208  18BD  0099               	movwf	25	;volatile
 12209                           
 12210                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 12211  18BE  1683               	bsf	3,5	;RP0=1, select bank1
 12212  18BF  1698               	bsf	24,5	;volatile
 12213  18C0  0008               	return
 12214  18C1                     __end_of_USART_putc:
 12215                           
 12216                           	psect	text47
 12217  18A6                     __ptext47:	
 12218 ;; *************** function _I2C_Master_RepeatedStart *****************
 12219 ;; Defined at:
 12220 ;;		line 62 in file "I2C.c"
 12221 ;; Parameters:    Size  Location     Type
 12222 ;;		None
 12223 ;; Auto vars:     Size  Location     Type
 12224 ;;		None
 12225 ;; Return value:  Size  Location     Type
 12226 ;;                  1    wreg      void 
 12227 ;; Registers used:
 12228 ;;		wreg, status,2, status,0, pclath, cstack
 12229 ;; Tracked objects:
 12230 ;;		On entry : 300/0
 12231 ;;		On exit  : 200/0
 12232 ;;		Unchanged: 0/0
 12233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12234 ;;      Params:         0       0       0       0       0
 12235 ;;      Locals:         0       0       0       0       0
 12236 ;;      Temps:          0       0       0       0       0
 12237 ;;      Totals:         0       0       0       0       0
 12238 ;;Total ram usage:        0 bytes
 12239 ;; Hardware stack levels used: 1
 12240 ;; Hardware stack levels required when called: 2
 12241 ;; This function calls:
 12242 ;;		_I2C_Master_Wait
 12243 ;; This function is called by:
 12244 ;;		_EEPROM_24C1025_Read_Buffer
 12245 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12246 ;;		_EEPROM_24C1025_Read_Str
 12247 ;; This function uses a non-reentrant model
 12248 ;;
 12249                           
 12250                           
 12251                           ;psect for function _I2C_Master_RepeatedStart
 12252  18A6                     _I2C_Master_RepeatedStart:
 12253                           
 12254                           ;I2C.c: 64:   if(I2C_Master_Wait())
 12255                           
 12256                           ;incstack = 0
 12257                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 12258  18A6  160A  158A  21DD  160A  158A  	fcall	_I2C_Master_Wait
 12259  18AB  3A00               	xorlw	0
 12260  18AC  1903               	skipnz
 12261  18AD  0008               	return
 12262                           
 12263                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 12264  18AE  1683               	bsf	3,5	;RP0=1, select bank1
 12265  18AF  1491               	bsf	17,1	;volatile
 12266  18B0  0008               	return
 12267  18B1                     __end_of_I2C_Master_RepeatedStart:
 12268                           
 12269                           	psect	text48
 12270  1BA6                     __ptext48:	
 12271 ;; *************** function _I2C_Master_Read *****************
 12272 ;; Defined at:
 12273 ;;		line 87 in file "I2C.c"
 12274 ;; Parameters:    Size  Location     Type
 12275 ;;  a               2    3[BANK0 ] unsigned short 
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;  temp            2    7[BANK0 ] unsigned short 
 12278 ;; Return value:  Size  Location     Type
 12279 ;;                  2    3[BANK0 ] unsigned short 
 12280 ;; Registers used:
 12281 ;;		wreg, status,2, status,0, pclath, cstack
 12282 ;; Tracked objects:
 12283 ;;		On entry : 300/0
 12284 ;;		On exit  : 300/0
 12285 ;;		Unchanged: 0/0
 12286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12287 ;;      Params:         0       2       0       0       0
 12288 ;;      Locals:         0       2       0       0       0
 12289 ;;      Temps:          0       2       0       0       0
 12290 ;;      Totals:         0       6       0       0       0
 12291 ;;Total ram usage:        6 bytes
 12292 ;; Hardware stack levels used: 1
 12293 ;; Hardware stack levels required when called: 2
 12294 ;; This function calls:
 12295 ;;		_I2C_Master_Wait
 12296 ;; This function is called by:
 12297 ;;		_EEPROM_24C1025_Read_Buffer
 12298 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12299 ;;		_EEPROM_24C1025_Read_Str
 12300 ;; This function uses a non-reentrant model
 12301 ;;
 12302                           
 12303                           
 12304                           ;psect for function _I2C_Master_Read
 12305  1BA6                     _I2C_Master_Read:
 12306                           
 12307                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 12308                           
 12309                           ;incstack = 0
 12310                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 12311  1BA6  160A  158A  21DD  160A  158A  	fcall	_I2C_Master_Wait
 12312  1BAB  3A00               	xorlw	0
 12313  1BAC  1683               	bsf	3,5	;RP0=1, select bank1
 12314  1BAD  1D03               	btfss	3,2
 12315  1BAE  1591               	bsf	17,3	;volatile
 12316                           
 12317                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 12318  1BAF  160A  158A  21DD  160A  158A  	fcall	_I2C_Master_Wait
 12319  1BB4  3A00               	xorlw	0
 12320  1BB5  1903               	skipnz
 12321  1BB6  2BBE               	goto	l3687
 12322  1BB7  0813               	movf	19,w	;volatile
 12323  1BB8  00A5               	movwf	??_I2C_Master_Read
 12324  1BB9  01A6               	clrf	??_I2C_Master_Read+1
 12325  1BBA  0825               	movf	??_I2C_Master_Read,w
 12326  1BBB  00A7               	movwf	I2C_Master_Read@temp
 12327  1BBC  0826               	movf	??_I2C_Master_Read+1,w
 12328  1BBD  00A8               	movwf	I2C_Master_Read@temp+1
 12329  1BBE                     l3687:
 12330                           
 12331                           ;I2C.c: 92:   if(I2C_Master_Wait())
 12332  1BBE  160A  158A  21DD  160A  158A  	fcall	_I2C_Master_Wait
 12333  1BC3  3A00               	xorlw	0
 12334  1BC4  1903               	skipnz
 12335  1BC5  2BD8               	goto	l3699
 12336                           
 12337                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 12338  1BC6  0823               	movf	I2C_Master_Read@a,w
 12339  1BC7  0424               	iorwf	I2C_Master_Read@a+1,w
 12340  1BC8  1D03               	btfss	3,2
 12341  1BC9  2BCE               	goto	u2810
 12342  1BCA  1683               	bsf	3,5	;RP0=1, select bank1
 12343  1BCB  1303               	bcf	3,6	;RP1=0, select bank1
 12344  1BCC  1691               	bsf	17,5	;volatile
 12345  1BCD  2BD1               	goto	l3691
 12346  1BCE                     u2810:
 12347  1BCE  1683               	bsf	3,5	;RP0=1, select bank1
 12348  1BCF  1303               	bcf	3,6	;RP1=0, select bank1
 12349  1BD0  1291               	bcf	17,5	;volatile
 12350  1BD1                     l3691:
 12351                           
 12352                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 12353  1BD1  1611               	bsf	17,4	;volatile
 12354                           
 12355                           ;I2C.c: 96:     return temp;
 12356  1BD2  1283               	bcf	3,5	;RP0=0, select bank0
 12357  1BD3  0828               	movf	I2C_Master_Read@temp+1,w
 12358  1BD4  00A4               	movwf	?_I2C_Master_Read+1
 12359  1BD5  0827               	movf	I2C_Master_Read@temp,w
 12360  1BD6  00A3               	movwf	?_I2C_Master_Read
 12361  1BD7  0008               	return
 12362  1BD8                     l3699:
 12363                           
 12364                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 12365  1BD8  01A3               	clrf	?_I2C_Master_Read
 12366  1BD9  01A4               	clrf	?_I2C_Master_Read+1
 12367  1BDA  0008               	return
 12368  1BDB                     __end_of_I2C_Master_Read:
 12369                           
 12370                           	psect	text49
 12371  1CF8                     __ptext49:	
 12372 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12373 ;; Defined at:
 12374 ;;		line 367 in file "EEPROM_24C1025.c"
 12375 ;; Parameters:    Size  Location     Type
 12376 ;;  chip_add        1    wreg     unsigned char 
 12377 ;;  value           2   10[BANK1 ] unsigned int 
 12378 ;; Auto vars:     Size  Location     Type
 12379 ;;  chip_add        1   12[BANK1 ] unsigned char 
 12380 ;;  mem_add         4   13[BANK1 ] unsigned long 
 12381 ;; Return value:  Size  Location     Type
 12382 ;;                  1    wreg      void 
 12383 ;; Registers used:
 12384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12385 ;; Tracked objects:
 12386 ;;		On entry : 300/300
 12387 ;;		On exit  : 0/0
 12388 ;;		Unchanged: 0/0
 12389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12390 ;;      Params:         0       0       2       0       0
 12391 ;;      Locals:         0       0       5       0       0
 12392 ;;      Temps:          0       0       0       0       0
 12393 ;;      Totals:         0       0       7       0       0
 12394 ;;Total ram usage:        7 bytes
 12395 ;; Hardware stack levels used: 1
 12396 ;; Hardware stack levels required when called: 5
 12397 ;; This function calls:
 12398 ;;		_EEPROM_24C1025_Write_Int
 12399 ;; This function is called by:
 12400 ;;		_Decodify_Command
 12401 ;; This function uses a non-reentrant model
 12402 ;;
 12403                           
 12404                           
 12405                           ;psect for function _EEPROM_24C1025_Fill_All
 12406  1CF8                     _EEPROM_24C1025_Fill_All:
 12407                           
 12408                           ;incstack = 0
 12409                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 12410                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12411  1CF8  1303               	bcf	3,6	;RP1=0, select bank1
 12412  1CF9  00AC               	movwf	EEPROM_24C1025_Fill_All@chip_add^(0+128)
 12413                           
 12414                           ;EEPROM_24C1025.c: 368:      unsigned long mem_add;;EEPROM_24C1025.c: 369:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 12415  1CFA  3000               	movlw	0
 12416  1CFB  00B0               	movwf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128)
 12417  1CFC  3000               	movlw	0
 12418  1CFD  00AF               	movwf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128)
 12419  1CFE  3000               	movlw	0
 12420  1CFF  00AE               	movwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128)
 12421  1D00  3000               	movlw	0
 12422  1D01  00AD               	movwf	EEPROM_24C1025_Fill_All@mem_add^(0+128)
 12423  1D02                     l5665:
 12424                           
 12425                           ;EEPROM_24C1025.c: 370:         {;EEPROM_24C1025.c: 371:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 12426  1D02  1683               	bsf	3,5	;RP0=1, select bank1
 12427  1D03  1303               	bcf	3,6	;RP1=0, select bank1
 12428  1D04  0830               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 12429  1D05  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
 12430  1D06  082F               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 12431  1D07  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
 12432  1D08  082E               	movf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 12433  1D09  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
 12434  1D0A  082D               	movf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 12435  1D0B  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
 12436  1D0C  082B               	movf	(EEPROM_24C1025_Fill_All@value+1)^(0+128),w
 12437  1D0D  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
 12438  1D0E  082A               	movf	EEPROM_24C1025_Fill_All@value^(0+128),w
 12439  1D0F  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
 12440  1D10  082C               	movf	EEPROM_24C1025_Fill_All@chip_add^(0+128),w
 12441  1D11  160A  158A  2293  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
 12442  1D16  0064               	clrwdt	;# 
 12443                           
 12444                           ;EEPROM_24C1025.c: 373:         }
 12445  1D17  3002               	movlw	2
 12446  1D18  1683               	bsf	3,5	;RP0=1, select bank1
 12447  1D19  1303               	bcf	3,6	;RP1=0, select bank1
 12448  1D1A  07AD               	addwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),f
 12449  1D1B  3000               	movlw	0
 12450  1D1C  1803               	skipnc
 12451  1D1D  3001               	movlw	1
 12452  1D1E  07AE               	addwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),f
 12453  1D1F  3000               	movlw	0
 12454  1D20  1803               	skipnc
 12455  1D21  3001               	movlw	1
 12456  1D22  07AF               	addwf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),f
 12457  1D23  3000               	movlw	0
 12458  1D24  1803               	skipnc
 12459  1D25  3001               	movlw	1
 12460  1D26  07B0               	addwf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),f
 12461  1D27  0830               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 12462  1D28  1D03               	btfss	3,2
 12463  1D29  0008               	return
 12464  1D2A  082F               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 12465  1D2B  1D03               	btfss	3,2
 12466  1D2C  0008               	return
 12467  1D2D  3004               	movlw	4
 12468  1D2E  022E               	subwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 12469  1D2F  1D03               	skipz
 12470  1D30  2D35               	goto	u5393
 12471  1D31  3000               	movlw	0
 12472  1D32  022D               	subwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 12473  1D33  1D03               	skipz
 12474  1D34  2D35               	goto	u5393
 12475  1D35                     u5393:
 12476  1D35  1803               	btfsc	3,0
 12477  1D36  0008               	return
 12478  1D37  2D02               	goto	l5665
 12479  1D38                     __end_of_EEPROM_24C1025_Fill_All:
 12480                           
 12481                           	psect	text50
 12482  1A93                     __ptext50:	
 12483 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 12484 ;; Defined at:
 12485 ;;		line 352 in file "EEPROM_24C1025.c"
 12486 ;; Parameters:    Size  Location     Type
 12487 ;;  chip_add        1    wreg     unsigned char 
 12488 ;;  mem_add         4    0[BANK1 ] unsigned long 
 12489 ;;  data            2    4[BANK1 ] int 
 12490 ;; Auto vars:     Size  Location     Type
 12491 ;;  chip_add        1    7[BANK1 ] unsigned char 
 12492 ;;  local           2    8[BANK1 ] unsigned char [2]
 12493 ;; Return value:  Size  Location     Type
 12494 ;;                  1    wreg      void 
 12495 ;; Registers used:
 12496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12497 ;; Tracked objects:
 12498 ;;		On entry : 100/300
 12499 ;;		On exit  : 0/0
 12500 ;;		Unchanged: 0/0
 12501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12502 ;;      Params:         0       0       6       0       0
 12503 ;;      Locals:         0       0       3       0       0
 12504 ;;      Temps:          0       0       1       0       0
 12505 ;;      Totals:         0       0      10       0       0
 12506 ;;Total ram usage:       10 bytes
 12507 ;; Hardware stack levels used: 1
 12508 ;; Hardware stack levels required when called: 4
 12509 ;; This function calls:
 12510 ;;		_EEPROM_24C1025_Write_Buffer
 12511 ;; This function is called by:
 12512 ;;		_EEPROM_24C1025_Fill_All
 12513 ;;		_Decodify_Command
 12514 ;;		_Save_Log
 12515 ;; This function uses a non-reentrant model
 12516 ;;
 12517                           
 12518                           
 12519                           ;psect for function _EEPROM_24C1025_Write_Int
 12520  1A93                     _EEPROM_24C1025_Write_Int:
 12521                           
 12522                           ;incstack = 0
 12523                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 12524                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 12525  1A93  1303               	bcf	3,6	;RP1=0, select bank1
 12526  1A94  00A7               	movwf	EEPROM_24C1025_Write_Int@chip_add^(0+128)
 12527                           
 12528                           ;EEPROM_24C1025.c: 353:      char local[2];;EEPROM_24C1025.c: 354:      local[0]=((char 
      +                          *)&data)[1];
 12529  1A95  0825               	movf	(EEPROM_24C1025_Write_Int@data^(0+128)+1),w
 12530  1A96  00A6               	movwf	??_EEPROM_24C1025_Write_Int^(0+128)
 12531  1A97  0826               	movf	??_EEPROM_24C1025_Write_Int^(0+128),w
 12532  1A98  00A8               	movwf	EEPROM_24C1025_Write_Int@local^(0+128)
 12533                           
 12534                           ;EEPROM_24C1025.c: 355:      local[1]=((char *)&data)[0];
 12535  1A99  0824               	movf	EEPROM_24C1025_Write_Int@data^(0+128),w
 12536  1A9A  00A6               	movwf	??_EEPROM_24C1025_Write_Int^(0+128)
 12537  1A9B  0826               	movf	??_EEPROM_24C1025_Write_Int^(0+128),w
 12538  1A9C  00A9               	movwf	(EEPROM_24C1025_Write_Int@local^(0+128)+1)
 12539                           
 12540                           ;EEPROM_24C1025.c: 356:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12541  1A9D  0823               	movf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128),w
 12542  1A9E  1283               	bcf	3,5	;RP0=0, select bank0
 12543  1A9F  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12544  1AA0  1683               	bsf	3,5	;RP0=1, select bank1
 12545  1AA1  0822               	movf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128),w
 12546  1AA2  1283               	bcf	3,5	;RP0=0, select bank0
 12547  1AA3  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12548  1AA4  1683               	bsf	3,5	;RP0=1, select bank1
 12549  1AA5  0821               	movf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128),w
 12550  1AA6  1283               	bcf	3,5	;RP0=0, select bank0
 12551  1AA7  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12552  1AA8  1683               	bsf	3,5	;RP0=1, select bank1
 12553  1AA9  0820               	movf	EEPROM_24C1025_Write_Int@mem_add^(0+128),w
 12554  1AAA  1283               	bcf	3,5	;RP0=0, select bank0
 12555  1AAB  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12556  1AAC  3002               	movlw	2
 12557  1AAD  1683               	bsf	3,5	;RP0=1, select bank1
 12558  1AAE  00A6               	movwf	??_EEPROM_24C1025_Write_Int^(0+128)
 12559  1AAF  0826               	movf	??_EEPROM_24C1025_Write_Int^(0+128),w
 12560  1AB0  1283               	bcf	3,5	;RP0=0, select bank0
 12561  1AB1  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12562  1AB2  30A8               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12563  1AB3  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 12564  1AB4  3000               	movlw	0
 12565  1AB5  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12566  1AB6  1683               	bsf	3,5	;RP0=1, select bank1
 12567  1AB7  0827               	movf	EEPROM_24C1025_Write_Int@chip_add^(0+128),w
 12568  1AB8  160A  118A  2214   	fcall	_EEPROM_24C1025_Write_Buffer
 12569  1ABB  0008               	return
 12570  1ABC                     __end_of_EEPROM_24C1025_Write_Int:
 12571                           
 12572                           	psect	text51
 12573  1214                     __ptext51:	
 12574 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12575 ;; Defined at:
 12576 ;;		line 15 in file "EEPROM_24C1025.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;  chip_add        1    wreg     unsigned char 
 12579 ;;  mem_add         4   10[BANK0 ] unsigned long 
 12580 ;;  sizedata        1   14[BANK0 ] unsigned char 
 12581 ;;  data            2   15[BANK0 ] PTR unsigned char 
 12582 ;;		 -> usart_protocol.value(52), usart_protocol(58), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 12583 ;; Auto vars:     Size  Location     Type
 12584 ;;  chip_add        1   20[BANK0 ] unsigned char 
 12585 ;;  ctrl            1   22[BANK0 ] unsigned char 
 12586 ;;  range           1   21[BANK0 ] unsigned char 
 12587 ;;  count           1   19[BANK0 ] unsigned char 
 12588 ;; Return value:  Size  Location     Type
 12589 ;;                  1    wreg      void 
 12590 ;; Registers used:
 12591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12592 ;; Tracked objects:
 12593 ;;		On entry : 0/300
 12594 ;;		On exit  : 0/0
 12595 ;;		Unchanged: 0/0
 12596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12597 ;;      Params:         0       7       0       0       0
 12598 ;;      Locals:         0       4       0       0       0
 12599 ;;      Temps:          0       2       0       0       0
 12600 ;;      Totals:         0      13       0       0       0
 12601 ;;Total ram usage:       13 bytes
 12602 ;; Hardware stack levels used: 1
 12603 ;; Hardware stack levels required when called: 3
 12604 ;; This function calls:
 12605 ;;		_I2C_Master_Start
 12606 ;;		_I2C_Master_Stop
 12607 ;;		_I2C_Master_Write
 12608 ;;		_my_delay_ms_WDT
 12609 ;; This function is called by:
 12610 ;;		_EEPROM_24C1025_Write_Byte
 12611 ;;		_EEPROM_24C1025_Write_Int
 12612 ;;		_Decodify_Command
 12613 ;; This function uses a non-reentrant model
 12614 ;;
 12615                           
 12616                           
 12617                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12618  1214                     _EEPROM_24C1025_Write_Buffer:
 12619                           
 12620                           ;incstack = 0
 12621                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 12622                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12623  1214  1283               	bcf	3,5	;RP0=0, select bank0
 12624  1215  1303               	bcf	3,6	;RP1=0, select bank0
 12625  1216  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12626                           
 12627                           ;EEPROM_24C1025.c: 21:      unsigned char ctrl;;EEPROM_24C1025.c: 22:      unsigned char
      +                           count;;EEPROM_24C1025.c: 24:      Delay_Led_Memory=20;
 12628  1217  3014               	movlw	20
 12629  1218  1683               	bsf	3,5	;RP0=1, select bank1
 12630  1219  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12631  121A  3000               	movlw	0
 12632  121B  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12633                           
 12634                           ;EEPROM_24C1025.c: 26:      if(mem_add>0x1FFFF) return;
 12635  121C  1283               	bcf	3,5	;RP0=0, select bank0
 12636  121D  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12637  121E  1D03               	btfss	3,2
 12638  121F  0008               	return
 12639  1220  3002               	movlw	2
 12640  1221  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12641  1222  1D03               	skipz
 12642  1223  2A2C               	goto	u5323
 12643  1224  3000               	movlw	0
 12644  1225  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12645  1226  1D03               	skipz
 12646  1227  2A2C               	goto	u5323
 12647  1228  3000               	movlw	0
 12648  1229  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12649  122A  1D03               	skipz
 12650  122B  2A2C               	goto	u5323
 12651  122C                     u5323:
 12652  122C  1803               	btfsc	3,0
 12653  122D  0008               	return
 12654                           
 12655                           ;EEPROM_24C1025.c: 28:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12656  122E  1283               	bcf	3,5	;RP0=0, select bank0
 12657  122F  1303               	bcf	3,6	;RP1=0, select bank0
 12658  1230  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12659  1231  1D03               	btfss	3,2
 12660  1232  2A41               	goto	l5563
 12661  1233  3001               	movlw	1
 12662  1234  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12663  1235  1D03               	skipz
 12664  1236  2A3F               	goto	u5333
 12665  1237  3000               	movlw	0
 12666  1238  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12667  1239  1D03               	skipz
 12668  123A  2A3F               	goto	u5333
 12669  123B  3000               	movlw	0
 12670  123C  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12671  123D  1D03               	skipz
 12672  123E  2A3F               	goto	u5333
 12673  123F                     u5333:
 12674  123F  1C03               	btfss	3,0
 12675  1240  2A48               	goto	l5565
 12676  1241                     l5563:
 12677  1241  3008               	movlw	8
 12678  1242  1283               	bcf	3,5	;RP0=0, select bank0
 12679  1243  1303               	bcf	3,6	;RP1=0, select bank0
 12680  1244  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12681  1245  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12682  1246  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12683  1247  2A4B               	goto	l5567
 12684  1248                     l5565:
 12685  1248  1283               	bcf	3,5	;RP0=0, select bank0
 12686  1249  1303               	bcf	3,6	;RP1=0, select bank0
 12687  124A  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12688  124B                     l5567:
 12689                           
 12690                           ;EEPROM_24C1025.c: 29:      ctrl=chip_add;
 12691  124B  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12692  124C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12693  124D  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12694  124E  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12695                           
 12696                           ;EEPROM_24C1025.c: 30:      ctrl<<=1;
 12697  124F  1003               	clrc
 12698  1250  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12699                           
 12700                           ;EEPROM_24C1025.c: 31:      ctrl |= 0xA0;
 12701  1251  30A0               	movlw	160
 12702  1252  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12703  1253  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12704  1254  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12705                           
 12706                           ;EEPROM_24C1025.c: 32:      ctrl |= range;
 12707  1255  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12708  1256  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12709  1257  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12710  1258  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12711                           
 12712                           ;EEPROM_24C1025.c: 34:      I2C_Master_Start();
 12713  1259  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 12714                           
 12715                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(ctrl);
 12716  125E  1283               	bcf	3,5	;RP0=0, select bank0
 12717  125F  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12718  1260  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12719  1261  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12720  1262  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12721  1263  00A3               	movwf	I2C_Master_Write@d
 12722  1264  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12723  1265  00A4               	movwf	I2C_Master_Write@d+1
 12724  1266  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12725                           
 12726                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[1]);
 12727  126B  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12728  126C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12729  126D  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12730  126E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12731  126F  00A3               	movwf	I2C_Master_Write@d
 12732  1270  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12733  1271  00A4               	movwf	I2C_Master_Write@d+1
 12734  1272  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12735                           
 12736                           ;EEPROM_24C1025.c: 37:      I2C_Master_Write(((char *)&mem_add)[0]);
 12737  1277  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12738  1278  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12739  1279  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12740  127A  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12741  127B  00A3               	movwf	I2C_Master_Write@d
 12742  127C  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12743  127D  00A4               	movwf	I2C_Master_Write@d+1
 12744  127E  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12745                           
 12746                           ;EEPROM_24C1025.c: 38:      for(count=0;count<(sizedata-1);count++)
 12747  1283  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 12748  1284                     l5629:
 12749  1284  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12750  1285  3EFF               	addlw	255
 12751  1286  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12752  1287  30FF               	movlw	255
 12753  1288  1803               	skipnc
 12754  1289  3000               	movlw	0
 12755  128A  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12756  128B  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12757  128C  3A80               	xorlw	128
 12758  128D  3C80               	sublw	128
 12759  128E  1D03               	skipz
 12760  128F  2A92               	goto	u5375
 12761  1290  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12762  1291  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12763  1292                     u5375:
 12764  1292  1803               	btfsc	3,0
 12765  1293  2B65               	goto	l5631
 12766  1294  0064               	clrwdt	;# 
 12767                           
 12768                           ;EEPROM_24C1025.c: 41:           if(mem_add>0x1FFFF) return;
 12769  1295  1283               	bcf	3,5	;RP0=0, select bank0
 12770  1296  1303               	bcf	3,6	;RP1=0, select bank0
 12771  1297  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12772  1298  1D03               	btfss	3,2
 12773  1299  0008               	return
 12774  129A  3002               	movlw	2
 12775  129B  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12776  129C  1D03               	skipz
 12777  129D  2AA6               	goto	u5343
 12778  129E  3000               	movlw	0
 12779  129F  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12780  12A0  1D03               	skipz
 12781  12A1  2AA6               	goto	u5343
 12782  12A2  3000               	movlw	0
 12783  12A3  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12784  12A4  1D03               	skipz
 12785  12A5  2AA6               	goto	u5343
 12786  12A6                     u5343:
 12787  12A6  1803               	btfsc	3,0
 12788  12A7  0008               	return
 12789                           
 12790                           ;EEPROM_24C1025.c: 42:           if((mem_add+1)%128==0)
 12791  12A8  1283               	bcf	3,5	;RP0=0, select bank0
 12792  12A9  1303               	bcf	3,6	;RP1=0, select bank0
 12793  12AA  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12794  12AB  3E01               	addlw	1
 12795  12AC  397F               	andlw	127
 12796  12AD  1D03               	btfss	3,2
 12797  12AE  2B3B               	goto	l5621
 12798                           
 12799                           ;EEPROM_24C1025.c: 43:             {;EEPROM_24C1025.c: 44:             I2C_Master_Write(
      +                          *data);
 12800  12AF  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12801  12B0  0084               	movwf	4
 12802  12B1  1783               	bsf	3,7
 12803  12B2  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12804  12B3  1383               	bcf	3,7
 12805  12B4  0800               	movf	0,w
 12806  12B5  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12807  12B6  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12808  12B7  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12809  12B8  00A3               	movwf	I2C_Master_Write@d
 12810  12B9  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12811  12BA  00A4               	movwf	I2C_Master_Write@d+1
 12812  12BB  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12813                           
 12814                           ;EEPROM_24C1025.c: 45:             I2C_Master_Stop();
 12815  12C0  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 12816                           
 12817                           ;EEPROM_24C1025.c: 47:             my_delay_ms_WDT(5);
 12818  12C5  3000               	movlw	0
 12819  12C6  1283               	bcf	3,5	;RP0=0, select bank0
 12820  12C7  00A3               	movwf	my_delay_ms_WDT@time+3
 12821  12C8  3000               	movlw	0
 12822  12C9  00A2               	movwf	my_delay_ms_WDT@time+2
 12823  12CA  3000               	movlw	0
 12824  12CB  00A1               	movwf	my_delay_ms_WDT@time+1
 12825  12CC  3005               	movlw	5
 12826  12CD  00A0               	movwf	my_delay_ms_WDT@time
 12827  12CE  160A  158A  2448  160A  118A  	fcall	_my_delay_ms_WDT
 12828                           
 12829                           ;EEPROM_24C1025.c: 48:             mem_add++;
 12830  12D3  3001               	movlw	1
 12831  12D4  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12832  12D5  3000               	movlw	0
 12833  12D6  1803               	skipnc
 12834  12D7  3001               	movlw	1
 12835  12D8  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12836  12D9  3000               	movlw	0
 12837  12DA  1803               	skipnc
 12838  12DB  3001               	movlw	1
 12839  12DC  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12840  12DD  3000               	movlw	0
 12841  12DE  1803               	skipnc
 12842  12DF  3001               	movlw	1
 12843  12E0  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12844                           
 12845                           ;EEPROM_24C1025.c: 49:             data++;
 12846  12E1  3001               	movlw	1
 12847  12E2  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12848  12E3  1803               	skipnc
 12849  12E4  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12850  12E5  3000               	movlw	0
 12851  12E6  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12852                           
 12853                           ;EEPROM_24C1025.c: 50:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12854  12E7  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12855  12E8  1D03               	btfss	3,2
 12856  12E9  2AF8               	goto	l5601
 12857  12EA  3001               	movlw	1
 12858  12EB  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12859  12EC  1D03               	skipz
 12860  12ED  2AF6               	goto	u5363
 12861  12EE  3000               	movlw	0
 12862  12EF  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12863  12F0  1D03               	skipz
 12864  12F1  2AF6               	goto	u5363
 12865  12F2  3000               	movlw	0
 12866  12F3  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12867  12F4  1D03               	skipz
 12868  12F5  2AF6               	goto	u5363
 12869  12F6                     u5363:
 12870  12F6  1C03               	btfss	3,0
 12871  12F7  2AFF               	goto	l5603
 12872  12F8                     l5601:
 12873  12F8  3008               	movlw	8
 12874  12F9  1283               	bcf	3,5	;RP0=0, select bank0
 12875  12FA  1303               	bcf	3,6	;RP1=0, select bank0
 12876  12FB  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12877  12FC  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12878  12FD  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12879  12FE  2B02               	goto	l5605
 12880  12FF                     l5603:
 12881  12FF  1283               	bcf	3,5	;RP0=0, select bank0
 12882  1300  1303               	bcf	3,6	;RP1=0, select bank0
 12883  1301  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12884  1302                     l5605:
 12885                           
 12886                           ;EEPROM_24C1025.c: 51:             ctrl=chip_add;
 12887  1302  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12888  1303  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12889  1304  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12890  1305  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12891                           
 12892                           ;EEPROM_24C1025.c: 52:             ctrl<<=1;
 12893  1306  1003               	clrc
 12894  1307  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12895                           
 12896                           ;EEPROM_24C1025.c: 53:             ctrl |= 0xA0;
 12897  1308  30A0               	movlw	160
 12898  1309  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12899  130A  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12900  130B  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12901                           
 12902                           ;EEPROM_24C1025.c: 54:             ctrl |= range;
 12903  130C  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12904  130D  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12905  130E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12906  130F  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12907                           
 12908                           ;EEPROM_24C1025.c: 56:             I2C_Master_Start();
 12909  1310  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 12910                           
 12911                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(ctrl);
 12912  1315  1283               	bcf	3,5	;RP0=0, select bank0
 12913  1316  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12914  1317  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12915  1318  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12916  1319  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12917  131A  00A3               	movwf	I2C_Master_Write@d
 12918  131B  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12919  131C  00A4               	movwf	I2C_Master_Write@d+1
 12920  131D  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12921                           
 12922                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[1]);
 12923  1322  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12924  1323  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12925  1324  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12926  1325  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12927  1326  00A3               	movwf	I2C_Master_Write@d
 12928  1327  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12929  1328  00A4               	movwf	I2C_Master_Write@d+1
 12930  1329  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12931                           
 12932                           ;EEPROM_24C1025.c: 59:             I2C_Master_Write(((char *)&mem_add)[0]);
 12933  132E  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12934  132F  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12935  1330  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12936  1331  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12937  1332  00A3               	movwf	I2C_Master_Write@d
 12938  1333  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12939  1334  00A4               	movwf	I2C_Master_Write@d+1
 12940  1335  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12941                           
 12942                           ;EEPROM_24C1025.c: 60:             }
 12943  133A  2B60               	goto	l5627
 12944  133B                     l5621:
 12945                           
 12946                           ;EEPROM_24C1025.c: 62:             {;EEPROM_24C1025.c: 63:             I2C_Master_Write(
      +                          *data);
 12947  133B  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12948  133C  0084               	movwf	4
 12949  133D  1783               	bsf	3,7
 12950  133E  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12951  133F  1383               	bcf	3,7
 12952  1340  0800               	movf	0,w
 12953  1341  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12954  1342  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12955  1343  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12956  1344  00A3               	movwf	I2C_Master_Write@d
 12957  1345  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12958  1346  00A4               	movwf	I2C_Master_Write@d+1
 12959  1347  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12960                           
 12961                           ;EEPROM_24C1025.c: 64:             data++;
 12962  134C  3001               	movlw	1
 12963  134D  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12964  134E  1803               	skipnc
 12965  134F  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12966  1350  3000               	movlw	0
 12967  1351  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12968                           
 12969                           ;EEPROM_24C1025.c: 65:             mem_add++;
 12970  1352  3001               	movlw	1
 12971  1353  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12972  1354  3000               	movlw	0
 12973  1355  1803               	skipnc
 12974  1356  3001               	movlw	1
 12975  1357  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12976  1358  3000               	movlw	0
 12977  1359  1803               	skipnc
 12978  135A  3001               	movlw	1
 12979  135B  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12980  135C  3000               	movlw	0
 12981  135D  1803               	skipnc
 12982  135E  3001               	movlw	1
 12983  135F  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12984  1360                     l5627:
 12985                           
 12986                           ;EEPROM_24C1025.c: 67:      }
 12987  1360  3001               	movlw	1
 12988  1361  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12989  1362  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12990  1363  07B3               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 12991  1364  2A84               	goto	l5629
 12992  1365                     l5631:
 12993                           
 12994                           ;EEPROM_24C1025.c: 68:      I2C_Master_Write(*data);
 12995  1365  1283               	bcf	3,5	;RP0=0, select bank0
 12996  1366  1303               	bcf	3,6	;RP1=0, select bank0
 12997  1367  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12998  1368  0084               	movwf	4
 12999  1369  1783               	bsf	3,7
 13000  136A  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13001  136B  1383               	bcf	3,7
 13002  136C  0800               	movf	0,w
 13003  136D  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 13004  136E  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13005  136F  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13006  1370  00A3               	movwf	I2C_Master_Write@d
 13007  1371  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13008  1372  00A4               	movwf	I2C_Master_Write@d+1
 13009  1373  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 13010                           
 13011                           ;EEPROM_24C1025.c: 69:      I2C_Master_Stop();
 13012  1378  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 13013                           
 13014                           ;EEPROM_24C1025.c: 71:      my_delay_ms_WDT(5);
 13015  137D  3000               	movlw	0
 13016  137E  1283               	bcf	3,5	;RP0=0, select bank0
 13017  137F  00A3               	movwf	my_delay_ms_WDT@time+3
 13018  1380  3000               	movlw	0
 13019  1381  00A2               	movwf	my_delay_ms_WDT@time+2
 13020  1382  3000               	movlw	0
 13021  1383  00A1               	movwf	my_delay_ms_WDT@time+1
 13022  1384  3005               	movlw	5
 13023  1385  00A0               	movwf	my_delay_ms_WDT@time
 13024  1386  160A  158A  2448   	fcall	_my_delay_ms_WDT
 13025  1389  0008               	return
 13026  138A                     __end_of_EEPROM_24C1025_Write_Buffer:
 13027                           
 13028                           	psect	text52
 13029  1C48                     __ptext52:	
 13030 ;; *************** function _my_delay_ms_WDT *****************
 13031 ;; Defined at:
 13032 ;;		line 13 in file "my_delay.c"
 13033 ;; Parameters:    Size  Location     Type
 13034 ;;  time            4    0[BANK0 ] long 
 13035 ;; Auto vars:     Size  Location     Type
 13036 ;;  i               4    6[BANK0 ] long 
 13037 ;; Return value:  Size  Location     Type
 13038 ;;                  1    wreg      void 
 13039 ;; Registers used:
 13040 ;;		wreg, btemp+1
 13041 ;; Tracked objects:
 13042 ;;		On entry : 300/0
 13043 ;;		On exit  : 300/0
 13044 ;;		Unchanged: 0/0
 13045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13046 ;;      Params:         0       4       0       0       0
 13047 ;;      Locals:         0       4       0       0       0
 13048 ;;      Temps:          0       2       0       0       0
 13049 ;;      Totals:         0      10       0       0       0
 13050 ;;Total ram usage:       10 bytes
 13051 ;; Hardware stack levels used: 1
 13052 ;; Hardware stack levels required when called: 1
 13053 ;; This function calls:
 13054 ;;		Nothing
 13055 ;; This function is called by:
 13056 ;;		_EEPROM_24C1025_Write_Buffer
 13057 ;;		_EEPROM_24C1025_Read_Buffer
 13058 ;;		_EEPROM_24C1025_Write_Str
 13059 ;;		_main
 13060 ;; This function uses a non-reentrant model
 13061 ;;
 13062                           
 13063                           
 13064                           ;psect for function _my_delay_ms_WDT
 13065  1C48                     _my_delay_ms_WDT:
 13066                           
 13067                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 13068                           
 13069                           ;incstack = 0
 13070                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 13071  1C48  3000               	movlw	0
 13072  1C49  00A9               	movwf	my_delay_ms_WDT@i+3
 13073  1C4A  3000               	movlw	0
 13074  1C4B  00A8               	movwf	my_delay_ms_WDT@i+2
 13075  1C4C  3000               	movlw	0
 13076  1C4D  00A7               	movwf	my_delay_ms_WDT@i+1
 13077  1C4E  3000               	movlw	0
 13078  1C4F  00A6               	movwf	my_delay_ms_WDT@i
 13079  1C50                     l3583:
 13080  1C50  0829               	movf	my_delay_ms_WDT@i+3,w
 13081  1C51  3A80               	xorlw	128
 13082  1C52  00FF               	movwf	127
 13083  1C53  0823               	movf	my_delay_ms_WDT@time+3,w
 13084  1C54  3A80               	xorlw	128
 13085  1C55  027F               	subwf	127,w
 13086  1C56  1D03               	skipz
 13087  1C57  2C62               	goto	u2693
 13088  1C58  0822               	movf	my_delay_ms_WDT@time+2,w
 13089  1C59  0228               	subwf	my_delay_ms_WDT@i+2,w
 13090  1C5A  1D03               	skipz
 13091  1C5B  2C62               	goto	u2693
 13092  1C5C  0821               	movf	my_delay_ms_WDT@time+1,w
 13093  1C5D  0227               	subwf	my_delay_ms_WDT@i+1,w
 13094  1C5E  1D03               	skipz
 13095  1C5F  2C62               	goto	u2693
 13096  1C60  0820               	movf	my_delay_ms_WDT@time,w
 13097  1C61  0226               	subwf	my_delay_ms_WDT@i,w
 13098  1C62                     u2693:
 13099  1C62  1803               	btfsc	3,0
 13100  1C63  0008               	return
 13101  1C64  0064               	clrwdt	;# 
 13102                           
 13103                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 13104  1C65  3003               	movlw	3
 13105  1C66  1283               	bcf	3,5	;RP0=0, select bank0
 13106  1C67  1303               	bcf	3,6	;RP1=0, select bank0
 13107  1C68  00A5               	movwf	??_my_delay_ms_WDT+1
 13108  1C69  3097               	movlw	151
 13109  1C6A  00A4               	movwf	??_my_delay_ms_WDT
 13110  1C6B                     u5617:
 13111  1C6B  0BA4               	decfsz	??_my_delay_ms_WDT,f
 13112  1C6C  2C6B               	goto	u5617
 13113  1C6D  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 13114  1C6E  2C6B               	goto	u5617
 13115                           
 13116                           ;my_delay.c: 19:             }
 13117  1C6F  3001               	movlw	1
 13118  1C70  1283               	bcf	3,5	;RP0=0, select bank0
 13119  1C71  1303               	bcf	3,6	;RP1=0, select bank0
 13120  1C72  07A6               	addwf	my_delay_ms_WDT@i,f
 13121  1C73  3000               	movlw	0
 13122  1C74  1803               	skipnc
 13123  1C75  3001               	movlw	1
 13124  1C76  07A7               	addwf	my_delay_ms_WDT@i+1,f
 13125  1C77  3000               	movlw	0
 13126  1C78  1803               	skipnc
 13127  1C79  3001               	movlw	1
 13128  1C7A  07A8               	addwf	my_delay_ms_WDT@i+2,f
 13129  1C7B  3000               	movlw	0
 13130  1C7C  1803               	skipnc
 13131  1C7D  3001               	movlw	1
 13132  1C7E  07A9               	addwf	my_delay_ms_WDT@i+3,f
 13133  1C7F  2C50               	goto	l3583
 13134  1C80                     __end_of_my_delay_ms_WDT:
 13135                           
 13136                           	psect	text53
 13137  189B                     __ptext53:	
 13138 ;; *************** function _I2C_Master_Write *****************
 13139 ;; Defined at:
 13140 ;;		line 79 in file "I2C.c"
 13141 ;; Parameters:    Size  Location     Type
 13142 ;;  d               2    3[BANK0 ] unsigned int 
 13143 ;; Auto vars:     Size  Location     Type
 13144 ;;		None
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  1    wreg      void 
 13147 ;; Registers used:
 13148 ;;		wreg, status,2, status,0, pclath, cstack
 13149 ;; Tracked objects:
 13150 ;;		On entry : 300/0
 13151 ;;		On exit  : 300/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13154 ;;      Params:         0       2       0       0       0
 13155 ;;      Locals:         0       0       0       0       0
 13156 ;;      Temps:          0       0       0       0       0
 13157 ;;      Totals:         0       2       0       0       0
 13158 ;;Total ram usage:        2 bytes
 13159 ;; Hardware stack levels used: 1
 13160 ;; Hardware stack levels required when called: 2
 13161 ;; This function calls:
 13162 ;;		_I2C_Master_Wait
 13163 ;; This function is called by:
 13164 ;;		_EEPROM_24C1025_Write_Buffer
 13165 ;;		_EEPROM_24C1025_Read_Buffer
 13166 ;;		_EEPROM_24C1025_Read_Buffer_USART
 13167 ;;		_EEPROM_24C1025_Write_Str
 13168 ;;		_EEPROM_24C1025_Read_Str
 13169 ;; This function uses a non-reentrant model
 13170 ;;
 13171                           
 13172                           
 13173                           ;psect for function _I2C_Master_Write
 13174  189B                     _I2C_Master_Write:
 13175                           
 13176                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 13177                           
 13178                           ;incstack = 0
 13179                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 13180  189B  160A  158A  21DD  160A  158A  	fcall	_I2C_Master_Wait
 13181  18A0  3A00               	xorlw	0
 13182  18A1  1903               	skipnz
 13183  18A2  0008               	return
 13184                           
 13185                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 13186  18A3  0823               	movf	I2C_Master_Write@d,w
 13187  18A4  0093               	movwf	19	;volatile
 13188  18A5  0008               	return
 13189  18A6                     __end_of_I2C_Master_Write:
 13190                           
 13191                           	psect	text54
 13192  1874                     __ptext54:	
 13193 ;; *************** function _I2C_Master_Stop *****************
 13194 ;; Defined at:
 13195 ;;		line 70 in file "I2C.c"
 13196 ;; Parameters:    Size  Location     Type
 13197 ;;		None
 13198 ;; Auto vars:     Size  Location     Type
 13199 ;;		None
 13200 ;; Return value:  Size  Location     Type
 13201 ;;                  1    wreg      void 
 13202 ;; Registers used:
 13203 ;;		wreg, status,2, status,0, pclath, cstack
 13204 ;; Tracked objects:
 13205 ;;		On entry : 300/800
 13206 ;;		On exit  : 200/0
 13207 ;;		Unchanged: 0/0
 13208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13209 ;;      Params:         0       0       0       0       0
 13210 ;;      Locals:         0       0       0       0       0
 13211 ;;      Temps:          0       0       0       0       0
 13212 ;;      Totals:         0       0       0       0       0
 13213 ;;Total ram usage:        0 bytes
 13214 ;; Hardware stack levels used: 1
 13215 ;; Hardware stack levels required when called: 2
 13216 ;; This function calls:
 13217 ;;		_I2C_Master_Wait
 13218 ;; This function is called by:
 13219 ;;		_EEPROM_24C1025_Write_Buffer
 13220 ;;		_EEPROM_24C1025_Read_Buffer
 13221 ;;		_EEPROM_24C1025_Read_Buffer_USART
 13222 ;;		_EEPROM_24C1025_Write_Str
 13223 ;;		_EEPROM_24C1025_Read_Str
 13224 ;; This function uses a non-reentrant model
 13225 ;;
 13226                           
 13227                           
 13228                           ;psect for function _I2C_Master_Stop
 13229  1874                     _I2C_Master_Stop:
 13230                           
 13231                           ;I2C.c: 72:   if(I2C_Master_Wait())
 13232                           
 13233                           ;incstack = 0
 13234                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 13235  1874  160A  158A  21DD   	fcall	_I2C_Master_Wait
 13236  1877  3A00               	xorlw	0
 13237                           
 13238                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 13239  1878  1683               	bsf	3,5	;RP0=1, select bank1
 13240  1879  1D03               	btfss	3,2
 13241  187A  1511               	bsf	17,2	;volatile
 13242                           
 13243                           ;I2C.c: 76:   INTCONbits.GIE=1;
 13244                           
 13245                           ;I2C.c: 75:     }
 13246  187B  178B               	bsf	11,7	;volatile
 13247  187C  0008               	return
 13248  187D                     __end_of_I2C_Master_Stop:
 13249                           
 13250                           	psect	text55
 13251  07EE                     __ptext55:	
 13252 ;; *************** function _I2C_Master_Start *****************
 13253 ;; Defined at:
 13254 ;;		line 52 in file "I2C.c"
 13255 ;; Parameters:    Size  Location     Type
 13256 ;;		None
 13257 ;; Auto vars:     Size  Location     Type
 13258 ;;		None
 13259 ;; Return value:  Size  Location     Type
 13260 ;;                  1    wreg      void 
 13261 ;; Registers used:
 13262 ;;		wreg, status,2, status,0, pclath, cstack
 13263 ;; Tracked objects:
 13264 ;;		On entry : 300/0
 13265 ;;		On exit  : 200/0
 13266 ;;		Unchanged: 0/0
 13267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13268 ;;      Params:         0       0       0       0       0
 13269 ;;      Locals:         0       0       0       0       0
 13270 ;;      Temps:          0       0       0       0       0
 13271 ;;      Totals:         0       0       0       0       0
 13272 ;;Total ram usage:        0 bytes
 13273 ;; Hardware stack levels used: 1
 13274 ;; Hardware stack levels required when called: 2
 13275 ;; This function calls:
 13276 ;;		_I2C_Master_Wait
 13277 ;; This function is called by:
 13278 ;;		_EEPROM_24C1025_Write_Buffer
 13279 ;;		_EEPROM_24C1025_Read_Buffer
 13280 ;;		_EEPROM_24C1025_Read_Buffer_USART
 13281 ;;		_EEPROM_24C1025_Write_Str
 13282 ;;		_EEPROM_24C1025_Read_Str
 13283 ;; This function uses a non-reentrant model
 13284 ;;
 13285                           
 13286                           
 13287                           ;psect for function _I2C_Master_Start
 13288  07EE                     _I2C_Master_Start:
 13289                           
 13290                           ;I2C.c: 54:   INTCONbits.GIE=0;
 13291                           
 13292                           ;incstack = 0
 13293                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 13294  07EE  138B               	bcf	11,7	;volatile
 13295                           
 13296                           ;I2C.c: 55:   Delay_Led_Memory=20;
 13297  07EF  3014               	movlw	20
 13298  07F0  1683               	bsf	3,5	;RP0=1, select bank1
 13299  07F1  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 13300  07F2  3000               	movlw	0
 13301  07F3  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 13302                           
 13303                           ;I2C.c: 56:   if(I2C_Master_Wait())
 13304  07F4  160A  158A  21DD  120A  118A  	fcall	_I2C_Master_Wait
 13305  07F9  3A00               	xorlw	0
 13306  07FA  1903               	skipnz
 13307  07FB  0008               	return
 13308                           
 13309                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 13310  07FC  1683               	bsf	3,5	;RP0=1, select bank1
 13311  07FD  1411               	bsf	17,0	;volatile
 13312  07FE  0008               	return
 13313  07FF                     __end_of_I2C_Master_Start:
 13314                           
 13315                           	psect	text56
 13316  19DD                     __ptext56:	
 13317 ;; *************** function _I2C_Master_Wait *****************
 13318 ;; Defined at:
 13319 ;;		line 37 in file "I2C.c"
 13320 ;; Parameters:    Size  Location     Type
 13321 ;;		None
 13322 ;; Auto vars:     Size  Location     Type
 13323 ;;  tempo           1    2[BANK0 ] unsigned char 
 13324 ;; Return value:  Size  Location     Type
 13325 ;;                  1    wreg      unsigned char 
 13326 ;; Registers used:
 13327 ;;		wreg, status,2, status,0
 13328 ;; Tracked objects:
 13329 ;;		On entry : 200/0
 13330 ;;		On exit  : 300/0
 13331 ;;		Unchanged: 0/0
 13332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13333 ;;      Params:         0       0       0       0       0
 13334 ;;      Locals:         0       1       0       0       0
 13335 ;;      Temps:          0       2       0       0       0
 13336 ;;      Totals:         0       3       0       0       0
 13337 ;;Total ram usage:        3 bytes
 13338 ;; Hardware stack levels used: 1
 13339 ;; Hardware stack levels required when called: 1
 13340 ;; This function calls:
 13341 ;;		Nothing
 13342 ;; This function is called by:
 13343 ;;		_I2C_Master_Start
 13344 ;;		_I2C_Master_RepeatedStart
 13345 ;;		_I2C_Master_Stop
 13346 ;;		_I2C_Master_Write
 13347 ;;		_I2C_Master_Read
 13348 ;; This function uses a non-reentrant model
 13349 ;;
 13350                           
 13351                           
 13352                           ;psect for function _I2C_Master_Wait
 13353  19DD                     _I2C_Master_Wait:
 13354                           
 13355                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 13356                           
 13357                           ;incstack = 0
 13358                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 13359  19DD  30C8               	movlw	200
 13360  19DE  1283               	bcf	3,5	;RP0=0, select bank0
 13361  19DF  00A0               	movwf	??_I2C_Master_Wait
 13362  19E0  0820               	movf	??_I2C_Master_Wait,w
 13363  19E1  00A2               	movwf	I2C_Master_Wait@tempo
 13364                           
 13365                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13366  19E2  29EF               	goto	l3555
 13367  19E3                     l3551:
 13368                           
 13369                           ;I2C.c: 44:          tempo--;
 13370  19E3  3001               	movlw	1
 13371  19E4  02A2               	subwf	I2C_Master_Wait@tempo,f
 13372                           
 13373                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 13374  19E5  3003               	movlw	3
 13375  19E6  1283               	bcf	3,5	;RP0=0, select bank0
 13376  19E7  1303               	bcf	3,6	;RP1=0, select bank0
 13377  19E8  00A1               	movwf	??_I2C_Master_Wait+1
 13378  19E9  3097               	movlw	151
 13379  19EA  00A0               	movwf	??_I2C_Master_Wait
 13380  19EB                     u5627:
 13381  19EB  0BA0               	decfsz	??_I2C_Master_Wait,f
 13382  19EC  29EB               	goto	u5627
 13383  19ED  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 13384  19EE  29EB               	goto	u5627
 13385  19EF                     l3555:
 13386                           
 13387                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13388  19EF  1683               	bsf	3,5	;RP0=1, select bank1
 13389  19F0  1303               	bcf	3,6	;RP1=0, select bank1
 13390  19F1  1914               	btfsc	20,2	;volatile
 13391  19F2  29F7               	goto	l3549
 13392  19F3  0811               	movf	17,w	;volatile
 13393  19F4  391F               	andlw	31
 13394  19F5  1903               	btfsc	3,2
 13395  19F6  29FB               	goto	l3559
 13396  19F7                     l3549:
 13397                           
 13398                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 13399  19F7  1283               	bcf	3,5	;RP0=0, select bank0
 13400  19F8  0822               	movf	I2C_Master_Wait@tempo,w
 13401  19F9  1D03               	btfss	3,2
 13402  19FA  29E3               	goto	l3551
 13403  19FB                     l3559:
 13404                           
 13405                           ;I2C.c: 49:   return tempo ;
 13406  19FB  1283               	bcf	3,5	;RP0=0, select bank0
 13407  19FC  0822               	movf	I2C_Master_Wait@tempo,w
 13408  19FD  0008               	return
 13409  19FE                     __end_of_I2C_Master_Wait:
 13410                           
 13411                           	psect	text57
 13412  1890                     __ptext57:	
 13413 ;; *************** function _ADC_init *****************
 13414 ;; Defined at:
 13415 ;;		line 10 in file "adc.c"
 13416 ;; Parameters:    Size  Location     Type
 13417 ;;		None
 13418 ;; Auto vars:     Size  Location     Type
 13419 ;;		None
 13420 ;; Return value:  Size  Location     Type
 13421 ;;                  1    wreg      void 
 13422 ;; Registers used:
 13423 ;;		wreg, status,2, status,0
 13424 ;; Tracked objects:
 13425 ;;		On entry : 0/100
 13426 ;;		On exit  : 300/0
 13427 ;;		Unchanged: 0/0
 13428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13429 ;;      Params:         0       0       0       0       0
 13430 ;;      Locals:         0       0       0       0       0
 13431 ;;      Temps:          0       0       0       0       0
 13432 ;;      Totals:         0       0       0       0       0
 13433 ;;Total ram usage:        0 bytes
 13434 ;; Hardware stack levels used: 1
 13435 ;; Hardware stack levels required when called: 1
 13436 ;; This function calls:
 13437 ;;		Nothing
 13438 ;; This function is called by:
 13439 ;;		_main
 13440 ;; This function uses a non-reentrant model
 13441 ;;
 13442                           
 13443                           
 13444                           ;psect for function _ADC_init
 13445  1890                     _ADC_init:
 13446                           
 13447                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13448                           
 13449                           ;incstack = 0
 13450                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13451  1890  30C0               	movlw	192
 13452  1891  1283               	bcf	3,5	;RP0=0, select bank0
 13453  1892  1303               	bcf	3,6	;RP1=0, select bank0
 13454  1893  049F               	iorwf	31,f	;volatile
 13455                           
 13456                           ;adc.c: 12:      ADCON1=0b10000000;
 13457  1894  3080               	movlw	128
 13458  1895  1683               	bsf	3,5	;RP0=1, select bank1
 13459  1896  009F               	movwf	31	;volatile
 13460                           
 13461                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13462  1897  179F               	bsf	31,7	;volatile
 13463                           
 13464                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13465  1898  1283               	bcf	3,5	;RP0=0, select bank0
 13466  1899  141F               	bsf	31,0	;volatile
 13467  189A  0008               	return
 13468  189B                     __end_of_ADC_init:
 13469                           
 13470                           	psect	text58
 13471  102D                     __ptext58:	
 13472 ;; *************** function _isr *****************
 13473 ;; Defined at:
 13474 ;;		line 29 in file "isr.c"
 13475 ;; Parameters:    Size  Location     Type
 13476 ;;		None
 13477 ;; Auto vars:     Size  Location     Type
 13478 ;;  tempo           2    6[COMMON] unsigned int 
 13479 ;; Return value:  Size  Location     Type
 13480 ;;                  1    wreg      void 
 13481 ;; Registers used:
 13482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13483 ;; Tracked objects:
 13484 ;;		On entry : 0/0
 13485 ;;		On exit  : 300/0
 13486 ;;		Unchanged: 0/0
 13487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13488 ;;      Params:         0       0       0       0       0
 13489 ;;      Locals:         2       0       0       0       0
 13490 ;;      Temps:          6       0       0       0       0
 13491 ;;      Totals:         8       0       0       0       0
 13492 ;;Total ram usage:        8 bytes
 13493 ;; Hardware stack levels used: 1
 13494 ;; This function calls:
 13495 ;;		Nothing
 13496 ;; This function is called by:
 13497 ;;		Interrupt level 1
 13498 ;; This function uses a non-reentrant model
 13499 ;;
 13500                           
 13501                           
 13502                           ;psect for function _isr
 13503  102D                     _isr:
 13504                           
 13505                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13506  102D  188B               	btfsc	11,1	;volatile
 13507                           
 13508                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13509  102E  108B               	bcf	11,1	;volatile
 13510                           
 13511                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13512                           
 13513                           ;isr.c: 37:       }
 13514  102F  1C0C               	btfss	12,0	;volatile
 13515  1030  28A8               	goto	i1l5497
 13516                           
 13517                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13518  1031  30B1               	movlw	177
 13519  1032  008F               	movwf	15	;volatile
 13520                           
 13521                           ;isr.c: 42:                 TMR1L=0xF3;
 13522  1033  30F3               	movlw	243
 13523  1034  008E               	movwf	14	;volatile
 13524                           
 13525                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13526  1035  100C               	bcf	12,0	;volatile
 13527                           
 13528                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13529  1036  1683               	bsf	3,5	;RP0=1, select bank1
 13530  1037  1FE4               	btfss	_generic_status^(0+128),7
 13531  1038  283B               	goto	i1l5453
 13532                           
 13533                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13534  1039  13E4               	bcf	_generic_status^(0+128),7
 13535  103A  0064               	clrwdt	;# 
 13536  103B                     i1l5453:
 13537                           
 13538                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13539  103B  300A               	movlw	10
 13540  103C  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 13541  103D  1803               	skipnc
 13542  103E  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 13543  103F  3000               	movlw	0
 13544  1040  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 13545                           
 13546                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13547  1041  3003               	movlw	3
 13548  1042  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13549  1043  30E8               	movlw	232
 13550  1044  1903               	skipnz
 13551  1045  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13552  1046  1C03               	skipc
 13553  1047  284A               	goto	i1l5457
 13554                           
 13555                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13556  1048  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 13557  1049  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 13558  104A                     i1l5457:
 13559                           
 13560                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13561  104A  3001               	movlw	1
 13562  104B  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13563  104C  30F4               	movlw	244
 13564  104D  1903               	skipnz
 13565  104E  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13566  104F  1803               	skipnc
 13567  1050  2855               	goto	i1l644
 13568                           
 13569                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13570  1051  1283               	bcf	3,5	;RP0=0, select bank0
 13571  1052  1303               	bcf	3,6	;RP1=0, select bank0
 13572  1053  1786               	bsf	6,7	;volatile
 13573  1054  2858               	goto	i1l5461
 13574  1055                     i1l644:	
 13575                           ;isr.c: 56:                 else
 13576                           
 13577                           
 13578                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13579  1055  1283               	bcf	3,5	;RP0=0, select bank0
 13580  1056  1303               	bcf	3,6	;RP1=0, select bank0
 13581  1057  1386               	bcf	6,7	;volatile
 13582  1058                     i1l5461:
 13583                           
 13584                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13585  1058  1683               	bsf	3,5	;RP0=1, select bank1
 13586  1059  085B               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 13587  105A  045C               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 13588  105B  1903               	btfsc	3,2
 13589  105C  2866               	goto	i1l646
 13590                           
 13591                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13592  105D  300A               	movlw	10
 13593  105E  02DB               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 13594  105F  3000               	movlw	0
 13595  1060  1C03               	skipc
 13596  1061  03DC               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13597  1062  02DC               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13598                           
 13599                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13600  1063  1283               	bcf	3,5	;RP0=0, select bank0
 13601  1064  1706               	bsf	6,6	;volatile
 13602                           
 13603                           ;isr.c: 63:                    }
 13604  1065  2868               	goto	i1l5467
 13605  1066                     i1l646:	
 13606                           ;isr.c: 64:                 else{
 13607                           
 13608                           
 13609                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13610  1066  1283               	bcf	3,5	;RP0=0, select bank0
 13611  1067  1306               	bcf	6,6	;volatile
 13612  1068                     i1l5467:
 13613                           
 13614                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13615  1068  1683               	bsf	3,5	;RP0=1, select bank1
 13616  1069  085D               	movf	_Delay_Led_Memory^(0+128),w	;volatile
 13617  106A  045E               	iorwf	(_Delay_Led_Memory+1)^(0+128),w	;volatile
 13618  106B  1903               	btfsc	3,2
 13619  106C  2876               	goto	i1l648
 13620                           
 13621                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13622  106D  300A               	movlw	10
 13623  106E  02DD               	subwf	_Delay_Led_Memory^(0+128),f	;volatile
 13624  106F  3000               	movlw	0
 13625  1070  1C03               	skipc
 13626  1071  03DE               	decf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13627  1072  02DE               	subwf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13628                           
 13629                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13630  1073  1283               	bcf	3,5	;RP0=0, select bank0
 13631  1074  1686               	bsf	6,5	;volatile
 13632                           
 13633                           ;isr.c: 71:                    }
 13634  1075  2878               	goto	i1l5473
 13635  1076                     i1l648:	
 13636                           ;isr.c: 72:                 else{
 13637                           
 13638                           
 13639                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13640  1076  1283               	bcf	3,5	;RP0=0, select bank0
 13641  1077  1286               	bcf	6,5	;volatile
 13642  1078                     i1l5473:
 13643                           
 13644                           ;isr.c: 77:                 tempodecorrido+=10;
 13645  1078  300A               	movlw	10
 13646  1079  1683               	bsf	3,5	;RP0=1, select bank1
 13647  107A  07D3               	addwf	_tempodecorrido^(0+128),f	;volatile
 13648  107B  1803               	skipnc
 13649  107C  0AD4               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13650  107D  3000               	movlw	0
 13651  107E  07D4               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13652                           
 13653                           ;isr.c: 78:                 milisegundo+=10;
 13654  107F  300A               	movlw	10
 13655  1080  07D9               	addwf	_milisegundo^(0+128),f	;volatile
 13656  1081  1803               	skipnc
 13657  1082  0ADA               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13658  1083  3000               	movlw	0
 13659  1084  07DA               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13660                           
 13661                           ;isr.c: 79:                 if(milisegundo==1000){
 13662  1085  30E8               	movlw	232
 13663  1086  0659               	xorwf	_milisegundo^(0+128),w	;volatile
 13664  1087  3003               	movlw	3
 13665  1088  1903               	skipnz
 13666  1089  065A               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13667  108A  1D03               	btfss	3,2
 13668  108B  28A8               	goto	i1l5497
 13669                           
 13670                           ;isr.c: 80:                    milisegundo=0;
 13671  108C  01D9               	clrf	_milisegundo^(0+128)	;volatile
 13672  108D  01DA               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13673                           
 13674                           ;isr.c: 81:                    segundo++;
 13675  108E  3001               	movlw	1
 13676  108F  00F0               	movwf	??_isr
 13677  1090  0870               	movf	??_isr,w
 13678  1091  07FD               	addwf	_segundo,f	;volatile
 13679                           
 13680                           ;isr.c: 88:                    if(segundo==60){
 13681  1092  303C               	movlw	60
 13682  1093  067D               	xorwf	_segundo,w	;volatile
 13683  1094  1D03               	btfss	3,2
 13684  1095  28A8               	goto	i1l5497
 13685                           
 13686                           ;isr.c: 89:                       segundo=0;
 13687  1096  01FD               	clrf	_segundo	;volatile
 13688                           
 13689                           ;isr.c: 90:                       minuto++;
 13690  1097  3001               	movlw	1
 13691  1098  00F0               	movwf	??_isr
 13692  1099  0870               	movf	??_isr,w
 13693  109A  07FA               	addwf	_minuto,f	;volatile
 13694                           
 13695                           ;isr.c: 91:                       if(minuto==60){
 13696  109B  303C               	movlw	60
 13697  109C  067A               	xorwf	_minuto,w	;volatile
 13698  109D  1D03               	btfss	3,2
 13699  109E  28A8               	goto	i1l5497
 13700                           
 13701                           ;isr.c: 92:                          minuto=0;
 13702  109F  01FA               	clrf	_minuto	;volatile
 13703                           
 13704                           ;isr.c: 93:                          hora++;
 13705  10A0  3001               	movlw	1
 13706  10A1  00F0               	movwf	??_isr
 13707  10A2  0870               	movf	??_isr,w
 13708  10A3  07FC               	addwf	_hora,f	;volatile
 13709                           
 13710                           ;isr.c: 94:                          if(hora==24){
 13711  10A4  3018               	movlw	24
 13712  10A5  067C               	xorwf	_hora,w	;volatile
 13713  10A6  1903               	btfsc	3,2
 13714                           
 13715                           ;isr.c: 95:                             hora=0;
 13716  10A7  01FC               	clrf	_hora	;volatile
 13717  10A8                     i1l5497:	
 13718                           ;isr.c: 99:                 }
 13719                           
 13720                           
 13721                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13722  10A8  1283               	bcf	3,5	;RP0=0, select bank0
 13723  10A9  1E8C               	btfss	12,5	;volatile
 13724  10AA  290F               	goto	i1l662
 13725                           
 13726                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13727  10AB  1683               	bsf	3,5	;RP0=1, select bank1
 13728  10AC  1464               	bsf	_generic_status^(0+128),0
 13729                           
 13730                           ;isr.c: 109:         tempo=30;
 13731  10AD  301E               	movlw	30
 13732  10AE  00F6               	movwf	isr@tempo
 13733  10AF  3000               	movlw	0
 13734  10B0  00F7               	movwf	isr@tempo+1
 13735                           
 13736                           ;isr.c: 110:         count=0;
 13737  10B1  01D5               	clrf	_count^(0+128)	;volatile
 13738  10B2  01D6               	clrf	(_count+1)^(0+128)	;volatile
 13739                           
 13740                           ;isr.c: 111:         pointer=usart_buffer;
 13741  10B3  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13742  10B4  00F0               	movwf	??_isr
 13743  10B5  0870               	movf	??_isr,w
 13744  10B6  00DF               	movwf	_pointer^(0+128)
 13745  10B7                     i1l5519:	
 13746                           ;isr.c: 112:         while(tempo)
 13747                           
 13748                           
 13749                           ;isr.c: 112:         while(tempo)
 13750  10B7  0876               	movf	isr@tempo,w
 13751  10B8  0477               	iorwf	isr@tempo+1,w
 13752  10B9  1903               	btfsc	3,2
 13753  10BA  28EA               	goto	i1l5521
 13754                           
 13755                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13756  10BB  1283               	bcf	3,5	;RP0=0, select bank0
 13757  10BC  1303               	bcf	3,6	;RP1=0, select bank0
 13758  10BD  1E8C               	btfss	12,5	;volatile
 13759  10BE  28E3               	goto	i1l5517
 13760                           
 13761                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13762  10BF  081A               	movf	26,w	;volatile
 13763  10C0  00F0               	movwf	??_isr
 13764  10C1  1683               	bsf	3,5	;RP0=1, select bank1
 13765  10C2  085F               	movf	_pointer^(0+128),w
 13766  10C3  0084               	movwf	4
 13767  10C4  0870               	movf	??_isr,w
 13768  10C5  1783               	bsf	3,7	;select IRP bank2
 13769  10C6  0080               	movwf	0
 13770                           
 13771                           ;isr.c: 118:                 if(count<32+20 -1)
 13772  10C7  0856               	movf	(_count+1)^(0+128),w	;volatile
 13773  10C8  3A80               	xorlw	128
 13774  10C9  00FF               	movwf	127
 13775  10CA  3080               	movlw	128
 13776  10CB  027F               	subwf	127,w
 13777  10CC  1D03               	skipz
 13778  10CD  28D0               	goto	u529_25
 13779  10CE  3033               	movlw	51
 13780  10CF  0255               	subwf	_count^(0+128),w	;volatile
 13781  10D0                     u529_25:
 13782  10D0  1803               	skipnc
 13783  10D1  28DE               	goto	i1l5515
 13784                           
 13785                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13786  10D2  3001               	movlw	1
 13787  10D3  1683               	bsf	3,5	;RP0=1, select bank1
 13788  10D4  1303               	bcf	3,6	;RP1=0, select bank1
 13789  10D5  07D5               	addwf	_count^(0+128),f	;volatile
 13790  10D6  1803               	skipnc
 13791  10D7  0AD6               	incf	(_count+1)^(0+128),f	;volatile
 13792  10D8  3000               	movlw	0
 13793  10D9  07D6               	addwf	(_count+1)^(0+128),f	;volatile
 13794                           
 13795                           ;isr.c: 121:                    pointer++;
 13796  10DA  3001               	movlw	1
 13797  10DB  00F0               	movwf	??_isr
 13798  10DC  0870               	movf	??_isr,w
 13799  10DD  07DF               	addwf	_pointer^(0+128),f
 13800  10DE                     i1l5515:
 13801                           
 13802                           ;isr.c: 123:                 tempo=30;
 13803  10DE  301E               	movlw	30
 13804  10DF  00F6               	movwf	isr@tempo
 13805  10E0  3000               	movlw	0
 13806  10E1  00F7               	movwf	isr@tempo+1
 13807                           
 13808                           ;isr.c: 124:             }
 13809  10E2  28B7               	goto	i1l5519
 13810  10E3                     i1l5517:
 13811                           
 13812                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13813  10E3  3001               	movlw	1
 13814  10E4  02F6               	subwf	isr@tempo,f
 13815  10E5  3000               	movlw	0
 13816  10E6  1C03               	skipc
 13817  10E7  03F7               	decf	isr@tempo+1,f
 13818  10E8  02F7               	subwf	isr@tempo+1,f
 13819  10E9  28B7               	goto	i1l5519
 13820  10EA                     i1l5521:
 13821                           
 13822                           ;isr.c: 131:         (*pointer)=0;
 13823  10EA  1683               	bsf	3,5	;RP0=1, select bank1
 13824  10EB  1303               	bcf	3,6	;RP1=0, select bank1
 13825  10EC  085F               	movf	_pointer^(0+128),w
 13826  10ED  0084               	movwf	4
 13827  10EE  1783               	bsf	3,7	;select IRP bank2
 13828  10EF  0180               	clrf	0
 13829                           
 13830                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13831  10F0  1283               	bcf	3,5	;RP0=0, select bank0
 13832  10F1  1C98               	btfss	24,1	;volatile
 13833  10F2  290F               	goto	i1l662
 13834                           
 13835                           ;isr.c: 134:            CREN=0;
 13836  10F3  1218               	bcf	24,4	;volatile
 13837                           
 13838                           ;isr.c: 135:            CREN=1;
 13839  10F4  1618               	bsf	24,4	;volatile
 13840                           
 13841                           ;isr.c: 136:            tempo=RCREG;
 13842  10F5  081A               	movf	26,w	;volatile
 13843  10F6  00F0               	movwf	??_isr
 13844  10F7  01F1               	clrf	??_isr+1
 13845  10F8  0870               	movf	??_isr,w
 13846  10F9  00F6               	movwf	isr@tempo
 13847  10FA  0871               	movf	??_isr+1,w
 13848  10FB  00F7               	movwf	isr@tempo+1
 13849                           
 13850                           ;isr.c: 137:            tempo=RCREG;
 13851  10FC  081A               	movf	26,w	;volatile
 13852  10FD  00F0               	movwf	??_isr
 13853  10FE  01F1               	clrf	??_isr+1
 13854  10FF  0870               	movf	??_isr,w
 13855  1100  00F6               	movwf	isr@tempo
 13856  1101  0871               	movf	??_isr+1,w
 13857  1102  00F7               	movwf	isr@tempo+1
 13858                           
 13859                           ;isr.c: 138:            tempo=RCREG;
 13860  1103  081A               	movf	26,w	;volatile
 13861  1104  00F0               	movwf	??_isr
 13862  1105  01F1               	clrf	??_isr+1
 13863  1106  0870               	movf	??_isr,w
 13864  1107  00F6               	movwf	isr@tempo
 13865  1108  0871               	movf	??_isr+1,w
 13866  1109  00F7               	movwf	isr@tempo+1
 13867                           
 13868                           ;isr.c: 139:            usart_buffer[0]=0;
 13869  110A  1703               	bsf	3,6	;RP1=1, select bank2
 13870  110B  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13871                           
 13872                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13873  110C  1683               	bsf	3,5	;RP0=1, select bank1
 13874  110D  1303               	bcf	3,6	;RP1=0, select bank1
 13875  110E  14E4               	bsf	_generic_status^(0+128),1
 13876  110F                     i1l662:
 13877  110F  0875               	movf	??_isr+5,w
 13878  1110  1283               	bcf	3,5	;RP0=0, select bank0
 13879  1111  00FF               	movwf	127
 13880  1112  0874               	movf	??_isr+4,w
 13881  1113  008A               	movwf	10
 13882  1114  0873               	movf	??_isr+3,w
 13883  1115  0084               	movwf	4
 13884  1116  0E72               	swapf	??_isr+2,w
 13885  1117  0083               	movwf	3
 13886  1118  0EFE               	swapf	126,f
 13887  1119  0E7E               	swapf	126,w
 13888  111A  0009               	retfie
 13889  111B                     __end_of_isr:
 13890  007E                     btemp	set	126	;btemp
 13891  007E                     wtemp0	set	126
 13892                           
 13893                           	psect	intentry
 13894  0004                     __pintentry:	
 13895                           ;incstack = 0
 13896                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13897                           
 13898  0004                     interrupt_function:
 13899  007E                     saved_w	set	btemp
 13900  0004  00FE               	movwf	btemp
 13901  0005  0E03               	swapf	3,w
 13902  0006  00F2               	movwf	??_isr+2
 13903  0007  0804               	movf	4,w
 13904  0008  00F3               	movwf	??_isr+3
 13905  0009  080A               	movf	10,w
 13906  000A  00F4               	movwf	??_isr+4
 13907  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13908  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13909  000D  087F               	movf	btemp+1,w
 13910  000E  00F5               	movwf	??_isr+5
 13911  000F  160A  118A  282D   	ljmp	_isr
 13912                           
 13913                           	psect	config
 13914                           
 13915                           ;Config register CONFIG1 @ 0x2007
 13916                           ;	Oscillator Selection bits
 13917                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 13918                           ;	Watchdog Timer Enable bit
 13919                           ;	WDTE = ON, WDT enabled
 13920                           ;	Power-up Timer Enable bit
 13921                           ;	PWRTE = ON, PWRT enabled
 13922                           ;	RE3/MCLR pin function select bit
 13923                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 13924                           ;	Code Protection bit
 13925                           ;	CP = ON, Program memory code protection is enabled
 13926                           ;	Data Code Protection bit
 13927                           ;	CPD = OFF, Data memory code protection is disabled
 13928                           ;	Brown Out Reset Selection bits
 13929                           ;	BOREN = ON, BOR enabled
 13930                           ;	Internal External Switchover bit
 13931                           ;	IESO = ON, Internal/External Switchover mode is enabled
 13932                           ;	Fail-Safe Clock Monitor Enabled bit
 13933                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13934                           ;	Low Voltage Programming Enable bit
 13935                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 13936                           ;	In-Circuit Debugger Mode bit
 13937                           ;	DEBUG = 0x1, unprogrammed default
 13938  2007                     	org	8199
 13939  2007  2F8C               	dw	12172
 13940                           
 13941                           ;Config register CONFIG2 @ 0x2008
 13942                           ;	Brown-out Reset Selection bit
 13943                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 13944                           ;	Flash Program Memory Self Write Enable bits
 13945                           ;	WRT = OFF, Write protection off
 13946  2008                     	org	8200
 13947  2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    64
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     80      80
    BANK1            80     41      69
    BANK3            96      0      91
    BANK2            96      0      52

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK1[2]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 58
		 -> usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 58
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK1[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK1[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 52
		 -> NULL(NULL[0]), usart_buffer(BANK2[52]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Str@buffer	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_24C1025_Read_Buffer_USART@data	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), EEPROM_24C1025_Write_Int@local(BANK1[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _MediaPlacaVaccum->___flmul
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    _I2C_Master_Init->___lldiv
    _Decodify_Command->___fltol
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->___fltol
    ___fltol->___flmul
    ___flmul->___fladd
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Buffer_USART->_I2C_Master_Read
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _Save_Log->_EEPROM_24C1025_Write_Int
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  119692
                                             36 BANK1      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     167
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    16    16      0   20583
                                             69 BANK0      1     1      0
                                              0 BANK1     11    11      0
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4961
                                             43 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4308
                                             23 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1016
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2107
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    1705
                                             14 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     337
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     765
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    19    19      0   96808
                                             17 BANK1     19    19      0
            _EEPROM_24C1025_Fill_All
   _EEPROM_24C1025_Read_Buffer_USART
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      44
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     416
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     416
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   13137
                                             10 BANK1      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             69 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    4616
                                             43 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3099
                                             12 BANK1      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     156
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2670
                                              4 BANK1      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    1777
                                              8 BANK1      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    2219
                                              8 BANK1      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1584
                                              4 BANK1      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     812
                                              0 BANK1      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     812
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     991
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     624
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     189
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     161
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    6059
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    7267
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    6763
                                              9 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    7761
                                             22 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             7     3      4    7738
                                             22 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     7      6    7570
                                             10 BANK0     12     6      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Buffer_USART                    13     7      6    6904
                                              9 BANK0     12     6      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2    1090
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8163
                                             10 BANK1      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    7912
                                              0 BANK1     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    6985
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     502
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4898
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             _ADC_Media_10bits (ARG)
               ___lwdiv
               ___xxtofl
               _captura
               _my_delay_ms
         ___fltol (ARG)
           ___flmul (ARG)
     _EEPROM_24C1025_Read_Buffer_USART
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _USART_putc
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
         _I2C_Master_RepeatedStart
         _I2C_Master_Start
         _I2C_Master_Stop
         _I2C_Master_Write
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
       _I2C_Master_RepeatedStart
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
     _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Int
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
       ___flmul
       ___fltol
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_int
     _USART_put_string
     _USART_putc
     _USART_to_Protocol
     ___flmul
     ___fltol
     _strcpy
     _strlen
   _EEPROM_Read_Integer
   _EEPROM_Write_Integer
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Media_10bits
     _Package_Usart_is_for_me
     ___fladd
     ___fldiv
       ___xxtofl (ARG)
     ___flge
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     132       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     29      45       7       86.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      5B       9       94.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      34      11       54.2%
DATA                 0      0     132      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 30 13:19:10 2021

                               _USART_putc 18B1                               ___fldiv@aexp 0047  
                             ___fldiv@bexp 0046                                          pc 0002  
                             ___fldiv@sign 003F                           _MediaPlacaVaccum 0037  
          EEPROM_24C1025_Read_Buffer@range 0034           EEPROM_24C1025_Write_Str@chip_add 0031  
                                       fsr 0004   __end_of_EEPROM_24C1025_Read_Buffer_USART 1682  
__size_of_EEPROM_24C1025_Read_Buffer_USART 017E         ??_EEPROM_24C1025_Read_Buffer_USART 002F  
        ?_EEPROM_24C1025_Read_Buffer_USART 0029           _EEPROM_24C1025_Read_Buffer_USART 1504  
                            _USART_put_int 18C1                   Decodify_Command@tempchar 00BF  
                      __Umul8_16@word_mpld 0026                 __end_of_RESISTOR_ROOM_TEMP 181C  
             PROCULUS_VP_Write_String@text 00AE                                        l430 074A  
                                      l424 06E7                                        l524 1CAC  
                                      l428 06F5                                        l525 1CAD  
                                      l551 19C0                                        l519 1C88  
                                      l439 02EA                                        l800 1966  
                                      l529 1A06                                        l495 1887  
                                      l817 195A                                        l880 18B9  
       EEPROM_24C1025_Read_Buffer@chip_add 0033                   Decodify_Command@sizedata 00B8  
                                      _isr 102D                                        fsr0 0004  
                                      indf 0000                  __end_of_EEPROM_Write_Byte 1CBC  
                         _ADC_Media_10bits 1DD1                               ___flmul@aexp 0059  
                             ___flmul@bexp 005E                     PROCULUS_VP_Write@vetor 00A6  
             ?_EEPROM_24C1025_Write_Buffer 002A                               ___flmul@sign 0058  
                             ___flmul@temp 0063                               ___flmul@prod 005F  
  __end_of_PROCULUS_Control_Register_Write 1C11   __size_of_PROCULUS_Control_Register_Write 0036  
        ??_PROCULUS_Control_Register_Write 00A5           ?_PROCULUS_Control_Register_Write 00A4  
          _PROCULUS_Control_Register_Write 1BDB                               ___fltol@exp1 006F  
                          __end_of_MAX_ADC 1824                                       l1311 0C80  
                                     l1171 1F87                                       l1332 0D00  
                                     l1324 0CE8                                       l1405 1A32  
                                     l1190 1ED2                                       l1430 0768  
                                     l1174 1FED                                       l1370 0AD6  
                                     l1346 0989                                       l1290 0B2E  
                                     l1443 07BE                                       l4003 0AF9  
                                     l1444 07C8                                       l1436 07A8  
                                     l4101 0BF6                                       l1294 0BC7  
                                     l4103 0BF8                                       l4111 0C08  
                                     l4031 0B26                                       l4007 0AFC  
                                     l1368 0AC8                                       l1296 0BA5  
                                     l4201 0D30                                       l4121 0C72  
                                     l4009 0B04                                       l4027 0B23  
                                     l4301 0FAD                                       l4037 0B38  
                                     l1398 0FF3                                       l4311 0FDC  
                                     l4215 0D4B                                       l4151 0CB3  
                                     l4143 0CA8                                       l5103 01C9  
                                     l4305 0FC3                                       l4217 0D4D  
                                     l4137 0CA1                                       l4129 0C92  
                                     l4145 0CAA                                       l5121 0310  
                                     l5025 0813                                       l4227 0D63  
                                     l4219 0D55                                       l4155 0CB5  
                                     l4075 0BB0                                       l4067 0B74  
                                     l4421 15ED                                       l4341 078D  
                                     l4173 0CF8                                       l4093 0BD5  
                                     l4077 0BB2                                       l4085 0BC1  
                                     l5045 0830                                       l3551 19E3  
                                     l4423 15F0                                       l4351 07AD  
                                     l4335 0777                                       l4281 0F62  
                                     l4329 0760                                       l4177 0CFC  
                                     l5137 036F                                       l5129 0358  
                                     l5081 0061                                       l3555 19EF  
                                     l4419 15E6                                       l4451 1589  
                                     l4531 0923                                       l4523 0901  
                                     l4291 0F7B                                       l4363 07E5  
                                     l4339 077B                                       l5059 0838  
                                     l3549 19F7                                       l4445 163D  
                                     l4453 1669                                       l4381 153C  
                                     l3813 17E2                                       l3741 16B8  
                                     l4613 14BB                                       l3717 1A2A  
                                     l4197 0D26                                       l4349 07BC  
                                     l3559 19FB                                       l3583 1C50  
                                     l3807 17C0                                       l3815 1705  
                                     l4623 14E2                                       l4543 13B2  
                                     l4287 0F79                                       l4279 0F45  
                                     l4199 0D28                                       l3831 1B77  
                                     l5601 12F8                                       l4449 1664  
                                     l4377 1532                                       l3817 17E7  
                                     l3737 16AE                                       l4625 14EB  
                                     l4545 13B9                                       l4529 08AB  
                                     l4465 0869                                       l3841 1C95  
                                     l3833 1B99                                       l4721 1986  
                                     l5097 00C0                                       l5089 00A9  
                                     l5603 12FF                                       l3691 1BD1  
                                     l4379 1539                                       l3739 16B5  
                                     l4547 13BC                                       l4467 0870  
                                     l3907 1BF3                                       l4715 1DAC  
                                     l4811 1E47                                       l5605 1302  
                                     l5621 133B                                       l3781 1769  
                                     l4469 0873                                       l3909 1C08  
                                     l3933 1E97                                       l4901 09A8  
                                     l5631 1365                                       l3687 1BBE  
                                     l3783 1770                                       l4591 146E  
                                     l4663 1AC4                                       l3839 1C92  
                                     l3951 1ECE                                       l4823 1E7C  
                                     l3785 1773                                       l4569 1409  
                                     l4737 1005                                       l3929 1E8E  
                                     l4809 1E37                                       l4833 1FA1  
                                     l5627 1360                                       l5563 1241  
                                     l3699 1BD8                                       l4587 1464  
                                     l4739 1022                                       l5803 0688  
                                     l5723 04F4                                       l5715 04CD  
                                     l5707 04A3                                       l4819 1E6F  
                                     l4907 09B4                                       l5629 1284  
                                     l5565 1248                                       l4589 146B  
                                     l3981 1CE8                                       l3973 1CC4  
                                     l5653 1D58                                       l3877 1939  
                                     l3949 1EBE                                       l5821 06C0  
                                     l4933 0A22                                       l4837 1FC7  
                                     l5567 124B                                       l4687 1B48  
                                     l3975 1CD2                                       l5655 1D73  
                                     l3879 1944                                       l3959 1EE1  
                                     l5815 06A8                                       l5751 055D  
                                     l5719 04DB                                       l3887 1C19  
                                     l4951 0A2D                                       l4927 0A03  
                                     l4935 09DF                                       l4871 095B  
                                     l5665 1D02                                       l3985 1CF3  
                                     l5833 06EB                                       l5809 0699  
                                     l5745 054F                                       l5729 050B  
                                     l4777 1DED                                       l4953 0A4A  
                                     l4937 0A27                                       l4873 0963  
                                     l5921 11A7                                       l5827 06DC  
                                     l5763 058C                                       l5739 0533  
                                     l5691 0439                                       l4795 195F  
                                     l4963 0A63                                       l4891 0981  
                                     l4867 0958                                       ?_isr 0070  
                                     l5781 05F2                                       l5757 056C  
                                     l5685 041F                                       l5845 06F9  
                                     l4973 0A95                                       l5775 05D5  
                                     l5695 0446                                       l4799 1962  
                                     l4959 0A61                                       l4887 097E  
                                     l5793 0644                                       l5769 05B2  
                                     l4977 0AAE                                       l5787 0620  
                                     l5947 11D4                                       l4989 0AD2  
                                     l5991 0703                                       l5799 0662  
                                     _BETA 1848                                       STR_1 1850  
                                     STR_2 1858                                _statuspower 00E3  
                                     _CREN 00C4                                       u3105 1ED7  
                                     u3300 0B94                                       u4005 0FCE  
                                     u3045 1EA0                                       u3310 0B95  
                                     u3145 1CC7                                       u4203 15E4  
                                     u3075 1EBF                                       u3165 1CD3  
                                     u4303 1418                                       u4223 0854  
                                     u3175 1CDF                                       u4135 07D0  
                                     u4055 0784                                       u4233 0867  
                                     u3185 1CE9                                       u3441 0C33  
                                     u3433 0C1A                                       u3425 0BFC  
                                     u3345 0BB6                                       u2810 1BCE  
                                     u3450 0C47                                       u3442 0C34  
                                     u4163 151D                                       u4323 1462  
                                     u4243 08C3                                       u4075 07A0  
                                     u3451 0C48                                       u3443 0C39  
                                     u3452 0C4D                                       u3444 0C3A  
                                     u4173 1530                                       u3453 0C4E  
                                     u3445 0C3F                                       u3446 0C40  
                                     u4183 159F                                       u4095 07B5  
                                     u3295 0B88                                       u2913 1767  
                                     u4505 1E5E                                       u5323 122C  
                                     u4283 139D                                       u2835 196C  
                                     u4515 1E70                                       u2693 1C62  
                                     u5333 123F                                       u4293 13B0  
                                     u5343 12A6                                       u2855 1A33  
                                     u3815 0E66                                       u3495 0C94  
                                     u2873 1699                                       u4385 1DB8  
                                     u4705 09F1                                       u4561 1FB2  
                                     u4562 1FB3                                       u5363 12F6  
                                     u2883 16AC                                       u3915 0F54  
                                     u4475 1E3B                                       u4563 1FB8  
                                     u3595 0CD2                                       u4564 1FB9  
                                     u2893 171B                                       u4725 09FC  
                                     u4581 1FD8                                       u4565 1FBE  
                                     u5517 1123                                       u4582 1FD9  
                                     u4566 1FBF                                       u5375 1292  
                                     u5607 167C                                       u3855 0EFA  
                                     u4495 1E49                                       u5527 1C33  
                                     u4735 0A11                                       u4583 1FDE  
                                     u4584 1FDF                                       u5617 1C6B  
                                     u5393 1D35                                       u5537 1974  
                                     u3785 0E0D                                       u2993 1C2B  
                                     u4585 1FE4                                       u4586 1FE5  
                                     u5627 19EB                                       u5547 1B6D  
                                     u5557 1CB6                                       u3885 0F31  
                                     u4765 0A31                                       u5567 1A17  
                                     u3895 0F49                                       u4855 0A80  
                                     u4695 09E8                                       u5577 143B  
                                     u3985 0F98                                       u4865 0A9E  
                                     u4785 0A3C                                       u5587 14FE  
                                     u3995 0FB6                                       u4875 0AB9  
                                     u5597 17FA                                       u4895 1B1E  
                                     _WPUB 0095                       PROCULUS_Buzzer@vetor 00AB  
         __end_of_I2C_Master_RepeatedStart 18B1                                       _main 111B  
                                     _hora 007C          __size_of_EEPROM_24C1025_Write_Int 0029  
                                     btemp 007E          __size_of_EEPROM_24C1025_Write_Str 00FB  
                ?_EEPROM_24C1025_Write_Int 00A0                  ?_EEPROM_24C1025_Write_Str 002A  
              __size_of_EEPROM_Read_String 0020                                       start 0012  
                         __end_of_ADC_init 189B                           _BALANCE_RESISTOR 184C  
                          ___fldiv@new_exp 0040         EEPROM_24C1025_Read_Buffer@sizedata 002E  
                                    ??_isr 0070                           ?_I2C_Master_Init 002E  
                         ?_I2C_Master_Read 0023                           ?_I2C_Master_Wait 0070  
                         ?_I2C_Master_Stop 0070                             ?_USART_put_int 00A0  
                            ___fltol@sign1 006E                            __end_of___fladd 0D0B  
                                    ?_main 0070                            __end_of___fldiv 0ADE  
                                    _EEADR 010D                            __end_of___flmul 1000  
                          __end_of___flsub 19BD                            __end_of___fltol 1EF0  
                                    _ANSEL 0188                            __end_of___lldiv 1E85  
                                    _T1CON 0010                            __end_of___lwdiv 1CF8  
                                    i1l644 1055                                      i1l662 110F  
                                    i1l646 1066                                      i1l648 1076  
                                    _RCREG 001A                                      _TMR1H 000F  
                                    _TMR1L 000E                                      _SPBRG 0099  
                                    _PORTA 0005                                      _PORTB 0006  
                                    _PORTC 0007                                      _PORTE 0009  
                                    _TRISA 0085                                      _TRISB 0086  
                                    _TRISC 0087            EEPROM_24C1025_Read_Int@chip_add 003C  
                                    _TRISE 0089                                      _TXREG 0019  
                    ADC_Media_10bits@canal 0033                            __end_of_captura 1890  
                             _usart_buffer 0110                      ADC_Media_10bits@value 0034  
                EEPROM_Read_Integer@result 0028                                      _canal 00E2  
             __size_of_EEPROM_Read_Integer 002A                                      _count 00D5  
                                    _errno 00D1              ??_EEPROM_24C1025_Write_Buffer 0031  
       __size_of_EEPROM_24C1025_Write_Byte 0016                 ?_EEPROM_24C1025_Write_Byte 0037  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E            EEPROM_24C1025_Read_Byte@mem_add 0036  
                             __end_of_BETA 184C                    __size_of_PROCULUS_Delay 001D  
        __size_of_PROCULUS_VP_Write_String 0018                                ?_USART_init 0020  
                          __initialization 0015                  ?_PROCULUS_VP_Write_String 00AC  
                              ?_USART_putc 0070                               __end_of_main 1214  
                           Send_To_MB@size 0021                   __end_of_EEPROM_Read_Byte 1A20  
                                   ??_main 00C4                           __end_of_Save_Log 1F6D  
                         _USART_put_string 1B73                      EEPROM_Write_Byte@addr 0023  
                    EEPROM_Write_Byte@dado 0020                 __size_of_EEPROM_Write_Byte 003C  
                        ?_I2C_Master_Start 0070                  EEPROM_Write_Byte@last_GIE 0024  
                        ?_I2C_Master_Write 0023                         ??_I2C_Master_Start 0023  
                                   _ADCON1 009F                         ??_I2C_Master_Write 0025  
                PROCULUS_Show_Screen@vetor 00AB                                     _ADRESH 001E  
                                   _ADRESL 009E                                     _EEDATA 010C  
                                   _EECON2 018D                                 _Send_To_MB 1A6B  
                    EEPROM_Write_Integer@i 002B                                     _ANSELH 0189  
             __end_of_PROCULUS_Show_Screen 18EB                                     i1l5521 10EA  
                                   i1l5515 10DE                                     i1l5517 10E3  
                                   i1l5461 1058                                     i1l5453 103B  
                                   i1l5519 10B7                                     i1l5473 1078  
                                   i1l5457 104A                                     i1l5467 1068  
                                   i1l5497 10A8          __end_of_EEPROM_24C1025_Write_Byte 1901  
                                   u529_25 10D0                               ?_my_delay_ms 0020  
                                   _TMR1IE 0460                                     _TMR1CS 0081  
                 ?_EEPROM_24C1025_Fill_All 00AA                                     _SSPADD 0093  
                                   _TRISC3 043B                                     _TRISC4 043C  
                                   _TRISC6 043E                                     _TRISC7 043F  
                                   _SSPCON 0014                                     _SSPBUF 0013  
           EEPROM_24C1025_Fill_All@mem_add 00AD                           __end_of___xxtofl 07EE  
            EEPROM_24C1025_Read_Str@buffer 002D                         PROCULUS_VP_Write@i 00AB  
                 __end_of_Decodify_Command 074B                   ?_EEPROM_24C1025_Read_Int 0036  
                 ?_EEPROM_24C1025_Read_Str 0029                   _I2C_Master_RepeatedStart 18A6  
     __size_of_EEPROM_24C1025_Write_Buffer 0176                                     ___flge 1F6D  
                                ??___fladd 003F                                  ??___fldiv 0036  
                                ??___flmul 0053                                  ??___flsub 0053  
                                ??___fltol 0069                            ??_USART_put_int 00A2  
                                ??___lldiv 0028                                     _header 00D7  
                        __end_of_ROOM_TEMP 1820                                  ??___lwdiv 0024  
                                   _buffer 01CA                          _USART_to_Protocol 1D7C  
                          USART_putc@value 0020                                     _minuto 007A  
        EEPROM_24C1025_Read_Buffer@cnt_108 0032                                  ??_captura 0022  
                       ?_USART_to_Protocol 0070               Decodify_Command@add_24LCxxxx 00C0  
                                   _strcpy 1981                                     _strlen 1932  
        EEPROM_24C1025_Read_Buffer@mem_add 002A           __end_of_EEPROM_24C1025_Read_Byte 1932  
                       __size_of__Umul8_16 0023                                     saved_w 007E  
        EEPROM_24C1025_Write_Byte@chip_add 003C                                  ?_ADC_init 0070  
                      ??_USART_to_Protocol 0020                        __size_of_USART_init 0042  
                      __size_of_USART_putc 0010                   __end_of_MediaPlacaVaccum 03FF  
                               ___flge@ff1 0020                                 ___flge@ff2 0024  
                             ___xxtofl@arg 002A                               ___xxtofl@exp 0029  
                             ___xxtofl@val 0020                           __end_oflog@coeff 1848  
                  __end_of__initialization 0033                      _MediaPlacaVaccum$2372 00A0  
      PROCULUS_Control_Register_Write@size 00A4                                 ___fltol@f1 0065  
                             _Board_Number 00E1                   __end_of_ADC_Media_10bits 1E27  
                           __pcstackCOMMON 0070                   __size_of_PROCULUS_Buzzer 002A  
                __end_of_USART_to_Protocol 1DD1                      USART_put_string@vetor 0021  
                      my_delay_ms_WDT@time 0020              __size_of_EEPROM_Write_Integer 0032  
                 __size_of_my_delay_ms_WDT 0038                             _OPTION_REGbits 0081  
                 __end_of_BALANCE_RESISTOR 1850           __end_of_EEPROM_24C1025_Write_Int 1ABC  
         __end_of_EEPROM_24C1025_Write_Str 093D                                 ??_ADC_init 0020  
              __end_of_EEPROM_Write_String 102D            __end_of_EEPROM_24C1025_Fill_All 1D38  
                              ?_Send_To_MB 0070                     __size_of_Send_Reply_OK 0009  
                               __pbssBANK1 00C9                                 __pbssBANK2 0110  
                               __pbssBANK3 0190                         _RESISTOR_ROOM_TEMP 1818  
          __end_of_EEPROM_24C1025_Read_Int 1A6B            __end_of_EEPROM_24C1025_Read_Str 1504  
                 ?_Package_Usart_is_for_me 0070                                  ?_Save_Log 00AA  
                           _PROCULUS_Delay 1964                          __end_of__Umul8_16 1A43  
                               __pmaintext 111B                                    ?___flge 0020  
                      Save_Log@add_datalog 00AA                        _EEPROM_Read_Integer 1ABC  
               PROCULUS_Show_Screen@screen 00A8                                 __pintentry 0004  
                     _PROCULUS_Show_Screen 18D6                                    _T1CKPS0 0084  
                                  _T1CKPS1 0085                                    ?_strcpy 0020  
                                  ?_strlen 0020                          MediaPlacaVaccum@i 00A5  
                                ?___xxtofl 0020                                    _MAX_ADC 1820  
                     ?_EEPROM_Read_Integer 0023                      Decodify_Command@dados 00B5  
              EEPROM_24C1025_Read_Int@data 003D                                    _SSPCON2 0091  
         __end_of_PROCULUS_VP_Write_String 1919                    EEPROM_Read_Integer@addr 0026  
                                  _SSPSTAT 0094                   _EEPROM_24C1025_Read_Byte 1919  
                               __stringtab 1800                        PROCULUS_VP_Write@vp 00A4  
              ??_EEPROM_24C1025_Write_Byte 003C                 __end_of_EEPROM_Read_String 19DD  
                   __end_of_PROCULUS_Delay 1981                   __end_of_USART_put_string 1BA6  
                     __size_of_my_delay_ms 0037                                 ??_Save_Log 0070  
                          PROCULUS_Delay@i 0024                                    _Vaccum0 00CD  
                             ??_USART_init 0024                EEPROM_24C1025_Read_Str@ctrl 0033  
                                  _Tensao1 00C9                               ??_USART_putc 0020  
               __size_of_USART_to_Protocol 0055                PROCULUS_Buzzer@time_ms_x_10 00A8  
                          __size_of___flge 0093                                    ___fladd 0ADE  
                                  ___fldiv 093D                   EEPROM_Write_Integer@addr 002A  
                                  ___flmul 0D0B                   EEPROM_Write_Integer@dado 0025  
                                  ___flsub 199F                                    ___fltol 1E85  
                                  ___lldiv 1E27                                    ___lwdiv 1CBC  
                            _Send_Reply_OK 187D                        __size_of_Send_To_MB 0028  
                    ?_PROCULUS_Show_Screen 00A8                                    _captura 1886  
                         _statuspower_memo 007B                                    __ptext1 0800  
                                  __ptext2 0037                                    __ptext3 199F  
                                  __ptext4 0ADE                                    __ptext5 1F6D  
                                  __ptext6 093D                                    __ptext7 194B  
                                  __ptext8 1DD1                                    __ptext9 1C11  
                        ??_PROCULUS_Buzzer 00AA                                    _destino 00E0  
                        ?_EEPROM_Read_Byte 0070                            __size_of_strcpy 001E  
                          __size_of_strlen 0019                               __size_of_isr 00EE  
                               ??___xxtofl 0024                         ??_EEPROM_Read_Byte 0020  
                                  _segundo 007D                   __size_of_I2C_Master_Init 0031  
                 __size_of_I2C_Master_Read 0035                             _usart_protocol 0190  
                    ??_EEPROM_Read_Integer 0025                   __size_of_I2C_Master_Wait 0021  
                 __size_of_I2C_Master_Stop 0009              EEPROM_24C1025_Write_Int@local 00A8  
                                  _pointer 00DF              EEPROM_24C1025_Write_Byte@data 003B  
                                  clrloop0 186D                         __end_of_USART_init 0842  
          __end_of_Package_Usart_is_for_me 1964                         __end_of_USART_putc 18C1  
                        ADC_Media_10bits@i 0036                       end_of_initialization 0033  
                 _EEPROM_24C1025_Write_Int 1A93                          ??_my_delay_ms_WDT 0024  
                 _EEPROM_24C1025_Write_Str 0842                 ??_I2C_Master_RepeatedStart 0023  
                          ?_PROCULUS_Delay 0020                            my_delay_ms@time 0020  
          EEPROM_24C1025_Write_Buffer@data 002F            EEPROM_24C1025_Write_Buffer@ctrl 0036  
                __size_of_I2C_Master_Start 0011                  __size_of_I2C_Master_Write 000B  
                        ?_Decodify_Command 0070                            ___lldiv@divisor 0020  
                          ___lldiv@counter 002D       EEPROM_24C1025_Read_Buffer_USART@data 002E  
     EEPROM_24C1025_Read_Buffer_USART@ctrl 0034                         ??_Decodify_Command 00B1  
                                _RCSTAbits 0018                           I2C_Master_Init@c 002E  
                         I2C_Master_Read@a 0023                             ?_Send_Reply_OK 0070  
                _EEPROM_24C1025_Write_Byte 18EB           __size_of_EEPROM_24C1025_Fill_All 0040  
                                  strlen@s 0024                         USART_to_Protocol@i 0022  
                                _PORTAbits 0005                                  _PORTBbits 0006  
                                _PORTCbits 0007                           _Delay_Led_Memory 00DD  
             ??_EEPROM_24C1025_Read_Buffer 0030              EEPROM_24C1025_Write_Str@range 0032  
                                _ROOM_TEMP 181C                                ___fladd@grs 004A  
         __size_of_EEPROM_24C1025_Read_Int 0028    EEPROM_24C1025_Read_Buffer_USART@cnt_117 0031  
         __size_of_EEPROM_24C1025_Read_Str 017A                              ___xxtofl@sign 0028  
      __end_of_EEPROM_24C1025_Write_Buffer 138A                _EEPROM_24C1025_Write_Buffer 1214  
  EEPROM_24C1025_Read_Buffer_USART@mem_add 0029                                ___fldiv@grs 0042  
                              ___fldiv@rem 003B       PROCULUS_Control_Register_Write@vetor 00A6  
         EEPROM_24C1025_Write_Buffer@count 0033            EEPROM_24C1025_Write_Int@mem_add 00A0  
         EEPROM_24C1025_Write_Buffer@range 0035                          __size_of_ADC_init 000B  
                  Decodify_Command@tempint 00B9                          ?_MediaPlacaVaccum 0070  
                    PROCULUS_VP_Write@size 00A8            EEPROM_24C1025_Read_Str@chip_add 0031  
                              ___flmul@grs 005A                         ??_MediaPlacaVaccum 0065  
                 _PROCULUS_VP_Write_String 1901                                  _TXSTAbits 0098  
      __size_of_EEPROM_24C1025_Read_Buffer 017E                          ?_ADC_Media_10bits 002E  
                   PROCULUS_Delay@tempo_ms 0020                     ??_PROCULUS_Show_Screen 00AA  
                       ??_ADC_Media_10bits 0032                             __end_of___flge 2000  
                    __end_of_USART_put_int 18D6                                _BAUDCTLbits 0187  
                           __end_of_strcpy 199F                             __end_of_strlen 194B  
                      start_initialization 0015                                __end_of_isr 111B  
                              USART_init@i 0025                               ??_Send_To_MB 0021  
 EEPROM_24C1025_Read_Buffer_USART@chip_add 0032                          ??_I2C_Master_Init 0032  
                        ??_I2C_Master_Read 0025                          ??_I2C_Master_Wait 0020  
                        ??_I2C_Master_Stop 0023               __end_of_EEPROM_Write_Integer 1B73  
         EEPROM_24C1025_Write_Int@chip_add 00A7                        Decodify_Command@add 00B7  
                          ??_Send_Reply_OK 0025                                   ??___flge 0028  
                        __size_of_Save_Log 007D                       I2C_Master_Wait@tempo 0022  
                                __Umul8_16 1A20                         __end_of_Send_To_MB 1A93  
         __size_of_Package_Usart_is_for_me 0019                                   ??_strcpy 0021  
                                 ??_strlen 0022   EEPROM_24C1025_Read_Buffer_USART@sizedata 002D  
               ??_EEPROM_24C1025_Read_Byte 003A         EEPROM_24C1025_Write_Buffer@mem_add 002A  
                                ___fladd@a 003B                                  ___fladd@b 0037  
         EEPROM_24C1025_Write_Byte@mem_add 0037                                  ___fldiv@a 002E  
                                ___fldiv@b 0032                                  ___flmul@a 004F  
                                ___flmul@b 004B                                __pbssCOMMON 0078  
                                ___flsub@a 004B                                  ___flsub@b 004F  
                                ___latbits 0002                              __pcstackBANK0 0020  
                            __pcstackBANK1 00A0                          _PROCULUS_VP_Write 1D38  
                        __size_of___xxtofl 00A3                         ?_PROCULUS_VP_Write 00A4  
             __size_of_EEPROM_Write_String 002B                           _I2C_Master_Start 07EE  
                         _I2C_Master_Write 189B                        ??_PROCULUS_VP_Write 00A9  
                           _tempodecorrido 00D3                          ?_USART_put_string 0021  
                          _PROCULUS_Buzzer 1AE6                           ___lwdiv@dividend 0022  
           Package_Usart_is_for_me@retorno 0020                         ??_USART_put_string 0023  
                                 ?___fladd 0037                                   ?___fldiv 002E  
                  _EEPROM_24C1025_Fill_All 1CF8                                   ?___flmul 004B  
                                 ?___flsub 004B                                   ?___fltol 0065  
                                 ?___lldiv 0020                                 ?__Umul8_16 0020  
                       _EEPROM_Read_String 19BD                                   ?___lwdiv 0020  
       __end_of_EEPROM_24C1025_Read_Buffer 1800                 _EEPROM_24C1025_Read_Buffer 1682  
                                 ?_captura 0020                                  __pstrings 1800  
                    MediaPlacaVaccum@canal 00A4                            _my_delay_ms_WDT 1C48  
                  _EEPROM_24C1025_Read_Int 1A43                    _EEPROM_24C1025_Read_Str 138A  
                   EEPROM_Read_Integer@ptr 0027                 ??_EEPROM_24C1025_Write_Int 00A6  
               ??_EEPROM_24C1025_Write_Str 002F                        ?_EEPROM_Read_String 0023  
                __end_of_PROCULUS_VP_Write 1D7C                 EEPROM_24C1025_Read_Str@cnt 0030  
                                 _ADC_init 1890                           ___lwdiv@quotient 0025  
                  EEPROM_Write_Integer@ptr 0029                           ??_PROCULUS_Delay 0022  
           EEPROM_24C1025_Read_Buffer@data 002F             EEPROM_24C1025_Read_Buffer@ctrl 0035  
                            ??_my_delay_ms 0024                  __size_of_EEPROM_Read_Byte 0022  
                        interrupt_function 0004            EEPROM_24C1025_Write_Str@mem_add 002A  
                     ??_EEPROM_Read_String 0024                                  clear_ram0 186C  
                                 _PIE1bits 008C                                   _PIR1bits 000C  
         PROCULUS_Control_Register_Write@i 00A7                     Decodify_Command@OutPut 00BB  
                          _PT100_TRANSLADA 1810                            _Delay_Led_Usart 00DB  
             EEPROM_24C1025_Read_Byte@data 003C                __end_of_EEPROM_Read_Integer 1AE6  
                               _ADCON0bits 001F                                __stringbase 180F  
                               _ADCON1bits 009F                  __size_of_Decodify_Command 034C  
                     _EEPROM_Write_Integer 1B41             EEPROM_24C1025_Read_Int@mem_add 0036  
                                main@reset 00C7                 ??_PROCULUS_VP_Write_String 00AF  
                      I2C_Master_Read@temp 0027                    __end_of_PROCULUS_Buzzer 1B10  
                           _generic_status 00E4                                 _EECON1bits 018C  
                                 _Save_Log 1EF0                  ??_EEPROM_24C1025_Fill_All 0070  
                      __end_of_my_delay_ms 1C48               EEPROM_24C1025_Read_Str@range 0032  
                  __end_of_my_delay_ms_WDT 1C80                               my_delay_ms@i 0026  
                              ??__Umul8_16 0022                  __size_of_MediaPlacaVaccum 03C8  
        __size_of_I2C_Master_RepeatedStart 000B                           __size_of___fladd 022D  
                ??_EEPROM_24C1025_Read_Int 003A                    _Package_Usart_is_for_me 194B  
                         __size_of___fldiv 01A1                  ??_EEPROM_24C1025_Read_Str 002E  
                         __size_of___flmul 02F5                  ?_I2C_Master_RepeatedStart 0070  
                         __size_of___flsub 001E                           __size_of___fltol 006B  
                         __size_of___lldiv 005E                           __size_of___lwdiv 003C  
                       __end_of__stringtab 1810        EEPROM_24C1025_Write_Buffer@chip_add 0034  
                      USART_put_string@ptr 0023                           __size_of_captura 000A  
                    ?_EEPROM_Write_Integer 0025                            _I2C_Master_Init 1B10  
                          _I2C_Master_Read 1BA6                                   ___xxtofl 074B  
               __size_of_PROCULUS_VP_Write 0044                            _I2C_Master_Wait 19DD  
         EEPROM_24C1025_Read_Byte@chip_add 003B                            _I2C_Master_Stop 1874  
                __size_of_ADC_Media_10bits 0056                            ___lwdiv@divisor 0020  
                          ___lwdiv@counter 0027                                   __ptext10 1886  
                                 __ptext11 074B                                   __ptext20 1EF0  
                                 __ptext12 1B10                                   __ptext21 1E85  
                                 __ptext13 1E27                                   __ptext30 1BDB  
                                 __ptext22 0D0B                                   __ptext14 03FF  
                                 __ptext31 18C1                                   __ptext23 1A20  
                                 __ptext15 1981                                   __ptext40 18EB  
                                 __ptext32 1964                                   __ptext24 1901  
                                 __ptext16 1D7C                                   __ptext41 138A  
                                 __ptext33 1002                                   __ptext25 1932  
                                 __ptext17 1A6B                                   __ptext50 1A93  
                                 __ptext42 1A43                                   __ptext34 1B41  
                                 __ptext26 1D38                                   __ptext18 187D  
                                 __ptext51 1214                                   __ptext43 1919  
                                 __ptext35 1C80                                   __ptext27 18D6  
                                 __ptext19 1B73                                   __ptext52 1C48  
                                 __ptext44 1682                                   __ptext36 19BD  
                                 __ptext28 1AE6                                   __ptext53 189B  
                                 __ptext45 1504                                   __ptext37 1ABC  
                                 __ptext29 1CBC                                   __ptext54 1874  
                                 __ptext46 18B1                                   __ptext38 19FE  
                                 __ptext55 07EE                                   __ptext47 18A6  
                                 __ptext39 0842                                   __ptext56 19DD  
                                 __ptext48 1BA6                                   __ptext57 1890  
                                 __ptext49 1CF8                                   __ptext58 102D  
                       USART_put_int@value 00A0                             _PT100_CONSTANT 1814  
                     MediaPlacaVaccum@Temp 00A7                                 strcpy@from 0020  
                            __size_of_main 00F9               EEPROM_24C1025_Fill_All@value 00AA  
               PROCULUS_VP_Write_String@vp 00AC                    __end_of_PT100_TRANSLADA 1814  
      EEPROM_24C1025_Write_Buffer@sizedata 002E                                _milisegundo 00D9  
                           _Delay_Led_Tmr0 0078              __size_of_PROCULUS_Show_Screen 0015  
                      _EEPROM_Write_String 1002                                   log@coeff 1824  
                 __end_of_I2C_Master_Start 07FF                   __end_of_I2C_Master_Write 18A6  
                               _INTCONbits 000B                     __end_of_PT100_CONSTANT 1818  
                                 isr@tempo 0076                       EEPROM_Read_Byte@addr 0022  
                   EEPROM_Read_String@addr 0025                     EEPROM_Read_String@dado 0023  
                         my_delay_ms_WDT@i 0026                                   intlevel1 0000  
                         ?_PROCULUS_Buzzer 00A8                          USART_put_int@dado 00A3  
                         _EEPROM_Read_Byte 19FE                                _my_delay_ms 1C11  
                     ?_EEPROM_Write_String 0025                           ___lldiv@dividend 0024  
                   __size_of_USART_put_int 0015               EEPROM_24C1025_Write_Int@data 00A4  
                     EEPROM_Read_Integer@i 002A                    EEPROM_Write_String@addr 0027  
                  EEPROM_Write_String@dado 0025                         USART_init@baudrate 0020  
                                stringcode 180A                                 _OSCCONbits 008F  
    EEPROM_24C1025_Read_Buffer_USART@range 0033                  ??_Package_Usart_is_for_me 0020  
                         ?_my_delay_ms_WDT 0020                      __end_of_Send_Reply_OK 1886  
                  __end_of_I2C_Master_Init 1B41                    __end_of_I2C_Master_Read 1BDB  
                  __end_of_I2C_Master_Wait 19FE                    __end_of_I2C_Master_Stop 187D  
             EEPROM_24C1025_Write_Str@data 002E               EEPROM_24C1025_Write_Str@ctrl 0033  
              ?_EEPROM_24C1025_Read_Buffer 002A            EEPROM_24C1025_Fill_All@chip_add 00AC  
                   ??_EEPROM_Write_Integer 0027                     __Umul8_16@multiplicand 0020  
          USART_to_Protocol@usart_protocol 0024                           _Decodify_Command 03FF  
                __size_of_USART_put_string 0033                           ___lldiv@quotient 0029  
                        I2C_Master_Write@d 0023                                   strcpy@cp 0023  
                                 strlen@cp 0023                                   strcpy@to 0022  
                                 stringdir 180A                                   stringtab 1800  
                              _SSPCON2bits 0091                          _EEPROM_Write_Byte 1C80  
           EEPROM_24C1025_Read_Str@mem_add 0029                              ___fladd@signs 0047  
                       ?_EEPROM_Write_Byte 0020                      ??_EEPROM_Write_String 0026  
                             ___fladd@aexp 0048                               ___fladd@bexp 0049  
        __size_of_EEPROM_24C1025_Read_Byte 0019                  ?_EEPROM_24C1025_Read_Byte 0036  
                      EEPROM_Read_String@c 0026                       __Umul8_16@multiplier 0028  
                      ??_EEPROM_Write_Byte 0021                          __Umul8_16@product 0024  
                               _USART_init 0800  
