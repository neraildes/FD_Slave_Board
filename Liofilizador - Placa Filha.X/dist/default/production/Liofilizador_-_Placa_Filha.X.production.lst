

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jan 04 06:18:37 2020

Microchip MPLAB XC8 C Compiler v2.10 (Pro license) build 20190730164152 Og9s 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	plic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text22,local,class=CODE,merge=1,delta=2
    25                           	psect	text23,local,class=CODE,merge=1,delta=2
    26                           	psect	text30,local,class=CODE,merge=1,delta=2
    27                           	psect	text32,local,class=CODE,merge=1,delta=2
    28                           	psect	text44,local,class=CODE,merge=1,delta=2
    29                           	psect	text46,local,class=CODE,merge=1,delta=2
    30                           	psect	text49,local,class=CODE,merge=1,delta=2
    31                           	psect	text52,local,class=CODE,merge=1,delta=2
    32                           	psect	text56,local,class=CODE,merge=1,delta=2
    33                           	psect	text67,local,class=CODE,merge=1,delta=2
    34                           	psect	text73,local,class=CODE,merge=1,delta=2
    35                           	psect	text74,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	pa_nodes0,global,class=CODE,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F886 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0000                     	;# 
   455  0001                     	;# 
   456  0002                     	;# 
   457  0003                     	;# 
   458  0004                     	;# 
   459  0005                     	;# 
   460  0006                     	;# 
   461  0007                     	;# 
   462  0009                     	;# 
   463  000A                     	;# 
   464  000B                     	;# 
   465  000C                     	;# 
   466  000D                     	;# 
   467  000E                     	;# 
   468  000E                     	;# 
   469  000F                     	;# 
   470  0010                     	;# 
   471  0011                     	;# 
   472  0012                     	;# 
   473  0013                     	;# 
   474  0014                     	;# 
   475  0015                     	;# 
   476  0015                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001B                     	;# 
   484  001C                     	;# 
   485  001D                     	;# 
   486  001E                     	;# 
   487  001F                     	;# 
   488  0081                     	;# 
   489  0085                     	;# 
   490  0086                     	;# 
   491  0087                     	;# 
   492  0089                     	;# 
   493  008C                     	;# 
   494  008D                     	;# 
   495  008E                     	;# 
   496  008F                     	;# 
   497  0090                     	;# 
   498  0091                     	;# 
   499  0092                     	;# 
   500  0093                     	;# 
   501  0093                     	;# 
   502  0093                     	;# 
   503  0094                     	;# 
   504  0095                     	;# 
   505  0096                     	;# 
   506  0097                     	;# 
   507  0098                     	;# 
   508  0099                     	;# 
   509  009A                     	;# 
   510  009B                     	;# 
   511  009C                     	;# 
   512  009D                     	;# 
   513  009E                     	;# 
   514  009F                     	;# 
   515  0105                     	;# 
   516  0107                     	;# 
   517  0108                     	;# 
   518  0109                     	;# 
   519  010C                     	;# 
   520  010C                     	;# 
   521  010D                     	;# 
   522  010E                     	;# 
   523  010F                     	;# 
   524  0185                     	;# 
   525  0187                     	;# 
   526  0188                     	;# 
   527  0189                     	;# 
   528  018C                     	;# 
   529  018D                     	;# 
   530  0000                     	;# 
   531  0001                     	;# 
   532  0002                     	;# 
   533  0003                     	;# 
   534  0004                     	;# 
   535  0005                     	;# 
   536  0006                     	;# 
   537  0007                     	;# 
   538  0009                     	;# 
   539  000A                     	;# 
   540  000B                     	;# 
   541  000C                     	;# 
   542  000D                     	;# 
   543  000E                     	;# 
   544  000E                     	;# 
   545  000F                     	;# 
   546  0010                     	;# 
   547  0011                     	;# 
   548  0012                     	;# 
   549  0013                     	;# 
   550  0014                     	;# 
   551  0015                     	;# 
   552  0015                     	;# 
   553  0016                     	;# 
   554  0017                     	;# 
   555  0018                     	;# 
   556  0019                     	;# 
   557  001A                     	;# 
   558  001B                     	;# 
   559  001B                     	;# 
   560  001C                     	;# 
   561  001D                     	;# 
   562  001E                     	;# 
   563  001F                     	;# 
   564  0081                     	;# 
   565  0085                     	;# 
   566  0086                     	;# 
   567  0087                     	;# 
   568  0089                     	;# 
   569  008C                     	;# 
   570  008D                     	;# 
   571  008E                     	;# 
   572  008F                     	;# 
   573  0090                     	;# 
   574  0091                     	;# 
   575  0092                     	;# 
   576  0093                     	;# 
   577  0093                     	;# 
   578  0093                     	;# 
   579  0094                     	;# 
   580  0095                     	;# 
   581  0096                     	;# 
   582  0097                     	;# 
   583  0098                     	;# 
   584  0099                     	;# 
   585  009A                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  009F                     	;# 
   591  0105                     	;# 
   592  0107                     	;# 
   593  0108                     	;# 
   594  0109                     	;# 
   595  010C                     	;# 
   596  010C                     	;# 
   597  010D                     	;# 
   598  010E                     	;# 
   599  010F                     	;# 
   600  0185                     	;# 
   601  0187                     	;# 
   602  0188                     	;# 
   603  0189                     	;# 
   604  018C                     	;# 
   605  018D                     	;# 
   606  0000                     	;# 
   607  0001                     	;# 
   608  0002                     	;# 
   609  0003                     	;# 
   610  0004                     	;# 
   611  0005                     	;# 
   612  0006                     	;# 
   613  0007                     	;# 
   614  0009                     	;# 
   615  000A                     	;# 
   616  000B                     	;# 
   617  000C                     	;# 
   618  000D                     	;# 
   619  000E                     	;# 
   620  000E                     	;# 
   621  000F                     	;# 
   622  0010                     	;# 
   623  0011                     	;# 
   624  0012                     	;# 
   625  0013                     	;# 
   626  0014                     	;# 
   627  0015                     	;# 
   628  0015                     	;# 
   629  0016                     	;# 
   630  0017                     	;# 
   631  0018                     	;# 
   632  0019                     	;# 
   633  001A                     	;# 
   634  001B                     	;# 
   635  001B                     	;# 
   636  001C                     	;# 
   637  001D                     	;# 
   638  001E                     	;# 
   639  001F                     	;# 
   640  0081                     	;# 
   641  0085                     	;# 
   642  0086                     	;# 
   643  0087                     	;# 
   644  0089                     	;# 
   645  008C                     	;# 
   646  008D                     	;# 
   647  008E                     	;# 
   648  008F                     	;# 
   649  0090                     	;# 
   650  0091                     	;# 
   651  0092                     	;# 
   652  0093                     	;# 
   653  0093                     	;# 
   654  0093                     	;# 
   655  0094                     	;# 
   656  0095                     	;# 
   657  0096                     	;# 
   658  0097                     	;# 
   659  0098                     	;# 
   660  0099                     	;# 
   661  009A                     	;# 
   662  009B                     	;# 
   663  009C                     	;# 
   664  009D                     	;# 
   665  009E                     	;# 
   666  009F                     	;# 
   667  0105                     	;# 
   668  0107                     	;# 
   669  0108                     	;# 
   670  0109                     	;# 
   671  010C                     	;# 
   672  010C                     	;# 
   673  010D                     	;# 
   674  010E                     	;# 
   675  010F                     	;# 
   676  0185                     	;# 
   677  0187                     	;# 
   678  0188                     	;# 
   679  0189                     	;# 
   680  018C                     	;# 
   681  018D                     	;# 
   682  0000                     	;# 
   683  0001                     	;# 
   684  0002                     	;# 
   685  0003                     	;# 
   686  0004                     	;# 
   687  0005                     	;# 
   688  0006                     	;# 
   689  0007                     	;# 
   690  0009                     	;# 
   691  000A                     	;# 
   692  000B                     	;# 
   693  000C                     	;# 
   694  000D                     	;# 
   695  000E                     	;# 
   696  000E                     	;# 
   697  000F                     	;# 
   698  0010                     	;# 
   699  0011                     	;# 
   700  0012                     	;# 
   701  0013                     	;# 
   702  0014                     	;# 
   703  0015                     	;# 
   704  0015                     	;# 
   705  0016                     	;# 
   706  0017                     	;# 
   707  0018                     	;# 
   708  0019                     	;# 
   709  001A                     	;# 
   710  001B                     	;# 
   711  001B                     	;# 
   712  001C                     	;# 
   713  001D                     	;# 
   714  001E                     	;# 
   715  001F                     	;# 
   716  0081                     	;# 
   717  0085                     	;# 
   718  0086                     	;# 
   719  0087                     	;# 
   720  0089                     	;# 
   721  008C                     	;# 
   722  008D                     	;# 
   723  008E                     	;# 
   724  008F                     	;# 
   725  0090                     	;# 
   726  0091                     	;# 
   727  0092                     	;# 
   728  0093                     	;# 
   729  0093                     	;# 
   730  0093                     	;# 
   731  0094                     	;# 
   732  0095                     	;# 
   733  0096                     	;# 
   734  0097                     	;# 
   735  0098                     	;# 
   736  0099                     	;# 
   737  009A                     	;# 
   738  009B                     	;# 
   739  009C                     	;# 
   740  009D                     	;# 
   741  009E                     	;# 
   742  009F                     	;# 
   743  0105                     	;# 
   744  0107                     	;# 
   745  0108                     	;# 
   746  0109                     	;# 
   747  010C                     	;# 
   748  010C                     	;# 
   749  010D                     	;# 
   750  010E                     	;# 
   751  010F                     	;# 
   752  0185                     	;# 
   753  0187                     	;# 
   754  0188                     	;# 
   755  0189                     	;# 
   756  018C                     	;# 
   757  018D                     	;# 
   758  0000                     	;# 
   759  0001                     	;# 
   760  0002                     	;# 
   761  0003                     	;# 
   762  0004                     	;# 
   763  0005                     	;# 
   764  0006                     	;# 
   765  0007                     	;# 
   766  0009                     	;# 
   767  000A                     	;# 
   768  000B                     	;# 
   769  000C                     	;# 
   770  000D                     	;# 
   771  000E                     	;# 
   772  000E                     	;# 
   773  000F                     	;# 
   774  0010                     	;# 
   775  0011                     	;# 
   776  0012                     	;# 
   777  0013                     	;# 
   778  0014                     	;# 
   779  0015                     	;# 
   780  0015                     	;# 
   781  0016                     	;# 
   782  0017                     	;# 
   783  0018                     	;# 
   784  0019                     	;# 
   785  001A                     	;# 
   786  001B                     	;# 
   787  001B                     	;# 
   788  001C                     	;# 
   789  001D                     	;# 
   790  001E                     	;# 
   791  001F                     	;# 
   792  0081                     	;# 
   793  0085                     	;# 
   794  0086                     	;# 
   795  0087                     	;# 
   796  0089                     	;# 
   797  008C                     	;# 
   798  008D                     	;# 
   799  008E                     	;# 
   800  008F                     	;# 
   801  0090                     	;# 
   802  0091                     	;# 
   803  0092                     	;# 
   804  0093                     	;# 
   805  0093                     	;# 
   806  0093                     	;# 
   807  0094                     	;# 
   808  0095                     	;# 
   809  0096                     	;# 
   810  0097                     	;# 
   811  0098                     	;# 
   812  0099                     	;# 
   813  009A                     	;# 
   814  009B                     	;# 
   815  009C                     	;# 
   816  009D                     	;# 
   817  009E                     	;# 
   818  009F                     	;# 
   819  0105                     	;# 
   820  0107                     	;# 
   821  0108                     	;# 
   822  0109                     	;# 
   823  010C                     	;# 
   824  010C                     	;# 
   825  010D                     	;# 
   826  010E                     	;# 
   827  010F                     	;# 
   828  0185                     	;# 
   829  0187                     	;# 
   830  0188                     	;# 
   831  0189                     	;# 
   832  018C                     	;# 
   833  018D                     	;# 
   834  0000                     	;# 
   835  0001                     	;# 
   836  0002                     	;# 
   837  0003                     	;# 
   838  0004                     	;# 
   839  0005                     	;# 
   840  0006                     	;# 
   841  0007                     	;# 
   842  0009                     	;# 
   843  000A                     	;# 
   844  000B                     	;# 
   845  000C                     	;# 
   846  000D                     	;# 
   847  000E                     	;# 
   848  000E                     	;# 
   849  000F                     	;# 
   850  0010                     	;# 
   851  0011                     	;# 
   852  0012                     	;# 
   853  0013                     	;# 
   854  0014                     	;# 
   855  0015                     	;# 
   856  0015                     	;# 
   857  0016                     	;# 
   858  0017                     	;# 
   859  0018                     	;# 
   860  0019                     	;# 
   861  001A                     	;# 
   862  001B                     	;# 
   863  001B                     	;# 
   864  001C                     	;# 
   865  001D                     	;# 
   866  001E                     	;# 
   867  001F                     	;# 
   868  0081                     	;# 
   869  0085                     	;# 
   870  0086                     	;# 
   871  0087                     	;# 
   872  0089                     	;# 
   873  008C                     	;# 
   874  008D                     	;# 
   875  008E                     	;# 
   876  008F                     	;# 
   877  0090                     	;# 
   878  0091                     	;# 
   879  0092                     	;# 
   880  0093                     	;# 
   881  0093                     	;# 
   882  0093                     	;# 
   883  0094                     	;# 
   884  0095                     	;# 
   885  0096                     	;# 
   886  0097                     	;# 
   887  0098                     	;# 
   888  0099                     	;# 
   889  009A                     	;# 
   890  009B                     	;# 
   891  009C                     	;# 
   892  009D                     	;# 
   893  009E                     	;# 
   894  009F                     	;# 
   895  0105                     	;# 
   896  0107                     	;# 
   897  0108                     	;# 
   898  0109                     	;# 
   899  010C                     	;# 
   900  010C                     	;# 
   901  010D                     	;# 
   902  010E                     	;# 
   903  010F                     	;# 
   904  0185                     	;# 
   905  0187                     	;# 
   906  0188                     	;# 
   907  0189                     	;# 
   908  018C                     	;# 
   909  018D                     	;# 
   910  0000                     	;# 
   911  0001                     	;# 
   912  0002                     	;# 
   913  0003                     	;# 
   914  0004                     	;# 
   915  0005                     	;# 
   916  0006                     	;# 
   917  0007                     	;# 
   918  0009                     	;# 
   919  000A                     	;# 
   920  000B                     	;# 
   921  000C                     	;# 
   922  000D                     	;# 
   923  000E                     	;# 
   924  000E                     	;# 
   925  000F                     	;# 
   926  0010                     	;# 
   927  0011                     	;# 
   928  0012                     	;# 
   929  0013                     	;# 
   930  0014                     	;# 
   931  0015                     	;# 
   932  0015                     	;# 
   933  0016                     	;# 
   934  0017                     	;# 
   935  0018                     	;# 
   936  0019                     	;# 
   937  001A                     	;# 
   938  001B                     	;# 
   939  001B                     	;# 
   940  001C                     	;# 
   941  001D                     	;# 
   942  001E                     	;# 
   943  001F                     	;# 
   944  0081                     	;# 
   945  0085                     	;# 
   946  0086                     	;# 
   947  0087                     	;# 
   948  0089                     	;# 
   949  008C                     	;# 
   950  008D                     	;# 
   951  008E                     	;# 
   952  008F                     	;# 
   953  0090                     	;# 
   954  0091                     	;# 
   955  0092                     	;# 
   956  0093                     	;# 
   957  0093                     	;# 
   958  0093                     	;# 
   959  0094                     	;# 
   960  0095                     	;# 
   961  0096                     	;# 
   962  0097                     	;# 
   963  0098                     	;# 
   964  0099                     	;# 
   965  009A                     	;# 
   966  009B                     	;# 
   967  009C                     	;# 
   968  009D                     	;# 
   969  009E                     	;# 
   970  009F                     	;# 
   971  0105                     	;# 
   972  0107                     	;# 
   973  0108                     	;# 
   974  0109                     	;# 
   975  010C                     	;# 
   976  010C                     	;# 
   977  010D                     	;# 
   978  010E                     	;# 
   979  010F                     	;# 
   980  0185                     	;# 
   981  0187                     	;# 
   982  0188                     	;# 
   983  0189                     	;# 
   984  018C                     	;# 
   985  018D                     	;# 
   986  0000                     	;# 
   987  0001                     	;# 
   988  0002                     	;# 
   989  0003                     	;# 
   990  0004                     	;# 
   991  0005                     	;# 
   992  0006                     	;# 
   993  0007                     	;# 
   994  0009                     	;# 
   995  000A                     	;# 
   996  000B                     	;# 
   997  000C                     	;# 
   998  000D                     	;# 
   999  000E                     	;# 
  1000  000E                     	;# 
  1001  000F                     	;# 
  1002  0010                     	;# 
  1003  0011                     	;# 
  1004  0012                     	;# 
  1005  0013                     	;# 
  1006  0014                     	;# 
  1007  0015                     	;# 
  1008  0015                     	;# 
  1009  0016                     	;# 
  1010  0017                     	;# 
  1011  0018                     	;# 
  1012  0019                     	;# 
  1013  001A                     	;# 
  1014  001B                     	;# 
  1015  001B                     	;# 
  1016  001C                     	;# 
  1017  001D                     	;# 
  1018  001E                     	;# 
  1019  001F                     	;# 
  1020  0081                     	;# 
  1021  0085                     	;# 
  1022  0086                     	;# 
  1023  0087                     	;# 
  1024  0089                     	;# 
  1025  008C                     	;# 
  1026  008D                     	;# 
  1027  008E                     	;# 
  1028  008F                     	;# 
  1029  0090                     	;# 
  1030  0091                     	;# 
  1031  0092                     	;# 
  1032  0093                     	;# 
  1033  0093                     	;# 
  1034  0093                     	;# 
  1035  0094                     	;# 
  1036  0095                     	;# 
  1037  0096                     	;# 
  1038  0097                     	;# 
  1039  0098                     	;# 
  1040  0099                     	;# 
  1041  009A                     	;# 
  1042  009B                     	;# 
  1043  009C                     	;# 
  1044  009D                     	;# 
  1045  009E                     	;# 
  1046  009F                     	;# 
  1047  0105                     	;# 
  1048  0107                     	;# 
  1049  0108                     	;# 
  1050  0109                     	;# 
  1051  010C                     	;# 
  1052  010C                     	;# 
  1053  010D                     	;# 
  1054  010E                     	;# 
  1055  010F                     	;# 
  1056  0185                     	;# 
  1057  0187                     	;# 
  1058  0188                     	;# 
  1059  0189                     	;# 
  1060  018C                     	;# 
  1061  018D                     	;# 
  1062                           
  1063                           	psect	idataBANK3
  1064  0000                     __pidataBANK3:	
  1065                           
  1066                           	psect	strings
  1067  1800                     __pstrings:	
  1068  1800                     stringtab:	
  1069  1800                     __stringtab:	
  1070                           
  1071                           ;	String table - string pointers are 1 byte each
  1072  1800  1BFF               	btfsc	btemp+1,7
  1073  1801  280A               	ljmp	stringcode
  1074  1802  1383               	bcf	3,7
  1075  1803  187F               	btfsc	btemp+1,0
  1076  1804  1783               	bsf	3,7
  1077  1805  0800               	movf	0,w
  1078  1806  0A84               	incf	4,f
  1079  1807  1903               	skipnz
  1080  1808  0AFF               	incf	btemp+1,f
  1081  1809  0008               	return
  1082  180A                     stringcode:	
  1083  180A                     stringdir:	
  1084  180A  3018               	movlw	high stringdir
  1085  180B  008A               	movwf	10
  1086  180C  0804               	movf	4,w
  1087  180D  0A84               	incf	4,f
  1088  180E  0782               	addwf	2,f
  1089  180F                     __stringbase:	
  1090  180F  3400               	retlw	0
  1091  1810                     __end_of__stringtab:	
  1092  1810                     log@coeff:	
  1093  1810  3400               	retlw	0
  1094  1811  3400               	retlw	0
  1095  1812  3400               	retlw	0
  1096  1813  3400               	retlw	0
  1097  1814  34C4               	retlw	196
  1098  1815  34FF               	retlw	255
  1099  1816  347F               	retlw	127
  1100  1817  343F               	retlw	63
  1101  1818  3480               	retlw	128
  1102  1819  34EF               	retlw	239
  1103  181A  34FF               	retlw	255
  1104  181B  34BE               	retlw	190
  1105  181C  3490               	retlw	144
  1106  181D  34E1               	retlw	225
  1107  181E  34A9               	retlw	169
  1108  181F  343E               	retlw	62
  1109  1820  34EC               	retlw	236
  1110  1821  3482               	retlw	130
  1111  1822  3476               	retlw	118
  1112  1823  34BE               	retlw	190
  1113  1824  3482               	retlw	130
  1114  1825  34AD               	retlw	173
  1115  1826  342B               	retlw	43
  1116  1827  343E               	retlw	62
  1117  1828  340E               	retlw	14
  1118  1829  343C               	retlw	60
  1119  182A  34C3               	retlw	195
  1120  182B  34BD               	retlw	189
  1121  182C  3487               	retlw	135
  1122  182D  34D1               	retlw	209
  1123  182E  3413               	retlw	19
  1124  182F  343D               	retlw	61
  1125  1830  3441               	retlw	65
  1126  1831  3478               	retlw	120
  1127  1832  34D3               	retlw	211
  1128  1833  34BB               	retlw	187
  1129  1834                     __end_oflog@coeff:	
  1130  1834                     _BETA:	
  1131                           
  1132                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1133  1834  3400               	retlw	0
  1134  1835  3460               	retlw	96
  1135  1836  3478               	retlw	120
  1136  1837  3445               	retlw	69
  1137  1838                     __end_of_BETA:	
  1138  1838                     _BALANCE_RESISTOR:	
  1139                           
  1140                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1141  1838  3400               	retlw	0
  1142  1839  3440               	retlw	64
  1143  183A  341C               	retlw	28
  1144  183B  3446               	retlw	70
  1145  183C                     __end_of_BALANCE_RESISTOR:	
  1146  0019                     _TXREG	set	25
  1147  0018                     _RCSTAbits	set	24
  1148  001A                     _RCREG	set	26
  1149  000E                     _TMR1L	set	14
  1150  000F                     _TMR1H	set	15
  1151  000C                     _PIR1bits	set	12
  1152  001E                     _ADRESH	set	30
  1153  001F                     _ADCON0bits	set	31
  1154  0005                     _PORTAbits	set	5
  1155  0007                     _PORTCbits	set	7
  1156  0010                     _T1CON	set	16
  1157  000B                     _INTCONbits	set	11
  1158  0006                     _PORTBbits	set	6
  1159  0009                     _PORTE	set	9
  1160  0007                     _PORTC	set	7
  1161  0005                     _PORTA	set	5
  1162  0013                     _SSPBUF	set	19
  1163  0014                     _SSPCON	set	20
  1164  0006                     _PORTB	set	6
  1165  00C4                     _CREN	set	196
  1166  0081                     _TMR1CS	set	129
  1167  0085                     _T1CKPS1	set	133
  1168  0084                     _T1CKPS0	set	132
  1169  008C                     _PIE1bits	set	140
  1170  0099                     _SPBRG	set	153
  1171  0098                     _TXSTAbits	set	152
  1172  009E                     _ADRESL	set	158
  1173  009F                     _ADCON1bits	set	159
  1174  009F                     _ADCON1	set	159
  1175  0095                     _WPUB	set	149
  1176  0081                     _OPTION_REGbits	set	129
  1177  0089                     _TRISE	set	137
  1178  0087                     _TRISC	set	135
  1179  0086                     _TRISB	set	134
  1180  0085                     _TRISA	set	133
  1181  008F                     _OSCCONbits	set	143
  1182  0094                     _SSPSTAT	set	148
  1183  0093                     _SSPADD	set	147
  1184  0091                     _SSPCON2	set	145
  1185  043F                     _TRISC7	set	1087
  1186  043E                     _TRISC6	set	1086
  1187  0460                     _TMR1IE	set	1120
  1188  048C                     _ACKEN	set	1164
  1189  048D                     _ACKDT	set	1165
  1190  048B                     _RCEN	set	1163
  1191  048A                     _PEN	set	1162
  1192  0489                     _RSEN	set	1161
  1193  0488                     _SEN	set	1160
  1194  043C                     _TRISC4	set	1084
  1195  043B                     _TRISC3	set	1083
  1196  010C                     _EEDATA	set	268
  1197  010D                     _EEADR	set	269
  1198  0187                     _BAUDCTLbits	set	391
  1199  018D                     _EECON2	set	397
  1200  018C                     _EECON1bits	set	396
  1201  0189                     _ANSELH	set	393
  1202  0188                     _ANSEL	set	392
  1203  183C                     STR_1:	
  1204  183C  3476               	retlw	118	;'v'
  1205  183D  3431               	retlw	49	;'1'
  1206  183E  342E               	retlw	46	;'.'
  1207  183F  3430               	retlw	48	;'0'
  1208  1840  342E               	retlw	46	;'.'
  1209  1841  3435               	retlw	53	;'5'
  1210  1842  3400               	retlw	0
  1211  1843                     STR_8:	
  1212  1843  344F               	retlw	79	;'O'
  1213  1844  344B               	retlw	75	;'K'
  1214  1845  3400               	retlw	0
  1215  1846                     STR_3:	
  1216  1846  3430               	retlw	48	;'0'
  1217  1847  3400               	retlw	0
  1218  1848                     STR_4:	
  1219  1848  343A               	retlw	58	;':'
  1220  1849  3400               	retlw	0
  1221  1847                     
  1222                           ; #config settings
  1223  0000                     
  1224                           	psect	cinit
  1225  0015                     start_initialization:	
  1226  0015                     __initialization:	
  1227                           
  1228                           ; Initialize objects allocated to BANK3
  1229  0015  1683               	bsf	3,5	;RP0=1, select bank3
  1230  0016  1703               	bsf	3,6	;RP1=1, select bank3
  1231                           
  1232                           ;initializer for _RL1Status
  1233  0017  3001               	movlw	1
  1234  0018  00DD               	movwf	__pdataBANK3& (0+127)
  1235                           
  1236                           ;initializer for _RL0Status
  1237  0019  00DE               	movwf	(__pdataBANK3+1)& (0+127)
  1238  001A  3090               	movlw	low __pbssBANK3
  1239                           
  1240                           ; Clear objects allocated to BANK3
  1241  001B  1783               	bsf	3,7	;select IRP bank2
  1242  001C  0084               	movwf	4
  1243  001D  30DD               	movlw	low (__pbssBANK3+77)
  1244  001E  160A  118A  2008  120A  118A  	fcall	clear_ram0
  1245                           
  1246                           ; Clear objects allocated to BANK2
  1247  0023  3010               	movlw	low __pbssBANK2
  1248  0024  0084               	movwf	4
  1249  0025  305A               	movlw	low (__pbssBANK2+74)
  1250  0026  160A  118A  2008   	fcall	clear_ram0
  1251                           
  1252                           ; Clear objects allocated to BANK1
  1253  0029  1303               	bcf	3,6	;RP1=0, select bank1
  1254  002A  01EF               	clrf	__pbssBANK1& (0+127)
  1255                           
  1256                           ; Clear objects allocated to COMMON
  1257  002B  01F0               	clrf	__pbssCOMMON& (0+127)
  1258  002C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1259  002D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1260  002E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1261  002F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1262  0030  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1263  0031  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1264  0032                     end_of_initialization:	
  1265                           ;End of C runtime variable initialization code
  1266                           
  1267  0032                     __end_of__initialization:	
  1268  0032  0183               	clrf	3
  1269  0033  120A  118A  2EEB   	ljmp	l7972	;jump to C main() function
  1270                           
  1271                           	psect	bssCOMMON
  1272  0070                     __pbssCOMMON:	
  1273  0070                     _SetPoint0:	
  1274  0070                     	ds	4
  1275  0074                     _TempoCNT_1:	
  1276  0074                     	ds	1
  1277  0075                     _hora:	
  1278  0075                     	ds	1
  1279  0076                     _segundo:	
  1280  0076                     	ds	1
  1281                           
  1282                           	psect	bssBANK1
  1283  00EF                     __pbssBANK1:	
  1284  00EF                     _TempoCNT_0:	
  1285  00EF                     	ds	1
  1286                           
  1287                           	psect	bssBANK3
  1288  0190                     __pbssBANK3:	
  1289  0190                     _Temperatura1:	
  1290  0190                     	ds	4
  1291  0194                     _Temperatura0:	
  1292  0194                     	ds	4
  1293  0198                     _SetPoint1:	
  1294  0198                     	ds	4
  1295  019C                     _Histerese0:	
  1296  019C                     	ds	4
  1297  01A0                     _tempodecorrido:	
  1298  01A0                     	ds	2
  1299  01A2                     _count:	
  1300  01A2                     	ds	2
  1301  01A4                     _header:	
  1302  01A4                     	ds	2
  1303  01A6                     _Status1:	
  1304  01A6                     	ds	2
  1305  01A8                     _Status0:	
  1306  01A8                     	ds	2
  1307  01AA                     _milisegundo:	
  1308  01AA                     	ds	2
  1309  01AC                     _Delay_Led_Usart:	
  1310  01AC                     	ds	2
  1311  01AE                     _Delay_Led_Tmr0:	
  1312  01AE                     	ds	2
  1313  01B0                     _Delay_Led_Memory:	
  1314  01B0                     	ds	2
  1315  01B2                     _pointer:	
  1316  01B2                     	ds	1
  1317  01B3                     _destino:	
  1318  01B3                     	ds	1
  1319  01B4                     _Board_Number:	
  1320  01B4                     	ds	1
  1321  01B5                     _canal:	
  1322  01B5                     	ds	1
  1323  01B6                     _TempoOFF_1:	
  1324  01B6                     	ds	1
  1325  01B7                     _TempoON_1:	
  1326  01B7                     	ds	1
  1327  01B8                     _Histerese1:	
  1328  01B8                     	ds	1
  1329  01B9                     _TempoOFF_0:	
  1330  01B9                     	ds	1
  1331  01BA                     _TempoON_0:	
  1332  01BA                     	ds	1
  1333  01BB                     _minuto:	
  1334  01BB                     	ds	1
  1335  01BC                     _generic_status:	
  1336  01BC                     	ds	1
  1337  01BD                     _texto:	
  1338  01BD                     	ds	16
  1339  01CD                     _usart_protocol:	
  1340  01CD                     	ds	16
  1341                           
  1342                           	psect	dataBANK3
  1343  01DD                     __pdataBANK3:	
  1344  01DD                     _RL1Status:	
  1345  01DD                     	ds	1
  1346  01DE                     _RL0Status:	
  1347  01DE                     	ds	1
  1348                           
  1349                           	psect	bssBANK2
  1350  0110                     __pbssBANK2:	
  1351  0110                     _usart_buffer:	
  1352  0110                     	ds	42
  1353  013A                     _buffer:	
  1354  013A                     	ds	32
  1355                           
  1356                           	psect	clrtext
  1357  1008                     clear_ram0:	
  1358                           ;	Called with FSR containing the base address, and
  1359                           ;	W with the last address+1
  1360                           
  1361  1008  0064               	clrwdt	;clear the watchdog before getting into this loop
  1362  1009                     clrloop0:	
  1363  1009  0180               	clrf	0	;clear RAM location pointed to by FSR
  1364  100A  0A84               	incf	4,f	;increment pointer
  1365  100B  0604               	xorwf	4,w	;XOR with final address
  1366  100C  1903               	btfsc	3,2	;have we reached the end yet?
  1367  100D  3400               	retlw	0	;all done for this memory range, return
  1368  100E  0604               	xorwf	4,w	;XOR again to restore value
  1369  100F  2809               	goto	clrloop0	;do the next byte
  1370                           
  1371                           	psect	cstackBANK1
  1372  00A0                     __pcstackBANK1:	
  1373  00A0                     ?_eval_poly:	
  1374  00A0                     ?___fldiv:	
  1375                           ; 4 bytes @ 0x0
  1376                           
  1377  00A0                     ___fldiv@a:	
  1378                           ; 4 bytes @ 0x0
  1379                           
  1380  00A0                     eval_poly@x:	
  1381                           ; 4 bytes @ 0x0
  1382                           
  1383                           
  1384                           ; 4 bytes @ 0x0
  1385  00A0                     	ds	4
  1386  00A4                     eval_poly@d:	
  1387  00A4                     ___fldiv@b:	
  1388                           ; 1 bytes @ 0x4
  1389                           
  1390                           
  1391                           ; 4 bytes @ 0x4
  1392  00A4                     	ds	1
  1393  00A5                     eval_poly@n:	
  1394                           
  1395                           ; 2 bytes @ 0x5
  1396  00A5                     	ds	2
  1397  00A7                     ??_eval_poly:	
  1398                           
  1399                           ; 1 bytes @ 0x7
  1400  00A7                     	ds	1
  1401  00A8                     ??___fldiv:	
  1402                           
  1403                           ; 1 bytes @ 0x8
  1404  00A8                     	ds	4
  1405  00AC                     ___fldiv@rem:	
  1406  00AC                     eval_poly@res:	
  1407                           ; 4 bytes @ 0xC
  1408                           
  1409                           
  1410                           ; 4 bytes @ 0xC
  1411  00AC                     	ds	4
  1412  00B0                     ?_log:	
  1413  00B0                     ___fldiv@sign:	
  1414                           ; 4 bytes @ 0x10
  1415                           
  1416  00B0                     log@x:	
  1417                           ; 1 bytes @ 0x10
  1418                           
  1419                           
  1420                           ; 4 bytes @ 0x10
  1421  00B0                     	ds	1
  1422  00B1                     ___fldiv@new_exp:	
  1423                           
  1424                           ; 2 bytes @ 0x11
  1425  00B1                     	ds	2
  1426  00B3                     ___fldiv@grs:	
  1427                           
  1428                           ; 4 bytes @ 0x13
  1429  00B3                     	ds	4
  1430  00B7                     ___fldiv@bexp:	
  1431                           
  1432                           ; 1 bytes @ 0x17
  1433  00B7                     	ds	1
  1434  00B8                     ___fldiv@aexp:	
  1435                           
  1436                           ; 1 bytes @ 0x18
  1437  00B8                     	ds	1
  1438  00B9                     ??_Load_Work:	
  1439  00B9                     ?_ADC_Read_NTC:	
  1440                           ; 1 bytes @ 0x19
  1441                           
  1442                           
  1443                           ; 4 bytes @ 0x19
  1444  00B9                     	ds	4
  1445  00BD                     Decodify_Command@hh:	
  1446                           
  1447                           ; 10 bytes @ 0x1D
  1448  00BD                     	ds	1
  1449  00BE                     ADC_Read_NTC@calc:	
  1450                           
  1451                           ; 4 bytes @ 0x1E
  1452  00BE                     	ds	4
  1453  00C2                     ADC_Read_NTC@B:	
  1454                           
  1455                           ; 2 bytes @ 0x22
  1456  00C2                     	ds	2
  1457  00C4                     ADC_Read_NTC@resistencia:	
  1458                           
  1459                           ; 4 bytes @ 0x24
  1460  00C4                     	ds	3
  1461  00C7                     Decodify_Command@mm:	
  1462                           
  1463                           ; 10 bytes @ 0x27
  1464  00C7                     	ds	1
  1465  00C8                     ADC_Read_NTC@i:	
  1466                           
  1467                           ; 1 bytes @ 0x28
  1468  00C8                     	ds	1
  1469  00C9                     ADC_Read_NTC@value:	
  1470                           
  1471                           ; 2 bytes @ 0x29
  1472  00C9                     	ds	2
  1473  00CB                     ADC_Read_NTC@temperatura:	
  1474                           
  1475                           ; 4 bytes @ 0x2B
  1476  00CB                     	ds	4
  1477  00CF                     ??_mediatemperaturaNTC:	
  1478                           
  1479                           ; 1 bytes @ 0x2F
  1480  00CF                     	ds	1
  1481  00D0                     _mediatemperaturaNTC$2292:	
  1482                           
  1483                           ; 4 bytes @ 0x30
  1484  00D0                     	ds	1
  1485  00D1                     Decodify_Command@ss:	
  1486                           
  1487                           ; 10 bytes @ 0x31
  1488  00D1                     	ds	3
  1489  00D4                     mediatemperaturaNTC@canal:	
  1490                           
  1491                           ; 1 bytes @ 0x34
  1492  00D4                     	ds	1
  1493  00D5                     mediatemperaturaNTC@Temp:	
  1494                           
  1495                           ; 4 bytes @ 0x35
  1496  00D5                     	ds	4
  1497  00D9                     mediatemperaturaNTC@i:	
  1498                           
  1499                           ; 1 bytes @ 0x39
  1500  00D9                     	ds	2
  1501  00DB                     Decodify_Command@dados:	
  1502                           
  1503                           ; 2 bytes @ 0x3B
  1504  00DB                     	ds	2
  1505  00DD                     Decodify_Command@add:	
  1506                           
  1507                           ; 1 bytes @ 0x3D
  1508  00DD                     	ds	1
  1509  00DE                     Decodify_Command@tempint:	
  1510                           
  1511                           ; 2 bytes @ 0x3E
  1512  00DE                     	ds	2
  1513  00E0                     Decodify_Command@OutPut:	
  1514                           
  1515                           ; 4 bytes @ 0x40
  1516  00E0                     	ds	4
  1517  00E4                     Decodify_Command@tempchar:	
  1518                           
  1519                           ; 1 bytes @ 0x44
  1520  00E4                     	ds	1
  1521  00E5                     Decodify_Command@sizedata:	
  1522                           
  1523                           ; 1 bytes @ 0x45
  1524  00E5                     	ds	1
  1525  00E6                     Decodify_Command@add_24LCxxxx:	
  1526                           
  1527                           ; 4 bytes @ 0x46
  1528  00E6                     	ds	4
  1529  00EA                     ??_main:	
  1530                           
  1531                           ; 1 bytes @ 0x4A
  1532  00EA                     	ds	3
  1533  00ED                     main@reset:	
  1534                           
  1535                           ; 2 bytes @ 0x4D
  1536  00ED                     	ds	2
  1537                           
  1538                           	psect	cstackCOMMON
  1539  0077                     __pcstackCOMMON:	
  1540  0077                     ?_ADC_init:	
  1541  0077                     ?_Load_Work:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0077                     ?_mediatemperaturaNTC:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0077                     ?_Auto_Relay0:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0077                     ?_Auto_Relay1:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0077                     ?_Decodify_Command:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0077                     ?_USART_to_Protocol:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0077                     ?_Send_To_MB:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0077                     ?_Send_Reply_OK:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0077                     ?_EEPROM_Read_Byte:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0077                     ?_USART_putc:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0077                     ?_Package_Usart_is_for_me:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0077                     ?_Rele0Ligado:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0077                     ?_Rele1Ligado:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0077                     ?_Rele0Desligado:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0077                     ?_Rele1Desligado:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0077                     ?_I2C_Master_Wait:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0077                     ?_I2C_Master_Start:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0077                     ?_I2C_Master_RepeatedStart:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0077                     ?_I2C_Master_Stop:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0077                     ?_main:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0077                     ?_isr:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0077                     ??_isr:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0077                     ADC_Read_NTC@canal:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610                           
  1611                           ; 1 bytes @ 0x0
  1612  0077                     	ds	4
  1613  007B                     isr@tempo:	
  1614                           
  1615                           ; 2 bytes @ 0x4
  1616  007B                     	ds	2
  1617                           
  1618                           	psect	cstackBANK0
  1619  0020                     __pcstackBANK0:	
  1620  0020                     ?___fleq:	
  1621  0020                     ?_my_delay_ms_WDT:	
  1622                           ; 1 bit 
  1623                           
  1624  0020                     ??_ADC_init:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0020                     ?_USART_init:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0020                     ??_USART_to_Protocol:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0020                     ?_EEPROM_Write_Byte:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0020                     ??_EEPROM_Read_Byte:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0020                     ??_USART_putc:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0020                     ?_strcpy:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0020                     ?_strcat:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648  0020                     ?_my_delay_ms:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0020                     ??_Package_Usart_is_for_me:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654  0020                     ??_Rele0Ligado:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0020                     ??_Rele1Ligado:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0020                     ??_Rele0Desligado:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0020                     ??_Rele1Desligado:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0020                     ?_PROCULUS_Delay:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669  0020                     ??_I2C_Master_Wait:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672  0020                     ??_I2C_Master_Start:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675  0020                     ??_I2C_Master_RepeatedStart:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0020                     ??_I2C_Master_Stop:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0020                     ?_I2C_Master_Write:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0020                     ?_strlen:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0020                     ?_captura:	
  1688                           ; 2 bytes @ 0x0
  1689                           
  1690  0020                     ?__Umul8_16:	
  1691                           ; 2 bytes @ 0x0
  1692                           
  1693  0020                     ?_I2C_Master_Read:	
  1694                           ; 2 bytes @ 0x0
  1695                           
  1696  0020                     ?___lwdiv:	
  1697                           ; 2 bytes @ 0x0
  1698                           
  1699  0020                     ?___lwmod:	
  1700                           ; 2 bytes @ 0x0
  1701                           
  1702  0020                     ?___lldiv:	
  1703                           ; 2 bytes @ 0x0
  1704                           
  1705  0020                     ?___fltol:	
  1706                           ; 4 bytes @ 0x0
  1707                           
  1708  0020                     EEPROM_Write_Byte@dado:	
  1709                           ; 4 bytes @ 0x0
  1710                           
  1711  0020                     Package_Usart_is_for_me@retorno:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0020                     USART_putc@value:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0020                     strcpy@from:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0020                     __Umul8_16@multiplicand:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0020                     I2C_Master_Write@d:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0020                     I2C_Master_Read@a:	
  1727                           ; 2 bytes @ 0x0
  1728                           
  1729  0020                     PROCULUS_Delay@tempo_ms:	
  1730                           ; 2 bytes @ 0x0
  1731                           
  1732  0020                     ___lwdiv@divisor:	
  1733                           ; 2 bytes @ 0x0
  1734                           
  1735  0020                     ___lwmod@divisor:	
  1736                           ; 2 bytes @ 0x0
  1737                           
  1738  0020                     strcat@from:	
  1739                           ; 2 bytes @ 0x0
  1740                           
  1741  0020                     my_delay_ms@time:	
  1742                           ; 2 bytes @ 0x0
  1743                           
  1744  0020                     my_delay_ms_WDT@time:	
  1745                           ; 4 bytes @ 0x0
  1746                           
  1747  0020                     USART_init@baudrate:	
  1748                           ; 4 bytes @ 0x0
  1749                           
  1750  0020                     ___lldiv@divisor:	
  1751                           ; 4 bytes @ 0x0
  1752                           
  1753  0020                     ___fleq@ff1:	
  1754                           ; 4 bytes @ 0x0
  1755                           
  1756  0020                     ___fltol@f1:	
  1757                           ; 4 bytes @ 0x0
  1758                           
  1759                           
  1760                           ; 4 bytes @ 0x0
  1761  0020                     	ds	1
  1762  0021                     ??_Send_To_MB:	
  1763  0021                     ?_USART_put_string:	
  1764                           ; 1 bytes @ 0x1
  1765                           
  1766  0021                     ??_EEPROM_Write_Byte:	
  1767                           ; 1 bytes @ 0x1
  1768                           
  1769  0021                     ?_USART_put_buffer:	
  1770                           ; 1 bytes @ 0x1
  1771                           
  1772  0021                     ??_strcpy:	
  1773                           ; 1 bytes @ 0x1
  1774                           
  1775  0021                     Send_To_MB@size:	
  1776                           ; 1 bytes @ 0x1
  1777                           
  1778  0021                     USART_put_buffer@size:	
  1779                           ; 1 bytes @ 0x1
  1780                           
  1781  0021                     USART_put_string@vetor:	
  1782                           ; 2 bytes @ 0x1
  1783                           
  1784                           
  1785                           ; 2 bytes @ 0x1
  1786  0021                     	ds	1
  1787  0022                     ?_EEPROM_24C1025_Write_Buffer:	
  1788  0022                     ?_EEPROM_24C1025_Write_Str:	
  1789                           ; 1 bytes @ 0x2
  1790                           
  1791  0022                     ??_strcat:	
  1792                           ; 1 bytes @ 0x2
  1793                           
  1794  0022                     ??_captura:	
  1795                           ; 1 bytes @ 0x2
  1796                           
  1797  0022                     ??_PROCULUS_Delay:	
  1798                           ; 1 bytes @ 0x2
  1799                           
  1800  0022                     ??_I2C_Master_Write:	
  1801                           ; 1 bytes @ 0x2
  1802                           
  1803  0022                     ??_I2C_Master_Read:	
  1804                           ; 1 bytes @ 0x2
  1805                           
  1806  0022                     EEPROM_Read_Byte@addr:	
  1807                           ; 1 bytes @ 0x2
  1808                           
  1809  0022                     strcpy@to:	
  1810                           ; 1 bytes @ 0x2
  1811                           
  1812  0022                     I2C_Master_Read@temp:	
  1813                           ; 1 bytes @ 0x2
  1814                           
  1815  0022                     USART_to_Protocol@i:	
  1816                           ; 2 bytes @ 0x2
  1817                           
  1818  0022                     ___lwdiv@dividend:	
  1819                           ; 2 bytes @ 0x2
  1820                           
  1821  0022                     ___lwmod@dividend:	
  1822                           ; 2 bytes @ 0x2
  1823                           
  1824  0022                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1825                           ; 2 bytes @ 0x2
  1826                           
  1827  0022                     EEPROM_24C1025_Write_Str@mem_add:	
  1828                           ; 4 bytes @ 0x2
  1829                           
  1830                           
  1831                           ; 4 bytes @ 0x2
  1832  0022                     	ds	1
  1833  0023                     ??_USART_put_string:	
  1834  0023                     ?_EEPROM_Read_String:	
  1835                           ; 1 bytes @ 0x3
  1836                           
  1837  0023                     ??_USART_put_buffer:	
  1838                           ; 1 bytes @ 0x3
  1839                           
  1840  0023                     ??_strlen:	
  1841                           ; 1 bytes @ 0x3
  1842                           
  1843  0023                     ??__Umul8_16:	
  1844                           ; 1 bytes @ 0x3
  1845                           
  1846  0023                     ?_EEPROM_Read_Integer:	
  1847                           ; 1 bytes @ 0x3
  1848                           
  1849  0023                     EEPROM_Write_Byte@addr:	
  1850                           ; 2 bytes @ 0x3
  1851                           
  1852  0023                     EEPROM_Read_String@dado:	
  1853                           ; 1 bytes @ 0x3
  1854                           
  1855  0023                     strcat@cp:	
  1856                           ; 1 bytes @ 0x3
  1857                           
  1858  0023                     strcpy@cp:	
  1859                           ; 1 bytes @ 0x3
  1860                           
  1861  0023                     strlen@cp:	
  1862                           ; 1 bytes @ 0x3
  1863                           
  1864  0023                     USART_put_string@ptr:	
  1865                           ; 1 bytes @ 0x3
  1866                           
  1867  0023                     __Umul8_16@product:	
  1868                           ; 2 bytes @ 0x3
  1869                           
  1870                           
  1871                           ; 2 bytes @ 0x3
  1872  0023                     	ds	1
  1873  0024                     ??_my_delay_ms_WDT:	
  1874  0024                     ??_USART_init:	
  1875                           ; 1 bytes @ 0x4
  1876                           
  1877  0024                     ??_EEPROM_Read_String:	
  1878                           ; 1 bytes @ 0x4
  1879                           
  1880  0024                     ?_EEPROM_24C1025_Read_Buffer:	
  1881                           ; 1 bytes @ 0x4
  1882                           
  1883  0024                     ?_EEPROM_24C1025_Read_Str:	
  1884                           ; 1 bytes @ 0x4
  1885                           
  1886  0024                     ??_my_delay_ms:	
  1887                           ; 1 bytes @ 0x4
  1888                           
  1889  0024                     ??___fltol:	
  1890                           ; 1 bytes @ 0x4
  1891                           
  1892  0024                     ??___lwdiv:	
  1893                           ; 1 bytes @ 0x4
  1894                           
  1895  0024                     ??___lwmod:	
  1896                           ; 1 bytes @ 0x4
  1897                           
  1898  0024                     EEPROM_Write_Byte@last_GIE:	
  1899                           ; 1 bytes @ 0x4
  1900                           
  1901  0024                     EEPROM_Read_String@addr:	
  1902                           ; 1 bytes @ 0x4
  1903                           
  1904  0024                     USART_init@i:	
  1905                           ; 1 bytes @ 0x4
  1906                           
  1907  0024                     USART_to_Protocol@usart_protocol:	
  1908                           ; 1 bytes @ 0x4
  1909                           
  1910  0024                     ___lwdiv@counter:	
  1911                           ; 1 bytes @ 0x4
  1912                           
  1913  0024                     ___lwmod@counter:	
  1914                           ; 1 bytes @ 0x4
  1915                           
  1916  0024                     strcat@to:	
  1917                           ; 1 bytes @ 0x4
  1918                           
  1919  0024                     strlen@s:	
  1920                           ; 1 bytes @ 0x4
  1921                           
  1922  0024                     PROCULUS_Delay@i:	
  1923                           ; 1 bytes @ 0x4
  1924                           
  1925  0024                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1926                           ; 2 bytes @ 0x4
  1927                           
  1928  0024                     EEPROM_24C1025_Read_Str@mem_add:	
  1929                           ; 4 bytes @ 0x4
  1930                           
  1931  0024                     ___lldiv@dividend:	
  1932                           ; 4 bytes @ 0x4
  1933                           
  1934  0024                     ___fleq@ff2:	
  1935                           ; 4 bytes @ 0x4
  1936                           
  1937                           
  1938                           ; 4 bytes @ 0x4
  1939  0024                     	ds	1
  1940  0025                     ?_EEPROM_Write_Integer:	
  1941  0025                     ??_Send_Reply_OK:	
  1942                           ; 1 bytes @ 0x5
  1943                           
  1944  0025                     ?_EEPROM_Write_String:	
  1945                           ; 1 bytes @ 0x5
  1946                           
  1947  0025                     EEPROM_Write_String@dado:	
  1948                           ; 1 bytes @ 0x5
  1949                           
  1950  0025                     EEPROM_Read_String@c:	
  1951                           ; 1 bytes @ 0x5
  1952                           
  1953  0025                     USART_put_buffer@vetor:	
  1954                           ; 1 bytes @ 0x5
  1955                           
  1956  0025                     EEPROM_Write_Integer@dado:	
  1957                           ; 1 bytes @ 0x5
  1958                           
  1959  0025                     ___lwdiv@quotient:	
  1960                           ; 2 bytes @ 0x5
  1961                           
  1962  0025                     __Umul8_16@word_mpld:	
  1963                           ; 2 bytes @ 0x5
  1964                           
  1965                           
  1966                           ; 2 bytes @ 0x5
  1967  0025                     	ds	1
  1968  0026                     ??_EEPROM_Read_Integer:	
  1969  0026                     ??_EEPROM_Write_String:	
  1970                           ; 1 bytes @ 0x6
  1971                           
  1972  0026                     EEPROM_Read_Integer@addr:	
  1973                           ; 1 bytes @ 0x6
  1974                           
  1975  0026                     EEPROM_Write_String@addr:	
  1976                           ; 1 bytes @ 0x6
  1977                           
  1978  0026                     USART_put_buffer@loop:	
  1979                           ; 1 bytes @ 0x6
  1980                           
  1981  0026                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1982                           ; 1 bytes @ 0x6
  1983                           
  1984  0026                     EEPROM_24C1025_Write_Str@data:	
  1985                           ; 1 bytes @ 0x6
  1986                           
  1987  0026                     my_delay_ms@i:	
  1988                           ; 1 bytes @ 0x6
  1989                           
  1990  0026                     my_delay_ms_WDT@i:	
  1991                           ; 4 bytes @ 0x6
  1992                           
  1993                           
  1994                           ; 4 bytes @ 0x6
  1995  0026                     	ds	1
  1996  0027                     ??_EEPROM_Write_Integer:	
  1997  0027                     ??_EEPROM_24C1025_Write_Str:	
  1998                           ; 1 bytes @ 0x7
  1999                           
  2000  0027                     ?_utoa:	
  2001                           ; 1 bytes @ 0x7
  2002                           
  2003  0027                     EEPROM_Read_Integer@ptr:	
  2004                           ; 1 bytes @ 0x7
  2005                           
  2006  0027                     USART_put_buffer@ptr:	
  2007                           ; 1 bytes @ 0x7
  2008                           
  2009  0027                     __Umul8_16@multiplier:	
  2010                           ; 1 bytes @ 0x7
  2011                           
  2012  0027                     EEPROM_24C1025_Write_Buffer@data:	
  2013                           ; 1 bytes @ 0x7
  2014                           
  2015  0027                     utoa@val:	
  2016                           ; 2 bytes @ 0x7
  2017                           
  2018                           
  2019                           ; 2 bytes @ 0x7
  2020  0027                     	ds	1
  2021  0028                     ??___lldiv:	
  2022  0028                     ??___fleq:	
  2023                           ; 1 bytes @ 0x8
  2024                           
  2025  0028                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2026                           ; 1 bytes @ 0x8
  2027                           
  2028  0028                     EEPROM_24C1025_Read_Str@texto:	
  2029                           ; 1 bytes @ 0x8
  2030                           
  2031  0028                     ___fltol@sign1:	
  2032                           ; 1 bytes @ 0x8
  2033                           
  2034  0028                     EEPROM_Read_Integer@result:	
  2035                           ; 1 bytes @ 0x8
  2036                           
  2037  0028                     ___lldiv@quotient:	
  2038                           ; 2 bytes @ 0x8
  2039                           
  2040                           
  2041                           ; 4 bytes @ 0x8
  2042  0028                     	ds	1
  2043  0029                     ??_EEPROM_24C1025_Write_Buffer:	
  2044  0029                     ??_EEPROM_24C1025_Read_Str:	
  2045                           ; 1 bytes @ 0x9
  2046                           
  2047  0029                     EEPROM_Write_Integer@addr:	
  2048                           ; 1 bytes @ 0x9
  2049                           
  2050  0029                     EEPROM_24C1025_Write_Str@chip_add:	
  2051                           ; 1 bytes @ 0x9
  2052                           
  2053  0029                     ___fltol@exp1:	
  2054                           ; 1 bytes @ 0x9
  2055                           
  2056  0029                     EEPROM_24C1025_Read_Buffer@data:	
  2057                           ; 1 bytes @ 0x9
  2058                           
  2059  0029                     utoa@base:	
  2060                           ; 2 bytes @ 0x9
  2061                           
  2062                           
  2063                           ; 2 bytes @ 0x9
  2064  0029                     	ds	1
  2065  002A                     ?_USART_put_int:	
  2066  002A                     ?___wmul:	
  2067                           ; 1 bytes @ 0xA
  2068                           
  2069  002A                     EEPROM_Write_Integer@ptr:	
  2070                           ; 2 bytes @ 0xA
  2071                           
  2072  002A                     EEPROM_Read_Integer@i:	
  2073                           ; 1 bytes @ 0xA
  2074                           
  2075  002A                     EEPROM_24C1025_Write_Str@range:	
  2076                           ; 1 bytes @ 0xA
  2077                           
  2078  002A                     USART_put_int@value:	
  2079                           ; 1 bytes @ 0xA
  2080                           
  2081  002A                     ___wmul@multiplier:	
  2082                           ; 2 bytes @ 0xA
  2083                           
  2084                           
  2085                           ; 2 bytes @ 0xA
  2086  002A                     	ds	1
  2087  002B                     ??_EEPROM_24C1025_Read_Buffer:	
  2088  002B                     ??_utoa:	
  2089                           ; 1 bytes @ 0xB
  2090                           
  2091  002B                     ?___xxtofl:	
  2092                           ; 1 bytes @ 0xB
  2093                           
  2094  002B                     EEPROM_Write_Integer@i:	
  2095                           ; 4 bytes @ 0xB
  2096                           
  2097  002B                     EEPROM_24C1025_Write_Buffer@count:	
  2098                           ; 1 bytes @ 0xB
  2099                           
  2100  002B                     EEPROM_24C1025_Write_Str@ctrl:	
  2101                           ; 1 bytes @ 0xB
  2102                           
  2103  002B                     EEPROM_24C1025_Read_Str@cnt:	
  2104                           ; 1 bytes @ 0xB
  2105                           
  2106  002B                     utoa@v:	
  2107                           ; 1 bytes @ 0xB
  2108                           
  2109  002B                     ___xxtofl@val:	
  2110                           ; 2 bytes @ 0xB
  2111                           
  2112                           
  2113                           ; 4 bytes @ 0xB
  2114  002B                     	ds	1
  2115  002C                     ??_USART_put_int:	
  2116  002C                     ?_frexp:	
  2117                           ; 1 bytes @ 0xC
  2118                           
  2119  002C                     USART_put_int@dado:	
  2120                           ; 4 bytes @ 0xC
  2121                           
  2122  002C                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2123                           ; 1 bytes @ 0xC
  2124                           
  2125  002C                     EEPROM_24C1025_Read_Str@chip_add:	
  2126                           ; 1 bytes @ 0xC
  2127                           
  2128  002C                     ___lldiv@counter:	
  2129                           ; 1 bytes @ 0xC
  2130                           
  2131  002C                     ___wmul@multiplicand:	
  2132                           ; 1 bytes @ 0xC
  2133                           
  2134  002C                     frexp@value:	
  2135                           ; 2 bytes @ 0xC
  2136                           
  2137                           
  2138                           ; 4 bytes @ 0xC
  2139  002C                     	ds	1
  2140  002D                     ?_I2C_Master_Init:	
  2141  002D                     ?_PROCULUS_Control_Register_Write:	
  2142                           ; 1 bytes @ 0xD
  2143                           
  2144  002D                     ?_PROCULUS_VP_Write:	
  2145                           ; 1 bytes @ 0xD
  2146                           
  2147  002D                     PROCULUS_Control_Register_Write@size:	
  2148                           ; 1 bytes @ 0xD
  2149                           
  2150  002D                     EEPROM_24C1025_Write_Buffer@range:	
  2151                           ; 1 bytes @ 0xD
  2152                           
  2153  002D                     EEPROM_24C1025_Read_Buffer@cnt_1518:	
  2154                           ; 1 bytes @ 0xD
  2155                           
  2156  002D                     EEPROM_24C1025_Read_Str@range:	
  2157                           ; 1 bytes @ 0xD
  2158                           
  2159  002D                     utoa@c:	
  2160                           ; 1 bytes @ 0xD
  2161                           
  2162  002D                     PROCULUS_VP_Write@vp:	
  2163                           ; 1 bytes @ 0xD
  2164                           
  2165  002D                     I2C_Master_Init@c:	
  2166                           ; 2 bytes @ 0xD
  2167                           
  2168                           
  2169                           ; 4 bytes @ 0xD
  2170  002D                     	ds	1
  2171  002E                     ??_PROCULUS_Control_Register_Write:	
  2172  002E                     ??___wmul:	
  2173                           ; 1 bytes @ 0xE
  2174                           
  2175  002E                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2176                           ; 1 bytes @ 0xE
  2177                           
  2178  002E                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2179                           ; 1 bytes @ 0xE
  2180                           
  2181  002E                     EEPROM_24C1025_Read_Str@ctrl:	
  2182                           ; 1 bytes @ 0xE
  2183                           
  2184  002E                     utoa@buf:	
  2185                           ; 1 bytes @ 0xE
  2186                           
  2187  002E                     ___wmul@product:	
  2188                           ; 1 bytes @ 0xE
  2189                           
  2190                           
  2191                           ; 2 bytes @ 0xE
  2192  002E                     	ds	1
  2193  002F                     ?_EEPROM_24C1025_Write_Byte:	
  2194  002F                     ?_itoa:	
  2195                           ; 1 bytes @ 0xF
  2196                           
  2197  002F                     ??___xxtofl:	
  2198                           ; 1 bytes @ 0xF
  2199                           
  2200  002F                     PROCULUS_Control_Register_Write@vetor:	
  2201                           ; 1 bytes @ 0xF
  2202                           
  2203  002F                     EEPROM_24C1025_Read_Buffer@range:	
  2204                           ; 1 bytes @ 0xF
  2205                           
  2206  002F                     PROCULUS_VP_Write@vetor:	
  2207                           ; 1 bytes @ 0xF
  2208                           
  2209  002F                     itoa@val:	
  2210                           ; 2 bytes @ 0xF
  2211                           
  2212  002F                     EEPROM_24C1025_Write_Byte@mem_add:	
  2213                           ; 2 bytes @ 0xF
  2214                           
  2215                           
  2216                           ; 4 bytes @ 0xF
  2217  002F                     	ds	1
  2218  0030                     ?_EEPROM_24C1025_Write_Int:	
  2219  0030                     PROCULUS_Control_Register_Write@i:	
  2220                           ; 1 bytes @ 0x10
  2221                           
  2222  0030                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2223                           ; 1 bytes @ 0x10
  2224                           
  2225  0030                     frexp@eptr:	
  2226                           ; 1 bytes @ 0x10
  2227                           
  2228  0030                     EEPROM_24C1025_Write_Int@mem_add:	
  2229                           ; 1 bytes @ 0x10
  2230                           
  2231                           
  2232                           ; 4 bytes @ 0x10
  2233  0030                     	ds	1
  2234  0031                     ?_EEPROM_24C1025_Read_Byte:	
  2235  0031                     ?_PROCULUS_Show_Screen:	
  2236                           ; 1 bytes @ 0x11
  2237                           
  2238  0031                     ?_PROCULUS_Buzzer:	
  2239                           ; 1 bytes @ 0x11
  2240                           
  2241  0031                     ??_frexp:	
  2242                           ; 1 bytes @ 0x11
  2243                           
  2244  0031                     ??_I2C_Master_Init:	
  2245                           ; 1 bytes @ 0x11
  2246                           
  2247  0031                     ?_EEPROM_24C1025_Read_Int:	
  2248                           ; 1 bytes @ 0x11
  2249                           
  2250  0031                     PROCULUS_VP_Write@size:	
  2251                           ; 2 bytes @ 0x11
  2252                           
  2253  0031                     PROCULUS_Buzzer@time_ms_x_10:	
  2254                           ; 1 bytes @ 0x11
  2255                           
  2256  0031                     PROCULUS_Show_Screen@screen:	
  2257                           ; 2 bytes @ 0x11
  2258                           
  2259  0031                     itoa@base:	
  2260                           ; 2 bytes @ 0x11
  2261                           
  2262  0031                     EEPROM_24C1025_Read_Byte@mem_add:	
  2263                           ; 2 bytes @ 0x11
  2264                           
  2265  0031                     EEPROM_24C1025_Read_Int@mem_add:	
  2266                           ; 4 bytes @ 0x11
  2267                           
  2268                           
  2269                           ; 4 bytes @ 0x11
  2270  0031                     	ds	1
  2271  0032                     ??_PROCULUS_VP_Write:	
  2272                           
  2273                           ; 1 bytes @ 0x12
  2274  0032                     	ds	1
  2275  0033                     ??_itoa:	
  2276  0033                     ??_PROCULUS_Show_Screen:	
  2277                           ; 1 bytes @ 0x13
  2278                           
  2279  0033                     ??_PROCULUS_Buzzer:	
  2280                           ; 1 bytes @ 0x13
  2281                           
  2282  0033                     EEPROM_24C1025_Write_Byte@data:	
  2283                           ; 1 bytes @ 0x13
  2284                           
  2285  0033                     ___xxtofl@sign:	
  2286                           ; 1 bytes @ 0x13
  2287                           
  2288  0033                     PROCULUS_Buzzer@vetor:	
  2289                           ; 1 bytes @ 0x13
  2290                           
  2291  0033                     PROCULUS_Show_Screen@vetor:	
  2292                           ; 2 bytes @ 0x13
  2293                           
  2294                           
  2295                           ; 3 bytes @ 0x13
  2296  0033                     	ds	1
  2297  0034                     ??_EEPROM_24C1025_Write_Byte:	
  2298  0034                     PROCULUS_VP_Write@i:	
  2299                           ; 1 bytes @ 0x14
  2300                           
  2301  0034                     EEPROM_24C1025_Write_Byte@chip_add:	
  2302                           ; 1 bytes @ 0x14
  2303                           
  2304  0034                     ___xxtofl@exp:	
  2305                           ; 1 bytes @ 0x14
  2306                           
  2307  0034                     itoa@buf:	
  2308                           ; 1 bytes @ 0x14
  2309                           
  2310  0034                     EEPROM_24C1025_Write_Int@data:	
  2311                           ; 1 bytes @ 0x14
  2312                           
  2313                           
  2314                           ; 2 bytes @ 0x14
  2315  0034                     	ds	1
  2316  0035                     ??_EEPROM_24C1025_Read_Byte:	
  2317  0035                     ??_EEPROM_24C1025_Read_Int:	
  2318                           ; 1 bytes @ 0x15
  2319                           
  2320  0035                     ?_PROCULUS_VP_Write_String:	
  2321                           ; 1 bytes @ 0x15
  2322                           
  2323  0035                     EEPROM_24C1025_Read_Byte@chip_add:	
  2324                           ; 1 bytes @ 0x15
  2325                           
  2326  0035                     EEPROM_24C1025_Read_Int@chip_add:	
  2327                           ; 1 bytes @ 0x15
  2328                           
  2329  0035                     PROCULUS_VP_Write_String@vp:	
  2330                           ; 1 bytes @ 0x15
  2331                           
  2332  0035                     ___xxtofl@arg:	
  2333                           ; 2 bytes @ 0x15
  2334                           
  2335                           
  2336                           ; 4 bytes @ 0x15
  2337  0035                     	ds	1
  2338  0036                     ??_EEPROM_24C1025_Write_Int:	
  2339  0036                     EEPROM_24C1025_Read_Byte@data:	
  2340                           ; 1 bytes @ 0x16
  2341                           
  2342  0036                     EEPROM_24C1025_Write_Int@chip_add:	
  2343                           ; 1 bytes @ 0x16
  2344                           
  2345  0036                     EEPROM_24C1025_Read_Int@data:	
  2346                           ; 1 bytes @ 0x16
  2347                           
  2348                           
  2349                           ; 2 bytes @ 0x16
  2350  0036                     	ds	1
  2351  0037                     PROCULUS_VP_Write_String@text:	
  2352  0037                     EEPROM_24C1025_Write_Int@local:	
  2353                           ; 1 bytes @ 0x17
  2354                           
  2355                           
  2356                           ; 2 bytes @ 0x17
  2357  0037                     	ds	1
  2358  0038                     ??_PROCULUS_VP_Write_String:	
  2359                           
  2360                           ; 1 bytes @ 0x18
  2361  0038                     	ds	1
  2362  0039                     ?_Save_Log:	
  2363  0039                     ?_EEPROM_24C1025_Fill_All:	
  2364                           ; 1 bytes @ 0x19
  2365                           
  2366  0039                     ?___fladd:	
  2367                           ; 1 bytes @ 0x19
  2368                           
  2369  0039                     EEPROM_24C1025_Fill_All@value:	
  2370                           ; 4 bytes @ 0x19
  2371                           
  2372  0039                     Save_Log@add_datalog:	
  2373                           ; 2 bytes @ 0x19
  2374                           
  2375  0039                     ___fladd@b:	
  2376                           ; 4 bytes @ 0x19
  2377                           
  2378                           
  2379                           ; 4 bytes @ 0x19
  2380  0039                     	ds	2
  2381  003B                     ??_EEPROM_24C1025_Fill_All:	
  2382  003B                     EEPROM_24C1025_Fill_All@chip_add:	
  2383                           ; 1 bytes @ 0x1B
  2384                           
  2385                           
  2386                           ; 1 bytes @ 0x1B
  2387  003B                     	ds	1
  2388  003C                     EEPROM_24C1025_Fill_All@mem_add:	
  2389                           
  2390                           ; 4 bytes @ 0x1C
  2391  003C                     	ds	1
  2392  003D                     ??_Save_Log:	
  2393  003D                     ___fladd@a:	
  2394                           ; 1 bytes @ 0x1D
  2395                           
  2396                           
  2397                           ; 4 bytes @ 0x1D
  2398  003D                     	ds	4
  2399  0041                     ??___fladd:	
  2400                           
  2401                           ; 1 bytes @ 0x21
  2402  0041                     	ds	8
  2403  0049                     ___fladd@signs:	
  2404                           
  2405                           ; 1 bytes @ 0x29
  2406  0049                     	ds	1
  2407  004A                     ___fladd@aexp:	
  2408                           
  2409                           ; 1 bytes @ 0x2A
  2410  004A                     	ds	1
  2411  004B                     ___fladd@bexp:	
  2412                           
  2413                           ; 1 bytes @ 0x2B
  2414  004B                     	ds	1
  2415  004C                     ___fladd@grs:	
  2416                           
  2417                           ; 1 bytes @ 0x2C
  2418  004C                     	ds	1
  2419  004D                     ?___flsub:	
  2420  004D                     ___flsub@a:	
  2421                           ; 4 bytes @ 0x2D
  2422                           
  2423                           
  2424                           ; 4 bytes @ 0x2D
  2425  004D                     	ds	4
  2426  0051                     ___flsub@b:	
  2427                           
  2428                           ; 4 bytes @ 0x31
  2429  0051                     	ds	4
  2430  0055                     ?___flge:	
  2431  0055                     ??___flsub:	
  2432                           ; 1 bit 
  2433                           
  2434  0055                     ?___flmul:	
  2435                           ; 1 bytes @ 0x35
  2436                           
  2437  0055                     ___flge@ff1:	
  2438                           ; 4 bytes @ 0x35
  2439                           
  2440  0055                     ___flmul@b:	
  2441                           ; 4 bytes @ 0x35
  2442                           
  2443                           
  2444                           ; 4 bytes @ 0x35
  2445  0055                     	ds	4
  2446  0059                     ___flge@ff2:	
  2447  0059                     ___flmul@a:	
  2448                           ; 4 bytes @ 0x39
  2449                           
  2450                           
  2451                           ; 4 bytes @ 0x39
  2452  0059                     	ds	4
  2453  005D                     ??___flge:	
  2454  005D                     ??___flmul:	
  2455                           ; 1 bytes @ 0x3D
  2456                           
  2457                           
  2458                           ; 1 bytes @ 0x3D
  2459  005D                     	ds	4
  2460  0061                     ??_Auto_Relay0:	
  2461  0061                     ??_Auto_Relay1:	
  2462                           ; 1 bytes @ 0x41
  2463                           
  2464  0061                     ___flmul@sign:	
  2465                           ; 1 bytes @ 0x41
  2466                           
  2467                           
  2468                           ; 1 bytes @ 0x41
  2469  0061                     	ds	1
  2470  0062                     ___flmul@aexp:	
  2471                           
  2472                           ; 1 bytes @ 0x42
  2473  0062                     	ds	1
  2474  0063                     ___flmul@bexp:	
  2475                           
  2476                           ; 1 bytes @ 0x43
  2477  0063                     	ds	1
  2478  0064                     ___flmul@grs:	
  2479                           
  2480                           ; 4 bytes @ 0x44
  2481  0064                     	ds	4
  2482  0068                     ___flmul@prod:	
  2483                           
  2484                           ; 4 bytes @ 0x48
  2485  0068                     	ds	4
  2486  006C                     ___flmul@temp:	
  2487                           
  2488                           ; 2 bytes @ 0x4C
  2489  006C                     	ds	2
  2490  006E                     ??_Decodify_Command:	
  2491  006E                     ??_log:	
  2492                           ; 1 bytes @ 0x4E
  2493                           
  2494  006E                     log@exponent:	
  2495                           ; 1 bytes @ 0x4E
  2496                           
  2497                           
  2498                           ; 2 bytes @ 0x4E
  2499  006E                     	ds	2
  2500  0070                     ??_ADC_Read_NTC:	
  2501                           
  2502                           	psect	maintext
  2503  06EB                     __pmaintext:	
  2504                           ; 1 bytes @ 0x50
  2505 ;;
  2506 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2507 ;;
  2508 ;; *************** function _main *****************
  2509 ;; Defined at:
  2510 ;;		line 145 in file "SlaveLiofilizadorVer1.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  reset           2   77[BANK1 ] unsigned int 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : B00/0
  2521 ;;		On exit  : 300/300
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         0       0       0       0       0
  2525 ;;      Locals:         0       0       2       0       0
  2526 ;;      Temps:          0       0       3       0       0
  2527 ;;      Totals:         0       0       5       0       0
  2528 ;;Total ram usage:        5 bytes
  2529 ;; Hardware stack levels required when called:    7
  2530 ;; This function calls:
  2531 ;;		_ADC_init
  2532 ;;		_Auto_Relay0
  2533 ;;		_Auto_Relay1
  2534 ;;		_Decodify_Command
  2535 ;;		_EEPROM_Read_Integer
  2536 ;;		_EEPROM_Write_Integer
  2537 ;;		_I2C_Master_Init
  2538 ;;		_Load_Work
  2539 ;;		_USART_init
  2540 ;;		_mediatemperaturaNTC
  2541 ;;		_my_delay_ms_WDT
  2542 ;; This function is called by:
  2543 ;;		Startup code after reset
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           
  2548                           ;psect for function _main
  2549  06EB                     _main:	
  2550  06EB                     l7972:	
  2551                           ;incstack = 0
  2552                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2553                           
  2554                           
  2555                           ;SlaveLiofilizadorVer1.c: 146:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2556  06EB  3002               	movlw	2
  2557  06EC  1683               	bsf	3,5	;RP0=1, select bank1
  2558  06ED  1303               	bcf	3,6	;RP1=0, select bank1
  2559  06EE  00EC               	movwf	(??_main^(0+128)+2)
  2560  06EF  3004               	movlw	4
  2561  06F0  00EB               	movwf	(??_main^(0+128)+1)
  2562  06F1  30B9               	movlw	185
  2563  06F2  00EA               	movwf	??_main^(0+128)
  2564  06F3                     u7647:	
  2565  06F3  0BEA               	decfsz	??_main^(0+128),f
  2566  06F4  2EF3               	goto	u7647
  2567  06F5  0BEB               	decfsz	(??_main^(0+128)+1),f
  2568  06F6  2EF3               	goto	u7647
  2569  06F7  0BEC               	decfsz	(??_main^(0+128)+2),f
  2570  06F8  2EF3               	goto	u7647
  2571  06F9  2EFA               	nop2
  2572                           
  2573                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF0=1;
  2574  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  2575  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  2576  06FC  160F               	bsf	15,4	;volatile
  2577                           
  2578                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF1=1;
  2579  06FD  168F               	bsf	15,5	;volatile
  2580                           
  2581                           ;SlaveLiofilizadorVer1.c: 149:      OSCCONbits.IRCF2=1;
  2582  06FE  170F               	bsf	15,6	;volatile
  2583                           
  2584                           ;SlaveLiofilizadorVer1.c: 151:      PORTA=0;
  2585  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  2586  0700  0185               	clrf	5	;volatile
  2587                           
  2588                           ;SlaveLiofilizadorVer1.c: 152:      PORTB=0;
  2589  0701  0186               	clrf	6	;volatile
  2590                           
  2591                           ;SlaveLiofilizadorVer1.c: 153:      PORTC=0;
  2592  0702  0187               	clrf	7	;volatile
  2593                           
  2594                           ;SlaveLiofilizadorVer1.c: 154:      PORTE=0;
  2595  0703  0189               	clrf	9	;volatile
  2596                           
  2597                           ;SlaveLiofilizadorVer1.c: 155:      TRISA=0b11101111;
  2598  0704  30EF               	movlw	239
  2599  0705  1683               	bsf	3,5	;RP0=1, select bank1
  2600  0706  0085               	movwf	5	;volatile
  2601                           
  2602                           ;SlaveLiofilizadorVer1.c: 156:      TRISB=0b00001111;
  2603  0707  300F               	movlw	15
  2604  0708  0086               	movwf	6	;volatile
  2605                           
  2606                           ;SlaveLiofilizadorVer1.c: 157:      TRISC=0xF0;
  2607  0709  30F0               	movlw	240
  2608  070A  0087               	movwf	7	;volatile
  2609                           
  2610                           ;SlaveLiofilizadorVer1.c: 158:      TRISE=0xFF;
  2611  070B  30FF               	movlw	255
  2612  070C  0089               	movwf	9	;volatile
  2613                           
  2614                           ;SlaveLiofilizadorVer1.c: 160:      ANSEL=0x00000011;
  2615  070D  3011               	movlw	17
  2616  070E  1703               	bsf	3,6	;RP1=1, select bank3
  2617  070F  0088               	movwf	8	;volatile
  2618                           
  2619                           ;SlaveLiofilizadorVer1.c: 161:      ANSELH=0x00000000;
  2620  0710  0189               	clrf	9	;volatile
  2621                           
  2622                           ;SlaveLiofilizadorVer1.c: 163:      OPTION_REGbits.nRBPU=0;
  2623  0711  1303               	bcf	3,6	;RP1=0, select bank1
  2624  0712  1381               	bcf	1,7	;volatile
  2625                           
  2626                           ;SlaveLiofilizadorVer1.c: 164:      WPUB=0b00001111;
  2627  0713  300F               	movlw	15
  2628  0714  0095               	movwf	21	;volatile
  2629                           
  2630                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB7 =1;
  2631  0715  1283               	bcf	3,5	;RP0=0, select bank0
  2632  0716  1786               	bsf	6,7	;volatile
  2633                           
  2634                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB6 =1;
  2635  0717  1706               	bsf	6,6	;volatile
  2636                           
  2637                           ;SlaveLiofilizadorVer1.c: 169:      PORTBbits.RB5=1;
  2638  0718  1686               	bsf	6,5	;volatile
  2639                           
  2640                           ;SlaveLiofilizadorVer1.c: 170:      my_delay_ms_WDT(1000);
  2641  0719  3003               	movlw	3
  2642  071A  01A3               	clrf	my_delay_ms_WDT@time+3
  2643  071B  01A2               	clrf	my_delay_ms_WDT@time+2
  2644  071C  00A1               	movwf	my_delay_ms_WDT@time+1
  2645  071D  30E8               	movlw	232
  2646  071E  00A0               	movwf	my_delay_ms_WDT@time
  2647  071F  160A  158A  2488  120A  118A  	fcall	_my_delay_ms_WDT
  2648                           
  2649                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.T0CS=0;
  2650  0724  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0725  1281               	bcf	1,5	;volatile
  2652                           
  2653                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PSA =1;
  2654  0726  1581               	bsf	1,3	;volatile
  2655                           
  2656                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS0 =1;
  2657  0727  1401               	bsf	1,0	;volatile
  2658                           
  2659                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS1 =1;
  2660  0728  1481               	bsf	1,1	;volatile
  2661                           
  2662                           ;SlaveLiofilizadorVer1.c: 176:      OPTION_REGbits.PS2 =1;
  2663  0729  1501               	bsf	1,2	;volatile
  2664                           
  2665                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.T0IE =0;
  2666  072A  128B               	bcf	11,5	;volatile
  2667                           
  2668                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.INTE =0;
  2669  072B  120B               	bcf	11,4	;volatile
  2670                           
  2671                           ;SlaveLiofilizadorVer1.c: 179:      INTCONbits.GIE =1;
  2672  072C  178B               	bsf	11,7	;volatile
  2673                           
  2674                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.PEIE = 1;
  2675  072D  170B               	bsf	11,6	;volatile
  2676                           
  2677                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS0=1;
  2678  072E  1283               	bcf	3,5	;RP0=0, select bank0
  2679  072F  1610               	bsf	16,4	;volatile
  2680                           
  2681                           ;SlaveLiofilizadorVer1.c: 184:      T1CKPS1=1;
  2682  0730  1690               	bsf	16,5	;volatile
  2683                           
  2684                           ;SlaveLiofilizadorVer1.c: 185:      TMR1CS=0;
  2685  0731  1090               	bcf	16,1	;volatile
  2686                           
  2687                           ;SlaveLiofilizadorVer1.c: 186:      TMR1IE=1;
  2688  0732  1683               	bsf	3,5	;RP0=1, select bank1
  2689  0733  140C               	bsf	12,0	;volatile
  2690                           
  2691                           ;SlaveLiofilizadorVer1.c: 187:      T1CON=1;
  2692  0734  3001               	movlw	1
  2693  0735  1283               	bcf	3,5	;RP0=0, select bank0
  2694  0736  0090               	movwf	16	;volatile
  2695  0737  0064               	clrwdt	;# 
  2696                           
  2697                           ;SlaveLiofilizadorVer1.c: 194:      ADC_init();
  2698  0738  120A  158A  2004  120A  118A  	fcall	_ADC_init
  2699                           
  2700                           ;SlaveLiofilizadorVer1.c: 195:      I2C_Master_Init(100000);
  2701  073D  3001               	movlw	1
  2702  073E  01B0               	clrf	I2C_Master_Init@c+3
  2703  073F  00AF               	movwf	I2C_Master_Init@c+2
  2704  0740  3086               	movlw	134
  2705  0741  00AE               	movwf	I2C_Master_Init@c+1
  2706  0742  30A0               	movlw	160
  2707  0743  00AD               	movwf	I2C_Master_Init@c
  2708  0744  160A  158A  25AC  120A  118A  	fcall	_I2C_Master_Init
  2709                           
  2710                           ;SlaveLiofilizadorVer1.c: 196:      USART_init(115200);
  2711  0749  1283               	bcf	3,5	;RP0=0, select bank0
  2712  074A  3001               	movlw	1
  2713  074B  01A3               	clrf	USART_init@baudrate+3
  2714  074C  00A2               	movwf	USART_init@baudrate+2
  2715  074D  30C2               	movlw	194
  2716  074E  00A1               	movwf	USART_init@baudrate+1
  2717  074F  01A0               	clrf	USART_init@baudrate
  2718  0750  160A  158A  24B5  120A  118A  	fcall	_USART_init
  2719                           
  2720                           ;SlaveLiofilizadorVer1.c: 202:      {;SlaveLiofilizadorVer1.c: 203:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 204:      reset=EEPROM_Read_Integer(0x10);
  2721  0755  3010               	movlw	16
  2722  0756  120A  158A  26E9  120A  118A  	fcall	_EEPROM_Read_Integer
  2723  075B  0824               	movf	?_EEPROM_Read_Integer+1,w
  2724  075C  1683               	bsf	3,5	;RP0=1, select bank1
  2725  075D  00EE               	movwf	(main@reset+1)^(0+128)
  2726  075E  1283               	bcf	3,5	;RP0=0, select bank0
  2727  075F  0823               	movf	?_EEPROM_Read_Integer,w
  2728  0760  1683               	bsf	3,5	;RP0=1, select bank1
  2729  0761  00ED               	movwf	main@reset^(0+128)
  2730                           
  2731                           ;SlaveLiofilizadorVer1.c: 205:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2732  0762  0F6D               	incfsz	main@reset^(0+128),w
  2733  0763  2F70               	goto	l8042
  2734  0764  0A6E               	incf	(main@reset+1)^(0+128),w
  2735  0765  1D03               	btfss	3,2
  2736  0766  2F70               	goto	l8042
  2737  0767  1283               	bcf	3,5	;RP0=0, select bank0
  2738  0768  3010               	movlw	16
  2739  0769  01A5               	clrf	EEPROM_Write_Integer@dado
  2740  076A  01A6               	clrf	EEPROM_Write_Integer@dado+1
  2741  076B  160A  158A  2621  120A  118A  	fcall	_EEPROM_Write_Integer
  2742  0770                     l8042:	
  2743                           
  2744                           ;SlaveLiofilizadorVer1.c: 206:      reset++;
  2745  0770  1683               	bsf	3,5	;RP0=1, select bank1
  2746  0771  1303               	bcf	3,6	;RP1=0, select bank1
  2747  0772  0AED               	incf	main@reset^(0+128),f
  2748  0773  1903               	skipnz
  2749  0774  0AEE               	incf	(main@reset+1)^(0+128),f
  2750                           
  2751                           ;SlaveLiofilizadorVer1.c: 207:      EEPROM_Write_Integer(0x10,reset);
  2752  0775  086E               	movf	(main@reset+1)^(0+128),w
  2753  0776  1283               	bcf	3,5	;RP0=0, select bank0
  2754  0777  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2755  0778  1683               	bsf	3,5	;RP0=1, select bank1
  2756  0779  086D               	movf	main@reset^(0+128),w
  2757  077A  1283               	bcf	3,5	;RP0=0, select bank0
  2758  077B  00A5               	movwf	EEPROM_Write_Integer@dado
  2759  077C  3010               	movlw	16
  2760  077D  160A  158A  2621  120A  118A  	fcall	_EEPROM_Write_Integer
  2761                           
  2762                           ;SlaveLiofilizadorVer1.c: 208:      };SlaveLiofilizadorVer1.c: 212:      Delay_Led_Tmr0 
      +                          = 0;
  2763  0782  1683               	bsf	3,5	;RP0=1, select bank3
  2764  0783  1703               	bsf	3,6	;RP1=1, select bank3
  2765  0784  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  2766  0785  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  2767                           
  2768                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Usart = 0;
  2769  0786  01AC               	clrf	_Delay_Led_Usart^(0+384)	;volatile
  2770  0787  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2771                           
  2772                           ;SlaveLiofilizadorVer1.c: 214:      Delay_Led_Memory = 0;
  2773  0788  01B0               	clrf	_Delay_Led_Memory^(0+384)	;volatile
  2774  0789  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  2775                           
  2776                           ;SlaveLiofilizadorVer1.c: 216:      segundo=0;
  2777  078A  01F6               	clrf	_segundo	;volatile
  2778                           
  2779                           ;SlaveLiofilizadorVer1.c: 217:      hora=0;
  2780  078B  01F5               	clrf	_hora	;volatile
  2781                           
  2782                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC0=0;
  2783  078C  1283               	bcf	3,5	;RP0=0, select bank0
  2784  078D  1303               	bcf	3,6	;RP1=0, select bank0
  2785  078E  1007               	bcf	7,0	;volatile
  2786                           
  2787                           ;SlaveLiofilizadorVer1.c: 219:      PORTCbits.RC1=0;
  2788  078F  1087               	bcf	7,1	;volatile
  2789                           
  2790                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA2=0;
  2791  0790  1105               	bcf	5,2	;volatile
  2792                           
  2793                           ;SlaveLiofilizadorVer1.c: 221:      PORTAbits.RA3=0;
  2794  0791  1185               	bcf	5,3	;volatile
  2795                           
  2796                           ;SlaveLiofilizadorVer1.c: 224:      Board_Number=(((0x0F)&(~PORTB)));
  2797  0792  0906               	comf	6,w	;volatile
  2798  0793  1683               	bsf	3,5	;RP0=1, select bank3
  2799  0794  1703               	bsf	3,6	;RP1=1, select bank3
  2800  0795  00B4               	movwf	_Board_Number^(0+384)
  2801  0796  300F               	movlw	15
  2802  0797  05B4               	andwf	_Board_Number^(0+384),f
  2803                           
  2804                           ;SlaveLiofilizadorVer1.c: 225:      canal=1;
  2805  0798  01B5               	clrf	_canal^(0+384)
  2806  0799  0AB5               	incf	_canal^(0+384),f
  2807                           
  2808                           ;SlaveLiofilizadorVer1.c: 239:      Load_Work();
  2809  079A  120A  158A  25F0  120A  118A  	fcall	_Load_Work
  2810                           
  2811                           ;SlaveLiofilizadorVer1.c: 240:      generic_status.flag_global_hot=0;
  2812  079F  1683               	bsf	3,5	;RP0=1, select bank3
  2813  07A0  133C               	bcf	_generic_status^(0+384),6
  2814  07A1                     l8072:	
  2815  07A1  3002               	movlw	2
  2816                           
  2817                           ;SlaveLiofilizadorVer1.c: 247:           {;SlaveLiofilizadorVer1.c: 249:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2818  07A2  17BC               	bsf	_generic_status^(0+384),7
  2819  07A3  0AB5               	incf	_canal^(0+384),f
  2820  07A4  0635               	xorwf	_canal^(0+384),w
  2821  07A5  1903               	btfsc	3,2
  2822  07A6  01B5               	clrf	_canal^(0+384)
  2823                           
  2824                           ;SlaveLiofilizadorVer1.c: 254:          mediatemperaturaNTC(canal);
  2825  07A7  0835               	movf	_canal^(0+384),w
  2826  07A8  160A  118A  2010  120A  118A  	fcall	_mediatemperaturaNTC
  2827                           
  2828                           ;SlaveLiofilizadorVer1.c: 257:          if(generic_status.flag_global_hot)
  2829  07AD  1703               	bsf	3,6	;RP1=1, select bank3
  2830  07AE  1F3C               	btfss	_generic_status^(0+384),6
  2831  07AF  2FBB               	goto	l287
  2832                           
  2833                           ;SlaveLiofilizadorVer1.c: 258:             {;SlaveLiofilizadorVer1.c: 259:              
      +                          Auto_Relay0();
  2834  07B0  120A  118A  242F  120A  118A  	fcall	_Auto_Relay0
  2835                           
  2836                           ;SlaveLiofilizadorVer1.c: 260:              Auto_Relay1();
  2837  07B5  120A  118A  2488  120A  118A  	fcall	_Auto_Relay1
  2838                           
  2839                           ;SlaveLiofilizadorVer1.c: 261:             }
  2840  07BA  2FBF               	goto	l288
  2841  07BB                     l287:	
  2842                           ;SlaveLiofilizadorVer1.c: 262:          else
  2843                           
  2844                           
  2845                           ;SlaveLiofilizadorVer1.c: 263:             {;SlaveLiofilizadorVer1.c: 264:             P
      +                          ORTCbits.RC0=0;
  2846  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  2847  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  2848  07BD  1007               	bcf	7,0	;volatile
  2849                           
  2850                           ;SlaveLiofilizadorVer1.c: 265:             PORTCbits.RC1=0;
  2851  07BE  1087               	bcf	7,1	;volatile
  2852  07BF                     l288:	
  2853                           ;SlaveLiofilizadorVer1.c: 266:             }
  2854                           
  2855                           
  2856                           ;SlaveLiofilizadorVer1.c: 284:          if(generic_status.flag_usart_rx==1)
  2857  07BF  1683               	bsf	3,5	;RP0=1, select bank3
  2858  07C0  1703               	bsf	3,6	;RP1=1, select bank3
  2859  07C1  1C3C               	btfss	_generic_status^(0+384),0
  2860  07C2  2FA1               	goto	l8072
  2861                           
  2862                           ;SlaveLiofilizadorVer1.c: 285:             {;SlaveLiofilizadorVer1.c: 286:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2863  07C3  1283               	bcf	3,5	;RP0=0, select bank2
  2864  07C4  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2865  07C5  1683               	bsf	3,5	;RP0=1, select bank3
  2866  07C6  00A5               	movwf	(_header+1)^(0+384)
  2867  07C7  1283               	bcf	3,5	;RP0=0, select bank2
  2868  07C8  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2869  07C9  1683               	bsf	3,5	;RP0=1, select bank3
  2870  07CA  00A4               	movwf	_header^(0+384)
  2871                           
  2872                           ;SlaveLiofilizadorVer1.c: 287:             if(header==0xAABB)
  2873  07CB  3ABB               	xorlw	187
  2874  07CC  30AA               	movlw	170
  2875  07CD  1903               	skipnz
  2876  07CE  0625               	xorwf	(_header+1)^(0+384),w
  2877  07CF  1D03               	btfss	3,2
  2878  07D0  2FA1               	goto	l8072
  2879                           
  2880                           ;SlaveLiofilizadorVer1.c: 288:                {;SlaveLiofilizadorVer1.c: 289:           
      +                               destino =usart_buffer[3];
  2881  07D1  1283               	bcf	3,5	;RP0=0, select bank2
  2882  07D2  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2883  07D3  1683               	bsf	3,5	;RP0=1, select bank3
  2884  07D4  00B3               	movwf	_destino^(0+384)
  2885                           
  2886                           ;SlaveLiofilizadorVer1.c: 290:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2887  07D5  0634               	xorwf	_Board_Number^(0+384),w
  2888  07D6  1903               	skipnz
  2889  07D7  2FDA               	goto	l8092
  2890  07D8  0F33               	incfsz	_destino^(0+384),w
  2891  07D9  2FA1               	goto	l8072
  2892  07DA                     l8092:	
  2893                           
  2894                           ;SlaveLiofilizadorVer1.c: 291:                       {;SlaveLiofilizadorVer1.c: 292:    
      +                                             Delay_Led_Usart=20;
  2895  07DA  3014               	movlw	20
  2896  07DB  00AC               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  2897  07DC  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2898                           
  2899                           ;SlaveLiofilizadorVer1.c: 293:                       Decodify_Command();
  2900  07DD  120A  158A  2045  120A  118A  	fcall	_Decodify_Command
  2901                           
  2902                           ;SlaveLiofilizadorVer1.c: 294:                       generic_status.flag_usart_rx=0;
  2903  07E2  1683               	bsf	3,5	;RP0=1, select bank3
  2904  07E3  1703               	bsf	3,6	;RP1=1, select bank3
  2905  07E4  103C               	bcf	_generic_status^(0+384),0
  2906                           
  2907                           ;SlaveLiofilizadorVer1.c: 297:             }
  2908  07E5  2FA1               	goto	l8072
  2909  07E6                     __end_of_main:	
  2910                           
  2911                           	psect	text1
  2912  1C88                     __ptext1:	
  2913 ;; *************** function _my_delay_ms_WDT *****************
  2914 ;; Defined at:
  2915 ;;		line 13 in file "my_delay.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  time            4    0[BANK0 ] long 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  i               4    6[BANK0 ] long 
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  1    wreg      void 
  2922 ;; Registers used:
  2923 ;;		wreg, status,2, status,0, btemp+1
  2924 ;; Tracked objects:
  2925 ;;		On entry : 300/0
  2926 ;;		On exit  : 300/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2929 ;;      Params:         0       4       0       0       0
  2930 ;;      Locals:         0       4       0       0       0
  2931 ;;      Temps:          0       2       0       0       0
  2932 ;;      Totals:         0      10       0       0       0
  2933 ;;Total ram usage:       10 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    1
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_main
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           
  2944                           ;psect for function _my_delay_ms_WDT
  2945  1C88                     _my_delay_ms_WDT:	
  2946                           
  2947                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
  2948                           
  2949                           ;incstack = 0
  2950                           ; Regs used in _my_delay_ms_WDT: [wreg+status,2+status,0+btemp+1]
  2951  1C88  01A6               	clrf	my_delay_ms_WDT@i
  2952  1C89  01A7               	clrf	my_delay_ms_WDT@i+1
  2953  1C8A  01A8               	clrf	my_delay_ms_WDT@i+2
  2954  1C8B  01A9               	clrf	my_delay_ms_WDT@i+3
  2955  1C8C                     l7580:	
  2956  1C8C  0829               	movf	my_delay_ms_WDT@i+3,w
  2957  1C8D  3A80               	xorlw	128
  2958  1C8E  00FF               	movwf	127
  2959  1C8F  0823               	movf	my_delay_ms_WDT@time+3,w
  2960  1C90  3A80               	xorlw	128
  2961  1C91  027F               	subwf	127,w
  2962  1C92  1D03               	skipz
  2963  1C93  2C9E               	goto	u7223
  2964  1C94  0822               	movf	my_delay_ms_WDT@time+2,w
  2965  1C95  0228               	subwf	my_delay_ms_WDT@i+2,w
  2966  1C96  1D03               	skipz
  2967  1C97  2C9E               	goto	u7223
  2968  1C98  0821               	movf	my_delay_ms_WDT@time+1,w
  2969  1C99  0227               	subwf	my_delay_ms_WDT@i+1,w
  2970  1C9A  1D03               	skipz
  2971  1C9B  2C9E               	goto	u7223
  2972  1C9C  0820               	movf	my_delay_ms_WDT@time,w
  2973  1C9D  0226               	subwf	my_delay_ms_WDT@i,w
  2974  1C9E                     u7223:	
  2975  1C9E  1803               	btfsc	3,0
  2976  1C9F  0008               	return
  2977  1CA0  0064               	clrwdt	;# 
  2978                           
  2979                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
  2980  1CA1  3003               	movlw	3
  2981  1CA2  1283               	bcf	3,5	;RP0=0, select bank0
  2982  1CA3  1303               	bcf	3,6	;RP1=0, select bank0
  2983  1CA4  00A5               	movwf	??_my_delay_ms_WDT+1
  2984  1CA5  3097               	movlw	151
  2985  1CA6  00A4               	movwf	??_my_delay_ms_WDT
  2986  1CA7                     u7657:	
  2987  1CA7  0BA4               	decfsz	??_my_delay_ms_WDT,f
  2988  1CA8  2CA7               	goto	u7657
  2989  1CA9  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
  2990  1CAA  2CA7               	goto	u7657
  2991                           
  2992                           ;my_delay.c: 19:             }
  2993  1CAB  1283               	bcf	3,5	;RP0=0, select bank0
  2994  1CAC  1303               	bcf	3,6	;RP1=0, select bank0
  2995  1CAD  0AA6               	incf	my_delay_ms_WDT@i,f
  2996  1CAE  1903               	skipnz
  2997  1CAF  0AA7               	incf	my_delay_ms_WDT@i+1,f
  2998  1CB0  1903               	skipnz
  2999  1CB1  0AA8               	incf	my_delay_ms_WDT@i+2,f
  3000  1CB2  1903               	skipnz
  3001  1CB3  0AA9               	incf	my_delay_ms_WDT@i+3,f
  3002  1CB4  2C8C               	goto	l7580
  3003  1CB5                     __end_of_my_delay_ms_WDT:	
  3004                           
  3005                           	psect	text2
  3006  1010                     __ptext2:	
  3007 ;; *************** function _mediatemperaturaNTC *****************
  3008 ;; Defined at:
  3009 ;;		line 680 in file "SlaveLiofilizadorVer1.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  canal           1    wreg     unsigned char 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  canal           1   52[BANK1 ] unsigned char 
  3014 ;;  Temp            4   53[BANK1 ] float 
  3015 ;;  i               1   57[BANK1 ] unsigned char 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 300/300
  3022 ;;		On exit  : 100/100
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3025 ;;      Params:         0       0       0       0       0
  3026 ;;      Locals:         0       0      10       0       0
  3027 ;;      Temps:          0       0       1       0       0
  3028 ;;      Totals:         0       0      11       0       0
  3029 ;;Total ram usage:       11 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    6
  3032 ;; This function calls:
  3033 ;;		_ADC_Read_NTC
  3034 ;;		_Package_Usart_is_for_me
  3035 ;;		_Rele0Ligado
  3036 ;;		_Rele1Ligado
  3037 ;;		___fladd
  3038 ;;		___fldiv
  3039 ;;		___xxtofl
  3040 ;;		_my_delay_ms
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           
  3047                           ;psect for function _mediatemperaturaNTC
  3048  1010                     _mediatemperaturaNTC:	
  3049                           
  3050                           ;incstack = 0
  3051                           ; Regs used in _mediatemperaturaNTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3052                           ;mediatemperaturaNTC@canal stored from wreg
  3053  1010  1303               	bcf	3,6	;RP1=0, select bank1
  3054  1011  00D4               	movwf	mediatemperaturaNTC@canal^(0+128)
  3055                           
  3056                           ;SlaveLiofilizadorVer1.c: 680: void mediatemperaturaNTC(unsigned char canal);SlaveLiofil
      +                          izadorVer1.c: 681:      {;SlaveLiofilizadorVer1.c: 682:      float Temp;;SlaveLiofilizad
      +                          orVer1.c: 683:      char i;;SlaveLiofilizadorVer1.c: 685:      ADCON0bits.CHS=canal;
  3057  1012  00CF               	movwf	??_mediatemperaturaNTC^(0+128)
  3058  1013  0DCF               	rlf	??_mediatemperaturaNTC^(0+128),f
  3059  1014  0DCF               	rlf	??_mediatemperaturaNTC^(0+128),f
  3060  1015  1283               	bcf	3,5	;RP0=0, select bank0
  3061  1016  081F               	movf	31,w	;volatile
  3062  1017  1683               	bsf	3,5	;RP0=1, select bank1
  3063  1018  064F               	xorwf	??_mediatemperaturaNTC^(0+128),w
  3064  1019  39C3               	andlw	-61
  3065  101A  064F               	xorwf	??_mediatemperaturaNTC^(0+128),w
  3066  101B  1283               	bcf	3,5	;RP0=0, select bank0
  3067  101C  009F               	movwf	31	;volatile
  3068                           
  3069                           ;SlaveLiofilizadorVer1.c: 686:      my_delay_ms(1);
  3070  101D  01A0               	clrf	my_delay_ms@time
  3071  101E  0AA0               	incf	my_delay_ms@time,f
  3072  101F  01A1               	clrf	my_delay_ms@time+1
  3073  1020  01A2               	clrf	my_delay_ms@time+2
  3074  1021  01A3               	clrf	my_delay_ms@time+3
  3075  1022  27D4  160A  118A   	fcall	_my_delay_ms
  3076                           
  3077                           ;SlaveLiofilizadorVer1.c: 688:      Temp=0;
  3078  1025  1683               	bsf	3,5	;RP0=1, select bank1
  3079  1026  01D5               	clrf	mediatemperaturaNTC@Temp^(0+128)
  3080  1027  01D6               	clrf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3081  1028  01D7               	clrf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3082  1029  01D8               	clrf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3083                           
  3084                           ;SlaveLiofilizadorVer1.c: 690:      for(i=1;i<15;i++)
  3085  102A  01D9               	clrf	mediatemperaturaNTC@i^(0+128)
  3086  102B  0AD9               	incf	mediatemperaturaNTC@i^(0+128),f
  3087  102C                     l7652:	
  3088                           
  3089                           ;SlaveLiofilizadorVer1.c: 691:          {;SlaveLiofilizadorVer1.c: 692:          Temp+=A
      +                          DC_Read_NTC(canal);
  3090  102C  2337  160A  118A   	fcall	_ADC_Read_NTC
  3091  102F  083C               	movf	(?_ADC_Read_NTC+3)^(0+128),w
  3092  1030  00D3               	movwf	(_mediatemperaturaNTC$2292+3)^(0+128)
  3093  1031  083B               	movf	(?_ADC_Read_NTC+2)^(0+128),w
  3094  1032  00D2               	movwf	(_mediatemperaturaNTC$2292+2)^(0+128)
  3095  1033  083A               	movf	(?_ADC_Read_NTC+1)^(0+128),w
  3096  1034  00D1               	movwf	(_mediatemperaturaNTC$2292+1)^(0+128)
  3097  1035  0839               	movf	?_ADC_Read_NTC^(0+128),w
  3098  1036  00D0               	movwf	_mediatemperaturaNTC$2292^(0+128)
  3099                           
  3100                           ;SlaveLiofilizadorVer1.c: 691:          {;SlaveLiofilizadorVer1.c: 692:          Temp+=A
      +                          DC_Read_NTC(canal);
  3101  1037  0853               	movf	(_mediatemperaturaNTC$2292+3)^(0+128),w
  3102  1038  1283               	bcf	3,5	;RP0=0, select bank0
  3103  1039  00BC               	movwf	___fladd@b+3
  3104  103A  1683               	bsf	3,5	;RP0=1, select bank1
  3105  103B  0852               	movf	(_mediatemperaturaNTC$2292+2)^(0+128),w
  3106  103C  1283               	bcf	3,5	;RP0=0, select bank0
  3107  103D  00BB               	movwf	___fladd@b+2
  3108  103E  1683               	bsf	3,5	;RP0=1, select bank1
  3109  103F  0851               	movf	(_mediatemperaturaNTC$2292+1)^(0+128),w
  3110  1040  1283               	bcf	3,5	;RP0=0, select bank0
  3111  1041  00BA               	movwf	___fladd@b+1
  3112  1042  1683               	bsf	3,5	;RP0=1, select bank1
  3113  1043  0850               	movf	_mediatemperaturaNTC$2292^(0+128),w
  3114  1044  1283               	bcf	3,5	;RP0=0, select bank0
  3115  1045  00B9               	movwf	___fladd@b
  3116  1046  1683               	bsf	3,5	;RP0=1, select bank1
  3117  1047  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3118  1048  1283               	bcf	3,5	;RP0=0, select bank0
  3119  1049  00C0               	movwf	___fladd@a+3
  3120  104A  1683               	bsf	3,5	;RP0=1, select bank1
  3121  104B  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3122  104C  1283               	bcf	3,5	;RP0=0, select bank0
  3123  104D  00BF               	movwf	___fladd@a+2
  3124  104E  1683               	bsf	3,5	;RP0=1, select bank1
  3125  104F  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3126  1050  1283               	bcf	3,5	;RP0=0, select bank0
  3127  1051  00BE               	movwf	___fladd@a+1
  3128  1052  1683               	bsf	3,5	;RP0=1, select bank1
  3129  1053  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3130  1054  1283               	bcf	3,5	;RP0=0, select bank0
  3131  1055  00BD               	movwf	___fladd@a
  3132  1056  21C8  160A  118A   	fcall	___fladd
  3133  1059  083C               	movf	?___fladd+3,w
  3134  105A  1683               	bsf	3,5	;RP0=1, select bank1
  3135  105B  00D8               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3136  105C  1283               	bcf	3,5	;RP0=0, select bank0
  3137  105D  083B               	movf	?___fladd+2,w
  3138  105E  1683               	bsf	3,5	;RP0=1, select bank1
  3139  105F  00D7               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3140  1060  1283               	bcf	3,5	;RP0=0, select bank0
  3141  1061  083A               	movf	?___fladd+1,w
  3142  1062  1683               	bsf	3,5	;RP0=1, select bank1
  3143  1063  00D6               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3144  1064  1283               	bcf	3,5	;RP0=0, select bank0
  3145  1065  0839               	movf	?___fladd,w
  3146  1066  1683               	bsf	3,5	;RP0=1, select bank1
  3147  1067  00D5               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3148                           
  3149                           ;SlaveLiofilizadorVer1.c: 693:          if(Package_Usart_is_for_me()==1) break;
  3150  1068  275F  160A  118A   	fcall	_Package_Usart_is_for_me
  3151  106B  3A01               	xorlw	1
  3152  106C  1903               	btfsc	3,2
  3153  106D  2895               	goto	l7680
  3154                           
  3155                           ;SlaveLiofilizadorVer1.c: 695:          if(generic_status.flag_global_hot)
  3156  106E  1683               	bsf	3,5	;RP0=1, select bank3
  3157  106F  1703               	bsf	3,6	;RP1=1, select bank3
  3158  1070  1F3C               	btfss	_generic_status^(0+384),6
  3159  1071  288E               	goto	l7676
  3160                           
  3161                           ;SlaveLiofilizadorVer1.c: 696:            {;SlaveLiofilizadorVer1.c: 698:            if(
      +                          (TempoCNT_0==0)&&
  3162  1072  1303               	bcf	3,6	;RP1=0, select bank1
  3163  1073  086F               	movf	_TempoCNT_0^(0+128),w	;volatile
  3164  1074  1D03               	btfss	3,2
  3165  1075  2880               	goto	l7668
  3166  1076  1703               	bsf	3,6	;RP1=1, select bank3
  3167  1077  0B5E               	decfsz	_RL0Status^(0+384),w
  3168  1078  2880               	goto	l7668
  3169  1079  0328               	decf	_Status0^(0+384),w
  3170  107A  0429               	iorwf	(_Status0+1)^(0+384),w
  3171  107B  1D03               	btfss	3,2
  3172  107C  2880               	goto	l7668
  3173                           
  3174                           ;SlaveLiofilizadorVer1.c: 700:               (Status0==1)) Rele0Ligado();
  3175  107D  20F0  160A  118A   	fcall	_Rele0Ligado
  3176  1080                     l7668:	
  3177                           
  3178                           ;SlaveLiofilizadorVer1.c: 702:            if((TempoCNT_1==0)&&
  3179  1080  0874               	movf	_TempoCNT_1,w	;volatile
  3180  1081  1D03               	btfss	3,2
  3181  1082  288E               	goto	l7676
  3182  1083  1683               	bsf	3,5	;RP0=1, select bank3
  3183  1084  1703               	bsf	3,6	;RP1=1, select bank3
  3184  1085  0B5D               	decfsz	_RL1Status^(0+384),w
  3185  1086  288E               	goto	l7676
  3186  1087  0326               	decf	_Status1^(0+384),w
  3187  1088  0427               	iorwf	(_Status1+1)^(0+384),w
  3188  1089  1D03               	btfss	3,2
  3189  108A  288E               	goto	l7676
  3190                           
  3191                           ;SlaveLiofilizadorVer1.c: 704:               (Status1==1)) Rele1Ligado();
  3192  108B  2107  160A  118A   	fcall	_Rele1Ligado
  3193  108E                     l7676:	
  3194                           
  3195                           ;SlaveLiofilizadorVer1.c: 707:          }
  3196  108E  1683               	bsf	3,5	;RP0=1, select bank1
  3197  108F  1303               	bcf	3,6	;RP1=0, select bank1
  3198  1090  300F               	movlw	15
  3199  1091  0AD9               	incf	mediatemperaturaNTC@i^(0+128),f
  3200  1092  0259               	subwf	mediatemperaturaNTC@i^(0+128),w
  3201  1093  1C03               	skipc
  3202  1094  282C               	goto	l7652
  3203  1095                     l7680:	
  3204                           
  3205                           ;SlaveLiofilizadorVer1.c: 708:      if(i<10)
  3206  1095  300A               	movlw	10
  3207  1096  1683               	bsf	3,5	;RP0=1, select bank1
  3208  1097  0259               	subwf	mediatemperaturaNTC@i^(0+128),w
  3209  1098  1C03               	btfss	3,0
  3210  1099  0008               	return
  3211                           
  3212                           ;SlaveLiofilizadorVer1.c: 713:      if(i==15)
  3213  109A  300F               	movlw	15
  3214  109B  0659               	xorwf	mediatemperaturaNTC@i^(0+128),w
  3215  109C  1D03               	btfss	3,2
  3216  109D  28AD               	goto	l7688
  3217                           
  3218                           ;SlaveLiofilizadorVer1.c: 714:         Temp/=(i-1);
  3219  109E  0859               	movf	mediatemperaturaNTC@i^(0+128),w
  3220  109F  3EFF               	addlw	255
  3221  10A0  1283               	bcf	3,5	;RP0=0, select bank0
  3222  10A1  00AB               	movwf	___xxtofl@val
  3223  10A2  30FF               	movlw	255
  3224  10A3  1803               	skipnc
  3225  10A4  3000               	movlw	0
  3226  10A5  00AC               	movwf	___xxtofl@val+1
  3227  10A6  01AD               	clrf	___xxtofl@val+2
  3228  10A7  1BAC               	btfsc	___xxtofl@val+1,7
  3229  10A8  03AD               	decf	___xxtofl@val+2,f
  3230  10A9  082D               	movf	___xxtofl@val+2,w
  3231  10AA  00AE               	movwf	___xxtofl@val+3
  3232  10AB  3001               	movlw	1
  3233  10AC  28B4               	goto	L1
  3234  10AD                     l7688:	
  3235                           
  3236                           ;SlaveLiofilizadorVer1.c: 716:         Temp/=(i);
  3237  10AD  0859               	movf	mediatemperaturaNTC@i^(0+128),w
  3238  10AE  1283               	bcf	3,5	;RP0=0, select bank0
  3239  10AF  120A  118A  25CC  160A  118A  	fcall	PL62	;call to abstracted procedure
  3240  10B4                     L1:	
  3241  10B4  24A9  160A  118A   	fcall	___xxtofl
  3242  10B7  2775  160A  118A   	fcall	PL18	;call to abstracted procedure
  3243  10BA  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3244  10BB  00A7               	movwf	(___fldiv@b+3)^(0+128)
  3245  10BC  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3246  10BD  00A6               	movwf	(___fldiv@b+2)^(0+128)
  3247  10BE  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3248  10BF  00A5               	movwf	(___fldiv@b+1)^(0+128)
  3249  10C0  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3250  10C1  00A4               	movwf	___fldiv@b^(0+128)
  3251  10C2  2517  160A  118A   	fcall	___fldiv
  3252  10C5  0823               	movf	(?___fldiv+3)^(0+128),w
  3253  10C6  00D8               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3254  10C7  0822               	movf	(?___fldiv+2)^(0+128),w
  3255  10C8  00D7               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3256  10C9  0821               	movf	(?___fldiv+1)^(0+128),w
  3257  10CA  00D6               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3258  10CB  0820               	movf	?___fldiv^(0+128),w
  3259  10CC  00D5               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3260                           
  3261                           ;SlaveLiofilizadorVer1.c: 718:      if(canal==0)
  3262  10CD  0854               	movf	mediatemperaturaNTC@canal^(0+128),w
  3263  10CE  1D03               	btfss	3,2
  3264  10CF  28E0               	goto	l7694
  3265                           
  3266                           ;SlaveLiofilizadorVer1.c: 719:         {;SlaveLiofilizadorVer1.c: 720:         Temperatu
      +                          ra0=Temp;
  3267  10D0  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3268  10D1  1703               	bsf	3,6	;RP1=1, select bank3
  3269  10D2  0097               	movwf	(_Temperatura0+3)^(0+384)
  3270  10D3  1303               	bcf	3,6	;RP1=0, select bank1
  3271  10D4  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3272  10D5  1703               	bsf	3,6	;RP1=1, select bank3
  3273  10D6  0096               	movwf	(_Temperatura0+2)^(0+384)
  3274  10D7  1303               	bcf	3,6	;RP1=0, select bank1
  3275  10D8  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3276  10D9  1703               	bsf	3,6	;RP1=1, select bank3
  3277  10DA  0095               	movwf	(_Temperatura0+1)^(0+384)
  3278  10DB  1303               	bcf	3,6	;RP1=0, select bank1
  3279  10DC  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3280  10DD  1703               	bsf	3,6	;RP1=1, select bank3
  3281  10DE  0094               	movwf	_Temperatura0^(0+384)
  3282                           
  3283                           ;SlaveLiofilizadorVer1.c: 721:         }
  3284  10DF  0008               	return
  3285  10E0                     l7694:	
  3286                           
  3287                           ;SlaveLiofilizadorVer1.c: 723:         {;SlaveLiofilizadorVer1.c: 724:         Temperatu
      +                          ra1=Temp;
  3288  10E0  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3289  10E1  1703               	bsf	3,6	;RP1=1, select bank3
  3290  10E2  0093               	movwf	(_Temperatura1+3)^(0+384)
  3291  10E3  1303               	bcf	3,6	;RP1=0, select bank1
  3292  10E4  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3293  10E5  1703               	bsf	3,6	;RP1=1, select bank3
  3294  10E6  0092               	movwf	(_Temperatura1+2)^(0+384)
  3295  10E7  1303               	bcf	3,6	;RP1=0, select bank1
  3296  10E8  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3297  10E9  1703               	bsf	3,6	;RP1=1, select bank3
  3298  10EA  0091               	movwf	(_Temperatura1+1)^(0+384)
  3299  10EB  1303               	bcf	3,6	;RP1=0, select bank1
  3300  10EC  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3301  10ED  1703               	bsf	3,6	;RP1=1, select bank3
  3302  10EE  0090               	movwf	_Temperatura1^(0+384)
  3303  10EF  0008               	return
  3304  10F0                     __end_of_mediatemperaturaNTC:	
  3305  10F0                     __ptext71:	
  3306 ;; *************** function _Rele0Ligado *****************
  3307 ;; Defined at:
  3308 ;;		line 937 in file "SlaveLiofilizadorVer1.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0
  3317 ;; Tracked objects:
  3318 ;;		On entry : 300/300
  3319 ;;		On exit  : 200/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3322 ;;      Params:         0       0       0       0       0
  3323 ;;      Locals:         0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0
  3325 ;;      Totals:         0       0       0       0       0
  3326 ;;Total ram usage:        0 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    1
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_mediatemperaturaNTC
  3333 ;;		_Auto_Relay0
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           
  3338                           ;psect for function _Rele0Ligado
  3339  10F0                     _Rele0Ligado:	
  3340  10F0                     l7508:	
  3341                           ;incstack = 0
  3342                           ; Regs used in _Rele0Ligado: [wreg+status,2+status,0]
  3343                           
  3344                           
  3345                           ;SlaveLiofilizadorVer1.c: 940:         if(TempoCNT_0==0)
  3346  10F0  1303               	bcf	3,6	;RP1=0, select bank1
  3347  10F1  086F               	movf	_TempoCNT_0^(0+128),w	;volatile
  3348  10F2  1D03               	btfss	3,2
  3349  10F3  0008               	return
  3350                           
  3351                           ;SlaveLiofilizadorVer1.c: 941:             {;SlaveLiofilizadorVer1.c: 944:             i
      +                          f(PORTCbits.RC0==0)
  3352  10F4  1283               	bcf	3,5	;RP0=0, select bank0
  3353  10F5  1807               	btfsc	7,0	;volatile
  3354  10F6  28FF               	goto	l7516
  3355                           
  3356                           ;SlaveLiofilizadorVer1.c: 945:               {;SlaveLiofilizadorVer1.c: 946:            
      +                             TempoCNT_0=TempoON_0;
  3357  10F7  1683               	bsf	3,5	;RP0=1, select bank3
  3358  10F8  1703               	bsf	3,6	;RP1=1, select bank3
  3359  10F9  083A               	movf	_TempoON_0^(0+384),w
  3360  10FA  1303               	bcf	3,6	;RP1=0, select bank1
  3361  10FB  00EF               	movwf	_TempoCNT_0^(0+128)	;volatile
  3362                           
  3363                           ;SlaveLiofilizadorVer1.c: 947:               PORTCbits.RC0=1;
  3364  10FC  1283               	bcf	3,5	;RP0=0, select bank0
  3365  10FD  1407               	bsf	7,0	;volatile
  3366                           
  3367                           ;SlaveLiofilizadorVer1.c: 948:               }
  3368  10FE  0008               	return
  3369  10FF                     l7516:	
  3370                           
  3371                           ;SlaveLiofilizadorVer1.c: 950:               {;SlaveLiofilizadorVer1.c: 951:            
      +                             TempoCNT_0=TempoOFF_0;
  3372  10FF  1683               	bsf	3,5	;RP0=1, select bank3
  3373  1100  1703               	bsf	3,6	;RP1=1, select bank3
  3374  1101  0839               	movf	_TempoOFF_0^(0+384),w
  3375  1102  1303               	bcf	3,6	;RP1=0, select bank1
  3376  1103  00EF               	movwf	_TempoCNT_0^(0+128)	;volatile
  3377                           
  3378                           ;SlaveLiofilizadorVer1.c: 952:               PORTCbits.RC0=0;
  3379  1104  1283               	bcf	3,5	;RP0=0, select bank0
  3380  1105  1007               	bcf	7,0	;volatile
  3381  1106  0008               	return
  3382  1107                     __end_of_Rele0Ligado:	
  3383  1107                     __ptext65:	
  3384 ;; *************** function _Rele1Ligado *****************
  3385 ;; Defined at:
  3386 ;;		line 958 in file "SlaveLiofilizadorVer1.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;		None
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;		None
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      void 
  3393 ;; Registers used:
  3394 ;;		wreg, status,2, status,0
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/300
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3400 ;;      Params:         0       0       0       0       0
  3401 ;;      Locals:         0       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0
  3403 ;;      Totals:         0       0       0       0       0
  3404 ;;Total ram usage:        0 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    1
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_mediatemperaturaNTC
  3411 ;;		_Auto_Relay1
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           
  3416                           ;psect for function _Rele1Ligado
  3417  1107                     _Rele1Ligado:	
  3418  1107                     l7520:	
  3419                           ;incstack = 0
  3420                           ; Regs used in _Rele1Ligado: [wreg+status,2+status,0]
  3421                           
  3422                           
  3423                           ;SlaveLiofilizadorVer1.c: 961:         if(TempoCNT_1==0)
  3424  1107  0874               	movf	_TempoCNT_1,w	;volatile
  3425  1108  1D03               	btfss	3,2
  3426  1109  0008               	return
  3427                           
  3428                           ;SlaveLiofilizadorVer1.c: 962:             {;SlaveLiofilizadorVer1.c: 965:             i
      +                          f(PORTCbits.RC1==0)
  3429  110A  1283               	bcf	3,5	;RP0=0, select bank0
  3430  110B  1303               	bcf	3,6	;RP1=0, select bank0
  3431  110C  1887               	btfsc	7,1	;volatile
  3432  110D  2916               	goto	l7528
  3433                           
  3434                           ;SlaveLiofilizadorVer1.c: 966:               {;SlaveLiofilizadorVer1.c: 967:            
      +                             TempoCNT_1=TempoON_1;
  3435  110E  1683               	bsf	3,5	;RP0=1, select bank3
  3436  110F  1703               	bsf	3,6	;RP1=1, select bank3
  3437  1110  0837               	movf	_TempoON_1^(0+384),w
  3438  1111  00F4               	movwf	_TempoCNT_1	;volatile
  3439                           
  3440                           ;SlaveLiofilizadorVer1.c: 968:               PORTCbits.RC1=1;
  3441  1112  1283               	bcf	3,5	;RP0=0, select bank0
  3442  1113  1303               	bcf	3,6	;RP1=0, select bank0
  3443  1114  1487               	bsf	7,1	;volatile
  3444                           
  3445                           ;SlaveLiofilizadorVer1.c: 969:               }
  3446  1115  0008               	return
  3447  1116                     l7528:	
  3448                           
  3449                           ;SlaveLiofilizadorVer1.c: 971:               {;SlaveLiofilizadorVer1.c: 972:            
      +                             TempoCNT_1=TempoOFF_1;
  3450  1116  1683               	bsf	3,5	;RP0=1, select bank3
  3451  1117  1703               	bsf	3,6	;RP1=1, select bank3
  3452  1118  0836               	movf	_TempoOFF_1^(0+384),w
  3453  1119  00F4               	movwf	_TempoCNT_1	;volatile
  3454                           
  3455                           ;SlaveLiofilizadorVer1.c: 973:               PORTCbits.RC1=0;
  3456  111A  1283               	bcf	3,5	;RP0=0, select bank0
  3457  111B  1303               	bcf	3,6	;RP1=0, select bank0
  3458  111C  1087               	bcf	7,1	;volatile
  3459  111D  0008               	return
  3460  111E                     __end_of_Rele1Ligado:	
  3461  111E                     __ptext9:	
  3462 ;; *************** function _eval_poly *****************
  3463 ;; Defined at:
  3464 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\evalpoly.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  x               4    0[BANK1 ] PTR int 
  3467 ;;  d               1    4[BANK1 ] PTR const 
  3468 ;;		 -> log@coeff(36), 
  3469 ;;  n               2    5[BANK1 ] int 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  res             4   12[BANK1 ] int 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  4    0[BANK1 ] int 
  3474 ;; Registers used:
  3475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 300/100
  3478 ;;		On exit  : 300/100
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3481 ;;      Params:         0       0       7       0       0
  3482 ;;      Locals:         0       0       4       0       0
  3483 ;;      Temps:          0       0       5       0       0
  3484 ;;      Totals:         0       0      16       0       0
  3485 ;;Total ram usage:       16 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:    3
  3488 ;; This function calls:
  3489 ;;		___fladd
  3490 ;;		___flmul
  3491 ;; This function is called by:
  3492 ;;		_log
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           
  3497                           ;psect for function _eval_poly
  3498  111E                     _eval_poly:	
  3499                           
  3500                           ;incstack = 0
  3501                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3502  111E  0825               	movf	eval_poly@n^(0+128),w
  3503  111F  00A7               	movwf	??_eval_poly^(0+128)
  3504  1120  3001               	movlw	1
  3505  1121  1003               	clrc
  3506  1122                     L2:	
  3507  1122  0DA7               	rlf	??_eval_poly^(0+128),f
  3508  1123  3EFF               	addlw	-1
  3509  1124  1003               	clrc
  3510  1125  1D03               	skipz
  3511  1126  2922               	goto	L2
  3512  1127  0D27               	rlf	??_eval_poly^(0+128),w
  3513  1128  0724               	addwf	eval_poly@d^(0+128),w
  3514  1129  0084               	movwf	4
  3515  112A  160A  158A  200A  160A  118A  	fcall	stringdir
  3516  112F  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3517  1130  160A  158A  200A  160A  118A  	fcall	stringdir
  3518  1135  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3519  1136  160A  158A  200A  160A  118A  	fcall	stringdir
  3520  113B  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3521  113C  160A  158A  200A  160A  118A  	fcall	stringdir
  3522  1141  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3523  1142  082B               	movf	(??_eval_poly+4)^(0+128),w
  3524  1143  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3525  1144  082A               	movf	(??_eval_poly+3)^(0+128),w
  3526  1145  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3527  1146  0829               	movf	(??_eval_poly+2)^(0+128),w
  3528  1147  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3529  1148  0828               	movf	(??_eval_poly+1)^(0+128),w
  3530  1149                     L4:	
  3531  1149  00AC               	movwf	eval_poly@res^(0+128)
  3532  114A  0825               	movf	eval_poly@n^(0+128),w
  3533  114B  0426               	iorwf	(eval_poly@n+1)^(0+128),w
  3534  114C  1903               	btfsc	3,2
  3535  114D  29BF               	goto	l6640
  3536  114E  30FF               	movlw	-1
  3537  114F  07A5               	addwf	eval_poly@n^(0+128),f
  3538  1150  1C03               	skipc
  3539  1151  03A6               	decf	(eval_poly@n+1)^(0+128),f
  3540  1152  0825               	movf	eval_poly@n^(0+128),w
  3541  1153  00A7               	movwf	??_eval_poly^(0+128)
  3542  1154  3001               	movlw	1
  3543  1155  1003               	clrc
  3544  1156                     L3:	
  3545  1156  0DA7               	rlf	??_eval_poly^(0+128),f
  3546  1157  3EFF               	addlw	-1
  3547  1158  1003               	clrc
  3548  1159  1D03               	skipz
  3549  115A  2956               	goto	L3
  3550  115B  0D27               	rlf	??_eval_poly^(0+128),w
  3551  115C  0724               	addwf	eval_poly@d^(0+128),w
  3552  115D  0084               	movwf	4
  3553  115E  160A  158A  200A  160A  118A  	fcall	stringdir
  3554  1163  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3555  1164  160A  158A  200A  160A  118A  	fcall	stringdir
  3556  1169  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3557  116A  160A  158A  200A  160A  118A  	fcall	stringdir
  3558  116F  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3559  1170  160A  158A  200A  160A  118A  	fcall	stringdir
  3560  1175  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3561  1176  082B               	movf	(??_eval_poly+4)^(0+128),w
  3562  1177  1283               	bcf	3,5	;RP0=0, select bank0
  3563  1178  00BC               	movwf	___fladd@b+3
  3564  1179  1683               	bsf	3,5	;RP0=1, select bank1
  3565  117A  082A               	movf	(??_eval_poly+3)^(0+128),w
  3566  117B  1283               	bcf	3,5	;RP0=0, select bank0
  3567  117C  00BB               	movwf	___fladd@b+2
  3568  117D  1683               	bsf	3,5	;RP0=1, select bank1
  3569  117E  0829               	movf	(??_eval_poly+2)^(0+128),w
  3570  117F  1283               	bcf	3,5	;RP0=0, select bank0
  3571  1180  00BA               	movwf	___fladd@b+1
  3572  1181  1683               	bsf	3,5	;RP0=1, select bank1
  3573  1182  0828               	movf	(??_eval_poly+1)^(0+128),w
  3574  1183  1283               	bcf	3,5	;RP0=0, select bank0
  3575  1184  00B9               	movwf	___fladd@b
  3576  1185  1683               	bsf	3,5	;RP0=1, select bank1
  3577  1186  082F               	movf	(eval_poly@res+3)^(0+128),w
  3578  1187  1283               	bcf	3,5	;RP0=0, select bank0
  3579  1188  00D8               	movwf	___flmul@b+3
  3580  1189  1683               	bsf	3,5	;RP0=1, select bank1
  3581  118A  082E               	movf	(eval_poly@res+2)^(0+128),w
  3582  118B  1283               	bcf	3,5	;RP0=0, select bank0
  3583  118C  00D7               	movwf	___flmul@b+2
  3584  118D  1683               	bsf	3,5	;RP0=1, select bank1
  3585  118E  082D               	movf	(eval_poly@res+1)^(0+128),w
  3586  118F  1283               	bcf	3,5	;RP0=0, select bank0
  3587  1190  00D6               	movwf	___flmul@b+1
  3588  1191  1683               	bsf	3,5	;RP0=1, select bank1
  3589  1192  082C               	movf	eval_poly@res^(0+128),w
  3590  1193  1283               	bcf	3,5	;RP0=0, select bank0
  3591  1194  00D5               	movwf	___flmul@b
  3592  1195  1683               	bsf	3,5	;RP0=1, select bank1
  3593  1196  0823               	movf	(eval_poly@x+3)^(0+128),w
  3594  1197  1283               	bcf	3,5	;RP0=0, select bank0
  3595  1198  00DC               	movwf	___flmul@a+3
  3596  1199  1683               	bsf	3,5	;RP0=1, select bank1
  3597  119A  0822               	movf	(eval_poly@x+2)^(0+128),w
  3598  119B  1283               	bcf	3,5	;RP0=0, select bank0
  3599  119C  00DB               	movwf	___flmul@a+2
  3600  119D  1683               	bsf	3,5	;RP0=1, select bank1
  3601  119E  0821               	movf	(eval_poly@x+1)^(0+128),w
  3602  119F  1283               	bcf	3,5	;RP0=0, select bank0
  3603  11A0  00DA               	movwf	___flmul@a+1
  3604  11A1  1683               	bsf	3,5	;RP0=1, select bank1
  3605  11A2  0820               	movf	eval_poly@x^(0+128),w
  3606  11A3  1283               	bcf	3,5	;RP0=0, select bank0
  3607  11A4  00D9               	movwf	___flmul@a
  3608  11A5  120A  158A  23DC  160A  118A  	fcall	___flmul
  3609  11AA  27A1  160A  118A   	fcall	PL28	;call to abstracted procedure
  3610  11AD  21C8  160A  118A   	fcall	___fladd
  3611  11B0  083C               	movf	?___fladd+3,w
  3612  11B1  1683               	bsf	3,5	;RP0=1, select bank1
  3613  11B2  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3614  11B3  1283               	bcf	3,5	;RP0=0, select bank0
  3615  11B4  083B               	movf	?___fladd+2,w
  3616  11B5  1683               	bsf	3,5	;RP0=1, select bank1
  3617  11B6  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3618  11B7  1283               	bcf	3,5	;RP0=0, select bank0
  3619  11B8  083A               	movf	?___fladd+1,w
  3620  11B9  1683               	bsf	3,5	;RP0=1, select bank1
  3621  11BA  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3622  11BB  1283               	bcf	3,5	;RP0=0, select bank0
  3623  11BC  0839               	movf	?___fladd,w
  3624  11BD  1683               	bsf	3,5	;RP0=1, select bank1
  3625  11BE  2949               	goto	L4
  3626  11BF                     l6640:	
  3627  11BF  082F               	movf	(eval_poly@res+3)^(0+128),w
  3628  11C0  00A3               	movwf	(?_eval_poly+3)^(0+128)
  3629  11C1  082E               	movf	(eval_poly@res+2)^(0+128),w
  3630  11C2  00A2               	movwf	(?_eval_poly+2)^(0+128)
  3631  11C3  082D               	movf	(eval_poly@res+1)^(0+128),w
  3632  11C4  00A1               	movwf	(?_eval_poly+1)^(0+128)
  3633  11C5  082C               	movf	eval_poly@res^(0+128),w
  3634  11C6  00A0               	movwf	?_eval_poly^(0+128)
  3635  11C7  0008               	return
  3636  11C8                     __end_of_eval_poly:	
  3637  11C8                     __ptext69:	
  3638 ;; *************** function ___fladd *****************
  3639 ;; Defined at:
  3640 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  b               4   25[BANK0 ] void 
  3643 ;;  a               4   29[BANK0 ] void 
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;  grs             1   44[BANK0 ] unsigned char 
  3646 ;;  bexp            1   43[BANK0 ] unsigned char 
  3647 ;;  aexp            1   42[BANK0 ] unsigned char 
  3648 ;;  signs           1   41[BANK0 ] unsigned char 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  4   25[BANK0 ] unsigned char 
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0, btemp+1
  3653 ;; Tracked objects:
  3654 ;;		On entry : 300/0
  3655 ;;		On exit  : 300/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3658 ;;      Params:         0       8       0       0       0
  3659 ;;      Locals:         0       4       0       0       0
  3660 ;;      Temps:          0       8       0       0       0
  3661 ;;      Totals:         0      20       0       0       0
  3662 ;;Total ram usage:       20 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    1
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_mediatemperaturaNTC
  3669 ;;		_ADC_Read_NTC
  3670 ;;		___flsub
  3671 ;;		_log
  3672 ;;		_eval_poly
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           
  3677                           ;psect for function ___fladd
  3678  11C8                     ___fladd:	
  3679                           
  3680                           ;incstack = 0
  3681                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3682  11C8  083C               	movf	___fladd@b+3,w
  3683  11C9  00C9               	movwf	___fladd@signs
  3684  11CA  3080               	movlw	128
  3685  11CB  05C9               	andwf	___fladd@signs,f
  3686  11CC  1003               	clrc
  3687  11CD  0D3C               	rlf	___fladd@b+3,w
  3688  11CE  00CB               	movwf	___fladd@bexp
  3689  11CF  1BBB               	btfsc	___fladd@b+2,7
  3690  11D0  144B               	bsf	___fladd@bexp,0
  3691  11D1  084B               	movf	___fladd@bexp,w
  3692  11D2  1903               	btfsc	3,2
  3693  11D3  29DC               	goto	l1283
  3694  11D4  0F4B               	incfsz	___fladd@bexp,w
  3695  11D5  29DA               	goto	l1284
  3696  11D6  01B9               	clrf	___fladd@b
  3697  11D7  01BA               	clrf	___fladd@b+1
  3698  11D8  01BB               	clrf	___fladd@b+2
  3699  11D9  01BC               	clrf	___fladd@b+3
  3700  11DA                     l1284:	
  3701  11DA  17BB               	bsf	___fladd@b+2,7
  3702  11DB  29DF               	goto	L19
  3703  11DC                     l1283:	
  3704  11DC  01B9               	clrf	___fladd@b
  3705  11DD  01BA               	clrf	___fladd@b+1
  3706  11DE  01BB               	clrf	___fladd@b+2
  3707  11DF                     L19:	
  3708  11DF  01BC               	clrf	___fladd@b+3
  3709  11E0  0840               	movf	___fladd@a+3,w
  3710  11E1  00CA               	movwf	___fladd@aexp
  3711  11E2  3080               	movlw	128
  3712  11E3  05CA               	andwf	___fladd@aexp,f
  3713  11E4  084A               	movf	___fladd@aexp,w
  3714  11E5  0649               	xorwf	___fladd@signs,w
  3715  11E6  1D03               	btfss	3,2
  3716  11E7  1749               	bsf	___fladd@signs,6
  3717  11E8  1003               	clrc
  3718  11E9  0D40               	rlf	___fladd@a+3,w
  3719  11EA  00CA               	movwf	___fladd@aexp
  3720  11EB  1BBF               	btfsc	___fladd@a+2,7
  3721  11EC  144A               	bsf	___fladd@aexp,0
  3722  11ED  084A               	movf	___fladd@aexp,w
  3723  11EE  1903               	btfsc	3,2
  3724  11EF  29F8               	goto	l1288
  3725  11F0  0F4A               	incfsz	___fladd@aexp,w
  3726  11F1  29F6               	goto	l1289
  3727  11F2  01BD               	clrf	___fladd@a
  3728  11F3  01BE               	clrf	___fladd@a+1
  3729  11F4  01BF               	clrf	___fladd@a+2
  3730  11F5  01C0               	clrf	___fladd@a+3
  3731  11F6                     l1289:	
  3732  11F6  17BF               	bsf	___fladd@a+2,7
  3733  11F7  29FB               	goto	L20
  3734  11F8                     l1288:	
  3735  11F8  01BD               	clrf	___fladd@a
  3736  11F9  01BE               	clrf	___fladd@a+1
  3737  11FA  01BF               	clrf	___fladd@a+2
  3738  11FB                     L20:	
  3739  11FB  01C0               	clrf	___fladd@a+3
  3740  11FC  084B               	movf	___fladd@bexp,w
  3741  11FD  024A               	subwf	___fladd@aexp,w
  3742  11FE  1803               	skipnc
  3743  11FF  2A22               	goto	l6148
  3744  1200  1F49               	btfss	___fladd@signs,6
  3745  1201  2A04               	goto	l6118
  3746  1202  3080               	movlw	128
  3747  1203  06C9               	xorwf	___fladd@signs,f
  3748  1204                     l6118:	
  3749  1204  084B               	movf	___fladd@bexp,w
  3750  1205  00CC               	movwf	___fladd@grs
  3751  1206  084A               	movf	___fladd@aexp,w
  3752  1207  00CB               	movwf	___fladd@bexp
  3753  1208  084C               	movf	___fladd@grs,w
  3754  1209  00CA               	movwf	___fladd@aexp
  3755  120A  0839               	movf	___fladd@b,w
  3756  120B  00CC               	movwf	___fladd@grs
  3757  120C  083D               	movf	___fladd@a,w
  3758  120D  00B9               	movwf	___fladd@b
  3759  120E  084C               	movf	___fladd@grs,w
  3760  120F  00BD               	movwf	___fladd@a
  3761  1210  083A               	movf	___fladd@b+1,w
  3762  1211  00CC               	movwf	___fladd@grs
  3763  1212  083E               	movf	___fladd@a+1,w
  3764  1213  00BA               	movwf	___fladd@b+1
  3765  1214  084C               	movf	___fladd@grs,w
  3766  1215  00BE               	movwf	___fladd@a+1
  3767  1216  083B               	movf	___fladd@b+2,w
  3768  1217  00CC               	movwf	___fladd@grs
  3769  1218  083F               	movf	___fladd@a+2,w
  3770  1219  00BB               	movwf	___fladd@b+2
  3771  121A  084C               	movf	___fladd@grs,w
  3772  121B  00BF               	movwf	___fladd@a+2
  3773  121C  083C               	movf	___fladd@b+3,w
  3774  121D  00CC               	movwf	___fladd@grs
  3775  121E  0840               	movf	___fladd@a+3,w
  3776  121F  00BC               	movwf	___fladd@b+3
  3777  1220  084C               	movf	___fladd@grs,w
  3778  1221  00C0               	movwf	___fladd@a+3
  3779  1222                     l6148:	
  3780  1222  01CC               	clrf	___fladd@grs
  3781  1223  084A               	movf	___fladd@aexp,w
  3782  1224  00C1               	movwf	??___fladd
  3783  1225  01C2               	clrf	??___fladd+1
  3784  1226  0842               	movf	??___fladd+1,w
  3785  1227  00C4               	movwf	??___fladd+3
  3786  1228  084B               	movf	___fladd@bexp,w
  3787  1229  0241               	subwf	??___fladd,w
  3788  122A  00C3               	movwf	??___fladd+2
  3789  122B  1C03               	skipc
  3790  122C  03C4               	decf	??___fladd+3,f
  3791  122D  0844               	movf	??___fladd+3,w
  3792  122E  3A80               	xorlw	128
  3793  122F  00FF               	movwf	127
  3794  1230  3080               	movlw	128
  3795  1231  027F               	subwf	127,w
  3796  1232  1D03               	skipz
  3797  1233  2A36               	goto	u5365
  3798  1234  301A               	movlw	26
  3799  1235  0243               	subwf	??___fladd+2,w
  3800  1236                     u5365:	
  3801  1236  1C03               	skipc
  3802  1237  2A57               	goto	l6164
  3803  1238  1283               	bcf	3,5	;RP0=0, select bank0
  3804  1239  1303               	bcf	3,6	;RP1=0, select bank0
  3805  123A  083C               	movf	___fladd@b+3,w
  3806  123B  043B               	iorwf	___fladd@b+2,w
  3807  123C  043A               	iorwf	___fladd@b+1,w
  3808  123D  0439               	iorwf	___fladd@b,w
  3809  123E  1903               	btfsc	3,2
  3810  123F  2A42               	goto	u5370
  3811  1240  3001               	movlw	1
  3812  1241  2A43               	goto	u5380
  3813  1242                     u5370:	
  3814  1242  3000               	movlw	0
  3815  1243                     u5380:	
  3816  1243  00CC               	movwf	___fladd@grs
  3817  1244  01B9               	clrf	___fladd@b
  3818  1245  01BA               	clrf	___fladd@b+1
  3819  1246  01BB               	clrf	___fladd@b+2
  3820  1247  01BC               	clrf	___fladd@b+3
  3821  1248  084A               	movf	___fladd@aexp,w
  3822  1249  00CB               	movwf	___fladd@bexp
  3823  124A  2A5D               	goto	l1294
  3824  124B                     l1296:	
  3825  124B  1C4C               	btfss	___fladd@grs,0
  3826  124C  2A52               	goto	l1297
  3827  124D  1003               	clrc
  3828  124E  0C4C               	rrf	___fladd@grs,w
  3829  124F  3801               	iorlw	1
  3830  1250  00CC               	movwf	___fladd@grs
  3831  1251  2A54               	goto	l1298
  3832  1252                     l1297:	
  3833  1252  1003               	clrc
  3834  1253  0CCC               	rrf	___fladd@grs,f
  3835  1254                     l1298:	
  3836  1254  27B3  160A  118A   	fcall	PL44	;call to abstracted procedure
  3837  1257                     l6164:	
  3838  1257  1283               	bcf	3,5	;RP0=0, select bank0
  3839  1258  1303               	bcf	3,6	;RP1=0, select bank0
  3840  1259  084A               	movf	___fladd@aexp,w
  3841  125A  024B               	subwf	___fladd@bexp,w
  3842  125B  1C03               	skipc
  3843  125C  2A4B               	goto	l1296
  3844  125D                     l1294:	
  3845  125D  1B49               	btfsc	___fladd@signs,6
  3846  125E  2A86               	goto	l6184
  3847  125F  084B               	movf	___fladd@bexp,w
  3848  1260  1D03               	btfss	3,2
  3849  1261  2A63               	goto	l6170
  3850  1262  2FCF               	ljmp	PL78	;call to abstracted procedure
  3851  1263                     l6170:	
  3852  1263  083D               	movf	___fladd@a,w
  3853  1264  07B9               	addwf	___fladd@b,f
  3854  1265  083E               	movf	___fladd@a+1,w
  3855  1266  1103               	clrz
  3856  1267  1803               	skipnc
  3857  1268  3E01               	addlw	1
  3858  1269  1D03               	btfss	3,2
  3859  126A  07BA               	addwf	___fladd@b+1,f
  3860  126B  083F               	movf	___fladd@a+2,w
  3861  126C  1103               	clrz
  3862  126D  1803               	skipnc
  3863  126E  3E01               	addlw	1
  3864  126F  1D03               	btfss	3,2
  3865  1270  07BB               	addwf	___fladd@b+2,f
  3866  1271  0840               	movf	___fladd@a+3,w
  3867  1272  1103               	clrz
  3868  1273  1803               	skipnc
  3869  1274  3E01               	addlw	1
  3870  1275  1D03               	btfss	3,2
  3871  1276  07BC               	addwf	___fladd@b+3,f
  3872  1277  1C3C               	btfss	___fladd@b+3,0
  3873  1278  2B02               	goto	l6214
  3874  1279  1C4C               	btfss	___fladd@grs,0
  3875  127A  2A80               	goto	l1305
  3876  127B  1003               	clrc
  3877  127C  0C4C               	rrf	___fladd@grs,w
  3878  127D  3801               	iorlw	1
  3879  127E  00CC               	movwf	___fladd@grs
  3880  127F  2A82               	goto	l1306
  3881  1280                     l1305:	
  3882  1280  1003               	clrc
  3883  1281  0CCC               	rrf	___fladd@grs,f
  3884  1282                     l1306:	
  3885  1282  27B3  160A  118A   	fcall	PL44	;call to abstracted procedure
  3886  1285  2B02               	goto	l6214
  3887  1286                     l6184:	
  3888  1286  083C               	movf	___fladd@b+3,w
  3889  1287  3A80               	xorlw	128
  3890  1288  00FF               	movwf	127
  3891  1289  0840               	movf	___fladd@a+3,w
  3892  128A  3A80               	xorlw	128
  3893  128B  027F               	subwf	127,w
  3894  128C  1D03               	skipz
  3895  128D  2A98               	goto	u5483
  3896  128E  083F               	movf	___fladd@a+2,w
  3897  128F  023B               	subwf	___fladd@b+2,w
  3898  1290  1D03               	skipz
  3899  1291  2A98               	goto	u5483
  3900  1292  083E               	movf	___fladd@a+1,w
  3901  1293  023A               	subwf	___fladd@b+1,w
  3902  1294  1D03               	skipz
  3903  1295  2A98               	goto	u5483
  3904  1296  083D               	movf	___fladd@a,w
  3905  1297  0239               	subwf	___fladd@b,w
  3906  1298                     u5483:	
  3907  1298  1803               	skipnc
  3908  1299  2AD8               	goto	l6194
  3909  129A  30FF               	movlw	255
  3910  129B  00C1               	movwf	??___fladd
  3911  129C  00C2               	movwf	??___fladd+1
  3912  129D  00C3               	movwf	??___fladd+2
  3913  129E  00C4               	movwf	??___fladd+3
  3914  129F  083D               	movf	___fladd@a,w
  3915  12A0  00C5               	movwf	??___fladd+4
  3916  12A1  083E               	movf	___fladd@a+1,w
  3917  12A2  00C6               	movwf	??___fladd+5
  3918  12A3  083F               	movf	___fladd@a+2,w
  3919  12A4  00C7               	movwf	??___fladd+6
  3920  12A5  0840               	movf	___fladd@a+3,w
  3921  12A6  00C8               	movwf	??___fladd+7
  3922  12A7  0839               	movf	___fladd@b,w
  3923  12A8  02C5               	subwf	??___fladd+4,f
  3924  12A9  083A               	movf	___fladd@b+1,w
  3925  12AA  1C03               	skipc
  3926  12AB  0F3A               	incfsz	___fladd@b+1,w
  3927  12AC  02C6               	subwf	??___fladd+5,f
  3928  12AD  083B               	movf	___fladd@b+2,w
  3929  12AE  1C03               	skipc
  3930  12AF  0F3B               	incfsz	___fladd@b+2,w
  3931  12B0  02C7               	subwf	??___fladd+6,f
  3932  12B1  083C               	movf	___fladd@b+3,w
  3933  12B2  1C03               	skipc
  3934  12B3  0F3C               	incfsz	___fladd@b+3,w
  3935  12B4  02C8               	subwf	??___fladd+7,f
  3936  12B5  0845               	movf	??___fladd+4,w
  3937  12B6  07C1               	addwf	??___fladd,f
  3938  12B7  0846               	movf	??___fladd+5,w
  3939  12B8  1803               	skipnc
  3940  12B9  0F46               	incfsz	??___fladd+5,w
  3941  12BA  07C2               	addwf	??___fladd+1,f
  3942  12BB  0847               	movf	??___fladd+6,w
  3943  12BC  1803               	skipnc
  3944  12BD  0F47               	incfsz	??___fladd+6,w
  3945  12BE  07C3               	addwf	??___fladd+2,f
  3946  12BF  0848               	movf	??___fladd+7,w
  3947  12C0  1803               	skipnc
  3948  12C1  0A48               	incf	??___fladd+7,w
  3949  12C2  07C4               	addwf	??___fladd+3,f
  3950  12C3  0844               	movf	??___fladd+3,w
  3951  12C4  00BC               	movwf	___fladd@b+3
  3952  12C5  0843               	movf	??___fladd+2,w
  3953  12C6  00BB               	movwf	___fladd@b+2
  3954  12C7  0842               	movf	??___fladd+1,w
  3955  12C8  00BA               	movwf	___fladd@b+1
  3956  12C9  0841               	movf	??___fladd,w
  3957  12CA  00B9               	movwf	___fladd@b
  3958  12CB  3080               	movlw	128
  3959  12CC  06C9               	xorwf	___fladd@signs,f
  3960  12CD  09CC               	comf	___fladd@grs,f
  3961  12CE  0FCC               	incfsz	___fladd@grs,f
  3962  12CF  2AE6               	goto	l1311
  3963  12D0  0AB9               	incf	___fladd@b,f
  3964  12D1  1903               	skipnz
  3965  12D2  0ABA               	incf	___fladd@b+1,f
  3966  12D3  1903               	skipnz
  3967  12D4  0ABB               	incf	___fladd@b+2,f
  3968  12D5  1903               	skipnz
  3969  12D6  0ABC               	incf	___fladd@b+3,f
  3970  12D7  2AE6               	goto	l1311
  3971  12D8                     l6194:	
  3972  12D8  083D               	movf	___fladd@a,w
  3973  12D9  02B9               	subwf	___fladd@b,f
  3974  12DA  083E               	movf	___fladd@a+1,w
  3975  12DB  1C03               	skipc
  3976  12DC  0F3E               	incfsz	___fladd@a+1,w
  3977  12DD  02BA               	subwf	___fladd@b+1,f
  3978  12DE  083F               	movf	___fladd@a+2,w
  3979  12DF  1C03               	skipc
  3980  12E0  0F3F               	incfsz	___fladd@a+2,w
  3981  12E1  02BB               	subwf	___fladd@b+2,f
  3982  12E2  0840               	movf	___fladd@a+3,w
  3983  12E3  1C03               	skipc
  3984  12E4  0F40               	incfsz	___fladd@a+3,w
  3985  12E5  02BC               	subwf	___fladd@b+3,f
  3986  12E6                     l1311:	
  3987  12E6  083C               	movf	___fladd@b+3,w
  3988  12E7  043B               	iorwf	___fladd@b+2,w
  3989  12E8  043A               	iorwf	___fladd@b+1,w
  3990  12E9  0439               	iorwf	___fladd@b,w
  3991  12EA  1D03               	skipz
  3992  12EB  2B00               	goto	l6212
  3993  12EC  084C               	movf	___fladd@grs,w
  3994  12ED  1D03               	btfss	3,2
  3995  12EE  2B00               	goto	l6212
  3996  12EF  2FCF               	ljmp	PL78	;call to abstracted procedure
  3997  12F0                     l6200:	
  3998  12F0  1003               	clrc
  3999  12F1  0DB9               	rlf	___fladd@b,f
  4000  12F2  0DBA               	rlf	___fladd@b+1,f
  4001  12F3  0DBB               	rlf	___fladd@b+2,f
  4002  12F4  0DBC               	rlf	___fladd@b+3,f
  4003  12F5  1BCC               	btfsc	___fladd@grs,7
  4004  12F6  1439               	bsf	___fladd@b,0
  4005  12F7  1C4C               	btfss	___fladd@grs,0
  4006  12F8  2AFB               	goto	l1316
  4007  12F9  1403               	setc
  4008  12FA  2AFC               	goto	L21
  4009  12FB                     l1316:	
  4010  12FB  1003               	clrc
  4011  12FC                     L21:	
  4012  12FC  0DCC               	rlf	___fladd@grs,f
  4013  12FD  084B               	movf	___fladd@bexp,w
  4014  12FE  1D03               	btfss	3,2
  4015  12FF  03CB               	decf	___fladd@bexp,f
  4016  1300                     l6212:	
  4017  1300  1FBB               	btfss	___fladd@b+2,7
  4018  1301  2AF0               	goto	l6200
  4019  1302                     l6214:	
  4020  1302  01CA               	clrf	___fladd@aexp
  4021  1303  1FCC               	btfss	___fladd@grs,7
  4022  1304  2B0D               	goto	l6224
  4023  1305  084C               	movf	___fladd@grs,w
  4024  1306  397F               	andlw	127
  4025  1307  1903               	btfsc	3,2
  4026  1308  1839               	btfsc	___fladd@b,0
  4027  1309  2B0B               	goto	l6220
  4028  130A  2B0D               	goto	l6224
  4029  130B                     l6220:	
  4030  130B  01CA               	clrf	___fladd@aexp
  4031  130C  0ACA               	incf	___fladd@aexp,f
  4032  130D                     l6224:	
  4033  130D  084A               	movf	___fladd@aexp,w
  4034  130E  1903               	btfsc	3,2
  4035  130F  2B20               	goto	l6236
  4036  1310  0AB9               	incf	___fladd@b,f
  4037  1311  1903               	skipnz
  4038  1312  0ABA               	incf	___fladd@b+1,f
  4039  1313  1903               	skipnz
  4040  1314  0ABB               	incf	___fladd@b+2,f
  4041  1315  1903               	skipnz
  4042  1316  0ABC               	incf	___fladd@b+3,f
  4043  1317  1C3C               	btfss	___fladd@b+3,0
  4044  1318  2B20               	goto	l6236
  4045  1319  0D3C               	rlf	___fladd@b+3,w
  4046  131A  0CBC               	rrf	___fladd@b+3,f
  4047  131B  0CBB               	rrf	___fladd@b+2,f
  4048  131C  0CBA               	rrf	___fladd@b+1,f
  4049  131D  0CB9               	rrf	___fladd@b,f
  4050  131E  0F4B               	incfsz	___fladd@bexp,w
  4051  131F  0ACB               	incf	___fladd@bexp,f
  4052  1320                     l6236:	
  4053  1320  0A4B               	incf	___fladd@bexp,w
  4054  1321  1D03               	btfss	3,2
  4055  1322  084B               	movf	___fladd@bexp,w
  4056  1323  1D03               	btfss	3,2
  4057  1324  2B2C               	goto	l6244
  4058  1325  01B9               	clrf	___fladd@b
  4059  1326  01BA               	clrf	___fladd@b+1
  4060  1327  01BB               	clrf	___fladd@b+2
  4061  1328  01BC               	clrf	___fladd@b+3
  4062  1329  084B               	movf	___fladd@bexp,w
  4063  132A  1903               	btfsc	3,2
  4064  132B  01C9               	clrf	___fladd@signs
  4065  132C                     l6244:	
  4066  132C  1C4B               	btfss	___fladd@bexp,0
  4067  132D  2B30               	goto	l1331
  4068  132E  17BB               	bsf	___fladd@b+2,7
  4069  132F  2B31               	goto	l6248
  4070  1330                     l1331:	
  4071  1330  13BB               	bcf	___fladd@b+2,7
  4072  1331                     l6248:	
  4073  1331  1003               	clrc
  4074  1332  0C4B               	rrf	___fladd@bexp,w
  4075  1333  00BC               	movwf	___fladd@b+3
  4076  1334  1BC9               	btfsc	___fladd@signs,7
  4077  1335  17BC               	bsf	___fladd@b+3,7
  4078  1336  0008               	return
  4079  1337                     __end_of___fladd:	
  4080  1337                     __ptext5:	
  4081 ;; *************** function _ADC_Read_NTC *****************
  4082 ;; Defined at:
  4083 ;;		line 56 in file "adc.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  canal           1    wreg     unsigned char 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  canal           1    0[COMMON] unsigned char 
  4088 ;;  temperatura     4   43[BANK1 ] float 
  4089 ;;  resistencia     4   36[BANK1 ] float 
  4090 ;;  calc            4   30[BANK1 ] float 
  4091 ;;  value           2   41[BANK1 ] unsigned int 
  4092 ;;  B               2   34[BANK1 ] int 
  4093 ;;  i               1   40[BANK1 ] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  4   25[BANK1 ] float 
  4096 ;; Registers used:
  4097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4098 ;; Tracked objects:
  4099 ;;		On entry : 300/100
  4100 ;;		On exit  : 300/100
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4103 ;;      Params:         0       0       5       0       0
  4104 ;;      Locals:         0       0      17       0       0
  4105 ;;      Temps:          0       0       0       0       0
  4106 ;;      Totals:         0       0      22       0       0
  4107 ;;Total ram usage:       22 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; Hardware stack levels required when called:    5
  4110 ;; This function calls:
  4111 ;;		___fladd
  4112 ;;		___fldiv
  4113 ;;		___flmul
  4114 ;;		___flsub
  4115 ;;		___lwdiv
  4116 ;;		___xxtofl
  4117 ;;		_captura
  4118 ;;		_log
  4119 ;; This function is called by:
  4120 ;;		_mediatemperaturaNTC
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           
  4125                           ;psect for function _ADC_Read_NTC
  4126  1337                     _ADC_Read_NTC:	
  4127                           
  4128                           ;adc.c: 57:     int B = 3975;
  4129                           
  4130                           ;incstack = 0
  4131                           ; Regs used in _ADC_Read_NTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4132  1337  3087               	movlw	135
  4133  1338  00C2               	movwf	ADC_Read_NTC@B^(0+128)
  4134  1339  300F               	movlw	15
  4135  133A  00C3               	movwf	(ADC_Read_NTC@B^(0+128)+1)
  4136                           
  4137                           ;adc.c: 58:     float resistencia;;adc.c: 59:     float temperatura;;adc.c: 60:     floa
      +                          t calc;;adc.c: 61:     unsigned int value;;adc.c: 62:     unsigned char i;;adc.c: 64:   
      +                            value=0;
  4138  133B  01C9               	clrf	ADC_Read_NTC@value^(0+128)
  4139  133C  01CA               	clrf	(ADC_Read_NTC@value+1)^(0+128)
  4140                           
  4141                           ;adc.c: 65:     for(i=1;i<=50;i++)
  4142  133D  01C8               	clrf	ADC_Read_NTC@i^(0+128)
  4143  133E  0AC8               	incf	ADC_Read_NTC@i^(0+128),f
  4144  133F                     l7462:	
  4145                           
  4146                           ;adc.c: 66:         value+=captura();
  4147  133F  267E  160A  118A   	fcall	_captura
  4148  1342  0820               	movf	?_captura,w
  4149  1343  1683               	bsf	3,5	;RP0=1, select bank1
  4150  1344  07C9               	addwf	ADC_Read_NTC@value^(0+128),f
  4151  1345  1803               	skipnc
  4152  1346  0ACA               	incf	(ADC_Read_NTC@value+1)^(0+128),f
  4153  1347  1283               	bcf	3,5	;RP0=0, select bank0
  4154  1348  0821               	movf	?_captura+1,w
  4155  1349  1683               	bsf	3,5	;RP0=1, select bank1
  4156  134A  07CA               	addwf	(ADC_Read_NTC@value+1)^(0+128),f
  4157  134B  3033               	movlw	51
  4158  134C  0AC8               	incf	ADC_Read_NTC@i^(0+128),f
  4159  134D  0248               	subwf	ADC_Read_NTC@i^(0+128),w
  4160  134E  1C03               	skipc
  4161  134F  2B3F               	goto	l7462
  4162                           
  4163                           ;adc.c: 67:     value/=(i-1);
  4164  1350  0848               	movf	ADC_Read_NTC@i^(0+128),w
  4165  1351  1283               	bcf	3,5	;RP0=0, select bank0
  4166  1352  00A0               	movwf	___lwdiv@divisor
  4167  1353  30FF               	movlw	255
  4168  1354  01A1               	clrf	___lwdiv@divisor+1
  4169  1355  07A0               	addwf	___lwdiv@divisor,f
  4170  1356  1803               	skipnc
  4171  1357  0AA1               	incf	___lwdiv@divisor+1,f
  4172  1358  07A1               	addwf	___lwdiv@divisor+1,f
  4173  1359  1683               	bsf	3,5	;RP0=1, select bank1
  4174  135A  084A               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  4175  135B  1283               	bcf	3,5	;RP0=0, select bank0
  4176  135C  00A3               	movwf	___lwdiv@dividend+1
  4177  135D  1683               	bsf	3,5	;RP0=1, select bank1
  4178  135E  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4179  135F  1283               	bcf	3,5	;RP0=0, select bank0
  4180  1360  00A2               	movwf	___lwdiv@dividend
  4181  1361  2654  160A  118A   	fcall	___lwdiv
  4182  1364  0821               	movf	?___lwdiv+1,w
  4183  1365  1683               	bsf	3,5	;RP0=1, select bank1
  4184  1366  00CA               	movwf	(ADC_Read_NTC@value+1)^(0+128)
  4185  1367  1283               	bcf	3,5	;RP0=0, select bank0
  4186  1368  0820               	movf	?___lwdiv,w
  4187  1369  1683               	bsf	3,5	;RP0=1, select bank1
  4188  136A  00C9               	movwf	ADC_Read_NTC@value^(0+128)
  4189                           
  4190                           ;adc.c: 68:     resistencia =(1023.0-value);
  4191  136B  2785  160A  118A   	fcall	PL20	;call to abstracted procedure
  4192  136E  24A9  160A  118A   	fcall	___xxtofl
  4193  1371  278F  160A  118A   	fcall	PL24	;call to abstracted procedure
  4194  1374  3044               	movlw	68
  4195  1375  00D4               	movwf	___flsub@b+3
  4196  1376  307F               	movlw	127
  4197  1377  00D3               	movwf	___flsub@b+2
  4198  1378  30C0               	movlw	192
  4199  1379  00D2               	movwf	___flsub@b+1
  4200  137A  01D1               	clrf	___flsub@b
  4201  137B  2638  160A  118A   	fcall	___flsub
  4202  137E  0850               	movf	?___flsub+3,w
  4203  137F  1683               	bsf	3,5	;RP0=1, select bank1
  4204  1380  00C7               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4205  1381  1283               	bcf	3,5	;RP0=0, select bank0
  4206  1382  084F               	movf	?___flsub+2,w
  4207  1383  1683               	bsf	3,5	;RP0=1, select bank1
  4208  1384  00C6               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4209  1385  1283               	bcf	3,5	;RP0=0, select bank0
  4210  1386  084E               	movf	?___flsub+1,w
  4211  1387  1683               	bsf	3,5	;RP0=1, select bank1
  4212  1388  00C5               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4213  1389  1283               	bcf	3,5	;RP0=0, select bank0
  4214  138A  084D               	movf	?___flsub,w
  4215  138B  1683               	bsf	3,5	;RP0=1, select bank1
  4216  138C  00C4               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4217                           
  4218                           ;adc.c: 69:     resistencia*=(10000.0-value);
  4219  138D  3046               	movlw	70
  4220  138E  1283               	bcf	3,5	;RP0=0, select bank0
  4221  138F  00D4               	movwf	___flsub@b+3
  4222  1390  301C               	movlw	28
  4223  1391  00D3               	movwf	___flsub@b+2
  4224  1392  3040               	movlw	64
  4225  1393  00D2               	movwf	___flsub@b+1
  4226  1394  01D1               	clrf	___flsub@b
  4227  1395  1683               	bsf	3,5	;RP0=1, select bank1
  4228  1396  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4229  1397  2785  160A  118A   	fcall	PL20	;call to abstracted procedure
  4230  139A  24A9  160A  118A   	fcall	___xxtofl
  4231  139D  278F  160A  118A   	fcall	PL24	;call to abstracted procedure
  4232  13A0  2638               	fcall	___flsub
  4233  13A1  0850               	movf	?___flsub+3,w
  4234  13A2  00D8               	movwf	___flmul@b+3
  4235  13A3  084F               	movf	?___flsub+2,w
  4236  13A4  00D7               	movwf	___flmul@b+2
  4237  13A5  084E               	movf	?___flsub+1,w
  4238  13A6  00D6               	movwf	___flmul@b+1
  4239  13A7  084D               	movf	?___flsub,w
  4240  13A8  00D5               	movwf	___flmul@b
  4241  13A9  1683               	bsf	3,5	;RP0=1, select bank1
  4242  13AA  0847               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4243  13AB  1283               	bcf	3,5	;RP0=0, select bank0
  4244  13AC  00DC               	movwf	___flmul@a+3
  4245  13AD  1683               	bsf	3,5	;RP0=1, select bank1
  4246  13AE  0846               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4247  13AF  1283               	bcf	3,5	;RP0=0, select bank0
  4248  13B0  00DB               	movwf	___flmul@a+2
  4249  13B1  1683               	bsf	3,5	;RP0=1, select bank1
  4250  13B2  0845               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4251  13B3  1283               	bcf	3,5	;RP0=0, select bank0
  4252  13B4  00DA               	movwf	___flmul@a+1
  4253  13B5  1683               	bsf	3,5	;RP0=1, select bank1
  4254  13B6  0844               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4255  13B7  1283               	bcf	3,5	;RP0=0, select bank0
  4256  13B8  00D9               	movwf	___flmul@a
  4257  13B9  120A  158A  23DC  160A  118A  	fcall	___flmul
  4258  13BE  0858               	movf	?___flmul+3,w
  4259  13BF  1683               	bsf	3,5	;RP0=1, select bank1
  4260  13C0  00C7               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4261  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4262  13C2  0857               	movf	?___flmul+2,w
  4263  13C3  1683               	bsf	3,5	;RP0=1, select bank1
  4264  13C4  00C6               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4265  13C5  1283               	bcf	3,5	;RP0=0, select bank0
  4266  13C6  0856               	movf	?___flmul+1,w
  4267  13C7  1683               	bsf	3,5	;RP0=1, select bank1
  4268  13C8  00C5               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4269  13C9  1283               	bcf	3,5	;RP0=0, select bank0
  4270  13CA  0855               	movf	?___flmul,w
  4271  13CB  1683               	bsf	3,5	;RP0=1, select bank1
  4272  13CC  00C4               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4273                           
  4274                           ;adc.c: 70:     temperatura =value*10000.0/resistencia;
  4275  13CD  0847               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4276  13CE  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4277  13CF  0846               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4278  13D0  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4279  13D1  0845               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4280  13D2  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4281  13D3  0844               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4282  13D4  00A0               	movwf	___fldiv@a^(0+128)
  4283  13D5  3046               	movlw	70
  4284  13D6  1283               	bcf	3,5	;RP0=0, select bank0
  4285  13D7  00D8               	movwf	___flmul@b+3
  4286  13D8  301C               	movlw	28
  4287  13D9  00D7               	movwf	___flmul@b+2
  4288  13DA  3040               	movlw	64
  4289  13DB  00D6               	movwf	___flmul@b+1
  4290  13DC  01D5               	clrf	___flmul@b
  4291  13DD  1683               	bsf	3,5	;RP0=1, select bank1
  4292  13DE  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4293  13DF  2785  160A  118A   	fcall	PL20	;call to abstracted procedure
  4294  13E2  24A9  160A  118A   	fcall	___xxtofl
  4295  13E5  27AA               	fcall	PL42	;call to abstracted procedure
  4296  13E6  120A  158A  23DC  160A  118A  	fcall	___flmul
  4297  13EB  0858               	movf	?___flmul+3,w
  4298  13EC  1683               	bsf	3,5	;RP0=1, select bank1
  4299  13ED  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4300  13EE  1283               	bcf	3,5	;RP0=0, select bank0
  4301  13EF  0857               	movf	?___flmul+2,w
  4302  13F0  1683               	bsf	3,5	;RP0=1, select bank1
  4303  13F1  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4304  13F2  1283               	bcf	3,5	;RP0=0, select bank0
  4305  13F3  0856               	movf	?___flmul+1,w
  4306  13F4  1683               	bsf	3,5	;RP0=1, select bank1
  4307  13F5  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4308  13F6  1283               	bcf	3,5	;RP0=0, select bank0
  4309  13F7  0855               	movf	?___flmul,w
  4310  13F8  1683               	bsf	3,5	;RP0=1, select bank1
  4311  13F9  00A4               	movwf	___fldiv@b^(0+128)
  4312  13FA  2517  160A  118A   	fcall	___fldiv
  4313  13FD  2798  160A  118A   	fcall	PL26	;call to abstracted procedure
  4314                           
  4315                           ;adc.c: 71:     calc=temperatura;
  4316  1400  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4317  1401  00C1               	movwf	(ADC_Read_NTC@calc+3)^(0+128)
  4318  1402  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4319  1403  00C0               	movwf	(ADC_Read_NTC@calc+2)^(0+128)
  4320  1404  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4321  1405  00BF               	movwf	(ADC_Read_NTC@calc+1)^(0+128)
  4322  1406  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4323  1407  00BE               	movwf	ADC_Read_NTC@calc^(0+128)
  4324                           
  4325                           ;adc.c: 72:     temperatura =log(calc);
  4326  1408  0841               	movf	(ADC_Read_NTC@calc+3)^(0+128),w
  4327  1409  00B3               	movwf	(log@x+3)^(0+128)
  4328  140A  0840               	movf	(ADC_Read_NTC@calc+2)^(0+128),w
  4329  140B  00B2               	movwf	(log@x+2)^(0+128)
  4330  140C  083F               	movf	(ADC_Read_NTC@calc+1)^(0+128),w
  4331  140D  00B1               	movwf	(log@x+1)^(0+128)
  4332  140E  083E               	movf	ADC_Read_NTC@calc^(0+128),w
  4333  140F  00B0               	movwf	log@x^(0+128)
  4334  1410  268C  160A  118A   	fcall	_log
  4335  1413  0833               	movf	(?_log+3)^(0+128),w
  4336  1414  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4337  1415  0832               	movf	(?_log+2)^(0+128),w
  4338  1416  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4339  1417  0831               	movf	(?_log+1)^(0+128),w
  4340  1418  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4341  1419  0830               	movf	?_log^(0+128),w
  4342  141A  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4343                           
  4344                           ;adc.c: 73:     temperatura/=B;
  4345  141B  0842               	movf	ADC_Read_NTC@B^(0+128),w
  4346  141C  1283               	bcf	3,5	;RP0=0, select bank0
  4347  141D  00AB               	movwf	___xxtofl@val
  4348  141E  1683               	bsf	3,5	;RP0=1, select bank1
  4349  141F  0843               	movf	(ADC_Read_NTC@B+1)^(0+128),w
  4350  1420  1283               	bcf	3,5	;RP0=0, select bank0
  4351  1421  27BC  160A  118A   	fcall	PL52	;call to abstracted procedure
  4352  1424  24A9  160A  118A   	fcall	___xxtofl
  4353  1427  2775  160A  118A   	fcall	PL18	;call to abstracted procedure
  4354  142A  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4355  142B  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4356  142C  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4357  142D  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4358  142E  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4359  142F  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4360  1430  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4361  1431  00A4               	movwf	___fldiv@b^(0+128)
  4362  1432  2517  160A  118A   	fcall	___fldiv
  4363  1435  2798  160A  118A   	fcall	PL26	;call to abstracted procedure
  4364                           
  4365                           ;adc.c: 74:     temperatura+=1/(25+273.15);
  4366  1438  303B               	movlw	59
  4367  1439  1283               	bcf	3,5	;RP0=0, select bank0
  4368  143A  00BC               	movwf	___fladd@b+3
  4369  143B  305B               	movlw	91
  4370  143C  00BB               	movwf	___fladd@b+2
  4371  143D  30CF               	movlw	207
  4372  143E  00BA               	movwf	___fladd@b+1
  4373  143F  300F               	movlw	15
  4374  1440  00B9               	movwf	___fladd@b
  4375  1441  1683               	bsf	3,5	;RP0=1, select bank1
  4376  1442  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4377  1443  1283               	bcf	3,5	;RP0=0, select bank0
  4378  1444  00C0               	movwf	___fladd@a+3
  4379  1445  1683               	bsf	3,5	;RP0=1, select bank1
  4380  1446  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4381  1447  1283               	bcf	3,5	;RP0=0, select bank0
  4382  1448  00BF               	movwf	___fladd@a+2
  4383  1449  1683               	bsf	3,5	;RP0=1, select bank1
  4384  144A  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4385  144B  1283               	bcf	3,5	;RP0=0, select bank0
  4386  144C  00BE               	movwf	___fladd@a+1
  4387  144D  1683               	bsf	3,5	;RP0=1, select bank1
  4388  144E  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4389  144F  1283               	bcf	3,5	;RP0=0, select bank0
  4390  1450  00BD               	movwf	___fladd@a
  4391  1451  21C8  160A  118A   	fcall	___fladd
  4392  1454  083C               	movf	?___fladd+3,w
  4393  1455  1683               	bsf	3,5	;RP0=1, select bank1
  4394  1456  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4395  1457  1283               	bcf	3,5	;RP0=0, select bank0
  4396  1458  083B               	movf	?___fladd+2,w
  4397  1459  1683               	bsf	3,5	;RP0=1, select bank1
  4398  145A  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4399  145B  1283               	bcf	3,5	;RP0=0, select bank0
  4400  145C  083A               	movf	?___fladd+1,w
  4401  145D  1683               	bsf	3,5	;RP0=1, select bank1
  4402  145E  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4403  145F  1283               	bcf	3,5	;RP0=0, select bank0
  4404  1460  0839               	movf	?___fladd,w
  4405  1461  1683               	bsf	3,5	;RP0=1, select bank1
  4406  1462  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4407                           
  4408                           ;adc.c: 75:     temperatura =1/temperatura;
  4409  1463  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4410  1464  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4411  1465  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4412  1466  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4413  1467  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4414  1468  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4415  1469  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4416  146A  00A0               	movwf	___fldiv@a^(0+128)
  4417  146B  303F               	movlw	63
  4418  146C  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4419  146D  3080               	movlw	128
  4420  146E  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4421  146F  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4422  1470  01A4               	clrf	___fldiv@b^(0+128)
  4423  1471  2517  160A  118A   	fcall	___fldiv
  4424  1474  2798  160A  118A   	fcall	PL26	;call to abstracted procedure
  4425                           
  4426                           ;adc.c: 76:     temperatura-=273.15;
  4427  1477  3043               	movlw	67
  4428  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4429  1479  00D0               	movwf	___flsub@a+3
  4430  147A  3088               	movlw	136
  4431  147B  00CF               	movwf	___flsub@a+2
  4432  147C  3093               	movlw	147
  4433  147D  00CE               	movwf	___flsub@a+1
  4434  147E  3033               	movlw	51
  4435  147F  00CD               	movwf	___flsub@a
  4436  1480  1683               	bsf	3,5	;RP0=1, select bank1
  4437  1481  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4438  1482  1283               	bcf	3,5	;RP0=0, select bank0
  4439  1483  00D4               	movwf	___flsub@b+3
  4440  1484  1683               	bsf	3,5	;RP0=1, select bank1
  4441  1485  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4442  1486  1283               	bcf	3,5	;RP0=0, select bank0
  4443  1487  00D3               	movwf	___flsub@b+2
  4444  1488  1683               	bsf	3,5	;RP0=1, select bank1
  4445  1489  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4446  148A  1283               	bcf	3,5	;RP0=0, select bank0
  4447  148B  00D2               	movwf	___flsub@b+1
  4448  148C  1683               	bsf	3,5	;RP0=1, select bank1
  4449  148D  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4450  148E  1283               	bcf	3,5	;RP0=0, select bank0
  4451  148F  00D1               	movwf	___flsub@b
  4452  1490  2638               	fcall	___flsub
  4453  1491  0850               	movf	?___flsub+3,w
  4454  1492  1683               	bsf	3,5	;RP0=1, select bank1
  4455  1493  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4456  1494  1283               	bcf	3,5	;RP0=0, select bank0
  4457  1495  084F               	movf	?___flsub+2,w
  4458  1496  1683               	bsf	3,5	;RP0=1, select bank1
  4459  1497  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4460  1498  1283               	bcf	3,5	;RP0=0, select bank0
  4461  1499  084E               	movf	?___flsub+1,w
  4462  149A  1683               	bsf	3,5	;RP0=1, select bank1
  4463  149B  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4464  149C  1283               	bcf	3,5	;RP0=0, select bank0
  4465  149D  084D               	movf	?___flsub,w
  4466  149E  1683               	bsf	3,5	;RP0=1, select bank1
  4467  149F  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4468                           
  4469                           ;adc.c: 78:     return temperatura;
  4470  14A0  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4471  14A1  00BC               	movwf	(?_ADC_Read_NTC+3)^(0+128)
  4472  14A2  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4473  14A3  00BB               	movwf	(?_ADC_Read_NTC+2)^(0+128)
  4474  14A4  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4475  14A5  00BA               	movwf	(?_ADC_Read_NTC+1)^(0+128)
  4476  14A6  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4477  14A7  00B9               	movwf	?_ADC_Read_NTC^(0+128)
  4478  14A8  0008               	return
  4479  14A9                     __end_of_ADC_Read_NTC:	
  4480  14A9                     __ptext64:	
  4481 ;; *************** function ___xxtofl *****************
  4482 ;; Defined at:
  4483 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  sign            1    wreg     unsigned char 
  4486 ;;  val             4   11[BANK0 ] long 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  sign            1   19[BANK0 ] unsigned char 
  4489 ;;  arg             4   21[BANK0 ] unsigned long 
  4490 ;;  exp             1   20[BANK0 ] unsigned char 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  4   11[BANK0 ] unsigned char 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0
  4495 ;; Tracked objects:
  4496 ;;		On entry : 300/0
  4497 ;;		On exit  : 300/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4500 ;;      Params:         0       4       0       0       0
  4501 ;;      Locals:         0       6       0       0       0
  4502 ;;      Temps:          0       4       0       0       0
  4503 ;;      Totals:         0      14       0       0       0
  4504 ;;Total ram usage:       14 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; Hardware stack levels required when called:    1
  4507 ;; This function calls:
  4508 ;;		Nothing
  4509 ;; This function is called by:
  4510 ;;		_mediatemperaturaNTC
  4511 ;;		_Auto_Relay1
  4512 ;;		_Load_Work
  4513 ;;		_ADC_Read_NTC
  4514 ;;		_log
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           
  4519                           ;psect for function ___xxtofl
  4520  14A9                     ___xxtofl:	
  4521                           
  4522                           ;incstack = 0
  4523                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4524                           ;___xxtofl@sign stored from wreg
  4525  14A9  00B3               	movwf	___xxtofl@sign
  4526  14AA  0833               	movf	___xxtofl@sign,w
  4527  14AB  1D03               	btfss	3,2
  4528  14AC  1FAE               	btfss	___xxtofl@val+3,7
  4529  14AD  2CBE               	goto	l6580
  4530  14AE  092B               	comf	___xxtofl@val,w
  4531  14AF  00B5               	movwf	___xxtofl@arg
  4532  14B0  092C               	comf	___xxtofl@val+1,w
  4533  14B1  00B6               	movwf	___xxtofl@arg+1
  4534  14B2  092D               	comf	___xxtofl@val+2,w
  4535  14B3  00B7               	movwf	___xxtofl@arg+2
  4536  14B4  092E               	comf	___xxtofl@val+3,w
  4537  14B5  00B8               	movwf	___xxtofl@arg+3
  4538  14B6  0AB5               	incf	___xxtofl@arg,f
  4539  14B7  1903               	skipnz
  4540  14B8  0AB6               	incf	___xxtofl@arg+1,f
  4541  14B9  1903               	skipnz
  4542  14BA  0AB7               	incf	___xxtofl@arg+2,f
  4543  14BB  1903               	skipnz
  4544  14BC  0AB8               	incf	___xxtofl@arg+3,f
  4545  14BD  2CC6               	goto	l1424
  4546  14BE                     l6580:	
  4547  14BE  082E               	movf	___xxtofl@val+3,w
  4548  14BF  00B8               	movwf	___xxtofl@arg+3
  4549  14C0  082D               	movf	___xxtofl@val+2,w
  4550  14C1  00B7               	movwf	___xxtofl@arg+2
  4551  14C2  082C               	movf	___xxtofl@val+1,w
  4552  14C3  00B6               	movwf	___xxtofl@arg+1
  4553  14C4  082B               	movf	___xxtofl@val,w
  4554  14C5  00B5               	movwf	___xxtofl@arg
  4555  14C6                     l1424:	
  4556  14C6  082E               	movf	___xxtofl@val+3,w
  4557  14C7  042D               	iorwf	___xxtofl@val+2,w
  4558  14C8  042C               	iorwf	___xxtofl@val+1,w
  4559  14C9  042B               	iorwf	___xxtofl@val,w
  4560  14CA  1D03               	skipz
  4561  14CB  2CD1               	goto	l6584
  4562  14CC  01AB               	clrf	?___xxtofl
  4563  14CD  01AC               	clrf	?___xxtofl+1
  4564  14CE  01AD               	clrf	?___xxtofl+2
  4565  14CF  01AE               	clrf	?___xxtofl+3
  4566  14D0  0008               	return
  4567  14D1                     l6584:	
  4568  14D1  3096               	movlw	150
  4569  14D2  00B4               	movwf	___xxtofl@exp
  4570  14D3                     l6588:	
  4571  14D3  30FE               	movlw	254
  4572  14D4  0538               	andwf	___xxtofl@arg+3,w
  4573  14D5  1903               	btfsc	3,2
  4574  14D6  2CE7               	goto	l6592
  4575  14D7  0AB4               	incf	___xxtofl@exp,f
  4576  14D8  27C9  160A  118A   	fcall	PL76	;call to abstracted procedure
  4577  14DB  2CD3               	goto	l6588
  4578  14DC                     l6590:	
  4579  14DC  0AB4               	incf	___xxtofl@exp,f
  4580  14DD  0AB5               	incf	___xxtofl@arg,f
  4581  14DE  1903               	skipnz
  4582  14DF  0AB6               	incf	___xxtofl@arg+1,f
  4583  14E0  1903               	skipnz
  4584  14E1  0AB7               	incf	___xxtofl@arg+2,f
  4585  14E2  1903               	skipnz
  4586  14E3  0AB8               	incf	___xxtofl@arg+3,f
  4587  14E4  27C9  160A  118A   	fcall	PL76	;call to abstracted procedure
  4588  14E7                     l6592:	
  4589  14E7  30FF               	movlw	255
  4590  14E8  0538               	andwf	___xxtofl@arg+3,w
  4591  14E9  1903               	btfsc	3,2
  4592  14EA  2CF6               	goto	l6596
  4593  14EB  2CDC               	goto	l6590
  4594  14EC                     l6598:	
  4595  14EC  3002               	movlw	2
  4596  14ED  0234               	subwf	___xxtofl@exp,w
  4597  14EE  1C03               	btfss	3,0
  4598  14EF  2CF8               	goto	l1437
  4599  14F0  03B4               	decf	___xxtofl@exp,f
  4600  14F1  1003               	clrc
  4601  14F2  0DB5               	rlf	___xxtofl@arg,f
  4602  14F3  0DB6               	rlf	___xxtofl@arg+1,f
  4603  14F4  0DB7               	rlf	___xxtofl@arg+2,f
  4604  14F5  0DB8               	rlf	___xxtofl@arg+3,f
  4605  14F6                     l6596:	
  4606  14F6  1FB7               	btfss	___xxtofl@arg+2,7
  4607  14F7  2CEC               	goto	l6598
  4608  14F8                     l1437:	
  4609  14F8  1C34               	btfss	___xxtofl@exp,0
  4610  14F9  13B7               	bcf	___xxtofl@arg+2,7
  4611  14FA  1003               	clrc
  4612  14FB  0CB4               	rrf	___xxtofl@exp,f
  4613  14FC  0834               	movf	___xxtofl@exp,w
  4614  14FD  00B2               	movwf	??___xxtofl+3
  4615  14FE  01B1               	clrf	??___xxtofl+2
  4616  14FF  01B0               	clrf	??___xxtofl+1
  4617  1500  01AF               	clrf	??___xxtofl
  4618  1501  082F               	movf	??___xxtofl,w
  4619  1502  04B5               	iorwf	___xxtofl@arg,f
  4620  1503  0830               	movf	??___xxtofl+1,w
  4621  1504  04B6               	iorwf	___xxtofl@arg+1,f
  4622  1505  0831               	movf	??___xxtofl+2,w
  4623  1506  04B7               	iorwf	___xxtofl@arg+2,f
  4624  1507  0832               	movf	??___xxtofl+3,w
  4625  1508  04B8               	iorwf	___xxtofl@arg+3,f
  4626  1509  0833               	movf	___xxtofl@sign,w
  4627  150A  1D03               	btfss	3,2
  4628  150B  1FAE               	btfss	___xxtofl@val+3,7
  4629  150C  2D0E               	goto	l6610
  4630  150D  17B8               	bsf	___xxtofl@arg+3,7
  4631  150E                     l6610:	
  4632  150E  0838               	movf	___xxtofl@arg+3,w
  4633  150F  00AE               	movwf	?___xxtofl+3
  4634  1510  0837               	movf	___xxtofl@arg+2,w
  4635  1511  00AD               	movwf	?___xxtofl+2
  4636  1512  0836               	movf	___xxtofl@arg+1,w
  4637  1513  00AC               	movwf	?___xxtofl+1
  4638  1514  0835               	movf	___xxtofl@arg,w
  4639  1515  00AB               	movwf	?___xxtofl
  4640  1516  0008               	return
  4641  1517                     __end_of___xxtofl:	
  4642  1517                     __ptext41:	
  4643 ;; *************** function ___fldiv *****************
  4644 ;; Defined at:
  4645 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  a               4    0[BANK1 ] void 
  4648 ;;  b               4    4[BANK1 ] void 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  grs             4   19[BANK1 ] unsigned long 
  4651 ;;  rem             4   12[BANK1 ] unsigned long 
  4652 ;;  new_exp         2   17[BANK1 ] int 
  4653 ;;  aexp            1   24[BANK1 ] unsigned char 
  4654 ;;  bexp            1   23[BANK1 ] unsigned char 
  4655 ;;  sign            1   16[BANK1 ] unsigned char 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  4    0[BANK1 ] unsigned char 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, status,0, btemp+1
  4660 ;; Tracked objects:
  4661 ;;		On entry : 300/100
  4662 ;;		On exit  : 300/100
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4665 ;;      Params:         0       0       8       0       0
  4666 ;;      Locals:         0       0      13       0       0
  4667 ;;      Temps:          0       0       4       0       0
  4668 ;;      Totals:         0       0      25       0       0
  4669 ;;Total ram usage:       25 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:    1
  4672 ;; This function calls:
  4673 ;;		Nothing
  4674 ;; This function is called by:
  4675 ;;		_mediatemperaturaNTC
  4676 ;;		_Load_Work
  4677 ;;		_ADC_Read_NTC
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           
  4682                           ;psect for function ___fldiv
  4683  1517                     ___fldiv:	
  4684                           
  4685                           ;incstack = 0
  4686                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4687  1517  0827               	movf	(___fldiv@b^(0+128)+3),w
  4688  1518  00B0               	movwf	___fldiv@sign^(0+128)
  4689  1519  3080               	movlw	128
  4690  151A  05B0               	andwf	___fldiv@sign^(0+128),f
  4691  151B  1003               	clrc
  4692  151C  0D27               	rlf	(___fldiv@b^(0+128)+3),w
  4693  151D  00B7               	movwf	___fldiv@bexp^(0+128)
  4694  151E  1BA6               	btfsc	(___fldiv@b^(0+128)+2),7
  4695  151F  1437               	bsf	___fldiv@bexp^(0+128),0
  4696  1520  0837               	movf	___fldiv@bexp^(0+128),w
  4697  1521  1903               	btfsc	3,2
  4698  1522  2D2C               	goto	l1340
  4699  1523  0F37               	incfsz	___fldiv@bexp^(0+128),w
  4700  1524  2D29               	goto	l1341
  4701  1525  01A4               	clrf	___fldiv@b^(0+128)
  4702  1526  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4703  1527  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4704  1528  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4705  1529                     l1341:	
  4706  1529  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  4707  152A  01A7               	clrf	(___fldiv@b^(0+128)+3)
  4708  152B  2D30               	goto	l6946
  4709  152C                     l1340:	
  4710  152C  01A4               	clrf	___fldiv@b^(0+128)
  4711  152D  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4712  152E  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4713  152F  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4714  1530                     l6946:	
  4715  1530  0823               	movf	(___fldiv@a^(0+128)+3),w
  4716  1531  3980               	andlw	128
  4717  1532  06B0               	xorwf	___fldiv@sign^(0+128),f
  4718  1533  1003               	clrc
  4719  1534  0D23               	rlf	(___fldiv@a^(0+128)+3),w
  4720  1535  00B8               	movwf	___fldiv@aexp^(0+128)
  4721  1536  1BA2               	btfsc	(___fldiv@a^(0+128)+2),7
  4722  1537  1438               	bsf	___fldiv@aexp^(0+128),0
  4723  1538  0838               	movf	___fldiv@aexp^(0+128),w
  4724  1539  1903               	btfsc	3,2
  4725  153A  2D44               	goto	l1344
  4726  153B  0F38               	incfsz	___fldiv@aexp^(0+128),w
  4727  153C  2D41               	goto	l1345
  4728  153D  01A0               	clrf	___fldiv@a^(0+128)
  4729  153E  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4730  153F  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4731  1540  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4732  1541                     l1345:	
  4733  1541  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  4734  1542  01A3               	clrf	(___fldiv@a^(0+128)+3)
  4735  1543  2D48               	goto	l6960
  4736  1544                     l1344:	
  4737  1544  01A0               	clrf	___fldiv@a^(0+128)
  4738  1545  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4739  1546  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4740  1547  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4741  1548                     l6960:	
  4742  1548  0823               	movf	(___fldiv@a+3)^(0+128),w
  4743  1549  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  4744  154A  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  4745  154B  0420               	iorwf	___fldiv@a^(0+128),w
  4746  154C  1D03               	skipz
  4747  154D  2D61               	goto	l6972
  4748  154E  3080               	movlw	128
  4749  154F  01A4               	clrf	___fldiv@b^(0+128)
  4750  1550  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4751  1551  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4752  1552  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4753  1553  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  4754  1554  307F               	movlw	127
  4755  1555  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  4756  1556                     L17:	
  4757  1556  0830               	movf	___fldiv@sign^(0+128),w
  4758  1557  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  4759  1558  0827               	movf	(___fldiv@b+3)^(0+128),w
  4760  1559  00A3               	movwf	(?___fldiv+3)^(0+128)
  4761  155A  0826               	movf	(___fldiv@b+2)^(0+128),w
  4762  155B  00A2               	movwf	(?___fldiv+2)^(0+128)
  4763  155C  0825               	movf	(___fldiv@b+1)^(0+128),w
  4764  155D  00A1               	movwf	(?___fldiv+1)^(0+128)
  4765  155E  0824               	movf	___fldiv@b^(0+128),w
  4766  155F  00A0               	movwf	?___fldiv^(0+128)
  4767  1560  0008               	return
  4768  1561                     l6972:	
  4769  1561  0837               	movf	___fldiv@bexp^(0+128),w
  4770  1562  1D03               	btfss	3,2
  4771  1563  2D69               	goto	l6980
  4772  1564  01A0               	clrf	?___fldiv^(0+128)
  4773  1565  01A1               	clrf	(?___fldiv+1)^(0+128)
  4774  1566  01A2               	clrf	(?___fldiv+2)^(0+128)
  4775  1567  01A3               	clrf	(?___fldiv+3)^(0+128)
  4776  1568  0008               	return
  4777  1569                     l6980:	
  4778  1569  0837               	movf	___fldiv@bexp^(0+128),w
  4779  156A  00B1               	movwf	___fldiv@new_exp^(0+128)
  4780  156B  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4781  156C  0838               	movf	___fldiv@aexp^(0+128),w
  4782  156D  02B1               	subwf	___fldiv@new_exp^(0+128),f
  4783  156E  1C03               	skipc
  4784  156F  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4785  1570  307F               	movlw	127
  4786  1571  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4787  1572  1803               	skipnc
  4788  1573  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  4789  1574  0827               	movf	(___fldiv@b+3)^(0+128),w
  4790  1575  00AF               	movwf	(___fldiv@rem+3)^(0+128)
  4791  1576  0826               	movf	(___fldiv@b+2)^(0+128),w
  4792  1577  00AE               	movwf	(___fldiv@rem+2)^(0+128)
  4793  1578  0825               	movf	(___fldiv@b+1)^(0+128),w
  4794  1579  00AD               	movwf	(___fldiv@rem+1)^(0+128)
  4795  157A  0824               	movf	___fldiv@b^(0+128),w
  4796  157B  00AC               	movwf	___fldiv@rem^(0+128)
  4797  157C  01A4               	clrf	___fldiv@b^(0+128)
  4798  157D  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4799  157E  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4800  157F  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4801  1580  01B3               	clrf	___fldiv@grs^(0+128)
  4802  1581  01B4               	clrf	(___fldiv@grs+1)^(0+128)
  4803  1582  01B5               	clrf	(___fldiv@grs+2)^(0+128)
  4804  1583  01B6               	clrf	(___fldiv@grs+3)^(0+128)
  4805  1584  01B8               	clrf	___fldiv@aexp^(0+128)
  4806  1585                     l7006:	
  4807  1585  301A               	movlw	26
  4808  1586  0238               	subwf	___fldiv@aexp^(0+128),w
  4809  1587  1803               	btfsc	3,0
  4810  1588  2DBE               	goto	l7008
  4811  1589  0838               	movf	___fldiv@aexp^(0+128),w
  4812  158A  1903               	btfsc	3,2
  4813  158B  2D9D               	goto	l6998
  4814  158C  1003               	clrc
  4815  158D  0DAC               	rlf	___fldiv@rem^(0+128),f
  4816  158E  0DAD               	rlf	(___fldiv@rem+1)^(0+128),f
  4817  158F  0DAE               	rlf	(___fldiv@rem+2)^(0+128),f
  4818  1590  0DAF               	rlf	(___fldiv@rem+3)^(0+128),f
  4819  1591  1003               	clrc
  4820  1592  0DA4               	rlf	___fldiv@b^(0+128),f
  4821  1593  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4822  1594  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4823  1595  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4824  1596  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4825  1597  1424               	bsf	___fldiv@b^(0+128),0
  4826  1598  1003               	clrc
  4827  1599  0DB3               	rlf	___fldiv@grs^(0+128),f
  4828  159A  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4829  159B  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4830  159C  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4831  159D                     l6998:	
  4832  159D  0823               	movf	(___fldiv@a+3)^(0+128),w
  4833  159E  022F               	subwf	(___fldiv@rem+3)^(0+128),w
  4834  159F  1D03               	skipz
  4835  15A0  2DAB               	goto	u6695
  4836  15A1  0822               	movf	(___fldiv@a+2)^(0+128),w
  4837  15A2  022E               	subwf	(___fldiv@rem+2)^(0+128),w
  4838  15A3  1D03               	skipz
  4839  15A4  2DAB               	goto	u6695
  4840  15A5  0821               	movf	(___fldiv@a+1)^(0+128),w
  4841  15A6  022D               	subwf	(___fldiv@rem+1)^(0+128),w
  4842  15A7  1D03               	skipz
  4843  15A8  2DAB               	goto	u6695
  4844  15A9  0820               	movf	___fldiv@a^(0+128),w
  4845  15AA  022C               	subwf	___fldiv@rem^(0+128),w
  4846  15AB                     u6695:	
  4847  15AB  1C03               	skipc
  4848  15AC  2DBC               	goto	l7004
  4849  15AD  1736               	bsf	(___fldiv@grs^(0+128)+3),6
  4850  15AE  0820               	movf	___fldiv@a^(0+128),w
  4851  15AF  02AC               	subwf	___fldiv@rem^(0+128),f
  4852  15B0  0821               	movf	(___fldiv@a+1)^(0+128),w
  4853  15B1  1C03               	skipc
  4854  15B2  0F21               	incfsz	(___fldiv@a+1)^(0+128),w
  4855  15B3  02AD               	subwf	(___fldiv@rem+1)^(0+128),f
  4856  15B4  0822               	movf	(___fldiv@a+2)^(0+128),w
  4857  15B5  1C03               	skipc
  4858  15B6  0F22               	incfsz	(___fldiv@a+2)^(0+128),w
  4859  15B7  02AE               	subwf	(___fldiv@rem+2)^(0+128),f
  4860  15B8  0823               	movf	(___fldiv@a+3)^(0+128),w
  4861  15B9  1C03               	skipc
  4862  15BA  0F23               	incfsz	(___fldiv@a+3)^(0+128),w
  4863  15BB  02AF               	subwf	(___fldiv@rem+3)^(0+128),f
  4864  15BC                     l7004:	
  4865  15BC  0AB8               	incf	___fldiv@aexp^(0+128),f
  4866  15BD  2D85               	goto	l7006
  4867  15BE                     l7008:	
  4868  15BE  082F               	movf	(___fldiv@rem+3)^(0+128),w
  4869  15BF  042E               	iorwf	(___fldiv@rem+2)^(0+128),w
  4870  15C0  042D               	iorwf	(___fldiv@rem+1)^(0+128),w
  4871  15C1  042C               	iorwf	___fldiv@rem^(0+128),w
  4872  15C2  1D03               	btfss	3,2
  4873  15C3  1433               	bsf	___fldiv@grs^(0+128),0
  4874  15C4                     l7022:	
  4875  15C4  1BA6               	btfsc	(___fldiv@b+2)^(0+128),7
  4876  15C5  2DD7               	goto	l7024
  4877  15C6  1003               	clrc
  4878  15C7  0DA4               	rlf	___fldiv@b^(0+128),f
  4879  15C8  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4880  15C9  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4881  15CA  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4882  15CB  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4883  15CC  1424               	bsf	___fldiv@b^(0+128),0
  4884  15CD  30FF               	movlw	-1
  4885  15CE  1003               	clrc
  4886  15CF  0DB3               	rlf	___fldiv@grs^(0+128),f
  4887  15D0  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4888  15D1  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4889  15D2  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4890  15D3  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4891  15D4  1C03               	skipc
  4892  15D5  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4893  15D6  2DC4               	goto	l7022
  4894  15D7                     l7024:	
  4895  15D7  01B8               	clrf	___fldiv@aexp^(0+128)
  4896  15D8  1FB6               	btfss	(___fldiv@grs+3)^(0+128),7
  4897  15D9  2DED               	goto	l7034
  4898  15DA  0833               	movf	___fldiv@grs^(0+128),w
  4899  15DB  00A8               	movwf	??___fldiv^(0+128)
  4900  15DC  0834               	movf	(___fldiv@grs+1)^(0+128),w
  4901  15DD  00A9               	movwf	(??___fldiv^(0+128)+1)
  4902  15DE  0835               	movf	(___fldiv@grs+2)^(0+128),w
  4903  15DF  00AA               	movwf	(??___fldiv^(0+128)+2)
  4904  15E0  307F               	movlw	127
  4905  15E1  0536               	andwf	(___fldiv@grs+3)^(0+128),w
  4906  15E2  00AB               	movwf	(??___fldiv^(0+128)+3)
  4907  15E3  082B               	movf	(??___fldiv+3)^(0+128),w
  4908  15E4  042A               	iorwf	(??___fldiv+2)^(0+128),w
  4909  15E5  0429               	iorwf	(??___fldiv+1)^(0+128),w
  4910  15E6  0428               	iorwf	??___fldiv^(0+128),w
  4911  15E7  1903               	skipnz
  4912  15E8  1824               	btfsc	___fldiv@b^(0+128),0
  4913  15E9  2DEB               	goto	l7030
  4914  15EA  2DED               	goto	l7034
  4915  15EB                     l7030:	
  4916  15EB  01B8               	clrf	___fldiv@aexp^(0+128)
  4917  15EC  0AB8               	incf	___fldiv@aexp^(0+128),f
  4918  15ED                     l7034:	
  4919  15ED  0838               	movf	___fldiv@aexp^(0+128),w
  4920  15EE  1903               	btfsc	3,2
  4921  15EF  2E01               	goto	l7044
  4922  15F0  0AA4               	incf	___fldiv@b^(0+128),f
  4923  15F1  1903               	skipnz
  4924  15F2  0AA5               	incf	(___fldiv@b+1)^(0+128),f
  4925  15F3  1903               	skipnz
  4926  15F4  0AA6               	incf	(___fldiv@b+2)^(0+128),f
  4927  15F5  1903               	skipnz
  4928  15F6  0AA7               	incf	(___fldiv@b+3)^(0+128),f
  4929  15F7  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  4930  15F8  2E01               	goto	l7044
  4931  15F9  0D27               	rlf	(___fldiv@b+3)^(0+128),w
  4932  15FA  0CA7               	rrf	(___fldiv@b+3)^(0+128),f
  4933  15FB  0CA6               	rrf	(___fldiv@b+2)^(0+128),f
  4934  15FC  0CA5               	rrf	(___fldiv@b+1)^(0+128),f
  4935  15FD  0CA4               	rrf	___fldiv@b^(0+128),f
  4936  15FE  0AB1               	incf	___fldiv@new_exp^(0+128),f
  4937  15FF  1903               	skipnz
  4938  1600  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  4939  1601                     l7044:	
  4940  1601  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  4941  1602  3A80               	xorlw	128
  4942  1603  00FF               	movwf	127
  4943  1604  3080               	movlw	128
  4944  1605  027F               	subwf	127,w
  4945  1606  1D03               	skipz
  4946  1607  2E0A               	goto	u6795
  4947  1608  30FF               	movlw	255
  4948  1609  0231               	subwf	___fldiv@new_exp^(0+128),w
  4949  160A                     u6795:	
  4950  160A  1C03               	skipc
  4951  160B  2E15               	goto	l7050
  4952  160C  30FF               	movlw	255
  4953  160D  1683               	bsf	3,5	;RP0=1, select bank1
  4954  160E  1303               	bcf	3,6	;RP1=0, select bank1
  4955  160F  00B1               	movwf	___fldiv@new_exp^(0+128)
  4956  1610  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4957  1611  01A4               	clrf	___fldiv@b^(0+128)
  4958  1612  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4959  1613  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4960  1614  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4961  1615                     l7050:	
  4962  1615  1683               	bsf	3,5	;RP0=1, select bank1
  4963  1616  1303               	bcf	3,6	;RP1=0, select bank1
  4964  1617  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  4965  1618  3A80               	xorlw	128
  4966  1619  00FF               	movwf	127
  4967  161A  3080               	movlw	128
  4968  161B  027F               	subwf	127,w
  4969  161C  1D03               	skipz
  4970  161D  2E20               	goto	u6805
  4971  161E  3001               	movlw	1
  4972  161F  0231               	subwf	___fldiv@new_exp^(0+128),w
  4973  1620                     u6805:	
  4974  1620  1803               	skipnc
  4975  1621  2E2B               	goto	l7056
  4976  1622  1683               	bsf	3,5	;RP0=1, select bank1
  4977  1623  1303               	bcf	3,6	;RP1=0, select bank1
  4978  1624  01B1               	clrf	___fldiv@new_exp^(0+128)
  4979  1625  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4980  1626  01A4               	clrf	___fldiv@b^(0+128)
  4981  1627  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4982  1628  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4983  1629  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4984  162A  01B0               	clrf	___fldiv@sign^(0+128)
  4985  162B                     l7056:	
  4986  162B  1683               	bsf	3,5	;RP0=1, select bank1
  4987  162C  1303               	bcf	3,6	;RP1=0, select bank1
  4988  162D  0831               	movf	___fldiv@new_exp^(0+128),w
  4989  162E  00B7               	movwf	___fldiv@bexp^(0+128)
  4990  162F  1C37               	btfss	___fldiv@bexp^(0+128),0
  4991  1630  2E33               	goto	l1369
  4992  1631  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  4993  1632  2E34               	goto	l7062
  4994  1633                     l1369:	
  4995  1633  13A6               	bcf	(___fldiv@b^(0+128)+2),7
  4996  1634                     l7062:	
  4997  1634  1003               	clrc
  4998  1635  0C37               	rrf	___fldiv@bexp^(0+128),w
  4999  1636  00A7               	movwf	(___fldiv@b^(0+128)+3)
  5000  1637  2D56               	goto	L17
  5001  1638                     __end_of___fldiv:	
  5002  1638                     __ptext68:	
  5003 ;; *************** function ___flsub *****************
  5004 ;; Defined at:
  5005 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  a               4   45[BANK0 ] void 
  5008 ;;  b               4   49[BANK0 ] void 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;		None
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  4   45[BANK0 ] void 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 300/0
  5017 ;;		On exit  : 300/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5020 ;;      Params:         0       8       0       0       0
  5021 ;;      Locals:         0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0
  5023 ;;      Totals:         0       8       0       0       0
  5024 ;;Total ram usage:        8 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    2
  5027 ;; This function calls:
  5028 ;;		___fladd
  5029 ;; This function is called by:
  5030 ;;		_Auto_Relay0
  5031 ;;		_Auto_Relay1
  5032 ;;		_ADC_Read_NTC
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           
  5037                           ;psect for function ___flsub
  5038  1638                     ___flsub:	
  5039                           
  5040                           ;incstack = 0
  5041                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5042  1638  3080               	movlw	128
  5043  1639  06D0               	xorwf	___flsub@a+3,f
  5044  163A  0854               	movf	___flsub@b+3,w
  5045  163B  00BC               	movwf	___fladd@b+3
  5046  163C  0853               	movf	___flsub@b+2,w
  5047  163D  00BB               	movwf	___fladd@b+2
  5048  163E  0852               	movf	___flsub@b+1,w
  5049  163F  00BA               	movwf	___fladd@b+1
  5050  1640  0851               	movf	___flsub@b,w
  5051  1641  00B9               	movwf	___fladd@b
  5052  1642  0850               	movf	___flsub@a+3,w
  5053  1643  00C0               	movwf	___fladd@a+3
  5054  1644  084F               	movf	___flsub@a+2,w
  5055  1645  00BF               	movwf	___fladd@a+2
  5056  1646  084E               	movf	___flsub@a+1,w
  5057  1647  00BE               	movwf	___fladd@a+1
  5058  1648  084D               	movf	___flsub@a,w
  5059  1649  00BD               	movwf	___fladd@a
  5060  164A  21C8               	fcall	___fladd
  5061  164B  083C               	movf	?___fladd+3,w
  5062  164C  00D0               	movwf	?___flsub+3
  5063  164D  083B               	movf	?___fladd+2,w
  5064  164E  00CF               	movwf	?___flsub+2
  5065  164F  083A               	movf	?___fladd+1,w
  5066  1650  00CE               	movwf	?___flsub+1
  5067  1651  0839               	movf	?___fladd,w
  5068  1652  00CD               	movwf	?___flsub
  5069  1653  0008               	return
  5070  1654                     __end_of___flsub:	
  5071  1654                     __ptext35:	
  5072 ;; *************** function ___lwdiv *****************
  5073 ;; Defined at:
  5074 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  divisor         2    0[BANK0 ] unsigned int 
  5077 ;;  dividend        2    2[BANK0 ] unsigned int 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  quotient        2    5[BANK0 ] unsigned int 
  5080 ;;  counter         1    4[BANK0 ] unsigned char 
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  2    0[BANK0 ] unsigned int 
  5083 ;; Registers used:
  5084 ;;		wreg, status,2, status,0
  5085 ;; Tracked objects:
  5086 ;;		On entry : 300/0
  5087 ;;		On exit  : 300/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5090 ;;      Params:         0       4       0       0       0
  5091 ;;      Locals:         0       3       0       0       0
  5092 ;;      Temps:          0       0       0       0       0
  5093 ;;      Totals:         0       7       0       0       0
  5094 ;;Total ram usage:        7 bytes
  5095 ;; Hardware stack levels used:    1
  5096 ;; Hardware stack levels required when called:    1
  5097 ;; This function calls:
  5098 ;;		Nothing
  5099 ;; This function is called by:
  5100 ;;		_ADC_Read_NTC
  5101 ;;		_PROCULUS_Buzzer
  5102 ;;		_utoa
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           
  5107                           ;psect for function ___lwdiv
  5108  1654                     ___lwdiv:	
  5109                           
  5110                           ;incstack = 0
  5111                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5112  1654  01A5               	clrf	___lwdiv@quotient
  5113  1655  01A6               	clrf	___lwdiv@quotient+1
  5114  1656  0820               	movf	___lwdiv@divisor,w
  5115  1657  0421               	iorwf	___lwdiv@divisor+1,w
  5116  1658  1903               	btfsc	3,2
  5117  1659  2E79               	goto	l6550
  5118  165A  01A4               	clrf	___lwdiv@counter
  5119  165B                     L15:	
  5120  165B  0AA4               	incf	___lwdiv@counter,f
  5121  165C  1BA1               	btfsc	___lwdiv@divisor+1,7
  5122  165D  2E62               	goto	l6538
  5123  165E  1003               	clrc
  5124  165F  0DA0               	rlf	___lwdiv@divisor,f
  5125  1660  0DA1               	rlf	___lwdiv@divisor+1,f
  5126  1661  2E5B               	goto	L15
  5127  1662                     l6538:	
  5128  1662  1003               	clrc
  5129  1663  0DA5               	rlf	___lwdiv@quotient,f
  5130  1664  0DA6               	rlf	___lwdiv@quotient+1,f
  5131  1665  0821               	movf	___lwdiv@divisor+1,w
  5132  1666  0223               	subwf	___lwdiv@dividend+1,w
  5133  1667  1D03               	skipz
  5134  1668  2E6B               	goto	u6125
  5135  1669  0820               	movf	___lwdiv@divisor,w
  5136  166A  0222               	subwf	___lwdiv@dividend,w
  5137  166B                     u6125:	
  5138  166B  1C03               	skipc
  5139  166C  2E75               	goto	L16
  5140  166D  0820               	movf	___lwdiv@divisor,w
  5141  166E  02A2               	subwf	___lwdiv@dividend,f
  5142  166F  0821               	movf	___lwdiv@divisor+1,w
  5143  1670  1C03               	skipc
  5144  1671  03A3               	decf	___lwdiv@dividend+1,f
  5145  1672  02A3               	subwf	___lwdiv@dividend+1,f
  5146  1673  1425               	bsf	___lwdiv@quotient,0
  5147  1674  1003               	clrc
  5148  1675                     L16:	
  5149  1675  0CA1               	rrf	___lwdiv@divisor+1,f
  5150  1676  0CA0               	rrf	___lwdiv@divisor,f
  5151  1677  0BA4               	decfsz	___lwdiv@counter,f
  5152  1678  2E62               	goto	l6538
  5153  1679                     l6550:	
  5154  1679  0826               	movf	___lwdiv@quotient+1,w
  5155  167A  00A1               	movwf	?___lwdiv+1
  5156  167B  0825               	movf	___lwdiv@quotient,w
  5157  167C  00A0               	movwf	?___lwdiv
  5158  167D  0008               	return
  5159  167E                     __end_of___lwdiv:	
  5160  167E                     __ptext10:	
  5161 ;; *************** function _captura *****************
  5162 ;; Defined at:
  5163 ;;		line 123 in file "adc.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;		None
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;		None
  5168 ;; Return value:  Size  Location     Type
  5169 ;;                  2    0[BANK0 ] unsigned int 
  5170 ;; Registers used:
  5171 ;;		wreg
  5172 ;; Tracked objects:
  5173 ;;		On entry : 300/100
  5174 ;;		On exit  : 300/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5177 ;;      Params:         0       2       0       0       0
  5178 ;;      Locals:         0       0       0       0       0
  5179 ;;      Temps:          0       0       0       0       0
  5180 ;;      Totals:         0       2       0       0       0
  5181 ;;Total ram usage:        2 bytes
  5182 ;; Hardware stack levels used:    1
  5183 ;; Hardware stack levels required when called:    1
  5184 ;; This function calls:
  5185 ;;		Nothing
  5186 ;; This function is called by:
  5187 ;;		_ADC_Read_NTC
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           
  5192                           ;psect for function _captura
  5193  167E                     _captura:	
  5194                           
  5195                           ;adc.c: 124:     ADCON0bits.GO=1;
  5196                           
  5197                           ;incstack = 0
  5198                           ; Regs used in _captura: [wreg]
  5199  167E  1283               	bcf	3,5	;RP0=0, select bank0
  5200  167F  149F               	bsf	31,1	;volatile
  5201  1680                     l450:	
  5202                           ;adc.c: 128:           }
  5203                           
  5204                           
  5205                           ;adc.c: 125:     while(ADCON0bits.GO)
  5206  1680  189F               	btfsc	31,1	;volatile
  5207  1681  2E80               	goto	l450
  5208                           
  5209                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  5210  1682  081E               	movf	30,w	;volatile
  5211  1683  00A1               	movwf	?_captura+1
  5212  1684  01A0               	clrf	?_captura
  5213  1685  1683               	bsf	3,5	;RP0=1, select bank1
  5214  1686  081E               	movf	30,w	;volatile
  5215  1687  1283               	bcf	3,5	;RP0=0, select bank0
  5216  1688  07A0               	addwf	?_captura,f
  5217  1689  1803               	skipnc
  5218  168A  0AA1               	incf	?_captura+1,f
  5219  168B  0008               	return
  5220  168C                     __end_of_captura:	
  5221  168C                     __ptext6:	
  5222 ;; *************** function _log *****************
  5223 ;; Defined at:
  5224 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\log.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  x               4   16[BANK1 ] float 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;  exponent        2   78[BANK0 ] int 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  4   16[BANK1 ] int 
  5231 ;; Registers used:
  5232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5233 ;; Tracked objects:
  5234 ;;		On entry : 300/100
  5235 ;;		On exit  : 300/100
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5238 ;;      Params:         0       0       4       0       0
  5239 ;;      Locals:         0       2       0       0       0
  5240 ;;      Temps:          0       0       0       0       0
  5241 ;;      Totals:         0       2       4       0       0
  5242 ;;Total ram usage:        6 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; Hardware stack levels required when called:    4
  5245 ;; This function calls:
  5246 ;;		___fladd
  5247 ;;		___fleq
  5248 ;;		___flge
  5249 ;;		___flmul
  5250 ;;		___xxtofl
  5251 ;;		_eval_poly
  5252 ;;		_frexp
  5253 ;; This function is called by:
  5254 ;;		_ADC_Read_NTC
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           
  5259                           ;psect for function _log
  5260  168C                     _log:	
  5261                           
  5262                           ;incstack = 0
  5263                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5264  168C  0833               	movf	(log@x+3)^(0+128),w
  5265  168D  1283               	bcf	3,5	;RP0=0, select bank0
  5266  168E  00D8               	movwf	___flge@ff1+3
  5267  168F  1683               	bsf	3,5	;RP0=1, select bank1
  5268  1690  0832               	movf	(log@x+2)^(0+128),w
  5269  1691  1283               	bcf	3,5	;RP0=0, select bank0
  5270  1692  00D7               	movwf	___flge@ff1+2
  5271  1693  1683               	bsf	3,5	;RP0=1, select bank1
  5272  1694  0831               	movf	(log@x+1)^(0+128),w
  5273  1695  1283               	bcf	3,5	;RP0=0, select bank0
  5274  1696  00D6               	movwf	___flge@ff1+1
  5275  1697  1683               	bsf	3,5	;RP0=1, select bank1
  5276  1698  0830               	movf	log@x^(0+128),w
  5277  1699  1283               	bcf	3,5	;RP0=0, select bank0
  5278  169A  00D5               	movwf	___flge@ff1
  5279  169B  01D9               	clrf	___flge@ff2
  5280  169C  01DA               	clrf	___flge@ff2+1
  5281  169D  01DB               	clrf	___flge@ff2+2
  5282  169E  01DC               	clrf	___flge@ff2+3
  5283  169F  120A  118A  24FB  160A  118A  	fcall	___flge
  5284  16A4  1803               	btfsc	3,0
  5285  16A5  2EA7               	goto	l6826
  5286  16A6  2FC3               	ljmp	PL58	;call to abstracted procedure
  5287  16A7                     l6826:	
  5288  16A7  1683               	bsf	3,5	;RP0=1, select bank1
  5289  16A8  0833               	movf	(log@x+3)^(0+128),w
  5290  16A9  1283               	bcf	3,5	;RP0=0, select bank0
  5291  16AA  00A3               	movwf	___fleq@ff1+3
  5292  16AB  1683               	bsf	3,5	;RP0=1, select bank1
  5293  16AC  0832               	movf	(log@x+2)^(0+128),w
  5294  16AD  1283               	bcf	3,5	;RP0=0, select bank0
  5295  16AE  00A2               	movwf	___fleq@ff1+2
  5296  16AF  1683               	bsf	3,5	;RP0=1, select bank1
  5297  16B0  0831               	movf	(log@x+1)^(0+128),w
  5298  16B1  1283               	bcf	3,5	;RP0=0, select bank0
  5299  16B2  00A1               	movwf	___fleq@ff1+1
  5300  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  5301  16B4  0830               	movf	log@x^(0+128),w
  5302  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  5303  16B6  160A  158A  271A  160A  118A  	fcall	PL64	;call to abstracted procedure
  5304  16BB  160A  158A  26E4  160A  118A  	fcall	___fleq
  5305  16C0  1C03               	btfss	3,0
  5306  16C1  2EC3               	goto	l6830
  5307  16C2  2FC3               	ljmp	PL58	;call to abstracted procedure
  5308  16C3                     l6830:	
  5309  16C3  30BF               	movlw	191
  5310  16C4  00BC               	movwf	___fladd@b+3
  5311  16C5  3080               	movlw	128
  5312  16C6  00BB               	movwf	___fladd@b+2
  5313  16C7  3040               	movlw	64
  5314  16C8  01BA               	clrf	___fladd@b+1
  5315  16C9  01B9               	clrf	___fladd@b
  5316  16CA  00D8               	movwf	___flmul@b+3
  5317  16CB  306E               	movlw	(low (log@exponent| 0))& (0+255)
  5318  16CC  01D7               	clrf	___flmul@b+2
  5319  16CD  01D6               	clrf	___flmul@b+1
  5320  16CE  01D5               	clrf	___flmul@b
  5321  16CF  00B0               	movwf	frexp@eptr
  5322  16D0  1683               	bsf	3,5	;RP0=1, select bank1
  5323  16D1  0833               	movf	(log@x+3)^(0+128),w
  5324  16D2  1283               	bcf	3,5	;RP0=0, select bank0
  5325  16D3  00AF               	movwf	frexp@value+3
  5326  16D4  1683               	bsf	3,5	;RP0=1, select bank1
  5327  16D5  0832               	movf	(log@x+2)^(0+128),w
  5328  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  5329  16D7  00AE               	movwf	frexp@value+2
  5330  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  5331  16D9  0831               	movf	(log@x+1)^(0+128),w
  5332  16DA  1283               	bcf	3,5	;RP0=0, select bank0
  5333  16DB  00AD               	movwf	frexp@value+1
  5334  16DC  1683               	bsf	3,5	;RP0=1, select bank1
  5335  16DD  0830               	movf	log@x^(0+128),w
  5336  16DE  1283               	bcf	3,5	;RP0=0, select bank0
  5337  16DF  00AC               	movwf	frexp@value
  5338  16E0  160A  158A  269D  160A  118A  	fcall	_frexp
  5339  16E5  082F               	movf	?_frexp+3,w
  5340  16E6  00DC               	movwf	___flmul@a+3
  5341  16E7  082E               	movf	?_frexp+2,w
  5342  16E8  00DB               	movwf	___flmul@a+2
  5343  16E9  082D               	movf	?_frexp+1,w
  5344  16EA  00DA               	movwf	___flmul@a+1
  5345  16EB  082C               	movf	?_frexp,w
  5346  16EC  00D9               	movwf	___flmul@a
  5347  16ED  120A  158A  23DC  160A  118A  	fcall	___flmul
  5348  16F2  27A1  160A  118A   	fcall	PL28	;call to abstracted procedure
  5349  16F5  21C8  160A  118A   	fcall	___fladd
  5350  16F8  083C               	movf	?___fladd+3,w
  5351  16F9  1683               	bsf	3,5	;RP0=1, select bank1
  5352  16FA  00B3               	movwf	(log@x+3)^(0+128)
  5353  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  5354  16FC  083B               	movf	?___fladd+2,w
  5355  16FD  1683               	bsf	3,5	;RP0=1, select bank1
  5356  16FE  00B2               	movwf	(log@x+2)^(0+128)
  5357  16FF  1283               	bcf	3,5	;RP0=0, select bank0
  5358  1700  083A               	movf	?___fladd+1,w
  5359  1701  1683               	bsf	3,5	;RP0=1, select bank1
  5360  1702  00B1               	movwf	(log@x+1)^(0+128)
  5361  1703  1283               	bcf	3,5	;RP0=0, select bank0
  5362  1704  0839               	movf	?___fladd,w
  5363  1705  1683               	bsf	3,5	;RP0=1, select bank1
  5364  1706  00B0               	movwf	log@x^(0+128)
  5365  1707  30FF               	movlw	-1
  5366  1708  1283               	bcf	3,5	;RP0=0, select bank0
  5367  1709  07EE               	addwf	log@exponent,f
  5368  170A  1C03               	skipc
  5369  170B  03EF               	decf	log@exponent+1,f
  5370  170C  1683               	bsf	3,5	;RP0=1, select bank1
  5371  170D  0833               	movf	(log@x+3)^(0+128),w
  5372  170E  00A3               	movwf	(eval_poly@x+3)^(0+128)
  5373  170F  0832               	movf	(log@x+2)^(0+128),w
  5374  1710  00A2               	movwf	(eval_poly@x+2)^(0+128)
  5375  1711  0831               	movf	(log@x+1)^(0+128),w
  5376  1712  00A1               	movwf	(eval_poly@x+1)^(0+128)
  5377  1713  0830               	movf	log@x^(0+128),w
  5378  1714  00A0               	movwf	eval_poly@x^(0+128)
  5379  1715  3001               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  5380  1716  00A4               	movwf	eval_poly@d^(0+128)
  5381  1717  3008               	movlw	8
  5382  1718  00A5               	movwf	eval_poly@n^(0+128)
  5383  1719  01A6               	clrf	(eval_poly@n+1)^(0+128)
  5384  171A  211E  160A  118A   	fcall	_eval_poly
  5385  171D  0823               	movf	(?_eval_poly+3)^(0+128),w
  5386  171E  00B3               	movwf	(log@x+3)^(0+128)
  5387  171F  0822               	movf	(?_eval_poly+2)^(0+128),w
  5388  1720  00B2               	movwf	(log@x+2)^(0+128)
  5389  1721  0821               	movf	(?_eval_poly+1)^(0+128),w
  5390  1722  00B1               	movwf	(log@x+1)^(0+128)
  5391  1723  0820               	movf	?_eval_poly^(0+128),w
  5392  1724  00B0               	movwf	log@x^(0+128)
  5393  1725  0833               	movf	(log@x+3)^(0+128),w
  5394  1726  1283               	bcf	3,5	;RP0=0, select bank0
  5395  1727  00BC               	movwf	___fladd@b+3
  5396  1728  1683               	bsf	3,5	;RP0=1, select bank1
  5397  1729  0832               	movf	(log@x+2)^(0+128),w
  5398  172A  1283               	bcf	3,5	;RP0=0, select bank0
  5399  172B  00BB               	movwf	___fladd@b+2
  5400  172C  1683               	bsf	3,5	;RP0=1, select bank1
  5401  172D  0831               	movf	(log@x+1)^(0+128),w
  5402  172E  1283               	bcf	3,5	;RP0=0, select bank0
  5403  172F  00BA               	movwf	___fladd@b+1
  5404  1730  1683               	bsf	3,5	;RP0=1, select bank1
  5405  1731  0830               	movf	log@x^(0+128),w
  5406  1732  1283               	bcf	3,5	;RP0=0, select bank0
  5407  1733  00B9               	movwf	___fladd@b
  5408  1734  303F               	movlw	63
  5409  1735  00D8               	movwf	___flmul@b+3
  5410  1736  3031               	movlw	49
  5411  1737  00D7               	movwf	___flmul@b+2
  5412  1738  3072               	movlw	114
  5413  1739  00D6               	movwf	___flmul@b+1
  5414  173A  3018               	movlw	24
  5415  173B  00D5               	movwf	___flmul@b
  5416  173C  086E               	movf	log@exponent,w
  5417  173D  00AB               	movwf	___xxtofl@val
  5418  173E  086F               	movf	log@exponent+1,w
  5419  173F  27BC  160A  118A   	fcall	PL52	;call to abstracted procedure
  5420  1742  24A9  160A  118A   	fcall	___xxtofl
  5421  1745  27AA               	fcall	PL42	;call to abstracted procedure
  5422  1746  120A  158A  23DC  160A  118A  	fcall	___flmul
  5423  174B  27A1  160A  118A   	fcall	PL28	;call to abstracted procedure
  5424  174E  21C8               	fcall	___fladd
  5425  174F  083C               	movf	?___fladd+3,w
  5426  1750  1683               	bsf	3,5	;RP0=1, select bank1
  5427  1751  00B3               	movwf	(?_log+3)^(0+128)
  5428  1752  1283               	bcf	3,5	;RP0=0, select bank0
  5429  1753  083B               	movf	?___fladd+2,w
  5430  1754  1683               	bsf	3,5	;RP0=1, select bank1
  5431  1755  00B2               	movwf	(?_log+2)^(0+128)
  5432  1756  1283               	bcf	3,5	;RP0=0, select bank0
  5433  1757  083A               	movf	?___fladd+1,w
  5434  1758  1683               	bsf	3,5	;RP0=1, select bank1
  5435  1759  00B1               	movwf	(?_log+1)^(0+128)
  5436  175A  1283               	bcf	3,5	;RP0=0, select bank0
  5437  175B  0839               	movf	?___fladd,w
  5438  175C  1683               	bsf	3,5	;RP0=1, select bank1
  5439  175D  00B0               	movwf	?_log^(0+128)
  5440  175E  0008               	return
  5441  175F                     __end_of_log:	
  5442  175F                     __ptext4:	
  5443 ;; *************** function _Package_Usart_is_for_me *****************
  5444 ;; Defined at:
  5445 ;;		line 8 in file "protocolo.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;		None
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;  retorno         1    0[BANK0 ] unsigned char 
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      unsigned char 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0
  5454 ;; Tracked objects:
  5455 ;;		On entry : 300/100
  5456 ;;		On exit  : 300/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5459 ;;      Params:         0       0       0       0       0
  5460 ;;      Locals:         0       1       0       0       0
  5461 ;;      Temps:          0       0       0       0       0
  5462 ;;      Totals:         0       1       0       0       0
  5463 ;;Total ram usage:        1 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    1
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		_mediatemperaturaNTC
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           
  5474                           ;psect for function _Package_Usart_is_for_me
  5475  175F                     _Package_Usart_is_for_me:	
  5476                           
  5477                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5478                           
  5479                           ;incstack = 0
  5480                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5481  175F  1703               	bsf	3,6	;RP1=1, select bank3
  5482  1760  1C3C               	btfss	_generic_status^(0+384),0
  5483  1761  2F70               	goto	l7500
  5484                           
  5485                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5486  1762  1283               	bcf	3,5	;RP0=0, select bank2
  5487  1763  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5488  1764  1683               	bsf	3,5	;RP0=1, select bank3
  5489  1765  0634               	xorwf	_Board_Number^(0+384),w
  5490  1766  1903               	skipnz
  5491  1767  2F6B               	goto	l738
  5492  1768  1283               	bcf	3,5	;RP0=0, select bank2
  5493  1769  0F13               	incfsz	(_usart_buffer^(0+256)+3),w	;volatile
  5494  176A  2F70               	goto	l7500
  5495  176B                     l738:	
  5496                           
  5497                           ;protocolo.c: 13:             retorno=1;
  5498  176B  1283               	bcf	3,5	;RP0=0, select bank0
  5499  176C  1303               	bcf	3,6	;RP1=0, select bank0
  5500  176D  01A0               	clrf	Package_Usart_is_for_me@retorno
  5501  176E  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5502  176F  2F73               	goto	l7504
  5503  1770                     l7500:	
  5504                           
  5505                           ;protocolo.c: 15:             retorno=0;
  5506  1770  1283               	bcf	3,5	;RP0=0, select bank0
  5507  1771  1303               	bcf	3,6	;RP1=0, select bank0
  5508  1772  01A0               	clrf	Package_Usart_is_for_me@retorno
  5509  1773                     l7504:	
  5510                           
  5511                           ;protocolo.c: 21:      return retorno;
  5512  1773  0820               	movf	Package_Usart_is_for_me@retorno,w
  5513  1774  0008               	return
  5514  1775                     __end_of_Package_Usart_is_for_me:	
  5515  1775                     PL18:	
  5516  1775  082E               	movf	?___xxtofl+3,w
  5517  1776  1683               	bsf	3,5	;RP0=1, select bank1
  5518  1777  00A3               	movwf	(___fldiv@a+3)^(0+128)
  5519  1778  1283               	bcf	3,5	;RP0=0, select bank0
  5520  1779  082D               	movf	?___xxtofl+2,w
  5521  177A  1683               	bsf	3,5	;RP0=1, select bank1
  5522  177B  00A2               	movwf	(___fldiv@a+2)^(0+128)
  5523  177C  1283               	bcf	3,5	;RP0=0, select bank0
  5524  177D  082C               	movf	?___xxtofl+1,w
  5525  177E  1683               	bsf	3,5	;RP0=1, select bank1
  5526  177F  00A1               	movwf	(___fldiv@a+1)^(0+128)
  5527  1780  1283               	bcf	3,5	;RP0=0, select bank0
  5528  1781  082B               	movf	?___xxtofl,w
  5529  1782  1683               	bsf	3,5	;RP0=1, select bank1
  5530  1783  00A0               	movwf	___fldiv@a^(0+128)
  5531  1784  0008               	return
  5532  1785                     __end_ofPL18:	
  5533  1785                     PL20:	
  5534  1785  1283               	bcf	3,5	;RP0=0, select bank0
  5535  1786  00AB               	movwf	___xxtofl@val
  5536  1787  1683               	bsf	3,5	;RP0=1, select bank1
  5537  1788  084A               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  5538  1789  1283               	bcf	3,5	;RP0=0, select bank0
  5539  178A  00AC               	movwf	___xxtofl@val+1
  5540  178B  3000               	movlw	0
  5541  178C  01AD               	clrf	___xxtofl@val+2
  5542  178D  01AE               	clrf	___xxtofl@val+3
  5543  178E  0008               	return
  5544  178F                     __end_ofPL20:	
  5545  178F                     PL24:	
  5546  178F  082E               	movf	?___xxtofl+3,w
  5547  1790  00D0               	movwf	___flsub@a+3
  5548  1791  082D               	movf	?___xxtofl+2,w
  5549  1792  00CF               	movwf	___flsub@a+2
  5550  1793  082C               	movf	?___xxtofl+1,w
  5551  1794  00CE               	movwf	___flsub@a+1
  5552  1795  082B               	movf	?___xxtofl,w
  5553  1796  00CD               	movwf	___flsub@a
  5554  1797  0008               	return
  5555  1798                     __end_ofPL24:	
  5556  1798                     PL26:	
  5557  1798  0823               	movf	(?___fldiv+3)^(0+128),w
  5558  1799  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  5559  179A  0822               	movf	(?___fldiv+2)^(0+128),w
  5560  179B  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  5561  179C  0821               	movf	(?___fldiv+1)^(0+128),w
  5562  179D  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  5563  179E  0820               	movf	?___fldiv^(0+128),w
  5564  179F  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  5565  17A0  0008               	return
  5566  17A1                     __end_ofPL26:	
  5567  17A1                     PL28:	
  5568  17A1  0858               	movf	?___flmul+3,w
  5569  17A2  00C0               	movwf	___fladd@a+3
  5570  17A3  0857               	movf	?___flmul+2,w
  5571  17A4  00BF               	movwf	___fladd@a+2
  5572  17A5  0856               	movf	?___flmul+1,w
  5573  17A6  00BE               	movwf	___fladd@a+1
  5574  17A7  0855               	movf	?___flmul,w
  5575  17A8  00BD               	movwf	___fladd@a
  5576  17A9  0008               	return
  5577  17AA                     __end_ofPL28:	
  5578  17AA                     PL42:	
  5579  17AA  082E               	movf	?___xxtofl+3,w
  5580  17AB  00DC               	movwf	___flmul@a+3
  5581  17AC  082D               	movf	?___xxtofl+2,w
  5582  17AD  00DB               	movwf	___flmul@a+2
  5583  17AE  082C               	movf	?___xxtofl+1,w
  5584  17AF  00DA               	movwf	___flmul@a+1
  5585  17B0  082B               	movf	?___xxtofl,w
  5586  17B1  00D9               	movwf	___flmul@a
  5587  17B2  0008               	return
  5588  17B3                     __end_ofPL42:	
  5589  17B3                     PL44:	
  5590  17B3  1839               	btfsc	___fladd@b,0
  5591  17B4  17CC               	bsf	___fladd@grs,7
  5592  17B5  0D3C               	rlf	___fladd@b+3,w
  5593  17B6  0CBC               	rrf	___fladd@b+3,f
  5594  17B7  0CBB               	rrf	___fladd@b+2,f
  5595  17B8  0CBA               	rrf	___fladd@b+1,f
  5596  17B9  0CB9               	rrf	___fladd@b,f
  5597  17BA  0ACB               	incf	___fladd@bexp,f
  5598  17BB  0008               	return
  5599  17BC                     __end_ofPL44:	
  5600  17BC                     PL52:	
  5601  17BC  00AC               	movwf	___xxtofl@val+1
  5602  17BD  3000               	movlw	0
  5603  17BE  1BAC               	btfsc	___xxtofl@val+1,7
  5604  17BF  30FF               	movlw	255
  5605  17C0  00AD               	movwf	___xxtofl@val+2
  5606  17C1  00AE               	movwf	___xxtofl@val+3
  5607  17C2  3401               	retlw	1
  5608  17C3                     __end_ofPL52:	
  5609  17C3                     PL58:	
  5610  17C3  1683               	bsf	3,5	;RP0=1, select bank1
  5611  17C4  01B0               	clrf	?_log^(0+128)
  5612  17C5  01B1               	clrf	(?_log+1)^(0+128)
  5613  17C6  01B2               	clrf	(?_log+2)^(0+128)
  5614  17C7  01B3               	clrf	(?_log+3)^(0+128)
  5615  17C8  0008               	return
  5616  17C9                     __end_ofPL58:	
  5617  17C9                     PL76:	
  5618  17C9  1003               	clrc
  5619  17CA  0CB8               	rrf	___xxtofl@arg+3,f
  5620  17CB  0CB7               	rrf	___xxtofl@arg+2,f
  5621  17CC  0CB6               	rrf	___xxtofl@arg+1,f
  5622  17CD  0CB5               	rrf	___xxtofl@arg,f
  5623  17CE  0008               	return
  5624  17CF                     __end_ofPL76:	
  5625  17CF                     PL78:	
  5626  17CF  01B9               	clrf	?___fladd
  5627  17D0  01BA               	clrf	?___fladd+1
  5628  17D1  01BB               	clrf	?___fladd+2
  5629  17D2  01BC               	clrf	?___fladd+3
  5630  17D3  0008               	return
  5631  17D4                     __end_ofPL78:	
  5632  17D4                     __ptext3:	
  5633 ;; *************** function _my_delay_ms *****************
  5634 ;; Defined at:
  5635 ;;		line 5 in file "my_delay.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  time            4    0[BANK0 ] long 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  i               4    6[BANK0 ] long 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  1    wreg      void 
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0, btemp+1
  5644 ;; Tracked objects:
  5645 ;;		On entry : 300/0
  5646 ;;		On exit  : 300/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5649 ;;      Params:         0       4       0       0       0
  5650 ;;      Locals:         0       4       0       0       0
  5651 ;;      Temps:          0       2       0       0       0
  5652 ;;      Totals:         0      10       0       0       0
  5653 ;;Total ram usage:       10 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; Hardware stack levels required when called:    1
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_mediatemperaturaNTC
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           
  5664                           ;psect for function _my_delay_ms
  5665  17D4                     _my_delay_ms:	
  5666                           
  5667                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5668                           
  5669                           ;incstack = 0
  5670                           ; Regs used in _my_delay_ms: [wreg+status,2+status,0+btemp+1]
  5671  17D4  01A6               	clrf	my_delay_ms@i
  5672  17D5  01A7               	clrf	my_delay_ms@i+1
  5673  17D6  01A8               	clrf	my_delay_ms@i+2
  5674  17D7  01A9               	clrf	my_delay_ms@i+3
  5675  17D8                     l7450:	
  5676  17D8  0829               	movf	my_delay_ms@i+3,w
  5677  17D9  3A80               	xorlw	128
  5678  17DA  00FF               	movwf	127
  5679  17DB  0823               	movf	my_delay_ms@time+3,w
  5680  17DC  3A80               	xorlw	128
  5681  17DD  027F               	subwf	127,w
  5682  17DE  1D03               	skipz
  5683  17DF  2FEA               	goto	u7083
  5684  17E0  0822               	movf	my_delay_ms@time+2,w
  5685  17E1  0228               	subwf	my_delay_ms@i+2,w
  5686  17E2  1D03               	skipz
  5687  17E3  2FEA               	goto	u7083
  5688  17E4  0821               	movf	my_delay_ms@time+1,w
  5689  17E5  0227               	subwf	my_delay_ms@i+1,w
  5690  17E6  1D03               	skipz
  5691  17E7  2FEA               	goto	u7083
  5692  17E8  0820               	movf	my_delay_ms@time,w
  5693  17E9  0226               	subwf	my_delay_ms@i,w
  5694  17EA                     u7083:	
  5695  17EA  1803               	btfsc	3,0
  5696  17EB  0008               	return
  5697                           
  5698                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5699  17EC  3003               	movlw	3
  5700  17ED  1283               	bcf	3,5	;RP0=0, select bank0
  5701  17EE  1303               	bcf	3,6	;RP1=0, select bank0
  5702  17EF  00A5               	movwf	??_my_delay_ms+1
  5703  17F0  3097               	movlw	151
  5704  17F1  00A4               	movwf	??_my_delay_ms
  5705  17F2                     u7667:	
  5706  17F2  0BA4               	decfsz	??_my_delay_ms,f
  5707  17F3  2FF2               	goto	u7667
  5708  17F4  0BA5               	decfsz	??_my_delay_ms+1,f
  5709  17F5  2FF2               	goto	u7667
  5710                           
  5711                           ;my_delay.c: 10:             }
  5712  17F6  1283               	bcf	3,5	;RP0=0, select bank0
  5713  17F7  1303               	bcf	3,6	;RP1=0, select bank0
  5714  17F8  0AA6               	incf	my_delay_ms@i,f
  5715  17F9  1903               	skipnz
  5716  17FA  0AA7               	incf	my_delay_ms@i+1,f
  5717  17FB  1903               	skipnz
  5718  17FC  0AA8               	incf	my_delay_ms@i+2,f
  5719  17FD  1903               	skipnz
  5720  17FE  0AA9               	incf	my_delay_ms@i+3,f
  5721  17FF  2FD8               	goto	l7450
  5722  1800                     __end_of_my_delay_ms:	
  5723                           
  5724                           	psect	text7
  5725  1E9D                     __ptext7:	
  5726 ;; *************** function _frexp *****************
  5727 ;; Defined at:
  5728 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\frexp.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  value           4   12[BANK0 ] int 
  5731 ;;  eptr            1   16[BANK0 ] PTR int 
  5732 ;;		 -> log@exponent(2), 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;		None
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  4   12[BANK0 ] PTR int 
  5737 ;; Registers used:
  5738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5739 ;; Tracked objects:
  5740 ;;		On entry : 300/0
  5741 ;;		On exit  : B00/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5744 ;;      Params:         0       5       0       0       0
  5745 ;;      Locals:         0       0       0       0       0
  5746 ;;      Temps:          0       2       0       0       0
  5747 ;;      Totals:         0       7       0       0       0
  5748 ;;Total ram usage:        7 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:    2
  5751 ;; This function calls:
  5752 ;;		___fleq
  5753 ;; This function is called by:
  5754 ;;		_log
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           
  5759                           ;psect for function _frexp
  5760  1E9D                     _frexp:	
  5761                           
  5762                           ;incstack = 0
  5763                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5764  1E9D  082F               	movf	frexp@value+3,w
  5765  1E9E  00A3               	movwf	___fleq@ff1+3
  5766  1E9F  082E               	movf	frexp@value+2,w
  5767  1EA0  00A2               	movwf	___fleq@ff1+2
  5768  1EA1  082D               	movf	frexp@value+1,w
  5769  1EA2  00A1               	movwf	___fleq@ff1+1
  5770  1EA3  082C               	movf	frexp@value,w
  5771  1EA4  271A  160A  158A   	fcall	PL64	;call to abstracted procedure
  5772  1EA7  26E4  160A  158A   	fcall	___fleq
  5773  1EAA  1C03               	btfss	3,0
  5774  1EAB  2EB7               	goto	l6622
  5775  1EAC  0830               	movf	frexp@eptr,w
  5776  1EAD  0084               	movwf	4
  5777  1EAE  1383               	bcf	3,7	;select IRP bank0
  5778  1EAF  0180               	clrf	0
  5779  1EB0  0A84               	incf	4,f
  5780  1EB1  0180               	clrf	0
  5781  1EB2  01AC               	clrf	?_frexp
  5782  1EB3  01AD               	clrf	?_frexp+1
  5783  1EB4  01AE               	clrf	?_frexp+2
  5784  1EB5  01AF               	clrf	?_frexp+3
  5785  1EB6  0008               	return
  5786  1EB7                     l6622:	
  5787  1EB7  082F               	movf	frexp@value+3,w
  5788  1EB8  397F               	andlw	127
  5789  1EB9  00B1               	movwf	??_frexp
  5790  1EBA  01B2               	clrf	??_frexp+1
  5791  1EBB  1003               	clrc
  5792  1EBC  0DB1               	rlf	??_frexp,f
  5793  1EBD  0DB2               	rlf	??_frexp+1,f
  5794  1EBE  0830               	movf	frexp@eptr,w
  5795  1EBF  0084               	movwf	4
  5796  1EC0  0831               	movf	??_frexp,w
  5797  1EC1  1383               	bcf	3,7	;select IRP bank0
  5798  1EC2  0080               	movwf	0
  5799  1EC3  0A84               	incf	4,f
  5800  1EC4  0832               	movf	??_frexp+1,w
  5801  1EC5  0080               	movwf	0
  5802  1EC6  0D2E               	rlf	frexp@value+2,w
  5803  1EC7  0D2E               	rlf	frexp@value+2,w
  5804  1EC8  3901               	andlw	1
  5805  1EC9  00B1               	movwf	??_frexp
  5806  1ECA  01B2               	clrf	??_frexp+1
  5807  1ECB  0830               	movf	frexp@eptr,w
  5808  1ECC  0084               	movwf	4
  5809  1ECD  0831               	movf	??_frexp,w
  5810  1ECE  0480               	iorwf	0,f
  5811  1ECF  0A84               	incf	4,f
  5812  1ED0  0832               	movf	??_frexp+1,w
  5813  1ED1  0480               	iorwf	0,f
  5814  1ED2  0830               	movf	frexp@eptr,w
  5815  1ED3  0084               	movwf	4
  5816  1ED4  3082               	movlw	130
  5817  1ED5  0780               	addwf	0,f
  5818  1ED6  0F84               	incfsz	4,f
  5819  1ED7  0800               	movf	0,w
  5820  1ED8  1803               	skipnc
  5821  1ED9  0A00               	incf	0,w
  5822  1EDA  00FF               	movwf	127
  5823  1EDB  3EFF               	addlw	255
  5824  1EDC  0080               	movwf	0
  5825  1EDD  0384               	decf	4,f
  5826  1EDE  082F               	movf	frexp@value+3,w
  5827  1EDF  3980               	andlw	-128
  5828  1EE0  383F               	iorlw	63
  5829  1EE1  00AF               	movwf	frexp@value+3
  5830  1EE2  13AE               	bcf	frexp@value+2,7
  5831  1EE3  0008               	return
  5832  1EE4                     __end_of_frexp:	
  5833  1EE4                     __ptext8:	
  5834 ;; *************** function ___fleq *****************
  5835 ;; Defined at:
  5836 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;  ff1             4    0[BANK0 ] PTR int 
  5839 ;;  ff2             4    4[BANK0 ] PTR int 
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;		None               void
  5844 ;; Registers used:
  5845 ;;		wreg, status,2, status,0
  5846 ;; Tracked objects:
  5847 ;;		On entry : 300/0
  5848 ;;		On exit  : 300/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5851 ;;      Params:         0       8       0       0       0
  5852 ;;      Locals:         0       0       0       0       0
  5853 ;;      Temps:          0       4       0       0       0
  5854 ;;      Totals:         0      12       0       0       0
  5855 ;;Total ram usage:       12 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    1
  5858 ;; This function calls:
  5859 ;;		Nothing
  5860 ;; This function is called by:
  5861 ;;		_log
  5862 ;;		_frexp
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           
  5867                           ;psect for function ___fleq
  5868  1EE4                     ___fleq:	
  5869                           
  5870                           ;incstack = 0
  5871                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  5872  1EE4  3080               	movlw	128
  5873  1EE5  01A8               	clrf	??___fleq
  5874  1EE6  01A9               	clrf	??___fleq+1
  5875  1EE7  0522               	andwf	___fleq@ff1+2,w
  5876  1EE8  00AA               	movwf	??___fleq+2
  5877  1EE9  307F               	movlw	127
  5878  1EEA  0523               	andwf	___fleq@ff1+3,w
  5879  1EEB  00AB               	movwf	??___fleq+3
  5880  1EEC  042A               	iorwf	??___fleq+2,w
  5881  1EED  0429               	iorwf	??___fleq+1,w
  5882  1EEE  0428               	iorwf	??___fleq,w
  5883  1EEF  1D03               	skipz
  5884  1EF0  2EF5               	goto	l6060
  5885  1EF1  01A0               	clrf	___fleq@ff1
  5886  1EF2  01A1               	clrf	___fleq@ff1+1
  5887  1EF3  01A2               	clrf	___fleq@ff1+2
  5888  1EF4  01A3               	clrf	___fleq@ff1+3
  5889  1EF5                     l6060:	
  5890  1EF5  3080               	movlw	128
  5891  1EF6  01A8               	clrf	??___fleq
  5892  1EF7  01A9               	clrf	??___fleq+1
  5893  1EF8  0526               	andwf	___fleq@ff2+2,w
  5894  1EF9  00AA               	movwf	??___fleq+2
  5895  1EFA  307F               	movlw	127
  5896  1EFB  0527               	andwf	___fleq@ff2+3,w
  5897  1EFC  00AB               	movwf	??___fleq+3
  5898  1EFD  042A               	iorwf	??___fleq+2,w
  5899  1EFE  0429               	iorwf	??___fleq+1,w
  5900  1EFF  0428               	iorwf	??___fleq,w
  5901  1F00  1D03               	skipz
  5902  1F01  2F06               	goto	l6064
  5903  1F02  01A4               	clrf	___fleq@ff2
  5904  1F03  01A5               	clrf	___fleq@ff2+1
  5905  1F04  01A6               	clrf	___fleq@ff2+2
  5906  1F05  01A7               	clrf	___fleq@ff2+3
  5907  1F06                     l6064:	
  5908  1F06  0827               	movf	___fleq@ff2+3,w
  5909  1F07  0623               	xorwf	___fleq@ff1+3,w
  5910  1F08  1D03               	skipz
  5911  1F09  2F14               	goto	u5265
  5912  1F0A  0826               	movf	___fleq@ff2+2,w
  5913  1F0B  0622               	xorwf	___fleq@ff1+2,w
  5914  1F0C  1D03               	skipz
  5915  1F0D  2F14               	goto	u5265
  5916  1F0E  0825               	movf	___fleq@ff2+1,w
  5917  1F0F  0621               	xorwf	___fleq@ff1+1,w
  5918  1F10  1D03               	skipz
  5919  1F11  2F14               	goto	u5265
  5920  1F12  0824               	movf	___fleq@ff2,w
  5921  1F13  0620               	xorwf	___fleq@ff1,w
  5922  1F14                     u5265:	
  5923  1F14  1903               	skipnz
  5924  1F15  2F18               	goto	l6068
  5925  1F16  1003               	clrc
  5926  1F17  0008               	return
  5927  1F18                     l6068:	
  5928  1F18  1403               	setc
  5929  1F19  0008               	return
  5930  1F1A                     __end_of___fleq:	
  5931  1F1A                     PL64:	
  5932  1F1A  00A0               	movwf	___fleq@ff1
  5933  1F1B  01A4               	clrf	___fleq@ff2
  5934  1F1C  01A5               	clrf	___fleq@ff2+1
  5935  1F1D  01A6               	clrf	___fleq@ff2+2
  5936  1F1E  01A7               	clrf	___fleq@ff2+3
  5937  1F1F  0008               	return
  5938  1F20                     __end_ofPL64:	
  5939                           
  5940                           	psect	text11
  5941  1CB5                     __ptext11:	
  5942 ;; *************** function _USART_init *****************
  5943 ;; Defined at:
  5944 ;;		line 18 in file "usart.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;  baudrate        4    0[BANK0 ] unsigned long 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;  i               1    4[BANK0 ] unsigned char 
  5949 ;;  erro            1    0        unsigned char 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      void 
  5952 ;; Registers used:
  5953 ;;		wreg, status,2, status,0
  5954 ;; Tracked objects:
  5955 ;;		On entry : 300/0
  5956 ;;		On exit  : 300/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5959 ;;      Params:         0       4       0       0       0
  5960 ;;      Locals:         0       1       0       0       0
  5961 ;;      Temps:          0       0       0       0       0
  5962 ;;      Totals:         0       5       0       0       0
  5963 ;;Total ram usage:        5 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    1
  5966 ;; This function calls:
  5967 ;;		Nothing
  5968 ;; This function is called by:
  5969 ;;		_main
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           
  5974                           ;psect for function _USART_init
  5975  1CB5                     _USART_init:	
  5976                           
  5977                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  5978                           
  5979                           ;incstack = 0
  5980                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  5981  1CB5  304B               	movlw	75
  5982  1CB6  0621               	xorwf	USART_init@baudrate+1,w
  5983  1CB7  0420               	iorwf	USART_init@baudrate,w
  5984  1CB8  0422               	iorwf	USART_init@baudrate+2,w
  5985  1CB9  0423               	iorwf	USART_init@baudrate+3,w
  5986  1CBA  1D03               	btfss	3,2
  5987  1CBB  2CC6               	goto	l7600
  5988                           
  5989                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  5990  1CBC  1798               	bsf	24,7	;volatile
  5991                           
  5992                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  5993  1CBD  1618               	bsf	24,4	;volatile
  5994                           
  5995                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  5996  1CBE  1683               	bsf	3,5	;RP0=1, select bank1
  5997  1CBF  1518               	bsf	24,2	;volatile
  5998                           
  5999                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  6000  1CC0  1218               	bcf	24,4	;volatile
  6001                           
  6002                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  6003  1CC1  1318               	bcf	24,6	;volatile
  6004                           
  6005                           ;usart.c: 32:           SPBRG =12;
  6006  1CC2  300C               	movlw	12
  6007  1CC3  0099               	movwf	25	;volatile
  6008                           
  6009                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  6010  1CC4  170B               	bsf	11,6	;volatile
  6011  1CC5  2CDF               	goto	L5
  6012  1CC6                     l7600:	
  6013                           ;usart.c: 35:           }
  6014                           
  6015                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  6016                           
  6017  1CC6  30C2               	movlw	194
  6018  1CC7  0621               	xorwf	USART_init@baudrate+1,w
  6019  1CC8  1D03               	skipz
  6020  1CC9  2CE0               	goto	l7620
  6021  1CCA  0322               	decf	USART_init@baudrate+2,w
  6022  1CCB  0420               	iorwf	USART_init@baudrate,w
  6023  1CCC  0423               	iorwf	USART_init@baudrate+3,w
  6024  1CCD  1D03               	btfss	3,2
  6025  1CCE  2CE0               	goto	l7620
  6026                           
  6027                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  6028  1CCF  3010               	movlw	16
  6029  1CD0  1683               	bsf	3,5	;RP0=1, select bank1
  6030  1CD1  0099               	movwf	25	;volatile
  6031                           
  6032                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  6033  1CD2  1703               	bsf	3,6	;RP1=1, select bank3
  6034  1CD3  1587               	bsf	7,3	;volatile
  6035                           
  6036                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  6037  1CD4  1303               	bcf	3,6	;RP1=0, select bank1
  6038  1CD5  1518               	bsf	24,2	;volatile
  6039                           
  6040                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  6041  1CD6  1283               	bcf	3,5	;RP0=0, select bank0
  6042  1CD7  1798               	bsf	24,7	;volatile
  6043                           
  6044                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  6045  1CD8  1683               	bsf	3,5	;RP0=1, select bank1
  6046  1CD9  1218               	bcf	24,4	;volatile
  6047                           
  6048                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  6049  1CDA  1318               	bcf	24,6	;volatile
  6050                           
  6051                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  6052  1CDB  1283               	bcf	3,5	;RP0=0, select bank0
  6053  1CDC  1618               	bsf	24,4	;volatile
  6054                           
  6055                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  6056  1CDD  170B               	bsf	11,6	;volatile
  6057                           
  6058                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  6059  1CDE  1683               	bsf	3,5	;RP0=1, select bank1
  6060  1CDF                     L5:	
  6061  1CDF  168C               	bsf	12,5	;volatile
  6062  1CE0                     l7620:	
  6063                           
  6064                           ;usart.c: 68:      TRISC6= 1;
  6065  1CE0  1683               	bsf	3,5	;RP0=1, select bank1
  6066  1CE1  1707               	bsf	7,6	;volatile
  6067                           
  6068                           ;usart.c: 69:      TRISC7= 1;
  6069  1CE2  1787               	bsf	7,7	;volatile
  6070                           
  6071                           ;usart.c: 71:      CREN=0;
  6072  1CE3  1283               	bcf	3,5	;RP0=0, select bank0
  6073  1CE4  1218               	bcf	24,4	;volatile
  6074                           
  6075                           ;usart.c: 72:      CREN=1;
  6076  1CE5  1618               	bsf	24,4	;volatile
  6077                           
  6078                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  6079  1CE6  01A4               	clrf	USART_init@i
  6080  1CE7                     l7634:	
  6081  1CE7  081A               	movf	26,w	;volatile
  6082  1CE8  300F               	movlw	15
  6083  1CE9  0AA4               	incf	USART_init@i,f
  6084  1CEA  0224               	subwf	USART_init@i,w
  6085  1CEB  1803               	btfsc	3,0
  6086  1CEC  0008               	return
  6087  1CED  2CE7               	goto	l7634
  6088  1CEE                     __end_of_USART_init:	
  6089                           
  6090                           	psect	text12
  6091  1DAC                     __ptext12:	
  6092 ;; *************** function _I2C_Master_Init *****************
  6093 ;; Defined at:
  6094 ;;		line 7 in file "I2C.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  c               4   13[BANK0 ] const unsigned long 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;		None
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1    wreg      void 
  6101 ;; Registers used:
  6102 ;;		wreg, status,2, status,0, pclath, cstack
  6103 ;; Tracked objects:
  6104 ;;		On entry : 300/0
  6105 ;;		On exit  : 300/100
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6108 ;;      Params:         0       4       0       0       0
  6109 ;;      Locals:         0       0       0       0       0
  6110 ;;      Temps:          0       4       0       0       0
  6111 ;;      Totals:         0       8       0       0       0
  6112 ;;Total ram usage:        8 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    2
  6115 ;; This function calls:
  6116 ;;		___lldiv
  6117 ;; This function is called by:
  6118 ;;		_main
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           
  6123                           ;psect for function _I2C_Master_Init
  6124  1DAC                     _I2C_Master_Init:	
  6125                           
  6126                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  6127                           
  6128                           ;incstack = 0
  6129                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  6130  1DAC  3028               	movlw	40
  6131  1DAD  0094               	movwf	20	;volatile
  6132                           
  6133                           ;I2C.c: 11:   SSPCON2 = 0;
  6134  1DAE  1683               	bsf	3,5	;RP0=1, select bank1
  6135  1DAF  0191               	clrf	17	;volatile
  6136                           
  6137                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  6138  1DB0  1283               	bcf	3,5	;RP0=0, select bank0
  6139  1DB1  082D               	movf	I2C_Master_Init@c,w
  6140  1DB2  00B1               	movwf	??_I2C_Master_Init
  6141  1DB3  082E               	movf	I2C_Master_Init@c+1,w
  6142  1DB4  00B2               	movwf	??_I2C_Master_Init+1
  6143  1DB5  082F               	movf	I2C_Master_Init@c+2,w
  6144  1DB6  00B3               	movwf	??_I2C_Master_Init+2
  6145  1DB7  0830               	movf	I2C_Master_Init@c+3,w
  6146  1DB8  00B4               	movwf	??_I2C_Master_Init+3
  6147  1DB9  3002               	movlw	2
  6148  1DBA                     u7215:	
  6149  1DBA  1003               	clrc
  6150  1DBB  0DB1               	rlf	??_I2C_Master_Init,f
  6151  1DBC  0DB2               	rlf	??_I2C_Master_Init+1,f
  6152  1DBD  0DB3               	rlf	??_I2C_Master_Init+2,f
  6153  1DBE  0DB4               	rlf	??_I2C_Master_Init+3,f
  6154  1DBF  3EFF               	addlw	-1
  6155  1DC0  1D03               	skipz
  6156  1DC1  2DBA               	goto	u7215
  6157  1DC2  0834               	movf	??_I2C_Master_Init+3,w
  6158  1DC3  00A3               	movwf	___lldiv@divisor+3
  6159  1DC4  0833               	movf	??_I2C_Master_Init+2,w
  6160  1DC5  00A2               	movwf	___lldiv@divisor+2
  6161  1DC6  0832               	movf	??_I2C_Master_Init+1,w
  6162  1DC7  00A1               	movwf	___lldiv@divisor+1
  6163  1DC8  0831               	movf	??_I2C_Master_Init,w
  6164  1DC9  00A0               	movwf	___lldiv@divisor
  6165  1DCA  307A               	movlw	122
  6166  1DCB  01A7               	clrf	___lldiv@dividend+3
  6167  1DCC  00A6               	movwf	___lldiv@dividend+2
  6168  1DCD  3012               	movlw	18
  6169  1DCE  00A5               	movwf	___lldiv@dividend+1
  6170  1DCF  01A4               	clrf	___lldiv@dividend
  6171  1DD0  25D9               	fcall	___lldiv
  6172  1DD1  0820               	movf	?___lldiv,w
  6173  1DD2  3EFF               	addlw	255
  6174  1DD3  1683               	bsf	3,5	;RP0=1, select bank1
  6175  1DD4  0093               	movwf	19	;volatile
  6176                           
  6177                           ;I2C.c: 13:   SSPSTAT = 0;
  6178  1DD5  0194               	clrf	20	;volatile
  6179                           
  6180                           ;I2C.c: 14:   TRISC3 = 1;
  6181  1DD6  1587               	bsf	7,3	;volatile
  6182                           
  6183                           ;I2C.c: 15:   TRISC4 = 1;
  6184  1DD7  1607               	bsf	7,4	;volatile
  6185  1DD8  0008               	return
  6186  1DD9                     __end_of_I2C_Master_Init:	
  6187  1DD9                     __ptext13:	
  6188 ;; *************** function ___lldiv *****************
  6189 ;; Defined at:
  6190 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  divisor         4    0[BANK0 ] unsigned long 
  6193 ;;  dividend        4    4[BANK0 ] unsigned long 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  quotient        4    8[BANK0 ] unsigned long 
  6196 ;;  counter         1   12[BANK0 ] unsigned char 
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  4    0[BANK0 ] unsigned long 
  6199 ;; Registers used:
  6200 ;;		wreg, status,2, status,0
  6201 ;; Tracked objects:
  6202 ;;		On entry : 300/0
  6203 ;;		On exit  : 300/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6206 ;;      Params:         0       8       0       0       0
  6207 ;;      Locals:         0       5       0       0       0
  6208 ;;      Temps:          0       0       0       0       0
  6209 ;;      Totals:         0      13       0       0       0
  6210 ;;Total ram usage:       13 bytes
  6211 ;; Hardware stack levels used:    1
  6212 ;; Hardware stack levels required when called:    1
  6213 ;; This function calls:
  6214 ;;		Nothing
  6215 ;; This function is called by:
  6216 ;;		_I2C_Master_Init
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           
  6221                           ;psect for function ___lldiv
  6222  1DD9                     ___lldiv:	
  6223                           
  6224                           ;incstack = 0
  6225                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6226  1DD9  01A8               	clrf	___lldiv@quotient
  6227  1DDA  01A9               	clrf	___lldiv@quotient+1
  6228  1DDB  01AA               	clrf	___lldiv@quotient+2
  6229  1DDC  01AB               	clrf	___lldiv@quotient+3
  6230  1DDD  0823               	movf	___lldiv@divisor+3,w
  6231  1DDE  0422               	iorwf	___lldiv@divisor+2,w
  6232  1DDF  0421               	iorwf	___lldiv@divisor+1,w
  6233  1DE0  0420               	iorwf	___lldiv@divisor,w
  6234  1DE1  1903               	skipnz
  6235  1DE2  2E18               	goto	l7558
  6236  1DE3  01AC               	clrf	___lldiv@counter
  6237  1DE4                     L6:	
  6238  1DE4  0AAC               	incf	___lldiv@counter,f
  6239  1DE5  1BA3               	btfsc	___lldiv@divisor+3,7
  6240  1DE6  2DED               	goto	l7546
  6241  1DE7  1003               	clrc
  6242  1DE8  0DA0               	rlf	___lldiv@divisor,f
  6243  1DE9  0DA1               	rlf	___lldiv@divisor+1,f
  6244  1DEA  0DA2               	rlf	___lldiv@divisor+2,f
  6245  1DEB  0DA3               	rlf	___lldiv@divisor+3,f
  6246  1DEC  2DE4               	goto	L6
  6247  1DED                     l7546:	
  6248  1DED  1003               	clrc
  6249  1DEE  0DA8               	rlf	___lldiv@quotient,f
  6250  1DEF  0DA9               	rlf	___lldiv@quotient+1,f
  6251  1DF0  0DAA               	rlf	___lldiv@quotient+2,f
  6252  1DF1  0DAB               	rlf	___lldiv@quotient+3,f
  6253  1DF2  0823               	movf	___lldiv@divisor+3,w
  6254  1DF3  0227               	subwf	___lldiv@dividend+3,w
  6255  1DF4  1D03               	skipz
  6256  1DF5  2E00               	goto	u7195
  6257  1DF6  0822               	movf	___lldiv@divisor+2,w
  6258  1DF7  0226               	subwf	___lldiv@dividend+2,w
  6259  1DF8  1D03               	skipz
  6260  1DF9  2E00               	goto	u7195
  6261  1DFA  0821               	movf	___lldiv@divisor+1,w
  6262  1DFB  0225               	subwf	___lldiv@dividend+1,w
  6263  1DFC  1D03               	skipz
  6264  1DFD  2E00               	goto	u7195
  6265  1DFE  0820               	movf	___lldiv@divisor,w
  6266  1DFF  0224               	subwf	___lldiv@dividend,w
  6267  1E00                     u7195:	
  6268  1E00  1C03               	skipc
  6269  1E01  2E12               	goto	L7
  6270  1E02  0820               	movf	___lldiv@divisor,w
  6271  1E03  02A4               	subwf	___lldiv@dividend,f
  6272  1E04  0821               	movf	___lldiv@divisor+1,w
  6273  1E05  1C03               	skipc
  6274  1E06  0F21               	incfsz	___lldiv@divisor+1,w
  6275  1E07  02A5               	subwf	___lldiv@dividend+1,f
  6276  1E08  0822               	movf	___lldiv@divisor+2,w
  6277  1E09  1C03               	skipc
  6278  1E0A  0F22               	incfsz	___lldiv@divisor+2,w
  6279  1E0B  02A6               	subwf	___lldiv@dividend+2,f
  6280  1E0C  0823               	movf	___lldiv@divisor+3,w
  6281  1E0D  1C03               	skipc
  6282  1E0E  0F23               	incfsz	___lldiv@divisor+3,w
  6283  1E0F  02A7               	subwf	___lldiv@dividend+3,f
  6284  1E10  1428               	bsf	___lldiv@quotient,0
  6285  1E11  1003               	clrc
  6286  1E12                     L7:	
  6287  1E12  0CA3               	rrf	___lldiv@divisor+3,f
  6288  1E13  0CA2               	rrf	___lldiv@divisor+2,f
  6289  1E14  0CA1               	rrf	___lldiv@divisor+1,f
  6290  1E15  0CA0               	rrf	___lldiv@divisor,f
  6291  1E16  0BAC               	decfsz	___lldiv@counter,f
  6292  1E17  2DED               	goto	l7546
  6293  1E18                     l7558:	
  6294  1E18  082B               	movf	___lldiv@quotient+3,w
  6295  1E19  00A3               	movwf	?___lldiv+3
  6296  1E1A  082A               	movf	___lldiv@quotient+2,w
  6297  1E1B  00A2               	movwf	?___lldiv+2
  6298  1E1C  0829               	movf	___lldiv@quotient+1,w
  6299  1E1D  00A1               	movwf	?___lldiv+1
  6300  1E1E  0828               	movf	___lldiv@quotient,w
  6301  1E1F  00A0               	movwf	?___lldiv
  6302  1E20  0008               	return
  6303  1E21                     __end_of___lldiv:	
  6304                           
  6305                           	psect	text15
  6306  1C57                     __ptext15:	
  6307 ;; *************** function _strcpy *****************
  6308 ;; Defined at:
  6309 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;  to              1    wreg     PTR unsigned char 
  6312 ;;		 -> texto(16), 
  6313 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  6314 ;;		 -> STR_2(1), 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  to              1    2[BANK0 ] PTR unsigned char 
  6317 ;;		 -> texto(16), 
  6318 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  6319 ;;		 -> texto(16), 
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  1    wreg      PTR unsigned char 
  6322 ;; Registers used:
  6323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6324 ;; Tracked objects:
  6325 ;;		On entry : B00/0
  6326 ;;		On exit  : B00/800
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6329 ;;      Params:         0       1       0       0       0
  6330 ;;      Locals:         0       2       0       0       0
  6331 ;;      Temps:          0       1       0       0       0
  6332 ;;      Totals:         0       4       0       0       0
  6333 ;;Total ram usage:        4 bytes
  6334 ;; Hardware stack levels used:    2
  6335 ;; Hardware stack levels required when called:    1
  6336 ;; This function calls:
  6337 ;;		Nothing
  6338 ;; This function is called by:
  6339 ;;		_Decodify_Command
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           
  6344                           ;psect for function _strcpy
  6345  1C57                     _strcpy:	
  6346                           
  6347                           ;incstack = 0
  6348                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  6349                           ;strcpy@to stored from wreg
  6350  1C57  00A2               	movwf	strcpy@to
  6351  1C58  00A3               	movwf	strcpy@cp
  6352  1C59                     l7418:	
  6353  1C59  0820               	movf	strcpy@from,w
  6354  1C5A  0084               	movwf	4
  6355  1C5B  160A  158A  200A  160A  158A  	fcall	stringdir
  6356  1C60  00A1               	movwf	??_strcpy
  6357  1C61  0823               	movf	strcpy@cp,w
  6358  1C62  0084               	movwf	4
  6359  1C63  0821               	movf	??_strcpy,w
  6360  1C64  1783               	bsf	3,7	;select IRP bank2
  6361  1C65  0080               	movwf	0
  6362  1C66  0800               	movf	0,w
  6363  1C67  1903               	btfsc	3,2
  6364  1C68  0008               	return
  6365  1C69  0AA3               	incf	strcpy@cp,f
  6366  1C6A  0AA0               	incf	strcpy@from,f
  6367  1C6B  2C59               	goto	l7418
  6368  1C6C                     __end_of_strcpy:	
  6369                           
  6370                           	psect	text18
  6371  1D39                     __ptext18:	
  6372 ;; *************** function _utoa *****************
  6373 ;; Defined at:
  6374 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  buf             1    wreg     PTR unsigned char 
  6377 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6378 ;;  val             2    7[BANK0 ] unsigned int 
  6379 ;;  base            2    9[BANK0 ] int 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  6382 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6383 ;;  v               2   11[BANK0 ] unsigned int 
  6384 ;;  c               1   13[BANK0 ] unsigned char 
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  1    wreg      PTR unsigned char 
  6387 ;; Registers used:
  6388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6389 ;; Tracked objects:
  6390 ;;		On entry : 300/0
  6391 ;;		On exit  : B00/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6394 ;;      Params:         0       4       0       0       0
  6395 ;;      Locals:         0       4       0       0       0
  6396 ;;      Temps:          0       0       0       0       0
  6397 ;;      Totals:         0       8       0       0       0
  6398 ;;Total ram usage:        8 bytes
  6399 ;; Hardware stack levels used:    1
  6400 ;; Hardware stack levels required when called:    2
  6401 ;; This function calls:
  6402 ;;		___lwdiv
  6403 ;;		___lwmod
  6404 ;; This function is called by:
  6405 ;;		_itoa
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           
  6410                           ;psect for function _utoa
  6411  1D39                     _utoa:	
  6412                           
  6413                           ;incstack = 0
  6414                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6415                           ;utoa@buf stored from wreg
  6416  1D39  00AE               	movwf	utoa@buf
  6417  1D3A  0828               	movf	utoa@val+1,w
  6418  1D3B  00AC               	movwf	utoa@v+1
  6419  1D3C  0827               	movf	utoa@val,w
  6420  1D3D  00AB               	movwf	utoa@v
  6421  1D3E                     l7070:	
  6422  1D3E  082A               	movf	utoa@base+1,w
  6423  1D3F  00A1               	movwf	___lwdiv@divisor+1
  6424  1D40  0829               	movf	utoa@base,w
  6425  1D41  00A0               	movwf	___lwdiv@divisor
  6426  1D42  082C               	movf	utoa@v+1,w
  6427  1D43  00A3               	movwf	___lwdiv@dividend+1
  6428  1D44  082B               	movf	utoa@v,w
  6429  1D45  00A2               	movwf	___lwdiv@dividend
  6430  1D46  160A  118A  2654  160A  158A  	fcall	___lwdiv
  6431  1D4B  0821               	movf	?___lwdiv+1,w
  6432  1D4C  00AC               	movwf	utoa@v+1
  6433  1D4D  0820               	movf	?___lwdiv,w
  6434  1D4E  00AB               	movwf	utoa@v
  6435  1D4F  0AAE               	incf	utoa@buf,f
  6436  1D50  042C               	iorwf	utoa@v+1,w
  6437  1D51  1D03               	btfss	3,2
  6438  1D52  2D3E               	goto	l7070
  6439  1D53  082E               	movf	utoa@buf,w
  6440  1D54  0084               	movwf	4
  6441  1D55  1383               	bcf	3,7	;select IRP bank0
  6442  1D56  0180               	clrf	0
  6443  1D57  03AE               	decf	utoa@buf,f
  6444  1D58                     l7080:	
  6445  1D58  082A               	movf	utoa@base+1,w
  6446  1D59  00A1               	movwf	___lwmod@divisor+1
  6447  1D5A  0829               	movf	utoa@base,w
  6448  1D5B  00A0               	movwf	___lwmod@divisor
  6449  1D5C  0828               	movf	utoa@val+1,w
  6450  1D5D  00A3               	movwf	___lwmod@dividend+1
  6451  1D5E  0827               	movf	utoa@val,w
  6452  1D5F  00A2               	movwf	___lwmod@dividend
  6453  1D60  2588               	fcall	___lwmod
  6454  1D61  0820               	movf	?___lwmod,w
  6455  1D62  00AD               	movwf	utoa@c
  6456  1D63  082A               	movf	utoa@base+1,w
  6457  1D64  00A1               	movwf	___lwdiv@divisor+1
  6458  1D65  0829               	movf	utoa@base,w
  6459  1D66  00A0               	movwf	___lwdiv@divisor
  6460  1D67  0828               	movf	utoa@val+1,w
  6461  1D68  00A3               	movwf	___lwdiv@dividend+1
  6462  1D69  0827               	movf	utoa@val,w
  6463  1D6A  00A2               	movwf	___lwdiv@dividend
  6464  1D6B  160A  118A  2654  160A  158A  	fcall	___lwdiv
  6465  1D70  0821               	movf	?___lwdiv+1,w
  6466  1D71  00A8               	movwf	utoa@val+1
  6467  1D72  0820               	movf	?___lwdiv,w
  6468  1D73  00A7               	movwf	utoa@val
  6469  1D74  300A               	movlw	10
  6470  1D75  022D               	subwf	utoa@c,w
  6471  1D76  1C03               	skipc
  6472  1D77  2D7A               	goto	l1451
  6473  1D78  3007               	movlw	7
  6474  1D79  07AD               	addwf	utoa@c,f
  6475  1D7A                     l1451:	
  6476  1D7A  3030               	movlw	48
  6477  1D7B  07AD               	addwf	utoa@c,f
  6478  1D7C  082E               	movf	utoa@buf,w
  6479  1D7D  0084               	movwf	4
  6480  1D7E  082D               	movf	utoa@c,w
  6481  1D7F  1383               	bcf	3,7	;select IRP bank0
  6482  1D80  0080               	movwf	0
  6483  1D81  03AE               	decf	utoa@buf,f
  6484  1D82  0827               	movf	utoa@val,w
  6485  1D83  0428               	iorwf	utoa@val+1,w
  6486  1D84  1D03               	btfss	3,2
  6487  1D85  2D58               	goto	l7080
  6488                           
  6489                           ;	Return value of _utoa is never used
  6490  1D86  0AAE               	incf	utoa@buf,f
  6491  1D87  0008               	return
  6492  1D88                     __end_of_utoa:	
  6493  1D88                     __ptext19:	
  6494 ;; *************** function ___lwmod *****************
  6495 ;; Defined at:
  6496 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  divisor         2    0[BANK0 ] unsigned int 
  6499 ;;  dividend        2    2[BANK0 ] unsigned int 
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;  counter         1    4[BANK0 ] unsigned char 
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  2    0[BANK0 ] unsigned int 
  6504 ;; Registers used:
  6505 ;;		wreg, status,2, status,0
  6506 ;; Tracked objects:
  6507 ;;		On entry : 300/0
  6508 ;;		On exit  : 300/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6511 ;;      Params:         0       4       0       0       0
  6512 ;;      Locals:         0       1       0       0       0
  6513 ;;      Temps:          0       0       0       0       0
  6514 ;;      Totals:         0       5       0       0       0
  6515 ;;Total ram usage:        5 bytes
  6516 ;; Hardware stack levels used:    1
  6517 ;; Hardware stack levels required when called:    1
  6518 ;; This function calls:
  6519 ;;		Nothing
  6520 ;; This function is called by:
  6521 ;;		_utoa
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           
  6526                           ;psect for function ___lwmod
  6527  1D88                     ___lwmod:	
  6528                           
  6529                           ;incstack = 0
  6530                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6531  1D88  0820               	movf	___lwmod@divisor,w
  6532  1D89  0421               	iorwf	___lwmod@divisor+1,w
  6533  1D8A  1903               	btfsc	3,2
  6534  1D8B  2DA7               	goto	l6570
  6535  1D8C  01A4               	clrf	___lwmod@counter
  6536  1D8D                     L12:	
  6537  1D8D  0AA4               	incf	___lwmod@counter,f
  6538  1D8E  1BA1               	btfsc	___lwmod@divisor+1,7
  6539  1D8F  2D94               	goto	l6562
  6540  1D90  1003               	clrc
  6541  1D91  0DA0               	rlf	___lwmod@divisor,f
  6542  1D92  0DA1               	rlf	___lwmod@divisor+1,f
  6543  1D93  2D8D               	goto	L12
  6544  1D94                     l6562:	
  6545  1D94  0821               	movf	___lwmod@divisor+1,w
  6546  1D95  0223               	subwf	___lwmod@dividend+1,w
  6547  1D96  1D03               	skipz
  6548  1D97  2D9A               	goto	u6165
  6549  1D98  0820               	movf	___lwmod@divisor,w
  6550  1D99  0222               	subwf	___lwmod@dividend,w
  6551  1D9A                     u6165:	
  6552  1D9A  1C03               	skipc
  6553  1D9B  2DA3               	goto	L13
  6554  1D9C  0820               	movf	___lwmod@divisor,w
  6555  1D9D  02A2               	subwf	___lwmod@dividend,f
  6556  1D9E  0821               	movf	___lwmod@divisor+1,w
  6557  1D9F  1C03               	skipc
  6558  1DA0  03A3               	decf	___lwmod@dividend+1,f
  6559  1DA1  02A3               	subwf	___lwmod@dividend+1,f
  6560  1DA2  1003               	clrc
  6561  1DA3                     L13:	
  6562  1DA3  0CA1               	rrf	___lwmod@divisor+1,f
  6563  1DA4  0CA0               	rrf	___lwmod@divisor,f
  6564  1DA5  0BA4               	decfsz	___lwmod@counter,f
  6565  1DA6  2D94               	goto	l6562
  6566  1DA7                     l6570:	
  6567  1DA7  0823               	movf	___lwmod@dividend+1,w
  6568  1DA8  00A1               	movwf	?___lwmod+1
  6569  1DA9  0822               	movf	___lwmod@dividend,w
  6570  1DAA  00A0               	movwf	?___lwmod
  6571  1DAB  0008               	return
  6572  1DAC                     __end_of___lwmod:	
  6573                           
  6574                           	psect	text22
  6575  1CEE                     __ptext22:	
  6576 ;; *************** function _USART_to_Protocol *****************
  6577 ;; Defined at:
  6578 ;;		line 77 in file "usart.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;  usart_protoc    1    wreg     PTR struct .
  6581 ;;		 -> usart_protocol(16), 
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  6584 ;;		 -> usart_protocol(16), 
  6585 ;;  i               2    2[BANK0 ] int 
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  1    wreg      void 
  6588 ;; Registers used:
  6589 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6590 ;; Tracked objects:
  6591 ;;		On entry : 300/300
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6595 ;;      Params:         0       0       0       0       0
  6596 ;;      Locals:         0       3       0       0       0
  6597 ;;      Temps:          0       2       0       0       0
  6598 ;;      Totals:         0       5       0       0       0
  6599 ;;Total ram usage:        5 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:    1
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		_Decodify_Command
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           
  6610                           ;psect for function _USART_to_Protocol
  6611  1CEE                     _USART_to_Protocol:	
  6612                           
  6613                           ;incstack = 0
  6614                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  6615                           ;USART_to_Protocol@usart_protocol stored from wreg
  6616  1CEE  1283               	bcf	3,5	;RP0=0, select bank0
  6617  1CEF  1303               	bcf	3,6	;RP1=0, select bank0
  6618  1CF0  00A4               	movwf	USART_to_Protocol@usart_protocol
  6619                           
  6620                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  6621  1CF1  0084               	movwf	4
  6622  1CF2  1703               	bsf	3,6	;RP1=1, select bank2
  6623  1CF3  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  6624  1CF4  1783               	bsf	3,7	;select IRP bank2
  6625  1CF5  0080               	movwf	0
  6626  1CF6  0A84               	incf	4,f
  6627  1CF7  0810               	movf	_usart_buffer^(0+256),w	;volatile
  6628  1CF8  0080               	movwf	0
  6629                           
  6630                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  6631  1CF9  1303               	bcf	3,6	;RP1=0, select bank0
  6632  1CFA  0824               	movf	USART_to_Protocol@usart_protocol,w
  6633  1CFB  3E02               	addlw	2
  6634  1CFC  0084               	movwf	4
  6635  1CFD  1703               	bsf	3,6	;RP1=1, select bank2
  6636  1CFE  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  6637  1CFF  0080               	movwf	0
  6638                           
  6639                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  6640  1D00  1303               	bcf	3,6	;RP1=0, select bank0
  6641  1D01  0824               	movf	USART_to_Protocol@usart_protocol,w
  6642  1D02  3E03               	addlw	3
  6643  1D03  0084               	movwf	4
  6644  1D04  1703               	bsf	3,6	;RP1=1, select bank2
  6645  1D05  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  6646  1D06  0080               	movwf	0
  6647                           
  6648                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  6649  1D07  1303               	bcf	3,6	;RP1=0, select bank0
  6650  1D08  0824               	movf	USART_to_Protocol@usart_protocol,w
  6651  1D09  3E04               	addlw	4
  6652  1D0A  0084               	movwf	4
  6653  1D0B  1703               	bsf	3,6	;RP1=1, select bank2
  6654  1D0C  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  6655  1D0D  0080               	movwf	0
  6656                           
  6657                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  6658  1D0E  1303               	bcf	3,6	;RP1=0, select bank0
  6659  1D0F  0824               	movf	USART_to_Protocol@usart_protocol,w
  6660  1D10  3E05               	addlw	5
  6661  1D11  0084               	movwf	4
  6662  1D12  1703               	bsf	3,6	;RP1=1, select bank2
  6663  1D13  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  6664  1D14  0080               	movwf	0
  6665                           
  6666                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  6667  1D15  1303               	bcf	3,6	;RP1=0, select bank0
  6668  1D16  01A2               	clrf	USART_to_Protocol@i
  6669  1D17  01A3               	clrf	USART_to_Protocol@i+1
  6670  1D18                     l7160:	
  6671  1D18  0824               	movf	USART_to_Protocol@usart_protocol,w
  6672  1D19  3E05               	addlw	5
  6673  1D1A  0084               	movwf	4
  6674  1D1B  0823               	movf	USART_to_Protocol@i+1,w
  6675  1D1C  3A80               	xorlw	128
  6676  1D1D  00A0               	movwf	??_USART_to_Protocol
  6677  1D1E  3080               	movlw	128
  6678  1D1F  0220               	subwf	??_USART_to_Protocol,w
  6679  1D20  1D03               	skipz
  6680  1D21  2D24               	goto	u6865
  6681  1D22  0800               	movf	0,w
  6682  1D23  0222               	subwf	USART_to_Protocol@i,w
  6683  1D24                     u6865:	
  6684  1D24  1803               	btfsc	3,0
  6685  1D25  0008               	return
  6686                           
  6687                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  6688  1D26  1283               	bcf	3,5	;RP0=0, select bank0
  6689  1D27  1303               	bcf	3,6	;RP1=0, select bank0
  6690  1D28  0822               	movf	USART_to_Protocol@i,w
  6691  1D29  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  6692  1D2A  0084               	movwf	4
  6693  1D2B  1783               	bsf	3,7	;select IRP bank2
  6694  1D2C  0800               	movf	0,w
  6695  1D2D  00A0               	movwf	??_USART_to_Protocol
  6696  1D2E  0822               	movf	USART_to_Protocol@i,w
  6697  1D2F  0724               	addwf	USART_to_Protocol@usart_protocol,w
  6698  1D30  00A1               	movwf	??_USART_to_Protocol+1
  6699  1D31  3E06               	addlw	6
  6700  1D32  0084               	movwf	4
  6701  1D33  0820               	movf	??_USART_to_Protocol,w
  6702  1D34  0080               	movwf	0
  6703  1D35  0AA2               	incf	USART_to_Protocol@i,f
  6704  1D36  1903               	skipnz
  6705  1D37  0AA3               	incf	USART_to_Protocol@i+1,f
  6706  1D38  2D18               	goto	l7160
  6707  1D39                     __end_of_USART_to_Protocol:	
  6708                           
  6709                           	psect	text23
  6710  1C6C                     __ptext23:	
  6711 ;; *************** function _USART_put_buffer *****************
  6712 ;; Defined at:
  6713 ;;		line 99 in file "usart.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  vetor           1    wreg     PTR unsigned char 
  6716 ;;		 -> buffer(32), 
  6717 ;;  size            2    1[BANK0 ] unsigned int 
  6718 ;; Auto vars:     Size  Location     Type
  6719 ;;  vetor           1    5[BANK0 ] PTR unsigned char 
  6720 ;;		 -> buffer(32), 
  6721 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  6722 ;;		 -> USART_put_buffer@vetor(1), 
  6723 ;;  loop            1    6[BANK0 ] unsigned char 
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  1    wreg      void 
  6726 ;; Registers used:
  6727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6728 ;; Tracked objects:
  6729 ;;		On entry : 300/0
  6730 ;;		On exit  : 300/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6733 ;;      Params:         0       2       0       0       0
  6734 ;;      Locals:         0       3       0       0       0
  6735 ;;      Temps:          0       2       0       0       0
  6736 ;;      Totals:         0       7       0       0       0
  6737 ;;Total ram usage:        7 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; Hardware stack levels required when called:    2
  6740 ;; This function calls:
  6741 ;;		_USART_putc
  6742 ;; This function is called by:
  6743 ;;		_Decodify_Command
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747                           
  6748                           ;psect for function _USART_put_buffer
  6749  1C6C                     _USART_put_buffer:	
  6750                           
  6751                           ;incstack = 0
  6752                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6753                           ;USART_put_buffer@vetor stored from wreg
  6754  1C6C  00A5               	movwf	USART_put_buffer@vetor
  6755  1C6D  3025               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  6756                           
  6757                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  6758  1C6E  01A6               	clrf	USART_put_buffer@loop
  6759                           
  6760                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  6761  1C6F  00A7               	movwf	USART_put_buffer@ptr
  6762  1C70                     l7214:	
  6763                           ;usart.c: 105:     while(loop<size)
  6764                           
  6765                           
  6766                           ;usart.c: 105:     while(loop<size)
  6767  1C70  0826               	movf	USART_put_buffer@loop,w
  6768  1C71  00A3               	movwf	??_USART_put_buffer
  6769  1C72  01A4               	clrf	??_USART_put_buffer+1
  6770  1C73  0822               	movf	USART_put_buffer@size+1,w
  6771  1C74  0224               	subwf	??_USART_put_buffer+1,w
  6772  1C75  1D03               	skipz
  6773  1C76  2C79               	goto	u6895
  6774  1C77  0821               	movf	USART_put_buffer@size,w
  6775  1C78  0223               	subwf	??_USART_put_buffer,w
  6776  1C79                     u6895:	
  6777  1C79  1803               	btfsc	3,0
  6778  1C7A  0008               	return
  6779                           
  6780                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  6781  1C7B  0827               	movf	USART_put_buffer@ptr,w
  6782  1C7C  0084               	movwf	4
  6783  1C7D  1383               	bcf	3,7	;select IRP bank0
  6784  1C7E  0800               	movf	0,w
  6785  1C7F  120A  158A  2587  160A  158A  	fcall	_USART_putc
  6786                           
  6787                           ;usart.c: 108:         ptr++;
  6788  1C84  1283               	bcf	3,5	;RP0=0, select bank0
  6789  1C85  0AA7               	incf	USART_put_buffer@ptr,f
  6790                           
  6791                           ;usart.c: 109:         loop++;
  6792  1C86  0AA6               	incf	USART_put_buffer@loop,f
  6793  1C87  2C70               	goto	l7214
  6794  1C88                     __end_of_USART_put_buffer:	
  6795                           
  6796                           	psect	text30
  6797  1C31                     __ptext30:	
  6798 ;; *************** function _PROCULUS_VP_Write_String *****************
  6799 ;; Defined at:
  6800 ;;		line 205 in file "proculus.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  vp              2   21[BANK0 ] unsigned int 
  6803 ;;  text            1   23[BANK0 ] PTR unsigned char 
  6804 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;		None
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  1    wreg      void 
  6809 ;; Registers used:
  6810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6811 ;; Tracked objects:
  6812 ;;		On entry : 300/0
  6813 ;;		On exit  : 300/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6816 ;;      Params:         0       3       0       0       0
  6817 ;;      Locals:         0       0       0       0       0
  6818 ;;      Temps:          0       0       0       0       0
  6819 ;;      Totals:         0       3       0       0       0
  6820 ;;Total ram usage:        3 bytes
  6821 ;; Hardware stack levels used:    1
  6822 ;; Hardware stack levels required when called:    4
  6823 ;; This function calls:
  6824 ;;		_PROCULUS_VP_Write
  6825 ;;		_strlen
  6826 ;; This function is called by:
  6827 ;;		_Decodify_Command
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           
  6832                           ;psect for function _PROCULUS_VP_Write_String
  6833  1C31                     _PROCULUS_VP_Write_String:	
  6834                           
  6835                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  6836                           
  6837                           ;incstack = 0
  6838                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6839  1C31  0836               	movf	PROCULUS_VP_Write_String@vp+1,w
  6840  1C32  00AE               	movwf	PROCULUS_VP_Write@vp+1
  6841  1C33  0835               	movf	PROCULUS_VP_Write_String@vp,w
  6842  1C34  00AD               	movwf	PROCULUS_VP_Write@vp
  6843  1C35  0837               	movf	PROCULUS_VP_Write_String@text,w
  6844  1C36  00AF               	movwf	PROCULUS_VP_Write@vetor
  6845  1C37  3001               	movlw	1
  6846  1C38  00B0               	movwf	PROCULUS_VP_Write@vetor+1
  6847  1C39  0837               	movf	PROCULUS_VP_Write_String@text,w
  6848  1C3A  120A  158A  25B2   	fcall	_strlen
  6849  1C3D  0820               	movf	?_strlen,w
  6850  1C3E  3E01               	addlw	1
  6851  1C3F  00B1               	movwf	PROCULUS_VP_Write@size
  6852  1C40  120A  158A  280F   	ljmp	l6856
  6853  1C43                     __end_of_PROCULUS_VP_Write_String:	
  6854                           
  6855                           	psect	text32
  6856  080F                     __ptext32:	
  6857 ;; *************** function _PROCULUS_VP_Write *****************
  6858 ;; Defined at:
  6859 ;;		line 40 in file "proculus.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  vp              2   13[BANK0 ] unsigned int 
  6862 ;;  vetor           2   15[BANK0 ] PTR unsigned char 
  6863 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  6864 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  6865 ;;  size            1   17[BANK0 ] unsigned char 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;  i               1   20[BANK0 ] unsigned char 
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  1    wreg      void 
  6870 ;; Registers used:
  6871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6872 ;; Tracked objects:
  6873 ;;		On entry : B00/800
  6874 ;;		On exit  : 300/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6877 ;;      Params:         0       5       0       0       0
  6878 ;;      Locals:         0       1       0       0       0
  6879 ;;      Temps:          0       2       0       0       0
  6880 ;;      Totals:         0       8       0       0       0
  6881 ;;Total ram usage:        8 bytes
  6882 ;; Hardware stack levels used:    1
  6883 ;; Hardware stack levels required when called:    3
  6884 ;; This function calls:
  6885 ;;		_PROCULUS_Delay
  6886 ;;		_USART_put_int
  6887 ;;		_USART_putc
  6888 ;; This function is called by:
  6889 ;;		_PROCULUS_VP_Write_String
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           
  6894                           ;psect for function _PROCULUS_VP_Write
  6895  080F                     _PROCULUS_VP_Write:	
  6896  080F                     l6856:	
  6897                           ;incstack = 0
  6898                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6899                           
  6900                           
  6901                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  6902  080F  30A5               	movlw	165
  6903  0810  00AA               	movwf	USART_put_int@value
  6904  0811  305A               	movlw	90
  6905  0812  00AB               	movwf	USART_put_int@value+1
  6906  0813  2704  120A  158A   	fcall	_USART_put_int
  6907                           
  6908                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  6909  0816  1283               	bcf	3,5	;RP0=0, select bank0
  6910  0817  0831               	movf	PROCULUS_VP_Write@size,w
  6911  0818  3E03               	addlw	3
  6912  0819  2587  120A  158A   	fcall	_USART_putc
  6913                           
  6914                           ;proculus.c: 43:      USART_putc(0x82);
  6915  081C  3082               	movlw	130
  6916  081D  2587  120A  158A   	fcall	_USART_putc
  6917                           
  6918                           ;proculus.c: 44:      USART_put_int(vp);
  6919  0820  1283               	bcf	3,5	;RP0=0, select bank0
  6920  0821  082E               	movf	PROCULUS_VP_Write@vp+1,w
  6921  0822  00AB               	movwf	USART_put_int@value+1
  6922  0823  082D               	movf	PROCULUS_VP_Write@vp,w
  6923  0824  00AA               	movwf	USART_put_int@value
  6924  0825  2704  120A  158A   	fcall	_USART_put_int
  6925                           
  6926                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  6927  0828  1283               	bcf	3,5	;RP0=0, select bank0
  6928  0829  01B4               	clrf	PROCULUS_VP_Write@i
  6929  082A                     l6868:	
  6930  082A  0831               	movf	PROCULUS_VP_Write@size,w
  6931  082B  0234               	subwf	PROCULUS_VP_Write@i,w
  6932  082C  1803               	btfsc	3,0
  6933  082D  2841               	goto	l6870
  6934                           
  6935                           ;proculus.c: 46:          USART_putc(vetor[i]);
  6936  082E  0834               	movf	PROCULUS_VP_Write@i,w
  6937  082F  072F               	addwf	PROCULUS_VP_Write@vetor,w
  6938  0830  00B2               	movwf	??_PROCULUS_VP_Write
  6939  0831  0830               	movf	PROCULUS_VP_Write@vetor+1,w
  6940  0832  1803               	skipnc
  6941  0833  3E01               	addlw	1
  6942  0834  00B3               	movwf	??_PROCULUS_VP_Write+1
  6943  0835  0832               	movf	??_PROCULUS_VP_Write,w
  6944  0836  0084               	movwf	4
  6945  0837  1783               	bsf	3,7
  6946  0838  1C33               	btfss	??_PROCULUS_VP_Write+1,0
  6947  0839  1383               	bcf	3,7
  6948  083A  0800               	movf	0,w
  6949  083B  2587  120A  158A   	fcall	_USART_putc
  6950  083E  1283               	bcf	3,5	;RP0=0, select bank0
  6951  083F  0AB4               	incf	PROCULUS_VP_Write@i,f
  6952  0840  282A               	goto	l6868
  6953  0841                     l6870:	
  6954                           
  6955                           ;proculus.c: 48:      PROCULUS_Delay(1);
  6956  0841  01A0               	clrf	PROCULUS_Delay@tempo_ms
  6957  0842  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  6958  0843  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  6959  0844  2FE6               	ljmp	l6500
  6960  0845                     __end_of_PROCULUS_VP_Write:	
  6961  0845                     __ptext14:	
  6962 ;; *************** function _Decodify_Command *****************
  6963 ;; Defined at:
  6964 ;;		line 305 in file "SlaveLiofilizadorVer1.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;		None
  6967 ;; Auto vars:     Size  Location     Type
  6968 ;;  ss             10   49[BANK1 ] unsigned char [10]
  6969 ;;  mm             10   39[BANK1 ] unsigned char [10]
  6970 ;;  hh             10   29[BANK1 ] unsigned char [10]
  6971 ;;  sizedata        1   69[BANK1 ] unsigned char 
  6972 ;;  add             1   61[BANK1 ] unsigned char 
  6973 ;;  add_24LCxxxx    4   70[BANK1 ] unsigned long 
  6974 ;;  OutPut          4   64[BANK1 ] float 
  6975 ;;  tempint         2   62[BANK1 ] int 
  6976 ;;  dados           2   59[BANK1 ] int 
  6977 ;;  tempchar        1   68[BANK1 ] unsigned char 
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  1    wreg      void 
  6980 ;; Registers used:
  6981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6982 ;; Tracked objects:
  6983 ;;		On entry : 300/300
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6987 ;;      Params:         0       0       0       0       0
  6988 ;;      Locals:         0       0      45       0       0
  6989 ;;      Temps:          0       2       0       0       0
  6990 ;;      Totals:         0       2      45       0       0
  6991 ;;Total ram usage:       47 bytes
  6992 ;; Hardware stack levels used:    1
  6993 ;; Hardware stack levels required when called:    6
  6994 ;; This function calls:
  6995 ;;		_EEPROM_24C1025_Fill_All
  6996 ;;		_EEPROM_24C1025_Read_Buffer
  6997 ;;		_EEPROM_24C1025_Read_Byte
  6998 ;;		_EEPROM_24C1025_Read_Int
  6999 ;;		_EEPROM_24C1025_Read_Str
  7000 ;;		_EEPROM_24C1025_Write_Buffer
  7001 ;;		_EEPROM_24C1025_Write_Byte
  7002 ;;		_EEPROM_24C1025_Write_Int
  7003 ;;		_EEPROM_24C1025_Write_Str
  7004 ;;		_EEPROM_Read_Byte
  7005 ;;		_EEPROM_Read_Integer
  7006 ;;		_EEPROM_Read_String
  7007 ;;		_EEPROM_Write_Byte
  7008 ;;		_EEPROM_Write_Integer
  7009 ;;		_EEPROM_Write_String
  7010 ;;		_Load_Work
  7011 ;;		_PROCULUS_Buzzer
  7012 ;;		_PROCULUS_Show_Screen
  7013 ;;		_PROCULUS_VP_Write_String
  7014 ;;		_Save_Log
  7015 ;;		_Send_Reply_OK
  7016 ;;		_Send_To_MB
  7017 ;;		_USART_put_buffer
  7018 ;;		_USART_put_int
  7019 ;;		_USART_put_string
  7020 ;;		_USART_putc
  7021 ;;		_USART_to_Protocol
  7022 ;;		___flmul
  7023 ;;		___fltol
  7024 ;;		_itoa
  7025 ;;		_strcat
  7026 ;;		_strcpy
  7027 ;;		_strlen
  7028 ;; This function is called by:
  7029 ;;		_main
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           
  7034                           ;psect for function _Decodify_Command
  7035  0845                     _Decodify_Command:	
  7036                           
  7037                           ;SlaveLiofilizadorVer1.c: 307:     int dados;;SlaveLiofilizadorVer1.c: 308:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 309:     int tempint;;SlaveLiofilizadorVer1.c: 310:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 311:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 323:     USART_to_Protocol(&usart_protocol);
  7038                           
  7039                           ;incstack = 0
  7040                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7041  0845  30CD               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  7042  0846  160A  158A  24EE  120A  158A  	fcall	_USART_to_Protocol
  7043                           
  7044                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  7045  084B  1683               	bsf	3,5	;RP0=1, select bank3
  7046  084C  1703               	bsf	3,6	;RP1=1, select bank3
  7047  084D  0854               	movf	(_usart_protocol^(0+384)+7),w
  7048  084E  1303               	bcf	3,6	;RP1=0, select bank1
  7049  084F  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  7050                           
  7051                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  7052  0850  1703               	bsf	3,6	;RP1=1, select bank3
  7053  0851  0855               	movf	(_usart_protocol^(0+384)+8),w
  7054  0852  1303               	bcf	3,6	;RP1=0, select bank1
  7055  0853  00E8               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  7056                           
  7057                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  7058  0854  1703               	bsf	3,6	;RP1=1, select bank3
  7059  0855  0856               	movf	(_usart_protocol^(0+384)+9),w
  7060  0856  1303               	bcf	3,6	;RP1=0, select bank1
  7061  0857  00E7               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  7062                           
  7063                           ;SlaveLiofilizadorVer1.c: 328:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  7064  0858  1703               	bsf	3,6	;RP1=1, select bank3
  7065  0859  0857               	movf	(_usart_protocol^(0+384)+10),w
  7066  085A  1303               	bcf	3,6	;RP1=0, select bank1
  7067  085B  00E6               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  7068                           
  7069                           ;SlaveLiofilizadorVer1.c: 335:     switch(usart_protocol.command){
  7070  085C  2B7D               	goto	l7964
  7071  085D                     l7754:	
  7072                           
  7073                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  7074  085D  300B               	movlw	11
  7075  085E  2530  120A  158A   	fcall	_Send_To_MB
  7076                           
  7077                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string("v1.0.5");
  7078  0861  302D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  7079  0862  1283               	bcf	3,5	;RP0=0, select bank0
  7080  0863  00A1               	movwf	USART_put_string@vetor
  7081  0864  3080               	movlw	128
  7082  0865  00A2               	movwf	USART_put_string@vetor+1
  7083  0866  2DC5               	ljmp	l6668
  7084  0867                     l7758:	
  7085                           ;SlaveLiofilizadorVer1.c: 346:              break;
  7086                           
  7087                           
  7088                           ;SlaveLiofilizadorVer1.c: 349:              if(usart_protocol.value[0]==0)
  7089  0867  1683               	bsf	3,5	;RP0=1, select bank3
  7090  0868  1703               	bsf	3,6	;RP1=1, select bank3
  7091  0869  0853               	movf	(_usart_protocol^(0+384)+6),w
  7092  086A  1D03               	btfss	3,2
  7093  086B  287A               	goto	l7762
  7094                           
  7095                           ;SlaveLiofilizadorVer1.c: 350:                 OutPut=Temperatura0;
  7096  086C  0817               	movf	(_Temperatura0+3)^(0+384),w
  7097  086D  1303               	bcf	3,6	;RP1=0, select bank1
  7098  086E  00E3               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  7099  086F  1703               	bsf	3,6	;RP1=1, select bank3
  7100  0870  0816               	movf	(_Temperatura0+2)^(0+384),w
  7101  0871  1303               	bcf	3,6	;RP1=0, select bank1
  7102  0872  00E2               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  7103  0873  1703               	bsf	3,6	;RP1=1, select bank3
  7104  0874  0815               	movf	(_Temperatura0+1)^(0+384),w
  7105  0875  1303               	bcf	3,6	;RP1=0, select bank1
  7106  0876  00E1               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  7107  0877  1703               	bsf	3,6	;RP1=1, select bank3
  7108  0878  0814               	movf	_Temperatura0^(0+384),w
  7109  0879  2887               	goto	L8
  7110  087A                     l7762:	
  7111                           
  7112                           ;SlaveLiofilizadorVer1.c: 352:                 OutPut=Temperatura1;
  7113  087A  0813               	movf	(_Temperatura1+3)^(0+384),w
  7114  087B  1303               	bcf	3,6	;RP1=0, select bank1
  7115  087C  00E3               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  7116  087D  1703               	bsf	3,6	;RP1=1, select bank3
  7117  087E  0812               	movf	(_Temperatura1+2)^(0+384),w
  7118  087F  1303               	bcf	3,6	;RP1=0, select bank1
  7119  0880  00E2               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  7120  0881  1703               	bsf	3,6	;RP1=1, select bank3
  7121  0882  0811               	movf	(_Temperatura1+1)^(0+384),w
  7122  0883  1303               	bcf	3,6	;RP1=0, select bank1
  7123  0884  00E1               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  7124  0885  1703               	bsf	3,6	;RP1=1, select bank3
  7125  0886  0810               	movf	_Temperatura1^(0+384),w
  7126  0887                     L8:	
  7127  0887  1303               	bcf	3,6	;RP1=0, select bank1
  7128  0888  00E0               	movwf	Decodify_Command@OutPut^(0+128)
  7129                           
  7130                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  7131  0889  3041               	movlw	65
  7132  088A  1283               	bcf	3,5	;RP0=0, select bank0
  7133  088B  00D8               	movwf	___flmul@b+3
  7134  088C  3020               	movlw	32
  7135  088D  00D7               	movwf	___flmul@b+2
  7136  088E  01D6               	clrf	___flmul@b+1
  7137  088F  01D5               	clrf	___flmul@b
  7138  0890  1683               	bsf	3,5	;RP0=1, select bank1
  7139  0891  0863               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  7140  0892  1283               	bcf	3,5	;RP0=0, select bank0
  7141  0893  00DC               	movwf	___flmul@a+3
  7142  0894  1683               	bsf	3,5	;RP0=1, select bank1
  7143  0895  0862               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  7144  0896  1283               	bcf	3,5	;RP0=0, select bank0
  7145  0897  00DB               	movwf	___flmul@a+2
  7146  0898  1683               	bsf	3,5	;RP0=1, select bank1
  7147  0899  0861               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  7148  089A  1283               	bcf	3,5	;RP0=0, select bank0
  7149  089B  00DA               	movwf	___flmul@a+1
  7150  089C  1683               	bsf	3,5	;RP0=1, select bank1
  7151  089D  0860               	movf	Decodify_Command@OutPut^(0+128),w
  7152  089E  1283               	bcf	3,5	;RP0=0, select bank0
  7153  089F  00D9               	movwf	___flmul@a
  7154  08A0  23DC  120A  158A   	fcall	___flmul
  7155  08A3  0858               	movf	?___flmul+3,w
  7156  08A4  1683               	bsf	3,5	;RP0=1, select bank1
  7157  08A5  00E3               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  7158  08A6  1283               	bcf	3,5	;RP0=0, select bank0
  7159  08A7  0857               	movf	?___flmul+2,w
  7160  08A8  1683               	bsf	3,5	;RP0=1, select bank1
  7161  08A9  00E2               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  7162  08AA  1283               	bcf	3,5	;RP0=0, select bank0
  7163  08AB  0856               	movf	?___flmul+1,w
  7164  08AC  1683               	bsf	3,5	;RP0=1, select bank1
  7165  08AD  00E1               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  7166  08AE  1283               	bcf	3,5	;RP0=0, select bank0
  7167  08AF  0855               	movf	?___flmul,w
  7168  08B0  1683               	bsf	3,5	;RP0=1, select bank1
  7169  08B1  00E0               	movwf	Decodify_Command@OutPut^(0+128)
  7170                           
  7171                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  7172  08B2  138B               	bcf	11,7	;volatile
  7173                           
  7174                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  7175  08B3  3002               	movlw	2
  7176  08B4  2530               	fcall	_Send_To_MB
  7177                           
  7178                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  7179  08B5  0863               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  7180  08B6  1283               	bcf	3,5	;RP0=0, select bank0
  7181  08B7  00A3               	movwf	___fltol@f1+3
  7182  08B8  1683               	bsf	3,5	;RP0=1, select bank1
  7183  08B9  0862               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  7184  08BA  1283               	bcf	3,5	;RP0=0, select bank0
  7185  08BB  00A2               	movwf	___fltol@f1+2
  7186  08BC  1683               	bsf	3,5	;RP0=1, select bank1
  7187  08BD  0861               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  7188  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  7189  08BF  00A1               	movwf	___fltol@f1+1
  7190  08C0  1683               	bsf	3,5	;RP0=1, select bank1
  7191  08C1  0860               	movf	Decodify_Command@OutPut^(0+128),w
  7192  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  7193  08C3  00A0               	movwf	___fltol@f1
  7194  08C4  120A  118A  2658  120A  158A  	fcall	___fltol
  7195  08C9  0821               	movf	?___fltol+1,w
  7196  08CA  00AB               	movwf	USART_put_int@value+1
  7197  08CB  0820               	movf	?___fltol,w
  7198  08CC  00AA               	movwf	USART_put_int@value
  7199  08CD  2704               	fcall	_USART_put_int
  7200                           
  7201                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  7202  08CE  178B               	bsf	11,7	;volatile
  7203                           
  7204                           ;SlaveLiofilizadorVer1.c: 375:              break;
  7205  08CF  0008               	return
  7206  08D0                     l7774:	
  7207                           
  7208                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  7209  08D0  1683               	bsf	3,5	;RP0=1, select bank3
  7210  08D1  1703               	bsf	3,6	;RP1=1, select bank3
  7211  08D2  0853               	movf	(_usart_protocol^(0+384)+6),w
  7212  08D3  1303               	bcf	3,6	;RP1=0, select bank1
  7213  08D4  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  7214                           
  7215                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  7216  08D5  1703               	bsf	3,6	;RP1=1, select bank3
  7217  08D6  0854               	movf	(_usart_protocol^(0+384)+7),w
  7218  08D7  1303               	bcf	3,6	;RP1=0, select bank1
  7219  08D8  00E8               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  7220                           
  7221                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  7222  08D9  1703               	bsf	3,6	;RP1=1, select bank3
  7223  08DA  0855               	movf	(_usart_protocol^(0+384)+8),w
  7224  08DB  1303               	bcf	3,6	;RP1=0, select bank1
  7225  08DC  00E7               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  7226                           
  7227                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  7228  08DD  1703               	bsf	3,6	;RP1=1, select bank3
  7229  08DE  0856               	movf	(_usart_protocol^(0+384)+9),w
  7230  08DF  1303               	bcf	3,6	;RP1=0, select bank1
  7231  08E0  00E6               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  7232                           
  7233                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  7234  08E1  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7235  08E2  1283               	bcf	3,5	;RP0=0, select bank0
  7236  08E3  00BC               	movwf	Save_Log@add_datalog+3
  7237  08E4  1683               	bsf	3,5	;RP0=1, select bank1
  7238  08E5  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7239  08E6  1283               	bcf	3,5	;RP0=0, select bank0
  7240  08E7  00BB               	movwf	Save_Log@add_datalog+2
  7241  08E8  1683               	bsf	3,5	;RP0=1, select bank1
  7242  08E9  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7243  08EA  1283               	bcf	3,5	;RP0=0, select bank0
  7244  08EB  00BA               	movwf	Save_Log@add_datalog+1
  7245  08EC  1683               	bsf	3,5	;RP0=1, select bank1
  7246  08ED  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7247  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  7248  08EF  00B9               	movwf	Save_Log@add_datalog
  7249  08F0  120A  118A  2604   	fcall	_Save_Log
  7250                           
  7251                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  7252  08F3  1683               	bsf	3,5	;RP0=1, select bank3
  7253  08F4  1703               	bsf	3,6	;RP1=1, select bank3
  7254  08F5  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  7255  08F6  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  7256                           
  7257                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  7258  08F7  01AA               	clrf	_milisegundo^(0+384)	;volatile
  7259  08F8  01AB               	clrf	(_milisegundo+1)^(0+384)	;volatile
  7260                           
  7261                           ;SlaveLiofilizadorVer1.c: 387:              break;
  7262  08F9  0008               	return
  7263  08FA                     l7782:	
  7264                           
  7265                           ;SlaveLiofilizadorVer1.c: 391:              if(usart_protocol.value[0]==0)
  7266  08FA  1683               	bsf	3,5	;RP0=1, select bank3
  7267  08FB  1703               	bsf	3,6	;RP1=1, select bank3
  7268  08FC  0853               	movf	(_usart_protocol^(0+384)+6),w
  7269  08FD  1D03               	btfss	3,2
  7270  08FE  2901               	goto	l307
  7271                           
  7272                           ;SlaveLiofilizadorVer1.c: 392:                 generic_status.flag_global_hot=0;
  7273  08FF  133C               	bcf	_generic_status^(0+384),6
  7274  0900  0008               	return
  7275  0901                     l307:	
  7276                           ;SlaveLiofilizadorVer1.c: 393:              else
  7277                           
  7278                           
  7279                           ;SlaveLiofilizadorVer1.c: 394:                 generic_status.flag_global_hot=1;
  7280  0901  173C               	bsf	_generic_status^(0+384),6
  7281  0902  0008               	return
  7282  0903                     l7786:	
  7283                           
  7284                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  7285  0903  3002               	movlw	2
  7286  0904  2530  120A  158A   	fcall	_Send_To_MB
  7287                           
  7288                           ;SlaveLiofilizadorVer1.c: 409:              USART_put_int(3);
  7289  0907  3003               	movlw	3
  7290  0908  1283               	bcf	3,5	;RP0=0, select bank0
  7291  0909  00AA               	movwf	USART_put_int@value
  7292  090A  01AB               	clrf	USART_put_int@value+1
  7293  090B  2F04               	ljmp	l6398
  7294  090C                     l7790:	
  7295                           ;SlaveLiofilizadorVer1.c: 411:              break;
  7296                           
  7297                           
  7298                           ;SlaveLiofilizadorVer1.c: 420:              Send_To_MB(3);
  7299  090C  3003               	movlw	3
  7300  090D  2530  120A  158A   	fcall	_Send_To_MB
  7301                           
  7302                           ;SlaveLiofilizadorVer1.c: 421:              Send_Reply_OK();
  7303  0910  2713  120A  158A   	fcall	_Send_Reply_OK
  7304                           
  7305                           ;SlaveLiofilizadorVer1.c: 422:              Load_Work();
  7306  0913  2DF0               	ljmp	l7118
  7307  0914                     l7796:	
  7308                           ;SlaveLiofilizadorVer1.c: 423:              break;
  7309                           
  7310                           
  7311                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  7312  0914  1683               	bsf	3,5	;RP0=1, select bank3
  7313  0915  1703               	bsf	3,6	;RP1=1, select bank3
  7314  0916  0854               	movf	(_usart_protocol^(0+384)+7),w
  7315  0917  1283               	bcf	3,5	;RP0=0, select bank0
  7316  0918  1303               	bcf	3,6	;RP1=0, select bank0
  7317  0919  00A0               	movwf	EEPROM_Write_Byte@dado
  7318  091A  1683               	bsf	3,5	;RP0=1, select bank3
  7319  091B  1703               	bsf	3,6	;RP1=1, select bank3
  7320  091C  0853               	movf	(_usart_protocol^(0+384)+6),w
  7321  091D  160A  158A  265C  120A  158A  	fcall	_EEPROM_Write_Byte
  7322  0922                     L9:	
  7323                           
  7324                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  7325  0922  3003               	movlw	3
  7326  0923  2530  120A  158A   	fcall	_Send_To_MB
  7327                           
  7328                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  7329  0926  2F13               	ljmp	l7166
  7330  0927                     l7800:	
  7331                           ;SlaveLiofilizadorVer1.c: 432:              break;
  7332                           
  7333                           
  7334                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  7335  0927  1683               	bsf	3,5	;RP0=1, select bank3
  7336  0928  1703               	bsf	3,6	;RP1=1, select bank3
  7337  0929  0853               	movf	(_usart_protocol^(0+384)+6),w
  7338  092A  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  7339  092D  1683               	bsf	3,5	;RP0=1, select bank1
  7340  092E  1303               	bcf	3,6	;RP1=0, select bank1
  7341  092F  00E4               	movwf	Decodify_Command@tempchar^(0+128)
  7342                           
  7343                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  7344  0930  3001               	movlw	1
  7345  0931  2530  120A  158A   	fcall	_Send_To_MB
  7346                           
  7347                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  7348  0934  0864               	movf	Decodify_Command@tempchar^(0+128),w
  7349  0935  2D87               	ljmp	_USART_putc
  7350  0936                     l7806:	
  7351                           ;SlaveLiofilizadorVer1.c: 437:              break;
  7352                           
  7353                           
  7354                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  7355  0936  1683               	bsf	3,5	;RP0=1, select bank3
  7356  0937  1703               	bsf	3,6	;RP1=1, select bank3
  7357  0938  0853               	movf	(_usart_protocol^(0+384)+6),w
  7358  0939  1303               	bcf	3,6	;RP1=0, select bank1
  7359  093A  00DD               	movwf	Decodify_Command@add^(0+128)
  7360                           
  7361                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  7362  093B  1703               	bsf	3,6	;RP1=1, select bank3
  7363  093C  0854               	movf	(_usart_protocol^(0+384)+7),w
  7364  093D  1303               	bcf	3,6	;RP1=0, select bank1
  7365  093E  00DC               	movwf	(Decodify_Command@dados+1)^(0+128)
  7366  093F  1703               	bsf	3,6	;RP1=1, select bank3
  7367  0940  0855               	movf	(_usart_protocol^(0+384)+8),w
  7368  0941  1303               	bcf	3,6	;RP1=0, select bank1
  7369  0942  00DB               	movwf	Decodify_Command@dados^(0+128)
  7370                           
  7371                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  7372  0943  085C               	movf	(Decodify_Command@dados+1)^(0+128),w
  7373  0944  1283               	bcf	3,5	;RP0=0, select bank0
  7374  0945  00A6               	movwf	EEPROM_Write_Integer@dado+1
  7375  0946  1683               	bsf	3,5	;RP0=1, select bank1
  7376  0947  085B               	movf	Decodify_Command@dados^(0+128),w
  7377  0948  1283               	bcf	3,5	;RP0=0, select bank0
  7378  0949  00A5               	movwf	EEPROM_Write_Integer@dado
  7379  094A  1683               	bsf	3,5	;RP0=1, select bank1
  7380  094B  085D               	movf	Decodify_Command@add^(0+128),w
  7381  094C  160A  158A  2621  120A  158A  	fcall	_EEPROM_Write_Integer
  7382  0951  2922               	goto	L9
  7383  0952                     l7814:	
  7384                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  7385                           
  7386                           
  7387                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  7388  0952  1683               	bsf	3,5	;RP0=1, select bank3
  7389  0953  1703               	bsf	3,6	;RP1=1, select bank3
  7390  0954  0853               	movf	(_usart_protocol^(0+384)+6),w
  7391  0955  26E9  120A  158A   	fcall	_EEPROM_Read_Integer
  7392  0958  0824               	movf	?_EEPROM_Read_Integer+1,w
  7393  0959  1683               	bsf	3,5	;RP0=1, select bank1
  7394  095A  00DF               	movwf	(Decodify_Command@tempint+1)^(0+128)
  7395  095B  1283               	bcf	3,5	;RP0=0, select bank0
  7396  095C  0823               	movf	?_EEPROM_Read_Integer,w
  7397  095D                     L10:	
  7398  095D  1683               	bsf	3,5	;RP0=1, select bank1
  7399  095E  00DE               	movwf	Decodify_Command@tempint^(0+128)
  7400                           
  7401                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  7402  095F  3002               	movlw	2
  7403  0960  2530  120A  158A   	fcall	_Send_To_MB
  7404                           
  7405                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  7406  0963  085F               	movf	(Decodify_Command@tempint+1)^(0+128),w
  7407  0964  1283               	bcf	3,5	;RP0=0, select bank0
  7408  0965  00AB               	movwf	USART_put_int@value+1
  7409  0966  1683               	bsf	3,5	;RP0=1, select bank1
  7410  0967  085E               	movf	Decodify_Command@tempint^(0+128),w
  7411  0968  1283               	bcf	3,5	;RP0=0, select bank0
  7412  0969  00AA               	movwf	USART_put_int@value
  7413  096A  2F04               	ljmp	l6398
  7414  096B                     l7820:	
  7415                           ;SlaveLiofilizadorVer1.c: 452:              break;
  7416                           
  7417                           
  7418                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  7419  096B  30D4               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  7420  096C  00A5               	movwf	EEPROM_Write_String@dado
  7421  096D  1683               	bsf	3,5	;RP0=1, select bank3
  7422  096E  1703               	bsf	3,6	;RP1=1, select bank3
  7423  096F  0853               	movf	(_usart_protocol^(0+384)+6),w
  7424  0970  160A  158A  2644  120A  158A  	fcall	_EEPROM_Write_String
  7425  0975  2922               	goto	L9
  7426  0976                     l7826:	
  7427                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  7428                           
  7429                           
  7430                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 463:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  7431  0976  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7432  0977  00A3               	movwf	EEPROM_Read_String@dado
  7433  0978  1683               	bsf	3,5	;RP0=1, select bank3
  7434  0979  1703               	bsf	3,6	;RP1=1, select bank3
  7435  097A  0853               	movf	(_usart_protocol^(0+384)+6),w
  7436  097B  120A  118A  27E6  120A  158A  	fcall	_EEPROM_Read_String
  7437                           
  7438                           ;SlaveLiofilizadorVer1.c: 464:              Send_To_MB(sizeof(texto));
  7439  0980  3010               	movlw	16
  7440  0981                     L11:	
  7441  0981  2530  120A  158A   	fcall	_Send_To_MB
  7442                           
  7443                           ;SlaveLiofilizadorVer1.c: 465:              USART_put_string(texto);
  7444  0984  2796  120A  158A   	fcall	PL70	;call to abstracted procedure
  7445  0987  2DC5               	ljmp	l6668
  7446  0988                     l7832:	
  7447                           ;SlaveLiofilizadorVer1.c: 466:              break;
  7448                           
  7449                           
  7450                           ;SlaveLiofilizadorVer1.c: 471:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  7451  0988  1683               	bsf	3,5	;RP0=1, select bank1
  7452  0989  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7453  098A  1283               	bcf	3,5	;RP0=0, select bank0
  7454  098B  00B2               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  7455  098C  1683               	bsf	3,5	;RP0=1, select bank1
  7456  098D  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7457  098E  1283               	bcf	3,5	;RP0=0, select bank0
  7458  098F  00B1               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  7459  0990  1683               	bsf	3,5	;RP0=1, select bank1
  7460  0991  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7461  0992  1283               	bcf	3,5	;RP0=0, select bank0
  7462  0993  00B0               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  7463  0994  1683               	bsf	3,5	;RP0=1, select bank1
  7464  0995  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7465  0996  1283               	bcf	3,5	;RP0=0, select bank0
  7466  0997  00AF               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  7467  0998  1683               	bsf	3,5	;RP0=1, select bank3
  7468  0999  1703               	bsf	3,6	;RP1=1, select bank3
  7469  099A  0858               	movf	(_usart_protocol^(0+384)+11),w
  7470  099B  1283               	bcf	3,5	;RP0=0, select bank0
  7471  099C  1303               	bcf	3,6	;RP1=0, select bank0
  7472  099D  00B3               	movwf	EEPROM_24C1025_Write_Byte@data
  7473  099E  1683               	bsf	3,5	;RP0=1, select bank3
  7474  099F  1703               	bsf	3,6	;RP1=1, select bank3
  7475  09A0  0853               	movf	(_usart_protocol^(0+384)+6),w
  7476  09A1  160A  158A  2443  120A  158A  	fcall	_EEPROM_24C1025_Write_Byte
  7477  09A6  2922               	goto	L9
  7478  09A7                     l7838:	
  7479                           ;SlaveLiofilizadorVer1.c: 474:              Send_To_MB(3);
  7480                           
  7481                           
  7482                           ;SlaveLiofilizadorVer1.c: 478:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  7483  09A7  1683               	bsf	3,5	;RP0=1, select bank1
  7484  09A8  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7485  09A9  1283               	bcf	3,5	;RP0=0, select bank0
  7486  09AA  00B4               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  7487  09AB  1683               	bsf	3,5	;RP0=1, select bank1
  7488  09AC  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7489  09AD  1283               	bcf	3,5	;RP0=0, select bank0
  7490  09AE  00B3               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  7491  09AF  1683               	bsf	3,5	;RP0=1, select bank1
  7492  09B0  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7493  09B1  1283               	bcf	3,5	;RP0=0, select bank0
  7494  09B2  00B2               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  7495  09B3  1683               	bsf	3,5	;RP0=1, select bank1
  7496  09B4  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7497  09B5  1283               	bcf	3,5	;RP0=0, select bank0
  7498  09B6  00B1               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  7499  09B7  1683               	bsf	3,5	;RP0=1, select bank3
  7500  09B8  1703               	bsf	3,6	;RP1=1, select bank3
  7501  09B9  0853               	movf	(_usart_protocol^(0+384)+6),w
  7502  09BA  120A  118A  2036  120A  158A  	fcall	_EEPROM_24C1025_Read_Byte
  7503  09BF  1683               	bsf	3,5	;RP0=1, select bank1
  7504  09C0  00E4               	movwf	Decodify_Command@tempchar^(0+128)
  7505                           
  7506                           ;SlaveLiofilizadorVer1.c: 482:              Send_To_MB(1);
  7507  09C1  3001               	movlw	1
  7508  09C2  2530  120A  158A   	fcall	_Send_To_MB
  7509                           
  7510                           ;SlaveLiofilizadorVer1.c: 483:              USART_putc(tempchar);
  7511  09C5  0864               	movf	Decodify_Command@tempchar^(0+128),w
  7512  09C6  2D87               	ljmp	_USART_putc
  7513  09C7                     l7844:	
  7514                           ;SlaveLiofilizadorVer1.c: 484:              break;
  7515                           
  7516                           
  7517                           ;SlaveLiofilizadorVer1.c: 486:              {;SlaveLiofilizadorVer1.c: 487:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  7518  09C7  1683               	bsf	3,5	;RP0=1, select bank1
  7519  09C8  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7520  09C9  1283               	bcf	3,5	;RP0=0, select bank0
  7521  09CA  00B3               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7522  09CB  1683               	bsf	3,5	;RP0=1, select bank1
  7523  09CC  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7524  09CD  1283               	bcf	3,5	;RP0=0, select bank0
  7525  09CE  00B2               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7526  09CF  1683               	bsf	3,5	;RP0=1, select bank1
  7527  09D0  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7528  09D1  1283               	bcf	3,5	;RP0=0, select bank0
  7529  09D2  00B1               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7530  09D3  1683               	bsf	3,5	;RP0=1, select bank1
  7531  09D4  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7532  09D5  1283               	bcf	3,5	;RP0=0, select bank0
  7533  09D6  00B0               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7534  09D7  1683               	bsf	3,5	;RP0=1, select bank3
  7535  09D8  1703               	bsf	3,6	;RP1=1, select bank3
  7536  09D9  0858               	movf	(_usart_protocol^(0+384)+11),w
  7537  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  7538  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  7539  09DC  00B5               	movwf	EEPROM_24C1025_Write_Int@data+1
  7540  09DD  1683               	bsf	3,5	;RP0=1, select bank3
  7541  09DE  1703               	bsf	3,6	;RP1=1, select bank3
  7542  09DF  0859               	movf	(_usart_protocol^(0+384)+12),w
  7543  09E0  1283               	bcf	3,5	;RP0=0, select bank0
  7544  09E1  1303               	bcf	3,6	;RP1=0, select bank0
  7545  09E2  00B4               	movwf	EEPROM_24C1025_Write_Int@data
  7546  09E3  1683               	bsf	3,5	;RP0=1, select bank3
  7547  09E4  1703               	bsf	3,6	;RP1=1, select bank3
  7548  09E5  0853               	movf	(_usart_protocol^(0+384)+6),w
  7549  09E6  120A  118A  26A7  120A  158A  	fcall	_EEPROM_24C1025_Write_Int
  7550  09EB  2922               	goto	L9
  7551  09EC                     l7850:	
  7552                           ;SlaveLiofilizadorVer1.c: 492:              Send_To_MB(3);
  7553                           
  7554                           
  7555                           ;SlaveLiofilizadorVer1.c: 497:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  7556  09EC  1683               	bsf	3,5	;RP0=1, select bank1
  7557  09ED  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7558  09EE  1283               	bcf	3,5	;RP0=0, select bank0
  7559  09EF  00B4               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  7560  09F0  1683               	bsf	3,5	;RP0=1, select bank1
  7561  09F1  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7562  09F2  1283               	bcf	3,5	;RP0=0, select bank0
  7563  09F3  00B3               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  7564  09F4  1683               	bsf	3,5	;RP0=1, select bank1
  7565  09F5  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7566  09F6  1283               	bcf	3,5	;RP0=0, select bank0
  7567  09F7  00B2               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  7568  09F8  1683               	bsf	3,5	;RP0=1, select bank1
  7569  09F9  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7570  09FA  1283               	bcf	3,5	;RP0=0, select bank0
  7571  09FB  00B1               	movwf	EEPROM_24C1025_Read_Int@mem_add
  7572  09FC  1683               	bsf	3,5	;RP0=1, select bank3
  7573  09FD  1703               	bsf	3,6	;RP1=1, select bank3
  7574  09FE  0853               	movf	(_usart_protocol^(0+384)+6),w
  7575  09FF  120A  118A  204C  120A  158A  	fcall	_EEPROM_24C1025_Read_Int
  7576  0A04  0832               	movf	?_EEPROM_24C1025_Read_Int+1,w
  7577  0A05  1683               	bsf	3,5	;RP0=1, select bank1
  7578  0A06  00DF               	movwf	(Decodify_Command@tempint+1)^(0+128)
  7579  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  7580  0A08  0831               	movf	?_EEPROM_24C1025_Read_Int,w
  7581  0A09  295D               	goto	L10
  7582  0A0A                     l7856:	
  7583                           ;SlaveLiofilizadorVer1.c: 499:              Send_To_MB(2);
  7584                           
  7585                           
  7586                           ;SlaveLiofilizadorVer1.c: 505:              {;SlaveLiofilizadorVer1.c: 506:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 507:              sizedata=usart_protocol.value
      +                          [5];
  7587  0A0A  1683               	bsf	3,5	;RP0=1, select bank3
  7588  0A0B  1703               	bsf	3,6	;RP1=1, select bank3
  7589  0A0C  0858               	movf	(_usart_protocol^(0+384)+11),w
  7590  0A0D  1303               	bcf	3,6	;RP1=0, select bank1
  7591  0A0E  00E5               	movwf	Decodify_Command@sizedata^(0+128)
  7592                           
  7593                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  7594  0A0F  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7595  0A10  1283               	bcf	3,5	;RP0=0, select bank0
  7596  0A11  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  7597  0A12  1683               	bsf	3,5	;RP0=1, select bank1
  7598  0A13  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7599  0A14  1283               	bcf	3,5	;RP0=0, select bank0
  7600  0A15  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  7601  0A16  1683               	bsf	3,5	;RP0=1, select bank1
  7602  0A17  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7603  0A18  1283               	bcf	3,5	;RP0=0, select bank0
  7604  0A19  00A5               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  7605  0A1A  1683               	bsf	3,5	;RP0=1, select bank1
  7606  0A1B  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7607  0A1C  1283               	bcf	3,5	;RP0=0, select bank0
  7608  0A1D  00A4               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  7609  0A1E  1683               	bsf	3,5	;RP0=1, select bank1
  7610  0A1F  0865               	movf	Decodify_Command@sizedata^(0+128),w
  7611  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  7612  0A21  00A8               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  7613  0A22  303A               	movlw	(low (_buffer| (0+256)))& (0+255)
  7614  0A23  00A9               	movwf	EEPROM_24C1025_Read_Buffer@data
  7615  0A24  3001               	movlw	1
  7616  0A25  00AA               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  7617  0A26  1683               	bsf	3,5	;RP0=1, select bank3
  7618  0A27  1703               	bsf	3,6	;RP1=1, select bank3
  7619  0A28  0853               	movf	(_usart_protocol^(0+384)+6),w
  7620  0A29  120A  118A  21E7  120A  158A  	fcall	_EEPROM_24C1025_Read_Buffer
  7621                           
  7622                           ;SlaveLiofilizadorVer1.c: 515:              Send_To_MB(sizedata);
  7623  0A2E  1683               	bsf	3,5	;RP0=1, select bank1
  7624  0A2F  1303               	bcf	3,6	;RP1=0, select bank1
  7625  0A30  0865               	movf	Decodify_Command@sizedata^(0+128),w
  7626  0A31  2530               	fcall	_Send_To_MB
  7627                           
  7628                           ;SlaveLiofilizadorVer1.c: 516:              USART_put_buffer(buffer,sizedata);
  7629  0A32  0865               	movf	Decodify_Command@sizedata^(0+128),w
  7630  0A33  1283               	bcf	3,5	;RP0=0, select bank0
  7631  0A34  00A1               	movwf	USART_put_buffer@size
  7632  0A35  303A               	movlw	(low (_buffer| (0+256)))& (0+255)
  7633  0A36  01A2               	clrf	USART_put_buffer@size+1
  7634  0A37  160A  158A  2C6C   	ljmp	_USART_put_buffer
  7635  0A3A                     l7864:	
  7636                           ;SlaveLiofilizadorVer1.c: 517:              };SlaveLiofilizadorVer1.c: 518:             
      +                           break;
  7637                           
  7638                           
  7639                           ;SlaveLiofilizadorVer1.c: 521:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  7640  0A3A  1683               	bsf	3,5	;RP0=1, select bank1
  7641  0A3B  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7642  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  7643  0A3D  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  7644  0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  7645  0A3F  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7646  0A40  1283               	bcf	3,5	;RP0=0, select bank0
  7647  0A41  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  7648  0A42  1683               	bsf	3,5	;RP0=1, select bank1
  7649  0A43  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7650  0A44  1283               	bcf	3,5	;RP0=0, select bank0
  7651  0A45  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  7652  0A46  1683               	bsf	3,5	;RP0=1, select bank1
  7653  0A47  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7654  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  7655  0A49  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  7656  0A4A  1683               	bsf	3,5	;RP0=1, select bank3
  7657  0A4B  1703               	bsf	3,6	;RP1=1, select bank3
  7658  0A4C  0858               	movf	(_usart_protocol^(0+384)+11),w
  7659  0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  7660  0A4E  1303               	bcf	3,6	;RP1=0, select bank0
  7661  0A4F  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  7662  0A50  30D9               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  7663  0A51  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
  7664  0A52  3001               	movlw	1
  7665  0A53  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  7666  0A54  1683               	bsf	3,5	;RP0=1, select bank3
  7667  0A55  1703               	bsf	3,6	;RP1=1, select bank3
  7668  0A56  0853               	movf	(_usart_protocol^(0+384)+6),w
  7669  0A57  120A  118A  22CA  120A  158A  	fcall	_EEPROM_24C1025_Write_Buffer
  7670  0A5C  2922               	goto	L9
  7671  0A5D                     l7870:	
  7672                           ;SlaveLiofilizadorVer1.c: 526:              Send_To_MB(3);
  7673                           
  7674                           
  7675                           ;SlaveLiofilizadorVer1.c: 531:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  7676  0A5D  1683               	bsf	3,5	;RP0=1, select bank1
  7677  0A5E  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7678  0A5F  1283               	bcf	3,5	;RP0=0, select bank0
  7679  0A60  00A5               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  7680  0A61  1683               	bsf	3,5	;RP0=1, select bank1
  7681  0A62  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7682  0A63  1283               	bcf	3,5	;RP0=0, select bank0
  7683  0A64  00A4               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  7684  0A65  1683               	bsf	3,5	;RP0=1, select bank1
  7685  0A66  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7686  0A67  1283               	bcf	3,5	;RP0=0, select bank0
  7687  0A68  00A3               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  7688  0A69  1683               	bsf	3,5	;RP0=1, select bank1
  7689  0A6A  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7690  0A6B  1283               	bcf	3,5	;RP0=0, select bank0
  7691  0A6C  00A2               	movwf	EEPROM_24C1025_Write_Str@mem_add
  7692  0A6D  30D8               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  7693  0A6E  00A6               	movwf	EEPROM_24C1025_Write_Str@data
  7694  0A6F  1683               	bsf	3,5	;RP0=1, select bank3
  7695  0A70  1703               	bsf	3,6	;RP1=1, select bank3
  7696  0A71  0853               	movf	(_usart_protocol^(0+384)+6),w
  7697  0A72  120A  118A  2065  120A  158A  	fcall	_EEPROM_24C1025_Write_Str
  7698  0A77  2922               	goto	L9
  7699  0A78                     l7876:	
  7700                           ;SlaveLiofilizadorVer1.c: 534:              Send_To_MB(3);
  7701                           
  7702                           
  7703                           ;SlaveLiofilizadorVer1.c: 538:              {;SlaveLiofilizadorVer1.c: 539:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  7704  0A78  1683               	bsf	3,5	;RP0=1, select bank1
  7705  0A79  0869               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7706  0A7A  1283               	bcf	3,5	;RP0=0, select bank0
  7707  0A7B  00A7               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  7708  0A7C  1683               	bsf	3,5	;RP0=1, select bank1
  7709  0A7D  0868               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7710  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  7711  0A7F  00A6               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  7712  0A80  1683               	bsf	3,5	;RP0=1, select bank1
  7713  0A81  0867               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7714  0A82  1283               	bcf	3,5	;RP0=0, select bank0
  7715  0A83  00A5               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  7716  0A84  1683               	bsf	3,5	;RP0=1, select bank1
  7717  0A85  0866               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7718  0A86  1283               	bcf	3,5	;RP0=0, select bank0
  7719  0A87  00A4               	movwf	EEPROM_24C1025_Read_Str@mem_add
  7720  0A88  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7721  0A89  00A8               	movwf	EEPROM_24C1025_Read_Str@texto
  7722  0A8A  1683               	bsf	3,5	;RP0=1, select bank3
  7723  0A8B  1703               	bsf	3,6	;RP1=1, select bank3
  7724  0A8C  0853               	movf	(_usart_protocol^(0+384)+6),w
  7725  0A8D  120A  118A  2102  120A  158A  	fcall	_EEPROM_24C1025_Read_Str
  7726                           
  7727                           ;SlaveLiofilizadorVer1.c: 543:              Send_To_MB(strlen(texto));
  7728  0A92  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7729  0A93  25B2  120A  158A   	fcall	_strlen
  7730  0A96  0820               	movf	?_strlen,w
  7731  0A97  2981               	goto	L11
  7732  0A98                     l7880:	
  7733                           
  7734                           ;SlaveLiofilizadorVer1.c: 549:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  7735  0A98  1683               	bsf	3,5	;RP0=1, select bank3
  7736  0A99  1703               	bsf	3,6	;RP1=1, select bank3
  7737  0A9A  0854               	movf	(_usart_protocol^(0+384)+7),w
  7738  0A9B  1283               	bcf	3,5	;RP0=0, select bank0
  7739  0A9C  1303               	bcf	3,6	;RP1=0, select bank0
  7740  0A9D  00B9               	movwf	EEPROM_24C1025_Fill_All@value
  7741  0A9E  01BA               	clrf	EEPROM_24C1025_Fill_All@value+1
  7742  0A9F  1683               	bsf	3,5	;RP0=1, select bank3
  7743  0AA0  1703               	bsf	3,6	;RP1=1, select bank3
  7744  0AA1  0853               	movf	(_usart_protocol^(0+384)+6),w
  7745  0AA2  120A  118A  25D2  120A  158A  	fcall	_EEPROM_24C1025_Fill_All
  7746  0AA7  2922               	goto	L9
  7747  0AA8                     l7886:	
  7748                           ;SlaveLiofilizadorVer1.c: 551:              Send_To_MB(3);
  7749                           
  7750                           
  7751                           ;SlaveLiofilizadorVer1.c: 556:              {;SlaveLiofilizadorVer1.c: 557:             
      +                           char hh[10];;SlaveLiofilizadorVer1.c: 558:              char mm[10];;SlaveLiofilizadorV
      +                          er1.c: 559:              char ss[10];;SlaveLiofilizadorVer1.c: 561:              itoa(hh
      +                          ,hora,10);
  7752  0AA8  0875               	movf	_hora,w	;volatile
  7753  0AA9  00AF               	movwf	itoa@val
  7754  0AAA  300A               	movlw	10
  7755  0AAB  01B0               	clrf	itoa@val+1
  7756  0AAC  00B1               	movwf	itoa@base
  7757  0AAD  30BD               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7758  0AAE  01B2               	clrf	itoa@base+1
  7759  0AAF  2598  120A  158A   	fcall	_itoa
  7760                           
  7761                           ;SlaveLiofilizadorVer1.c: 562:              itoa(mm,minuto,10);
  7762  0AB2  1683               	bsf	3,5	;RP0=1, select bank3
  7763  0AB3  1703               	bsf	3,6	;RP1=1, select bank3
  7764  0AB4  083B               	movf	_minuto^(0+384),w	;volatile
  7765  0AB5  1283               	bcf	3,5	;RP0=0, select bank0
  7766  0AB6  1303               	bcf	3,6	;RP1=0, select bank0
  7767  0AB7  00AF               	movwf	itoa@val
  7768  0AB8  300A               	movlw	10
  7769  0AB9  01B0               	clrf	itoa@val+1
  7770  0ABA  00B1               	movwf	itoa@base
  7771  0ABB  30C7               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7772  0ABC  01B2               	clrf	itoa@base+1
  7773  0ABD  2598  120A  158A   	fcall	_itoa
  7774                           
  7775                           ;SlaveLiofilizadorVer1.c: 563:              itoa(ss,segundo,10);
  7776  0AC0  0876               	movf	_segundo,w	;volatile
  7777  0AC1  00AF               	movwf	itoa@val
  7778  0AC2  300A               	movlw	10
  7779  0AC3  01B0               	clrf	itoa@val+1
  7780  0AC4  00B1               	movwf	itoa@base
  7781  0AC5  30D1               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7782  0AC6  01B2               	clrf	itoa@base+1
  7783  0AC7  2598               	fcall	_itoa
  7784                           
  7785                           ;SlaveLiofilizadorVer1.c: 566:              strcpy(texto,"");
  7786  0AC8  3038               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  7787  0AC9  00A0               	movwf	strcpy@from
  7788  0ACA  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7789  0ACB  160A  158A  2457  120A  158A  	fcall	_strcpy
  7790                           
  7791                           ;SlaveLiofilizadorVer1.c: 567:              if (hh[1]==0)
  7792  0AD0  1683               	bsf	3,5	;RP0=1, select bank1
  7793  0AD1  083E               	movf	(Decodify_Command@hh^(0+128)+1),w
  7794  0AD2  1D03               	btfss	3,2
  7795  0AD3  2ADC               	goto	l7894
  7796                           
  7797                           ;SlaveLiofilizadorVer1.c: 568:                 {;SlaveLiofilizadorVer1.c: 569:          
      +                                 strcat(texto,"0");
  7798  0AD4  2784  120A  158A   	fcall	PL46	;call to abstracted procedure
  7799  0AD7  2567  120A  158A   	fcall	_strcat
  7800                           
  7801                           ;SlaveLiofilizadorVer1.c: 570:                 hh[2]=0;
  7802  0ADA  1683               	bsf	3,5	;RP0=1, select bank1
  7803  0ADB  01BF               	clrf	(Decodify_Command@hh^(0+128)+2)
  7804  0ADC                     l7894:	
  7805                           
  7806                           ;SlaveLiofilizadorVer1.c: 572:              strcat(texto,hh);
  7807  0ADC  30BD               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7808  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  7809  0ADE  00A0               	movwf	strcat@from
  7810  0ADF  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7811  0AE0  01A1               	clrf	strcat@from+1
  7812  0AE1  2567  120A  158A   	fcall	_strcat
  7813                           
  7814                           ;SlaveLiofilizadorVer1.c: 573:              strcat(texto,":");
  7815  0AE4  2791  120A  158A   	fcall	PL66	;call to abstracted procedure
  7816  0AE7  2567  120A  158A   	fcall	_strcat
  7817                           
  7818                           ;SlaveLiofilizadorVer1.c: 574:              if(mm[1]==0)
  7819  0AEA  1683               	bsf	3,5	;RP0=1, select bank1
  7820  0AEB  0848               	movf	(Decodify_Command@mm^(0+128)+1),w
  7821  0AEC  1D03               	btfss	3,2
  7822  0AED  2AF6               	goto	l7904
  7823                           
  7824                           ;SlaveLiofilizadorVer1.c: 575:                 {;SlaveLiofilizadorVer1.c: 576:          
      +                                 strcat(texto,"0");
  7825  0AEE  2784  120A  158A   	fcall	PL46	;call to abstracted procedure
  7826  0AF1  2567  120A  158A   	fcall	_strcat
  7827                           
  7828                           ;SlaveLiofilizadorVer1.c: 577:                 mm[2]=0;
  7829  0AF4  1683               	bsf	3,5	;RP0=1, select bank1
  7830  0AF5  01C9               	clrf	(Decodify_Command@mm^(0+128)+2)
  7831  0AF6                     l7904:	
  7832                           
  7833                           ;SlaveLiofilizadorVer1.c: 579:              strcat(texto,mm);
  7834  0AF6  30C7               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7835  0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  7836  0AF8  00A0               	movwf	strcat@from
  7837  0AF9  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7838  0AFA  01A1               	clrf	strcat@from+1
  7839  0AFB  2567  120A  158A   	fcall	_strcat
  7840                           
  7841                           ;SlaveLiofilizadorVer1.c: 580:              strcat(texto,":");
  7842  0AFE  2791  120A  158A   	fcall	PL66	;call to abstracted procedure
  7843  0B01  2567  120A  158A   	fcall	_strcat
  7844                           
  7845                           ;SlaveLiofilizadorVer1.c: 581:              if(ss[1]==0)
  7846  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  7847  0B05  0852               	movf	(Decodify_Command@ss^(0+128)+1),w
  7848  0B06  1D03               	btfss	3,2
  7849  0B07  2B10               	goto	l7914
  7850                           
  7851                           ;SlaveLiofilizadorVer1.c: 582:                 {;SlaveLiofilizadorVer1.c: 583:          
      +                                 strcat(texto,"0");
  7852  0B08  2784  120A  158A   	fcall	PL46	;call to abstracted procedure
  7853  0B0B  2567  120A  158A   	fcall	_strcat
  7854                           
  7855                           ;SlaveLiofilizadorVer1.c: 584:                 ss[2]=0;
  7856  0B0E  1683               	bsf	3,5	;RP0=1, select bank1
  7857  0B0F  01D3               	clrf	(Decodify_Command@ss^(0+128)+2)
  7858  0B10                     l7914:	
  7859                           
  7860                           ;SlaveLiofilizadorVer1.c: 586:              strcat(texto,ss);
  7861  0B10  30D1               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7862  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  7863  0B12  00A0               	movwf	strcat@from
  7864  0B13  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7865  0B14  01A1               	clrf	strcat@from+1
  7866  0B15  2567  120A  158A   	fcall	_strcat
  7867                           
  7868                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(strlen(texto));
  7869  0B18  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  7870  0B19  25B2  120A  158A   	fcall	_strlen
  7871  0B1C  0820               	movf	?_strlen,w
  7872  0B1D  2530  120A  158A   	fcall	_Send_To_MB
  7873                           
  7874                           ;SlaveLiofilizadorVer1.c: 588:              USART_put_string(texto);
  7875  0B20  2796  120A  158A   	fcall	PL70	;call to abstracted procedure
  7876  0B23  25C5  120A  158A   	fcall	_USART_put_string
  7877                           
  7878                           ;SlaveLiofilizadorVer1.c: 589:              USART_putc(0);
  7879  0B26  3000               	movlw	0
  7880  0B27  2D87               	ljmp	_USART_putc
  7881  0B28                     l7922:	
  7882                           ;SlaveLiofilizadorVer1.c: 590:              };SlaveLiofilizadorVer1.c: 591:             
      +                           break;
  7883                           
  7884                           
  7885                           ;SlaveLiofilizadorVer1.c: 594:              hora=usart_protocol.value[0];
  7886  0B28  1683               	bsf	3,5	;RP0=1, select bank3
  7887  0B29  1703               	bsf	3,6	;RP1=1, select bank3
  7888  0B2A  0853               	movf	(_usart_protocol^(0+384)+6),w
  7889  0B2B  00F5               	movwf	_hora	;volatile
  7890                           
  7891                           ;SlaveLiofilizadorVer1.c: 595:              minuto=usart_protocol.value[1];
  7892  0B2C  0854               	movf	(_usart_protocol^(0+384)+7),w
  7893  0B2D  00BB               	movwf	_minuto^(0+384)	;volatile
  7894                           
  7895                           ;SlaveLiofilizadorVer1.c: 596:              segundo=usart_protocol.value[2];
  7896  0B2E  0855               	movf	(_usart_protocol^(0+384)+8),w
  7897  0B2F  00F6               	movwf	_segundo	;volatile
  7898  0B30  2922               	goto	L9
  7899  0B31                     l7928:	
  7900                           ;SlaveLiofilizadorVer1.c: 597:              Send_To_MB(3);
  7901                           
  7902                           
  7903                           ;SlaveLiofilizadorVer1.c: 602:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7904  0B31  1683               	bsf	3,5	;RP0=1, select bank3
  7905  0B32  1703               	bsf	3,6	;RP1=1, select bank3
  7906  0B33  0853               	movf	(_usart_protocol^(0+384)+6),w
  7907  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  7908  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  7909  0B36  00B1               	movwf	PROCULUS_Show_Screen@screen
  7910  0B37  01B2               	clrf	PROCULUS_Show_Screen@screen+1
  7911  0B38  279C  120A  158A   	fcall	_PROCULUS_Show_Screen
  7912  0B3B  2922               	goto	L9
  7913  0B3C                     l7934:	
  7914                           ;SlaveLiofilizadorVer1.c: 603:              Send_To_MB(3);
  7915                           
  7916                           
  7917                           ;SlaveLiofilizadorVer1.c: 608:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7918  0B3C  1683               	bsf	3,5	;RP0=1, select bank3
  7919  0B3D  1703               	bsf	3,6	;RP1=1, select bank3
  7920  0B3E  0853               	movf	(_usart_protocol^(0+384)+6),w
  7921  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  7922  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  7923  0B41  00B2               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  7924  0B42  1683               	bsf	3,5	;RP0=1, select bank3
  7925  0B43  1703               	bsf	3,6	;RP1=1, select bank3
  7926  0B44  0854               	movf	(_usart_protocol^(0+384)+7),w
  7927  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  7928  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  7929  0B47  00B1               	movwf	PROCULUS_Buzzer@time_ms_x_10
  7930  0B48  27A6  120A  158A   	fcall	_PROCULUS_Buzzer
  7931  0B4B  2922               	goto	L9
  7932  0B4C                     l7940:	
  7933                           ;SlaveLiofilizadorVer1.c: 610:              Send_To_MB(3);
  7934                           
  7935                           
  7936                           ;SlaveLiofilizadorVer1.c: 614:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  7937  0B4C  1683               	bsf	3,5	;RP0=1, select bank3
  7938  0B4D  1703               	bsf	3,6	;RP1=1, select bank3
  7939  0B4E  0853               	movf	(_usart_protocol^(0+384)+6),w
  7940  0B4F  1283               	bcf	3,5	;RP0=0, select bank0
  7941  0B50  1303               	bcf	3,6	;RP1=0, select bank0
  7942  0B51  00B6               	movwf	PROCULUS_VP_Write_String@vp+1
  7943  0B52  1683               	bsf	3,5	;RP0=1, select bank3
  7944  0B53  1703               	bsf	3,6	;RP1=1, select bank3
  7945  0B54  0854               	movf	(_usart_protocol^(0+384)+7),w
  7946  0B55  1283               	bcf	3,5	;RP0=0, select bank0
  7947  0B56  1303               	bcf	3,6	;RP1=0, select bank0
  7948  0B57  00B5               	movwf	PROCULUS_VP_Write_String@vp
  7949  0B58  30D5               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  7950  0B59  00B7               	movwf	PROCULUS_VP_Write_String@text
  7951  0B5A  160A  158A  2431  120A  158A  	fcall	_PROCULUS_VP_Write_String
  7952  0B5F  2922               	goto	L9
  7953  0B60                     l7946:	
  7954                           ;SlaveLiofilizadorVer1.c: 617:              Send_To_MB(3);
  7955                           
  7956                           
  7957                           ;SlaveLiofilizadorVer1.c: 623:              if(usart_protocol.value[0]==0)
  7958  0B60  1683               	bsf	3,5	;RP0=1, select bank3
  7959  0B61  1703               	bsf	3,6	;RP1=1, select bank3
  7960  0B62  0853               	movf	(_usart_protocol^(0+384)+6),w
  7961  0B63  1D03               	btfss	3,2
  7962  0B64  2B70               	goto	l7952
  7963                           
  7964                           ;SlaveLiofilizadorVer1.c: 624:                 {;SlaveLiofilizadorVer1.c: 625:          
      +                                 if(!usart_protocol.value[1])
  7965  0B65  0854               	movf	(_usart_protocol^(0+384)+7),w
  7966  0B66  1D03               	btfss	3,2
  7967  0B67  2B6C               	goto	l336
  7968                           
  7969                           ;SlaveLiofilizadorVer1.c: 626:                    PORTCbits.RC0=0;
  7970  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  7971  0B69  1303               	bcf	3,6	;RP1=0, select bank0
  7972  0B6A  1007               	bcf	7,0	;volatile
  7973  0B6B  2922               	goto	L9
  7974  0B6C                     l336:	
  7975                           ;SlaveLiofilizadorVer1.c: 627:                 else
  7976                           
  7977                           
  7978                           ;SlaveLiofilizadorVer1.c: 628:                    PORTCbits.RC0=1;
  7979  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  7980  0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  7981  0B6E  1407               	bsf	7,0	;volatile
  7982  0B6F  2922               	goto	L9
  7983  0B70                     l7952:	
  7984  0B70  0B53               	decfsz	(_usart_protocol^(0+384)+6),w
  7985  0B71  2922               	goto	L9
  7986                           
  7987                           ;SlaveLiofilizadorVer1.c: 631:                      {;SlaveLiofilizadorVer1.c: 632:     
      +                                            if(!usart_protocol.value[1])
  7988  0B72  0854               	movf	(_usart_protocol^(0+384)+7),w
  7989  0B73  1D03               	btfss	3,2
  7990  0B74  2B79               	goto	l340
  7991                           
  7992                           ;SlaveLiofilizadorVer1.c: 633:                          PORTCbits.RC1=0;
  7993  0B75  1283               	bcf	3,5	;RP0=0, select bank0
  7994  0B76  1303               	bcf	3,6	;RP1=0, select bank0
  7995  0B77  1087               	bcf	7,1	;volatile
  7996  0B78  2922               	goto	L9
  7997  0B79                     l340:	
  7998                           ;SlaveLiofilizadorVer1.c: 634:                       else
  7999                           
  8000                           
  8001                           ;SlaveLiofilizadorVer1.c: 635:                          PORTCbits.RC1=1;
  8002  0B79  1283               	bcf	3,5	;RP0=0, select bank0
  8003  0B7A  1303               	bcf	3,6	;RP1=0, select bank0
  8004  0B7B  1487               	bsf	7,1	;volatile
  8005  0B7C  2922               	goto	L9
  8006  0B7D                     l7964:	
  8007                           ;SlaveLiofilizadorVer1.c: 637:              Send_To_MB(3);
  8008                           
  8009  0B7D  1703               	bsf	3,6	;RP1=1, select bank3
  8010  0B7E  0851               	movf	(_usart_protocol^(0+384)+4),w
  8011  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  8012  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  8013  0B81  00EE               	movwf	??_Decodify_Command
  8014  0B82  01EF               	clrf	??_Decodify_Command+1
  8015                           
  8016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8017                           ; Switch size 1, requested type "space"
  8018                           ; Number of cases is 1, Range of values is 0 to 0
  8019                           ; switch strategies available:
  8020                           ; Name         Instructions Cycles
  8021                           ; simple_byte            4     3 (average)
  8022                           ; direct_byte           11     8 (fixed)
  8023                           ; jumptable            260     6 (fixed)
  8024                           ;	Chosen strategy is simple_byte
  8025  0B83  086F               	movf	??_Decodify_Command+1,w
  8026  0B84  3A00               	xorlw	0	; case 0
  8027  0B85  1903               	skipnz
  8028  0B86  2B88               	goto	l8128
  8029  0B87  2BDB               	goto	l342
  8030  0B88                     l8128:	
  8031                           
  8032                           ; Switch size 1, requested type "space"
  8033                           ; Number of cases is 27, Range of values is 1 to 43
  8034                           ; switch strategies available:
  8035                           ; Name         Instructions Cycles
  8036                           ; simple_byte           82    42 (average)
  8037                           ; direct_byte          140    11 (fixed)
  8038                           ; jumptable            263     9 (fixed)
  8039                           ;	Chosen strategy is simple_byte
  8040  0B88  086E               	movf	??_Decodify_Command,w
  8041  0B89  3A01               	xorlw	1	; case 1
  8042  0B8A  1903               	skipnz
  8043  0B8B  290C               	goto	l7790
  8044  0B8C  3A03               	xorlw	3	; case 2
  8045  0B8D  1903               	skipnz
  8046  0B8E  28D0               	goto	l7774
  8047  0B8F  3A01               	xorlw	1	; case 3
  8048  0B90  1903               	skipnz
  8049  0B91  2903               	goto	l7786
  8050  0B92  3A0B               	xorlw	11	; case 8
  8051  0B93  1903               	skipnz
  8052  0B94  2914               	goto	l7796
  8053  0B95  3A01               	xorlw	1	; case 9
  8054  0B96  1903               	skipnz
  8055  0B97  2927               	goto	l7800
  8056  0B98  3A03               	xorlw	3	; case 10
  8057  0B99  1903               	skipnz
  8058  0B9A  2936               	goto	l7806
  8059  0B9B  3A01               	xorlw	1	; case 11
  8060  0B9C  1903               	skipnz
  8061  0B9D  2952               	goto	l7814
  8062  0B9E  3A07               	xorlw	7	; case 12
  8063  0B9F  1903               	skipnz
  8064  0BA0  296B               	goto	l7820
  8065  0BA1  3A01               	xorlw	1	; case 13
  8066  0BA2  1903               	skipnz
  8067  0BA3  2976               	goto	l7826
  8068  0BA4  3A1C               	xorlw	28	; case 17
  8069  0BA5  1903               	skipnz
  8070  0BA6  2988               	goto	l7832
  8071  0BA7  3A03               	xorlw	3	; case 18
  8072  0BA8  1903               	skipnz
  8073  0BA9  29A7               	goto	l7838
  8074  0BAA  3A01               	xorlw	1	; case 19
  8075  0BAB  1903               	skipnz
  8076  0BAC  29C7               	goto	l7844
  8077  0BAD  3A07               	xorlw	7	; case 20
  8078  0BAE  1903               	skipnz
  8079  0BAF  29EC               	goto	l7850
  8080  0BB0  3A01               	xorlw	1	; case 21
  8081  0BB1  1903               	skipnz
  8082  0BB2  2A5D               	goto	l7870
  8083  0BB3  3A03               	xorlw	3	; case 22
  8084  0BB4  1903               	skipnz
  8085  0BB5  2A78               	goto	l7876
  8086  0BB6  3A01               	xorlw	1	; case 23
  8087  0BB7  1903               	skipnz
  8088  0BB8  2A3A               	goto	l7864
  8089  0BB9  3A0F               	xorlw	15	; case 24
  8090  0BBA  1903               	skipnz
  8091  0BBB  2A0A               	goto	l7856
  8092  0BBC  3A01               	xorlw	1	; case 25
  8093  0BBD  1903               	skipnz
  8094  0BBE  2A98               	goto	l7880
  8095  0BBF  3A03               	xorlw	3	; case 26
  8096  0BC0  1903               	skipnz
  8097  0BC1  2867               	goto	l7758
  8098  0BC2  3A04               	xorlw	4	; case 30
  8099  0BC3  1903               	skipnz
  8100  0BC4  2B28               	goto	l7922
  8101  0BC5  3A01               	xorlw	1	; case 31
  8102  0BC6  1903               	skipnz
  8103  0BC7  2AA8               	goto	l7886
  8104  0BC8  3A3F               	xorlw	63	; case 32
  8105  0BC9  1903               	skipnz
  8106  0BCA  2B31               	goto	l7928
  8107  0BCB  3A01               	xorlw	1	; case 33
  8108  0BCC  1903               	skipnz
  8109  0BCD  2B3C               	goto	l7934
  8110  0BCE  3A05               	xorlw	5	; case 36
  8111  0BCF  1903               	skipnz
  8112  0BD0  2B4C               	goto	l7940
  8113  0BD1  3A02               	xorlw	2	; case 38
  8114  0BD2  1903               	skipnz
  8115  0BD3  2B60               	goto	l7946
  8116  0BD4  3A0C               	xorlw	12	; case 42
  8117  0BD5  1903               	skipnz
  8118  0BD6  28FA               	goto	l7782
  8119  0BD7  3A01               	xorlw	1	; case 43
  8120  0BD8  1903               	skipnz
  8121  0BD9  285D               	goto	l7754
  8122  0BDA  2BDB               	goto	l342
  8123  0BDB                     l342:	
  8124  0BDB  0008               	return
  8125  0BDC                     __end_of_Decodify_Command:	
  8126  0BDC                     __ptext20:	
  8127 ;; *************** function ___flmul *****************
  8128 ;; Defined at:
  8129 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;  b               4   53[BANK0 ] unsigned int 
  8132 ;;  a               4   57[BANK0 ] unsigned int 
  8133 ;; Auto vars:     Size  Location     Type
  8134 ;;  prod            4   72[BANK0 ] struct .
  8135 ;;  grs             4   68[BANK0 ] unsigned long 
  8136 ;;  temp            2   76[BANK0 ] struct .
  8137 ;;  bexp            1   67[BANK0 ] unsigned char 
  8138 ;;  aexp            1   66[BANK0 ] unsigned char 
  8139 ;;  sign            1   65[BANK0 ] unsigned char 
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  4   53[BANK0 ] unsigned char 
  8142 ;; Registers used:
  8143 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8144 ;; Tracked objects:
  8145 ;;		On entry : 300/0
  8146 ;;		On exit  : 300/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8149 ;;      Params:         0       8       0       0       0
  8150 ;;      Locals:         0      13       0       0       0
  8151 ;;      Temps:          0       4       0       0       0
  8152 ;;      Totals:         0      25       0       0       0
  8153 ;;Total ram usage:       25 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; Hardware stack levels required when called:    2
  8156 ;; This function calls:
  8157 ;;		__Umul8_16
  8158 ;; This function is called by:
  8159 ;;		_Decodify_Command
  8160 ;;		_ADC_Read_NTC
  8161 ;;		_log
  8162 ;;		_eval_poly
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           
  8167                           ;psect for function ___flmul
  8168  0BDC                     ___flmul:	
  8169                           
  8170                           ;incstack = 0
  8171                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8172  0BDC  0858               	movf	___flmul@b+3,w
  8173  0BDD  00E1               	movwf	___flmul@sign
  8174  0BDE  3080               	movlw	128
  8175  0BDF  05E1               	andwf	___flmul@sign,f
  8176  0BE0  1003               	clrc
  8177  0BE1  0D58               	rlf	___flmul@b+3,w
  8178  0BE2  00E3               	movwf	___flmul@bexp
  8179  0BE3  1BD7               	btfsc	___flmul@b+2,7
  8180  0BE4  1463               	bsf	___flmul@bexp,0
  8181  0BE5  0863               	movf	___flmul@bexp,w
  8182  0BE6  1903               	btfsc	3,2
  8183  0BE7  2BF0               	goto	l1376
  8184  0BE8  0F63               	incfsz	___flmul@bexp,w
  8185  0BE9  2BEE               	goto	l1377
  8186  0BEA  01D5               	clrf	___flmul@b
  8187  0BEB  01D6               	clrf	___flmul@b+1
  8188  0BEC  01D7               	clrf	___flmul@b+2
  8189  0BED  01D8               	clrf	___flmul@b+3
  8190  0BEE                     l1377:	
  8191  0BEE  17D7               	bsf	___flmul@b+2,7
  8192  0BEF  2BF4               	goto	l6270
  8193  0BF0                     l1376:	
  8194  0BF0  01D5               	clrf	___flmul@b
  8195  0BF1  01D6               	clrf	___flmul@b+1
  8196  0BF2  01D7               	clrf	___flmul@b+2
  8197  0BF3  01D8               	clrf	___flmul@b+3
  8198  0BF4                     l6270:	
  8199  0BF4  085C               	movf	___flmul@a+3,w
  8200  0BF5  3980               	andlw	128
  8201  0BF6  06E1               	xorwf	___flmul@sign,f
  8202  0BF7  1003               	clrc
  8203  0BF8  0D5C               	rlf	___flmul@a+3,w
  8204  0BF9  00E2               	movwf	___flmul@aexp
  8205  0BFA  1BDB               	btfsc	___flmul@a+2,7
  8206  0BFB  1462               	bsf	___flmul@aexp,0
  8207  0BFC  0862               	movf	___flmul@aexp,w
  8208  0BFD  1903               	btfsc	3,2
  8209  0BFE  2C07               	goto	l1380
  8210  0BFF  0F62               	incfsz	___flmul@aexp,w
  8211  0C00  2C05               	goto	l1381
  8212  0C01  01D9               	clrf	___flmul@a
  8213  0C02  01DA               	clrf	___flmul@a+1
  8214  0C03  01DB               	clrf	___flmul@a+2
  8215  0C04  01DC               	clrf	___flmul@a+3
  8216  0C05                     l1381:	
  8217  0C05  17DB               	bsf	___flmul@a+2,7
  8218  0C06  2C0B               	goto	l6282
  8219  0C07                     l1380:	
  8220  0C07  01D9               	clrf	___flmul@a
  8221  0C08  01DA               	clrf	___flmul@a+1
  8222  0C09  01DB               	clrf	___flmul@a+2
  8223  0C0A  01DC               	clrf	___flmul@a+3
  8224  0C0B                     l6282:	
  8225  0C0B  0862               	movf	___flmul@aexp,w
  8226  0C0C  1D03               	btfss	3,2
  8227  0C0D  0863               	movf	___flmul@bexp,w
  8228  0C0E  1D03               	btfss	3,2
  8229  0C0F  2C15               	goto	l6286
  8230  0C10  01D5               	clrf	?___flmul
  8231  0C11  01D6               	clrf	?___flmul+1
  8232  0C12  01D7               	clrf	?___flmul+2
  8233  0C13  01D8               	clrf	?___flmul+3
  8234  0C14  0008               	return
  8235  0C15                     l6286:	
  8236  0C15  0855               	movf	___flmul@b,w
  8237  0C16  00A0               	movwf	__Umul8_16@multiplicand
  8238  0C17  085B               	movf	___flmul@a+2,w
  8239  0C18  254C  120A  158A   	fcall	__Umul8_16
  8240  0C1B  0821               	movf	?__Umul8_16+1,w
  8241  0C1C  00ED               	movwf	___flmul@temp+1
  8242  0C1D  0820               	movf	?__Umul8_16,w
  8243  0C1E  00EC               	movwf	___flmul@temp
  8244  0C1F  00E4               	movwf	___flmul@grs
  8245  0C20  01E5               	clrf	___flmul@grs+1
  8246  0C21  01E6               	clrf	___flmul@grs+2
  8247  0C22  01E7               	clrf	___flmul@grs+3
  8248  0C23  086D               	movf	___flmul@temp+1,w
  8249  0C24  00E8               	movwf	___flmul@prod
  8250  0C25  01E9               	clrf	___flmul@prod+1
  8251  0C26  01EA               	clrf	___flmul@prod+2
  8252  0C27  01EB               	clrf	___flmul@prod+3
  8253  0C28  0856               	movf	___flmul@b+1,w
  8254  0C29  00A0               	movwf	__Umul8_16@multiplicand
  8255  0C2A  085A               	movf	___flmul@a+1,w
  8256  0C2B  254C  120A  158A   	fcall	__Umul8_16
  8257  0C2E  2767  120A  158A   	fcall	PL16	;call to abstracted procedure
  8258  0C31  1803               	skipnc
  8259  0C32  07E9               	addwf	___flmul@prod+1,f
  8260  0C33  1803               	skipnc
  8261  0C34  07EA               	addwf	___flmul@prod+2,f
  8262  0C35  1803               	skipnc
  8263  0C36  07EB               	addwf	___flmul@prod+3,f
  8264  0C37  0857               	movf	___flmul@b+2,w
  8265  0C38  00A0               	movwf	__Umul8_16@multiplicand
  8266  0C39  0859               	movf	___flmul@a,w
  8267  0C3A  254C  120A  158A   	fcall	__Umul8_16
  8268  0C3D  2767  120A  158A   	fcall	PL16	;call to abstracted procedure
  8269  0C40  2776  120A  158A   	fcall	PL22	;call to abstracted procedure
  8270  0C43  0856               	movf	___flmul@b+1,w
  8271  0C44  00A0               	movwf	__Umul8_16@multiplicand
  8272  0C45  0859               	movf	___flmul@a,w
  8273  0C46  254C  120A  158A   	fcall	__Umul8_16
  8274  0C49  271A  120A  158A   	fcall	PL6	;call to abstracted procedure
  8275  0C4C  1803               	skipnc
  8276  0C4D  3E01               	addlw	1
  8277  0C4E  1D03               	btfss	3,2
  8278  0C4F  07E7               	addwf	___flmul@grs+3,f
  8279  0C50  0855               	movf	___flmul@b,w
  8280  0C51  00A0               	movwf	__Umul8_16@multiplicand
  8281  0C52  085A               	movf	___flmul@a+1,w
  8282  0C53  254C  120A  158A   	fcall	__Umul8_16
  8283  0C56  271A  120A  158A   	fcall	PL6	;call to abstracted procedure
  8284  0C59  1803               	skipnc
  8285  0C5A  3E01               	addlw	1
  8286  0C5B  1D03               	btfss	3,2
  8287  0C5C  07E7               	addwf	___flmul@grs+3,f
  8288  0C5D  0866               	movf	___flmul@grs+2,w
  8289  0C5E  00E7               	movwf	___flmul@grs+3
  8290  0C5F  0865               	movf	___flmul@grs+1,w
  8291  0C60  00E6               	movwf	___flmul@grs+2
  8292  0C61  0864               	movf	___flmul@grs,w
  8293  0C62  00E5               	movwf	___flmul@grs+1
  8294  0C63  01E4               	clrf	___flmul@grs
  8295  0C64  0855               	movf	___flmul@b,w
  8296  0C65  00A0               	movwf	__Umul8_16@multiplicand
  8297  0C66  0859               	movf	___flmul@a,w
  8298  0C67  254C  120A  158A   	fcall	__Umul8_16
  8299  0C6A  271A  120A  158A   	fcall	PL6	;call to abstracted procedure
  8300  0C6D  1803               	skipnc
  8301  0C6E  3E01               	addlw	1
  8302  0C6F  1D03               	btfss	3,2
  8303  0C70  07E7               	addwf	___flmul@grs+3,f
  8304  0C71  0856               	movf	___flmul@b+1,w
  8305  0C72  00A0               	movwf	__Umul8_16@multiplicand
  8306  0C73  085B               	movf	___flmul@a+2,w
  8307  0C74  254C  120A  158A   	fcall	__Umul8_16
  8308  0C77  0821               	movf	?__Umul8_16+1,w
  8309  0C78  2734  120A  158A   	fcall	PL8	;call to abstracted procedure
  8310  0C7B  273D  120A  158A   	fcall	PL12	;call to abstracted procedure
  8311  0C7E  278A  120A  158A   	fcall	PL56	;call to abstracted procedure
  8312  0C81  085A               	movf	___flmul@a+1,w
  8313  0C82  254C  120A  158A   	fcall	__Umul8_16
  8314  0C85  0821               	movf	?__Umul8_16+1,w
  8315  0C86  2734  120A  158A   	fcall	PL8	;call to abstracted procedure
  8316  0C89  273D  120A  158A   	fcall	PL12	;call to abstracted procedure
  8317  0C8C  278A  120A  158A   	fcall	PL56	;call to abstracted procedure
  8318  0C8F  085B               	movf	___flmul@a+2,w
  8319  0C90  254C  120A  158A   	fcall	__Umul8_16
  8320  0C93  0821               	movf	?__Umul8_16+1,w
  8321  0C94  2734  120A  158A   	fcall	PL8	;call to abstracted procedure
  8322  0C97  085F               	movf	??___flmul+2,w
  8323  0C98  00E0               	movwf	??___flmul+3
  8324  0C99  085E               	movf	??___flmul+1,w
  8325  0C9A  00DF               	movwf	??___flmul+2
  8326  0C9B  085D               	movf	??___flmul,w
  8327  0C9C  00DE               	movwf	??___flmul+1
  8328  0C9D  01DD               	clrf	??___flmul
  8329  0C9E  273D  120A  158A   	fcall	PL12	;call to abstracted procedure
  8330  0CA1  1803               	skipnc
  8331  0CA2  3E01               	addlw	1
  8332  0CA3  1D03               	btfss	3,2
  8333  0CA4  07EB               	addwf	___flmul@prod+3,f
  8334  0CA5  0867               	movf	___flmul@grs+3,w
  8335  0CA6  07E8               	addwf	___flmul@prod,f
  8336  0CA7  3001               	movlw	1
  8337  0CA8  2776  120A  158A   	fcall	PL22	;call to abstracted procedure
  8338  0CAB  0863               	movf	___flmul@bexp,w
  8339  0CAC  00EC               	movwf	___flmul@temp
  8340  0CAD  01ED               	clrf	___flmul@temp+1
  8341  0CAE  0862               	movf	___flmul@aexp,w
  8342  0CAF  07EC               	addwf	___flmul@temp,f
  8343  0CB0  1803               	skipnc
  8344  0CB1  0AED               	incf	___flmul@temp+1,f
  8345  0CB2  3082               	movlw	-126
  8346  0CB3                     L14:	
  8347  0CB3  07EC               	addwf	___flmul@temp,f
  8348  0CB4  1C03               	skipc
  8349  0CB5  03ED               	decf	___flmul@temp+1,f
  8350  0CB6  1BEA               	btfsc	___flmul@prod+2,7
  8351  0CB7  2CC6               	goto	l6334
  8352  0CB8  1003               	clrc
  8353  0CB9  0DE8               	rlf	___flmul@prod,f
  8354  0CBA  0DE9               	rlf	___flmul@prod+1,f
  8355  0CBB  0DEA               	rlf	___flmul@prod+2,f
  8356  0CBC  0DEB               	rlf	___flmul@prod+3,f
  8357  0CBD  1BE7               	btfsc	___flmul@grs+3,7
  8358  0CBE  1468               	bsf	___flmul@prod,0
  8359  0CBF  30FF               	movlw	-1
  8360  0CC0  1003               	clrc
  8361  0CC1  0DE4               	rlf	___flmul@grs,f
  8362  0CC2  0DE5               	rlf	___flmul@grs+1,f
  8363  0CC3  0DE6               	rlf	___flmul@grs+2,f
  8364  0CC4  0DE7               	rlf	___flmul@grs+3,f
  8365  0CC5  2CB3               	goto	L14
  8366  0CC6                     l6334:	
  8367  0CC6  01E2               	clrf	___flmul@aexp
  8368  0CC7  1FE7               	btfss	___flmul@grs+3,7
  8369  0CC8  2CDB               	goto	l6344
  8370  0CC9  0864               	movf	___flmul@grs,w
  8371  0CCA  00DD               	movwf	??___flmul
  8372  0CCB  0865               	movf	___flmul@grs+1,w
  8373  0CCC  00DE               	movwf	??___flmul+1
  8374  0CCD  0866               	movf	___flmul@grs+2,w
  8375  0CCE  00DF               	movwf	??___flmul+2
  8376  0CCF  307F               	movlw	127
  8377  0CD0  0567               	andwf	___flmul@grs+3,w
  8378  0CD1  00E0               	movwf	??___flmul+3
  8379  0CD2  045F               	iorwf	??___flmul+2,w
  8380  0CD3  045E               	iorwf	??___flmul+1,w
  8381  0CD4  045D               	iorwf	??___flmul,w
  8382  0CD5  1903               	skipnz
  8383  0CD6  1868               	btfsc	___flmul@prod,0
  8384  0CD7  2CD9               	goto	l6340
  8385  0CD8  2CDB               	goto	l6344
  8386  0CD9                     l6340:	
  8387  0CD9  01E2               	clrf	___flmul@aexp
  8388  0CDA  0AE2               	incf	___flmul@aexp,f
  8389  0CDB                     l6344:	
  8390  0CDB  0862               	movf	___flmul@aexp,w
  8391  0CDC  1903               	btfsc	3,2
  8392  0CDD  2CEF               	goto	l6354
  8393  0CDE  0AE8               	incf	___flmul@prod,f
  8394  0CDF  1903               	skipnz
  8395  0CE0  0AE9               	incf	___flmul@prod+1,f
  8396  0CE1  1903               	skipnz
  8397  0CE2  0AEA               	incf	___flmul@prod+2,f
  8398  0CE3  1903               	skipnz
  8399  0CE4  0AEB               	incf	___flmul@prod+3,f
  8400  0CE5  1C6B               	btfss	___flmul@prod+3,0
  8401  0CE6  2CEF               	goto	l6354
  8402  0CE7  0D6B               	rlf	___flmul@prod+3,w
  8403  0CE8  0CEB               	rrf	___flmul@prod+3,f
  8404  0CE9  0CEA               	rrf	___flmul@prod+2,f
  8405  0CEA  0CE9               	rrf	___flmul@prod+1,f
  8406  0CEB  0CE8               	rrf	___flmul@prod,f
  8407  0CEC  0AEC               	incf	___flmul@temp,f
  8408  0CED  1903               	skipnz
  8409  0CEE  0AED               	incf	___flmul@temp+1,f
  8410  0CEF                     l6354:	
  8411  0CEF  086D               	movf	___flmul@temp+1,w
  8412  0CF0  3A80               	xorlw	128
  8413  0CF1  00FF               	movwf	127
  8414  0CF2  3080               	movlw	128
  8415  0CF3  027F               	subwf	127,w
  8416  0CF4  1D03               	skipz
  8417  0CF5  2CF8               	goto	u5905
  8418  0CF6  30FF               	movlw	255
  8419  0CF7  026C               	subwf	___flmul@temp,w
  8420  0CF8                     u5905:	
  8421  0CF8  1C03               	skipc
  8422  0CF9  2D03               	goto	l6358
  8423  0CFA  307F               	movlw	127
  8424  0CFB  1283               	bcf	3,5	;RP0=0, select bank0
  8425  0CFC  1303               	bcf	3,6	;RP1=0, select bank0
  8426  0CFD  00EB               	movwf	___flmul@prod+3
  8427  0CFE  3080               	movlw	128
  8428  0CFF  00EA               	movwf	___flmul@prod+2
  8429  0D00  01E9               	clrf	___flmul@prod+1
  8430  0D01  01E8               	clrf	___flmul@prod
  8431  0D02  2D25               	goto	l1398
  8432  0D03                     l6358:	
  8433  0D03  1283               	bcf	3,5	;RP0=0, select bank0
  8434  0D04  1303               	bcf	3,6	;RP1=0, select bank0
  8435  0D05  086D               	movf	___flmul@temp+1,w
  8436  0D06  3A80               	xorlw	128
  8437  0D07  00FF               	movwf	127
  8438  0D08  3080               	movlw	128
  8439  0D09  027F               	subwf	127,w
  8440  0D0A  1D03               	skipz
  8441  0D0B  2D0E               	goto	u5915
  8442  0D0C  3001               	movlw	1
  8443  0D0D  026C               	subwf	___flmul@temp,w
  8444  0D0E                     u5915:	
  8445  0D0E  1803               	skipnc
  8446  0D0F  2D18               	goto	l6364
  8447  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  8448  0D11  1303               	bcf	3,6	;RP1=0, select bank0
  8449  0D12  01E8               	clrf	___flmul@prod
  8450  0D13  01E9               	clrf	___flmul@prod+1
  8451  0D14  01EA               	clrf	___flmul@prod+2
  8452  0D15  01EB               	clrf	___flmul@prod+3
  8453  0D16  01E1               	clrf	___flmul@sign
  8454  0D17  2D25               	goto	l1398
  8455  0D18                     l6364:	
  8456  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  8457  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  8458  0D1A  086C               	movf	___flmul@temp,w
  8459  0D1B  00E3               	movwf	___flmul@bexp
  8460  0D1C  307F               	movlw	127
  8461  0D1D  05EA               	andwf	___flmul@prod+2,f
  8462  0D1E  3000               	movlw	0
  8463  0D1F  01EB               	clrf	___flmul@prod+3
  8464  0D20  1863               	btfsc	___flmul@bexp,0
  8465  0D21  17EA               	bsf	___flmul@prod+2,7
  8466  0D22  1003               	clrc
  8467  0D23  0C63               	rrf	___flmul@bexp,w
  8468  0D24  00EB               	movwf	___flmul@prod+3
  8469  0D25                     l1398:	
  8470  0D25  0861               	movf	___flmul@sign,w
  8471  0D26  04EB               	iorwf	___flmul@prod+3,f
  8472  0D27  086B               	movf	___flmul@prod+3,w
  8473  0D28  00D8               	movwf	?___flmul+3
  8474  0D29  086A               	movf	___flmul@prod+2,w
  8475  0D2A  00D7               	movwf	?___flmul+2
  8476  0D2B  0869               	movf	___flmul@prod+1,w
  8477  0D2C  00D6               	movwf	?___flmul+1
  8478  0D2D  0868               	movf	___flmul@prod,w
  8479  0D2E  00D5               	movwf	?___flmul
  8480  0D2F  0008               	return
  8481  0D30                     __end_of___flmul:	
  8482  0D30                     __ptext24:	
  8483 ;; *************** function _Send_To_MB *****************
  8484 ;; Defined at:
  8485 ;;		line 647 in file "SlaveLiofilizadorVer1.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;  size            1    wreg     unsigned char 
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;  size            1    1[BANK0 ] unsigned char 
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  1    wreg      void 
  8492 ;; Registers used:
  8493 ;;		wreg, status,2, status,0, pclath, cstack
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 300/100
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8499 ;;      Params:         0       0       0       0       0
  8500 ;;      Locals:         0       1       0       0       0
  8501 ;;      Temps:          0       0       0       0       0
  8502 ;;      Totals:         0       1       0       0       0
  8503 ;;Total ram usage:        1 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; Hardware stack levels required when called:    2
  8506 ;; This function calls:
  8507 ;;		_USART_putc
  8508 ;; This function is called by:
  8509 ;;		_Decodify_Command
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           
  8514                           ;psect for function _Send_To_MB
  8515  0D30                     _Send_To_MB:	
  8516                           
  8517                           ;incstack = 0
  8518                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  8519                           ;Send_To_MB@size stored from wreg
  8520  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  8521  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  8522  0D32  00A1               	movwf	Send_To_MB@size
  8523                           
  8524                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(0xAA);
  8525  0D33  30AA               	movlw	170
  8526  0D34  2587  120A  158A   	fcall	_USART_putc
  8527                           
  8528                           ;SlaveLiofilizadorVer1.c: 650:      USART_putc(0xBB);
  8529  0D37  30BB               	movlw	187
  8530  0D38  2587  120A  158A   	fcall	_USART_putc
  8531                           
  8532                           ;SlaveLiofilizadorVer1.c: 651:      USART_putc(Board_Number);
  8533  0D3B  1703               	bsf	3,6	;RP1=1, select bank3
  8534  0D3C  0834               	movf	_Board_Number^(0+384),w
  8535  0D3D  2587  120A  158A   	fcall	_USART_putc
  8536                           
  8537                           ;SlaveLiofilizadorVer1.c: 652:      USART_putc(0x00);
  8538  0D40  3000               	movlw	0
  8539  0D41  2587  120A  158A   	fcall	_USART_putc
  8540                           
  8541                           ;SlaveLiofilizadorVer1.c: 653:      USART_putc(usart_protocol.command);
  8542  0D44  1703               	bsf	3,6	;RP1=1, select bank3
  8543  0D45  0851               	movf	(_usart_protocol^(0+384)+4),w
  8544  0D46  2587  120A  158A   	fcall	_USART_putc
  8545                           
  8546                           ;SlaveLiofilizadorVer1.c: 654:      USART_putc(size);
  8547  0D49  1283               	bcf	3,5	;RP0=0, select bank0
  8548  0D4A  0821               	movf	Send_To_MB@size,w
  8549  0D4B  2D87               	ljmp	_USART_putc
  8550  0D4C                     __end_of_Send_To_MB:	
  8551  0D4C                     __ptext21:	
  8552 ;; *************** function __Umul8_16 *****************
  8553 ;; Defined at:
  8554 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;  multiplier      1    wreg     unsigned char 
  8557 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;  multiplier      1    7[BANK0 ] unsigned char 
  8560 ;;  word_mpld       2    5[BANK0 ] unsigned int 
  8561 ;;  product         2    3[BANK0 ] unsigned int 
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  2    0[BANK0 ] unsigned int 
  8564 ;; Registers used:
  8565 ;;		wreg, status,2, status,0
  8566 ;; Tracked objects:
  8567 ;;		On entry : 300/0
  8568 ;;		On exit  : 300/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8571 ;;      Params:         0       3       0       0       0
  8572 ;;      Locals:         0       5       0       0       0
  8573 ;;      Temps:          0       0       0       0       0
  8574 ;;      Totals:         0       8       0       0       0
  8575 ;;Total ram usage:        8 bytes
  8576 ;; Hardware stack levels used:    1
  8577 ;; Hardware stack levels required when called:    1
  8578 ;; This function calls:
  8579 ;;		Nothing
  8580 ;; This function is called by:
  8581 ;;		___flmul
  8582 ;; This function uses a non-reentrant model
  8583 ;;
  8584                           
  8585                           
  8586                           ;psect for function __Umul8_16
  8587  0D4C                     __Umul8_16:	
  8588                           
  8589                           ;incstack = 0
  8590                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8591                           ;__Umul8_16@multiplier stored from wreg
  8592  0D4C  00A7               	movwf	__Umul8_16@multiplier
  8593  0D4D  01A3               	clrf	__Umul8_16@product
  8594  0D4E  01A4               	clrf	__Umul8_16@product+1
  8595  0D4F  0820               	movf	__Umul8_16@multiplicand,w
  8596  0D50  00A5               	movwf	__Umul8_16@word_mpld
  8597  0D51  01A6               	clrf	__Umul8_16@word_mpld+1
  8598  0D52                     l6022:	
  8599  0D52  1C27               	btfss	__Umul8_16@multiplier,0
  8600  0D53  2D5A               	goto	l6026
  8601  0D54  0825               	movf	__Umul8_16@word_mpld,w
  8602  0D55  07A3               	addwf	__Umul8_16@product,f
  8603  0D56  1803               	skipnc
  8604  0D57  0AA4               	incf	__Umul8_16@product+1,f
  8605  0D58  0826               	movf	__Umul8_16@word_mpld+1,w
  8606  0D59  07A4               	addwf	__Umul8_16@product+1,f
  8607  0D5A                     l6026:	
  8608  0D5A  1003               	clrc
  8609  0D5B  0DA5               	rlf	__Umul8_16@word_mpld,f
  8610  0D5C  0DA6               	rlf	__Umul8_16@word_mpld+1,f
  8611  0D5D  1003               	clrc
  8612  0D5E  0CA7               	rrf	__Umul8_16@multiplier,f
  8613  0D5F  0827               	movf	__Umul8_16@multiplier,w
  8614  0D60  1D03               	btfss	3,2
  8615  0D61  2D52               	goto	l6022
  8616  0D62  0824               	movf	__Umul8_16@product+1,w
  8617  0D63  00A1               	movwf	?__Umul8_16+1
  8618  0D64  0823               	movf	__Umul8_16@product,w
  8619  0D65  00A0               	movwf	?__Umul8_16
  8620  0D66  0008               	return
  8621  0D67                     __end_of__Umul8_16:	
  8622  0D67                     __ptext16:	
  8623 ;; *************** function _strcat *****************
  8624 ;; Defined at:
  8625 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;  to              1    wreg     PTR unsigned char 
  8628 ;;		 -> texto(16), 
  8629 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  8630 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  8631 ;;		 -> STR_3(2), Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;  to              1    4[BANK0 ] PTR unsigned char 
  8634 ;;		 -> texto(16), 
  8635 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  8636 ;;		 -> texto(16), 
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  1    wreg      PTR unsigned char 
  8639 ;; Registers used:
  8640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  8641 ;; Tracked objects:
  8642 ;;		On entry : B00/800
  8643 ;;		On exit  : B00/800
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8646 ;;      Params:         0       2       0       0       0
  8647 ;;      Locals:         0       2       0       0       0
  8648 ;;      Temps:          0       1       0       0       0
  8649 ;;      Totals:         0       5       0       0       0
  8650 ;;Total ram usage:        5 bytes
  8651 ;; Hardware stack levels used:    2
  8652 ;; Hardware stack levels required when called:    1
  8653 ;; This function calls:
  8654 ;;		Nothing
  8655 ;; This function is called by:
  8656 ;;		_Decodify_Command
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660                           
  8661                           ;psect for function _strcat
  8662  0D67                     _strcat:	
  8663                           
  8664                           ;incstack = 0
  8665                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  8666                           ;strcat@to stored from wreg
  8667  0D67  00A4               	movwf	strcat@to
  8668  0D68  00A3               	movwf	strcat@cp
  8669  0D69                     l7424:	
  8670  0D69  0823               	movf	strcat@cp,w
  8671  0D6A  0084               	movwf	4
  8672  0D6B  0800               	movf	0,w
  8673  0D6C  1903               	btfsc	3,2
  8674  0D6D  2D74               	goto	l7428
  8675  0D6E  0AA3               	incf	strcat@cp,f
  8676  0D6F  2D69               	goto	l7424
  8677  0D70                     l7426:	
  8678  0D70  0AA3               	incf	strcat@cp,f
  8679  0D71  0AA0               	incf	strcat@from,f
  8680  0D72  1903               	skipnz
  8681  0D73  0AA1               	incf	strcat@from+1,f
  8682  0D74                     l7428:	
  8683  0D74  0821               	movf	strcat@from+1,w
  8684  0D75  00FF               	movwf	127
  8685  0D76  0820               	movf	strcat@from,w
  8686  0D77  0084               	movwf	4
  8687  0D78  160A  158A  2000  120A  158A  	fcall	stringtab
  8688  0D7D  00A2               	movwf	??_strcat
  8689  0D7E  0823               	movf	strcat@cp,w
  8690  0D7F  0084               	movwf	4
  8691  0D80  0822               	movf	??_strcat,w
  8692  0D81  1783               	bsf	3,7	;select IRP bank2
  8693  0D82  0080               	movwf	0
  8694  0D83  0800               	movf	0,w
  8695  0D84  1903               	btfsc	3,2
  8696  0D85  0008               	return
  8697  0D86  2D70               	goto	l7426
  8698  0D87                     __end_of_strcat:	
  8699  0D87                     __ptext38:	
  8700 ;; *************** function _USART_putc *****************
  8701 ;; Defined at:
  8702 ;;		line 89 in file "usart.c"
  8703 ;; Parameters:    Size  Location     Type
  8704 ;;  value           1    wreg     unsigned char 
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  value           1    0[BANK0 ] unsigned char 
  8707 ;; Return value:  Size  Location     Type
  8708 ;;                  1    wreg      void 
  8709 ;; Registers used:
  8710 ;;		wreg
  8711 ;; Tracked objects:
  8712 ;;		On entry : 0/100
  8713 ;;		On exit  : 300/100
  8714 ;;		Unchanged: 0/0
  8715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8716 ;;      Params:         0       0       0       0       0
  8717 ;;      Locals:         0       1       0       0       0
  8718 ;;      Temps:          0       0       0       0       0
  8719 ;;      Totals:         0       1       0       0       0
  8720 ;;Total ram usage:        1 bytes
  8721 ;; Hardware stack levels used:    1
  8722 ;; Hardware stack levels required when called:    1
  8723 ;; This function calls:
  8724 ;;		Nothing
  8725 ;; This function is called by:
  8726 ;;		_Decodify_Command
  8727 ;;		_Send_To_MB
  8728 ;;		_PROCULUS_Control_Register_Write
  8729 ;;		_PROCULUS_VP_Write
  8730 ;;		_USART_put_buffer
  8731 ;;		_USART_put_int
  8732 ;;		_USART_put_string
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           
  8736                           
  8737                           ;psect for function _USART_putc
  8738  0D87                     _USART_putc:	
  8739                           
  8740                           ;incstack = 0
  8741                           ; Regs used in _USART_putc: [wreg]
  8742                           ;USART_putc@value stored from wreg
  8743  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  8744  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  8745  0D89  00A0               	movwf	USART_putc@value
  8746                           
  8747                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
  8748  0D8A  3014               	movlw	20
  8749  0D8B  1683               	bsf	3,5	;RP0=1, select bank3
  8750  0D8C  1703               	bsf	3,6	;RP1=1, select bank3
  8751  0D8D  00AC               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  8752  0D8E  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  8753  0D8F                     l796:	
  8754                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
  8755                           
  8756  0D8F  1303               	bcf	3,6	;RP1=0, select bank1
  8757  0D90  1C98               	btfss	24,1	;volatile
  8758  0D91  2D8F               	goto	l796
  8759                           
  8760                           ;usart.c: 93:     TXREG=value;
  8761  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  8762  0D93  0820               	movf	USART_putc@value,w
  8763  0D94  0099               	movwf	25	;volatile
  8764                           
  8765                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
  8766  0D95  1683               	bsf	3,5	;RP0=1, select bank1
  8767  0D96  1698               	bsf	24,5	;volatile
  8768  0D97  0008               	return
  8769  0D98                     __end_of_USART_putc:	
  8770  0D98                     __ptext17:	
  8771 ;; *************** function _itoa *****************
  8772 ;; Defined at:
  8773 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  buf             1    wreg     PTR unsigned char 
  8776 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  8777 ;;  val             2   15[BANK0 ] int 
  8778 ;;  base            2   17[BANK0 ] int 
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  8781 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  8782 ;;  cp              1    0        PTR unsigned char 
  8783 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  8784 ;; Return value:  Size  Location     Type
  8785 ;;                  1    wreg      PTR unsigned char 
  8786 ;; Registers used:
  8787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8788 ;; Tracked objects:
  8789 ;;		On entry : 300/0
  8790 ;;		On exit  : B00/0
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8793 ;;      Params:         0       4       0       0       0
  8794 ;;      Locals:         0       2       0       0       0
  8795 ;;      Temps:          0       0       0       0       0
  8796 ;;      Totals:         0       6       0       0       0
  8797 ;;Total ram usage:        6 bytes
  8798 ;; Hardware stack levels used:    1
  8799 ;; Hardware stack levels required when called:    3
  8800 ;; This function calls:
  8801 ;;		_utoa
  8802 ;; This function is called by:
  8803 ;;		_Decodify_Command
  8804 ;; This function uses a non-reentrant model
  8805 ;;
  8806                           
  8807                           
  8808                           ;psect for function _itoa
  8809  0D98                     _itoa:	
  8810                           
  8811                           ;incstack = 0
  8812                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8813                           ;itoa@buf stored from wreg
  8814  0D98  00B4               	movwf	itoa@buf
  8815  0D99  1FB0               	btfss	itoa@val+1,7
  8816  0D9A  2DA6               	goto	l7410
  8817  0D9B  0834               	movf	itoa@buf,w
  8818  0D9C  0084               	movwf	4
  8819  0D9D  302D               	movlw	45
  8820  0D9E  1383               	bcf	3,7	;select IRP bank0
  8821  0D9F  0080               	movwf	0
  8822  0DA0  0AB4               	incf	itoa@buf,f
  8823  0DA1  09AF               	comf	itoa@val,f
  8824  0DA2  09B0               	comf	itoa@val+1,f
  8825  0DA3  0AAF               	incf	itoa@val,f
  8826  0DA4  1903               	skipnz
  8827  0DA5  0AB0               	incf	itoa@val+1,f
  8828  0DA6                     l7410:	
  8829  0DA6  0830               	movf	itoa@val+1,w
  8830  0DA7  00A8               	movwf	utoa@val+1
  8831  0DA8  082F               	movf	itoa@val,w
  8832  0DA9  00A7               	movwf	utoa@val
  8833  0DAA  0832               	movf	itoa@base+1,w
  8834  0DAB  00AA               	movwf	utoa@base+1
  8835  0DAC  0831               	movf	itoa@base,w
  8836  0DAD  00A9               	movwf	utoa@base
  8837  0DAE  0834               	movf	itoa@buf,w
  8838  0DAF  160A  158A  2D39   	ljmp	_utoa
  8839  0DB2                     __end_of_itoa:	
  8840  0DB2                     __ptext31:	
  8841 ;; *************** function _strlen *****************
  8842 ;; Defined at:
  8843 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  8844 ;; Parameters:    Size  Location     Type
  8845 ;;  s               1    wreg     PTR const unsigned char 
  8846 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  8849 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  8850 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  8851 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  8852 ;; Return value:  Size  Location     Type
  8853 ;;                  2    0[BANK0 ] unsigned int 
  8854 ;; Registers used:
  8855 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8856 ;; Tracked objects:
  8857 ;;		On entry : 0/300
  8858 ;;		On exit  : B00/800
  8859 ;;		Unchanged: 0/0
  8860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8861 ;;      Params:         0       3       0       0       0
  8862 ;;      Locals:         0       2       0       0       0
  8863 ;;      Temps:          0       0       0       0       0
  8864 ;;      Totals:         0       5       0       0       0
  8865 ;;Total ram usage:        5 bytes
  8866 ;; Hardware stack levels used:    1
  8867 ;; Hardware stack levels required when called:    1
  8868 ;; This function calls:
  8869 ;;		Nothing
  8870 ;; This function is called by:
  8871 ;;		_Decodify_Command
  8872 ;;		_PROCULUS_VP_Write_String
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           
  8877                           ;psect for function _strlen
  8878  0DB2                     _strlen:	
  8879                           
  8880                           ;incstack = 0
  8881                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8882                           ;strlen@s stored from wreg
  8883  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  8884  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  8885  0DB4  00A4               	movwf	strlen@s
  8886  0DB5  00A3               	movwf	strlen@cp
  8887  0DB6                     l6810:	
  8888  0DB6  0823               	movf	strlen@cp,w
  8889  0DB7  0084               	movwf	4
  8890  0DB8  1783               	bsf	3,7	;select IRP bank2
  8891  0DB9  0800               	movf	0,w
  8892  0DBA  1903               	btfsc	3,2
  8893  0DBB  2DBE               	goto	l6812
  8894  0DBC  0AA3               	incf	strlen@cp,f
  8895  0DBD  2DB6               	goto	l6810
  8896  0DBE                     l6812:	
  8897  0DBE  0824               	movf	strlen@s,w
  8898  0DBF  0223               	subwf	strlen@cp,w
  8899  0DC0  00A0               	movwf	?_strlen
  8900  0DC1  01A1               	clrf	?_strlen+1
  8901  0DC2  1BA0               	btfsc	?_strlen,7
  8902  0DC3  03A1               	decf	?_strlen+1,f
  8903  0DC4  0008               	return
  8904  0DC5                     __end_of_strlen:	
  8905  0DC5                     __ptext26:	
  8906 ;; *************** function _USART_put_string *****************
  8907 ;; Defined at:
  8908 ;;		line 168 in file "usart.c"
  8909 ;; Parameters:    Size  Location     Type
  8910 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  8911 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  8912 ;; Auto vars:     Size  Location     Type
  8913 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  8914 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  8915 ;; Return value:  Size  Location     Type
  8916 ;;                  1    wreg      void 
  8917 ;; Registers used:
  8918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8919 ;; Tracked objects:
  8920 ;;		On entry : 300/0
  8921 ;;		On exit  : 300/100
  8922 ;;		Unchanged: 0/0
  8923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8924 ;;      Params:         0       2       0       0       0
  8925 ;;      Locals:         0       2       0       0       0
  8926 ;;      Temps:          0       0       0       0       0
  8927 ;;      Totals:         0       4       0       0       0
  8928 ;;Total ram usage:        4 bytes
  8929 ;; Hardware stack levels used:    1
  8930 ;; Hardware stack levels required when called:    2
  8931 ;; This function calls:
  8932 ;;		_USART_putc
  8933 ;; This function is called by:
  8934 ;;		_Decodify_Command
  8935 ;;		_Send_Reply_OK
  8936 ;; This function uses a non-reentrant model
  8937 ;;
  8938                           
  8939                           
  8940                           ;psect for function _USART_put_string
  8941  0DC5                     _USART_put_string:	
  8942  0DC5                     l6668:	
  8943                           ;incstack = 0
  8944                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8945                           
  8946                           
  8947                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  8948  0DC5  0821               	movf	USART_put_string@vetor,w
  8949  0DC6  00A3               	movwf	USART_put_string@ptr
  8950  0DC7  0822               	movf	USART_put_string@vetor+1,w
  8951  0DC8  00A4               	movwf	USART_put_string@ptr+1
  8952  0DC9                     l6674:	
  8953                           ;usart.c: 172:     while(*(ptr)){
  8954                           
  8955                           
  8956                           ;usart.c: 172:     while(*(ptr)){
  8957  0DC9  0824               	movf	USART_put_string@ptr+1,w
  8958  0DCA  00FF               	movwf	127
  8959  0DCB  0823               	movf	USART_put_string@ptr,w
  8960  0DCC  0084               	movwf	4
  8961  0DCD  160A  158A  2000  120A  158A  	fcall	stringtab
  8962  0DD2  3A00               	xorlw	0
  8963  0DD3  1903               	btfsc	3,2
  8964  0DD4  2DE6               	goto	l6676
  8965                           
  8966                           ;usart.c: 173:         USART_putc(*(ptr));
  8967  0DD5  0824               	movf	USART_put_string@ptr+1,w
  8968  0DD6  00FF               	movwf	127
  8969  0DD7  0823               	movf	USART_put_string@ptr,w
  8970  0DD8  0084               	movwf	4
  8971  0DD9  160A  158A  2000  120A  158A  	fcall	stringtab
  8972  0DDE  2587  120A  158A   	fcall	_USART_putc
  8973                           
  8974                           ;usart.c: 174:         ptr++;
  8975  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  8976  0DE2  0AA3               	incf	USART_put_string@ptr,f
  8977  0DE3  1903               	skipnz
  8978  0DE4  0AA4               	incf	USART_put_string@ptr+1,f
  8979  0DE5  2DC9               	goto	l6674
  8980  0DE6                     l6676:	
  8981                           
  8982                           ;usart.c: 176:     USART_putc(*(ptr));
  8983  0DE6  0824               	movf	USART_put_string@ptr+1,w
  8984  0DE7  00FF               	movwf	127
  8985  0DE8  0823               	movf	USART_put_string@ptr,w
  8986  0DE9  0084               	movwf	4
  8987  0DEA  160A  158A  2000  120A  158A  	fcall	stringtab
  8988  0DEF  2D87               	ljmp	_USART_putc
  8989  0DF0                     __end_of_USART_put_string:	
  8990  0DF0                     __ptext40:	
  8991 ;; *************** function _Load_Work *****************
  8992 ;; Defined at:
  8993 ;;		line 982 in file "SlaveLiofilizadorVer1.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;		None
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;		None
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  1    wreg      void 
  9000 ;; Registers used:
  9001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9002 ;; Tracked objects:
  9003 ;;		On entry : 100/300
  9004 ;;		On exit  : 300/200
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9007 ;;      Params:         0       0       0       0       0
  9008 ;;      Locals:         0       0       0       0       0
  9009 ;;      Temps:          0       0       4       0       0
  9010 ;;      Totals:         0       0       4       0       0
  9011 ;;Total ram usage:        4 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; Hardware stack levels required when called:    3
  9014 ;; This function calls:
  9015 ;;		_EEPROM_Read_Byte
  9016 ;;		_EEPROM_Read_Integer
  9017 ;;		___fldiv
  9018 ;;		___xxtofl
  9019 ;; This function is called by:
  9020 ;;		_main
  9021 ;;		_Decodify_Command
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           
  9026                           ;psect for function _Load_Work
  9027  0DF0                     _Load_Work:	
  9028  0DF0                     l7118:	
  9029                           ;incstack = 0
  9030                           ; Regs used in _Load_Work: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9031                           
  9032                           
  9033                           ;SlaveLiofilizadorVer1.c: 985:      SetPoint0 = EEPROM_Read_Integer(0);
  9034  0DF0  3000               	movlw	0
  9035  0DF1  26E9  120A  158A   	fcall	_EEPROM_Read_Integer
  9036  0DF4  274E               	fcall	PL14	;call to abstracted procedure
  9037  0DF5  160A  118A  24A9  120A  158A  	fcall	___xxtofl
  9038  0DFA  082E               	movf	?___xxtofl+3,w
  9039  0DFB  00F3               	movwf	_SetPoint0+3	;volatile
  9040  0DFC  082D               	movf	?___xxtofl+2,w
  9041  0DFD  00F2               	movwf	_SetPoint0+2	;volatile
  9042  0DFE  082C               	movf	?___xxtofl+1,w
  9043  0DFF  00F1               	movwf	_SetPoint0+1	;volatile
  9044  0E00  082B               	movf	?___xxtofl,w
  9045  0E01  00F0               	movwf	_SetPoint0	;volatile
  9046                           
  9047                           ;SlaveLiofilizadorVer1.c: 986:      SetPoint0/=10;
  9048  0E02  3041               	movlw	65
  9049  0E03  1683               	bsf	3,5	;RP0=1, select bank1
  9050  0E04  00A3               	movwf	(___fldiv@a+3)^(0+128)
  9051  0E05  3020               	movlw	32
  9052  0E06  00A2               	movwf	(___fldiv@a+2)^(0+128)
  9053  0E07  01A1               	clrf	(___fldiv@a+1)^(0+128)
  9054  0E08  01A0               	clrf	___fldiv@a^(0+128)
  9055  0E09  0873               	movf	_SetPoint0+3,w	;volatile
  9056  0E0A  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9057  0E0B  0872               	movf	_SetPoint0+2,w	;volatile
  9058  0E0C  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9059  0E0D  0871               	movf	_SetPoint0+1,w	;volatile
  9060  0E0E  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9061  0E0F  0870               	movf	_SetPoint0,w	;volatile
  9062  0E10  00A4               	movwf	___fldiv@b^(0+128)
  9063  0E11  160A  118A  2517  120A  158A  	fcall	___fldiv
  9064  0E16  0823               	movf	(?___fldiv+3)^(0+128),w
  9065  0E17  00F3               	movwf	_SetPoint0+3	;volatile
  9066  0E18  0822               	movf	(?___fldiv+2)^(0+128),w
  9067  0E19  00F2               	movwf	_SetPoint0+2	;volatile
  9068  0E1A  0821               	movf	(?___fldiv+1)^(0+128),w
  9069  0E1B  00F1               	movwf	_SetPoint0+1	;volatile
  9070  0E1C  0820               	movf	?___fldiv^(0+128),w
  9071  0E1D  00F0               	movwf	_SetPoint0	;volatile
  9072                           
  9073                           ;SlaveLiofilizadorVer1.c: 987:      TempoON_0 = EEPROM_Read_Byte(2);
  9074  0E1E  3002               	movlw	2
  9075  0E1F  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9076  0E22  1683               	bsf	3,5	;RP0=1, select bank3
  9077  0E23  00BA               	movwf	_TempoON_0^(0+384)
  9078                           
  9079                           ;SlaveLiofilizadorVer1.c: 988:      TempoOFF_0= EEPROM_Read_Byte(3);
  9080  0E24  3003               	movlw	3
  9081  0E25  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9082  0E28  1683               	bsf	3,5	;RP0=1, select bank3
  9083  0E29  00B9               	movwf	_TempoOFF_0^(0+384)
  9084                           
  9085                           ;SlaveLiofilizadorVer1.c: 989:      Histerese0= EEPROM_Read_Byte(4);
  9086  0E2A  3004               	movlw	4
  9087  0E2B  26C8               	fcall	_EEPROM_Read_Byte
  9088  0E2C  1303               	bcf	3,6	;RP1=0, select bank0
  9089  0E2D  00AB               	movwf	___xxtofl@val
  9090  0E2E  3000               	movlw	0
  9091  0E2F  01AC               	clrf	___xxtofl@val+1
  9092  0E30  01AD               	clrf	___xxtofl@val+2
  9093  0E31  01AE               	clrf	___xxtofl@val+3
  9094  0E32  160A  118A  24A9  120A  158A  	fcall	___xxtofl
  9095  0E37  082E               	movf	?___xxtofl+3,w
  9096  0E38  1683               	bsf	3,5	;RP0=1, select bank3
  9097  0E39  1703               	bsf	3,6	;RP1=1, select bank3
  9098  0E3A  009F               	movwf	(_Histerese0+3)^(0+384)
  9099  0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  9100  0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  9101  0E3D  082D               	movf	?___xxtofl+2,w
  9102  0E3E  1683               	bsf	3,5	;RP0=1, select bank3
  9103  0E3F  1703               	bsf	3,6	;RP1=1, select bank3
  9104  0E40  009E               	movwf	(_Histerese0+2)^(0+384)
  9105  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  9106  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  9107  0E43  082C               	movf	?___xxtofl+1,w
  9108  0E44  1683               	bsf	3,5	;RP0=1, select bank3
  9109  0E45  1703               	bsf	3,6	;RP1=1, select bank3
  9110  0E46  009D               	movwf	(_Histerese0+1)^(0+384)
  9111  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  9112  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  9113  0E49  082B               	movf	?___xxtofl,w
  9114  0E4A  1683               	bsf	3,5	;RP0=1, select bank3
  9115  0E4B  1703               	bsf	3,6	;RP1=1, select bank3
  9116  0E4C  009C               	movwf	_Histerese0^(0+384)
  9117                           
  9118                           ;SlaveLiofilizadorVer1.c: 990:      Status0 = EEPROM_Read_Integer(5);
  9119  0E4D  3005               	movlw	5
  9120  0E4E  26E9  120A  158A   	fcall	_EEPROM_Read_Integer
  9121  0E51  0824               	movf	?_EEPROM_Read_Integer+1,w
  9122  0E52  1683               	bsf	3,5	;RP0=1, select bank3
  9123  0E53  1703               	bsf	3,6	;RP1=1, select bank3
  9124  0E54  00A9               	movwf	(_Status0+1)^(0+384)
  9125  0E55  1283               	bcf	3,5	;RP0=0, select bank0
  9126  0E56  1303               	bcf	3,6	;RP1=0, select bank0
  9127  0E57  0823               	movf	?_EEPROM_Read_Integer,w
  9128  0E58  1683               	bsf	3,5	;RP0=1, select bank3
  9129  0E59  1703               	bsf	3,6	;RP1=1, select bank3
  9130  0E5A  00A8               	movwf	_Status0^(0+384)
  9131                           
  9132                           ;SlaveLiofilizadorVer1.c: 992:      SetPoint1 = EEPROM_Read_Integer(7);
  9133  0E5B  3007               	movlw	7
  9134  0E5C  26E9  120A  158A   	fcall	_EEPROM_Read_Integer
  9135  0E5F  274E               	fcall	PL14	;call to abstracted procedure
  9136  0E60  160A  118A  24A9  120A  158A  	fcall	___xxtofl
  9137  0E65  082E               	movf	?___xxtofl+3,w
  9138  0E66  1683               	bsf	3,5	;RP0=1, select bank3
  9139  0E67  1703               	bsf	3,6	;RP1=1, select bank3
  9140  0E68  009B               	movwf	(_SetPoint1+3)^(0+384)	;volatile
  9141  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  9142  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  9143  0E6B  082D               	movf	?___xxtofl+2,w
  9144  0E6C  1683               	bsf	3,5	;RP0=1, select bank3
  9145  0E6D  1703               	bsf	3,6	;RP1=1, select bank3
  9146  0E6E  009A               	movwf	(_SetPoint1+2)^(0+384)	;volatile
  9147  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  9148  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  9149  0E71  082C               	movf	?___xxtofl+1,w
  9150  0E72  1683               	bsf	3,5	;RP0=1, select bank3
  9151  0E73  1703               	bsf	3,6	;RP1=1, select bank3
  9152  0E74  0099               	movwf	(_SetPoint1+1)^(0+384)	;volatile
  9153  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  9154  0E76  1303               	bcf	3,6	;RP1=0, select bank0
  9155  0E77  082B               	movf	?___xxtofl,w
  9156  0E78  1683               	bsf	3,5	;RP0=1, select bank3
  9157  0E79  1703               	bsf	3,6	;RP1=1, select bank3
  9158  0E7A  0098               	movwf	_SetPoint1^(0+384)	;volatile
  9159                           
  9160                           ;SlaveLiofilizadorVer1.c: 993:      SetPoint1/=10;
  9161  0E7B  3041               	movlw	65
  9162  0E7C  1303               	bcf	3,6	;RP1=0, select bank1
  9163  0E7D  00A3               	movwf	(___fldiv@a+3)^(0+128)
  9164  0E7E  3020               	movlw	32
  9165  0E7F  00A2               	movwf	(___fldiv@a+2)^(0+128)
  9166  0E80  01A1               	clrf	(___fldiv@a+1)^(0+128)
  9167  0E81  01A0               	clrf	___fldiv@a^(0+128)
  9168  0E82  1703               	bsf	3,6	;RP1=1, select bank3
  9169  0E83  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
  9170  0E84  1303               	bcf	3,6	;RP1=0, select bank1
  9171  0E85  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9172  0E86  1703               	bsf	3,6	;RP1=1, select bank3
  9173  0E87  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
  9174  0E88  1303               	bcf	3,6	;RP1=0, select bank1
  9175  0E89  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9176  0E8A  1703               	bsf	3,6	;RP1=1, select bank3
  9177  0E8B  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
  9178  0E8C  1303               	bcf	3,6	;RP1=0, select bank1
  9179  0E8D  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9180  0E8E  1703               	bsf	3,6	;RP1=1, select bank3
  9181  0E8F  0818               	movf	_SetPoint1^(0+384),w	;volatile
  9182  0E90  1303               	bcf	3,6	;RP1=0, select bank1
  9183  0E91  00A4               	movwf	___fldiv@b^(0+128)
  9184  0E92  160A  118A  2517  120A  158A  	fcall	___fldiv
  9185  0E97  0823               	movf	(?___fldiv+3)^(0+128),w
  9186  0E98  1703               	bsf	3,6	;RP1=1, select bank3
  9187  0E99  009B               	movwf	(_SetPoint1+3)^(0+384)	;volatile
  9188  0E9A  1303               	bcf	3,6	;RP1=0, select bank1
  9189  0E9B  0822               	movf	(?___fldiv+2)^(0+128),w
  9190  0E9C  1703               	bsf	3,6	;RP1=1, select bank3
  9191  0E9D  009A               	movwf	(_SetPoint1+2)^(0+384)	;volatile
  9192  0E9E  1303               	bcf	3,6	;RP1=0, select bank1
  9193  0E9F  0821               	movf	(?___fldiv+1)^(0+128),w
  9194  0EA0  1703               	bsf	3,6	;RP1=1, select bank3
  9195  0EA1  0099               	movwf	(_SetPoint1+1)^(0+384)	;volatile
  9196  0EA2  1303               	bcf	3,6	;RP1=0, select bank1
  9197  0EA3  0820               	movf	?___fldiv^(0+128),w
  9198  0EA4  1703               	bsf	3,6	;RP1=1, select bank3
  9199  0EA5  0098               	movwf	_SetPoint1^(0+384)	;volatile
  9200                           
  9201                           ;SlaveLiofilizadorVer1.c: 994:      TempoON_1 = EEPROM_Read_Byte(9);
  9202  0EA6  3009               	movlw	9
  9203  0EA7  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9204  0EAA  1683               	bsf	3,5	;RP0=1, select bank3
  9205  0EAB  00B7               	movwf	_TempoON_1^(0+384)
  9206                           
  9207                           ;SlaveLiofilizadorVer1.c: 995:      TempoOFF_1= EEPROM_Read_Byte(10);
  9208  0EAC  300A               	movlw	10
  9209  0EAD  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9210  0EB0  1683               	bsf	3,5	;RP0=1, select bank3
  9211  0EB1  00B6               	movwf	_TempoOFF_1^(0+384)
  9212                           
  9213                           ;SlaveLiofilizadorVer1.c: 996:      Histerese1= EEPROM_Read_Byte(11);
  9214  0EB2  300B               	movlw	11
  9215  0EB3  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9216  0EB6  1683               	bsf	3,5	;RP0=1, select bank3
  9217  0EB7  00B8               	movwf	_Histerese1^(0+384)
  9218                           
  9219                           ;SlaveLiofilizadorVer1.c: 997:      Status1 = EEPROM_Read_Integer(12);
  9220  0EB8  300C               	movlw	12
  9221  0EB9  26E9  120A  158A   	fcall	_EEPROM_Read_Integer
  9222  0EBC  0824               	movf	?_EEPROM_Read_Integer+1,w
  9223  0EBD  1683               	bsf	3,5	;RP0=1, select bank3
  9224  0EBE  1703               	bsf	3,6	;RP1=1, select bank3
  9225  0EBF  00A7               	movwf	(_Status1+1)^(0+384)
  9226  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  9227  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  9228  0EC2  0823               	movf	?_EEPROM_Read_Integer,w
  9229  0EC3  1683               	bsf	3,5	;RP0=1, select bank3
  9230  0EC4  1703               	bsf	3,6	;RP1=1, select bank3
  9231  0EC5  00A6               	movwf	_Status1^(0+384)
  9232                           
  9233                           ;SlaveLiofilizadorVer1.c: 999:      statuspower.bits=EEPROM_Read_Byte(14);
  9234  0EC6  300E               	movlw	14
  9235  0EC7  2EC8               	ljmp	_EEPROM_Read_Byte
  9236  0EC8                     __end_of_Load_Work:	
  9237  0EC8                     __ptext47:	
  9238 ;; *************** function _EEPROM_Read_Byte *****************
  9239 ;; Defined at:
  9240 ;;		line 52 in file "eeprom.c"
  9241 ;; Parameters:    Size  Location     Type
  9242 ;;  addr            1    wreg     unsigned char 
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;  addr            1    2[BANK0 ] unsigned char 
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  1    wreg      unsigned char 
  9247 ;; Registers used:
  9248 ;;		wreg
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/300
  9251 ;;		On exit  : 300/200
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9254 ;;      Params:         0       0       0       0       0
  9255 ;;      Locals:         0       1       0       0       0
  9256 ;;      Temps:          0       2       0       0       0
  9257 ;;      Totals:         0       3       0       0       0
  9258 ;;Total ram usage:        3 bytes
  9259 ;; Hardware stack levels used:    1
  9260 ;; Hardware stack levels required when called:    1
  9261 ;; This function calls:
  9262 ;;		Nothing
  9263 ;; This function is called by:
  9264 ;;		_Decodify_Command
  9265 ;;		_Load_Work
  9266 ;;		_EEPROM_Read_Integer
  9267 ;;		_EEPROM_Read_String
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           
  9272                           ;psect for function _EEPROM_Read_Byte
  9273  0EC8                     _EEPROM_Read_Byte:	
  9274                           
  9275                           ;incstack = 0
  9276                           ; Regs used in _EEPROM_Read_Byte: [wreg]
  9277                           ;EEPROM_Read_Byte@addr stored from wreg
  9278  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  9279  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  9280  0ECA  00A2               	movwf	EEPROM_Read_Byte@addr
  9281                           
  9282                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
  9283  0ECB  3014               	movlw	20
  9284  0ECC  1683               	bsf	3,5	;RP0=1, select bank3
  9285  0ECD  1703               	bsf	3,6	;RP1=1, select bank3
  9286  0ECE  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
  9287  0ECF  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  9288  0ED0                     l484:	
  9289                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
  9290                           
  9291  0ED0  188C               	btfsc	12,1	;volsfr
  9292  0ED1  2ED0               	goto	l484
  9293                           
  9294                           ;eeprom.c: 57:    EEADR=addr;
  9295  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  9296  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  9297  0ED4  0822               	movf	EEPROM_Read_Byte@addr,w
  9298  0ED5  1703               	bsf	3,6	;RP1=1, select bank2
  9299  0ED6  008D               	movwf	13	;volatile
  9300                           
  9301                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
  9302  0ED7  1683               	bsf	3,5	;RP0=1, select bank3
  9303  0ED8  138C               	bcf	12,7	;volsfr
  9304                           
  9305                           ;eeprom.c: 59:    EECON1bits.RD=1;
  9306  0ED9  140C               	bsf	12,0	;volsfr
  9307                           
  9308                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
  9309  0EDA  304E               	movlw	78
  9310  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  9311  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  9312  0EDD  00A1               	movwf	??_EEPROM_Read_Byte+1
  9313  0EDE  30EA               	movlw	234
  9314  0EDF  00A0               	movwf	??_EEPROM_Read_Byte
  9315  0EE0                     u7707:	
  9316  0EE0  0BA0               	decfsz	??_EEPROM_Read_Byte,f
  9317  0EE1  2EE0               	goto	u7707
  9318  0EE2  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
  9319  0EE3  2EE0               	goto	u7707
  9320  0EE4  0000               	nop
  9321                           
  9322                           ;eeprom.c: 61:    return EEDATA;
  9323  0EE5  1283               	bcf	3,5	;RP0=0, select bank2
  9324  0EE6  1703               	bsf	3,6	;RP1=1, select bank2
  9325  0EE7  080C               	movf	12,w	;volatile
  9326  0EE8  0008               	return
  9327  0EE9                     __end_of_EEPROM_Read_Byte:	
  9328  0EE9                     __ptext42:	
  9329 ;; *************** function _EEPROM_Read_Integer *****************
  9330 ;; Defined at:
  9331 ;;		line 81 in file "eeprom.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  addr            1    wreg     unsigned char 
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;  addr            1    6[BANK0 ] unsigned char 
  9336 ;;  result          2    8[BANK0 ] unsigned int 
  9337 ;;  i               1   10[BANK0 ] unsigned char 
  9338 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  9339 ;;		 -> EEPROM_Read_Integer@result(2), 
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  2    3[BANK0 ] unsigned int 
  9342 ;; Registers used:
  9343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9344 ;; Tracked objects:
  9345 ;;		On entry : 0/0
  9346 ;;		On exit  : B00/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9349 ;;      Params:         0       3       0       0       0
  9350 ;;      Locals:         0       5       0       0       0
  9351 ;;      Temps:          0       0       0       0       0
  9352 ;;      Totals:         0       8       0       0       0
  9353 ;;Total ram usage:        8 bytes
  9354 ;; Hardware stack levels used:    1
  9355 ;; Hardware stack levels required when called:    2
  9356 ;; This function calls:
  9357 ;;		_EEPROM_Read_Byte
  9358 ;; This function is called by:
  9359 ;;		_main
  9360 ;;		_Decodify_Command
  9361 ;;		_Load_Work
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           
  9366                           ;psect for function _EEPROM_Read_Integer
  9367  0EE9                     _EEPROM_Read_Integer:	
  9368                           
  9369                           ;incstack = 0
  9370                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9371                           ;EEPROM_Read_Integer@addr stored from wreg
  9372  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  9373  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  9374  0EEB  00A6               	movwf	EEPROM_Read_Integer@addr
  9375                           
  9376                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
  9377  0EEC  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
  9378  0EED  00A7               	movwf	EEPROM_Read_Integer@ptr
  9379                           
  9380                           ;eeprom.c: 87:       for (i=0;i<2;i++)
  9381  0EEE  01AA               	clrf	EEPROM_Read_Integer@i
  9382  0EEF                     l6652:	
  9383                           
  9384                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
  9385  0EEF  0827               	movf	EEPROM_Read_Integer@ptr,w
  9386  0EF0  0084               	movwf	4
  9387  0EF1  0826               	movf	EEPROM_Read_Integer@addr,w
  9388  0EF2  26C8  120A  158A   	fcall	_EEPROM_Read_Byte
  9389  0EF5  1383               	bcf	3,7	;select IRP bank0
  9390  0EF6  0080               	movwf	0
  9391  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  9392  0EF8  3002               	movlw	2
  9393  0EF9  0AA6               	incf	EEPROM_Read_Integer@addr,f
  9394  0EFA  0AA7               	incf	EEPROM_Read_Integer@ptr,f
  9395  0EFB  0AAA               	incf	EEPROM_Read_Integer@i,f
  9396  0EFC  022A               	subwf	EEPROM_Read_Integer@i,w
  9397  0EFD  1C03               	skipc
  9398  0EFE  2EEF               	goto	l6652
  9399                           
  9400                           ;eeprom.c: 89:       return result;
  9401  0EFF  0829               	movf	EEPROM_Read_Integer@result+1,w
  9402  0F00  00A4               	movwf	?_EEPROM_Read_Integer+1
  9403  0F01  0828               	movf	EEPROM_Read_Integer@result,w
  9404  0F02  00A3               	movwf	?_EEPROM_Read_Integer
  9405  0F03  0008               	return
  9406  0F04                     __end_of_EEPROM_Read_Integer:	
  9407  0F04                     __ptext37:	
  9408 ;; *************** function _USART_put_int *****************
  9409 ;; Defined at:
  9410 ;;		line 138 in file "usart.c"
  9411 ;; Parameters:    Size  Location     Type
  9412 ;;  value           2   10[BANK0 ] int 
  9413 ;; Auto vars:     Size  Location     Type
  9414 ;;  dado            1   12[BANK0 ] PTR unsigned char 
  9415 ;;		 -> USART_put_int@value(2), 
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  1    wreg      void 
  9418 ;; Registers used:
  9419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9420 ;; Tracked objects:
  9421 ;;		On entry : 300/0
  9422 ;;		On exit  : 300/100
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9425 ;;      Params:         0       2       0       0       0
  9426 ;;      Locals:         0       1       0       0       0
  9427 ;;      Temps:          0       0       0       0       0
  9428 ;;      Totals:         0       3       0       0       0
  9429 ;;Total ram usage:        3 bytes
  9430 ;; Hardware stack levels used:    1
  9431 ;; Hardware stack levels required when called:    2
  9432 ;; This function calls:
  9433 ;;		_USART_putc
  9434 ;; This function is called by:
  9435 ;;		_Decodify_Command
  9436 ;;		_PROCULUS_Control_Register_Write
  9437 ;;		_PROCULUS_VP_Write
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441                           
  9442                           ;psect for function _USART_put_int
  9443  0F04                     _USART_put_int:	
  9444  0F04                     l6398:	
  9445                           ;incstack = 0
  9446                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9447                           
  9448                           
  9449                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
  9450  0F04  302A               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9451  0F05  00AC               	movwf	USART_put_int@dado
  9452                           
  9453                           ;usart.c: 141:      USART_putc(*(dado+1));
  9454  0F06  0A2C               	incf	USART_put_int@dado,w
  9455  0F07  0084               	movwf	4
  9456  0F08  1383               	bcf	3,7	;select IRP bank0
  9457  0F09  0800               	movf	0,w
  9458  0F0A  2587  120A  158A   	fcall	_USART_putc
  9459                           
  9460                           ;usart.c: 142:      USART_putc(*dado);
  9461  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  9462  0F0E  082C               	movf	USART_put_int@dado,w
  9463  0F0F  0084               	movwf	4
  9464  0F10  1383               	bcf	3,7	;select IRP bank0
  9465  0F11  0800               	movf	0,w
  9466  0F12  2D87               	ljmp	_USART_putc
  9467  0F13                     __end_of_USART_put_int:	
  9468  0F13                     __ptext25:	
  9469 ;; *************** function _Send_Reply_OK *****************
  9470 ;; Defined at:
  9471 ;;		line 658 in file "SlaveLiofilizadorVer1.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;		None
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;		None
  9476 ;; Return value:  Size  Location     Type
  9477 ;;                  1    wreg      void 
  9478 ;; Registers used:
  9479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9480 ;; Tracked objects:
  9481 ;;		On entry : 100/100
  9482 ;;		On exit  : 300/100
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9485 ;;      Params:         0       0       0       0       0
  9486 ;;      Locals:         0       0       0       0       0
  9487 ;;      Temps:          0       0       0       0       0
  9488 ;;      Totals:         0       0       0       0       0
  9489 ;;Total ram usage:        0 bytes
  9490 ;; Hardware stack levels used:    1
  9491 ;; Hardware stack levels required when called:    3
  9492 ;; This function calls:
  9493 ;;		_USART_put_string
  9494 ;; This function is called by:
  9495 ;;		_Decodify_Command
  9496 ;; This function uses a non-reentrant model
  9497 ;;
  9498                           
  9499                           
  9500                           ;psect for function _Send_Reply_OK
  9501  0F13                     _Send_Reply_OK:	
  9502  0F13                     l7166:	
  9503                           ;incstack = 0
  9504                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9505                           
  9506                           
  9507                           ;SlaveLiofilizadorVer1.c: 659:      USART_put_string("OK");
  9508  0F13  3034               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  9509  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  9510  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  9511  0F16  00A1               	movwf	USART_put_string@vetor
  9512  0F17  3080               	movlw	128
  9513  0F18  00A2               	movwf	USART_put_string@vetor+1
  9514  0F19  2DC5               	ljmp	l6668
  9515  0F1A                     __end_of_Send_Reply_OK:	
  9516  0F1A                     PL6:	
  9517  0F1A  0821               	movf	?__Umul8_16+1,w
  9518  0F1B  00ED               	movwf	___flmul@temp+1
  9519  0F1C  0820               	movf	?__Umul8_16,w
  9520  0F1D  00EC               	movwf	___flmul@temp
  9521  0F1E  00DD               	movwf	??___flmul
  9522  0F1F  086D               	movf	___flmul@temp+1,w
  9523  0F20  00DE               	movwf	??___flmul+1
  9524  0F21  01DF               	clrf	??___flmul+2
  9525  0F22  01E0               	clrf	??___flmul+3
  9526  0F23  085D               	movf	??___flmul,w
  9527  0F24  07E4               	addwf	___flmul@grs,f
  9528  0F25  085E               	movf	??___flmul+1,w
  9529  0F26  1103               	clrz
  9530  0F27  1803               	skipnc
  9531  0F28  3E01               	addlw	1
  9532  0F29  1D03               	btfss	3,2
  9533  0F2A  07E5               	addwf	___flmul@grs+1,f
  9534  0F2B  085F               	movf	??___flmul+2,w
  9535  0F2C  1103               	clrz
  9536  0F2D  1803               	skipnc
  9537  0F2E  3E01               	addlw	1
  9538  0F2F  1D03               	btfss	3,2
  9539  0F30  07E6               	addwf	___flmul@grs+2,f
  9540  0F31  0860               	movf	??___flmul+3,w
  9541  0F32  1103               	clrz
  9542  0F33  0008               	return
  9543  0F34                     __end_ofPL6:	
  9544  0F34                     PL8:	
  9545  0F34  00ED               	movwf	___flmul@temp+1
  9546  0F35  0820               	movf	?__Umul8_16,w
  9547  0F36  00EC               	movwf	___flmul@temp
  9548  0F37  00DD               	movwf	??___flmul
  9549  0F38  086D               	movf	___flmul@temp+1,w
  9550  0F39  00DE               	movwf	??___flmul+1
  9551  0F3A  01DF               	clrf	??___flmul+2
  9552  0F3B  01E0               	clrf	??___flmul+3
  9553  0F3C  0008               	return
  9554  0F3D                     __end_ofPL8:	
  9555  0F3D                     PL12:	
  9556  0F3D  085D               	movf	??___flmul,w
  9557  0F3E  07E8               	addwf	___flmul@prod,f
  9558  0F3F  085E               	movf	??___flmul+1,w
  9559  0F40  1103               	clrz
  9560  0F41  1803               	skipnc
  9561  0F42  3E01               	addlw	1
  9562  0F43  1D03               	btfss	3,2
  9563  0F44  07E9               	addwf	___flmul@prod+1,f
  9564  0F45  085F               	movf	??___flmul+2,w
  9565  0F46  1103               	clrz
  9566  0F47  1803               	skipnc
  9567  0F48  3E01               	addlw	1
  9568  0F49  1D03               	btfss	3,2
  9569  0F4A  07EA               	addwf	___flmul@prod+2,f
  9570  0F4B  0860               	movf	??___flmul+3,w
  9571  0F4C  1103               	clrz
  9572  0F4D  0008               	return
  9573  0F4E                     __end_ofPL12:	
  9574  0F4E                     PL14:	
  9575  0F4E  0823               	movf	?_EEPROM_Read_Integer,w
  9576  0F4F  1683               	bsf	3,5	;RP0=1, select bank1
  9577  0F50  00B9               	movwf	??_Load_Work^(0+128)
  9578  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  9579  0F52  0824               	movf	?_EEPROM_Read_Integer+1,w
  9580  0F53  1683               	bsf	3,5	;RP0=1, select bank1
  9581  0F54  00BA               	movwf	(??_Load_Work^(0+128)+1)
  9582  0F55  01BB               	clrf	(??_Load_Work^(0+128)+2)
  9583  0F56  01BC               	clrf	(??_Load_Work^(0+128)+3)
  9584  0F57  083C               	movf	(??_Load_Work+3)^(0+128),w
  9585  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  9586  0F59  00AE               	movwf	___xxtofl@val+3
  9587  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  9588  0F5B  083B               	movf	(??_Load_Work+2)^(0+128),w
  9589  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  9590  0F5D  00AD               	movwf	___xxtofl@val+2
  9591  0F5E  1683               	bsf	3,5	;RP0=1, select bank1
  9592  0F5F  083A               	movf	(??_Load_Work+1)^(0+128),w
  9593  0F60  1283               	bcf	3,5	;RP0=0, select bank0
  9594  0F61  00AC               	movwf	___xxtofl@val+1
  9595  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  9596  0F63  0839               	movf	??_Load_Work^(0+128),w
  9597  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  9598  0F65  00AB               	movwf	___xxtofl@val
  9599  0F66  3400               	retlw	0
  9600  0F67                     __end_ofPL14:	
  9601  0F67                     PL16:	
  9602  0F67  0821               	movf	?__Umul8_16+1,w
  9603  0F68  00ED               	movwf	___flmul@temp+1
  9604  0F69  0820               	movf	?__Umul8_16,w
  9605  0F6A  00EC               	movwf	___flmul@temp
  9606  0F6B  07E4               	addwf	___flmul@grs,f
  9607  0F6C  3001               	movlw	1
  9608  0F6D  1803               	skipnc
  9609  0F6E  07E5               	addwf	___flmul@grs+1,f
  9610  0F6F  1803               	skipnc
  9611  0F70  07E6               	addwf	___flmul@grs+2,f
  9612  0F71  1803               	skipnc
  9613  0F72  07E7               	addwf	___flmul@grs+3,f
  9614  0F73  086D               	movf	___flmul@temp+1,w
  9615  0F74  07E8               	addwf	___flmul@prod,f
  9616  0F75  3401               	retlw	1
  9617  0F76                     __end_ofPL16:	
  9618  0F76                     PL22:	
  9619  0F76  1803               	skipnc
  9620  0F77  07E9               	addwf	___flmul@prod+1,f
  9621  0F78  1803               	skipnc
  9622  0F79  07EA               	addwf	___flmul@prod+2,f
  9623  0F7A  1803               	skipnc
  9624  0F7B  07EB               	addwf	___flmul@prod+3,f
  9625  0F7C  0866               	movf	___flmul@grs+2,w
  9626  0F7D  00E7               	movwf	___flmul@grs+3
  9627  0F7E  0865               	movf	___flmul@grs+1,w
  9628  0F7F  00E6               	movwf	___flmul@grs+2
  9629  0F80  0864               	movf	___flmul@grs,w
  9630  0F81  00E5               	movwf	___flmul@grs+1
  9631  0F82  01E4               	clrf	___flmul@grs
  9632  0F83  0008               	return
  9633  0F84                     __end_ofPL22:	
  9634  0F84                     PL46:	
  9635  0F84  3037               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  9636  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  9637  0F86  00A0               	movwf	strcat@from
  9638  0F87  3080               	movlw	128
  9639  0F88  00A1               	movwf	strcat@from+1
  9640  0F89  34BD               	retlw	(low (_texto| (0+256)))& (0+255)
  9641  0F8A                     __end_ofPL46:	
  9642  0F8A                     PL56:	
  9643  0F8A  1803               	skipnc
  9644  0F8B  3E01               	addlw	1
  9645  0F8C  1D03               	btfss	3,2
  9646  0F8D  07EB               	addwf	___flmul@prod+3,f
  9647  0F8E  0857               	movf	___flmul@b+2,w
  9648  0F8F  00A0               	movwf	__Umul8_16@multiplicand
  9649  0F90  0008               	return
  9650  0F91                     __end_ofPL56:	
  9651  0F91                     PL66:	
  9652  0F91  3039               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  9653  0F92  00A0               	movwf	strcat@from
  9654  0F93  3080               	movlw	128
  9655  0F94  00A1               	movwf	strcat@from+1
  9656  0F95  34BD               	retlw	(low (_texto| (0+256)))& (0+255)
  9657  0F96                     __end_ofPL66:	
  9658  0F96                     PL70:	
  9659  0F96  30BD               	movlw	(low (_texto| (0+256)))& (0+255)
  9660  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  9661  0F98  00A1               	movwf	USART_put_string@vetor
  9662  0F99  3001               	movlw	1
  9663  0F9A  00A2               	movwf	USART_put_string@vetor+1
  9664  0F9B  0008               	return
  9665  0F9C                     __end_ofPL70:	
  9666  0F9C                     __ptext33:	
  9667 ;; *************** function _PROCULUS_Show_Screen *****************
  9668 ;; Defined at:
  9669 ;;		line 243 in file "proculus.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  screen          2   17[BANK0 ] unsigned int 
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;  vetor           3   19[BANK0 ] unsigned char [3]
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      void 
  9676 ;; Registers used:
  9677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9678 ;; Tracked objects:
  9679 ;;		On entry : 300/0
  9680 ;;		On exit  : 300/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9683 ;;      Params:         0       2       0       0       0
  9684 ;;      Locals:         0       3       0       0       0
  9685 ;;      Temps:          0       0       0       0       0
  9686 ;;      Totals:         0       5       0       0       0
  9687 ;;Total ram usage:        5 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:    4
  9690 ;; This function calls:
  9691 ;;		_PROCULUS_Control_Register_Write
  9692 ;; This function is called by:
  9693 ;;		_Decodify_Command
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           
  9698                           ;psect for function _PROCULUS_Show_Screen
  9699  0F9C                     _PROCULUS_Show_Screen:	
  9700                           
  9701                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9702                           
  9703                           ;incstack = 0
  9704                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9705  0F9C  3003               	movlw	3
  9706  0F9D  00B3               	movwf	PROCULUS_Show_Screen@vetor
  9707                           
  9708                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9709  0F9E  0832               	movf	PROCULUS_Show_Screen@screen+1,w
  9710  0F9F  00B4               	movwf	PROCULUS_Show_Screen@vetor+1
  9711                           
  9712                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9713  0FA0  0831               	movf	PROCULUS_Show_Screen@screen,w
  9714  0FA1  00B5               	movwf	PROCULUS_Show_Screen@vetor+2
  9715                           
  9716                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9717  0FA2  3003               	movlw	3
  9718  0FA3  00AD               	movwf	PROCULUS_Control_Register_Write@size
  9719  0FA4  3033               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9720  0FA5  2FBE               	ljmp	_PROCULUS_Control_Register_Write
  9721  0FA6                     __end_of_PROCULUS_Show_Screen:	
  9722  0FA6                     __ptext34:	
  9723 ;; *************** function _PROCULUS_Buzzer *****************
  9724 ;; Defined at:
  9725 ;;		line 223 in file "proculus.c"
  9726 ;; Parameters:    Size  Location     Type
  9727 ;;  time_ms_x_10    2   17[BANK0 ] unsigned int 
  9728 ;; Auto vars:     Size  Location     Type
  9729 ;;  vetor           2   19[BANK0 ] unsigned char [2]
  9730 ;; Return value:  Size  Location     Type
  9731 ;;                  1    wreg      void 
  9732 ;; Registers used:
  9733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9734 ;; Tracked objects:
  9735 ;;		On entry : 300/0
  9736 ;;		On exit  : 300/0
  9737 ;;		Unchanged: 0/0
  9738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9739 ;;      Params:         0       2       0       0       0
  9740 ;;      Locals:         0       2       0       0       0
  9741 ;;      Temps:          0       0       0       0       0
  9742 ;;      Totals:         0       4       0       0       0
  9743 ;;Total ram usage:        4 bytes
  9744 ;; Hardware stack levels used:    1
  9745 ;; Hardware stack levels required when called:    4
  9746 ;; This function calls:
  9747 ;;		_PROCULUS_Control_Register_Write
  9748 ;;		___lwdiv
  9749 ;; This function is called by:
  9750 ;;		_Decodify_Command
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           
  9755                           ;psect for function _PROCULUS_Buzzer
  9756  0FA6                     _PROCULUS_Buzzer:	
  9757                           
  9758                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  9759                           
  9760                           ;incstack = 0
  9761                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9762  0FA6  300A               	movlw	10
  9763  0FA7  00A0               	movwf	___lwdiv@divisor
  9764  0FA8  01A1               	clrf	___lwdiv@divisor+1
  9765  0FA9  0832               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  9766  0FAA  00A3               	movwf	___lwdiv@dividend+1
  9767  0FAB  0831               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9768  0FAC  00A2               	movwf	___lwdiv@dividend
  9769  0FAD  160A  118A  2654  120A  158A  	fcall	___lwdiv
  9770  0FB2  0821               	movf	?___lwdiv+1,w
  9771  0FB3  00B2               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  9772  0FB4  0820               	movf	?___lwdiv,w
  9773  0FB5  00B1               	movwf	PROCULUS_Buzzer@time_ms_x_10
  9774                           
  9775                           ;proculus.c: 226:      vetor[0]=0x02;
  9776  0FB6  3002               	movlw	2
  9777  0FB7  00B3               	movwf	PROCULUS_Buzzer@vetor
  9778                           
  9779                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  9780  0FB8  0831               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9781  0FB9  00B4               	movwf	PROCULUS_Buzzer@vetor+1
  9782                           
  9783                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9784  0FBA  3002               	movlw	2
  9785  0FBB  00AD               	movwf	PROCULUS_Control_Register_Write@size
  9786  0FBC  3033               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9787  0FBD  2FBE               	ljmp	_PROCULUS_Control_Register_Write
  9788  0FBE                     __end_of_PROCULUS_Buzzer:	
  9789  0FBE                     __ptext36:	
  9790 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9791 ;; Defined at:
  9792 ;;		line 13 in file "proculus.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;  vetor           1    wreg     PTR unsigned char 
  9795 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9796 ;;  size            1   13[BANK0 ] unsigned char 
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;  vetor           1   15[BANK0 ] PTR unsigned char 
  9799 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9800 ;;  i               1   16[BANK0 ] unsigned char 
  9801 ;; Return value:  Size  Location     Type
  9802 ;;                  1    wreg      void 
  9803 ;; Registers used:
  9804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9805 ;; Tracked objects:
  9806 ;;		On entry : 300/0
  9807 ;;		On exit  : 300/0
  9808 ;;		Unchanged: 0/0
  9809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9810 ;;      Params:         0       1       0       0       0
  9811 ;;      Locals:         0       2       0       0       0
  9812 ;;      Temps:          0       1       0       0       0
  9813 ;;      Totals:         0       4       0       0       0
  9814 ;;Total ram usage:        4 bytes
  9815 ;; Hardware stack levels used:    1
  9816 ;; Hardware stack levels required when called:    3
  9817 ;; This function calls:
  9818 ;;		_PROCULUS_Delay
  9819 ;;		_USART_put_int
  9820 ;;		_USART_putc
  9821 ;; This function is called by:
  9822 ;;		_PROCULUS_Buzzer
  9823 ;;		_PROCULUS_Show_Screen
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827                           
  9828                           ;psect for function _PROCULUS_Control_Register_Write
  9829  0FBE                     _PROCULUS_Control_Register_Write:	
  9830                           
  9831                           ;incstack = 0
  9832                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  9833                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9834  0FBE  00AF               	movwf	PROCULUS_Control_Register_Write@vetor
  9835                           
  9836                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9837  0FBF  30A5               	movlw	165
  9838  0FC0  00AA               	movwf	USART_put_int@value
  9839  0FC1  305A               	movlw	90
  9840  0FC2  00AB               	movwf	USART_put_int@value+1
  9841  0FC3  2704  120A  158A   	fcall	_USART_put_int
  9842                           
  9843                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9844  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  9845  0FC7  082D               	movf	PROCULUS_Control_Register_Write@size,w
  9846  0FC8  3E01               	addlw	1
  9847  0FC9  2587  120A  158A   	fcall	_USART_putc
  9848                           
  9849                           ;proculus.c: 16:      USART_putc(0x80);
  9850  0FCC  3080               	movlw	128
  9851  0FCD  2587  120A  158A   	fcall	_USART_putc
  9852                           
  9853                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9854  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  9855  0FD1  01B0               	clrf	PROCULUS_Control_Register_Write@i
  9856  0FD2                     l6852:	
  9857  0FD2  082D               	movf	PROCULUS_Control_Register_Write@size,w
  9858  0FD3  0230               	subwf	PROCULUS_Control_Register_Write@i,w
  9859  0FD4  1803               	btfsc	3,0
  9860  0FD5  2FE2               	goto	l6854
  9861                           
  9862                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9863  0FD6  0830               	movf	PROCULUS_Control_Register_Write@i,w
  9864  0FD7  072F               	addwf	PROCULUS_Control_Register_Write@vetor,w
  9865  0FD8  00AE               	movwf	??_PROCULUS_Control_Register_Write
  9866  0FD9  0084               	movwf	4
  9867  0FDA  1383               	bcf	3,7	;select IRP bank0
  9868  0FDB  0800               	movf	0,w
  9869  0FDC  2587  120A  158A   	fcall	_USART_putc
  9870  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  9871  0FE0  0AB0               	incf	PROCULUS_Control_Register_Write@i,f
  9872  0FE1  2FD2               	goto	l6852
  9873  0FE2                     l6854:	
  9874                           
  9875                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9876  0FE2  01A0               	clrf	PROCULUS_Delay@tempo_ms
  9877  0FE3  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  9878  0FE4  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  9879  0FE5  2FE6               	ljmp	l6500
  9880  0FE6                     __end_of_PROCULUS_Control_Register_Write:	
  9881  0FE6                     __ptext39:	
  9882 ;; *************** function _PROCULUS_Delay *****************
  9883 ;; Defined at:
  9884 ;;		line 267 in file "proculus.c"
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;  i               2    4[BANK0 ] unsigned int 
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  1    wreg      void 
  9891 ;; Registers used:
  9892 ;;		wreg, status,2, status,0
  9893 ;; Tracked objects:
  9894 ;;		On entry : 300/800
  9895 ;;		On exit  : 300/0
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9898 ;;      Params:         0       2       0       0       0
  9899 ;;      Locals:         0       2       0       0       0
  9900 ;;      Temps:          0       2       0       0       0
  9901 ;;      Totals:         0       6       0       0       0
  9902 ;;Total ram usage:        6 bytes
  9903 ;; Hardware stack levels used:    1
  9904 ;; Hardware stack levels required when called:    1
  9905 ;; This function calls:
  9906 ;;		Nothing
  9907 ;; This function is called by:
  9908 ;;		_PROCULUS_Control_Register_Write
  9909 ;;		_PROCULUS_VP_Write
  9910 ;; This function uses a non-reentrant model
  9911 ;;
  9912                           
  9913                           
  9914                           ;psect for function _PROCULUS_Delay
  9915  0FE6                     _PROCULUS_Delay:	
  9916  0FE6                     l6500:	
  9917                           ;incstack = 0
  9918                           ; Regs used in _PROCULUS_Delay: [wreg+status,2+status,0]
  9919                           
  9920                           
  9921                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9922  0FE6  01A4               	clrf	PROCULUS_Delay@i
  9923  0FE7  01A5               	clrf	PROCULUS_Delay@i+1
  9924  0FE8                     l6506:	
  9925  0FE8  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9926  0FE9  0225               	subwf	PROCULUS_Delay@i+1,w
  9927  0FEA  1D03               	skipz
  9928  0FEB  2FEE               	goto	u6025
  9929  0FEC  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9930  0FED  0224               	subwf	PROCULUS_Delay@i,w
  9931  0FEE                     u6025:	
  9932  0FEE  1803               	btfsc	3,0
  9933  0FEF  0008               	return
  9934                           
  9935                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9936  0FF0  3003               	movlw	3
  9937  0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  9938  0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  9939  0FF3  00A3               	movwf	??_PROCULUS_Delay+1
  9940  0FF4  3097               	movlw	151
  9941  0FF5  00A2               	movwf	??_PROCULUS_Delay
  9942  0FF6                     u7677:	
  9943  0FF6  0BA2               	decfsz	??_PROCULUS_Delay,f
  9944  0FF7  2FF6               	goto	u7677
  9945  0FF8  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9946  0FF9  2FF6               	goto	u7677
  9947                           
  9948                           ;proculus.c: 270:     }
  9949  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  9950  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  9951  0FFC  0AA4               	incf	PROCULUS_Delay@i,f
  9952  0FFD  1903               	skipnz
  9953  0FFE  0AA5               	incf	PROCULUS_Delay@i+1,f
  9954  0FFF  2FE8               	goto	l6506
  9955  1000                     __end_of_PROCULUS_Delay:	
  9956                           
  9957                           	psect	text44
  9958  1E21                     __ptext44:	
  9959 ;; *************** function _EEPROM_Write_Integer *****************
  9960 ;; Defined at:
  9961 ;;		line 68 in file "eeprom.c"
  9962 ;; Parameters:    Size  Location     Type
  9963 ;;  addr            1    wreg     unsigned char 
  9964 ;;  dado            2    5[BANK0 ] unsigned int 
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;  addr            1    9[BANK0 ] unsigned char 
  9967 ;;  i               1   11[BANK0 ] unsigned char 
  9968 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
  9969 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9970 ;;  addr_memo       1    0        unsigned char 
  9971 ;; Return value:  Size  Location     Type
  9972 ;;                  1    wreg      void 
  9973 ;; Registers used:
  9974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9975 ;; Tracked objects:
  9976 ;;		On entry : 200/0
  9977 ;;		On exit  : 0/0
  9978 ;;		Unchanged: 0/0
  9979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9980 ;;      Params:         0       2       0       0       0
  9981 ;;      Locals:         0       3       0       0       0
  9982 ;;      Temps:          0       2       0       0       0
  9983 ;;      Totals:         0       7       0       0       0
  9984 ;;Total ram usage:        7 bytes
  9985 ;; Hardware stack levels used:    1
  9986 ;; Hardware stack levels required when called:    2
  9987 ;; This function calls:
  9988 ;;		_EEPROM_Write_Byte
  9989 ;; This function is called by:
  9990 ;;		_main
  9991 ;;		_Decodify_Command
  9992 ;; This function uses a non-reentrant model
  9993 ;;
  9994                           
  9995                           
  9996                           ;psect for function _EEPROM_Write_Integer
  9997  1E21                     _EEPROM_Write_Integer:	
  9998                           
  9999                           ;incstack = 0
 10000                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10001                           ;EEPROM_Write_Integer@addr stored from wreg
 10002  1E21  1283               	bcf	3,5	;RP0=0, select bank0
 10003  1E22  00A9               	movwf	EEPROM_Write_Integer@addr
 10004                           
 10005                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
 10006  1E23  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
 10007  1E24  00AA               	movwf	EEPROM_Write_Integer@ptr
 10008                           
 10009                           ;eeprom.c: 75:       for (i=0;i<2;i++)
 10010  1E25  01AB               	clrf	EEPROM_Write_Integer@i
 10011  1E26                     l7106:	
 10012                           
 10013                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
 10014  1E26  082A               	movf	EEPROM_Write_Integer@ptr,w
 10015  1E27  0084               	movwf	4
 10016  1E28  1383               	bcf	3,7	;select IRP bank0
 10017  1E29  0800               	movf	0,w
 10018  1E2A  00A0               	movwf	EEPROM_Write_Byte@dado
 10019  1E2B  0829               	movf	EEPROM_Write_Integer@addr,w
 10020  1E2C  265C  160A  158A   	fcall	_EEPROM_Write_Byte
 10021  1E2F  1283               	bcf	3,5	;RP0=0, select bank0
 10022  1E30  1303               	bcf	3,6	;RP1=0, select bank0
 10023  1E31  3002               	movlw	2
 10024  1E32  0AAA               	incf	EEPROM_Write_Integer@ptr,f
 10025  1E33  0AA9               	incf	EEPROM_Write_Integer@addr,f
 10026  1E34  0AAB               	incf	EEPROM_Write_Integer@i,f
 10027  1E35  022B               	subwf	EEPROM_Write_Integer@i,w
 10028  1E36  1C03               	skipc
 10029  1E37  2E26               	goto	l7106
 10030                           
 10031                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
 10032  1E38  304E               	movlw	78
 10033  1E39  1283               	bcf	3,5	;RP0=0, select bank0
 10034  1E3A  1303               	bcf	3,6	;RP1=0, select bank0
 10035  1E3B  00A8               	movwf	??_EEPROM_Write_Integer+1
 10036  1E3C  30EA               	movlw	234
 10037  1E3D  00A7               	movwf	??_EEPROM_Write_Integer
 10038  1E3E                     u7687:	
 10039  1E3E  0BA7               	decfsz	??_EEPROM_Write_Integer,f
 10040  1E3F  2E3E               	goto	u7687
 10041  1E40  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
 10042  1E41  2E3E               	goto	u7687
 10043  1E42  0000               	nop
 10044  1E43  0008               	return
 10045  1E44                     __end_of_EEPROM_Write_Integer:	
 10046  1E44                     __ptext43:	
 10047 ;; *************** function _EEPROM_Write_String *****************
 10048 ;; Defined at:
 10049 ;;		line 97 in file "eeprom.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;  addr            1    wreg     unsigned char 
 10052 ;;  dado            1    5[BANK0 ] PTR unsigned char 
 10053 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10054 ;; Auto vars:     Size  Location     Type
 10055 ;;  addr            1    6[BANK0 ] unsigned char 
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  1    wreg      void 
 10058 ;; Registers used:
 10059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10060 ;; Tracked objects:
 10061 ;;		On entry : 300/300
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10065 ;;      Params:         0       1       0       0       0
 10066 ;;      Locals:         0       1       0       0       0
 10067 ;;      Temps:          0       0       0       0       0
 10068 ;;      Totals:         0       2       0       0       0
 10069 ;;Total ram usage:        2 bytes
 10070 ;; Hardware stack levels used:    1
 10071 ;; Hardware stack levels required when called:    2
 10072 ;; This function calls:
 10073 ;;		_EEPROM_Write_Byte
 10074 ;; This function is called by:
 10075 ;;		_Decodify_Command
 10076 ;; This function uses a non-reentrant model
 10077 ;;
 10078                           
 10079                           
 10080                           ;psect for function _EEPROM_Write_String
 10081  1E44                     _EEPROM_Write_String:	
 10082                           
 10083                           ;incstack = 0
 10084                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10085                           ;EEPROM_Write_String@addr stored from wreg
 10086  1E44  1283               	bcf	3,5	;RP0=0, select bank0
 10087  1E45  1303               	bcf	3,6	;RP1=0, select bank0
 10088  1E46  00A6               	movwf	EEPROM_Write_String@addr
 10089  1E47                     l7176:	
 10090                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
 10091                           
 10092                           
 10093                           ;eeprom.c: 99:     while(*dado)
 10094  1E47  0825               	movf	EEPROM_Write_String@dado,w
 10095  1E48  0084               	movwf	4
 10096  1E49  1783               	bsf	3,7	;select IRP bank2
 10097  1E4A  0800               	movf	0,w
 10098  1E4B  1903               	btfsc	3,2
 10099  1E4C  2E58               	goto	l7178
 10100                           
 10101                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
 10102  1E4D  2697  160A  158A   	fcall	PL60	;call to abstracted procedure
 10103  1E50  265C  160A  158A   	fcall	_EEPROM_Write_Byte
 10104                           
 10105                           ;eeprom.c: 102:      addr++;
 10106  1E53  1283               	bcf	3,5	;RP0=0, select bank0
 10107  1E54  1303               	bcf	3,6	;RP1=0, select bank0
 10108  1E55  0AA6               	incf	EEPROM_Write_String@addr,f
 10109                           
 10110                           ;eeprom.c: 103:      dado++;
 10111  1E56  0AA5               	incf	EEPROM_Write_String@dado,f
 10112  1E57  2E47               	goto	l7176
 10113  1E58                     l7178:	
 10114                           
 10115                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
 10116  1E58  2697  160A  158A   	fcall	PL60	;call to abstracted procedure
 10117  1E5B  2E5C               	ljmp	_EEPROM_Write_Byte
 10118  1E5C                     __end_of_EEPROM_Write_String:	
 10119  1E5C                     __ptext45:	
 10120 ;; *************** function _EEPROM_Write_Byte *****************
 10121 ;; Defined at:
 10122 ;;		line 21 in file "eeprom.c"
 10123 ;; Parameters:    Size  Location     Type
 10124 ;;  addr            1    wreg     unsigned char 
 10125 ;;  dado            1    0[BANK0 ] unsigned char 
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;  addr            1    3[BANK0 ] unsigned char 
 10128 ;;  last_GIE        1    4[BANK0 ] unsigned char 
 10129 ;; Return value:  Size  Location     Type
 10130 ;;                  1    wreg      void 
 10131 ;; Registers used:
 10132 ;;		wreg, status,2, status,0
 10133 ;; Tracked objects:
 10134 ;;		On entry : 0/300
 10135 ;;		On exit  : 0/0
 10136 ;;		Unchanged: 0/0
 10137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10138 ;;      Params:         0       1       0       0       0
 10139 ;;      Locals:         0       2       0       0       0
 10140 ;;      Temps:          0       2       0       0       0
 10141 ;;      Totals:         0       5       0       0       0
 10142 ;;Total ram usage:        5 bytes
 10143 ;; Hardware stack levels used:    1
 10144 ;; Hardware stack levels required when called:    1
 10145 ;; This function calls:
 10146 ;;		Nothing
 10147 ;; This function is called by:
 10148 ;;		_Decodify_Command
 10149 ;;		_EEPROM_Write_Integer
 10150 ;;		_EEPROM_Write_String
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           
 10155                           ;psect for function _EEPROM_Write_Byte
 10156  1E5C                     _EEPROM_Write_Byte:	
 10157                           
 10158                           ;incstack = 0
 10159                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
 10160                           ;EEPROM_Write_Byte@addr stored from wreg
 10161  1E5C  1283               	bcf	3,5	;RP0=0, select bank0
 10162  1E5D  1303               	bcf	3,6	;RP1=0, select bank0
 10163  1E5E  00A3               	movwf	EEPROM_Write_Byte@addr
 10164                           
 10165                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
 10166  1E5F  3014               	movlw	20
 10167  1E60  1683               	bsf	3,5	;RP0=1, select bank3
 10168  1E61  1703               	bsf	3,6	;RP1=1, select bank3
 10169  1E62  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 10170  1E63  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 10171  1E64                     l474:	
 10172                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
 10173                           
 10174  1E64  188C               	btfsc	12,1	;volsfr
 10175  1E65  2E64               	goto	l474
 10176                           
 10177                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
 10178  1E66  1F8B               	btfss	11,7	;volatile
 10179  1E67  2E6D               	goto	l6682
 10180                           
 10181                           ;eeprom.c: 28:           last_GIE=1;
 10182  1E68  1283               	bcf	3,5	;RP0=0, select bank0
 10183  1E69  1303               	bcf	3,6	;RP1=0, select bank0
 10184  1E6A  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10185  1E6B  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
 10186  1E6C  2E70               	goto	l6684
 10187  1E6D                     l6682:	
 10188                           
 10189                           ;eeprom.c: 30:           last_GIE=0;
 10190  1E6D  1283               	bcf	3,5	;RP0=0, select bank0
 10191  1E6E  1303               	bcf	3,6	;RP1=0, select bank0
 10192  1E6F  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10193  1E70                     l6684:	
 10194                           
 10195                           ;eeprom.c: 32:        EEADR=addr;
 10196  1E70  0823               	movf	EEPROM_Write_Byte@addr,w
 10197  1E71  1703               	bsf	3,6	;RP1=1, select bank2
 10198  1E72  008D               	movwf	13	;volatile
 10199                           
 10200                           ;eeprom.c: 33:        EEDATA=dado;
 10201  1E73  1303               	bcf	3,6	;RP1=0, select bank0
 10202  1E74  0820               	movf	EEPROM_Write_Byte@dado,w
 10203  1E75  1703               	bsf	3,6	;RP1=1, select bank2
 10204  1E76  008C               	movwf	12	;volatile
 10205                           
 10206                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
 10207  1E77  1683               	bsf	3,5	;RP0=1, select bank3
 10208  1E78  138C               	bcf	12,7	;volsfr
 10209                           
 10210                           ;eeprom.c: 35:        EECON1bits.WREN=1;
 10211  1E79  150C               	bsf	12,2	;volsfr
 10212                           
 10213                           ;eeprom.c: 36:        INTCONbits.GIE=0;
 10214  1E7A  138B               	bcf	11,7	;volatile
 10215                           
 10216                           ;eeprom.c: 37:        EECON2=0x55;
 10217  1E7B  3055               	movlw	85
 10218  1E7C  008D               	movwf	13	;volsfr
 10219                           
 10220                           ;eeprom.c: 38:        EECON2=0xAA;
 10221  1E7D  30AA               	movlw	170
 10222  1E7E  008D               	movwf	13	;volsfr
 10223                           
 10224                           ;eeprom.c: 39:        EECON1bits.WR=1;
 10225  1E7F  148C               	bsf	12,1	;volsfr
 10226                           
 10227                           ;eeprom.c: 41:        if(last_GIE==1)
 10228  1E80  1283               	bcf	3,5	;RP0=0, select bank0
 10229  1E81  1303               	bcf	3,6	;RP1=0, select bank0
 10230  1E82  0324               	decf	EEPROM_Write_Byte@last_GIE,w
 10231  1E83  1D03               	btfss	3,2
 10232  1E84  2E87               	goto	l479
 10233                           
 10234                           ;eeprom.c: 42:           INTCONbits.GIE=1;
 10235  1E85  178B               	bsf	11,7	;volatile
 10236  1E86  2E88               	goto	l480
 10237  1E87                     l479:	
 10238                           ;eeprom.c: 43:        else
 10239                           
 10240                           
 10241                           ;eeprom.c: 44:           INTCONbits.GIE=0;
 10242  1E87  138B               	bcf	11,7	;volatile
 10243  1E88                     l480:	
 10244                           
 10245                           ;eeprom.c: 46:        EECON1bits.WREN=0;
 10246  1E88  1683               	bsf	3,5	;RP0=1, select bank3
 10247  1E89  1703               	bsf	3,6	;RP1=1, select bank3
 10248  1E8A  110C               	bcf	12,2	;volsfr
 10249                           
 10250                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
 10251  1E8B  304E               	movlw	78
 10252  1E8C  1283               	bcf	3,5	;RP0=0, select bank0
 10253  1E8D  1303               	bcf	3,6	;RP1=0, select bank0
 10254  1E8E  00A2               	movwf	??_EEPROM_Write_Byte+1
 10255  1E8F  30EA               	movlw	234
 10256  1E90  00A1               	movwf	??_EEPROM_Write_Byte
 10257  1E91                     u7697:	
 10258  1E91  0BA1               	decfsz	??_EEPROM_Write_Byte,f
 10259  1E92  2E91               	goto	u7697
 10260  1E93  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
 10261  1E94  2E91               	goto	u7697
 10262  1E95  0000               	nop
 10263  1E96  0008               	return
 10264  1E97                     __end_of_EEPROM_Write_Byte:	
 10265  1E97                     PL60:	
 10266  1E97  0825               	movf	EEPROM_Write_String@dado,w
 10267  1E98  0084               	movwf	4
 10268  1E99  0800               	movf	0,w
 10269  1E9A  00A0               	movwf	EEPROM_Write_Byte@dado
 10270  1E9B  0826               	movf	EEPROM_Write_String@addr,w
 10271  1E9C  0008               	return
 10272  1E9D                     __end_ofPL60:	
 10273                           
 10274                           	psect	text46
 10275  07E6                     __ptext46:	
 10276 ;; *************** function _EEPROM_Read_String *****************
 10277 ;; Defined at:
 10278 ;;		line 109 in file "eeprom.c"
 10279 ;; Parameters:    Size  Location     Type
 10280 ;;  addr            1    wreg     unsigned char 
 10281 ;;  dado            1    3[BANK0 ] PTR unsigned char 
 10282 ;;		 -> texto(16), 
 10283 ;; Auto vars:     Size  Location     Type
 10284 ;;  addr            1    4[BANK0 ] unsigned char 
 10285 ;;  c               1    5[BANK0 ] unsigned char 
 10286 ;; Return value:  Size  Location     Type
 10287 ;;                  1    wreg      void 
 10288 ;; Registers used:
 10289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10290 ;; Tracked objects:
 10291 ;;		On entry : 300/300
 10292 ;;		On exit  : B00/800
 10293 ;;		Unchanged: 0/0
 10294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10295 ;;      Params:         0       1       0       0       0
 10296 ;;      Locals:         0       2       0       0       0
 10297 ;;      Temps:          0       0       0       0       0
 10298 ;;      Totals:         0       3       0       0       0
 10299 ;;Total ram usage:        3 bytes
 10300 ;; Hardware stack levels used:    1
 10301 ;; Hardware stack levels required when called:    2
 10302 ;; This function calls:
 10303 ;;		_EEPROM_Read_Byte
 10304 ;; This function is called by:
 10305 ;;		_Decodify_Command
 10306 ;; This function uses a non-reentrant model
 10307 ;;
 10308                           
 10309                           
 10310                           ;psect for function _EEPROM_Read_String
 10311  07E6                     _EEPROM_Read_String:	
 10312                           
 10313                           ;incstack = 0
 10314                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10315                           ;EEPROM_Read_String@addr stored from wreg
 10316  07E6  1283               	bcf	3,5	;RP0=0, select bank0
 10317  07E7  1303               	bcf	3,6	;RP1=0, select bank0
 10318  07E8  00A4               	movwf	EEPROM_Read_String@addr
 10319  07E9                     l506:	
 10320                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 10321                           
 10322                           
 10323                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10324  07E9  0824               	movf	EEPROM_Read_String@addr,w
 10325  07EA  120A  158A  26C8  120A  118A  	fcall	_EEPROM_Read_Byte
 10326  07EF  1303               	bcf	3,6	;RP1=0, select bank0
 10327  07F0  00A5               	movwf	EEPROM_Read_String@c
 10328  07F1  0AA4               	incf	EEPROM_Read_String@addr,f
 10329                           
 10330                           ;eeprom.c: 114:         *(dado++)=c;
 10331  07F2  0823               	movf	EEPROM_Read_String@dado,w
 10332  07F3  0084               	movwf	4
 10333  07F4  0825               	movf	EEPROM_Read_String@c,w
 10334  07F5  1783               	bsf	3,7	;select IRP bank2
 10335  07F6  0080               	movwf	0
 10336  07F7  0AA3               	incf	EEPROM_Read_String@dado,f
 10337                           
 10338                           ;eeprom.c: 116:       }while(c);
 10339  07F8  0825               	movf	EEPROM_Read_String@c,w
 10340  07F9  1903               	btfsc	3,2
 10341  07FA  0008               	return
 10342  07FB  2FE9               	goto	l506
 10343  07FC                     __end_of_EEPROM_Read_String:	
 10344                           
 10345                           	psect	text49
 10346  1C43                     __ptext49:	
 10347 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 10348 ;; Defined at:
 10349 ;;		line 262 in file "EEPROM_24C1025.c"
 10350 ;; Parameters:    Size  Location     Type
 10351 ;;  chip_add        1    wreg     unsigned char 
 10352 ;;  mem_add         4   15[BANK0 ] unsigned long 
 10353 ;;  data            1   19[BANK0 ] unsigned char 
 10354 ;; Auto vars:     Size  Location     Type
 10355 ;;  chip_add        1   20[BANK0 ] unsigned char 
 10356 ;; Return value:  Size  Location     Type
 10357 ;;                  1    wreg      void 
 10358 ;; Registers used:
 10359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10360 ;; Tracked objects:
 10361 ;;		On entry : 300/300
 10362 ;;		On exit  : 0/0
 10363 ;;		Unchanged: 0/0
 10364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10365 ;;      Params:         0       5       0       0       0
 10366 ;;      Locals:         0       1       0       0       0
 10367 ;;      Temps:          0       0       0       0       0
 10368 ;;      Totals:         0       6       0       0       0
 10369 ;;Total ram usage:        6 bytes
 10370 ;; Hardware stack levels used:    1
 10371 ;; Hardware stack levels required when called:    4
 10372 ;; This function calls:
 10373 ;;		_EEPROM_24C1025_Write_Buffer
 10374 ;; This function is called by:
 10375 ;;		_Decodify_Command
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379                           
 10380                           ;psect for function _EEPROM_24C1025_Write_Byte
 10381  1C43                     _EEPROM_24C1025_Write_Byte:	
 10382                           
 10383                           ;incstack = 0
 10384                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10385                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 10386  1C43  1283               	bcf	3,5	;RP0=0, select bank0
 10387  1C44  1303               	bcf	3,6	;RP1=0, select bank0
 10388  1C45  00B4               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 10389                           
 10390                           ;EEPROM_24C1025.c: 263:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 10391  1C46  0832               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 10392  1C47  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10393  1C48  0831               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 10394  1C49  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10395  1C4A  0830               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 10396  1C4B  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10397  1C4C  082F               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 10398  1C4D  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10399  1C4E  3033               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 10400  1C4F  01A6               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 10401  1C50  0AA6               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 10402  1C51  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 10403  1C52  01A8               	clrf	EEPROM_24C1025_Write_Buffer@data+1
 10404  1C53  0834               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 10405  1C54  120A  118A  2ACA   	ljmp	_EEPROM_24C1025_Write_Buffer
 10406  1C57                     __end_of_EEPROM_24C1025_Write_Byte:	
 10407                           
 10408                           	psect	text52
 10409  0036                     __ptext52:	
 10410 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 10411 ;; Defined at:
 10412 ;;		line 267 in file "EEPROM_24C1025.c"
 10413 ;; Parameters:    Size  Location     Type
 10414 ;;  chip_add        1    wreg     unsigned char 
 10415 ;;  mem_add         4   17[BANK0 ] unsigned long 
 10416 ;; Auto vars:     Size  Location     Type
 10417 ;;  chip_add        1   21[BANK0 ] unsigned char 
 10418 ;;  data            1   22[BANK0 ] unsigned char 
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  1    wreg      unsigned char 
 10421 ;; Registers used:
 10422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10423 ;; Tracked objects:
 10424 ;;		On entry : 300/300
 10425 ;;		On exit  : 300/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10428 ;;      Params:         0       4       0       0       0
 10429 ;;      Locals:         0       2       0       0       0
 10430 ;;      Temps:          0       0       0       0       0
 10431 ;;      Totals:         0       6       0       0       0
 10432 ;;Total ram usage:        6 bytes
 10433 ;; Hardware stack levels used:    1
 10434 ;; Hardware stack levels required when called:    4
 10435 ;; This function calls:
 10436 ;;		_EEPROM_24C1025_Read_Buffer
 10437 ;; This function is called by:
 10438 ;;		_Decodify_Command
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           
 10443                           ;psect for function _EEPROM_24C1025_Read_Byte
 10444  0036                     _EEPROM_24C1025_Read_Byte:	
 10445                           
 10446                           ;incstack = 0
 10447                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10448                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 10449  0036  1283               	bcf	3,5	;RP0=0, select bank0
 10450  0037  1303               	bcf	3,6	;RP1=0, select bank0
 10451  0038  00B5               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 10452                           
 10453                           ;EEPROM_24C1025.c: 268:     char data;;EEPROM_24C1025.c: 269:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 10454  0039  0834               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 10455  003A  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10456  003B  0833               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 10457  003C  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10458  003D  0832               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 10459  003E  00A5               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10460  003F  0831               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 10461  0040  00A4               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10462  0041  3036               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 10463  0042  01A8               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 10464  0043  0AA8               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 10465  0044  00A9               	movwf	EEPROM_24C1025_Read_Buffer@data
 10466  0045  01AA               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 10467  0046  0835               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 10468  0047  21E7               	fcall	_EEPROM_24C1025_Read_Buffer
 10469                           
 10470                           ;EEPROM_24C1025.c: 270:     return data;
 10471  0048  1283               	bcf	3,5	;RP0=0, select bank0
 10472  0049  1303               	bcf	3,6	;RP1=0, select bank0
 10473  004A  0836               	movf	EEPROM_24C1025_Read_Byte@data,w
 10474  004B  0008               	return
 10475  004C                     __end_of_EEPROM_24C1025_Read_Byte:	
 10476  004C                     __ptext51:	
 10477 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 10478 ;; Defined at:
 10479 ;;		line 281 in file "EEPROM_24C1025.c"
 10480 ;; Parameters:    Size  Location     Type
 10481 ;;  chip_add        1    wreg     unsigned char 
 10482 ;;  mem_add         4   17[BANK0 ] unsigned long 
 10483 ;; Auto vars:     Size  Location     Type
 10484 ;;  chip_add        1   21[BANK0 ] unsigned char 
 10485 ;;  data            2   22[BANK0 ] unsigned char [2]
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  2   17[BANK0 ] unsigned int 
 10488 ;; Registers used:
 10489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10490 ;; Tracked objects:
 10491 ;;		On entry : 300/300
 10492 ;;		On exit  : 300/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10495 ;;      Params:         0       4       0       0       0
 10496 ;;      Locals:         0       3       0       0       0
 10497 ;;      Temps:          0       0       0       0       0
 10498 ;;      Totals:         0       7       0       0       0
 10499 ;;Total ram usage:        7 bytes
 10500 ;; Hardware stack levels used:    1
 10501 ;; Hardware stack levels required when called:    4
 10502 ;; This function calls:
 10503 ;;		_EEPROM_24C1025_Read_Buffer
 10504 ;; This function is called by:
 10505 ;;		_Decodify_Command
 10506 ;; This function uses a non-reentrant model
 10507 ;;
 10508                           
 10509                           
 10510                           ;psect for function _EEPROM_24C1025_Read_Int
 10511  004C                     _EEPROM_24C1025_Read_Int:	
 10512                           
 10513                           ;incstack = 0
 10514                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10515                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 10516  004C  1283               	bcf	3,5	;RP0=0, select bank0
 10517  004D  1303               	bcf	3,6	;RP1=0, select bank0
 10518  004E  00B5               	movwf	EEPROM_24C1025_Read_Int@chip_add
 10519                           
 10520                           ;EEPROM_24C1025.c: 282:     char data[2];;EEPROM_24C1025.c: 283:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 10521  004F  0834               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 10522  0050  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10523  0051  0833               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 10524  0052  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10525  0053  0832               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 10526  0054  00A5               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10527  0055  0831               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 10528  0056  00A4               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10529  0057  3002               	movlw	2
 10530  0058  00A8               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 10531  0059  3036               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 10532  005A  00A9               	movwf	EEPROM_24C1025_Read_Buffer@data
 10533  005B  01AA               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 10534  005C  0835               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 10535  005D  21E7               	fcall	_EEPROM_24C1025_Read_Buffer
 10536                           
 10537                           ;EEPROM_24C1025.c: 284:     return (data[0]<<8)+data[1];
 10538  005E  1283               	bcf	3,5	;RP0=0, select bank0
 10539  005F  1303               	bcf	3,6	;RP1=0, select bank0
 10540  0060  0836               	movf	EEPROM_24C1025_Read_Int@data,w
 10541  0061  00B2               	movwf	?_EEPROM_24C1025_Read_Int+1
 10542  0062  0837               	movf	EEPROM_24C1025_Read_Int@data+1,w
 10543  0063  00B1               	movwf	?_EEPROM_24C1025_Read_Int
 10544  0064  0008               	return
 10545  0065                     __end_of_EEPROM_24C1025_Read_Int:	
 10546  0065                     __ptext48:	
 10547 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 10548 ;; Defined at:
 10549 ;;		line 142 in file "EEPROM_24C1025.c"
 10550 ;; Parameters:    Size  Location     Type
 10551 ;;  chip_add        1    wreg     unsigned char 
 10552 ;;  mem_add         4    2[BANK0 ] unsigned long 
 10553 ;;  data            1    6[BANK0 ] PTR unsigned char 
 10554 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;  chip_add        1    9[BANK0 ] unsigned char 
 10557 ;;  ctrl            1   11[BANK0 ] unsigned char 
 10558 ;;  range           1   10[BANK0 ] unsigned char 
 10559 ;; Return value:  Size  Location     Type
 10560 ;;                  1    wreg      void 
 10561 ;; Registers used:
 10562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10563 ;; Tracked objects:
 10564 ;;		On entry : 300/300
 10565 ;;		On exit  : 0/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10568 ;;      Params:         0       5       0       0       0
 10569 ;;      Locals:         0       3       0       0       0
 10570 ;;      Temps:          0       2       0       0       0
 10571 ;;      Totals:         0      10       0       0       0
 10572 ;;Total ram usage:       10 bytes
 10573 ;; Hardware stack levels used:    1
 10574 ;; Hardware stack levels required when called:    3
 10575 ;; This function calls:
 10576 ;;		_I2C_Master_Start
 10577 ;;		_I2C_Master_Stop
 10578 ;;		_I2C_Master_Write
 10579 ;; This function is called by:
 10580 ;;		_Decodify_Command
 10581 ;; This function uses a non-reentrant model
 10582 ;;
 10583                           
 10584                           
 10585                           ;psect for function _EEPROM_24C1025_Write_Str
 10586  0065                     _EEPROM_24C1025_Write_Str:	
 10587                           
 10588                           ;incstack = 0
 10589                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10590                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 10591  0065  1283               	bcf	3,5	;RP0=0, select bank0
 10592  0066  1303               	bcf	3,6	;RP1=0, select bank0
 10593  0067  00A9               	movwf	EEPROM_24C1025_Write_Str@chip_add
 10594                           
 10595                           ;EEPROM_24C1025.c: 144:      unsigned char ctrl;;EEPROM_24C1025.c: 146:      if(mem_add>
      +                          0x1FFFF) return;
 10596  0068  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10597  0069  1D03               	btfss	3,2
 10598  006A  0008               	return
 10599  006B  3002               	movlw	2
 10600  006C  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10601  006D  1D03               	skipz
 10602  006E  2875               	goto	u6903
 10603  006F  3000               	movlw	0
 10604  0070  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10605  0071  1D03               	skipz
 10606  0072  2875               	goto	u6903
 10607  0073  3000               	movlw	0
 10608  0074  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10609  0075                     u6903:	
 10610  0075  1803               	btfsc	3,0
 10611  0076  0008               	return
 10612  0077                     L18:	
 10613                           
 10614                           ;EEPROM_24C1025.c: 148:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10615  0077  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10616  0078  1D03               	btfss	3,2
 10617  0079  2886               	goto	l7224
 10618  007A  3001               	movlw	1
 10619  007B  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10620  007C  1D03               	skipz
 10621  007D  2884               	goto	u6913
 10622  007E  3000               	movlw	0
 10623  007F  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10624  0080  1D03               	skipz
 10625  0081  2884               	goto	u6913
 10626  0082  3000               	movlw	0
 10627  0083  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10628  0084                     u6913:	
 10629  0084  1C03               	btfss	3,0
 10630  0085  2889               	goto	l7226
 10631  0086                     l7224:	
 10632  0086  3008               	movlw	8
 10633  0087  00AA               	movwf	EEPROM_24C1025_Write_Str@range
 10634  0088  288A               	goto	l7228
 10635  0089                     l7226:	
 10636  0089  01AA               	clrf	EEPROM_24C1025_Write_Str@range
 10637  008A                     l7228:	
 10638                           
 10639                           ;EEPROM_24C1025.c: 149:      ctrl=chip_add;
 10640  008A  0829               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 10641  008B  00AB               	movwf	EEPROM_24C1025_Write_Str@ctrl
 10642  008C  30A0               	movlw	160
 10643                           
 10644                           ;EEPROM_24C1025.c: 150:      ctrl<<=1;
 10645  008D  1003               	clrc
 10646  008E  0DAB               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 10647                           
 10648                           ;EEPROM_24C1025.c: 151:      ctrl |= 0xA0;
 10649  008F  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10650                           
 10651                           ;EEPROM_24C1025.c: 152:      ctrl |= range;
 10652  0090  082A               	movf	EEPROM_24C1025_Write_Str@range,w
 10653  0091  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10654                           
 10655                           ;EEPROM_24C1025.c: 154:      I2C_Master_Start();
 10656  0092  23AD  120A  118A   	fcall	_I2C_Master_Start
 10657                           
 10658                           ;EEPROM_24C1025.c: 155:      I2C_Master_Write(ctrl);
 10659  0095  1283               	bcf	3,5	;RP0=0, select bank0
 10660  0096  082B               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 10661  0097  00A0               	movwf	I2C_Master_Write@d
 10662  0098  01A1               	clrf	I2C_Master_Write@d+1
 10663  0099  23A5  120A  118A   	fcall	_I2C_Master_Write
 10664                           
 10665                           ;EEPROM_24C1025.c: 156:      I2C_Master_Write(((char *)&mem_add)[1]);
 10666  009C  0823               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10667  009D  00A0               	movwf	I2C_Master_Write@d
 10668  009E  01A1               	clrf	I2C_Master_Write@d+1
 10669  009F  23A5  120A  118A   	fcall	_I2C_Master_Write
 10670                           
 10671                           ;EEPROM_24C1025.c: 157:      I2C_Master_Write(((char *)&mem_add)[0]);
 10672  00A2  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10673  00A3  00A0               	movwf	I2C_Master_Write@d
 10674  00A4  01A1               	clrf	I2C_Master_Write@d+1
 10675  00A5  23A5  120A  118A   	fcall	_I2C_Master_Write
 10676  00A8                     l7288:	
 10677                           ;EEPROM_24C1025.c: 158:      while(*data)
 10678                           
 10679                           
 10680                           ;EEPROM_24C1025.c: 158:      while(*data)
 10681  00A8  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 10682  00A9  0084               	movwf	4
 10683  00AA  1783               	bsf	3,7	;select IRP bank2
 10684  00AB  0800               	movf	0,w
 10685  00AC  1903               	btfsc	3,2
 10686  00AD  28EF               	goto	l7290
 10687                           
 10688                           ;EEPROM_24C1025.c: 159:           {;EEPROM_24C1025.c: 160:           if(mem_add>0x1FFFF)
      +                           return;
 10689  00AE  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10690  00AF  1D03               	btfss	3,2
 10691  00B0  0008               	return
 10692  00B1  3002               	movlw	2
 10693  00B2  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10694  00B3  1D03               	skipz
 10695  00B4  28BB               	goto	u6923
 10696  00B5  3000               	movlw	0
 10697  00B6  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10698  00B7  1D03               	skipz
 10699  00B8  28BB               	goto	u6923
 10700  00B9  3000               	movlw	0
 10701  00BA  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10702  00BB                     u6923:	
 10703  00BB  1803               	btfsc	3,0
 10704  00BC  0008               	return
 10705                           
 10706                           ;EEPROM_24C1025.c: 161:           if((mem_add+1)%128==0)
 10707  00BD  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10708  00BE  3E01               	addlw	1
 10709  00BF  397F               	andlw	127
 10710  00C0  1D03               	btfss	3,2
 10711  00C1  28E0               	goto	l7282
 10712                           
 10713                           ;EEPROM_24C1025.c: 162:             {;EEPROM_24C1025.c: 163:             I2C_Master_Writ
      +                          e(*data);
 10714  00C2  2429  120A  118A   	fcall	PL74	;call to abstracted procedure
 10715  00C5  23A5  120A  118A   	fcall	_I2C_Master_Write
 10716                           
 10717                           ;EEPROM_24C1025.c: 164:             I2C_Master_Stop();
 10718  00C8  23B5  120A  118A   	fcall	_I2C_Master_Stop
 10719                           
 10720                           ;EEPROM_24C1025.c: 166:             _delay((unsigned long)((5)*(8000000/4000.0)));
 10721  00CB  300D               	movlw	13
 10722  00CC  1283               	bcf	3,5	;RP0=0, select bank0
 10723  00CD  1303               	bcf	3,6	;RP1=0, select bank0
 10724  00CE  00A8               	movwf	??_EEPROM_24C1025_Write_Str+1
 10725  00CF  30FB               	movlw	251
 10726  00D0  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 10727  00D1                     u7717:	
 10728  00D1  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
 10729  00D2  28D1               	goto	u7717
 10730  00D3  0BA8               	decfsz	??_EEPROM_24C1025_Write_Str+1,f
 10731  00D4  28D1               	goto	u7717
 10732                           
 10733                           ;EEPROM_24C1025.c: 167:             mem_add++;
 10734  00D5  1283               	bcf	3,5	;RP0=0, select bank0
 10735  00D6  1303               	bcf	3,6	;RP1=0, select bank0
 10736  00D7  0AA2               	incf	EEPROM_24C1025_Write_Str@mem_add,f
 10737  00D8  1903               	skipnz
 10738  00D9  0AA3               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10739  00DA  1903               	skipnz
 10740  00DB  0AA4               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10741  00DC  1903               	skipnz
 10742  00DD  0AA5               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10743                           
 10744                           ;EEPROM_24C1025.c: 168:             data++;
 10745  00DE  0AA6               	incf	EEPROM_24C1025_Write_Str@data,f
 10746  00DF  2877               	goto	L18
 10747  00E0                     l7282:	
 10748                           ;EEPROM_24C1025.c: 169:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10749                           
 10750                           
 10751                           ;EEPROM_24C1025.c: 181:             {;EEPROM_24C1025.c: 182:             I2C_Master_Writ
      +                          e(*data);
 10752  00E0  2429  120A  118A   	fcall	PL74	;call to abstracted procedure
 10753  00E3  23A5  120A  118A   	fcall	_I2C_Master_Write
 10754                           
 10755                           ;EEPROM_24C1025.c: 183:             data++;
 10756  00E6  0AA6               	incf	EEPROM_24C1025_Write_Str@data,f
 10757                           
 10758                           ;EEPROM_24C1025.c: 184:             mem_add++;
 10759  00E7  0AA2               	incf	EEPROM_24C1025_Write_Str@mem_add,f
 10760  00E8  1903               	skipnz
 10761  00E9  0AA3               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10762  00EA  1903               	skipnz
 10763  00EB  0AA4               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10764  00EC  1903               	skipnz
 10765  00ED  0AA5               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10766  00EE  28A8               	goto	l7288
 10767  00EF                     l7290:	
 10768                           
 10769                           ;EEPROM_24C1025.c: 187:      I2C_Master_Write(0);
 10770  00EF  01A0               	clrf	I2C_Master_Write@d
 10771  00F0  01A1               	clrf	I2C_Master_Write@d+1
 10772  00F1  23A5  120A  118A   	fcall	_I2C_Master_Write
 10773                           
 10774                           ;EEPROM_24C1025.c: 188:      I2C_Master_Stop();
 10775  00F4  23B5  120A  118A   	fcall	_I2C_Master_Stop
 10776                           
 10777                           ;EEPROM_24C1025.c: 189:      _delay((unsigned long)((5)*(8000000/4000.0)));
 10778  00F7  300D               	movlw	13
 10779  00F8  1283               	bcf	3,5	;RP0=0, select bank0
 10780  00F9  1303               	bcf	3,6	;RP1=0, select bank0
 10781  00FA  00A8               	movwf	??_EEPROM_24C1025_Write_Str+1
 10782  00FB  30FB               	movlw	251
 10783  00FC  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 10784  00FD                     u7727:	
 10785  00FD  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
 10786  00FE  28FD               	goto	u7727
 10787  00FF  0BA8               	decfsz	??_EEPROM_24C1025_Write_Str+1,f
 10788  0100  28FD               	goto	u7727
 10789  0101  0008               	return
 10790  0102                     __end_of_EEPROM_24C1025_Write_Str:	
 10791  0102                     __ptext50:	
 10792 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10793 ;; Defined at:
 10794 ;;		line 196 in file "EEPROM_24C1025.c"
 10795 ;; Parameters:    Size  Location     Type
 10796 ;;  chip_add        1    wreg     unsigned char 
 10797 ;;  mem_add         4    4[BANK0 ] unsigned long 
 10798 ;;  texto           1    8[BANK0 ] PTR unsigned char 
 10799 ;;		 -> texto(16), 
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;  chip_add        1   12[BANK0 ] unsigned char 
 10802 ;;  ctrl            1   14[BANK0 ] unsigned char 
 10803 ;;  range           1   13[BANK0 ] unsigned char 
 10804 ;;  cnt             1   11[BANK0 ] unsigned char 
 10805 ;; Return value:  Size  Location     Type
 10806 ;;                  1    wreg      void 
 10807 ;; Registers used:
 10808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10809 ;; Tracked objects:
 10810 ;;		On entry : 300/300
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10814 ;;      Params:         0       5       0       0       0
 10815 ;;      Locals:         0       4       0       0       0
 10816 ;;      Temps:          0       2       0       0       0
 10817 ;;      Totals:         0      11       0       0       0
 10818 ;;Total ram usage:       11 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; Hardware stack levels required when called:    3
 10821 ;; This function calls:
 10822 ;;		_I2C_Master_Read
 10823 ;;		_I2C_Master_RepeatedStart
 10824 ;;		_I2C_Master_Start
 10825 ;;		_I2C_Master_Stop
 10826 ;;		_I2C_Master_Write
 10827 ;; This function is called by:
 10828 ;;		_Decodify_Command
 10829 ;; This function uses a non-reentrant model
 10830 ;;
 10831                           
 10832                           
 10833                           ;psect for function _EEPROM_24C1025_Read_Str
 10834  0102                     _EEPROM_24C1025_Read_Str:	
 10835                           
 10836                           ;incstack = 0
 10837                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10838                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10839  0102  1283               	bcf	3,5	;RP0=0, select bank0
 10840  0103  1303               	bcf	3,6	;RP1=0, select bank0
 10841  0104  00AC               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10842                           
 10843                           ;EEPROM_24C1025.c: 198:      unsigned char range=0;
 10844  0105  01AD               	clrf	EEPROM_24C1025_Read_Str@range
 10845                           
 10846                           ;EEPROM_24C1025.c: 199:      unsigned char ctrl;;EEPROM_24C1025.c: 201:      if(mem_add>
      +                          0x1FFFF) return;
 10847  0106  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10848  0107  1D03               	btfss	3,2
 10849  0108  0008               	return
 10850  0109  3002               	movlw	2
 10851  010A  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10852  010B  1D03               	skipz
 10853  010C  2913               	goto	u6963
 10854  010D  3000               	movlw	0
 10855  010E  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10856  010F  1D03               	skipz
 10857  0110  2913               	goto	u6963
 10858  0111  3000               	movlw	0
 10859  0112  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10860  0113                     u6963:	
 10861  0113  1803               	btfsc	3,0
 10862  0114  0008               	return
 10863                           
 10864                           ;EEPROM_24C1025.c: 203:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10865  0115  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10866  0116  1D03               	btfss	3,2
 10867  0117  2924               	goto	l7302
 10868  0118  3001               	movlw	1
 10869  0119  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10870  011A  1D03               	skipz
 10871  011B  2922               	goto	u6973
 10872  011C  3000               	movlw	0
 10873  011D  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10874  011E  1D03               	skipz
 10875  011F  2922               	goto	u6973
 10876  0120  3000               	movlw	0
 10877  0121  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10878  0122                     u6973:	
 10879  0122  1C03               	btfss	3,0
 10880  0123  2927               	goto	l7304
 10881  0124                     l7302:	
 10882  0124  3008               	movlw	8
 10883  0125  00AD               	movwf	EEPROM_24C1025_Read_Str@range
 10884  0126  2928               	goto	l7306
 10885  0127                     l7304:	
 10886  0127  01AD               	clrf	EEPROM_24C1025_Read_Str@range
 10887  0128                     l7306:	
 10888                           
 10889                           ;EEPROM_24C1025.c: 204:      ctrl=chip_add;
 10890                           
 10891                           ;EEPROM_24C1025.c: 205:      ctrl<<=1;
 10892                           
 10893                           ;EEPROM_24C1025.c: 206:      ctrl |= 0xA0;
 10894                           
 10895                           ;EEPROM_24C1025.c: 207:      ctrl |= 0b00000001;
 10896                           
 10897                           ;EEPROM_24C1025.c: 208:      ctrl |= range;
 10898  0128  23F1  120A  118A   	fcall	PL36	;call to abstracted procedure
 10899                           
 10900                           ;EEPROM_24C1025.c: 210:      I2C_Master_Start();
 10901  012B  23AD  120A  118A   	fcall	_I2C_Master_Start
 10902                           
 10903                           ;EEPROM_24C1025.c: 211:      I2C_Master_Write(ctrl & 0xFE);
 10904  012E  2423  120A  118A   	fcall	PL72	;call to abstracted procedure
 10905  0131  23A5  120A  118A   	fcall	_I2C_Master_Write
 10906                           
 10907                           ;EEPROM_24C1025.c: 212:      I2C_Master_Write(((char *)&mem_add)[1]);
 10908  0134  0825               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10909  0135  00A0               	movwf	I2C_Master_Write@d
 10910  0136  01A1               	clrf	I2C_Master_Write@d+1
 10911  0137  23A5  120A  118A   	fcall	_I2C_Master_Write
 10912                           
 10913                           ;EEPROM_24C1025.c: 213:      I2C_Master_Write(((char *)&mem_add)[0]);
 10914  013A  0824               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10915  013B  00A0               	movwf	I2C_Master_Write@d
 10916  013C  01A1               	clrf	I2C_Master_Write@d+1
 10917  013D  23A5  120A  118A   	fcall	_I2C_Master_Write
 10918                           
 10919                           ;EEPROM_24C1025.c: 214:      I2C_Master_RepeatedStart();
 10920  0140  23E5  120A  118A   	fcall	_I2C_Master_RepeatedStart
 10921                           
 10922                           ;EEPROM_24C1025.c: 215:      I2C_Master_Write(ctrl);
 10923  0143  1283               	bcf	3,5	;RP0=0, select bank0
 10924  0144  082E               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10925  0145  00A0               	movwf	I2C_Master_Write@d
 10926  0146  01A1               	clrf	I2C_Master_Write@d+1
 10927  0147  23A5  120A  118A   	fcall	_I2C_Master_Write
 10928                           
 10929                           ;EEPROM_24C1025.c: 217:      cnt=0;
 10930  014A  01AB               	clrf	EEPROM_24C1025_Read_Str@cnt
 10931  014B                     l7330:	
 10932                           
 10933                           ;EEPROM_24C1025.c: 219:            if(mem_add>0x1FFFF) break;
 10934  014B  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10935  014C  1D03               	btfss	3,2
 10936  014D  29D5               	goto	l7384
 10937  014E  3002               	movlw	2
 10938  014F  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10939  0150  1D03               	skipz
 10940  0151  2958               	goto	u6983
 10941  0152  3000               	movlw	0
 10942  0153  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10943  0154  1D03               	skipz
 10944  0155  2958               	goto	u6983
 10945  0156  3000               	movlw	0
 10946  0157  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10947  0158                     u6983:	
 10948  0158  1803               	btfsc	3,0
 10949  0159  29D5               	goto	l7384
 10950                           
 10951                           ;EEPROM_24C1025.c: 220:            if((mem_add+1)%128==0)
 10952  015A  0824               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10953  015B  3E01               	addlw	1
 10954  015C  397F               	andlw	127
 10955  015D  1D03               	btfss	3,2
 10956  015E  29B6               	goto	l7374
 10957                           
 10958                           ;EEPROM_24C1025.c: 221:              {;EEPROM_24C1025.c: 222:              (*texto)=I2C_
      +                          Master_Read(0);
 10959  015F  0828               	movf	EEPROM_24C1025_Read_Str@texto,w
 10960  0160  0084               	movwf	4
 10961  0161  01A0               	clrf	I2C_Master_Read@a
 10962  0162  01A1               	clrf	I2C_Master_Read@a+1
 10963  0163  23B8  120A  118A   	fcall	_I2C_Master_Read
 10964  0166  0820               	movf	?_I2C_Master_Read,w
 10965  0167  1783               	bsf	3,7	;select IRP bank2
 10966  0168  0080               	movwf	0
 10967                           
 10968                           ;EEPROM_24C1025.c: 223:              I2C_Master_Stop();
 10969  0169  23B5  120A  118A   	fcall	_I2C_Master_Stop
 10970                           
 10971                           ;EEPROM_24C1025.c: 225:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10972  016C  300D               	movlw	13
 10973  016D  1283               	bcf	3,5	;RP0=0, select bank0
 10974  016E  1303               	bcf	3,6	;RP1=0, select bank0
 10975  016F  00AA               	movwf	??_EEPROM_24C1025_Read_Str+1
 10976  0170  30FB               	movlw	251
 10977  0171  00A9               	movwf	??_EEPROM_24C1025_Read_Str
 10978  0172                     u7737:	
 10979  0172  0BA9               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10980  0173  2972               	goto	u7737
 10981  0174  0BAA               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10982  0175  2972               	goto	u7737
 10983                           
 10984                           ;EEPROM_24C1025.c: 226:              mem_add++;
 10985  0176  1283               	bcf	3,5	;RP0=0, select bank0
 10986  0177  1303               	bcf	3,6	;RP1=0, select bank0
 10987  0178  0AA4               	incf	EEPROM_24C1025_Read_Str@mem_add,f
 10988  0179  1903               	skipnz
 10989  017A  0AA5               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10990  017B  1903               	skipnz
 10991  017C  0AA6               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10992  017D  1903               	skipnz
 10993  017E  0AA7               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10994                           
 10995                           ;EEPROM_24C1025.c: 227:              texto++;
 10996  017F  0AA8               	incf	EEPROM_24C1025_Read_Str@texto,f
 10997                           
 10998                           ;EEPROM_24C1025.c: 228:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10999  0180  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11000  0181  1D03               	btfss	3,2
 11001  0182  298F               	goto	l7348
 11002  0183  3001               	movlw	1
 11003  0184  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11004  0185  1D03               	skipz
 11005  0186  298D               	goto	u7003
 11006  0187  3000               	movlw	0
 11007  0188  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11008  0189  1D03               	skipz
 11009  018A  298D               	goto	u7003
 11010  018B  3000               	movlw	0
 11011  018C  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11012  018D                     u7003:	
 11013  018D  1C03               	btfss	3,0
 11014  018E  2992               	goto	l7350
 11015  018F                     l7348:	
 11016  018F  3008               	movlw	8
 11017  0190  00AD               	movwf	EEPROM_24C1025_Read_Str@range
 11018  0191  2993               	goto	l7352
 11019  0192                     l7350:	
 11020  0192  01AD               	clrf	EEPROM_24C1025_Read_Str@range
 11021  0193                     l7352:	
 11022                           
 11023                           ;EEPROM_24C1025.c: 229:              ctrl=chip_add;
 11024                           
 11025                           ;EEPROM_24C1025.c: 230:              ctrl<<=1;
 11026                           
 11027                           ;EEPROM_24C1025.c: 231:              ctrl |= 0xA0;
 11028                           
 11029                           ;EEPROM_24C1025.c: 232:              ctrl |= 0b00000001;
 11030                           
 11031                           ;EEPROM_24C1025.c: 233:              ctrl |= range;
 11032  0193  23F1  120A  118A   	fcall	PL36	;call to abstracted procedure
 11033                           
 11034                           ;EEPROM_24C1025.c: 235:              I2C_Master_Start();
 11035  0196  23AD  120A  118A   	fcall	_I2C_Master_Start
 11036                           
 11037                           ;EEPROM_24C1025.c: 236:              I2C_Master_Write(ctrl & 0xFE);
 11038  0199  2423  120A  118A   	fcall	PL72	;call to abstracted procedure
 11039  019C  23A5  120A  118A   	fcall	_I2C_Master_Write
 11040                           
 11041                           ;EEPROM_24C1025.c: 237:              I2C_Master_Write(((char *)&mem_add)[1]);
 11042  019F  0825               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11043  01A0  00A0               	movwf	I2C_Master_Write@d
 11044  01A1  01A1               	clrf	I2C_Master_Write@d+1
 11045  01A2  23A5  120A  118A   	fcall	_I2C_Master_Write
 11046                           
 11047                           ;EEPROM_24C1025.c: 238:              I2C_Master_Write(((char *)&mem_add)[0]);
 11048  01A5  0824               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11049  01A6  00A0               	movwf	I2C_Master_Write@d
 11050  01A7  01A1               	clrf	I2C_Master_Write@d+1
 11051  01A8  23A5  120A  118A   	fcall	_I2C_Master_Write
 11052                           
 11053                           ;EEPROM_24C1025.c: 239:              I2C_Master_RepeatedStart();
 11054  01AB  23E5  120A  118A   	fcall	_I2C_Master_RepeatedStart
 11055                           
 11056                           ;EEPROM_24C1025.c: 240:              I2C_Master_Write(ctrl);
 11057  01AE  1283               	bcf	3,5	;RP0=0, select bank0
 11058  01AF  082E               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11059  01B0  00A0               	movwf	I2C_Master_Write@d
 11060  01B1  01A1               	clrf	I2C_Master_Write@d+1
 11061  01B2  23A5  120A  118A   	fcall	_I2C_Master_Write
 11062                           
 11063                           ;EEPROM_24C1025.c: 241:              }
 11064  01B5  29CE               	goto	l7382
 11065  01B6                     l7374:	
 11066                           
 11067                           ;EEPROM_24C1025.c: 243:              {;EEPROM_24C1025.c: 244:              (*texto)=I2C_
      +                          Master_Read(1);
 11068  01B6  0828               	movf	EEPROM_24C1025_Read_Str@texto,w
 11069  01B7  0084               	movwf	4
 11070  01B8  01A0               	clrf	I2C_Master_Read@a
 11071  01B9  0AA0               	incf	I2C_Master_Read@a,f
 11072  01BA  01A1               	clrf	I2C_Master_Read@a+1
 11073  01BB  23B8  120A  118A   	fcall	_I2C_Master_Read
 11074  01BE  0820               	movf	?_I2C_Master_Read,w
 11075  01BF  1783               	bsf	3,7	;select IRP bank2
 11076  01C0  0080               	movwf	0
 11077                           
 11078                           ;EEPROM_24C1025.c: 245:              if((*texto)==0)break;
 11079  01C1  0828               	movf	EEPROM_24C1025_Read_Str@texto,w
 11080  01C2  0084               	movwf	4
 11081  01C3  0800               	movf	0,w
 11082  01C4  1903               	btfsc	3,2
 11083  01C5  29D5               	goto	l7384
 11084                           
 11085                           ;EEPROM_24C1025.c: 246:              texto++;
 11086  01C6  0AA8               	incf	EEPROM_24C1025_Read_Str@texto,f
 11087                           
 11088                           ;EEPROM_24C1025.c: 247:              mem_add++;
 11089  01C7  0AA4               	incf	EEPROM_24C1025_Read_Str@mem_add,f
 11090  01C8  1903               	skipnz
 11091  01C9  0AA5               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11092  01CA  1903               	skipnz
 11093  01CB  0AA6               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11094  01CC  1903               	skipnz
 11095  01CD  0AA7               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11096  01CE                     l7382:	
 11097                           
 11098                           ;EEPROM_24C1025.c: 249:        }while((cnt++)<64);
 11099  01CE  082B               	movf	EEPROM_24C1025_Read_Str@cnt,w
 11100  01CF  0AAB               	incf	EEPROM_24C1025_Read_Str@cnt,f
 11101  01D0  00A9               	movwf	??_EEPROM_24C1025_Read_Str
 11102  01D1  3040               	movlw	64
 11103  01D2  0229               	subwf	??_EEPROM_24C1025_Read_Str,w
 11104  01D3  1C03               	skipc
 11105  01D4  294B               	goto	l7330
 11106  01D5                     l7384:	
 11107                           
 11108                           ;EEPROM_24C1025.c: 251:      I2C_Master_Read(0);
 11109  01D5  01A0               	clrf	I2C_Master_Read@a
 11110  01D6  01A1               	clrf	I2C_Master_Read@a+1
 11111  01D7  23B8  120A  118A   	fcall	_I2C_Master_Read
 11112                           
 11113                           ;EEPROM_24C1025.c: 252:      I2C_Master_Stop();
 11114  01DA  23B5  120A  118A   	fcall	_I2C_Master_Stop
 11115                           
 11116                           ;EEPROM_24C1025.c: 253:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11117  01DD  30B9               	movlw	185
 11118  01DE  1283               	bcf	3,5	;RP0=0, select bank0
 11119  01DF  1303               	bcf	3,6	;RP1=0, select bank0
 11120  01E0  00A9               	movwf	??_EEPROM_24C1025_Read_Str
 11121  01E1                     u7747:	
 11122  01E1  29E2               	nop2
 11123  01E2  29E3               	nop2
 11124  01E3  0BA9               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11125  01E4  29E1               	goto	u7747
 11126  01E5  29E6               	nop2
 11127  01E6  0008               	return
 11128  01E7                     __end_of_EEPROM_24C1025_Read_Str:	
 11129  01E7                     __ptext53:	
 11130 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 11131 ;; Defined at:
 11132 ;;		line 74 in file "EEPROM_24C1025.c"
 11133 ;; Parameters:    Size  Location     Type
 11134 ;;  chip_add        1    wreg     unsigned char 
 11135 ;;  mem_add         4    4[BANK0 ] unsigned long 
 11136 ;;  sizedata        1    8[BANK0 ] unsigned char 
 11137 ;;  data            2    9[BANK0 ] PTR unsigned char 
 11138 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), buffer(32), 
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;  chip_add        1   14[BANK0 ] unsigned char 
 11141 ;;  cnt             1   13[BANK0 ] unsigned char 
 11142 ;;  ctrl            1   16[BANK0 ] unsigned char 
 11143 ;;  range           1   15[BANK0 ] unsigned char 
 11144 ;;  cnt             1    0        unsigned char 
 11145 ;; Return value:  Size  Location     Type
 11146 ;;                  1    wreg      void 
 11147 ;; Registers used:
 11148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11149 ;; Tracked objects:
 11150 ;;		On entry : 0/300
 11151 ;;		On exit  : 0/0
 11152 ;;		Unchanged: 0/0
 11153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11154 ;;      Params:         0       7       0       0       0
 11155 ;;      Locals:         0       4       0       0       0
 11156 ;;      Temps:          0       2       0       0       0
 11157 ;;      Totals:         0      13       0       0       0
 11158 ;;Total ram usage:       13 bytes
 11159 ;; Hardware stack levels used:    1
 11160 ;; Hardware stack levels required when called:    3
 11161 ;; This function calls:
 11162 ;;		_I2C_Master_Read
 11163 ;;		_I2C_Master_RepeatedStart
 11164 ;;		_I2C_Master_Start
 11165 ;;		_I2C_Master_Stop
 11166 ;;		_I2C_Master_Write
 11167 ;; This function is called by:
 11168 ;;		_Decodify_Command
 11169 ;;		_EEPROM_24C1025_Read_Byte
 11170 ;;		_EEPROM_24C1025_Read_Int
 11171 ;; This function uses a non-reentrant model
 11172 ;;
 11173                           
 11174                           
 11175                           ;psect for function _EEPROM_24C1025_Read_Buffer
 11176  01E7                     _EEPROM_24C1025_Read_Buffer:	
 11177                           
 11178                           ;incstack = 0
 11179                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11180                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 11181  01E7  1283               	bcf	3,5	;RP0=0, select bank0
 11182  01E8  1303               	bcf	3,6	;RP1=0, select bank0
 11183  01E9  00AE               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 11184                           
 11185                           ;EEPROM_24C1025.c: 81:      unsigned char ctrl;;EEPROM_24C1025.c: 83:      Delay_Led_Mem
      +                          ory=20;
 11186                           
 11187                           ;EEPROM_24C1025.c: 85:      if(mem_add>0x1FFFF) return;
 11188  01EA  240E  120A  118A   	fcall	PL48	;call to abstracted procedure
 11189  01ED  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11190  01EE  1D03               	btfss	3,2
 11191  01EF  0008               	return
 11192  01F0  3002               	movlw	2
 11193  01F1  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11194  01F2  1D03               	skipz
 11195  01F3  29FA               	goto	u6373
 11196  01F4  3000               	movlw	0
 11197  01F5  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11198  01F6  1D03               	skipz
 11199  01F7  29FA               	goto	u6373
 11200  01F8  3000               	movlw	0
 11201  01F9  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11202  01FA                     u6373:	
 11203  01FA  1803               	btfsc	3,0
 11204  01FB  0008               	return
 11205                           
 11206                           ;EEPROM_24C1025.c: 87:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11207  01FC  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11208  01FD  1D03               	btfss	3,2
 11209  01FE  2A0B               	goto	l6720
 11210  01FF  3001               	movlw	1
 11211  0200  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11212  0201  1D03               	skipz
 11213  0202  2A09               	goto	u6383
 11214  0203  3000               	movlw	0
 11215  0204  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11216  0205  1D03               	skipz
 11217  0206  2A09               	goto	u6383
 11218  0207  3000               	movlw	0
 11219  0208  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11220  0209                     u6383:	
 11221  0209  1C03               	btfss	3,0
 11222  020A  2A0E               	goto	l6722
 11223  020B                     l6720:	
 11224  020B  3008               	movlw	8
 11225  020C  00AF               	movwf	EEPROM_24C1025_Read_Buffer@range
 11226  020D  2A0F               	goto	l6724
 11227  020E                     l6722:	
 11228  020E  01AF               	clrf	EEPROM_24C1025_Read_Buffer@range
 11229  020F                     l6724:	
 11230                           
 11231                           ;EEPROM_24C1025.c: 88:      ctrl=chip_add;
 11232                           
 11233                           ;EEPROM_24C1025.c: 89:      ctrl<<=1;
 11234                           
 11235                           ;EEPROM_24C1025.c: 90:      ctrl |= 0xA0;
 11236                           
 11237                           ;EEPROM_24C1025.c: 91:      ctrl |= 0b00000001;
 11238                           
 11239                           ;EEPROM_24C1025.c: 92:      ctrl |= range;
 11240  020F  23FB  120A  118A   	fcall	PL38	;call to abstracted procedure
 11241                           
 11242                           ;EEPROM_24C1025.c: 94:      I2C_Master_Start();
 11243  0212  23AD  120A  118A   	fcall	_I2C_Master_Start
 11244                           
 11245                           ;EEPROM_24C1025.c: 95:      I2C_Master_Write(ctrl & 0xFE);
 11246  0215  241D  120A  118A   	fcall	PL68	;call to abstracted procedure
 11247  0218  23A5  120A  118A   	fcall	_I2C_Master_Write
 11248                           
 11249                           ;EEPROM_24C1025.c: 96:      I2C_Master_Write(((char *)&mem_add)[1]);
 11250  021B  0825               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11251  021C  00A0               	movwf	I2C_Master_Write@d
 11252  021D  01A1               	clrf	I2C_Master_Write@d+1
 11253  021E  23A5  120A  118A   	fcall	_I2C_Master_Write
 11254                           
 11255                           ;EEPROM_24C1025.c: 97:      I2C_Master_Write(((char *)&mem_add)[0]);
 11256  0221  0824               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11257  0222  00A0               	movwf	I2C_Master_Write@d
 11258  0223  01A1               	clrf	I2C_Master_Write@d+1
 11259  0224  23A5  120A  118A   	fcall	_I2C_Master_Write
 11260                           
 11261                           ;EEPROM_24C1025.c: 98:      I2C_Master_RepeatedStart();
 11262  0227  23E5  120A  118A   	fcall	_I2C_Master_RepeatedStart
 11263                           
 11264                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(ctrl);
 11265  022A  1283               	bcf	3,5	;RP0=0, select bank0
 11266  022B  0830               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11267  022C  00A0               	movwf	I2C_Master_Write@d
 11268  022D  01A1               	clrf	I2C_Master_Write@d+1
 11269  022E  23A5  120A  118A   	fcall	_I2C_Master_Write
 11270                           
 11271                           ;EEPROM_24C1025.c: 101:      for(char cnt=0;cnt<(sizedata);cnt++)
 11272  0231  01AD               	clrf	EEPROM_24C1025_Read_Buffer@cnt_1518
 11273  0232                     l6800:	
 11274  0232  0828               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 11275  0233  022D               	subwf	EEPROM_24C1025_Read_Buffer@cnt_1518,w
 11276  0234  1803               	btfsc	3,0
 11277  0235  2AB8               	goto	l6802
 11278                           
 11279                           ;EEPROM_24C1025.c: 102:         {;EEPROM_24C1025.c: 103:            if(mem_add>0x1FFFF) 
      +                          break;
 11280  0236  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11281  0237  1D03               	btfss	3,2
 11282  0238  2AB8               	goto	l6802
 11283  0239  3002               	movlw	2
 11284  023A  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11285  023B  1D03               	skipz
 11286  023C  2A43               	goto	u6393
 11287  023D  3000               	movlw	0
 11288  023E  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11289  023F  1D03               	skipz
 11290  0240  2A43               	goto	u6393
 11291  0241  3000               	movlw	0
 11292  0242  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11293  0243                     u6393:	
 11294  0243  1803               	btfsc	3,0
 11295  0244  2AB8               	goto	l6802
 11296                           
 11297                           ;EEPROM_24C1025.c: 104:            if((mem_add+1)%128==0)
 11298  0245  0824               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11299  0246  3E01               	addlw	1
 11300  0247  397F               	andlw	127
 11301  0248  1D03               	btfss	3,2
 11302  0249  2AA2               	goto	l6792
 11303                           
 11304                           ;EEPROM_24C1025.c: 105:              {;EEPROM_24C1025.c: 106:              (*data)=I2C_M
      +                          aster_Read(0);
 11305  024A  2416  120A  118A   	fcall	PL54	;call to abstracted procedure
 11306  024D  01A1               	clrf	I2C_Master_Read@a+1
 11307  024E  23B8  120A  118A   	fcall	_I2C_Master_Read
 11308  0251  0820               	movf	?_I2C_Master_Read,w
 11309  0252  0080               	movwf	0
 11310                           
 11311                           ;EEPROM_24C1025.c: 107:              I2C_Master_Stop();
 11312  0253  23B5  120A  118A   	fcall	_I2C_Master_Stop
 11313                           
 11314                           ;EEPROM_24C1025.c: 109:              _delay((unsigned long)((5)*(8000000/4000.0)));
 11315  0256  300D               	movlw	13
 11316  0257  1283               	bcf	3,5	;RP0=0, select bank0
 11317  0258  1303               	bcf	3,6	;RP1=0, select bank0
 11318  0259  00AC               	movwf	??_EEPROM_24C1025_Read_Buffer+1
 11319  025A  30FB               	movlw	251
 11320  025B  00AB               	movwf	??_EEPROM_24C1025_Read_Buffer
 11321  025C                     u7757:	
 11322  025C  0BAB               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11323  025D  2A5C               	goto	u7757
 11324  025E  0BAC               	decfsz	??_EEPROM_24C1025_Read_Buffer+1,f
 11325  025F  2A5C               	goto	u7757
 11326                           
 11327                           ;EEPROM_24C1025.c: 110:              mem_add++;
 11328  0260  1283               	bcf	3,5	;RP0=0, select bank0
 11329  0261  1303               	bcf	3,6	;RP1=0, select bank0
 11330  0262  0AA4               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11331  0263  1903               	skipnz
 11332  0264  0AA5               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11333  0265  1903               	skipnz
 11334  0266  0AA6               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11335  0267  1903               	skipnz
 11336  0268  0AA7               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11337                           
 11338                           ;EEPROM_24C1025.c: 111:              data++;
 11339  0269  0AA9               	incf	EEPROM_24C1025_Read_Buffer@data,f
 11340  026A  1903               	skipnz
 11341  026B  0AAA               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 11342                           
 11343                           ;EEPROM_24C1025.c: 112:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11344  026C  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11345  026D  1D03               	btfss	3,2
 11346  026E  2A7B               	goto	l6766
 11347  026F  3001               	movlw	1
 11348  0270  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11349  0271  1D03               	skipz
 11350  0272  2A79               	goto	u6413
 11351  0273  3000               	movlw	0
 11352  0274  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11353  0275  1D03               	skipz
 11354  0276  2A79               	goto	u6413
 11355  0277  3000               	movlw	0
 11356  0278  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11357  0279                     u6413:	
 11358  0279  1C03               	btfss	3,0
 11359  027A  2A7E               	goto	l6768
 11360  027B                     l6766:	
 11361  027B  3008               	movlw	8
 11362  027C  00AF               	movwf	EEPROM_24C1025_Read_Buffer@range
 11363  027D  2A7F               	goto	l6770
 11364  027E                     l6768:	
 11365  027E  01AF               	clrf	EEPROM_24C1025_Read_Buffer@range
 11366  027F                     l6770:	
 11367                           
 11368                           ;EEPROM_24C1025.c: 113:              ctrl=chip_add;
 11369                           
 11370                           ;EEPROM_24C1025.c: 114:              ctrl<<=1;
 11371                           
 11372                           ;EEPROM_24C1025.c: 115:              ctrl |= 0xA0;
 11373                           
 11374                           ;EEPROM_24C1025.c: 116:              ctrl |= 0b00000001;
 11375                           
 11376                           ;EEPROM_24C1025.c: 117:              ctrl |= range;
 11377  027F  23FB  120A  118A   	fcall	PL38	;call to abstracted procedure
 11378                           
 11379                           ;EEPROM_24C1025.c: 119:              I2C_Master_Start();
 11380  0282  23AD  120A  118A   	fcall	_I2C_Master_Start
 11381                           
 11382                           ;EEPROM_24C1025.c: 120:              I2C_Master_Write(ctrl & 0xFE);
 11383  0285  241D  120A  118A   	fcall	PL68	;call to abstracted procedure
 11384  0288  23A5  120A  118A   	fcall	_I2C_Master_Write
 11385                           
 11386                           ;EEPROM_24C1025.c: 121:              I2C_Master_Write(((char *)&mem_add)[1]);
 11387  028B  0825               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11388  028C  00A0               	movwf	I2C_Master_Write@d
 11389  028D  01A1               	clrf	I2C_Master_Write@d+1
 11390  028E  23A5  120A  118A   	fcall	_I2C_Master_Write
 11391                           
 11392                           ;EEPROM_24C1025.c: 122:              I2C_Master_Write(((char *)&mem_add)[0]);
 11393  0291  0824               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11394  0292  00A0               	movwf	I2C_Master_Write@d
 11395  0293  01A1               	clrf	I2C_Master_Write@d+1
 11396  0294  23A5  120A  118A   	fcall	_I2C_Master_Write
 11397                           
 11398                           ;EEPROM_24C1025.c: 123:              I2C_Master_RepeatedStart();
 11399  0297  23E5  120A  118A   	fcall	_I2C_Master_RepeatedStart
 11400                           
 11401                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl);
 11402  029A  1283               	bcf	3,5	;RP0=0, select bank0
 11403  029B  0830               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11404  029C  00A0               	movwf	I2C_Master_Write@d
 11405  029D  01A1               	clrf	I2C_Master_Write@d+1
 11406  029E  23A5  120A  118A   	fcall	_I2C_Master_Write
 11407                           
 11408                           ;EEPROM_24C1025.c: 125:              }
 11409  02A1  2AB6               	goto	l6798
 11410  02A2                     l6792:	
 11411                           
 11412                           ;EEPROM_24C1025.c: 127:              {;EEPROM_24C1025.c: 128:              (*data)=I2C_M
      +                          aster_Read(1);
 11413  02A2  2416  120A  118A   	fcall	PL54	;call to abstracted procedure
 11414  02A5  0AA0               	incf	I2C_Master_Read@a,f
 11415  02A6  01A1               	clrf	I2C_Master_Read@a+1
 11416  02A7  23B8  120A  118A   	fcall	_I2C_Master_Read
 11417  02AA  0820               	movf	?_I2C_Master_Read,w
 11418  02AB  0080               	movwf	0
 11419                           
 11420                           ;EEPROM_24C1025.c: 129:              data++;
 11421  02AC  0AA9               	incf	EEPROM_24C1025_Read_Buffer@data,f
 11422  02AD  1903               	skipnz
 11423  02AE  0AAA               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 11424                           
 11425                           ;EEPROM_24C1025.c: 130:              mem_add++;
 11426  02AF  0AA4               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11427  02B0  1903               	skipnz
 11428  02B1  0AA5               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11429  02B2  1903               	skipnz
 11430  02B3  0AA6               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11431  02B4  1903               	skipnz
 11432  02B5  0AA7               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11433  02B6                     l6798:	
 11434                           
 11435                           ;EEPROM_24C1025.c: 132:         }
 11436  02B6  0AAD               	incf	EEPROM_24C1025_Read_Buffer@cnt_1518,f
 11437  02B7  2A32               	goto	l6800
 11438  02B8                     l6802:	
 11439                           
 11440                           ;EEPROM_24C1025.c: 133:         I2C_Master_Read(0);
 11441  02B8  01A0               	clrf	I2C_Master_Read@a
 11442  02B9  01A1               	clrf	I2C_Master_Read@a+1
 11443  02BA  23B8  120A  118A   	fcall	_I2C_Master_Read
 11444                           
 11445                           ;EEPROM_24C1025.c: 134:         I2C_Master_Stop();
 11446  02BD  23B5  120A  118A   	fcall	_I2C_Master_Stop
 11447                           
 11448                           ;EEPROM_24C1025.c: 135:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11449  02C0  30B9               	movlw	185
 11450  02C1  1283               	bcf	3,5	;RP0=0, select bank0
 11451  02C2  1303               	bcf	3,6	;RP1=0, select bank0
 11452  02C3  00AB               	movwf	??_EEPROM_24C1025_Read_Buffer
 11453  02C4                     u7767:	
 11454  02C4  2AC5               	nop2
 11455  02C5  2AC6               	nop2
 11456  02C6  0BAB               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11457  02C7  2AC4               	goto	u7767
 11458  02C8  2AC9               	nop2
 11459  02C9  0008               	return
 11460  02CA                     __end_of_EEPROM_24C1025_Read_Buffer:	
 11461  02CA                     __ptext58:	
 11462 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 11463 ;; Defined at:
 11464 ;;		line 13 in file "EEPROM_24C1025.c"
 11465 ;; Parameters:    Size  Location     Type
 11466 ;;  chip_add        1    wreg     unsigned char 
 11467 ;;  mem_add         4    2[BANK0 ] unsigned long 
 11468 ;;  sizedata        1    6[BANK0 ] unsigned char 
 11469 ;;  data            2    7[BANK0 ] PTR unsigned char 
 11470 ;;		 -> EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(1), usart_protocol.value(10), usart_protocol(1
      +6), 
 11471 ;; Auto vars:     Size  Location     Type
 11472 ;;  chip_add        1   12[BANK0 ] unsigned char 
 11473 ;;  ctrl            1   14[BANK0 ] unsigned char 
 11474 ;;  range           1   13[BANK0 ] unsigned char 
 11475 ;;  count           1   11[BANK0 ] unsigned char 
 11476 ;; Return value:  Size  Location     Type
 11477 ;;                  1    wreg      void 
 11478 ;; Registers used:
 11479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11480 ;; Tracked objects:
 11481 ;;		On entry : 0/300
 11482 ;;		On exit  : 0/0
 11483 ;;		Unchanged: 0/0
 11484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11485 ;;      Params:         0       7       0       0       0
 11486 ;;      Locals:         0       4       0       0       0
 11487 ;;      Temps:          0       2       0       0       0
 11488 ;;      Totals:         0      13       0       0       0
 11489 ;;Total ram usage:       13 bytes
 11490 ;; Hardware stack levels used:    1
 11491 ;; Hardware stack levels required when called:    3
 11492 ;; This function calls:
 11493 ;;		_I2C_Master_Start
 11494 ;;		_I2C_Master_Stop
 11495 ;;		_I2C_Master_Write
 11496 ;; This function is called by:
 11497 ;;		_Decodify_Command
 11498 ;;		_EEPROM_24C1025_Write_Byte
 11499 ;;		_EEPROM_24C1025_Write_Int
 11500 ;; This function uses a non-reentrant model
 11501 ;;
 11502                           
 11503                           
 11504                           ;psect for function _EEPROM_24C1025_Write_Buffer
 11505  02CA                     _EEPROM_24C1025_Write_Buffer:	
 11506                           
 11507                           ;incstack = 0
 11508                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack
      +                          ]
 11509                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 11510  02CA  1283               	bcf	3,5	;RP0=0, select bank0
 11511  02CB  1303               	bcf	3,6	;RP1=0, select bank0
 11512  02CC  00AC               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 11513                           
 11514                           ;EEPROM_24C1025.c: 19:      unsigned char ctrl;;EEPROM_24C1025.c: 20:      unsigned char
      +                           count;;EEPROM_24C1025.c: 22:      Delay_Led_Memory=20;
 11515                           
 11516                           ;EEPROM_24C1025.c: 24:      if(mem_add>0x1FFFF) return;
 11517  02CD  240E  120A  118A   	fcall	PL48	;call to abstracted procedure
 11518  02D0  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11519  02D1  1D03               	btfss	3,2
 11520  02D2  0008               	return
 11521  02D3  3002               	movlw	2
 11522  02D4  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11523  02D5  1D03               	skipz
 11524  02D6  2ADD               	goto	u5963
 11525  02D7  3000               	movlw	0
 11526  02D8  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11527  02D9  1D03               	skipz
 11528  02DA  2ADD               	goto	u5963
 11529  02DB  3000               	movlw	0
 11530  02DC  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11531  02DD                     u5963:	
 11532  02DD  1803               	btfsc	3,0
 11533  02DE  0008               	return
 11534                           
 11535                           ;EEPROM_24C1025.c: 26:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11536  02DF  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11537  02E0  1D03               	btfss	3,2
 11538  02E1  2AEE               	goto	l6424
 11539  02E2  3001               	movlw	1
 11540  02E3  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11541  02E4  1D03               	skipz
 11542  02E5  2AEC               	goto	u5973
 11543  02E6  3000               	movlw	0
 11544  02E7  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11545  02E8  1D03               	skipz
 11546  02E9  2AEC               	goto	u5973
 11547  02EA  3000               	movlw	0
 11548  02EB  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11549  02EC                     u5973:	
 11550  02EC  1C03               	btfss	3,0
 11551  02ED  2AF1               	goto	l6426
 11552  02EE                     l6424:	
 11553  02EE  3008               	movlw	8
 11554  02EF  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 11555  02F0  2AF2               	goto	l6428
 11556  02F1                     l6426:	
 11557  02F1  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 11558  02F2                     l6428:	
 11559                           
 11560                           ;EEPROM_24C1025.c: 27:      ctrl=chip_add;
 11561                           
 11562                           ;EEPROM_24C1025.c: 28:      ctrl<<=1;
 11563                           
 11564                           ;EEPROM_24C1025.c: 29:      ctrl |= 0xA0;
 11565                           
 11566                           ;EEPROM_24C1025.c: 30:      ctrl |= range;
 11567  02F2  2405  120A  118A   	fcall	PL40	;call to abstracted procedure
 11568                           
 11569                           ;EEPROM_24C1025.c: 32:      I2C_Master_Start();
 11570  02F5  23AD  120A  118A   	fcall	_I2C_Master_Start
 11571                           
 11572                           ;EEPROM_24C1025.c: 33:      I2C_Master_Write(ctrl);
 11573  02F8  1283               	bcf	3,5	;RP0=0, select bank0
 11574  02F9  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 11575  02FA  00A0               	movwf	I2C_Master_Write@d
 11576  02FB  01A1               	clrf	I2C_Master_Write@d+1
 11577  02FC  23A5  120A  118A   	fcall	_I2C_Master_Write
 11578                           
 11579                           ;EEPROM_24C1025.c: 34:      I2C_Master_Write(((char *)&mem_add)[1]);
 11580  02FF  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11581  0300  00A0               	movwf	I2C_Master_Write@d
 11582  0301  01A1               	clrf	I2C_Master_Write@d+1
 11583  0302  23A5  120A  118A   	fcall	_I2C_Master_Write
 11584                           
 11585                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(((char *)&mem_add)[0]);
 11586  0305  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11587  0306  00A0               	movwf	I2C_Master_Write@d
 11588  0307  01A1               	clrf	I2C_Master_Write@d+1
 11589  0308  23A5  120A  118A   	fcall	_I2C_Master_Write
 11590                           
 11591                           ;EEPROM_24C1025.c: 36:      for(count=0;count<(sizedata-1);count++)
 11592  030B  01AB               	clrf	EEPROM_24C1025_Write_Buffer@count
 11593  030C                     l6492:	
 11594  030C  0826               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 11595  030D  3EFF               	addlw	255
 11596  030E  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 11597  030F  30FF               	movlw	255
 11598  0310  1803               	skipnc
 11599  0311  3000               	movlw	0
 11600  0312  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 11601  0313  3A80               	xorlw	128
 11602  0314  3C80               	sublw	128
 11603  0315  1D03               	skipz
 11604  0316  2B19               	goto	u6015
 11605  0317  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11606  0318  022B               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 11607  0319                     u6015:	
 11608  0319  1803               	btfsc	3,0
 11609  031A  2B8F               	goto	l6494
 11610                           
 11611                           ;EEPROM_24C1025.c: 37:           {;EEPROM_24C1025.c: 38:           if(mem_add>0x1FFFF) r
      +                          eturn;
 11612  031B  1283               	bcf	3,5	;RP0=0, select bank0
 11613  031C  1303               	bcf	3,6	;RP1=0, select bank0
 11614  031D  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11615  031E  1D03               	btfss	3,2
 11616  031F  0008               	return
 11617  0320  3002               	movlw	2
 11618  0321  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11619  0322  1D03               	skipz
 11620  0323  2B2A               	goto	u5983
 11621  0324  3000               	movlw	0
 11622  0325  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11623  0326  1D03               	skipz
 11624  0327  2B2A               	goto	u5983
 11625  0328  3000               	movlw	0
 11626  0329  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11627  032A                     u5983:	
 11628  032A  1803               	btfsc	3,0
 11629  032B  0008               	return
 11630                           
 11631                           ;EEPROM_24C1025.c: 39:           if((mem_add+1)%128==0)
 11632  032C  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11633  032D  3E01               	addlw	1
 11634  032E  397F               	andlw	127
 11635  032F  1D03               	btfss	3,2
 11636  0330  2B7D               	goto	l6484
 11637                           
 11638                           ;EEPROM_24C1025.c: 40:             {;EEPROM_24C1025.c: 41:             I2C_Master_Write(
      +                          *data);
 11639  0331  23E8  120A  118A   	fcall	PL30	;call to abstracted procedure
 11640  0334  23A5  120A  118A   	fcall	_I2C_Master_Write
 11641                           
 11642                           ;EEPROM_24C1025.c: 42:             I2C_Master_Stop();
 11643  0337  23B5  120A  118A   	fcall	_I2C_Master_Stop
 11644                           
 11645                           ;EEPROM_24C1025.c: 44:             _delay((unsigned long)((5)*(8000000/4000.0)));
 11646  033A  300D               	movlw	13
 11647  033B  1283               	bcf	3,5	;RP0=0, select bank0
 11648  033C  1303               	bcf	3,6	;RP1=0, select bank0
 11649  033D  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 11650  033E  30FB               	movlw	251
 11651  033F  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 11652  0340                     u7777:	
 11653  0340  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 11654  0341  2B40               	goto	u7777
 11655  0342  0BAA               	decfsz	??_EEPROM_24C1025_Write_Buffer+1,f
 11656  0343  2B40               	goto	u7777
 11657                           
 11658                           ;EEPROM_24C1025.c: 45:             mem_add++;
 11659  0344  1283               	bcf	3,5	;RP0=0, select bank0
 11660  0345  1303               	bcf	3,6	;RP1=0, select bank0
 11661  0346  0AA2               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
 11662  0347  1903               	skipnz
 11663  0348  0AA3               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 11664  0349  1903               	skipnz
 11665  034A  0AA4               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 11666  034B  1903               	skipnz
 11667  034C  0AA5               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 11668                           
 11669                           ;EEPROM_24C1025.c: 46:             data++;
 11670  034D  0AA7               	incf	EEPROM_24C1025_Write_Buffer@data,f
 11671  034E  1903               	skipnz
 11672  034F  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 11673                           
 11674                           ;EEPROM_24C1025.c: 47:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11675  0350  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11676  0351  1D03               	btfss	3,2
 11677  0352  2B5F               	goto	l6464
 11678  0353  3001               	movlw	1
 11679  0354  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11680  0355  1D03               	skipz
 11681  0356  2B5D               	goto	u6003
 11682  0357  3000               	movlw	0
 11683  0358  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11684  0359  1D03               	skipz
 11685  035A  2B5D               	goto	u6003
 11686  035B  3000               	movlw	0
 11687  035C  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11688  035D                     u6003:	
 11689  035D  1C03               	btfss	3,0
 11690  035E  2B62               	goto	l6466
 11691  035F                     l6464:	
 11692  035F  3008               	movlw	8
 11693  0360  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 11694  0361  2B63               	goto	l6468
 11695  0362                     l6466:	
 11696  0362  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 11697  0363                     l6468:	
 11698                           
 11699                           ;EEPROM_24C1025.c: 48:             ctrl=chip_add;
 11700                           
 11701                           ;EEPROM_24C1025.c: 49:             ctrl<<=1;
 11702                           
 11703                           ;EEPROM_24C1025.c: 50:             ctrl |= 0xA0;
 11704                           
 11705                           ;EEPROM_24C1025.c: 51:             ctrl |= range;
 11706  0363  2405  120A  118A   	fcall	PL40	;call to abstracted procedure
 11707                           
 11708                           ;EEPROM_24C1025.c: 53:             I2C_Master_Start();
 11709  0366  23AD  120A  118A   	fcall	_I2C_Master_Start
 11710                           
 11711                           ;EEPROM_24C1025.c: 54:             I2C_Master_Write(ctrl);
 11712  0369  1283               	bcf	3,5	;RP0=0, select bank0
 11713  036A  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 11714  036B  00A0               	movwf	I2C_Master_Write@d
 11715  036C  01A1               	clrf	I2C_Master_Write@d+1
 11716  036D  23A5  120A  118A   	fcall	_I2C_Master_Write
 11717                           
 11718                           ;EEPROM_24C1025.c: 55:             I2C_Master_Write(((char *)&mem_add)[1]);
 11719  0370  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11720  0371  00A0               	movwf	I2C_Master_Write@d
 11721  0372  01A1               	clrf	I2C_Master_Write@d+1
 11722  0373  23A5  120A  118A   	fcall	_I2C_Master_Write
 11723                           
 11724                           ;EEPROM_24C1025.c: 56:             I2C_Master_Write(((char *)&mem_add)[0]);
 11725  0376  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11726  0377  00A0               	movwf	I2C_Master_Write@d
 11727  0378  01A1               	clrf	I2C_Master_Write@d+1
 11728  0379  23A5  120A  118A   	fcall	_I2C_Master_Write
 11729                           
 11730                           ;EEPROM_24C1025.c: 57:             }
 11731  037C  2B8D               	goto	l6490
 11732  037D                     l6484:	
 11733                           
 11734                           ;EEPROM_24C1025.c: 59:             {;EEPROM_24C1025.c: 60:             I2C_Master_Write(
      +                          *data);
 11735  037D  23E8  120A  118A   	fcall	PL30	;call to abstracted procedure
 11736  0380  23A5  120A  118A   	fcall	_I2C_Master_Write
 11737                           
 11738                           ;EEPROM_24C1025.c: 61:             data++;
 11739  0383  0AA7               	incf	EEPROM_24C1025_Write_Buffer@data,f
 11740  0384  1903               	skipnz
 11741  0385  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 11742                           
 11743                           ;EEPROM_24C1025.c: 62:             mem_add++;
 11744  0386  0AA2               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
 11745  0387  1903               	skipnz
 11746  0388  0AA3               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 11747  0389  1903               	skipnz
 11748  038A  0AA4               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 11749  038B  1903               	skipnz
 11750  038C  0AA5               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 11751  038D                     l6490:	
 11752                           
 11753                           ;EEPROM_24C1025.c: 64:      }
 11754  038D  0AAB               	incf	EEPROM_24C1025_Write_Buffer@count,f
 11755  038E  2B0C               	goto	l6492
 11756  038F                     l6494:	
 11757                           
 11758                           ;EEPROM_24C1025.c: 65:      I2C_Master_Write(*data);
 11759  038F  1283               	bcf	3,5	;RP0=0, select bank0
 11760  0390  1303               	bcf	3,6	;RP1=0, select bank0
 11761  0391  23E8  120A  118A   	fcall	PL30	;call to abstracted procedure
 11762  0394  23A5  120A  118A   	fcall	_I2C_Master_Write
 11763                           
 11764                           ;EEPROM_24C1025.c: 66:      I2C_Master_Stop();
 11765  0397  23B5  120A  118A   	fcall	_I2C_Master_Stop
 11766                           
 11767                           ;EEPROM_24C1025.c: 67:      _delay((unsigned long)((5)*(8000000/4000.0)));
 11768  039A  300D               	movlw	13
 11769  039B  1283               	bcf	3,5	;RP0=0, select bank0
 11770  039C  1303               	bcf	3,6	;RP1=0, select bank0
 11771  039D  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 11772  039E  30FB               	movlw	251
 11773  039F  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 11774  03A0                     u7787:	
 11775  03A0  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 11776  03A1  2BA0               	goto	u7787
 11777  03A2  0BAA               	decfsz	??_EEPROM_24C1025_Write_Buffer+1,f
 11778  03A3  2BA0               	goto	u7787
 11779  03A4  0008               	return
 11780  03A5                     __end_of_EEPROM_24C1025_Write_Buffer:	
 11781  03A5                     __ptext59:	
 11782 ;; *************** function _I2C_Master_Write *****************
 11783 ;; Defined at:
 11784 ;;		line 64 in file "I2C.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;  d               2    0[BANK0 ] unsigned int 
 11787 ;; Auto vars:     Size  Location     Type
 11788 ;;		None
 11789 ;; Return value:  Size  Location     Type
 11790 ;;                  1    wreg      void 
 11791 ;; Registers used:
 11792 ;;		wreg, status,2, status,0, pclath, cstack
 11793 ;; Tracked objects:
 11794 ;;		On entry : 300/0
 11795 ;;		On exit  : 300/0
 11796 ;;		Unchanged: 0/0
 11797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11798 ;;      Params:         0       2       0       0       0
 11799 ;;      Locals:         0       0       0       0       0
 11800 ;;      Temps:          0       0       0       0       0
 11801 ;;      Totals:         0       2       0       0       0
 11802 ;;Total ram usage:        2 bytes
 11803 ;; Hardware stack levels used:    1
 11804 ;; Hardware stack levels required when called:    2
 11805 ;; This function calls:
 11806 ;;		_I2C_Master_Wait
 11807 ;; This function is called by:
 11808 ;;		_EEPROM_24C1025_Write_Buffer
 11809 ;;		_EEPROM_24C1025_Read_Buffer
 11810 ;;		_EEPROM_24C1025_Write_Str
 11811 ;;		_EEPROM_24C1025_Read_Str
 11812 ;; This function uses a non-reentrant model
 11813 ;;
 11814                           
 11815                           
 11816                           ;psect for function _I2C_Master_Write
 11817  03A5                     _I2C_Master_Write:	
 11818                           
 11819                           ;I2C.c: 64: void I2C_Master_Write(unsigned d);I2C.c: 65: {;I2C.c: 66:   generic_status.f
      +                          lag_main_loop_WDT=1;
 11820                           
 11821                           ;incstack = 0
 11822                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11823  03A5  1683               	bsf	3,5	;RP0=1, select bank3
 11824  03A6  1703               	bsf	3,6	;RP1=1, select bank3
 11825  03A7  17BC               	bsf	_generic_status^(0+384),7
 11826                           
 11827                           ;I2C.c: 67:   I2C_Master_Wait();
 11828  03A8  23DC               	fcall	_I2C_Master_Wait
 11829                           
 11830                           ;I2C.c: 68:   SSPBUF = d;
 11831  03A9  1283               	bcf	3,5	;RP0=0, select bank0
 11832  03AA  0820               	movf	I2C_Master_Write@d,w
 11833  03AB  0093               	movwf	19	;volatile
 11834  03AC  0008               	return
 11835  03AD                     __end_of_I2C_Master_Write:	
 11836  03AD                     __ptext61:	
 11837 ;; *************** function _I2C_Master_Start *****************
 11838 ;; Defined at:
 11839 ;;		line 45 in file "I2C.c"
 11840 ;; Parameters:    Size  Location     Type
 11841 ;;		None
 11842 ;; Auto vars:     Size  Location     Type
 11843 ;;		None
 11844 ;; Return value:  Size  Location     Type
 11845 ;;                  1    wreg      void 
 11846 ;; Registers used:
 11847 ;;		wreg, status,2, status,0, pclath, cstack
 11848 ;; Tracked objects:
 11849 ;;		On entry : 300/0
 11850 ;;		On exit  : 300/100
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11853 ;;      Params:         0       0       0       0       0
 11854 ;;      Locals:         0       0       0       0       0
 11855 ;;      Temps:          0       0       0       0       0
 11856 ;;      Totals:         0       0       0       0       0
 11857 ;;Total ram usage:        0 bytes
 11858 ;; Hardware stack levels used:    1
 11859 ;; Hardware stack levels required when called:    2
 11860 ;; This function calls:
 11861 ;;		_I2C_Master_Wait
 11862 ;; This function is called by:
 11863 ;;		_EEPROM_24C1025_Write_Buffer
 11864 ;;		_EEPROM_24C1025_Read_Buffer
 11865 ;;		_EEPROM_24C1025_Write_Str
 11866 ;;		_EEPROM_24C1025_Read_Str
 11867 ;; This function uses a non-reentrant model
 11868 ;;
 11869                           
 11870                           
 11871                           ;psect for function _I2C_Master_Start
 11872  03AD                     _I2C_Master_Start:	
 11873                           
 11874                           ;I2C.c: 47:   Delay_Led_Memory=20;
 11875                           
 11876                           ;incstack = 0
 11877                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11878  03AD  3014               	movlw	20
 11879  03AE  1683               	bsf	3,5	;RP0=1, select bank3
 11880  03AF  1703               	bsf	3,6	;RP1=1, select bank3
 11881  03B0  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 11882  03B1  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 11883                           
 11884                           ;I2C.c: 48:   I2C_Master_Wait();
 11885  03B2  23DC               	fcall	_I2C_Master_Wait
 11886                           
 11887                           ;I2C.c: 49:   SEN = 1;
 11888  03B3  1411               	bsf	17,0	;volatile
 11889  03B4  0008               	return
 11890  03B5                     __end_of_I2C_Master_Start:	
 11891  03B5                     __ptext60:	
 11892 ;; *************** function _I2C_Master_Stop *****************
 11893 ;; Defined at:
 11894 ;;		line 58 in file "I2C.c"
 11895 ;; Parameters:    Size  Location     Type
 11896 ;;		None
 11897 ;; Auto vars:     Size  Location     Type
 11898 ;;		None
 11899 ;; Return value:  Size  Location     Type
 11900 ;;                  1    wreg      void 
 11901 ;; Registers used:
 11902 ;;		wreg, status,2, status,0, pclath, cstack
 11903 ;; Tracked objects:
 11904 ;;		On entry : 300/800
 11905 ;;		On exit  : 300/100
 11906 ;;		Unchanged: 0/0
 11907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11908 ;;      Params:         0       0       0       0       0
 11909 ;;      Locals:         0       0       0       0       0
 11910 ;;      Temps:          0       0       0       0       0
 11911 ;;      Totals:         0       0       0       0       0
 11912 ;;Total ram usage:        0 bytes
 11913 ;; Hardware stack levels used:    1
 11914 ;; Hardware stack levels required when called:    2
 11915 ;; This function calls:
 11916 ;;		_I2C_Master_Wait
 11917 ;; This function is called by:
 11918 ;;		_EEPROM_24C1025_Write_Buffer
 11919 ;;		_EEPROM_24C1025_Read_Buffer
 11920 ;;		_EEPROM_24C1025_Write_Str
 11921 ;;		_EEPROM_24C1025_Read_Str
 11922 ;; This function uses a non-reentrant model
 11923 ;;
 11924                           
 11925                           
 11926                           ;psect for function _I2C_Master_Stop
 11927  03B5                     _I2C_Master_Stop:	
 11928                           
 11929                           ;I2C.c: 60:   I2C_Master_Wait();
 11930                           
 11931                           ;incstack = 0
 11932                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11933  03B5  23DC               	fcall	_I2C_Master_Wait
 11934                           
 11935                           ;I2C.c: 61:   PEN = 1;
 11936  03B6  1511               	bsf	17,2	;volatile
 11937  03B7  0008               	return
 11938  03B8                     __end_of_I2C_Master_Stop:	
 11939  03B8                     __ptext55:	
 11940 ;; *************** function _I2C_Master_Read *****************
 11941 ;; Defined at:
 11942 ;;		line 71 in file "I2C.c"
 11943 ;; Parameters:    Size  Location     Type
 11944 ;;  a               2    0[BANK0 ] unsigned short 
 11945 ;; Auto vars:     Size  Location     Type
 11946 ;;  temp            2    2[BANK0 ] unsigned short 
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  2    0[BANK0 ] unsigned short 
 11949 ;; Registers used:
 11950 ;;		wreg, status,2, status,0, pclath, cstack
 11951 ;; Tracked objects:
 11952 ;;		On entry : 300/0
 11953 ;;		On exit  : 300/0
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11956 ;;      Params:         0       2       0       0       0
 11957 ;;      Locals:         0       2       0       0       0
 11958 ;;      Temps:          0       0       0       0       0
 11959 ;;      Totals:         0       4       0       0       0
 11960 ;;Total ram usage:        4 bytes
 11961 ;; Hardware stack levels used:    1
 11962 ;; Hardware stack levels required when called:    2
 11963 ;; This function calls:
 11964 ;;		_I2C_Master_Wait
 11965 ;; This function is called by:
 11966 ;;		_EEPROM_24C1025_Read_Buffer
 11967 ;;		_EEPROM_24C1025_Read_Str
 11968 ;; This function uses a non-reentrant model
 11969 ;;
 11970                           
 11971                           
 11972                           ;psect for function _I2C_Master_Read
 11973  03B8                     _I2C_Master_Read:	
 11974                           
 11975                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:   u
      +                          nsigned short temp;;I2C.c: 74:   generic_status.flag_main_loop_WDT=1;
 11976                           
 11977                           ;incstack = 0
 11978                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11979  03B8  1683               	bsf	3,5	;RP0=1, select bank3
 11980  03B9  1703               	bsf	3,6	;RP1=1, select bank3
 11981  03BA  17BC               	bsf	_generic_status^(0+384),7
 11982                           
 11983                           ;I2C.c: 75:   I2C_Master_Wait();
 11984  03BB  23DC  120A  118A   	fcall	_I2C_Master_Wait
 11985                           
 11986                           ;I2C.c: 76:   RCEN = 1;
 11987  03BE  1591               	bsf	17,3	;volatile
 11988                           
 11989                           ;I2C.c: 77:   I2C_Master_Wait();
 11990  03BF  23DC  120A  118A   	fcall	_I2C_Master_Wait
 11991                           
 11992                           ;I2C.c: 78:   temp = SSPBUF;
 11993  03C2  1283               	bcf	3,5	;RP0=0, select bank0
 11994  03C3  0813               	movf	19,w	;volatile
 11995  03C4  00A2               	movwf	I2C_Master_Read@temp
 11996  03C5  01A3               	clrf	I2C_Master_Read@temp+1
 11997                           
 11998                           ;I2C.c: 79:   I2C_Master_Wait();
 11999  03C6  23DC  120A  118A   	fcall	_I2C_Master_Wait
 12000                           
 12001                           ;I2C.c: 80:   ACKDT = (a)?0:1;
 12002  03C9  1283               	bcf	3,5	;RP0=0, select bank0
 12003  03CA  0820               	movf	I2C_Master_Read@a,w
 12004  03CB  0421               	iorwf	I2C_Master_Read@a+1,w
 12005  03CC  1D03               	btfss	3,2
 12006  03CD  2BD2               	goto	u5930
 12007  03CE  1683               	bsf	3,5	;RP0=1, select bank1
 12008  03CF  1303               	bcf	3,6	;RP1=0, select bank1
 12009  03D0  1691               	bsf	17,5	;volatile
 12010  03D1  2BD5               	goto	l6392
 12011  03D2                     u5930:	
 12012  03D2  1683               	bsf	3,5	;RP0=1, select bank1
 12013  03D3  1303               	bcf	3,6	;RP1=0, select bank1
 12014  03D4  1291               	bcf	17,5	;volatile
 12015  03D5                     l6392:	
 12016                           
 12017                           ;I2C.c: 81:   ACKEN = 1;
 12018  03D5  1611               	bsf	17,4	;volatile
 12019                           
 12020                           ;I2C.c: 82:   return temp;
 12021  03D6  1283               	bcf	3,5	;RP0=0, select bank0
 12022  03D7  0823               	movf	I2C_Master_Read@temp+1,w
 12023  03D8  00A1               	movwf	?_I2C_Master_Read+1
 12024  03D9  0822               	movf	I2C_Master_Read@temp,w
 12025  03DA  00A0               	movwf	?_I2C_Master_Read
 12026  03DB  0008               	return
 12027  03DC                     __end_of_I2C_Master_Read:	
 12028  03DC                     __ptext62:	
 12029 ;; *************** function _I2C_Master_Wait *****************
 12030 ;; Defined at:
 12031 ;;		line 40 in file "I2C.c"
 12032 ;; Parameters:    Size  Location     Type
 12033 ;;		None
 12034 ;; Auto vars:     Size  Location     Type
 12035 ;;		None
 12036 ;; Return value:  Size  Location     Type
 12037 ;;                  1    wreg      void 
 12038 ;; Registers used:
 12039 ;;		wreg, status,2
 12040 ;; Tracked objects:
 12041 ;;		On entry : 0/0
 12042 ;;		On exit  : 300/100
 12043 ;;		Unchanged: 0/0
 12044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12045 ;;      Params:         0       0       0       0       0
 12046 ;;      Locals:         0       0       0       0       0
 12047 ;;      Temps:          0       0       0       0       0
 12048 ;;      Totals:         0       0       0       0       0
 12049 ;;Total ram usage:        0 bytes
 12050 ;; Hardware stack levels used:    1
 12051 ;; Hardware stack levels required when called:    1
 12052 ;; This function calls:
 12053 ;;		Nothing
 12054 ;; This function is called by:
 12055 ;;		_I2C_Master_Start
 12056 ;;		_I2C_Master_RepeatedStart
 12057 ;;		_I2C_Master_Stop
 12058 ;;		_I2C_Master_Write
 12059 ;;		_I2C_Master_Read
 12060 ;; This function uses a non-reentrant model
 12061 ;;
 12062                           
 12063                           
 12064                           ;psect for function _I2C_Master_Wait
 12065  03DC                     _I2C_Master_Wait:	
 12066  03DC                     l49:	
 12067                           ;I2C.c: 42:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 12068                           
 12069                           ;incstack = 0
 12070                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 12071                           
 12072  03DC  1683               	bsf	3,5	;RP0=1, select bank1
 12073  03DD  1303               	bcf	3,6	;RP1=0, select bank1
 12074  03DE  1914               	btfsc	20,2	;volatile
 12075  03DF  2BDC               	goto	l49
 12076  03E0  0811               	movf	17,w	;volatile
 12077  03E1  391F               	andlw	31
 12078  03E2  1903               	btfsc	3,2
 12079  03E3  0008               	return
 12080  03E4  2BDC               	goto	l49
 12081  03E5                     __end_of_I2C_Master_Wait:	
 12082  03E5                     __ptext54:	
 12083 ;; *************** function _I2C_Master_RepeatedStart *****************
 12084 ;; Defined at:
 12085 ;;		line 52 in file "I2C.c"
 12086 ;; Parameters:    Size  Location     Type
 12087 ;;		None
 12088 ;; Auto vars:     Size  Location     Type
 12089 ;;		None
 12090 ;; Return value:  Size  Location     Type
 12091 ;;                  1    wreg      void 
 12092 ;; Registers used:
 12093 ;;		wreg, status,2, status,0, pclath, cstack
 12094 ;; Tracked objects:
 12095 ;;		On entry : 300/0
 12096 ;;		On exit  : 300/100
 12097 ;;		Unchanged: 0/0
 12098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12099 ;;      Params:         0       0       0       0       0
 12100 ;;      Locals:         0       0       0       0       0
 12101 ;;      Temps:          0       0       0       0       0
 12102 ;;      Totals:         0       0       0       0       0
 12103 ;;Total ram usage:        0 bytes
 12104 ;; Hardware stack levels used:    1
 12105 ;; Hardware stack levels required when called:    2
 12106 ;; This function calls:
 12107 ;;		_I2C_Master_Wait
 12108 ;; This function is called by:
 12109 ;;		_EEPROM_24C1025_Read_Buffer
 12110 ;;		_EEPROM_24C1025_Read_Str
 12111 ;; This function uses a non-reentrant model
 12112 ;;
 12113                           
 12114                           
 12115                           ;psect for function _I2C_Master_RepeatedStart
 12116  03E5                     _I2C_Master_RepeatedStart:	
 12117                           
 12118                           ;I2C.c: 54:   I2C_Master_Wait();
 12119                           
 12120                           ;incstack = 0
 12121                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 12122  03E5  23DC               	fcall	_I2C_Master_Wait
 12123                           
 12124                           ;I2C.c: 55:   RSEN = 1;
 12125  03E6  1491               	bsf	17,1	;volatile
 12126  03E7  0008               	return
 12127  03E8                     __end_of_I2C_Master_RepeatedStart:	
 12128  03E8                     PL30:	
 12129  03E8  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12130  03E9  0084               	movwf	4
 12131  03EA  1783               	bsf	3,7
 12132  03EB  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12133  03EC  1383               	bcf	3,7
 12134  03ED  0800               	movf	0,w
 12135  03EE  00A0               	movwf	I2C_Master_Write@d
 12136  03EF  01A1               	clrf	I2C_Master_Write@d+1
 12137  03F0  0008               	return
 12138  03F1                     __end_ofPL30:	
 12139  03F1                     PL36:	
 12140  03F1  082C               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 12141  03F2  00AE               	movwf	EEPROM_24C1025_Read_Str@ctrl
 12142  03F3  30A0               	movlw	160
 12143  03F4  1003               	clrc
 12144  03F5  0DAE               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 12145  03F6  04AE               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 12146  03F7  142E               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 12147  03F8  082D               	movf	EEPROM_24C1025_Read_Str@range,w
 12148  03F9  04AE               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 12149  03FA  0008               	return
 12150  03FB                     __end_ofPL36:	
 12151  03FB                     PL38:	
 12152  03FB  082E               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 12153  03FC  00B0               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 12154  03FD  30A0               	movlw	160
 12155  03FE  1003               	clrc
 12156  03FF  0DB0               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12157  0400  04B0               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12158  0401  1430               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 12159  0402  082F               	movf	EEPROM_24C1025_Read_Buffer@range,w
 12160  0403  04B0               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12161  0404  0008               	return
 12162  0405                     __end_ofPL38:	
 12163  0405                     PL40:	
 12164  0405  082C               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12165  0406  00AE               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12166  0407  30A0               	movlw	160
 12167  0408  1003               	clrc
 12168  0409  0DAE               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12169  040A  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12170  040B  082D               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12171  040C  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12172  040D  0008               	return
 12173  040E                     __end_ofPL40:	
 12174  040E                     PL48:	
 12175  040E  3014               	movlw	20
 12176  040F  1683               	bsf	3,5	;RP0=1, select bank3
 12177  0410  1703               	bsf	3,6	;RP1=1, select bank3
 12178  0411  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 12179  0412  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 12180  0413  1283               	bcf	3,5	;RP0=0, select bank0
 12181  0414  1303               	bcf	3,6	;RP1=0, select bank0
 12182  0415  0008               	return
 12183  0416                     __end_ofPL48:	
 12184  0416                     PL54:	
 12185  0416  0829               	movf	EEPROM_24C1025_Read_Buffer@data,w
 12186  0417  0084               	movwf	4
 12187  0418  1783               	bsf	3,7
 12188  0419  1C2A               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 12189  041A  1383               	bcf	3,7
 12190  041B  01A0               	clrf	I2C_Master_Read@a
 12191  041C  0008               	return
 12192  041D                     __end_ofPL54:	
 12193  041D                     PL68:	
 12194  041D  1283               	bcf	3,5	;RP0=0, select bank0
 12195  041E  0830               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12196  041F  39FE               	andlw	254
 12197  0420  00A0               	movwf	I2C_Master_Write@d
 12198  0421  01A1               	clrf	I2C_Master_Write@d+1
 12199  0422  0008               	return
 12200  0423                     __end_ofPL68:	
 12201  0423                     PL72:	
 12202  0423  1283               	bcf	3,5	;RP0=0, select bank0
 12203  0424  082E               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 12204  0425  39FE               	andlw	254
 12205  0426  00A0               	movwf	I2C_Master_Write@d
 12206  0427  01A1               	clrf	I2C_Master_Write@d+1
 12207  0428  0008               	return
 12208  0429                     __end_ofPL72:	
 12209  0429                     PL74:	
 12210  0429  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 12211  042A  0084               	movwf	4
 12212  042B  0800               	movf	0,w
 12213  042C  00A0               	movwf	I2C_Master_Write@d
 12214  042D  01A1               	clrf	I2C_Master_Write@d+1
 12215  042E  0008               	return
 12216  042F                     __end_ofPL74:	
 12217                           
 12218                           	psect	text56
 12219  05D2                     __ptext56:	
 12220 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12221 ;; Defined at:
 12222 ;;		line 288 in file "EEPROM_24C1025.c"
 12223 ;; Parameters:    Size  Location     Type
 12224 ;;  chip_add        1    wreg     unsigned char 
 12225 ;;  value           2   25[BANK0 ] unsigned int 
 12226 ;; Auto vars:     Size  Location     Type
 12227 ;;  chip_add        1   27[BANK0 ] unsigned char 
 12228 ;;  mem_add         4   28[BANK0 ] unsigned long 
 12229 ;; Return value:  Size  Location     Type
 12230 ;;                  1    wreg      void 
 12231 ;; Registers used:
 12232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12233 ;; Tracked objects:
 12234 ;;		On entry : 300/300
 12235 ;;		On exit  : 300/0
 12236 ;;		Unchanged: 0/0
 12237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12238 ;;      Params:         0       2       0       0       0
 12239 ;;      Locals:         0       5       0       0       0
 12240 ;;      Temps:          0       0       0       0       0
 12241 ;;      Totals:         0       7       0       0       0
 12242 ;;Total ram usage:        7 bytes
 12243 ;; Hardware stack levels used:    1
 12244 ;; Hardware stack levels required when called:    5
 12245 ;; This function calls:
 12246 ;;		_EEPROM_24C1025_Write_Int
 12247 ;; This function is called by:
 12248 ;;		_Decodify_Command
 12249 ;; This function uses a non-reentrant model
 12250 ;;
 12251                           
 12252                           
 12253                           ;psect for function _EEPROM_24C1025_Fill_All
 12254  05D2                     _EEPROM_24C1025_Fill_All:	
 12255                           
 12256                           ;incstack = 0
 12257                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12258                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12259  05D2  1283               	bcf	3,5	;RP0=0, select bank0
 12260  05D3  1303               	bcf	3,6	;RP1=0, select bank0
 12261  05D4  00BB               	movwf	EEPROM_24C1025_Fill_All@chip_add
 12262                           
 12263                           ;EEPROM_24C1025.c: 289:      unsigned long mem_add;;EEPROM_24C1025.c: 290:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 12264  05D5  01BC               	clrf	EEPROM_24C1025_Fill_All@mem_add
 12265  05D6  01BD               	clrf	EEPROM_24C1025_Fill_All@mem_add+1
 12266  05D7  01BE               	clrf	EEPROM_24C1025_Fill_All@mem_add+2
 12267  05D8  01BF               	clrf	EEPROM_24C1025_Fill_All@mem_add+3
 12268  05D9                     l7394:	
 12269                           
 12270                           ;EEPROM_24C1025.c: 291:         {;EEPROM_24C1025.c: 292:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 12271  05D9  083F               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12272  05DA  00B3               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 12273  05DB  083E               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12274  05DC  00B2               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 12275  05DD  083D               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12276  05DE  00B1               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 12277  05DF  083C               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 12278  05E0  00B0               	movwf	EEPROM_24C1025_Write_Int@mem_add
 12279  05E1  083A               	movf	EEPROM_24C1025_Fill_All@value+1,w
 12280  05E2  00B5               	movwf	EEPROM_24C1025_Write_Int@data+1
 12281  05E3  0839               	movf	EEPROM_24C1025_Fill_All@value,w
 12282  05E4  00B4               	movwf	EEPROM_24C1025_Write_Int@data
 12283  05E5  083B               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 12284  05E6  26A7  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 12285  05E9  0064               	clrwdt	;# 
 12286                           
 12287                           ;EEPROM_24C1025.c: 294:         }
 12288  05EA  3002               	movlw	2
 12289  05EB  1283               	bcf	3,5	;RP0=0, select bank0
 12290  05EC  1303               	bcf	3,6	;RP1=0, select bank0
 12291  05ED  07BC               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 12292  05EE  3001               	movlw	1
 12293  05EF  1803               	skipnc
 12294  05F0  07BD               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 12295  05F1  1803               	skipnc
 12296  05F2  07BE               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 12297  05F3  1803               	skipnc
 12298  05F4  07BF               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 12299  05F5  083F               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12300  05F6  1D03               	btfss	3,2
 12301  05F7  0008               	return
 12302  05F8  083E               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12303  05F9  1D03               	btfss	3,2
 12304  05FA  0008               	return
 12305  05FB  3004               	movlw	4
 12306  05FC  023D               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12307  05FD  1D03               	skipz
 12308  05FE  2E01               	goto	u7033
 12309  05FF  3000               	movlw	0
 12310  0600  023C               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 12311  0601                     u7033:	
 12312  0601  1803               	btfsc	3,0
 12313  0602  0008               	return
 12314  0603  2DD9               	goto	l7394
 12315  0604                     __end_of_EEPROM_24C1025_Fill_All:	
 12316  0604                     __ptext27:	
 12317 ;; *************** function _Save_Log *****************
 12318 ;; Defined at:
 12319 ;;		line 1005 in file "SlaveLiofilizadorVer1.c"
 12320 ;; Parameters:    Size  Location     Type
 12321 ;;  add_datalog     4   25[BANK0 ] unsigned long 
 12322 ;; Auto vars:     Size  Location     Type
 12323 ;;		None
 12324 ;; Return value:  Size  Location     Type
 12325 ;;                  1    wreg      void 
 12326 ;; Registers used:
 12327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12328 ;; Tracked objects:
 12329 ;;		On entry : 300/0
 12330 ;;		On exit  : 0/0
 12331 ;;		Unchanged: 0/0
 12332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12333 ;;      Params:         0       4       0       0       0
 12334 ;;      Locals:         0       0       0       0       0
 12335 ;;      Temps:          0       0       0       0       0
 12336 ;;      Totals:         0       4       0       0       0
 12337 ;;Total ram usage:        4 bytes
 12338 ;; Hardware stack levels used:    1
 12339 ;; Hardware stack levels required when called:    5
 12340 ;; This function calls:
 12341 ;;		_EEPROM_24C1025_Write_Int
 12342 ;;		___fltol
 12343 ;;		___wmul
 12344 ;; This function is called by:
 12345 ;;		_Decodify_Command
 12346 ;; This function uses a non-reentrant model
 12347 ;;
 12348                           
 12349                           
 12350                           ;psect for function _Save_Log
 12351  0604                     _Save_Log:	
 12352                           
 12353                           ;SlaveLiofilizadorVer1.c: 1006:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (int) T
      +                          emperatura0*10);
 12354                           
 12355                           ;incstack = 0
 12356                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12357  0604  26D8  120A  118A   	fcall	PL32	;call to abstracted procedure
 12358  0607  0817               	movf	(_Temperatura0+3)^(0+384),w
 12359  0608  1283               	bcf	3,5	;RP0=0, select bank0
 12360  0609  1303               	bcf	3,6	;RP1=0, select bank0
 12361  060A  00A3               	movwf	___fltol@f1+3
 12362  060B  1683               	bsf	3,5	;RP0=1, select bank3
 12363  060C  1703               	bsf	3,6	;RP1=1, select bank3
 12364  060D  0816               	movf	(_Temperatura0+2)^(0+384),w
 12365  060E  1283               	bcf	3,5	;RP0=0, select bank0
 12366  060F  1303               	bcf	3,6	;RP1=0, select bank0
 12367  0610  00A2               	movwf	___fltol@f1+2
 12368  0611  1683               	bsf	3,5	;RP0=1, select bank3
 12369  0612  1703               	bsf	3,6	;RP1=1, select bank3
 12370  0613  0815               	movf	(_Temperatura0+1)^(0+384),w
 12371  0614  1283               	bcf	3,5	;RP0=0, select bank0
 12372  0615  1303               	bcf	3,6	;RP1=0, select bank0
 12373  0616  00A1               	movwf	___fltol@f1+1
 12374  0617  1683               	bsf	3,5	;RP0=1, select bank3
 12375  0618  1703               	bsf	3,6	;RP1=1, select bank3
 12376  0619  0814               	movf	_Temperatura0^(0+384),w
 12377  061A  1283               	bcf	3,5	;RP0=0, select bank0
 12378  061B  1303               	bcf	3,6	;RP1=0, select bank0
 12379  061C  00A0               	movwf	___fltol@f1
 12380  061D  2658  120A  118A   	fcall	___fltol
 12381  0620  26E3  120A  118A   	fcall	PL50	;call to abstracted procedure
 12382  0623  26BF  120A  118A   	fcall	___wmul
 12383  0626  082B               	movf	?___wmul+1,w
 12384  0627  00B5               	movwf	EEPROM_24C1025_Write_Int@data+1
 12385  0628  082A               	movf	?___wmul,w
 12386  0629  00B4               	movwf	EEPROM_24C1025_Write_Int@data
 12387  062A  3000               	movlw	0
 12388  062B  26A7  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 12389                           
 12390                           ;SlaveLiofilizadorVer1.c: 1007:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (int) T
      +                          emperatura1*10);
 12391  062E  1283               	bcf	3,5	;RP0=0, select bank0
 12392  062F  1303               	bcf	3,6	;RP1=0, select bank0
 12393  0630  26D8  120A  118A   	fcall	PL32	;call to abstracted procedure
 12394  0633  0813               	movf	(_Temperatura1+3)^(0+384),w
 12395  0634  1283               	bcf	3,5	;RP0=0, select bank0
 12396  0635  1303               	bcf	3,6	;RP1=0, select bank0
 12397  0636  00A3               	movwf	___fltol@f1+3
 12398  0637  1683               	bsf	3,5	;RP0=1, select bank3
 12399  0638  1703               	bsf	3,6	;RP1=1, select bank3
 12400  0639  0812               	movf	(_Temperatura1+2)^(0+384),w
 12401  063A  1283               	bcf	3,5	;RP0=0, select bank0
 12402  063B  1303               	bcf	3,6	;RP1=0, select bank0
 12403  063C  00A2               	movwf	___fltol@f1+2
 12404  063D  1683               	bsf	3,5	;RP0=1, select bank3
 12405  063E  1703               	bsf	3,6	;RP1=1, select bank3
 12406  063F  0811               	movf	(_Temperatura1+1)^(0+384),w
 12407  0640  1283               	bcf	3,5	;RP0=0, select bank0
 12408  0641  1303               	bcf	3,6	;RP1=0, select bank0
 12409  0642  00A1               	movwf	___fltol@f1+1
 12410  0643  1683               	bsf	3,5	;RP0=1, select bank3
 12411  0644  1703               	bsf	3,6	;RP1=1, select bank3
 12412  0645  0810               	movf	_Temperatura1^(0+384),w
 12413  0646  1283               	bcf	3,5	;RP0=0, select bank0
 12414  0647  1303               	bcf	3,6	;RP1=0, select bank0
 12415  0648  00A0               	movwf	___fltol@f1
 12416  0649  2658  120A  118A   	fcall	___fltol
 12417  064C  26E3  120A  118A   	fcall	PL50	;call to abstracted procedure
 12418  064F  26BF  120A  118A   	fcall	___wmul
 12419  0652  082B               	movf	?___wmul+1,w
 12420  0653  00B5               	movwf	EEPROM_24C1025_Write_Int@data+1
 12421  0654  082A               	movf	?___wmul,w
 12422  0655  00B4               	movwf	EEPROM_24C1025_Write_Int@data
 12423  0656  3001               	movlw	1
 12424  0657  2EA7               	ljmp	_EEPROM_24C1025_Write_Int
 12425  0658                     __end_of_Save_Log:	
 12426  0658                     __ptext29:	
 12427 ;; *************** function ___fltol *****************
 12428 ;; Defined at:
 12429 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
 12430 ;; Parameters:    Size  Location     Type
 12431 ;;  f1              4    0[BANK0 ] unsigned int 
 12432 ;; Auto vars:     Size  Location     Type
 12433 ;;  exp1            1    9[BANK0 ] unsigned char 
 12434 ;;  sign1           1    8[BANK0 ] unsigned char 
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  4    0[BANK0 ] long 
 12437 ;; Registers used:
 12438 ;;		wreg, status,2, status,0
 12439 ;; Tracked objects:
 12440 ;;		On entry : 300/0
 12441 ;;		On exit  : 300/0
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12444 ;;      Params:         0       4       0       0       0
 12445 ;;      Locals:         0       2       0       0       0
 12446 ;;      Temps:          0       4       0       0       0
 12447 ;;      Totals:         0      10       0       0       0
 12448 ;;Total ram usage:       10 bytes
 12449 ;; Hardware stack levels used:    1
 12450 ;; Hardware stack levels required when called:    1
 12451 ;; This function calls:
 12452 ;;		Nothing
 12453 ;; This function is called by:
 12454 ;;		_Decodify_Command
 12455 ;;		_Save_Log
 12456 ;; This function uses a non-reentrant model
 12457 ;;
 12458                           
 12459                           
 12460                           ;psect for function ___fltol
 12461  0658                     ___fltol:	
 12462                           
 12463                           ;incstack = 0
 12464                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 12465  0658  1003               	clrc
 12466  0659  0D22               	rlf	___fltol@f1+2,w
 12467  065A  0D23               	rlf	___fltol@f1+3,w
 12468  065B  00A9               	movwf	___fltol@exp1
 12469  065C  0829               	movf	___fltol@exp1,w
 12470  065D  1D03               	btfss	3,2
 12471  065E  2E64               	goto	l6892
 12472  065F                     l6890:	
 12473  065F  01A0               	clrf	?___fltol
 12474  0660  01A1               	clrf	?___fltol+1
 12475  0661  01A2               	clrf	?___fltol+2
 12476  0662  01A3               	clrf	?___fltol+3
 12477  0663  0008               	return
 12478  0664                     l6892:	
 12479  0664  0820               	movf	___fltol@f1,w
 12480  0665  00A4               	movwf	??___fltol
 12481  0666  0821               	movf	___fltol@f1+1,w
 12482  0667  00A5               	movwf	??___fltol+1
 12483  0668  0822               	movf	___fltol@f1+2,w
 12484  0669  00A6               	movwf	??___fltol+2
 12485  066A  0823               	movf	___fltol@f1+3,w
 12486  066B  00A7               	movwf	??___fltol+3
 12487  066C  301F               	movlw	31
 12488  066D                     u6525:	
 12489  066D  1003               	clrc
 12490  066E  0CA7               	rrf	??___fltol+3,f
 12491  066F  0CA6               	rrf	??___fltol+2,f
 12492  0670  0CA5               	rrf	??___fltol+1,f
 12493  0671  0CA4               	rrf	??___fltol,f
 12494  0672  3EFF               	addlw	-1
 12495  0673  1D03               	skipz
 12496  0674  2E6D               	goto	u6525
 12497  0675  0824               	movf	??___fltol,w
 12498  0676  00A8               	movwf	___fltol@sign1
 12499  0677  3096               	movlw	150
 12500  0678  17A2               	bsf	___fltol@f1+2,7
 12501  0679  01A3               	clrf	___fltol@f1+3
 12502  067A  02A9               	subwf	___fltol@exp1,f
 12503  067B  1FA9               	btfss	___fltol@exp1,7
 12504  067C  2E8A               	goto	l6910
 12505  067D  0829               	movf	___fltol@exp1,w
 12506  067E  3A80               	xorlw	128
 12507  067F  3E97               	addlw	151
 12508  0680  1C03               	btfss	3,0
 12509  0681  2E5F               	goto	l6890
 12510  0682                     l6906:	
 12511  0682  1003               	clrc
 12512  0683  0CA3               	rrf	___fltol@f1+3,f
 12513  0684  0CA2               	rrf	___fltol@f1+2,f
 12514  0685  0CA1               	rrf	___fltol@f1+1,f
 12515  0686  0CA0               	rrf	___fltol@f1,f
 12516  0687  0FA9               	incfsz	___fltol@exp1,f
 12517  0688  2E82               	goto	l6906
 12518  0689  2E98               	goto	l6918
 12519  068A                     l6910:	
 12520  068A  3020               	movlw	32
 12521  068B  0229               	subwf	___fltol@exp1,w
 12522  068C  1803               	btfsc	3,0
 12523  068D  2E5F               	goto	l6890
 12524  068E                     l6916:	
 12525  068E  0829               	movf	___fltol@exp1,w
 12526  068F  1903               	btfsc	3,2
 12527  0690  2E98               	goto	l6918
 12528  0691  1003               	clrc
 12529  0692  0DA0               	rlf	___fltol@f1,f
 12530  0693  0DA1               	rlf	___fltol@f1+1,f
 12531  0694  0DA2               	rlf	___fltol@f1+2,f
 12532  0695  0DA3               	rlf	___fltol@f1+3,f
 12533  0696  03A9               	decf	___fltol@exp1,f
 12534  0697  2E8E               	goto	l6916
 12535  0698                     l6918:	
 12536  0698  0828               	movf	___fltol@sign1,w
 12537  0699  1903               	btfsc	3,2
 12538  069A  0008               	return
 12539  069B  09A0               	comf	___fltol@f1,f
 12540  069C  09A1               	comf	___fltol@f1+1,f
 12541  069D  09A2               	comf	___fltol@f1+2,f
 12542  069E  09A3               	comf	___fltol@f1+3,f
 12543  069F  0AA0               	incf	___fltol@f1,f
 12544  06A0  1903               	skipnz
 12545  06A1  0AA1               	incf	___fltol@f1+1,f
 12546  06A2  1903               	skipnz
 12547  06A3  0AA2               	incf	___fltol@f1+2,f
 12548  06A4  1903               	skipnz
 12549  06A5  0AA3               	incf	___fltol@f1+3,f
 12550  06A6  0008               	return
 12551  06A7                     __end_of___fltol:	
 12552  06A7                     __ptext57:	
 12553 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 12554 ;; Defined at:
 12555 ;;		line 273 in file "EEPROM_24C1025.c"
 12556 ;; Parameters:    Size  Location     Type
 12557 ;;  chip_add        1    wreg     unsigned char 
 12558 ;;  mem_add         4   16[BANK0 ] unsigned long 
 12559 ;;  data            2   20[BANK0 ] int 
 12560 ;; Auto vars:     Size  Location     Type
 12561 ;;  chip_add        1   22[BANK0 ] unsigned char 
 12562 ;;  local           2   23[BANK0 ] unsigned char [2]
 12563 ;; Return value:  Size  Location     Type
 12564 ;;                  1    wreg      void 
 12565 ;; Registers used:
 12566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12567 ;; Tracked objects:
 12568 ;;		On entry : 0/300
 12569 ;;		On exit  : 0/0
 12570 ;;		Unchanged: 0/0
 12571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12572 ;;      Params:         0       6       0       0       0
 12573 ;;      Locals:         0       3       0       0       0
 12574 ;;      Temps:          0       0       0       0       0
 12575 ;;      Totals:         0       9       0       0       0
 12576 ;;Total ram usage:        9 bytes
 12577 ;; Hardware stack levels used:    1
 12578 ;; Hardware stack levels required when called:    4
 12579 ;; This function calls:
 12580 ;;		_EEPROM_24C1025_Write_Buffer
 12581 ;; This function is called by:
 12582 ;;		_Decodify_Command
 12583 ;;		_Save_Log
 12584 ;;		_EEPROM_24C1025_Fill_All
 12585 ;; This function uses a non-reentrant model
 12586 ;;
 12587                           
 12588                           
 12589                           ;psect for function _EEPROM_24C1025_Write_Int
 12590  06A7                     _EEPROM_24C1025_Write_Int:	
 12591                           
 12592                           ;incstack = 0
 12593                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12594                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 12595  06A7  1283               	bcf	3,5	;RP0=0, select bank0
 12596  06A8  1303               	bcf	3,6	;RP1=0, select bank0
 12597  06A9  00B6               	movwf	EEPROM_24C1025_Write_Int@chip_add
 12598                           
 12599                           ;EEPROM_24C1025.c: 274:      char local[2];;EEPROM_24C1025.c: 275:      local[0]=((char 
      +                          *)&data)[1];
 12600  06AA  0835               	movf	EEPROM_24C1025_Write_Int@data+1,w
 12601  06AB  00B7               	movwf	EEPROM_24C1025_Write_Int@local
 12602                           
 12603                           ;EEPROM_24C1025.c: 276:      local[1]=((char *)&data)[0];
 12604  06AC  0834               	movf	EEPROM_24C1025_Write_Int@data,w
 12605  06AD  00B8               	movwf	EEPROM_24C1025_Write_Int@local+1
 12606                           
 12607                           ;EEPROM_24C1025.c: 277:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12608  06AE  0833               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 12609  06AF  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12610  06B0  0832               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 12611  06B1  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12612  06B2  0831               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 12613  06B3  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12614  06B4  0830               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 12615  06B5  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12616  06B6  3002               	movlw	2
 12617  06B7  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12618  06B8  3037               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12619  06B9  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 12620  06BA  01A8               	clrf	EEPROM_24C1025_Write_Buffer@data+1
 12621  06BB  0836               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 12622  06BC  120A  118A  2ACA   	ljmp	_EEPROM_24C1025_Write_Buffer
 12623  06BF                     __end_of_EEPROM_24C1025_Write_Int:	
 12624  06BF                     __ptext28:	
 12625 ;; *************** function ___wmul *****************
 12626 ;; Defined at:
 12627 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
 12628 ;; Parameters:    Size  Location     Type
 12629 ;;  multiplier      2   10[BANK0 ] unsigned int 
 12630 ;;  multiplicand    2   12[BANK0 ] unsigned int 
 12631 ;; Auto vars:     Size  Location     Type
 12632 ;;  product         2   14[BANK0 ] unsigned int 
 12633 ;; Return value:  Size  Location     Type
 12634 ;;                  2   10[BANK0 ] unsigned int 
 12635 ;; Registers used:
 12636 ;;		wreg, status,2, status,0
 12637 ;; Tracked objects:
 12638 ;;		On entry : 300/0
 12639 ;;		On exit  : 300/0
 12640 ;;		Unchanged: 0/0
 12641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12642 ;;      Params:         0       4       0       0       0
 12643 ;;      Locals:         0       2       0       0       0
 12644 ;;      Temps:          0       0       0       0       0
 12645 ;;      Totals:         0       6       0       0       0
 12646 ;;Total ram usage:        6 bytes
 12647 ;; Hardware stack levels used:    1
 12648 ;; Hardware stack levels required when called:    1
 12649 ;; This function calls:
 12650 ;;		Nothing
 12651 ;; This function is called by:
 12652 ;;		_Save_Log
 12653 ;; This function uses a non-reentrant model
 12654 ;;
 12655                           
 12656                           
 12657                           ;psect for function ___wmul
 12658  06BF                     ___wmul:	
 12659                           
 12660                           ;incstack = 0
 12661                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12662  06BF  01AE               	clrf	___wmul@product
 12663  06C0  01AF               	clrf	___wmul@product+1
 12664  06C1                     l6874:	
 12665  06C1  1C2A               	btfss	___wmul@multiplier,0
 12666  06C2  2EC9               	goto	l6878
 12667  06C3  082C               	movf	___wmul@multiplicand,w
 12668  06C4  07AE               	addwf	___wmul@product,f
 12669  06C5  1803               	skipnc
 12670  06C6  0AAF               	incf	___wmul@product+1,f
 12671  06C7  082D               	movf	___wmul@multiplicand+1,w
 12672  06C8  07AF               	addwf	___wmul@product+1,f
 12673  06C9                     l6878:	
 12674  06C9  1003               	clrc
 12675  06CA  0DAC               	rlf	___wmul@multiplicand,f
 12676  06CB  0DAD               	rlf	___wmul@multiplicand+1,f
 12677  06CC  1003               	clrc
 12678  06CD  0CAB               	rrf	___wmul@multiplier+1,f
 12679  06CE  0CAA               	rrf	___wmul@multiplier,f
 12680  06CF  082A               	movf	___wmul@multiplier,w
 12681  06D0  042B               	iorwf	___wmul@multiplier+1,w
 12682  06D1  1D03               	btfss	3,2
 12683  06D2  2EC1               	goto	l6874
 12684  06D3  082F               	movf	___wmul@product+1,w
 12685  06D4  00AB               	movwf	?___wmul+1
 12686  06D5  082E               	movf	___wmul@product,w
 12687  06D6  00AA               	movwf	?___wmul
 12688  06D7  0008               	return
 12689  06D8                     __end_of___wmul:	
 12690  06D8                     PL32:	
 12691  06D8  083C               	movf	Save_Log@add_datalog+3,w
 12692  06D9  00B3               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 12693  06DA  083B               	movf	Save_Log@add_datalog+2,w
 12694  06DB  00B2               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 12695  06DC  083A               	movf	Save_Log@add_datalog+1,w
 12696  06DD  00B1               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 12697  06DE  0839               	movf	Save_Log@add_datalog,w
 12698  06DF  00B0               	movwf	EEPROM_24C1025_Write_Int@mem_add
 12699  06E0  1683               	bsf	3,5	;RP0=1, select bank3
 12700  06E1  1703               	bsf	3,6	;RP1=1, select bank3
 12701  06E2  0008               	return
 12702  06E3                     __end_ofPL32:	
 12703  06E3                     PL50:	
 12704  06E3  0821               	movf	?___fltol+1,w
 12705  06E4  00AB               	movwf	___wmul@multiplier+1
 12706  06E5  0820               	movf	?___fltol,w
 12707  06E6  00AA               	movwf	___wmul@multiplier
 12708  06E7  300A               	movlw	10
 12709  06E8  00AC               	movwf	___wmul@multiplicand
 12710  06E9  01AD               	clrf	___wmul@multiplicand+1
 12711  06EA  0008               	return
 12712  06EB                     __end_ofPL50:	
 12713                           
 12714                           	psect	text67
 12715  042F                     __ptext67:	
 12716 ;; *************** function _Auto_Relay0 *****************
 12717 ;; Defined at:
 12718 ;;		line 857 in file "SlaveLiofilizadorVer1.c"
 12719 ;; Parameters:    Size  Location     Type
 12720 ;;		None
 12721 ;; Auto vars:     Size  Location     Type
 12722 ;;		None
 12723 ;; Return value:  Size  Location     Type
 12724 ;;                  1    wreg      void 
 12725 ;; Registers used:
 12726 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12727 ;; Tracked objects:
 12728 ;;		On entry : 300/300
 12729 ;;		On exit  : 200/0
 12730 ;;		Unchanged: 0/0
 12731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12732 ;;      Params:         0       0       0       0       0
 12733 ;;      Locals:         0       0       0       0       0
 12734 ;;      Temps:          0       0       0       0       0
 12735 ;;      Totals:         0       0       0       0       0
 12736 ;;Total ram usage:        0 bytes
 12737 ;; Hardware stack levels used:    1
 12738 ;; Hardware stack levels required when called:    3
 12739 ;; This function calls:
 12740 ;;		_Rele0Desligado
 12741 ;;		_Rele0Ligado
 12742 ;;		___flge
 12743 ;;		___flsub
 12744 ;; This function is called by:
 12745 ;;		_main
 12746 ;; This function uses a non-reentrant model
 12747 ;;
 12748                           
 12749                           
 12750                           ;psect for function _Auto_Relay0
 12751  042F                     _Auto_Relay0:	
 12752                           
 12753                           ;SlaveLiofilizadorVer1.c: 858:              if(Status0==0)
 12754                           
 12755                           ;incstack = 0
 12756                           ; Regs used in _Auto_Relay0: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12757  042F  0828               	movf	_Status0^(0+384),w
 12758  0430  0429               	iorwf	(_Status0+1)^(0+384),w
 12759  0431  1D03               	btfss	3,2
 12760  0432  2C34               	goto	l7700
 12761  0433                     l7698:	
 12762                           
 12763                           ;SlaveLiofilizadorVer1.c: 859:                  {;SlaveLiofilizadorVer1.c: 860:         
      +                                   Rele0Desligado();
 12764  0433  2D69               	ljmp	l7532
 12765  0434                     l7700:	
 12766                           ;SlaveLiofilizadorVer1.c: 861:                  }
 12767                           
 12768                           
 12769                           ;SlaveLiofilizadorVer1.c: 863:                  {;SlaveLiofilizadorVer1.c: 865:         
      +                                   if (Temperatura0<=(SetPoint0-Histerese0))
 12770  0434  081F               	movf	(_Histerese0+3)^(0+384),w
 12771  0435  1283               	bcf	3,5	;RP0=0, select bank0
 12772  0436  1303               	bcf	3,6	;RP1=0, select bank0
 12773  0437  00D0               	movwf	___flsub@a+3
 12774  0438  1683               	bsf	3,5	;RP0=1, select bank3
 12775  0439  1703               	bsf	3,6	;RP1=1, select bank3
 12776  043A  081E               	movf	(_Histerese0+2)^(0+384),w
 12777  043B  1283               	bcf	3,5	;RP0=0, select bank0
 12778  043C  1303               	bcf	3,6	;RP1=0, select bank0
 12779  043D  00CF               	movwf	___flsub@a+2
 12780  043E  1683               	bsf	3,5	;RP0=1, select bank3
 12781  043F  1703               	bsf	3,6	;RP1=1, select bank3
 12782  0440  081D               	movf	(_Histerese0+1)^(0+384),w
 12783  0441  1283               	bcf	3,5	;RP0=0, select bank0
 12784  0442  1303               	bcf	3,6	;RP1=0, select bank0
 12785  0443  00CE               	movwf	___flsub@a+1
 12786  0444  1683               	bsf	3,5	;RP0=1, select bank3
 12787  0445  1703               	bsf	3,6	;RP1=1, select bank3
 12788  0446  081C               	movf	_Histerese0^(0+384),w
 12789  0447  1283               	bcf	3,5	;RP0=0, select bank0
 12790  0448  1303               	bcf	3,6	;RP1=0, select bank0
 12791  0449  00CD               	movwf	___flsub@a
 12792  044A  0873               	movf	_SetPoint0+3,w	;volatile
 12793  044B  00D4               	movwf	___flsub@b+3
 12794  044C  0872               	movf	_SetPoint0+2,w	;volatile
 12795  044D  00D3               	movwf	___flsub@b+2
 12796  044E  0871               	movf	_SetPoint0+1,w	;volatile
 12797  044F  00D2               	movwf	___flsub@b+1
 12798  0450  0870               	movf	_SetPoint0,w	;volatile
 12799  0451  00D1               	movwf	___flsub@b
 12800  0452  160A  118A  2638  120A  118A  	fcall	___flsub
 12801  0457  25C4  120A  118A   	fcall	PL34	;call to abstracted procedure
 12802  045A  25A2  120A  118A   	fcall	PL4	;call to abstracted procedure
 12803  045D  24FB  120A  118A   	fcall	___flge
 12804  0460  1C03               	btfss	3,0
 12805  0461  2C6E               	goto	l7706
 12806                           
 12807                           ;SlaveLiofilizadorVer1.c: 866:                     {;SlaveLiofilizadorVer1.c: 867:      
      +                                         RL0Status=1;
 12808  0462  1683               	bsf	3,5	;RP0=1, select bank3
 12809  0463  1703               	bsf	3,6	;RP1=1, select bank3
 12810  0464  01DE               	clrf	_RL0Status^(0+384)
 12811  0465  0ADE               	incf	_RL0Status^(0+384),f
 12812  0466  2C6B               	goto	l7704
 12813  0467                     l7708:	
 12814                           
 12815                           ;SlaveLiofilizadorVer1.c: 871:                           {;SlaveLiofilizadorVer1.c: 872:
      +                                                     if(RL0Status==1)
 12816  0467  1683               	bsf	3,5	;RP0=1, select bank3
 12817  0468  1703               	bsf	3,6	;RP1=1, select bank3
 12818  0469  0B5E               	decfsz	_RL0Status^(0+384),w
 12819  046A  2C33               	goto	l7698
 12820  046B                     l7704:	
 12821                           
 12822                           ;SlaveLiofilizadorVer1.c: 868:                     Rele0Ligado();
 12823  046B  160A  118A  28F0   	ljmp	l7508
 12824  046E                     l7706:	
 12825                           ;SlaveLiofilizadorVer1.c: 869:                     }
 12826                           
 12827  046E  25BC  120A  118A   	fcall	PL10	;call to abstracted procedure
 12828  0471  25A2  120A  118A   	fcall	PL4	;call to abstracted procedure
 12829  0474  24FB  120A  118A   	fcall	___flge
 12830  0477  1803               	btfsc	3,0
 12831  0478  2C67               	goto	l7708
 12832  0479  25BC  120A  118A   	fcall	PL10	;call to abstracted procedure
 12833  047C  25A2  120A  118A   	fcall	PL4	;call to abstracted procedure
 12834  047F  24FB  120A  118A   	fcall	___flge
 12835  0482  1803               	btfsc	3,0
 12836  0483  0008               	return
 12837                           
 12838                           ;SlaveLiofilizadorVer1.c: 882:                           {;SlaveLiofilizadorVer1.c: 883:
      +                                                     RL0Status=0;
 12839  0484  1683               	bsf	3,5	;RP0=1, select bank3
 12840  0485  1703               	bsf	3,6	;RP1=1, select bank3
 12841  0486  01DE               	clrf	_RL0Status^(0+384)
 12842  0487  2C33               	goto	l7698
 12843  0488                     __end_of_Auto_Relay0:	
 12844  0488                     __ptext63:	
 12845 ;; *************** function _Auto_Relay1 *****************
 12846 ;; Defined at:
 12847 ;;		line 893 in file "SlaveLiofilizadorVer1.c"
 12848 ;; Parameters:    Size  Location     Type
 12849 ;;		None
 12850 ;; Auto vars:     Size  Location     Type
 12851 ;;		None
 12852 ;; Return value:  Size  Location     Type
 12853 ;;                  1    wreg      void 
 12854 ;; Registers used:
 12855 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12856 ;; Tracked objects:
 12857 ;;		On entry : 200/100
 12858 ;;		On exit  : 0/0
 12859 ;;		Unchanged: 0/0
 12860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12861 ;;      Params:         0       0       0       0       0
 12862 ;;      Locals:         0       0       0       0       0
 12863 ;;      Temps:          0       0       0       0       0
 12864 ;;      Totals:         0       0       0       0       0
 12865 ;;Total ram usage:        0 bytes
 12866 ;; Hardware stack levels used:    1
 12867 ;; Hardware stack levels required when called:    3
 12868 ;; This function calls:
 12869 ;;		_Rele1Desligado
 12870 ;;		_Rele1Ligado
 12871 ;;		___flge
 12872 ;;		___flsub
 12873 ;;		___xxtofl
 12874 ;; This function is called by:
 12875 ;;		_main
 12876 ;; This function uses a non-reentrant model
 12877 ;;
 12878                           
 12879                           
 12880                           ;psect for function _Auto_Relay1
 12881  0488                     _Auto_Relay1:	
 12882                           
 12883                           ;SlaveLiofilizadorVer1.c: 894:              if(Status1==0)
 12884                           
 12885                           ;incstack = 0
 12886                           ; Regs used in _Auto_Relay1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12887  0488  1683               	bsf	3,5	;RP0=1, select bank3
 12888  0489  1703               	bsf	3,6	;RP1=1, select bank3
 12889  048A  0826               	movf	_Status1^(0+384),w
 12890  048B  0427               	iorwf	(_Status1+1)^(0+384),w
 12891  048C  1D03               	btfss	3,2
 12892  048D  2C8F               	goto	l7724
 12893  048E                     l7722:	
 12894                           
 12895                           ;SlaveLiofilizadorVer1.c: 895:                  {;SlaveLiofilizadorVer1.c: 896:         
      +                                   Rele1Desligado();
 12896  048E  2D6D               	ljmp	l7534
 12897  048F                     l7724:	
 12898                           ;SlaveLiofilizadorVer1.c: 897:                  }
 12899                           
 12900                           
 12901                           ;SlaveLiofilizadorVer1.c: 899:                  {;SlaveLiofilizadorVer1.c: 901:         
      +                                   if (Temperatura1<=(SetPoint1-Histerese1))
 12902  048F  0838               	movf	_Histerese1^(0+384),w
 12903  0490  1283               	bcf	3,5	;RP0=0, select bank0
 12904  0491  1303               	bcf	3,6	;RP1=0, select bank0
 12905  0492  25CC               	fcall	PL62	;call to abstracted procedure
 12906  0493  160A  118A  24A9  120A  118A  	fcall	___xxtofl
 12907  0498  160A  118A  278F  120A  118A  	fcall	PL24	;call to abstracted procedure
 12908  049D  1683               	bsf	3,5	;RP0=1, select bank3
 12909  049E  1703               	bsf	3,6	;RP1=1, select bank3
 12910  049F  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
 12911  04A0  1283               	bcf	3,5	;RP0=0, select bank0
 12912  04A1  1303               	bcf	3,6	;RP1=0, select bank0
 12913  04A2  00D4               	movwf	___flsub@b+3
 12914  04A3  1683               	bsf	3,5	;RP0=1, select bank3
 12915  04A4  1703               	bsf	3,6	;RP1=1, select bank3
 12916  04A5  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
 12917  04A6  1283               	bcf	3,5	;RP0=0, select bank0
 12918  04A7  1303               	bcf	3,6	;RP1=0, select bank0
 12919  04A8  00D3               	movwf	___flsub@b+2
 12920  04A9  1683               	bsf	3,5	;RP0=1, select bank3
 12921  04AA  1703               	bsf	3,6	;RP1=1, select bank3
 12922  04AB  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
 12923  04AC  1283               	bcf	3,5	;RP0=0, select bank0
 12924  04AD  1303               	bcf	3,6	;RP1=0, select bank0
 12925  04AE  00D2               	movwf	___flsub@b+1
 12926  04AF  1683               	bsf	3,5	;RP0=1, select bank3
 12927  04B0  1703               	bsf	3,6	;RP1=1, select bank3
 12928  04B1  0818               	movf	_SetPoint1^(0+384),w	;volatile
 12929  04B2  1283               	bcf	3,5	;RP0=0, select bank0
 12930  04B3  1303               	bcf	3,6	;RP1=0, select bank0
 12931  04B4  00D1               	movwf	___flsub@b
 12932  04B5  160A  118A  2638  120A  118A  	fcall	___flsub
 12933  04BA  25C4  120A  118A   	fcall	PL34	;call to abstracted procedure
 12934  04BD  00D5               	movwf	___flge@ff1
 12935  04BE  1683               	bsf	3,5	;RP0=1, select bank3
 12936  04BF  1703               	bsf	3,6	;RP1=1, select bank3
 12937  04C0  0813               	movf	(_Temperatura1+3)^(0+384),w
 12938  04C1  1283               	bcf	3,5	;RP0=0, select bank0
 12939  04C2  1303               	bcf	3,6	;RP1=0, select bank0
 12940  04C3  00DC               	movwf	___flge@ff2+3
 12941  04C4  1683               	bsf	3,5	;RP0=1, select bank3
 12942  04C5  1703               	bsf	3,6	;RP1=1, select bank3
 12943  04C6  0812               	movf	(_Temperatura1+2)^(0+384),w
 12944  04C7  1283               	bcf	3,5	;RP0=0, select bank0
 12945  04C8  1303               	bcf	3,6	;RP1=0, select bank0
 12946  04C9  00DB               	movwf	___flge@ff2+2
 12947  04CA  1683               	bsf	3,5	;RP0=1, select bank3
 12948  04CB  1703               	bsf	3,6	;RP1=1, select bank3
 12949  04CC  0811               	movf	(_Temperatura1+1)^(0+384),w
 12950  04CD  1283               	bcf	3,5	;RP0=0, select bank0
 12951  04CE  1303               	bcf	3,6	;RP1=0, select bank0
 12952  04CF  00DA               	movwf	___flge@ff2+1
 12953  04D0  1683               	bsf	3,5	;RP0=1, select bank3
 12954  04D1  1703               	bsf	3,6	;RP1=1, select bank3
 12955  04D2  0810               	movf	_Temperatura1^(0+384),w
 12956  04D3  1283               	bcf	3,5	;RP0=0, select bank0
 12957  04D4  1303               	bcf	3,6	;RP1=0, select bank0
 12958  04D5  00D9               	movwf	___flge@ff2
 12959  04D6  24FB  120A  118A   	fcall	___flge
 12960  04D9  1C03               	btfss	3,0
 12961  04DA  2CE7               	goto	l7730
 12962                           
 12963                           ;SlaveLiofilizadorVer1.c: 902:                     {;SlaveLiofilizadorVer1.c: 903:      
      +                                         RL1Status=1;
 12964  04DB  1683               	bsf	3,5	;RP0=1, select bank3
 12965  04DC  1703               	bsf	3,6	;RP1=1, select bank3
 12966  04DD  01DD               	clrf	_RL1Status^(0+384)
 12967  04DE  0ADD               	incf	_RL1Status^(0+384),f
 12968  04DF  2CE4               	goto	l7728
 12969  04E0                     l7732:	
 12970                           
 12971                           ;SlaveLiofilizadorVer1.c: 907:                           {;SlaveLiofilizadorVer1.c: 908:
      +                                                     if(RL1Status==1)
 12972  04E0  1683               	bsf	3,5	;RP0=1, select bank3
 12973  04E1  1703               	bsf	3,6	;RP1=1, select bank3
 12974  04E2  0B5D               	decfsz	_RL1Status^(0+384),w
 12975  04E3  2C8E               	goto	l7722
 12976  04E4                     l7728:	
 12977                           
 12978                           ;SlaveLiofilizadorVer1.c: 904:                     Rele1Ligado();
 12979  04E4  160A  118A  2907   	ljmp	l7520
 12980  04E7                     l7730:	
 12981                           ;SlaveLiofilizadorVer1.c: 905:                     }
 12982                           
 12983  04E7  2571  120A  118A   	fcall	PL2	;call to abstracted procedure
 12984  04EA  24FB  120A  118A   	fcall	___flge
 12985  04ED  1803               	btfsc	3,0
 12986  04EE  2CE0               	goto	l7732
 12987  04EF  2571  120A  118A   	fcall	PL2	;call to abstracted procedure
 12988  04F2  24FB  120A  118A   	fcall	___flge
 12989  04F5  1803               	btfsc	3,0
 12990  04F6  0008               	return
 12991                           
 12992                           ;SlaveLiofilizadorVer1.c: 918:                           {;SlaveLiofilizadorVer1.c: 919:
      +                                                     RL1Status=0;
 12993  04F7  1683               	bsf	3,5	;RP0=1, select bank3
 12994  04F8  1703               	bsf	3,6	;RP1=1, select bank3
 12995  04F9  01DD               	clrf	_RL1Status^(0+384)
 12996  04FA  2C8E               	goto	l7722
 12997  04FB                     __end_of_Auto_Relay1:	
 12998  04FB                     __ptext70:	
 12999 ;; *************** function ___flge *****************
 13000 ;; Defined at:
 13001 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
 13002 ;; Parameters:    Size  Location     Type
 13003 ;;  ff1             4   53[BANK0 ] unsigned char 
 13004 ;;  ff2             4   57[BANK0 ] unsigned char 
 13005 ;; Auto vars:     Size  Location     Type
 13006 ;;		None
 13007 ;; Return value:  Size  Location     Type
 13008 ;;		None               void
 13009 ;; Registers used:
 13010 ;;		wreg, status,2, status,0
 13011 ;; Tracked objects:
 13012 ;;		On entry : 300/0
 13013 ;;		On exit  : 300/0
 13014 ;;		Unchanged: 0/0
 13015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13016 ;;      Params:         0       8       0       0       0
 13017 ;;      Locals:         0       0       0       0       0
 13018 ;;      Temps:          0       4       0       0       0
 13019 ;;      Totals:         0      12       0       0       0
 13020 ;;Total ram usage:       12 bytes
 13021 ;; Hardware stack levels used:    1
 13022 ;; Hardware stack levels required when called:    1
 13023 ;; This function calls:
 13024 ;;		Nothing
 13025 ;; This function is called by:
 13026 ;;		_Auto_Relay0
 13027 ;;		_Auto_Relay1
 13028 ;;		_log
 13029 ;; This function uses a non-reentrant model
 13030 ;;
 13031                           
 13032                           
 13033                           ;psect for function ___flge
 13034  04FB                     ___flge:	
 13035                           
 13036                           ;incstack = 0
 13037                           ; Regs used in ___flge: [wreg+status,2+status,0]
 13038  04FB  3080               	movlw	128
 13039  04FC  01DD               	clrf	??___flge
 13040  04FD  01DE               	clrf	??___flge+1
 13041  04FE  0557               	andwf	___flge@ff1+2,w
 13042  04FF  00DF               	movwf	??___flge+2
 13043  0500  307F               	movlw	127
 13044  0501  0558               	andwf	___flge@ff1+3,w
 13045  0502  00E0               	movwf	??___flge+3
 13046  0503  045F               	iorwf	??___flge+2,w
 13047  0504  045E               	iorwf	??___flge+1,w
 13048  0505  045D               	iorwf	??___flge,w
 13049  0506  1D03               	skipz
 13050  0507  2D0C               	goto	l6512
 13051  0508  01D5               	clrf	___flge@ff1
 13052  0509  01D6               	clrf	___flge@ff1+1
 13053  050A  01D7               	clrf	___flge@ff1+2
 13054  050B  01D8               	clrf	___flge@ff1+3
 13055  050C                     l6512:	
 13056  050C  3080               	movlw	128
 13057  050D  01DD               	clrf	??___flge
 13058  050E  01DE               	clrf	??___flge+1
 13059  050F  055B               	andwf	___flge@ff2+2,w
 13060  0510  00DF               	movwf	??___flge+2
 13061  0511  307F               	movlw	127
 13062  0512  055C               	andwf	___flge@ff2+3,w
 13063  0513  00E0               	movwf	??___flge+3
 13064  0514  045F               	iorwf	??___flge+2,w
 13065  0515  045E               	iorwf	??___flge+1,w
 13066  0516  045D               	iorwf	??___flge,w
 13067  0517  1D03               	skipz
 13068  0518  2D1D               	goto	l1172
 13069  0519  01D9               	clrf	___flge@ff2
 13070  051A  01DA               	clrf	___flge@ff2+1
 13071  051B  01DB               	clrf	___flge@ff2+2
 13072  051C  01DC               	clrf	___flge@ff2+3
 13073  051D                     l1172:	
 13074  051D  1FD8               	btfss	___flge@ff1+3,7
 13075  051E  2D3A               	goto	l6518
 13076  051F  3080               	movlw	128
 13077  0520  01DD               	clrf	??___flge
 13078  0521  01DE               	clrf	??___flge+1
 13079  0522  01DF               	clrf	??___flge+2
 13080  0523  00E0               	movwf	??___flge+3
 13081  0524  0855               	movf	___flge@ff1,w
 13082  0525  02DD               	subwf	??___flge,f
 13083  0526  0856               	movf	___flge@ff1+1,w
 13084  0527  1C03               	skipc
 13085  0528  0F56               	incfsz	___flge@ff1+1,w
 13086  0529  02DE               	subwf	??___flge+1,f
 13087  052A  0857               	movf	___flge@ff1+2,w
 13088  052B  1C03               	skipc
 13089  052C  0F57               	incfsz	___flge@ff1+2,w
 13090  052D  02DF               	subwf	??___flge+2,f
 13091  052E  0858               	movf	___flge@ff1+3,w
 13092  052F  1C03               	skipc
 13093  0530  0F58               	incfsz	___flge@ff1+3,w
 13094  0531  02E0               	subwf	??___flge+3,f
 13095  0532  0860               	movf	??___flge+3,w
 13096  0533  00D8               	movwf	___flge@ff1+3
 13097  0534  085F               	movf	??___flge+2,w
 13098  0535  00D7               	movwf	___flge@ff1+2
 13099  0536  085E               	movf	??___flge+1,w
 13100  0537  00D6               	movwf	___flge@ff1+1
 13101  0538  085D               	movf	??___flge,w
 13102  0539  00D5               	movwf	___flge@ff1
 13103  053A                     l6518:	
 13104  053A  1FDC               	btfss	___flge@ff2+3,7
 13105  053B  2D57               	goto	l1174
 13106  053C  3080               	movlw	128
 13107  053D  01DD               	clrf	??___flge
 13108  053E  01DE               	clrf	??___flge+1
 13109  053F  01DF               	clrf	??___flge+2
 13110  0540  00E0               	movwf	??___flge+3
 13111  0541  0859               	movf	___flge@ff2,w
 13112  0542  02DD               	subwf	??___flge,f
 13113  0543  085A               	movf	___flge@ff2+1,w
 13114  0544  1C03               	skipc
 13115  0545  0F5A               	incfsz	___flge@ff2+1,w
 13116  0546  02DE               	subwf	??___flge+1,f
 13117  0547  085B               	movf	___flge@ff2+2,w
 13118  0548  1C03               	skipc
 13119  0549  0F5B               	incfsz	___flge@ff2+2,w
 13120  054A  02DF               	subwf	??___flge+2,f
 13121  054B  085C               	movf	___flge@ff2+3,w
 13122  054C  1C03               	skipc
 13123  054D  0F5C               	incfsz	___flge@ff2+3,w
 13124  054E  02E0               	subwf	??___flge+3,f
 13125  054F  0860               	movf	??___flge+3,w
 13126  0550  00DC               	movwf	___flge@ff2+3
 13127  0551  085F               	movf	??___flge+2,w
 13128  0552  00DB               	movwf	___flge@ff2+2
 13129  0553  085E               	movf	??___flge+1,w
 13130  0554  00DA               	movwf	___flge@ff2+1
 13131  0555  085D               	movf	??___flge,w
 13132  0556  00D9               	movwf	___flge@ff2
 13133  0557                     l1174:	
 13134  0557  3080               	movlw	128
 13135  0558  06D8               	xorwf	___flge@ff1+3,f
 13136  0559  06DC               	xorwf	___flge@ff2+3,f
 13137  055A  085C               	movf	___flge@ff2+3,w
 13138  055B  0258               	subwf	___flge@ff1+3,w
 13139  055C  1D03               	skipz
 13140  055D  0008               	return
 13141  055E  085B               	movf	___flge@ff2+2,w
 13142  055F  0257               	subwf	___flge@ff1+2,w
 13143  0560  1D03               	skipz
 13144  0561  0008               	return
 13145  0562  085A               	movf	___flge@ff2+1,w
 13146  0563  0256               	subwf	___flge@ff1+1,w
 13147  0564  1D03               	skipz
 13148  0565  0008               	return
 13149  0566  0859               	movf	___flge@ff2,w
 13150  0567  0255               	subwf	___flge@ff1,w
 13151  0568  0008               	return
 13152  0569                     __end_of___flge:	
 13153  0569                     __ptext72:	
 13154 ;; *************** function _Rele0Desligado *****************
 13155 ;; Defined at:
 13156 ;;		line 928 in file "SlaveLiofilizadorVer1.c"
 13157 ;; Parameters:    Size  Location     Type
 13158 ;;		None
 13159 ;; Auto vars:     Size  Location     Type
 13160 ;;		None
 13161 ;; Return value:  Size  Location     Type
 13162 ;;                  1    wreg      void 
 13163 ;; Registers used:
 13164 ;;		None
 13165 ;; Tracked objects:
 13166 ;;		On entry : 300/300
 13167 ;;		On exit  : 300/0
 13168 ;;		Unchanged: 0/0
 13169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13170 ;;      Params:         0       0       0       0       0
 13171 ;;      Locals:         0       0       0       0       0
 13172 ;;      Temps:          0       0       0       0       0
 13173 ;;      Totals:         0       0       0       0       0
 13174 ;;Total ram usage:        0 bytes
 13175 ;; Hardware stack levels used:    1
 13176 ;; Hardware stack levels required when called:    1
 13177 ;; This function calls:
 13178 ;;		Nothing
 13179 ;; This function is called by:
 13180 ;;		_Auto_Relay0
 13181 ;; This function uses a non-reentrant model
 13182 ;;
 13183                           
 13184                           
 13185                           ;psect for function _Rele0Desligado
 13186  0569                     _Rele0Desligado:	
 13187  0569                     l7532:	
 13188                           ;incstack = 0
 13189                           ; Regs used in _Rele0Desligado: []
 13190                           
 13191                           
 13192                           ;SlaveLiofilizadorVer1.c: 929:      PORTCbits.RC0=0;
 13193  0569  1283               	bcf	3,5	;RP0=0, select bank0
 13194  056A  1303               	bcf	3,6	;RP1=0, select bank0
 13195  056B  1007               	bcf	7,0	;volatile
 13196  056C  0008               	return
 13197  056D                     __end_of_Rele0Desligado:	
 13198  056D                     __ptext66:	
 13199 ;; *************** function _Rele1Desligado *****************
 13200 ;; Defined at:
 13201 ;;		line 932 in file "SlaveLiofilizadorVer1.c"
 13202 ;; Parameters:    Size  Location     Type
 13203 ;;		None
 13204 ;; Auto vars:     Size  Location     Type
 13205 ;;		None
 13206 ;; Return value:  Size  Location     Type
 13207 ;;                  1    wreg      void 
 13208 ;; Registers used:
 13209 ;;		None
 13210 ;; Tracked objects:
 13211 ;;		On entry : 0/300
 13212 ;;		On exit  : 300/0
 13213 ;;		Unchanged: 0/0
 13214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13215 ;;      Params:         0       0       0       0       0
 13216 ;;      Locals:         0       0       0       0       0
 13217 ;;      Temps:          0       0       0       0       0
 13218 ;;      Totals:         0       0       0       0       0
 13219 ;;Total ram usage:        0 bytes
 13220 ;; Hardware stack levels used:    1
 13221 ;; Hardware stack levels required when called:    1
 13222 ;; This function calls:
 13223 ;;		Nothing
 13224 ;; This function is called by:
 13225 ;;		_Auto_Relay1
 13226 ;; This function uses a non-reentrant model
 13227 ;;
 13228                           
 13229                           
 13230                           ;psect for function _Rele1Desligado
 13231  056D                     _Rele1Desligado:	
 13232  056D                     l7534:	
 13233                           ;incstack = 0
 13234                           ; Regs used in _Rele1Desligado: []
 13235                           
 13236                           
 13237                           ;SlaveLiofilizadorVer1.c: 933:      PORTCbits.RC1=0;
 13238  056D  1283               	bcf	3,5	;RP0=0, select bank0
 13239  056E  1303               	bcf	3,6	;RP1=0, select bank0
 13240  056F  1087               	bcf	7,1	;volatile
 13241  0570  0008               	return
 13242  0571                     __end_of_Rele1Desligado:	
 13243  0571                     PL2:	
 13244  0571  1683               	bsf	3,5	;RP0=1, select bank3
 13245  0572  1703               	bsf	3,6	;RP1=1, select bank3
 13246  0573  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
 13247  0574  1283               	bcf	3,5	;RP0=0, select bank0
 13248  0575  1303               	bcf	3,6	;RP1=0, select bank0
 13249  0576  00D8               	movwf	___flge@ff1+3
 13250  0577  1683               	bsf	3,5	;RP0=1, select bank3
 13251  0578  1703               	bsf	3,6	;RP1=1, select bank3
 13252  0579  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
 13253  057A  1283               	bcf	3,5	;RP0=0, select bank0
 13254  057B  1303               	bcf	3,6	;RP1=0, select bank0
 13255  057C  00D7               	movwf	___flge@ff1+2
 13256  057D  1683               	bsf	3,5	;RP0=1, select bank3
 13257  057E  1703               	bsf	3,6	;RP1=1, select bank3
 13258  057F  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
 13259  0580  1283               	bcf	3,5	;RP0=0, select bank0
 13260  0581  1303               	bcf	3,6	;RP1=0, select bank0
 13261  0582  00D6               	movwf	___flge@ff1+1
 13262  0583  1683               	bsf	3,5	;RP0=1, select bank3
 13263  0584  1703               	bsf	3,6	;RP1=1, select bank3
 13264  0585  0818               	movf	_SetPoint1^(0+384),w	;volatile
 13265  0586  1283               	bcf	3,5	;RP0=0, select bank0
 13266  0587  1303               	bcf	3,6	;RP1=0, select bank0
 13267  0588  00D5               	movwf	___flge@ff1
 13268  0589  1683               	bsf	3,5	;RP0=1, select bank3
 13269  058A  1703               	bsf	3,6	;RP1=1, select bank3
 13270  058B  0813               	movf	(_Temperatura1+3)^(0+384),w
 13271  058C  1283               	bcf	3,5	;RP0=0, select bank0
 13272  058D  1303               	bcf	3,6	;RP1=0, select bank0
 13273  058E  00DC               	movwf	___flge@ff2+3
 13274  058F  1683               	bsf	3,5	;RP0=1, select bank3
 13275  0590  1703               	bsf	3,6	;RP1=1, select bank3
 13276  0591  0812               	movf	(_Temperatura1+2)^(0+384),w
 13277  0592  1283               	bcf	3,5	;RP0=0, select bank0
 13278  0593  1303               	bcf	3,6	;RP1=0, select bank0
 13279  0594  00DB               	movwf	___flge@ff2+2
 13280  0595  1683               	bsf	3,5	;RP0=1, select bank3
 13281  0596  1703               	bsf	3,6	;RP1=1, select bank3
 13282  0597  0811               	movf	(_Temperatura1+1)^(0+384),w
 13283  0598  1283               	bcf	3,5	;RP0=0, select bank0
 13284  0599  1303               	bcf	3,6	;RP1=0, select bank0
 13285  059A  00DA               	movwf	___flge@ff2+1
 13286  059B  1683               	bsf	3,5	;RP0=1, select bank3
 13287  059C  1703               	bsf	3,6	;RP1=1, select bank3
 13288  059D  0810               	movf	_Temperatura1^(0+384),w
 13289  059E  1283               	bcf	3,5	;RP0=0, select bank0
 13290  059F  1303               	bcf	3,6	;RP1=0, select bank0
 13291  05A0  00D9               	movwf	___flge@ff2
 13292  05A1  0008               	return
 13293  05A2                     __end_ofPL2:	
 13294  05A2                     PL4:	
 13295  05A2  00D5               	movwf	___flge@ff1
 13296  05A3  1683               	bsf	3,5	;RP0=1, select bank3
 13297  05A4  1703               	bsf	3,6	;RP1=1, select bank3
 13298  05A5  0817               	movf	(_Temperatura0+3)^(0+384),w
 13299  05A6  1283               	bcf	3,5	;RP0=0, select bank0
 13300  05A7  1303               	bcf	3,6	;RP1=0, select bank0
 13301  05A8  00DC               	movwf	___flge@ff2+3
 13302  05A9  1683               	bsf	3,5	;RP0=1, select bank3
 13303  05AA  1703               	bsf	3,6	;RP1=1, select bank3
 13304  05AB  0816               	movf	(_Temperatura0+2)^(0+384),w
 13305  05AC  1283               	bcf	3,5	;RP0=0, select bank0
 13306  05AD  1303               	bcf	3,6	;RP1=0, select bank0
 13307  05AE  00DB               	movwf	___flge@ff2+2
 13308  05AF  1683               	bsf	3,5	;RP0=1, select bank3
 13309  05B0  1703               	bsf	3,6	;RP1=1, select bank3
 13310  05B1  0815               	movf	(_Temperatura0+1)^(0+384),w
 13311  05B2  1283               	bcf	3,5	;RP0=0, select bank0
 13312  05B3  1303               	bcf	3,6	;RP1=0, select bank0
 13313  05B4  00DA               	movwf	___flge@ff2+1
 13314  05B5  1683               	bsf	3,5	;RP0=1, select bank3
 13315  05B6  1703               	bsf	3,6	;RP1=1, select bank3
 13316  05B7  0814               	movf	_Temperatura0^(0+384),w
 13317  05B8  1283               	bcf	3,5	;RP0=0, select bank0
 13318  05B9  1303               	bcf	3,6	;RP1=0, select bank0
 13319  05BA  00D9               	movwf	___flge@ff2
 13320  05BB  0008               	return
 13321  05BC                     __end_ofPL4:	
 13322  05BC                     PL10:	
 13323  05BC  0873               	movf	_SetPoint0+3,w	;volatile
 13324  05BD  00D8               	movwf	___flge@ff1+3
 13325  05BE  0872               	movf	_SetPoint0+2,w	;volatile
 13326  05BF  00D7               	movwf	___flge@ff1+2
 13327  05C0  0871               	movf	_SetPoint0+1,w	;volatile
 13328  05C1  00D6               	movwf	___flge@ff1+1
 13329  05C2  0870               	movf	_SetPoint0,w	;volatile
 13330  05C3  0008               	return
 13331  05C4                     __end_ofPL10:	
 13332  05C4                     PL34:	
 13333  05C4  0850               	movf	?___flsub+3,w
 13334  05C5  00D8               	movwf	___flge@ff1+3
 13335  05C6  084F               	movf	?___flsub+2,w
 13336  05C7  00D7               	movwf	___flge@ff1+2
 13337  05C8  084E               	movf	?___flsub+1,w
 13338  05C9  00D6               	movwf	___flge@ff1+1
 13339  05CA  084D               	movf	?___flsub,w
 13340  05CB  0008               	return
 13341  05CC                     __end_ofPL34:	
 13342  05CC                     PL62:	
 13343  05CC  00AB               	movwf	___xxtofl@val
 13344  05CD  3001               	movlw	1
 13345  05CE  01AC               	clrf	___xxtofl@val+1
 13346  05CF  01AD               	clrf	___xxtofl@val+2
 13347  05D0  01AE               	clrf	___xxtofl@val+3
 13348  05D1  0008               	return
 13349  05D2                     __end_ofPL62:	
 13350                           
 13351                           	psect	text73
 13352  0804                     __ptext73:	
 13353 ;; *************** function _ADC_init *****************
 13354 ;; Defined at:
 13355 ;;		line 10 in file "adc.c"
 13356 ;; Parameters:    Size  Location     Type
 13357 ;;		None
 13358 ;; Auto vars:     Size  Location     Type
 13359 ;;		None
 13360 ;; Return value:  Size  Location     Type
 13361 ;;                  1    wreg      void 
 13362 ;; Registers used:
 13363 ;;		wreg, status,2, status,0
 13364 ;; Tracked objects:
 13365 ;;		On entry : 0/100
 13366 ;;		On exit  : 300/0
 13367 ;;		Unchanged: 0/0
 13368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13369 ;;      Params:         0       0       0       0       0
 13370 ;;      Locals:         0       0       0       0       0
 13371 ;;      Temps:          0       0       0       0       0
 13372 ;;      Totals:         0       0       0       0       0
 13373 ;;Total ram usage:        0 bytes
 13374 ;; Hardware stack levels used:    1
 13375 ;; Hardware stack levels required when called:    1
 13376 ;; This function calls:
 13377 ;;		Nothing
 13378 ;; This function is called by:
 13379 ;;		_main
 13380 ;; This function uses a non-reentrant model
 13381 ;;
 13382                           
 13383                           
 13384                           ;psect for function _ADC_init
 13385  0804                     _ADC_init:	
 13386                           
 13387                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13388                           
 13389                           ;incstack = 0
 13390                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13391  0804  30C0               	movlw	192
 13392  0805  1283               	bcf	3,5	;RP0=0, select bank0
 13393  0806  1303               	bcf	3,6	;RP1=0, select bank0
 13394  0807  049F               	iorwf	31,f	;volatile
 13395                           
 13396                           ;adc.c: 12:      ADCON1=0b10000000;
 13397  0808  3080               	movlw	128
 13398  0809  1683               	bsf	3,5	;RP0=1, select bank1
 13399  080A  009F               	movwf	31	;volatile
 13400                           
 13401                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13402  080B  179F               	bsf	31,7	;volatile
 13403                           
 13404                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13405  080C  1283               	bcf	3,5	;RP0=0, select bank0
 13406  080D  141F               	bsf	31,0	;volatile
 13407  080E  0008               	return
 13408  080F                     __end_of_ADC_init:	
 13409                           
 13410                           	psect	text74
 13411  1F20                     __ptext74:	
 13412 ;; *************** function _isr *****************
 13413 ;; Defined at:
 13414 ;;		line 29 in file "isr.c"
 13415 ;; Parameters:    Size  Location     Type
 13416 ;;		None
 13417 ;; Auto vars:     Size  Location     Type
 13418 ;;  tempo           2    4[COMMON] unsigned int 
 13419 ;; Return value:  Size  Location     Type
 13420 ;;                  1    wreg      void 
 13421 ;; Registers used:
 13422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13423 ;; Tracked objects:
 13424 ;;		On entry : 0/0
 13425 ;;		On exit  : 300/0
 13426 ;;		Unchanged: 0/0
 13427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13428 ;;      Params:         0       0       0       0       0
 13429 ;;      Locals:         2       0       0       0       0
 13430 ;;      Temps:          4       0       0       0       0
 13431 ;;      Totals:         6       0       0       0       0
 13432 ;;Total ram usage:        6 bytes
 13433 ;; Hardware stack levels used:    1
 13434 ;; This function calls:
 13435 ;;		Nothing
 13436 ;; This function is called by:
 13437 ;;		Interrupt level 1
 13438 ;; This function uses a non-reentrant model
 13439 ;;
 13440                           
 13441                           
 13442                           ;psect for function _isr
 13443  1F20                     _isr:	
 13444                           
 13445                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13446  1F20  188B               	btfsc	11,1	;volatile
 13447                           
 13448                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13449  1F21  108B               	bcf	11,1	;volatile
 13450                           
 13451                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13452                           
 13453                           ;isr.c: 37:       }
 13454  1F22  1C0C               	btfss	12,0	;volatile
 13455  1F23  2F9D               	goto	i1l5942
 13456                           
 13457                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13458  1F24  30B1               	movlw	177
 13459  1F25  008F               	movwf	15	;volatile
 13460                           
 13461                           ;isr.c: 42:                 TMR1L=0xF3;
 13462  1F26  30F3               	movlw	243
 13463  1F27  008E               	movwf	14	;volatile
 13464                           
 13465                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13466  1F28  100C               	bcf	12,0	;volatile
 13467                           
 13468                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13469  1F29  1683               	bsf	3,5	;RP0=1, select bank3
 13470  1F2A  1703               	bsf	3,6	;RP1=1, select bank3
 13471  1F2B  1FBC               	btfss	_generic_status^(0+384),7
 13472  1F2C  2F2F               	goto	i1l5890
 13473                           
 13474                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13475  1F2D  13BC               	bcf	_generic_status^(0+384),7
 13476  1F2E  0064               	clrwdt	;# 
 13477  1F2F                     i1l5890:	
 13478                           
 13479                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13480  1F2F  300A               	movlw	10
 13481  1F30  1683               	bsf	3,5	;RP0=1, select bank3
 13482  1F31  1703               	bsf	3,6	;RP1=1, select bank3
 13483  1F32  07AE               	addwf	_Delay_Led_Tmr0^(0+384),f	;volatile
 13484  1F33  1803               	skipnc
 13485  1F34  0AAF               	incf	(_Delay_Led_Tmr0+1)^(0+384),f	;volatile
 13486                           
 13487                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13488  1F35  3003               	movlw	3
 13489  1F36  022F               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13490  1F37  30E8               	movlw	232
 13491  1F38  1903               	skipnz
 13492  1F39  022E               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13493  1F3A  1C03               	skipc
 13494  1F3B  2F3E               	goto	i1l5894
 13495                           
 13496                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13497  1F3C  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
 13498  1F3D  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
 13499  1F3E                     i1l5894:	
 13500                           
 13501                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13502  1F3E  3001               	movlw	1
 13503  1F3F  022F               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13504  1F40  30F4               	movlw	244
 13505  1F41  1903               	skipnz
 13506  1F42  022E               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13507  1F43  1803               	skipnc
 13508  1F44  2F49               	goto	i1l563
 13509                           
 13510                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13511  1F45  1283               	bcf	3,5	;RP0=0, select bank0
 13512  1F46  1303               	bcf	3,6	;RP1=0, select bank0
 13513  1F47  1786               	bsf	6,7	;volatile
 13514  1F48  2F4C               	goto	i1l5898
 13515  1F49                     i1l563:	
 13516                           ;isr.c: 56:                 else
 13517                           
 13518                           
 13519                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13520  1F49  1283               	bcf	3,5	;RP0=0, select bank0
 13521  1F4A  1303               	bcf	3,6	;RP1=0, select bank0
 13522  1F4B  1386               	bcf	6,7	;volatile
 13523  1F4C                     i1l5898:	
 13524                           
 13525                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13526  1F4C  1683               	bsf	3,5	;RP0=1, select bank3
 13527  1F4D  1703               	bsf	3,6	;RP1=1, select bank3
 13528  1F4E  082C               	movf	_Delay_Led_Usart^(0+384),w	;volatile
 13529  1F4F  042D               	iorwf	(_Delay_Led_Usart+1)^(0+384),w	;volatile
 13530  1F50  1903               	btfsc	3,2
 13531  1F51  2F5C               	goto	i1l565
 13532                           
 13533                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13534  1F52  300A               	movlw	10
 13535  1F53  02AC               	subwf	_Delay_Led_Usart^(0+384),f	;volatile
 13536  1F54  3000               	movlw	0
 13537  1F55  1C03               	skipc
 13538  1F56  03AD               	decf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13539  1F57  02AD               	subwf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13540                           
 13541                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13542  1F58  1283               	bcf	3,5	;RP0=0, select bank0
 13543  1F59  1303               	bcf	3,6	;RP1=0, select bank0
 13544  1F5A  1706               	bsf	6,6	;volatile
 13545                           
 13546                           ;isr.c: 63:                    }
 13547  1F5B  2F5F               	goto	i1l5904
 13548  1F5C                     i1l565:	
 13549                           ;isr.c: 64:                 else{
 13550                           
 13551                           
 13552                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13553  1F5C  1283               	bcf	3,5	;RP0=0, select bank0
 13554  1F5D  1303               	bcf	3,6	;RP1=0, select bank0
 13555  1F5E  1306               	bcf	6,6	;volatile
 13556  1F5F                     i1l5904:	
 13557                           
 13558                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13559  1F5F  1683               	bsf	3,5	;RP0=1, select bank3
 13560  1F60  1703               	bsf	3,6	;RP1=1, select bank3
 13561  1F61  0830               	movf	_Delay_Led_Memory^(0+384),w	;volatile
 13562  1F62  0431               	iorwf	(_Delay_Led_Memory+1)^(0+384),w	;volatile
 13563  1F63  1903               	btfsc	3,2
 13564  1F64  2F6F               	goto	i1l567
 13565                           
 13566                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13567  1F65  300A               	movlw	10
 13568  1F66  02B0               	subwf	_Delay_Led_Memory^(0+384),f	;volatile
 13569  1F67  3000               	movlw	0
 13570  1F68  1C03               	skipc
 13571  1F69  03B1               	decf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13572  1F6A  02B1               	subwf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13573                           
 13574                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13575  1F6B  1283               	bcf	3,5	;RP0=0, select bank0
 13576  1F6C  1303               	bcf	3,6	;RP1=0, select bank0
 13577  1F6D  1686               	bsf	6,5	;volatile
 13578                           
 13579                           ;isr.c: 71:                    }
 13580  1F6E  2F72               	goto	i1l5910
 13581  1F6F                     i1l567:	
 13582                           ;isr.c: 72:                 else{
 13583                           
 13584                           
 13585                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13586  1F6F  1283               	bcf	3,5	;RP0=0, select bank0
 13587  1F70  1303               	bcf	3,6	;RP1=0, select bank0
 13588  1F71  1286               	bcf	6,5	;volatile
 13589  1F72                     i1l5910:	
 13590                           
 13591                           ;isr.c: 77:                 tempodecorrido+=10;
 13592  1F72  300A               	movlw	10
 13593  1F73  1683               	bsf	3,5	;RP0=1, select bank3
 13594  1F74  1703               	bsf	3,6	;RP1=1, select bank3
 13595  1F75  07A0               	addwf	_tempodecorrido^(0+384),f	;volatile
 13596  1F76  1803               	skipnc
 13597  1F77  0AA1               	incf	(_tempodecorrido+1)^(0+384),f	;volatile
 13598                           
 13599                           ;isr.c: 78:                 milisegundo+=10;
 13600  1F78  07AA               	addwf	_milisegundo^(0+384),f	;volatile
 13601  1F79  1803               	skipnc
 13602  1F7A  0AAB               	incf	(_milisegundo+1)^(0+384),f	;volatile
 13603                           
 13604                           ;isr.c: 79:                 if(milisegundo==1000){
 13605  1F7B  30E8               	movlw	232
 13606  1F7C  062A               	xorwf	_milisegundo^(0+384),w	;volatile
 13607  1F7D  3003               	movlw	3
 13608  1F7E  1903               	skipnz
 13609  1F7F  062B               	xorwf	(_milisegundo+1)^(0+384),w	;volatile
 13610  1F80  1D03               	btfss	3,2
 13611  1F81  2F9D               	goto	i1l5942
 13612                           
 13613                           ;isr.c: 80:                    milisegundo=0;
 13614  1F82  01AA               	clrf	_milisegundo^(0+384)	;volatile
 13615  1F83  01AB               	clrf	(_milisegundo+1)^(0+384)	;volatile
 13616                           
 13617                           ;isr.c: 81:                    segundo++;
 13618  1F84  0AF6               	incf	_segundo,f	;volatile
 13619                           
 13620                           ;isr.c: 84:                    if(TempoCNT_0>0) TempoCNT_0--;
 13621  1F85  1303               	bcf	3,6	;RP1=0, select bank1
 13622  1F86  086F               	movf	_TempoCNT_0^(0+128),w	;volatile
 13623  1F87  1D03               	btfss	3,2
 13624  1F88  03EF               	decf	_TempoCNT_0^(0+128),f	;volatile
 13625                           
 13626                           ;isr.c: 85:                    if(TempoCNT_1>0) TempoCNT_1--;
 13627  1F89  0874               	movf	_TempoCNT_1,w	;volatile
 13628  1F8A  1D03               	btfss	3,2
 13629  1F8B  03F4               	decf	_TempoCNT_1,f	;volatile
 13630                           
 13631                           ;isr.c: 88:                    if(segundo==60){
 13632  1F8C  303C               	movlw	60
 13633  1F8D  0676               	xorwf	_segundo,w	;volatile
 13634  1F8E  1D03               	btfss	3,2
 13635  1F8F  2F9D               	goto	i1l5942
 13636                           
 13637                           ;isr.c: 89:                       segundo=0;
 13638  1F90  01F6               	clrf	_segundo	;volatile
 13639                           
 13640                           ;isr.c: 90:                       minuto++;
 13641  1F91  1703               	bsf	3,6	;RP1=1, select bank3
 13642  1F92  0ABB               	incf	_minuto^(0+384),f	;volatile
 13643                           
 13644                           ;isr.c: 91:                       if(minuto==60){
 13645  1F93  303C               	movlw	60
 13646  1F94  063B               	xorwf	_minuto^(0+384),w	;volatile
 13647  1F95  1D03               	btfss	3,2
 13648  1F96  2F9D               	goto	i1l5942
 13649                           
 13650                           ;isr.c: 92:                          minuto=0;
 13651  1F97  01BB               	clrf	_minuto^(0+384)	;volatile
 13652                           
 13653                           ;isr.c: 93:                          hora++;
 13654  1F98  0AF5               	incf	_hora,f	;volatile
 13655                           
 13656                           ;isr.c: 94:                          if(hora==24){
 13657  1F99  3018               	movlw	24
 13658  1F9A  0675               	xorwf	_hora,w	;volatile
 13659  1F9B  1903               	btfsc	3,2
 13660                           
 13661                           ;isr.c: 95:                             hora=0;
 13662  1F9C  01F5               	clrf	_hora	;volatile
 13663  1F9D                     i1l5942:	
 13664                           ;isr.c: 99:                 }
 13665                           
 13666                           
 13667                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13668  1F9D  1283               	bcf	3,5	;RP0=0, select bank0
 13669  1F9E  1303               	bcf	3,6	;RP1=0, select bank0
 13670  1F9F  1E8C               	btfss	12,5	;volatile
 13671  1FA0  2FF3               	goto	i1l583
 13672                           
 13673                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13674  1FA1  1683               	bsf	3,5	;RP0=1, select bank3
 13675  1FA2  1703               	bsf	3,6	;RP1=1, select bank3
 13676  1FA3  301E               	movlw	30
 13677  1FA4  143C               	bsf	_generic_status^(0+384),0
 13678                           
 13679                           ;isr.c: 109:         tempo=30;
 13680  1FA5  00FB               	movwf	isr@tempo
 13681  1FA6  01FC               	clrf	isr@tempo+1
 13682                           
 13683                           ;isr.c: 110:         count=0;
 13684  1FA7  01A2               	clrf	_count^(0+384)	;volatile
 13685  1FA8  01A3               	clrf	(_count+1)^(0+384)	;volatile
 13686                           
 13687                           ;isr.c: 111:         pointer=usart_buffer;
 13688  1FA9  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13689  1FAA  00B2               	movwf	_pointer^(0+384)
 13690  1FAB                     i1l5962:	
 13691                           ;isr.c: 112:         while(tempo)
 13692                           
 13693                           
 13694                           ;isr.c: 112:         while(tempo)
 13695  1FAB  087B               	movf	isr@tempo,w
 13696  1FAC  047C               	iorwf	isr@tempo+1,w
 13697  1FAD  1903               	btfsc	3,2
 13698  1FAE  2FDA               	goto	i1l5964
 13699                           
 13700                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13701  1FAF  1283               	bcf	3,5	;RP0=0, select bank0
 13702  1FB0  1303               	bcf	3,6	;RP1=0, select bank0
 13703  1FB1  1E8C               	btfss	12,5	;volatile
 13704  1FB2  2FD3               	goto	i1l5960
 13705                           
 13706                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13707  1FB3  1683               	bsf	3,5	;RP0=1, select bank3
 13708  1FB4  1703               	bsf	3,6	;RP1=1, select bank3
 13709  1FB5  0832               	movf	_pointer^(0+384),w
 13710  1FB6  0084               	movwf	4
 13711  1FB7  1283               	bcf	3,5	;RP0=0, select bank0
 13712  1FB8  1303               	bcf	3,6	;RP1=0, select bank0
 13713  1FB9  081A               	movf	26,w	;volatile
 13714  1FBA  1783               	bsf	3,7	;select IRP bank2
 13715  1FBB  0080               	movwf	0
 13716                           
 13717                           ;isr.c: 118:                 if(count<32+10 -1)
 13718  1FBC  1683               	bsf	3,5	;RP0=1, select bank3
 13719  1FBD  1703               	bsf	3,6	;RP1=1, select bank3
 13720  1FBE  0823               	movf	(_count+1)^(0+384),w	;volatile
 13721  1FBF  3A80               	xorlw	128
 13722  1FC0  00FF               	movwf	127
 13723  1FC1  3080               	movlw	128
 13724  1FC2  027F               	subwf	127,w
 13725  1FC3  1D03               	skipz
 13726  1FC4  2FC7               	goto	u516_25
 13727  1FC5  3029               	movlw	41
 13728  1FC6  0222               	subwf	_count^(0+384),w	;volatile
 13729  1FC7                     u516_25:	
 13730  1FC7  1803               	skipnc
 13731  1FC8  2FCF               	goto	i1l5958
 13732                           
 13733                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13734  1FC9  1683               	bsf	3,5	;RP0=1, select bank3
 13735  1FCA  1703               	bsf	3,6	;RP1=1, select bank3
 13736  1FCB  0AA2               	incf	_count^(0+384),f	;volatile
 13737  1FCC  1903               	skipnz
 13738  1FCD  0AA3               	incf	(_count+1)^(0+384),f	;volatile
 13739                           
 13740                           ;isr.c: 121:                    pointer++;
 13741  1FCE  0AB2               	incf	_pointer^(0+384),f
 13742  1FCF                     i1l5958:	
 13743                           
 13744                           ;isr.c: 123:                 tempo=30;
 13745  1FCF  301E               	movlw	30
 13746  1FD0  00FB               	movwf	isr@tempo
 13747  1FD1  01FC               	clrf	isr@tempo+1
 13748                           
 13749                           ;isr.c: 124:             }
 13750  1FD2  2FAB               	goto	i1l5962
 13751  1FD3                     i1l5960:	
 13752                           
 13753                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13754  1FD3  3001               	movlw	1
 13755  1FD4  02FB               	subwf	isr@tempo,f
 13756  1FD5  3000               	movlw	0
 13757  1FD6  1C03               	skipc
 13758  1FD7  03FC               	decf	isr@tempo+1,f
 13759  1FD8  02FC               	subwf	isr@tempo+1,f
 13760  1FD9  2FAB               	goto	i1l5962
 13761  1FDA                     i1l5964:	
 13762                           
 13763                           ;isr.c: 131:         (*pointer)=0;
 13764  1FDA  1683               	bsf	3,5	;RP0=1, select bank3
 13765  1FDB  1703               	bsf	3,6	;RP1=1, select bank3
 13766  1FDC  0832               	movf	_pointer^(0+384),w
 13767  1FDD  0084               	movwf	4
 13768  1FDE  1783               	bsf	3,7	;select IRP bank2
 13769  1FDF  0180               	clrf	0
 13770                           
 13771                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13772  1FE0  1283               	bcf	3,5	;RP0=0, select bank0
 13773  1FE1  1303               	bcf	3,6	;RP1=0, select bank0
 13774  1FE2  1C98               	btfss	24,1	;volatile
 13775  1FE3  2FF3               	goto	i1l583
 13776                           
 13777                           ;isr.c: 134:            CREN=0;
 13778  1FE4  1218               	bcf	24,4	;volatile
 13779                           
 13780                           ;isr.c: 135:            CREN=1;
 13781  1FE5  1618               	bsf	24,4	;volatile
 13782                           
 13783                           ;isr.c: 136:            tempo=RCREG;
 13784  1FE6  081A               	movf	26,w	;volatile
 13785  1FE7  00FB               	movwf	isr@tempo
 13786  1FE8  01FC               	clrf	isr@tempo+1
 13787                           
 13788                           ;isr.c: 137:            tempo=RCREG;
 13789  1FE9  081A               	movf	26,w	;volatile
 13790  1FEA  00FB               	movwf	isr@tempo
 13791  1FEB  01FC               	clrf	isr@tempo+1
 13792                           
 13793                           ;isr.c: 138:            tempo=RCREG;
 13794  1FEC  081A               	movf	26,w	;volatile
 13795  1FED  00FB               	movwf	isr@tempo
 13796  1FEE  01FC               	clrf	isr@tempo+1
 13797                           
 13798                           ;isr.c: 139:            usart_buffer[0]=0;
 13799  1FEF  1703               	bsf	3,6	;RP1=1, select bank2
 13800  1FF0  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13801                           
 13802                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13803  1FF1  1683               	bsf	3,5	;RP0=1, select bank3
 13804  1FF2  14BC               	bsf	_generic_status^(0+384),1
 13805  1FF3                     i1l583:	
 13806  1FF3  087A               	movf	??_isr+3,w
 13807  1FF4  1283               	bcf	3,5	;RP0=0, select bank0
 13808  1FF5  1303               	bcf	3,6	;RP1=0, select bank0
 13809  1FF6  00FF               	movwf	127
 13810  1FF7  0879               	movf	??_isr+2,w
 13811  1FF8  008A               	movwf	10
 13812  1FF9  0878               	movf	??_isr+1,w
 13813  1FFA  0084               	movwf	4
 13814  1FFB  0E77               	swapf	??_isr^(0+4294967168),w
 13815  1FFC  0083               	movwf	3
 13816  1FFD  0EFE               	swapf	126,f
 13817  1FFE  0E7E               	swapf	126,w
 13818  1FFF  0009               	retfie
 13819  2000                     __end_of_isr:	
 13820  007E                     btemp	set	126	;btemp
 13821  007E                     wtemp0	set	126
 13822                           
 13823                           	psect	intentry
 13824  0004                     __pintentry:	
 13825                           ;incstack = 0
 13826                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13827                           
 13828  0004                     interrupt_function:	
 13829  007E                     saved_w	set	btemp
 13830  0004  00FE               	movwf	btemp
 13831  0005  0E03               	swapf	3,w
 13832  0006  00F7               	movwf	??_isr
 13833  0007  0804               	movf	4,w
 13834  0008  00F8               	movwf	??_isr+1
 13835  0009  080A               	movf	10,w
 13836  000A  00F9               	movwf	??_isr+2
 13837  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13838  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13839  000D  087F               	movf	btemp+1,w
 13840  000E  00FA               	movwf	??_isr+3
 13841  000F  160A  158A  2F20   	ljmp	_isr


Data Sizes:
    Strings     14
    Constant    44
    Data        2
    BSS         159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80     80      80
    BANK1            80     79      80
    BANK3            96      0      79
    BANK2            96      0      74

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(1) Largest target is 36
		 -> log@coeff(CODE[36]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_2(CODE[1]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 32
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), buffer(BANK2[32]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 16
		 -> EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 32
		 -> buffer(BANK2[32]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> USART_put_buffer@vetor(BANK0[1]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 16
		 -> usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 42
		 -> NULL(NULL[0]), usart_buffer(BANK2[42]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Decodify_Command
    _ADC_Read_NTC->_log
    _log->___flmul
    _frexp->___fleq
    _eval_poly->___flmul
    _I2C_Master_Init->___lldiv
    _Decodify_Command->___flmul
    _itoa->_utoa
    _utoa->___lwdiv
    ___flmul->___flsub
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___wmul->___fltol
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    ___fldiv->___flmul
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_I2C_Master_Write
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_I2C_Master_Read
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___wmul
    _EEPROM_24C1025_Write_Buffer->_I2C_Master_Write
    _Auto_Relay1->___flge
    ___xxtofl->_EEPROM_Read_Integer
    _Auto_Relay0->___flge
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flge->___flsub

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command
    _mediatemperaturaNTC->_ADC_Read_NTC
    _ADC_Read_NTC->___fldiv
    _log->_eval_poly
    _Decodify_Command->_Load_Work
    _Load_Work->___fldiv

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  166498
                                             74 BANK1      5     5      0
                           _ADC_init
                        _Auto_Relay0
                        _Auto_Relay1
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                          _Load_Work
                         _USART_init
                _mediatemperaturaNTC
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     158
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _mediatemperaturaNTC                                 11    11      0   59115
                                             47 BANK1     11    11      0
                       _ADC_Read_NTC
            _Package_Usart_is_for_me
                        _Rele0Ligado
                        _Rele1Ligado
                            ___fladd
                            ___fldiv
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     298
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Read_NTC                                        23    18      5   48504
                                             25 BANK1     22    17      5
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___lwdiv
                           ___xxtofl
                            _captura
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   26140
                                             78 BANK0      2     2      0
                                             16 BANK1      4     0      4
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5    1132
                                             12 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     630
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     9      7   10575
                                              0 BANK1     16     9      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           6     2      4     220
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    47    47      0   83204
                                             78 BANK0      2     2      0
                                             29 BANK1     45    45      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                          _Load_Work
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                               _itoa
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     235
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               5     3      2    1151
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 6     2      4    2941
                                             15 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     4      4    2060
                                              7 BANK0      8     4      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5074
                                             53 BANK0     25    17      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            8     5      3     980
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     352
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     7     5      2     296
                                              1 BANK0      7     5      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      62
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     611
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     611
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4    6906
                                             25 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___fltol
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     636
                                             10 BANK0      6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     607
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             3     0      3    3415
                                             21 BANK0      3     0      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     2      3     238
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2904
                                             13 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 5     3      2    2177
                                             17 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      4     2      2    3132
                                             17 BANK0      4     2      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     992
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1911
                                             13 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        3     1      2     973
                                             10 BANK0      3     1      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     388
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Load_Work                                            4     4      0    5076
                                             25 BANK1      4     4      0
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    3341
                                              0 BANK1     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Integer                                  8     5      3     238
                                              3 BANK0      8     5      3
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  2     1      1     710
                                              5 BANK0      2     1      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     915
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     459
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   3     2      1     254
                                              3 BANK0      3     2      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read_Byte                                     3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    3886
                                              2 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    4866
                                             15 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    4596
                                              4 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              7     3      4    5486
                                             17 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    5452
                                             17 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          14     7      7    5226
                                              4 BANK0     13     6      7
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2     605
                                              0 BANK0      4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    5762
                                             25 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                             9     3      6    5511
                                             16 BANK0      9     3      6
        _EEPROM_24C1025_Write_Buffer
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    4584
                                              2 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    3091
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Auto_Relay1                                          0     0      0    9214
                     _Rele1Desligado
                        _Rele1Ligado
                             ___flge
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1466
                                             11 BANK0     14    10      4
                   _EEPROM_Read_Byte (ARG)
                _EEPROM_Read_Integer (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele1Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele1Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Auto_Relay0                                          0     0      0    7748
                     _Rele0Desligado
                        _Rele0Ligado
                             ___flge
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    5942
                                             45 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    4977
                                             25 BANK0     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    1806
                                             53 BANK0     12     4      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele0Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele0Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  6     6      0      28
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Auto_Relay0
     _Rele0Desligado
     _Rele0Ligado
     ___flge
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___flsub
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
   _Auto_Relay1
     _Rele1Desligado
     _Rele1Ligado
     ___flge
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___flsub
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___xxtofl
       _EEPROM_Read_Byte (ARG)
       _EEPROM_Read_Integer (ARG)
         _EEPROM_Read_Byte
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       ___fltol (ARG)
       ___wmul (ARG)
         ___fltol (ARG)
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _Load_Work
       _EEPROM_Read_Byte
       _EEPROM_Read_Integer
         _EEPROM_Read_Byte
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
       ___fltol
       ___wmul
         ___fltol (ARG)
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
       ___fladd (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
       _frexp (ARG)
         ___fleq
     ___fltol
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _strcat
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _Load_Work
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___xxtofl
       _EEPROM_Read_Byte (ARG)
       _EEPROM_Read_Integer (ARG)
         _EEPROM_Read_Byte
   _USART_init
   _mediatemperaturaNTC
     _ADC_Read_NTC
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___flmul
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___flsub
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___lwdiv
       ___xxtofl
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
       _captura
       _log
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___fleq
         ___flge
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _eval_poly
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___flsub (ARG)
               ___fladd
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
         _frexp
           ___fleq
     _Package_Usart_is_for_me
     _Rele0Ligado
     _Rele1Ligado
     ___fladd
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
       _frexp (ARG)
         ___fleq
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___xxtofl
       _EEPROM_Read_Byte (ARG)
       _EEPROM_Read_Integer (ARG)
         _EEPROM_Read_Byte
     _my_delay_ms
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      4F       9       82.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      4A      11       77.1%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     4F      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     146      12        0.0%
ABS                  0      0     146       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jan 04 06:18:37 2020

                              _USART_putc 0D87                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 00B8                              ___fldiv@bexp 00B7  
                                       pc 0002                              ___fldiv@sign 00B0  
                                      PL2 0571                                        PL4 05A2  
                                      PL6 0F1A                                        PL8 0F34  
                                      l49 03DC           EEPROM_24C1025_Read_Buffer@range 002F  
        EEPROM_24C1025_Write_Str@chip_add 0029                                        fsr 0004  
                     ___wmul@multiplicand 002C                             _USART_put_int 0F04  
                Decodify_Command@tempchar 00E4                       __Umul8_16@word_mpld 0025  
                                     PL10 05BC                                       PL20 1785  
                                     PL12 0F3D                                       PL30 03E8  
                                     PL22 0F76                                       PL14 0F4E  
                                     PL40 0405                                       PL32 06D8  
                                     PL24 178F                                       PL16 0F67  
                                     PL50 06E3                                       PL42 17AA  
                                     PL34 05C4                                       PL26 1798  
                                     PL18 1775                                       PL60 1E97  
                                     PL52 17BC                                       PL44 17B3  
                                     PL36 03F1                                       PL28 17A1  
                                     PL70 0F96                                       PL62 05CC  
                                     PL54 0416                                       PL46 0F84  
                                     PL38 03FB                                       PL72 0423  
                                     PL64 1F1A                                       PL56 0F8A  
                                     PL48 040E                                       PL74 0429  
                                     PL66 0F91                                       PL58 17C3  
                                     PL76 17C9                                       PL68 041D  
                                     PL78 17CF        EEPROM_24C1025_Read_Buffer@cnt_1518 002D  
            PROCULUS_VP_Write_String@text 0037                                       l307 0901  
                                     l340 0B79                                       l342 0BDB  
                                     l336 0B6C                                       l506 07E9  
                                     l450 1680                                       l287 07BB  
                                     l480 1E88                                       l288 07BF  
                                     l474 1E64                                       l484 0ED0  
                                     l479 1E87                                       l738 176B  
                                     l796 0D8F                                       _PEN 048A  
                            __CFG_CPD$OFF 0000                                       _SEN 0488  
      EEPROM_24C1025_Read_Buffer@chip_add 002E                  Decodify_Command@sizedata 00E5  
                                     _log 168C                                       _isr 1F20  
                                     fsr0 0004                             ??_Auto_Relay0 0061  
                           ??_Auto_Relay1 0061                                       indf 0000  
               __end_of_EEPROM_Write_Byte 1E97                              __CFG_IESO$ON 0000  
                            ___flmul@aexp 0062                              ___flmul@bexp 0063  
                  PROCULUS_VP_Write@vetor 002F              ?_EEPROM_24C1025_Write_Buffer 0022  
                            ___flmul@sign 0061                              ___flmul@temp 006C  
                            ___flmul@prod 0068   __end_of_PROCULUS_Control_Register_Write 0FE6  
__size_of_PROCULUS_Control_Register_Write 0028         ??_PROCULUS_Control_Register_Write 002E  
        ?_PROCULUS_Control_Register_Write 002D           _PROCULUS_Control_Register_Write 0FBE  
                            __CFG_LVP$OFF 0000                     ??_mediatemperaturaNTC 00CF  
                            ___fltol@exp1 0029                                      l1311 12E6  
                                    l1305 1280                                      l1306 1282  
                                    l1331 1330                                      l1172 051D  
                                    l1316 12FB                                      l1340 152C  
                                    l1341 1529                                      l1174 0557  
                                    l1424 14C6                                      l1344 1544  
                                    l1345 1541                                      l1283 11DC  
                                    l1451 1D7A                                      l1284 11DA  
                                    l1380 0C07                                      l1437 14F8  
                                    l1381 0C05                                      l1294 125D  
                                    l1296 124B                                      l1288 11F8  
                                    l1376 0BF0                                      l1297 1252  
                                    l1289 11F6                                      l1369 1633  
                                    l1377 0BEE                                      l1298 1254  
                                    l1398 0D25                                      l6022 0D52  
                                    l6200 12F0                                      l6026 0D5A  
                                    l6220 130B                                      l6212 1300  
                                    l7004 15BC                                      l6060 1EF5  
                                    l6214 1302                                      l6118 1204  
                                    l7030 15EB                                      l7022 15C4  
                                    l7006 1585                                      l6224 130D  
                                    l7024 15D7                                      l7008 15BE  
                                    l6064 1F06                                      l6170 1263  
                                    l7106 1E26                                      l7050 1615  
                                    l7034 15ED                                      l6244 132C  
                                    l6236 1320                                      l6164 1257  
                                    l6148 1222                                      l7044 1601  
                                    l6500 0FE6                                      l6340 0CD9  
                                    l6068 1F18                                      l7302 0124  
                                    l7062 1634                                      l7118 0DF0  
                                    l7214 1C70                                      l6334 0CC6  
                                    l6270 0BF4                                      l7070 1D3E  
                                    l6512 050C                                      l6248 1331  
                                    l6184 1286                                      l6424 02EE  
                                    l7304 0127                                      l7224 0086  
                                    l7056 162B                                      l7160 1D18  
                                    l6344 0CDB                                      l7080 1D58  
                                    l6194 12D8                                      l6610 150E  
                                    l6426 02F1                                      l7330 014B  
                                    l7306 0128                                      l7226 0089  
                                    l6506 0FE8                                      l6354 0CEF  
                                    l6282 0C0B                                      l7410 0DA6  
                                    l8042 0770                                      l6428 02F2  
                                    l7228 008A                                      l6364 0D18  
                                    l7500 1770                                      ?_log 00B0  
                                    l6518 053A                                      l7350 0192  
                                    l6550 1679                                      l7166 0F13  
                                    l6358 0D03                                      l6286 0C15  
                                    l6622 1EB7                                      l7520 1107  
                                    l6464 035F                                      l6392 03D5  
                                    l6800 0232                                      l6720 020B  
                                    l7352 0193                                      l7176 1E47  
                                    l7424 0D69                                      l8128 0B88  
                                    l7600 1CC6                                      l6640 11BF  
                                    l7504 1773                                      l8072 07A1  
                                    l6490 038D                                      l6466 0362  
                                    l6802 02B8                                      l6722 020E  
                                    l7290 00EF                                      l7282 00E0  
                                    l7178 1E58                                      l6538 1662  
                                    l6810 0DB6                                      l6562 1D94  
                                    l6570 1DA7                                      l7426 0D70  
                                    l7418 1C59                                      l7450 17D8  
                                    l7532 0569                                      l7516 10FF  
                                    l7508 10F0                                      l7700 0434  
                                    l6580 14BE                                      l6468 0363  
                                    l6484 037D                                      l6492 030C  
                                    l6724 020F                                      l7348 018F  
                                    l6652 0EEF                                      l6812 0DBE  
                                    l7428 0D74                                      l7620 1CE0  
                                    l8092 07DA                                      ?_isr 0077  
                                    l7534 056D                                      l6590 14DC  
                                    l6494 038F                                      l7382 01CE  
                                    l7374 01B6                                      l6398 0F04  
                                    l6910 068A                                      l6830 16C3  
                                    l7462 133F                                      l7704 046B  
                                    l7528 1116                                      l6592 14E7  
                                    l6584 14D1                                      l7384 01D5  
                                    l7288 00A8                                      l7800 0927  
                                    l7706 046E                                      l7730 04E7  
                                    l7722 048E                                      l7394 05D9  
                                    l6770 027F                                      l6682 1E6D  
                                    l6906 0682                                      l6674 0DC9  
                                    l7546 1DED                                      l7634 1CE7  
                                    l6826 16A7                                      l7708 0467  
                                    l6596 14F6                                      l6588 14D3  
                                    l7732 04E0                                      l7724 048F  
                                    l6684 1E70                                      l6852 0FD2  
                                    l6916 068E                                      l6676 0DE6  
                                    l6668 0DC5                                      l7820 096B  
                                    l7652 102C                                      l7580 1C8C  
                                    l6598 14EC                                      l6766 027B  
                                    l6854 0FE2                                      l6870 0841  
                                    l6918 0698                                      l7814 0952  
                                    l7806 0936                                      l7558 1E18  
                                    l7728 04E4                                      l6768 027E  
                                    l6792 02A2                                      l6960 1548  
                                    l6856 080F                                      l7904 0AF6  
                                    l7832 0988                                      l7680 1095  
                                    l6946 1530                                      l6890 065F  
                                    l6874 06C1                                      l7922 0B28  
                                    l7914 0B10                                      l7850 09EC  
                                    l7826 0976                                      l7762 087A  
                                    l7754 085D                                      l6980 1569  
                                    l6972 1561                                      l6868 082A  
                                    l6892 0664                                      l7940 0B4C  
                                    l7844 09C7                                      l7668 1080  
                                    l7676 108E                                      l6798 02B6  
                                    l6878 06C9                                      l7934 0B3C  
                                    l7870 0A5D                                      l7838 09A7  
                                    l7790 090C                                      l7782 08FA  
                                    l7774 08D0                                      l7758 0867  
                                    l7694 10E0                                      l7952 0B70  
                                    l7928 0B31                                      l7880 0A98  
                                    l7864 0A3A                                      l7856 0A0A  
                                    l7688 10AD                                      l7698 0433  
                                    l7946 0B60                                      l7786 0903  
                                    l7876 0A78                                      l7796 0914  
                                    l7964 0B7D                                      l7972 06EB  
                                    _BETA 1834                                      l6998 159D  
                                    l7894 0ADC                                      l7886 0AA8  
                                    STR_1 183C                              __CFG_WDTE$ON 0000  
                                    STR_2 1847                                      STR_3 1846  
                                    STR_4 1848                                      STR_5 1846  
                                    STR_6 1848                                      STR_7 1846  
                                    STR_8 1843                                      _CREN 00C4  
                                    u6003 035D                                      u6015 0319  
                                    u6025 0FEE                                      u7003 018D  
                                    u6125 166B                                      u7033 0601  
                                    u5265 1F14                                      u5370 1242  
                                    u5380 1243                                      _RCEN 048B  
                                    u5365 1236                                      u6413 0279  
                                    u6165 1D9A                                      u7215 1DBA  
                                    u7223 1C9E                                      u5483 1298  
                                    u7083 17EA                                      u6373 01FA  
                                    u6525 066D                                      u6383 0209  
                                    u6393 0243                                      u5905 0CF8  
                                    u5930 03D2                                      u5915 0D0E  
                                    u7195 1E00                                      u6805 1620  
                                    u6903 0075                                      u6913 0084  
                                    u5963 02DD                                      u6923 00BB  
                                    u7707 0EE0                                      u5973 02EC  
                                    u7717 00D1                                      u5983 032A  
                                    u7727 00FD                                      u6695 15AB  
                                    u7647 06F3                                      u7737 0172  
                                    u6865 1D24                                      u7657 1CA7  
                                    u7747 01E1                                      u6963 0113  
                                    u6795 160A                                      u7667 17F2  
                                    u7757 025C                                      u6973 0122  
                                    u7677 0FF6                                      u7767 02C4  
                                    u6983 0158                                      u7687 1E3E  
                                    u6895 1C79                                      u7777 0340  
                                    u7697 1E91                                      u7787 03A0  
                                    _RSEN 0489                                      _WPUB 0095  
                    PROCULUS_Buzzer@vetor 0033                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000          __end_of_I2C_Master_RepeatedStart 03E8  
                                    _main 06EB                                      _hora 0075  
                                    _itoa 0D98         __size_of_EEPROM_24C1025_Write_Int 0018  
                                    btemp 007E                                      _utoa 1D39  
       __size_of_EEPROM_24C1025_Write_Str 009D                                      log@x 00B0  
               ?_EEPROM_24C1025_Write_Int 0030                             __CFG_BOREN$ON 0000  
               ?_EEPROM_24C1025_Write_Str 0022               __size_of_EEPROM_Read_String 0016  
                                    start 0012                          __end_of_ADC_init 080F  
                        _BALANCE_RESISTOR 1838                           ___fldiv@new_exp 00B1  
      EEPROM_24C1025_Read_Buffer@sizedata 0028                             ??_Rele0Ligado 0020  
                           ??_Rele1Ligado 0020                                     ??_log 006E  
                                   ??_isr 0077                          ?_I2C_Master_Init 002D  
                        ?_I2C_Master_Read 0020                          ?_I2C_Master_Wait 0077  
                        ?_I2C_Master_Stop 0077                            ?_USART_put_int 002A  
                   __size_of_ADC_Read_NTC 0172                             ___fltol@sign1 0028  
                         __end_of___fladd 1337                                     ?_main 0077  
                                   _ACKEN 048C                                     _ACKDT 048D  
                         __end_of___fldiv 1638                                     ?_itoa 002F  
                                   _EEADR 010D                           __end_of___flmul 0D30  
                         __end_of___flsub 1654                           __end_of___fltol 06A7  
                                   _ANSEL 0188                           __end_of___lldiv 1E21  
                                   ?_utoa 0027                                     _T1CON 0010  
                         __end_of___lwdiv 167E                           __end_of___lwmod 1DAC  
                                   i1l563 1F49                                     i1l565 1F5C  
                                   i1l583 1FF3                                     i1l567 1F6F  
                                   _RCREG 001A                                     _TMR1H 000F  
                                   _TMR1L 000E                                     _SPBRG 0099  
                                   _PORTA 0005                                     _PORTB 0006  
                                   _PORTC 0007                                     _PORTE 0009  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087           EEPROM_24C1025_Read_Int@chip_add 0035  
                                   _TRISE 0089                                     _TXREG 0019  
                         __end_of_captura 168C                             __CFG_PWRTE$ON 0000  
                            _usart_buffer 0110                 EEPROM_Read_Integer@result 0028  
                                   _canal 01B5              __size_of_EEPROM_Read_Integer 001B  
                                   _count 01A2                                     _frexp 1E9D  
           ??_EEPROM_24C1025_Write_Buffer 0029        __size_of_EEPROM_24C1025_Write_Byte 0014  
                                   _texto 01BD                ?_EEPROM_24C1025_Write_Byte 002F  
                     __end_of_Auto_Relay0 0488                       __end_of_Auto_Relay1 04FB  
                                   pclath 000A                                     utoa@c 002D  
                                   utoa@v 002B                                     status 0003  
                                   wtemp0 007E                   ADC_Read_NTC@resistencia 00C4  
         EEPROM_24C1025_Read_Byte@mem_add 0031                              __end_of_BETA 1838  
                 ADC_Read_NTC@temperatura 00CB                   __size_of_PROCULUS_Delay 001A  
                          __CFG_MCLRE$OFF 0000         __size_of_PROCULUS_VP_Write_String 0012  
                             ?_USART_init 0020                           __initialization 0015  
               ?_PROCULUS_VP_Write_String 0035                              _ADC_Read_NTC 1337  
                             ?_USART_putc 0077                               log@exponent 006E  
                            __end_of_main 07E6                                _Histerese0 019C  
                              _Histerese1 01B8                              __end_of_itoa 0DB2  
                            __end_of_utoa 1D88                            Send_To_MB@size 0021  
                        _USART_put_buffer 1C6C                  __end_of_EEPROM_Read_Byte 0EE9  
                                  ??_main 00EA                                    ??_itoa 0033  
                        __end_of_Save_Log 0658                                    ??_utoa 002B  
                     __end_of_Rele0Ligado 1107                          _USART_put_string 0DC5  
                     __end_of_Rele1Ligado 111E                     EEPROM_Write_Byte@addr 0023  
                   EEPROM_Write_Byte@dado 0020                __size_of_EEPROM_Write_Byte 003B  
                       ?_I2C_Master_Start 0077                 EEPROM_Write_Byte@last_GIE 0024  
                _mediatemperaturaNTC$2292 00D0                         ?_I2C_Master_Write 0020  
                      ??_I2C_Master_Start 0020                                    _ADCON1 009F  
                      ??_I2C_Master_Write 0022                 PROCULUS_Show_Screen@vetor 0033  
                                  ?_frexp 002C                                    _ADRESH 001E  
                                  _ADRESL 009E                                    _EEDATA 010C  
                                  _EECON2 018D                                _Send_To_MB 0D30  
                   EEPROM_Write_Integer@i 002B                                    _ANSELH 0189  
            __end_of_PROCULUS_Show_Screen 0FA6                            _Rele0Desligado 0569  
                                  i1l5910 1F72                                    i1l5904 1F5F  
                                  i1l5942 1F9D                                    i1l5960 1FD3  
                                  i1l5962 1FAB                                    i1l5890 1F2F  
                                  i1l5964 1FDA                                    i1l5958 1FCF  
                                  i1l5894 1F3E                                    i1l5898 1F4C  
                                  u516_25 1FC7         __end_of_EEPROM_24C1025_Write_Byte 1C57  
                            ?_my_delay_ms 0020                                    _TMR1IE 0460  
                                  _TMR1CS 0081                  ?_EEPROM_24C1025_Fill_All 0039  
                      __size_of_Load_Work 00D8                                    _SSPADD 0093  
                                  _TRISC3 043B                                    _TRISC4 043C  
                                  _TRISC6 043E                                    _TRISC7 043F  
                                  _SSPCON 0014                                    _SSPBUF 0013  
          EEPROM_24C1025_Fill_All@mem_add 003C                          __end_of___xxtofl 1517  
                          _Rele1Desligado 056D                        PROCULUS_VP_Write@i 0034  
                __end_of_Decodify_Command 0BDC                                _TempoCNT_0 00EF  
                              _TempoCNT_1 0074                                _TempoOFF_0 01B9  
                              _TempoOFF_1 01B6                  ?_EEPROM_24C1025_Read_Int 0031  
                ?_EEPROM_24C1025_Read_Str 0024                  _I2C_Master_RepeatedStart 03E5  
    __size_of_EEPROM_24C1025_Write_Buffer 00DB                                    ___flge 04FB  
                                  ___fleq 1EE4                                 ??___fladd 0041  
                                  ___wmul 06BF                                 ??___fldiv 00A8  
                               ??___flmul 005D                                 ??___flsub 0055  
                               ??___fltol 0024                           ??_USART_put_int 002C  
                               ??___lldiv 0028                                    _header 01A4  
                               ??___lwdiv 0024                                 ??___lwmod 0024  
                                  _buffer 013A                         _USART_to_Protocol 1CEE  
                         USART_putc@value 0020                                    _minuto 01BB  
                               ??_captura 0022                        ?_USART_to_Protocol 0077  
            Decodify_Command@add_24LCxxxx 00E6                                    _strcat 0D67  
                                  _strcpy 1C57                                    _strlen 0DB2  
       EEPROM_24C1025_Read_Buffer@mem_add 0024          __end_of_EEPROM_24C1025_Read_Byte 004C  
                      __size_of__Umul8_16 001B                               _Auto_Relay0 042F  
                             _Auto_Relay1 0488                                    saved_w 007E  
       EEPROM_24C1025_Write_Byte@chip_add 0034                                 ?_ADC_init 0077  
                     ??_USART_to_Protocol 0020                       __size_of_USART_init 0039  
                  __end_of_Rele0Desligado 056D                       __size_of_USART_putc 0011  
                              ___flge@ff1 0055                                ___flge@ff2 0059  
                  __end_of_Rele1Desligado 0571                              ___xxtofl@arg 0035  
                            ___xxtofl@exp 0034                              ___xxtofl@val 002B  
                              ___fleq@ff1 0020                                ___fleq@ff2 0024  
                        __end_oflog@coeff 1834                   __end_of__initialization 0032  
     PROCULUS_Control_Register_Write@size 002D                              eval_poly@res 00AC  
                              ___fltol@f1 0020                              _Board_Number 01B4  
                          __pcstackCOMMON 0077                  __size_of_PROCULUS_Buzzer 0018  
               __end_of_USART_to_Protocol 1D39                              __pidataBANK3 0000  
                             _Rele0Ligado 10F0                             __end_of_frexp 1EE4  
                             _Rele1Ligado 1107                     USART_put_string@vetor 0021  
                              __end_ofPL2 05A2                                __end_ofPL4 05BC  
                              __end_ofPL6 0F34                                __end_ofPL8 0F3D  
                       __end_of_Load_Work 0EC8                       my_delay_ms_WDT@time 0020  
           __size_of_EEPROM_Write_Integer 0023                  __size_of_my_delay_ms_WDT 002D  
                          _OPTION_REGbits 0081                  __end_of_BALANCE_RESISTOR 183C  
        __end_of_EEPROM_24C1025_Write_Int 06BF                        Decodify_Command@hh 00BD  
                      Decodify_Command@mm 00C7          __end_of_EEPROM_24C1025_Write_Str 0102  
                      Decodify_Command@ss 00D1                      USART_put_buffer@loop 0026  
                    USART_put_buffer@size 0021                                ??_ADC_init 0020  
             __end_of_EEPROM_Write_String 1E5C           __end_of_EEPROM_24C1025_Fill_All 0604  
                         ?_Rele0Desligado 0077                                   ??_frexp 0031  
                             ?_Send_To_MB 0077                    __size_of_Send_Reply_OK 0007  
                              __pbssBANK1 00EF                                __pbssBANK2 0110  
                              __pbssBANK3 0190                        __size_of_eval_poly 00AA  
                         ?_Rele1Desligado 0077           __end_of_EEPROM_24C1025_Read_Int 0065  
         __end_of_EEPROM_24C1025_Read_Str 01E7                  ?_Package_Usart_is_for_me 0077  
                               ?_Save_Log 0039                            _PROCULUS_Delay 0FE6  
                       __end_of__Umul8_16 0D67                                __pmaintext 06EB  
                                 ?___flge 0055                                   ?___fleq 0020  
                     Save_Log@add_datalog 0039                       _EEPROM_Read_Integer 0EE9  
                                 ?___wmul 002A                PROCULUS_Show_Screen@screen 0031  
                              __pintentry 0004                      mediatemperaturaNTC@i 00D9  
                    _PROCULUS_Show_Screen 0F9C                                   ?_strcat 0020  
                                 _T1CKPS0 0084                                   _T1CKPS1 0085  
                                 ?_strcpy 0020                                   ?_strlen 0020  
             __end_of_mediatemperaturaNTC 10F0                                 ?___xxtofl 002B  
                    ?_EEPROM_Read_Integer 0023                     Decodify_Command@dados 00DB  
             EEPROM_24C1025_Read_Int@data 0036                                   _SSPCON2 0091  
        __end_of_PROCULUS_VP_Write_String 1C43                   EEPROM_Read_Integer@addr 0026  
                                 _SSPSTAT 0094                  _EEPROM_24C1025_Read_Byte 0036  
                              __stringtab 1800                       PROCULUS_VP_Write@vp 002D  
             ??_EEPROM_24C1025_Write_Byte 0034                  __end_of_USART_put_buffer 1C88  
              __end_of_EEPROM_Read_String 07FC                    __end_of_PROCULUS_Delay 1000  
                __end_of_USART_put_string 0DF0                      __size_of_my_delay_ms 002C  
                              ??_Save_Log 003D                           PROCULUS_Delay@i 0024  
                            ??_USART_init 0024               EEPROM_24C1025_Read_Str@ctrl 002E  
                            ??_USART_putc 0020                __size_of_USART_to_Protocol 004B  
             PROCULUS_Buzzer@time_ms_x_10 0031                                   _Status0 01A8  
                                 _Status1 01A6                           __size_of___flge 006E  
                         __size_of___fleq 0036                                   ___fladd 11C8  
                                 ___fldiv 1517                  EEPROM_Write_Integer@addr 0029  
                                 ___flmul 0BDC                  EEPROM_Write_Integer@dado 0025  
                                 ___flsub 1638                                   ___fltol 0658  
                                 ___lldiv 1DD9                           __size_of___wmul 0019  
                                 ___lwdiv 1654                                   ___lwmod 1D88  
                           _Send_Reply_OK 0F13                       __size_of_Send_To_MB 001C  
                   ?_PROCULUS_Show_Screen 0031                         __end_of_eval_poly 11C8  
                                 _captura 167E                                   __ptext1 1C88  
                                 __ptext2 1010                                   __ptext3 17D4  
                                 __ptext4 175F                                   __ptext5 1337  
                                 __ptext6 168C                                   __ptext7 1E9D  
                                 __ptext8 1EE4                                   __ptext9 111E  
                       ??_PROCULUS_Buzzer 0033                                   _destino 01B3  
                       ?_EEPROM_Read_Byte 0077                           __size_of_strcat 0020  
                         __size_of_strcpy 0015                           __size_of_strlen 0013  
                            __size_of_log 00D3                              __size_of_isr 00E0  
                              ??___xxtofl 002F                        ??_EEPROM_Read_Byte 0020  
                                 _segundo 0076                  __size_of_I2C_Master_Init 002D  
                __size_of_I2C_Master_Read 0024                            _usart_protocol 01CD  
                   ??_EEPROM_Read_Integer 0026                  __size_of_I2C_Master_Wait 0009  
                __size_of_I2C_Master_Stop 0003             EEPROM_24C1025_Write_Int@local 0037  
                                 _pointer 01B2             EEPROM_24C1025_Write_Byte@data 0033  
                                 clrloop0 1009                        __end_of_USART_init 1CEE  
         __end_of_Package_Usart_is_for_me 1775                        __end_of_USART_putc 0D98  
                    end_of_initialization 0032                  _EEPROM_24C1025_Write_Int 06A7  
                       ??_my_delay_ms_WDT 0024                  _EEPROM_24C1025_Write_Str 0065  
              ??_I2C_Master_RepeatedStart 0020                                   itoa@buf 0034  
                                 itoa@val 002F                           ?_PROCULUS_Delay 0020  
                         my_delay_ms@time 0020           EEPROM_24C1025_Write_Buffer@data 0027  
         EEPROM_24C1025_Write_Buffer@ctrl 002E                          ADC_Read_NTC@calc 00BE  
               __size_of_I2C_Master_Start 0008                 __size_of_I2C_Master_Write 0008  
                       ?_Decodify_Command 0077                           ___lldiv@divisor 0020  
                         ___lldiv@counter 002C                                 _RL0Status 01DE  
                               _RL1Status 01DD                        ??_Decodify_Command 006E  
                               _RCSTAbits 0018                          I2C_Master_Init@c 002D  
                        I2C_Master_Read@a 0020                            ?_Send_Reply_OK 0077  
                                 utoa@buf 002E                 _EEPROM_24C1025_Write_Byte 1C43  
                                 utoa@val 0027          __size_of_EEPROM_24C1025_Fill_All 0032  
                                 strlen@s 0024                        USART_to_Protocol@i 0022  
                               _PORTAbits 0005                                 _PORTBbits 0006  
                               _PORTCbits 0007                          _Delay_Led_Memory 01B0  
            ??_EEPROM_24C1025_Read_Buffer 002B             EEPROM_24C1025_Write_Str@range 002A  
                mediatemperaturaNTC@canal 00D4                               ___fladd@grs 004C  
        __size_of_EEPROM_24C1025_Read_Int 0019          __size_of_EEPROM_24C1025_Read_Str 00E5  
                            ?_Auto_Relay0 0077                              ?_Auto_Relay1 0077  
                           ___xxtofl@sign 0033       __end_of_EEPROM_24C1025_Write_Buffer 03A5  
             _EEPROM_24C1025_Write_Buffer 02CA                               ___fldiv@grs 00B3  
                             ___fldiv@rem 00AC      PROCULUS_Control_Register_Write@vetor 002F  
        EEPROM_24C1025_Write_Buffer@count 002B           EEPROM_24C1025_Write_Int@mem_add 0030  
        EEPROM_24C1025_Write_Buffer@range 002D                         __size_of_ADC_init 000B  
                 Decodify_Command@tempint 00DE                     PROCULUS_VP_Write@size 0031  
         EEPROM_24C1025_Read_Str@chip_add 002C                               ___flmul@grs 0064  
                _PROCULUS_VP_Write_String 1C31                                 _TXSTAbits 0098  
     __size_of_EEPROM_24C1025_Read_Buffer 00E3                    PROCULUS_Delay@tempo_ms 0020  
                  ??_PROCULUS_Show_Screen 0033                              ?_Rele0Ligado 0077  
                            ?_Rele1Ligado 0077                            __end_of___flge 0569  
                          __end_of___fleq 1F1A                            __end_of___wmul 06D8  
                   __end_of_USART_put_int 0F13                               _BAUDCTLbits 0187  
                        ??_Rele0Desligado 0020                            __end_of_strcat 0D87  
                          __end_of_strcpy 1C6C                            __end_of_strlen 0DC5  
                             __end_ofPL10 05C4                               __end_ofPL20 178F  
                             __end_ofPL12 0F4E                               __end_ofPL30 03F1  
                             __end_ofPL22 0F84                               __end_ofPL14 0F67  
                             __end_ofPL40 040E                               __end_ofPL32 06E3  
                             __end_ofPL24 1798                               __end_ofPL16 0F76  
                             __end_ofPL50 06EB                               __end_ofPL42 17B3  
                             __end_ofPL34 05CC                               __end_ofPL26 17A1  
                             __end_ofPL18 1785                               __end_ofPL60 1E9D  
                             __end_ofPL52 17C3                               __end_ofPL44 17BC  
                             __end_ofPL36 03FB                               __end_ofPL28 17AA  
                             __end_ofPL70 0F9C                               __end_ofPL62 05D2  
                             __end_ofPL54 041D                               __end_ofPL46 0F8A  
                             __end_ofPL38 0405                               __end_ofPL72 0429  
                             __end_ofPL64 1F20                               __end_ofPL56 0F91  
                             __end_ofPL48 0416                               __end_ofPL74 042F  
                             __end_ofPL66 0F96                               __end_ofPL58 17C9  
                             __end_ofPL76 17CF                               __end_ofPL68 0423  
                             __end_ofPL78 17D4                       start_initialization 0015  
                              eval_poly@d 00A4                                eval_poly@n 00A5  
                              eval_poly@x 00A0                          ??_Rele1Desligado 0020  
                               _Load_Work 0DF0                               __end_of_log 175F  
                             __end_of_isr 2000                               USART_init@i 0024  
                            ??_Send_To_MB 0021                                frexp@value 002C  
                       ??_I2C_Master_Init 0031                         ??_I2C_Master_Read 0022  
                       ??_I2C_Master_Wait 0020                         ??_I2C_Master_Stop 0020  
            __end_of_EEPROM_Write_Integer 1E44          EEPROM_24C1025_Write_Int@chip_add 0036  
                               _SetPoint0 0070                                 _SetPoint1 0198  
                __CFG_FOSC$INTRC_NOCLKOUT 0000                       Decodify_Command@add 00DD  
                               _TempoON_0 01BA                                 _TempoON_1 01B7  
                   USART_put_buffer@vetor 0025                           ??_Send_Reply_OK 0025  
                                ??___flge 005D                                  ??___fleq 0028  
                       __size_of_Save_Log 0054                                  ??___wmul 002E  
                               __Umul8_16 0D4C                               __pdataBANK3 01DD  
                      __end_of_Send_To_MB 0D4C          __size_of_Package_Usart_is_for_me 0016  
                                ??_strcat 0022                                  ??_strcpy 0021  
                                ??_strlen 0023                ??_EEPROM_24C1025_Read_Byte 0035  
      EEPROM_24C1025_Write_Buffer@mem_add 0022                                 ___fladd@a 003D  
                               ___fladd@b 0039          EEPROM_24C1025_Write_Byte@mem_add 002F  
                               ___fldiv@a 00A0                                 ___fldiv@b 00A4  
                               ___flmul@a 0059                                 ___flmul@b 0055  
                             __pbssCOMMON 0070                                 ___flsub@a 004D  
                               ___flsub@b 0051                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                              ?_Load_Work 0077                         _PROCULUS_VP_Write 080F  
                       __size_of___xxtofl 006E                        ?_PROCULUS_VP_Write 002D  
                     USART_put_buffer@ptr 0027                         ?_USART_put_buffer 0021  
            __size_of_EEPROM_Write_String 0018                          _I2C_Master_Start 03AD  
                      ??_USART_put_buffer 0023                          _I2C_Master_Write 03A5  
                     ??_PROCULUS_VP_Write 0032                            _tempodecorrido 01A0  
                       ?_USART_put_string 0021                           _PROCULUS_Buzzer 0FA6  
                        ___lwdiv@dividend 0022                             ?_ADC_Read_NTC 00B9  
          Package_Usart_is_for_me@retorno 0020                        ??_USART_put_string 0023  
                                ?___fladd 0039                                  ?___fldiv 00A0  
                 _EEPROM_24C1025_Fill_All 05D2                                  ?___flmul 0055  
                                ?___flsub 004D                                  ?___fltol 0020  
                                ?___lldiv 0020                                ?__Umul8_16 0020  
                      _EEPROM_Read_String 07E6                                  ?___lwdiv 0020  
                                ?___lwmod 0020        __end_of_EEPROM_24C1025_Read_Buffer 02CA  
              _EEPROM_24C1025_Read_Buffer 01E7                                  ?_captura 0020  
                               __pstrings 1800                           _my_delay_ms_WDT 1C88  
                 _EEPROM_24C1025_Read_Int 004C                   _EEPROM_24C1025_Read_Str 0102  
                  EEPROM_Read_Integer@ptr 0027                ??_EEPROM_24C1025_Write_Int 0036  
              ??_EEPROM_24C1025_Write_Str 0027                       ?_EEPROM_Read_String 0023  
                               _eval_poly 111E                 __end_of_PROCULUS_VP_Write 0845  
              EEPROM_24C1025_Read_Str@cnt 002B                                  _ADC_init 0804  
                        ___lwdiv@quotient 0025                   EEPROM_Write_Integer@ptr 002A  
                    __size_of_Auto_Relay0 0059                      __size_of_Auto_Relay1 0073  
                        ??_PROCULUS_Delay 0022                            __size_of_frexp 0047  
          EEPROM_24C1025_Read_Buffer@data 0029              __size_of_mediatemperaturaNTC 00E0  
          EEPROM_24C1025_Read_Buffer@ctrl 0030                             ??_my_delay_ms 0024  
               __size_of_EEPROM_Read_Byte 0021                         interrupt_function 0004  
         EEPROM_24C1025_Write_Str@mem_add 0022                            ___wmul@product 002E  
                    ??_EEPROM_Read_String 0024                                 clear_ram0 1008  
                                _PIE1bits 008C                            ??_ADC_Read_NTC 0070  
                                _PIR1bits 000C          PROCULUS_Control_Register_Write@i 0030  
                  Decodify_Command@OutPut 00E0                   mediatemperaturaNTC@Temp 00D5  
                         _Delay_Led_Usart 01AC              EEPROM_24C1025_Read_Byte@data 0036  
                    __size_of_Rele0Ligado 0017                      __size_of_Rele1Ligado 0017  
             __end_of_EEPROM_Read_Integer 0F04                                _ADCON0bits 001F  
                             __stringbase 180F                                _ADCON1bits 009F  
                       ___wmul@multiplier 002A                 __size_of_Decodify_Command 0397  
                    _EEPROM_Write_Integer 1E21            EEPROM_24C1025_Read_Int@mem_add 0031  
                              ?_eval_poly 00A0                                 main@reset 00ED  
                             ??_Load_Work 00B9                ??_PROCULUS_VP_Write_String 0038  
                     I2C_Master_Read@temp 0022                   __end_of_PROCULUS_Buzzer 0FBE  
                          _generic_status 01BC                                 frexp@eptr 0030  
                              _EECON1bits 018C                                  _Save_Log 0604  
               ??_EEPROM_24C1025_Fill_All 003B                       __end_of_my_delay_ms 1800  
            EEPROM_24C1025_Read_Str@range 002D              EEPROM_24C1025_Read_Str@texto 0028  
                 __end_of_my_delay_ms_WDT 1CB5                              my_delay_ms@i 0026  
                           ADC_Read_NTC@B 00C2                             ADC_Read_NTC@i 00C8  
                             ??__Umul8_16 0023         __size_of_I2C_Master_RepeatedStart 0003  
                        __size_of___fladd 016F                 ??_EEPROM_24C1025_Read_Int 0035  
                 _Package_Usart_is_for_me 175F                          __size_of___fldiv 0121  
               ??_EEPROM_24C1025_Read_Str 0029                          __size_of___flmul 0154  
               ?_I2C_Master_RepeatedStart 0077                          __size_of___flsub 001C  
                        __size_of___fltol 004F                          __size_of___lldiv 0048  
                        __size_of___lwdiv 002A                          __size_of___lwmod 0024  
                      __end_of__stringtab 1810       EEPROM_24C1025_Write_Buffer@chip_add 002C  
                     USART_put_string@ptr 0023                          __size_of_captura 000E  
                   ?_EEPROM_Write_Integer 0025                              _Temperatura0 0194  
                            _Temperatura1 0190                           _I2C_Master_Init 1DAC  
                         _I2C_Master_Read 03B8                                  ___xxtofl 14A9  
              __size_of_PROCULUS_VP_Write 0036                           _I2C_Master_Wait 03DC  
                              strcat@from 0020          EEPROM_24C1025_Read_Byte@chip_add 0035  
                         _I2C_Master_Stop 03B5                           ___lwdiv@divisor 0020  
                         ___lwdiv@counter 0024                                  __ptext10 167E  
                                __ptext11 1CB5                                  __ptext20 0BDC  
                                __ptext12 1DAC                                  __ptext21 0D4C  
                                __ptext13 1DD9                                  __ptext30 1C31  
                                __ptext22 1CEE                                  __ptext14 0845  
                                __ptext31 0DB2                                  __ptext23 1C6C  
                                __ptext15 1C57                                  __ptext40 0DF0  
                                __ptext32 080F                                  __ptext24 0D30  
                                __ptext16 0D67                                  __ptext41 1517  
                                __ptext33 0F9C                                  __ptext25 0F13  
                                __ptext17 0D98                                  __ptext50 0102  
                                __ptext42 0EE9                                  __ptext34 0FA6  
                                __ptext26 0DC5                                  __ptext18 1D39  
                                __ptext51 004C                                  __ptext43 1E44  
                                __ptext35 1654                                  __ptext27 0604  
                                __ptext19 1D88                                  __ptext60 03B5  
                                __ptext52 0036                                  __ptext44 1E21  
                                __ptext36 0FBE                                  __ptext28 06BF  
                                __ptext61 03AD                                  __ptext53 01E7  
                                __ptext45 1E5C                                  __ptext37 0F04  
                                __ptext29 0658                                  __ptext70 04FB  
                                __ptext62 03DC                                  __ptext54 03E5  
                                __ptext46 07E6                                  __ptext38 0D87  
                                __ptext71 10F0                                  __ptext63 0488  
                                __ptext55 03B8                                  __ptext47 0EC8  
                                __ptext39 0FE6                                  __ptext72 0569  
                                __ptext64 14A9                                  __ptext56 05D2  
                                __ptext48 0065                                  __ptext73 0804  
                                __ptext65 1107                                  __ptext57 06A7  
                                __ptext49 1C43                                  __ptext74 1F20  
                                __ptext66 056D                                  __ptext58 02CA  
                                __ptext67 042F                                  __ptext59 03A5  
                                __ptext68 1638                                  __ptext69 11C8  
                       __CFG_BOR4V$BOR40V 0000                        USART_put_int@value 002A  
                              strcpy@from 0020                             __size_of_main 00FB  
                           __size_of_itoa 001A                             __size_of_utoa 004F  
            EEPROM_24C1025_Fill_All@value 0039                PROCULUS_VP_Write_String@vp 0035  
     EEPROM_24C1025_Write_Buffer@sizedata 0026                               _milisegundo 01AA  
                          _Delay_Led_Tmr0 01AE             __size_of_PROCULUS_Show_Screen 000A  
                     _EEPROM_Write_String 1E44                                  log@coeff 1810  
                __end_of_I2C_Master_Start 03B5                  __end_of_I2C_Master_Write 03AD  
                              _INTCONbits 000B                               ??_eval_poly 00A7  
                    __end_of_ADC_Read_NTC 14A9                                  isr@tempo 007B  
                                itoa@base 0031                      EEPROM_Read_Byte@addr 0022  
                  EEPROM_Read_String@addr 0024                    EEPROM_Read_String@dado 0023  
                        my_delay_ms_WDT@i 0026                                  intlevel1 0000  
                        ?_PROCULUS_Buzzer 0031                         USART_put_int@dado 002C  
                        _EEPROM_Read_Byte 0EC8                               _my_delay_ms 17D4  
                       ADC_Read_NTC@canal 0077                          ___lwmod@dividend 0022  
                    ?_EEPROM_Write_String 0025                          ___lldiv@dividend 0024  
                  __size_of_USART_put_int 000F              EEPROM_24C1025_Write_Int@data 0034  
                    EEPROM_Read_Integer@i 002A                   EEPROM_Write_String@addr 0026  
                 EEPROM_Write_String@dado 0025                         ADC_Read_NTC@value 00C9  
                      USART_init@baudrate 0020                                 stringcode 180A  
                              _OSCCONbits 008F                 ??_Package_Usart_is_for_me 0020  
                        ?_my_delay_ms_WDT 0020                     __end_of_Send_Reply_OK 0F1A  
                     _mediatemperaturaNTC 1010                   __end_of_I2C_Master_Init 1DD9  
                 __end_of_I2C_Master_Read 03DC                   __end_of_I2C_Master_Wait 03E5  
                 __end_of_I2C_Master_Stop 03B8              EEPROM_24C1025_Write_Str@data 0026  
            EEPROM_24C1025_Write_Str@ctrl 002B                 __size_of_USART_put_buffer 001C  
             ?_EEPROM_24C1025_Read_Buffer 0024           EEPROM_24C1025_Fill_All@chip_add 003B  
                  ??_EEPROM_Write_Integer 0027                                  utoa@base 0029  
                  __Umul8_16@multiplicand 0020           USART_to_Protocol@usart_protocol 0024  
                        _Decodify_Command 0845                                  strcat@cp 0023  
                                strcat@to 0024                 __size_of_USART_put_string 002B  
                        ___lldiv@quotient 0028                         I2C_Master_Write@d 0020  
                         ___lwmod@divisor 0020                                  strcpy@cp 0023  
                                strlen@cp 0023                                  strcpy@to 0022  
                         ___lwmod@counter 0024                                  stringdir 180A  
                                stringtab 1800                         _EEPROM_Write_Byte 1E5C  
          EEPROM_24C1025_Read_Str@mem_add 0024                             ___fladd@signs 0049  
                    ?_mediatemperaturaNTC 0077                        ?_EEPROM_Write_Byte 0020  
                   ??_EEPROM_Write_String 0026                   __size_of_Rele0Desligado 0004  
                            ___fladd@aexp 004A                              ___fladd@bexp 004B  
       __size_of_EEPROM_24C1025_Read_Byte 0016                 ?_EEPROM_24C1025_Read_Byte 0031  
                     EEPROM_Read_String@c 0025                      __Umul8_16@multiplier 0027  
                 __size_of_Rele1Desligado 0004                       ??_EEPROM_Write_Byte 0021  
                       __Umul8_16@product 0023                                _USART_init 1CB5  
