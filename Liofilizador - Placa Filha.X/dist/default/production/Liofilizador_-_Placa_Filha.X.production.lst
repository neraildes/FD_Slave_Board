

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Apr 10 10:33:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 2.20
    78                           ; Generated 12/02/2020 GMT
    79                           ; 
    80                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F886 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0093                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0095                     	;# 
   162  0096                     	;# 
   163  0097                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  0105                     	;# 
   173  0107                     	;# 
   174  0108                     	;# 
   175  0109                     	;# 
   176  010C                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  0185                     	;# 
   182  0187                     	;# 
   183  0188                     	;# 
   184  0189                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0009                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  000D                     	;# 
   200  000E                     	;# 
   201  000E                     	;# 
   202  000F                     	;# 
   203  0010                     	;# 
   204  0011                     	;# 
   205  0012                     	;# 
   206  0013                     	;# 
   207  0014                     	;# 
   208  0015                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001B                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  001D                     	;# 
   219  001E                     	;# 
   220  001F                     	;# 
   221  0081                     	;# 
   222  0085                     	;# 
   223  0086                     	;# 
   224  0087                     	;# 
   225  0089                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  008F                     	;# 
   230  0090                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0095                     	;# 
   238  0096                     	;# 
   239  0097                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  0105                     	;# 
   249  0107                     	;# 
   250  0108                     	;# 
   251  0109                     	;# 
   252  010C                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  0185                     	;# 
   258  0187                     	;# 
   259  0188                     	;# 
   260  0189                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0009                     	;# 
   272  000A                     	;# 
   273  000B                     	;# 
   274  000C                     	;# 
   275  000D                     	;# 
   276  000E                     	;# 
   277  000E                     	;# 
   278  000F                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0013                     	;# 
   283  0014                     	;# 
   284  0015                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0017                     	;# 
   288  0018                     	;# 
   289  0019                     	;# 
   290  001A                     	;# 
   291  001B                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  001D                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  0081                     	;# 
   298  0085                     	;# 
   299  0086                     	;# 
   300  0087                     	;# 
   301  0089                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  008E                     	;# 
   305  008F                     	;# 
   306  0090                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0093                     	;# 
   312  0094                     	;# 
   313  0095                     	;# 
   314  0096                     	;# 
   315  0097                     	;# 
   316  0098                     	;# 
   317  0099                     	;# 
   318  009A                     	;# 
   319  009B                     	;# 
   320  009C                     	;# 
   321  009D                     	;# 
   322  009E                     	;# 
   323  009F                     	;# 
   324  0105                     	;# 
   325  0107                     	;# 
   326  0108                     	;# 
   327  0109                     	;# 
   328  010C                     	;# 
   329  010C                     	;# 
   330  010D                     	;# 
   331  010E                     	;# 
   332  010F                     	;# 
   333  0185                     	;# 
   334  0187                     	;# 
   335  0188                     	;# 
   336  0189                     	;# 
   337  018C                     	;# 
   338  018D                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0009                     	;# 
   348  000A                     	;# 
   349  000B                     	;# 
   350  000C                     	;# 
   351  000D                     	;# 
   352  000E                     	;# 
   353  000E                     	;# 
   354  000F                     	;# 
   355  0010                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0013                     	;# 
   359  0014                     	;# 
   360  0015                     	;# 
   361  0015                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001B                     	;# 
   369  001C                     	;# 
   370  001D                     	;# 
   371  001E                     	;# 
   372  001F                     	;# 
   373  0081                     	;# 
   374  0085                     	;# 
   375  0086                     	;# 
   376  0087                     	;# 
   377  0089                     	;# 
   378  008C                     	;# 
   379  008D                     	;# 
   380  008E                     	;# 
   381  008F                     	;# 
   382  0090                     	;# 
   383  0091                     	;# 
   384  0092                     	;# 
   385  0093                     	;# 
   386  0093                     	;# 
   387  0093                     	;# 
   388  0094                     	;# 
   389  0095                     	;# 
   390  0096                     	;# 
   391  0097                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  009F                     	;# 
   400  0105                     	;# 
   401  0107                     	;# 
   402  0108                     	;# 
   403  0109                     	;# 
   404  010C                     	;# 
   405  010C                     	;# 
   406  010D                     	;# 
   407  010E                     	;# 
   408  010F                     	;# 
   409  0185                     	;# 
   410  0187                     	;# 
   411  0188                     	;# 
   412  0189                     	;# 
   413  018C                     	;# 
   414  018D                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  000E                     	;# 
   429  000E                     	;# 
   430  000F                     	;# 
   431  0010                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0013                     	;# 
   435  0014                     	;# 
   436  0015                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  001D                     	;# 
   447  001E                     	;# 
   448  001F                     	;# 
   449  0081                     	;# 
   450  0085                     	;# 
   451  0086                     	;# 
   452  0087                     	;# 
   453  0089                     	;# 
   454  008C                     	;# 
   455  008D                     	;# 
   456  008E                     	;# 
   457  008F                     	;# 
   458  0090                     	;# 
   459  0091                     	;# 
   460  0092                     	;# 
   461  0093                     	;# 
   462  0093                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0095                     	;# 
   466  0096                     	;# 
   467  0097                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009A                     	;# 
   471  009B                     	;# 
   472  009C                     	;# 
   473  009D                     	;# 
   474  009E                     	;# 
   475  009F                     	;# 
   476  0105                     	;# 
   477  0107                     	;# 
   478  0108                     	;# 
   479  0109                     	;# 
   480  010C                     	;# 
   481  010C                     	;# 
   482  010D                     	;# 
   483  010E                     	;# 
   484  010F                     	;# 
   485  0185                     	;# 
   486  0187                     	;# 
   487  0188                     	;# 
   488  0189                     	;# 
   489  018C                     	;# 
   490  018D                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0009                     	;# 
   500  000A                     	;# 
   501  000B                     	;# 
   502  000C                     	;# 
   503  000D                     	;# 
   504  000E                     	;# 
   505  000E                     	;# 
   506  000F                     	;# 
   507  0010                     	;# 
   508  0011                     	;# 
   509  0012                     	;# 
   510  0013                     	;# 
   511  0014                     	;# 
   512  0015                     	;# 
   513  0015                     	;# 
   514  0016                     	;# 
   515  0017                     	;# 
   516  0018                     	;# 
   517  0019                     	;# 
   518  001A                     	;# 
   519  001B                     	;# 
   520  001B                     	;# 
   521  001C                     	;# 
   522  001D                     	;# 
   523  001E                     	;# 
   524  001F                     	;# 
   525  0081                     	;# 
   526  0085                     	;# 
   527  0086                     	;# 
   528  0087                     	;# 
   529  0089                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  008F                     	;# 
   534  0090                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0093                     	;# 
   538  0093                     	;# 
   539  0093                     	;# 
   540  0094                     	;# 
   541  0095                     	;# 
   542  0096                     	;# 
   543  0097                     	;# 
   544  0098                     	;# 
   545  0099                     	;# 
   546  009A                     	;# 
   547  009B                     	;# 
   548  009C                     	;# 
   549  009D                     	;# 
   550  009E                     	;# 
   551  009F                     	;# 
   552  0105                     	;# 
   553  0107                     	;# 
   554  0108                     	;# 
   555  0109                     	;# 
   556  010C                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  0185                     	;# 
   562  0187                     	;# 
   563  0188                     	;# 
   564  0189                     	;# 
   565  018C                     	;# 
   566  018D                     	;# 
   567  0000                     	;# 
   568  0001                     	;# 
   569  0002                     	;# 
   570  0003                     	;# 
   571  0004                     	;# 
   572  0005                     	;# 
   573  0006                     	;# 
   574  0007                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  000D                     	;# 
   580  000E                     	;# 
   581  000E                     	;# 
   582  000F                     	;# 
   583  0010                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0014                     	;# 
   588  0015                     	;# 
   589  0015                     	;# 
   590  0016                     	;# 
   591  0017                     	;# 
   592  0018                     	;# 
   593  0019                     	;# 
   594  001A                     	;# 
   595  001B                     	;# 
   596  001B                     	;# 
   597  001C                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  0081                     	;# 
   602  0085                     	;# 
   603  0086                     	;# 
   604  0087                     	;# 
   605  0089                     	;# 
   606  008C                     	;# 
   607  008D                     	;# 
   608  008E                     	;# 
   609  008F                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0092                     	;# 
   613  0093                     	;# 
   614  0093                     	;# 
   615  0093                     	;# 
   616  0094                     	;# 
   617  0095                     	;# 
   618  0096                     	;# 
   619  0097                     	;# 
   620  0098                     	;# 
   621  0099                     	;# 
   622  009A                     	;# 
   623  009B                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  009F                     	;# 
   628  0105                     	;# 
   629  0107                     	;# 
   630  0108                     	;# 
   631  0109                     	;# 
   632  010C                     	;# 
   633  010C                     	;# 
   634  010D                     	;# 
   635  010E                     	;# 
   636  010F                     	;# 
   637  0185                     	;# 
   638  0187                     	;# 
   639  0188                     	;# 
   640  0189                     	;# 
   641  018C                     	;# 
   642  018D                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  000E                     	;# 
   658  000F                     	;# 
   659  0010                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  001D                     	;# 
   675  001E                     	;# 
   676  001F                     	;# 
   677  0081                     	;# 
   678  0085                     	;# 
   679  0086                     	;# 
   680  0087                     	;# 
   681  0089                     	;# 
   682  008C                     	;# 
   683  008D                     	;# 
   684  008E                     	;# 
   685  008F                     	;# 
   686  0090                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0093                     	;# 
   690  0093                     	;# 
   691  0093                     	;# 
   692  0094                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0097                     	;# 
   696  0098                     	;# 
   697  0099                     	;# 
   698  009A                     	;# 
   699  009B                     	;# 
   700  009C                     	;# 
   701  009D                     	;# 
   702  009E                     	;# 
   703  009F                     	;# 
   704  0105                     	;# 
   705  0107                     	;# 
   706  0108                     	;# 
   707  0109                     	;# 
   708  010C                     	;# 
   709  010C                     	;# 
   710  010D                     	;# 
   711  010E                     	;# 
   712  010F                     	;# 
   713  0185                     	;# 
   714  0187                     	;# 
   715  0188                     	;# 
   716  0189                     	;# 
   717  018C                     	;# 
   718  018D                     	;# 
   719  0000                     	;# 
   720  0001                     	;# 
   721  0002                     	;# 
   722  0003                     	;# 
   723  0004                     	;# 
   724  0005                     	;# 
   725  0006                     	;# 
   726  0007                     	;# 
   727  0009                     	;# 
   728  000A                     	;# 
   729  000B                     	;# 
   730  000C                     	;# 
   731  000D                     	;# 
   732  000E                     	;# 
   733  000E                     	;# 
   734  000F                     	;# 
   735  0010                     	;# 
   736  0011                     	;# 
   737  0012                     	;# 
   738  0013                     	;# 
   739  0014                     	;# 
   740  0015                     	;# 
   741  0015                     	;# 
   742  0016                     	;# 
   743  0017                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  001B                     	;# 
   748  001B                     	;# 
   749  001C                     	;# 
   750  001D                     	;# 
   751  001E                     	;# 
   752  001F                     	;# 
   753  0081                     	;# 
   754  0085                     	;# 
   755  0086                     	;# 
   756  0087                     	;# 
   757  0089                     	;# 
   758  008C                     	;# 
   759  008D                     	;# 
   760  008E                     	;# 
   761  008F                     	;# 
   762  0090                     	;# 
   763  0091                     	;# 
   764  0092                     	;# 
   765  0093                     	;# 
   766  0093                     	;# 
   767  0093                     	;# 
   768  0094                     	;# 
   769  0095                     	;# 
   770  0096                     	;# 
   771  0097                     	;# 
   772  0098                     	;# 
   773  0099                     	;# 
   774  009A                     	;# 
   775  009B                     	;# 
   776  009C                     	;# 
   777  009D                     	;# 
   778  009E                     	;# 
   779  009F                     	;# 
   780  0105                     	;# 
   781  0107                     	;# 
   782  0108                     	;# 
   783  0109                     	;# 
   784  010C                     	;# 
   785  010C                     	;# 
   786  010D                     	;# 
   787  010E                     	;# 
   788  010F                     	;# 
   789  0185                     	;# 
   790  0187                     	;# 
   791  0188                     	;# 
   792  0189                     	;# 
   793  018C                     	;# 
   794  018D                     	;# 
   795  0000                     	;# 
   796  0001                     	;# 
   797  0002                     	;# 
   798  0003                     	;# 
   799  0004                     	;# 
   800  0005                     	;# 
   801  0006                     	;# 
   802  0007                     	;# 
   803  0009                     	;# 
   804  000A                     	;# 
   805  000B                     	;# 
   806  000C                     	;# 
   807  000D                     	;# 
   808  000E                     	;# 
   809  000E                     	;# 
   810  000F                     	;# 
   811  0010                     	;# 
   812  0011                     	;# 
   813  0012                     	;# 
   814  0013                     	;# 
   815  0014                     	;# 
   816  0015                     	;# 
   817  0015                     	;# 
   818  0016                     	;# 
   819  0017                     	;# 
   820  0018                     	;# 
   821  0019                     	;# 
   822  001A                     	;# 
   823  001B                     	;# 
   824  001B                     	;# 
   825  001C                     	;# 
   826  001D                     	;# 
   827  001E                     	;# 
   828  001F                     	;# 
   829  0081                     	;# 
   830  0085                     	;# 
   831  0086                     	;# 
   832  0087                     	;# 
   833  0089                     	;# 
   834  008C                     	;# 
   835  008D                     	;# 
   836  008E                     	;# 
   837  008F                     	;# 
   838  0090                     	;# 
   839  0091                     	;# 
   840  0092                     	;# 
   841  0093                     	;# 
   842  0093                     	;# 
   843  0093                     	;# 
   844  0094                     	;# 
   845  0095                     	;# 
   846  0096                     	;# 
   847  0097                     	;# 
   848  0098                     	;# 
   849  0099                     	;# 
   850  009A                     	;# 
   851  009B                     	;# 
   852  009C                     	;# 
   853  009D                     	;# 
   854  009E                     	;# 
   855  009F                     	;# 
   856  0105                     	;# 
   857  0107                     	;# 
   858  0108                     	;# 
   859  0109                     	;# 
   860  010C                     	;# 
   861  010C                     	;# 
   862  010D                     	;# 
   863  010E                     	;# 
   864  010F                     	;# 
   865  0185                     	;# 
   866  0187                     	;# 
   867  0188                     	;# 
   868  0189                     	;# 
   869  018C                     	;# 
   870  018D                     	;# 
   871  0000                     	;# 
   872  0001                     	;# 
   873  0002                     	;# 
   874  0003                     	;# 
   875  0004                     	;# 
   876  0005                     	;# 
   877  0006                     	;# 
   878  0007                     	;# 
   879  0009                     	;# 
   880  000A                     	;# 
   881  000B                     	;# 
   882  000C                     	;# 
   883  000D                     	;# 
   884  000E                     	;# 
   885  000E                     	;# 
   886  000F                     	;# 
   887  0010                     	;# 
   888  0011                     	;# 
   889  0012                     	;# 
   890  0013                     	;# 
   891  0014                     	;# 
   892  0015                     	;# 
   893  0015                     	;# 
   894  0016                     	;# 
   895  0017                     	;# 
   896  0018                     	;# 
   897  0019                     	;# 
   898  001A                     	;# 
   899  001B                     	;# 
   900  001B                     	;# 
   901  001C                     	;# 
   902  001D                     	;# 
   903  001E                     	;# 
   904  001F                     	;# 
   905  0081                     	;# 
   906  0085                     	;# 
   907  0086                     	;# 
   908  0087                     	;# 
   909  0089                     	;# 
   910  008C                     	;# 
   911  008D                     	;# 
   912  008E                     	;# 
   913  008F                     	;# 
   914  0090                     	;# 
   915  0091                     	;# 
   916  0092                     	;# 
   917  0093                     	;# 
   918  0093                     	;# 
   919  0093                     	;# 
   920  0094                     	;# 
   921  0095                     	;# 
   922  0096                     	;# 
   923  0097                     	;# 
   924  0098                     	;# 
   925  0099                     	;# 
   926  009A                     	;# 
   927  009B                     	;# 
   928  009C                     	;# 
   929  009D                     	;# 
   930  009E                     	;# 
   931  009F                     	;# 
   932  0105                     	;# 
   933  0107                     	;# 
   934  0108                     	;# 
   935  0109                     	;# 
   936  010C                     	;# 
   937  010C                     	;# 
   938  010D                     	;# 
   939  010E                     	;# 
   940  010F                     	;# 
   941  0185                     	;# 
   942  0187                     	;# 
   943  0188                     	;# 
   944  0189                     	;# 
   945  018C                     	;# 
   946  018D                     	;# 
   947  0000                     	;# 
   948  0001                     	;# 
   949  0002                     	;# 
   950  0003                     	;# 
   951  0004                     	;# 
   952  0005                     	;# 
   953  0006                     	;# 
   954  0007                     	;# 
   955  0009                     	;# 
   956  000A                     	;# 
   957  000B                     	;# 
   958  000C                     	;# 
   959  000D                     	;# 
   960  000E                     	;# 
   961  000E                     	;# 
   962  000F                     	;# 
   963  0010                     	;# 
   964  0011                     	;# 
   965  0012                     	;# 
   966  0013                     	;# 
   967  0014                     	;# 
   968  0015                     	;# 
   969  0015                     	;# 
   970  0016                     	;# 
   971  0017                     	;# 
   972  0018                     	;# 
   973  0019                     	;# 
   974  001A                     	;# 
   975  001B                     	;# 
   976  001B                     	;# 
   977  001C                     	;# 
   978  001D                     	;# 
   979  001E                     	;# 
   980  001F                     	;# 
   981  0081                     	;# 
   982  0085                     	;# 
   983  0086                     	;# 
   984  0087                     	;# 
   985  0089                     	;# 
   986  008C                     	;# 
   987  008D                     	;# 
   988  008E                     	;# 
   989  008F                     	;# 
   990  0090                     	;# 
   991  0091                     	;# 
   992  0092                     	;# 
   993  0093                     	;# 
   994  0093                     	;# 
   995  0093                     	;# 
   996  0094                     	;# 
   997  0095                     	;# 
   998  0096                     	;# 
   999  0097                     	;# 
  1000  0098                     	;# 
  1001  0099                     	;# 
  1002  009A                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  009F                     	;# 
  1008  0105                     	;# 
  1009  0107                     	;# 
  1010  0108                     	;# 
  1011  0109                     	;# 
  1012  010C                     	;# 
  1013  010C                     	;# 
  1014  010D                     	;# 
  1015  010E                     	;# 
  1016  010F                     	;# 
  1017  0185                     	;# 
  1018  0187                     	;# 
  1019  0188                     	;# 
  1020  0189                     	;# 
  1021  018C                     	;# 
  1022  018D                     	;# 
  1023  0000                     	;# 
  1024  0001                     	;# 
  1025  0002                     	;# 
  1026  0003                     	;# 
  1027  0004                     	;# 
  1028  0005                     	;# 
  1029  0006                     	;# 
  1030  0007                     	;# 
  1031  0009                     	;# 
  1032  000A                     	;# 
  1033  000B                     	;# 
  1034  000C                     	;# 
  1035  000D                     	;# 
  1036  000E                     	;# 
  1037  000E                     	;# 
  1038  000F                     	;# 
  1039  0010                     	;# 
  1040  0011                     	;# 
  1041  0012                     	;# 
  1042  0013                     	;# 
  1043  0014                     	;# 
  1044  0015                     	;# 
  1045  0015                     	;# 
  1046  0016                     	;# 
  1047  0017                     	;# 
  1048  0018                     	;# 
  1049  0019                     	;# 
  1050  001A                     	;# 
  1051  001B                     	;# 
  1052  001B                     	;# 
  1053  001C                     	;# 
  1054  001D                     	;# 
  1055  001E                     	;# 
  1056  001F                     	;# 
  1057  0081                     	;# 
  1058  0085                     	;# 
  1059  0086                     	;# 
  1060  0087                     	;# 
  1061  0089                     	;# 
  1062  008C                     	;# 
  1063  008D                     	;# 
  1064  008E                     	;# 
  1065  008F                     	;# 
  1066  0090                     	;# 
  1067  0091                     	;# 
  1068  0092                     	;# 
  1069  0093                     	;# 
  1070  0093                     	;# 
  1071  0093                     	;# 
  1072  0094                     	;# 
  1073  0095                     	;# 
  1074  0096                     	;# 
  1075  0097                     	;# 
  1076  0098                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009C                     	;# 
  1081  009D                     	;# 
  1082  009E                     	;# 
  1083  009F                     	;# 
  1084  0105                     	;# 
  1085  0107                     	;# 
  1086  0108                     	;# 
  1087  0109                     	;# 
  1088  010C                     	;# 
  1089  010C                     	;# 
  1090  010D                     	;# 
  1091  010E                     	;# 
  1092  010F                     	;# 
  1093  0185                     	;# 
  1094  0187                     	;# 
  1095  0188                     	;# 
  1096  0189                     	;# 
  1097  018C                     	;# 
  1098  018D                     	;# 
  1099  0000                     	;# 
  1100  0001                     	;# 
  1101  0002                     	;# 
  1102  0003                     	;# 
  1103  0004                     	;# 
  1104  0005                     	;# 
  1105  0006                     	;# 
  1106  0007                     	;# 
  1107  0009                     	;# 
  1108  000A                     	;# 
  1109  000B                     	;# 
  1110  000C                     	;# 
  1111  000D                     	;# 
  1112  000E                     	;# 
  1113  000E                     	;# 
  1114  000F                     	;# 
  1115  0010                     	;# 
  1116  0011                     	;# 
  1117  0012                     	;# 
  1118  0013                     	;# 
  1119  0014                     	;# 
  1120  0015                     	;# 
  1121  0015                     	;# 
  1122  0016                     	;# 
  1123  0017                     	;# 
  1124  0018                     	;# 
  1125  0019                     	;# 
  1126  001A                     	;# 
  1127  001B                     	;# 
  1128  001B                     	;# 
  1129  001C                     	;# 
  1130  001D                     	;# 
  1131  001E                     	;# 
  1132  001F                     	;# 
  1133  0081                     	;# 
  1134  0085                     	;# 
  1135  0086                     	;# 
  1136  0087                     	;# 
  1137  0089                     	;# 
  1138  008C                     	;# 
  1139  008D                     	;# 
  1140  008E                     	;# 
  1141  008F                     	;# 
  1142  0090                     	;# 
  1143  0091                     	;# 
  1144  0092                     	;# 
  1145  0093                     	;# 
  1146  0093                     	;# 
  1147  0093                     	;# 
  1148  0094                     	;# 
  1149  0095                     	;# 
  1150  0096                     	;# 
  1151  0097                     	;# 
  1152  0098                     	;# 
  1153  0099                     	;# 
  1154  009A                     	;# 
  1155  009B                     	;# 
  1156  009C                     	;# 
  1157  009D                     	;# 
  1158  009E                     	;# 
  1159  009F                     	;# 
  1160  0105                     	;# 
  1161  0107                     	;# 
  1162  0108                     	;# 
  1163  0109                     	;# 
  1164  010C                     	;# 
  1165  010C                     	;# 
  1166  010D                     	;# 
  1167  010E                     	;# 
  1168  010F                     	;# 
  1169  0185                     	;# 
  1170  0187                     	;# 
  1171  0188                     	;# 
  1172  0189                     	;# 
  1173  018C                     	;# 
  1174  018D                     	;# 
  1175                           
  1176                           	psect	strings
  1177  1800                     __pstrings:
  1178  1800                     stringtab:
  1179  1800                     __stringtab:
  1180                           
  1181                           ;	String table - string pointers are 1 byte each
  1182  1800  1BFF               	btfsc	btemp+1,7
  1183  1801  280A               	ljmp	stringcode
  1184  1802  1383               	bcf	3,7
  1185  1803  187F               	btfsc	btemp+1,0
  1186  1804  1783               	bsf	3,7
  1187  1805  0800               	movf	0,w
  1188  1806  0A84               	incf	4,f
  1189  1807  1903               	skipnz
  1190  1808  0AFF               	incf	btemp+1,f
  1191  1809  0008               	return
  1192  180A                     stringcode:
  1193  180A                     stringdir:
  1194  180A  3018               	movlw	high stringdir
  1195  180B  008A               	movwf	10
  1196  180C  0804               	movf	4,w
  1197  180D  0A84               	incf	4,f
  1198  180E  0782               	addwf	2,f
  1199  180F                     __stringbase:
  1200  180F  3400               	retlw	0
  1201  1810                     __end_of__stringtab:
  1202  1810                     _PT100_TRANSLADA:
  1203  1810  3466               	retlw	102
  1204  1811  3466               	retlw	102
  1205  1812  34A6               	retlw	166
  1206  1813  34BF               	retlw	191
  1207  1814                     __end_of_PT100_TRANSLADA:
  1208  1814                     _PT100_CONSTANT:
  1209  1814  3414               	retlw	20
  1210  1815  34AE               	retlw	174
  1211  1816  342B               	retlw	43
  1212  1817  34C1               	retlw	193
  1213  1818                     __end_of_PT100_CONSTANT:
  1214  1818                     _RESISTOR_ROOM_TEMP:
  1215                           
  1216                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1217  1818  3400               	retlw	0
  1218  1819  3440               	retlw	64
  1219  181A  341C               	retlw	28
  1220  181B  3446               	retlw	70
  1221  181C                     __end_of_RESISTOR_ROOM_TEMP:
  1222  181C                     _ROOM_TEMP:
  1223                           
  1224                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1225  181C  3466               	retlw	102
  1226  181D  3486               	retlw	134
  1227  181E  3496               	retlw	150
  1228  181F  3443               	retlw	67
  1229  1820                     __end_of_ROOM_TEMP:
  1230  1820                     _MAX_ADC:
  1231                           
  1232                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1233  1820  3400               	retlw	0
  1234  1821  34C0               	retlw	192
  1235  1822  347F               	retlw	127
  1236  1823  3444               	retlw	68
  1237  1824                     __end_of_MAX_ADC:
  1238  1824                     log@coeff:
  1239  1824  3400               	retlw	0
  1240  1825  3400               	retlw	0
  1241  1826  3400               	retlw	0
  1242  1827  3400               	retlw	0
  1243  1828  34C4               	retlw	196
  1244  1829  34FF               	retlw	255
  1245  182A  347F               	retlw	127
  1246  182B  343F               	retlw	63
  1247  182C  3480               	retlw	128
  1248  182D  34EF               	retlw	239
  1249  182E  34FF               	retlw	255
  1250  182F  34BE               	retlw	190
  1251  1830  3490               	retlw	144
  1252  1831  34E1               	retlw	225
  1253  1832  34A9               	retlw	169
  1254  1833  343E               	retlw	62
  1255  1834  34EC               	retlw	236
  1256  1835  3482               	retlw	130
  1257  1836  3476               	retlw	118
  1258  1837  34BE               	retlw	190
  1259  1838  3482               	retlw	130
  1260  1839  34AD               	retlw	173
  1261  183A  342B               	retlw	43
  1262  183B  343E               	retlw	62
  1263  183C  340E               	retlw	14
  1264  183D  343C               	retlw	60
  1265  183E  34C3               	retlw	195
  1266  183F  34BD               	retlw	189
  1267  1840  3487               	retlw	135
  1268  1841  34D1               	retlw	209
  1269  1842  3413               	retlw	19
  1270  1843  343D               	retlw	61
  1271  1844  3441               	retlw	65
  1272  1845  3478               	retlw	120
  1273  1846  34D3               	retlw	211
  1274  1847  34BB               	retlw	187
  1275  1848                     __end_oflog@coeff:
  1276  1848                     _BETA:
  1277                           
  1278                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1279  1848  3400               	retlw	0
  1280  1849  3460               	retlw	96
  1281  184A  3478               	retlw	120
  1282  184B  3445               	retlw	69
  1283  184C                     __end_of_BETA:
  1284  184C                     _BALANCE_RESISTOR:
  1285                           
  1286                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1287  184C  3400               	retlw	0
  1288  184D  3440               	retlw	64
  1289  184E  341C               	retlw	28
  1290  184F  3446               	retlw	70
  1291  1850                     __end_of_BALANCE_RESISTOR:
  1292  0019                     _TXREG	set	25
  1293  0018                     _RCSTAbits	set	24
  1294  001A                     _RCREG	set	26
  1295  000E                     _TMR1L	set	14
  1296  000F                     _TMR1H	set	15
  1297  000C                     _PIR1bits	set	12
  1298  001E                     _ADRESH	set	30
  1299  001F                     _ADCON0bits	set	31
  1300  0005                     _PORTAbits	set	5
  1301  0007                     _PORTCbits	set	7
  1302  0010                     _T1CON	set	16
  1303  0006                     _PORTBbits	set	6
  1304  0009                     _PORTE	set	9
  1305  0007                     _PORTC	set	7
  1306  0005                     _PORTA	set	5
  1307  0013                     _SSPBUF	set	19
  1308  000B                     _INTCONbits	set	11
  1309  0014                     _SSPCON	set	20
  1310  0006                     _PORTB	set	6
  1311  00C4                     _CREN	set	196
  1312  0081                     _TMR1CS	set	129
  1313  0085                     _T1CKPS1	set	133
  1314  0084                     _T1CKPS0	set	132
  1315  008C                     _PIE1bits	set	140
  1316  0099                     _SPBRG	set	153
  1317  0098                     _TXSTAbits	set	152
  1318  009E                     _ADRESL	set	158
  1319  009F                     _ADCON1	set	159
  1320  009F                     _ADCON1bits	set	159
  1321  0095                     _WPUB	set	149
  1322  0081                     _OPTION_REGbits	set	129
  1323  0089                     _TRISE	set	137
  1324  0087                     _TRISC	set	135
  1325  0086                     _TRISB	set	134
  1326  0085                     _TRISA	set	133
  1327  008F                     _OSCCONbits	set	143
  1328  0091                     _SSPCON2bits	set	145
  1329  0094                     _SSPSTAT	set	148
  1330  0093                     _SSPADD	set	147
  1331  0091                     _SSPCON2	set	145
  1332  043F                     _TRISC7	set	1087
  1333  043E                     _TRISC6	set	1086
  1334  0460                     _TMR1IE	set	1120
  1335  043C                     _TRISC4	set	1084
  1336  043B                     _TRISC3	set	1083
  1337  010C                     _EEDATA	set	268
  1338  010D                     _EEADR	set	269
  1339  0187                     _BAUDCTLbits	set	391
  1340  018D                     _EECON2	set	397
  1341  018C                     _EECON1bits	set	396
  1342  0189                     _ANSELH	set	393
  1343  0188                     _ANSEL	set	392
  1344  1850                     STR_1:
  1345  1850  3476               	retlw	118	;'v'
  1346  1851  3431               	retlw	49	;'1'
  1347  1852  342E               	retlw	46	;'.'
  1348  1853  3430               	retlw	48	;'0'
  1349  1854  342E               	retlw	46	;'.'
  1350  1855  3432               	retlw	50	;'2'
  1351  1856  3430               	retlw	48	;'0'
  1352  1857  3400               	retlw	0
  1353  1858                     STR_2:
  1354  1858  344F               	retlw	79	;'O'
  1355  1859  344B               	retlw	75	;'K'
  1356  185A  3400               	retlw	0
  1357                           
  1358                           	psect	cinit
  1359  0015                     start_initialization:	
  1360                           ; #config settings
  1361                           
  1362  0015                     __initialization:
  1363                           
  1364                           ; Clear objects allocated to COMMON
  1365  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1366  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1367  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1368  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1369  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1370  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1371                           
  1372                           ; Clear objects allocated to BANK1
  1373  001B  1383               	bcf	3,7	;select IRP bank0
  1374  001C  30C9               	movlw	low __pbssBANK1
  1375  001D  0084               	movwf	4
  1376  001E  30E5               	movlw	low (__pbssBANK1+28)
  1377  001F  160A  158A  206C  120A  118A  	fcall	clear_ram0
  1378                           
  1379                           ; Clear objects allocated to BANK3
  1380  0024  1783               	bsf	3,7	;select IRP bank2
  1381  0025  3090               	movlw	low __pbssBANK3
  1382  0026  0084               	movwf	4
  1383  0027  30EB               	movlw	low (__pbssBANK3+91)
  1384  0028  160A  158A  206C  120A  118A  	fcall	clear_ram0
  1385                           
  1386                           ; Clear objects allocated to BANK2
  1387  002D  3010               	movlw	low __pbssBANK2
  1388  002E  0084               	movwf	4
  1389  002F  3044               	movlw	low (__pbssBANK2+52)
  1390  0030  160A  158A  206C   	fcall	clear_ram0
  1391  0033                     end_of_initialization:	
  1392                           ;End of C runtime variable initialization code
  1393                           
  1394  0033                     __end_of__initialization:
  1395  0033  0183               	clrf	3
  1396  0034  160A  118A  291B   	ljmp	_main	;jump to C main() function
  1397                           
  1398                           	psect	bssCOMMON
  1399  0078                     __pbssCOMMON:
  1400  0078                     _Delay_Led_Tmr0:
  1401  0078                     	ds	2
  1402  007A                     _minuto:
  1403  007A                     	ds	1
  1404  007B                     _statuspower_memo:
  1405  007B                     	ds	1
  1406  007C                     _hora:
  1407  007C                     	ds	1
  1408  007D                     _segundo:
  1409  007D                     	ds	1
  1410                           
  1411                           	psect	bssBANK1
  1412  00C9                     __pbssBANK1:
  1413  00C9                     _Tensao1:
  1414  00C9                     	ds	4
  1415  00CD                     _Vaccum0:
  1416  00CD                     	ds	4
  1417  00D1                     _errno:
  1418  00D1                     	ds	2
  1419  00D3                     _tempodecorrido:
  1420  00D3                     	ds	2
  1421  00D5                     _count:
  1422  00D5                     	ds	2
  1423  00D7                     _header:
  1424  00D7                     	ds	2
  1425  00D9                     _milisegundo:
  1426  00D9                     	ds	2
  1427  00DB                     _Delay_Led_Usart:
  1428  00DB                     	ds	2
  1429  00DD                     _Delay_Led_Memory:
  1430  00DD                     	ds	2
  1431  00DF                     _pointer:
  1432  00DF                     	ds	1
  1433  00E0                     _destino:
  1434  00E0                     	ds	1
  1435  00E1                     _Board_Number:
  1436  00E1                     	ds	1
  1437  00E2                     _canal:
  1438  00E2                     	ds	1
  1439  00E3                     _statuspower:
  1440  00E3                     	ds	1
  1441  00E4                     _generic_status:
  1442  00E4                     	ds	1
  1443                           
  1444                           	psect	bssBANK3
  1445  0190                     __pbssBANK3:
  1446  0190                     _usart_protocol:
  1447  0190                     	ds	58
  1448  01CA                     _buffer:
  1449  01CA                     	ds	33
  1450                           
  1451                           	psect	bssBANK2
  1452  0110                     __pbssBANK2:
  1453  0110                     _usart_buffer:
  1454  0110                     	ds	52
  1455                           
  1456                           	psect	clrtext
  1457  186C                     clear_ram0:	
  1458                           ;	Called with FSR containing the base address, and
  1459                           ;	W with the last address+1
  1460                           
  1461  186C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1462  186D                     clrloop0:
  1463  186D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1464  186E  0A84               	incf	4,f	;increment pointer
  1465  186F  0604               	xorwf	4,w	;XOR with final address
  1466  1870  1903               	btfsc	3,2	;have we reached the end yet?
  1467  1871  3400               	retlw	0	;all done for this memory range, return
  1468  1872  0604               	xorwf	4,w	;XOR again to restore value
  1469  1873  286D               	goto	clrloop0	;do the next byte
  1470                           
  1471                           	psect	cstackBANK1
  1472  00A0                     __pcstackBANK1:
  1473  00A0                     ?_USART_put_int:
  1474  00A0                     ?_EEPROM_24C1025_Write_Int:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  00A0                     USART_put_int@value:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  00A0                     EEPROM_24C1025_Write_Int@mem_add:	
  1481                           ; 2 bytes @ 0x0
  1482                           
  1483  00A0                     _MediaPlacaVaccum$2372:	
  1484                           ; 4 bytes @ 0x0
  1485                           
  1486                           
  1487                           ; 4 bytes @ 0x0
  1488  00A0                     	ds	2
  1489  00A2                     ??_USART_put_int:
  1490                           
  1491                           ; 1 bytes @ 0x2
  1492  00A2                     	ds	1
  1493  00A3                     USART_put_int@dado:
  1494                           
  1495                           ; 1 bytes @ 0x3
  1496  00A3                     	ds	1
  1497  00A4                     ?_PROCULUS_Control_Register_Write:
  1498  00A4                     ?_PROCULUS_VP_Write:	
  1499                           ; 1 bytes @ 0x4
  1500                           
  1501  00A4                     MediaPlacaVaccum@canal:	
  1502                           ; 1 bytes @ 0x4
  1503                           
  1504  00A4                     PROCULUS_Control_Register_Write@size:	
  1505                           ; 1 bytes @ 0x4
  1506                           
  1507  00A4                     EEPROM_24C1025_Write_Int@data:	
  1508                           ; 1 bytes @ 0x4
  1509                           
  1510  00A4                     PROCULUS_VP_Write@vp:	
  1511                           ; 2 bytes @ 0x4
  1512                           
  1513                           
  1514                           ; 2 bytes @ 0x4
  1515  00A4                     	ds	1
  1516  00A5                     ??_PROCULUS_Control_Register_Write:
  1517  00A5                     MediaPlacaVaccum@i:	
  1518                           ; 1 bytes @ 0x5
  1519                           
  1520                           
  1521                           ; 2 bytes @ 0x5
  1522  00A5                     	ds	1
  1523  00A6                     ??_EEPROM_24C1025_Write_Int:
  1524  00A6                     PROCULUS_Control_Register_Write@vetor:	
  1525                           ; 1 bytes @ 0x6
  1526                           
  1527  00A6                     PROCULUS_VP_Write@vetor:	
  1528                           ; 1 bytes @ 0x6
  1529                           
  1530                           
  1531                           ; 2 bytes @ 0x6
  1532  00A6                     	ds	1
  1533  00A7                     EEPROM_24C1025_Write_Int@chip_add:
  1534  00A7                     PROCULUS_Control_Register_Write@i:	
  1535                           ; 1 bytes @ 0x7
  1536                           
  1537  00A7                     MediaPlacaVaccum@Temp:	
  1538                           ; 1 bytes @ 0x7
  1539                           
  1540                           
  1541                           ; 4 bytes @ 0x7
  1542  00A7                     	ds	1
  1543  00A8                     ?_PROCULUS_Show_Screen:
  1544  00A8                     ?_PROCULUS_Buzzer:	
  1545                           ; 1 bytes @ 0x8
  1546                           
  1547  00A8                     PROCULUS_VP_Write@size:	
  1548                           ; 1 bytes @ 0x8
  1549                           
  1550  00A8                     EEPROM_24C1025_Write_Int@local:	
  1551                           ; 1 bytes @ 0x8
  1552                           
  1553  00A8                     PROCULUS_Buzzer@time_ms_x_10:	
  1554                           ; 2 bytes @ 0x8
  1555                           
  1556  00A8                     PROCULUS_Show_Screen@screen:	
  1557                           ; 2 bytes @ 0x8
  1558                           
  1559                           
  1560                           ; 2 bytes @ 0x8
  1561  00A8                     	ds	1
  1562  00A9                     ??_PROCULUS_VP_Write:
  1563                           
  1564                           ; 1 bytes @ 0x9
  1565  00A9                     	ds	1
  1566  00AA                     ?_Save_Log:
  1567  00AA                     ??_PROCULUS_Show_Screen:	
  1568                           ; 1 bytes @ 0xA
  1569                           
  1570  00AA                     ??_PROCULUS_Buzzer:	
  1571                           ; 1 bytes @ 0xA
  1572                           
  1573  00AA                     ?_EEPROM_24C1025_Fill_All:	
  1574                           ; 1 bytes @ 0xA
  1575                           
  1576  00AA                     EEPROM_24C1025_Fill_All@value:	
  1577                           ; 1 bytes @ 0xA
  1578                           
  1579  00AA                     Save_Log@add_datalog:	
  1580                           ; 2 bytes @ 0xA
  1581                           
  1582                           
  1583                           ; 4 bytes @ 0xA
  1584  00AA                     	ds	1
  1585  00AB                     PROCULUS_VP_Write@i:
  1586  00AB                     PROCULUS_Buzzer@vetor:	
  1587                           ; 1 bytes @ 0xB
  1588                           
  1589  00AB                     PROCULUS_Show_Screen@vetor:	
  1590                           ; 2 bytes @ 0xB
  1591                           
  1592                           
  1593                           ; 3 bytes @ 0xB
  1594  00AB                     	ds	1
  1595  00AC                     ?_PROCULUS_VP_Write_String:
  1596  00AC                     EEPROM_24C1025_Fill_All@chip_add:	
  1597                           ; 1 bytes @ 0xC
  1598                           
  1599  00AC                     PROCULUS_VP_Write_String@vp:	
  1600                           ; 1 bytes @ 0xC
  1601                           
  1602                           
  1603                           ; 2 bytes @ 0xC
  1604  00AC                     	ds	1
  1605  00AD                     EEPROM_24C1025_Fill_All@mem_add:
  1606                           
  1607                           ; 4 bytes @ 0xD
  1608  00AD                     	ds	1
  1609  00AE                     PROCULUS_VP_Write_String@text:
  1610                           
  1611                           ; 1 bytes @ 0xE
  1612  00AE                     	ds	1
  1613  00AF                     ??_PROCULUS_VP_Write_String:
  1614                           
  1615                           ; 1 bytes @ 0xF
  1616  00AF                     	ds	2
  1617  00B1                     ??_Decodify_Command:
  1618                           
  1619                           ; 1 bytes @ 0x11
  1620  00B1                     	ds	4
  1621  00B5                     Decodify_Command@dados:
  1622                           
  1623                           ; 2 bytes @ 0x15
  1624  00B5                     	ds	2
  1625  00B7                     Decodify_Command@add:
  1626                           
  1627                           ; 1 bytes @ 0x17
  1628  00B7                     	ds	1
  1629  00B8                     Decodify_Command@sizedata:
  1630                           
  1631                           ; 1 bytes @ 0x18
  1632  00B8                     	ds	1
  1633  00B9                     Decodify_Command@tempint:
  1634                           
  1635                           ; 2 bytes @ 0x19
  1636  00B9                     	ds	2
  1637  00BB                     Decodify_Command@OutPut:
  1638                           
  1639                           ; 4 bytes @ 0x1B
  1640  00BB                     	ds	4
  1641  00BF                     Decodify_Command@tempchar:
  1642                           
  1643                           ; 1 bytes @ 0x1F
  1644  00BF                     	ds	1
  1645  00C0                     Decodify_Command@add_24LCxxxx:
  1646                           
  1647                           ; 4 bytes @ 0x20
  1648  00C0                     	ds	4
  1649  00C4                     ??_main:
  1650                           
  1651                           ; 1 bytes @ 0x24
  1652  00C4                     	ds	3
  1653  00C7                     main@reset:
  1654                           
  1655                           ; 2 bytes @ 0x27
  1656  00C7                     	ds	2
  1657                           
  1658                           	psect	cstackCOMMON
  1659  0070                     __pcstackCOMMON:
  1660  0070                     ?_I2C_Master_Start:
  1661  0070                     ?_I2C_Master_Stop:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664  0070                     ?_I2C_Master_RepeatedStart:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667  0070                     ?_USART_putc:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670  0070                     ?_ADC_init:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673  0070                     ?_MediaPlacaVaccum:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676  0070                     ?_Decodify_Command:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679  0070                     ?_USART_to_Protocol:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0070                     ?_Send_To_MB:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685  0070                     ?_Send_Reply_OK:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688  0070                     ?_EEPROM_Read_Byte:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691  0070                     ?_Package_Usart_is_for_me:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694  0070                     ?_I2C_Master_Wait:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697  0070                     ?_main:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0070                     ?_isr:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703  0070                     ??_isr:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706                           
  1707                           ; 1 bytes @ 0x0
  1708  0070                     	ds	6
  1709  0076                     isr@tempo:
  1710                           
  1711                           ; 2 bytes @ 0x6
  1712  0076                     	ds	2
  1713                           
  1714                           	psect	cstackBANK0
  1715  0020                     __pcstackBANK0:
  1716  0020                     ?___flge:
  1717  0020                     ?_my_delay_ms_WDT:	
  1718                           ; 1 bit 
  1719                           
  1720  0020                     ??_USART_putc:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0020                     ??_ADC_init:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0020                     ?_USART_init:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0020                     ??_USART_to_Protocol:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  0020                     ?_strcpy:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  0020                     ?_EEPROM_Write_Byte:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738  0020                     ??_EEPROM_Read_Byte:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741  0020                     ?_my_delay_ms:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744  0020                     ??_Package_Usart_is_for_me:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747  0020                     ?_PROCULUS_Delay:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750  0020                     ??_I2C_Master_Wait:	
  1751                           ; 1 bytes @ 0x0
  1752                           
  1753  0020                     ?_strlen:	
  1754                           ; 1 bytes @ 0x0
  1755                           
  1756  0020                     ?_captura:	
  1757                           ; 2 bytes @ 0x0
  1758                           
  1759  0020                     ?__Umul8_16:	
  1760                           ; 2 bytes @ 0x0
  1761                           
  1762  0020                     ?___lwdiv:	
  1763                           ; 2 bytes @ 0x0
  1764                           
  1765  0020                     ?___lldiv:	
  1766                           ; 2 bytes @ 0x0
  1767                           
  1768  0020                     ?___xxtofl:	
  1769                           ; 4 bytes @ 0x0
  1770                           
  1771  0020                     EEPROM_Write_Byte@dado:	
  1772                           ; 4 bytes @ 0x0
  1773                           
  1774  0020                     Package_Usart_is_for_me@retorno:	
  1775                           ; 1 bytes @ 0x0
  1776                           
  1777  0020                     USART_putc@value:	
  1778                           ; 1 bytes @ 0x0
  1779                           
  1780  0020                     __Umul8_16@multiplicand:	
  1781                           ; 1 bytes @ 0x0
  1782                           
  1783  0020                     strcpy@from:	
  1784                           ; 1 bytes @ 0x0
  1785                           
  1786  0020                     PROCULUS_Delay@tempo_ms:	
  1787                           ; 1 bytes @ 0x0
  1788                           
  1789  0020                     ___lwdiv@divisor:	
  1790                           ; 2 bytes @ 0x0
  1791                           
  1792  0020                     my_delay_ms@time:	
  1793                           ; 2 bytes @ 0x0
  1794                           
  1795  0020                     my_delay_ms_WDT@time:	
  1796                           ; 4 bytes @ 0x0
  1797                           
  1798  0020                     USART_init@baudrate:	
  1799                           ; 4 bytes @ 0x0
  1800                           
  1801  0020                     ___lldiv@divisor:	
  1802                           ; 4 bytes @ 0x0
  1803                           
  1804  0020                     ___flge@ff1:	
  1805                           ; 4 bytes @ 0x0
  1806                           
  1807  0020                     ___xxtofl@val:	
  1808                           ; 4 bytes @ 0x0
  1809                           
  1810                           
  1811                           ; 4 bytes @ 0x0
  1812  0020                     	ds	1
  1813  0021                     ??_strcpy:
  1814  0021                     ??_Send_To_MB:	
  1815                           ; 1 bytes @ 0x1
  1816                           
  1817  0021                     ?_USART_put_string:	
  1818                           ; 1 bytes @ 0x1
  1819                           
  1820  0021                     ??_EEPROM_Write_Byte:	
  1821                           ; 1 bytes @ 0x1
  1822                           
  1823  0021                     Send_To_MB@size:	
  1824                           ; 1 bytes @ 0x1
  1825                           
  1826  0021                     USART_put_string@vetor:	
  1827                           ; 1 bytes @ 0x1
  1828                           
  1829                           
  1830                           ; 2 bytes @ 0x1
  1831  0021                     	ds	1
  1832  0022                     ??_strlen:
  1833  0022                     ??_captura:	
  1834                           ; 1 bytes @ 0x2
  1835                           
  1836  0022                     ??_PROCULUS_Delay:	
  1837                           ; 1 bytes @ 0x2
  1838                           
  1839  0022                     ??__Umul8_16:	
  1840                           ; 1 bytes @ 0x2
  1841                           
  1842  0022                     I2C_Master_Wait@tempo:	
  1843                           ; 1 bytes @ 0x2
  1844                           
  1845  0022                     EEPROM_Read_Byte@addr:	
  1846                           ; 1 bytes @ 0x2
  1847                           
  1848  0022                     strcpy@to:	
  1849                           ; 1 bytes @ 0x2
  1850                           
  1851  0022                     USART_to_Protocol@i:	
  1852                           ; 1 bytes @ 0x2
  1853                           
  1854  0022                     ___lwdiv@dividend:	
  1855                           ; 2 bytes @ 0x2
  1856                           
  1857                           
  1858                           ; 2 bytes @ 0x2
  1859  0022                     	ds	1
  1860  0023                     ??_I2C_Master_Start:
  1861  0023                     ?_I2C_Master_Write:	
  1862                           ; 1 bytes @ 0x3
  1863                           
  1864  0023                     ??_I2C_Master_Stop:	
  1865                           ; 1 bytes @ 0x3
  1866                           
  1867  0023                     ??_I2C_Master_RepeatedStart:	
  1868                           ; 1 bytes @ 0x3
  1869                           
  1870  0023                     ??_USART_put_string:	
  1871                           ; 1 bytes @ 0x3
  1872                           
  1873  0023                     ?_EEPROM_Read_String:	
  1874                           ; 1 bytes @ 0x3
  1875                           
  1876  0023                     ?_I2C_Master_Read:	
  1877                           ; 1 bytes @ 0x3
  1878                           
  1879  0023                     ?_EEPROM_Read_Integer:	
  1880                           ; 2 bytes @ 0x3
  1881                           
  1882  0023                     EEPROM_Write_Byte@addr:	
  1883                           ; 2 bytes @ 0x3
  1884                           
  1885  0023                     EEPROM_Read_String@dado:	
  1886                           ; 1 bytes @ 0x3
  1887                           
  1888  0023                     strcpy@cp:	
  1889                           ; 1 bytes @ 0x3
  1890                           
  1891  0023                     strlen@cp:	
  1892                           ; 1 bytes @ 0x3
  1893                           
  1894  0023                     I2C_Master_Write@d:	
  1895                           ; 1 bytes @ 0x3
  1896                           
  1897  0023                     I2C_Master_Read@a:	
  1898                           ; 2 bytes @ 0x3
  1899                           
  1900  0023                     USART_put_string@ptr:	
  1901                           ; 2 bytes @ 0x3
  1902                           
  1903                           
  1904                           ; 2 bytes @ 0x3
  1905  0023                     	ds	1
  1906  0024                     ??_my_delay_ms_WDT:
  1907  0024                     ??_USART_init:	
  1908                           ; 1 bytes @ 0x4
  1909                           
  1910  0024                     ??_EEPROM_Read_String:	
  1911                           ; 1 bytes @ 0x4
  1912                           
  1913  0024                     ??_my_delay_ms:	
  1914                           ; 1 bytes @ 0x4
  1915                           
  1916  0024                     ??___lwdiv:	
  1917                           ; 1 bytes @ 0x4
  1918                           
  1919  0024                     ??___xxtofl:	
  1920                           ; 1 bytes @ 0x4
  1921                           
  1922  0024                     EEPROM_Write_Byte@last_GIE:	
  1923                           ; 1 bytes @ 0x4
  1924                           
  1925  0024                     USART_to_Protocol@usart_protocol:	
  1926                           ; 1 bytes @ 0x4
  1927                           
  1928  0024                     strlen@s:	
  1929                           ; 1 bytes @ 0x4
  1930                           
  1931  0024                     PROCULUS_Delay@i:	
  1932                           ; 1 bytes @ 0x4
  1933                           
  1934  0024                     __Umul8_16@product:	
  1935                           ; 2 bytes @ 0x4
  1936                           
  1937  0024                     ___lldiv@dividend:	
  1938                           ; 2 bytes @ 0x4
  1939                           
  1940  0024                     ___flge@ff2:	
  1941                           ; 4 bytes @ 0x4
  1942                           
  1943                           
  1944                           ; 4 bytes @ 0x4
  1945  0024                     	ds	1
  1946  0025                     ??_I2C_Master_Write:
  1947  0025                     ??_I2C_Master_Read:	
  1948                           ; 1 bytes @ 0x5
  1949                           
  1950  0025                     ??_EEPROM_Read_Integer:	
  1951                           ; 1 bytes @ 0x5
  1952                           
  1953  0025                     ?_EEPROM_Write_Integer:	
  1954                           ; 1 bytes @ 0x5
  1955                           
  1956  0025                     ??_Send_Reply_OK:	
  1957                           ; 1 bytes @ 0x5
  1958                           
  1959  0025                     ?_EEPROM_Write_String:	
  1960                           ; 1 bytes @ 0x5
  1961                           
  1962  0025                     EEPROM_Write_String@dado:	
  1963                           ; 1 bytes @ 0x5
  1964                           
  1965  0025                     EEPROM_Read_String@addr:	
  1966                           ; 1 bytes @ 0x5
  1967                           
  1968  0025                     EEPROM_Write_Integer@dado:	
  1969                           ; 1 bytes @ 0x5
  1970                           
  1971  0025                     ___lwdiv@quotient:	
  1972                           ; 2 bytes @ 0x5
  1973                           
  1974                           
  1975                           ; 2 bytes @ 0x5
  1976  0025                     	ds	1
  1977  0026                     ??_EEPROM_Write_String:
  1978  0026                     EEPROM_Read_Integer@addr:	
  1979                           ; 1 bytes @ 0x6
  1980                           
  1981  0026                     EEPROM_Read_String@c:	
  1982                           ; 1 bytes @ 0x6
  1983                           
  1984  0026                     USART_init@i:	
  1985                           ; 1 bytes @ 0x6
  1986                           
  1987  0026                     __Umul8_16@word_mpld:	
  1988                           ; 1 bytes @ 0x6
  1989                           
  1990  0026                     my_delay_ms@i:	
  1991                           ; 2 bytes @ 0x6
  1992                           
  1993  0026                     my_delay_ms_WDT@i:	
  1994                           ; 4 bytes @ 0x6
  1995                           
  1996                           
  1997                           ; 4 bytes @ 0x6
  1998  0026                     	ds	1
  1999  0027                     ??_EEPROM_Write_Integer:
  2000  0027                     EEPROM_Read_Integer@ptr:	
  2001                           ; 1 bytes @ 0x7
  2002                           
  2003  0027                     EEPROM_Write_String@addr:	
  2004                           ; 1 bytes @ 0x7
  2005                           
  2006  0027                     ___lwdiv@counter:	
  2007                           ; 1 bytes @ 0x7
  2008                           
  2009  0027                     I2C_Master_Read@temp:	
  2010                           ; 1 bytes @ 0x7
  2011                           
  2012                           
  2013                           ; 2 bytes @ 0x7
  2014  0027                     	ds	1
  2015  0028                     ??___lldiv:
  2016  0028                     ??___flge:	
  2017                           ; 1 bytes @ 0x8
  2018                           
  2019  0028                     __Umul8_16@multiplier:	
  2020                           ; 1 bytes @ 0x8
  2021                           
  2022  0028                     ___xxtofl@sign:	
  2023                           ; 1 bytes @ 0x8
  2024                           
  2025  0028                     EEPROM_Read_Integer@result:	
  2026                           ; 1 bytes @ 0x8
  2027                           
  2028                           
  2029                           ; 2 bytes @ 0x8
  2030  0028                     	ds	1
  2031  0029                     ?_EEPROM_24C1025_Read_Buffer_USART:
  2032  0029                     ?_EEPROM_24C1025_Read_Str:	
  2033                           ; 1 bytes @ 0x9
  2034                           
  2035  0029                     ___xxtofl@exp:	
  2036                           ; 1 bytes @ 0x9
  2037                           
  2038  0029                     EEPROM_24C1025_Read_Buffer_USART@mem_add:	
  2039                           ; 1 bytes @ 0x9
  2040                           
  2041  0029                     EEPROM_24C1025_Read_Str@mem_add:	
  2042                           ; 4 bytes @ 0x9
  2043                           
  2044  0029                     ___lldiv@quotient:	
  2045                           ; 4 bytes @ 0x9
  2046                           
  2047                           
  2048                           ; 4 bytes @ 0x9
  2049  0029                     	ds	1
  2050  002A                     ?_EEPROM_24C1025_Write_Buffer:
  2051  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  2052                           ; 1 bytes @ 0xA
  2053                           
  2054  002A                     ?_EEPROM_24C1025_Write_Str:	
  2055                           ; 1 bytes @ 0xA
  2056                           
  2057  002A                     EEPROM_Write_Integer@ptr:	
  2058                           ; 1 bytes @ 0xA
  2059                           
  2060  002A                     EEPROM_Read_Integer@i:	
  2061                           ; 1 bytes @ 0xA
  2062                           
  2063  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  2064                           ; 1 bytes @ 0xA
  2065                           
  2066  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  2067                           ; 4 bytes @ 0xA
  2068                           
  2069  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  2070                           ; 4 bytes @ 0xA
  2071                           
  2072  002A                     ___xxtofl@arg:	
  2073                           ; 4 bytes @ 0xA
  2074                           
  2075                           
  2076                           ; 4 bytes @ 0xA
  2077  002A                     	ds	1
  2078  002B                     EEPROM_Write_Integer@addr:
  2079                           
  2080                           ; 1 bytes @ 0xB
  2081  002B                     	ds	1
  2082  002C                     EEPROM_Write_Integer@i:
  2083                           
  2084                           ; 1 bytes @ 0xC
  2085  002C                     	ds	1
  2086  002D                     EEPROM_24C1025_Read_Buffer_USART@sizedata:
  2087  002D                     EEPROM_24C1025_Read_Str@buffer:	
  2088                           ; 1 bytes @ 0xD
  2089                           
  2090  002D                     ___lldiv@counter:	
  2091                           ; 1 bytes @ 0xD
  2092                           
  2093                           
  2094                           ; 1 bytes @ 0xD
  2095  002D                     	ds	1
  2096  002E                     ??_EEPROM_24C1025_Read_Str:
  2097  002E                     ?_I2C_Master_Init:	
  2098                           ; 1 bytes @ 0xE
  2099                           
  2100  002E                     ?_ADC_Media_10bits:	
  2101                           ; 1 bytes @ 0xE
  2102                           
  2103  002E                     ?___fldiv:	
  2104                           ; 4 bytes @ 0xE
  2105                           
  2106  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  2107                           ; 4 bytes @ 0xE
  2108                           
  2109  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2110                           ; 1 bytes @ 0xE
  2111                           
  2112  002E                     EEPROM_24C1025_Read_Buffer_USART@data:	
  2113                           ; 1 bytes @ 0xE
  2114                           
  2115  002E                     EEPROM_24C1025_Write_Str@data:	
  2116                           ; 1 bytes @ 0xE
  2117                           
  2118  002E                     I2C_Master_Init@c:	
  2119                           ; 1 bytes @ 0xE
  2120                           
  2121  002E                     ___fldiv@a:	
  2122                           ; 4 bytes @ 0xE
  2123                           
  2124                           
  2125                           ; 4 bytes @ 0xE
  2126  002E                     	ds	1
  2127  002F                     ??_EEPROM_24C1025_Read_Buffer_USART:
  2128  002F                     ??_EEPROM_24C1025_Write_Str:	
  2129                           ; 1 bytes @ 0xF
  2130                           
  2131  002F                     EEPROM_24C1025_Read_Buffer@data:	
  2132                           ; 1 bytes @ 0xF
  2133                           
  2134  002F                     EEPROM_24C1025_Write_Buffer@data:	
  2135                           ; 1 bytes @ 0xF
  2136                           
  2137                           
  2138                           ; 2 bytes @ 0xF
  2139  002F                     	ds	1
  2140  0030                     ??_EEPROM_24C1025_Read_Buffer:
  2141  0030                     EEPROM_24C1025_Read_Str@cnt:	
  2142                           ; 1 bytes @ 0x10
  2143                           
  2144                           
  2145                           ; 1 bytes @ 0x10
  2146  0030                     	ds	1
  2147  0031                     ??_EEPROM_24C1025_Write_Buffer:
  2148  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  2149                           ; 1 bytes @ 0x11
  2150                           
  2151  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  2152                           ; 1 bytes @ 0x11
  2153                           
  2154                           
  2155                           ; 1 bytes @ 0x11
  2156  0031                     	ds	1
  2157  0032                     ??_ADC_Media_10bits:
  2158  0032                     ??_I2C_Master_Init:	
  2159                           ; 1 bytes @ 0x12
  2160                           
  2161  0032                     EEPROM_24C1025_Read_Buffer_USART@cnt_117:	
  2162                           ; 1 bytes @ 0x12
  2163                           
  2164  0032                     EEPROM_24C1025_Write_Str@range:	
  2165                           ; 1 bytes @ 0x12
  2166                           
  2167  0032                     EEPROM_24C1025_Read_Str@range:	
  2168                           ; 1 bytes @ 0x12
  2169                           
  2170  0032                     ___fldiv@b:	
  2171                           ; 1 bytes @ 0x12
  2172                           
  2173                           
  2174                           ; 4 bytes @ 0x12
  2175  0032                     	ds	1
  2176  0033                     EEPROM_24C1025_Write_Buffer@count:
  2177  0033                     EEPROM_24C1025_Read_Buffer@cnt_108:	
  2178                           ; 1 bytes @ 0x13
  2179                           
  2180  0033                     EEPROM_24C1025_Read_Buffer_USART@chip_add:	
  2181                           ; 1 bytes @ 0x13
  2182                           
  2183  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2184                           ; 1 bytes @ 0x13
  2185                           
  2186  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2187                           ; 1 bytes @ 0x13
  2188                           
  2189  0033                     ADC_Media_10bits@canal:	
  2190                           ; 1 bytes @ 0x13
  2191                           
  2192                           
  2193                           ; 1 bytes @ 0x13
  2194  0033                     	ds	1
  2195  0034                     EEPROM_24C1025_Write_Buffer@chip_add:
  2196  0034                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2197                           ; 1 bytes @ 0x14
  2198                           
  2199  0034                     EEPROM_24C1025_Read_Buffer_USART@range:	
  2200                           ; 1 bytes @ 0x14
  2201                           
  2202  0034                     ADC_Media_10bits@value:	
  2203                           ; 1 bytes @ 0x14
  2204                           
  2205                           
  2206                           ; 2 bytes @ 0x14
  2207  0034                     	ds	1
  2208  0035                     EEPROM_24C1025_Write_Buffer@range:
  2209  0035                     EEPROM_24C1025_Read_Buffer@range:	
  2210                           ; 1 bytes @ 0x15
  2211                           
  2212  0035                     EEPROM_24C1025_Read_Buffer_USART@ctrl:	
  2213                           ; 1 bytes @ 0x15
  2214                           
  2215                           
  2216                           ; 1 bytes @ 0x15
  2217  0035                     	ds	1
  2218  0036                     ??___fldiv:
  2219  0036                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2220                           ; 1 bytes @ 0x16
  2221                           
  2222  0036                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2223                           ; 1 bytes @ 0x16
  2224                           
  2225  0036                     ADC_Media_10bits@i:	
  2226                           ; 1 bytes @ 0x16
  2227                           
  2228                           
  2229                           ; 1 bytes @ 0x16
  2230  0036                     	ds	1
  2231  0037                     ?_EEPROM_24C1025_Write_Byte:
  2232  0037                     ?_EEPROM_24C1025_Read_Byte:	
  2233                           ; 1 bytes @ 0x17
  2234                           
  2235  0037                     ?_EEPROM_24C1025_Read_Int:	
  2236                           ; 1 bytes @ 0x17
  2237                           
  2238  0037                     ?___fladd:	
  2239                           ; 2 bytes @ 0x17
  2240                           
  2241  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2242                           ; 4 bytes @ 0x17
  2243                           
  2244  0037                     EEPROM_24C1025_Read_Byte@mem_add:	
  2245                           ; 4 bytes @ 0x17
  2246                           
  2247  0037                     EEPROM_24C1025_Read_Int@mem_add:	
  2248                           ; 4 bytes @ 0x17
  2249                           
  2250  0037                     ___fladd@b:	
  2251                           ; 4 bytes @ 0x17
  2252                           
  2253                           
  2254                           ; 4 bytes @ 0x17
  2255  0037                     	ds	4
  2256  003B                     ??_EEPROM_24C1025_Read_Byte:
  2257  003B                     ??_EEPROM_24C1025_Read_Int:	
  2258                           ; 1 bytes @ 0x1B
  2259                           
  2260  003B                     EEPROM_24C1025_Write_Byte@data:	
  2261                           ; 1 bytes @ 0x1B
  2262                           
  2263  003B                     ___fladd@a:	
  2264                           ; 1 bytes @ 0x1B
  2265                           
  2266  003B                     ___fldiv@rem:	
  2267                           ; 4 bytes @ 0x1B
  2268                           
  2269                           
  2270                           ; 4 bytes @ 0x1B
  2271  003B                     	ds	1
  2272  003C                     ??_EEPROM_24C1025_Write_Byte:
  2273  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2274                           ; 1 bytes @ 0x1C
  2275                           
  2276  003C                     EEPROM_24C1025_Read_Byte@chip_add:	
  2277                           ; 1 bytes @ 0x1C
  2278                           
  2279                           
  2280                           ; 1 bytes @ 0x1C
  2281  003C                     	ds	1
  2282  003D                     EEPROM_24C1025_Read_Byte@data:
  2283  003D                     EEPROM_24C1025_Read_Int@chip_add:	
  2284                           ; 1 bytes @ 0x1D
  2285                           
  2286                           
  2287                           ; 1 bytes @ 0x1D
  2288  003D                     	ds	1
  2289  003E                     EEPROM_24C1025_Read_Int@data:
  2290                           
  2291                           ; 2 bytes @ 0x1E
  2292  003E                     	ds	1
  2293  003F                     ??___fladd:
  2294  003F                     ___fldiv@sign:	
  2295                           ; 1 bytes @ 0x1F
  2296                           
  2297                           
  2298                           ; 1 bytes @ 0x1F
  2299  003F                     	ds	1
  2300  0040                     ___fldiv@new_exp:
  2301                           
  2302                           ; 2 bytes @ 0x20
  2303  0040                     	ds	2
  2304  0042                     ___fldiv@grs:
  2305                           
  2306                           ; 4 bytes @ 0x22
  2307  0042                     	ds	4
  2308  0046                     ___fldiv@bexp:
  2309                           
  2310                           ; 1 bytes @ 0x26
  2311  0046                     	ds	1
  2312  0047                     ___fladd@signs:
  2313  0047                     ___fldiv@aexp:	
  2314                           ; 1 bytes @ 0x27
  2315                           
  2316                           
  2317                           ; 1 bytes @ 0x27
  2318  0047                     	ds	1
  2319  0048                     ___fladd@aexp:
  2320                           
  2321                           ; 1 bytes @ 0x28
  2322  0048                     	ds	1
  2323  0049                     ___fladd@bexp:
  2324                           
  2325                           ; 1 bytes @ 0x29
  2326  0049                     	ds	1
  2327  004A                     ___fladd@grs:
  2328                           
  2329                           ; 1 bytes @ 0x2A
  2330  004A                     	ds	1
  2331  004B                     ?___flsub:
  2332  004B                     ?___flmul:	
  2333                           ; 4 bytes @ 0x2B
  2334                           
  2335  004B                     ___flsub@a:	
  2336                           ; 4 bytes @ 0x2B
  2337                           
  2338  004B                     ___flmul@b:	
  2339                           ; 4 bytes @ 0x2B
  2340                           
  2341                           
  2342                           ; 4 bytes @ 0x2B
  2343  004B                     	ds	4
  2344  004F                     ___flsub@b:
  2345  004F                     ___flmul@a:	
  2346                           ; 4 bytes @ 0x2F
  2347                           
  2348                           
  2349                           ; 4 bytes @ 0x2F
  2350  004F                     	ds	4
  2351  0053                     ??___flsub:
  2352  0053                     ??___flmul:	
  2353                           ; 1 bytes @ 0x33
  2354                           
  2355                           
  2356                           ; 1 bytes @ 0x33
  2357  0053                     	ds	5
  2358  0058                     ___flmul@sign:
  2359                           
  2360                           ; 1 bytes @ 0x38
  2361  0058                     	ds	1
  2362  0059                     ___flmul@aexp:
  2363                           
  2364                           ; 1 bytes @ 0x39
  2365  0059                     	ds	1
  2366  005A                     ___flmul@grs:
  2367                           
  2368                           ; 4 bytes @ 0x3A
  2369  005A                     	ds	4
  2370  005E                     ___flmul@bexp:
  2371                           
  2372                           ; 1 bytes @ 0x3E
  2373  005E                     	ds	1
  2374  005F                     ___flmul@prod:
  2375                           
  2376                           ; 4 bytes @ 0x3F
  2377  005F                     	ds	4
  2378  0063                     ___flmul@temp:
  2379                           
  2380                           ; 2 bytes @ 0x43
  2381  0063                     	ds	2
  2382  0065                     ??_MediaPlacaVaccum:
  2383  0065                     ?___fltol:	
  2384                           ; 1 bytes @ 0x45
  2385                           
  2386  0065                     ___fltol@f1:	
  2387                           ; 4 bytes @ 0x45
  2388                           
  2389                           
  2390                           ; 4 bytes @ 0x45
  2391  0065                     	ds	4
  2392  0069                     ??___fltol:
  2393                           
  2394                           ; 1 bytes @ 0x49
  2395  0069                     	ds	5
  2396  006E                     ___fltol@sign1:
  2397                           
  2398                           ; 1 bytes @ 0x4E
  2399  006E                     	ds	1
  2400  006F                     ___fltol@exp1:
  2401                           
  2402                           ; 1 bytes @ 0x4F
  2403  006F                     	ds	1
  2404  0070                     ??_Save_Log:
  2405  0070                     ??_EEPROM_24C1025_Fill_All:	
  2406                           ; 1 bytes @ 0x50
  2407                           
  2408                           
  2409                           	psect	maintext
  2410  111B                     __pmaintext:	
  2411                           ; 1 bytes @ 0x50
  2412 ;;
  2413 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2414 ;;
  2415 ;; *************** function _main *****************
  2416 ;; Defined at:
  2417 ;;		line 144 in file "SlaveLiofilizadorVer1.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  reset           2   39[BANK1 ] unsigned int 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : B00/0
  2428 ;;		On exit  : 300/100
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2431 ;;      Params:         0       0       0       0       0
  2432 ;;      Locals:         0       0       2       0       0
  2433 ;;      Temps:          0       0       3       0       0
  2434 ;;      Totals:         0       0       5       0       0
  2435 ;;Total ram usage:        5 bytes
  2436 ;; Hardware stack levels required when called:    7
  2437 ;; This function calls:
  2438 ;;		_ADC_init
  2439 ;;		_Decodify_Command
  2440 ;;		_EEPROM_Read_Integer
  2441 ;;		_EEPROM_Write_Integer
  2442 ;;		_I2C_Master_Init
  2443 ;;		_MediaPlacaVaccum
  2444 ;;		_USART_init
  2445 ;;		_my_delay_ms_WDT
  2446 ;; This function is called by:
  2447 ;;		Startup code after reset
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           
  2452                           ;psect for function _main
  2453  111B                     _main:
  2454                           
  2455                           ;SlaveLiofilizadorVer1.c: 145:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2456                           
  2457                           ;incstack = 0
  2458                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2459  111B  3002               	movlw	2
  2460  111C  1683               	bsf	3,5	;RP0=1, select bank1
  2461  111D  1303               	bcf	3,6	;RP1=0, select bank1
  2462  111E  00C6               	movwf	(??_main^(0+128)+2)
  2463  111F  3004               	movlw	4
  2464  1120  00C5               	movwf	(??_main^(0+128)+1)
  2465  1121  30B9               	movlw	185
  2466  1122  00C4               	movwf	??_main^(0+128)
  2467  1123                     u5517:
  2468  1123  0BC4               	decfsz	??_main^(0+128),f
  2469  1124  2923               	goto	u5517
  2470  1125  0BC5               	decfsz	(??_main^(0+128)+1),f
  2471  1126  2923               	goto	u5517
  2472  1127  0BC6               	decfsz	(??_main^(0+128)+2),f
  2473  1128  2923               	goto	u5517
  2474  1129  292A               	nop2
  2475                           
  2476                           ;SlaveLiofilizadorVer1.c: 146:      OSCCONbits.IRCF0=1;
  2477  112A  1683               	bsf	3,5	;RP0=1, select bank1
  2478  112B  1303               	bcf	3,6	;RP1=0, select bank1
  2479  112C  160F               	bsf	15,4	;volatile
  2480                           
  2481                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF1=1;
  2482  112D  168F               	bsf	15,5	;volatile
  2483                           
  2484                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF2=1;
  2485  112E  170F               	bsf	15,6	;volatile
  2486                           
  2487                           ;SlaveLiofilizadorVer1.c: 150:      PORTA=0;
  2488  112F  1283               	bcf	3,5	;RP0=0, select bank0
  2489  1130  0185               	clrf	5	;volatile
  2490                           
  2491                           ;SlaveLiofilizadorVer1.c: 151:      PORTB=0;
  2492  1131  0186               	clrf	6	;volatile
  2493                           
  2494                           ;SlaveLiofilizadorVer1.c: 152:      PORTC=0;
  2495  1132  0187               	clrf	7	;volatile
  2496                           
  2497                           ;SlaveLiofilizadorVer1.c: 153:      PORTE=0;
  2498  1133  0189               	clrf	9	;volatile
  2499                           
  2500                           ;SlaveLiofilizadorVer1.c: 154:      TRISA=0b11101111;
  2501  1134  30EF               	movlw	239
  2502  1135  1683               	bsf	3,5	;RP0=1, select bank1
  2503  1136  0085               	movwf	5	;volatile
  2504                           
  2505                           ;SlaveLiofilizadorVer1.c: 155:      TRISB=0b00001111;
  2506  1137  300F               	movlw	15
  2507  1138  0086               	movwf	6	;volatile
  2508                           
  2509                           ;SlaveLiofilizadorVer1.c: 156:      TRISC=0xF0;
  2510  1139  30F0               	movlw	240
  2511  113A  0087               	movwf	7	;volatile
  2512                           
  2513                           ;SlaveLiofilizadorVer1.c: 157:      TRISE=0xFF;
  2514  113B  30FF               	movlw	255
  2515  113C  0089               	movwf	9	;volatile
  2516                           
  2517                           ;SlaveLiofilizadorVer1.c: 159:      ANSEL=0x00000011;
  2518  113D  3011               	movlw	17
  2519  113E  1703               	bsf	3,6	;RP1=1, select bank3
  2520  113F  0088               	movwf	8	;volatile
  2521                           
  2522                           ;SlaveLiofilizadorVer1.c: 160:      ANSELH=0x00000000;
  2523  1140  0189               	clrf	9	;volatile
  2524                           
  2525                           ;SlaveLiofilizadorVer1.c: 162:      OPTION_REGbits.nRBPU=0;
  2526  1141  1303               	bcf	3,6	;RP1=0, select bank1
  2527  1142  1381               	bcf	1,7	;volatile
  2528                           
  2529                           ;SlaveLiofilizadorVer1.c: 163:      WPUB=0b00001111;
  2530  1143  300F               	movlw	15
  2531  1144  0095               	movwf	21	;volatile
  2532                           
  2533                           ;SlaveLiofilizadorVer1.c: 166:      PORTBbits.RB7 =1;
  2534  1145  1283               	bcf	3,5	;RP0=0, select bank0
  2535  1146  1786               	bsf	6,7	;volatile
  2536                           
  2537                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB6 =1;
  2538  1147  1706               	bsf	6,6	;volatile
  2539                           
  2540                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB5=1;
  2541  1148  1686               	bsf	6,5	;volatile
  2542                           
  2543                           ;SlaveLiofilizadorVer1.c: 169:      my_delay_ms_WDT(1000);
  2544  1149  3000               	movlw	0
  2545  114A  00A3               	movwf	my_delay_ms_WDT@time+3
  2546  114B  3000               	movlw	0
  2547  114C  00A2               	movwf	my_delay_ms_WDT@time+2
  2548  114D  3003               	movlw	3
  2549  114E  00A1               	movwf	my_delay_ms_WDT@time+1
  2550  114F  30E8               	movlw	232
  2551  1150  00A0               	movwf	my_delay_ms_WDT@time
  2552  1151  160A  158A  2448  160A  118A  	fcall	_my_delay_ms_WDT
  2553                           
  2554                           ;SlaveLiofilizadorVer1.c: 171:      OPTION_REGbits.T0CS=0;
  2555  1156  1683               	bsf	3,5	;RP0=1, select bank1
  2556  1157  1281               	bcf	1,5	;volatile
  2557                           
  2558                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.PSA =1;
  2559  1158  1581               	bsf	1,3	;volatile
  2560                           
  2561                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PS0 =1;
  2562  1159  1401               	bsf	1,0	;volatile
  2563                           
  2564                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS1 =1;
  2565  115A  1481               	bsf	1,1	;volatile
  2566                           
  2567                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS2 =1;
  2568  115B  1501               	bsf	1,2	;volatile
  2569                           
  2570                           ;SlaveLiofilizadorVer1.c: 176:      INTCONbits.T0IE =0;
  2571  115C  128B               	bcf	11,5	;volatile
  2572                           
  2573                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.INTE =0;
  2574  115D  120B               	bcf	11,4	;volatile
  2575                           
  2576                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.GIE =1;
  2577  115E  178B               	bsf	11,7	;volatile
  2578                           
  2579                           ;SlaveLiofilizadorVer1.c: 181:      INTCONbits.PEIE = 1;
  2580  115F  170B               	bsf	11,6	;volatile
  2581                           
  2582                           ;SlaveLiofilizadorVer1.c: 182:      T1CKPS0=1;
  2583  1160  1283               	bcf	3,5	;RP0=0, select bank0
  2584  1161  1610               	bsf	16,4	;volatile
  2585                           
  2586                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS1=1;
  2587  1162  1690               	bsf	16,5	;volatile
  2588                           
  2589                           ;SlaveLiofilizadorVer1.c: 184:      TMR1CS=0;
  2590  1163  1090               	bcf	16,1	;volatile
  2591                           
  2592                           ;SlaveLiofilizadorVer1.c: 185:      TMR1IE=1;
  2593  1164  1683               	bsf	3,5	;RP0=1, select bank1
  2594  1165  140C               	bsf	12,0	;volatile
  2595                           
  2596                           ;SlaveLiofilizadorVer1.c: 186:      T1CON=1;
  2597  1166  3001               	movlw	1
  2598  1167  1283               	bcf	3,5	;RP0=0, select bank0
  2599  1168  0090               	movwf	16	;volatile
  2600  1169  0064               	clrwdt	;# 
  2601                           
  2602                           ;SlaveLiofilizadorVer1.c: 193:      ADC_init();
  2603  116A  160A  158A  2090  160A  118A  	fcall	_ADC_init
  2604                           
  2605                           ;SlaveLiofilizadorVer1.c: 194:      I2C_Master_Init(100000);
  2606  116F  3000               	movlw	0
  2607  1170  00B1               	movwf	I2C_Master_Init@c+3
  2608  1171  3001               	movlw	1
  2609  1172  00B0               	movwf	I2C_Master_Init@c+2
  2610  1173  3086               	movlw	134
  2611  1174  00AF               	movwf	I2C_Master_Init@c+1
  2612  1175  30A0               	movlw	160
  2613  1176  00AE               	movwf	I2C_Master_Init@c
  2614  1177  160A  158A  2310  160A  118A  	fcall	_I2C_Master_Init
  2615                           
  2616                           ;SlaveLiofilizadorVer1.c: 195:      USART_init(115200);
  2617  117C  3000               	movlw	0
  2618  117D  1283               	bcf	3,5	;RP0=0, select bank0
  2619  117E  00A3               	movwf	USART_init@baudrate+3
  2620  117F  3001               	movlw	1
  2621  1180  00A2               	movwf	USART_init@baudrate+2
  2622  1181  30C2               	movlw	194
  2623  1182  00A1               	movwf	USART_init@baudrate+1
  2624  1183  3000               	movlw	0
  2625  1184  00A0               	movwf	USART_init@baudrate
  2626  1185  120A  158A  2000  160A  118A  	fcall	_USART_init
  2627                           
  2628                           ;SlaveLiofilizadorVer1.c: 201:      {;SlaveLiofilizadorVer1.c: 202:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 203:      reset=EEPROM_Read_Integer(0x10);
  2629  118A  3010               	movlw	16
  2630  118B  160A  158A  22BC  160A  118A  	fcall	_EEPROM_Read_Integer
  2631  1190  0824               	movf	?_EEPROM_Read_Integer+1,w
  2632  1191  1683               	bsf	3,5	;RP0=1, select bank1
  2633  1192  00C8               	movwf	(main@reset+1)^(0+128)
  2634  1193  1283               	bcf	3,5	;RP0=0, select bank0
  2635  1194  0823               	movf	?_EEPROM_Read_Integer,w
  2636  1195  1683               	bsf	3,5	;RP0=1, select bank1
  2637  1196  00C7               	movwf	main@reset^(0+128)
  2638                           
  2639                           ;SlaveLiofilizadorVer1.c: 204:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2640  1197  0A47               	incf	main@reset^(0+128),w
  2641  1198  1D03               	skipz
  2642  1199  29A7               	goto	l5921
  2643  119A  0A48               	incf	(main@reset+1)^(0+128),w
  2644  119B  1D03               	btfss	3,2
  2645  119C  29A7               	goto	l5921
  2646  119D  3000               	movlw	0
  2647  119E  1283               	bcf	3,5	;RP0=0, select bank0
  2648  119F  00A5               	movwf	EEPROM_Write_Integer@dado
  2649  11A0  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2650  11A1  3010               	movlw	16
  2651  11A2  160A  158A  2341  160A  118A  	fcall	_EEPROM_Write_Integer
  2652  11A7                     l5921:
  2653                           
  2654                           ;SlaveLiofilizadorVer1.c: 205:      reset++;
  2655  11A7  3001               	movlw	1
  2656  11A8  1683               	bsf	3,5	;RP0=1, select bank1
  2657  11A9  1303               	bcf	3,6	;RP1=0, select bank1
  2658  11AA  07C7               	addwf	main@reset^(0+128),f
  2659  11AB  1803               	skipnc
  2660  11AC  0AC8               	incf	(main@reset+1)^(0+128),f
  2661  11AD  3000               	movlw	0
  2662  11AE  07C8               	addwf	(main@reset+1)^(0+128),f
  2663                           
  2664                           ;SlaveLiofilizadorVer1.c: 206:      EEPROM_Write_Integer(0x10,reset);
  2665  11AF  0848               	movf	(main@reset+1)^(0+128),w
  2666  11B0  1283               	bcf	3,5	;RP0=0, select bank0
  2667  11B1  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2668  11B2  1683               	bsf	3,5	;RP0=1, select bank1
  2669  11B3  0847               	movf	main@reset^(0+128),w
  2670  11B4  1283               	bcf	3,5	;RP0=0, select bank0
  2671  11B5  00A5               	movwf	EEPROM_Write_Integer@dado
  2672  11B6  3010               	movlw	16
  2673  11B7  160A  158A  2341  160A  118A  	fcall	_EEPROM_Write_Integer
  2674                           
  2675                           ;SlaveLiofilizadorVer1.c: 207:      };SlaveLiofilizadorVer1.c: 211:      Delay_Led_Tmr0 
      +                          = 0;
  2676  11BC  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2677  11BD  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2678                           
  2679                           ;SlaveLiofilizadorVer1.c: 212:      Delay_Led_Usart = 0;
  2680  11BE  1683               	bsf	3,5	;RP0=1, select bank1
  2681  11BF  1303               	bcf	3,6	;RP1=0, select bank1
  2682  11C0  01DB               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2683  11C1  01DC               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2684                           
  2685                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Memory = 0;
  2686  11C2  01DD               	clrf	_Delay_Led_Memory^(0+128)	;volatile
  2687  11C3  01DE               	clrf	(_Delay_Led_Memory+1)^(0+128)	;volatile
  2688                           
  2689                           ;SlaveLiofilizadorVer1.c: 215:      segundo=0;
  2690  11C4  01FD               	clrf	_segundo	;volatile
  2691                           
  2692                           ;SlaveLiofilizadorVer1.c: 216:      hora=0;
  2693  11C5  01FC               	clrf	_hora	;volatile
  2694                           
  2695                           ;SlaveLiofilizadorVer1.c: 217:      PORTCbits.RC0=0;
  2696  11C6  1283               	bcf	3,5	;RP0=0, select bank0
  2697  11C7  1007               	bcf	7,0	;volatile
  2698                           
  2699                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC1=0;
  2700  11C8  1087               	bcf	7,1	;volatile
  2701                           
  2702                           ;SlaveLiofilizadorVer1.c: 219:      PORTAbits.RA2=0;
  2703  11C9  1105               	bcf	5,2	;volatile
  2704                           
  2705                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA3=0;
  2706  11CA  1185               	bcf	5,3	;volatile
  2707                           
  2708                           ;SlaveLiofilizadorVer1.c: 223:      Board_Number=(((0x0F)&(~PORTB)));
  2709  11CB  0906               	comf	6,w	;volatile
  2710  11CC  390F               	andlw	15
  2711  11CD  1683               	bsf	3,5	;RP0=1, select bank1
  2712  11CE  00C4               	movwf	??_main^(0+128)
  2713  11CF  0844               	movf	??_main^(0+128),w
  2714  11D0  00E1               	movwf	_Board_Number^(0+128)
  2715                           
  2716                           ;SlaveLiofilizadorVer1.c: 224:      canal=1;
  2717  11D1  01E2               	clrf	_canal^(0+128)
  2718  11D2  0AE2               	incf	_canal^(0+128),f
  2719                           
  2720                           ;SlaveLiofilizadorVer1.c: 232:      statuspower.flag_global_vacuo=0;
  2721  11D3  1163               	bcf	_statuspower^(0+128),2
  2722  11D4                     l5947:
  2723                           
  2724                           ;SlaveLiofilizadorVer1.c: 246:           {;SlaveLiofilizadorVer1.c: 248:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2725  11D4  17E4               	bsf	_generic_status^(0+128),7
  2726                           
  2727                           ;SlaveLiofilizadorVer1.c: 274:          if(++canal==2) canal=0;
  2728  11D5  3001               	movlw	1
  2729  11D6  00C4               	movwf	??_main^(0+128)
  2730  11D7  0844               	movf	??_main^(0+128),w
  2731  11D8  07E2               	addwf	_canal^(0+128),f
  2732  11D9  3002               	movlw	2
  2733  11DA  0662               	xorwf	_canal^(0+128),w
  2734  11DB  1903               	btfsc	3,2
  2735  11DC  01E2               	clrf	_canal^(0+128)
  2736                           
  2737                           ;SlaveLiofilizadorVer1.c: 275:          MediaPlacaVaccum(canal);
  2738  11DD  0862               	movf	_canal^(0+128),w
  2739  11DE  120A  118A  2037  160A  118A  	fcall	_MediaPlacaVaccum
  2740                           
  2741                           ;SlaveLiofilizadorVer1.c: 283:          if(generic_status.flag_usart_rx==1)
  2742  11E3  1683               	bsf	3,5	;RP0=1, select bank1
  2743  11E4  1C64               	btfss	_generic_status^(0+128),0
  2744  11E5  29D4               	goto	l5947
  2745                           
  2746                           ;SlaveLiofilizadorVer1.c: 284:             {;SlaveLiofilizadorVer1.c: 285:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2747  11E6  1283               	bcf	3,5	;RP0=0, select bank2
  2748  11E7  1703               	bsf	3,6	;RP1=1, select bank2
  2749  11E8  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2750  11E9  1683               	bsf	3,5	;RP0=1, select bank1
  2751  11EA  1303               	bcf	3,6	;RP1=0, select bank1
  2752  11EB  00D8               	movwf	(_header+1)^(0+128)
  2753  11EC  1283               	bcf	3,5	;RP0=0, select bank2
  2754  11ED  1703               	bsf	3,6	;RP1=1, select bank2
  2755  11EE  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2756  11EF  1683               	bsf	3,5	;RP0=1, select bank1
  2757  11F0  1303               	bcf	3,6	;RP1=0, select bank1
  2758  11F1  00D7               	movwf	_header^(0+128)
  2759                           
  2760                           ;SlaveLiofilizadorVer1.c: 286:             if(header==0xAABB)
  2761  11F2  30BB               	movlw	187
  2762  11F3  0657               	xorwf	_header^(0+128),w
  2763  11F4  30AA               	movlw	170
  2764  11F5  1903               	skipnz
  2765  11F6  0658               	xorwf	(_header+1)^(0+128),w
  2766  11F7  1D03               	btfss	3,2
  2767  11F8  29D4               	goto	l5947
  2768                           
  2769                           ;SlaveLiofilizadorVer1.c: 287:                {;SlaveLiofilizadorVer1.c: 288:           
      +                               destino =usart_buffer[3];
  2770  11F9  1283               	bcf	3,5	;RP0=0, select bank2
  2771  11FA  1703               	bsf	3,6	;RP1=1, select bank2
  2772  11FB  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2773  11FC  1683               	bsf	3,5	;RP0=1, select bank1
  2774  11FD  1303               	bcf	3,6	;RP1=0, select bank1
  2775  11FE  00C4               	movwf	??_main^(0+128)
  2776  11FF  0844               	movf	??_main^(0+128),w
  2777  1200  00E0               	movwf	_destino^(0+128)
  2778                           
  2779                           ;SlaveLiofilizadorVer1.c: 289:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2780  1201  0860               	movf	_destino^(0+128),w
  2781  1202  0661               	xorwf	_Board_Number^(0+128),w
  2782  1203  1D03               	btfss	3,2
  2783  1204  0A60               	incf	_destino^(0+128),w
  2784  1205  1D03               	btfss	3,2
  2785  1206  29D4               	goto	l5947
  2786                           
  2787                           ;SlaveLiofilizadorVer1.c: 290:                       {;SlaveLiofilizadorVer1.c: 291:    
      +                                             Delay_Led_Usart=20;
  2788  1207  3014               	movlw	20
  2789  1208  00DB               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2790  1209  3000               	movlw	0
  2791  120A  00DC               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2792                           
  2793                           ;SlaveLiofilizadorVer1.c: 292:                       Decodify_Command();
  2794  120B  120A  118A  23FF  160A  118A  	fcall	_Decodify_Command
  2795                           
  2796                           ;SlaveLiofilizadorVer1.c: 293:                       generic_status.flag_usart_rx=0;
  2797  1210  1683               	bsf	3,5	;RP0=1, select bank1
  2798  1211  1303               	bcf	3,6	;RP1=0, select bank1
  2799  1212  1064               	bcf	_generic_status^(0+128),0
  2800                           
  2801                           ;SlaveLiofilizadorVer1.c: 296:             }
  2802  1213  29D4               	goto	l5947
  2803  1214                     __end_of_main:
  2804                           
  2805                           	psect	text1
  2806  0800                     __ptext1:	
  2807 ;; *************** function _USART_init *****************
  2808 ;; Defined at:
  2809 ;;		line 18 in file "usart.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  baudrate        4    0[BANK0 ] unsigned long 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  i               1    6[BANK0 ] unsigned char 
  2814 ;;  erro            1    0        unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0
  2819 ;; Tracked objects:
  2820 ;;		On entry : 300/0
  2821 ;;		On exit  : 300/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2824 ;;      Params:         0       4       0       0       0
  2825 ;;      Locals:         0       2       0       0       0
  2826 ;;      Temps:          0       1       0       0       0
  2827 ;;      Totals:         0       7       0       0       0
  2828 ;;Total ram usage:        7 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    1
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_main
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           
  2839                           ;psect for function _USART_init
  2840  0800                     _USART_init:
  2841                           
  2842                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  2843                           
  2844                           ;incstack = 0
  2845                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  2846  0800  304B               	movlw	75
  2847  0801  0621               	xorwf	USART_init@baudrate+1,w
  2848  0802  0420               	iorwf	USART_init@baudrate,w
  2849  0803  0422               	iorwf	USART_init@baudrate+2,w
  2850  0804  0423               	iorwf	USART_init@baudrate+3,w
  2851  0805  1D03               	btfss	3,2
  2852  0806  2813               	goto	l5025
  2853                           
  2854                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  2855  0807  1283               	bcf	3,5	;RP0=0, select bank0
  2856  0808  1303               	bcf	3,6	;RP1=0, select bank0
  2857  0809  1798               	bsf	24,7	;volatile
  2858                           
  2859                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  2860  080A  1618               	bsf	24,4	;volatile
  2861                           
  2862                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  2863  080B  1683               	bsf	3,5	;RP0=1, select bank1
  2864  080C  1518               	bsf	24,2	;volatile
  2865                           
  2866                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  2867  080D  1218               	bcf	24,4	;volatile
  2868                           
  2869                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  2870  080E  1318               	bcf	24,6	;volatile
  2871                           
  2872                           ;usart.c: 32:           SPBRG =12;
  2873  080F  300C               	movlw	12
  2874  0810  0099               	movwf	25	;volatile
  2875                           
  2876                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  2877  0811  170B               	bsf	11,6	;volatile
  2878  0812  282F               	goto	L1
  2879  0813                     l5025:	
  2880                           ;usart.c: 35:           }
  2881                           
  2882                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  2883                           
  2884  0813  30C2               	movlw	194
  2885  0814  1283               	bcf	3,5	;RP0=0, select bank0
  2886  0815  1303               	bcf	3,6	;RP1=0, select bank0
  2887  0816  0621               	xorwf	USART_init@baudrate+1,w
  2888  0817  1D03               	skipz
  2889  0818  2830               	goto	l5045
  2890  0819  0322               	decf	USART_init@baudrate+2,w
  2891  081A  0420               	iorwf	USART_init@baudrate,w
  2892  081B  0423               	iorwf	USART_init@baudrate+3,w
  2893  081C  1D03               	btfss	3,2
  2894  081D  2830               	goto	l5045
  2895                           
  2896                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  2897  081E  3010               	movlw	16
  2898  081F  1683               	bsf	3,5	;RP0=1, select bank1
  2899  0820  1303               	bcf	3,6	;RP1=0, select bank1
  2900  0821  0099               	movwf	25	;volatile
  2901                           
  2902                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  2903  0822  1703               	bsf	3,6	;RP1=1, select bank3
  2904  0823  1587               	bsf	7,3	;volatile
  2905                           
  2906                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  2907  0824  1303               	bcf	3,6	;RP1=0, select bank1
  2908  0825  1518               	bsf	24,2	;volatile
  2909                           
  2910                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  2911  0826  1283               	bcf	3,5	;RP0=0, select bank0
  2912  0827  1798               	bsf	24,7	;volatile
  2913                           
  2914                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  2915  0828  1683               	bsf	3,5	;RP0=1, select bank1
  2916  0829  1218               	bcf	24,4	;volatile
  2917                           
  2918                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  2919  082A  1318               	bcf	24,6	;volatile
  2920                           
  2921                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  2922  082B  1283               	bcf	3,5	;RP0=0, select bank0
  2923  082C  1618               	bsf	24,4	;volatile
  2924                           
  2925                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  2926  082D  170B               	bsf	11,6	;volatile
  2927                           
  2928                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  2929  082E  1683               	bsf	3,5	;RP0=1, select bank1
  2930  082F                     L1:
  2931  082F  168C               	bsf	12,5	;volatile
  2932  0830                     l5045:
  2933                           
  2934                           ;usart.c: 68:      TRISC6= 1;
  2935  0830  1683               	bsf	3,5	;RP0=1, select bank1
  2936  0831  1303               	bcf	3,6	;RP1=0, select bank1
  2937  0832  1707               	bsf	7,6	;volatile
  2938                           
  2939                           ;usart.c: 69:      TRISC7= 1;
  2940  0833  1787               	bsf	7,7	;volatile
  2941                           
  2942                           ;usart.c: 71:      CREN=0;
  2943  0834  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0835  1218               	bcf	24,4	;volatile
  2945                           
  2946                           ;usart.c: 72:      CREN=1;
  2947  0836  1618               	bsf	24,4	;volatile
  2948                           
  2949                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  2950  0837  01A6               	clrf	USART_init@i
  2951  0838                     l5059:
  2952  0838  081A               	movf	26,w	;volatile
  2953  0839  3001               	movlw	1
  2954  083A  00A4               	movwf	??_USART_init
  2955  083B  0824               	movf	??_USART_init,w
  2956  083C  07A6               	addwf	USART_init@i,f
  2957  083D  300F               	movlw	15
  2958  083E  0226               	subwf	USART_init@i,w
  2959  083F  1803               	btfsc	3,0
  2960  0840  0008               	return
  2961  0841  2838               	goto	l5059
  2962  0842                     __end_of_USART_init:
  2963                           
  2964                           	psect	text2
  2965  0037                     __ptext2:	
  2966 ;; *************** function _MediaPlacaVaccum *****************
  2967 ;; Defined at:
  2968 ;;		line 740 in file "SlaveLiofilizadorVer1.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  canal           1    wreg     unsigned char 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  canal           1    4[BANK1 ] unsigned char 
  2973 ;;  Temp            4    7[BANK1 ] float 
  2974 ;;  Valor           4    0        float 
  2975 ;;  i               2    5[BANK1 ] unsigned int 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 300/100
  2982 ;;		On exit  : 200/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2985 ;;      Params:         0       0       0       0       0
  2986 ;;      Locals:         0       0      11       0       0
  2987 ;;      Temps:          0       1       0       0       0
  2988 ;;      Totals:         0       1      11       0       0
  2989 ;;Total ram usage:       12 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    3
  2992 ;; This function calls:
  2993 ;;		_ADC_Media_10bits
  2994 ;;		_Package_Usart_is_for_me
  2995 ;;		___fladd
  2996 ;;		___fldiv
  2997 ;;		___flge
  2998 ;;		___flmul
  2999 ;;		___flsub
  3000 ;;		___xxtofl
  3001 ;;		_my_delay_ms
  3002 ;; This function is called by:
  3003 ;;		_main
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           
  3008                           ;psect for function _MediaPlacaVaccum
  3009  0037                     _MediaPlacaVaccum:
  3010                           
  3011                           ;incstack = 0
  3012                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3013                           ;MediaPlacaVaccum@canal stored from wreg
  3014  0037  00A4               	movwf	MediaPlacaVaccum@canal^(0+128)
  3015                           
  3016                           ;SlaveLiofilizadorVer1.c: 741:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 742:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 746:      if(canal==0)
  3017  0038  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3018  0039  1D03               	btfss	3,2
  3019  003A  2AEA               	goto	l439
  3020                           
  3021                           ;SlaveLiofilizadorVer1.c: 747:        {;SlaveLiofilizadorVer1.c: 748:        ADCON1bits.
      +                          VCFG0=1;
  3022  003B  161F               	bsf	31,4	;volatile
  3023                           
  3024                           ;SlaveLiofilizadorVer1.c: 749:        ADCON1bits.VCFG1=1;
  3025  003C  169F               	bsf	31,5	;volatile
  3026                           
  3027                           ;SlaveLiofilizadorVer1.c: 750:        ADCON0bits.CHS=canal;
  3028  003D  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3029  003E  1283               	bcf	3,5	;RP0=0, select bank0
  3030  003F  00E5               	movwf	??_MediaPlacaVaccum
  3031  0040  0DE5               	rlf	??_MediaPlacaVaccum,f
  3032  0041  0DE5               	rlf	??_MediaPlacaVaccum,f
  3033  0042  081F               	movf	31,w	;volatile
  3034  0043  0665               	xorwf	??_MediaPlacaVaccum,w
  3035  0044  39C3               	andlw	-61
  3036  0045  0665               	xorwf	??_MediaPlacaVaccum,w
  3037  0046  009F               	movwf	31	;volatile
  3038                           
  3039                           ;SlaveLiofilizadorVer1.c: 751:        my_delay_ms(1);
  3040  0047  3000               	movlw	0
  3041  0048  00A3               	movwf	my_delay_ms@time+3
  3042  0049  3000               	movlw	0
  3043  004A  00A2               	movwf	my_delay_ms@time+2
  3044  004B  3000               	movlw	0
  3045  004C  00A1               	movwf	my_delay_ms@time+1
  3046  004D  3001               	movlw	1
  3047  004E  00A0               	movwf	my_delay_ms@time
  3048  004F  160A  158A  2411  120A  118A  	fcall	_my_delay_ms
  3049                           
  3050                           ;SlaveLiofilizadorVer1.c: 752:        Temp=0;
  3051  0054  3000               	movlw	0
  3052  0055  1683               	bsf	3,5	;RP0=1, select bank1
  3053  0056  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3054  0057  3000               	movlw	0
  3055  0058  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3056  0059  3000               	movlw	0
  3057  005A  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3058  005B  3000               	movlw	0
  3059  005C  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3060                           
  3061                           ;SlaveLiofilizadorVer1.c: 754:        for(i=1;i<15;i++)
  3062  005D  3001               	movlw	1
  3063  005E  00A5               	movwf	MediaPlacaVaccum@i^(0+128)
  3064  005F  3000               	movlw	0
  3065  0060  00A6               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3066  0061                     l5081:
  3067                           
  3068                           ;SlaveLiofilizadorVer1.c: 755:            {;SlaveLiofilizadorVer1.c: 756:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3069  0061  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3070  0062  160A  158A  25D1  120A  118A  	fcall	_ADC_Media_10bits
  3071  0067  0831               	movf	?_ADC_Media_10bits+3,w
  3072  0068  00BA               	movwf	___fladd@b+3
  3073  0069  0830               	movf	?_ADC_Media_10bits+2,w
  3074  006A  00B9               	movwf	___fladd@b+2
  3075  006B  082F               	movf	?_ADC_Media_10bits+1,w
  3076  006C  00B8               	movwf	___fladd@b+1
  3077  006D  082E               	movf	?_ADC_Media_10bits,w
  3078  006E  00B7               	movwf	___fladd@b
  3079  006F  1683               	bsf	3,5	;RP0=1, select bank1
  3080  0070  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3081  0071  1283               	bcf	3,5	;RP0=0, select bank0
  3082  0072  00BE               	movwf	___fladd@a+3
  3083  0073  1683               	bsf	3,5	;RP0=1, select bank1
  3084  0074  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3085  0075  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0076  00BD               	movwf	___fladd@a+2
  3087  0077  1683               	bsf	3,5	;RP0=1, select bank1
  3088  0078  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3089  0079  1283               	bcf	3,5	;RP0=0, select bank0
  3090  007A  00BC               	movwf	___fladd@a+1
  3091  007B  1683               	bsf	3,5	;RP0=1, select bank1
  3092  007C  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3093  007D  1283               	bcf	3,5	;RP0=0, select bank0
  3094  007E  00BB               	movwf	___fladd@a
  3095  007F  120A  158A  22DE  120A  118A  	fcall	___fladd
  3096  0084  083A               	movf	?___fladd+3,w
  3097  0085  1683               	bsf	3,5	;RP0=1, select bank1
  3098  0086  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3099  0087  1283               	bcf	3,5	;RP0=0, select bank0
  3100  0088  0839               	movf	?___fladd+2,w
  3101  0089  1683               	bsf	3,5	;RP0=1, select bank1
  3102  008A  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3103  008B  1283               	bcf	3,5	;RP0=0, select bank0
  3104  008C  0838               	movf	?___fladd+1,w
  3105  008D  1683               	bsf	3,5	;RP0=1, select bank1
  3106  008E  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3107  008F  1283               	bcf	3,5	;RP0=0, select bank0
  3108  0090  0837               	movf	?___fladd,w
  3109  0091  1683               	bsf	3,5	;RP0=1, select bank1
  3110  0092  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3111                           
  3112                           ;SlaveLiofilizadorVer1.c: 757:            if(Package_Usart_is_for_me()==1) break;
  3113  0093  160A  158A  214B  120A  118A  	fcall	_Package_Usart_is_for_me
  3114  0098  3A01               	xorlw	1
  3115  0099  1903               	btfsc	3,2
  3116  009A  28A9               	goto	l5089
  3117                           
  3118                           ;SlaveLiofilizadorVer1.c: 758:            }
  3119  009B  3001               	movlw	1
  3120  009C  1683               	bsf	3,5	;RP0=1, select bank1
  3121  009D  07A5               	addwf	MediaPlacaVaccum@i^(0+128),f
  3122  009E  1803               	skipnc
  3123  009F  0AA6               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3124  00A0  3000               	movlw	0
  3125  00A1  07A6               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3126  00A2  3000               	movlw	0
  3127  00A3  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3128  00A4  300F               	movlw	15
  3129  00A5  1903               	skipnz
  3130  00A6  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3131  00A7  1C03               	skipc
  3132  00A8  2861               	goto	l5081
  3133  00A9                     l5089:
  3134                           
  3135                           ;SlaveLiofilizadorVer1.c: 759:        if(i<10)
  3136  00A9  3000               	movlw	0
  3137  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  3138  00AB  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3139  00AC  300A               	movlw	10
  3140  00AD  1903               	skipnz
  3141  00AE  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3142  00AF  1C03               	btfss	3,0
  3143  00B0  0008               	return
  3144                           
  3145                           ;SlaveLiofilizadorVer1.c: 765:        if(i==15)
  3146  00B1  300F               	movlw	15
  3147  00B2  0625               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3148  00B3  0426               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3149  00B4  1D03               	btfss	3,2
  3150  00B5  28C0               	goto	l5097
  3151                           
  3152                           ;SlaveLiofilizadorVer1.c: 766:          Temp/=(i-1);
  3153  00B6  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3154  00B7  3EFF               	addlw	255
  3155  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  3156  00B9  00A0               	movwf	___xxtofl@val
  3157  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  3158  00BB  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3159  00BC  1803               	skipnc
  3160  00BD  3E01               	addlw	1
  3161  00BE  3EFF               	addlw	255
  3162  00BF  28C5               	goto	L2
  3163  00C0                     l5097:
  3164                           
  3165                           ;SlaveLiofilizadorVer1.c: 768:          Temp/=(i);
  3166  00C0  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3167  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  3168  00C2  00A0               	movwf	___xxtofl@val
  3169  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  3170  00C4  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3171  00C5                     L2:
  3172  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  3173  00C6  00A1               	movwf	___xxtofl@val+1
  3174  00C7  01A2               	clrf	___xxtofl@val+2
  3175  00C8  01A3               	clrf	___xxtofl@val+3
  3176  00C9  3000               	movlw	0
  3177  00CA  120A  118A  274B  120A  118A  	fcall	___xxtofl
  3178  00CF  0823               	movf	?___xxtofl+3,w
  3179  00D0  00B1               	movwf	___fldiv@a+3
  3180  00D1  0822               	movf	?___xxtofl+2,w
  3181  00D2  00B0               	movwf	___fldiv@a+2
  3182  00D3  0821               	movf	?___xxtofl+1,w
  3183  00D4  00AF               	movwf	___fldiv@a+1
  3184  00D5  0820               	movf	?___xxtofl,w
  3185  00D6  00AE               	movwf	___fldiv@a
  3186  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  3187  00D8  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3188  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  3189  00DA  00B5               	movwf	___fldiv@b+3
  3190  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  3191  00DC  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3192  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  3193  00DE  00B4               	movwf	___fldiv@b+2
  3194  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  3195  00E0  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3196  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  3197  00E2  00B3               	movwf	___fldiv@b+1
  3198  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  3199  00E4  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3200  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  3201  00E6  00B2               	movwf	___fldiv@b
  3202  00E7  120A  158A  213D  120A  118A  	fcall	___fldiv
  3203  00EC  0831               	movf	?___fldiv+3,w
  3204  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  3205  00EE  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3206  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  3207  00F0  0830               	movf	?___fldiv+2,w
  3208  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  3209  00F2  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3210  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  3211  00F4  082F               	movf	?___fldiv+1,w
  3212  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  3213  00F6  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3214  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  3215  00F8  082E               	movf	?___fldiv,w
  3216  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  3217  00FA  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3218                           
  3219                           ;SlaveLiofilizadorVer1.c: 770:        if(Temp<615)
  3220  00FB  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3221  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  3222  00FD  00A3               	movwf	___flge@ff1+3
  3223  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  3224  00FF  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3225  0100  1283               	bcf	3,5	;RP0=0, select bank0
  3226  0101  00A2               	movwf	___flge@ff1+2
  3227  0102  1683               	bsf	3,5	;RP0=1, select bank1
  3228  0103  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3229  0104  1283               	bcf	3,5	;RP0=0, select bank0
  3230  0105  00A1               	movwf	___flge@ff1+1
  3231  0106  1683               	bsf	3,5	;RP0=1, select bank1
  3232  0107  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3233  0108  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0109  00A0               	movwf	___flge@ff1
  3235  010A  3044               	movlw	68
  3236  010B  00A7               	movwf	___flge@ff2+3
  3237  010C  3019               	movlw	25
  3238  010D  00A6               	movwf	___flge@ff2+2
  3239  010E  30C0               	movlw	192
  3240  010F  00A5               	movwf	___flge@ff2+1
  3241  0110  3000               	movlw	0
  3242  0111  00A4               	movwf	___flge@ff2
  3243  0112  160A  158A  276D  120A  118A  	fcall	___flge
  3244  0117  1803               	btfsc	3,0
  3245  0118  29C9               	goto	l5103
  3246                           
  3247                           ;SlaveLiofilizadorVer1.c: 771:           {;SlaveLiofilizadorVer1.c: 772:           Vaccu
      +                          m0 =1023.0-(Temp-454.0);
  3248  0119  30C3               	movlw	195
  3249  011A  00BA               	movwf	___fladd@b+3
  3250  011B  30E3               	movlw	227
  3251  011C  00B9               	movwf	___fladd@b+2
  3252  011D  3000               	movlw	0
  3253  011E  00B8               	movwf	___fladd@b+1
  3254  011F  3000               	movlw	0
  3255  0120  00B7               	movwf	___fladd@b
  3256  0121  1683               	bsf	3,5	;RP0=1, select bank1
  3257  0122  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3258  0123  1283               	bcf	3,5	;RP0=0, select bank0
  3259  0124  00BE               	movwf	___fladd@a+3
  3260  0125  1683               	bsf	3,5	;RP0=1, select bank1
  3261  0126  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3262  0127  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0128  00BD               	movwf	___fladd@a+2
  3264  0129  1683               	bsf	3,5	;RP0=1, select bank1
  3265  012A  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3266  012B  1283               	bcf	3,5	;RP0=0, select bank0
  3267  012C  00BC               	movwf	___fladd@a+1
  3268  012D  1683               	bsf	3,5	;RP0=1, select bank1
  3269  012E  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3270  012F  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0130  00BB               	movwf	___fladd@a
  3272  0131  120A  158A  22DE  120A  118A  	fcall	___fladd
  3273  0136  083A               	movf	?___fladd+3,w
  3274  0137  1683               	bsf	3,5	;RP0=1, select bank1
  3275  0138  00A3               	movwf	(_MediaPlacaVaccum$2372+3)^(0+128)
  3276  0139  1283               	bcf	3,5	;RP0=0, select bank0
  3277  013A  0839               	movf	?___fladd+2,w
  3278  013B  1683               	bsf	3,5	;RP0=1, select bank1
  3279  013C  00A2               	movwf	(_MediaPlacaVaccum$2372+2)^(0+128)
  3280  013D  1283               	bcf	3,5	;RP0=0, select bank0
  3281  013E  0838               	movf	?___fladd+1,w
  3282  013F  1683               	bsf	3,5	;RP0=1, select bank1
  3283  0140  00A1               	movwf	(_MediaPlacaVaccum$2372+1)^(0+128)
  3284  0141  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0142  0837               	movf	?___fladd,w
  3286  0143  1683               	bsf	3,5	;RP0=1, select bank1
  3287  0144  00A0               	movwf	_MediaPlacaVaccum$2372^(0+128)
  3288                           
  3289                           ;SlaveLiofilizadorVer1.c: 771:           {;SlaveLiofilizadorVer1.c: 772:           Vaccu
      +                          m0 =1023.0-(Temp-454.0);
  3290  0145  0823               	movf	(_MediaPlacaVaccum$2372+3)^(0+128),w
  3291  0146  1283               	bcf	3,5	;RP0=0, select bank0
  3292  0147  00CE               	movwf	___flsub@a+3
  3293  0148  1683               	bsf	3,5	;RP0=1, select bank1
  3294  0149  0822               	movf	(_MediaPlacaVaccum$2372+2)^(0+128),w
  3295  014A  1283               	bcf	3,5	;RP0=0, select bank0
  3296  014B  00CD               	movwf	___flsub@a+2
  3297  014C  1683               	bsf	3,5	;RP0=1, select bank1
  3298  014D  0821               	movf	(_MediaPlacaVaccum$2372+1)^(0+128),w
  3299  014E  1283               	bcf	3,5	;RP0=0, select bank0
  3300  014F  00CC               	movwf	___flsub@a+1
  3301  0150  1683               	bsf	3,5	;RP0=1, select bank1
  3302  0151  0820               	movf	_MediaPlacaVaccum$2372^(0+128),w
  3303  0152  1283               	bcf	3,5	;RP0=0, select bank0
  3304  0153  00CB               	movwf	___flsub@a
  3305  0154  3044               	movlw	68
  3306  0155  00D2               	movwf	___flsub@b+3
  3307  0156  307F               	movlw	127
  3308  0157  00D1               	movwf	___flsub@b+2
  3309  0158  30C0               	movlw	192
  3310  0159  00D0               	movwf	___flsub@b+1
  3311  015A  3000               	movlw	0
  3312  015B  00CF               	movwf	___flsub@b
  3313  015C  160A  158A  219F  120A  118A  	fcall	___flsub
  3314  0161  084E               	movf	?___flsub+3,w
  3315  0162  1683               	bsf	3,5	;RP0=1, select bank1
  3316  0163  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3317  0164  1283               	bcf	3,5	;RP0=0, select bank0
  3318  0165  084D               	movf	?___flsub+2,w
  3319  0166  1683               	bsf	3,5	;RP0=1, select bank1
  3320  0167  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3321  0168  1283               	bcf	3,5	;RP0=0, select bank0
  3322  0169  084C               	movf	?___flsub+1,w
  3323  016A  1683               	bsf	3,5	;RP0=1, select bank1
  3324  016B  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3325  016C  1283               	bcf	3,5	;RP0=0, select bank0
  3326  016D  084B               	movf	?___flsub,w
  3327  016E  1683               	bsf	3,5	;RP0=1, select bank1
  3328  016F  00CD               	movwf	_Vaccum0^(0+128)
  3329                           
  3330                           ;SlaveLiofilizadorVer1.c: 773:           Vaccum0*=1.9550342131;
  3331  0170  303F               	movlw	63
  3332  0171  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0172  00CE               	movwf	___flmul@b+3
  3334  0173  30FA               	movlw	250
  3335  0174  00CD               	movwf	___flmul@b+2
  3336  0175  303E               	movlw	62
  3337  0176  00CC               	movwf	___flmul@b+1
  3338  0177  3090               	movlw	144
  3339  0178  00CB               	movwf	___flmul@b
  3340  0179  1683               	bsf	3,5	;RP0=1, select bank1
  3341  017A  0850               	movf	(_Vaccum0+3)^(0+128),w
  3342  017B  1283               	bcf	3,5	;RP0=0, select bank0
  3343  017C  00D2               	movwf	___flmul@a+3
  3344  017D  1683               	bsf	3,5	;RP0=1, select bank1
  3345  017E  084F               	movf	(_Vaccum0+2)^(0+128),w
  3346  017F  1283               	bcf	3,5	;RP0=0, select bank0
  3347  0180  00D1               	movwf	___flmul@a+2
  3348  0181  1683               	bsf	3,5	;RP0=1, select bank1
  3349  0182  084E               	movf	(_Vaccum0+1)^(0+128),w
  3350  0183  1283               	bcf	3,5	;RP0=0, select bank0
  3351  0184  00D0               	movwf	___flmul@a+1
  3352  0185  1683               	bsf	3,5	;RP0=1, select bank1
  3353  0186  084D               	movf	_Vaccum0^(0+128),w
  3354  0187  1283               	bcf	3,5	;RP0=0, select bank0
  3355  0188  00CF               	movwf	___flmul@a
  3356  0189  120A  158A  250B  120A  118A  	fcall	___flmul
  3357  018E  084E               	movf	?___flmul+3,w
  3358  018F  1683               	bsf	3,5	;RP0=1, select bank1
  3359  0190  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3360  0191  1283               	bcf	3,5	;RP0=0, select bank0
  3361  0192  084D               	movf	?___flmul+2,w
  3362  0193  1683               	bsf	3,5	;RP0=1, select bank1
  3363  0194  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3364  0195  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0196  084C               	movf	?___flmul+1,w
  3366  0197  1683               	bsf	3,5	;RP0=1, select bank1
  3367  0198  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3368  0199  1283               	bcf	3,5	;RP0=0, select bank0
  3369  019A  084B               	movf	?___flmul,w
  3370  019B  1683               	bsf	3,5	;RP0=1, select bank1
  3371  019C  00CD               	movwf	_Vaccum0^(0+128)
  3372                           
  3373                           ;SlaveLiofilizadorVer1.c: 774:           Vaccum0-=((Temp-454.0)*5.2);
  3374  019D  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3375  019E  1283               	bcf	3,5	;RP0=0, select bank0
  3376  019F  00BE               	movwf	___fladd@a+3
  3377  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  3378  01A1  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3379  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  3380  01A3  00BD               	movwf	___fladd@a+2
  3381  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  3382  01A5  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3383  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  3384  01A7  00BC               	movwf	___fladd@a+1
  3385  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  3386  01A9  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3387  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  3388  01AB  00BB               	movwf	___fladd@a
  3389  01AC  30C3               	movlw	195
  3390  01AD  00BA               	movwf	___fladd@b+3
  3391  01AE  30E3               	movlw	227
  3392  01AF  00B9               	movwf	___fladd@b+2
  3393  01B0  3000               	movlw	0
  3394  01B1  00B8               	movwf	___fladd@b+1
  3395  01B2  3000               	movlw	0
  3396  01B3  00B7               	movwf	___fladd@b
  3397  01B4  120A  158A  22DE  120A  118A  	fcall	___fladd
  3398  01B9  083A               	movf	?___fladd+3,w
  3399  01BA  00D2               	movwf	___flmul@a+3
  3400  01BB  0839               	movf	?___fladd+2,w
  3401  01BC  00D1               	movwf	___flmul@a+2
  3402  01BD  0838               	movf	?___fladd+1,w
  3403  01BE  00D0               	movwf	___flmul@a+1
  3404  01BF  0837               	movf	?___fladd,w
  3405  01C0  00CF               	movwf	___flmul@a
  3406  01C1  3040               	movlw	64
  3407  01C2  00CE               	movwf	___flmul@b+3
  3408  01C3  30A6               	movlw	166
  3409  01C4  00CD               	movwf	___flmul@b+2
  3410  01C5  3066               	movlw	102
  3411  01C6  00CC               	movwf	___flmul@b+1
  3412  01C7  3066               	movlw	102
  3413  01C8  2A78               	goto	L3
  3414  01C9                     l5103:	
  3415                           ;SlaveLiofilizadorVer1.c: 775:           }
  3416                           
  3417                           ;SlaveLiofilizadorVer1.c: 774:           Vaccum0-=((Temp-454.0)*5.2);
  3418                           
  3419                           
  3420                           ;SlaveLiofilizadorVer1.c: 777:           {;SlaveLiofilizadorVer1.c: 778:           Vaccu
      +                          m0 =1023.0-(Temp-616.0);
  3421  01C9  30C4               	movlw	196
  3422  01CA  00BA               	movwf	___fladd@b+3
  3423  01CB  301A               	movlw	26
  3424  01CC  00B9               	movwf	___fladd@b+2
  3425  01CD  3000               	movlw	0
  3426  01CE  00B8               	movwf	___fladd@b+1
  3427  01CF  3000               	movlw	0
  3428  01D0  00B7               	movwf	___fladd@b
  3429  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  3430  01D2  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3431  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  3432  01D4  00BE               	movwf	___fladd@a+3
  3433  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  3434  01D6  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3435  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  3436  01D8  00BD               	movwf	___fladd@a+2
  3437  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  3438  01DA  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3439  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  3440  01DC  00BC               	movwf	___fladd@a+1
  3441  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  3442  01DE  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3443  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  3444  01E0  00BB               	movwf	___fladd@a
  3445  01E1  120A  158A  22DE  120A  118A  	fcall	___fladd
  3446  01E6  083A               	movf	?___fladd+3,w
  3447  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  3448  01E8  00A3               	movwf	(_MediaPlacaVaccum$2372+3)^(0+128)
  3449  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  3450  01EA  0839               	movf	?___fladd+2,w
  3451  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  3452  01EC  00A2               	movwf	(_MediaPlacaVaccum$2372+2)^(0+128)
  3453  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  3454  01EE  0838               	movf	?___fladd+1,w
  3455  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  3456  01F0  00A1               	movwf	(_MediaPlacaVaccum$2372+1)^(0+128)
  3457  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  3458  01F2  0837               	movf	?___fladd,w
  3459  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  3460  01F4  00A0               	movwf	_MediaPlacaVaccum$2372^(0+128)
  3461                           
  3462                           ;SlaveLiofilizadorVer1.c: 777:           {;SlaveLiofilizadorVer1.c: 778:           Vaccu
      +                          m0 =1023.0-(Temp-616.0);
  3463  01F5  0823               	movf	(_MediaPlacaVaccum$2372+3)^(0+128),w
  3464  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  3465  01F7  00CE               	movwf	___flsub@a+3
  3466  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  3467  01F9  0822               	movf	(_MediaPlacaVaccum$2372+2)^(0+128),w
  3468  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  3469  01FB  00CD               	movwf	___flsub@a+2
  3470  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  3471  01FD  0821               	movf	(_MediaPlacaVaccum$2372+1)^(0+128),w
  3472  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  3473  01FF  00CC               	movwf	___flsub@a+1
  3474  0200  1683               	bsf	3,5	;RP0=1, select bank1
  3475  0201  0820               	movf	_MediaPlacaVaccum$2372^(0+128),w
  3476  0202  1283               	bcf	3,5	;RP0=0, select bank0
  3477  0203  00CB               	movwf	___flsub@a
  3478  0204  3044               	movlw	68
  3479  0205  00D2               	movwf	___flsub@b+3
  3480  0206  307F               	movlw	127
  3481  0207  00D1               	movwf	___flsub@b+2
  3482  0208  30C0               	movlw	192
  3483  0209  00D0               	movwf	___flsub@b+1
  3484  020A  3000               	movlw	0
  3485  020B  00CF               	movwf	___flsub@b
  3486  020C  160A  158A  219F  120A  118A  	fcall	___flsub
  3487  0211  084E               	movf	?___flsub+3,w
  3488  0212  1683               	bsf	3,5	;RP0=1, select bank1
  3489  0213  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3490  0214  1283               	bcf	3,5	;RP0=0, select bank0
  3491  0215  084D               	movf	?___flsub+2,w
  3492  0216  1683               	bsf	3,5	;RP0=1, select bank1
  3493  0217  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3494  0218  1283               	bcf	3,5	;RP0=0, select bank0
  3495  0219  084C               	movf	?___flsub+1,w
  3496  021A  1683               	bsf	3,5	;RP0=1, select bank1
  3497  021B  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3498  021C  1283               	bcf	3,5	;RP0=0, select bank0
  3499  021D  084B               	movf	?___flsub,w
  3500  021E  1683               	bsf	3,5	;RP0=1, select bank1
  3501  021F  00CD               	movwf	_Vaccum0^(0+128)
  3502                           
  3503                           ;SlaveLiofilizadorVer1.c: 779:           Vaccum0*=0.828934506;
  3504  0220  303F               	movlw	63
  3505  0221  1283               	bcf	3,5	;RP0=0, select bank0
  3506  0222  00CE               	movwf	___flmul@b+3
  3507  0223  3054               	movlw	84
  3508  0224  00CD               	movwf	___flmul@b+2
  3509  0225  3035               	movlw	53
  3510  0226  00CC               	movwf	___flmul@b+1
  3511  0227  300D               	movlw	13
  3512  0228  00CB               	movwf	___flmul@b
  3513  0229  1683               	bsf	3,5	;RP0=1, select bank1
  3514  022A  0850               	movf	(_Vaccum0+3)^(0+128),w
  3515  022B  1283               	bcf	3,5	;RP0=0, select bank0
  3516  022C  00D2               	movwf	___flmul@a+3
  3517  022D  1683               	bsf	3,5	;RP0=1, select bank1
  3518  022E  084F               	movf	(_Vaccum0+2)^(0+128),w
  3519  022F  1283               	bcf	3,5	;RP0=0, select bank0
  3520  0230  00D1               	movwf	___flmul@a+2
  3521  0231  1683               	bsf	3,5	;RP0=1, select bank1
  3522  0232  084E               	movf	(_Vaccum0+1)^(0+128),w
  3523  0233  1283               	bcf	3,5	;RP0=0, select bank0
  3524  0234  00D0               	movwf	___flmul@a+1
  3525  0235  1683               	bsf	3,5	;RP0=1, select bank1
  3526  0236  084D               	movf	_Vaccum0^(0+128),w
  3527  0237  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0238  00CF               	movwf	___flmul@a
  3529  0239  120A  158A  250B  120A  118A  	fcall	___flmul
  3530  023E  084E               	movf	?___flmul+3,w
  3531  023F  1683               	bsf	3,5	;RP0=1, select bank1
  3532  0240  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3533  0241  1283               	bcf	3,5	;RP0=0, select bank0
  3534  0242  084D               	movf	?___flmul+2,w
  3535  0243  1683               	bsf	3,5	;RP0=1, select bank1
  3536  0244  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3537  0245  1283               	bcf	3,5	;RP0=0, select bank0
  3538  0246  084C               	movf	?___flmul+1,w
  3539  0247  1683               	bsf	3,5	;RP0=1, select bank1
  3540  0248  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3541  0249  1283               	bcf	3,5	;RP0=0, select bank0
  3542  024A  084B               	movf	?___flmul,w
  3543  024B  1683               	bsf	3,5	;RP0=1, select bank1
  3544  024C  00CD               	movwf	_Vaccum0^(0+128)
  3545                           
  3546                           ;SlaveLiofilizadorVer1.c: 780:           Vaccum0-=((Temp-616.0)*2.34);
  3547  024D  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3548  024E  1283               	bcf	3,5	;RP0=0, select bank0
  3549  024F  00BE               	movwf	___fladd@a+3
  3550  0250  1683               	bsf	3,5	;RP0=1, select bank1
  3551  0251  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3552  0252  1283               	bcf	3,5	;RP0=0, select bank0
  3553  0253  00BD               	movwf	___fladd@a+2
  3554  0254  1683               	bsf	3,5	;RP0=1, select bank1
  3555  0255  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3556  0256  1283               	bcf	3,5	;RP0=0, select bank0
  3557  0257  00BC               	movwf	___fladd@a+1
  3558  0258  1683               	bsf	3,5	;RP0=1, select bank1
  3559  0259  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3560  025A  1283               	bcf	3,5	;RP0=0, select bank0
  3561  025B  00BB               	movwf	___fladd@a
  3562  025C  30C4               	movlw	196
  3563  025D  00BA               	movwf	___fladd@b+3
  3564  025E  301A               	movlw	26
  3565  025F  00B9               	movwf	___fladd@b+2
  3566  0260  3000               	movlw	0
  3567  0261  00B8               	movwf	___fladd@b+1
  3568  0262  3000               	movlw	0
  3569  0263  00B7               	movwf	___fladd@b
  3570  0264  120A  158A  22DE  120A  118A  	fcall	___fladd
  3571  0269  083A               	movf	?___fladd+3,w
  3572  026A  00D2               	movwf	___flmul@a+3
  3573  026B  0839               	movf	?___fladd+2,w
  3574  026C  00D1               	movwf	___flmul@a+2
  3575  026D  0838               	movf	?___fladd+1,w
  3576  026E  00D0               	movwf	___flmul@a+1
  3577  026F  0837               	movf	?___fladd,w
  3578  0270  00CF               	movwf	___flmul@a
  3579  0271  3040               	movlw	64
  3580  0272  00CE               	movwf	___flmul@b+3
  3581  0273  3015               	movlw	21
  3582  0274  00CD               	movwf	___flmul@b+2
  3583  0275  30C2               	movlw	194
  3584  0276  00CC               	movwf	___flmul@b+1
  3585  0277  308F               	movlw	143
  3586  0278                     L3:
  3587  0278  00CB               	movwf	___flmul@b
  3588  0279  120A  158A  250B  120A  118A  	fcall	___flmul
  3589  027E  084E               	movf	?___flmul+3,w
  3590  027F  1683               	bsf	3,5	;RP0=1, select bank1
  3591  0280  00A3               	movwf	(_MediaPlacaVaccum$2372+3)^(0+128)
  3592  0281  1283               	bcf	3,5	;RP0=0, select bank0
  3593  0282  084D               	movf	?___flmul+2,w
  3594  0283  1683               	bsf	3,5	;RP0=1, select bank1
  3595  0284  00A2               	movwf	(_MediaPlacaVaccum$2372+2)^(0+128)
  3596  0285  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0286  084C               	movf	?___flmul+1,w
  3598  0287  1683               	bsf	3,5	;RP0=1, select bank1
  3599  0288  00A1               	movwf	(_MediaPlacaVaccum$2372+1)^(0+128)
  3600  0289  1283               	bcf	3,5	;RP0=0, select bank0
  3601  028A  084B               	movf	?___flmul,w
  3602  028B  1683               	bsf	3,5	;RP0=1, select bank1
  3603  028C  00A0               	movwf	_MediaPlacaVaccum$2372^(0+128)
  3604                           
  3605                           ;SlaveLiofilizadorVer1.c: 780:           Vaccum0-=((Temp-616.0)*2.34);
  3606  028D  0823               	movf	(_MediaPlacaVaccum$2372+3)^(0+128),w
  3607  028E  1283               	bcf	3,5	;RP0=0, select bank0
  3608  028F  00CE               	movwf	___flsub@a+3
  3609  0290  1683               	bsf	3,5	;RP0=1, select bank1
  3610  0291  0822               	movf	(_MediaPlacaVaccum$2372+2)^(0+128),w
  3611  0292  1283               	bcf	3,5	;RP0=0, select bank0
  3612  0293  00CD               	movwf	___flsub@a+2
  3613  0294  1683               	bsf	3,5	;RP0=1, select bank1
  3614  0295  0821               	movf	(_MediaPlacaVaccum$2372+1)^(0+128),w
  3615  0296  1283               	bcf	3,5	;RP0=0, select bank0
  3616  0297  00CC               	movwf	___flsub@a+1
  3617  0298  1683               	bsf	3,5	;RP0=1, select bank1
  3618  0299  0820               	movf	_MediaPlacaVaccum$2372^(0+128),w
  3619  029A  1283               	bcf	3,5	;RP0=0, select bank0
  3620  029B  00CB               	movwf	___flsub@a
  3621  029C  1683               	bsf	3,5	;RP0=1, select bank1
  3622  029D  0850               	movf	(_Vaccum0+3)^(0+128),w
  3623  029E  1283               	bcf	3,5	;RP0=0, select bank0
  3624  029F  00D2               	movwf	___flsub@b+3
  3625  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  3626  02A1  084F               	movf	(_Vaccum0+2)^(0+128),w
  3627  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  3628  02A3  00D1               	movwf	___flsub@b+2
  3629  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  3630  02A5  084E               	movf	(_Vaccum0+1)^(0+128),w
  3631  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  3632  02A7  00D0               	movwf	___flsub@b+1
  3633  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  3634  02A9  084D               	movf	_Vaccum0^(0+128),w
  3635  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  3636  02AB  00CF               	movwf	___flsub@b
  3637  02AC  160A  158A  219F  120A  118A  	fcall	___flsub
  3638  02B1  084E               	movf	?___flsub+3,w
  3639  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  3640  02B3  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3641  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  3642  02B5  084D               	movf	?___flsub+2,w
  3643  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  3644  02B7  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3645  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  3646  02B9  084C               	movf	?___flsub+1,w
  3647  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  3648  02BB  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3649  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  3650  02BD  084B               	movf	?___flsub,w
  3651  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  3652  02BF  00CD               	movwf	_Vaccum0^(0+128)
  3653                           
  3654                           ;SlaveLiofilizadorVer1.c: 784:        if(Vaccum0>2000)Vaccum0=2000;
  3655  02C0  3044               	movlw	68
  3656  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  3657  02C2  00A3               	movwf	___flge@ff1+3
  3658  02C3  30FA               	movlw	250
  3659  02C4  00A2               	movwf	___flge@ff1+2
  3660  02C5  3000               	movlw	0
  3661  02C6  00A1               	movwf	___flge@ff1+1
  3662  02C7  3000               	movlw	0
  3663  02C8  00A0               	movwf	___flge@ff1
  3664  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  3665  02CA  0850               	movf	(_Vaccum0+3)^(0+128),w
  3666  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  3667  02CC  00A7               	movwf	___flge@ff2+3
  3668  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  3669  02CE  084F               	movf	(_Vaccum0+2)^(0+128),w
  3670  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  3671  02D0  00A6               	movwf	___flge@ff2+2
  3672  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  3673  02D2  084E               	movf	(_Vaccum0+1)^(0+128),w
  3674  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  3675  02D4  00A5               	movwf	___flge@ff2+1
  3676  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  3677  02D6  084D               	movf	_Vaccum0^(0+128),w
  3678  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  3679  02D8  00A4               	movwf	___flge@ff2
  3680  02D9  160A  158A  276D  120A  118A  	fcall	___flge
  3681  02DE  1803               	btfsc	3,0
  3682  02DF  0008               	return
  3683  02E0  3044               	movlw	68
  3684  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  3685  02E2  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3686  02E3  30FA               	movlw	250
  3687  02E4  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3688  02E5  3000               	movlw	0
  3689  02E6  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3690  02E7  3000               	movlw	0
  3691  02E8  00CD               	movwf	_Vaccum0^(0+128)
  3692  02E9  0008               	return
  3693  02EA                     l439:	
  3694                           ;SlaveLiofilizadorVer1.c: 795:      else
  3695                           
  3696                           
  3697                           ;SlaveLiofilizadorVer1.c: 796:        {;SlaveLiofilizadorVer1.c: 797:        ADCON1bits.
      +                          VCFG0=0;
  3698  02EA  121F               	bcf	31,4	;volatile
  3699                           
  3700                           ;SlaveLiofilizadorVer1.c: 798:        ADCON1bits.VCFG1=0;
  3701  02EB  129F               	bcf	31,5	;volatile
  3702                           
  3703                           ;SlaveLiofilizadorVer1.c: 799:        ADCON0bits.CHS=canal;
  3704  02EC  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3705  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  3706  02EE  00E5               	movwf	??_MediaPlacaVaccum
  3707  02EF  0DE5               	rlf	??_MediaPlacaVaccum,f
  3708  02F0  0DE5               	rlf	??_MediaPlacaVaccum,f
  3709  02F1  081F               	movf	31,w	;volatile
  3710  02F2  0665               	xorwf	??_MediaPlacaVaccum,w
  3711  02F3  39C3               	andlw	-61
  3712  02F4  0665               	xorwf	??_MediaPlacaVaccum,w
  3713  02F5  009F               	movwf	31	;volatile
  3714                           
  3715                           ;SlaveLiofilizadorVer1.c: 800:        my_delay_ms(1);
  3716  02F6  3000               	movlw	0
  3717  02F7  00A3               	movwf	my_delay_ms@time+3
  3718  02F8  3000               	movlw	0
  3719  02F9  00A2               	movwf	my_delay_ms@time+2
  3720  02FA  3000               	movlw	0
  3721  02FB  00A1               	movwf	my_delay_ms@time+1
  3722  02FC  3001               	movlw	1
  3723  02FD  00A0               	movwf	my_delay_ms@time
  3724  02FE  160A  158A  2411  120A  118A  	fcall	_my_delay_ms
  3725                           
  3726                           ;SlaveLiofilizadorVer1.c: 801:        Temp=0;
  3727  0303  3000               	movlw	0
  3728  0304  1683               	bsf	3,5	;RP0=1, select bank1
  3729  0305  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3730  0306  3000               	movlw	0
  3731  0307  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3732  0308  3000               	movlw	0
  3733  0309  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3734  030A  3000               	movlw	0
  3735  030B  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3736                           
  3737                           ;SlaveLiofilizadorVer1.c: 803:        for(i=1;i<15;i++)
  3738  030C  3001               	movlw	1
  3739  030D  00A5               	movwf	MediaPlacaVaccum@i^(0+128)
  3740  030E  3000               	movlw	0
  3741  030F  00A6               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3742  0310                     l5121:
  3743                           
  3744                           ;SlaveLiofilizadorVer1.c: 804:            {;SlaveLiofilizadorVer1.c: 807:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3745  0310  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3746  0311  160A  158A  25D1  120A  118A  	fcall	_ADC_Media_10bits
  3747  0316  0831               	movf	?_ADC_Media_10bits+3,w
  3748  0317  00BA               	movwf	___fladd@b+3
  3749  0318  0830               	movf	?_ADC_Media_10bits+2,w
  3750  0319  00B9               	movwf	___fladd@b+2
  3751  031A  082F               	movf	?_ADC_Media_10bits+1,w
  3752  031B  00B8               	movwf	___fladd@b+1
  3753  031C  082E               	movf	?_ADC_Media_10bits,w
  3754  031D  00B7               	movwf	___fladd@b
  3755  031E  1683               	bsf	3,5	;RP0=1, select bank1
  3756  031F  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3757  0320  1283               	bcf	3,5	;RP0=0, select bank0
  3758  0321  00BE               	movwf	___fladd@a+3
  3759  0322  1683               	bsf	3,5	;RP0=1, select bank1
  3760  0323  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3761  0324  1283               	bcf	3,5	;RP0=0, select bank0
  3762  0325  00BD               	movwf	___fladd@a+2
  3763  0326  1683               	bsf	3,5	;RP0=1, select bank1
  3764  0327  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3765  0328  1283               	bcf	3,5	;RP0=0, select bank0
  3766  0329  00BC               	movwf	___fladd@a+1
  3767  032A  1683               	bsf	3,5	;RP0=1, select bank1
  3768  032B  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3769  032C  1283               	bcf	3,5	;RP0=0, select bank0
  3770  032D  00BB               	movwf	___fladd@a
  3771  032E  120A  158A  22DE  120A  118A  	fcall	___fladd
  3772  0333  083A               	movf	?___fladd+3,w
  3773  0334  1683               	bsf	3,5	;RP0=1, select bank1
  3774  0335  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3775  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3776  0337  0839               	movf	?___fladd+2,w
  3777  0338  1683               	bsf	3,5	;RP0=1, select bank1
  3778  0339  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3779  033A  1283               	bcf	3,5	;RP0=0, select bank0
  3780  033B  0838               	movf	?___fladd+1,w
  3781  033C  1683               	bsf	3,5	;RP0=1, select bank1
  3782  033D  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3783  033E  1283               	bcf	3,5	;RP0=0, select bank0
  3784  033F  0837               	movf	?___fladd,w
  3785  0340  1683               	bsf	3,5	;RP0=1, select bank1
  3786  0341  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3787                           
  3788                           ;SlaveLiofilizadorVer1.c: 808:            if(Package_Usart_is_for_me()==1) break;
  3789  0342  160A  158A  214B  120A  118A  	fcall	_Package_Usart_is_for_me
  3790  0347  3A01               	xorlw	1
  3791  0348  1903               	btfsc	3,2
  3792  0349  2B58               	goto	l5129
  3793                           
  3794                           ;SlaveLiofilizadorVer1.c: 809:            }
  3795  034A  3001               	movlw	1
  3796  034B  1683               	bsf	3,5	;RP0=1, select bank1
  3797  034C  07A5               	addwf	MediaPlacaVaccum@i^(0+128),f
  3798  034D  1803               	skipnc
  3799  034E  0AA6               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3800  034F  3000               	movlw	0
  3801  0350  07A6               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3802  0351  3000               	movlw	0
  3803  0352  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3804  0353  300F               	movlw	15
  3805  0354  1903               	skipnz
  3806  0355  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3807  0356  1C03               	skipc
  3808  0357  2B10               	goto	l5121
  3809  0358                     l5129:
  3810                           
  3811                           ;SlaveLiofilizadorVer1.c: 810:         if(i<10)
  3812  0358  3000               	movlw	0
  3813  0359  1683               	bsf	3,5	;RP0=1, select bank1
  3814  035A  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3815  035B  300A               	movlw	10
  3816  035C  1903               	skipnz
  3817  035D  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3818  035E  1C03               	btfss	3,0
  3819  035F  0008               	return
  3820                           
  3821                           ;SlaveLiofilizadorVer1.c: 816:        if(i==15)
  3822  0360  300F               	movlw	15
  3823  0361  0625               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3824  0362  0426               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3825  0363  1D03               	btfss	3,2
  3826  0364  2B6F               	goto	l5137
  3827                           
  3828                           ;SlaveLiofilizadorVer1.c: 817:          Temp/=(i-1);
  3829  0365  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3830  0366  3EFF               	addlw	255
  3831  0367  1283               	bcf	3,5	;RP0=0, select bank0
  3832  0368  00A0               	movwf	___xxtofl@val
  3833  0369  1683               	bsf	3,5	;RP0=1, select bank1
  3834  036A  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3835  036B  1803               	skipnc
  3836  036C  3E01               	addlw	1
  3837  036D  3EFF               	addlw	255
  3838  036E  2B74               	goto	L4
  3839  036F                     l5137:
  3840                           
  3841                           ;SlaveLiofilizadorVer1.c: 819:          Temp/=(i);
  3842  036F  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3843  0370  1283               	bcf	3,5	;RP0=0, select bank0
  3844  0371  00A0               	movwf	___xxtofl@val
  3845  0372  1683               	bsf	3,5	;RP0=1, select bank1
  3846  0373  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3847  0374                     L4:
  3848  0374  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0375  00A1               	movwf	___xxtofl@val+1
  3850  0376  01A2               	clrf	___xxtofl@val+2
  3851  0377  01A3               	clrf	___xxtofl@val+3
  3852  0378  3000               	movlw	0
  3853  0379  120A  118A  274B  120A  118A  	fcall	___xxtofl
  3854  037E  0823               	movf	?___xxtofl+3,w
  3855  037F  00B1               	movwf	___fldiv@a+3
  3856  0380  0822               	movf	?___xxtofl+2,w
  3857  0381  00B0               	movwf	___fldiv@a+2
  3858  0382  0821               	movf	?___xxtofl+1,w
  3859  0383  00AF               	movwf	___fldiv@a+1
  3860  0384  0820               	movf	?___xxtofl,w
  3861  0385  00AE               	movwf	___fldiv@a
  3862  0386  1683               	bsf	3,5	;RP0=1, select bank1
  3863  0387  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3864  0388  1283               	bcf	3,5	;RP0=0, select bank0
  3865  0389  00B5               	movwf	___fldiv@b+3
  3866  038A  1683               	bsf	3,5	;RP0=1, select bank1
  3867  038B  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3868  038C  1283               	bcf	3,5	;RP0=0, select bank0
  3869  038D  00B4               	movwf	___fldiv@b+2
  3870  038E  1683               	bsf	3,5	;RP0=1, select bank1
  3871  038F  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3872  0390  1283               	bcf	3,5	;RP0=0, select bank0
  3873  0391  00B3               	movwf	___fldiv@b+1
  3874  0392  1683               	bsf	3,5	;RP0=1, select bank1
  3875  0393  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3876  0394  1283               	bcf	3,5	;RP0=0, select bank0
  3877  0395  00B2               	movwf	___fldiv@b
  3878  0396  120A  158A  213D  120A  118A  	fcall	___fldiv
  3879  039B  0831               	movf	?___fldiv+3,w
  3880  039C  1683               	bsf	3,5	;RP0=1, select bank1
  3881  039D  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3882  039E  1283               	bcf	3,5	;RP0=0, select bank0
  3883  039F  0830               	movf	?___fldiv+2,w
  3884  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  3885  03A1  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3886  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3887  03A3  082F               	movf	?___fldiv+1,w
  3888  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  3889  03A5  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3890  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  3891  03A7  082E               	movf	?___fldiv,w
  3892  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  3893  03A9  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3894                           
  3895                           ;SlaveLiofilizadorVer1.c: 821:         Tensao1 =Temp*0.558296;
  3896  03AA  303F               	movlw	63
  3897  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  3898  03AC  00CE               	movwf	___flmul@b+3
  3899  03AD  300E               	movlw	14
  3900  03AE  00CD               	movwf	___flmul@b+2
  3901  03AF  30EC               	movlw	236
  3902  03B0  00CC               	movwf	___flmul@b+1
  3903  03B1  307D               	movlw	125
  3904  03B2  00CB               	movwf	___flmul@b
  3905  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  3906  03B4  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3907  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  3908  03B6  00D2               	movwf	___flmul@a+3
  3909  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  3910  03B8  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3911  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  3912  03BA  00D1               	movwf	___flmul@a+2
  3913  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  3914  03BC  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3915  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  3916  03BE  00D0               	movwf	___flmul@a+1
  3917  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  3918  03C0  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3919  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  3920  03C2  00CF               	movwf	___flmul@a
  3921  03C3  120A  158A  250B  120A  118A  	fcall	___flmul
  3922  03C8  084E               	movf	?___flmul+3,w
  3923  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  3924  03CA  00CC               	movwf	(_Tensao1+3)^(0+128)
  3925  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  3926  03CC  084D               	movf	?___flmul+2,w
  3927  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  3928  03CE  00CB               	movwf	(_Tensao1+2)^(0+128)
  3929  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3930  03D0  084C               	movf	?___flmul+1,w
  3931  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  3932  03D2  00CA               	movwf	(_Tensao1+1)^(0+128)
  3933  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  3934  03D4  084B               	movf	?___flmul,w
  3935  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  3936  03D6  00C9               	movwf	_Tensao1^(0+128)
  3937                           
  3938                           ;SlaveLiofilizadorVer1.c: 822:         if(Tensao1<15) Tensao1=0;
  3939  03D7  084C               	movf	(_Tensao1+3)^(0+128),w
  3940  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  3941  03D9  00A3               	movwf	___flge@ff1+3
  3942  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  3943  03DB  084B               	movf	(_Tensao1+2)^(0+128),w
  3944  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  3945  03DD  00A2               	movwf	___flge@ff1+2
  3946  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  3947  03DF  084A               	movf	(_Tensao1+1)^(0+128),w
  3948  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  3949  03E1  00A1               	movwf	___flge@ff1+1
  3950  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  3951  03E3  0849               	movf	_Tensao1^(0+128),w
  3952  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  3953  03E5  00A0               	movwf	___flge@ff1
  3954  03E6  3041               	movlw	65
  3955  03E7  00A7               	movwf	___flge@ff2+3
  3956  03E8  3070               	movlw	112
  3957  03E9  00A6               	movwf	___flge@ff2+2
  3958  03EA  3000               	movlw	0
  3959  03EB  00A5               	movwf	___flge@ff2+1
  3960  03EC  3000               	movlw	0
  3961  03ED  00A4               	movwf	___flge@ff2
  3962  03EE  160A  158A  276D  120A  118A  	fcall	___flge
  3963  03F3  1803               	btfsc	3,0
  3964  03F4  0008               	return
  3965  03F5  3000               	movlw	0
  3966  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  3967  03F7  00CC               	movwf	(_Tensao1+3)^(0+128)
  3968  03F8  3000               	movlw	0
  3969  03F9  00CB               	movwf	(_Tensao1+2)^(0+128)
  3970  03FA  3000               	movlw	0
  3971  03FB  00CA               	movwf	(_Tensao1+1)^(0+128)
  3972  03FC  3000               	movlw	0
  3973  03FD  00C9               	movwf	_Tensao1^(0+128)
  3974  03FE  0008               	return
  3975  03FF                     __end_of_MediaPlacaVaccum:
  3976                           
  3977                           	psect	text3
  3978  199F                     __ptext3:	
  3979 ;; *************** function ___flsub *****************
  3980 ;; Defined at:
  3981 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  a               4   43[BANK0 ] void 
  3984 ;;  b               4   47[BANK0 ] void 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  4   43[BANK0 ] void 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 300/0
  3993 ;;		On exit  : 300/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3996 ;;      Params:         0       8       0       0       0
  3997 ;;      Locals:         0       0       0       0       0
  3998 ;;      Temps:          0       0       0       0       0
  3999 ;;      Totals:         0       8       0       0       0
  4000 ;;Total ram usage:        8 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:    2
  4003 ;; This function calls:
  4004 ;;		___fladd
  4005 ;; This function is called by:
  4006 ;;		_MediaPlacaVaccum
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           
  4011                           ;psect for function ___flsub
  4012  199F                     ___flsub:
  4013                           
  4014                           ;incstack = 0
  4015                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4016  199F  3080               	movlw	128
  4017  19A0  06CE               	xorwf	___flsub@a+3,f
  4018  19A1  0852               	movf	___flsub@b+3,w
  4019  19A2  00BA               	movwf	___fladd@b+3
  4020  19A3  0851               	movf	___flsub@b+2,w
  4021  19A4  00B9               	movwf	___fladd@b+2
  4022  19A5  0850               	movf	___flsub@b+1,w
  4023  19A6  00B8               	movwf	___fladd@b+1
  4024  19A7  084F               	movf	___flsub@b,w
  4025  19A8  00B7               	movwf	___fladd@b
  4026  19A9  084E               	movf	___flsub@a+3,w
  4027  19AA  00BE               	movwf	___fladd@a+3
  4028  19AB  084D               	movf	___flsub@a+2,w
  4029  19AC  00BD               	movwf	___fladd@a+2
  4030  19AD  084C               	movf	___flsub@a+1,w
  4031  19AE  00BC               	movwf	___fladd@a+1
  4032  19AF  084B               	movf	___flsub@a,w
  4033  19B0  00BB               	movwf	___fladd@a
  4034  19B1  120A  158A  22DE   	fcall	___fladd
  4035  19B4  083A               	movf	?___fladd+3,w
  4036  19B5  00CE               	movwf	?___flsub+3
  4037  19B6  0839               	movf	?___fladd+2,w
  4038  19B7  00CD               	movwf	?___flsub+2
  4039  19B8  0838               	movf	?___fladd+1,w
  4040  19B9  00CC               	movwf	?___flsub+1
  4041  19BA  0837               	movf	?___fladd,w
  4042  19BB  00CB               	movwf	?___flsub
  4043  19BC  0008               	return
  4044  19BD                     __end_of___flsub:
  4045                           
  4046                           	psect	text4
  4047  0ADE                     __ptext4:	
  4048 ;; *************** function ___fladd *****************
  4049 ;; Defined at:
  4050 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  b               4   23[BANK0 ] void 
  4053 ;;  a               4   27[BANK0 ] void 
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;  grs             1   42[BANK0 ] unsigned char 
  4056 ;;  bexp            1   41[BANK0 ] unsigned char 
  4057 ;;  aexp            1   40[BANK0 ] unsigned char 
  4058 ;;  signs           1   39[BANK0 ] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  4   23[BANK0 ] unsigned char 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0, btemp+1
  4063 ;; Tracked objects:
  4064 ;;		On entry : 300/0
  4065 ;;		On exit  : 300/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4068 ;;      Params:         0       8       0       0       0
  4069 ;;      Locals:         0       4       0       0       0
  4070 ;;      Temps:          0       8       0       0       0
  4071 ;;      Totals:         0      20       0       0       0
  4072 ;;Total ram usage:       20 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:    1
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_MediaPlacaVaccum
  4079 ;;		___flsub
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           
  4084                           ;psect for function ___fladd
  4085  0ADE                     ___fladd:
  4086                           
  4087                           ;incstack = 0
  4088                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4089  0ADE  083A               	movf	___fladd@b+3,w
  4090  0ADF  3980               	andlw	128
  4091  0AE0  00BF               	movwf	??___fladd
  4092  0AE1  083F               	movf	??___fladd,w
  4093  0AE2  00C7               	movwf	___fladd@signs
  4094  0AE3  083A               	movf	___fladd@b+3,w
  4095  0AE4  00BF               	movwf	??___fladd
  4096  0AE5  073F               	addwf	??___fladd,w
  4097  0AE6  00C0               	movwf	??___fladd+1
  4098  0AE7  0840               	movf	??___fladd+1,w
  4099  0AE8  00C9               	movwf	___fladd@bexp
  4100  0AE9  1BB9               	btfsc	___fladd@b+2,7
  4101  0AEA  1449               	bsf	___fladd@bexp,0
  4102  0AEB  0849               	movf	___fladd@bexp,w
  4103  0AEC  1903               	btfsc	3,2
  4104  0AED  2AFC               	goto	l4007
  4105  0AEE  0A49               	incf	___fladd@bexp,w
  4106  0AEF  1D03               	btfss	3,2
  4107  0AF0  2AF9               	goto	l4003
  4108  0AF1  3000               	movlw	0
  4109  0AF2  00BA               	movwf	___fladd@b+3
  4110  0AF3  3000               	movlw	0
  4111  0AF4  00B9               	movwf	___fladd@b+2
  4112  0AF5  3000               	movlw	0
  4113  0AF6  00B8               	movwf	___fladd@b+1
  4114  0AF7  3000               	movlw	0
  4115  0AF8  00B7               	movwf	___fladd@b
  4116  0AF9                     l4003:
  4117  0AF9  17B9               	bsf	___fladd@b+2,7
  4118  0AFA  01BA               	clrf	___fladd@b+3
  4119  0AFB  2B04               	goto	l4009
  4120  0AFC                     l4007:
  4121  0AFC  3000               	movlw	0
  4122  0AFD  00BA               	movwf	___fladd@b+3
  4123  0AFE  3000               	movlw	0
  4124  0AFF  00B9               	movwf	___fladd@b+2
  4125  0B00  3000               	movlw	0
  4126  0B01  00B8               	movwf	___fladd@b+1
  4127  0B02  3000               	movlw	0
  4128  0B03  00B7               	movwf	___fladd@b
  4129  0B04                     l4009:
  4130  0B04  083E               	movf	___fladd@a+3,w
  4131  0B05  3980               	andlw	128
  4132  0B06  00BF               	movwf	??___fladd
  4133  0B07  083F               	movf	??___fladd,w
  4134  0B08  00C8               	movwf	___fladd@aexp
  4135  0B09  0848               	movf	___fladd@aexp,w
  4136  0B0A  0647               	xorwf	___fladd@signs,w
  4137  0B0B  1D03               	btfss	3,2
  4138  0B0C  1747               	bsf	___fladd@signs,6
  4139  0B0D  083E               	movf	___fladd@a+3,w
  4140  0B0E  00BF               	movwf	??___fladd
  4141  0B0F  073F               	addwf	??___fladd,w
  4142  0B10  00C0               	movwf	??___fladd+1
  4143  0B11  0840               	movf	??___fladd+1,w
  4144  0B12  00C8               	movwf	___fladd@aexp
  4145  0B13  1BBD               	btfsc	___fladd@a+2,7
  4146  0B14  1448               	bsf	___fladd@aexp,0
  4147  0B15  0848               	movf	___fladd@aexp,w
  4148  0B16  1903               	btfsc	3,2
  4149  0B17  2B26               	goto	l4031
  4150  0B18  0A48               	incf	___fladd@aexp,w
  4151  0B19  1D03               	btfss	3,2
  4152  0B1A  2B23               	goto	l4027
  4153  0B1B  3000               	movlw	0
  4154  0B1C  00BE               	movwf	___fladd@a+3
  4155  0B1D  3000               	movlw	0
  4156  0B1E  00BD               	movwf	___fladd@a+2
  4157  0B1F  3000               	movlw	0
  4158  0B20  00BC               	movwf	___fladd@a+1
  4159  0B21  3000               	movlw	0
  4160  0B22  00BB               	movwf	___fladd@a
  4161  0B23                     l4027:
  4162  0B23  17BD               	bsf	___fladd@a+2,7
  4163  0B24  01BE               	clrf	___fladd@a+3
  4164  0B25  2B2E               	goto	l1290
  4165  0B26                     l4031:
  4166  0B26  3000               	movlw	0
  4167  0B27  00BE               	movwf	___fladd@a+3
  4168  0B28  3000               	movlw	0
  4169  0B29  00BD               	movwf	___fladd@a+2
  4170  0B2A  3000               	movlw	0
  4171  0B2B  00BC               	movwf	___fladd@a+1
  4172  0B2C  3000               	movlw	0
  4173  0B2D  00BB               	movwf	___fladd@a
  4174  0B2E                     l1290:
  4175  0B2E  0849               	movf	___fladd@bexp,w
  4176  0B2F  0248               	subwf	___fladd@aexp,w
  4177  0B30  1803               	skipnc
  4178  0B31  2B74               	goto	l4067
  4179  0B32  1F47               	btfss	___fladd@signs,6
  4180  0B33  2B38               	goto	l4037
  4181  0B34  3080               	movlw	128
  4182  0B35  00BF               	movwf	??___fladd
  4183  0B36  083F               	movf	??___fladd,w
  4184  0B37  06C7               	xorwf	___fladd@signs,f
  4185  0B38                     l4037:
  4186  0B38  0849               	movf	___fladd@bexp,w
  4187  0B39  00BF               	movwf	??___fladd
  4188  0B3A  083F               	movf	??___fladd,w
  4189  0B3B  00CA               	movwf	___fladd@grs
  4190  0B3C  0848               	movf	___fladd@aexp,w
  4191  0B3D  00BF               	movwf	??___fladd
  4192  0B3E  083F               	movf	??___fladd,w
  4193  0B3F  00C9               	movwf	___fladd@bexp
  4194  0B40  084A               	movf	___fladd@grs,w
  4195  0B41  00BF               	movwf	??___fladd
  4196  0B42  083F               	movf	??___fladd,w
  4197  0B43  00C8               	movwf	___fladd@aexp
  4198  0B44  0837               	movf	___fladd@b,w
  4199  0B45  00BF               	movwf	??___fladd
  4200  0B46  083F               	movf	??___fladd,w
  4201  0B47  00CA               	movwf	___fladd@grs
  4202  0B48  083B               	movf	___fladd@a,w
  4203  0B49  00BF               	movwf	??___fladd
  4204  0B4A  083F               	movf	??___fladd,w
  4205  0B4B  00B7               	movwf	___fladd@b
  4206  0B4C  084A               	movf	___fladd@grs,w
  4207  0B4D  00BF               	movwf	??___fladd
  4208  0B4E  083F               	movf	??___fladd,w
  4209  0B4F  00BB               	movwf	___fladd@a
  4210  0B50  0838               	movf	___fladd@b+1,w
  4211  0B51  00BF               	movwf	??___fladd
  4212  0B52  083F               	movf	??___fladd,w
  4213  0B53  00CA               	movwf	___fladd@grs
  4214  0B54  083C               	movf	___fladd@a+1,w
  4215  0B55  00BF               	movwf	??___fladd
  4216  0B56  083F               	movf	??___fladd,w
  4217  0B57  00B8               	movwf	___fladd@b+1
  4218  0B58  084A               	movf	___fladd@grs,w
  4219  0B59  00BF               	movwf	??___fladd
  4220  0B5A  083F               	movf	??___fladd,w
  4221  0B5B  00BC               	movwf	___fladd@a+1
  4222  0B5C  0839               	movf	___fladd@b+2,w
  4223  0B5D  00BF               	movwf	??___fladd
  4224  0B5E  083F               	movf	??___fladd,w
  4225  0B5F  00CA               	movwf	___fladd@grs
  4226  0B60  083D               	movf	___fladd@a+2,w
  4227  0B61  00BF               	movwf	??___fladd
  4228  0B62  083F               	movf	??___fladd,w
  4229  0B63  00B9               	movwf	___fladd@b+2
  4230  0B64  084A               	movf	___fladd@grs,w
  4231  0B65  00BF               	movwf	??___fladd
  4232  0B66  083F               	movf	??___fladd,w
  4233  0B67  00BD               	movwf	___fladd@a+2
  4234  0B68  083A               	movf	___fladd@b+3,w
  4235  0B69  00BF               	movwf	??___fladd
  4236  0B6A  083F               	movf	??___fladd,w
  4237  0B6B  00CA               	movwf	___fladd@grs
  4238  0B6C  083E               	movf	___fladd@a+3,w
  4239  0B6D  00BF               	movwf	??___fladd
  4240  0B6E  083F               	movf	??___fladd,w
  4241  0B6F  00BA               	movwf	___fladd@b+3
  4242  0B70  084A               	movf	___fladd@grs,w
  4243  0B71  00BF               	movwf	??___fladd
  4244  0B72  083F               	movf	??___fladd,w
  4245  0B73  00BE               	movwf	___fladd@a+3
  4246  0B74                     l4067:
  4247  0B74  01CA               	clrf	___fladd@grs
  4248  0B75  0848               	movf	___fladd@aexp,w
  4249  0B76  00BF               	movwf	??___fladd
  4250  0B77  01C0               	clrf	??___fladd+1
  4251  0B78  0840               	movf	??___fladd+1,w
  4252  0B79  00C2               	movwf	??___fladd+3
  4253  0B7A  0849               	movf	___fladd@bexp,w
  4254  0B7B  023F               	subwf	??___fladd,w
  4255  0B7C  00C1               	movwf	??___fladd+2
  4256  0B7D  1C03               	skipc
  4257  0B7E  03C2               	decf	??___fladd+3,f
  4258  0B7F  0842               	movf	??___fladd+3,w
  4259  0B80  3A80               	xorlw	128
  4260  0B81  00FF               	movwf	127
  4261  0B82  3080               	movlw	128
  4262  0B83  027F               	subwf	127,w
  4263  0B84  1D03               	skipz
  4264  0B85  2B88               	goto	u3295
  4265  0B86  301A               	movlw	26
  4266  0B87  0241               	subwf	??___fladd+2,w
  4267  0B88                     u3295:
  4268  0B88  1C03               	skipc
  4269  0B89  2BC1               	goto	l4085
  4270  0B8A  1283               	bcf	3,5	;RP0=0, select bank0
  4271  0B8B  1303               	bcf	3,6	;RP1=0, select bank0
  4272  0B8C  083A               	movf	___fladd@b+3,w
  4273  0B8D  0439               	iorwf	___fladd@b+2,w
  4274  0B8E  0438               	iorwf	___fladd@b+1,w
  4275  0B8F  0437               	iorwf	___fladd@b,w
  4276  0B90  1903               	btfsc	3,2
  4277  0B91  2B94               	goto	u3300
  4278  0B92  3001               	movlw	1
  4279  0B93  2B95               	goto	u3310
  4280  0B94                     u3300:
  4281  0B94  3000               	movlw	0
  4282  0B95                     u3310:
  4283  0B95  00BF               	movwf	??___fladd
  4284  0B96  083F               	movf	??___fladd,w
  4285  0B97  00CA               	movwf	___fladd@grs
  4286  0B98  3000               	movlw	0
  4287  0B99  00BA               	movwf	___fladd@b+3
  4288  0B9A  3000               	movlw	0
  4289  0B9B  00B9               	movwf	___fladd@b+2
  4290  0B9C  3000               	movlw	0
  4291  0B9D  00B8               	movwf	___fladd@b+1
  4292  0B9E  3000               	movlw	0
  4293  0B9F  00B7               	movwf	___fladd@b
  4294  0BA0  0848               	movf	___fladd@aexp,w
  4295  0BA1  00BF               	movwf	??___fladd
  4296  0BA2  083F               	movf	??___fladd,w
  4297  0BA3  00C9               	movwf	___fladd@bexp
  4298  0BA4  2BC7               	goto	l1294
  4299  0BA5                     l1296:
  4300  0BA5  1C4A               	btfss	___fladd@grs,0
  4301  0BA6  2BB0               	goto	l4075
  4302  0BA7  084A               	movf	___fladd@grs,w
  4303  0BA8  00BF               	movwf	??___fladd
  4304  0BA9  1003               	clrc
  4305  0BAA  0C3F               	rrf	??___fladd,w
  4306  0BAB  3801               	iorlw	1
  4307  0BAC  00C0               	movwf	??___fladd+1
  4308  0BAD  0840               	movf	??___fladd+1,w
  4309  0BAE  00CA               	movwf	___fladd@grs
  4310  0BAF  2BB2               	goto	l4077
  4311  0BB0                     l4075:
  4312  0BB0  1003               	clrc
  4313  0BB1  0CCA               	rrf	___fladd@grs,f
  4314  0BB2                     l4077:
  4315  0BB2  1837               	btfsc	___fladd@b,0
  4316  0BB3  17CA               	bsf	___fladd@grs,7
  4317  0BB4  3001               	movlw	1
  4318  0BB5  00BF               	movwf	??___fladd
  4319  0BB6                     u3345:
  4320  0BB6  0D3A               	rlf	___fladd@b+3,w
  4321  0BB7  0CBA               	rrf	___fladd@b+3,f
  4322  0BB8  0CB9               	rrf	___fladd@b+2,f
  4323  0BB9  0CB8               	rrf	___fladd@b+1,f
  4324  0BBA  0CB7               	rrf	___fladd@b,f
  4325  0BBB  0BBF               	decfsz	??___fladd& (0+127),f
  4326  0BBC  2BB6               	goto	u3345
  4327  0BBD  3001               	movlw	1
  4328  0BBE  00BF               	movwf	??___fladd
  4329  0BBF  083F               	movf	??___fladd,w
  4330  0BC0  07C9               	addwf	___fladd@bexp,f
  4331  0BC1                     l4085:
  4332  0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  4333  0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  4334  0BC3  0848               	movf	___fladd@aexp,w
  4335  0BC4  0249               	subwf	___fladd@bexp,w
  4336  0BC5  1C03               	skipc
  4337  0BC6  2BA5               	goto	l1296
  4338  0BC7                     l1294:
  4339  0BC7  1B47               	btfsc	___fladd@signs,6
  4340  0BC8  2C08               	goto	l4111
  4341  0BC9  0849               	movf	___fladd@bexp,w
  4342  0BCA  1D03               	btfss	3,2
  4343  0BCB  2BD5               	goto	l4093
  4344  0BCC  3000               	movlw	0
  4345  0BCD  00BA               	movwf	?___fladd+3
  4346  0BCE  3000               	movlw	0
  4347  0BCF  00B9               	movwf	?___fladd+2
  4348  0BD0  3000               	movlw	0
  4349  0BD1  00B8               	movwf	?___fladd+1
  4350  0BD2  3000               	movlw	0
  4351  0BD3  00B7               	movwf	?___fladd
  4352  0BD4  0008               	return
  4353  0BD5                     l4093:
  4354  0BD5  083B               	movf	___fladd@a,w
  4355  0BD6  07B7               	addwf	___fladd@b,f
  4356  0BD7  083C               	movf	___fladd@a+1,w
  4357  0BD8  1103               	clrz
  4358  0BD9  1803               	skipnc
  4359  0BDA  3E01               	addlw	1
  4360  0BDB  1D03               	btfss	3,2
  4361  0BDC  07B8               	addwf	___fladd@b+1,f
  4362  0BDD  083D               	movf	___fladd@a+2,w
  4363  0BDE  1103               	clrz
  4364  0BDF  1803               	skipnc
  4365  0BE0  3E01               	addlw	1
  4366  0BE1  1D03               	btfss	3,2
  4367  0BE2  07B9               	addwf	___fladd@b+2,f
  4368  0BE3  083E               	movf	___fladd@a+3,w
  4369  0BE4  1103               	clrz
  4370  0BE5  1803               	skipnc
  4371  0BE6  3E01               	addlw	1
  4372  0BE7  1D03               	btfss	3,2
  4373  0BE8  07BA               	addwf	___fladd@b+3,f
  4374  0BE9  1C3A               	btfss	___fladd@b+3,0
  4375  0BEA  2CAA               	goto	l4145
  4376  0BEB  1C4A               	btfss	___fladd@grs,0
  4377  0BEC  2BF6               	goto	l4101
  4378  0BED  084A               	movf	___fladd@grs,w
  4379  0BEE  00BF               	movwf	??___fladd
  4380  0BEF  1003               	clrc
  4381  0BF0  0C3F               	rrf	??___fladd,w
  4382  0BF1  3801               	iorlw	1
  4383  0BF2  00C0               	movwf	??___fladd+1
  4384  0BF3  0840               	movf	??___fladd+1,w
  4385  0BF4  00CA               	movwf	___fladd@grs
  4386  0BF5  2BF8               	goto	l4103
  4387  0BF6                     l4101:
  4388  0BF6  1003               	clrc
  4389  0BF7  0CCA               	rrf	___fladd@grs,f
  4390  0BF8                     l4103:
  4391  0BF8  1837               	btfsc	___fladd@b,0
  4392  0BF9  17CA               	bsf	___fladd@grs,7
  4393  0BFA  3001               	movlw	1
  4394  0BFB  00BF               	movwf	??___fladd
  4395  0BFC                     u3425:
  4396  0BFC  0D3A               	rlf	___fladd@b+3,w
  4397  0BFD  0CBA               	rrf	___fladd@b+3,f
  4398  0BFE  0CB9               	rrf	___fladd@b+2,f
  4399  0BFF  0CB8               	rrf	___fladd@b+1,f
  4400  0C00  0CB7               	rrf	___fladd@b,f
  4401  0C01  0BBF               	decfsz	??___fladd& (0+127),f
  4402  0C02  2BFC               	goto	u3425
  4403  0C03  3001               	movlw	1
  4404  0C04  00BF               	movwf	??___fladd
  4405  0C05  083F               	movf	??___fladd,w
  4406  0C06  07C9               	addwf	___fladd@bexp,f
  4407  0C07  2CAA               	goto	l4145
  4408  0C08                     l4111:
  4409  0C08  083A               	movf	___fladd@b+3,w
  4410  0C09  3A80               	xorlw	128
  4411  0C0A  00FF               	movwf	127
  4412  0C0B  083E               	movf	___fladd@a+3,w
  4413  0C0C  3A80               	xorlw	128
  4414  0C0D  027F               	subwf	127,w
  4415  0C0E  1D03               	skipz
  4416  0C0F  2C1A               	goto	u3433
  4417  0C10  083D               	movf	___fladd@a+2,w
  4418  0C11  0239               	subwf	___fladd@b+2,w
  4419  0C12  1D03               	skipz
  4420  0C13  2C1A               	goto	u3433
  4421  0C14  083C               	movf	___fladd@a+1,w
  4422  0C15  0238               	subwf	___fladd@b+1,w
  4423  0C16  1D03               	skipz
  4424  0C17  2C1A               	goto	u3433
  4425  0C18  083B               	movf	___fladd@a,w
  4426  0C19  0237               	subwf	___fladd@b,w
  4427  0C1A                     u3433:
  4428  0C1A  1803               	skipnc
  4429  0C1B  2C72               	goto	l4121
  4430  0C1C  30FF               	movlw	255
  4431  0C1D  00BF               	movwf	??___fladd
  4432  0C1E  30FF               	movlw	255
  4433  0C1F  00C0               	movwf	??___fladd+1
  4434  0C20  30FF               	movlw	255
  4435  0C21  00C1               	movwf	??___fladd+2
  4436  0C22  30FF               	movlw	255
  4437  0C23  00C2               	movwf	??___fladd+3
  4438  0C24  083B               	movf	___fladd@a,w
  4439  0C25  00C3               	movwf	??___fladd+4
  4440  0C26  083C               	movf	___fladd@a+1,w
  4441  0C27  00C4               	movwf	??___fladd+5
  4442  0C28  083D               	movf	___fladd@a+2,w
  4443  0C29  00C5               	movwf	??___fladd+6
  4444  0C2A  083E               	movf	___fladd@a+3,w
  4445  0C2B  00C6               	movwf	??___fladd+7
  4446  0C2C  0837               	movf	___fladd@b,w
  4447  0C2D  02C3               	subwf	??___fladd+4,f
  4448  0C2E  0838               	movf	___fladd@b+1,w
  4449  0C2F  1C03               	skipc
  4450  0C30  0F38               	incfsz	___fladd@b+1,w
  4451  0C31  2C33               	goto	u3441
  4452  0C32  2C34               	goto	u3442
  4453  0C33                     u3441:
  4454  0C33  02C4               	subwf	??___fladd+5,f
  4455  0C34                     u3442:
  4456  0C34  0839               	movf	___fladd@b+2,w
  4457  0C35  1C03               	skipc
  4458  0C36  0F39               	incfsz	___fladd@b+2,w
  4459  0C37  2C39               	goto	u3443
  4460  0C38  2C3A               	goto	u3444
  4461  0C39                     u3443:
  4462  0C39  02C5               	subwf	??___fladd+6,f
  4463  0C3A                     u3444:
  4464  0C3A  083A               	movf	___fladd@b+3,w
  4465  0C3B  1C03               	skipc
  4466  0C3C  0F3A               	incfsz	___fladd@b+3,w
  4467  0C3D  2C3F               	goto	u3445
  4468  0C3E  2C40               	goto	u3446
  4469  0C3F                     u3445:
  4470  0C3F  02C6               	subwf	??___fladd+7,f
  4471  0C40                     u3446:
  4472  0C40  0843               	movf	??___fladd+4,w
  4473  0C41  07BF               	addwf	??___fladd,f
  4474  0C42  0844               	movf	??___fladd+5,w
  4475  0C43  1803               	skipnc
  4476  0C44  0F44               	incfsz	??___fladd+5,w
  4477  0C45  2C47               	goto	u3450
  4478  0C46  2C48               	goto	u3451
  4479  0C47                     u3450:
  4480  0C47  07C0               	addwf	??___fladd+1,f
  4481  0C48                     u3451:
  4482  0C48  0845               	movf	??___fladd+6,w
  4483  0C49  1803               	skipnc
  4484  0C4A  0F45               	incfsz	??___fladd+6,w
  4485  0C4B  2C4D               	goto	u3452
  4486  0C4C  2C4E               	goto	u3453
  4487  0C4D                     u3452:
  4488  0C4D  07C1               	addwf	??___fladd+2,f
  4489  0C4E                     u3453:
  4490  0C4E  0846               	movf	??___fladd+7,w
  4491  0C4F  1803               	skipnc
  4492  0C50  0A46               	incf	??___fladd+7,w
  4493  0C51  07C2               	addwf	??___fladd+3,f
  4494  0C52  0842               	movf	??___fladd+3,w
  4495  0C53  00BA               	movwf	___fladd@b+3
  4496  0C54  0841               	movf	??___fladd+2,w
  4497  0C55  00B9               	movwf	___fladd@b+2
  4498  0C56  0840               	movf	??___fladd+1,w
  4499  0C57  00B8               	movwf	___fladd@b+1
  4500  0C58  083F               	movf	??___fladd,w
  4501  0C59  00B7               	movwf	___fladd@b
  4502  0C5A  3080               	movlw	128
  4503  0C5B  00BF               	movwf	??___fladd
  4504  0C5C  083F               	movf	??___fladd,w
  4505  0C5D  06C7               	xorwf	___fladd@signs,f
  4506  0C5E  09CA               	comf	___fladd@grs,f
  4507  0C5F  0ACA               	incf	___fladd@grs,f
  4508  0C60  084A               	movf	___fladd@grs,w
  4509  0C61  1D03               	btfss	3,2
  4510  0C62  2C80               	goto	l1311
  4511  0C63  3001               	movlw	1
  4512  0C64  07B7               	addwf	___fladd@b,f
  4513  0C65  3000               	movlw	0
  4514  0C66  1803               	skipnc
  4515  0C67  3001               	movlw	1
  4516  0C68  07B8               	addwf	___fladd@b+1,f
  4517  0C69  3000               	movlw	0
  4518  0C6A  1803               	skipnc
  4519  0C6B  3001               	movlw	1
  4520  0C6C  07B9               	addwf	___fladd@b+2,f
  4521  0C6D  3000               	movlw	0
  4522  0C6E  1803               	skipnc
  4523  0C6F  3001               	movlw	1
  4524  0C70  07BA               	addwf	___fladd@b+3,f
  4525  0C71  2C80               	goto	l1311
  4526  0C72                     l4121:
  4527  0C72  083B               	movf	___fladd@a,w
  4528  0C73  02B7               	subwf	___fladd@b,f
  4529  0C74  083C               	movf	___fladd@a+1,w
  4530  0C75  1C03               	skipc
  4531  0C76  0F3C               	incfsz	___fladd@a+1,w
  4532  0C77  02B8               	subwf	___fladd@b+1,f
  4533  0C78  083D               	movf	___fladd@a+2,w
  4534  0C79  1C03               	skipc
  4535  0C7A  0F3D               	incfsz	___fladd@a+2,w
  4536  0C7B  02B9               	subwf	___fladd@b+2,f
  4537  0C7C  083E               	movf	___fladd@a+3,w
  4538  0C7D  1C03               	skipc
  4539  0C7E  0F3E               	incfsz	___fladd@a+3,w
  4540  0C7F  02BA               	subwf	___fladd@b+3,f
  4541  0C80                     l1311:
  4542  0C80  083A               	movf	___fladd@b+3,w
  4543  0C81  0439               	iorwf	___fladd@b+2,w
  4544  0C82  0438               	iorwf	___fladd@b+1,w
  4545  0C83  0437               	iorwf	___fladd@b,w
  4546  0C84  1D03               	skipz
  4547  0C85  2CA8               	goto	l4143
  4548  0C86  084A               	movf	___fladd@grs,w
  4549  0C87  1D03               	btfss	3,2
  4550  0C88  2CA8               	goto	l4143
  4551  0C89  3000               	movlw	0
  4552  0C8A  00BA               	movwf	?___fladd+3
  4553  0C8B  3000               	movlw	0
  4554  0C8C  00B9               	movwf	?___fladd+2
  4555  0C8D  3000               	movlw	0
  4556  0C8E  00B8               	movwf	?___fladd+1
  4557  0C8F  3000               	movlw	0
  4558  0C90  00B7               	movwf	?___fladd
  4559  0C91  0008               	return
  4560  0C92                     l4129:
  4561  0C92  3001               	movlw	1
  4562  0C93  00BF               	movwf	??___fladd
  4563  0C94                     u3495:
  4564  0C94  1003               	clrc
  4565  0C95  0DB7               	rlf	___fladd@b,f
  4566  0C96  0DB8               	rlf	___fladd@b+1,f
  4567  0C97  0DB9               	rlf	___fladd@b+2,f
  4568  0C98  0DBA               	rlf	___fladd@b+3,f
  4569  0C99  0BBF               	decfsz	??___fladd,f
  4570  0C9A  2C94               	goto	u3495
  4571  0C9B  1BCA               	btfsc	___fladd@grs,7
  4572  0C9C  1437               	bsf	___fladd@b,0
  4573  0C9D  1C4A               	btfss	___fladd@grs,0
  4574  0C9E  2CA1               	goto	l4137
  4575  0C9F  1403               	setc
  4576  0CA0  2CA2               	goto	L5
  4577  0CA1                     l4137:
  4578  0CA1  1003               	clrc
  4579  0CA2                     L5:
  4580  0CA2  0DCA               	rlf	___fladd@grs,f
  4581  0CA3  0849               	movf	___fladd@bexp,w
  4582  0CA4  1903               	btfsc	3,2
  4583  0CA5  2CA8               	goto	l4143
  4584  0CA6  3001               	movlw	1
  4585  0CA7  02C9               	subwf	___fladd@bexp,f
  4586  0CA8                     l4143:
  4587  0CA8  1FB9               	btfss	___fladd@b+2,7
  4588  0CA9  2C92               	goto	l4129
  4589  0CAA                     l4145:
  4590  0CAA  01C8               	clrf	___fladd@aexp
  4591  0CAB  1FCA               	btfss	___fladd@grs,7
  4592  0CAC  2CB5               	goto	l4155
  4593  0CAD  084A               	movf	___fladd@grs,w
  4594  0CAE  397F               	andlw	127
  4595  0CAF  1903               	btfsc	3,2
  4596  0CB0  1837               	btfsc	___fladd@b,0
  4597  0CB1  2CB3               	goto	l4151
  4598  0CB2  2CB5               	goto	l4155
  4599  0CB3                     l4151:
  4600  0CB3  01C8               	clrf	___fladd@aexp
  4601  0CB4  0AC8               	incf	___fladd@aexp,f
  4602  0CB5                     l4155:
  4603  0CB5  0848               	movf	___fladd@aexp,w
  4604  0CB6  1903               	btfsc	3,2
  4605  0CB7  2CE8               	goto	l1324
  4606  0CB8  3001               	movlw	1
  4607  0CB9  07B7               	addwf	___fladd@b,f
  4608  0CBA  3000               	movlw	0
  4609  0CBB  1803               	skipnc
  4610  0CBC  3001               	movlw	1
  4611  0CBD  07B8               	addwf	___fladd@b+1,f
  4612  0CBE  3000               	movlw	0
  4613  0CBF  1803               	skipnc
  4614  0CC0  3001               	movlw	1
  4615  0CC1  07B9               	addwf	___fladd@b+2,f
  4616  0CC2  3000               	movlw	0
  4617  0CC3  1803               	skipnc
  4618  0CC4  3001               	movlw	1
  4619  0CC5  07BA               	addwf	___fladd@b+3,f
  4620  0CC6  1C3A               	btfss	___fladd@b+3,0
  4621  0CC7  2CE8               	goto	l1324
  4622  0CC8  0837               	movf	___fladd@b,w
  4623  0CC9  00BF               	movwf	??___fladd
  4624  0CCA  0838               	movf	___fladd@b+1,w
  4625  0CCB  00C0               	movwf	??___fladd+1
  4626  0CCC  0839               	movf	___fladd@b+2,w
  4627  0CCD  00C1               	movwf	??___fladd+2
  4628  0CCE  083A               	movf	___fladd@b+3,w
  4629  0CCF  00C2               	movwf	??___fladd+3
  4630  0CD0  3001               	movlw	1
  4631  0CD1  00C3               	movwf	??___fladd+4
  4632  0CD2                     u3595:
  4633  0CD2  0D42               	rlf	??___fladd+3,w
  4634  0CD3  0CC2               	rrf	??___fladd+3,f
  4635  0CD4  0CC1               	rrf	??___fladd+2,f
  4636  0CD5  0CC0               	rrf	??___fladd+1,f
  4637  0CD6  0CBF               	rrf	??___fladd,f
  4638  0CD7  0BC3               	decfsz	??___fladd+4,f
  4639  0CD8  2CD2               	goto	u3595
  4640  0CD9  0842               	movf	??___fladd+3,w
  4641  0CDA  00BA               	movwf	___fladd@b+3
  4642  0CDB  0841               	movf	??___fladd+2,w
  4643  0CDC  00B9               	movwf	___fladd@b+2
  4644  0CDD  0840               	movf	??___fladd+1,w
  4645  0CDE  00B8               	movwf	___fladd@b+1
  4646  0CDF  083F               	movf	??___fladd,w
  4647  0CE0  00B7               	movwf	___fladd@b
  4648  0CE1  0A49               	incf	___fladd@bexp,w
  4649  0CE2  1903               	btfsc	3,2
  4650  0CE3  2CE8               	goto	l1324
  4651  0CE4  3001               	movlw	1
  4652  0CE5  00BF               	movwf	??___fladd
  4653  0CE6  083F               	movf	??___fladd,w
  4654  0CE7  07C9               	addwf	___fladd@bexp,f
  4655  0CE8                     l1324:
  4656  0CE8  0A49               	incf	___fladd@bexp,w
  4657  0CE9  1D03               	btfss	3,2
  4658  0CEA  0849               	movf	___fladd@bexp,w
  4659  0CEB  1D03               	btfss	3,2
  4660  0CEC  2CF8               	goto	l4173
  4661  0CED  3000               	movlw	0
  4662  0CEE  00BA               	movwf	___fladd@b+3
  4663  0CEF  3000               	movlw	0
  4664  0CF0  00B9               	movwf	___fladd@b+2
  4665  0CF1  3000               	movlw	0
  4666  0CF2  00B8               	movwf	___fladd@b+1
  4667  0CF3  3000               	movlw	0
  4668  0CF4  00B7               	movwf	___fladd@b
  4669  0CF5  0849               	movf	___fladd@bexp,w
  4670  0CF6  1903               	btfsc	3,2
  4671  0CF7  01C7               	clrf	___fladd@signs
  4672  0CF8                     l4173:
  4673  0CF8  1C49               	btfss	___fladd@bexp,0
  4674  0CF9  2CFC               	goto	l4177
  4675  0CFA  17B9               	bsf	___fladd@b+2,7
  4676  0CFB  2D00               	goto	l1332
  4677  0CFC                     l4177:
  4678  0CFC  307F               	movlw	127
  4679  0CFD  00BF               	movwf	??___fladd
  4680  0CFE  083F               	movf	??___fladd,w
  4681  0CFF  05B9               	andwf	___fladd@b+2,f
  4682  0D00                     l1332:
  4683  0D00  0849               	movf	___fladd@bexp,w
  4684  0D01  00BF               	movwf	??___fladd
  4685  0D02  1003               	clrc
  4686  0D03  0C3F               	rrf	??___fladd,w
  4687  0D04  00C0               	movwf	??___fladd+1
  4688  0D05  0840               	movf	??___fladd+1,w
  4689  0D06  00BA               	movwf	___fladd@b+3
  4690  0D07  1FC7               	btfss	___fladd@signs,7
  4691  0D08  0008               	return
  4692  0D09  17BA               	bsf	___fladd@b+3,7
  4693  0D0A  0008               	return
  4694  0D0B                     __end_of___fladd:
  4695                           
  4696                           	psect	text5
  4697  1F6D                     __ptext5:	
  4698 ;; *************** function ___flge *****************
  4699 ;; Defined at:
  4700 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  ff1             4    0[BANK0 ] unsigned char 
  4703 ;;  ff2             4    4[BANK0 ] unsigned char 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;		None
  4706 ;; Return value:  Size  Location     Type
  4707 ;;		None               void
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0
  4710 ;; Tracked objects:
  4711 ;;		On entry : 300/0
  4712 ;;		On exit  : 300/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4715 ;;      Params:         0       8       0       0       0
  4716 ;;      Locals:         0       0       0       0       0
  4717 ;;      Temps:          0       4       0       0       0
  4718 ;;      Totals:         0      12       0       0       0
  4719 ;;Total ram usage:       12 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    1
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_MediaPlacaVaccum
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           
  4730                           ;psect for function ___flge
  4731  1F6D                     ___flge:
  4732                           
  4733                           ;incstack = 0
  4734                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4735  1F6D  3000               	movlw	0
  4736  1F6E  0520               	andwf	___flge@ff1,w
  4737  1F6F  00A8               	movwf	??___flge
  4738  1F70  3000               	movlw	0
  4739  1F71  0521               	andwf	___flge@ff1+1,w
  4740  1F72  00A9               	movwf	??___flge+1
  4741  1F73  3080               	movlw	128
  4742  1F74  0522               	andwf	___flge@ff1+2,w
  4743  1F75  00AA               	movwf	??___flge+2
  4744  1F76  307F               	movlw	127
  4745  1F77  0523               	andwf	___flge@ff1+3,w
  4746  1F78  00AB               	movwf	??___flge+3
  4747  1F79  082B               	movf	??___flge+3,w
  4748  1F7A  042A               	iorwf	??___flge+2,w
  4749  1F7B  0429               	iorwf	??___flge+1,w
  4750  1F7C  0428               	iorwf	??___flge,w
  4751  1F7D  1D03               	skipz
  4752  1F7E  2F87               	goto	l1171
  4753  1F7F  3000               	movlw	0
  4754  1F80  00A3               	movwf	___flge@ff1+3
  4755  1F81  3000               	movlw	0
  4756  1F82  00A2               	movwf	___flge@ff1+2
  4757  1F83  3000               	movlw	0
  4758  1F84  00A1               	movwf	___flge@ff1+1
  4759  1F85  3000               	movlw	0
  4760  1F86  00A0               	movwf	___flge@ff1
  4761  1F87                     l1171:
  4762  1F87  3000               	movlw	0
  4763  1F88  0524               	andwf	___flge@ff2,w
  4764  1F89  00A8               	movwf	??___flge
  4765  1F8A  3000               	movlw	0
  4766  1F8B  0525               	andwf	___flge@ff2+1,w
  4767  1F8C  00A9               	movwf	??___flge+1
  4768  1F8D  3080               	movlw	128
  4769  1F8E  0526               	andwf	___flge@ff2+2,w
  4770  1F8F  00AA               	movwf	??___flge+2
  4771  1F90  307F               	movlw	127
  4772  1F91  0527               	andwf	___flge@ff2+3,w
  4773  1F92  00AB               	movwf	??___flge+3
  4774  1F93  082B               	movf	??___flge+3,w
  4775  1F94  042A               	iorwf	??___flge+2,w
  4776  1F95  0429               	iorwf	??___flge+1,w
  4777  1F96  0428               	iorwf	??___flge,w
  4778  1F97  1D03               	skipz
  4779  1F98  2FA1               	goto	l4833
  4780  1F99  3000               	movlw	0
  4781  1F9A  00A7               	movwf	___flge@ff2+3
  4782  1F9B  3000               	movlw	0
  4783  1F9C  00A6               	movwf	___flge@ff2+2
  4784  1F9D  3000               	movlw	0
  4785  1F9E  00A5               	movwf	___flge@ff2+1
  4786  1F9F  3000               	movlw	0
  4787  1FA0  00A4               	movwf	___flge@ff2
  4788  1FA1                     l4833:
  4789  1FA1  1FA3               	btfss	___flge@ff1+3,7
  4790  1FA2  2FC7               	goto	l4837
  4791  1FA3  3000               	movlw	0
  4792  1FA4  00A8               	movwf	??___flge
  4793  1FA5  3000               	movlw	0
  4794  1FA6  00A9               	movwf	??___flge+1
  4795  1FA7  3000               	movlw	0
  4796  1FA8  00AA               	movwf	??___flge+2
  4797  1FA9  3080               	movlw	128
  4798  1FAA  00AB               	movwf	??___flge+3
  4799  1FAB  0820               	movf	___flge@ff1,w
  4800  1FAC  02A8               	subwf	??___flge,f
  4801  1FAD  0821               	movf	___flge@ff1+1,w
  4802  1FAE  1C03               	skipc
  4803  1FAF  0F21               	incfsz	___flge@ff1+1,w
  4804  1FB0  2FB2               	goto	u4561
  4805  1FB1  2FB3               	goto	u4562
  4806  1FB2                     u4561:
  4807  1FB2  02A9               	subwf	??___flge+1,f
  4808  1FB3                     u4562:
  4809  1FB3  0822               	movf	___flge@ff1+2,w
  4810  1FB4  1C03               	skipc
  4811  1FB5  0F22               	incfsz	___flge@ff1+2,w
  4812  1FB6  2FB8               	goto	u4563
  4813  1FB7  2FB9               	goto	u4564
  4814  1FB8                     u4563:
  4815  1FB8  02AA               	subwf	??___flge+2,f
  4816  1FB9                     u4564:
  4817  1FB9  0823               	movf	___flge@ff1+3,w
  4818  1FBA  1C03               	skipc
  4819  1FBB  0F23               	incfsz	___flge@ff1+3,w
  4820  1FBC  2FBE               	goto	u4565
  4821  1FBD  2FBF               	goto	u4566
  4822  1FBE                     u4565:
  4823  1FBE  02AB               	subwf	??___flge+3,f
  4824  1FBF                     u4566:
  4825  1FBF  082B               	movf	??___flge+3,w
  4826  1FC0  00A3               	movwf	___flge@ff1+3
  4827  1FC1  082A               	movf	??___flge+2,w
  4828  1FC2  00A2               	movwf	___flge@ff1+2
  4829  1FC3  0829               	movf	??___flge+1,w
  4830  1FC4  00A1               	movwf	___flge@ff1+1
  4831  1FC5  0828               	movf	??___flge,w
  4832  1FC6  00A0               	movwf	___flge@ff1
  4833  1FC7                     l4837:
  4834  1FC7  1FA7               	btfss	___flge@ff2+3,7
  4835  1FC8  2FED               	goto	l1174
  4836  1FC9  3000               	movlw	0
  4837  1FCA  00A8               	movwf	??___flge
  4838  1FCB  3000               	movlw	0
  4839  1FCC  00A9               	movwf	??___flge+1
  4840  1FCD  3000               	movlw	0
  4841  1FCE  00AA               	movwf	??___flge+2
  4842  1FCF  3080               	movlw	128
  4843  1FD0  00AB               	movwf	??___flge+3
  4844  1FD1  0824               	movf	___flge@ff2,w
  4845  1FD2  02A8               	subwf	??___flge,f
  4846  1FD3  0825               	movf	___flge@ff2+1,w
  4847  1FD4  1C03               	skipc
  4848  1FD5  0F25               	incfsz	___flge@ff2+1,w
  4849  1FD6  2FD8               	goto	u4581
  4850  1FD7  2FD9               	goto	u4582
  4851  1FD8                     u4581:
  4852  1FD8  02A9               	subwf	??___flge+1,f
  4853  1FD9                     u4582:
  4854  1FD9  0826               	movf	___flge@ff2+2,w
  4855  1FDA  1C03               	skipc
  4856  1FDB  0F26               	incfsz	___flge@ff2+2,w
  4857  1FDC  2FDE               	goto	u4583
  4858  1FDD  2FDF               	goto	u4584
  4859  1FDE                     u4583:
  4860  1FDE  02AA               	subwf	??___flge+2,f
  4861  1FDF                     u4584:
  4862  1FDF  0827               	movf	___flge@ff2+3,w
  4863  1FE0  1C03               	skipc
  4864  1FE1  0F27               	incfsz	___flge@ff2+3,w
  4865  1FE2  2FE4               	goto	u4585
  4866  1FE3  2FE5               	goto	u4586
  4867  1FE4                     u4585:
  4868  1FE4  02AB               	subwf	??___flge+3,f
  4869  1FE5                     u4586:
  4870  1FE5  082B               	movf	??___flge+3,w
  4871  1FE6  00A7               	movwf	___flge@ff2+3
  4872  1FE7  082A               	movf	??___flge+2,w
  4873  1FE8  00A6               	movwf	___flge@ff2+2
  4874  1FE9  0829               	movf	??___flge+1,w
  4875  1FEA  00A5               	movwf	___flge@ff2+1
  4876  1FEB  0828               	movf	??___flge,w
  4877  1FEC  00A4               	movwf	___flge@ff2
  4878  1FED                     l1174:
  4879  1FED  3080               	movlw	128
  4880  1FEE  06A3               	xorwf	___flge@ff1+3,f
  4881  1FEF  3080               	movlw	128
  4882  1FF0  06A7               	xorwf	___flge@ff2+3,f
  4883  1FF1  0827               	movf	___flge@ff2+3,w
  4884  1FF2  0223               	subwf	___flge@ff1+3,w
  4885  1FF3  1D03               	skipz
  4886  1FF4  0008               	return
  4887  1FF5  0826               	movf	___flge@ff2+2,w
  4888  1FF6  0222               	subwf	___flge@ff1+2,w
  4889  1FF7  1D03               	skipz
  4890  1FF8  0008               	return
  4891  1FF9  0825               	movf	___flge@ff2+1,w
  4892  1FFA  0221               	subwf	___flge@ff1+1,w
  4893  1FFB  1D03               	skipz
  4894  1FFC  0008               	return
  4895  1FFD  0824               	movf	___flge@ff2,w
  4896  1FFE  0220               	subwf	___flge@ff1,w
  4897  1FFF  0008               	return
  4898  2000                     __end_of___flge:
  4899                           
  4900                           	psect	text6
  4901  093D                     __ptext6:	
  4902 ;; *************** function ___fldiv *****************
  4903 ;; Defined at:
  4904 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  a               4   14[BANK0 ] unsigned char 
  4907 ;;  b               4   18[BANK0 ] unsigned char 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  grs             4   34[BANK0 ] unsigned long 
  4910 ;;  rem             4   27[BANK0 ] unsigned long 
  4911 ;;  new_exp         2   32[BANK0 ] int 
  4912 ;;  aexp            1   39[BANK0 ] unsigned char 
  4913 ;;  bexp            1   38[BANK0 ] unsigned char 
  4914 ;;  sign            1   31[BANK0 ] unsigned char 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  4   14[BANK0 ] unsigned char 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0, btemp+1
  4919 ;; Tracked objects:
  4920 ;;		On entry : 300/0
  4921 ;;		On exit  : 300/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4924 ;;      Params:         0       8       0       0       0
  4925 ;;      Locals:         0      13       0       0       0
  4926 ;;      Temps:          0       5       0       0       0
  4927 ;;      Totals:         0      26       0       0       0
  4928 ;;Total ram usage:       26 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    1
  4931 ;; This function calls:
  4932 ;;		Nothing
  4933 ;; This function is called by:
  4934 ;;		_MediaPlacaVaccum
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           
  4939                           ;psect for function ___fldiv
  4940  093D                     ___fldiv:
  4941                           
  4942                           ;incstack = 0
  4943                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4944  093D  0835               	movf	___fldiv@b+3,w
  4945  093E  3980               	andlw	128
  4946  093F  00B6               	movwf	??___fldiv
  4947  0940  0836               	movf	??___fldiv,w
  4948  0941  00BF               	movwf	___fldiv@sign
  4949  0942  0835               	movf	___fldiv@b+3,w
  4950  0943  00B6               	movwf	??___fldiv
  4951  0944  0736               	addwf	??___fldiv,w
  4952  0945  00B7               	movwf	??___fldiv+1
  4953  0946  0837               	movf	??___fldiv+1,w
  4954  0947  00C6               	movwf	___fldiv@bexp
  4955  0948  1BB4               	btfsc	___fldiv@b+2,7
  4956  0949  1446               	bsf	___fldiv@bexp,0
  4957  094A  0846               	movf	___fldiv@bexp,w
  4958  094B  1903               	btfsc	3,2
  4959  094C  295B               	goto	l4871
  4960  094D  0A46               	incf	___fldiv@bexp,w
  4961  094E  1D03               	btfss	3,2
  4962  094F  2958               	goto	l4867
  4963  0950  3000               	movlw	0
  4964  0951  00B5               	movwf	___fldiv@b+3
  4965  0952  3000               	movlw	0
  4966  0953  00B4               	movwf	___fldiv@b+2
  4967  0954  3000               	movlw	0
  4968  0955  00B3               	movwf	___fldiv@b+1
  4969  0956  3000               	movlw	0
  4970  0957  00B2               	movwf	___fldiv@b
  4971  0958                     l4867:
  4972  0958  17B4               	bsf	___fldiv@b+2,7
  4973  0959  01B5               	clrf	___fldiv@b+3
  4974  095A  2963               	goto	l4873
  4975  095B                     l4871:
  4976  095B  3000               	movlw	0
  4977  095C  00B5               	movwf	___fldiv@b+3
  4978  095D  3000               	movlw	0
  4979  095E  00B4               	movwf	___fldiv@b+2
  4980  095F  3000               	movlw	0
  4981  0960  00B3               	movwf	___fldiv@b+1
  4982  0961  3000               	movlw	0
  4983  0962  00B2               	movwf	___fldiv@b
  4984  0963                     l4873:
  4985  0963  0831               	movf	___fldiv@a+3,w
  4986  0964  3980               	andlw	128
  4987  0965  00B6               	movwf	??___fldiv
  4988  0966  0836               	movf	??___fldiv,w
  4989  0967  06BF               	xorwf	___fldiv@sign,f
  4990  0968  0831               	movf	___fldiv@a+3,w
  4991  0969  00B6               	movwf	??___fldiv
  4992  096A  0736               	addwf	??___fldiv,w
  4993  096B  00B7               	movwf	??___fldiv+1
  4994  096C  0837               	movf	??___fldiv+1,w
  4995  096D  00C7               	movwf	___fldiv@aexp
  4996  096E  1BB0               	btfsc	___fldiv@a+2,7
  4997  096F  1447               	bsf	___fldiv@aexp,0
  4998  0970  0847               	movf	___fldiv@aexp,w
  4999  0971  1903               	btfsc	3,2
  5000  0972  2981               	goto	l4891
  5001  0973  0A47               	incf	___fldiv@aexp,w
  5002  0974  1D03               	btfss	3,2
  5003  0975  297E               	goto	l4887
  5004  0976  3000               	movlw	0
  5005  0977  00B1               	movwf	___fldiv@a+3
  5006  0978  3000               	movlw	0
  5007  0979  00B0               	movwf	___fldiv@a+2
  5008  097A  3000               	movlw	0
  5009  097B  00AF               	movwf	___fldiv@a+1
  5010  097C  3000               	movlw	0
  5011  097D  00AE               	movwf	___fldiv@a
  5012  097E                     l4887:
  5013  097E  17B0               	bsf	___fldiv@a+2,7
  5014  097F  01B1               	clrf	___fldiv@a+3
  5015  0980  2989               	goto	l1346
  5016  0981                     l4891:
  5017  0981  3000               	movlw	0
  5018  0982  00B1               	movwf	___fldiv@a+3
  5019  0983  3000               	movlw	0
  5020  0984  00B0               	movwf	___fldiv@a+2
  5021  0985  3000               	movlw	0
  5022  0986  00AF               	movwf	___fldiv@a+1
  5023  0987  3000               	movlw	0
  5024  0988  00AE               	movwf	___fldiv@a
  5025  0989                     l1346:
  5026  0989  0831               	movf	___fldiv@a+3,w
  5027  098A  0430               	iorwf	___fldiv@a+2,w
  5028  098B  042F               	iorwf	___fldiv@a+1,w
  5029  098C  042E               	iorwf	___fldiv@a,w
  5030  098D  1D03               	skipz
  5031  098E  29A8               	goto	l4901
  5032  098F  3000               	movlw	0
  5033  0990  00B5               	movwf	___fldiv@b+3
  5034  0991  3000               	movlw	0
  5035  0992  00B4               	movwf	___fldiv@b+2
  5036  0993  3000               	movlw	0
  5037  0994  00B3               	movwf	___fldiv@b+1
  5038  0995  3000               	movlw	0
  5039  0996  00B2               	movwf	___fldiv@b
  5040  0997  3080               	movlw	128
  5041  0998  04B4               	iorwf	___fldiv@b+2,f
  5042  0999  307F               	movlw	127
  5043  099A  04B5               	iorwf	___fldiv@b+3,f
  5044  099B                     L7:
  5045  099B  083F               	movf	___fldiv@sign,w
  5046  099C  00B6               	movwf	??___fldiv
  5047  099D  0836               	movf	??___fldiv,w
  5048  099E  04B5               	iorwf	___fldiv@b+3,f
  5049  099F  0835               	movf	___fldiv@b+3,w
  5050  09A0  00B1               	movwf	?___fldiv+3
  5051  09A1  0834               	movf	___fldiv@b+2,w
  5052  09A2  00B0               	movwf	?___fldiv+2
  5053  09A3  0833               	movf	___fldiv@b+1,w
  5054  09A4  00AF               	movwf	?___fldiv+1
  5055  09A5  0832               	movf	___fldiv@b,w
  5056  09A6  00AE               	movwf	?___fldiv
  5057  09A7  0008               	return
  5058  09A8                     l4901:
  5059  09A8  0846               	movf	___fldiv@bexp,w
  5060  09A9  1D03               	btfss	3,2
  5061  09AA  29B4               	goto	l4907
  5062  09AB  3000               	movlw	0
  5063  09AC  00B1               	movwf	?___fldiv+3
  5064  09AD  3000               	movlw	0
  5065  09AE  00B0               	movwf	?___fldiv+2
  5066  09AF  3000               	movlw	0
  5067  09B0  00AF               	movwf	?___fldiv+1
  5068  09B1  3000               	movlw	0
  5069  09B2  00AE               	movwf	?___fldiv
  5070  09B3  0008               	return
  5071  09B4                     l4907:
  5072  09B4  0846               	movf	___fldiv@bexp,w
  5073  09B5  00B6               	movwf	??___fldiv
  5074  09B6  01B7               	clrf	??___fldiv+1
  5075  09B7  0837               	movf	??___fldiv+1,w
  5076  09B8  00B9               	movwf	??___fldiv+3
  5077  09B9  0847               	movf	___fldiv@aexp,w
  5078  09BA  0236               	subwf	??___fldiv,w
  5079  09BB  00B8               	movwf	??___fldiv+2
  5080  09BC  1C03               	skipc
  5081  09BD  03B9               	decf	??___fldiv+3,f
  5082  09BE  0838               	movf	??___fldiv+2,w
  5083  09BF  3E7F               	addlw	127
  5084  09C0  00C0               	movwf	___fldiv@new_exp
  5085  09C1  0839               	movf	??___fldiv+3,w
  5086  09C2  1803               	skipnc
  5087  09C3  3E01               	addlw	1
  5088  09C4  3E00               	addlw	0
  5089  09C5  00C1               	movwf	___fldiv@new_exp+1
  5090  09C6  0835               	movf	___fldiv@b+3,w
  5091  09C7  00BE               	movwf	___fldiv@rem+3
  5092  09C8  0834               	movf	___fldiv@b+2,w
  5093  09C9  00BD               	movwf	___fldiv@rem+2
  5094  09CA  0833               	movf	___fldiv@b+1,w
  5095  09CB  00BC               	movwf	___fldiv@rem+1
  5096  09CC  0832               	movf	___fldiv@b,w
  5097  09CD  00BB               	movwf	___fldiv@rem
  5098  09CE  3000               	movlw	0
  5099  09CF  00B5               	movwf	___fldiv@b+3
  5100  09D0  3000               	movlw	0
  5101  09D1  00B4               	movwf	___fldiv@b+2
  5102  09D2  3000               	movlw	0
  5103  09D3  00B3               	movwf	___fldiv@b+1
  5104  09D4  3000               	movlw	0
  5105  09D5  00B2               	movwf	___fldiv@b
  5106  09D6  3000               	movlw	0
  5107  09D7  00C5               	movwf	___fldiv@grs+3
  5108  09D8  3000               	movlw	0
  5109  09D9  00C4               	movwf	___fldiv@grs+2
  5110  09DA  3000               	movlw	0
  5111  09DB  00C3               	movwf	___fldiv@grs+1
  5112  09DC  3000               	movlw	0
  5113  09DD  00C2               	movwf	___fldiv@grs
  5114  09DE  01C7               	clrf	___fldiv@aexp
  5115  09DF                     l4935:
  5116  09DF  301A               	movlw	26
  5117  09E0  0247               	subwf	___fldiv@aexp,w
  5118  09E1  1803               	btfsc	3,0
  5119  09E2  2A27               	goto	l4937
  5120  09E3  0847               	movf	___fldiv@aexp,w
  5121  09E4  1903               	btfsc	3,2
  5122  09E5  2A03               	goto	l4927
  5123  09E6  3001               	movlw	1
  5124  09E7  00B6               	movwf	??___fldiv
  5125  09E8                     u4695:
  5126  09E8  1003               	clrc
  5127  09E9  0DBB               	rlf	___fldiv@rem,f
  5128  09EA  0DBC               	rlf	___fldiv@rem+1,f
  5129  09EB  0DBD               	rlf	___fldiv@rem+2,f
  5130  09EC  0DBE               	rlf	___fldiv@rem+3,f
  5131  09ED  0BB6               	decfsz	??___fldiv,f
  5132  09EE  29E8               	goto	u4695
  5133  09EF  3001               	movlw	1
  5134  09F0  00B6               	movwf	??___fldiv
  5135  09F1                     u4705:
  5136  09F1  1003               	clrc
  5137  09F2  0DB2               	rlf	___fldiv@b,f
  5138  09F3  0DB3               	rlf	___fldiv@b+1,f
  5139  09F4  0DB4               	rlf	___fldiv@b+2,f
  5140  09F5  0DB5               	rlf	___fldiv@b+3,f
  5141  09F6  0BB6               	decfsz	??___fldiv,f
  5142  09F7  29F1               	goto	u4705
  5143  09F8  1BC5               	btfsc	___fldiv@grs+3,7
  5144  09F9  1432               	bsf	___fldiv@b,0
  5145  09FA  3001               	movlw	1
  5146  09FB  00B6               	movwf	??___fldiv
  5147  09FC                     u4725:
  5148  09FC  1003               	clrc
  5149  09FD  0DC2               	rlf	___fldiv@grs,f
  5150  09FE  0DC3               	rlf	___fldiv@grs+1,f
  5151  09FF  0DC4               	rlf	___fldiv@grs+2,f
  5152  0A00  0DC5               	rlf	___fldiv@grs+3,f
  5153  0A01  0BB6               	decfsz	??___fldiv,f
  5154  0A02  29FC               	goto	u4725
  5155  0A03                     l4927:
  5156  0A03  0831               	movf	___fldiv@a+3,w
  5157  0A04  023E               	subwf	___fldiv@rem+3,w
  5158  0A05  1D03               	skipz
  5159  0A06  2A11               	goto	u4735
  5160  0A07  0830               	movf	___fldiv@a+2,w
  5161  0A08  023D               	subwf	___fldiv@rem+2,w
  5162  0A09  1D03               	skipz
  5163  0A0A  2A11               	goto	u4735
  5164  0A0B  082F               	movf	___fldiv@a+1,w
  5165  0A0C  023C               	subwf	___fldiv@rem+1,w
  5166  0A0D  1D03               	skipz
  5167  0A0E  2A11               	goto	u4735
  5168  0A0F  082E               	movf	___fldiv@a,w
  5169  0A10  023B               	subwf	___fldiv@rem,w
  5170  0A11                     u4735:
  5171  0A11  1C03               	skipc
  5172  0A12  2A22               	goto	l4933
  5173  0A13  1745               	bsf	___fldiv@grs+3,6
  5174  0A14  082E               	movf	___fldiv@a,w
  5175  0A15  02BB               	subwf	___fldiv@rem,f
  5176  0A16  082F               	movf	___fldiv@a+1,w
  5177  0A17  1C03               	skipc
  5178  0A18  0F2F               	incfsz	___fldiv@a+1,w
  5179  0A19  02BC               	subwf	___fldiv@rem+1,f
  5180  0A1A  0830               	movf	___fldiv@a+2,w
  5181  0A1B  1C03               	skipc
  5182  0A1C  0F30               	incfsz	___fldiv@a+2,w
  5183  0A1D  02BD               	subwf	___fldiv@rem+2,f
  5184  0A1E  0831               	movf	___fldiv@a+3,w
  5185  0A1F  1C03               	skipc
  5186  0A20  0F31               	incfsz	___fldiv@a+3,w
  5187  0A21  02BE               	subwf	___fldiv@rem+3,f
  5188  0A22                     l4933:
  5189  0A22  3001               	movlw	1
  5190  0A23  00B6               	movwf	??___fldiv
  5191  0A24  0836               	movf	??___fldiv,w
  5192  0A25  07C7               	addwf	___fldiv@aexp,f
  5193  0A26  29DF               	goto	l4935
  5194  0A27                     l4937:
  5195  0A27  083E               	movf	___fldiv@rem+3,w
  5196  0A28  043D               	iorwf	___fldiv@rem+2,w
  5197  0A29  043C               	iorwf	___fldiv@rem+1,w
  5198  0A2A  043B               	iorwf	___fldiv@rem,w
  5199  0A2B  1D03               	btfss	3,2
  5200  0A2C  1442               	bsf	___fldiv@grs,0
  5201  0A2D                     l4951:
  5202  0A2D  1BB4               	btfsc	___fldiv@b+2,7
  5203  0A2E  2A4A               	goto	l4953
  5204  0A2F  3001               	movlw	1
  5205  0A30  00B6               	movwf	??___fldiv
  5206  0A31                     u4765:
  5207  0A31  1003               	clrc
  5208  0A32  0DB2               	rlf	___fldiv@b,f
  5209  0A33  0DB3               	rlf	___fldiv@b+1,f
  5210  0A34  0DB4               	rlf	___fldiv@b+2,f
  5211  0A35  0DB5               	rlf	___fldiv@b+3,f
  5212  0A36  0BB6               	decfsz	??___fldiv,f
  5213  0A37  2A31               	goto	u4765
  5214  0A38  1BC5               	btfsc	___fldiv@grs+3,7
  5215  0A39  1432               	bsf	___fldiv@b,0
  5216  0A3A  3001               	movlw	1
  5217  0A3B  00B6               	movwf	??___fldiv
  5218  0A3C                     u4785:
  5219  0A3C  1003               	clrc
  5220  0A3D  0DC2               	rlf	___fldiv@grs,f
  5221  0A3E  0DC3               	rlf	___fldiv@grs+1,f
  5222  0A3F  0DC4               	rlf	___fldiv@grs+2,f
  5223  0A40  0DC5               	rlf	___fldiv@grs+3,f
  5224  0A41  0BB6               	decfsz	??___fldiv,f
  5225  0A42  2A3C               	goto	u4785
  5226  0A43  30FF               	movlw	255
  5227  0A44  07C0               	addwf	___fldiv@new_exp,f
  5228  0A45  1803               	skipnc
  5229  0A46  0AC1               	incf	___fldiv@new_exp+1,f
  5230  0A47  30FF               	movlw	255
  5231  0A48  07C1               	addwf	___fldiv@new_exp+1,f
  5232  0A49  2A2D               	goto	l4951
  5233  0A4A                     l4953:
  5234  0A4A  01C7               	clrf	___fldiv@aexp
  5235  0A4B  1FC5               	btfss	___fldiv@grs+3,7
  5236  0A4C  2A63               	goto	l4963
  5237  0A4D  30FF               	movlw	255
  5238  0A4E  0542               	andwf	___fldiv@grs,w
  5239  0A4F  00B6               	movwf	??___fldiv
  5240  0A50  30FF               	movlw	255
  5241  0A51  0543               	andwf	___fldiv@grs+1,w
  5242  0A52  00B7               	movwf	??___fldiv+1
  5243  0A53  30FF               	movlw	255
  5244  0A54  0544               	andwf	___fldiv@grs+2,w
  5245  0A55  00B8               	movwf	??___fldiv+2
  5246  0A56  307F               	movlw	127
  5247  0A57  0545               	andwf	___fldiv@grs+3,w
  5248  0A58  00B9               	movwf	??___fldiv+3
  5249  0A59  0839               	movf	??___fldiv+3,w
  5250  0A5A  0438               	iorwf	??___fldiv+2,w
  5251  0A5B  0437               	iorwf	??___fldiv+1,w
  5252  0A5C  0436               	iorwf	??___fldiv,w
  5253  0A5D  1903               	skipnz
  5254  0A5E  1832               	btfsc	___fldiv@b,0
  5255  0A5F  2A61               	goto	l4959
  5256  0A60  2A63               	goto	l4963
  5257  0A61                     l4959:
  5258  0A61  01C7               	clrf	___fldiv@aexp
  5259  0A62  0AC7               	incf	___fldiv@aexp,f
  5260  0A63                     l4963:
  5261  0A63  0847               	movf	___fldiv@aexp,w
  5262  0A64  1903               	btfsc	3,2
  5263  0A65  2A95               	goto	l4973
  5264  0A66  3001               	movlw	1
  5265  0A67  07B2               	addwf	___fldiv@b,f
  5266  0A68  3000               	movlw	0
  5267  0A69  1803               	skipnc
  5268  0A6A  3001               	movlw	1
  5269  0A6B  07B3               	addwf	___fldiv@b+1,f
  5270  0A6C  3000               	movlw	0
  5271  0A6D  1803               	skipnc
  5272  0A6E  3001               	movlw	1
  5273  0A6F  07B4               	addwf	___fldiv@b+2,f
  5274  0A70  3000               	movlw	0
  5275  0A71  1803               	skipnc
  5276  0A72  3001               	movlw	1
  5277  0A73  07B5               	addwf	___fldiv@b+3,f
  5278  0A74  1C35               	btfss	___fldiv@b+3,0
  5279  0A75  2A95               	goto	l4973
  5280  0A76  0832               	movf	___fldiv@b,w
  5281  0A77  00B6               	movwf	??___fldiv
  5282  0A78  0833               	movf	___fldiv@b+1,w
  5283  0A79  00B7               	movwf	??___fldiv+1
  5284  0A7A  0834               	movf	___fldiv@b+2,w
  5285  0A7B  00B8               	movwf	??___fldiv+2
  5286  0A7C  0835               	movf	___fldiv@b+3,w
  5287  0A7D  00B9               	movwf	??___fldiv+3
  5288  0A7E  3001               	movlw	1
  5289  0A7F  00BA               	movwf	??___fldiv+4
  5290  0A80                     u4855:
  5291  0A80  0D39               	rlf	??___fldiv+3,w
  5292  0A81  0CB9               	rrf	??___fldiv+3,f
  5293  0A82  0CB8               	rrf	??___fldiv+2,f
  5294  0A83  0CB7               	rrf	??___fldiv+1,f
  5295  0A84  0CB6               	rrf	??___fldiv,f
  5296  0A85  0BBA               	decfsz	??___fldiv+4,f
  5297  0A86  2A80               	goto	u4855
  5298  0A87  0839               	movf	??___fldiv+3,w
  5299  0A88  00B5               	movwf	___fldiv@b+3
  5300  0A89  0838               	movf	??___fldiv+2,w
  5301  0A8A  00B4               	movwf	___fldiv@b+2
  5302  0A8B  0837               	movf	??___fldiv+1,w
  5303  0A8C  00B3               	movwf	___fldiv@b+1
  5304  0A8D  0836               	movf	??___fldiv,w
  5305  0A8E  00B2               	movwf	___fldiv@b
  5306  0A8F  3001               	movlw	1
  5307  0A90  07C0               	addwf	___fldiv@new_exp,f
  5308  0A91  1803               	skipnc
  5309  0A92  0AC1               	incf	___fldiv@new_exp+1,f
  5310  0A93  3000               	movlw	0
  5311  0A94  07C1               	addwf	___fldiv@new_exp+1,f
  5312  0A95                     l4973:
  5313  0A95  0841               	movf	___fldiv@new_exp+1,w
  5314  0A96  3A80               	xorlw	128
  5315  0A97  00FF               	movwf	127
  5316  0A98  3080               	movlw	128
  5317  0A99  027F               	subwf	127,w
  5318  0A9A  1D03               	skipz
  5319  0A9B  2A9E               	goto	u4865
  5320  0A9C  30FF               	movlw	255
  5321  0A9D  0240               	subwf	___fldiv@new_exp,w
  5322  0A9E                     u4865:
  5323  0A9E  1C03               	skipc
  5324  0A9F  2AAE               	goto	l4977
  5325  0AA0  30FF               	movlw	255
  5326  0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  5327  0AA2  1303               	bcf	3,6	;RP1=0, select bank0
  5328  0AA3  00C0               	movwf	___fldiv@new_exp
  5329  0AA4  3000               	movlw	0
  5330  0AA5  00C1               	movwf	___fldiv@new_exp+1
  5331  0AA6  3000               	movlw	0
  5332  0AA7  00B5               	movwf	___fldiv@b+3
  5333  0AA8  3000               	movlw	0
  5334  0AA9  00B4               	movwf	___fldiv@b+2
  5335  0AAA  3000               	movlw	0
  5336  0AAB  00B3               	movwf	___fldiv@b+1
  5337  0AAC  3000               	movlw	0
  5338  0AAD  00B2               	movwf	___fldiv@b
  5339  0AAE                     l4977:
  5340  0AAE  1283               	bcf	3,5	;RP0=0, select bank0
  5341  0AAF  1303               	bcf	3,6	;RP1=0, select bank0
  5342  0AB0  0841               	movf	___fldiv@new_exp+1,w
  5343  0AB1  3A80               	xorlw	128
  5344  0AB2  00FF               	movwf	127
  5345  0AB3  3080               	movlw	128
  5346  0AB4  027F               	subwf	127,w
  5347  0AB5  1D03               	skipz
  5348  0AB6  2AB9               	goto	u4875
  5349  0AB7  3001               	movlw	1
  5350  0AB8  0240               	subwf	___fldiv@new_exp,w
  5351  0AB9                     u4875:
  5352  0AB9  1803               	skipnc
  5353  0ABA  2AC8               	goto	l1368
  5354  0ABB  1283               	bcf	3,5	;RP0=0, select bank0
  5355  0ABC  1303               	bcf	3,6	;RP1=0, select bank0
  5356  0ABD  01C0               	clrf	___fldiv@new_exp
  5357  0ABE  01C1               	clrf	___fldiv@new_exp+1
  5358  0ABF  3000               	movlw	0
  5359  0AC0  00B5               	movwf	___fldiv@b+3
  5360  0AC1  3000               	movlw	0
  5361  0AC2  00B4               	movwf	___fldiv@b+2
  5362  0AC3  3000               	movlw	0
  5363  0AC4  00B3               	movwf	___fldiv@b+1
  5364  0AC5  3000               	movlw	0
  5365  0AC6  00B2               	movwf	___fldiv@b
  5366  0AC7  01BF               	clrf	___fldiv@sign
  5367  0AC8                     l1368:
  5368  0AC8  1283               	bcf	3,5	;RP0=0, select bank0
  5369  0AC9  1303               	bcf	3,6	;RP1=0, select bank0
  5370  0ACA  0840               	movf	___fldiv@new_exp,w
  5371  0ACB  00B6               	movwf	??___fldiv
  5372  0ACC  0836               	movf	??___fldiv,w
  5373  0ACD  00C6               	movwf	___fldiv@bexp
  5374  0ACE  1C46               	btfss	___fldiv@bexp,0
  5375  0ACF  2AD2               	goto	l4989
  5376  0AD0  17B4               	bsf	___fldiv@b+2,7
  5377  0AD1  2AD6               	goto	l1370
  5378  0AD2                     l4989:
  5379  0AD2  307F               	movlw	127
  5380  0AD3  00B6               	movwf	??___fldiv
  5381  0AD4  0836               	movf	??___fldiv,w
  5382  0AD5  05B4               	andwf	___fldiv@b+2,f
  5383  0AD6                     l1370:
  5384  0AD6  0846               	movf	___fldiv@bexp,w
  5385  0AD7  00B6               	movwf	??___fldiv
  5386  0AD8  1003               	clrc
  5387  0AD9  0C36               	rrf	??___fldiv,w
  5388  0ADA  00B7               	movwf	??___fldiv+1
  5389  0ADB  0837               	movf	??___fldiv+1,w
  5390  0ADC  00B5               	movwf	___fldiv@b+3
  5391  0ADD  299B               	goto	L7
  5392  0ADE                     __end_of___fldiv:
  5393                           
  5394                           	psect	text7
  5395  194B                     __ptext7:	
  5396 ;; *************** function _Package_Usart_is_for_me *****************
  5397 ;; Defined at:
  5398 ;;		line 8 in file "protocolo.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;		None
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  retorno         1    0[BANK0 ] unsigned char 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  1    wreg      unsigned char 
  5405 ;; Registers used:
  5406 ;;		wreg, status,2, status,0
  5407 ;; Tracked objects:
  5408 ;;		On entry : 300/100
  5409 ;;		On exit  : 300/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5412 ;;      Params:         0       0       0       0       0
  5413 ;;      Locals:         0       1       0       0       0
  5414 ;;      Temps:          0       0       0       0       0
  5415 ;;      Totals:         0       1       0       0       0
  5416 ;;Total ram usage:        1 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:    1
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_MediaPlacaVaccum
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           
  5427                           ;psect for function _Package_Usart_is_for_me
  5428  194B                     _Package_Usart_is_for_me:
  5429                           
  5430                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5431                           
  5432                           ;incstack = 0
  5433                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5434  194B  1C64               	btfss	_generic_status^(0+128),0
  5435  194C  295F               	goto	l4795
  5436                           
  5437                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5438  194D  1283               	bcf	3,5	;RP0=0, select bank2
  5439  194E  1703               	bsf	3,6	;RP1=1, select bank2
  5440  194F  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5441  1950  1683               	bsf	3,5	;RP0=1, select bank1
  5442  1951  1303               	bcf	3,6	;RP1=0, select bank1
  5443  1952  0661               	xorwf	_Board_Number^(0+128),w
  5444  1953  1903               	skipnz
  5445  1954  295A               	goto	l817
  5446  1955  1283               	bcf	3,5	;RP0=0, select bank2
  5447  1956  1703               	bsf	3,6	;RP1=1, select bank2
  5448  1957  0A13               	incf	(_usart_buffer^(0+256)+3),w	;volatile
  5449  1958  1D03               	btfss	3,2
  5450  1959  295F               	goto	l4795
  5451  195A                     l817:
  5452                           
  5453                           ;protocolo.c: 13:             retorno=1;
  5454  195A  1283               	bcf	3,5	;RP0=0, select bank0
  5455  195B  1303               	bcf	3,6	;RP1=0, select bank0
  5456  195C  01A0               	clrf	Package_Usart_is_for_me@retorno
  5457  195D  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5458  195E  2962               	goto	l4799
  5459  195F                     l4795:
  5460                           
  5461                           ;protocolo.c: 15:             retorno=0;
  5462  195F  1283               	bcf	3,5	;RP0=0, select bank0
  5463  1960  1303               	bcf	3,6	;RP1=0, select bank0
  5464  1961  01A0               	clrf	Package_Usart_is_for_me@retorno
  5465  1962                     l4799:
  5466                           
  5467                           ;protocolo.c: 21:      return retorno;
  5468  1962  0820               	movf	Package_Usart_is_for_me@retorno,w
  5469  1963  0008               	return
  5470  1964                     __end_of_Package_Usart_is_for_me:
  5471                           
  5472                           	psect	text8
  5473  1DD1                     __ptext8:	
  5474 ;; *************** function _ADC_Media_10bits *****************
  5475 ;; Defined at:
  5476 ;;		line 20 in file "adc.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  canal           1    wreg     unsigned char 
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;  canal           1   19[BANK0 ] unsigned char 
  5481 ;;  value           2   20[BANK0 ] unsigned int 
  5482 ;;  i               1   22[BANK0 ] unsigned char 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  4   14[BANK0 ] float 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5487 ;; Tracked objects:
  5488 ;;		On entry : 300/100
  5489 ;;		On exit  : 300/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5492 ;;      Params:         0       4       0       0       0
  5493 ;;      Locals:         0       4       0       0       0
  5494 ;;      Temps:          0       1       0       0       0
  5495 ;;      Totals:         0       9       0       0       0
  5496 ;;Total ram usage:        9 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:    2
  5499 ;; This function calls:
  5500 ;;		___lwdiv
  5501 ;;		___xxtofl
  5502 ;;		_captura
  5503 ;;		_my_delay_ms
  5504 ;; This function is called by:
  5505 ;;		_MediaPlacaVaccum
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           
  5510                           ;psect for function _ADC_Media_10bits
  5511  1DD1                     _ADC_Media_10bits:
  5512                           
  5513                           ;incstack = 0
  5514                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5515                           ;ADC_Media_10bits@canal stored from wreg
  5516  1DD1  1283               	bcf	3,5	;RP0=0, select bank0
  5517  1DD2  00B3               	movwf	ADC_Media_10bits@canal
  5518                           
  5519                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5520  1DD3  0833               	movf	ADC_Media_10bits@canal,w
  5521  1DD4  00B2               	movwf	??_ADC_Media_10bits
  5522  1DD5  0DB2               	rlf	??_ADC_Media_10bits,f
  5523  1DD6  0DB2               	rlf	??_ADC_Media_10bits,f
  5524  1DD7  081F               	movf	31,w	;volatile
  5525  1DD8  0632               	xorwf	??_ADC_Media_10bits,w
  5526  1DD9  39C3               	andlw	-61
  5527  1DDA  0632               	xorwf	??_ADC_Media_10bits,w
  5528  1DDB  009F               	movwf	31	;volatile
  5529                           
  5530                           ;adc.c: 24:       my_delay_ms(1);
  5531  1DDC  3000               	movlw	0
  5532  1DDD  00A3               	movwf	my_delay_ms@time+3
  5533  1DDE  3000               	movlw	0
  5534  1DDF  00A2               	movwf	my_delay_ms@time+2
  5535  1DE0  3000               	movlw	0
  5536  1DE1  00A1               	movwf	my_delay_ms@time+1
  5537  1DE2  3001               	movlw	1
  5538  1DE3  00A0               	movwf	my_delay_ms@time
  5539  1DE4  160A  158A  2411  160A  158A  	fcall	_my_delay_ms
  5540                           
  5541                           ;adc.c: 26:       value=0;
  5542  1DE9  01B4               	clrf	ADC_Media_10bits@value
  5543  1DEA  01B5               	clrf	ADC_Media_10bits@value+1
  5544                           
  5545                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5546  1DEB  01B6               	clrf	ADC_Media_10bits@i
  5547  1DEC  0AB6               	incf	ADC_Media_10bits@i,f
  5548  1DED                     l4777:
  5549                           
  5550                           ;adc.c: 28:           value+=captura();
  5551  1DED  160A  158A  2086  160A  158A  	fcall	_captura
  5552  1DF2  0820               	movf	?_captura,w
  5553  1DF3  07B4               	addwf	ADC_Media_10bits@value,f
  5554  1DF4  1803               	skipnc
  5555  1DF5  0AB5               	incf	ADC_Media_10bits@value+1,f
  5556  1DF6  0821               	movf	?_captura+1,w
  5557  1DF7  07B5               	addwf	ADC_Media_10bits@value+1,f
  5558  1DF8  3001               	movlw	1
  5559  1DF9  00B2               	movwf	??_ADC_Media_10bits
  5560  1DFA  0832               	movf	??_ADC_Media_10bits,w
  5561  1DFB  07B6               	addwf	ADC_Media_10bits@i,f
  5562  1DFC  3033               	movlw	51
  5563  1DFD  0236               	subwf	ADC_Media_10bits@i,w
  5564  1DFE  1C03               	skipc
  5565  1DFF  2DED               	goto	l4777
  5566                           
  5567                           ;adc.c: 29:       value/=(i-1);
  5568  1E00  0836               	movf	ADC_Media_10bits@i,w
  5569  1E01  3EFF               	addlw	255
  5570  1E02  00A0               	movwf	___lwdiv@divisor
  5571  1E03  30FF               	movlw	255
  5572  1E04  1803               	skipnc
  5573  1E05  3000               	movlw	0
  5574  1E06  00A1               	movwf	___lwdiv@divisor+1
  5575  1E07  0835               	movf	ADC_Media_10bits@value+1,w
  5576  1E08  00A3               	movwf	___lwdiv@dividend+1
  5577  1E09  0834               	movf	ADC_Media_10bits@value,w
  5578  1E0A  00A2               	movwf	___lwdiv@dividend
  5579  1E0B  160A  158A  24BC  160A  158A  	fcall	___lwdiv
  5580  1E10  0821               	movf	?___lwdiv+1,w
  5581  1E11  00B5               	movwf	ADC_Media_10bits@value+1
  5582  1E12  0820               	movf	?___lwdiv,w
  5583  1E13  00B4               	movwf	ADC_Media_10bits@value
  5584                           
  5585                           ;adc.c: 30:       return value;
  5586  1E14  0834               	movf	ADC_Media_10bits@value,w
  5587  1E15  00A0               	movwf	___xxtofl@val
  5588  1E16  0835               	movf	ADC_Media_10bits@value+1,w
  5589  1E17  00A1               	movwf	___xxtofl@val+1
  5590  1E18  01A2               	clrf	___xxtofl@val+2
  5591  1E19  01A3               	clrf	___xxtofl@val+3
  5592  1E1A  3000               	movlw	0
  5593  1E1B  120A  118A  274B   	fcall	___xxtofl
  5594  1E1E  0823               	movf	?___xxtofl+3,w
  5595  1E1F  00B1               	movwf	?_ADC_Media_10bits+3
  5596  1E20  0822               	movf	?___xxtofl+2,w
  5597  1E21  00B0               	movwf	?_ADC_Media_10bits+2
  5598  1E22  0821               	movf	?___xxtofl+1,w
  5599  1E23  00AF               	movwf	?_ADC_Media_10bits+1
  5600  1E24  0820               	movf	?___xxtofl,w
  5601  1E25  00AE               	movwf	?_ADC_Media_10bits
  5602  1E26  0008               	return
  5603  1E27                     __end_of_ADC_Media_10bits:
  5604                           
  5605                           	psect	text9
  5606  1C11                     __ptext9:	
  5607 ;; *************** function _my_delay_ms *****************
  5608 ;; Defined at:
  5609 ;;		line 5 in file "my_delay.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  time            4    0[BANK0 ] long 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  i               4    6[BANK0 ] long 
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  1    wreg      void 
  5616 ;; Registers used:
  5617 ;;		wreg, btemp+1
  5618 ;; Tracked objects:
  5619 ;;		On entry : 300/0
  5620 ;;		On exit  : 300/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5623 ;;      Params:         0       4       0       0       0
  5624 ;;      Locals:         0       4       0       0       0
  5625 ;;      Temps:          0       2       0       0       0
  5626 ;;      Totals:         0      10       0       0       0
  5627 ;;Total ram usage:       10 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; Hardware stack levels required when called:    1
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_MediaPlacaVaccum
  5634 ;;		_ADC_Media_10bits
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           
  5639                           ;psect for function _my_delay_ms
  5640  1C11                     _my_delay_ms:
  5641                           
  5642                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5643                           
  5644                           ;incstack = 0
  5645                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5646  1C11  3000               	movlw	0
  5647  1C12  00A9               	movwf	my_delay_ms@i+3
  5648  1C13  3000               	movlw	0
  5649  1C14  00A8               	movwf	my_delay_ms@i+2
  5650  1C15  3000               	movlw	0
  5651  1C16  00A7               	movwf	my_delay_ms@i+1
  5652  1C17  3000               	movlw	0
  5653  1C18  00A6               	movwf	my_delay_ms@i
  5654  1C19                     l3887:
  5655  1C19  0829               	movf	my_delay_ms@i+3,w
  5656  1C1A  3A80               	xorlw	128
  5657  1C1B  00FF               	movwf	127
  5658  1C1C  0823               	movf	my_delay_ms@time+3,w
  5659  1C1D  3A80               	xorlw	128
  5660  1C1E  027F               	subwf	127,w
  5661  1C1F  1D03               	skipz
  5662  1C20  2C2B               	goto	u2993
  5663  1C21  0822               	movf	my_delay_ms@time+2,w
  5664  1C22  0228               	subwf	my_delay_ms@i+2,w
  5665  1C23  1D03               	skipz
  5666  1C24  2C2B               	goto	u2993
  5667  1C25  0821               	movf	my_delay_ms@time+1,w
  5668  1C26  0227               	subwf	my_delay_ms@i+1,w
  5669  1C27  1D03               	skipz
  5670  1C28  2C2B               	goto	u2993
  5671  1C29  0820               	movf	my_delay_ms@time,w
  5672  1C2A  0226               	subwf	my_delay_ms@i,w
  5673  1C2B                     u2993:
  5674  1C2B  1803               	btfsc	3,0
  5675  1C2C  0008               	return
  5676                           
  5677                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5678  1C2D  3003               	movlw	3
  5679  1C2E  1283               	bcf	3,5	;RP0=0, select bank0
  5680  1C2F  1303               	bcf	3,6	;RP1=0, select bank0
  5681  1C30  00A5               	movwf	??_my_delay_ms+1
  5682  1C31  3097               	movlw	151
  5683  1C32  00A4               	movwf	??_my_delay_ms
  5684  1C33                     u5527:
  5685  1C33  0BA4               	decfsz	??_my_delay_ms,f
  5686  1C34  2C33               	goto	u5527
  5687  1C35  0BA5               	decfsz	??_my_delay_ms+1,f
  5688  1C36  2C33               	goto	u5527
  5689                           
  5690                           ;my_delay.c: 10:             }
  5691  1C37  3001               	movlw	1
  5692  1C38  1283               	bcf	3,5	;RP0=0, select bank0
  5693  1C39  1303               	bcf	3,6	;RP1=0, select bank0
  5694  1C3A  07A6               	addwf	my_delay_ms@i,f
  5695  1C3B  3000               	movlw	0
  5696  1C3C  1803               	skipnc
  5697  1C3D  3001               	movlw	1
  5698  1C3E  07A7               	addwf	my_delay_ms@i+1,f
  5699  1C3F  3000               	movlw	0
  5700  1C40  1803               	skipnc
  5701  1C41  3001               	movlw	1
  5702  1C42  07A8               	addwf	my_delay_ms@i+2,f
  5703  1C43  3000               	movlw	0
  5704  1C44  1803               	skipnc
  5705  1C45  3001               	movlw	1
  5706  1C46  07A9               	addwf	my_delay_ms@i+3,f
  5707  1C47  2C19               	goto	l3887
  5708  1C48                     __end_of_my_delay_ms:
  5709                           
  5710                           	psect	text10
  5711  1886                     __ptext10:	
  5712 ;; *************** function _captura *****************
  5713 ;; Defined at:
  5714 ;;		line 140 in file "adc.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;		None
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;		None
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  2    0[BANK0 ] unsigned int 
  5721 ;; Registers used:
  5722 ;;		wreg
  5723 ;; Tracked objects:
  5724 ;;		On entry : 300/0
  5725 ;;		On exit  : 300/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5728 ;;      Params:         0       2       0       0       0
  5729 ;;      Locals:         0       0       0       0       0
  5730 ;;      Temps:          0       0       0       0       0
  5731 ;;      Totals:         0       2       0       0       0
  5732 ;;Total ram usage:        2 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; Hardware stack levels required when called:    1
  5735 ;; This function calls:
  5736 ;;		Nothing
  5737 ;; This function is called by:
  5738 ;;		_ADC_Media_10bits
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           
  5743                           ;psect for function _captura
  5744  1886                     _captura:
  5745                           
  5746                           ;adc.c: 141:     ADCON0bits.GO=1;
  5747                           
  5748                           ;incstack = 0
  5749                           ; Regs used in _captura: [wreg]
  5750  1886  149F               	bsf	31,1	;volatile
  5751  1887                     l495:	
  5752                           ;adc.c: 145:           }
  5753                           
  5754                           
  5755                           ;adc.c: 142:     while(ADCON0bits.GO)
  5756  1887  189F               	btfsc	31,1	;volatile
  5757  1888  2887               	goto	l495
  5758                           
  5759                           ;adc.c: 146:     return ((ADRESH<<8)+ADRESL);
  5760  1889  081E               	movf	30,w	;volatile
  5761  188A  00A1               	movwf	?_captura+1
  5762  188B  1683               	bsf	3,5	;RP0=1, select bank1
  5763  188C  081E               	movf	30,w	;volatile
  5764  188D  1283               	bcf	3,5	;RP0=0, select bank0
  5765  188E  00A0               	movwf	?_captura
  5766  188F  0008               	return
  5767  1890                     __end_of_captura:
  5768                           
  5769                           	psect	text11
  5770  074B                     __ptext11:	
  5771 ;; *************** function ___xxtofl *****************
  5772 ;; Defined at:
  5773 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  sign            1    wreg     unsigned char 
  5776 ;;  val             4    0[BANK0 ] long 
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  sign            1    8[BANK0 ] unsigned char 
  5779 ;;  arg             4   10[BANK0 ] unsigned long 
  5780 ;;  exp             1    9[BANK0 ] unsigned char 
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  4    0[BANK0 ] unsigned char 
  5783 ;; Registers used:
  5784 ;;		wreg, status,2, status,0
  5785 ;; Tracked objects:
  5786 ;;		On entry : 300/0
  5787 ;;		On exit  : 300/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5790 ;;      Params:         0       4       0       0       0
  5791 ;;      Locals:         0       6       0       0       0
  5792 ;;      Temps:          0       4       0       0       0
  5793 ;;      Totals:         0      14       0       0       0
  5794 ;;Total ram usage:       14 bytes
  5795 ;; Hardware stack levels used:    1
  5796 ;; Hardware stack levels required when called:    1
  5797 ;; This function calls:
  5798 ;;		Nothing
  5799 ;; This function is called by:
  5800 ;;		_MediaPlacaVaccum
  5801 ;;		_ADC_Media_10bits
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           
  5806                           ;psect for function ___xxtofl
  5807  074B                     ___xxtofl:
  5808                           
  5809                           ;incstack = 0
  5810                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5811                           ;___xxtofl@sign stored from wreg
  5812  074B  00A8               	movwf	___xxtofl@sign
  5813  074C  0828               	movf	___xxtofl@sign,w
  5814  074D  1D03               	btfss	3,2
  5815  074E  1FA3               	btfss	___xxtofl@val+3,7
  5816  074F  2F60               	goto	l4329
  5817  0750  0920               	comf	___xxtofl@val,w
  5818  0751  00AA               	movwf	___xxtofl@arg
  5819  0752  0921               	comf	___xxtofl@val+1,w
  5820  0753  00AB               	movwf	___xxtofl@arg+1
  5821  0754  0922               	comf	___xxtofl@val+2,w
  5822  0755  00AC               	movwf	___xxtofl@arg+2
  5823  0756  0923               	comf	___xxtofl@val+3,w
  5824  0757  00AD               	movwf	___xxtofl@arg+3
  5825  0758  0AAA               	incf	___xxtofl@arg,f
  5826  0759  1903               	skipnz
  5827  075A  0AAB               	incf	___xxtofl@arg+1,f
  5828  075B  1903               	skipnz
  5829  075C  0AAC               	incf	___xxtofl@arg+2,f
  5830  075D  1903               	skipnz
  5831  075E  0AAD               	incf	___xxtofl@arg+3,f
  5832  075F  2F68               	goto	l1430
  5833  0760                     l4329:
  5834  0760  0823               	movf	___xxtofl@val+3,w
  5835  0761  00AD               	movwf	___xxtofl@arg+3
  5836  0762  0822               	movf	___xxtofl@val+2,w
  5837  0763  00AC               	movwf	___xxtofl@arg+2
  5838  0764  0821               	movf	___xxtofl@val+1,w
  5839  0765  00AB               	movwf	___xxtofl@arg+1
  5840  0766  0820               	movf	___xxtofl@val,w
  5841  0767  00AA               	movwf	___xxtofl@arg
  5842  0768                     l1430:
  5843  0768  0823               	movf	___xxtofl@val+3,w
  5844  0769  0422               	iorwf	___xxtofl@val+2,w
  5845  076A  0421               	iorwf	___xxtofl@val+1,w
  5846  076B  0420               	iorwf	___xxtofl@val,w
  5847  076C  1D03               	skipz
  5848  076D  2F77               	goto	l4335
  5849  076E  3000               	movlw	0
  5850  076F  00A3               	movwf	?___xxtofl+3
  5851  0770  3000               	movlw	0
  5852  0771  00A2               	movwf	?___xxtofl+2
  5853  0772  3000               	movlw	0
  5854  0773  00A1               	movwf	?___xxtofl+1
  5855  0774  3000               	movlw	0
  5856  0775  00A0               	movwf	?___xxtofl
  5857  0776  0008               	return
  5858  0777                     l4335:
  5859  0777  3096               	movlw	150
  5860  0778  00A4               	movwf	??___xxtofl
  5861  0779  0824               	movf	??___xxtofl,w
  5862  077A  00A9               	movwf	___xxtofl@exp
  5863  077B                     l4339:
  5864  077B  30FE               	movlw	254
  5865  077C  052D               	andwf	___xxtofl@arg+3,w
  5866  077D  1903               	btfsc	3,2
  5867  077E  2FA8               	goto	l1436
  5868  077F  3001               	movlw	1
  5869  0780  00A4               	movwf	??___xxtofl
  5870  0781  0824               	movf	??___xxtofl,w
  5871  0782  07A9               	addwf	___xxtofl@exp,f
  5872  0783  3001               	movlw	1
  5873  0784                     u4055:
  5874  0784  1003               	clrc
  5875  0785  0CAD               	rrf	___xxtofl@arg+3,f
  5876  0786  0CAC               	rrf	___xxtofl@arg+2,f
  5877  0787  0CAB               	rrf	___xxtofl@arg+1,f
  5878  0788  0CAA               	rrf	___xxtofl@arg,f
  5879  0789  3EFF               	addlw	-1
  5880  078A  1D03               	skipz
  5881  078B  2F84               	goto	u4055
  5882  078C  2F7B               	goto	l4339
  5883  078D                     l4341:
  5884  078D  3001               	movlw	1
  5885  078E  00A4               	movwf	??___xxtofl
  5886  078F  0824               	movf	??___xxtofl,w
  5887  0790  07A9               	addwf	___xxtofl@exp,f
  5888  0791  3001               	movlw	1
  5889  0792  07AA               	addwf	___xxtofl@arg,f
  5890  0793  3000               	movlw	0
  5891  0794  1803               	skipnc
  5892  0795  3001               	movlw	1
  5893  0796  07AB               	addwf	___xxtofl@arg+1,f
  5894  0797  3000               	movlw	0
  5895  0798  1803               	skipnc
  5896  0799  3001               	movlw	1
  5897  079A  07AC               	addwf	___xxtofl@arg+2,f
  5898  079B  3000               	movlw	0
  5899  079C  1803               	skipnc
  5900  079D  3001               	movlw	1
  5901  079E  07AD               	addwf	___xxtofl@arg+3,f
  5902  079F  3001               	movlw	1
  5903  07A0                     u4075:
  5904  07A0  1003               	clrc
  5905  07A1  0CAD               	rrf	___xxtofl@arg+3,f
  5906  07A2  0CAC               	rrf	___xxtofl@arg+2,f
  5907  07A3  0CAB               	rrf	___xxtofl@arg+1,f
  5908  07A4  0CAA               	rrf	___xxtofl@arg,f
  5909  07A5  3EFF               	addlw	-1
  5910  07A6  1D03               	skipz
  5911  07A7  2FA0               	goto	u4075
  5912  07A8                     l1436:
  5913  07A8  30FF               	movlw	255
  5914  07A9  052D               	andwf	___xxtofl@arg+3,w
  5915  07AA  1903               	btfsc	3,2
  5916  07AB  2FBC               	goto	l4349
  5917  07AC  2F8D               	goto	l4341
  5918  07AD                     l4351:
  5919  07AD  3002               	movlw	2
  5920  07AE  0229               	subwf	___xxtofl@exp,w
  5921  07AF  1C03               	btfss	3,0
  5922  07B0  2FBE               	goto	l1443
  5923  07B1  3001               	movlw	1
  5924  07B2  02A9               	subwf	___xxtofl@exp,f
  5925  07B3  3001               	movlw	1
  5926  07B4  00A4               	movwf	??___xxtofl
  5927  07B5                     u4095:
  5928  07B5  1003               	clrc
  5929  07B6  0DAA               	rlf	___xxtofl@arg,f
  5930  07B7  0DAB               	rlf	___xxtofl@arg+1,f
  5931  07B8  0DAC               	rlf	___xxtofl@arg+2,f
  5932  07B9  0DAD               	rlf	___xxtofl@arg+3,f
  5933  07BA  0BA4               	decfsz	??___xxtofl,f
  5934  07BB  2FB5               	goto	u4095
  5935  07BC                     l4349:
  5936  07BC  1FAC               	btfss	___xxtofl@arg+2,7
  5937  07BD  2FAD               	goto	l4351
  5938  07BE                     l1443:
  5939  07BE  1829               	btfsc	___xxtofl@exp,0
  5940  07BF  2FC8               	goto	l1444
  5941  07C0  30FF               	movlw	255
  5942  07C1  05AA               	andwf	___xxtofl@arg,f
  5943  07C2  30FF               	movlw	255
  5944  07C3  05AB               	andwf	___xxtofl@arg+1,f
  5945  07C4  307F               	movlw	127
  5946  07C5  05AC               	andwf	___xxtofl@arg+2,f
  5947  07C6  30FF               	movlw	255
  5948  07C7  05AD               	andwf	___xxtofl@arg+3,f
  5949  07C8                     l1444:
  5950  07C8  1003               	clrc
  5951  07C9  0CA9               	rrf	___xxtofl@exp,f
  5952  07CA  0829               	movf	___xxtofl@exp,w
  5953  07CB  00A4               	movwf	??___xxtofl
  5954  07CC  01A5               	clrf	??___xxtofl+1
  5955  07CD  01A6               	clrf	??___xxtofl+2
  5956  07CE  01A7               	clrf	??___xxtofl+3
  5957  07CF  3018               	movlw	24
  5958  07D0                     u4135:
  5959  07D0  1003               	clrc
  5960  07D1  0DA4               	rlf	??___xxtofl,f
  5961  07D2  0DA5               	rlf	??___xxtofl+1,f
  5962  07D3  0DA6               	rlf	??___xxtofl+2,f
  5963  07D4  0DA7               	rlf	??___xxtofl+3,f
  5964  07D5  3EFF               	addlw	-1
  5965  07D6  1D03               	skipz
  5966  07D7  2FD0               	goto	u4135
  5967  07D8  0824               	movf	??___xxtofl,w
  5968  07D9  04AA               	iorwf	___xxtofl@arg,f
  5969  07DA  0825               	movf	??___xxtofl+1,w
  5970  07DB  04AB               	iorwf	___xxtofl@arg+1,f
  5971  07DC  0826               	movf	??___xxtofl+2,w
  5972  07DD  04AC               	iorwf	___xxtofl@arg+2,f
  5973  07DE  0827               	movf	??___xxtofl+3,w
  5974  07DF  04AD               	iorwf	___xxtofl@arg+3,f
  5975  07E0  0828               	movf	___xxtofl@sign,w
  5976  07E1  1D03               	btfss	3,2
  5977  07E2  1FA3               	btfss	___xxtofl@val+3,7
  5978  07E3  2FE5               	goto	l4363
  5979  07E4  17AD               	bsf	___xxtofl@arg+3,7
  5980  07E5                     l4363:
  5981  07E5  082D               	movf	___xxtofl@arg+3,w
  5982  07E6  00A3               	movwf	?___xxtofl+3
  5983  07E7  082C               	movf	___xxtofl@arg+2,w
  5984  07E8  00A2               	movwf	?___xxtofl+2
  5985  07E9  082B               	movf	___xxtofl@arg+1,w
  5986  07EA  00A1               	movwf	?___xxtofl+1
  5987  07EB  082A               	movf	___xxtofl@arg,w
  5988  07EC  00A0               	movwf	?___xxtofl
  5989  07ED  0008               	return
  5990  07EE                     __end_of___xxtofl:
  5991                           
  5992                           	psect	text12
  5993  1B10                     __ptext12:	
  5994 ;; *************** function _I2C_Master_Init *****************
  5995 ;; Defined at:
  5996 ;;		line 7 in file "I2C.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;  c               4   14[BANK0 ] const unsigned long 
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;		None
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  1    wreg      void 
  6003 ;; Registers used:
  6004 ;;		wreg, status,2, status,0, pclath, cstack
  6005 ;; Tracked objects:
  6006 ;;		On entry : 300/0
  6007 ;;		On exit  : 300/100
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6010 ;;      Params:         0       4       0       0       0
  6011 ;;      Locals:         0       0       0       0       0
  6012 ;;      Temps:          0       4       0       0       0
  6013 ;;      Totals:         0       8       0       0       0
  6014 ;;Total ram usage:        8 bytes
  6015 ;; Hardware stack levels used:    1
  6016 ;; Hardware stack levels required when called:    2
  6017 ;; This function calls:
  6018 ;;		___lldiv
  6019 ;; This function is called by:
  6020 ;;		_main
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           
  6025                           ;psect for function _I2C_Master_Init
  6026  1B10                     _I2C_Master_Init:
  6027                           
  6028                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  6029                           
  6030                           ;incstack = 0
  6031                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  6032  1B10  3028               	movlw	40
  6033  1B11  0094               	movwf	20	;volatile
  6034                           
  6035                           ;I2C.c: 11:   SSPCON2 = 0;
  6036  1B12  1683               	bsf	3,5	;RP0=1, select bank1
  6037  1B13  0191               	clrf	17	;volatile
  6038                           
  6039                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  6040  1B14  1283               	bcf	3,5	;RP0=0, select bank0
  6041  1B15  082E               	movf	I2C_Master_Init@c,w
  6042  1B16  00B2               	movwf	??_I2C_Master_Init
  6043  1B17  082F               	movf	I2C_Master_Init@c+1,w
  6044  1B18  00B3               	movwf	??_I2C_Master_Init+1
  6045  1B19  0830               	movf	I2C_Master_Init@c+2,w
  6046  1B1A  00B4               	movwf	??_I2C_Master_Init+2
  6047  1B1B  0831               	movf	I2C_Master_Init@c+3,w
  6048  1B1C  00B5               	movwf	??_I2C_Master_Init+3
  6049  1B1D  3002               	movlw	2
  6050  1B1E                     u4895:
  6051  1B1E  1003               	clrc
  6052  1B1F  0DB2               	rlf	??_I2C_Master_Init,f
  6053  1B20  0DB3               	rlf	??_I2C_Master_Init+1,f
  6054  1B21  0DB4               	rlf	??_I2C_Master_Init+2,f
  6055  1B22  0DB5               	rlf	??_I2C_Master_Init+3,f
  6056  1B23  3EFF               	addlw	-1
  6057  1B24  1D03               	skipz
  6058  1B25  2B1E               	goto	u4895
  6059  1B26  0835               	movf	??_I2C_Master_Init+3,w
  6060  1B27  00A3               	movwf	___lldiv@divisor+3
  6061  1B28  0834               	movf	??_I2C_Master_Init+2,w
  6062  1B29  00A2               	movwf	___lldiv@divisor+2
  6063  1B2A  0833               	movf	??_I2C_Master_Init+1,w
  6064  1B2B  00A1               	movwf	___lldiv@divisor+1
  6065  1B2C  0832               	movf	??_I2C_Master_Init,w
  6066  1B2D  00A0               	movwf	___lldiv@divisor
  6067  1B2E  3000               	movlw	0
  6068  1B2F  00A7               	movwf	___lldiv@dividend+3
  6069  1B30  307A               	movlw	122
  6070  1B31  00A6               	movwf	___lldiv@dividend+2
  6071  1B32  3012               	movlw	18
  6072  1B33  00A5               	movwf	___lldiv@dividend+1
  6073  1B34  3000               	movlw	0
  6074  1B35  00A4               	movwf	___lldiv@dividend
  6075  1B36  160A  158A  2627   	fcall	___lldiv
  6076  1B39  0820               	movf	?___lldiv,w
  6077  1B3A  3EFF               	addlw	255
  6078  1B3B  1683               	bsf	3,5	;RP0=1, select bank1
  6079  1B3C  0093               	movwf	19	;volatile
  6080                           
  6081                           ;I2C.c: 13:   SSPSTAT = 0;
  6082  1B3D  0194               	clrf	20	;volatile
  6083                           
  6084                           ;I2C.c: 14:   TRISC3 = 1;
  6085  1B3E  1587               	bsf	7,3	;volatile
  6086                           
  6087                           ;I2C.c: 15:   TRISC4 = 1;
  6088  1B3F  1607               	bsf	7,4	;volatile
  6089  1B40  0008               	return
  6090  1B41                     __end_of_I2C_Master_Init:
  6091                           
  6092                           	psect	text13
  6093  1E27                     __ptext13:	
  6094 ;; *************** function ___lldiv *****************
  6095 ;; Defined at:
  6096 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  divisor         4    0[BANK0 ] unsigned long 
  6099 ;;  dividend        4    4[BANK0 ] unsigned long 
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;  quotient        4    9[BANK0 ] unsigned long 
  6102 ;;  counter         1   13[BANK0 ] unsigned char 
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  4    0[BANK0 ] unsigned long 
  6105 ;; Registers used:
  6106 ;;		wreg, status,2, status,0
  6107 ;; Tracked objects:
  6108 ;;		On entry : 300/0
  6109 ;;		On exit  : 300/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6112 ;;      Params:         0       8       0       0       0
  6113 ;;      Locals:         0       5       0       0       0
  6114 ;;      Temps:          0       1       0       0       0
  6115 ;;      Totals:         0      14       0       0       0
  6116 ;;Total ram usage:       14 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    1
  6119 ;; This function calls:
  6120 ;;		Nothing
  6121 ;; This function is called by:
  6122 ;;		_I2C_Master_Init
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           
  6127                           ;psect for function ___lldiv
  6128  1E27                     ___lldiv:
  6129                           
  6130                           ;incstack = 0
  6131                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6132  1E27  3000               	movlw	0
  6133  1E28  00AC               	movwf	___lldiv@quotient+3
  6134  1E29  3000               	movlw	0
  6135  1E2A  00AB               	movwf	___lldiv@quotient+2
  6136  1E2B  3000               	movlw	0
  6137  1E2C  00AA               	movwf	___lldiv@quotient+1
  6138  1E2D  3000               	movlw	0
  6139  1E2E  00A9               	movwf	___lldiv@quotient
  6140  1E2F  0823               	movf	___lldiv@divisor+3,w
  6141  1E30  0422               	iorwf	___lldiv@divisor+2,w
  6142  1E31  0421               	iorwf	___lldiv@divisor+1,w
  6143  1E32  0420               	iorwf	___lldiv@divisor,w
  6144  1E33  1903               	skipnz
  6145  1E34  2E7C               	goto	l4823
  6146  1E35  01AD               	clrf	___lldiv@counter
  6147  1E36  0AAD               	incf	___lldiv@counter,f
  6148  1E37                     l4809:
  6149  1E37  1BA3               	btfsc	___lldiv@divisor+3,7
  6150  1E38  2E47               	goto	l4811
  6151  1E39  3001               	movlw	1
  6152  1E3A  00A8               	movwf	??___lldiv
  6153  1E3B                     u4475:
  6154  1E3B  1003               	clrc
  6155  1E3C  0DA0               	rlf	___lldiv@divisor,f
  6156  1E3D  0DA1               	rlf	___lldiv@divisor+1,f
  6157  1E3E  0DA2               	rlf	___lldiv@divisor+2,f
  6158  1E3F  0DA3               	rlf	___lldiv@divisor+3,f
  6159  1E40  0BA8               	decfsz	??___lldiv,f
  6160  1E41  2E3B               	goto	u4475
  6161  1E42  3001               	movlw	1
  6162  1E43  00A8               	movwf	??___lldiv
  6163  1E44  0828               	movf	??___lldiv,w
  6164  1E45  07AD               	addwf	___lldiv@counter,f
  6165  1E46  2E37               	goto	l4809
  6166  1E47                     l4811:
  6167  1E47  3001               	movlw	1
  6168  1E48  00A8               	movwf	??___lldiv
  6169  1E49                     u4495:
  6170  1E49  1003               	clrc
  6171  1E4A  0DA9               	rlf	___lldiv@quotient,f
  6172  1E4B  0DAA               	rlf	___lldiv@quotient+1,f
  6173  1E4C  0DAB               	rlf	___lldiv@quotient+2,f
  6174  1E4D  0DAC               	rlf	___lldiv@quotient+3,f
  6175  1E4E  0BA8               	decfsz	??___lldiv,f
  6176  1E4F  2E49               	goto	u4495
  6177  1E50  0823               	movf	___lldiv@divisor+3,w
  6178  1E51  0227               	subwf	___lldiv@dividend+3,w
  6179  1E52  1D03               	skipz
  6180  1E53  2E5E               	goto	u4505
  6181  1E54  0822               	movf	___lldiv@divisor+2,w
  6182  1E55  0226               	subwf	___lldiv@dividend+2,w
  6183  1E56  1D03               	skipz
  6184  1E57  2E5E               	goto	u4505
  6185  1E58  0821               	movf	___lldiv@divisor+1,w
  6186  1E59  0225               	subwf	___lldiv@dividend+1,w
  6187  1E5A  1D03               	skipz
  6188  1E5B  2E5E               	goto	u4505
  6189  1E5C  0820               	movf	___lldiv@divisor,w
  6190  1E5D  0224               	subwf	___lldiv@dividend,w
  6191  1E5E                     u4505:
  6192  1E5E  1C03               	skipc
  6193  1E5F  2E6F               	goto	l4819
  6194  1E60  0820               	movf	___lldiv@divisor,w
  6195  1E61  02A4               	subwf	___lldiv@dividend,f
  6196  1E62  0821               	movf	___lldiv@divisor+1,w
  6197  1E63  1C03               	skipc
  6198  1E64  0F21               	incfsz	___lldiv@divisor+1,w
  6199  1E65  02A5               	subwf	___lldiv@dividend+1,f
  6200  1E66  0822               	movf	___lldiv@divisor+2,w
  6201  1E67  1C03               	skipc
  6202  1E68  0F22               	incfsz	___lldiv@divisor+2,w
  6203  1E69  02A6               	subwf	___lldiv@dividend+2,f
  6204  1E6A  0823               	movf	___lldiv@divisor+3,w
  6205  1E6B  1C03               	skipc
  6206  1E6C  0F23               	incfsz	___lldiv@divisor+3,w
  6207  1E6D  02A7               	subwf	___lldiv@dividend+3,f
  6208  1E6E  1429               	bsf	___lldiv@quotient,0
  6209  1E6F                     l4819:
  6210  1E6F  3001               	movlw	1
  6211  1E70                     u4515:
  6212  1E70  1003               	clrc
  6213  1E71  0CA3               	rrf	___lldiv@divisor+3,f
  6214  1E72  0CA2               	rrf	___lldiv@divisor+2,f
  6215  1E73  0CA1               	rrf	___lldiv@divisor+1,f
  6216  1E74  0CA0               	rrf	___lldiv@divisor,f
  6217  1E75  3EFF               	addlw	-1
  6218  1E76  1D03               	skipz
  6219  1E77  2E70               	goto	u4515
  6220  1E78  3001               	movlw	1
  6221  1E79  02AD               	subwf	___lldiv@counter,f
  6222  1E7A  1D03               	btfss	3,2
  6223  1E7B  2E47               	goto	l4811
  6224  1E7C                     l4823:
  6225  1E7C  082C               	movf	___lldiv@quotient+3,w
  6226  1E7D  00A3               	movwf	?___lldiv+3
  6227  1E7E  082B               	movf	___lldiv@quotient+2,w
  6228  1E7F  00A2               	movwf	?___lldiv+2
  6229  1E80  082A               	movf	___lldiv@quotient+1,w
  6230  1E81  00A1               	movwf	?___lldiv+1
  6231  1E82  0829               	movf	___lldiv@quotient,w
  6232  1E83  00A0               	movwf	?___lldiv
  6233  1E84  0008               	return
  6234  1E85                     __end_of___lldiv:
  6235                           
  6236                           	psect	text14
  6237  03FF                     __ptext14:	
  6238 ;; *************** function _Decodify_Command *****************
  6239 ;; Defined at:
  6240 ;;		line 304 in file "SlaveLiofilizadorVer1.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;		None
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;  sizedata        1   24[BANK1 ] unsigned char 
  6245 ;;  add             1   23[BANK1 ] unsigned char 
  6246 ;;  add_24LCxxxx    4   32[BANK1 ] unsigned long 
  6247 ;;  OutPut          4   27[BANK1 ] float 
  6248 ;;  tempint         2   25[BANK1 ] int 
  6249 ;;  dados           2   21[BANK1 ] int 
  6250 ;;  tempchar        1   31[BANK1 ] unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      void 
  6253 ;; Registers used:
  6254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6255 ;; Tracked objects:
  6256 ;;		On entry : 300/100
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6260 ;;      Params:         0       0       0       0       0
  6261 ;;      Locals:         0       0      15       0       0
  6262 ;;      Temps:          0       0       4       0       0
  6263 ;;      Totals:         0       0      19       0       0
  6264 ;;Total ram usage:       19 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; Hardware stack levels required when called:    6
  6267 ;; This function calls:
  6268 ;;		_EEPROM_24C1025_Fill_All
  6269 ;;		_EEPROM_24C1025_Read_Buffer_USART
  6270 ;;		_EEPROM_24C1025_Read_Byte
  6271 ;;		_EEPROM_24C1025_Read_Int
  6272 ;;		_EEPROM_24C1025_Read_Str
  6273 ;;		_EEPROM_24C1025_Write_Buffer
  6274 ;;		_EEPROM_24C1025_Write_Byte
  6275 ;;		_EEPROM_24C1025_Write_Int
  6276 ;;		_EEPROM_24C1025_Write_Str
  6277 ;;		_EEPROM_Read_Byte
  6278 ;;		_EEPROM_Read_Integer
  6279 ;;		_EEPROM_Read_String
  6280 ;;		_EEPROM_Write_Byte
  6281 ;;		_EEPROM_Write_Integer
  6282 ;;		_EEPROM_Write_String
  6283 ;;		_PROCULUS_Buzzer
  6284 ;;		_PROCULUS_Show_Screen
  6285 ;;		_PROCULUS_VP_Write_String
  6286 ;;		_Save_Log
  6287 ;;		_Send_Reply_OK
  6288 ;;		_Send_To_MB
  6289 ;;		_USART_put_int
  6290 ;;		_USART_put_string
  6291 ;;		_USART_putc
  6292 ;;		_USART_to_Protocol
  6293 ;;		___flmul
  6294 ;;		___fltol
  6295 ;;		_strcpy
  6296 ;;		_strlen
  6297 ;; This function is called by:
  6298 ;;		_main
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           
  6303                           ;psect for function _Decodify_Command
  6304  03FF                     _Decodify_Command:
  6305                           
  6306                           ;SlaveLiofilizadorVer1.c: 306:     int dados;;SlaveLiofilizadorVer1.c: 307:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 308:     int tempint;;SlaveLiofilizadorVer1.c: 309:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 310:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 322:     USART_to_Protocol(&usart_protocol);
  6307                           
  6308                           ;incstack = 0
  6309                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6310  03FF  3090               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6311  0400  160A  158A  257C  120A  118A  	fcall	_USART_to_Protocol
  6312                           
  6313                           ;SlaveLiofilizadorVer1.c: 324:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6314  0405  1683               	bsf	3,5	;RP0=1, select bank3
  6315  0406  1703               	bsf	3,6	;RP1=1, select bank3
  6316  0407  0817               	movf	(_usart_protocol^(0+384)+7),w
  6317  0408  1303               	bcf	3,6	;RP1=0, select bank1
  6318  0409  00B1               	movwf	??_Decodify_Command^(0+128)
  6319  040A  0831               	movf	??_Decodify_Command^(0+128),w
  6320  040B  00C3               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6321                           
  6322                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6323  040C  1703               	bsf	3,6	;RP1=1, select bank3
  6324  040D  0818               	movf	(_usart_protocol^(0+384)+8),w
  6325  040E  1303               	bcf	3,6	;RP1=0, select bank1
  6326  040F  00B1               	movwf	??_Decodify_Command^(0+128)
  6327  0410  0831               	movf	??_Decodify_Command^(0+128),w
  6328  0411  00C2               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6329                           
  6330                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6331  0412  1703               	bsf	3,6	;RP1=1, select bank3
  6332  0413  0819               	movf	(_usart_protocol^(0+384)+9),w
  6333  0414  1303               	bcf	3,6	;RP1=0, select bank1
  6334  0415  00B1               	movwf	??_Decodify_Command^(0+128)
  6335  0416  0831               	movf	??_Decodify_Command^(0+128),w
  6336  0417  00C1               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6337                           
  6338                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6339  0418  1703               	bsf	3,6	;RP1=1, select bank3
  6340  0419  081A               	movf	(_usart_protocol^(0+384)+10),w
  6341  041A  1303               	bcf	3,6	;RP1=0, select bank1
  6342  041B  00B1               	movwf	??_Decodify_Command^(0+128)
  6343  041C  0831               	movf	??_Decodify_Command^(0+128),w
  6344  041D  00C0               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6345                           
  6346                           ;SlaveLiofilizadorVer1.c: 334:     switch(usart_protocol.command){
  6347  041E  2EF9               	goto	l5845
  6348  041F                     l5685:
  6349                           
  6350                           ;SlaveLiofilizadorVer1.c: 343:              strcpy(buffer,"v1.0.20");
  6351  041F  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6352  0420  00B1               	movwf	??_Decodify_Command^(0+128)
  6353  0421  0831               	movf	??_Decodify_Command^(0+128),w
  6354  0422  1283               	bcf	3,5	;RP0=0, select bank0
  6355  0423  00A0               	movwf	strcpy@from
  6356  0424  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6357  0425  160A  158A  2181  120A  118A  	fcall	_strcpy
  6358                           
  6359                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  6360  042A  300B               	movlw	11
  6361  042B                     L10:
  6362  042B  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6363                           
  6364                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string(buffer);
  6365  0430  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6366  0431  1283               	bcf	3,5	;RP0=0, select bank0
  6367  0432  00A1               	movwf	USART_put_string@vetor
  6368  0433  3001               	movlw	1
  6369  0434  00A2               	movwf	USART_put_string@vetor+1
  6370  0435  160A  158A  2373   	fcall	_USART_put_string
  6371                           
  6372                           ;SlaveLiofilizadorVer1.c: 346:              break;
  6373  0438  0008               	return
  6374  0439                     l5691:
  6375                           
  6376                           ;SlaveLiofilizadorVer1.c: 363:              if(usart_protocol.value[0]==0)
  6377  0439  1703               	bsf	3,6	;RP1=1, select bank3
  6378  043A  0816               	movf	(_usart_protocol^(0+384)+6),w
  6379  043B  1D03               	btfss	3,2
  6380  043C  2C46               	goto	l5695
  6381                           
  6382                           ;SlaveLiofilizadorVer1.c: 364:                 OutPut=Tensao1;
  6383  043D  1303               	bcf	3,6	;RP1=0, select bank1
  6384  043E  084C               	movf	(_Tensao1+3)^(0+128),w
  6385  043F  00BE               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6386  0440  084B               	movf	(_Tensao1+2)^(0+128),w
  6387  0441  00BD               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6388  0442  084A               	movf	(_Tensao1+1)^(0+128),w
  6389  0443  00BC               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6390  0444  0849               	movf	_Tensao1^(0+128),w
  6391  0445  2C4E               	goto	L8
  6392  0446                     l5695:
  6393                           
  6394                           ;SlaveLiofilizadorVer1.c: 366:                 OutPut=Vaccum0;
  6395  0446  1303               	bcf	3,6	;RP1=0, select bank1
  6396  0447  0850               	movf	(_Vaccum0+3)^(0+128),w
  6397  0448  00BE               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6398  0449  084F               	movf	(_Vaccum0+2)^(0+128),w
  6399  044A  00BD               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6400  044B  084E               	movf	(_Vaccum0+1)^(0+128),w
  6401  044C  00BC               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6402  044D  084D               	movf	_Vaccum0^(0+128),w
  6403  044E                     L8:
  6404  044E  00BB               	movwf	Decodify_Command@OutPut^(0+128)
  6405                           
  6406                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  6407  044F  3041               	movlw	65
  6408  0450  1283               	bcf	3,5	;RP0=0, select bank0
  6409  0451  00CE               	movwf	___flmul@b+3
  6410  0452  3020               	movlw	32
  6411  0453  00CD               	movwf	___flmul@b+2
  6412  0454  3000               	movlw	0
  6413  0455  00CC               	movwf	___flmul@b+1
  6414  0456  3000               	movlw	0
  6415  0457  00CB               	movwf	___flmul@b
  6416  0458  1683               	bsf	3,5	;RP0=1, select bank1
  6417  0459  083E               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6418  045A  1283               	bcf	3,5	;RP0=0, select bank0
  6419  045B  00D2               	movwf	___flmul@a+3
  6420  045C  1683               	bsf	3,5	;RP0=1, select bank1
  6421  045D  083D               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6422  045E  1283               	bcf	3,5	;RP0=0, select bank0
  6423  045F  00D1               	movwf	___flmul@a+2
  6424  0460  1683               	bsf	3,5	;RP0=1, select bank1
  6425  0461  083C               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6426  0462  1283               	bcf	3,5	;RP0=0, select bank0
  6427  0463  00D0               	movwf	___flmul@a+1
  6428  0464  1683               	bsf	3,5	;RP0=1, select bank1
  6429  0465  083B               	movf	Decodify_Command@OutPut^(0+128),w
  6430  0466  1283               	bcf	3,5	;RP0=0, select bank0
  6431  0467  00CF               	movwf	___flmul@a
  6432  0468  120A  158A  250B  120A  118A  	fcall	___flmul
  6433  046D  084E               	movf	?___flmul+3,w
  6434  046E  1683               	bsf	3,5	;RP0=1, select bank1
  6435  046F  00BE               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6436  0470  1283               	bcf	3,5	;RP0=0, select bank0
  6437  0471  084D               	movf	?___flmul+2,w
  6438  0472  1683               	bsf	3,5	;RP0=1, select bank1
  6439  0473  00BD               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6440  0474  1283               	bcf	3,5	;RP0=0, select bank0
  6441  0475  084C               	movf	?___flmul+1,w
  6442  0476  1683               	bsf	3,5	;RP0=1, select bank1
  6443  0477  00BC               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6444  0478  1283               	bcf	3,5	;RP0=0, select bank0
  6445  0479  084B               	movf	?___flmul,w
  6446  047A  1683               	bsf	3,5	;RP0=1, select bank1
  6447  047B  00BB               	movwf	Decodify_Command@OutPut^(0+128)
  6448                           
  6449                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  6450  047C  138B               	bcf	11,7	;volatile
  6451                           
  6452                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  6453  047D  3002               	movlw	2
  6454  047E  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6455                           
  6456                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  6457  0483  083E               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6458  0484  1283               	bcf	3,5	;RP0=0, select bank0
  6459  0485  00E8               	movwf	___fltol@f1+3
  6460  0486  1683               	bsf	3,5	;RP0=1, select bank1
  6461  0487  083D               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6462  0488  1283               	bcf	3,5	;RP0=0, select bank0
  6463  0489  00E7               	movwf	___fltol@f1+2
  6464  048A  1683               	bsf	3,5	;RP0=1, select bank1
  6465  048B  083C               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6466  048C  1283               	bcf	3,5	;RP0=0, select bank0
  6467  048D  00E6               	movwf	___fltol@f1+1
  6468  048E  1683               	bsf	3,5	;RP0=1, select bank1
  6469  048F  083B               	movf	Decodify_Command@OutPut^(0+128),w
  6470  0490  1283               	bcf	3,5	;RP0=0, select bank0
  6471  0491  00E5               	movwf	___fltol@f1
  6472  0492  160A  158A  2685  120A  118A  	fcall	___fltol
  6473  0497  0866               	movf	?___fltol+1,w
  6474  0498  1683               	bsf	3,5	;RP0=1, select bank1
  6475  0499  00A1               	movwf	(USART_put_int@value+1)^(0+128)
  6476  049A  1283               	bcf	3,5	;RP0=0, select bank0
  6477  049B  0865               	movf	?___fltol,w
  6478  049C  1683               	bsf	3,5	;RP0=1, select bank1
  6479  049D  00A0               	movwf	USART_put_int@value^(0+128)
  6480  049E  160A  158A  20C1   	fcall	_USART_put_int
  6481                           
  6482                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  6483  04A1  178B               	bsf	11,7	;volatile
  6484                           
  6485                           ;SlaveLiofilizadorVer1.c: 375:              break;
  6486  04A2  0008               	return
  6487  04A3                     l5707:
  6488                           
  6489                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6490  04A3  1703               	bsf	3,6	;RP1=1, select bank3
  6491  04A4  0816               	movf	(_usart_protocol^(0+384)+6),w
  6492  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  6493  04A6  00B1               	movwf	??_Decodify_Command^(0+128)
  6494  04A7  0831               	movf	??_Decodify_Command^(0+128),w
  6495  04A8  00C3               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6496                           
  6497                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6498  04A9  1703               	bsf	3,6	;RP1=1, select bank3
  6499  04AA  0817               	movf	(_usart_protocol^(0+384)+7),w
  6500  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  6501  04AC  00B1               	movwf	??_Decodify_Command^(0+128)
  6502  04AD  0831               	movf	??_Decodify_Command^(0+128),w
  6503  04AE  00C2               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6504                           
  6505                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6506  04AF  1703               	bsf	3,6	;RP1=1, select bank3
  6507  04B0  0818               	movf	(_usart_protocol^(0+384)+8),w
  6508  04B1  1303               	bcf	3,6	;RP1=0, select bank1
  6509  04B2  00B1               	movwf	??_Decodify_Command^(0+128)
  6510  04B3  0831               	movf	??_Decodify_Command^(0+128),w
  6511  04B4  00C1               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6512                           
  6513                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6514  04B5  1703               	bsf	3,6	;RP1=1, select bank3
  6515  04B6  0819               	movf	(_usart_protocol^(0+384)+9),w
  6516  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  6517  04B8  00B1               	movwf	??_Decodify_Command^(0+128)
  6518  04B9  0831               	movf	??_Decodify_Command^(0+128),w
  6519  04BA  00C0               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6520                           
  6521                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  6522  04BB  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6523  04BC  00AD               	movwf	(Save_Log@add_datalog+3)^(0+128)
  6524  04BD  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6525  04BE  00AC               	movwf	(Save_Log@add_datalog+2)^(0+128)
  6526  04BF  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6527  04C0  00AB               	movwf	(Save_Log@add_datalog+1)^(0+128)
  6528  04C1  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6529  04C2  00AA               	movwf	Save_Log@add_datalog^(0+128)
  6530  04C3  160A  158A  26F0   	fcall	_Save_Log
  6531                           
  6532                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  6533  04C6  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6534  04C7  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6535                           
  6536                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  6537  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  6538  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  6539  04CA  01D9               	clrf	_milisegundo^(0+128)	;volatile
  6540  04CB  01DA               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6541                           
  6542                           ;SlaveLiofilizadorVer1.c: 387:              break;
  6543  04CC  0008               	return
  6544  04CD                     l5715:
  6545                           
  6546                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  6547  04CD  3002               	movlw	2
  6548  04CE  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6549                           
  6550                           ;SlaveLiofilizadorVer1.c: 401:              USART_put_int(1);
  6551  04D3  3001               	movlw	1
  6552  04D4  00A0               	movwf	USART_put_int@value^(0+128)
  6553  04D5  3000               	movlw	0
  6554  04D6  00A1               	movwf	(USART_put_int@value^(0+128)+1)
  6555  04D7  160A  158A  20C1   	fcall	_USART_put_int
  6556                           
  6557                           ;SlaveLiofilizadorVer1.c: 411:              break;
  6558  04DA  0008               	return
  6559  04DB                     l5719:
  6560                           
  6561                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  6562  04DB  1703               	bsf	3,6	;RP1=1, select bank3
  6563  04DC  0817               	movf	(_usart_protocol^(0+384)+7),w
  6564  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  6565  04DE  00B1               	movwf	??_Decodify_Command^(0+128)
  6566  04DF  0831               	movf	??_Decodify_Command^(0+128),w
  6567  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  6568  04E1  00A0               	movwf	EEPROM_Write_Byte@dado
  6569  04E2  1683               	bsf	3,5	;RP0=1, select bank3
  6570  04E3  1703               	bsf	3,6	;RP1=1, select bank3
  6571  04E4  0816               	movf	(_usart_protocol^(0+384)+6),w
  6572  04E5  160A  158A  2480  120A  118A  	fcall	_EEPROM_Write_Byte
  6573  04EA                     L9:
  6574                           
  6575                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  6576  04EA  3003               	movlw	3
  6577  04EB  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6578                           
  6579                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  6580  04F0  160A  158A  207D   	fcall	_Send_Reply_OK
  6581                           
  6582                           ;SlaveLiofilizadorVer1.c: 432:              break;
  6583  04F3  0008               	return
  6584  04F4                     l5723:
  6585                           
  6586                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6587  04F4  1703               	bsf	3,6	;RP1=1, select bank3
  6588  04F5  0816               	movf	(_usart_protocol^(0+384)+6),w
  6589  04F6  160A  158A  21FE  120A  118A  	fcall	_EEPROM_Read_Byte
  6590  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  6591  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  6592  04FD  00B1               	movwf	??_Decodify_Command^(0+128)
  6593  04FE  0831               	movf	??_Decodify_Command^(0+128),w
  6594  04FF  00BF               	movwf	Decodify_Command@tempchar^(0+128)
  6595                           
  6596                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  6597  0500  3001               	movlw	1
  6598  0501  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6599                           
  6600                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  6601  0506  083F               	movf	Decodify_Command@tempchar^(0+128),w
  6602  0507  160A  158A  20B1   	fcall	_USART_putc
  6603                           
  6604                           ;SlaveLiofilizadorVer1.c: 437:              break;
  6605  050A  0008               	return
  6606  050B                     l5729:
  6607                           
  6608                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  6609  050B  1703               	bsf	3,6	;RP1=1, select bank3
  6610  050C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6611  050D  1303               	bcf	3,6	;RP1=0, select bank1
  6612  050E  00B1               	movwf	??_Decodify_Command^(0+128)
  6613  050F  0831               	movf	??_Decodify_Command^(0+128),w
  6614  0510  00B7               	movwf	Decodify_Command@add^(0+128)
  6615                           
  6616                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6617  0511  1703               	bsf	3,6	;RP1=1, select bank3
  6618  0512  0818               	movf	(_usart_protocol^(0+384)+8),w
  6619  0513  1303               	bcf	3,6	;RP1=0, select bank1
  6620  0514  00B1               	movwf	??_Decodify_Command^(0+128)
  6621  0515  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6622  0516  1703               	bsf	3,6	;RP1=1, select bank3
  6623  0517  0817               	movf	(_usart_protocol^(0+384)+7),w
  6624  0518  1303               	bcf	3,6	;RP1=0, select bank1
  6625  0519  00B3               	movwf	(??_Decodify_Command+2)^(0+128)
  6626  051A  01B4               	clrf	((??_Decodify_Command+2)^(0+128)+1)
  6627  051B  0833               	movf	(??_Decodify_Command+2)^(0+128),w
  6628  051C  00B4               	movwf	((??_Decodify_Command+2)^(0+128)+1)
  6629  051D  01B3               	clrf	(??_Decodify_Command+2)^(0+128)
  6630  051E  0831               	movf	??_Decodify_Command^(0+128),w
  6631  051F  0433               	iorwf	(??_Decodify_Command+2)^(0+128),w
  6632  0520  00B5               	movwf	Decodify_Command@dados^(0+128)
  6633  0521  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6634  0522  0434               	iorwf	(??_Decodify_Command+3)^(0+128),w
  6635  0523  00B6               	movwf	(Decodify_Command@dados+1)^(0+128)
  6636                           
  6637                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  6638  0524  0836               	movf	(Decodify_Command@dados+1)^(0+128),w
  6639  0525  1283               	bcf	3,5	;RP0=0, select bank0
  6640  0526  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6641  0527  1683               	bsf	3,5	;RP0=1, select bank1
  6642  0528  0835               	movf	Decodify_Command@dados^(0+128),w
  6643  0529  1283               	bcf	3,5	;RP0=0, select bank0
  6644  052A  00A5               	movwf	EEPROM_Write_Integer@dado
  6645  052B  1683               	bsf	3,5	;RP0=1, select bank1
  6646  052C  0837               	movf	Decodify_Command@add^(0+128),w
  6647  052D  160A  158A  2341  120A  118A  	fcall	_EEPROM_Write_Integer
  6648  0532  2CEA               	goto	L9
  6649  0533                     l5739:	
  6650                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  6651                           
  6652                           
  6653                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6654  0533  1703               	bsf	3,6	;RP1=1, select bank3
  6655  0534  0816               	movf	(_usart_protocol^(0+384)+6),w
  6656  0535  160A  158A  22BC  120A  118A  	fcall	_EEPROM_Read_Integer
  6657  053A  0824               	movf	?_EEPROM_Read_Integer+1,w
  6658  053B  1683               	bsf	3,5	;RP0=1, select bank1
  6659  053C  00BA               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6660  053D  1283               	bcf	3,5	;RP0=0, select bank0
  6661  053E  0823               	movf	?_EEPROM_Read_Integer,w
  6662  053F                     L11:
  6663  053F  1683               	bsf	3,5	;RP0=1, select bank1
  6664  0540  00B9               	movwf	Decodify_Command@tempint^(0+128)
  6665                           
  6666                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  6667  0541  3002               	movlw	2
  6668  0542  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6669                           
  6670                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  6671  0547  083A               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6672  0548  00A1               	movwf	(USART_put_int@value+1)^(0+128)
  6673  0549  0839               	movf	Decodify_Command@tempint^(0+128),w
  6674  054A  00A0               	movwf	USART_put_int@value^(0+128)
  6675  054B  160A  158A  20C1   	fcall	_USART_put_int
  6676                           
  6677                           ;SlaveLiofilizadorVer1.c: 452:              break;
  6678  054E  0008               	return
  6679  054F                     l5745:
  6680                           
  6681                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  6682  054F  3097               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6683  0550  00B1               	movwf	??_Decodify_Command^(0+128)
  6684  0551  0831               	movf	??_Decodify_Command^(0+128),w
  6685  0552  1283               	bcf	3,5	;RP0=0, select bank0
  6686  0553  00A5               	movwf	EEPROM_Write_String@dado
  6687  0554  1683               	bsf	3,5	;RP0=1, select bank3
  6688  0555  1703               	bsf	3,6	;RP1=1, select bank3
  6689  0556  0816               	movf	(_usart_protocol^(0+384)+6),w
  6690  0557  160A  118A  2002  120A  118A  	fcall	_EEPROM_Write_String
  6691  055C  2CEA               	goto	L9
  6692  055D                     l5751:	
  6693                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  6694                           
  6695                           
  6696                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 462:             
      +                           EEPROM_Read_String(usart_protocol.value[0],buffer);
  6697  055D  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6698  055E  00B1               	movwf	??_Decodify_Command^(0+128)
  6699  055F  0831               	movf	??_Decodify_Command^(0+128),w
  6700  0560  1283               	bcf	3,5	;RP0=0, select bank0
  6701  0561  00A3               	movwf	EEPROM_Read_String@dado
  6702  0562  1683               	bsf	3,5	;RP0=1, select bank3
  6703  0563  1703               	bsf	3,6	;RP1=1, select bank3
  6704  0564  0816               	movf	(_usart_protocol^(0+384)+6),w
  6705  0565  160A  158A  21BD  120A  118A  	fcall	_EEPROM_Read_String
  6706                           
  6707                           ;SlaveLiofilizadorVer1.c: 463:              Send_To_MB(sizeof(buffer));
  6708  056A  3021               	movlw	33
  6709  056B  2C2B               	goto	L10
  6710  056C                     l5757:
  6711                           
  6712                           ;SlaveLiofilizadorVer1.c: 470:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6713  056C  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6714  056D  1283               	bcf	3,5	;RP0=0, select bank0
  6715  056E  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6716  056F  1683               	bsf	3,5	;RP0=1, select bank1
  6717  0570  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6718  0571  1283               	bcf	3,5	;RP0=0, select bank0
  6719  0572  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6720  0573  1683               	bsf	3,5	;RP0=1, select bank1
  6721  0574  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6722  0575  1283               	bcf	3,5	;RP0=0, select bank0
  6723  0576  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6724  0577  1683               	bsf	3,5	;RP0=1, select bank1
  6725  0578  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6726  0579  1283               	bcf	3,5	;RP0=0, select bank0
  6727  057A  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6728  057B  1683               	bsf	3,5	;RP0=1, select bank3
  6729  057C  1703               	bsf	3,6	;RP1=1, select bank3
  6730  057D  081B               	movf	(_usart_protocol^(0+384)+11),w
  6731  057E  1303               	bcf	3,6	;RP1=0, select bank1
  6732  057F  00B1               	movwf	??_Decodify_Command^(0+128)
  6733  0580  0831               	movf	??_Decodify_Command^(0+128),w
  6734  0581  1283               	bcf	3,5	;RP0=0, select bank0
  6735  0582  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  6736  0583  1683               	bsf	3,5	;RP0=1, select bank3
  6737  0584  1703               	bsf	3,6	;RP1=1, select bank3
  6738  0585  0816               	movf	(_usart_protocol^(0+384)+6),w
  6739  0586  160A  158A  20EB  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6740  058B  2CEA               	goto	L9
  6741  058C                     l5763:	
  6742                           ;SlaveLiofilizadorVer1.c: 473:              Send_To_MB(3);
  6743                           
  6744                           
  6745                           ;SlaveLiofilizadorVer1.c: 477:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6746  058C  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6747  058D  1283               	bcf	3,5	;RP0=0, select bank0
  6748  058E  00BA               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6749  058F  1683               	bsf	3,5	;RP0=1, select bank1
  6750  0590  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6751  0591  1283               	bcf	3,5	;RP0=0, select bank0
  6752  0592  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6753  0593  1683               	bsf	3,5	;RP0=1, select bank1
  6754  0594  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6755  0595  1283               	bcf	3,5	;RP0=0, select bank0
  6756  0596  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6757  0597  1683               	bsf	3,5	;RP0=1, select bank1
  6758  0598  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6759  0599  1283               	bcf	3,5	;RP0=0, select bank0
  6760  059A  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6761  059B  1683               	bsf	3,5	;RP0=1, select bank3
  6762  059C  1703               	bsf	3,6	;RP1=1, select bank3
  6763  059D  0816               	movf	(_usart_protocol^(0+384)+6),w
  6764  059E  160A  158A  2119  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6765  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  6766  05A4  00B1               	movwf	??_Decodify_Command^(0+128)
  6767  05A5  0831               	movf	??_Decodify_Command^(0+128),w
  6768  05A6  00BF               	movwf	Decodify_Command@tempchar^(0+128)
  6769                           
  6770                           ;SlaveLiofilizadorVer1.c: 481:              Send_To_MB(1);
  6771  05A7  3001               	movlw	1
  6772  05A8  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6773                           
  6774                           ;SlaveLiofilizadorVer1.c: 482:              USART_putc(tempchar);
  6775  05AD  083F               	movf	Decodify_Command@tempchar^(0+128),w
  6776  05AE  160A  158A  20B1   	fcall	_USART_putc
  6777                           
  6778                           ;SlaveLiofilizadorVer1.c: 483:              break;
  6779  05B1  0008               	return
  6780  05B2                     l5769:
  6781                           
  6782                           ;SlaveLiofilizadorVer1.c: 485:              {;SlaveLiofilizadorVer1.c: 486:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6783  05B2  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6784  05B3  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  6785  05B4  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6786  05B5  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  6787  05B6  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6788  05B7  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  6789  05B8  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6790  05B9  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  6791  05BA  1703               	bsf	3,6	;RP1=1, select bank3
  6792  05BB  081C               	movf	(_usart_protocol^(0+384)+12),w
  6793  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  6794  05BD  00B1               	movwf	??_Decodify_Command^(0+128)
  6795  05BE  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6796  05BF  1703               	bsf	3,6	;RP1=1, select bank3
  6797  05C0  081B               	movf	(_usart_protocol^(0+384)+11),w
  6798  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  6799  05C2  00B3               	movwf	(??_Decodify_Command+2)^(0+128)
  6800  05C3  01B4               	clrf	((??_Decodify_Command+2)^(0+128)+1)
  6801  05C4  0833               	movf	(??_Decodify_Command+2)^(0+128),w
  6802  05C5  00B4               	movwf	((??_Decodify_Command+2)^(0+128)+1)
  6803  05C6  01B3               	clrf	(??_Decodify_Command+2)^(0+128)
  6804  05C7  0831               	movf	??_Decodify_Command^(0+128),w
  6805  05C8  0433               	iorwf	(??_Decodify_Command+2)^(0+128),w
  6806  05C9  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  6807  05CA  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6808  05CB  0434               	iorwf	(??_Decodify_Command+3)^(0+128),w
  6809  05CC  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  6810  05CD  1703               	bsf	3,6	;RP1=1, select bank3
  6811  05CE  0816               	movf	(_usart_protocol^(0+384)+6),w
  6812  05CF  160A  158A  2293  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6813  05D4  2CEA               	goto	L9
  6814  05D5                     l5775:	
  6815                           ;SlaveLiofilizadorVer1.c: 491:              Send_To_MB(3);
  6816                           
  6817                           
  6818                           ;SlaveLiofilizadorVer1.c: 496:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6819  05D5  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6820  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  6821  05D7  00BA               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6822  05D8  1683               	bsf	3,5	;RP0=1, select bank1
  6823  05D9  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6824  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  6825  05DB  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6826  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  6827  05DD  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6828  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  6829  05DF  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6830  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  6831  05E1  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6832  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  6833  05E3  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6834  05E4  1683               	bsf	3,5	;RP0=1, select bank3
  6835  05E5  1703               	bsf	3,6	;RP1=1, select bank3
  6836  05E6  0816               	movf	(_usart_protocol^(0+384)+6),w
  6837  05E7  160A  158A  2243  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6838  05EC  0838               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6839  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  6840  05EE  00BA               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6841  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  6842  05F0  0837               	movf	?_EEPROM_24C1025_Read_Int,w
  6843  05F1  2D3F               	goto	L11
  6844  05F2                     l5781:	
  6845                           ;SlaveLiofilizadorVer1.c: 498:              Send_To_MB(2);
  6846                           
  6847                           
  6848                           ;SlaveLiofilizadorVer1.c: 504:              {;SlaveLiofilizadorVer1.c: 505:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 506:              sizedata=usart_protocol.value
      +                          [5];
  6849  05F2  1703               	bsf	3,6	;RP1=1, select bank3
  6850  05F3  081B               	movf	(_usart_protocol^(0+384)+11),w
  6851  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  6852  05F5  00B1               	movwf	??_Decodify_Command^(0+128)
  6853  05F6  0831               	movf	??_Decodify_Command^(0+128),w
  6854  05F7  00B8               	movwf	Decodify_Command@sizedata^(0+128)
  6855                           
  6856                           ;SlaveLiofilizadorVer1.c: 507:              Send_To_MB(sizedata);
  6857  05F8  0838               	movf	Decodify_Command@sizedata^(0+128),w
  6858  05F9  160A  158A  226B  120A  118A  	fcall	_Send_To_MB
  6859                           
  6860                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer_USART(usart_proto
      +                          col.value[0],
  6861  05FE  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6862  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  6863  0600  00AC               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3
  6864  0601  1683               	bsf	3,5	;RP0=1, select bank1
  6865  0602  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6866  0603  1283               	bcf	3,5	;RP0=0, select bank0
  6867  0604  00AB               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2
  6868  0605  1683               	bsf	3,5	;RP0=1, select bank1
  6869  0606  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6870  0607  1283               	bcf	3,5	;RP0=0, select bank0
  6871  0608  00AA               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1
  6872  0609  1683               	bsf	3,5	;RP0=1, select bank1
  6873  060A  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6874  060B  1283               	bcf	3,5	;RP0=0, select bank0
  6875  060C  00A9               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add
  6876  060D  1683               	bsf	3,5	;RP0=1, select bank1
  6877  060E  0838               	movf	Decodify_Command@sizedata^(0+128),w
  6878  060F  00B1               	movwf	??_Decodify_Command^(0+128)
  6879  0610  0831               	movf	??_Decodify_Command^(0+128),w
  6880  0611  1283               	bcf	3,5	;RP0=0, select bank0
  6881  0612  00AD               	movwf	EEPROM_24C1025_Read_Buffer_USART@sizedata
  6882  0613  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6883  0614  1683               	bsf	3,5	;RP0=1, select bank1
  6884  0615  00B2               	movwf	(??_Decodify_Command+1)^(0+128)
  6885  0616  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6886  0617  1283               	bcf	3,5	;RP0=0, select bank0
  6887  0618  00AE               	movwf	EEPROM_24C1025_Read_Buffer_USART@data
  6888  0619  1683               	bsf	3,5	;RP0=1, select bank3
  6889  061A  1703               	bsf	3,6	;RP1=1, select bank3
  6890  061B  0816               	movf	(_usart_protocol^(0+384)+6),w
  6891  061C  160A  118A  2504   	fcall	_EEPROM_24C1025_Read_Buffer_USART
  6892                           
  6893                           ;SlaveLiofilizadorVer1.c: 513:              };SlaveLiofilizadorVer1.c: 514:             
      +                           break;
  6894  061F  0008               	return
  6895  0620                     l5787:
  6896                           
  6897                           ;SlaveLiofilizadorVer1.c: 517:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6898  0620  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6899  0621  1283               	bcf	3,5	;RP0=0, select bank0
  6900  0622  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6901  0623  1683               	bsf	3,5	;RP0=1, select bank1
  6902  0624  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6903  0625  1283               	bcf	3,5	;RP0=0, select bank0
  6904  0626  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6905  0627  1683               	bsf	3,5	;RP0=1, select bank1
  6906  0628  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6907  0629  1283               	bcf	3,5	;RP0=0, select bank0
  6908  062A  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6909  062B  1683               	bsf	3,5	;RP0=1, select bank1
  6910  062C  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6911  062D  1283               	bcf	3,5	;RP0=0, select bank0
  6912  062E  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6913  062F  1683               	bsf	3,5	;RP0=1, select bank3
  6914  0630  1703               	bsf	3,6	;RP1=1, select bank3
  6915  0631  081B               	movf	(_usart_protocol^(0+384)+11),w
  6916  0632  1303               	bcf	3,6	;RP1=0, select bank1
  6917  0633  00B1               	movwf	??_Decodify_Command^(0+128)
  6918  0634  0831               	movf	??_Decodify_Command^(0+128),w
  6919  0635  1283               	bcf	3,5	;RP0=0, select bank0
  6920  0636  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6921  0637  309C               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6922  0638  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6923  0639  3001               	movlw	1
  6924  063A  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6925  063B  1683               	bsf	3,5	;RP0=1, select bank3
  6926  063C  1703               	bsf	3,6	;RP1=1, select bank3
  6927  063D  0816               	movf	(_usart_protocol^(0+384)+6),w
  6928  063E  160A  118A  2214  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6929  0643  2CEA               	goto	L9
  6930  0644                     l5793:	
  6931                           ;SlaveLiofilizadorVer1.c: 522:              Send_To_MB(3);
  6932                           
  6933                           
  6934                           ;SlaveLiofilizadorVer1.c: 527:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6935  0644  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6936  0645  1283               	bcf	3,5	;RP0=0, select bank0
  6937  0646  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6938  0647  1683               	bsf	3,5	;RP0=1, select bank1
  6939  0648  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6940  0649  1283               	bcf	3,5	;RP0=0, select bank0
  6941  064A  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6942  064B  1683               	bsf	3,5	;RP0=1, select bank1
  6943  064C  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6944  064D  1283               	bcf	3,5	;RP0=0, select bank0
  6945  064E  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6946  064F  1683               	bsf	3,5	;RP0=1, select bank1
  6947  0650  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6948  0651  1283               	bcf	3,5	;RP0=0, select bank0
  6949  0652  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6950  0653  309B               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6951  0654  1683               	bsf	3,5	;RP0=1, select bank1
  6952  0655  00B1               	movwf	??_Decodify_Command^(0+128)
  6953  0656  0831               	movf	??_Decodify_Command^(0+128),w
  6954  0657  1283               	bcf	3,5	;RP0=0, select bank0
  6955  0658  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6956  0659  1683               	bsf	3,5	;RP0=1, select bank3
  6957  065A  1703               	bsf	3,6	;RP1=1, select bank3
  6958  065B  0816               	movf	(_usart_protocol^(0+384)+6),w
  6959  065C  120A  158A  2042  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6960  0661  2CEA               	goto	L9
  6961  0662                     l5799:	
  6962                           ;SlaveLiofilizadorVer1.c: 530:              Send_To_MB(3);
  6963                           
  6964                           
  6965                           ;SlaveLiofilizadorVer1.c: 534:              {;SlaveLiofilizadorVer1.c: 535:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6966  0662  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6967  0663  1283               	bcf	3,5	;RP0=0, select bank0
  6968  0664  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6969  0665  1683               	bsf	3,5	;RP0=1, select bank1
  6970  0666  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6971  0667  1283               	bcf	3,5	;RP0=0, select bank0
  6972  0668  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6973  0669  1683               	bsf	3,5	;RP0=1, select bank1
  6974  066A  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6975  066B  1283               	bcf	3,5	;RP0=0, select bank0
  6976  066C  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6977  066D  1683               	bsf	3,5	;RP0=1, select bank1
  6978  066E  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6979  066F  1283               	bcf	3,5	;RP0=0, select bank0
  6980  0670  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6981  0671  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6982  0672  1683               	bsf	3,5	;RP0=1, select bank1
  6983  0673  00B1               	movwf	??_Decodify_Command^(0+128)
  6984  0674  0831               	movf	??_Decodify_Command^(0+128),w
  6985  0675  1283               	bcf	3,5	;RP0=0, select bank0
  6986  0676  00AD               	movwf	EEPROM_24C1025_Read_Str@buffer
  6987  0677  1683               	bsf	3,5	;RP0=1, select bank3
  6988  0678  1703               	bsf	3,6	;RP1=1, select bank3
  6989  0679  0816               	movf	(_usart_protocol^(0+384)+6),w
  6990  067A  160A  118A  238A  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6991                           
  6992                           ;SlaveLiofilizadorVer1.c: 539:              Send_To_MB(strlen(buffer)+1);
  6993  067F  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6994  0680  160A  158A  2132  120A  118A  	fcall	_strlen
  6995  0685  0820               	movf	?_strlen,w
  6996  0686  3E01               	addlw	1
  6997  0687  2C2B               	goto	L10
  6998  0688                     l5803:
  6999                           
  7000                           ;SlaveLiofilizadorVer1.c: 545:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  7001  0688  1703               	bsf	3,6	;RP1=1, select bank3
  7002  0689  0817               	movf	(_usart_protocol^(0+384)+7),w
  7003  068A  1303               	bcf	3,6	;RP1=0, select bank1
  7004  068B  00B1               	movwf	??_Decodify_Command^(0+128)
  7005  068C  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  7006  068D  0831               	movf	??_Decodify_Command^(0+128),w
  7007  068E  00AA               	movwf	EEPROM_24C1025_Fill_All@value^(0+128)
  7008  068F  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  7009  0690  00AB               	movwf	(EEPROM_24C1025_Fill_All@value+1)^(0+128)
  7010  0691  1703               	bsf	3,6	;RP1=1, select bank3
  7011  0692  0816               	movf	(_usart_protocol^(0+384)+6),w
  7012  0693  160A  158A  24F8  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  7013  0698  2CEA               	goto	L9
  7014  0699                     l5809:	
  7015                           ;SlaveLiofilizadorVer1.c: 547:              Send_To_MB(3);
  7016                           
  7017                           
  7018                           ;SlaveLiofilizadorVer1.c: 552:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7019  0699  1703               	bsf	3,6	;RP1=1, select bank3
  7020  069A  0816               	movf	(_usart_protocol^(0+384)+6),w
  7021  069B  1303               	bcf	3,6	;RP1=0, select bank1
  7022  069C  00B1               	movwf	??_Decodify_Command^(0+128)
  7023  069D  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  7024  069E  0831               	movf	??_Decodify_Command^(0+128),w
  7025  069F  00A8               	movwf	PROCULUS_Show_Screen@screen^(0+128)
  7026  06A0  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  7027  06A1  00A9               	movwf	(PROCULUS_Show_Screen@screen+1)^(0+128)
  7028  06A2  160A  158A  20D6  120A  118A  	fcall	_PROCULUS_Show_Screen
  7029  06A7  2CEA               	goto	L9
  7030  06A8                     l5815:	
  7031                           ;SlaveLiofilizadorVer1.c: 553:              Send_To_MB(3);
  7032                           
  7033                           
  7034                           ;SlaveLiofilizadorVer1.c: 558:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7035  06A8  1703               	bsf	3,6	;RP1=1, select bank3
  7036  06A9  0816               	movf	(_usart_protocol^(0+384)+6),w
  7037  06AA  1303               	bcf	3,6	;RP1=0, select bank1
  7038  06AB  00B1               	movwf	??_Decodify_Command^(0+128)
  7039  06AC  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  7040  06AD  0831               	movf	??_Decodify_Command^(0+128),w
  7041  06AE  00B2               	movwf	(??_Decodify_Command^(0+128)+1)
  7042  06AF  01B1               	clrf	??_Decodify_Command^(0+128)
  7043  06B0  1703               	bsf	3,6	;RP1=1, select bank3
  7044  06B1  0817               	movf	(_usart_protocol^(0+384)+7),w
  7045  06B2  1303               	bcf	3,6	;RP1=0, select bank1
  7046  06B3  0731               	addwf	??_Decodify_Command^(0+128),w
  7047  06B4  00A8               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  7048  06B5  3000               	movlw	0
  7049  06B6  1803               	skipnc
  7050  06B7  3001               	movlw	1
  7051  06B8  0732               	addwf	(??_Decodify_Command+1)^(0+128),w
  7052  06B9  00A9               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  7053  06BA  160A  158A  22E6  120A  118A  	fcall	_PROCULUS_Buzzer
  7054  06BF  2CEA               	goto	L9
  7055  06C0                     l5821:	
  7056                           ;SlaveLiofilizadorVer1.c: 560:              Send_To_MB(3);
  7057                           
  7058                           
  7059                           ;SlaveLiofilizadorVer1.c: 564:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  7060  06C0  1703               	bsf	3,6	;RP1=1, select bank3
  7061  06C1  0816               	movf	(_usart_protocol^(0+384)+6),w
  7062  06C2  1303               	bcf	3,6	;RP1=0, select bank1
  7063  06C3  00B1               	movwf	??_Decodify_Command^(0+128)
  7064  06C4  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  7065  06C5  0831               	movf	??_Decodify_Command^(0+128),w
  7066  06C6  00B2               	movwf	(??_Decodify_Command^(0+128)+1)
  7067  06C7  01B1               	clrf	??_Decodify_Command^(0+128)
  7068  06C8  1703               	bsf	3,6	;RP1=1, select bank3
  7069  06C9  0817               	movf	(_usart_protocol^(0+384)+7),w
  7070  06CA  1303               	bcf	3,6	;RP1=0, select bank1
  7071  06CB  0731               	addwf	??_Decodify_Command^(0+128),w
  7072  06CC  00AC               	movwf	PROCULUS_VP_Write_String@vp^(0+128)
  7073  06CD  3000               	movlw	0
  7074  06CE  1803               	skipnc
  7075  06CF  3001               	movlw	1
  7076  06D0  0732               	addwf	(??_Decodify_Command+1)^(0+128),w
  7077  06D1  00AD               	movwf	(PROCULUS_VP_Write_String@vp+1)^(0+128)
  7078  06D2  3098               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  7079  06D3  00B3               	movwf	(??_Decodify_Command+2)^(0+128)
  7080  06D4  0833               	movf	(??_Decodify_Command+2)^(0+128),w
  7081  06D5  00AE               	movwf	PROCULUS_VP_Write_String@text^(0+128)
  7082  06D6  160A  158A  2101  120A  118A  	fcall	_PROCULUS_VP_Write_String
  7083  06DB  2CEA               	goto	L9
  7084  06DC                     l5827:	
  7085                           ;SlaveLiofilizadorVer1.c: 567:              Send_To_MB(3);
  7086                           
  7087                           
  7088                           ;SlaveLiofilizadorVer1.c: 573:              if(usart_protocol.value[0]==0)
  7089  06DC  1703               	bsf	3,6	;RP1=1, select bank3
  7090  06DD  0816               	movf	(_usart_protocol^(0+384)+6),w
  7091  06DE  1D03               	btfss	3,2
  7092  06DF  2EEB               	goto	l5833
  7093                           
  7094                           ;SlaveLiofilizadorVer1.c: 574:                 {;SlaveLiofilizadorVer1.c: 575:          
      +                                 if(!usart_protocol.value[1])
  7095  06E0  0817               	movf	(_usart_protocol^(0+384)+7),w
  7096  06E1  1D03               	btfss	3,2
  7097  06E2  2EE7               	goto	l424
  7098                           
  7099                           ;SlaveLiofilizadorVer1.c: 576:                    PORTCbits.RC0=0;
  7100  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  7101  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  7102  06E5  1007               	bcf	7,0	;volatile
  7103  06E6  2CEA               	goto	L9
  7104  06E7                     l424:	
  7105                           ;SlaveLiofilizadorVer1.c: 577:                 else
  7106                           
  7107                           
  7108                           ;SlaveLiofilizadorVer1.c: 578:                    PORTCbits.RC0=1;
  7109  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  7110  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  7111  06E9  1407               	bsf	7,0	;volatile
  7112  06EA  2CEA               	goto	L9
  7113  06EB                     l5833:
  7114  06EB  0316               	decf	(_usart_protocol^(0+384)+6),w
  7115  06EC  1D03               	btfss	3,2
  7116  06ED  2CEA               	goto	L9
  7117                           
  7118                           ;SlaveLiofilizadorVer1.c: 581:                      {;SlaveLiofilizadorVer1.c: 582:     
      +                                            if(!usart_protocol.value[1])
  7119  06EE  0817               	movf	(_usart_protocol^(0+384)+7),w
  7120  06EF  1D03               	btfss	3,2
  7121  06F0  2EF5               	goto	l428
  7122                           
  7123                           ;SlaveLiofilizadorVer1.c: 583:                          PORTCbits.RC1=0;
  7124  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  7125  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  7126  06F3  1087               	bcf	7,1	;volatile
  7127  06F4  2CEA               	goto	L9
  7128  06F5                     l428:	
  7129                           ;SlaveLiofilizadorVer1.c: 584:                       else
  7130                           
  7131                           
  7132                           ;SlaveLiofilizadorVer1.c: 585:                          PORTCbits.RC1=1;
  7133  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  7134  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  7135  06F7  1487               	bsf	7,1	;volatile
  7136  06F8  2CEA               	goto	L9
  7137  06F9                     l5845:	
  7138                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(3);
  7139                           
  7140  06F9  1703               	bsf	3,6	;RP1=1, select bank3
  7141  06FA  0814               	movf	(_usart_protocol^(0+384)+4),w
  7142  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  7143  06FC  00B1               	movwf	??_Decodify_Command^(0+128)
  7144  06FD  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  7145                           
  7146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7147                           ; Switch size 1, requested type "simple"
  7148                           ; Number of cases is 1, Range of values is 0 to 0
  7149                           ; switch strategies available:
  7150                           ; Name         Instructions Cycles
  7151                           ; simple_byte            4     3 (average)
  7152                           ; direct_byte           11     8 (fixed)
  7153                           ; jumptable            260     6 (fixed)
  7154                           ;	Chosen strategy is simple_byte
  7155  06FE  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  7156  06FF  3A00               	xorlw	0	; case 0
  7157  0700  1903               	skipnz
  7158  0701  2F03               	goto	l5991
  7159  0702  2F4A               	goto	l430
  7160  0703                     l5991:
  7161                           
  7162                           ; Switch size 1, requested type "simple"
  7163                           ; Number of cases is 23, Range of values is 2 to 65
  7164                           ; switch strategies available:
  7165                           ; Name         Instructions Cycles
  7166                           ; simple_byte           70    36 (average)
  7167                           ; direct_byte          203    11 (fixed)
  7168                           ; jumptable            263     9 (fixed)
  7169                           ;	Chosen strategy is simple_byte
  7170  0703  0831               	movf	??_Decodify_Command^(0+128),w
  7171  0704  3A02               	xorlw	2	; case 2
  7172  0705  1903               	skipnz
  7173  0706  2CA3               	goto	l5707
  7174  0707  3A01               	xorlw	1	; case 3
  7175  0708  1903               	skipnz
  7176  0709  2CCD               	goto	l5715
  7177  070A  3A0B               	xorlw	11	; case 8
  7178  070B  1903               	skipnz
  7179  070C  2CDB               	goto	l5719
  7180  070D  3A01               	xorlw	1	; case 9
  7181  070E  1903               	skipnz
  7182  070F  2CF4               	goto	l5723
  7183  0710  3A03               	xorlw	3	; case 10
  7184  0711  1903               	skipnz
  7185  0712  2D0B               	goto	l5729
  7186  0713  3A01               	xorlw	1	; case 11
  7187  0714  1903               	skipnz
  7188  0715  2D33               	goto	l5739
  7189  0716  3A07               	xorlw	7	; case 12
  7190  0717  1903               	skipnz
  7191  0718  2D4F               	goto	l5745
  7192  0719  3A01               	xorlw	1	; case 13
  7193  071A  1903               	skipnz
  7194  071B  2D5D               	goto	l5751
  7195  071C  3A1C               	xorlw	28	; case 17
  7196  071D  1903               	skipnz
  7197  071E  2D6C               	goto	l5757
  7198  071F  3A03               	xorlw	3	; case 18
  7199  0720  1903               	skipnz
  7200  0721  2D8C               	goto	l5763
  7201  0722  3A01               	xorlw	1	; case 19
  7202  0723  1903               	skipnz
  7203  0724  2DB2               	goto	l5769
  7204  0725  3A07               	xorlw	7	; case 20
  7205  0726  1903               	skipnz
  7206  0727  2DD5               	goto	l5775
  7207  0728  3A01               	xorlw	1	; case 21
  7208  0729  1903               	skipnz
  7209  072A  2E44               	goto	l5793
  7210  072B  3A03               	xorlw	3	; case 22
  7211  072C  1903               	skipnz
  7212  072D  2E62               	goto	l5799
  7213  072E  3A01               	xorlw	1	; case 23
  7214  072F  1903               	skipnz
  7215  0730  2E20               	goto	l5787
  7216  0731  3A0F               	xorlw	15	; case 24
  7217  0732  1903               	skipnz
  7218  0733  2DF2               	goto	l5781
  7219  0734  3A01               	xorlw	1	; case 25
  7220  0735  1903               	skipnz
  7221  0736  2E88               	goto	l5803
  7222  0737  3A03               	xorlw	3	; case 26
  7223  0738  1903               	skipnz
  7224  0739  2C39               	goto	l5691
  7225  073A  3A38               	xorlw	56	; case 34
  7226  073B  1903               	skipnz
  7227  073C  2EC0               	goto	l5821
  7228  073D  3A06               	xorlw	6	; case 36
  7229  073E  1903               	skipnz
  7230  073F  2EA8               	goto	l5815
  7231  0740  3A01               	xorlw	1	; case 37
  7232  0741  1903               	skipnz
  7233  0742  2E99               	goto	l5809
  7234  0743  3A15               	xorlw	21	; case 48
  7235  0744  1903               	skipnz
  7236  0745  2EDC               	goto	l5827
  7237  0746  3A71               	xorlw	113	; case 65
  7238  0747  1903               	skipnz
  7239  0748  2C1F               	goto	l5685
  7240  0749  2F4A               	goto	l430
  7241  074A                     l430:
  7242  074A  0008               	return
  7243  074B                     __end_of_Decodify_Command:
  7244                           
  7245                           	psect	text15
  7246  1981                     __ptext15:	
  7247 ;; *************** function _strcpy *****************
  7248 ;; Defined at:
  7249 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcpy.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  to              1    wreg     PTR unsigned char 
  7252 ;;		 -> buffer(33), 
  7253 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  7254 ;;		 -> STR_1(8), 
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;  to              1    2[BANK0 ] PTR unsigned char 
  7257 ;;		 -> buffer(33), 
  7258 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7259 ;;		 -> buffer(33), 
  7260 ;; Return value:  Size  Location     Type
  7261 ;;                  1    wreg      PTR unsigned char 
  7262 ;; Registers used:
  7263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7264 ;; Tracked objects:
  7265 ;;		On entry : 300/0
  7266 ;;		On exit  : B00/800
  7267 ;;		Unchanged: 0/0
  7268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7269 ;;      Params:         0       1       0       0       0
  7270 ;;      Locals:         0       2       0       0       0
  7271 ;;      Temps:          0       1       0       0       0
  7272 ;;      Totals:         0       4       0       0       0
  7273 ;;Total ram usage:        4 bytes
  7274 ;; Hardware stack levels used:    2
  7275 ;; Hardware stack levels required when called:    1
  7276 ;; This function calls:
  7277 ;;		Nothing
  7278 ;; This function is called by:
  7279 ;;		_Decodify_Command
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           
  7284                           ;psect for function _strcpy
  7285  1981                     _strcpy:
  7286                           
  7287                           ;incstack = 0
  7288                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  7289                           ;strcpy@to stored from wreg
  7290  1981  00A2               	movwf	strcpy@to
  7291  1982  0822               	movf	strcpy@to,w
  7292  1983  00A1               	movwf	??_strcpy
  7293  1984  0821               	movf	??_strcpy,w
  7294  1985  00A3               	movwf	strcpy@cp
  7295  1986                     l4721:
  7296  1986  0820               	movf	strcpy@from,w
  7297  1987  0084               	movwf	4
  7298  1988  160A  158A  200A  160A  158A  	fcall	stringdir
  7299  198D  00A1               	movwf	??_strcpy
  7300  198E  0823               	movf	strcpy@cp,w
  7301  198F  0084               	movwf	4
  7302  1990  0821               	movf	??_strcpy,w
  7303  1991  1783               	bsf	3,7	;select IRP bank2
  7304  1992  0080               	movwf	0
  7305  1993  0800               	movf	0,w
  7306  1994  1903               	btfsc	3,2
  7307  1995  0008               	return
  7308  1996  3001               	movlw	1
  7309  1997  00A1               	movwf	??_strcpy
  7310  1998  0821               	movf	??_strcpy,w
  7311  1999  07A3               	addwf	strcpy@cp,f
  7312  199A  3001               	movlw	1
  7313  199B  00A1               	movwf	??_strcpy
  7314  199C  0821               	movf	??_strcpy,w
  7315  199D  07A0               	addwf	strcpy@from,f
  7316  199E  2986               	goto	l4721
  7317  199F                     __end_of_strcpy:
  7318                           
  7319                           	psect	text16
  7320  1D7C                     __ptext16:	
  7321 ;; *************** function _USART_to_Protocol *****************
  7322 ;; Defined at:
  7323 ;;		line 77 in file "usart.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  usart_protoc    1    wreg     PTR struct .
  7326 ;;		 -> usart_protocol(58), 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  7329 ;;		 -> usart_protocol(58), 
  7330 ;;  i               2    2[BANK0 ] int 
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  1    wreg      void 
  7333 ;; Registers used:
  7334 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7335 ;; Tracked objects:
  7336 ;;		On entry : 300/100
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7340 ;;      Params:         0       0       0       0       0
  7341 ;;      Locals:         0       3       0       0       0
  7342 ;;      Temps:          0       2       0       0       0
  7343 ;;      Totals:         0       5       0       0       0
  7344 ;;Total ram usage:        5 bytes
  7345 ;; Hardware stack levels used:    1
  7346 ;; Hardware stack levels required when called:    1
  7347 ;; This function calls:
  7348 ;;		Nothing
  7349 ;; This function is called by:
  7350 ;;		_Decodify_Command
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354                           
  7355                           ;psect for function _USART_to_Protocol
  7356  1D7C                     _USART_to_Protocol:
  7357                           
  7358                           ;incstack = 0
  7359                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  7360                           ;USART_to_Protocol@usart_protocol stored from wreg
  7361  1D7C  1283               	bcf	3,5	;RP0=0, select bank0
  7362  1D7D  00A4               	movwf	USART_to_Protocol@usart_protocol
  7363                           
  7364                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  7365  1D7E  0824               	movf	USART_to_Protocol@usart_protocol,w
  7366  1D7F  0084               	movwf	4
  7367  1D80  1703               	bsf	3,6	;RP1=1, select bank2
  7368  1D81  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  7369  1D82  1783               	bsf	3,7	;select IRP bank2
  7370  1D83  0080               	movwf	0
  7371  1D84  0A84               	incf	4,f
  7372  1D85  0810               	movf	_usart_buffer^(0+256),w	;volatile
  7373  1D86  0080               	movwf	0
  7374                           
  7375                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  7376  1D87  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  7377  1D88  1303               	bcf	3,6	;RP1=0, select bank0
  7378  1D89  00A0               	movwf	??_USART_to_Protocol
  7379  1D8A  0824               	movf	USART_to_Protocol@usart_protocol,w
  7380  1D8B  3E02               	addlw	2
  7381  1D8C  0084               	movwf	4
  7382  1D8D  0820               	movf	??_USART_to_Protocol,w
  7383  1D8E  0080               	movwf	0
  7384                           
  7385                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  7386  1D8F  1703               	bsf	3,6	;RP1=1, select bank2
  7387  1D90  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  7388  1D91  1303               	bcf	3,6	;RP1=0, select bank0
  7389  1D92  00A0               	movwf	??_USART_to_Protocol
  7390  1D93  0824               	movf	USART_to_Protocol@usart_protocol,w
  7391  1D94  3E03               	addlw	3
  7392  1D95  0084               	movwf	4
  7393  1D96  0820               	movf	??_USART_to_Protocol,w
  7394  1D97  0080               	movwf	0
  7395                           
  7396                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  7397  1D98  1703               	bsf	3,6	;RP1=1, select bank2
  7398  1D99  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  7399  1D9A  1303               	bcf	3,6	;RP1=0, select bank0
  7400  1D9B  00A0               	movwf	??_USART_to_Protocol
  7401  1D9C  0824               	movf	USART_to_Protocol@usart_protocol,w
  7402  1D9D  3E04               	addlw	4
  7403  1D9E  0084               	movwf	4
  7404  1D9F  0820               	movf	??_USART_to_Protocol,w
  7405  1DA0  0080               	movwf	0
  7406                           
  7407                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  7408  1DA1  1703               	bsf	3,6	;RP1=1, select bank2
  7409  1DA2  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  7410  1DA3  1303               	bcf	3,6	;RP1=0, select bank0
  7411  1DA4  00A0               	movwf	??_USART_to_Protocol
  7412  1DA5  0824               	movf	USART_to_Protocol@usart_protocol,w
  7413  1DA6  3E05               	addlw	5
  7414  1DA7  0084               	movwf	4
  7415  1DA8  0820               	movf	??_USART_to_Protocol,w
  7416  1DA9  0080               	movwf	0
  7417                           
  7418                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  7419  1DAA  01A2               	clrf	USART_to_Protocol@i
  7420  1DAB  01A3               	clrf	USART_to_Protocol@i+1
  7421  1DAC                     l4715:
  7422  1DAC  0824               	movf	USART_to_Protocol@usart_protocol,w
  7423  1DAD  3E05               	addlw	5
  7424  1DAE  0084               	movwf	4
  7425  1DAF  0823               	movf	USART_to_Protocol@i+1,w
  7426  1DB0  3A80               	xorlw	128
  7427  1DB1  00A0               	movwf	??_USART_to_Protocol
  7428  1DB2  3080               	movlw	128
  7429  1DB3  0220               	subwf	??_USART_to_Protocol,w
  7430  1DB4  1D03               	skipz
  7431  1DB5  2DB8               	goto	u4385
  7432  1DB6  0800               	movf	0,w
  7433  1DB7  0222               	subwf	USART_to_Protocol@i,w
  7434  1DB8                     u4385:
  7435  1DB8  1803               	btfsc	3,0
  7436  1DB9  0008               	return
  7437                           
  7438                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  7439  1DBA  1283               	bcf	3,5	;RP0=0, select bank0
  7440  1DBB  1303               	bcf	3,6	;RP1=0, select bank0
  7441  1DBC  0822               	movf	USART_to_Protocol@i,w
  7442  1DBD  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  7443  1DBE  0084               	movwf	4
  7444  1DBF  1783               	bsf	3,7	;select IRP bank2
  7445  1DC0  0800               	movf	0,w
  7446  1DC1  00A0               	movwf	??_USART_to_Protocol
  7447  1DC2  0822               	movf	USART_to_Protocol@i,w
  7448  1DC3  0724               	addwf	USART_to_Protocol@usart_protocol,w
  7449  1DC4  00A1               	movwf	??_USART_to_Protocol+1
  7450  1DC5  0821               	movf	??_USART_to_Protocol+1,w
  7451  1DC6  3E06               	addlw	6
  7452  1DC7  0084               	movwf	4
  7453  1DC8  0820               	movf	??_USART_to_Protocol,w
  7454  1DC9  0080               	movwf	0
  7455  1DCA  3001               	movlw	1
  7456  1DCB  07A2               	addwf	USART_to_Protocol@i,f
  7457  1DCC  1803               	skipnc
  7458  1DCD  0AA3               	incf	USART_to_Protocol@i+1,f
  7459  1DCE  3000               	movlw	0
  7460  1DCF  07A3               	addwf	USART_to_Protocol@i+1,f
  7461  1DD0  2DAC               	goto	l4715
  7462  1DD1                     __end_of_USART_to_Protocol:
  7463                           
  7464                           	psect	text17
  7465  1A6B                     __ptext17:	
  7466 ;; *************** function _Send_To_MB *****************
  7467 ;; Defined at:
  7468 ;;		line 597 in file "SlaveLiofilizadorVer1.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  size            1    wreg     unsigned char 
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  size            1    1[BANK0 ] unsigned char 
  7473 ;; Return value:  Size  Location     Type
  7474 ;;                  1    wreg      void 
  7475 ;; Registers used:
  7476 ;;		wreg, status,2, status,0, pclath, cstack
  7477 ;; Tracked objects:
  7478 ;;		On entry : 0/800
  7479 ;;		On exit  : 300/100
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7482 ;;      Params:         0       0       0       0       0
  7483 ;;      Locals:         0       1       0       0       0
  7484 ;;      Temps:          0       0       0       0       0
  7485 ;;      Totals:         0       1       0       0       0
  7486 ;;Total ram usage:        1 bytes
  7487 ;; Hardware stack levels used:    1
  7488 ;; Hardware stack levels required when called:    2
  7489 ;; This function calls:
  7490 ;;		_USART_putc
  7491 ;; This function is called by:
  7492 ;;		_Decodify_Command
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           
  7497                           ;psect for function _Send_To_MB
  7498  1A6B                     _Send_To_MB:
  7499                           
  7500                           ;incstack = 0
  7501                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  7502                           ;Send_To_MB@size stored from wreg
  7503  1A6B  1283               	bcf	3,5	;RP0=0, select bank0
  7504  1A6C  1303               	bcf	3,6	;RP1=0, select bank0
  7505  1A6D  00A1               	movwf	Send_To_MB@size
  7506                           
  7507                           ;SlaveLiofilizadorVer1.c: 599:      USART_putc(0xAA);
  7508  1A6E  30AA               	movlw	170
  7509  1A6F  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  7510                           
  7511                           ;SlaveLiofilizadorVer1.c: 600:      USART_putc(0xBB);
  7512  1A74  30BB               	movlw	187
  7513  1A75  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  7514                           
  7515                           ;SlaveLiofilizadorVer1.c: 601:      USART_putc(Board_Number);
  7516  1A7A  0861               	movf	_Board_Number^(0+128),w
  7517  1A7B  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  7518                           
  7519                           ;SlaveLiofilizadorVer1.c: 602:      USART_putc(0x00);
  7520  1A80  3000               	movlw	0
  7521  1A81  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  7522                           
  7523                           ;SlaveLiofilizadorVer1.c: 603:      USART_putc(usart_protocol.command);
  7524  1A86  1703               	bsf	3,6	;RP1=1, select bank3
  7525  1A87  0814               	movf	(_usart_protocol^(0+384)+4),w
  7526  1A88  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  7527                           
  7528                           ;SlaveLiofilizadorVer1.c: 604:      USART_putc(size);
  7529  1A8D  1283               	bcf	3,5	;RP0=0, select bank0
  7530  1A8E  0821               	movf	Send_To_MB@size,w
  7531  1A8F  160A  158A  20B1   	fcall	_USART_putc
  7532  1A92  0008               	return
  7533  1A93                     __end_of_Send_To_MB:
  7534                           
  7535                           	psect	text18
  7536  187D                     __ptext18:	
  7537 ;; *************** function _Send_Reply_OK *****************
  7538 ;; Defined at:
  7539 ;;		line 608 in file "SlaveLiofilizadorVer1.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;		None
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;		None
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  1    wreg      void 
  7546 ;; Registers used:
  7547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7548 ;; Tracked objects:
  7549 ;;		On entry : 300/100
  7550 ;;		On exit  : 300/100
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7553 ;;      Params:         0       0       0       0       0
  7554 ;;      Locals:         0       0       0       0       0
  7555 ;;      Temps:          0       0       0       0       0
  7556 ;;      Totals:         0       0       0       0       0
  7557 ;;Total ram usage:        0 bytes
  7558 ;; Hardware stack levels used:    1
  7559 ;; Hardware stack levels required when called:    3
  7560 ;; This function calls:
  7561 ;;		_USART_put_string
  7562 ;; This function is called by:
  7563 ;;		_Decodify_Command
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           
  7568                           ;psect for function _Send_Reply_OK
  7569  187D                     _Send_Reply_OK:
  7570                           
  7571                           ;SlaveLiofilizadorVer1.c: 609:      USART_put_string("OK");
  7572                           
  7573                           ;incstack = 0
  7574                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7575  187D  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7576  187E  1283               	bcf	3,5	;RP0=0, select bank0
  7577  187F  00A1               	movwf	USART_put_string@vetor
  7578  1880  3080               	movlw	128
  7579  1881  00A2               	movwf	USART_put_string@vetor+1
  7580  1882  160A  158A  2373   	fcall	_USART_put_string
  7581  1885  0008               	return
  7582  1886                     __end_of_Send_Reply_OK:
  7583                           
  7584                           	psect	text19
  7585  1B73                     __ptext19:	
  7586 ;; *************** function _USART_put_string *****************
  7587 ;; Defined at:
  7588 ;;		line 167 in file "usart.c"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  7591 ;;		 -> STR_2(3), buffer(33), 
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  7594 ;;		 -> STR_2(3), buffer(33), 
  7595 ;; Return value:  Size  Location     Type
  7596 ;;                  1    wreg      void 
  7597 ;; Registers used:
  7598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7599 ;; Tracked objects:
  7600 ;;		On entry : 300/800
  7601 ;;		On exit  : 300/100
  7602 ;;		Unchanged: 0/0
  7603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7604 ;;      Params:         0       2       0       0       0
  7605 ;;      Locals:         0       2       0       0       0
  7606 ;;      Temps:          0       0       0       0       0
  7607 ;;      Totals:         0       4       0       0       0
  7608 ;;Total ram usage:        4 bytes
  7609 ;; Hardware stack levels used:    1
  7610 ;; Hardware stack levels required when called:    2
  7611 ;; This function calls:
  7612 ;;		_USART_putc
  7613 ;; This function is called by:
  7614 ;;		_Decodify_Command
  7615 ;;		_Send_Reply_OK
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           
  7620                           ;psect for function _USART_put_string
  7621  1B73                     _USART_put_string:
  7622                           
  7623                           ;usart.c: 167: void USART_put_string(char *vetor);usart.c: 168: {;usart.c: 169:     char
      +                           *ptr;;usart.c: 170:     ptr=vetor;
  7624                           
  7625                           ;incstack = 0
  7626                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7627  1B73  0821               	movf	USART_put_string@vetor,w
  7628  1B74  00A3               	movwf	USART_put_string@ptr
  7629  1B75  0822               	movf	USART_put_string@vetor+1,w
  7630  1B76  00A4               	movwf	USART_put_string@ptr+1
  7631  1B77                     l3831:	
  7632                           ;usart.c: 171:     while(*ptr){
  7633                           
  7634                           
  7635                           ;usart.c: 171:     while(*ptr){
  7636  1B77  0824               	movf	USART_put_string@ptr+1,w
  7637  1B78  00FF               	movwf	127
  7638  1B79  0823               	movf	USART_put_string@ptr,w
  7639  1B7A  0084               	movwf	4
  7640  1B7B  160A  158A  2000  160A  158A  	fcall	stringtab
  7641  1B80  3A00               	xorlw	0
  7642  1B81  1903               	btfsc	3,2
  7643  1B82  2B99               	goto	l3833
  7644                           
  7645                           ;usart.c: 172:         USART_putc(*ptr);
  7646  1B83  0824               	movf	USART_put_string@ptr+1,w
  7647  1B84  00FF               	movwf	127
  7648  1B85  0823               	movf	USART_put_string@ptr,w
  7649  1B86  0084               	movwf	4
  7650  1B87  160A  158A  2000  160A  158A  	fcall	stringtab
  7651  1B8C  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  7652                           
  7653                           ;usart.c: 173:         ptr++;
  7654  1B91  3001               	movlw	1
  7655  1B92  1283               	bcf	3,5	;RP0=0, select bank0
  7656  1B93  07A3               	addwf	USART_put_string@ptr,f
  7657  1B94  1803               	skipnc
  7658  1B95  0AA4               	incf	USART_put_string@ptr+1,f
  7659  1B96  3000               	movlw	0
  7660  1B97  07A4               	addwf	USART_put_string@ptr+1,f
  7661  1B98  2B77               	goto	l3831
  7662  1B99                     l3833:
  7663                           
  7664                           ;usart.c: 175:     USART_putc(*ptr);
  7665  1B99  0824               	movf	USART_put_string@ptr+1,w
  7666  1B9A  00FF               	movwf	127
  7667  1B9B  0823               	movf	USART_put_string@ptr,w
  7668  1B9C  0084               	movwf	4
  7669  1B9D  160A  158A  2000  160A  158A  	fcall	stringtab
  7670  1BA2  160A  158A  20B1   	fcall	_USART_putc
  7671  1BA5  0008               	return
  7672  1BA6                     __end_of_USART_put_string:
  7673                           
  7674                           	psect	text20
  7675  1EF0                     __ptext20:	
  7676 ;; *************** function _Save_Log *****************
  7677 ;; Defined at:
  7678 ;;		line 992 in file "SlaveLiofilizadorVer1.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;  add_datalog     4   10[BANK1 ] unsigned long 
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;		None
  7683 ;; Return value:  Size  Location     Type
  7684 ;;                  1    wreg      void 
  7685 ;; Registers used:
  7686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7687 ;; Tracked objects:
  7688 ;;		On entry : 300/100
  7689 ;;		On exit  : 0/0
  7690 ;;		Unchanged: 0/0
  7691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7692 ;;      Params:         0       0       4       0       0
  7693 ;;      Locals:         0       0       0       0       0
  7694 ;;      Temps:          0       0       0       0       0
  7695 ;;      Totals:         0       0       4       0       0
  7696 ;;Total ram usage:        4 bytes
  7697 ;; Hardware stack levels used:    1
  7698 ;; Hardware stack levels required when called:    5
  7699 ;; This function calls:
  7700 ;;		_EEPROM_24C1025_Write_Int
  7701 ;;		___flmul
  7702 ;;		___fltol
  7703 ;; This function is called by:
  7704 ;;		_Decodify_Command
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           
  7709                           ;psect for function _Save_Log
  7710  1EF0                     _Save_Log:
  7711                           
  7712                           ;SlaveLiofilizadorVer1.c: 993:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (Tensao1
      +                          *10.0));
  7713                           
  7714                           ;incstack = 0
  7715                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7716  1EF0  082D               	movf	(Save_Log@add_datalog+3)^(0+128),w
  7717  1EF1  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  7718  1EF2  082C               	movf	(Save_Log@add_datalog+2)^(0+128),w
  7719  1EF3  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  7720  1EF4  082B               	movf	(Save_Log@add_datalog+1)^(0+128),w
  7721  1EF5  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  7722  1EF6  082A               	movf	Save_Log@add_datalog^(0+128),w
  7723  1EF7  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  7724  1EF8  084C               	movf	(_Tensao1+3)^(0+128),w
  7725  1EF9  1283               	bcf	3,5	;RP0=0, select bank0
  7726  1EFA  00D2               	movwf	___flmul@a+3
  7727  1EFB  1683               	bsf	3,5	;RP0=1, select bank1
  7728  1EFC  084B               	movf	(_Tensao1+2)^(0+128),w
  7729  1EFD  1283               	bcf	3,5	;RP0=0, select bank0
  7730  1EFE  00D1               	movwf	___flmul@a+2
  7731  1EFF  1683               	bsf	3,5	;RP0=1, select bank1
  7732  1F00  084A               	movf	(_Tensao1+1)^(0+128),w
  7733  1F01  1283               	bcf	3,5	;RP0=0, select bank0
  7734  1F02  00D0               	movwf	___flmul@a+1
  7735  1F03  1683               	bsf	3,5	;RP0=1, select bank1
  7736  1F04  0849               	movf	_Tensao1^(0+128),w
  7737  1F05  1283               	bcf	3,5	;RP0=0, select bank0
  7738  1F06  00CF               	movwf	___flmul@a
  7739  1F07  3041               	movlw	65
  7740  1F08  00CE               	movwf	___flmul@b+3
  7741  1F09  3020               	movlw	32
  7742  1F0A  00CD               	movwf	___flmul@b+2
  7743  1F0B  3000               	movlw	0
  7744  1F0C  00CC               	movwf	___flmul@b+1
  7745  1F0D  3000               	movlw	0
  7746  1F0E  00CB               	movwf	___flmul@b
  7747  1F0F  120A  158A  250B  160A  158A  	fcall	___flmul
  7748  1F14  084E               	movf	?___flmul+3,w
  7749  1F15  00E8               	movwf	___fltol@f1+3
  7750  1F16  084D               	movf	?___flmul+2,w
  7751  1F17  00E7               	movwf	___fltol@f1+2
  7752  1F18  084C               	movf	?___flmul+1,w
  7753  1F19  00E6               	movwf	___fltol@f1+1
  7754  1F1A  084B               	movf	?___flmul,w
  7755  1F1B  00E5               	movwf	___fltol@f1
  7756  1F1C  160A  158A  2685  160A  158A  	fcall	___fltol
  7757  1F21  0866               	movf	?___fltol+1,w
  7758  1F22  1683               	bsf	3,5	;RP0=1, select bank1
  7759  1F23  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  7760  1F24  1283               	bcf	3,5	;RP0=0, select bank0
  7761  1F25  0865               	movf	?___fltol,w
  7762  1F26  1683               	bsf	3,5	;RP0=1, select bank1
  7763  1F27  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  7764  1F28  3000               	movlw	0
  7765  1F29  160A  158A  2293  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
  7766                           
  7767                           ;SlaveLiofilizadorVer1.c: 994:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (Vaccum0
      +                          *10.0));
  7768  1F2E  1683               	bsf	3,5	;RP0=1, select bank1
  7769  1F2F  1303               	bcf	3,6	;RP1=0, select bank1
  7770  1F30  082D               	movf	(Save_Log@add_datalog+3)^(0+128),w
  7771  1F31  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  7772  1F32  082C               	movf	(Save_Log@add_datalog+2)^(0+128),w
  7773  1F33  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  7774  1F34  082B               	movf	(Save_Log@add_datalog+1)^(0+128),w
  7775  1F35  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  7776  1F36  082A               	movf	Save_Log@add_datalog^(0+128),w
  7777  1F37  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  7778  1F38  0850               	movf	(_Vaccum0+3)^(0+128),w
  7779  1F39  1283               	bcf	3,5	;RP0=0, select bank0
  7780  1F3A  00D2               	movwf	___flmul@a+3
  7781  1F3B  1683               	bsf	3,5	;RP0=1, select bank1
  7782  1F3C  084F               	movf	(_Vaccum0+2)^(0+128),w
  7783  1F3D  1283               	bcf	3,5	;RP0=0, select bank0
  7784  1F3E  00D1               	movwf	___flmul@a+2
  7785  1F3F  1683               	bsf	3,5	;RP0=1, select bank1
  7786  1F40  084E               	movf	(_Vaccum0+1)^(0+128),w
  7787  1F41  1283               	bcf	3,5	;RP0=0, select bank0
  7788  1F42  00D0               	movwf	___flmul@a+1
  7789  1F43  1683               	bsf	3,5	;RP0=1, select bank1
  7790  1F44  084D               	movf	_Vaccum0^(0+128),w
  7791  1F45  1283               	bcf	3,5	;RP0=0, select bank0
  7792  1F46  00CF               	movwf	___flmul@a
  7793  1F47  3041               	movlw	65
  7794  1F48  00CE               	movwf	___flmul@b+3
  7795  1F49  3020               	movlw	32
  7796  1F4A  00CD               	movwf	___flmul@b+2
  7797  1F4B  3000               	movlw	0
  7798  1F4C  00CC               	movwf	___flmul@b+1
  7799  1F4D  3000               	movlw	0
  7800  1F4E  00CB               	movwf	___flmul@b
  7801  1F4F  120A  158A  250B  160A  158A  	fcall	___flmul
  7802  1F54  084E               	movf	?___flmul+3,w
  7803  1F55  00E8               	movwf	___fltol@f1+3
  7804  1F56  084D               	movf	?___flmul+2,w
  7805  1F57  00E7               	movwf	___fltol@f1+2
  7806  1F58  084C               	movf	?___flmul+1,w
  7807  1F59  00E6               	movwf	___fltol@f1+1
  7808  1F5A  084B               	movf	?___flmul,w
  7809  1F5B  00E5               	movwf	___fltol@f1
  7810  1F5C  160A  158A  2685  160A  158A  	fcall	___fltol
  7811  1F61  0866               	movf	?___fltol+1,w
  7812  1F62  1683               	bsf	3,5	;RP0=1, select bank1
  7813  1F63  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  7814  1F64  1283               	bcf	3,5	;RP0=0, select bank0
  7815  1F65  0865               	movf	?___fltol,w
  7816  1F66  1683               	bsf	3,5	;RP0=1, select bank1
  7817  1F67  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  7818  1F68  3001               	movlw	1
  7819  1F69  160A  158A  2293   	fcall	_EEPROM_24C1025_Write_Int
  7820  1F6C  0008               	return
  7821  1F6D                     __end_of_Save_Log:
  7822                           
  7823                           	psect	text21
  7824  1E85                     __ptext21:	
  7825 ;; *************** function ___fltol *****************
  7826 ;; Defined at:
  7827 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;  f1              4   69[BANK0 ] void 
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;  exp1            1   79[BANK0 ] unsigned char 
  7832 ;;  sign1           1   78[BANK0 ] unsigned char 
  7833 ;; Return value:  Size  Location     Type
  7834 ;;                  4   69[BANK0 ] long 
  7835 ;; Registers used:
  7836 ;;		wreg, status,2, status,0
  7837 ;; Tracked objects:
  7838 ;;		On entry : 300/0
  7839 ;;		On exit  : 300/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7842 ;;      Params:         0       4       0       0       0
  7843 ;;      Locals:         0       2       0       0       0
  7844 ;;      Temps:          0       5       0       0       0
  7845 ;;      Totals:         0      11       0       0       0
  7846 ;;Total ram usage:       11 bytes
  7847 ;; Hardware stack levels used:    1
  7848 ;; Hardware stack levels required when called:    1
  7849 ;; This function calls:
  7850 ;;		Nothing
  7851 ;; This function is called by:
  7852 ;;		_Decodify_Command
  7853 ;;		_Save_Log
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857                           
  7858                           ;psect for function ___fltol
  7859  1E85                     ___fltol:
  7860                           
  7861                           ;incstack = 0
  7862                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7863  1E85  1003               	clrc
  7864  1E86  0D67               	rlf	___fltol@f1+2,w
  7865  1E87  0D68               	rlf	___fltol@f1+3,w
  7866  1E88  00E9               	movwf	??___fltol
  7867  1E89  0869               	movf	??___fltol,w
  7868  1E8A  00EF               	movwf	___fltol@exp1
  7869  1E8B  086F               	movf	___fltol@exp1,w
  7870  1E8C  1D03               	btfss	3,2
  7871  1E8D  2E97               	goto	l3933
  7872  1E8E                     l3929:
  7873  1E8E  3000               	movlw	0
  7874  1E8F  00E8               	movwf	?___fltol+3
  7875  1E90  3000               	movlw	0
  7876  1E91  00E7               	movwf	?___fltol+2
  7877  1E92  3000               	movlw	0
  7878  1E93  00E6               	movwf	?___fltol+1
  7879  1E94  3000               	movlw	0
  7880  1E95  00E5               	movwf	?___fltol
  7881  1E96  0008               	return
  7882  1E97                     l3933:
  7883  1E97  0865               	movf	___fltol@f1,w
  7884  1E98  00E9               	movwf	??___fltol
  7885  1E99  0866               	movf	___fltol@f1+1,w
  7886  1E9A  00EA               	movwf	??___fltol+1
  7887  1E9B  0867               	movf	___fltol@f1+2,w
  7888  1E9C  00EB               	movwf	??___fltol+2
  7889  1E9D  0868               	movf	___fltol@f1+3,w
  7890  1E9E  00EC               	movwf	??___fltol+3
  7891  1E9F  301F               	movlw	31
  7892  1EA0                     u3045:
  7893  1EA0  1003               	clrc
  7894  1EA1  0CEC               	rrf	??___fltol+3,f
  7895  1EA2  0CEB               	rrf	??___fltol+2,f
  7896  1EA3  0CEA               	rrf	??___fltol+1,f
  7897  1EA4  0CE9               	rrf	??___fltol,f
  7898  1EA5  3EFF               	addlw	-1
  7899  1EA6  1D03               	skipz
  7900  1EA7  2EA0               	goto	u3045
  7901  1EA8  0869               	movf	??___fltol,w
  7902  1EA9  00ED               	movwf	??___fltol+4
  7903  1EAA  086D               	movf	??___fltol+4,w
  7904  1EAB  00EE               	movwf	___fltol@sign1
  7905  1EAC  17E7               	bsf	___fltol@f1+2,7
  7906  1EAD  30FF               	movlw	255
  7907  1EAE  05E5               	andwf	___fltol@f1,f
  7908  1EAF  30FF               	movlw	255
  7909  1EB0  05E6               	andwf	___fltol@f1+1,f
  7910  1EB1  30FF               	movlw	255
  7911  1EB2  05E7               	andwf	___fltol@f1+2,f
  7912  1EB3  3000               	movlw	0
  7913  1EB4  05E8               	andwf	___fltol@f1+3,f
  7914  1EB5  3096               	movlw	150
  7915  1EB6  02EF               	subwf	___fltol@exp1,f
  7916  1EB7  1FEF               	btfss	___fltol@exp1,7
  7917  1EB8  2ECE               	goto	l3951
  7918  1EB9  086F               	movf	___fltol@exp1,w
  7919  1EBA  3A80               	xorlw	128
  7920  1EBB  3E97               	addlw	151
  7921  1EBC  1C03               	btfss	3,0
  7922  1EBD  2E8E               	goto	l3929
  7923  1EBE                     l3949:
  7924  1EBE  3001               	movlw	1
  7925  1EBF                     u3075:
  7926  1EBF  1003               	clrc
  7927  1EC0  0CE8               	rrf	___fltol@f1+3,f
  7928  1EC1  0CE7               	rrf	___fltol@f1+2,f
  7929  1EC2  0CE6               	rrf	___fltol@f1+1,f
  7930  1EC3  0CE5               	rrf	___fltol@f1,f
  7931  1EC4  3EFF               	addlw	-1
  7932  1EC5  1D03               	skipz
  7933  1EC6  2EBF               	goto	u3075
  7934  1EC7  3001               	movlw	1
  7935  1EC8  00E9               	movwf	??___fltol
  7936  1EC9  0869               	movf	??___fltol,w
  7937  1ECA  07EF               	addwf	___fltol@exp1,f
  7938  1ECB  1903               	btfsc	3,2
  7939  1ECC  2EE1               	goto	l3959
  7940  1ECD  2EBE               	goto	l3949
  7941  1ECE                     l3951:
  7942  1ECE  3020               	movlw	32
  7943  1ECF  026F               	subwf	___fltol@exp1,w
  7944  1ED0  1803               	btfsc	3,0
  7945  1ED1  2E8E               	goto	l3929
  7946  1ED2                     l1190:
  7947  1ED2  086F               	movf	___fltol@exp1,w
  7948  1ED3  1903               	btfsc	3,2
  7949  1ED4  2EE1               	goto	l3959
  7950  1ED5  3001               	movlw	1
  7951  1ED6  00E9               	movwf	??___fltol
  7952  1ED7                     u3105:
  7953  1ED7  1003               	clrc
  7954  1ED8  0DE5               	rlf	___fltol@f1,f
  7955  1ED9  0DE6               	rlf	___fltol@f1+1,f
  7956  1EDA  0DE7               	rlf	___fltol@f1+2,f
  7957  1EDB  0DE8               	rlf	___fltol@f1+3,f
  7958  1EDC  0BE9               	decfsz	??___fltol,f
  7959  1EDD  2ED7               	goto	u3105
  7960  1EDE  3001               	movlw	1
  7961  1EDF  02EF               	subwf	___fltol@exp1,f
  7962  1EE0  2ED2               	goto	l1190
  7963  1EE1                     l3959:
  7964  1EE1  086E               	movf	___fltol@sign1,w
  7965  1EE2  1903               	btfsc	3,2
  7966  1EE3  0008               	return
  7967  1EE4  09E5               	comf	___fltol@f1,f
  7968  1EE5  09E6               	comf	___fltol@f1+1,f
  7969  1EE6  09E7               	comf	___fltol@f1+2,f
  7970  1EE7  09E8               	comf	___fltol@f1+3,f
  7971  1EE8  0AE5               	incf	___fltol@f1,f
  7972  1EE9  1903               	skipnz
  7973  1EEA  0AE6               	incf	___fltol@f1+1,f
  7974  1EEB  1903               	skipnz
  7975  1EEC  0AE7               	incf	___fltol@f1+2,f
  7976  1EED  1903               	skipnz
  7977  1EEE  0AE8               	incf	___fltol@f1+3,f
  7978  1EEF  0008               	return
  7979  1EF0                     __end_of___fltol:
  7980                           
  7981                           	psect	text22
  7982  0D0B                     __ptext22:	
  7983 ;; *************** function ___flmul *****************
  7984 ;; Defined at:
  7985 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;  b               4   43[BANK0 ] long 
  7988 ;;  a               4   47[BANK0 ] long 
  7989 ;; Auto vars:     Size  Location     Type
  7990 ;;  prod            4   63[BANK0 ] struct .
  7991 ;;  grs             4   58[BANK0 ] unsigned long 
  7992 ;;  temp            2   67[BANK0 ] struct .
  7993 ;;  bexp            1   62[BANK0 ] unsigned char 
  7994 ;;  aexp            1   57[BANK0 ] unsigned char 
  7995 ;;  sign            1   56[BANK0 ] unsigned char 
  7996 ;; Return value:  Size  Location     Type
  7997 ;;                  4   43[BANK0 ] unsigned char 
  7998 ;; Registers used:
  7999 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8000 ;; Tracked objects:
  8001 ;;		On entry : 300/0
  8002 ;;		On exit  : 300/0
  8003 ;;		Unchanged: 0/0
  8004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8005 ;;      Params:         0       8       0       0       0
  8006 ;;      Locals:         0      13       0       0       0
  8007 ;;      Temps:          0       5       0       0       0
  8008 ;;      Totals:         0      26       0       0       0
  8009 ;;Total ram usage:       26 bytes
  8010 ;; Hardware stack levels used:    1
  8011 ;; Hardware stack levels required when called:    2
  8012 ;; This function calls:
  8013 ;;		__Umul8_16
  8014 ;; This function is called by:
  8015 ;;		_Decodify_Command
  8016 ;;		_MediaPlacaVaccum
  8017 ;;		_Save_Log
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021                           
  8022                           ;psect for function ___flmul
  8023  0D0B                     ___flmul:
  8024                           
  8025                           ;incstack = 0
  8026                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8027  0D0B  084E               	movf	___flmul@b+3,w
  8028  0D0C  3980               	andlw	128
  8029  0D0D  00D3               	movwf	??___flmul
  8030  0D0E  0853               	movf	??___flmul,w
  8031  0D0F  00D8               	movwf	___flmul@sign
  8032  0D10  084E               	movf	___flmul@b+3,w
  8033  0D11  00D3               	movwf	??___flmul
  8034  0D12  0753               	addwf	??___flmul,w
  8035  0D13  00D4               	movwf	??___flmul+1
  8036  0D14  0854               	movf	??___flmul+1,w
  8037  0D15  00DE               	movwf	___flmul@bexp
  8038  0D16  1BCD               	btfsc	___flmul@b+2,7
  8039  0D17  145E               	bsf	___flmul@bexp,0
  8040  0D18  085E               	movf	___flmul@bexp,w
  8041  0D19  1903               	btfsc	3,2
  8042  0D1A  2D28               	goto	l4199
  8043  0D1B  0A5E               	incf	___flmul@bexp,w
  8044  0D1C  1D03               	btfss	3,2
  8045  0D1D  2D26               	goto	l4197
  8046  0D1E  3000               	movlw	0
  8047  0D1F  00CE               	movwf	___flmul@b+3
  8048  0D20  3000               	movlw	0
  8049  0D21  00CD               	movwf	___flmul@b+2
  8050  0D22  3000               	movlw	0
  8051  0D23  00CC               	movwf	___flmul@b+1
  8052  0D24  3000               	movlw	0
  8053  0D25  00CB               	movwf	___flmul@b
  8054  0D26                     l4197:
  8055  0D26  17CD               	bsf	___flmul@b+2,7
  8056  0D27  2D30               	goto	l4201
  8057  0D28                     l4199:
  8058  0D28  3000               	movlw	0
  8059  0D29  00CE               	movwf	___flmul@b+3
  8060  0D2A  3000               	movlw	0
  8061  0D2B  00CD               	movwf	___flmul@b+2
  8062  0D2C  3000               	movlw	0
  8063  0D2D  00CC               	movwf	___flmul@b+1
  8064  0D2E  3000               	movlw	0
  8065  0D2F  00CB               	movwf	___flmul@b
  8066  0D30                     l4201:
  8067  0D30  0852               	movf	___flmul@a+3,w
  8068  0D31  3980               	andlw	128
  8069  0D32  00D3               	movwf	??___flmul
  8070  0D33  0853               	movf	??___flmul,w
  8071  0D34  06D8               	xorwf	___flmul@sign,f
  8072  0D35  0852               	movf	___flmul@a+3,w
  8073  0D36  00D3               	movwf	??___flmul
  8074  0D37  0753               	addwf	??___flmul,w
  8075  0D38  00D4               	movwf	??___flmul+1
  8076  0D39  0854               	movf	??___flmul+1,w
  8077  0D3A  00D9               	movwf	___flmul@aexp
  8078  0D3B  1BD1               	btfsc	___flmul@a+2,7
  8079  0D3C  1459               	bsf	___flmul@aexp,0
  8080  0D3D  0859               	movf	___flmul@aexp,w
  8081  0D3E  1903               	btfsc	3,2
  8082  0D3F  2D4D               	goto	l4217
  8083  0D40  0A59               	incf	___flmul@aexp,w
  8084  0D41  1D03               	btfss	3,2
  8085  0D42  2D4B               	goto	l4215
  8086  0D43  3000               	movlw	0
  8087  0D44  00D2               	movwf	___flmul@a+3
  8088  0D45  3000               	movlw	0
  8089  0D46  00D1               	movwf	___flmul@a+2
  8090  0D47  3000               	movlw	0
  8091  0D48  00D0               	movwf	___flmul@a+1
  8092  0D49  3000               	movlw	0
  8093  0D4A  00CF               	movwf	___flmul@a
  8094  0D4B                     l4215:
  8095  0D4B  17D1               	bsf	___flmul@a+2,7
  8096  0D4C  2D55               	goto	l4219
  8097  0D4D                     l4217:
  8098  0D4D  3000               	movlw	0
  8099  0D4E  00D2               	movwf	___flmul@a+3
  8100  0D4F  3000               	movlw	0
  8101  0D50  00D1               	movwf	___flmul@a+2
  8102  0D51  3000               	movlw	0
  8103  0D52  00D0               	movwf	___flmul@a+1
  8104  0D53  3000               	movlw	0
  8105  0D54  00CF               	movwf	___flmul@a
  8106  0D55                     l4219:
  8107  0D55  0859               	movf	___flmul@aexp,w
  8108  0D56  1D03               	btfss	3,2
  8109  0D57  085E               	movf	___flmul@bexp,w
  8110  0D58  1D03               	btfss	3,2
  8111  0D59  2D63               	goto	l4227
  8112  0D5A  3000               	movlw	0
  8113  0D5B  00CE               	movwf	?___flmul+3
  8114  0D5C  3000               	movlw	0
  8115  0D5D  00CD               	movwf	?___flmul+2
  8116  0D5E  3000               	movlw	0
  8117  0D5F  00CC               	movwf	?___flmul+1
  8118  0D60  3000               	movlw	0
  8119  0D61  00CB               	movwf	?___flmul
  8120  0D62  0008               	return
  8121  0D63                     l4227:
  8122  0D63  084B               	movf	___flmul@b,w
  8123  0D64  00D3               	movwf	??___flmul
  8124  0D65  0853               	movf	??___flmul,w
  8125  0D66  00A0               	movwf	__Umul8_16@multiplicand
  8126  0D67  0851               	movf	___flmul@a+2,w
  8127  0D68  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8128  0D6D  0821               	movf	?__Umul8_16+1,w
  8129  0D6E  00E4               	movwf	___flmul@temp+1
  8130  0D6F  0820               	movf	?__Umul8_16,w
  8131  0D70  00E3               	movwf	___flmul@temp
  8132  0D71  0863               	movf	___flmul@temp,w
  8133  0D72  00D3               	movwf	??___flmul
  8134  0D73  01D4               	clrf	??___flmul+1
  8135  0D74  01D5               	clrf	??___flmul+2
  8136  0D75  01D6               	clrf	??___flmul+3
  8137  0D76  0856               	movf	??___flmul+3,w
  8138  0D77  00DD               	movwf	___flmul@grs+3
  8139  0D78  0855               	movf	??___flmul+2,w
  8140  0D79  00DC               	movwf	___flmul@grs+2
  8141  0D7A  0854               	movf	??___flmul+1,w
  8142  0D7B  00DB               	movwf	___flmul@grs+1
  8143  0D7C  0853               	movf	??___flmul,w
  8144  0D7D  00DA               	movwf	___flmul@grs
  8145  0D7E  0864               	movf	___flmul@temp+1,w
  8146  0D7F  00D3               	movwf	??___flmul
  8147  0D80  01D4               	clrf	??___flmul+1
  8148  0D81  01D5               	clrf	??___flmul+2
  8149  0D82  01D6               	clrf	??___flmul+3
  8150  0D83  0856               	movf	??___flmul+3,w
  8151  0D84  00E2               	movwf	___flmul@prod+3
  8152  0D85  0855               	movf	??___flmul+2,w
  8153  0D86  00E1               	movwf	___flmul@prod+2
  8154  0D87  0854               	movf	??___flmul+1,w
  8155  0D88  00E0               	movwf	___flmul@prod+1
  8156  0D89  0853               	movf	??___flmul,w
  8157  0D8A  00DF               	movwf	___flmul@prod
  8158  0D8B  084C               	movf	___flmul@b+1,w
  8159  0D8C  00D3               	movwf	??___flmul
  8160  0D8D  0853               	movf	??___flmul,w
  8161  0D8E  00A0               	movwf	__Umul8_16@multiplicand
  8162  0D8F  0850               	movf	___flmul@a+1,w
  8163  0D90  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8164  0D95  0821               	movf	?__Umul8_16+1,w
  8165  0D96  00E4               	movwf	___flmul@temp+1
  8166  0D97  0820               	movf	?__Umul8_16,w
  8167  0D98  00E3               	movwf	___flmul@temp
  8168  0D99  0863               	movf	___flmul@temp,w
  8169  0D9A  00D3               	movwf	??___flmul
  8170  0D9B  01D4               	clrf	??___flmul+1
  8171  0D9C  01D5               	clrf	??___flmul+2
  8172  0D9D  01D6               	clrf	??___flmul+3
  8173  0D9E  0853               	movf	??___flmul,w
  8174  0D9F  07DA               	addwf	___flmul@grs,f
  8175  0DA0  0854               	movf	??___flmul+1,w
  8176  0DA1  1103               	clrz
  8177  0DA2  1803               	skipnc
  8178  0DA3  3E01               	addlw	1
  8179  0DA4  1D03               	btfss	3,2
  8180  0DA5  07DB               	addwf	___flmul@grs+1,f
  8181  0DA6  0855               	movf	??___flmul+2,w
  8182  0DA7  1103               	clrz
  8183  0DA8  1803               	skipnc
  8184  0DA9  3E01               	addlw	1
  8185  0DAA  1D03               	btfss	3,2
  8186  0DAB  07DC               	addwf	___flmul@grs+2,f
  8187  0DAC  0856               	movf	??___flmul+3,w
  8188  0DAD  1103               	clrz
  8189  0DAE  1803               	skipnc
  8190  0DAF  3E01               	addlw	1
  8191  0DB0  1D03               	btfss	3,2
  8192  0DB1  07DD               	addwf	___flmul@grs+3,f
  8193  0DB2  0864               	movf	___flmul@temp+1,w
  8194  0DB3  00D3               	movwf	??___flmul
  8195  0DB4  01D4               	clrf	??___flmul+1
  8196  0DB5  01D5               	clrf	??___flmul+2
  8197  0DB6  01D6               	clrf	??___flmul+3
  8198  0DB7  0853               	movf	??___flmul,w
  8199  0DB8  07DF               	addwf	___flmul@prod,f
  8200  0DB9  0854               	movf	??___flmul+1,w
  8201  0DBA  1103               	clrz
  8202  0DBB  1803               	skipnc
  8203  0DBC  3E01               	addlw	1
  8204  0DBD  1D03               	btfss	3,2
  8205  0DBE  07E0               	addwf	___flmul@prod+1,f
  8206  0DBF  0855               	movf	??___flmul+2,w
  8207  0DC0  1103               	clrz
  8208  0DC1  1803               	skipnc
  8209  0DC2  3E01               	addlw	1
  8210  0DC3  1D03               	btfss	3,2
  8211  0DC4  07E1               	addwf	___flmul@prod+2,f
  8212  0DC5  0856               	movf	??___flmul+3,w
  8213  0DC6  1103               	clrz
  8214  0DC7  1803               	skipnc
  8215  0DC8  3E01               	addlw	1
  8216  0DC9  1D03               	btfss	3,2
  8217  0DCA  07E2               	addwf	___flmul@prod+3,f
  8218  0DCB  084D               	movf	___flmul@b+2,w
  8219  0DCC  00D3               	movwf	??___flmul
  8220  0DCD  0853               	movf	??___flmul,w
  8221  0DCE  00A0               	movwf	__Umul8_16@multiplicand
  8222  0DCF  084F               	movf	___flmul@a,w
  8223  0DD0  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8224  0DD5  0821               	movf	?__Umul8_16+1,w
  8225  0DD6  00E4               	movwf	___flmul@temp+1
  8226  0DD7  0820               	movf	?__Umul8_16,w
  8227  0DD8  00E3               	movwf	___flmul@temp
  8228  0DD9  0863               	movf	___flmul@temp,w
  8229  0DDA  00D3               	movwf	??___flmul
  8230  0DDB  01D4               	clrf	??___flmul+1
  8231  0DDC  01D5               	clrf	??___flmul+2
  8232  0DDD  01D6               	clrf	??___flmul+3
  8233  0DDE  0853               	movf	??___flmul,w
  8234  0DDF  07DA               	addwf	___flmul@grs,f
  8235  0DE0  0854               	movf	??___flmul+1,w
  8236  0DE1  1103               	clrz
  8237  0DE2  1803               	skipnc
  8238  0DE3  3E01               	addlw	1
  8239  0DE4  1D03               	btfss	3,2
  8240  0DE5  07DB               	addwf	___flmul@grs+1,f
  8241  0DE6  0855               	movf	??___flmul+2,w
  8242  0DE7  1103               	clrz
  8243  0DE8  1803               	skipnc
  8244  0DE9  3E01               	addlw	1
  8245  0DEA  1D03               	btfss	3,2
  8246  0DEB  07DC               	addwf	___flmul@grs+2,f
  8247  0DEC  0856               	movf	??___flmul+3,w
  8248  0DED  1103               	clrz
  8249  0DEE  1803               	skipnc
  8250  0DEF  3E01               	addlw	1
  8251  0DF0  1D03               	btfss	3,2
  8252  0DF1  07DD               	addwf	___flmul@grs+3,f
  8253  0DF2  0864               	movf	___flmul@temp+1,w
  8254  0DF3  00D3               	movwf	??___flmul
  8255  0DF4  01D4               	clrf	??___flmul+1
  8256  0DF5  01D5               	clrf	??___flmul+2
  8257  0DF6  01D6               	clrf	??___flmul+3
  8258  0DF7  0853               	movf	??___flmul,w
  8259  0DF8  07DF               	addwf	___flmul@prod,f
  8260  0DF9  0854               	movf	??___flmul+1,w
  8261  0DFA  1103               	clrz
  8262  0DFB  1803               	skipnc
  8263  0DFC  3E01               	addlw	1
  8264  0DFD  1D03               	btfss	3,2
  8265  0DFE  07E0               	addwf	___flmul@prod+1,f
  8266  0DFF  0855               	movf	??___flmul+2,w
  8267  0E00  1103               	clrz
  8268  0E01  1803               	skipnc
  8269  0E02  3E01               	addlw	1
  8270  0E03  1D03               	btfss	3,2
  8271  0E04  07E1               	addwf	___flmul@prod+2,f
  8272  0E05  0856               	movf	??___flmul+3,w
  8273  0E06  1103               	clrz
  8274  0E07  1803               	skipnc
  8275  0E08  3E01               	addlw	1
  8276  0E09  1D03               	btfss	3,2
  8277  0E0A  07E2               	addwf	___flmul@prod+3,f
  8278  0E0B  3008               	movlw	8
  8279  0E0C  00D3               	movwf	??___flmul
  8280  0E0D                     u3785:
  8281  0E0D  1003               	clrc
  8282  0E0E  0DDA               	rlf	___flmul@grs,f
  8283  0E0F  0DDB               	rlf	___flmul@grs+1,f
  8284  0E10  0DDC               	rlf	___flmul@grs+2,f
  8285  0E11  0DDD               	rlf	___flmul@grs+3,f
  8286  0E12  0BD3               	decfsz	??___flmul,f
  8287  0E13  2E0D               	goto	u3785
  8288  0E14  084C               	movf	___flmul@b+1,w
  8289  0E15  00D3               	movwf	??___flmul
  8290  0E16  0853               	movf	??___flmul,w
  8291  0E17  00A0               	movwf	__Umul8_16@multiplicand
  8292  0E18  084F               	movf	___flmul@a,w
  8293  0E19  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8294  0E1E  0821               	movf	?__Umul8_16+1,w
  8295  0E1F  00E4               	movwf	___flmul@temp+1
  8296  0E20  0820               	movf	?__Umul8_16,w
  8297  0E21  00E3               	movwf	___flmul@temp
  8298  0E22  0863               	movf	___flmul@temp,w
  8299  0E23  00D3               	movwf	??___flmul
  8300  0E24  0864               	movf	___flmul@temp+1,w
  8301  0E25  00D4               	movwf	??___flmul+1
  8302  0E26  01D5               	clrf	??___flmul+2
  8303  0E27  01D6               	clrf	??___flmul+3
  8304  0E28  0853               	movf	??___flmul,w
  8305  0E29  07DA               	addwf	___flmul@grs,f
  8306  0E2A  0854               	movf	??___flmul+1,w
  8307  0E2B  1103               	clrz
  8308  0E2C  1803               	skipnc
  8309  0E2D  3E01               	addlw	1
  8310  0E2E  1D03               	btfss	3,2
  8311  0E2F  07DB               	addwf	___flmul@grs+1,f
  8312  0E30  0855               	movf	??___flmul+2,w
  8313  0E31  1103               	clrz
  8314  0E32  1803               	skipnc
  8315  0E33  3E01               	addlw	1
  8316  0E34  1D03               	btfss	3,2
  8317  0E35  07DC               	addwf	___flmul@grs+2,f
  8318  0E36  0856               	movf	??___flmul+3,w
  8319  0E37  1103               	clrz
  8320  0E38  1803               	skipnc
  8321  0E39  3E01               	addlw	1
  8322  0E3A  1D03               	btfss	3,2
  8323  0E3B  07DD               	addwf	___flmul@grs+3,f
  8324  0E3C  084B               	movf	___flmul@b,w
  8325  0E3D  00D3               	movwf	??___flmul
  8326  0E3E  0853               	movf	??___flmul,w
  8327  0E3F  00A0               	movwf	__Umul8_16@multiplicand
  8328  0E40  0850               	movf	___flmul@a+1,w
  8329  0E41  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8330  0E46  0821               	movf	?__Umul8_16+1,w
  8331  0E47  00E4               	movwf	___flmul@temp+1
  8332  0E48  0820               	movf	?__Umul8_16,w
  8333  0E49  00E3               	movwf	___flmul@temp
  8334  0E4A  0863               	movf	___flmul@temp,w
  8335  0E4B  00D3               	movwf	??___flmul
  8336  0E4C  0864               	movf	___flmul@temp+1,w
  8337  0E4D  00D4               	movwf	??___flmul+1
  8338  0E4E  01D5               	clrf	??___flmul+2
  8339  0E4F  01D6               	clrf	??___flmul+3
  8340  0E50  0853               	movf	??___flmul,w
  8341  0E51  07DA               	addwf	___flmul@grs,f
  8342  0E52  0854               	movf	??___flmul+1,w
  8343  0E53  1103               	clrz
  8344  0E54  1803               	skipnc
  8345  0E55  3E01               	addlw	1
  8346  0E56  1D03               	btfss	3,2
  8347  0E57  07DB               	addwf	___flmul@grs+1,f
  8348  0E58  0855               	movf	??___flmul+2,w
  8349  0E59  1103               	clrz
  8350  0E5A  1803               	skipnc
  8351  0E5B  3E01               	addlw	1
  8352  0E5C  1D03               	btfss	3,2
  8353  0E5D  07DC               	addwf	___flmul@grs+2,f
  8354  0E5E  0856               	movf	??___flmul+3,w
  8355  0E5F  1103               	clrz
  8356  0E60  1803               	skipnc
  8357  0E61  3E01               	addlw	1
  8358  0E62  1D03               	btfss	3,2
  8359  0E63  07DD               	addwf	___flmul@grs+3,f
  8360  0E64  3008               	movlw	8
  8361  0E65  00D3               	movwf	??___flmul
  8362  0E66                     u3815:
  8363  0E66  1003               	clrc
  8364  0E67  0DDA               	rlf	___flmul@grs,f
  8365  0E68  0DDB               	rlf	___flmul@grs+1,f
  8366  0E69  0DDC               	rlf	___flmul@grs+2,f
  8367  0E6A  0DDD               	rlf	___flmul@grs+3,f
  8368  0E6B  0BD3               	decfsz	??___flmul,f
  8369  0E6C  2E66               	goto	u3815
  8370  0E6D  084B               	movf	___flmul@b,w
  8371  0E6E  00D3               	movwf	??___flmul
  8372  0E6F  0853               	movf	??___flmul,w
  8373  0E70  00A0               	movwf	__Umul8_16@multiplicand
  8374  0E71  084F               	movf	___flmul@a,w
  8375  0E72  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8376  0E77  0821               	movf	?__Umul8_16+1,w
  8377  0E78  00E4               	movwf	___flmul@temp+1
  8378  0E79  0820               	movf	?__Umul8_16,w
  8379  0E7A  00E3               	movwf	___flmul@temp
  8380  0E7B  0863               	movf	___flmul@temp,w
  8381  0E7C  00D3               	movwf	??___flmul
  8382  0E7D  0864               	movf	___flmul@temp+1,w
  8383  0E7E  00D4               	movwf	??___flmul+1
  8384  0E7F  01D5               	clrf	??___flmul+2
  8385  0E80  01D6               	clrf	??___flmul+3
  8386  0E81  0853               	movf	??___flmul,w
  8387  0E82  07DA               	addwf	___flmul@grs,f
  8388  0E83  0854               	movf	??___flmul+1,w
  8389  0E84  1103               	clrz
  8390  0E85  1803               	skipnc
  8391  0E86  3E01               	addlw	1
  8392  0E87  1D03               	btfss	3,2
  8393  0E88  07DB               	addwf	___flmul@grs+1,f
  8394  0E89  0855               	movf	??___flmul+2,w
  8395  0E8A  1103               	clrz
  8396  0E8B  1803               	skipnc
  8397  0E8C  3E01               	addlw	1
  8398  0E8D  1D03               	btfss	3,2
  8399  0E8E  07DC               	addwf	___flmul@grs+2,f
  8400  0E8F  0856               	movf	??___flmul+3,w
  8401  0E90  1103               	clrz
  8402  0E91  1803               	skipnc
  8403  0E92  3E01               	addlw	1
  8404  0E93  1D03               	btfss	3,2
  8405  0E94  07DD               	addwf	___flmul@grs+3,f
  8406  0E95  084C               	movf	___flmul@b+1,w
  8407  0E96  00D3               	movwf	??___flmul
  8408  0E97  0853               	movf	??___flmul,w
  8409  0E98  00A0               	movwf	__Umul8_16@multiplicand
  8410  0E99  0851               	movf	___flmul@a+2,w
  8411  0E9A  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8412  0E9F  0821               	movf	?__Umul8_16+1,w
  8413  0EA0  00E4               	movwf	___flmul@temp+1
  8414  0EA1  0820               	movf	?__Umul8_16,w
  8415  0EA2  00E3               	movwf	___flmul@temp
  8416  0EA3  0863               	movf	___flmul@temp,w
  8417  0EA4  00D3               	movwf	??___flmul
  8418  0EA5  0864               	movf	___flmul@temp+1,w
  8419  0EA6  00D4               	movwf	??___flmul+1
  8420  0EA7  01D5               	clrf	??___flmul+2
  8421  0EA8  01D6               	clrf	??___flmul+3
  8422  0EA9  0853               	movf	??___flmul,w
  8423  0EAA  07DF               	addwf	___flmul@prod,f
  8424  0EAB  0854               	movf	??___flmul+1,w
  8425  0EAC  1103               	clrz
  8426  0EAD  1803               	skipnc
  8427  0EAE  3E01               	addlw	1
  8428  0EAF  1D03               	btfss	3,2
  8429  0EB0  07E0               	addwf	___flmul@prod+1,f
  8430  0EB1  0855               	movf	??___flmul+2,w
  8431  0EB2  1103               	clrz
  8432  0EB3  1803               	skipnc
  8433  0EB4  3E01               	addlw	1
  8434  0EB5  1D03               	btfss	3,2
  8435  0EB6  07E1               	addwf	___flmul@prod+2,f
  8436  0EB7  0856               	movf	??___flmul+3,w
  8437  0EB8  1103               	clrz
  8438  0EB9  1803               	skipnc
  8439  0EBA  3E01               	addlw	1
  8440  0EBB  1D03               	btfss	3,2
  8441  0EBC  07E2               	addwf	___flmul@prod+3,f
  8442  0EBD  084D               	movf	___flmul@b+2,w
  8443  0EBE  00D3               	movwf	??___flmul
  8444  0EBF  0853               	movf	??___flmul,w
  8445  0EC0  00A0               	movwf	__Umul8_16@multiplicand
  8446  0EC1  0850               	movf	___flmul@a+1,w
  8447  0EC2  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8448  0EC7  0821               	movf	?__Umul8_16+1,w
  8449  0EC8  00E4               	movwf	___flmul@temp+1
  8450  0EC9  0820               	movf	?__Umul8_16,w
  8451  0ECA  00E3               	movwf	___flmul@temp
  8452  0ECB  0863               	movf	___flmul@temp,w
  8453  0ECC  00D3               	movwf	??___flmul
  8454  0ECD  0864               	movf	___flmul@temp+1,w
  8455  0ECE  00D4               	movwf	??___flmul+1
  8456  0ECF  01D5               	clrf	??___flmul+2
  8457  0ED0  01D6               	clrf	??___flmul+3
  8458  0ED1  0853               	movf	??___flmul,w
  8459  0ED2  07DF               	addwf	___flmul@prod,f
  8460  0ED3  0854               	movf	??___flmul+1,w
  8461  0ED4  1103               	clrz
  8462  0ED5  1803               	skipnc
  8463  0ED6  3E01               	addlw	1
  8464  0ED7  1D03               	btfss	3,2
  8465  0ED8  07E0               	addwf	___flmul@prod+1,f
  8466  0ED9  0855               	movf	??___flmul+2,w
  8467  0EDA  1103               	clrz
  8468  0EDB  1803               	skipnc
  8469  0EDC  3E01               	addlw	1
  8470  0EDD  1D03               	btfss	3,2
  8471  0EDE  07E1               	addwf	___flmul@prod+2,f
  8472  0EDF  0856               	movf	??___flmul+3,w
  8473  0EE0  1103               	clrz
  8474  0EE1  1803               	skipnc
  8475  0EE2  3E01               	addlw	1
  8476  0EE3  1D03               	btfss	3,2
  8477  0EE4  07E2               	addwf	___flmul@prod+3,f
  8478  0EE5  084D               	movf	___flmul@b+2,w
  8479  0EE6  00D3               	movwf	??___flmul
  8480  0EE7  0853               	movf	??___flmul,w
  8481  0EE8  00A0               	movwf	__Umul8_16@multiplicand
  8482  0EE9  0851               	movf	___flmul@a+2,w
  8483  0EEA  160A  158A  2220  120A  158A  	fcall	__Umul8_16
  8484  0EEF  0821               	movf	?__Umul8_16+1,w
  8485  0EF0  00E4               	movwf	___flmul@temp+1
  8486  0EF1  0820               	movf	?__Umul8_16,w
  8487  0EF2  00E3               	movwf	___flmul@temp
  8488  0EF3  0863               	movf	___flmul@temp,w
  8489  0EF4  00D3               	movwf	??___flmul
  8490  0EF5  0864               	movf	___flmul@temp+1,w
  8491  0EF6  00D4               	movwf	??___flmul+1
  8492  0EF7  01D5               	clrf	??___flmul+2
  8493  0EF8  01D6               	clrf	??___flmul+3
  8494  0EF9  3008               	movlw	8
  8495  0EFA                     u3855:
  8496  0EFA  1003               	clrc
  8497  0EFB  0DD3               	rlf	??___flmul,f
  8498  0EFC  0DD4               	rlf	??___flmul+1,f
  8499  0EFD  0DD5               	rlf	??___flmul+2,f
  8500  0EFE  0DD6               	rlf	??___flmul+3,f
  8501  0EFF  3EFF               	addlw	-1
  8502  0F00  1D03               	skipz
  8503  0F01  2EFA               	goto	u3855
  8504  0F02  0853               	movf	??___flmul,w
  8505  0F03  07DF               	addwf	___flmul@prod,f
  8506  0F04  0854               	movf	??___flmul+1,w
  8507  0F05  1103               	clrz
  8508  0F06  1803               	skipnc
  8509  0F07  3E01               	addlw	1
  8510  0F08  1D03               	btfss	3,2
  8511  0F09  07E0               	addwf	___flmul@prod+1,f
  8512  0F0A  0855               	movf	??___flmul+2,w
  8513  0F0B  1103               	clrz
  8514  0F0C  1803               	skipnc
  8515  0F0D  3E01               	addlw	1
  8516  0F0E  1D03               	btfss	3,2
  8517  0F0F  07E1               	addwf	___flmul@prod+2,f
  8518  0F10  0856               	movf	??___flmul+3,w
  8519  0F11  1103               	clrz
  8520  0F12  1803               	skipnc
  8521  0F13  3E01               	addlw	1
  8522  0F14  1D03               	btfss	3,2
  8523  0F15  07E2               	addwf	___flmul@prod+3,f
  8524  0F16  085D               	movf	___flmul@grs+3,w
  8525  0F17  00D3               	movwf	??___flmul
  8526  0F18  01D4               	clrf	??___flmul+1
  8527  0F19  01D5               	clrf	??___flmul+2
  8528  0F1A  01D6               	clrf	??___flmul+3
  8529  0F1B  0853               	movf	??___flmul,w
  8530  0F1C  07DF               	addwf	___flmul@prod,f
  8531  0F1D  0854               	movf	??___flmul+1,w
  8532  0F1E  1103               	clrz
  8533  0F1F  1803               	skipnc
  8534  0F20  3E01               	addlw	1
  8535  0F21  1D03               	btfss	3,2
  8536  0F22  07E0               	addwf	___flmul@prod+1,f
  8537  0F23  0855               	movf	??___flmul+2,w
  8538  0F24  1103               	clrz
  8539  0F25  1803               	skipnc
  8540  0F26  3E01               	addlw	1
  8541  0F27  1D03               	btfss	3,2
  8542  0F28  07E1               	addwf	___flmul@prod+2,f
  8543  0F29  0856               	movf	??___flmul+3,w
  8544  0F2A  1103               	clrz
  8545  0F2B  1803               	skipnc
  8546  0F2C  3E01               	addlw	1
  8547  0F2D  1D03               	btfss	3,2
  8548  0F2E  07E2               	addwf	___flmul@prod+3,f
  8549  0F2F  3008               	movlw	8
  8550  0F30  00D3               	movwf	??___flmul
  8551  0F31                     u3885:
  8552  0F31  1003               	clrc
  8553  0F32  0DDA               	rlf	___flmul@grs,f
  8554  0F33  0DDB               	rlf	___flmul@grs+1,f
  8555  0F34  0DDC               	rlf	___flmul@grs+2,f
  8556  0F35  0DDD               	rlf	___flmul@grs+3,f
  8557  0F36  0BD3               	decfsz	??___flmul,f
  8558  0F37  2F31               	goto	u3885
  8559  0F38  085E               	movf	___flmul@bexp,w
  8560  0F39  0759               	addwf	___flmul@aexp,w
  8561  0F3A  00D3               	movwf	??___flmul
  8562  0F3B  01D4               	clrf	??___flmul+1
  8563  0F3C  0DD4               	rlf	??___flmul+1,f
  8564  0F3D  0853               	movf	??___flmul,w
  8565  0F3E  3E82               	addlw	130
  8566  0F3F  00E3               	movwf	___flmul@temp
  8567  0F40  0854               	movf	??___flmul+1,w
  8568  0F41  1803               	skipnc
  8569  0F42  3E01               	addlw	1
  8570  0F43  3EFF               	addlw	255
  8571  0F44  00E4               	movwf	___flmul@temp+1
  8572  0F45                     l4279:
  8573  0F45  1BE1               	btfsc	___flmul@prod+2,7
  8574  0F46  2F62               	goto	l4281
  8575  0F47  3001               	movlw	1
  8576  0F48  00D3               	movwf	??___flmul
  8577  0F49                     u3895:
  8578  0F49  1003               	clrc
  8579  0F4A  0DDF               	rlf	___flmul@prod,f
  8580  0F4B  0DE0               	rlf	___flmul@prod+1,f
  8581  0F4C  0DE1               	rlf	___flmul@prod+2,f
  8582  0F4D  0DE2               	rlf	___flmul@prod+3,f
  8583  0F4E  0BD3               	decfsz	??___flmul,f
  8584  0F4F  2F49               	goto	u3895
  8585  0F50  1BDD               	btfsc	___flmul@grs+3,7
  8586  0F51  145F               	bsf	___flmul@prod,0
  8587  0F52  3001               	movlw	1
  8588  0F53  00D3               	movwf	??___flmul
  8589  0F54                     u3915:
  8590  0F54  1003               	clrc
  8591  0F55  0DDA               	rlf	___flmul@grs,f
  8592  0F56  0DDB               	rlf	___flmul@grs+1,f
  8593  0F57  0DDC               	rlf	___flmul@grs+2,f
  8594  0F58  0DDD               	rlf	___flmul@grs+3,f
  8595  0F59  0BD3               	decfsz	??___flmul,f
  8596  0F5A  2F54               	goto	u3915
  8597  0F5B  30FF               	movlw	255
  8598  0F5C  07E3               	addwf	___flmul@temp,f
  8599  0F5D  1803               	skipnc
  8600  0F5E  0AE4               	incf	___flmul@temp+1,f
  8601  0F5F  30FF               	movlw	255
  8602  0F60  07E4               	addwf	___flmul@temp+1,f
  8603  0F61  2F45               	goto	l4279
  8604  0F62                     l4281:
  8605  0F62  01D9               	clrf	___flmul@aexp
  8606  0F63  1FDD               	btfss	___flmul@grs+3,7
  8607  0F64  2F7B               	goto	l4291
  8608  0F65  30FF               	movlw	255
  8609  0F66  055A               	andwf	___flmul@grs,w
  8610  0F67  00D3               	movwf	??___flmul
  8611  0F68  30FF               	movlw	255
  8612  0F69  055B               	andwf	___flmul@grs+1,w
  8613  0F6A  00D4               	movwf	??___flmul+1
  8614  0F6B  30FF               	movlw	255
  8615  0F6C  055C               	andwf	___flmul@grs+2,w
  8616  0F6D  00D5               	movwf	??___flmul+2
  8617  0F6E  307F               	movlw	127
  8618  0F6F  055D               	andwf	___flmul@grs+3,w
  8619  0F70  00D6               	movwf	??___flmul+3
  8620  0F71  0856               	movf	??___flmul+3,w
  8621  0F72  0455               	iorwf	??___flmul+2,w
  8622  0F73  0454               	iorwf	??___flmul+1,w
  8623  0F74  0453               	iorwf	??___flmul,w
  8624  0F75  1903               	skipnz
  8625  0F76  185F               	btfsc	___flmul@prod,0
  8626  0F77  2F79               	goto	l4287
  8627  0F78  2F7B               	goto	l4291
  8628  0F79                     l4287:
  8629  0F79  01D9               	clrf	___flmul@aexp
  8630  0F7A  0AD9               	incf	___flmul@aexp,f
  8631  0F7B                     l4291:
  8632  0F7B  0859               	movf	___flmul@aexp,w
  8633  0F7C  1903               	btfsc	3,2
  8634  0F7D  2FAD               	goto	l4301
  8635  0F7E  3001               	movlw	1
  8636  0F7F  07DF               	addwf	___flmul@prod,f
  8637  0F80  3000               	movlw	0
  8638  0F81  1803               	skipnc
  8639  0F82  3001               	movlw	1
  8640  0F83  07E0               	addwf	___flmul@prod+1,f
  8641  0F84  3000               	movlw	0
  8642  0F85  1803               	skipnc
  8643  0F86  3001               	movlw	1
  8644  0F87  07E1               	addwf	___flmul@prod+2,f
  8645  0F88  3000               	movlw	0
  8646  0F89  1803               	skipnc
  8647  0F8A  3001               	movlw	1
  8648  0F8B  07E2               	addwf	___flmul@prod+3,f
  8649  0F8C  1C62               	btfss	___flmul@prod+3,0
  8650  0F8D  2FAD               	goto	l4301
  8651  0F8E  085F               	movf	___flmul@prod,w
  8652  0F8F  00D3               	movwf	??___flmul
  8653  0F90  0860               	movf	___flmul@prod+1,w
  8654  0F91  00D4               	movwf	??___flmul+1
  8655  0F92  0861               	movf	___flmul@prod+2,w
  8656  0F93  00D5               	movwf	??___flmul+2
  8657  0F94  0862               	movf	___flmul@prod+3,w
  8658  0F95  00D6               	movwf	??___flmul+3
  8659  0F96  3001               	movlw	1
  8660  0F97  00D7               	movwf	??___flmul+4
  8661  0F98                     u3985:
  8662  0F98  0D56               	rlf	??___flmul+3,w
  8663  0F99  0CD6               	rrf	??___flmul+3,f
  8664  0F9A  0CD5               	rrf	??___flmul+2,f
  8665  0F9B  0CD4               	rrf	??___flmul+1,f
  8666  0F9C  0CD3               	rrf	??___flmul,f
  8667  0F9D  0BD7               	decfsz	??___flmul+4,f
  8668  0F9E  2F98               	goto	u3985
  8669  0F9F  0856               	movf	??___flmul+3,w
  8670  0FA0  00E2               	movwf	___flmul@prod+3
  8671  0FA1  0855               	movf	??___flmul+2,w
  8672  0FA2  00E1               	movwf	___flmul@prod+2
  8673  0FA3  0854               	movf	??___flmul+1,w
  8674  0FA4  00E0               	movwf	___flmul@prod+1
  8675  0FA5  0853               	movf	??___flmul,w
  8676  0FA6  00DF               	movwf	___flmul@prod
  8677  0FA7  3001               	movlw	1
  8678  0FA8  07E3               	addwf	___flmul@temp,f
  8679  0FA9  1803               	skipnc
  8680  0FAA  0AE4               	incf	___flmul@temp+1,f
  8681  0FAB  3000               	movlw	0
  8682  0FAC  07E4               	addwf	___flmul@temp+1,f
  8683  0FAD                     l4301:
  8684  0FAD  0864               	movf	___flmul@temp+1,w
  8685  0FAE  3A80               	xorlw	128
  8686  0FAF  00FF               	movwf	127
  8687  0FB0  3080               	movlw	128
  8688  0FB1  027F               	subwf	127,w
  8689  0FB2  1D03               	skipz
  8690  0FB3  2FB6               	goto	u3995
  8691  0FB4  30FF               	movlw	255
  8692  0FB5  0263               	subwf	___flmul@temp,w
  8693  0FB6                     u3995:
  8694  0FB6  1C03               	skipc
  8695  0FB7  2FC3               	goto	l4305
  8696  0FB8  307F               	movlw	127
  8697  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  8698  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  8699  0FBB  00E2               	movwf	___flmul@prod+3
  8700  0FBC  3080               	movlw	128
  8701  0FBD  00E1               	movwf	___flmul@prod+2
  8702  0FBE  3000               	movlw	0
  8703  0FBF  00E0               	movwf	___flmul@prod+1
  8704  0FC0  3000               	movlw	0
  8705  0FC1  00DF               	movwf	___flmul@prod
  8706  0FC2  2FF3               	goto	l1398
  8707  0FC3                     l4305:
  8708  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  8709  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  8710  0FC5  0864               	movf	___flmul@temp+1,w
  8711  0FC6  3A80               	xorlw	128
  8712  0FC7  00FF               	movwf	127
  8713  0FC8  3080               	movlw	128
  8714  0FC9  027F               	subwf	127,w
  8715  0FCA  1D03               	skipz
  8716  0FCB  2FCE               	goto	u4005
  8717  0FCC  3001               	movlw	1
  8718  0FCD  0263               	subwf	___flmul@temp,w
  8719  0FCE                     u4005:
  8720  0FCE  1803               	skipnc
  8721  0FCF  2FDC               	goto	l4311
  8722  0FD0  3000               	movlw	0
  8723  0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  8724  0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  8725  0FD3  00E2               	movwf	___flmul@prod+3
  8726  0FD4  3000               	movlw	0
  8727  0FD5  00E1               	movwf	___flmul@prod+2
  8728  0FD6  3000               	movlw	0
  8729  0FD7  00E0               	movwf	___flmul@prod+1
  8730  0FD8  3000               	movlw	0
  8731  0FD9  00DF               	movwf	___flmul@prod
  8732  0FDA  01D8               	clrf	___flmul@sign
  8733  0FDB  2FF3               	goto	l1398
  8734  0FDC                     l4311:
  8735  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  8736  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  8737  0FDE  0863               	movf	___flmul@temp,w
  8738  0FDF  00D3               	movwf	??___flmul
  8739  0FE0  0853               	movf	??___flmul,w
  8740  0FE1  00DE               	movwf	___flmul@bexp
  8741  0FE2  30FF               	movlw	255
  8742  0FE3  05DF               	andwf	___flmul@prod,f
  8743  0FE4  30FF               	movlw	255
  8744  0FE5  05E0               	andwf	___flmul@prod+1,f
  8745  0FE6  307F               	movlw	127
  8746  0FE7  05E1               	andwf	___flmul@prod+2,f
  8747  0FE8  3000               	movlw	0
  8748  0FE9  05E2               	andwf	___flmul@prod+3,f
  8749  0FEA  185E               	btfsc	___flmul@bexp,0
  8750  0FEB  17E1               	bsf	___flmul@prod+2,7
  8751  0FEC  085E               	movf	___flmul@bexp,w
  8752  0FED  00D3               	movwf	??___flmul
  8753  0FEE  1003               	clrc
  8754  0FEF  0C53               	rrf	??___flmul,w
  8755  0FF0  00D4               	movwf	??___flmul+1
  8756  0FF1  0854               	movf	??___flmul+1,w
  8757  0FF2  00E2               	movwf	___flmul@prod+3
  8758  0FF3                     l1398:
  8759  0FF3  0858               	movf	___flmul@sign,w
  8760  0FF4  00D3               	movwf	??___flmul
  8761  0FF5  0853               	movf	??___flmul,w
  8762  0FF6  04E2               	iorwf	___flmul@prod+3,f
  8763  0FF7  0862               	movf	___flmul@prod+3,w
  8764  0FF8  00CE               	movwf	?___flmul+3
  8765  0FF9  0861               	movf	___flmul@prod+2,w
  8766  0FFA  00CD               	movwf	?___flmul+2
  8767  0FFB  0860               	movf	___flmul@prod+1,w
  8768  0FFC  00CC               	movwf	?___flmul+1
  8769  0FFD  085F               	movf	___flmul@prod,w
  8770  0FFE  00CB               	movwf	?___flmul
  8771  0FFF  0008               	return
  8772  1000                     __end_of___flmul:
  8773                           
  8774                           	psect	text23
  8775  1A20                     __ptext23:	
  8776 ;; *************** function __Umul8_16 *****************
  8777 ;; Defined at:
  8778 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;  multiplier      1    wreg     unsigned char 
  8781 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8784 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8785 ;;  product         2    4[BANK0 ] unsigned int 
  8786 ;; Return value:  Size  Location     Type
  8787 ;;                  2    0[BANK0 ] unsigned int 
  8788 ;; Registers used:
  8789 ;;		wreg, status,2, status,0
  8790 ;; Tracked objects:
  8791 ;;		On entry : 300/0
  8792 ;;		On exit  : 300/0
  8793 ;;		Unchanged: 0/0
  8794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8795 ;;      Params:         0       2       0       0       0
  8796 ;;      Locals:         0       5       0       0       0
  8797 ;;      Temps:          0       2       0       0       0
  8798 ;;      Totals:         0       9       0       0       0
  8799 ;;Total ram usage:        9 bytes
  8800 ;; Hardware stack levels used:    1
  8801 ;; Hardware stack levels required when called:    1
  8802 ;; This function calls:
  8803 ;;		Nothing
  8804 ;; This function is called by:
  8805 ;;		___flmul
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           
  8809                           
  8810                           ;psect for function __Umul8_16
  8811  1A20                     __Umul8_16:
  8812                           
  8813                           ;incstack = 0
  8814                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8815                           ;__Umul8_16@multiplier stored from wreg
  8816  1A20  00A8               	movwf	__Umul8_16@multiplier
  8817  1A21  01A4               	clrf	__Umul8_16@product
  8818  1A22  01A5               	clrf	__Umul8_16@product+1
  8819  1A23  0820               	movf	__Umul8_16@multiplicand,w
  8820  1A24  00A2               	movwf	??__Umul8_16
  8821  1A25  01A3               	clrf	??__Umul8_16+1
  8822  1A26  0822               	movf	??__Umul8_16,w
  8823  1A27  00A6               	movwf	__Umul8_16@word_mpld
  8824  1A28  0823               	movf	??__Umul8_16+1,w
  8825  1A29  00A7               	movwf	__Umul8_16@word_mpld+1
  8826  1A2A                     l3717:
  8827  1A2A  1C28               	btfss	__Umul8_16@multiplier,0
  8828  1A2B  2A32               	goto	l1405
  8829  1A2C  0826               	movf	__Umul8_16@word_mpld,w
  8830  1A2D  07A4               	addwf	__Umul8_16@product,f
  8831  1A2E  1803               	skipnc
  8832  1A2F  0AA5               	incf	__Umul8_16@product+1,f
  8833  1A30  0827               	movf	__Umul8_16@word_mpld+1,w
  8834  1A31  07A5               	addwf	__Umul8_16@product+1,f
  8835  1A32                     l1405:
  8836  1A32  3001               	movlw	1
  8837  1A33                     u2855:
  8838  1A33  1003               	clrc
  8839  1A34  0DA6               	rlf	__Umul8_16@word_mpld,f
  8840  1A35  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8841  1A36  3EFF               	addlw	-1
  8842  1A37  1D03               	skipz
  8843  1A38  2A33               	goto	u2855
  8844  1A39  1003               	clrc
  8845  1A3A  0CA8               	rrf	__Umul8_16@multiplier,f
  8846  1A3B  0828               	movf	__Umul8_16@multiplier,w
  8847  1A3C  1D03               	btfss	3,2
  8848  1A3D  2A2A               	goto	l3717
  8849  1A3E  0825               	movf	__Umul8_16@product+1,w
  8850  1A3F  00A1               	movwf	?__Umul8_16+1
  8851  1A40  0824               	movf	__Umul8_16@product,w
  8852  1A41  00A0               	movwf	?__Umul8_16
  8853  1A42  0008               	return
  8854  1A43                     __end_of__Umul8_16:
  8855                           
  8856                           	psect	text24
  8857  1901                     __ptext24:	
  8858 ;; *************** function _PROCULUS_VP_Write_String *****************
  8859 ;; Defined at:
  8860 ;;		line 205 in file "proculus.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;  vp              2   12[BANK1 ] unsigned int 
  8863 ;;  text            1   14[BANK1 ] PTR unsigned char 
  8864 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8865 ;; Auto vars:     Size  Location     Type
  8866 ;;		None
  8867 ;; Return value:  Size  Location     Type
  8868 ;;                  1    wreg      void 
  8869 ;; Registers used:
  8870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8871 ;; Tracked objects:
  8872 ;;		On entry : 300/100
  8873 ;;		On exit  : 300/0
  8874 ;;		Unchanged: 0/0
  8875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8876 ;;      Params:         0       0       3       0       0
  8877 ;;      Locals:         0       0       0       0       0
  8878 ;;      Temps:          0       0       1       0       0
  8879 ;;      Totals:         0       0       4       0       0
  8880 ;;Total ram usage:        4 bytes
  8881 ;; Hardware stack levels used:    1
  8882 ;; Hardware stack levels required when called:    4
  8883 ;; This function calls:
  8884 ;;		_PROCULUS_VP_Write
  8885 ;;		_strlen
  8886 ;; This function is called by:
  8887 ;;		_Decodify_Command
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           
  8892                           ;psect for function _PROCULUS_VP_Write_String
  8893  1901                     _PROCULUS_VP_Write_String:
  8894                           
  8895                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  8896                           
  8897                           ;incstack = 0
  8898                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8899  1901  082D               	movf	(PROCULUS_VP_Write_String@vp+1)^(0+128),w
  8900  1902  00A5               	movwf	(PROCULUS_VP_Write@vp+1)^(0+128)
  8901  1903  082C               	movf	PROCULUS_VP_Write_String@vp^(0+128),w
  8902  1904  00A4               	movwf	PROCULUS_VP_Write@vp^(0+128)
  8903  1905  082E               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  8904  1906  00A6               	movwf	PROCULUS_VP_Write@vetor^(0+128)
  8905  1907  3001               	movlw	1
  8906  1908  00A7               	movwf	(PROCULUS_VP_Write@vetor+1)^(0+128)
  8907  1909  082E               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  8908  190A  160A  158A  2132  160A  158A  	fcall	_strlen
  8909  190F  0820               	movf	?_strlen,w
  8910  1910  3E01               	addlw	1
  8911  1911  1683               	bsf	3,5	;RP0=1, select bank1
  8912  1912  00AF               	movwf	??_PROCULUS_VP_Write_String^(0+128)
  8913  1913  082F               	movf	??_PROCULUS_VP_Write_String^(0+128),w
  8914  1914  00A8               	movwf	PROCULUS_VP_Write@size^(0+128)
  8915  1915  160A  158A  2538   	fcall	_PROCULUS_VP_Write
  8916  1918  0008               	return
  8917  1919                     __end_of_PROCULUS_VP_Write_String:
  8918                           
  8919                           	psect	text25
  8920  1932                     __ptext25:	
  8921 ;; *************** function _strlen *****************
  8922 ;; Defined at:
  8923 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strlen.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;  s               1    wreg     PTR const unsigned char 
  8926 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  8929 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8930 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  8931 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  2    0[BANK0 ] unsigned int 
  8934 ;; Registers used:
  8935 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/300
  8938 ;;		On exit  : B00/800
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8941 ;;      Params:         0       2       0       0       0
  8942 ;;      Locals:         0       2       0       0       0
  8943 ;;      Temps:          0       1       0       0       0
  8944 ;;      Totals:         0       5       0       0       0
  8945 ;;Total ram usage:        5 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; Hardware stack levels required when called:    1
  8948 ;; This function calls:
  8949 ;;		Nothing
  8950 ;; This function is called by:
  8951 ;;		_Decodify_Command
  8952 ;;		_PROCULUS_VP_Write_String
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           
  8957                           ;psect for function _strlen
  8958  1932                     _strlen:
  8959                           
  8960                           ;incstack = 0
  8961                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8962                           ;strlen@s stored from wreg
  8963  1932  1283               	bcf	3,5	;RP0=0, select bank0
  8964  1933  1303               	bcf	3,6	;RP1=0, select bank0
  8965  1934  00A4               	movwf	strlen@s
  8966  1935  0824               	movf	strlen@s,w
  8967  1936  00A2               	movwf	??_strlen
  8968  1937  0822               	movf	??_strlen,w
  8969  1938  00A3               	movwf	strlen@cp
  8970  1939                     l3877:
  8971  1939  0823               	movf	strlen@cp,w
  8972  193A  0084               	movwf	4
  8973  193B  1783               	bsf	3,7	;select IRP bank2
  8974  193C  0800               	movf	0,w
  8975  193D  1903               	btfsc	3,2
  8976  193E  2944               	goto	l3879
  8977  193F  3001               	movlw	1
  8978  1940  00A2               	movwf	??_strlen
  8979  1941  0822               	movf	??_strlen,w
  8980  1942  07A3               	addwf	strlen@cp,f
  8981  1943  2939               	goto	l3877
  8982  1944                     l3879:
  8983  1944  0824               	movf	strlen@s,w
  8984  1945  0223               	subwf	strlen@cp,w
  8985  1946  00A0               	movwf	?_strlen
  8986  1947  01A1               	clrf	?_strlen+1
  8987  1948  1BA0               	btfsc	?_strlen,7
  8988  1949  03A1               	decf	?_strlen+1,f
  8989  194A  0008               	return
  8990  194B                     __end_of_strlen:
  8991                           
  8992                           	psect	text26
  8993  1D38                     __ptext26:	
  8994 ;; *************** function _PROCULUS_VP_Write *****************
  8995 ;; Defined at:
  8996 ;;		line 40 in file "proculus.c"
  8997 ;; Parameters:    Size  Location     Type
  8998 ;;  vp              2    4[BANK1 ] unsigned int 
  8999 ;;  vetor           2    6[BANK1 ] PTR unsigned char 
  9000 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  9001 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(52), usart_protocol(58), 
  9002 ;;  size            1    8[BANK1 ] unsigned char 
  9003 ;; Auto vars:     Size  Location     Type
  9004 ;;  i               1   11[BANK1 ] unsigned char 
  9005 ;; Return value:  Size  Location     Type
  9006 ;;                  1    wreg      void 
  9007 ;; Registers used:
  9008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9009 ;; Tracked objects:
  9010 ;;		On entry : B00/900
  9011 ;;		On exit  : 300/0
  9012 ;;		Unchanged: 0/0
  9013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9014 ;;      Params:         0       0       5       0       0
  9015 ;;      Locals:         0       0       1       0       0
  9016 ;;      Temps:          0       0       2       0       0
  9017 ;;      Totals:         0       0       8       0       0
  9018 ;;Total ram usage:        8 bytes
  9019 ;; Hardware stack levels used:    1
  9020 ;; Hardware stack levels required when called:    3
  9021 ;; This function calls:
  9022 ;;		_PROCULUS_Delay
  9023 ;;		_USART_put_int
  9024 ;;		_USART_putc
  9025 ;; This function is called by:
  9026 ;;		_PROCULUS_VP_Write_String
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           
  9031                           ;psect for function _PROCULUS_VP_Write
  9032  1D38                     _PROCULUS_VP_Write:
  9033                           
  9034                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  9035                           
  9036                           ;incstack = 0
  9037                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9038  1D38  30A5               	movlw	165
  9039  1D39  00A0               	movwf	USART_put_int@value^(0+128)
  9040  1D3A  305A               	movlw	90
  9041  1D3B  00A1               	movwf	(USART_put_int@value^(0+128)+1)
  9042  1D3C  160A  158A  20C1  160A  158A  	fcall	_USART_put_int
  9043                           
  9044                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  9045  1D41  0828               	movf	PROCULUS_VP_Write@size^(0+128),w
  9046  1D42  3E03               	addlw	3
  9047  1D43  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  9048                           
  9049                           ;proculus.c: 43:      USART_putc(0x82);
  9050  1D48  3082               	movlw	130
  9051  1D49  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  9052                           
  9053                           ;proculus.c: 44:      USART_put_int(vp);
  9054  1D4E  0825               	movf	(PROCULUS_VP_Write@vp+1)^(0+128),w
  9055  1D4F  00A1               	movwf	(USART_put_int@value+1)^(0+128)
  9056  1D50  0824               	movf	PROCULUS_VP_Write@vp^(0+128),w
  9057  1D51  00A0               	movwf	USART_put_int@value^(0+128)
  9058  1D52  160A  158A  20C1  160A  158A  	fcall	_USART_put_int
  9059                           
  9060                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  9061  1D57  01AB               	clrf	PROCULUS_VP_Write@i^(0+128)
  9062  1D58                     l5653:
  9063  1D58  0828               	movf	PROCULUS_VP_Write@size^(0+128),w
  9064  1D59  022B               	subwf	PROCULUS_VP_Write@i^(0+128),w
  9065  1D5A  1803               	btfsc	3,0
  9066  1D5B  2D73               	goto	l5655
  9067                           
  9068                           ;proculus.c: 46:          USART_putc(vetor[i]);
  9069  1D5C  082B               	movf	PROCULUS_VP_Write@i^(0+128),w
  9070  1D5D  0726               	addwf	PROCULUS_VP_Write@vetor^(0+128),w
  9071  1D5E  00A9               	movwf	??_PROCULUS_VP_Write^(0+128)
  9072  1D5F  0827               	movf	(PROCULUS_VP_Write@vetor+1)^(0+128),w
  9073  1D60  1803               	skipnc
  9074  1D61  3E01               	addlw	1
  9075  1D62  00AA               	movwf	(??_PROCULUS_VP_Write^(0+128)+1)
  9076  1D63  0829               	movf	??_PROCULUS_VP_Write^(0+128),w
  9077  1D64  0084               	movwf	4
  9078  1D65  1783               	bsf	3,7
  9079  1D66  1C2A               	btfss	(??_PROCULUS_VP_Write+1)^(0+128),0
  9080  1D67  1383               	bcf	3,7
  9081  1D68  0800               	movf	0,w
  9082  1D69  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  9083  1D6E  3001               	movlw	1
  9084  1D6F  00A9               	movwf	??_PROCULUS_VP_Write^(0+128)
  9085  1D70  0829               	movf	??_PROCULUS_VP_Write^(0+128),w
  9086  1D71  07AB               	addwf	PROCULUS_VP_Write@i^(0+128),f
  9087  1D72  2D58               	goto	l5653
  9088  1D73                     l5655:
  9089                           
  9090                           ;proculus.c: 48:      PROCULUS_Delay(1);
  9091  1D73  3001               	movlw	1
  9092  1D74  1283               	bcf	3,5	;RP0=0, select bank0
  9093  1D75  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9094  1D76  3000               	movlw	0
  9095  1D77  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9096  1D78  160A  158A  2164   	fcall	_PROCULUS_Delay
  9097  1D7B  0008               	return
  9098  1D7C                     __end_of_PROCULUS_VP_Write:
  9099                           
  9100                           	psect	text27
  9101  18D6                     __ptext27:	
  9102 ;; *************** function _PROCULUS_Show_Screen *****************
  9103 ;; Defined at:
  9104 ;;		line 243 in file "proculus.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;  screen          2    8[BANK1 ] unsigned int 
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;  vetor           3   11[BANK1 ] unsigned char [3]
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  1    wreg      void 
  9111 ;; Registers used:
  9112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9113 ;; Tracked objects:
  9114 ;;		On entry : 300/100
  9115 ;;		On exit  : 300/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9118 ;;      Params:         0       0       2       0       0
  9119 ;;      Locals:         0       0       3       0       0
  9120 ;;      Temps:          0       0       1       0       0
  9121 ;;      Totals:         0       0       6       0       0
  9122 ;;Total ram usage:        6 bytes
  9123 ;; Hardware stack levels used:    1
  9124 ;; Hardware stack levels required when called:    4
  9125 ;; This function calls:
  9126 ;;		_PROCULUS_Control_Register_Write
  9127 ;; This function is called by:
  9128 ;;		_Decodify_Command
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           
  9133                           ;psect for function _PROCULUS_Show_Screen
  9134  18D6                     _PROCULUS_Show_Screen:
  9135                           
  9136                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9137                           
  9138                           ;incstack = 0
  9139                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9140  18D6  3003               	movlw	3
  9141  18D7  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  9142  18D8  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  9143  18D9  00AB               	movwf	PROCULUS_Show_Screen@vetor^(0+128)
  9144                           
  9145                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9146  18DA  0829               	movf	(PROCULUS_Show_Screen@screen^(0+128)+1),w
  9147  18DB  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  9148  18DC  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  9149  18DD  00AC               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+1)
  9150                           
  9151                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9152  18DE  0828               	movf	PROCULUS_Show_Screen@screen^(0+128),w
  9153  18DF  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  9154  18E0  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  9155  18E1  00AD               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+2)
  9156                           
  9157                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9158  18E2  3003               	movlw	3
  9159  18E3  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  9160  18E4  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  9161  18E5  00A4               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
  9162  18E6  30AB               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9163  18E7  160A  158A  23DB   	fcall	_PROCULUS_Control_Register_Write
  9164  18EA  0008               	return
  9165  18EB                     __end_of_PROCULUS_Show_Screen:
  9166                           
  9167                           	psect	text28
  9168  1AE6                     __ptext28:	
  9169 ;; *************** function _PROCULUS_Buzzer *****************
  9170 ;; Defined at:
  9171 ;;		line 223 in file "proculus.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  time_ms_x_10    2    8[BANK1 ] unsigned int 
  9174 ;; Auto vars:     Size  Location     Type
  9175 ;;  vetor           2   11[BANK1 ] unsigned char [2]
  9176 ;; Return value:  Size  Location     Type
  9177 ;;                  1    wreg      void 
  9178 ;; Registers used:
  9179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9180 ;; Tracked objects:
  9181 ;;		On entry : 300/100
  9182 ;;		On exit  : 300/0
  9183 ;;		Unchanged: 0/0
  9184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9185 ;;      Params:         0       0       2       0       0
  9186 ;;      Locals:         0       0       2       0       0
  9187 ;;      Temps:          0       0       1       0       0
  9188 ;;      Totals:         0       0       5       0       0
  9189 ;;Total ram usage:        5 bytes
  9190 ;; Hardware stack levels used:    1
  9191 ;; Hardware stack levels required when called:    4
  9192 ;; This function calls:
  9193 ;;		_PROCULUS_Control_Register_Write
  9194 ;;		___lwdiv
  9195 ;; This function is called by:
  9196 ;;		_Decodify_Command
  9197 ;; This function uses a non-reentrant model
  9198 ;;
  9199                           
  9200                           
  9201                           ;psect for function _PROCULUS_Buzzer
  9202  1AE6                     _PROCULUS_Buzzer:
  9203                           
  9204                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  9205                           
  9206                           ;incstack = 0
  9207                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9208  1AE6  300A               	movlw	10
  9209  1AE7  1283               	bcf	3,5	;RP0=0, select bank0
  9210  1AE8  00A0               	movwf	___lwdiv@divisor
  9211  1AE9  3000               	movlw	0
  9212  1AEA  00A1               	movwf	___lwdiv@divisor+1
  9213  1AEB  1683               	bsf	3,5	;RP0=1, select bank1
  9214  1AEC  0829               	movf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128),w
  9215  1AED  1283               	bcf	3,5	;RP0=0, select bank0
  9216  1AEE  00A3               	movwf	___lwdiv@dividend+1
  9217  1AEF  1683               	bsf	3,5	;RP0=1, select bank1
  9218  1AF0  0828               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
  9219  1AF1  1283               	bcf	3,5	;RP0=0, select bank0
  9220  1AF2  00A2               	movwf	___lwdiv@dividend
  9221  1AF3  160A  158A  24BC  160A  158A  	fcall	___lwdiv
  9222  1AF8  0821               	movf	?___lwdiv+1,w
  9223  1AF9  1683               	bsf	3,5	;RP0=1, select bank1
  9224  1AFA  00A9               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  9225  1AFB  1283               	bcf	3,5	;RP0=0, select bank0
  9226  1AFC  0820               	movf	?___lwdiv,w
  9227  1AFD  1683               	bsf	3,5	;RP0=1, select bank1
  9228  1AFE  00A8               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  9229                           
  9230                           ;proculus.c: 226:      vetor[0]=0x02;
  9231  1AFF  3002               	movlw	2
  9232  1B00  00AA               	movwf	??_PROCULUS_Buzzer^(0+128)
  9233  1B01  082A               	movf	??_PROCULUS_Buzzer^(0+128),w
  9234  1B02  00AB               	movwf	PROCULUS_Buzzer@vetor^(0+128)
  9235                           
  9236                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  9237  1B03  0828               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
  9238  1B04  00AA               	movwf	??_PROCULUS_Buzzer^(0+128)
  9239  1B05  082A               	movf	??_PROCULUS_Buzzer^(0+128),w
  9240  1B06  00AC               	movwf	(PROCULUS_Buzzer@vetor^(0+128)+1)
  9241                           
  9242                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9243  1B07  3002               	movlw	2
  9244  1B08  00AA               	movwf	??_PROCULUS_Buzzer^(0+128)
  9245  1B09  082A               	movf	??_PROCULUS_Buzzer^(0+128),w
  9246  1B0A  00A4               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
  9247  1B0B  30AB               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9248  1B0C  160A  158A  23DB   	fcall	_PROCULUS_Control_Register_Write
  9249  1B0F  0008               	return
  9250  1B10                     __end_of_PROCULUS_Buzzer:
  9251                           
  9252                           	psect	text29
  9253  1CBC                     __ptext29:	
  9254 ;; *************** function ___lwdiv *****************
  9255 ;; Defined at:
  9256 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  9257 ;; Parameters:    Size  Location     Type
  9258 ;;  divisor         2    0[BANK0 ] unsigned int 
  9259 ;;  dividend        2    2[BANK0 ] unsigned int 
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;  quotient        2    5[BANK0 ] unsigned int 
  9262 ;;  counter         1    7[BANK0 ] unsigned char 
  9263 ;; Return value:  Size  Location     Type
  9264 ;;                  2    0[BANK0 ] unsigned int 
  9265 ;; Registers used:
  9266 ;;		wreg, status,2, status,0
  9267 ;; Tracked objects:
  9268 ;;		On entry : 300/0
  9269 ;;		On exit  : 300/0
  9270 ;;		Unchanged: 0/0
  9271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9272 ;;      Params:         0       4       0       0       0
  9273 ;;      Locals:         0       3       0       0       0
  9274 ;;      Temps:          0       1       0       0       0
  9275 ;;      Totals:         0       8       0       0       0
  9276 ;;Total ram usage:        8 bytes
  9277 ;; Hardware stack levels used:    1
  9278 ;; Hardware stack levels required when called:    1
  9279 ;; This function calls:
  9280 ;;		Nothing
  9281 ;; This function is called by:
  9282 ;;		_ADC_Media_10bits
  9283 ;;		_PROCULUS_Buzzer
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287                           
  9288                           ;psect for function ___lwdiv
  9289  1CBC                     ___lwdiv:
  9290                           
  9291                           ;incstack = 0
  9292                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9293  1CBC  01A5               	clrf	___lwdiv@quotient
  9294  1CBD  01A6               	clrf	___lwdiv@quotient+1
  9295  1CBE  0820               	movf	___lwdiv@divisor,w
  9296  1CBF  0421               	iorwf	___lwdiv@divisor+1,w
  9297  1CC0  1903               	btfsc	3,2
  9298  1CC1  2CF3               	goto	l3985
  9299  1CC2  01A7               	clrf	___lwdiv@counter
  9300  1CC3  0AA7               	incf	___lwdiv@counter,f
  9301  1CC4                     l3973:
  9302  1CC4  1BA1               	btfsc	___lwdiv@divisor+1,7
  9303  1CC5  2CD2               	goto	l3975
  9304  1CC6  3001               	movlw	1
  9305  1CC7                     u3145:
  9306  1CC7  1003               	clrc
  9307  1CC8  0DA0               	rlf	___lwdiv@divisor,f
  9308  1CC9  0DA1               	rlf	___lwdiv@divisor+1,f
  9309  1CCA  3EFF               	addlw	-1
  9310  1CCB  1D03               	skipz
  9311  1CCC  2CC7               	goto	u3145
  9312  1CCD  3001               	movlw	1
  9313  1CCE  00A4               	movwf	??___lwdiv
  9314  1CCF  0824               	movf	??___lwdiv,w
  9315  1CD0  07A7               	addwf	___lwdiv@counter,f
  9316  1CD1  2CC4               	goto	l3973
  9317  1CD2                     l3975:
  9318  1CD2  3001               	movlw	1
  9319  1CD3                     u3165:
  9320  1CD3  1003               	clrc
  9321  1CD4  0DA5               	rlf	___lwdiv@quotient,f
  9322  1CD5  0DA6               	rlf	___lwdiv@quotient+1,f
  9323  1CD6  3EFF               	addlw	-1
  9324  1CD7  1D03               	skipz
  9325  1CD8  2CD3               	goto	u3165
  9326  1CD9  0821               	movf	___lwdiv@divisor+1,w
  9327  1CDA  0223               	subwf	___lwdiv@dividend+1,w
  9328  1CDB  1D03               	skipz
  9329  1CDC  2CDF               	goto	u3175
  9330  1CDD  0820               	movf	___lwdiv@divisor,w
  9331  1CDE  0222               	subwf	___lwdiv@dividend,w
  9332  1CDF                     u3175:
  9333  1CDF  1C03               	skipc
  9334  1CE0  2CE8               	goto	l3981
  9335  1CE1  0820               	movf	___lwdiv@divisor,w
  9336  1CE2  02A2               	subwf	___lwdiv@dividend,f
  9337  1CE3  0821               	movf	___lwdiv@divisor+1,w
  9338  1CE4  1C03               	skipc
  9339  1CE5  03A3               	decf	___lwdiv@dividend+1,f
  9340  1CE6  02A3               	subwf	___lwdiv@dividend+1,f
  9341  1CE7  1425               	bsf	___lwdiv@quotient,0
  9342  1CE8                     l3981:
  9343  1CE8  3001               	movlw	1
  9344  1CE9                     u3185:
  9345  1CE9  1003               	clrc
  9346  1CEA  0CA1               	rrf	___lwdiv@divisor+1,f
  9347  1CEB  0CA0               	rrf	___lwdiv@divisor,f
  9348  1CEC  3EFF               	addlw	-1
  9349  1CED  1D03               	skipz
  9350  1CEE  2CE9               	goto	u3185
  9351  1CEF  3001               	movlw	1
  9352  1CF0  02A7               	subwf	___lwdiv@counter,f
  9353  1CF1  1D03               	btfss	3,2
  9354  1CF2  2CD2               	goto	l3975
  9355  1CF3                     l3985:
  9356  1CF3  0826               	movf	___lwdiv@quotient+1,w
  9357  1CF4  00A1               	movwf	?___lwdiv+1
  9358  1CF5  0825               	movf	___lwdiv@quotient,w
  9359  1CF6  00A0               	movwf	?___lwdiv
  9360  1CF7  0008               	return
  9361  1CF8                     __end_of___lwdiv:
  9362                           
  9363                           	psect	text30
  9364  1BDB                     __ptext30:	
  9365 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9366 ;; Defined at:
  9367 ;;		line 13 in file "proculus.c"
  9368 ;; Parameters:    Size  Location     Type
  9369 ;;  vetor           1    wreg     PTR unsigned char 
  9370 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9371 ;;  size            1    4[BANK1 ] unsigned char 
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;  vetor           1    6[BANK1 ] PTR unsigned char 
  9374 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9375 ;;  i               1    7[BANK1 ] unsigned char 
  9376 ;; Return value:  Size  Location     Type
  9377 ;;                  1    wreg      void 
  9378 ;; Registers used:
  9379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9380 ;; Tracked objects:
  9381 ;;		On entry : 300/100
  9382 ;;		On exit  : 300/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9385 ;;      Params:         0       0       1       0       0
  9386 ;;      Locals:         0       0       2       0       0
  9387 ;;      Temps:          0       0       1       0       0
  9388 ;;      Totals:         0       0       4       0       0
  9389 ;;Total ram usage:        4 bytes
  9390 ;; Hardware stack levels used:    1
  9391 ;; Hardware stack levels required when called:    3
  9392 ;; This function calls:
  9393 ;;		_PROCULUS_Delay
  9394 ;;		_USART_put_int
  9395 ;;		_USART_putc
  9396 ;; This function is called by:
  9397 ;;		_PROCULUS_Buzzer
  9398 ;;		_PROCULUS_Show_Screen
  9399 ;; This function uses a non-reentrant model
  9400 ;;
  9401                           
  9402                           
  9403                           ;psect for function _PROCULUS_Control_Register_Write
  9404  1BDB                     _PROCULUS_Control_Register_Write:
  9405                           
  9406                           ;incstack = 0
  9407                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  9408                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9409  1BDB  00A6               	movwf	PROCULUS_Control_Register_Write@vetor^(0+128)
  9410                           
  9411                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9412  1BDC  30A5               	movlw	165
  9413  1BDD  00A0               	movwf	USART_put_int@value^(0+128)
  9414  1BDE  305A               	movlw	90
  9415  1BDF  00A1               	movwf	(USART_put_int@value^(0+128)+1)
  9416  1BE0  160A  158A  20C1  160A  158A  	fcall	_USART_put_int
  9417                           
  9418                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9419  1BE5  0824               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
  9420  1BE6  3E01               	addlw	1
  9421  1BE7  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  9422                           
  9423                           ;proculus.c: 16:      USART_putc(0x80);
  9424  1BEC  3080               	movlw	128
  9425  1BED  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  9426                           
  9427                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9428  1BF2  01A7               	clrf	PROCULUS_Control_Register_Write@i^(0+128)
  9429  1BF3                     l3907:
  9430  1BF3  0824               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
  9431  1BF4  0227               	subwf	PROCULUS_Control_Register_Write@i^(0+128),w
  9432  1BF5  1803               	btfsc	3,0
  9433  1BF6  2C08               	goto	l3909
  9434                           
  9435                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9436  1BF7  0827               	movf	PROCULUS_Control_Register_Write@i^(0+128),w
  9437  1BF8  0726               	addwf	PROCULUS_Control_Register_Write@vetor^(0+128),w
  9438  1BF9  00A5               	movwf	??_PROCULUS_Control_Register_Write^(0+128)
  9439  1BFA  0825               	movf	??_PROCULUS_Control_Register_Write^(0+128),w
  9440  1BFB  0084               	movwf	4
  9441  1BFC  1383               	bcf	3,7	;select IRP bank0
  9442  1BFD  0800               	movf	0,w
  9443  1BFE  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  9444  1C03  3001               	movlw	1
  9445  1C04  00A5               	movwf	??_PROCULUS_Control_Register_Write^(0+128)
  9446  1C05  0825               	movf	??_PROCULUS_Control_Register_Write^(0+128),w
  9447  1C06  07A7               	addwf	PROCULUS_Control_Register_Write@i^(0+128),f
  9448  1C07  2BF3               	goto	l3907
  9449  1C08                     l3909:
  9450                           
  9451                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9452  1C08  3001               	movlw	1
  9453  1C09  1283               	bcf	3,5	;RP0=0, select bank0
  9454  1C0A  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9455  1C0B  3000               	movlw	0
  9456  1C0C  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9457  1C0D  160A  158A  2164   	fcall	_PROCULUS_Delay
  9458  1C10  0008               	return
  9459  1C11                     __end_of_PROCULUS_Control_Register_Write:
  9460                           
  9461                           	psect	text31
  9462  18C1                     __ptext31:	
  9463 ;; *************** function _USART_put_int *****************
  9464 ;; Defined at:
  9465 ;;		line 137 in file "usart.c"
  9466 ;; Parameters:    Size  Location     Type
  9467 ;;  value           2    0[BANK1 ] int 
  9468 ;; Auto vars:     Size  Location     Type
  9469 ;;  dado            1    3[BANK1 ] PTR unsigned char 
  9470 ;;		 -> USART_put_int@value(2), 
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  1    wreg      void 
  9473 ;; Registers used:
  9474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9475 ;; Tracked objects:
  9476 ;;		On entry : 300/100
  9477 ;;		On exit  : 300/100
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9480 ;;      Params:         0       0       2       0       0
  9481 ;;      Locals:         0       0       1       0       0
  9482 ;;      Temps:          0       0       1       0       0
  9483 ;;      Totals:         0       0       4       0       0
  9484 ;;Total ram usage:        4 bytes
  9485 ;; Hardware stack levels used:    1
  9486 ;; Hardware stack levels required when called:    2
  9487 ;; This function calls:
  9488 ;;		_USART_putc
  9489 ;; This function is called by:
  9490 ;;		_Decodify_Command
  9491 ;;		_PROCULUS_Control_Register_Write
  9492 ;;		_PROCULUS_VP_Write
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496                           
  9497                           ;psect for function _USART_put_int
  9498  18C1                     _USART_put_int:
  9499                           
  9500                           ;usart.c: 138:      char *dado;;usart.c: 139:      dado=(char*)&value;
  9501                           
  9502                           ;incstack = 0
  9503                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9504  18C1  30A0               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9505  18C2  00A2               	movwf	??_USART_put_int^(0+128)
  9506  18C3  0822               	movf	??_USART_put_int^(0+128),w
  9507  18C4  00A3               	movwf	USART_put_int@dado^(0+128)
  9508                           
  9509                           ;usart.c: 140:      USART_putc(*(dado+1));
  9510  18C5  0A23               	incf	USART_put_int@dado^(0+128),w
  9511  18C6  0084               	movwf	4
  9512  18C7  1383               	bcf	3,7	;select IRP bank0
  9513  18C8  0800               	movf	0,w
  9514  18C9  160A  158A  20B1  160A  158A  	fcall	_USART_putc
  9515                           
  9516                           ;usart.c: 141:      USART_putc(*dado);
  9517  18CE  0823               	movf	USART_put_int@dado^(0+128),w
  9518  18CF  0084               	movwf	4
  9519  18D0  1383               	bcf	3,7	;select IRP bank0
  9520  18D1  0800               	movf	0,w
  9521  18D2  160A  158A  20B1   	fcall	_USART_putc
  9522  18D5  0008               	return
  9523  18D6                     __end_of_USART_put_int:
  9524                           
  9525                           	psect	text32
  9526  1964                     __ptext32:	
  9527 ;; *************** function _PROCULUS_Delay *****************
  9528 ;; Defined at:
  9529 ;;		line 267 in file "proculus.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;  i               2    4[BANK0 ] unsigned int 
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  1    wreg      void 
  9536 ;; Registers used:
  9537 ;;		wreg, status,2
  9538 ;; Tracked objects:
  9539 ;;		On entry : 300/800
  9540 ;;		On exit  : 300/0
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9543 ;;      Params:         0       2       0       0       0
  9544 ;;      Locals:         0       2       0       0       0
  9545 ;;      Temps:          0       2       0       0       0
  9546 ;;      Totals:         0       6       0       0       0
  9547 ;;Total ram usage:        6 bytes
  9548 ;; Hardware stack levels used:    1
  9549 ;; Hardware stack levels required when called:    1
  9550 ;; This function calls:
  9551 ;;		Nothing
  9552 ;; This function is called by:
  9553 ;;		_PROCULUS_Control_Register_Write
  9554 ;;		_PROCULUS_VP_Write
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           
  9559                           ;psect for function _PROCULUS_Delay
  9560  1964                     _PROCULUS_Delay:
  9561                           
  9562                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9563                           
  9564                           ;incstack = 0
  9565                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
  9566  1964  01A4               	clrf	PROCULUS_Delay@i
  9567  1965  01A5               	clrf	PROCULUS_Delay@i+1
  9568  1966                     l800:
  9569  1966  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9570  1967  0225               	subwf	PROCULUS_Delay@i+1,w
  9571  1968  1D03               	skipz
  9572  1969  296C               	goto	u2835
  9573  196A  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9574  196B  0224               	subwf	PROCULUS_Delay@i,w
  9575  196C                     u2835:
  9576  196C  1803               	btfsc	3,0
  9577  196D  0008               	return
  9578                           
  9579                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9580  196E  3003               	movlw	3
  9581  196F  1283               	bcf	3,5	;RP0=0, select bank0
  9582  1970  1303               	bcf	3,6	;RP1=0, select bank0
  9583  1971  00A3               	movwf	??_PROCULUS_Delay+1
  9584  1972  3097               	movlw	151
  9585  1973  00A2               	movwf	??_PROCULUS_Delay
  9586  1974                     u5537:
  9587  1974  0BA2               	decfsz	??_PROCULUS_Delay,f
  9588  1975  2974               	goto	u5537
  9589  1976  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9590  1977  2974               	goto	u5537
  9591                           
  9592                           ;proculus.c: 270:     }
  9593  1978  3001               	movlw	1
  9594  1979  1283               	bcf	3,5	;RP0=0, select bank0
  9595  197A  1303               	bcf	3,6	;RP1=0, select bank0
  9596  197B  07A4               	addwf	PROCULUS_Delay@i,f
  9597  197C  1803               	skipnc
  9598  197D  0AA5               	incf	PROCULUS_Delay@i+1,f
  9599  197E  3000               	movlw	0
  9600  197F  07A5               	addwf	PROCULUS_Delay@i+1,f
  9601  1980  2966               	goto	l800
  9602  1981                     __end_of_PROCULUS_Delay:
  9603                           
  9604                           	psect	text33
  9605  1002                     __ptext33:	
  9606 ;; *************** function _EEPROM_Write_String *****************
  9607 ;; Defined at:
  9608 ;;		line 97 in file "eeprom.c"
  9609 ;; Parameters:    Size  Location     Type
  9610 ;;  addr            1    wreg     unsigned char 
  9611 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9612 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;  addr            1    7[BANK0 ] unsigned char 
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  1    wreg      void 
  9617 ;; Registers used:
  9618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9619 ;; Tracked objects:
  9620 ;;		On entry : 300/300
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9624 ;;      Params:         0       1       0       0       0
  9625 ;;      Locals:         0       1       0       0       0
  9626 ;;      Temps:          0       1       0       0       0
  9627 ;;      Totals:         0       3       0       0       0
  9628 ;;Total ram usage:        3 bytes
  9629 ;; Hardware stack levels used:    1
  9630 ;; Hardware stack levels required when called:    2
  9631 ;; This function calls:
  9632 ;;		_EEPROM_Write_Byte
  9633 ;; This function is called by:
  9634 ;;		_Decodify_Command
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638                           
  9639                           ;psect for function _EEPROM_Write_String
  9640  1002                     _EEPROM_Write_String:
  9641                           
  9642                           ;incstack = 0
  9643                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9644                           ;EEPROM_Write_String@addr stored from wreg
  9645  1002  1283               	bcf	3,5	;RP0=0, select bank0
  9646  1003  1303               	bcf	3,6	;RP1=0, select bank0
  9647  1004  00A7               	movwf	EEPROM_Write_String@addr
  9648  1005                     l4737:	
  9649                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9650                           
  9651                           
  9652                           ;eeprom.c: 99:     while(*dado)
  9653  1005  0825               	movf	EEPROM_Write_String@dado,w
  9654  1006  0084               	movwf	4
  9655  1007  1783               	bsf	3,7	;select IRP bank2
  9656  1008  0800               	movf	0,w
  9657  1009  1903               	btfsc	3,2
  9658  100A  2822               	goto	l4739
  9659                           
  9660                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9661  100B  0825               	movf	EEPROM_Write_String@dado,w
  9662  100C  0084               	movwf	4
  9663  100D  0800               	movf	0,w
  9664  100E  00A6               	movwf	??_EEPROM_Write_String
  9665  100F  0826               	movf	??_EEPROM_Write_String,w
  9666  1010  00A0               	movwf	EEPROM_Write_Byte@dado
  9667  1011  0827               	movf	EEPROM_Write_String@addr,w
  9668  1012  160A  158A  2480  160A  118A  	fcall	_EEPROM_Write_Byte
  9669                           
  9670                           ;eeprom.c: 102:      addr++;
  9671  1017  3001               	movlw	1
  9672  1018  1283               	bcf	3,5	;RP0=0, select bank0
  9673  1019  1303               	bcf	3,6	;RP1=0, select bank0
  9674  101A  00A6               	movwf	??_EEPROM_Write_String
  9675  101B  0826               	movf	??_EEPROM_Write_String,w
  9676  101C  07A7               	addwf	EEPROM_Write_String@addr,f
  9677                           
  9678                           ;eeprom.c: 103:      dado++;
  9679  101D  3001               	movlw	1
  9680  101E  00A6               	movwf	??_EEPROM_Write_String
  9681  101F  0826               	movf	??_EEPROM_Write_String,w
  9682  1020  07A5               	addwf	EEPROM_Write_String@dado,f
  9683  1021  2805               	goto	l4737
  9684  1022                     l4739:
  9685                           
  9686                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9687  1022  0825               	movf	EEPROM_Write_String@dado,w
  9688  1023  0084               	movwf	4
  9689  1024  0800               	movf	0,w
  9690  1025  00A6               	movwf	??_EEPROM_Write_String
  9691  1026  0826               	movf	??_EEPROM_Write_String,w
  9692  1027  00A0               	movwf	EEPROM_Write_Byte@dado
  9693  1028  0827               	movf	EEPROM_Write_String@addr,w
  9694  1029  160A  158A  2480   	fcall	_EEPROM_Write_Byte
  9695  102C  0008               	return
  9696  102D                     __end_of_EEPROM_Write_String:
  9697                           
  9698                           	psect	text34
  9699  1B41                     __ptext34:	
  9700 ;; *************** function _EEPROM_Write_Integer *****************
  9701 ;; Defined at:
  9702 ;;		line 68 in file "eeprom.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;  addr            1    wreg     unsigned char 
  9705 ;;  dado            2    5[BANK0 ] unsigned int 
  9706 ;; Auto vars:     Size  Location     Type
  9707 ;;  addr            1   11[BANK0 ] unsigned char 
  9708 ;;  i               1   12[BANK0 ] unsigned char 
  9709 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
  9710 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9711 ;;  addr_memo       1    0        unsigned char 
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  1    wreg      void 
  9714 ;; Registers used:
  9715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9716 ;; Tracked objects:
  9717 ;;		On entry : 200/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9721 ;;      Params:         0       2       0       0       0
  9722 ;;      Locals:         0       4       0       0       0
  9723 ;;      Temps:          0       2       0       0       0
  9724 ;;      Totals:         0       8       0       0       0
  9725 ;;Total ram usage:        8 bytes
  9726 ;; Hardware stack levels used:    1
  9727 ;; Hardware stack levels required when called:    2
  9728 ;; This function calls:
  9729 ;;		_EEPROM_Write_Byte
  9730 ;; This function is called by:
  9731 ;;		_main
  9732 ;;		_Decodify_Command
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736                           
  9737                           ;psect for function _EEPROM_Write_Integer
  9738  1B41                     _EEPROM_Write_Integer:
  9739                           
  9740                           ;incstack = 0
  9741                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9742                           ;EEPROM_Write_Integer@addr stored from wreg
  9743  1B41  1283               	bcf	3,5	;RP0=0, select bank0
  9744  1B42  00AB               	movwf	EEPROM_Write_Integer@addr
  9745                           
  9746                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9747  1B43  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9748  1B44  00A7               	movwf	??_EEPROM_Write_Integer
  9749  1B45  0827               	movf	??_EEPROM_Write_Integer,w
  9750  1B46  00AA               	movwf	EEPROM_Write_Integer@ptr
  9751                           
  9752                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9753  1B47  01AC               	clrf	EEPROM_Write_Integer@i
  9754  1B48                     l4687:
  9755                           
  9756                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9757  1B48  082A               	movf	EEPROM_Write_Integer@ptr,w
  9758  1B49  0084               	movwf	4
  9759  1B4A  1383               	bcf	3,7	;select IRP bank0
  9760  1B4B  0800               	movf	0,w
  9761  1B4C  00A7               	movwf	??_EEPROM_Write_Integer
  9762  1B4D  0827               	movf	??_EEPROM_Write_Integer,w
  9763  1B4E  00A0               	movwf	EEPROM_Write_Byte@dado
  9764  1B4F  082B               	movf	EEPROM_Write_Integer@addr,w
  9765  1B50  160A  158A  2480  160A  158A  	fcall	_EEPROM_Write_Byte
  9766  1B55  3001               	movlw	1
  9767  1B56  1283               	bcf	3,5	;RP0=0, select bank0
  9768  1B57  1303               	bcf	3,6	;RP1=0, select bank0
  9769  1B58  00A7               	movwf	??_EEPROM_Write_Integer
  9770  1B59  0827               	movf	??_EEPROM_Write_Integer,w
  9771  1B5A  07AA               	addwf	EEPROM_Write_Integer@ptr,f
  9772  1B5B  3001               	movlw	1
  9773  1B5C  00A7               	movwf	??_EEPROM_Write_Integer
  9774  1B5D  0827               	movf	??_EEPROM_Write_Integer,w
  9775  1B5E  07AB               	addwf	EEPROM_Write_Integer@addr,f
  9776  1B5F  3001               	movlw	1
  9777  1B60  00A7               	movwf	??_EEPROM_Write_Integer
  9778  1B61  0827               	movf	??_EEPROM_Write_Integer,w
  9779  1B62  07AC               	addwf	EEPROM_Write_Integer@i,f
  9780  1B63  3002               	movlw	2
  9781  1B64  022C               	subwf	EEPROM_Write_Integer@i,w
  9782  1B65  1C03               	skipc
  9783  1B66  2B48               	goto	l4687
  9784                           
  9785                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9786  1B67  304E               	movlw	78
  9787  1B68  1283               	bcf	3,5	;RP0=0, select bank0
  9788  1B69  1303               	bcf	3,6	;RP1=0, select bank0
  9789  1B6A  00A8               	movwf	??_EEPROM_Write_Integer+1
  9790  1B6B  30EA               	movlw	234
  9791  1B6C  00A7               	movwf	??_EEPROM_Write_Integer
  9792  1B6D                     u5547:
  9793  1B6D  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9794  1B6E  2B6D               	goto	u5547
  9795  1B6F  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9796  1B70  2B6D               	goto	u5547
  9797  1B71  0000               	nop
  9798  1B72  0008               	return
  9799  1B73                     __end_of_EEPROM_Write_Integer:
  9800                           
  9801                           	psect	text35
  9802  1C80                     __ptext35:	
  9803 ;; *************** function _EEPROM_Write_Byte *****************
  9804 ;; Defined at:
  9805 ;;		line 21 in file "eeprom.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;  addr            1    wreg     unsigned char 
  9808 ;;  dado            1    0[BANK0 ] unsigned char 
  9809 ;; Auto vars:     Size  Location     Type
  9810 ;;  addr            1    3[BANK0 ] unsigned char 
  9811 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9812 ;; Return value:  Size  Location     Type
  9813 ;;                  1    wreg      void 
  9814 ;; Registers used:
  9815 ;;		wreg, status,2, status,0
  9816 ;; Tracked objects:
  9817 ;;		On entry : 0/300
  9818 ;;		On exit  : 0/0
  9819 ;;		Unchanged: 0/0
  9820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9821 ;;      Params:         0       1       0       0       0
  9822 ;;      Locals:         0       2       0       0       0
  9823 ;;      Temps:          0       2       0       0       0
  9824 ;;      Totals:         0       5       0       0       0
  9825 ;;Total ram usage:        5 bytes
  9826 ;; Hardware stack levels used:    1
  9827 ;; Hardware stack levels required when called:    1
  9828 ;; This function calls:
  9829 ;;		Nothing
  9830 ;; This function is called by:
  9831 ;;		_Decodify_Command
  9832 ;;		_EEPROM_Write_Integer
  9833 ;;		_EEPROM_Write_String
  9834 ;; This function uses a non-reentrant model
  9835 ;;
  9836                           
  9837                           
  9838                           ;psect for function _EEPROM_Write_Byte
  9839  1C80                     _EEPROM_Write_Byte:
  9840                           
  9841                           ;incstack = 0
  9842                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9843                           ;EEPROM_Write_Byte@addr stored from wreg
  9844  1C80  1283               	bcf	3,5	;RP0=0, select bank0
  9845  1C81  1303               	bcf	3,6	;RP1=0, select bank0
  9846  1C82  00A3               	movwf	EEPROM_Write_Byte@addr
  9847                           
  9848                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9849  1C83  3014               	movlw	20
  9850  1C84  1683               	bsf	3,5	;RP0=1, select bank1
  9851  1C85  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9852  1C86  3000               	movlw	0
  9853  1C87  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9854  1C88                     l519:	
  9855                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9856                           
  9857  1C88  1703               	bsf	3,6	;RP1=1, select bank3
  9858  1C89  188C               	btfsc	12,1	;volsfr
  9859  1C8A  2C88               	goto	l519
  9860                           
  9861                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9862  1C8B  1F8B               	btfss	11,7	;volatile
  9863  1C8C  2C92               	goto	l3839
  9864                           
  9865                           ;eeprom.c: 28:           last_GIE=1;
  9866  1C8D  1283               	bcf	3,5	;RP0=0, select bank0
  9867  1C8E  1303               	bcf	3,6	;RP1=0, select bank0
  9868  1C8F  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9869  1C90  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9870  1C91  2C95               	goto	l3841
  9871  1C92                     l3839:
  9872                           
  9873                           ;eeprom.c: 30:           last_GIE=0;
  9874  1C92  1283               	bcf	3,5	;RP0=0, select bank0
  9875  1C93  1303               	bcf	3,6	;RP1=0, select bank0
  9876  1C94  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9877  1C95                     l3841:
  9878                           
  9879                           ;eeprom.c: 32:        EEADR=addr;
  9880  1C95  0823               	movf	EEPROM_Write_Byte@addr,w
  9881  1C96  1703               	bsf	3,6	;RP1=1, select bank2
  9882  1C97  008D               	movwf	13	;volatile
  9883                           
  9884                           ;eeprom.c: 33:        EEDATA=dado;
  9885  1C98  1303               	bcf	3,6	;RP1=0, select bank0
  9886  1C99  0820               	movf	EEPROM_Write_Byte@dado,w
  9887  1C9A  1703               	bsf	3,6	;RP1=1, select bank2
  9888  1C9B  008C               	movwf	12	;volatile
  9889                           
  9890                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9891  1C9C  1683               	bsf	3,5	;RP0=1, select bank3
  9892  1C9D  138C               	bcf	12,7	;volsfr
  9893                           
  9894                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9895  1C9E  150C               	bsf	12,2	;volsfr
  9896                           
  9897                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9898  1C9F  138B               	bcf	11,7	;volatile
  9899                           
  9900                           ;eeprom.c: 37:        EECON2=0x55;
  9901  1CA0  3055               	movlw	85
  9902  1CA1  008D               	movwf	13	;volsfr
  9903                           
  9904                           ;eeprom.c: 38:        EECON2=0xAA;
  9905  1CA2  30AA               	movlw	170
  9906  1CA3  008D               	movwf	13	;volsfr
  9907                           
  9908                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9909  1CA4  148C               	bsf	12,1	;volsfr
  9910                           
  9911                           ;eeprom.c: 41:        if(last_GIE==1)
  9912  1CA5  1283               	bcf	3,5	;RP0=0, select bank0
  9913  1CA6  1303               	bcf	3,6	;RP1=0, select bank0
  9914  1CA7  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9915  1CA8  1D03               	btfss	3,2
  9916  1CA9  2CAC               	goto	l524
  9917                           
  9918                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9919  1CAA  178B               	bsf	11,7	;volatile
  9920  1CAB  2CAD               	goto	l525
  9921  1CAC                     l524:	
  9922                           ;eeprom.c: 43:        else
  9923                           
  9924                           
  9925                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9926  1CAC  138B               	bcf	11,7	;volatile
  9927  1CAD                     l525:
  9928                           
  9929                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9930  1CAD  1683               	bsf	3,5	;RP0=1, select bank3
  9931  1CAE  1703               	bsf	3,6	;RP1=1, select bank3
  9932  1CAF  110C               	bcf	12,2	;volsfr
  9933                           
  9934                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9935  1CB0  304E               	movlw	78
  9936  1CB1  1283               	bcf	3,5	;RP0=0, select bank0
  9937  1CB2  1303               	bcf	3,6	;RP1=0, select bank0
  9938  1CB3  00A2               	movwf	??_EEPROM_Write_Byte+1
  9939  1CB4  30EA               	movlw	234
  9940  1CB5  00A1               	movwf	??_EEPROM_Write_Byte
  9941  1CB6                     u5557:
  9942  1CB6  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9943  1CB7  2CB6               	goto	u5557
  9944  1CB8  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9945  1CB9  2CB6               	goto	u5557
  9946  1CBA  0000               	nop
  9947  1CBB  0008               	return
  9948  1CBC                     __end_of_EEPROM_Write_Byte:
  9949                           
  9950                           	psect	text36
  9951  19BD                     __ptext36:	
  9952 ;; *************** function _EEPROM_Read_String *****************
  9953 ;; Defined at:
  9954 ;;		line 109 in file "eeprom.c"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;  addr            1    wreg     unsigned char 
  9957 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  9958 ;;		 -> buffer(33), 
  9959 ;; Auto vars:     Size  Location     Type
  9960 ;;  addr            1    5[BANK0 ] unsigned char 
  9961 ;;  c               1    6[BANK0 ] unsigned char 
  9962 ;; Return value:  Size  Location     Type
  9963 ;;                  1    wreg      void 
  9964 ;; Registers used:
  9965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9966 ;; Tracked objects:
  9967 ;;		On entry : 300/300
  9968 ;;		On exit  : B00/800
  9969 ;;		Unchanged: 0/0
  9970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9971 ;;      Params:         0       1       0       0       0
  9972 ;;      Locals:         0       2       0       0       0
  9973 ;;      Temps:          0       1       0       0       0
  9974 ;;      Totals:         0       4       0       0       0
  9975 ;;Total ram usage:        4 bytes
  9976 ;; Hardware stack levels used:    1
  9977 ;; Hardware stack levels required when called:    2
  9978 ;; This function calls:
  9979 ;;		_EEPROM_Read_Byte
  9980 ;; This function is called by:
  9981 ;;		_Decodify_Command
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           
  9986                           ;psect for function _EEPROM_Read_String
  9987  19BD                     _EEPROM_Read_String:
  9988                           
  9989                           ;incstack = 0
  9990                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9991                           ;EEPROM_Read_String@addr stored from wreg
  9992  19BD  1283               	bcf	3,5	;RP0=0, select bank0
  9993  19BE  1303               	bcf	3,6	;RP1=0, select bank0
  9994  19BF  00A5               	movwf	EEPROM_Read_String@addr
  9995  19C0                     l551:	
  9996                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
  9997                           
  9998                           
  9999                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10000  19C0  0825               	movf	EEPROM_Read_String@addr,w
 10001  19C1  160A  158A  21FE  160A  158A  	fcall	_EEPROM_Read_Byte
 10002  19C6  1303               	bcf	3,6	;RP1=0, select bank0
 10003  19C7  00A4               	movwf	??_EEPROM_Read_String
 10004  19C8  0824               	movf	??_EEPROM_Read_String,w
 10005  19C9  00A6               	movwf	EEPROM_Read_String@c
 10006  19CA  3001               	movlw	1
 10007  19CB  00A4               	movwf	??_EEPROM_Read_String
 10008  19CC  0824               	movf	??_EEPROM_Read_String,w
 10009  19CD  07A5               	addwf	EEPROM_Read_String@addr,f
 10010                           
 10011                           ;eeprom.c: 114:         *(dado++)=c;
 10012  19CE  0826               	movf	EEPROM_Read_String@c,w
 10013  19CF  00A4               	movwf	??_EEPROM_Read_String
 10014  19D0  0823               	movf	EEPROM_Read_String@dado,w
 10015  19D1  0084               	movwf	4
 10016  19D2  0824               	movf	??_EEPROM_Read_String,w
 10017  19D3  1783               	bsf	3,7	;select IRP bank2
 10018  19D4  0080               	movwf	0
 10019  19D5  3001               	movlw	1
 10020  19D6  00A4               	movwf	??_EEPROM_Read_String
 10021  19D7  0824               	movf	??_EEPROM_Read_String,w
 10022  19D8  07A3               	addwf	EEPROM_Read_String@dado,f
 10023                           
 10024                           ;eeprom.c: 116:       }while(c);
 10025  19D9  0826               	movf	EEPROM_Read_String@c,w
 10026  19DA  1903               	btfsc	3,2
 10027  19DB  0008               	return
 10028  19DC  29C0               	goto	l551
 10029  19DD                     __end_of_EEPROM_Read_String:
 10030                           
 10031                           	psect	text37
 10032  1ABC                     __ptext37:	
 10033 ;; *************** function _EEPROM_Read_Integer *****************
 10034 ;; Defined at:
 10035 ;;		line 81 in file "eeprom.c"
 10036 ;; Parameters:    Size  Location     Type
 10037 ;;  addr            1    wreg     unsigned char 
 10038 ;; Auto vars:     Size  Location     Type
 10039 ;;  addr            1    6[BANK0 ] unsigned char 
 10040 ;;  result          2    8[BANK0 ] unsigned int 
 10041 ;;  i               1   10[BANK0 ] unsigned char 
 10042 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 10043 ;;		 -> EEPROM_Read_Integer@result(2), 
 10044 ;; Return value:  Size  Location     Type
 10045 ;;                  2    3[BANK0 ] unsigned int 
 10046 ;; Registers used:
 10047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10048 ;; Tracked objects:
 10049 ;;		On entry : 0/0
 10050 ;;		On exit  : B00/0
 10051 ;;		Unchanged: 0/0
 10052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10053 ;;      Params:         0       2       0       0       0
 10054 ;;      Locals:         0       5       0       0       0
 10055 ;;      Temps:          0       1       0       0       0
 10056 ;;      Totals:         0       8       0       0       0
 10057 ;;Total ram usage:        8 bytes
 10058 ;; Hardware stack levels used:    1
 10059 ;; Hardware stack levels required when called:    2
 10060 ;; This function calls:
 10061 ;;		_EEPROM_Read_Byte
 10062 ;; This function is called by:
 10063 ;;		_main
 10064 ;;		_Decodify_Command
 10065 ;; This function uses a non-reentrant model
 10066 ;;
 10067                           
 10068                           
 10069                           ;psect for function _EEPROM_Read_Integer
 10070  1ABC                     _EEPROM_Read_Integer:
 10071                           
 10072                           ;incstack = 0
 10073                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10074                           ;EEPROM_Read_Integer@addr stored from wreg
 10075  1ABC  1283               	bcf	3,5	;RP0=0, select bank0
 10076  1ABD  1303               	bcf	3,6	;RP1=0, select bank0
 10077  1ABE  00A6               	movwf	EEPROM_Read_Integer@addr
 10078                           
 10079                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 10080  1ABF  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 10081  1AC0  00A5               	movwf	??_EEPROM_Read_Integer
 10082  1AC1  0825               	movf	??_EEPROM_Read_Integer,w
 10083  1AC2  00A7               	movwf	EEPROM_Read_Integer@ptr
 10084                           
 10085                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 10086  1AC3  01AA               	clrf	EEPROM_Read_Integer@i
 10087  1AC4                     l4663:
 10088                           
 10089                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 10090  1AC4  0826               	movf	EEPROM_Read_Integer@addr,w
 10091  1AC5  160A  158A  21FE  160A  158A  	fcall	_EEPROM_Read_Byte
 10092  1ACA  1303               	bcf	3,6	;RP1=0, select bank0
 10093  1ACB  00A5               	movwf	??_EEPROM_Read_Integer
 10094  1ACC  0827               	movf	EEPROM_Read_Integer@ptr,w
 10095  1ACD  0084               	movwf	4
 10096  1ACE  0825               	movf	??_EEPROM_Read_Integer,w
 10097  1ACF  1383               	bcf	3,7	;select IRP bank0
 10098  1AD0  0080               	movwf	0
 10099  1AD1  3001               	movlw	1
 10100  1AD2  00A5               	movwf	??_EEPROM_Read_Integer
 10101  1AD3  0825               	movf	??_EEPROM_Read_Integer,w
 10102  1AD4  07A6               	addwf	EEPROM_Read_Integer@addr,f
 10103  1AD5  3001               	movlw	1
 10104  1AD6  00A5               	movwf	??_EEPROM_Read_Integer
 10105  1AD7  0825               	movf	??_EEPROM_Read_Integer,w
 10106  1AD8  07A7               	addwf	EEPROM_Read_Integer@ptr,f
 10107  1AD9  3001               	movlw	1
 10108  1ADA  00A5               	movwf	??_EEPROM_Read_Integer
 10109  1ADB  0825               	movf	??_EEPROM_Read_Integer,w
 10110  1ADC  07AA               	addwf	EEPROM_Read_Integer@i,f
 10111  1ADD  3002               	movlw	2
 10112  1ADE  022A               	subwf	EEPROM_Read_Integer@i,w
 10113  1ADF  1C03               	skipc
 10114  1AE0  2AC4               	goto	l4663
 10115                           
 10116                           ;eeprom.c: 89:       return result;
 10117  1AE1  0829               	movf	EEPROM_Read_Integer@result+1,w
 10118  1AE2  00A4               	movwf	?_EEPROM_Read_Integer+1
 10119  1AE3  0828               	movf	EEPROM_Read_Integer@result,w
 10120  1AE4  00A3               	movwf	?_EEPROM_Read_Integer
 10121  1AE5  0008               	return
 10122  1AE6                     __end_of_EEPROM_Read_Integer:
 10123                           
 10124                           	psect	text38
 10125  19FE                     __ptext38:	
 10126 ;; *************** function _EEPROM_Read_Byte *****************
 10127 ;; Defined at:
 10128 ;;		line 52 in file "eeprom.c"
 10129 ;; Parameters:    Size  Location     Type
 10130 ;;  addr            1    wreg     unsigned char 
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;  addr            1    2[BANK0 ] unsigned char 
 10133 ;; Return value:  Size  Location     Type
 10134 ;;                  1    wreg      unsigned char 
 10135 ;; Registers used:
 10136 ;;		wreg
 10137 ;; Tracked objects:
 10138 ;;		On entry : 0/300
 10139 ;;		On exit  : 300/200
 10140 ;;		Unchanged: 0/0
 10141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10142 ;;      Params:         0       0       0       0       0
 10143 ;;      Locals:         0       1       0       0       0
 10144 ;;      Temps:          0       2       0       0       0
 10145 ;;      Totals:         0       3       0       0       0
 10146 ;;Total ram usage:        3 bytes
 10147 ;; Hardware stack levels used:    1
 10148 ;; Hardware stack levels required when called:    1
 10149 ;; This function calls:
 10150 ;;		Nothing
 10151 ;; This function is called by:
 10152 ;;		_Decodify_Command
 10153 ;;		_EEPROM_Read_Integer
 10154 ;;		_EEPROM_Read_String
 10155 ;; This function uses a non-reentrant model
 10156 ;;
 10157                           
 10158                           
 10159                           ;psect for function _EEPROM_Read_Byte
 10160  19FE                     _EEPROM_Read_Byte:
 10161                           
 10162                           ;incstack = 0
 10163                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 10164                           ;EEPROM_Read_Byte@addr stored from wreg
 10165  19FE  1283               	bcf	3,5	;RP0=0, select bank0
 10166  19FF  1303               	bcf	3,6	;RP1=0, select bank0
 10167  1A00  00A2               	movwf	EEPROM_Read_Byte@addr
 10168                           
 10169                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 10170  1A01  3014               	movlw	20
 10171  1A02  1683               	bsf	3,5	;RP0=1, select bank1
 10172  1A03  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 10173  1A04  3000               	movlw	0
 10174  1A05  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 10175  1A06                     l529:	
 10176                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 10177                           
 10178  1A06  1703               	bsf	3,6	;RP1=1, select bank3
 10179  1A07  188C               	btfsc	12,1	;volsfr
 10180  1A08  2A06               	goto	l529
 10181                           
 10182                           ;eeprom.c: 57:    EEADR=addr;
 10183  1A09  1283               	bcf	3,5	;RP0=0, select bank0
 10184  1A0A  1303               	bcf	3,6	;RP1=0, select bank0
 10185  1A0B  0822               	movf	EEPROM_Read_Byte@addr,w
 10186  1A0C  1703               	bsf	3,6	;RP1=1, select bank2
 10187  1A0D  008D               	movwf	13	;volatile
 10188                           
 10189                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 10190  1A0E  1683               	bsf	3,5	;RP0=1, select bank3
 10191  1A0F  138C               	bcf	12,7	;volsfr
 10192                           
 10193                           ;eeprom.c: 59:    EECON1bits.RD=1;
 10194  1A10  140C               	bsf	12,0	;volsfr
 10195                           
 10196                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 10197  1A11  304E               	movlw	78
 10198  1A12  1283               	bcf	3,5	;RP0=0, select bank0
 10199  1A13  1303               	bcf	3,6	;RP1=0, select bank0
 10200  1A14  00A1               	movwf	??_EEPROM_Read_Byte+1
 10201  1A15  30EA               	movlw	234
 10202  1A16  00A0               	movwf	??_EEPROM_Read_Byte
 10203  1A17                     u5567:
 10204  1A17  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 10205  1A18  2A17               	goto	u5567
 10206  1A19  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 10207  1A1A  2A17               	goto	u5567
 10208  1A1B  0000               	nop
 10209                           
 10210                           ;eeprom.c: 61:    return EEDATA;
 10211  1A1C  1283               	bcf	3,5	;RP0=0, select bank2
 10212  1A1D  1703               	bsf	3,6	;RP1=1, select bank2
 10213  1A1E  080C               	movf	12,w	;volatile
 10214  1A1F  0008               	return
 10215  1A20                     __end_of_EEPROM_Read_Byte:
 10216                           
 10217                           	psect	text39
 10218  0842                     __ptext39:	
 10219 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 10220 ;; Defined at:
 10221 ;;		line 220 in file "EEPROM_24C1025.c"
 10222 ;; Parameters:    Size  Location     Type
 10223 ;;  chip_add        1    wreg     unsigned char 
 10224 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10225 ;;  data            1   14[BANK0 ] PTR unsigned char 
 10226 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10229 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10230 ;;  range           1   18[BANK0 ] unsigned char 
 10231 ;; Return value:  Size  Location     Type
 10232 ;;                  1    wreg      void 
 10233 ;; Registers used:
 10234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10235 ;; Tracked objects:
 10236 ;;		On entry : 300/300
 10237 ;;		On exit  : 0/0
 10238 ;;		Unchanged: 0/0
 10239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10240 ;;      Params:         0       5       0       0       0
 10241 ;;      Locals:         0       3       0       0       0
 10242 ;;      Temps:          0       2       0       0       0
 10243 ;;      Totals:         0      10       0       0       0
 10244 ;;Total ram usage:       10 bytes
 10245 ;; Hardware stack levels used:    1
 10246 ;; Hardware stack levels required when called:    3
 10247 ;; This function calls:
 10248 ;;		_I2C_Master_Start
 10249 ;;		_I2C_Master_Stop
 10250 ;;		_I2C_Master_Write
 10251 ;;		_my_delay_ms_WDT
 10252 ;; This function is called by:
 10253 ;;		_Decodify_Command
 10254 ;; This function uses a non-reentrant model
 10255 ;;
 10256                           
 10257                           
 10258                           ;psect for function _EEPROM_24C1025_Write_Str
 10259  0842                     _EEPROM_24C1025_Write_Str:
 10260                           
 10261                           ;incstack = 0
 10262                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10263                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 10264  0842  1283               	bcf	3,5	;RP0=0, select bank0
 10265  0843  1303               	bcf	3,6	;RP1=0, select bank0
 10266  0844  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
 10267                           
 10268                           ;EEPROM_24C1025.c: 222:      unsigned char ctrl;;EEPROM_24C1025.c: 224:      if(mem_add>
      +                          0x1FFFF) return;
 10269  0845  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10270  0846  1D03               	btfss	3,2
 10271  0847  0008               	return
 10272  0848  3002               	movlw	2
 10273  0849  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10274  084A  1D03               	skipz
 10275  084B  2854               	goto	u4223
 10276  084C  3000               	movlw	0
 10277  084D  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10278  084E  1D03               	skipz
 10279  084F  2854               	goto	u4223
 10280  0850  3000               	movlw	0
 10281  0851  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10282  0852  1D03               	skipz
 10283  0853  2854               	goto	u4223
 10284  0854                     u4223:
 10285  0854  1803               	btfsc	3,0
 10286  0855  0008               	return
 10287                           
 10288                           ;EEPROM_24C1025.c: 226:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10289  0856  1283               	bcf	3,5	;RP0=0, select bank0
 10290  0857  1303               	bcf	3,6	;RP1=0, select bank0
 10291  0858                     L12:
 10292  0858  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10293  0859  1D03               	btfss	3,2
 10294  085A  2869               	goto	l4465
 10295  085B  3001               	movlw	1
 10296  085C  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10297  085D  1D03               	skipz
 10298  085E  2867               	goto	u4233
 10299  085F  3000               	movlw	0
 10300  0860  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10301  0861  1D03               	skipz
 10302  0862  2867               	goto	u4233
 10303  0863  3000               	movlw	0
 10304  0864  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10305  0865  1D03               	skipz
 10306  0866  2867               	goto	u4233
 10307  0867                     u4233:
 10308  0867  1C03               	btfss	3,0
 10309  0868  2870               	goto	l4467
 10310  0869                     l4465:
 10311  0869  3008               	movlw	8
 10312  086A  1283               	bcf	3,5	;RP0=0, select bank0
 10313  086B  1303               	bcf	3,6	;RP1=0, select bank0
 10314  086C  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10315  086D  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10316  086E  00B2               	movwf	EEPROM_24C1025_Write_Str@range
 10317  086F  2873               	goto	l4469
 10318  0870                     l4467:
 10319  0870  1283               	bcf	3,5	;RP0=0, select bank0
 10320  0871  1303               	bcf	3,6	;RP1=0, select bank0
 10321  0872  01B2               	clrf	EEPROM_24C1025_Write_Str@range
 10322  0873                     l4469:
 10323                           
 10324                           ;EEPROM_24C1025.c: 227:      ctrl=chip_add;
 10325  0873  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 10326  0874  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10327  0875  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10328  0876  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
 10329                           
 10330                           ;EEPROM_24C1025.c: 228:      ctrl<<=1;
 10331  0877  1003               	clrc
 10332  0878  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 10333                           
 10334                           ;EEPROM_24C1025.c: 229:      ctrl |= 0xA0;
 10335  0879  30A0               	movlw	160
 10336  087A  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10337  087B  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10338  087C  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10339                           
 10340                           ;EEPROM_24C1025.c: 230:      ctrl |= range;
 10341  087D  0832               	movf	EEPROM_24C1025_Write_Str@range,w
 10342  087E  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10343  087F  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10344  0880  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10345                           
 10346                           ;EEPROM_24C1025.c: 232:      I2C_Master_Start();
 10347  0881  120A  118A  27EE  120A  158A  	fcall	_I2C_Master_Start
 10348                           
 10349                           ;EEPROM_24C1025.c: 233:      I2C_Master_Write(ctrl);
 10350  0886  1283               	bcf	3,5	;RP0=0, select bank0
 10351  0887  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 10352  0888  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10353  0889  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10354  088A  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10355  088B  00A3               	movwf	I2C_Master_Write@d
 10356  088C  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10357  088D  00A4               	movwf	I2C_Master_Write@d+1
 10358  088E  160A  158A  209B  120A  158A  	fcall	_I2C_Master_Write
 10359                           
 10360                           ;EEPROM_24C1025.c: 234:      I2C_Master_Write(((char *)&mem_add)[1]);
 10361  0893  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10362  0894  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10363  0895  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10364  0896  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10365  0897  00A3               	movwf	I2C_Master_Write@d
 10366  0898  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10367  0899  00A4               	movwf	I2C_Master_Write@d+1
 10368  089A  160A  158A  209B  120A  158A  	fcall	_I2C_Master_Write
 10369                           
 10370                           ;EEPROM_24C1025.c: 235:      I2C_Master_Write(((char *)&mem_add)[0]);
 10371  089F  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10372  08A0  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10373  08A1  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10374  08A2  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10375  08A3  00A3               	movwf	I2C_Master_Write@d
 10376  08A4  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10377  08A5  00A4               	movwf	I2C_Master_Write@d+1
 10378  08A6  160A  158A  209B  120A  158A  	fcall	_I2C_Master_Write
 10379  08AB                     l4529:	
 10380                           ;EEPROM_24C1025.c: 236:      while(*data)
 10381                           
 10382                           
 10383                           ;EEPROM_24C1025.c: 236:      while(*data)
 10384  08AB  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10385  08AC  0084               	movwf	4
 10386  08AD  1783               	bsf	3,7	;select IRP bank2
 10387  08AE  0800               	movf	0,w
 10388  08AF  1903               	btfsc	3,2
 10389  08B0  2923               	goto	l4531
 10390  08B1  0064               	clrwdt	;# 
 10391                           
 10392                           ;EEPROM_24C1025.c: 239:           if(mem_add>0x1FFFF) return;
 10393  08B2  1283               	bcf	3,5	;RP0=0, select bank0
 10394  08B3  1303               	bcf	3,6	;RP1=0, select bank0
 10395  08B4  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10396  08B5  1D03               	btfss	3,2
 10397  08B6  0008               	return
 10398  08B7  3002               	movlw	2
 10399  08B8  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10400  08B9  1D03               	skipz
 10401  08BA  28C3               	goto	u4243
 10402  08BB  3000               	movlw	0
 10403  08BC  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10404  08BD  1D03               	skipz
 10405  08BE  28C3               	goto	u4243
 10406  08BF  3000               	movlw	0
 10407  08C0  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10408  08C1  1D03               	skipz
 10409  08C2  28C3               	goto	u4243
 10410  08C3                     u4243:
 10411  08C3  1803               	btfsc	3,0
 10412  08C4  0008               	return
 10413                           
 10414                           ;EEPROM_24C1025.c: 240:           if((mem_add+1)%128==0)
 10415  08C5  1283               	bcf	3,5	;RP0=0, select bank0
 10416  08C6  1303               	bcf	3,6	;RP1=0, select bank0
 10417  08C7  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10418  08C8  3E01               	addlw	1
 10419  08C9  397F               	andlw	127
 10420  08CA  1D03               	btfss	3,2
 10421  08CB  2901               	goto	l4523
 10422                           
 10423                           ;EEPROM_24C1025.c: 241:             {;EEPROM_24C1025.c: 242:             I2C_Master_Writ
      +                          e(*data);
 10424  08CC  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10425  08CD  0084               	movwf	4
 10426  08CE  1783               	bsf	3,7	;select IRP bank2
 10427  08CF  0800               	movf	0,w
 10428  08D0  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10429  08D1  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10430  08D2  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10431  08D3  00A3               	movwf	I2C_Master_Write@d
 10432  08D4  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10433  08D5  00A4               	movwf	I2C_Master_Write@d+1
 10434  08D6  160A  158A  209B  120A  158A  	fcall	_I2C_Master_Write
 10435                           
 10436                           ;EEPROM_24C1025.c: 243:             I2C_Master_Stop();
 10437  08DB  160A  158A  2074  120A  158A  	fcall	_I2C_Master_Stop
 10438                           
 10439                           ;EEPROM_24C1025.c: 245:             my_delay_ms_WDT(5);
 10440  08E0  3000               	movlw	0
 10441  08E1  1283               	bcf	3,5	;RP0=0, select bank0
 10442  08E2  00A3               	movwf	my_delay_ms_WDT@time+3
 10443  08E3  3000               	movlw	0
 10444  08E4  00A2               	movwf	my_delay_ms_WDT@time+2
 10445  08E5  3000               	movlw	0
 10446  08E6  00A1               	movwf	my_delay_ms_WDT@time+1
 10447  08E7  3005               	movlw	5
 10448  08E8  00A0               	movwf	my_delay_ms_WDT@time
 10449  08E9  160A  158A  2448  120A  158A  	fcall	_my_delay_ms_WDT
 10450                           
 10451                           ;EEPROM_24C1025.c: 246:             mem_add++;
 10452  08EE  3001               	movlw	1
 10453  08EF  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10454  08F0  3000               	movlw	0
 10455  08F1  1803               	skipnc
 10456  08F2  3001               	movlw	1
 10457  08F3  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10458  08F4  3000               	movlw	0
 10459  08F5  1803               	skipnc
 10460  08F6  3001               	movlw	1
 10461  08F7  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10462  08F8  3000               	movlw	0
 10463  08F9  1803               	skipnc
 10464  08FA  3001               	movlw	1
 10465  08FB  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10466                           
 10467                           ;EEPROM_24C1025.c: 247:             data++;
 10468  08FC  3001               	movlw	1
 10469  08FD  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10470  08FE  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10471  08FF  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10472  0900  2858               	goto	L12
 10473  0901                     l4523:	
 10474                           ;EEPROM_24C1025.c: 248:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10475                           
 10476                           
 10477                           ;EEPROM_24C1025.c: 260:             {;EEPROM_24C1025.c: 261:             I2C_Master_Writ
      +                          e(*data);
 10478  0901  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10479  0902  0084               	movwf	4
 10480  0903  1783               	bsf	3,7	;select IRP bank2
 10481  0904  0800               	movf	0,w
 10482  0905  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10483  0906  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10484  0907  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10485  0908  00A3               	movwf	I2C_Master_Write@d
 10486  0909  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10487  090A  00A4               	movwf	I2C_Master_Write@d+1
 10488  090B  160A  158A  209B  120A  158A  	fcall	_I2C_Master_Write
 10489                           
 10490                           ;EEPROM_24C1025.c: 262:             data++;
 10491  0910  3001               	movlw	1
 10492  0911  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10493  0912  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10494  0913  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10495                           
 10496                           ;EEPROM_24C1025.c: 263:             mem_add++;
 10497  0914  3001               	movlw	1
 10498  0915  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10499  0916  3000               	movlw	0
 10500  0917  1803               	skipnc
 10501  0918  3001               	movlw	1
 10502  0919  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10503  091A  3000               	movlw	0
 10504  091B  1803               	skipnc
 10505  091C  3001               	movlw	1
 10506  091D  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10507  091E  3000               	movlw	0
 10508  091F  1803               	skipnc
 10509  0920  3001               	movlw	1
 10510  0921  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10511  0922  28AB               	goto	l4529
 10512  0923                     l4531:
 10513                           
 10514                           ;EEPROM_24C1025.c: 266:      I2C_Master_Write(0);
 10515  0923  3000               	movlw	0
 10516  0924  00A3               	movwf	I2C_Master_Write@d
 10517  0925  00A4               	movwf	I2C_Master_Write@d+1
 10518  0926  160A  158A  209B  120A  158A  	fcall	_I2C_Master_Write
 10519                           
 10520                           ;EEPROM_24C1025.c: 267:      I2C_Master_Stop();
 10521  092B  160A  158A  2074  120A  158A  	fcall	_I2C_Master_Stop
 10522                           
 10523                           ;EEPROM_24C1025.c: 268:      my_delay_ms_WDT(5);
 10524  0930  3000               	movlw	0
 10525  0931  1283               	bcf	3,5	;RP0=0, select bank0
 10526  0932  00A3               	movwf	my_delay_ms_WDT@time+3
 10527  0933  3000               	movlw	0
 10528  0934  00A2               	movwf	my_delay_ms_WDT@time+2
 10529  0935  3000               	movlw	0
 10530  0936  00A1               	movwf	my_delay_ms_WDT@time+1
 10531  0937  3005               	movlw	5
 10532  0938  00A0               	movwf	my_delay_ms_WDT@time
 10533  0939  160A  158A  2448   	fcall	_my_delay_ms_WDT
 10534  093C  0008               	return
 10535  093D                     __end_of_EEPROM_24C1025_Write_Str:
 10536                           
 10537                           	psect	text40
 10538  18EB                     __ptext40:	
 10539 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 10540 ;; Defined at:
 10541 ;;		line 341 in file "EEPROM_24C1025.c"
 10542 ;; Parameters:    Size  Location     Type
 10543 ;;  chip_add        1    wreg     unsigned char 
 10544 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10545 ;;  data            1   27[BANK0 ] unsigned char 
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10548 ;; Return value:  Size  Location     Type
 10549 ;;                  1    wreg      void 
 10550 ;; Registers used:
 10551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10552 ;; Tracked objects:
 10553 ;;		On entry : 300/300
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10557 ;;      Params:         0       5       0       0       0
 10558 ;;      Locals:         0       1       0       0       0
 10559 ;;      Temps:          0       0       0       0       0
 10560 ;;      Totals:         0       6       0       0       0
 10561 ;;Total ram usage:        6 bytes
 10562 ;; Hardware stack levels used:    1
 10563 ;; Hardware stack levels required when called:    4
 10564 ;; This function calls:
 10565 ;;		_EEPROM_24C1025_Write_Buffer
 10566 ;; This function is called by:
 10567 ;;		_Decodify_Command
 10568 ;; This function uses a non-reentrant model
 10569 ;;
 10570                           
 10571                           
 10572                           ;psect for function _EEPROM_24C1025_Write_Byte
 10573  18EB                     _EEPROM_24C1025_Write_Byte:
 10574                           
 10575                           ;incstack = 0
 10576                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
 10577                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 10578  18EB  1283               	bcf	3,5	;RP0=0, select bank0
 10579  18EC  1303               	bcf	3,6	;RP1=0, select bank0
 10580  18ED  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 10581                           
 10582                           ;EEPROM_24C1025.c: 342:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 10583  18EE  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 10584  18EF  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10585  18F0  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 10586  18F1  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10587  18F2  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 10588  18F3  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10589  18F4  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 10590  18F5  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10591  18F6  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 10592  18F7  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 10593  18F8  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 10594  18F9  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 10595  18FA  3000               	movlw	0
 10596  18FB  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 10597  18FC  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 10598  18FD  160A  118A  2214   	fcall	_EEPROM_24C1025_Write_Buffer
 10599  1900  0008               	return
 10600  1901                     __end_of_EEPROM_24C1025_Write_Byte:
 10601                           
 10602                           	psect	text41
 10603  138A                     __ptext41:	
 10604 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10605 ;; Defined at:
 10606 ;;		line 275 in file "EEPROM_24C1025.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;  chip_add        1    wreg     unsigned char 
 10609 ;;  mem_add         4    9[BANK0 ] unsigned long 
 10610 ;;  buffer          1   13[BANK0 ] PTR unsigned char 
 10611 ;;		 -> buffer(33), 
 10612 ;; Auto vars:     Size  Location     Type
 10613 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10614 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10615 ;;  range           1   18[BANK0 ] unsigned char 
 10616 ;;  cnt             1   16[BANK0 ] unsigned char 
 10617 ;; Return value:  Size  Location     Type
 10618 ;;                  1    wreg      void 
 10619 ;; Registers used:
 10620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10621 ;; Tracked objects:
 10622 ;;		On entry : 300/300
 10623 ;;		On exit  : 0/0
 10624 ;;		Unchanged: 0/0
 10625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10626 ;;      Params:         0       5       0       0       0
 10627 ;;      Locals:         0       4       0       0       0
 10628 ;;      Temps:          0       2       0       0       0
 10629 ;;      Totals:         0      11       0       0       0
 10630 ;;Total ram usage:       11 bytes
 10631 ;; Hardware stack levels used:    1
 10632 ;; Hardware stack levels required when called:    3
 10633 ;; This function calls:
 10634 ;;		_I2C_Master_Read
 10635 ;;		_I2C_Master_RepeatedStart
 10636 ;;		_I2C_Master_Start
 10637 ;;		_I2C_Master_Stop
 10638 ;;		_I2C_Master_Write
 10639 ;; This function is called by:
 10640 ;;		_Decodify_Command
 10641 ;; This function uses a non-reentrant model
 10642 ;;
 10643                           
 10644                           
 10645                           ;psect for function _EEPROM_24C1025_Read_Str
 10646  138A                     _EEPROM_24C1025_Read_Str:
 10647                           
 10648                           ;incstack = 0
 10649                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10650                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10651  138A  1283               	bcf	3,5	;RP0=0, select bank0
 10652  138B  1303               	bcf	3,6	;RP1=0, select bank0
 10653  138C  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10654                           
 10655                           ;EEPROM_24C1025.c: 277:      unsigned char range=0;
 10656  138D  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10657                           
 10658                           ;EEPROM_24C1025.c: 278:      unsigned char ctrl;;EEPROM_24C1025.c: 280:      if(mem_add>
      +                          0x1FFFF) return;
 10659  138E  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10660  138F  1D03               	btfss	3,2
 10661  1390  0008               	return
 10662  1391  3002               	movlw	2
 10663  1392  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10664  1393  1D03               	skipz
 10665  1394  2B9D               	goto	u4283
 10666  1395  3000               	movlw	0
 10667  1396  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10668  1397  1D03               	skipz
 10669  1398  2B9D               	goto	u4283
 10670  1399  3000               	movlw	0
 10671  139A  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10672  139B  1D03               	skipz
 10673  139C  2B9D               	goto	u4283
 10674  139D                     u4283:
 10675  139D  1803               	btfsc	3,0
 10676  139E  0008               	return
 10677                           
 10678                           ;EEPROM_24C1025.c: 282:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10679  139F  1283               	bcf	3,5	;RP0=0, select bank0
 10680  13A0  1303               	bcf	3,6	;RP1=0, select bank0
 10681  13A1  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10682  13A2  1D03               	btfss	3,2
 10683  13A3  2BB2               	goto	l4543
 10684  13A4  3001               	movlw	1
 10685  13A5  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10686  13A6  1D03               	skipz
 10687  13A7  2BB0               	goto	u4293
 10688  13A8  3000               	movlw	0
 10689  13A9  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10690  13AA  1D03               	skipz
 10691  13AB  2BB0               	goto	u4293
 10692  13AC  3000               	movlw	0
 10693  13AD  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10694  13AE  1D03               	skipz
 10695  13AF  2BB0               	goto	u4293
 10696  13B0                     u4293:
 10697  13B0  1C03               	btfss	3,0
 10698  13B1  2BB9               	goto	l4545
 10699  13B2                     l4543:
 10700  13B2  3008               	movlw	8
 10701  13B3  1283               	bcf	3,5	;RP0=0, select bank0
 10702  13B4  1303               	bcf	3,6	;RP1=0, select bank0
 10703  13B5  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10704  13B6  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10705  13B7  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10706  13B8  2BBC               	goto	l4547
 10707  13B9                     l4545:
 10708  13B9  1283               	bcf	3,5	;RP0=0, select bank0
 10709  13BA  1303               	bcf	3,6	;RP1=0, select bank0
 10710  13BB  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10711  13BC                     l4547:
 10712                           
 10713                           ;EEPROM_24C1025.c: 283:      ctrl=chip_add;
 10714  13BC  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10715  13BD  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10716  13BE  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10717  13BF  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10718                           
 10719                           ;EEPROM_24C1025.c: 284:      ctrl<<=1;
 10720  13C0  1003               	clrc
 10721  13C1  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10722                           
 10723                           ;EEPROM_24C1025.c: 285:      ctrl |= 0xA0;
 10724  13C2  30A0               	movlw	160
 10725  13C3  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10726  13C4  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10727  13C5  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10728                           
 10729                           ;EEPROM_24C1025.c: 286:      ctrl |= 0b00000001;
 10730  13C6  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10731                           
 10732                           ;EEPROM_24C1025.c: 287:      ctrl |= range;
 10733  13C7  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10734  13C8  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10735  13C9  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10736  13CA  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10737                           
 10738                           ;EEPROM_24C1025.c: 289:      I2C_Master_Start();
 10739  13CB  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 10740                           
 10741                           ;EEPROM_24C1025.c: 290:      I2C_Master_Write(ctrl & 0xFE);
 10742  13D0  1283               	bcf	3,5	;RP0=0, select bank0
 10743  13D1  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10744  13D2  39FE               	andlw	254
 10745  13D3  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10746  13D4  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10747  13D5  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10748  13D6  00A3               	movwf	I2C_Master_Write@d
 10749  13D7  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10750  13D8  00A4               	movwf	I2C_Master_Write@d+1
 10751  13D9  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10752                           
 10753                           ;EEPROM_24C1025.c: 291:      I2C_Master_Write(((char *)&mem_add)[1]);
 10754  13DE  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10755  13DF  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10756  13E0  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10757  13E1  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10758  13E2  00A3               	movwf	I2C_Master_Write@d
 10759  13E3  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10760  13E4  00A4               	movwf	I2C_Master_Write@d+1
 10761  13E5  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10762                           
 10763                           ;EEPROM_24C1025.c: 292:      I2C_Master_Write(((char *)&mem_add)[0]);
 10764  13EA  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10765  13EB  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10766  13EC  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10767  13ED  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10768  13EE  00A3               	movwf	I2C_Master_Write@d
 10769  13EF  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10770  13F0  00A4               	movwf	I2C_Master_Write@d+1
 10771  13F1  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10772                           
 10773                           ;EEPROM_24C1025.c: 293:      I2C_Master_RepeatedStart();
 10774  13F6  160A  158A  20A6  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10775                           
 10776                           ;EEPROM_24C1025.c: 294:      I2C_Master_Write(ctrl);
 10777  13FB  1283               	bcf	3,5	;RP0=0, select bank0
 10778  13FC  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10779  13FD  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10780  13FE  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10781  13FF  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10782  1400  00A3               	movwf	I2C_Master_Write@d
 10783  1401  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10784  1402  00A4               	movwf	I2C_Master_Write@d+1
 10785  1403  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10786                           
 10787                           ;EEPROM_24C1025.c: 296:      cnt=0;
 10788  1408  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
 10789  1409                     l4569:
 10790                           
 10791                           ;EEPROM_24C1025.c: 298:            if(mem_add>0x1FFFF) break;
 10792  1409  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10793  140A  1D03               	btfss	3,2
 10794  140B  2CEB               	goto	l4625
 10795  140C  3002               	movlw	2
 10796  140D  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10797  140E  1D03               	skipz
 10798  140F  2C18               	goto	u4303
 10799  1410  3000               	movlw	0
 10800  1411  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10801  1412  1D03               	skipz
 10802  1413  2C18               	goto	u4303
 10803  1414  3000               	movlw	0
 10804  1415  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10805  1416  1D03               	skipz
 10806  1417  2C18               	goto	u4303
 10807  1418                     u4303:
 10808  1418  1803               	btfsc	3,0
 10809  1419  2CEB               	goto	l4625
 10810                           
 10811                           ;EEPROM_24C1025.c: 299:            if((mem_add+1)%128==0)
 10812  141A  1283               	bcf	3,5	;RP0=0, select bank0
 10813  141B  1303               	bcf	3,6	;RP1=0, select bank0
 10814  141C  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10815  141D  3E01               	addlw	1
 10816  141E  397F               	andlw	127
 10817  141F  1D03               	btfss	3,2
 10818  1420  2CBB               	goto	l4613
 10819                           
 10820                           ;EEPROM_24C1025.c: 300:              {;EEPROM_24C1025.c: 301:              (*buffer)=I2C
      +                          _Master_Read(0);
 10821  1421  3000               	movlw	0
 10822  1422  00A3               	movwf	I2C_Master_Read@a
 10823  1423  00A4               	movwf	I2C_Master_Read@a+1
 10824  1424  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 10825  1429  0823               	movf	?_I2C_Master_Read,w
 10826  142A  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10827  142B  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10828  142C  0084               	movwf	4
 10829  142D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10830  142E  1783               	bsf	3,7	;select IRP bank2
 10831  142F  0080               	movwf	0
 10832                           
 10833                           ;EEPROM_24C1025.c: 302:              I2C_Master_Stop();
 10834  1430  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 10835                           
 10836                           ;EEPROM_24C1025.c: 304:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10837  1435  300D               	movlw	13
 10838  1436  1283               	bcf	3,5	;RP0=0, select bank0
 10839  1437  1303               	bcf	3,6	;RP1=0, select bank0
 10840  1438  00AF               	movwf	??_EEPROM_24C1025_Read_Str+1
 10841  1439  30FB               	movlw	251
 10842  143A  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10843  143B                     u5577:
 10844  143B  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10845  143C  2C3B               	goto	u5577
 10846  143D  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10847  143E  2C3B               	goto	u5577
 10848                           
 10849                           ;EEPROM_24C1025.c: 305:              mem_add++;
 10850  143F  3001               	movlw	1
 10851  1440  1283               	bcf	3,5	;RP0=0, select bank0
 10852  1441  1303               	bcf	3,6	;RP1=0, select bank0
 10853  1442  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10854  1443  3000               	movlw	0
 10855  1444  1803               	skipnc
 10856  1445  3001               	movlw	1
 10857  1446  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10858  1447  3000               	movlw	0
 10859  1448  1803               	skipnc
 10860  1449  3001               	movlw	1
 10861  144A  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10862  144B  3000               	movlw	0
 10863  144C  1803               	skipnc
 10864  144D  3001               	movlw	1
 10865  144E  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10866                           
 10867                           ;EEPROM_24C1025.c: 306:              buffer++;
 10868  144F  3001               	movlw	1
 10869  1450  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10870  1451  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10871  1452  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10872                           
 10873                           ;EEPROM_24C1025.c: 307:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10874  1453  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10875  1454  1D03               	btfss	3,2
 10876  1455  2C64               	goto	l4587
 10877  1456  3001               	movlw	1
 10878  1457  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10879  1458  1D03               	skipz
 10880  1459  2C62               	goto	u4323
 10881  145A  3000               	movlw	0
 10882  145B  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10883  145C  1D03               	skipz
 10884  145D  2C62               	goto	u4323
 10885  145E  3000               	movlw	0
 10886  145F  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10887  1460  1D03               	skipz
 10888  1461  2C62               	goto	u4323
 10889  1462                     u4323:
 10890  1462  1C03               	btfss	3,0
 10891  1463  2C6B               	goto	l4589
 10892  1464                     l4587:
 10893  1464  3008               	movlw	8
 10894  1465  1283               	bcf	3,5	;RP0=0, select bank0
 10895  1466  1303               	bcf	3,6	;RP1=0, select bank0
 10896  1467  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10897  1468  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10898  1469  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10899  146A  2C6E               	goto	l4591
 10900  146B                     l4589:
 10901  146B  1283               	bcf	3,5	;RP0=0, select bank0
 10902  146C  1303               	bcf	3,6	;RP1=0, select bank0
 10903  146D  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10904  146E                     l4591:
 10905                           
 10906                           ;EEPROM_24C1025.c: 308:              ctrl=chip_add;
 10907  146E  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10908  146F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10909  1470  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10910  1471  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10911                           
 10912                           ;EEPROM_24C1025.c: 309:              ctrl<<=1;
 10913  1472  1003               	clrc
 10914  1473  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10915                           
 10916                           ;EEPROM_24C1025.c: 310:              ctrl |= 0xA0;
 10917  1474  30A0               	movlw	160
 10918  1475  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10919  1476  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10920  1477  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10921                           
 10922                           ;EEPROM_24C1025.c: 311:              ctrl |= 0b00000001;
 10923  1478  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10924                           
 10925                           ;EEPROM_24C1025.c: 312:              ctrl |= range;
 10926  1479  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10927  147A  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10928  147B  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10929  147C  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10930                           
 10931                           ;EEPROM_24C1025.c: 314:              I2C_Master_Start();
 10932  147D  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 10933                           
 10934                           ;EEPROM_24C1025.c: 315:              I2C_Master_Write(ctrl & 0xFE);
 10935  1482  1283               	bcf	3,5	;RP0=0, select bank0
 10936  1483  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10937  1484  39FE               	andlw	254
 10938  1485  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10939  1486  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10940  1487  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10941  1488  00A3               	movwf	I2C_Master_Write@d
 10942  1489  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10943  148A  00A4               	movwf	I2C_Master_Write@d+1
 10944  148B  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10945                           
 10946                           ;EEPROM_24C1025.c: 316:              I2C_Master_Write(((char *)&mem_add)[1]);
 10947  1490  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10948  1491  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10949  1492  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10950  1493  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10951  1494  00A3               	movwf	I2C_Master_Write@d
 10952  1495  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10953  1496  00A4               	movwf	I2C_Master_Write@d+1
 10954  1497  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10955                           
 10956                           ;EEPROM_24C1025.c: 317:              I2C_Master_Write(((char *)&mem_add)[0]);
 10957  149C  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10958  149D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10959  149E  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10960  149F  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10961  14A0  00A3               	movwf	I2C_Master_Write@d
 10962  14A1  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10963  14A2  00A4               	movwf	I2C_Master_Write@d+1
 10964  14A3  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10965                           
 10966                           ;EEPROM_24C1025.c: 318:              I2C_Master_RepeatedStart();
 10967  14A8  160A  158A  20A6  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10968                           
 10969                           ;EEPROM_24C1025.c: 319:              I2C_Master_Write(ctrl);
 10970  14AD  1283               	bcf	3,5	;RP0=0, select bank0
 10971  14AE  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10972  14AF  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10973  14B0  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10974  14B1  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10975  14B2  00A3               	movwf	I2C_Master_Write@d
 10976  14B3  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10977  14B4  00A4               	movwf	I2C_Master_Write@d+1
 10978  14B5  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 10979                           
 10980                           ;EEPROM_24C1025.c: 320:              }
 10981  14BA  2CE2               	goto	l4623
 10982  14BB                     l4613:
 10983                           
 10984                           ;EEPROM_24C1025.c: 322:              {;EEPROM_24C1025.c: 323:              (*buffer)=I2C
      +                          _Master_Read(1);
 10985  14BB  3001               	movlw	1
 10986  14BC  00A3               	movwf	I2C_Master_Read@a
 10987  14BD  3000               	movlw	0
 10988  14BE  00A4               	movwf	I2C_Master_Read@a+1
 10989  14BF  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 10990  14C4  0823               	movf	?_I2C_Master_Read,w
 10991  14C5  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10992  14C6  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10993  14C7  0084               	movwf	4
 10994  14C8  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10995  14C9  1783               	bsf	3,7	;select IRP bank2
 10996  14CA  0080               	movwf	0
 10997                           
 10998                           ;EEPROM_24C1025.c: 324:              if((*buffer)==0)break;
 10999  14CB  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 11000  14CC  0084               	movwf	4
 11001  14CD  0800               	movf	0,w
 11002  14CE  1903               	btfsc	3,2
 11003  14CF  2CEB               	goto	l4625
 11004                           
 11005                           ;EEPROM_24C1025.c: 325:              buffer++;
 11006  14D0  3001               	movlw	1
 11007  14D1  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 11008  14D2  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 11009  14D3  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 11010                           
 11011                           ;EEPROM_24C1025.c: 326:              mem_add++;
 11012  14D4  3001               	movlw	1
 11013  14D5  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11014  14D6  3000               	movlw	0
 11015  14D7  1803               	skipnc
 11016  14D8  3001               	movlw	1
 11017  14D9  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11018  14DA  3000               	movlw	0
 11019  14DB  1803               	skipnc
 11020  14DC  3001               	movlw	1
 11021  14DD  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11022  14DE  3000               	movlw	0
 11023  14DF  1803               	skipnc
 11024  14E0  3001               	movlw	1
 11025  14E1  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11026  14E2                     l4623:
 11027                           
 11028                           ;EEPROM_24C1025.c: 328:        }while((cnt++)<64);
 11029  14E2  3001               	movlw	1
 11030  14E3  07B0               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 11031  14E4  30FF               	movlw	-1
 11032  14E5  0730               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 11033  14E6  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 11034  14E7  3040               	movlw	64
 11035  14E8  022E               	subwf	??_EEPROM_24C1025_Read_Str,w
 11036  14E9  1C03               	skipc
 11037  14EA  2C09               	goto	l4569
 11038  14EB                     l4625:
 11039                           
 11040                           ;EEPROM_24C1025.c: 330:      I2C_Master_Read(0);
 11041  14EB  3000               	movlw	0
 11042  14EC  1283               	bcf	3,5	;RP0=0, select bank0
 11043  14ED  1303               	bcf	3,6	;RP1=0, select bank0
 11044  14EE  00A3               	movwf	I2C_Master_Read@a
 11045  14EF  00A4               	movwf	I2C_Master_Read@a+1
 11046  14F0  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 11047                           
 11048                           ;EEPROM_24C1025.c: 331:      I2C_Master_Stop();
 11049  14F5  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 11050                           
 11051                           ;EEPROM_24C1025.c: 332:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11052  14FA  30B9               	movlw	185
 11053  14FB  1283               	bcf	3,5	;RP0=0, select bank0
 11054  14FC  1303               	bcf	3,6	;RP1=0, select bank0
 11055  14FD  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 11056  14FE                     u5587:
 11057  14FE  2CFF               	nop2
 11058  14FF  2D00               	nop2
 11059  1500  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11060  1501  2CFE               	goto	u5587
 11061  1502  2D03               	nop2
 11062  1503  0008               	return
 11063  1504                     __end_of_EEPROM_24C1025_Read_Str:
 11064                           
 11065                           	psect	text42
 11066  1A43                     __ptext42:	
 11067 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 11068 ;; Defined at:
 11069 ;;		line 360 in file "EEPROM_24C1025.c"
 11070 ;; Parameters:    Size  Location     Type
 11071 ;;  chip_add        1    wreg     unsigned char 
 11072 ;;  mem_add         4   23[BANK0 ] unsigned long 
 11073 ;; Auto vars:     Size  Location     Type
 11074 ;;  chip_add        1   29[BANK0 ] unsigned char 
 11075 ;;  data            2   30[BANK0 ] unsigned char [2]
 11076 ;; Return value:  Size  Location     Type
 11077 ;;                  2   23[BANK0 ] unsigned int 
 11078 ;; Registers used:
 11079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11080 ;; Tracked objects:
 11081 ;;		On entry : 300/300
 11082 ;;		On exit  : 300/0
 11083 ;;		Unchanged: 0/0
 11084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11085 ;;      Params:         0       4       0       0       0
 11086 ;;      Locals:         0       3       0       0       0
 11087 ;;      Temps:          0       2       0       0       0
 11088 ;;      Totals:         0       9       0       0       0
 11089 ;;Total ram usage:        9 bytes
 11090 ;; Hardware stack levels used:    1
 11091 ;; Hardware stack levels required when called:    4
 11092 ;; This function calls:
 11093 ;;		_EEPROM_24C1025_Read_Buffer
 11094 ;; This function is called by:
 11095 ;;		_Decodify_Command
 11096 ;; This function uses a non-reentrant model
 11097 ;;
 11098                           
 11099                           
 11100                           ;psect for function _EEPROM_24C1025_Read_Int
 11101  1A43                     _EEPROM_24C1025_Read_Int:
 11102                           
 11103                           ;incstack = 0
 11104                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11105                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 11106  1A43  1283               	bcf	3,5	;RP0=0, select bank0
 11107  1A44  1303               	bcf	3,6	;RP1=0, select bank0
 11108  1A45  00BD               	movwf	EEPROM_24C1025_Read_Int@chip_add
 11109                           
 11110                           ;EEPROM_24C1025.c: 361:     char data[2];;EEPROM_24C1025.c: 362:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 11111  1A46  083A               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 11112  1A47  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11113  1A48  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 11114  1A49  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11115  1A4A  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 11116  1A4B  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11117  1A4C  0837               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 11118  1A4D  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11119  1A4E  3002               	movlw	2
 11120  1A4F  00BB               	movwf	??_EEPROM_24C1025_Read_Int
 11121  1A50  083B               	movf	??_EEPROM_24C1025_Read_Int,w
 11122  1A51  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 11123  1A52  303E               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 11124  1A53  00BC               	movwf	??_EEPROM_24C1025_Read_Int+1
 11125  1A54  083C               	movf	??_EEPROM_24C1025_Read_Int+1,w
 11126  1A55  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11127  1A56  083D               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 11128  1A57  160A  118A  2682   	fcall	_EEPROM_24C1025_Read_Buffer
 11129                           
 11130                           ;EEPROM_24C1025.c: 363:     return (data[0]<<8)+data[1];
 11131  1A5A  1283               	bcf	3,5	;RP0=0, select bank0
 11132  1A5B  1303               	bcf	3,6	;RP1=0, select bank0
 11133  1A5C  083E               	movf	EEPROM_24C1025_Read_Int@data,w
 11134  1A5D  00BB               	movwf	??_EEPROM_24C1025_Read_Int
 11135  1A5E  01BC               	clrf	??_EEPROM_24C1025_Read_Int+1
 11136  1A5F  083B               	movf	??_EEPROM_24C1025_Read_Int,w
 11137  1A60  00BC               	movwf	??_EEPROM_24C1025_Read_Int+1
 11138  1A61  01BB               	clrf	??_EEPROM_24C1025_Read_Int
 11139  1A62  083F               	movf	EEPROM_24C1025_Read_Int@data+1,w
 11140  1A63  073B               	addwf	??_EEPROM_24C1025_Read_Int,w
 11141  1A64  00B7               	movwf	?_EEPROM_24C1025_Read_Int
 11142  1A65  3000               	movlw	0
 11143  1A66  1803               	skipnc
 11144  1A67  3001               	movlw	1
 11145  1A68  073C               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 11146  1A69  00B8               	movwf	?_EEPROM_24C1025_Read_Int+1
 11147  1A6A  0008               	return
 11148  1A6B                     __end_of_EEPROM_24C1025_Read_Int:
 11149                           
 11150                           	psect	text43
 11151  1919                     __ptext43:	
 11152 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 11153 ;; Defined at:
 11154 ;;		line 346 in file "EEPROM_24C1025.c"
 11155 ;; Parameters:    Size  Location     Type
 11156 ;;  chip_add        1    wreg     unsigned char 
 11157 ;;  mem_add         4   23[BANK0 ] unsigned long 
 11158 ;; Auto vars:     Size  Location     Type
 11159 ;;  chip_add        1   28[BANK0 ] unsigned char 
 11160 ;;  data            1   29[BANK0 ] unsigned char 
 11161 ;; Return value:  Size  Location     Type
 11162 ;;                  1    wreg      unsigned char 
 11163 ;; Registers used:
 11164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11165 ;; Tracked objects:
 11166 ;;		On entry : 300/300
 11167 ;;		On exit  : 300/0
 11168 ;;		Unchanged: 0/0
 11169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11170 ;;      Params:         0       4       0       0       0
 11171 ;;      Locals:         0       2       0       0       0
 11172 ;;      Temps:          0       1       0       0       0
 11173 ;;      Totals:         0       7       0       0       0
 11174 ;;Total ram usage:        7 bytes
 11175 ;; Hardware stack levels used:    1
 11176 ;; Hardware stack levels required when called:    4
 11177 ;; This function calls:
 11178 ;;		_EEPROM_24C1025_Read_Buffer
 11179 ;; This function is called by:
 11180 ;;		_Decodify_Command
 11181 ;; This function uses a non-reentrant model
 11182 ;;
 11183                           
 11184                           
 11185                           ;psect for function _EEPROM_24C1025_Read_Byte
 11186  1919                     _EEPROM_24C1025_Read_Byte:
 11187                           
 11188                           ;incstack = 0
 11189                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11190                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 11191  1919  1283               	bcf	3,5	;RP0=0, select bank0
 11192  191A  1303               	bcf	3,6	;RP1=0, select bank0
 11193  191B  00BC               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 11194                           
 11195                           ;EEPROM_24C1025.c: 347:     char data;;EEPROM_24C1025.c: 348:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 11196  191C  083A               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 11197  191D  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11198  191E  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 11199  191F  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11200  1920  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 11201  1921  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11202  1922  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 11203  1923  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11204  1924  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 11205  1925  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 11206  1926  303D               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 11207  1927  00BB               	movwf	??_EEPROM_24C1025_Read_Byte
 11208  1928  083B               	movf	??_EEPROM_24C1025_Read_Byte,w
 11209  1929  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11210  192A  083C               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 11211  192B  160A  118A  2682   	fcall	_EEPROM_24C1025_Read_Buffer
 11212                           
 11213                           ;EEPROM_24C1025.c: 349:     return data;
 11214  192E  1283               	bcf	3,5	;RP0=0, select bank0
 11215  192F  1303               	bcf	3,6	;RP1=0, select bank0
 11216  1930  083D               	movf	EEPROM_24C1025_Read_Byte@data,w
 11217  1931  0008               	return
 11218  1932                     __end_of_EEPROM_24C1025_Read_Byte:
 11219                           
 11220                           	psect	text44
 11221  1682                     __ptext44:	
 11222 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 11223 ;; Defined at:
 11224 ;;		line 77 in file "EEPROM_24C1025.c"
 11225 ;; Parameters:    Size  Location     Type
 11226 ;;  chip_add        1    wreg     unsigned char 
 11227 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11228 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11229 ;;  data            1   15[BANK0 ] PTR unsigned char 
 11230 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 11231 ;; Auto vars:     Size  Location     Type
 11232 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11233 ;;  cnt             1   19[BANK0 ] unsigned char 
 11234 ;;  ctrl            1   22[BANK0 ] unsigned char 
 11235 ;;  range           1   21[BANK0 ] unsigned char 
 11236 ;;  cnt             1    0        unsigned char 
 11237 ;; Return value:  Size  Location     Type
 11238 ;;                  1    wreg      void 
 11239 ;; Registers used:
 11240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11241 ;; Tracked objects:
 11242 ;;		On entry : 300/0
 11243 ;;		On exit  : 0/0
 11244 ;;		Unchanged: 0/0
 11245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11246 ;;      Params:         0       6       0       0       0
 11247 ;;      Locals:         0       5       0       0       0
 11248 ;;      Temps:          0       2       0       0       0
 11249 ;;      Totals:         0      13       0       0       0
 11250 ;;Total ram usage:       13 bytes
 11251 ;; Hardware stack levels used:    1
 11252 ;; Hardware stack levels required when called:    3
 11253 ;; This function calls:
 11254 ;;		_I2C_Master_Read
 11255 ;;		_I2C_Master_RepeatedStart
 11256 ;;		_I2C_Master_Start
 11257 ;;		_I2C_Master_Stop
 11258 ;;		_I2C_Master_Write
 11259 ;;		_my_delay_ms_WDT
 11260 ;; This function is called by:
 11261 ;;		_EEPROM_24C1025_Read_Byte
 11262 ;;		_EEPROM_24C1025_Read_Int
 11263 ;; This function uses a non-reentrant model
 11264 ;;
 11265                           
 11266                           
 11267                           ;psect for function _EEPROM_24C1025_Read_Buffer
 11268  1682                     _EEPROM_24C1025_Read_Buffer:
 11269                           
 11270                           ;incstack = 0
 11271                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 11272                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 11273  1682  00B4               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 11274                           
 11275                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 11276  1683  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11277                           
 11278                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 11279  1684  3014               	movlw	20
 11280  1685  1683               	bsf	3,5	;RP0=1, select bank1
 11281  1686  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11282  1687  3000               	movlw	0
 11283  1688  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11284                           
 11285                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 11286  1689  1283               	bcf	3,5	;RP0=0, select bank0
 11287  168A  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11288  168B  1D03               	btfss	3,2
 11289  168C  0008               	return
 11290  168D  3002               	movlw	2
 11291  168E  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11292  168F  1D03               	skipz
 11293  1690  2E99               	goto	u2873
 11294  1691  3000               	movlw	0
 11295  1692  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11296  1693  1D03               	skipz
 11297  1694  2E99               	goto	u2873
 11298  1695  3000               	movlw	0
 11299  1696  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11300  1697  1D03               	skipz
 11301  1698  2E99               	goto	u2873
 11302  1699                     u2873:
 11303  1699  1803               	btfsc	3,0
 11304  169A  0008               	return
 11305                           
 11306                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11307  169B  1283               	bcf	3,5	;RP0=0, select bank0
 11308  169C  1303               	bcf	3,6	;RP1=0, select bank0
 11309  169D  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11310  169E  1D03               	btfss	3,2
 11311  169F  2EAE               	goto	l3737
 11312  16A0  3001               	movlw	1
 11313  16A1  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11314  16A2  1D03               	skipz
 11315  16A3  2EAC               	goto	u2883
 11316  16A4  3000               	movlw	0
 11317  16A5  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11318  16A6  1D03               	skipz
 11319  16A7  2EAC               	goto	u2883
 11320  16A8  3000               	movlw	0
 11321  16A9  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11322  16AA  1D03               	skipz
 11323  16AB  2EAC               	goto	u2883
 11324  16AC                     u2883:
 11325  16AC  1C03               	btfss	3,0
 11326  16AD  2EB5               	goto	l3739
 11327  16AE                     l3737:
 11328  16AE  3008               	movlw	8
 11329  16AF  1283               	bcf	3,5	;RP0=0, select bank0
 11330  16B0  1303               	bcf	3,6	;RP1=0, select bank0
 11331  16B1  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11332  16B2  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11333  16B3  00B5               	movwf	EEPROM_24C1025_Read_Buffer@range
 11334  16B4  2EB8               	goto	l3741
 11335  16B5                     l3739:
 11336  16B5  1283               	bcf	3,5	;RP0=0, select bank0
 11337  16B6  1303               	bcf	3,6	;RP1=0, select bank0
 11338  16B7  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11339  16B8                     l3741:
 11340                           
 11341                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 11342  16B8  0834               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11343  16B9  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11344  16BA  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11345  16BB  00B6               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11346                           
 11347                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 11348  16BC  1003               	clrc
 11349  16BD  0DB6               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11350                           
 11351                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 11352  16BE  30A0               	movlw	160
 11353  16BF  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11354  16C0  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11355  16C1  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11356                           
 11357                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 11358  16C2  1436               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11359                           
 11360                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 11361  16C3  0835               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11362  16C4  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11363  16C5  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11364  16C6  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11365                           
 11366                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 11367  16C7  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 11368                           
 11369                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 11370  16CC  1283               	bcf	3,5	;RP0=0, select bank0
 11371  16CD  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11372  16CE  39FE               	andlw	254
 11373  16CF  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11374  16D0  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11375  16D1  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11376  16D2  00A3               	movwf	I2C_Master_Write@d
 11377  16D3  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11378  16D4  00A4               	movwf	I2C_Master_Write@d+1
 11379  16D5  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11380                           
 11381                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 11382  16DA  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11383  16DB  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11384  16DC  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11385  16DD  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11386  16DE  00A3               	movwf	I2C_Master_Write@d
 11387  16DF  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11388  16E0  00A4               	movwf	I2C_Master_Write@d+1
 11389  16E1  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11390                           
 11391                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 11392  16E6  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11393  16E7  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11394  16E8  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11395  16E9  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11396  16EA  00A3               	movwf	I2C_Master_Write@d
 11397  16EB  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11398  16EC  00A4               	movwf	I2C_Master_Write@d+1
 11399  16ED  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11400                           
 11401                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 11402  16F2  160A  158A  20A6  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11403                           
 11404                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 11405  16F7  1283               	bcf	3,5	;RP0=0, select bank0
 11406  16F8  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11407  16F9  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11408  16FA  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11409  16FB  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11410  16FC  00A3               	movwf	I2C_Master_Write@d
 11411  16FD  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11412  16FE  00A4               	movwf	I2C_Master_Write@d+1
 11413  16FF  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11414                           
 11415                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 11416  1704  01B3               	clrf	EEPROM_24C1025_Read_Buffer@cnt_108
 11417  1705                     l3815:
 11418  1705  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 11419  1706  0233               	subwf	EEPROM_24C1025_Read_Buffer@cnt_108,w
 11420  1707  1803               	btfsc	3,0
 11421  1708  2FE7               	goto	l3817
 11422  1709  0064               	clrwdt	;# 
 11423                           
 11424                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 11425  170A  1283               	bcf	3,5	;RP0=0, select bank0
 11426  170B  1303               	bcf	3,6	;RP1=0, select bank0
 11427  170C  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11428  170D  1D03               	btfss	3,2
 11429  170E  2FE7               	goto	l3817
 11430  170F  3002               	movlw	2
 11431  1710  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11432  1711  1D03               	skipz
 11433  1712  2F1B               	goto	u2893
 11434  1713  3000               	movlw	0
 11435  1714  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11436  1715  1D03               	skipz
 11437  1716  2F1B               	goto	u2893
 11438  1717  3000               	movlw	0
 11439  1718  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11440  1719  1D03               	skipz
 11441  171A  2F1B               	goto	u2893
 11442  171B                     u2893:
 11443  171B  1803               	btfsc	3,0
 11444  171C  2FE7               	goto	l3817
 11445                           
 11446                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 11447  171D  1283               	bcf	3,5	;RP0=0, select bank0
 11448  171E  1303               	bcf	3,6	;RP1=0, select bank0
 11449  171F  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11450  1720  3E01               	addlw	1
 11451  1721  397F               	andlw	127
 11452  1722  1D03               	btfss	3,2
 11453  1723  2FC0               	goto	l3807
 11454                           
 11455                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 11456  1724  3000               	movlw	0
 11457  1725  00A3               	movwf	I2C_Master_Read@a
 11458  1726  00A4               	movwf	I2C_Master_Read@a+1
 11459  1727  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 11460  172C  0823               	movf	?_I2C_Master_Read,w
 11461  172D  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11462  172E  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11463  172F  0084               	movwf	4
 11464  1730  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11465  1731  1383               	bcf	3,7	;select IRP bank0
 11466  1732  0080               	movwf	0
 11467                           
 11468                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 11469  1733  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 11470                           
 11471                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 11472  1738  3000               	movlw	0
 11473  1739  1283               	bcf	3,5	;RP0=0, select bank0
 11474  173A  00A3               	movwf	my_delay_ms_WDT@time+3
 11475  173B  3000               	movlw	0
 11476  173C  00A2               	movwf	my_delay_ms_WDT@time+2
 11477  173D  3000               	movlw	0
 11478  173E  00A1               	movwf	my_delay_ms_WDT@time+1
 11479  173F  3005               	movlw	5
 11480  1740  00A0               	movwf	my_delay_ms_WDT@time
 11481  1741  160A  158A  2448  160A  118A  	fcall	_my_delay_ms_WDT
 11482                           
 11483                           ;EEPROM_24C1025.c: 114:              mem_add++;
 11484  1746  3001               	movlw	1
 11485  1747  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11486  1748  3000               	movlw	0
 11487  1749  1803               	skipnc
 11488  174A  3001               	movlw	1
 11489  174B  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11490  174C  3000               	movlw	0
 11491  174D  1803               	skipnc
 11492  174E  3001               	movlw	1
 11493  174F  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11494  1750  3000               	movlw	0
 11495  1751  1803               	skipnc
 11496  1752  3001               	movlw	1
 11497  1753  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11498                           
 11499                           ;EEPROM_24C1025.c: 115:              data++;
 11500  1754  3001               	movlw	1
 11501  1755  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11502  1756  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11503  1757  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11504                           
 11505                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11506  1758  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11507  1759  1D03               	btfss	3,2
 11508  175A  2F69               	goto	l3781
 11509  175B  3001               	movlw	1
 11510  175C  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11511  175D  1D03               	skipz
 11512  175E  2F67               	goto	u2913
 11513  175F  3000               	movlw	0
 11514  1760  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11515  1761  1D03               	skipz
 11516  1762  2F67               	goto	u2913
 11517  1763  3000               	movlw	0
 11518  1764  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11519  1765  1D03               	skipz
 11520  1766  2F67               	goto	u2913
 11521  1767                     u2913:
 11522  1767  1C03               	btfss	3,0
 11523  1768  2F70               	goto	l3783
 11524  1769                     l3781:
 11525  1769  3008               	movlw	8
 11526  176A  1283               	bcf	3,5	;RP0=0, select bank0
 11527  176B  1303               	bcf	3,6	;RP1=0, select bank0
 11528  176C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11529  176D  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11530  176E  00B5               	movwf	EEPROM_24C1025_Read_Buffer@range
 11531  176F  2F73               	goto	l3785
 11532  1770                     l3783:
 11533  1770  1283               	bcf	3,5	;RP0=0, select bank0
 11534  1771  1303               	bcf	3,6	;RP1=0, select bank0
 11535  1772  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11536  1773                     l3785:
 11537                           
 11538                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 11539  1773  0834               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11540  1774  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11541  1775  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11542  1776  00B6               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11543                           
 11544                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 11545  1777  1003               	clrc
 11546  1778  0DB6               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11547                           
 11548                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 11549  1779  30A0               	movlw	160
 11550  177A  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11551  177B  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11552  177C  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11553                           
 11554                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 11555  177D  1436               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11556                           
 11557                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 11558  177E  0835               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11559  177F  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11560  1780  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11561  1781  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11562                           
 11563                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 11564  1782  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 11565                           
 11566                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 11567  1787  1283               	bcf	3,5	;RP0=0, select bank0
 11568  1788  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11569  1789  39FE               	andlw	254
 11570  178A  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11571  178B  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11572  178C  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11573  178D  00A3               	movwf	I2C_Master_Write@d
 11574  178E  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11575  178F  00A4               	movwf	I2C_Master_Write@d+1
 11576  1790  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11577                           
 11578                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 11579  1795  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11580  1796  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11581  1797  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11582  1798  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11583  1799  00A3               	movwf	I2C_Master_Write@d
 11584  179A  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11585  179B  00A4               	movwf	I2C_Master_Write@d+1
 11586  179C  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11587                           
 11588                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 11589  17A1  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11590  17A2  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11591  17A3  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11592  17A4  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11593  17A5  00A3               	movwf	I2C_Master_Write@d
 11594  17A6  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11595  17A7  00A4               	movwf	I2C_Master_Write@d+1
 11596  17A8  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11597                           
 11598                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 11599  17AD  160A  158A  20A6  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11600                           
 11601                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 11602  17B2  1283               	bcf	3,5	;RP0=0, select bank0
 11603  17B3  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11604  17B4  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11605  17B5  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11606  17B6  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11607  17B7  00A3               	movwf	I2C_Master_Write@d
 11608  17B8  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11609  17B9  00A4               	movwf	I2C_Master_Write@d+1
 11610  17BA  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11611                           
 11612                           ;EEPROM_24C1025.c: 129:              }
 11613  17BF  2FE2               	goto	l3813
 11614  17C0                     l3807:
 11615                           
 11616                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 11617  17C0  3001               	movlw	1
 11618  17C1  00A3               	movwf	I2C_Master_Read@a
 11619  17C2  3000               	movlw	0
 11620  17C3  00A4               	movwf	I2C_Master_Read@a+1
 11621  17C4  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 11622  17C9  0823               	movf	?_I2C_Master_Read,w
 11623  17CA  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11624  17CB  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11625  17CC  0084               	movwf	4
 11626  17CD  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11627  17CE  1383               	bcf	3,7	;select IRP bank0
 11628  17CF  0080               	movwf	0
 11629                           
 11630                           ;EEPROM_24C1025.c: 133:              data++;
 11631  17D0  3001               	movlw	1
 11632  17D1  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11633  17D2  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11634  17D3  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11635                           
 11636                           ;EEPROM_24C1025.c: 134:              mem_add++;
 11637  17D4  3001               	movlw	1
 11638  17D5  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11639  17D6  3000               	movlw	0
 11640  17D7  1803               	skipnc
 11641  17D8  3001               	movlw	1
 11642  17D9  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11643  17DA  3000               	movlw	0
 11644  17DB  1803               	skipnc
 11645  17DC  3001               	movlw	1
 11646  17DD  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11647  17DE  3000               	movlw	0
 11648  17DF  1803               	skipnc
 11649  17E0  3001               	movlw	1
 11650  17E1  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11651  17E2                     l3813:
 11652                           
 11653                           ;EEPROM_24C1025.c: 136:         }
 11654  17E2  3001               	movlw	1
 11655  17E3  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11656  17E4  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11657  17E5  07B3               	addwf	EEPROM_24C1025_Read_Buffer@cnt_108,f
 11658  17E6  2F05               	goto	l3815
 11659  17E7                     l3817:
 11660                           
 11661                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 11662  17E7  3000               	movlw	0
 11663  17E8  1283               	bcf	3,5	;RP0=0, select bank0
 11664  17E9  1303               	bcf	3,6	;RP1=0, select bank0
 11665  17EA  00A3               	movwf	I2C_Master_Read@a
 11666  17EB  00A4               	movwf	I2C_Master_Read@a+1
 11667  17EC  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 11668                           
 11669                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 11670  17F1  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 11671                           
 11672                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11673  17F6  30B9               	movlw	185
 11674  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 11675  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 11676  17F9  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11677  17FA                     u5597:
 11678  17FA  2FFB               	nop2
 11679  17FB  2FFC               	nop2
 11680  17FC  0BB0               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11681  17FD  2FFA               	goto	u5597
 11682  17FE  2FFF               	nop2
 11683  17FF  0008               	return
 11684  1800                     __end_of_EEPROM_24C1025_Read_Buffer:
 11685                           
 11686                           	psect	text45
 11687  1504                     __ptext45:	
 11688 ;; *************** function _EEPROM_24C1025_Read_Buffer_USART *****************
 11689 ;; Defined at:
 11690 ;;		line 148 in file "EEPROM_24C1025.c"
 11691 ;; Parameters:    Size  Location     Type
 11692 ;;  chip_add        1    wreg     unsigned char 
 11693 ;;  mem_add         4    9[BANK0 ] unsigned long 
 11694 ;;  sizedata        1   13[BANK0 ] unsigned char 
 11695 ;;  data            1   14[BANK0 ] PTR unsigned char 
 11696 ;;		 -> buffer(33), 
 11697 ;; Auto vars:     Size  Location     Type
 11698 ;;  chip_add        1   19[BANK0 ] unsigned char 
 11699 ;;  cnt             1   18[BANK0 ] unsigned char 
 11700 ;;  ctrl            1   21[BANK0 ] unsigned char 
 11701 ;;  range           1   20[BANK0 ] unsigned char 
 11702 ;;  cnt             1    0        unsigned char 
 11703 ;; Return value:  Size  Location     Type
 11704 ;;                  1    wreg      void 
 11705 ;; Registers used:
 11706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11707 ;; Tracked objects:
 11708 ;;		On entry : 300/300
 11709 ;;		On exit  : 0/0
 11710 ;;		Unchanged: 0/0
 11711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11712 ;;      Params:         0       6       0       0       0
 11713 ;;      Locals:         0       5       0       0       0
 11714 ;;      Temps:          0       2       0       0       0
 11715 ;;      Totals:         0      13       0       0       0
 11716 ;;Total ram usage:       13 bytes
 11717 ;; Hardware stack levels used:    1
 11718 ;; Hardware stack levels required when called:    3
 11719 ;; This function calls:
 11720 ;;		_I2C_Master_Read
 11721 ;;		_I2C_Master_RepeatedStart
 11722 ;;		_I2C_Master_Start
 11723 ;;		_I2C_Master_Stop
 11724 ;;		_I2C_Master_Write
 11725 ;;		_USART_putc
 11726 ;; This function is called by:
 11727 ;;		_Decodify_Command
 11728 ;; This function uses a non-reentrant model
 11729 ;;
 11730                           
 11731                           
 11732                           ;psect for function _EEPROM_24C1025_Read_Buffer_USART
 11733  1504                     _EEPROM_24C1025_Read_Buffer_USART:
 11734                           
 11735                           ;incstack = 0
 11736                           ; Regs used in _EEPROM_24C1025_Read_Buffer_USART: [wreg-fsr0h+status,2+status,0+pclath+c
      +                          stack]
 11737                           ;EEPROM_24C1025_Read_Buffer_USART@chip_add stored from wreg
 11738  1504  1283               	bcf	3,5	;RP0=0, select bank0
 11739  1505  1303               	bcf	3,6	;RP1=0, select bank0
 11740  1506  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@chip_add
 11741                           
 11742                           ;EEPROM_24C1025.c: 154:      unsigned char range=0;
 11743  1507  01B4               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11744                           
 11745                           ;EEPROM_24C1025.c: 155:      unsigned char ctrl;;EEPROM_24C1025.c: 157:      Delay_Led_M
      +                          emory=20;
 11746  1508  3014               	movlw	20
 11747  1509  1683               	bsf	3,5	;RP0=1, select bank1
 11748  150A  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11749  150B  3000               	movlw	0
 11750  150C  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11751                           
 11752                           ;EEPROM_24C1025.c: 159:      if(mem_add>0x1FFFF) return;
 11753  150D  1283               	bcf	3,5	;RP0=0, select bank0
 11754  150E  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11755  150F  1D03               	btfss	3,2
 11756  1510  0008               	return
 11757  1511  3002               	movlw	2
 11758  1512  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11759  1513  1D03               	skipz
 11760  1514  2D1D               	goto	u4163
 11761  1515  3000               	movlw	0
 11762  1516  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11763  1517  1D03               	skipz
 11764  1518  2D1D               	goto	u4163
 11765  1519  3000               	movlw	0
 11766  151A  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11767  151B  1D03               	skipz
 11768  151C  2D1D               	goto	u4163
 11769  151D                     u4163:
 11770  151D  1803               	btfsc	3,0
 11771  151E  0008               	return
 11772                           
 11773                           ;EEPROM_24C1025.c: 161:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11774  151F  1283               	bcf	3,5	;RP0=0, select bank0
 11775  1520  1303               	bcf	3,6	;RP1=0, select bank0
 11776  1521  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11777  1522  1D03               	btfss	3,2
 11778  1523  2D32               	goto	l4377
 11779  1524  3001               	movlw	1
 11780  1525  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11781  1526  1D03               	skipz
 11782  1527  2D30               	goto	u4173
 11783  1528  3000               	movlw	0
 11784  1529  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11785  152A  1D03               	skipz
 11786  152B  2D30               	goto	u4173
 11787  152C  3000               	movlw	0
 11788  152D  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11789  152E  1D03               	skipz
 11790  152F  2D30               	goto	u4173
 11791  1530                     u4173:
 11792  1530  1C03               	btfss	3,0
 11793  1531  2D39               	goto	l4379
 11794  1532                     l4377:
 11795  1532  3008               	movlw	8
 11796  1533  1283               	bcf	3,5	;RP0=0, select bank0
 11797  1534  1303               	bcf	3,6	;RP1=0, select bank0
 11798  1535  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11799  1536  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11800  1537  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11801  1538  2D3C               	goto	l4381
 11802  1539                     l4379:
 11803  1539  1283               	bcf	3,5	;RP0=0, select bank0
 11804  153A  1303               	bcf	3,6	;RP1=0, select bank0
 11805  153B  01B4               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11806  153C                     l4381:
 11807                           
 11808                           ;EEPROM_24C1025.c: 162:      ctrl=chip_add;
 11809  153C  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11810  153D  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11811  153E  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11812  153F  00B5               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11813                           
 11814                           ;EEPROM_24C1025.c: 163:      ctrl<<=1;
 11815  1540  1003               	clrc
 11816  1541  0DB5               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11817                           
 11818                           ;EEPROM_24C1025.c: 164:      ctrl |= 0xA0;
 11819  1542  30A0               	movlw	160
 11820  1543  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11821  1544  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11822  1545  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11823                           
 11824                           ;EEPROM_24C1025.c: 165:      ctrl |= 0b00000001;
 11825  1546  1435               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11826                           
 11827                           ;EEPROM_24C1025.c: 166:      ctrl |= range;
 11828  1547  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11829  1548  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11830  1549  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11831  154A  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11832                           
 11833                           ;EEPROM_24C1025.c: 168:      I2C_Master_Start();
 11834  154B  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 11835                           
 11836                           ;EEPROM_24C1025.c: 169:      I2C_Master_Write(ctrl & 0xFE);
 11837  1550  1283               	bcf	3,5	;RP0=0, select bank0
 11838  1551  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11839  1552  39FE               	andlw	254
 11840  1553  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11841  1554  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11842  1555  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11843  1556  00A3               	movwf	I2C_Master_Write@d
 11844  1557  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11845  1558  00A4               	movwf	I2C_Master_Write@d+1
 11846  1559  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11847                           
 11848                           ;EEPROM_24C1025.c: 170:      I2C_Master_Write(((char *)&mem_add)[1]);
 11849  155E  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11850  155F  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11851  1560  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11852  1561  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11853  1562  00A3               	movwf	I2C_Master_Write@d
 11854  1563  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11855  1564  00A4               	movwf	I2C_Master_Write@d+1
 11856  1565  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11857                           
 11858                           ;EEPROM_24C1025.c: 171:      I2C_Master_Write(((char *)&mem_add)[0]);
 11859  156A  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11860  156B  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11861  156C  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11862  156D  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11863  156E  00A3               	movwf	I2C_Master_Write@d
 11864  156F  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11865  1570  00A4               	movwf	I2C_Master_Write@d+1
 11866  1571  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11867                           
 11868                           ;EEPROM_24C1025.c: 172:      I2C_Master_RepeatedStart();
 11869  1576  160A  158A  20A6  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11870                           
 11871                           ;EEPROM_24C1025.c: 173:      I2C_Master_Write(ctrl);
 11872  157B  1283               	bcf	3,5	;RP0=0, select bank0
 11873  157C  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11874  157D  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11875  157E  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11876  157F  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11877  1580  00A3               	movwf	I2C_Master_Write@d
 11878  1581  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11879  1582  00A4               	movwf	I2C_Master_Write@d+1
 11880  1583  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 11881                           
 11882                           ;EEPROM_24C1025.c: 175:      for(char cnt=0;cnt<(sizedata);cnt++)
 11883  1588  01B2               	clrf	EEPROM_24C1025_Read_Buffer_USART@cnt_117
 11884  1589                     l4451:
 11885  1589  082D               	movf	EEPROM_24C1025_Read_Buffer_USART@sizedata,w
 11886  158A  0232               	subwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,w
 11887  158B  1803               	btfsc	3,0
 11888  158C  2E69               	goto	l4453
 11889  158D  0064               	clrwdt	;# 
 11890                           
 11891                           ;EEPROM_24C1025.c: 178:            if(mem_add>0x1FFFF) break;
 11892  158E  1283               	bcf	3,5	;RP0=0, select bank0
 11893  158F  1303               	bcf	3,6	;RP1=0, select bank0
 11894  1590  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11895  1591  1D03               	btfss	3,2
 11896  1592  2E69               	goto	l4453
 11897  1593  3002               	movlw	2
 11898  1594  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11899  1595  1D03               	skipz
 11900  1596  2D9F               	goto	u4183
 11901  1597  3000               	movlw	0
 11902  1598  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11903  1599  1D03               	skipz
 11904  159A  2D9F               	goto	u4183
 11905  159B  3000               	movlw	0
 11906  159C  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11907  159D  1D03               	skipz
 11908  159E  2D9F               	goto	u4183
 11909  159F                     u4183:
 11910  159F  1803               	btfsc	3,0
 11911  15A0  2E69               	goto	l4453
 11912                           
 11913                           ;EEPROM_24C1025.c: 179:            if((mem_add+1)%128==0)
 11914  15A1  1283               	bcf	3,5	;RP0=0, select bank0
 11915  15A2  1303               	bcf	3,6	;RP1=0, select bank0
 11916  15A3  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11917  15A4  3E01               	addlw	1
 11918  15A5  397F               	andlw	127
 11919  15A6  1D03               	btfss	3,2
 11920  15A7  2E3D               	goto	l4445
 11921                           
 11922                           ;EEPROM_24C1025.c: 180:              {;EEPROM_24C1025.c: 181:              (*data)=I2C_M
      +                          aster_Read(0);
 11923  15A8  3000               	movlw	0
 11924  15A9  00A3               	movwf	I2C_Master_Read@a
 11925  15AA  00A4               	movwf	I2C_Master_Read@a+1
 11926  15AB  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 11927  15B0  0823               	movf	?_I2C_Master_Read,w
 11928  15B1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11929  15B2  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11930  15B3  0084               	movwf	4
 11931  15B4  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11932  15B5  1783               	bsf	3,7	;select IRP bank2
 11933  15B6  0080               	movwf	0
 11934                           
 11935                           ;EEPROM_24C1025.c: 182:              I2C_Master_Stop();
 11936  15B7  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 11937                           
 11938                           ;EEPROM_24C1025.c: 183:              USART_putc(*data);
 11939  15BC  1283               	bcf	3,5	;RP0=0, select bank0
 11940  15BD  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11941  15BE  0084               	movwf	4
 11942  15BF  1783               	bsf	3,7	;select IRP bank2
 11943  15C0  0800               	movf	0,w
 11944  15C1  160A  158A  20B1  160A  118A  	fcall	_USART_putc
 11945                           
 11946                           ;EEPROM_24C1025.c: 186:              mem_add++;
 11947  15C6  3001               	movlw	1
 11948  15C7  1283               	bcf	3,5	;RP0=0, select bank0
 11949  15C8  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11950  15C9  3000               	movlw	0
 11951  15CA  1803               	skipnc
 11952  15CB  3001               	movlw	1
 11953  15CC  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11954  15CD  3000               	movlw	0
 11955  15CE  1803               	skipnc
 11956  15CF  3001               	movlw	1
 11957  15D0  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11958  15D1  3000               	movlw	0
 11959  15D2  1803               	skipnc
 11960  15D3  3001               	movlw	1
 11961  15D4  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11962                           
 11963                           ;EEPROM_24C1025.c: 188:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11964  15D5  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11965  15D6  1D03               	btfss	3,2
 11966  15D7  2DE6               	goto	l4419
 11967  15D8  3001               	movlw	1
 11968  15D9  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11969  15DA  1D03               	skipz
 11970  15DB  2DE4               	goto	u4203
 11971  15DC  3000               	movlw	0
 11972  15DD  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11973  15DE  1D03               	skipz
 11974  15DF  2DE4               	goto	u4203
 11975  15E0  3000               	movlw	0
 11976  15E1  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11977  15E2  1D03               	skipz
 11978  15E3  2DE4               	goto	u4203
 11979  15E4                     u4203:
 11980  15E4  1C03               	btfss	3,0
 11981  15E5  2DED               	goto	l4421
 11982  15E6                     l4419:
 11983  15E6  3008               	movlw	8
 11984  15E7  1283               	bcf	3,5	;RP0=0, select bank0
 11985  15E8  1303               	bcf	3,6	;RP1=0, select bank0
 11986  15E9  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11987  15EA  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11988  15EB  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11989  15EC  2DF0               	goto	l4423
 11990  15ED                     l4421:
 11991  15ED  1283               	bcf	3,5	;RP0=0, select bank0
 11992  15EE  1303               	bcf	3,6	;RP1=0, select bank0
 11993  15EF  01B4               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11994  15F0                     l4423:
 11995                           
 11996                           ;EEPROM_24C1025.c: 189:              ctrl=chip_add;
 11997  15F0  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11998  15F1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11999  15F2  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12000  15F3  00B5               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 12001                           
 12002                           ;EEPROM_24C1025.c: 190:              ctrl<<=1;
 12003  15F4  1003               	clrc
 12004  15F5  0DB5               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 12005                           
 12006                           ;EEPROM_24C1025.c: 191:              ctrl |= 0xA0;
 12007  15F6  30A0               	movlw	160
 12008  15F7  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12009  15F8  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12010  15F9  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 12011                           
 12012                           ;EEPROM_24C1025.c: 192:              ctrl |= 0b00000001;
 12013  15FA  1435               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 12014                           
 12015                           ;EEPROM_24C1025.c: 193:              ctrl |= range;
 12016  15FB  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 12017  15FC  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12018  15FD  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12019  15FE  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 12020                           
 12021                           ;EEPROM_24C1025.c: 195:              I2C_Master_Start();
 12022  15FF  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 12023                           
 12024                           ;EEPROM_24C1025.c: 196:              I2C_Master_Write(ctrl & 0xFE);
 12025  1604  1283               	bcf	3,5	;RP0=0, select bank0
 12026  1605  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 12027  1606  39FE               	andlw	254
 12028  1607  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12029  1608  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 12030  1609  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12031  160A  00A3               	movwf	I2C_Master_Write@d
 12032  160B  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 12033  160C  00A4               	movwf	I2C_Master_Write@d+1
 12034  160D  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12035                           
 12036                           ;EEPROM_24C1025.c: 197:              I2C_Master_Write(((char *)&mem_add)[1]);
 12037  1612  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 12038  1613  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12039  1614  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 12040  1615  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12041  1616  00A3               	movwf	I2C_Master_Write@d
 12042  1617  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 12043  1618  00A4               	movwf	I2C_Master_Write@d+1
 12044  1619  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12045                           
 12046                           ;EEPROM_24C1025.c: 198:              I2C_Master_Write(((char *)&mem_add)[0]);
 12047  161E  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 12048  161F  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12049  1620  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 12050  1621  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12051  1622  00A3               	movwf	I2C_Master_Write@d
 12052  1623  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 12053  1624  00A4               	movwf	I2C_Master_Write@d+1
 12054  1625  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12055                           
 12056                           ;EEPROM_24C1025.c: 199:              I2C_Master_RepeatedStart();
 12057  162A  160A  158A  20A6  160A  118A  	fcall	_I2C_Master_RepeatedStart
 12058                           
 12059                           ;EEPROM_24C1025.c: 200:              I2C_Master_Write(ctrl);
 12060  162F  1283               	bcf	3,5	;RP0=0, select bank0
 12061  1630  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 12062  1631  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12063  1632  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 12064  1633  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12065  1634  00A3               	movwf	I2C_Master_Write@d
 12066  1635  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 12067  1636  00A4               	movwf	I2C_Master_Write@d+1
 12068  1637  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12069                           
 12070                           ;EEPROM_24C1025.c: 201:              }
 12071  163C  2E64               	goto	l4449
 12072  163D                     l4445:
 12073                           
 12074                           ;EEPROM_24C1025.c: 203:              {;EEPROM_24C1025.c: 204:              (*data)=I2C_M
      +                          aster_Read(1);
 12075  163D  3001               	movlw	1
 12076  163E  00A3               	movwf	I2C_Master_Read@a
 12077  163F  3000               	movlw	0
 12078  1640  00A4               	movwf	I2C_Master_Read@a+1
 12079  1641  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 12080  1646  0823               	movf	?_I2C_Master_Read,w
 12081  1647  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12082  1648  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 12083  1649  0084               	movwf	4
 12084  164A  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12085  164B  1783               	bsf	3,7	;select IRP bank2
 12086  164C  0080               	movwf	0
 12087                           
 12088                           ;EEPROM_24C1025.c: 205:              USART_putc(*data);
 12089  164D  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 12090  164E  0084               	movwf	4
 12091  164F  0800               	movf	0,w
 12092  1650  160A  158A  20B1  160A  118A  	fcall	_USART_putc
 12093                           
 12094                           ;EEPROM_24C1025.c: 207:              mem_add++;
 12095  1655  3001               	movlw	1
 12096  1656  1283               	bcf	3,5	;RP0=0, select bank0
 12097  1657  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 12098  1658  3000               	movlw	0
 12099  1659  1803               	skipnc
 12100  165A  3001               	movlw	1
 12101  165B  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 12102  165C  3000               	movlw	0
 12103  165D  1803               	skipnc
 12104  165E  3001               	movlw	1
 12105  165F  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 12106  1660  3000               	movlw	0
 12107  1661  1803               	skipnc
 12108  1662  3001               	movlw	1
 12109  1663  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 12110  1664                     l4449:
 12111                           
 12112                           ;EEPROM_24C1025.c: 209:         }
 12113  1664  3001               	movlw	1
 12114  1665  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12115  1666  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12116  1667  07B2               	addwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,f
 12117  1668  2D89               	goto	l4451
 12118  1669                     l4453:
 12119                           
 12120                           ;EEPROM_24C1025.c: 210:         I2C_Master_Read(0);
 12121  1669  3000               	movlw	0
 12122  166A  1283               	bcf	3,5	;RP0=0, select bank0
 12123  166B  1303               	bcf	3,6	;RP1=0, select bank0
 12124  166C  00A3               	movwf	I2C_Master_Read@a
 12125  166D  00A4               	movwf	I2C_Master_Read@a+1
 12126  166E  160A  158A  23A6  160A  118A  	fcall	_I2C_Master_Read
 12127                           
 12128                           ;EEPROM_24C1025.c: 211:         I2C_Master_Stop();
 12129  1673  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 12130                           
 12131                           ;EEPROM_24C1025.c: 212:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 12132  1678  30B9               	movlw	185
 12133  1679  1283               	bcf	3,5	;RP0=0, select bank0
 12134  167A  1303               	bcf	3,6	;RP1=0, select bank0
 12135  167B  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12136  167C                     u5607:
 12137  167C  2E7D               	nop2
 12138  167D  2E7E               	nop2
 12139  167E  0BAF               	decfsz	??_EEPROM_24C1025_Read_Buffer_USART,f
 12140  167F  2E7C               	goto	u5607
 12141  1680  2E81               	nop2
 12142  1681  0008               	return
 12143  1682                     __end_of_EEPROM_24C1025_Read_Buffer_USART:
 12144                           
 12145                           	psect	text46
 12146  18B1                     __ptext46:	
 12147 ;; *************** function _USART_putc *****************
 12148 ;; Defined at:
 12149 ;;		line 89 in file "usart.c"
 12150 ;; Parameters:    Size  Location     Type
 12151 ;;  value           1    wreg     unsigned char 
 12152 ;; Auto vars:     Size  Location     Type
 12153 ;;  value           1    0[BANK0 ] unsigned char 
 12154 ;; Return value:  Size  Location     Type
 12155 ;;                  1    wreg      void 
 12156 ;; Registers used:
 12157 ;;		wreg
 12158 ;; Tracked objects:
 12159 ;;		On entry : 0/100
 12160 ;;		On exit  : 300/100
 12161 ;;		Unchanged: 0/0
 12162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12163 ;;      Params:         0       0       0       0       0
 12164 ;;      Locals:         0       1       0       0       0
 12165 ;;      Temps:          0       0       0       0       0
 12166 ;;      Totals:         0       1       0       0       0
 12167 ;;Total ram usage:        1 bytes
 12168 ;; Hardware stack levels used:    1
 12169 ;; Hardware stack levels required when called:    1
 12170 ;; This function calls:
 12171 ;;		Nothing
 12172 ;; This function is called by:
 12173 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12174 ;;		_Decodify_Command
 12175 ;;		_Send_To_MB
 12176 ;;		_PROCULUS_Control_Register_Write
 12177 ;;		_PROCULUS_VP_Write
 12178 ;;		_USART_put_int
 12179 ;;		_USART_put_string
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           
 12183                           
 12184                           ;psect for function _USART_putc
 12185  18B1                     _USART_putc:
 12186                           
 12187                           ;incstack = 0
 12188                           ; Regs used in _USART_putc: [wreg]
 12189                           ;USART_putc@value stored from wreg
 12190  18B1  1283               	bcf	3,5	;RP0=0, select bank0
 12191  18B2  1303               	bcf	3,6	;RP1=0, select bank0
 12192  18B3  00A0               	movwf	USART_putc@value
 12193                           
 12194                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 12195  18B4  3014               	movlw	20
 12196  18B5  1683               	bsf	3,5	;RP0=1, select bank1
 12197  18B6  00DB               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 12198  18B7  3000               	movlw	0
 12199  18B8  00DC               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 12200  18B9                     l880:	
 12201                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 12202                           
 12203  18B9  1C98               	btfss	24,1	;volatile
 12204  18BA  28B9               	goto	l880
 12205                           
 12206                           ;usart.c: 93:     TXREG=value;
 12207  18BB  1283               	bcf	3,5	;RP0=0, select bank0
 12208  18BC  0820               	movf	USART_putc@value,w
 12209  18BD  0099               	movwf	25	;volatile
 12210                           
 12211                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 12212  18BE  1683               	bsf	3,5	;RP0=1, select bank1
 12213  18BF  1698               	bsf	24,5	;volatile
 12214  18C0  0008               	return
 12215  18C1                     __end_of_USART_putc:
 12216                           
 12217                           	psect	text47
 12218  18A6                     __ptext47:	
 12219 ;; *************** function _I2C_Master_RepeatedStart *****************
 12220 ;; Defined at:
 12221 ;;		line 62 in file "I2C.c"
 12222 ;; Parameters:    Size  Location     Type
 12223 ;;		None
 12224 ;; Auto vars:     Size  Location     Type
 12225 ;;		None
 12226 ;; Return value:  Size  Location     Type
 12227 ;;                  1    wreg      void 
 12228 ;; Registers used:
 12229 ;;		wreg, status,2, status,0, pclath, cstack
 12230 ;; Tracked objects:
 12231 ;;		On entry : 300/0
 12232 ;;		On exit  : 200/0
 12233 ;;		Unchanged: 0/0
 12234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12235 ;;      Params:         0       0       0       0       0
 12236 ;;      Locals:         0       0       0       0       0
 12237 ;;      Temps:          0       0       0       0       0
 12238 ;;      Totals:         0       0       0       0       0
 12239 ;;Total ram usage:        0 bytes
 12240 ;; Hardware stack levels used:    1
 12241 ;; Hardware stack levels required when called:    2
 12242 ;; This function calls:
 12243 ;;		_I2C_Master_Wait
 12244 ;; This function is called by:
 12245 ;;		_EEPROM_24C1025_Read_Buffer
 12246 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12247 ;;		_EEPROM_24C1025_Read_Str
 12248 ;; This function uses a non-reentrant model
 12249 ;;
 12250                           
 12251                           
 12252                           ;psect for function _I2C_Master_RepeatedStart
 12253  18A6                     _I2C_Master_RepeatedStart:
 12254                           
 12255                           ;I2C.c: 64:   if(I2C_Master_Wait())
 12256                           
 12257                           ;incstack = 0
 12258                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 12259  18A6  160A  158A  21DD  160A  158A  	fcall	_I2C_Master_Wait
 12260  18AB  3A00               	xorlw	0
 12261  18AC  1903               	skipnz
 12262  18AD  0008               	return
 12263                           
 12264                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 12265  18AE  1683               	bsf	3,5	;RP0=1, select bank1
 12266  18AF  1491               	bsf	17,1	;volatile
 12267  18B0  0008               	return
 12268  18B1                     __end_of_I2C_Master_RepeatedStart:
 12269                           
 12270                           	psect	text48
 12271  1BA6                     __ptext48:	
 12272 ;; *************** function _I2C_Master_Read *****************
 12273 ;; Defined at:
 12274 ;;		line 87 in file "I2C.c"
 12275 ;; Parameters:    Size  Location     Type
 12276 ;;  a               2    3[BANK0 ] unsigned short 
 12277 ;; Auto vars:     Size  Location     Type
 12278 ;;  temp            2    7[BANK0 ] unsigned short 
 12279 ;; Return value:  Size  Location     Type
 12280 ;;                  2    3[BANK0 ] unsigned short 
 12281 ;; Registers used:
 12282 ;;		wreg, status,2, status,0, pclath, cstack
 12283 ;; Tracked objects:
 12284 ;;		On entry : 300/0
 12285 ;;		On exit  : 300/0
 12286 ;;		Unchanged: 0/0
 12287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12288 ;;      Params:         0       2       0       0       0
 12289 ;;      Locals:         0       2       0       0       0
 12290 ;;      Temps:          0       2       0       0       0
 12291 ;;      Totals:         0       6       0       0       0
 12292 ;;Total ram usage:        6 bytes
 12293 ;; Hardware stack levels used:    1
 12294 ;; Hardware stack levels required when called:    2
 12295 ;; This function calls:
 12296 ;;		_I2C_Master_Wait
 12297 ;; This function is called by:
 12298 ;;		_EEPROM_24C1025_Read_Buffer
 12299 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12300 ;;		_EEPROM_24C1025_Read_Str
 12301 ;; This function uses a non-reentrant model
 12302 ;;
 12303                           
 12304                           
 12305                           ;psect for function _I2C_Master_Read
 12306  1BA6                     _I2C_Master_Read:
 12307                           
 12308                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 12309                           
 12310                           ;incstack = 0
 12311                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 12312  1BA6  160A  158A  21DD  160A  158A  	fcall	_I2C_Master_Wait
 12313  1BAB  3A00               	xorlw	0
 12314  1BAC  1683               	bsf	3,5	;RP0=1, select bank1
 12315  1BAD  1D03               	btfss	3,2
 12316  1BAE  1591               	bsf	17,3	;volatile
 12317                           
 12318                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 12319  1BAF  160A  158A  21DD  160A  158A  	fcall	_I2C_Master_Wait
 12320  1BB4  3A00               	xorlw	0
 12321  1BB5  1903               	skipnz
 12322  1BB6  2BBE               	goto	l3687
 12323  1BB7  0813               	movf	19,w	;volatile
 12324  1BB8  00A5               	movwf	??_I2C_Master_Read
 12325  1BB9  01A6               	clrf	??_I2C_Master_Read+1
 12326  1BBA  0825               	movf	??_I2C_Master_Read,w
 12327  1BBB  00A7               	movwf	I2C_Master_Read@temp
 12328  1BBC  0826               	movf	??_I2C_Master_Read+1,w
 12329  1BBD  00A8               	movwf	I2C_Master_Read@temp+1
 12330  1BBE                     l3687:
 12331                           
 12332                           ;I2C.c: 92:   if(I2C_Master_Wait())
 12333  1BBE  160A  158A  21DD  160A  158A  	fcall	_I2C_Master_Wait
 12334  1BC3  3A00               	xorlw	0
 12335  1BC4  1903               	skipnz
 12336  1BC5  2BD8               	goto	l3699
 12337                           
 12338                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 12339  1BC6  0823               	movf	I2C_Master_Read@a,w
 12340  1BC7  0424               	iorwf	I2C_Master_Read@a+1,w
 12341  1BC8  1D03               	btfss	3,2
 12342  1BC9  2BCE               	goto	u2810
 12343  1BCA  1683               	bsf	3,5	;RP0=1, select bank1
 12344  1BCB  1303               	bcf	3,6	;RP1=0, select bank1
 12345  1BCC  1691               	bsf	17,5	;volatile
 12346  1BCD  2BD1               	goto	l3691
 12347  1BCE                     u2810:
 12348  1BCE  1683               	bsf	3,5	;RP0=1, select bank1
 12349  1BCF  1303               	bcf	3,6	;RP1=0, select bank1
 12350  1BD0  1291               	bcf	17,5	;volatile
 12351  1BD1                     l3691:
 12352                           
 12353                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 12354  1BD1  1611               	bsf	17,4	;volatile
 12355                           
 12356                           ;I2C.c: 96:     return temp;
 12357  1BD2  1283               	bcf	3,5	;RP0=0, select bank0
 12358  1BD3  0828               	movf	I2C_Master_Read@temp+1,w
 12359  1BD4  00A4               	movwf	?_I2C_Master_Read+1
 12360  1BD5  0827               	movf	I2C_Master_Read@temp,w
 12361  1BD6  00A3               	movwf	?_I2C_Master_Read
 12362  1BD7  0008               	return
 12363  1BD8                     l3699:
 12364                           
 12365                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 12366  1BD8  01A3               	clrf	?_I2C_Master_Read
 12367  1BD9  01A4               	clrf	?_I2C_Master_Read+1
 12368  1BDA  0008               	return
 12369  1BDB                     __end_of_I2C_Master_Read:
 12370                           
 12371                           	psect	text49
 12372  1CF8                     __ptext49:	
 12373 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12374 ;; Defined at:
 12375 ;;		line 367 in file "EEPROM_24C1025.c"
 12376 ;; Parameters:    Size  Location     Type
 12377 ;;  chip_add        1    wreg     unsigned char 
 12378 ;;  value           2   10[BANK1 ] unsigned int 
 12379 ;; Auto vars:     Size  Location     Type
 12380 ;;  chip_add        1   12[BANK1 ] unsigned char 
 12381 ;;  mem_add         4   13[BANK1 ] unsigned long 
 12382 ;; Return value:  Size  Location     Type
 12383 ;;                  1    wreg      void 
 12384 ;; Registers used:
 12385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12386 ;; Tracked objects:
 12387 ;;		On entry : 300/300
 12388 ;;		On exit  : 0/0
 12389 ;;		Unchanged: 0/0
 12390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12391 ;;      Params:         0       0       2       0       0
 12392 ;;      Locals:         0       0       5       0       0
 12393 ;;      Temps:          0       0       0       0       0
 12394 ;;      Totals:         0       0       7       0       0
 12395 ;;Total ram usage:        7 bytes
 12396 ;; Hardware stack levels used:    1
 12397 ;; Hardware stack levels required when called:    5
 12398 ;; This function calls:
 12399 ;;		_EEPROM_24C1025_Write_Int
 12400 ;; This function is called by:
 12401 ;;		_Decodify_Command
 12402 ;; This function uses a non-reentrant model
 12403 ;;
 12404                           
 12405                           
 12406                           ;psect for function _EEPROM_24C1025_Fill_All
 12407  1CF8                     _EEPROM_24C1025_Fill_All:
 12408                           
 12409                           ;incstack = 0
 12410                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 12411                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12412  1CF8  1303               	bcf	3,6	;RP1=0, select bank1
 12413  1CF9  00AC               	movwf	EEPROM_24C1025_Fill_All@chip_add^(0+128)
 12414                           
 12415                           ;EEPROM_24C1025.c: 368:      unsigned long mem_add;;EEPROM_24C1025.c: 369:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 12416  1CFA  3000               	movlw	0
 12417  1CFB  00B0               	movwf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128)
 12418  1CFC  3000               	movlw	0
 12419  1CFD  00AF               	movwf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128)
 12420  1CFE  3000               	movlw	0
 12421  1CFF  00AE               	movwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128)
 12422  1D00  3000               	movlw	0
 12423  1D01  00AD               	movwf	EEPROM_24C1025_Fill_All@mem_add^(0+128)
 12424  1D02                     l5665:
 12425                           
 12426                           ;EEPROM_24C1025.c: 370:         {;EEPROM_24C1025.c: 371:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 12427  1D02  1683               	bsf	3,5	;RP0=1, select bank1
 12428  1D03  1303               	bcf	3,6	;RP1=0, select bank1
 12429  1D04  0830               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 12430  1D05  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
 12431  1D06  082F               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 12432  1D07  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
 12433  1D08  082E               	movf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 12434  1D09  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
 12435  1D0A  082D               	movf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 12436  1D0B  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
 12437  1D0C  082B               	movf	(EEPROM_24C1025_Fill_All@value+1)^(0+128),w
 12438  1D0D  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
 12439  1D0E  082A               	movf	EEPROM_24C1025_Fill_All@value^(0+128),w
 12440  1D0F  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
 12441  1D10  082C               	movf	EEPROM_24C1025_Fill_All@chip_add^(0+128),w
 12442  1D11  160A  158A  2293  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
 12443  1D16  0064               	clrwdt	;# 
 12444                           
 12445                           ;EEPROM_24C1025.c: 373:         }
 12446  1D17  3002               	movlw	2
 12447  1D18  1683               	bsf	3,5	;RP0=1, select bank1
 12448  1D19  1303               	bcf	3,6	;RP1=0, select bank1
 12449  1D1A  07AD               	addwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),f
 12450  1D1B  3000               	movlw	0
 12451  1D1C  1803               	skipnc
 12452  1D1D  3001               	movlw	1
 12453  1D1E  07AE               	addwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),f
 12454  1D1F  3000               	movlw	0
 12455  1D20  1803               	skipnc
 12456  1D21  3001               	movlw	1
 12457  1D22  07AF               	addwf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),f
 12458  1D23  3000               	movlw	0
 12459  1D24  1803               	skipnc
 12460  1D25  3001               	movlw	1
 12461  1D26  07B0               	addwf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),f
 12462  1D27  0830               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 12463  1D28  1D03               	btfss	3,2
 12464  1D29  0008               	return
 12465  1D2A  082F               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 12466  1D2B  1D03               	btfss	3,2
 12467  1D2C  0008               	return
 12468  1D2D  3004               	movlw	4
 12469  1D2E  022E               	subwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 12470  1D2F  1D03               	skipz
 12471  1D30  2D35               	goto	u5393
 12472  1D31  3000               	movlw	0
 12473  1D32  022D               	subwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 12474  1D33  1D03               	skipz
 12475  1D34  2D35               	goto	u5393
 12476  1D35                     u5393:
 12477  1D35  1803               	btfsc	3,0
 12478  1D36  0008               	return
 12479  1D37  2D02               	goto	l5665
 12480  1D38                     __end_of_EEPROM_24C1025_Fill_All:
 12481                           
 12482                           	psect	text50
 12483  1A93                     __ptext50:	
 12484 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 12485 ;; Defined at:
 12486 ;;		line 352 in file "EEPROM_24C1025.c"
 12487 ;; Parameters:    Size  Location     Type
 12488 ;;  chip_add        1    wreg     unsigned char 
 12489 ;;  mem_add         4    0[BANK1 ] unsigned long 
 12490 ;;  data            2    4[BANK1 ] int 
 12491 ;; Auto vars:     Size  Location     Type
 12492 ;;  chip_add        1    7[BANK1 ] unsigned char 
 12493 ;;  local           2    8[BANK1 ] unsigned char [2]
 12494 ;; Return value:  Size  Location     Type
 12495 ;;                  1    wreg      void 
 12496 ;; Registers used:
 12497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12498 ;; Tracked objects:
 12499 ;;		On entry : 100/300
 12500 ;;		On exit  : 0/0
 12501 ;;		Unchanged: 0/0
 12502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12503 ;;      Params:         0       0       6       0       0
 12504 ;;      Locals:         0       0       3       0       0
 12505 ;;      Temps:          0       0       1       0       0
 12506 ;;      Totals:         0       0      10       0       0
 12507 ;;Total ram usage:       10 bytes
 12508 ;; Hardware stack levels used:    1
 12509 ;; Hardware stack levels required when called:    4
 12510 ;; This function calls:
 12511 ;;		_EEPROM_24C1025_Write_Buffer
 12512 ;; This function is called by:
 12513 ;;		_EEPROM_24C1025_Fill_All
 12514 ;;		_Decodify_Command
 12515 ;;		_Save_Log
 12516 ;; This function uses a non-reentrant model
 12517 ;;
 12518                           
 12519                           
 12520                           ;psect for function _EEPROM_24C1025_Write_Int
 12521  1A93                     _EEPROM_24C1025_Write_Int:
 12522                           
 12523                           ;incstack = 0
 12524                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 12525                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 12526  1A93  1303               	bcf	3,6	;RP1=0, select bank1
 12527  1A94  00A7               	movwf	EEPROM_24C1025_Write_Int@chip_add^(0+128)
 12528                           
 12529                           ;EEPROM_24C1025.c: 353:      char local[2];;EEPROM_24C1025.c: 354:      local[0]=((char 
      +                          *)&data)[1];
 12530  1A95  0825               	movf	(EEPROM_24C1025_Write_Int@data^(0+128)+1),w
 12531  1A96  00A6               	movwf	??_EEPROM_24C1025_Write_Int^(0+128)
 12532  1A97  0826               	movf	??_EEPROM_24C1025_Write_Int^(0+128),w
 12533  1A98  00A8               	movwf	EEPROM_24C1025_Write_Int@local^(0+128)
 12534                           
 12535                           ;EEPROM_24C1025.c: 355:      local[1]=((char *)&data)[0];
 12536  1A99  0824               	movf	EEPROM_24C1025_Write_Int@data^(0+128),w
 12537  1A9A  00A6               	movwf	??_EEPROM_24C1025_Write_Int^(0+128)
 12538  1A9B  0826               	movf	??_EEPROM_24C1025_Write_Int^(0+128),w
 12539  1A9C  00A9               	movwf	(EEPROM_24C1025_Write_Int@local^(0+128)+1)
 12540                           
 12541                           ;EEPROM_24C1025.c: 356:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12542  1A9D  0823               	movf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128),w
 12543  1A9E  1283               	bcf	3,5	;RP0=0, select bank0
 12544  1A9F  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12545  1AA0  1683               	bsf	3,5	;RP0=1, select bank1
 12546  1AA1  0822               	movf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128),w
 12547  1AA2  1283               	bcf	3,5	;RP0=0, select bank0
 12548  1AA3  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12549  1AA4  1683               	bsf	3,5	;RP0=1, select bank1
 12550  1AA5  0821               	movf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128),w
 12551  1AA6  1283               	bcf	3,5	;RP0=0, select bank0
 12552  1AA7  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12553  1AA8  1683               	bsf	3,5	;RP0=1, select bank1
 12554  1AA9  0820               	movf	EEPROM_24C1025_Write_Int@mem_add^(0+128),w
 12555  1AAA  1283               	bcf	3,5	;RP0=0, select bank0
 12556  1AAB  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12557  1AAC  3002               	movlw	2
 12558  1AAD  1683               	bsf	3,5	;RP0=1, select bank1
 12559  1AAE  00A6               	movwf	??_EEPROM_24C1025_Write_Int^(0+128)
 12560  1AAF  0826               	movf	??_EEPROM_24C1025_Write_Int^(0+128),w
 12561  1AB0  1283               	bcf	3,5	;RP0=0, select bank0
 12562  1AB1  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12563  1AB2  30A8               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12564  1AB3  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 12565  1AB4  3000               	movlw	0
 12566  1AB5  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12567  1AB6  1683               	bsf	3,5	;RP0=1, select bank1
 12568  1AB7  0827               	movf	EEPROM_24C1025_Write_Int@chip_add^(0+128),w
 12569  1AB8  160A  118A  2214   	fcall	_EEPROM_24C1025_Write_Buffer
 12570  1ABB  0008               	return
 12571  1ABC                     __end_of_EEPROM_24C1025_Write_Int:
 12572                           
 12573                           	psect	text51
 12574  1214                     __ptext51:	
 12575 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12576 ;; Defined at:
 12577 ;;		line 15 in file "EEPROM_24C1025.c"
 12578 ;; Parameters:    Size  Location     Type
 12579 ;;  chip_add        1    wreg     unsigned char 
 12580 ;;  mem_add         4   10[BANK0 ] unsigned long 
 12581 ;;  sizedata        1   14[BANK0 ] unsigned char 
 12582 ;;  data            2   15[BANK0 ] PTR unsigned char 
 12583 ;;		 -> usart_protocol.value(52), usart_protocol(58), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 12584 ;; Auto vars:     Size  Location     Type
 12585 ;;  chip_add        1   20[BANK0 ] unsigned char 
 12586 ;;  ctrl            1   22[BANK0 ] unsigned char 
 12587 ;;  range           1   21[BANK0 ] unsigned char 
 12588 ;;  count           1   19[BANK0 ] unsigned char 
 12589 ;; Return value:  Size  Location     Type
 12590 ;;                  1    wreg      void 
 12591 ;; Registers used:
 12592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12593 ;; Tracked objects:
 12594 ;;		On entry : 0/300
 12595 ;;		On exit  : 0/0
 12596 ;;		Unchanged: 0/0
 12597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12598 ;;      Params:         0       7       0       0       0
 12599 ;;      Locals:         0       4       0       0       0
 12600 ;;      Temps:          0       2       0       0       0
 12601 ;;      Totals:         0      13       0       0       0
 12602 ;;Total ram usage:       13 bytes
 12603 ;; Hardware stack levels used:    1
 12604 ;; Hardware stack levels required when called:    3
 12605 ;; This function calls:
 12606 ;;		_I2C_Master_Start
 12607 ;;		_I2C_Master_Stop
 12608 ;;		_I2C_Master_Write
 12609 ;;		_my_delay_ms_WDT
 12610 ;; This function is called by:
 12611 ;;		_EEPROM_24C1025_Write_Byte
 12612 ;;		_EEPROM_24C1025_Write_Int
 12613 ;;		_Decodify_Command
 12614 ;; This function uses a non-reentrant model
 12615 ;;
 12616                           
 12617                           
 12618                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12619  1214                     _EEPROM_24C1025_Write_Buffer:
 12620                           
 12621                           ;incstack = 0
 12622                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 12623                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12624  1214  1283               	bcf	3,5	;RP0=0, select bank0
 12625  1215  1303               	bcf	3,6	;RP1=0, select bank0
 12626  1216  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12627                           
 12628                           ;EEPROM_24C1025.c: 21:      unsigned char ctrl;;EEPROM_24C1025.c: 22:      unsigned char
      +                           count;;EEPROM_24C1025.c: 24:      Delay_Led_Memory=20;
 12629  1217  3014               	movlw	20
 12630  1218  1683               	bsf	3,5	;RP0=1, select bank1
 12631  1219  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12632  121A  3000               	movlw	0
 12633  121B  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12634                           
 12635                           ;EEPROM_24C1025.c: 26:      if(mem_add>0x1FFFF) return;
 12636  121C  1283               	bcf	3,5	;RP0=0, select bank0
 12637  121D  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12638  121E  1D03               	btfss	3,2
 12639  121F  0008               	return
 12640  1220  3002               	movlw	2
 12641  1221  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12642  1222  1D03               	skipz
 12643  1223  2A2C               	goto	u5323
 12644  1224  3000               	movlw	0
 12645  1225  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12646  1226  1D03               	skipz
 12647  1227  2A2C               	goto	u5323
 12648  1228  3000               	movlw	0
 12649  1229  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12650  122A  1D03               	skipz
 12651  122B  2A2C               	goto	u5323
 12652  122C                     u5323:
 12653  122C  1803               	btfsc	3,0
 12654  122D  0008               	return
 12655                           
 12656                           ;EEPROM_24C1025.c: 28:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12657  122E  1283               	bcf	3,5	;RP0=0, select bank0
 12658  122F  1303               	bcf	3,6	;RP1=0, select bank0
 12659  1230  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12660  1231  1D03               	btfss	3,2
 12661  1232  2A41               	goto	l5563
 12662  1233  3001               	movlw	1
 12663  1234  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12664  1235  1D03               	skipz
 12665  1236  2A3F               	goto	u5333
 12666  1237  3000               	movlw	0
 12667  1238  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12668  1239  1D03               	skipz
 12669  123A  2A3F               	goto	u5333
 12670  123B  3000               	movlw	0
 12671  123C  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12672  123D  1D03               	skipz
 12673  123E  2A3F               	goto	u5333
 12674  123F                     u5333:
 12675  123F  1C03               	btfss	3,0
 12676  1240  2A48               	goto	l5565
 12677  1241                     l5563:
 12678  1241  3008               	movlw	8
 12679  1242  1283               	bcf	3,5	;RP0=0, select bank0
 12680  1243  1303               	bcf	3,6	;RP1=0, select bank0
 12681  1244  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12682  1245  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12683  1246  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12684  1247  2A4B               	goto	l5567
 12685  1248                     l5565:
 12686  1248  1283               	bcf	3,5	;RP0=0, select bank0
 12687  1249  1303               	bcf	3,6	;RP1=0, select bank0
 12688  124A  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12689  124B                     l5567:
 12690                           
 12691                           ;EEPROM_24C1025.c: 29:      ctrl=chip_add;
 12692  124B  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12693  124C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12694  124D  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12695  124E  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12696                           
 12697                           ;EEPROM_24C1025.c: 30:      ctrl<<=1;
 12698  124F  1003               	clrc
 12699  1250  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12700                           
 12701                           ;EEPROM_24C1025.c: 31:      ctrl |= 0xA0;
 12702  1251  30A0               	movlw	160
 12703  1252  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12704  1253  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12705  1254  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12706                           
 12707                           ;EEPROM_24C1025.c: 32:      ctrl |= range;
 12708  1255  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12709  1256  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12710  1257  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12711  1258  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12712                           
 12713                           ;EEPROM_24C1025.c: 34:      I2C_Master_Start();
 12714  1259  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 12715                           
 12716                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(ctrl);
 12717  125E  1283               	bcf	3,5	;RP0=0, select bank0
 12718  125F  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12719  1260  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12720  1261  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12721  1262  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12722  1263  00A3               	movwf	I2C_Master_Write@d
 12723  1264  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12724  1265  00A4               	movwf	I2C_Master_Write@d+1
 12725  1266  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12726                           
 12727                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[1]);
 12728  126B  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12729  126C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12730  126D  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12731  126E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12732  126F  00A3               	movwf	I2C_Master_Write@d
 12733  1270  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12734  1271  00A4               	movwf	I2C_Master_Write@d+1
 12735  1272  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12736                           
 12737                           ;EEPROM_24C1025.c: 37:      I2C_Master_Write(((char *)&mem_add)[0]);
 12738  1277  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12739  1278  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12740  1279  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12741  127A  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12742  127B  00A3               	movwf	I2C_Master_Write@d
 12743  127C  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12744  127D  00A4               	movwf	I2C_Master_Write@d+1
 12745  127E  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12746                           
 12747                           ;EEPROM_24C1025.c: 38:      for(count=0;count<(sizedata-1);count++)
 12748  1283  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 12749  1284                     l5629:
 12750  1284  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12751  1285  3EFF               	addlw	255
 12752  1286  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12753  1287  30FF               	movlw	255
 12754  1288  1803               	skipnc
 12755  1289  3000               	movlw	0
 12756  128A  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12757  128B  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12758  128C  3A80               	xorlw	128
 12759  128D  3C80               	sublw	128
 12760  128E  1D03               	skipz
 12761  128F  2A92               	goto	u5375
 12762  1290  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12763  1291  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12764  1292                     u5375:
 12765  1292  1803               	btfsc	3,0
 12766  1293  2B65               	goto	l5631
 12767  1294  0064               	clrwdt	;# 
 12768                           
 12769                           ;EEPROM_24C1025.c: 41:           if(mem_add>0x1FFFF) return;
 12770  1295  1283               	bcf	3,5	;RP0=0, select bank0
 12771  1296  1303               	bcf	3,6	;RP1=0, select bank0
 12772  1297  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12773  1298  1D03               	btfss	3,2
 12774  1299  0008               	return
 12775  129A  3002               	movlw	2
 12776  129B  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12777  129C  1D03               	skipz
 12778  129D  2AA6               	goto	u5343
 12779  129E  3000               	movlw	0
 12780  129F  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12781  12A0  1D03               	skipz
 12782  12A1  2AA6               	goto	u5343
 12783  12A2  3000               	movlw	0
 12784  12A3  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12785  12A4  1D03               	skipz
 12786  12A5  2AA6               	goto	u5343
 12787  12A6                     u5343:
 12788  12A6  1803               	btfsc	3,0
 12789  12A7  0008               	return
 12790                           
 12791                           ;EEPROM_24C1025.c: 42:           if((mem_add+1)%128==0)
 12792  12A8  1283               	bcf	3,5	;RP0=0, select bank0
 12793  12A9  1303               	bcf	3,6	;RP1=0, select bank0
 12794  12AA  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12795  12AB  3E01               	addlw	1
 12796  12AC  397F               	andlw	127
 12797  12AD  1D03               	btfss	3,2
 12798  12AE  2B3B               	goto	l5621
 12799                           
 12800                           ;EEPROM_24C1025.c: 43:             {;EEPROM_24C1025.c: 44:             I2C_Master_Write(
      +                          *data);
 12801  12AF  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12802  12B0  0084               	movwf	4
 12803  12B1  1783               	bsf	3,7
 12804  12B2  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12805  12B3  1383               	bcf	3,7
 12806  12B4  0800               	movf	0,w
 12807  12B5  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12808  12B6  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12809  12B7  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12810  12B8  00A3               	movwf	I2C_Master_Write@d
 12811  12B9  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12812  12BA  00A4               	movwf	I2C_Master_Write@d+1
 12813  12BB  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12814                           
 12815                           ;EEPROM_24C1025.c: 45:             I2C_Master_Stop();
 12816  12C0  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 12817                           
 12818                           ;EEPROM_24C1025.c: 47:             my_delay_ms_WDT(5);
 12819  12C5  3000               	movlw	0
 12820  12C6  1283               	bcf	3,5	;RP0=0, select bank0
 12821  12C7  00A3               	movwf	my_delay_ms_WDT@time+3
 12822  12C8  3000               	movlw	0
 12823  12C9  00A2               	movwf	my_delay_ms_WDT@time+2
 12824  12CA  3000               	movlw	0
 12825  12CB  00A1               	movwf	my_delay_ms_WDT@time+1
 12826  12CC  3005               	movlw	5
 12827  12CD  00A0               	movwf	my_delay_ms_WDT@time
 12828  12CE  160A  158A  2448  160A  118A  	fcall	_my_delay_ms_WDT
 12829                           
 12830                           ;EEPROM_24C1025.c: 48:             mem_add++;
 12831  12D3  3001               	movlw	1
 12832  12D4  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12833  12D5  3000               	movlw	0
 12834  12D6  1803               	skipnc
 12835  12D7  3001               	movlw	1
 12836  12D8  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12837  12D9  3000               	movlw	0
 12838  12DA  1803               	skipnc
 12839  12DB  3001               	movlw	1
 12840  12DC  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12841  12DD  3000               	movlw	0
 12842  12DE  1803               	skipnc
 12843  12DF  3001               	movlw	1
 12844  12E0  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12845                           
 12846                           ;EEPROM_24C1025.c: 49:             data++;
 12847  12E1  3001               	movlw	1
 12848  12E2  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12849  12E3  1803               	skipnc
 12850  12E4  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12851  12E5  3000               	movlw	0
 12852  12E6  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12853                           
 12854                           ;EEPROM_24C1025.c: 50:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12855  12E7  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12856  12E8  1D03               	btfss	3,2
 12857  12E9  2AF8               	goto	l5601
 12858  12EA  3001               	movlw	1
 12859  12EB  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12860  12EC  1D03               	skipz
 12861  12ED  2AF6               	goto	u5363
 12862  12EE  3000               	movlw	0
 12863  12EF  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12864  12F0  1D03               	skipz
 12865  12F1  2AF6               	goto	u5363
 12866  12F2  3000               	movlw	0
 12867  12F3  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12868  12F4  1D03               	skipz
 12869  12F5  2AF6               	goto	u5363
 12870  12F6                     u5363:
 12871  12F6  1C03               	btfss	3,0
 12872  12F7  2AFF               	goto	l5603
 12873  12F8                     l5601:
 12874  12F8  3008               	movlw	8
 12875  12F9  1283               	bcf	3,5	;RP0=0, select bank0
 12876  12FA  1303               	bcf	3,6	;RP1=0, select bank0
 12877  12FB  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12878  12FC  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12879  12FD  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12880  12FE  2B02               	goto	l5605
 12881  12FF                     l5603:
 12882  12FF  1283               	bcf	3,5	;RP0=0, select bank0
 12883  1300  1303               	bcf	3,6	;RP1=0, select bank0
 12884  1301  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12885  1302                     l5605:
 12886                           
 12887                           ;EEPROM_24C1025.c: 51:             ctrl=chip_add;
 12888  1302  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12889  1303  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12890  1304  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12891  1305  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12892                           
 12893                           ;EEPROM_24C1025.c: 52:             ctrl<<=1;
 12894  1306  1003               	clrc
 12895  1307  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12896                           
 12897                           ;EEPROM_24C1025.c: 53:             ctrl |= 0xA0;
 12898  1308  30A0               	movlw	160
 12899  1309  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12900  130A  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12901  130B  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12902                           
 12903                           ;EEPROM_24C1025.c: 54:             ctrl |= range;
 12904  130C  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12905  130D  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12906  130E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12907  130F  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12908                           
 12909                           ;EEPROM_24C1025.c: 56:             I2C_Master_Start();
 12910  1310  120A  118A  27EE  160A  118A  	fcall	_I2C_Master_Start
 12911                           
 12912                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(ctrl);
 12913  1315  1283               	bcf	3,5	;RP0=0, select bank0
 12914  1316  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12915  1317  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12916  1318  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12917  1319  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12918  131A  00A3               	movwf	I2C_Master_Write@d
 12919  131B  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12920  131C  00A4               	movwf	I2C_Master_Write@d+1
 12921  131D  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12922                           
 12923                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[1]);
 12924  1322  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12925  1323  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12926  1324  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12927  1325  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12928  1326  00A3               	movwf	I2C_Master_Write@d
 12929  1327  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12930  1328  00A4               	movwf	I2C_Master_Write@d+1
 12931  1329  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12932                           
 12933                           ;EEPROM_24C1025.c: 59:             I2C_Master_Write(((char *)&mem_add)[0]);
 12934  132E  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12935  132F  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12936  1330  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12937  1331  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12938  1332  00A3               	movwf	I2C_Master_Write@d
 12939  1333  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12940  1334  00A4               	movwf	I2C_Master_Write@d+1
 12941  1335  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12942                           
 12943                           ;EEPROM_24C1025.c: 60:             }
 12944  133A  2B60               	goto	l5627
 12945  133B                     l5621:
 12946                           
 12947                           ;EEPROM_24C1025.c: 62:             {;EEPROM_24C1025.c: 63:             I2C_Master_Write(
      +                          *data);
 12948  133B  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12949  133C  0084               	movwf	4
 12950  133D  1783               	bsf	3,7
 12951  133E  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12952  133F  1383               	bcf	3,7
 12953  1340  0800               	movf	0,w
 12954  1341  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12955  1342  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12956  1343  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12957  1344  00A3               	movwf	I2C_Master_Write@d
 12958  1345  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12959  1346  00A4               	movwf	I2C_Master_Write@d+1
 12960  1347  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 12961                           
 12962                           ;EEPROM_24C1025.c: 64:             data++;
 12963  134C  3001               	movlw	1
 12964  134D  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12965  134E  1803               	skipnc
 12966  134F  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12967  1350  3000               	movlw	0
 12968  1351  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12969                           
 12970                           ;EEPROM_24C1025.c: 65:             mem_add++;
 12971  1352  3001               	movlw	1
 12972  1353  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12973  1354  3000               	movlw	0
 12974  1355  1803               	skipnc
 12975  1356  3001               	movlw	1
 12976  1357  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12977  1358  3000               	movlw	0
 12978  1359  1803               	skipnc
 12979  135A  3001               	movlw	1
 12980  135B  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12981  135C  3000               	movlw	0
 12982  135D  1803               	skipnc
 12983  135E  3001               	movlw	1
 12984  135F  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12985  1360                     l5627:
 12986                           
 12987                           ;EEPROM_24C1025.c: 67:      }
 12988  1360  3001               	movlw	1
 12989  1361  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12990  1362  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12991  1363  07B3               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 12992  1364  2A84               	goto	l5629
 12993  1365                     l5631:
 12994                           
 12995                           ;EEPROM_24C1025.c: 68:      I2C_Master_Write(*data);
 12996  1365  1283               	bcf	3,5	;RP0=0, select bank0
 12997  1366  1303               	bcf	3,6	;RP1=0, select bank0
 12998  1367  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12999  1368  0084               	movwf	4
 13000  1369  1783               	bsf	3,7
 13001  136A  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13002  136B  1383               	bcf	3,7
 13003  136C  0800               	movf	0,w
 13004  136D  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 13005  136E  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13006  136F  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13007  1370  00A3               	movwf	I2C_Master_Write@d
 13008  1371  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13009  1372  00A4               	movwf	I2C_Master_Write@d+1
 13010  1373  160A  158A  209B  160A  118A  	fcall	_I2C_Master_Write
 13011                           
 13012                           ;EEPROM_24C1025.c: 69:      I2C_Master_Stop();
 13013  1378  160A  158A  2074  160A  118A  	fcall	_I2C_Master_Stop
 13014                           
 13015                           ;EEPROM_24C1025.c: 71:      my_delay_ms_WDT(5);
 13016  137D  3000               	movlw	0
 13017  137E  1283               	bcf	3,5	;RP0=0, select bank0
 13018  137F  00A3               	movwf	my_delay_ms_WDT@time+3
 13019  1380  3000               	movlw	0
 13020  1381  00A2               	movwf	my_delay_ms_WDT@time+2
 13021  1382  3000               	movlw	0
 13022  1383  00A1               	movwf	my_delay_ms_WDT@time+1
 13023  1384  3005               	movlw	5
 13024  1385  00A0               	movwf	my_delay_ms_WDT@time
 13025  1386  160A  158A  2448   	fcall	_my_delay_ms_WDT
 13026  1389  0008               	return
 13027  138A                     __end_of_EEPROM_24C1025_Write_Buffer:
 13028                           
 13029                           	psect	text52
 13030  1C48                     __ptext52:	
 13031 ;; *************** function _my_delay_ms_WDT *****************
 13032 ;; Defined at:
 13033 ;;		line 13 in file "my_delay.c"
 13034 ;; Parameters:    Size  Location     Type
 13035 ;;  time            4    0[BANK0 ] long 
 13036 ;; Auto vars:     Size  Location     Type
 13037 ;;  i               4    6[BANK0 ] long 
 13038 ;; Return value:  Size  Location     Type
 13039 ;;                  1    wreg      void 
 13040 ;; Registers used:
 13041 ;;		wreg, btemp+1
 13042 ;; Tracked objects:
 13043 ;;		On entry : 300/0
 13044 ;;		On exit  : 300/0
 13045 ;;		Unchanged: 0/0
 13046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13047 ;;      Params:         0       4       0       0       0
 13048 ;;      Locals:         0       4       0       0       0
 13049 ;;      Temps:          0       2       0       0       0
 13050 ;;      Totals:         0      10       0       0       0
 13051 ;;Total ram usage:       10 bytes
 13052 ;; Hardware stack levels used:    1
 13053 ;; Hardware stack levels required when called:    1
 13054 ;; This function calls:
 13055 ;;		Nothing
 13056 ;; This function is called by:
 13057 ;;		_EEPROM_24C1025_Write_Buffer
 13058 ;;		_EEPROM_24C1025_Read_Buffer
 13059 ;;		_EEPROM_24C1025_Write_Str
 13060 ;;		_main
 13061 ;; This function uses a non-reentrant model
 13062 ;;
 13063                           
 13064                           
 13065                           ;psect for function _my_delay_ms_WDT
 13066  1C48                     _my_delay_ms_WDT:
 13067                           
 13068                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 13069                           
 13070                           ;incstack = 0
 13071                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 13072  1C48  3000               	movlw	0
 13073  1C49  00A9               	movwf	my_delay_ms_WDT@i+3
 13074  1C4A  3000               	movlw	0
 13075  1C4B  00A8               	movwf	my_delay_ms_WDT@i+2
 13076  1C4C  3000               	movlw	0
 13077  1C4D  00A7               	movwf	my_delay_ms_WDT@i+1
 13078  1C4E  3000               	movlw	0
 13079  1C4F  00A6               	movwf	my_delay_ms_WDT@i
 13080  1C50                     l3583:
 13081  1C50  0829               	movf	my_delay_ms_WDT@i+3,w
 13082  1C51  3A80               	xorlw	128
 13083  1C52  00FF               	movwf	127
 13084  1C53  0823               	movf	my_delay_ms_WDT@time+3,w
 13085  1C54  3A80               	xorlw	128
 13086  1C55  027F               	subwf	127,w
 13087  1C56  1D03               	skipz
 13088  1C57  2C62               	goto	u2693
 13089  1C58  0822               	movf	my_delay_ms_WDT@time+2,w
 13090  1C59  0228               	subwf	my_delay_ms_WDT@i+2,w
 13091  1C5A  1D03               	skipz
 13092  1C5B  2C62               	goto	u2693
 13093  1C5C  0821               	movf	my_delay_ms_WDT@time+1,w
 13094  1C5D  0227               	subwf	my_delay_ms_WDT@i+1,w
 13095  1C5E  1D03               	skipz
 13096  1C5F  2C62               	goto	u2693
 13097  1C60  0820               	movf	my_delay_ms_WDT@time,w
 13098  1C61  0226               	subwf	my_delay_ms_WDT@i,w
 13099  1C62                     u2693:
 13100  1C62  1803               	btfsc	3,0
 13101  1C63  0008               	return
 13102  1C64  0064               	clrwdt	;# 
 13103                           
 13104                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 13105  1C65  3003               	movlw	3
 13106  1C66  1283               	bcf	3,5	;RP0=0, select bank0
 13107  1C67  1303               	bcf	3,6	;RP1=0, select bank0
 13108  1C68  00A5               	movwf	??_my_delay_ms_WDT+1
 13109  1C69  3097               	movlw	151
 13110  1C6A  00A4               	movwf	??_my_delay_ms_WDT
 13111  1C6B                     u5617:
 13112  1C6B  0BA4               	decfsz	??_my_delay_ms_WDT,f
 13113  1C6C  2C6B               	goto	u5617
 13114  1C6D  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 13115  1C6E  2C6B               	goto	u5617
 13116                           
 13117                           ;my_delay.c: 19:             }
 13118  1C6F  3001               	movlw	1
 13119  1C70  1283               	bcf	3,5	;RP0=0, select bank0
 13120  1C71  1303               	bcf	3,6	;RP1=0, select bank0
 13121  1C72  07A6               	addwf	my_delay_ms_WDT@i,f
 13122  1C73  3000               	movlw	0
 13123  1C74  1803               	skipnc
 13124  1C75  3001               	movlw	1
 13125  1C76  07A7               	addwf	my_delay_ms_WDT@i+1,f
 13126  1C77  3000               	movlw	0
 13127  1C78  1803               	skipnc
 13128  1C79  3001               	movlw	1
 13129  1C7A  07A8               	addwf	my_delay_ms_WDT@i+2,f
 13130  1C7B  3000               	movlw	0
 13131  1C7C  1803               	skipnc
 13132  1C7D  3001               	movlw	1
 13133  1C7E  07A9               	addwf	my_delay_ms_WDT@i+3,f
 13134  1C7F  2C50               	goto	l3583
 13135  1C80                     __end_of_my_delay_ms_WDT:
 13136                           
 13137                           	psect	text53
 13138  189B                     __ptext53:	
 13139 ;; *************** function _I2C_Master_Write *****************
 13140 ;; Defined at:
 13141 ;;		line 79 in file "I2C.c"
 13142 ;; Parameters:    Size  Location     Type
 13143 ;;  d               2    3[BANK0 ] unsigned int 
 13144 ;; Auto vars:     Size  Location     Type
 13145 ;;		None
 13146 ;; Return value:  Size  Location     Type
 13147 ;;                  1    wreg      void 
 13148 ;; Registers used:
 13149 ;;		wreg, status,2, status,0, pclath, cstack
 13150 ;; Tracked objects:
 13151 ;;		On entry : 300/0
 13152 ;;		On exit  : 300/0
 13153 ;;		Unchanged: 0/0
 13154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13155 ;;      Params:         0       2       0       0       0
 13156 ;;      Locals:         0       0       0       0       0
 13157 ;;      Temps:          0       0       0       0       0
 13158 ;;      Totals:         0       2       0       0       0
 13159 ;;Total ram usage:        2 bytes
 13160 ;; Hardware stack levels used:    1
 13161 ;; Hardware stack levels required when called:    2
 13162 ;; This function calls:
 13163 ;;		_I2C_Master_Wait
 13164 ;; This function is called by:
 13165 ;;		_EEPROM_24C1025_Write_Buffer
 13166 ;;		_EEPROM_24C1025_Read_Buffer
 13167 ;;		_EEPROM_24C1025_Read_Buffer_USART
 13168 ;;		_EEPROM_24C1025_Write_Str
 13169 ;;		_EEPROM_24C1025_Read_Str
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           
 13174                           ;psect for function _I2C_Master_Write
 13175  189B                     _I2C_Master_Write:
 13176                           
 13177                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 13178                           
 13179                           ;incstack = 0
 13180                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 13181  189B  160A  158A  21DD  160A  158A  	fcall	_I2C_Master_Wait
 13182  18A0  3A00               	xorlw	0
 13183  18A1  1903               	skipnz
 13184  18A2  0008               	return
 13185                           
 13186                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 13187  18A3  0823               	movf	I2C_Master_Write@d,w
 13188  18A4  0093               	movwf	19	;volatile
 13189  18A5  0008               	return
 13190  18A6                     __end_of_I2C_Master_Write:
 13191                           
 13192                           	psect	text54
 13193  1874                     __ptext54:	
 13194 ;; *************** function _I2C_Master_Stop *****************
 13195 ;; Defined at:
 13196 ;;		line 70 in file "I2C.c"
 13197 ;; Parameters:    Size  Location     Type
 13198 ;;		None
 13199 ;; Auto vars:     Size  Location     Type
 13200 ;;		None
 13201 ;; Return value:  Size  Location     Type
 13202 ;;                  1    wreg      void 
 13203 ;; Registers used:
 13204 ;;		wreg, status,2, status,0, pclath, cstack
 13205 ;; Tracked objects:
 13206 ;;		On entry : 300/800
 13207 ;;		On exit  : 200/0
 13208 ;;		Unchanged: 0/0
 13209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13210 ;;      Params:         0       0       0       0       0
 13211 ;;      Locals:         0       0       0       0       0
 13212 ;;      Temps:          0       0       0       0       0
 13213 ;;      Totals:         0       0       0       0       0
 13214 ;;Total ram usage:        0 bytes
 13215 ;; Hardware stack levels used:    1
 13216 ;; Hardware stack levels required when called:    2
 13217 ;; This function calls:
 13218 ;;		_I2C_Master_Wait
 13219 ;; This function is called by:
 13220 ;;		_EEPROM_24C1025_Write_Buffer
 13221 ;;		_EEPROM_24C1025_Read_Buffer
 13222 ;;		_EEPROM_24C1025_Read_Buffer_USART
 13223 ;;		_EEPROM_24C1025_Write_Str
 13224 ;;		_EEPROM_24C1025_Read_Str
 13225 ;; This function uses a non-reentrant model
 13226 ;;
 13227                           
 13228                           
 13229                           ;psect for function _I2C_Master_Stop
 13230  1874                     _I2C_Master_Stop:
 13231                           
 13232                           ;I2C.c: 72:   if(I2C_Master_Wait())
 13233                           
 13234                           ;incstack = 0
 13235                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 13236  1874  160A  158A  21DD   	fcall	_I2C_Master_Wait
 13237  1877  3A00               	xorlw	0
 13238                           
 13239                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 13240  1878  1683               	bsf	3,5	;RP0=1, select bank1
 13241  1879  1D03               	btfss	3,2
 13242  187A  1511               	bsf	17,2	;volatile
 13243                           
 13244                           ;I2C.c: 76:   INTCONbits.GIE=1;
 13245                           
 13246                           ;I2C.c: 75:     }
 13247  187B  178B               	bsf	11,7	;volatile
 13248  187C  0008               	return
 13249  187D                     __end_of_I2C_Master_Stop:
 13250                           
 13251                           	psect	text55
 13252  07EE                     __ptext55:	
 13253 ;; *************** function _I2C_Master_Start *****************
 13254 ;; Defined at:
 13255 ;;		line 52 in file "I2C.c"
 13256 ;; Parameters:    Size  Location     Type
 13257 ;;		None
 13258 ;; Auto vars:     Size  Location     Type
 13259 ;;		None
 13260 ;; Return value:  Size  Location     Type
 13261 ;;                  1    wreg      void 
 13262 ;; Registers used:
 13263 ;;		wreg, status,2, status,0, pclath, cstack
 13264 ;; Tracked objects:
 13265 ;;		On entry : 300/0
 13266 ;;		On exit  : 200/0
 13267 ;;		Unchanged: 0/0
 13268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13269 ;;      Params:         0       0       0       0       0
 13270 ;;      Locals:         0       0       0       0       0
 13271 ;;      Temps:          0       0       0       0       0
 13272 ;;      Totals:         0       0       0       0       0
 13273 ;;Total ram usage:        0 bytes
 13274 ;; Hardware stack levels used:    1
 13275 ;; Hardware stack levels required when called:    2
 13276 ;; This function calls:
 13277 ;;		_I2C_Master_Wait
 13278 ;; This function is called by:
 13279 ;;		_EEPROM_24C1025_Write_Buffer
 13280 ;;		_EEPROM_24C1025_Read_Buffer
 13281 ;;		_EEPROM_24C1025_Read_Buffer_USART
 13282 ;;		_EEPROM_24C1025_Write_Str
 13283 ;;		_EEPROM_24C1025_Read_Str
 13284 ;; This function uses a non-reentrant model
 13285 ;;
 13286                           
 13287                           
 13288                           ;psect for function _I2C_Master_Start
 13289  07EE                     _I2C_Master_Start:
 13290                           
 13291                           ;I2C.c: 54:   INTCONbits.GIE=0;
 13292                           
 13293                           ;incstack = 0
 13294                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 13295  07EE  138B               	bcf	11,7	;volatile
 13296                           
 13297                           ;I2C.c: 55:   Delay_Led_Memory=20;
 13298  07EF  3014               	movlw	20
 13299  07F0  1683               	bsf	3,5	;RP0=1, select bank1
 13300  07F1  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 13301  07F2  3000               	movlw	0
 13302  07F3  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 13303                           
 13304                           ;I2C.c: 56:   if(I2C_Master_Wait())
 13305  07F4  160A  158A  21DD  120A  118A  	fcall	_I2C_Master_Wait
 13306  07F9  3A00               	xorlw	0
 13307  07FA  1903               	skipnz
 13308  07FB  0008               	return
 13309                           
 13310                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 13311  07FC  1683               	bsf	3,5	;RP0=1, select bank1
 13312  07FD  1411               	bsf	17,0	;volatile
 13313  07FE  0008               	return
 13314  07FF                     __end_of_I2C_Master_Start:
 13315                           
 13316                           	psect	text56
 13317  19DD                     __ptext56:	
 13318 ;; *************** function _I2C_Master_Wait *****************
 13319 ;; Defined at:
 13320 ;;		line 37 in file "I2C.c"
 13321 ;; Parameters:    Size  Location     Type
 13322 ;;		None
 13323 ;; Auto vars:     Size  Location     Type
 13324 ;;  tempo           1    2[BANK0 ] unsigned char 
 13325 ;; Return value:  Size  Location     Type
 13326 ;;                  1    wreg      unsigned char 
 13327 ;; Registers used:
 13328 ;;		wreg, status,2, status,0
 13329 ;; Tracked objects:
 13330 ;;		On entry : 200/0
 13331 ;;		On exit  : 300/0
 13332 ;;		Unchanged: 0/0
 13333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13334 ;;      Params:         0       0       0       0       0
 13335 ;;      Locals:         0       1       0       0       0
 13336 ;;      Temps:          0       2       0       0       0
 13337 ;;      Totals:         0       3       0       0       0
 13338 ;;Total ram usage:        3 bytes
 13339 ;; Hardware stack levels used:    1
 13340 ;; Hardware stack levels required when called:    1
 13341 ;; This function calls:
 13342 ;;		Nothing
 13343 ;; This function is called by:
 13344 ;;		_I2C_Master_Start
 13345 ;;		_I2C_Master_RepeatedStart
 13346 ;;		_I2C_Master_Stop
 13347 ;;		_I2C_Master_Write
 13348 ;;		_I2C_Master_Read
 13349 ;; This function uses a non-reentrant model
 13350 ;;
 13351                           
 13352                           
 13353                           ;psect for function _I2C_Master_Wait
 13354  19DD                     _I2C_Master_Wait:
 13355                           
 13356                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 13357                           
 13358                           ;incstack = 0
 13359                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 13360  19DD  30C8               	movlw	200
 13361  19DE  1283               	bcf	3,5	;RP0=0, select bank0
 13362  19DF  00A0               	movwf	??_I2C_Master_Wait
 13363  19E0  0820               	movf	??_I2C_Master_Wait,w
 13364  19E1  00A2               	movwf	I2C_Master_Wait@tempo
 13365                           
 13366                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13367  19E2  29EF               	goto	l3555
 13368  19E3                     l3551:
 13369                           
 13370                           ;I2C.c: 44:          tempo--;
 13371  19E3  3001               	movlw	1
 13372  19E4  02A2               	subwf	I2C_Master_Wait@tempo,f
 13373                           
 13374                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 13375  19E5  3003               	movlw	3
 13376  19E6  1283               	bcf	3,5	;RP0=0, select bank0
 13377  19E7  1303               	bcf	3,6	;RP1=0, select bank0
 13378  19E8  00A1               	movwf	??_I2C_Master_Wait+1
 13379  19E9  3097               	movlw	151
 13380  19EA  00A0               	movwf	??_I2C_Master_Wait
 13381  19EB                     u5627:
 13382  19EB  0BA0               	decfsz	??_I2C_Master_Wait,f
 13383  19EC  29EB               	goto	u5627
 13384  19ED  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 13385  19EE  29EB               	goto	u5627
 13386  19EF                     l3555:
 13387                           
 13388                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13389  19EF  1683               	bsf	3,5	;RP0=1, select bank1
 13390  19F0  1303               	bcf	3,6	;RP1=0, select bank1
 13391  19F1  1914               	btfsc	20,2	;volatile
 13392  19F2  29F7               	goto	l3549
 13393  19F3  0811               	movf	17,w	;volatile
 13394  19F4  391F               	andlw	31
 13395  19F5  1903               	btfsc	3,2
 13396  19F6  29FB               	goto	l3559
 13397  19F7                     l3549:
 13398                           
 13399                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 13400  19F7  1283               	bcf	3,5	;RP0=0, select bank0
 13401  19F8  0822               	movf	I2C_Master_Wait@tempo,w
 13402  19F9  1D03               	btfss	3,2
 13403  19FA  29E3               	goto	l3551
 13404  19FB                     l3559:
 13405                           
 13406                           ;I2C.c: 49:   return tempo ;
 13407  19FB  1283               	bcf	3,5	;RP0=0, select bank0
 13408  19FC  0822               	movf	I2C_Master_Wait@tempo,w
 13409  19FD  0008               	return
 13410  19FE                     __end_of_I2C_Master_Wait:
 13411                           
 13412                           	psect	text57
 13413  1890                     __ptext57:	
 13414 ;; *************** function _ADC_init *****************
 13415 ;; Defined at:
 13416 ;;		line 10 in file "adc.c"
 13417 ;; Parameters:    Size  Location     Type
 13418 ;;		None
 13419 ;; Auto vars:     Size  Location     Type
 13420 ;;		None
 13421 ;; Return value:  Size  Location     Type
 13422 ;;                  1    wreg      void 
 13423 ;; Registers used:
 13424 ;;		wreg, status,2, status,0
 13425 ;; Tracked objects:
 13426 ;;		On entry : 0/100
 13427 ;;		On exit  : 300/0
 13428 ;;		Unchanged: 0/0
 13429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13430 ;;      Params:         0       0       0       0       0
 13431 ;;      Locals:         0       0       0       0       0
 13432 ;;      Temps:          0       0       0       0       0
 13433 ;;      Totals:         0       0       0       0       0
 13434 ;;Total ram usage:        0 bytes
 13435 ;; Hardware stack levels used:    1
 13436 ;; Hardware stack levels required when called:    1
 13437 ;; This function calls:
 13438 ;;		Nothing
 13439 ;; This function is called by:
 13440 ;;		_main
 13441 ;; This function uses a non-reentrant model
 13442 ;;
 13443                           
 13444                           
 13445                           ;psect for function _ADC_init
 13446  1890                     _ADC_init:
 13447                           
 13448                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13449                           
 13450                           ;incstack = 0
 13451                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13452  1890  30C0               	movlw	192
 13453  1891  1283               	bcf	3,5	;RP0=0, select bank0
 13454  1892  1303               	bcf	3,6	;RP1=0, select bank0
 13455  1893  049F               	iorwf	31,f	;volatile
 13456                           
 13457                           ;adc.c: 12:      ADCON1=0b10000000;
 13458  1894  3080               	movlw	128
 13459  1895  1683               	bsf	3,5	;RP0=1, select bank1
 13460  1896  009F               	movwf	31	;volatile
 13461                           
 13462                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13463  1897  179F               	bsf	31,7	;volatile
 13464                           
 13465                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13466  1898  1283               	bcf	3,5	;RP0=0, select bank0
 13467  1899  141F               	bsf	31,0	;volatile
 13468  189A  0008               	return
 13469  189B                     __end_of_ADC_init:
 13470                           
 13471                           	psect	text58
 13472  102D                     __ptext58:	
 13473 ;; *************** function _isr *****************
 13474 ;; Defined at:
 13475 ;;		line 29 in file "isr.c"
 13476 ;; Parameters:    Size  Location     Type
 13477 ;;		None
 13478 ;; Auto vars:     Size  Location     Type
 13479 ;;  tempo           2    6[COMMON] unsigned int 
 13480 ;; Return value:  Size  Location     Type
 13481 ;;                  1    wreg      void 
 13482 ;; Registers used:
 13483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13484 ;; Tracked objects:
 13485 ;;		On entry : 0/0
 13486 ;;		On exit  : 300/0
 13487 ;;		Unchanged: 0/0
 13488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13489 ;;      Params:         0       0       0       0       0
 13490 ;;      Locals:         2       0       0       0       0
 13491 ;;      Temps:          6       0       0       0       0
 13492 ;;      Totals:         8       0       0       0       0
 13493 ;;Total ram usage:        8 bytes
 13494 ;; Hardware stack levels used:    1
 13495 ;; This function calls:
 13496 ;;		Nothing
 13497 ;; This function is called by:
 13498 ;;		Interrupt level 1
 13499 ;; This function uses a non-reentrant model
 13500 ;;
 13501                           
 13502                           
 13503                           ;psect for function _isr
 13504  102D                     _isr:
 13505                           
 13506                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13507  102D  188B               	btfsc	11,1	;volatile
 13508                           
 13509                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13510  102E  108B               	bcf	11,1	;volatile
 13511                           
 13512                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13513                           
 13514                           ;isr.c: 37:       }
 13515  102F  1C0C               	btfss	12,0	;volatile
 13516  1030  28A8               	goto	i1l5497
 13517                           
 13518                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13519  1031  30B1               	movlw	177
 13520  1032  008F               	movwf	15	;volatile
 13521                           
 13522                           ;isr.c: 42:                 TMR1L=0xF3;
 13523  1033  30F3               	movlw	243
 13524  1034  008E               	movwf	14	;volatile
 13525                           
 13526                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13527  1035  100C               	bcf	12,0	;volatile
 13528                           
 13529                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13530  1036  1683               	bsf	3,5	;RP0=1, select bank1
 13531  1037  1FE4               	btfss	_generic_status^(0+128),7
 13532  1038  283B               	goto	i1l5453
 13533                           
 13534                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13535  1039  13E4               	bcf	_generic_status^(0+128),7
 13536  103A  0064               	clrwdt	;# 
 13537  103B                     i1l5453:
 13538                           
 13539                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13540  103B  300A               	movlw	10
 13541  103C  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 13542  103D  1803               	skipnc
 13543  103E  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 13544  103F  3000               	movlw	0
 13545  1040  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 13546                           
 13547                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13548  1041  3003               	movlw	3
 13549  1042  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13550  1043  30E8               	movlw	232
 13551  1044  1903               	skipnz
 13552  1045  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13553  1046  1C03               	skipc
 13554  1047  284A               	goto	i1l5457
 13555                           
 13556                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13557  1048  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 13558  1049  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 13559  104A                     i1l5457:
 13560                           
 13561                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13562  104A  3001               	movlw	1
 13563  104B  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13564  104C  30F4               	movlw	244
 13565  104D  1903               	skipnz
 13566  104E  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13567  104F  1803               	skipnc
 13568  1050  2855               	goto	i1l644
 13569                           
 13570                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13571  1051  1283               	bcf	3,5	;RP0=0, select bank0
 13572  1052  1303               	bcf	3,6	;RP1=0, select bank0
 13573  1053  1786               	bsf	6,7	;volatile
 13574  1054  2858               	goto	i1l5461
 13575  1055                     i1l644:	
 13576                           ;isr.c: 56:                 else
 13577                           
 13578                           
 13579                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13580  1055  1283               	bcf	3,5	;RP0=0, select bank0
 13581  1056  1303               	bcf	3,6	;RP1=0, select bank0
 13582  1057  1386               	bcf	6,7	;volatile
 13583  1058                     i1l5461:
 13584                           
 13585                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13586  1058  1683               	bsf	3,5	;RP0=1, select bank1
 13587  1059  085B               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 13588  105A  045C               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 13589  105B  1903               	btfsc	3,2
 13590  105C  2866               	goto	i1l646
 13591                           
 13592                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13593  105D  300A               	movlw	10
 13594  105E  02DB               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 13595  105F  3000               	movlw	0
 13596  1060  1C03               	skipc
 13597  1061  03DC               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13598  1062  02DC               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13599                           
 13600                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13601  1063  1283               	bcf	3,5	;RP0=0, select bank0
 13602  1064  1706               	bsf	6,6	;volatile
 13603                           
 13604                           ;isr.c: 63:                    }
 13605  1065  2868               	goto	i1l5467
 13606  1066                     i1l646:	
 13607                           ;isr.c: 64:                 else{
 13608                           
 13609                           
 13610                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13611  1066  1283               	bcf	3,5	;RP0=0, select bank0
 13612  1067  1306               	bcf	6,6	;volatile
 13613  1068                     i1l5467:
 13614                           
 13615                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13616  1068  1683               	bsf	3,5	;RP0=1, select bank1
 13617  1069  085D               	movf	_Delay_Led_Memory^(0+128),w	;volatile
 13618  106A  045E               	iorwf	(_Delay_Led_Memory+1)^(0+128),w	;volatile
 13619  106B  1903               	btfsc	3,2
 13620  106C  2876               	goto	i1l648
 13621                           
 13622                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13623  106D  300A               	movlw	10
 13624  106E  02DD               	subwf	_Delay_Led_Memory^(0+128),f	;volatile
 13625  106F  3000               	movlw	0
 13626  1070  1C03               	skipc
 13627  1071  03DE               	decf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13628  1072  02DE               	subwf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13629                           
 13630                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13631  1073  1283               	bcf	3,5	;RP0=0, select bank0
 13632  1074  1686               	bsf	6,5	;volatile
 13633                           
 13634                           ;isr.c: 71:                    }
 13635  1075  2878               	goto	i1l5473
 13636  1076                     i1l648:	
 13637                           ;isr.c: 72:                 else{
 13638                           
 13639                           
 13640                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13641  1076  1283               	bcf	3,5	;RP0=0, select bank0
 13642  1077  1286               	bcf	6,5	;volatile
 13643  1078                     i1l5473:
 13644                           
 13645                           ;isr.c: 77:                 tempodecorrido+=10;
 13646  1078  300A               	movlw	10
 13647  1079  1683               	bsf	3,5	;RP0=1, select bank1
 13648  107A  07D3               	addwf	_tempodecorrido^(0+128),f	;volatile
 13649  107B  1803               	skipnc
 13650  107C  0AD4               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13651  107D  3000               	movlw	0
 13652  107E  07D4               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13653                           
 13654                           ;isr.c: 78:                 milisegundo+=10;
 13655  107F  300A               	movlw	10
 13656  1080  07D9               	addwf	_milisegundo^(0+128),f	;volatile
 13657  1081  1803               	skipnc
 13658  1082  0ADA               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13659  1083  3000               	movlw	0
 13660  1084  07DA               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13661                           
 13662                           ;isr.c: 79:                 if(milisegundo==1000){
 13663  1085  30E8               	movlw	232
 13664  1086  0659               	xorwf	_milisegundo^(0+128),w	;volatile
 13665  1087  3003               	movlw	3
 13666  1088  1903               	skipnz
 13667  1089  065A               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13668  108A  1D03               	btfss	3,2
 13669  108B  28A8               	goto	i1l5497
 13670                           
 13671                           ;isr.c: 80:                    milisegundo=0;
 13672  108C  01D9               	clrf	_milisegundo^(0+128)	;volatile
 13673  108D  01DA               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13674                           
 13675                           ;isr.c: 81:                    segundo++;
 13676  108E  3001               	movlw	1
 13677  108F  00F0               	movwf	??_isr
 13678  1090  0870               	movf	??_isr,w
 13679  1091  07FD               	addwf	_segundo,f	;volatile
 13680                           
 13681                           ;isr.c: 88:                    if(segundo==60){
 13682  1092  303C               	movlw	60
 13683  1093  067D               	xorwf	_segundo,w	;volatile
 13684  1094  1D03               	btfss	3,2
 13685  1095  28A8               	goto	i1l5497
 13686                           
 13687                           ;isr.c: 89:                       segundo=0;
 13688  1096  01FD               	clrf	_segundo	;volatile
 13689                           
 13690                           ;isr.c: 90:                       minuto++;
 13691  1097  3001               	movlw	1
 13692  1098  00F0               	movwf	??_isr
 13693  1099  0870               	movf	??_isr,w
 13694  109A  07FA               	addwf	_minuto,f	;volatile
 13695                           
 13696                           ;isr.c: 91:                       if(minuto==60){
 13697  109B  303C               	movlw	60
 13698  109C  067A               	xorwf	_minuto,w	;volatile
 13699  109D  1D03               	btfss	3,2
 13700  109E  28A8               	goto	i1l5497
 13701                           
 13702                           ;isr.c: 92:                          minuto=0;
 13703  109F  01FA               	clrf	_minuto	;volatile
 13704                           
 13705                           ;isr.c: 93:                          hora++;
 13706  10A0  3001               	movlw	1
 13707  10A1  00F0               	movwf	??_isr
 13708  10A2  0870               	movf	??_isr,w
 13709  10A3  07FC               	addwf	_hora,f	;volatile
 13710                           
 13711                           ;isr.c: 94:                          if(hora==24){
 13712  10A4  3018               	movlw	24
 13713  10A5  067C               	xorwf	_hora,w	;volatile
 13714  10A6  1903               	btfsc	3,2
 13715                           
 13716                           ;isr.c: 95:                             hora=0;
 13717  10A7  01FC               	clrf	_hora	;volatile
 13718  10A8                     i1l5497:	
 13719                           ;isr.c: 99:                 }
 13720                           
 13721                           
 13722                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13723  10A8  1283               	bcf	3,5	;RP0=0, select bank0
 13724  10A9  1E8C               	btfss	12,5	;volatile
 13725  10AA  290F               	goto	i1l662
 13726                           
 13727                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13728  10AB  1683               	bsf	3,5	;RP0=1, select bank1
 13729  10AC  1464               	bsf	_generic_status^(0+128),0
 13730                           
 13731                           ;isr.c: 109:         tempo=30;
 13732  10AD  301E               	movlw	30
 13733  10AE  00F6               	movwf	isr@tempo
 13734  10AF  3000               	movlw	0
 13735  10B0  00F7               	movwf	isr@tempo+1
 13736                           
 13737                           ;isr.c: 110:         count=0;
 13738  10B1  01D5               	clrf	_count^(0+128)	;volatile
 13739  10B2  01D6               	clrf	(_count+1)^(0+128)	;volatile
 13740                           
 13741                           ;isr.c: 111:         pointer=usart_buffer;
 13742  10B3  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13743  10B4  00F0               	movwf	??_isr
 13744  10B5  0870               	movf	??_isr,w
 13745  10B6  00DF               	movwf	_pointer^(0+128)
 13746  10B7                     i1l5519:	
 13747                           ;isr.c: 112:         while(tempo)
 13748                           
 13749                           
 13750                           ;isr.c: 112:         while(tempo)
 13751  10B7  0876               	movf	isr@tempo,w
 13752  10B8  0477               	iorwf	isr@tempo+1,w
 13753  10B9  1903               	btfsc	3,2
 13754  10BA  28EA               	goto	i1l5521
 13755                           
 13756                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13757  10BB  1283               	bcf	3,5	;RP0=0, select bank0
 13758  10BC  1303               	bcf	3,6	;RP1=0, select bank0
 13759  10BD  1E8C               	btfss	12,5	;volatile
 13760  10BE  28E3               	goto	i1l5517
 13761                           
 13762                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13763  10BF  081A               	movf	26,w	;volatile
 13764  10C0  00F0               	movwf	??_isr
 13765  10C1  1683               	bsf	3,5	;RP0=1, select bank1
 13766  10C2  085F               	movf	_pointer^(0+128),w
 13767  10C3  0084               	movwf	4
 13768  10C4  0870               	movf	??_isr,w
 13769  10C5  1783               	bsf	3,7	;select IRP bank2
 13770  10C6  0080               	movwf	0
 13771                           
 13772                           ;isr.c: 118:                 if(count<32+20 -1)
 13773  10C7  0856               	movf	(_count+1)^(0+128),w	;volatile
 13774  10C8  3A80               	xorlw	128
 13775  10C9  00FF               	movwf	127
 13776  10CA  3080               	movlw	128
 13777  10CB  027F               	subwf	127,w
 13778  10CC  1D03               	skipz
 13779  10CD  28D0               	goto	u529_25
 13780  10CE  3033               	movlw	51
 13781  10CF  0255               	subwf	_count^(0+128),w	;volatile
 13782  10D0                     u529_25:
 13783  10D0  1803               	skipnc
 13784  10D1  28DE               	goto	i1l5515
 13785                           
 13786                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13787  10D2  3001               	movlw	1
 13788  10D3  1683               	bsf	3,5	;RP0=1, select bank1
 13789  10D4  1303               	bcf	3,6	;RP1=0, select bank1
 13790  10D5  07D5               	addwf	_count^(0+128),f	;volatile
 13791  10D6  1803               	skipnc
 13792  10D7  0AD6               	incf	(_count+1)^(0+128),f	;volatile
 13793  10D8  3000               	movlw	0
 13794  10D9  07D6               	addwf	(_count+1)^(0+128),f	;volatile
 13795                           
 13796                           ;isr.c: 121:                    pointer++;
 13797  10DA  3001               	movlw	1
 13798  10DB  00F0               	movwf	??_isr
 13799  10DC  0870               	movf	??_isr,w
 13800  10DD  07DF               	addwf	_pointer^(0+128),f
 13801  10DE                     i1l5515:
 13802                           
 13803                           ;isr.c: 123:                 tempo=30;
 13804  10DE  301E               	movlw	30
 13805  10DF  00F6               	movwf	isr@tempo
 13806  10E0  3000               	movlw	0
 13807  10E1  00F7               	movwf	isr@tempo+1
 13808                           
 13809                           ;isr.c: 124:             }
 13810  10E2  28B7               	goto	i1l5519
 13811  10E3                     i1l5517:
 13812                           
 13813                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13814  10E3  3001               	movlw	1
 13815  10E4  02F6               	subwf	isr@tempo,f
 13816  10E5  3000               	movlw	0
 13817  10E6  1C03               	skipc
 13818  10E7  03F7               	decf	isr@tempo+1,f
 13819  10E8  02F7               	subwf	isr@tempo+1,f
 13820  10E9  28B7               	goto	i1l5519
 13821  10EA                     i1l5521:
 13822                           
 13823                           ;isr.c: 131:         (*pointer)=0;
 13824  10EA  1683               	bsf	3,5	;RP0=1, select bank1
 13825  10EB  1303               	bcf	3,6	;RP1=0, select bank1
 13826  10EC  085F               	movf	_pointer^(0+128),w
 13827  10ED  0084               	movwf	4
 13828  10EE  1783               	bsf	3,7	;select IRP bank2
 13829  10EF  0180               	clrf	0
 13830                           
 13831                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13832  10F0  1283               	bcf	3,5	;RP0=0, select bank0
 13833  10F1  1C98               	btfss	24,1	;volatile
 13834  10F2  290F               	goto	i1l662
 13835                           
 13836                           ;isr.c: 134:            CREN=0;
 13837  10F3  1218               	bcf	24,4	;volatile
 13838                           
 13839                           ;isr.c: 135:            CREN=1;
 13840  10F4  1618               	bsf	24,4	;volatile
 13841                           
 13842                           ;isr.c: 136:            tempo=RCREG;
 13843  10F5  081A               	movf	26,w	;volatile
 13844  10F6  00F0               	movwf	??_isr
 13845  10F7  01F1               	clrf	??_isr+1
 13846  10F8  0870               	movf	??_isr,w
 13847  10F9  00F6               	movwf	isr@tempo
 13848  10FA  0871               	movf	??_isr+1,w
 13849  10FB  00F7               	movwf	isr@tempo+1
 13850                           
 13851                           ;isr.c: 137:            tempo=RCREG;
 13852  10FC  081A               	movf	26,w	;volatile
 13853  10FD  00F0               	movwf	??_isr
 13854  10FE  01F1               	clrf	??_isr+1
 13855  10FF  0870               	movf	??_isr,w
 13856  1100  00F6               	movwf	isr@tempo
 13857  1101  0871               	movf	??_isr+1,w
 13858  1102  00F7               	movwf	isr@tempo+1
 13859                           
 13860                           ;isr.c: 138:            tempo=RCREG;
 13861  1103  081A               	movf	26,w	;volatile
 13862  1104  00F0               	movwf	??_isr
 13863  1105  01F1               	clrf	??_isr+1
 13864  1106  0870               	movf	??_isr,w
 13865  1107  00F6               	movwf	isr@tempo
 13866  1108  0871               	movf	??_isr+1,w
 13867  1109  00F7               	movwf	isr@tempo+1
 13868                           
 13869                           ;isr.c: 139:            usart_buffer[0]=0;
 13870  110A  1703               	bsf	3,6	;RP1=1, select bank2
 13871  110B  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13872                           
 13873                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13874  110C  1683               	bsf	3,5	;RP0=1, select bank1
 13875  110D  1303               	bcf	3,6	;RP1=0, select bank1
 13876  110E  14E4               	bsf	_generic_status^(0+128),1
 13877  110F                     i1l662:
 13878  110F  0875               	movf	??_isr+5,w
 13879  1110  1283               	bcf	3,5	;RP0=0, select bank0
 13880  1111  00FF               	movwf	127
 13881  1112  0874               	movf	??_isr+4,w
 13882  1113  008A               	movwf	10
 13883  1114  0873               	movf	??_isr+3,w
 13884  1115  0084               	movwf	4
 13885  1116  0E72               	swapf	??_isr+2,w
 13886  1117  0083               	movwf	3
 13887  1118  0EFE               	swapf	126,f
 13888  1119  0E7E               	swapf	126,w
 13889  111A  0009               	retfie
 13890  111B                     __end_of_isr:
 13891  007E                     btemp	set	126	;btemp
 13892  007E                     wtemp0	set	126
 13893                           
 13894                           	psect	intentry
 13895  0004                     __pintentry:	
 13896                           ;incstack = 0
 13897                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13898                           
 13899  0004                     interrupt_function:
 13900  007E                     saved_w	set	btemp
 13901  0004  00FE               	movwf	btemp
 13902  0005  0E03               	swapf	3,w
 13903  0006  00F2               	movwf	??_isr+2
 13904  0007  0804               	movf	4,w
 13905  0008  00F3               	movwf	??_isr+3
 13906  0009  080A               	movf	10,w
 13907  000A  00F4               	movwf	??_isr+4
 13908  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13909  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13910  000D  087F               	movf	btemp+1,w
 13911  000E  00F5               	movwf	??_isr+5
 13912  000F  160A  118A  282D   	ljmp	_isr
 13913                           
 13914                           	psect	config
 13915                           
 13916                           ;Config register CONFIG1 @ 0x2007
 13917                           ;	Oscillator Selection bits
 13918                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 13919                           ;	Watchdog Timer Enable bit
 13920                           ;	WDTE = ON, WDT enabled
 13921                           ;	Power-up Timer Enable bit
 13922                           ;	PWRTE = ON, PWRT enabled
 13923                           ;	RE3/MCLR pin function select bit
 13924                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 13925                           ;	Code Protection bit
 13926                           ;	CP = ON, Program memory code protection is enabled
 13927                           ;	Data Code Protection bit
 13928                           ;	CPD = OFF, Data memory code protection is disabled
 13929                           ;	Brown Out Reset Selection bits
 13930                           ;	BOREN = ON, BOR enabled
 13931                           ;	Internal External Switchover bit
 13932                           ;	IESO = ON, Internal/External Switchover mode is enabled
 13933                           ;	Fail-Safe Clock Monitor Enabled bit
 13934                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13935                           ;	Low Voltage Programming Enable bit
 13936                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 13937                           ;	In-Circuit Debugger Mode bit
 13938                           ;	DEBUG = 0x1, unprogrammed default
 13939  2007                     	org	8199
 13940  2007  2F8C               	dw	12172
 13941                           
 13942                           ;Config register CONFIG2 @ 0x2008
 13943                           ;	Brown-out Reset Selection bit
 13944                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 13945                           ;	Flash Program Memory Self Write Enable bits
 13946                           ;	WRT = OFF, Write protection off
 13947  2008                     	org	8200
 13948  2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    64
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     80      80
    BANK1            80     41      69
    BANK3            96      0      91
    BANK2            96      0      52

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK1[2]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 58
		 -> usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 58
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK1[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK1[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 52
		 -> NULL(NULL[0]), usart_buffer(BANK2[52]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Str@buffer	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_24C1025_Read_Buffer_USART@data	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), EEPROM_24C1025_Write_Int@local(BANK1[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _MediaPlacaVaccum->___flmul
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    _I2C_Master_Init->___lldiv
    _Decodify_Command->___fltol
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->___fltol
    ___fltol->___flmul
    ___flmul->___fladd
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Buffer_USART->_I2C_Master_Read
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _Save_Log->_EEPROM_24C1025_Write_Int
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  119692
                                             36 BANK1      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     167
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    16    16      0   20583
                                             69 BANK0      1     1      0
                                              0 BANK1     11    11      0
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4961
                                             43 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4308
                                             23 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1016
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2107
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    1705
                                             14 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     337
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     765
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    19    19      0   96808
                                             17 BANK1     19    19      0
            _EEPROM_24C1025_Fill_All
   _EEPROM_24C1025_Read_Buffer_USART
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      44
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     416
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     416
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   13137
                                             10 BANK1      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             69 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    4616
                                             43 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3099
                                             12 BANK1      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     156
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2670
                                              4 BANK1      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    1777
                                              8 BANK1      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    2219
                                              8 BANK1      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1584
                                              4 BANK1      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     812
                                              0 BANK1      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     812
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     991
                                              5 BANK0      8     6      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     624
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     189
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     161
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    6059
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    7267
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    6763
                                              9 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    7761
                                             23 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             7     3      4    7738
                                             23 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     7      6    7570
                                             10 BANK0     13     7      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Buffer_USART                    13     7      6    6904
                                              9 BANK0     13     7      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2    1090
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8163
                                             10 BANK1      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    7912
                                              0 BANK1     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    6985
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     502
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4898
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             _ADC_Media_10bits (ARG)
               ___lwdiv
               ___xxtofl
               _captura
               _my_delay_ms
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               _ADC_Media_10bits (ARG)
                 ___lwdiv
                 ___xxtofl
                 _captura
                 _my_delay_ms
     _EEPROM_24C1025_Read_Buffer_USART
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _USART_putc
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           _ADC_Media_10bits (ARG)
             ___lwdiv
             ___xxtofl
             _captura
             _my_delay_ms
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             _ADC_Media_10bits (ARG)
               ___lwdiv
               ___xxtofl
               _captura
               _my_delay_ms
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 _ADC_Media_10bits (ARG)
                   ___lwdiv
                   ___xxtofl
                   _captura
                   _my_delay_ms
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 _ADC_Media_10bits (ARG)
                   ___lwdiv
                   ___xxtofl
                   _captura
                   _my_delay_ms
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 _ADC_Media_10bits (ARG)
                   ___lwdiv
                   ___xxtofl
                   _captura
                   _my_delay_ms
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             _ADC_Media_10bits (ARG)
               ___lwdiv
               ___xxtofl
               _captura
               _my_delay_ms
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               _ADC_Media_10bits (ARG)
                 ___lwdiv
                 ___xxtofl
                 _captura
                 _my_delay_ms
       ___flmul
         __Umul8_16
         ___fladd (ARG)
           _ADC_Media_10bits (ARG)
             ___lwdiv
             ___xxtofl
             _captura
             _my_delay_ms
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             _ADC_Media_10bits (ARG)
               ___lwdiv
               ___xxtofl
               _captura
               _my_delay_ms
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             _ADC_Media_10bits (ARG)
               ___lwdiv
               ___xxtofl
               _captura
               _my_delay_ms
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
       ___fladd (ARG)
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
           _captura
           _my_delay_ms
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           _ADC_Media_10bits (ARG)
             ___lwdiv
             ___xxtofl
             _captura
             _my_delay_ms
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
     ___flge
     ___flmul
       __Umul8_16
       ___fladd (ARG)
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
           _captura
           _my_delay_ms
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
           _captura
           _my_delay_ms
     ___xxtofl
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     132       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     29      45       7       86.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      5B       9       94.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      34      11       54.2%
DATA                 0      0     132      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Apr 10 10:33:49 2021

                               _USART_putc 18B1                               ___fldiv@aexp 0047  
                             ___fldiv@bexp 0046                                          pc 0002  
                             ___fldiv@sign 003F                           _MediaPlacaVaccum 0037  
          EEPROM_24C1025_Read_Buffer@range 0035           EEPROM_24C1025_Write_Str@chip_add 0031  
                                       fsr 0004   __end_of_EEPROM_24C1025_Read_Buffer_USART 1682  
__size_of_EEPROM_24C1025_Read_Buffer_USART 017E         ??_EEPROM_24C1025_Read_Buffer_USART 002F  
        ?_EEPROM_24C1025_Read_Buffer_USART 0029           _EEPROM_24C1025_Read_Buffer_USART 1504  
                            _USART_put_int 18C1                   Decodify_Command@tempchar 00BF  
                      __Umul8_16@word_mpld 0026                 __end_of_RESISTOR_ROOM_TEMP 181C  
             PROCULUS_VP_Write_String@text 00AE                                        l430 074A  
                                      l424 06E7                                        l524 1CAC  
                                      l428 06F5                                        l525 1CAD  
                                      l551 19C0                                        l519 1C88  
                                      l439 02EA                                        l800 1966  
                                      l529 1A06                                        l495 1887  
                                      l817 195A                                        l880 18B9  
       EEPROM_24C1025_Read_Buffer@chip_add 0034                   Decodify_Command@sizedata 00B8  
                                      _isr 102D                                        fsr0 0004  
                                      indf 0000                  __end_of_EEPROM_Write_Byte 1CBC  
                         _ADC_Media_10bits 1DD1                               ___flmul@aexp 0059  
                             ___flmul@bexp 005E                     PROCULUS_VP_Write@vetor 00A6  
             ?_EEPROM_24C1025_Write_Buffer 002A                               ___flmul@sign 0058  
                             ___flmul@temp 0063                               ___flmul@prod 005F  
  __end_of_PROCULUS_Control_Register_Write 1C11   __size_of_PROCULUS_Control_Register_Write 0036  
        ??_PROCULUS_Control_Register_Write 00A5           ?_PROCULUS_Control_Register_Write 00A4  
          _PROCULUS_Control_Register_Write 1BDB                               ___fltol@exp1 006F  
                          __end_of_MAX_ADC 1824                                       l1311 0C80  
                                     l1171 1F87                                       l1332 0D00  
                                     l1324 0CE8                                       l1405 1A32  
                                     l1190 1ED2                                       l1430 0768  
                                     l1174 1FED                                       l1370 0AD6  
                                     l1346 0989                                       l1290 0B2E  
                                     l1443 07BE                                       l4003 0AF9  
                                     l1444 07C8                                       l1436 07A8  
                                     l4101 0BF6                                       l1294 0BC7  
                                     l4103 0BF8                                       l4111 0C08  
                                     l4031 0B26                                       l4007 0AFC  
                                     l1368 0AC8                                       l1296 0BA5  
                                     l4201 0D30                                       l4121 0C72  
                                     l4009 0B04                                       l4027 0B23  
                                     l4301 0FAD                                       l4037 0B38  
                                     l1398 0FF3                                       l4311 0FDC  
                                     l4215 0D4B                                       l4151 0CB3  
                                     l4143 0CA8                                       l5103 01C9  
                                     l4305 0FC3                                       l4217 0D4D  
                                     l4137 0CA1                                       l4129 0C92  
                                     l4145 0CAA                                       l5121 0310  
                                     l5025 0813                                       l4227 0D63  
                                     l4219 0D55                                       l4155 0CB5  
                                     l4075 0BB0                                       l4067 0B74  
                                     l4421 15ED                                       l4341 078D  
                                     l4173 0CF8                                       l4093 0BD5  
                                     l4077 0BB2                                       l4085 0BC1  
                                     l5045 0830                                       l3551 19E3  
                                     l4423 15F0                                       l4351 07AD  
                                     l4335 0777                                       l4281 0F62  
                                     l4329 0760                                       l4177 0CFC  
                                     l5137 036F                                       l5129 0358  
                                     l5081 0061                                       l3555 19EF  
                                     l4419 15E6                                       l4451 1589  
                                     l4531 0923                                       l4523 0901  
                                     l4291 0F7B                                       l4363 07E5  
                                     l4339 077B                                       l5059 0838  
                                     l3549 19F7                                       l4445 163D  
                                     l4453 1669                                       l4381 153C  
                                     l3813 17E2                                       l3741 16B8  
                                     l4613 14BB                                       l3717 1A2A  
                                     l4197 0D26                                       l4349 07BC  
                                     l3559 19FB                                       l3583 1C50  
                                     l3807 17C0                                       l3815 1705  
                                     l4623 14E2                                       l4543 13B2  
                                     l4287 0F79                                       l4279 0F45  
                                     l4199 0D28                                       l3831 1B77  
                                     l5601 12F8                                       l4449 1664  
                                     l4377 1532                                       l3817 17E7  
                                     l3737 16AE                                       l4625 14EB  
                                     l4545 13B9                                       l4529 08AB  
                                     l4465 0869                                       l3841 1C95  
                                     l3833 1B99                                       l4721 1986  
                                     l5097 00C0                                       l5089 00A9  
                                     l5603 12FF                                       l3691 1BD1  
                                     l4379 1539                                       l3739 16B5  
                                     l4547 13BC                                       l4467 0870  
                                     l3907 1BF3                                       l4715 1DAC  
                                     l4811 1E47                                       l5605 1302  
                                     l5621 133B                                       l3781 1769  
                                     l4469 0873                                       l3909 1C08  
                                     l3933 1E97                                       l4901 09A8  
                                     l5631 1365                                       l3687 1BBE  
                                     l3783 1770                                       l4591 146E  
                                     l4663 1AC4                                       l3839 1C92  
                                     l3951 1ECE                                       l4823 1E7C  
                                     l3785 1773                                       l4569 1409  
                                     l4737 1005                                       l3929 1E8E  
                                     l4809 1E37                                       l4833 1FA1  
                                     l5627 1360                                       l5563 1241  
                                     l3699 1BD8                                       l4587 1464  
                                     l4739 1022                                       l5803 0688  
                                     l5723 04F4                                       l5715 04CD  
                                     l5707 04A3                                       l4819 1E6F  
                                     l4907 09B4                                       l5629 1284  
                                     l5565 1248                                       l4589 146B  
                                     l3981 1CE8                                       l3973 1CC4  
                                     l5653 1D58                                       l3877 1939  
                                     l3949 1EBE                                       l5821 06C0  
                                     l4933 0A22                                       l4837 1FC7  
                                     l5567 124B                                       l4687 1B48  
                                     l3975 1CD2                                       l5655 1D73  
                                     l3879 1944                                       l3959 1EE1  
                                     l5815 06A8                                       l5751 055D  
                                     l5719 04DB                                       l3887 1C19  
                                     l4951 0A2D                                       l4927 0A03  
                                     l4935 09DF                                       l4871 095B  
                                     l5665 1D02                                       l3985 1CF3  
                                     l5833 06EB                                       l5809 0699  
                                     l5745 054F                                       l5729 050B  
                                     l4777 1DED                                       l4953 0A4A  
                                     l4937 0A27                                       l4873 0963  
                                     l5921 11A7                                       l5827 06DC  
                                     l5763 058C                                       l5739 0533  
                                     l5691 0439                                       l4795 195F  
                                     l4963 0A63                                       l4891 0981  
                                     l4867 0958                                       ?_isr 0070  
                                     l5781 05F2                                       l5757 056C  
                                     l5685 041F                                       l5845 06F9  
                                     l4973 0A95                                       l5775 05D5  
                                     l5695 0446                                       l4799 1962  
                                     l4959 0A61                                       l4887 097E  
                                     l5793 0644                                       l5769 05B2  
                                     l4977 0AAE                                       l5787 0620  
                                     l5947 11D4                                       l4989 0AD2  
                                     l5991 0703                                       l5799 0662  
                                     _BETA 1848                                       STR_1 1850  
                                     STR_2 1858                                _statuspower 00E3  
                                     _CREN 00C4                                       u3105 1ED7  
                                     u3300 0B94                                       u4005 0FCE  
                                     u3045 1EA0                                       u3310 0B95  
                                     u3145 1CC7                                       u4203 15E4  
                                     u3075 1EBF                                       u3165 1CD3  
                                     u4303 1418                                       u4223 0854  
                                     u3175 1CDF                                       u4135 07D0  
                                     u4055 0784                                       u4233 0867  
                                     u3185 1CE9                                       u3441 0C33  
                                     u3433 0C1A                                       u3425 0BFC  
                                     u3345 0BB6                                       u2810 1BCE  
                                     u3450 0C47                                       u3442 0C34  
                                     u4163 151D                                       u4323 1462  
                                     u4243 08C3                                       u4075 07A0  
                                     u3451 0C48                                       u3443 0C39  
                                     u3452 0C4D                                       u3444 0C3A  
                                     u4173 1530                                       u3453 0C4E  
                                     u3445 0C3F                                       u3446 0C40  
                                     u4183 159F                                       u4095 07B5  
                                     u3295 0B88                                       u2913 1767  
                                     u4505 1E5E                                       u5323 122C  
                                     u4283 139D                                       u2835 196C  
                                     u4515 1E70                                       u2693 1C62  
                                     u5333 123F                                       u4293 13B0  
                                     u5343 12A6                                       u2855 1A33  
                                     u3815 0E66                                       u3495 0C94  
                                     u2873 1699                                       u4385 1DB8  
                                     u4705 09F1                                       u4561 1FB2  
                                     u4562 1FB3                                       u5363 12F6  
                                     u2883 16AC                                       u3915 0F54  
                                     u4475 1E3B                                       u4563 1FB8  
                                     u3595 0CD2                                       u4564 1FB9  
                                     u2893 171B                                       u4725 09FC  
                                     u4581 1FD8                                       u4565 1FBE  
                                     u5517 1123                                       u4582 1FD9  
                                     u4566 1FBF                                       u5375 1292  
                                     u5607 167C                                       u3855 0EFA  
                                     u4495 1E49                                       u5527 1C33  
                                     u4735 0A11                                       u4583 1FDE  
                                     u4584 1FDF                                       u5617 1C6B  
                                     u5393 1D35                                       u5537 1974  
                                     u3785 0E0D                                       u2993 1C2B  
                                     u4585 1FE4                                       u4586 1FE5  
                                     u5627 19EB                                       u5547 1B6D  
                                     u5557 1CB6                                       u3885 0F31  
                                     u4765 0A31                                       u5567 1A17  
                                     u3895 0F49                                       u4855 0A80  
                                     u4695 09E8                                       u5577 143B  
                                     u3985 0F98                                       u4865 0A9E  
                                     u4785 0A3C                                       u5587 14FE  
                                     u3995 0FB6                                       u4875 0AB9  
                                     u5597 17FA                                       u4895 1B1E  
                                     _WPUB 0095                       PROCULUS_Buzzer@vetor 00AB  
         __end_of_I2C_Master_RepeatedStart 18B1                                       _main 111B  
                                     _hora 007C          __size_of_EEPROM_24C1025_Write_Int 0029  
                                     btemp 007E          __size_of_EEPROM_24C1025_Write_Str 00FB  
                ?_EEPROM_24C1025_Write_Int 00A0                  ?_EEPROM_24C1025_Write_Str 002A  
              __size_of_EEPROM_Read_String 0020                                       start 0012  
                         __end_of_ADC_init 189B                           _BALANCE_RESISTOR 184C  
                          ___fldiv@new_exp 0040         EEPROM_24C1025_Read_Buffer@sizedata 002E  
                                    ??_isr 0070                           ?_I2C_Master_Init 002E  
                         ?_I2C_Master_Read 0023                           ?_I2C_Master_Wait 0070  
                         ?_I2C_Master_Stop 0070                             ?_USART_put_int 00A0  
                            ___fltol@sign1 006E                            __end_of___fladd 0D0B  
                                    ?_main 0070                            __end_of___fldiv 0ADE  
                                    _EEADR 010D                            __end_of___flmul 1000  
                          __end_of___flsub 19BD                            __end_of___fltol 1EF0  
                                    _ANSEL 0188                            __end_of___lldiv 1E85  
                                    _T1CON 0010                            __end_of___lwdiv 1CF8  
                                    i1l644 1055                                      i1l662 110F  
                                    i1l646 1066                                      i1l648 1076  
                                    _RCREG 001A                                      _TMR1H 000F  
                                    _TMR1L 000E                                      _SPBRG 0099  
                                    _PORTA 0005                                      _PORTB 0006  
                                    _PORTC 0007                                      _PORTE 0009  
                                    _TRISA 0085                                      _TRISB 0086  
                                    _TRISC 0087            EEPROM_24C1025_Read_Int@chip_add 003D  
                                    _TRISE 0089                                      _TXREG 0019  
                    ADC_Media_10bits@canal 0033                            __end_of_captura 1890  
                             _usart_buffer 0110                      ADC_Media_10bits@value 0034  
                EEPROM_Read_Integer@result 0028                                      _canal 00E2  
             __size_of_EEPROM_Read_Integer 002A                                      _count 00D5  
                                    _errno 00D1              ??_EEPROM_24C1025_Write_Buffer 0031  
       __size_of_EEPROM_24C1025_Write_Byte 0016                 ?_EEPROM_24C1025_Write_Byte 0037  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E            EEPROM_24C1025_Read_Byte@mem_add 0037  
                             __end_of_BETA 184C                    __size_of_PROCULUS_Delay 001D  
        __size_of_PROCULUS_VP_Write_String 0018                                ?_USART_init 0020  
                          __initialization 0015                  ?_PROCULUS_VP_Write_String 00AC  
                              ?_USART_putc 0070                               __end_of_main 1214  
                           Send_To_MB@size 0021                   __end_of_EEPROM_Read_Byte 1A20  
                                   ??_main 00C4                           __end_of_Save_Log 1F6D  
                         _USART_put_string 1B73                      EEPROM_Write_Byte@addr 0023  
                    EEPROM_Write_Byte@dado 0020                 __size_of_EEPROM_Write_Byte 003C  
                        ?_I2C_Master_Start 0070                  EEPROM_Write_Byte@last_GIE 0024  
                        ?_I2C_Master_Write 0023                         ??_I2C_Master_Start 0023  
                                   _ADCON1 009F                         ??_I2C_Master_Write 0025  
                PROCULUS_Show_Screen@vetor 00AB                                     _ADRESH 001E  
                                   _ADRESL 009E                                     _EEDATA 010C  
                                   _EECON2 018D                                 _Send_To_MB 1A6B  
                    EEPROM_Write_Integer@i 002C                                     _ANSELH 0189  
             __end_of_PROCULUS_Show_Screen 18EB                                     i1l5521 10EA  
                                   i1l5515 10DE                                     i1l5517 10E3  
                                   i1l5461 1058                                     i1l5453 103B  
                                   i1l5519 10B7                                     i1l5473 1078  
                                   i1l5457 104A                                     i1l5467 1068  
                                   i1l5497 10A8          __end_of_EEPROM_24C1025_Write_Byte 1901  
                                   u529_25 10D0                               ?_my_delay_ms 0020  
                                   _TMR1IE 0460                                     _TMR1CS 0081  
                 ?_EEPROM_24C1025_Fill_All 00AA                                     _SSPADD 0093  
                                   _TRISC3 043B                                     _TRISC4 043C  
                                   _TRISC6 043E                                     _TRISC7 043F  
                                   _SSPCON 0014                                     _SSPBUF 0013  
           EEPROM_24C1025_Fill_All@mem_add 00AD                           __end_of___xxtofl 07EE  
            EEPROM_24C1025_Read_Str@buffer 002D                         PROCULUS_VP_Write@i 00AB  
                 __end_of_Decodify_Command 074B                   ?_EEPROM_24C1025_Read_Int 0037  
                 ?_EEPROM_24C1025_Read_Str 0029                   _I2C_Master_RepeatedStart 18A6  
     __size_of_EEPROM_24C1025_Write_Buffer 0176                                     ___flge 1F6D  
                                ??___fladd 003F                                  ??___fldiv 0036  
                                ??___flmul 0053                                  ??___flsub 0053  
                                ??___fltol 0069                            ??_USART_put_int 00A2  
                                ??___lldiv 0028                                     _header 00D7  
                        __end_of_ROOM_TEMP 1820                                  ??___lwdiv 0024  
                                   _buffer 01CA                          _USART_to_Protocol 1D7C  
                          USART_putc@value 0020                                     _minuto 007A  
        EEPROM_24C1025_Read_Buffer@cnt_108 0033                                  ??_captura 0022  
                       ?_USART_to_Protocol 0070               Decodify_Command@add_24LCxxxx 00C0  
                                   _strcpy 1981                                     _strlen 1932  
        EEPROM_24C1025_Read_Buffer@mem_add 002A           __end_of_EEPROM_24C1025_Read_Byte 1932  
                       __size_of__Umul8_16 0023                                     saved_w 007E  
        EEPROM_24C1025_Write_Byte@chip_add 003C                                  ?_ADC_init 0070  
                      ??_USART_to_Protocol 0020                        __size_of_USART_init 0042  
                      __size_of_USART_putc 0010                   __end_of_MediaPlacaVaccum 03FF  
                               ___flge@ff1 0020                                 ___flge@ff2 0024  
                             ___xxtofl@arg 002A                               ___xxtofl@exp 0029  
                             ___xxtofl@val 0020                           __end_oflog@coeff 1848  
                  __end_of__initialization 0033                      _MediaPlacaVaccum$2372 00A0  
      PROCULUS_Control_Register_Write@size 00A4                                 ___fltol@f1 0065  
                             _Board_Number 00E1                   __end_of_ADC_Media_10bits 1E27  
                           __pcstackCOMMON 0070                   __size_of_PROCULUS_Buzzer 002A  
                __end_of_USART_to_Protocol 1DD1                      USART_put_string@vetor 0021  
                      my_delay_ms_WDT@time 0020              __size_of_EEPROM_Write_Integer 0032  
                 __size_of_my_delay_ms_WDT 0038                             _OPTION_REGbits 0081  
                 __end_of_BALANCE_RESISTOR 1850           __end_of_EEPROM_24C1025_Write_Int 1ABC  
         __end_of_EEPROM_24C1025_Write_Str 093D                                 ??_ADC_init 0020  
              __end_of_EEPROM_Write_String 102D            __end_of_EEPROM_24C1025_Fill_All 1D38  
                              ?_Send_To_MB 0070                     __size_of_Send_Reply_OK 0009  
                               __pbssBANK1 00C9                                 __pbssBANK2 0110  
                               __pbssBANK3 0190                         _RESISTOR_ROOM_TEMP 1818  
          __end_of_EEPROM_24C1025_Read_Int 1A6B            __end_of_EEPROM_24C1025_Read_Str 1504  
                 ?_Package_Usart_is_for_me 0070                                  ?_Save_Log 00AA  
                           _PROCULUS_Delay 1964                          __end_of__Umul8_16 1A43  
                               __pmaintext 111B                                    ?___flge 0020  
                      Save_Log@add_datalog 00AA                        _EEPROM_Read_Integer 1ABC  
               PROCULUS_Show_Screen@screen 00A8                                 __pintentry 0004  
                     _PROCULUS_Show_Screen 18D6                                    _T1CKPS0 0084  
                                  _T1CKPS1 0085                                    ?_strcpy 0020  
                                  ?_strlen 0020                          MediaPlacaVaccum@i 00A5  
                                ?___xxtofl 0020                                    _MAX_ADC 1820  
                     ?_EEPROM_Read_Integer 0023                      Decodify_Command@dados 00B5  
              EEPROM_24C1025_Read_Int@data 003E                                    _SSPCON2 0091  
         __end_of_PROCULUS_VP_Write_String 1919                    EEPROM_Read_Integer@addr 0026  
                                  _SSPSTAT 0094                   _EEPROM_24C1025_Read_Byte 1919  
                               __stringtab 1800                        PROCULUS_VP_Write@vp 00A4  
              ??_EEPROM_24C1025_Write_Byte 003C                 __end_of_EEPROM_Read_String 19DD  
                   __end_of_PROCULUS_Delay 1981                   __end_of_USART_put_string 1BA6  
                     __size_of_my_delay_ms 0037                                 ??_Save_Log 0070  
                          PROCULUS_Delay@i 0024                                    _Vaccum0 00CD  
                             ??_USART_init 0024                EEPROM_24C1025_Read_Str@ctrl 0033  
                                  _Tensao1 00C9                               ??_USART_putc 0020  
               __size_of_USART_to_Protocol 0055                PROCULUS_Buzzer@time_ms_x_10 00A8  
                          __size_of___flge 0093                                    ___fladd 0ADE  
                                  ___fldiv 093D                   EEPROM_Write_Integer@addr 002B  
                                  ___flmul 0D0B                   EEPROM_Write_Integer@dado 0025  
                                  ___flsub 199F                                    ___fltol 1E85  
                                  ___lldiv 1E27                                    ___lwdiv 1CBC  
                            _Send_Reply_OK 187D                        __size_of_Send_To_MB 0028  
                    ?_PROCULUS_Show_Screen 00A8                                    _captura 1886  
                         _statuspower_memo 007B                                    __ptext1 0800  
                                  __ptext2 0037                                    __ptext3 199F  
                                  __ptext4 0ADE                                    __ptext5 1F6D  
                                  __ptext6 093D                                    __ptext7 194B  
                                  __ptext8 1DD1                                    __ptext9 1C11  
                        ??_PROCULUS_Buzzer 00AA                                    _destino 00E0  
                        ?_EEPROM_Read_Byte 0070                            __size_of_strcpy 001E  
                          __size_of_strlen 0019                               __size_of_isr 00EE  
                               ??___xxtofl 0024                         ??_EEPROM_Read_Byte 0020  
                                  _segundo 007D                   __size_of_I2C_Master_Init 0031  
                 __size_of_I2C_Master_Read 0035                             _usart_protocol 0190  
                    ??_EEPROM_Read_Integer 0025                   __size_of_I2C_Master_Wait 0021  
                 __size_of_I2C_Master_Stop 0009              EEPROM_24C1025_Write_Int@local 00A8  
                                  _pointer 00DF              EEPROM_24C1025_Write_Byte@data 003B  
                                  clrloop0 186D                         __end_of_USART_init 0842  
          __end_of_Package_Usart_is_for_me 1964                         __end_of_USART_putc 18C1  
                        ADC_Media_10bits@i 0036                       end_of_initialization 0033  
                 _EEPROM_24C1025_Write_Int 1A93                          ??_my_delay_ms_WDT 0024  
                 _EEPROM_24C1025_Write_Str 0842                 ??_I2C_Master_RepeatedStart 0023  
                          ?_PROCULUS_Delay 0020                            my_delay_ms@time 0020  
          EEPROM_24C1025_Write_Buffer@data 002F            EEPROM_24C1025_Write_Buffer@ctrl 0036  
                __size_of_I2C_Master_Start 0011                  __size_of_I2C_Master_Write 000B  
                        ?_Decodify_Command 0070                            ___lldiv@divisor 0020  
                          ___lldiv@counter 002D       EEPROM_24C1025_Read_Buffer_USART@data 002E  
     EEPROM_24C1025_Read_Buffer_USART@ctrl 0035                         ??_Decodify_Command 00B1  
                                _RCSTAbits 0018                           I2C_Master_Init@c 002E  
                         I2C_Master_Read@a 0023                             ?_Send_Reply_OK 0070  
                _EEPROM_24C1025_Write_Byte 18EB           __size_of_EEPROM_24C1025_Fill_All 0040  
                                  strlen@s 0024                         USART_to_Protocol@i 0022  
                                _PORTAbits 0005                                  _PORTBbits 0006  
                                _PORTCbits 0007                           _Delay_Led_Memory 00DD  
             ??_EEPROM_24C1025_Read_Buffer 0030              EEPROM_24C1025_Write_Str@range 0032  
                                _ROOM_TEMP 181C                                ___fladd@grs 004A  
         __size_of_EEPROM_24C1025_Read_Int 0028    EEPROM_24C1025_Read_Buffer_USART@cnt_117 0032  
         __size_of_EEPROM_24C1025_Read_Str 017A                              ___xxtofl@sign 0028  
      __end_of_EEPROM_24C1025_Write_Buffer 138A                _EEPROM_24C1025_Write_Buffer 1214  
  EEPROM_24C1025_Read_Buffer_USART@mem_add 0029                                ___fldiv@grs 0042  
                              ___fldiv@rem 003B       PROCULUS_Control_Register_Write@vetor 00A6  
         EEPROM_24C1025_Write_Buffer@count 0033            EEPROM_24C1025_Write_Int@mem_add 00A0  
         EEPROM_24C1025_Write_Buffer@range 0035                          __size_of_ADC_init 000B  
                  Decodify_Command@tempint 00B9                          ?_MediaPlacaVaccum 0070  
                    PROCULUS_VP_Write@size 00A8            EEPROM_24C1025_Read_Str@chip_add 0031  
                              ___flmul@grs 005A                         ??_MediaPlacaVaccum 0065  
                 _PROCULUS_VP_Write_String 1901                                  _TXSTAbits 0098  
      __size_of_EEPROM_24C1025_Read_Buffer 017E                          ?_ADC_Media_10bits 002E  
                   PROCULUS_Delay@tempo_ms 0020                     ??_PROCULUS_Show_Screen 00AA  
                       ??_ADC_Media_10bits 0032                             __end_of___flge 2000  
                    __end_of_USART_put_int 18D6                                _BAUDCTLbits 0187  
                           __end_of_strcpy 199F                             __end_of_strlen 194B  
                      start_initialization 0015                                __end_of_isr 111B  
                              USART_init@i 0026                               ??_Send_To_MB 0021  
 EEPROM_24C1025_Read_Buffer_USART@chip_add 0033                          ??_I2C_Master_Init 0032  
                        ??_I2C_Master_Read 0025                          ??_I2C_Master_Wait 0020  
                        ??_I2C_Master_Stop 0023               __end_of_EEPROM_Write_Integer 1B73  
         EEPROM_24C1025_Write_Int@chip_add 00A7                        Decodify_Command@add 00B7  
                          ??_Send_Reply_OK 0025                                   ??___flge 0028  
                        __size_of_Save_Log 007D                       I2C_Master_Wait@tempo 0022  
                                __Umul8_16 1A20                         __end_of_Send_To_MB 1A93  
         __size_of_Package_Usart_is_for_me 0019                                   ??_strcpy 0021  
                                 ??_strlen 0022   EEPROM_24C1025_Read_Buffer_USART@sizedata 002D  
               ??_EEPROM_24C1025_Read_Byte 003B         EEPROM_24C1025_Write_Buffer@mem_add 002A  
                                ___fladd@a 003B                                  ___fladd@b 0037  
         EEPROM_24C1025_Write_Byte@mem_add 0037                                  ___fldiv@a 002E  
                                ___fldiv@b 0032                                  ___flmul@a 004F  
                                ___flmul@b 004B                                __pbssCOMMON 0078  
                                ___flsub@a 004B                                  ___flsub@b 004F  
                                ___latbits 0002                              __pcstackBANK0 0020  
                            __pcstackBANK1 00A0                          _PROCULUS_VP_Write 1D38  
                        __size_of___xxtofl 00A3                         ?_PROCULUS_VP_Write 00A4  
             __size_of_EEPROM_Write_String 002B                           _I2C_Master_Start 07EE  
                         _I2C_Master_Write 189B                        ??_PROCULUS_VP_Write 00A9  
                           _tempodecorrido 00D3                          ?_USART_put_string 0021  
                          _PROCULUS_Buzzer 1AE6                           ___lwdiv@dividend 0022  
           Package_Usart_is_for_me@retorno 0020                         ??_USART_put_string 0023  
                                 ?___fladd 0037                                   ?___fldiv 002E  
                  _EEPROM_24C1025_Fill_All 1CF8                                   ?___flmul 004B  
                                 ?___flsub 004B                                   ?___fltol 0065  
                                 ?___lldiv 0020                                 ?__Umul8_16 0020  
                       _EEPROM_Read_String 19BD                                   ?___lwdiv 0020  
       __end_of_EEPROM_24C1025_Read_Buffer 1800                 _EEPROM_24C1025_Read_Buffer 1682  
                                 ?_captura 0020                                  __pstrings 1800  
                    MediaPlacaVaccum@canal 00A4                            _my_delay_ms_WDT 1C48  
                  _EEPROM_24C1025_Read_Int 1A43                    _EEPROM_24C1025_Read_Str 138A  
                   EEPROM_Read_Integer@ptr 0027                 ??_EEPROM_24C1025_Write_Int 00A6  
               ??_EEPROM_24C1025_Write_Str 002F                        ?_EEPROM_Read_String 0023  
                __end_of_PROCULUS_VP_Write 1D7C                 EEPROM_24C1025_Read_Str@cnt 0030  
                                 _ADC_init 1890                           ___lwdiv@quotient 0025  
                  EEPROM_Write_Integer@ptr 002A                           ??_PROCULUS_Delay 0022  
           EEPROM_24C1025_Read_Buffer@data 002F             EEPROM_24C1025_Read_Buffer@ctrl 0036  
                            ??_my_delay_ms 0024                  __size_of_EEPROM_Read_Byte 0022  
                        interrupt_function 0004            EEPROM_24C1025_Write_Str@mem_add 002A  
                     ??_EEPROM_Read_String 0024                                  clear_ram0 186C  
                                 _PIE1bits 008C                                   _PIR1bits 000C  
         PROCULUS_Control_Register_Write@i 00A7                     Decodify_Command@OutPut 00BB  
                          _PT100_TRANSLADA 1810                            _Delay_Led_Usart 00DB  
             EEPROM_24C1025_Read_Byte@data 003D                __end_of_EEPROM_Read_Integer 1AE6  
                               _ADCON0bits 001F                                __stringbase 180F  
                               _ADCON1bits 009F                  __size_of_Decodify_Command 034C  
                     _EEPROM_Write_Integer 1B41             EEPROM_24C1025_Read_Int@mem_add 0037  
                                main@reset 00C7                 ??_PROCULUS_VP_Write_String 00AF  
                      I2C_Master_Read@temp 0027                    __end_of_PROCULUS_Buzzer 1B10  
                           _generic_status 00E4                                 _EECON1bits 018C  
                                 _Save_Log 1EF0                  ??_EEPROM_24C1025_Fill_All 0070  
                      __end_of_my_delay_ms 1C48               EEPROM_24C1025_Read_Str@range 0032  
                  __end_of_my_delay_ms_WDT 1C80                               my_delay_ms@i 0026  
                              ??__Umul8_16 0022                  __size_of_MediaPlacaVaccum 03C8  
        __size_of_I2C_Master_RepeatedStart 000B                           __size_of___fladd 022D  
                ??_EEPROM_24C1025_Read_Int 003B                    _Package_Usart_is_for_me 194B  
                         __size_of___fldiv 01A1                  ??_EEPROM_24C1025_Read_Str 002E  
                         __size_of___flmul 02F5                  ?_I2C_Master_RepeatedStart 0070  
                         __size_of___flsub 001E                           __size_of___fltol 006B  
                         __size_of___lldiv 005E                           __size_of___lwdiv 003C  
                       __end_of__stringtab 1810        EEPROM_24C1025_Write_Buffer@chip_add 0034  
                      USART_put_string@ptr 0023                           __size_of_captura 000A  
                    ?_EEPROM_Write_Integer 0025                            _I2C_Master_Init 1B10  
                          _I2C_Master_Read 1BA6                                   ___xxtofl 074B  
               __size_of_PROCULUS_VP_Write 0044                            _I2C_Master_Wait 19DD  
         EEPROM_24C1025_Read_Byte@chip_add 003C                            _I2C_Master_Stop 1874  
                __size_of_ADC_Media_10bits 0056                            ___lwdiv@divisor 0020  
                          ___lwdiv@counter 0027                                   __ptext10 1886  
                                 __ptext11 074B                                   __ptext20 1EF0  
                                 __ptext12 1B10                                   __ptext21 1E85  
                                 __ptext13 1E27                                   __ptext30 1BDB  
                                 __ptext22 0D0B                                   __ptext14 03FF  
                                 __ptext31 18C1                                   __ptext23 1A20  
                                 __ptext15 1981                                   __ptext40 18EB  
                                 __ptext32 1964                                   __ptext24 1901  
                                 __ptext16 1D7C                                   __ptext41 138A  
                                 __ptext33 1002                                   __ptext25 1932  
                                 __ptext17 1A6B                                   __ptext50 1A93  
                                 __ptext42 1A43                                   __ptext34 1B41  
                                 __ptext26 1D38                                   __ptext18 187D  
                                 __ptext51 1214                                   __ptext43 1919  
                                 __ptext35 1C80                                   __ptext27 18D6  
                                 __ptext19 1B73                                   __ptext52 1C48  
                                 __ptext44 1682                                   __ptext36 19BD  
                                 __ptext28 1AE6                                   __ptext53 189B  
                                 __ptext45 1504                                   __ptext37 1ABC  
                                 __ptext29 1CBC                                   __ptext54 1874  
                                 __ptext46 18B1                                   __ptext38 19FE  
                                 __ptext55 07EE                                   __ptext47 18A6  
                                 __ptext39 0842                                   __ptext56 19DD  
                                 __ptext48 1BA6                                   __ptext57 1890  
                                 __ptext49 1CF8                                   __ptext58 102D  
                       USART_put_int@value 00A0                             _PT100_CONSTANT 1814  
                     MediaPlacaVaccum@Temp 00A7                                 strcpy@from 0020  
                            __size_of_main 00F9               EEPROM_24C1025_Fill_All@value 00AA  
               PROCULUS_VP_Write_String@vp 00AC                    __end_of_PT100_TRANSLADA 1814  
      EEPROM_24C1025_Write_Buffer@sizedata 002E                                _milisegundo 00D9  
                           _Delay_Led_Tmr0 0078              __size_of_PROCULUS_Show_Screen 0015  
                      _EEPROM_Write_String 1002                                   log@coeff 1824  
                 __end_of_I2C_Master_Start 07FF                   __end_of_I2C_Master_Write 18A6  
                               _INTCONbits 000B                     __end_of_PT100_CONSTANT 1818  
                                 isr@tempo 0076                       EEPROM_Read_Byte@addr 0022  
                   EEPROM_Read_String@addr 0025                     EEPROM_Read_String@dado 0023  
                         my_delay_ms_WDT@i 0026                                   intlevel1 0000  
                         ?_PROCULUS_Buzzer 00A8                          USART_put_int@dado 00A3  
                         _EEPROM_Read_Byte 19FE                                _my_delay_ms 1C11  
                     ?_EEPROM_Write_String 0025                           ___lldiv@dividend 0024  
                   __size_of_USART_put_int 0015               EEPROM_24C1025_Write_Int@data 00A4  
                     EEPROM_Read_Integer@i 002A                    EEPROM_Write_String@addr 0027  
                  EEPROM_Write_String@dado 0025                         USART_init@baudrate 0020  
                                stringcode 180A                                 _OSCCONbits 008F  
    EEPROM_24C1025_Read_Buffer_USART@range 0034                  ??_Package_Usart_is_for_me 0020  
                         ?_my_delay_ms_WDT 0020                      __end_of_Send_Reply_OK 1886  
                  __end_of_I2C_Master_Init 1B41                    __end_of_I2C_Master_Read 1BDB  
                  __end_of_I2C_Master_Wait 19FE                    __end_of_I2C_Master_Stop 187D  
             EEPROM_24C1025_Write_Str@data 002E               EEPROM_24C1025_Write_Str@ctrl 0033  
              ?_EEPROM_24C1025_Read_Buffer 002A            EEPROM_24C1025_Fill_All@chip_add 00AC  
                   ??_EEPROM_Write_Integer 0027                     __Umul8_16@multiplicand 0020  
          USART_to_Protocol@usart_protocol 0024                           _Decodify_Command 03FF  
                __size_of_USART_put_string 0033                           ___lldiv@quotient 0029  
                        I2C_Master_Write@d 0023                                   strcpy@cp 0023  
                                 strlen@cp 0023                                   strcpy@to 0022  
                                 stringdir 180A                                   stringtab 1800  
                              _SSPCON2bits 0091                          _EEPROM_Write_Byte 1C80  
           EEPROM_24C1025_Read_Str@mem_add 0029                              ___fladd@signs 0047  
                       ?_EEPROM_Write_Byte 0020                      ??_EEPROM_Write_String 0026  
                             ___fladd@aexp 0048                               ___fladd@bexp 0049  
        __size_of_EEPROM_24C1025_Read_Byte 0019                  ?_EEPROM_24C1025_Read_Byte 0037  
                      EEPROM_Read_String@c 0026                       __Umul8_16@multiplier 0028  
                      ??_EEPROM_Write_Byte 0021                          __Umul8_16@product 0024  
                               _USART_init 0800  
