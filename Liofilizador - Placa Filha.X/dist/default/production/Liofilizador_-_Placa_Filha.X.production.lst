

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Apr 08 07:50:27 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 2.10
    78                           ; Generated 31/07/2019 GMT
    79                           ; 
    80                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F886 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0093                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0095                     	;# 
   162  0096                     	;# 
   163  0097                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  0105                     	;# 
   173  0107                     	;# 
   174  0108                     	;# 
   175  0109                     	;# 
   176  010C                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  0185                     	;# 
   182  0187                     	;# 
   183  0188                     	;# 
   184  0189                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0009                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  000D                     	;# 
   200  000E                     	;# 
   201  000E                     	;# 
   202  000F                     	;# 
   203  0010                     	;# 
   204  0011                     	;# 
   205  0012                     	;# 
   206  0013                     	;# 
   207  0014                     	;# 
   208  0015                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001B                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  001D                     	;# 
   219  001E                     	;# 
   220  001F                     	;# 
   221  0081                     	;# 
   222  0085                     	;# 
   223  0086                     	;# 
   224  0087                     	;# 
   225  0089                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  008F                     	;# 
   230  0090                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0095                     	;# 
   238  0096                     	;# 
   239  0097                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  0105                     	;# 
   249  0107                     	;# 
   250  0108                     	;# 
   251  0109                     	;# 
   252  010C                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  0185                     	;# 
   258  0187                     	;# 
   259  0188                     	;# 
   260  0189                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0009                     	;# 
   272  000A                     	;# 
   273  000B                     	;# 
   274  000C                     	;# 
   275  000D                     	;# 
   276  000E                     	;# 
   277  000E                     	;# 
   278  000F                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0013                     	;# 
   283  0014                     	;# 
   284  0015                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0017                     	;# 
   288  0018                     	;# 
   289  0019                     	;# 
   290  001A                     	;# 
   291  001B                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  001D                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  0081                     	;# 
   298  0085                     	;# 
   299  0086                     	;# 
   300  0087                     	;# 
   301  0089                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  008E                     	;# 
   305  008F                     	;# 
   306  0090                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0093                     	;# 
   312  0094                     	;# 
   313  0095                     	;# 
   314  0096                     	;# 
   315  0097                     	;# 
   316  0098                     	;# 
   317  0099                     	;# 
   318  009A                     	;# 
   319  009B                     	;# 
   320  009C                     	;# 
   321  009D                     	;# 
   322  009E                     	;# 
   323  009F                     	;# 
   324  0105                     	;# 
   325  0107                     	;# 
   326  0108                     	;# 
   327  0109                     	;# 
   328  010C                     	;# 
   329  010C                     	;# 
   330  010D                     	;# 
   331  010E                     	;# 
   332  010F                     	;# 
   333  0185                     	;# 
   334  0187                     	;# 
   335  0188                     	;# 
   336  0189                     	;# 
   337  018C                     	;# 
   338  018D                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0009                     	;# 
   348  000A                     	;# 
   349  000B                     	;# 
   350  000C                     	;# 
   351  000D                     	;# 
   352  000E                     	;# 
   353  000E                     	;# 
   354  000F                     	;# 
   355  0010                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0013                     	;# 
   359  0014                     	;# 
   360  0015                     	;# 
   361  0015                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001B                     	;# 
   369  001C                     	;# 
   370  001D                     	;# 
   371  001E                     	;# 
   372  001F                     	;# 
   373  0081                     	;# 
   374  0085                     	;# 
   375  0086                     	;# 
   376  0087                     	;# 
   377  0089                     	;# 
   378  008C                     	;# 
   379  008D                     	;# 
   380  008E                     	;# 
   381  008F                     	;# 
   382  0090                     	;# 
   383  0091                     	;# 
   384  0092                     	;# 
   385  0093                     	;# 
   386  0093                     	;# 
   387  0093                     	;# 
   388  0094                     	;# 
   389  0095                     	;# 
   390  0096                     	;# 
   391  0097                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  009F                     	;# 
   400  0105                     	;# 
   401  0107                     	;# 
   402  0108                     	;# 
   403  0109                     	;# 
   404  010C                     	;# 
   405  010C                     	;# 
   406  010D                     	;# 
   407  010E                     	;# 
   408  010F                     	;# 
   409  0185                     	;# 
   410  0187                     	;# 
   411  0188                     	;# 
   412  0189                     	;# 
   413  018C                     	;# 
   414  018D                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  000E                     	;# 
   429  000E                     	;# 
   430  000F                     	;# 
   431  0010                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0013                     	;# 
   435  0014                     	;# 
   436  0015                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  001D                     	;# 
   447  001E                     	;# 
   448  001F                     	;# 
   449  0081                     	;# 
   450  0085                     	;# 
   451  0086                     	;# 
   452  0087                     	;# 
   453  0089                     	;# 
   454  008C                     	;# 
   455  008D                     	;# 
   456  008E                     	;# 
   457  008F                     	;# 
   458  0090                     	;# 
   459  0091                     	;# 
   460  0092                     	;# 
   461  0093                     	;# 
   462  0093                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0095                     	;# 
   466  0096                     	;# 
   467  0097                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009A                     	;# 
   471  009B                     	;# 
   472  009C                     	;# 
   473  009D                     	;# 
   474  009E                     	;# 
   475  009F                     	;# 
   476  0105                     	;# 
   477  0107                     	;# 
   478  0108                     	;# 
   479  0109                     	;# 
   480  010C                     	;# 
   481  010C                     	;# 
   482  010D                     	;# 
   483  010E                     	;# 
   484  010F                     	;# 
   485  0185                     	;# 
   486  0187                     	;# 
   487  0188                     	;# 
   488  0189                     	;# 
   489  018C                     	;# 
   490  018D                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0009                     	;# 
   500  000A                     	;# 
   501  000B                     	;# 
   502  000C                     	;# 
   503  000D                     	;# 
   504  000E                     	;# 
   505  000E                     	;# 
   506  000F                     	;# 
   507  0010                     	;# 
   508  0011                     	;# 
   509  0012                     	;# 
   510  0013                     	;# 
   511  0014                     	;# 
   512  0015                     	;# 
   513  0015                     	;# 
   514  0016                     	;# 
   515  0017                     	;# 
   516  0018                     	;# 
   517  0019                     	;# 
   518  001A                     	;# 
   519  001B                     	;# 
   520  001B                     	;# 
   521  001C                     	;# 
   522  001D                     	;# 
   523  001E                     	;# 
   524  001F                     	;# 
   525  0081                     	;# 
   526  0085                     	;# 
   527  0086                     	;# 
   528  0087                     	;# 
   529  0089                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  008F                     	;# 
   534  0090                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0093                     	;# 
   538  0093                     	;# 
   539  0093                     	;# 
   540  0094                     	;# 
   541  0095                     	;# 
   542  0096                     	;# 
   543  0097                     	;# 
   544  0098                     	;# 
   545  0099                     	;# 
   546  009A                     	;# 
   547  009B                     	;# 
   548  009C                     	;# 
   549  009D                     	;# 
   550  009E                     	;# 
   551  009F                     	;# 
   552  0105                     	;# 
   553  0107                     	;# 
   554  0108                     	;# 
   555  0109                     	;# 
   556  010C                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  0185                     	;# 
   562  0187                     	;# 
   563  0188                     	;# 
   564  0189                     	;# 
   565  018C                     	;# 
   566  018D                     	;# 
   567  0000                     	;# 
   568  0001                     	;# 
   569  0002                     	;# 
   570  0003                     	;# 
   571  0004                     	;# 
   572  0005                     	;# 
   573  0006                     	;# 
   574  0007                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  000D                     	;# 
   580  000E                     	;# 
   581  000E                     	;# 
   582  000F                     	;# 
   583  0010                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0014                     	;# 
   588  0015                     	;# 
   589  0015                     	;# 
   590  0016                     	;# 
   591  0017                     	;# 
   592  0018                     	;# 
   593  0019                     	;# 
   594  001A                     	;# 
   595  001B                     	;# 
   596  001B                     	;# 
   597  001C                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  0081                     	;# 
   602  0085                     	;# 
   603  0086                     	;# 
   604  0087                     	;# 
   605  0089                     	;# 
   606  008C                     	;# 
   607  008D                     	;# 
   608  008E                     	;# 
   609  008F                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0092                     	;# 
   613  0093                     	;# 
   614  0093                     	;# 
   615  0093                     	;# 
   616  0094                     	;# 
   617  0095                     	;# 
   618  0096                     	;# 
   619  0097                     	;# 
   620  0098                     	;# 
   621  0099                     	;# 
   622  009A                     	;# 
   623  009B                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  009F                     	;# 
   628  0105                     	;# 
   629  0107                     	;# 
   630  0108                     	;# 
   631  0109                     	;# 
   632  010C                     	;# 
   633  010C                     	;# 
   634  010D                     	;# 
   635  010E                     	;# 
   636  010F                     	;# 
   637  0185                     	;# 
   638  0187                     	;# 
   639  0188                     	;# 
   640  0189                     	;# 
   641  018C                     	;# 
   642  018D                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  000E                     	;# 
   658  000F                     	;# 
   659  0010                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  001D                     	;# 
   675  001E                     	;# 
   676  001F                     	;# 
   677  0081                     	;# 
   678  0085                     	;# 
   679  0086                     	;# 
   680  0087                     	;# 
   681  0089                     	;# 
   682  008C                     	;# 
   683  008D                     	;# 
   684  008E                     	;# 
   685  008F                     	;# 
   686  0090                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0093                     	;# 
   690  0093                     	;# 
   691  0093                     	;# 
   692  0094                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0097                     	;# 
   696  0098                     	;# 
   697  0099                     	;# 
   698  009A                     	;# 
   699  009B                     	;# 
   700  009C                     	;# 
   701  009D                     	;# 
   702  009E                     	;# 
   703  009F                     	;# 
   704  0105                     	;# 
   705  0107                     	;# 
   706  0108                     	;# 
   707  0109                     	;# 
   708  010C                     	;# 
   709  010C                     	;# 
   710  010D                     	;# 
   711  010E                     	;# 
   712  010F                     	;# 
   713  0185                     	;# 
   714  0187                     	;# 
   715  0188                     	;# 
   716  0189                     	;# 
   717  018C                     	;# 
   718  018D                     	;# 
   719  0000                     	;# 
   720  0001                     	;# 
   721  0002                     	;# 
   722  0003                     	;# 
   723  0004                     	;# 
   724  0005                     	;# 
   725  0006                     	;# 
   726  0007                     	;# 
   727  0009                     	;# 
   728  000A                     	;# 
   729  000B                     	;# 
   730  000C                     	;# 
   731  000D                     	;# 
   732  000E                     	;# 
   733  000E                     	;# 
   734  000F                     	;# 
   735  0010                     	;# 
   736  0011                     	;# 
   737  0012                     	;# 
   738  0013                     	;# 
   739  0014                     	;# 
   740  0015                     	;# 
   741  0015                     	;# 
   742  0016                     	;# 
   743  0017                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  001B                     	;# 
   748  001B                     	;# 
   749  001C                     	;# 
   750  001D                     	;# 
   751  001E                     	;# 
   752  001F                     	;# 
   753  0081                     	;# 
   754  0085                     	;# 
   755  0086                     	;# 
   756  0087                     	;# 
   757  0089                     	;# 
   758  008C                     	;# 
   759  008D                     	;# 
   760  008E                     	;# 
   761  008F                     	;# 
   762  0090                     	;# 
   763  0091                     	;# 
   764  0092                     	;# 
   765  0093                     	;# 
   766  0093                     	;# 
   767  0093                     	;# 
   768  0094                     	;# 
   769  0095                     	;# 
   770  0096                     	;# 
   771  0097                     	;# 
   772  0098                     	;# 
   773  0099                     	;# 
   774  009A                     	;# 
   775  009B                     	;# 
   776  009C                     	;# 
   777  009D                     	;# 
   778  009E                     	;# 
   779  009F                     	;# 
   780  0105                     	;# 
   781  0107                     	;# 
   782  0108                     	;# 
   783  0109                     	;# 
   784  010C                     	;# 
   785  010C                     	;# 
   786  010D                     	;# 
   787  010E                     	;# 
   788  010F                     	;# 
   789  0185                     	;# 
   790  0187                     	;# 
   791  0188                     	;# 
   792  0189                     	;# 
   793  018C                     	;# 
   794  018D                     	;# 
   795  0000                     	;# 
   796  0001                     	;# 
   797  0002                     	;# 
   798  0003                     	;# 
   799  0004                     	;# 
   800  0005                     	;# 
   801  0006                     	;# 
   802  0007                     	;# 
   803  0009                     	;# 
   804  000A                     	;# 
   805  000B                     	;# 
   806  000C                     	;# 
   807  000D                     	;# 
   808  000E                     	;# 
   809  000E                     	;# 
   810  000F                     	;# 
   811  0010                     	;# 
   812  0011                     	;# 
   813  0012                     	;# 
   814  0013                     	;# 
   815  0014                     	;# 
   816  0015                     	;# 
   817  0015                     	;# 
   818  0016                     	;# 
   819  0017                     	;# 
   820  0018                     	;# 
   821  0019                     	;# 
   822  001A                     	;# 
   823  001B                     	;# 
   824  001B                     	;# 
   825  001C                     	;# 
   826  001D                     	;# 
   827  001E                     	;# 
   828  001F                     	;# 
   829  0081                     	;# 
   830  0085                     	;# 
   831  0086                     	;# 
   832  0087                     	;# 
   833  0089                     	;# 
   834  008C                     	;# 
   835  008D                     	;# 
   836  008E                     	;# 
   837  008F                     	;# 
   838  0090                     	;# 
   839  0091                     	;# 
   840  0092                     	;# 
   841  0093                     	;# 
   842  0093                     	;# 
   843  0093                     	;# 
   844  0094                     	;# 
   845  0095                     	;# 
   846  0096                     	;# 
   847  0097                     	;# 
   848  0098                     	;# 
   849  0099                     	;# 
   850  009A                     	;# 
   851  009B                     	;# 
   852  009C                     	;# 
   853  009D                     	;# 
   854  009E                     	;# 
   855  009F                     	;# 
   856  0105                     	;# 
   857  0107                     	;# 
   858  0108                     	;# 
   859  0109                     	;# 
   860  010C                     	;# 
   861  010C                     	;# 
   862  010D                     	;# 
   863  010E                     	;# 
   864  010F                     	;# 
   865  0185                     	;# 
   866  0187                     	;# 
   867  0188                     	;# 
   868  0189                     	;# 
   869  018C                     	;# 
   870  018D                     	;# 
   871  0000                     	;# 
   872  0001                     	;# 
   873  0002                     	;# 
   874  0003                     	;# 
   875  0004                     	;# 
   876  0005                     	;# 
   877  0006                     	;# 
   878  0007                     	;# 
   879  0009                     	;# 
   880  000A                     	;# 
   881  000B                     	;# 
   882  000C                     	;# 
   883  000D                     	;# 
   884  000E                     	;# 
   885  000E                     	;# 
   886  000F                     	;# 
   887  0010                     	;# 
   888  0011                     	;# 
   889  0012                     	;# 
   890  0013                     	;# 
   891  0014                     	;# 
   892  0015                     	;# 
   893  0015                     	;# 
   894  0016                     	;# 
   895  0017                     	;# 
   896  0018                     	;# 
   897  0019                     	;# 
   898  001A                     	;# 
   899  001B                     	;# 
   900  001B                     	;# 
   901  001C                     	;# 
   902  001D                     	;# 
   903  001E                     	;# 
   904  001F                     	;# 
   905  0081                     	;# 
   906  0085                     	;# 
   907  0086                     	;# 
   908  0087                     	;# 
   909  0089                     	;# 
   910  008C                     	;# 
   911  008D                     	;# 
   912  008E                     	;# 
   913  008F                     	;# 
   914  0090                     	;# 
   915  0091                     	;# 
   916  0092                     	;# 
   917  0093                     	;# 
   918  0093                     	;# 
   919  0093                     	;# 
   920  0094                     	;# 
   921  0095                     	;# 
   922  0096                     	;# 
   923  0097                     	;# 
   924  0098                     	;# 
   925  0099                     	;# 
   926  009A                     	;# 
   927  009B                     	;# 
   928  009C                     	;# 
   929  009D                     	;# 
   930  009E                     	;# 
   931  009F                     	;# 
   932  0105                     	;# 
   933  0107                     	;# 
   934  0108                     	;# 
   935  0109                     	;# 
   936  010C                     	;# 
   937  010C                     	;# 
   938  010D                     	;# 
   939  010E                     	;# 
   940  010F                     	;# 
   941  0185                     	;# 
   942  0187                     	;# 
   943  0188                     	;# 
   944  0189                     	;# 
   945  018C                     	;# 
   946  018D                     	;# 
   947  0000                     	;# 
   948  0001                     	;# 
   949  0002                     	;# 
   950  0003                     	;# 
   951  0004                     	;# 
   952  0005                     	;# 
   953  0006                     	;# 
   954  0007                     	;# 
   955  0009                     	;# 
   956  000A                     	;# 
   957  000B                     	;# 
   958  000C                     	;# 
   959  000D                     	;# 
   960  000E                     	;# 
   961  000E                     	;# 
   962  000F                     	;# 
   963  0010                     	;# 
   964  0011                     	;# 
   965  0012                     	;# 
   966  0013                     	;# 
   967  0014                     	;# 
   968  0015                     	;# 
   969  0015                     	;# 
   970  0016                     	;# 
   971  0017                     	;# 
   972  0018                     	;# 
   973  0019                     	;# 
   974  001A                     	;# 
   975  001B                     	;# 
   976  001B                     	;# 
   977  001C                     	;# 
   978  001D                     	;# 
   979  001E                     	;# 
   980  001F                     	;# 
   981  0081                     	;# 
   982  0085                     	;# 
   983  0086                     	;# 
   984  0087                     	;# 
   985  0089                     	;# 
   986  008C                     	;# 
   987  008D                     	;# 
   988  008E                     	;# 
   989  008F                     	;# 
   990  0090                     	;# 
   991  0091                     	;# 
   992  0092                     	;# 
   993  0093                     	;# 
   994  0093                     	;# 
   995  0093                     	;# 
   996  0094                     	;# 
   997  0095                     	;# 
   998  0096                     	;# 
   999  0097                     	;# 
  1000  0098                     	;# 
  1001  0099                     	;# 
  1002  009A                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  009F                     	;# 
  1008  0105                     	;# 
  1009  0107                     	;# 
  1010  0108                     	;# 
  1011  0109                     	;# 
  1012  010C                     	;# 
  1013  010C                     	;# 
  1014  010D                     	;# 
  1015  010E                     	;# 
  1016  010F                     	;# 
  1017  0185                     	;# 
  1018  0187                     	;# 
  1019  0188                     	;# 
  1020  0189                     	;# 
  1021  018C                     	;# 
  1022  018D                     	;# 
  1023  0000                     	;# 
  1024  0001                     	;# 
  1025  0002                     	;# 
  1026  0003                     	;# 
  1027  0004                     	;# 
  1028  0005                     	;# 
  1029  0006                     	;# 
  1030  0007                     	;# 
  1031  0009                     	;# 
  1032  000A                     	;# 
  1033  000B                     	;# 
  1034  000C                     	;# 
  1035  000D                     	;# 
  1036  000E                     	;# 
  1037  000E                     	;# 
  1038  000F                     	;# 
  1039  0010                     	;# 
  1040  0011                     	;# 
  1041  0012                     	;# 
  1042  0013                     	;# 
  1043  0014                     	;# 
  1044  0015                     	;# 
  1045  0015                     	;# 
  1046  0016                     	;# 
  1047  0017                     	;# 
  1048  0018                     	;# 
  1049  0019                     	;# 
  1050  001A                     	;# 
  1051  001B                     	;# 
  1052  001B                     	;# 
  1053  001C                     	;# 
  1054  001D                     	;# 
  1055  001E                     	;# 
  1056  001F                     	;# 
  1057  0081                     	;# 
  1058  0085                     	;# 
  1059  0086                     	;# 
  1060  0087                     	;# 
  1061  0089                     	;# 
  1062  008C                     	;# 
  1063  008D                     	;# 
  1064  008E                     	;# 
  1065  008F                     	;# 
  1066  0090                     	;# 
  1067  0091                     	;# 
  1068  0092                     	;# 
  1069  0093                     	;# 
  1070  0093                     	;# 
  1071  0093                     	;# 
  1072  0094                     	;# 
  1073  0095                     	;# 
  1074  0096                     	;# 
  1075  0097                     	;# 
  1076  0098                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009C                     	;# 
  1081  009D                     	;# 
  1082  009E                     	;# 
  1083  009F                     	;# 
  1084  0105                     	;# 
  1085  0107                     	;# 
  1086  0108                     	;# 
  1087  0109                     	;# 
  1088  010C                     	;# 
  1089  010C                     	;# 
  1090  010D                     	;# 
  1091  010E                     	;# 
  1092  010F                     	;# 
  1093  0185                     	;# 
  1094  0187                     	;# 
  1095  0188                     	;# 
  1096  0189                     	;# 
  1097  018C                     	;# 
  1098  018D                     	;# 
  1099  0000                     	;# 
  1100  0001                     	;# 
  1101  0002                     	;# 
  1102  0003                     	;# 
  1103  0004                     	;# 
  1104  0005                     	;# 
  1105  0006                     	;# 
  1106  0007                     	;# 
  1107  0009                     	;# 
  1108  000A                     	;# 
  1109  000B                     	;# 
  1110  000C                     	;# 
  1111  000D                     	;# 
  1112  000E                     	;# 
  1113  000E                     	;# 
  1114  000F                     	;# 
  1115  0010                     	;# 
  1116  0011                     	;# 
  1117  0012                     	;# 
  1118  0013                     	;# 
  1119  0014                     	;# 
  1120  0015                     	;# 
  1121  0015                     	;# 
  1122  0016                     	;# 
  1123  0017                     	;# 
  1124  0018                     	;# 
  1125  0019                     	;# 
  1126  001A                     	;# 
  1127  001B                     	;# 
  1128  001B                     	;# 
  1129  001C                     	;# 
  1130  001D                     	;# 
  1131  001E                     	;# 
  1132  001F                     	;# 
  1133  0081                     	;# 
  1134  0085                     	;# 
  1135  0086                     	;# 
  1136  0087                     	;# 
  1137  0089                     	;# 
  1138  008C                     	;# 
  1139  008D                     	;# 
  1140  008E                     	;# 
  1141  008F                     	;# 
  1142  0090                     	;# 
  1143  0091                     	;# 
  1144  0092                     	;# 
  1145  0093                     	;# 
  1146  0093                     	;# 
  1147  0093                     	;# 
  1148  0094                     	;# 
  1149  0095                     	;# 
  1150  0096                     	;# 
  1151  0097                     	;# 
  1152  0098                     	;# 
  1153  0099                     	;# 
  1154  009A                     	;# 
  1155  009B                     	;# 
  1156  009C                     	;# 
  1157  009D                     	;# 
  1158  009E                     	;# 
  1159  009F                     	;# 
  1160  0105                     	;# 
  1161  0107                     	;# 
  1162  0108                     	;# 
  1163  0109                     	;# 
  1164  010C                     	;# 
  1165  010C                     	;# 
  1166  010D                     	;# 
  1167  010E                     	;# 
  1168  010F                     	;# 
  1169  0185                     	;# 
  1170  0187                     	;# 
  1171  0188                     	;# 
  1172  0189                     	;# 
  1173  018C                     	;# 
  1174  018D                     	;# 
  1175                           
  1176                           	psect	strings
  1177  1800                     __pstrings:	
  1178  1800                     stringtab:	
  1179  1800                     __stringtab:	
  1180                           
  1181                           ;	String table - string pointers are 1 byte each
  1182  1800  1BFF               	btfsc	btemp+1,7
  1183  1801  280A               	ljmp	stringcode
  1184  1802  1383               	bcf	3,7
  1185  1803  187F               	btfsc	btemp+1,0
  1186  1804  1783               	bsf	3,7
  1187  1805  0800               	movf	0,w
  1188  1806  0A84               	incf	4,f
  1189  1807  1903               	skipnz
  1190  1808  0AFF               	incf	btemp+1,f
  1191  1809  0008               	return
  1192  180A                     stringcode:	
  1193  180A                     stringdir:	
  1194  180A  3018               	movlw	high stringdir
  1195  180B  008A               	movwf	10
  1196  180C  0804               	movf	4,w
  1197  180D  0A84               	incf	4,f
  1198  180E  0782               	addwf	2,f
  1199  180F                     __stringbase:	
  1200  180F  3400               	retlw	0
  1201  1810                     __end_of__stringtab:	
  1202  1810                     _PT100_TRANSLADA:	
  1203  1810  3466               	retlw	102
  1204  1811  3466               	retlw	102
  1205  1812  34A6               	retlw	166
  1206  1813  34BF               	retlw	191
  1207  1814                     __end_of_PT100_TRANSLADA:	
  1208  1814                     _PT100_CONSTANT:	
  1209  1814  3414               	retlw	20
  1210  1815  34AE               	retlw	174
  1211  1816  342B               	retlw	43
  1212  1817  34C1               	retlw	193
  1213  1818                     __end_of_PT100_CONSTANT:	
  1214  1818                     _RESISTOR_ROOM_TEMP:	
  1215                           
  1216                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1217  1818  3400               	retlw	0
  1218  1819  3440               	retlw	64
  1219  181A  341C               	retlw	28
  1220  181B  3446               	retlw	70
  1221  181C                     __end_of_RESISTOR_ROOM_TEMP:	
  1222  181C                     _ROOM_TEMP:	
  1223                           
  1224                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1225  181C  3466               	retlw	102
  1226  181D  3486               	retlw	134
  1227  181E  3496               	retlw	150
  1228  181F  3443               	retlw	67
  1229  1820                     __end_of_ROOM_TEMP:	
  1230  1820                     _MAX_ADC:	
  1231                           
  1232                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1233  1820  3400               	retlw	0
  1234  1821  34C0               	retlw	192
  1235  1822  347F               	retlw	127
  1236  1823  3444               	retlw	68
  1237  1824                     __end_of_MAX_ADC:	
  1238  1824                     log@coeff:	
  1239  1824  3400               	retlw	0
  1240  1825  3400               	retlw	0
  1241  1826  3400               	retlw	0
  1242  1827  3400               	retlw	0
  1243  1828  34C4               	retlw	196
  1244  1829  34FF               	retlw	255
  1245  182A  347F               	retlw	127
  1246  182B  343F               	retlw	63
  1247  182C  3480               	retlw	128
  1248  182D  34EF               	retlw	239
  1249  182E  34FF               	retlw	255
  1250  182F  34BE               	retlw	190
  1251  1830  3490               	retlw	144
  1252  1831  34E1               	retlw	225
  1253  1832  34A9               	retlw	169
  1254  1833  343E               	retlw	62
  1255  1834  34EC               	retlw	236
  1256  1835  3482               	retlw	130
  1257  1836  3476               	retlw	118
  1258  1837  34BE               	retlw	190
  1259  1838  3482               	retlw	130
  1260  1839  34AD               	retlw	173
  1261  183A  342B               	retlw	43
  1262  183B  343E               	retlw	62
  1263  183C  340E               	retlw	14
  1264  183D  343C               	retlw	60
  1265  183E  34C3               	retlw	195
  1266  183F  34BD               	retlw	189
  1267  1840  3487               	retlw	135
  1268  1841  34D1               	retlw	209
  1269  1842  3413               	retlw	19
  1270  1843  343D               	retlw	61
  1271  1844  3441               	retlw	65
  1272  1845  3478               	retlw	120
  1273  1846  34D3               	retlw	211
  1274  1847  34BB               	retlw	187
  1275  1848                     __end_oflog@coeff:	
  1276  1848                     _BETA:	
  1277                           
  1278                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1279  1848  3400               	retlw	0
  1280  1849  3460               	retlw	96
  1281  184A  3478               	retlw	120
  1282  184B  3445               	retlw	69
  1283  184C                     __end_of_BETA:	
  1284  184C                     _BALANCE_RESISTOR:	
  1285                           
  1286                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1287  184C  3400               	retlw	0
  1288  184D  3440               	retlw	64
  1289  184E  341C               	retlw	28
  1290  184F  3446               	retlw	70
  1291  1850                     __end_of_BALANCE_RESISTOR:	
  1292  0019                     _TXREG	set	25
  1293  0018                     _RCSTAbits	set	24
  1294  001A                     _RCREG	set	26
  1295  000E                     _TMR1L	set	14
  1296  000F                     _TMR1H	set	15
  1297  000C                     _PIR1bits	set	12
  1298  001E                     _ADRESH	set	30
  1299  001F                     _ADCON0bits	set	31
  1300  0005                     _PORTAbits	set	5
  1301  0007                     _PORTCbits	set	7
  1302  0010                     _T1CON	set	16
  1303  0006                     _PORTBbits	set	6
  1304  0009                     _PORTE	set	9
  1305  0007                     _PORTC	set	7
  1306  0005                     _PORTA	set	5
  1307  0013                     _SSPBUF	set	19
  1308  000B                     _INTCONbits	set	11
  1309  0014                     _SSPCON	set	20
  1310  0006                     _PORTB	set	6
  1311  00C4                     _CREN	set	196
  1312  0081                     _TMR1CS	set	129
  1313  0085                     _T1CKPS1	set	133
  1314  0084                     _T1CKPS0	set	132
  1315  008C                     _PIE1bits	set	140
  1316  0099                     _SPBRG	set	153
  1317  0098                     _TXSTAbits	set	152
  1318  009E                     _ADRESL	set	158
  1319  009F                     _ADCON1	set	159
  1320  009F                     _ADCON1bits	set	159
  1321  0095                     _WPUB	set	149
  1322  0081                     _OPTION_REGbits	set	129
  1323  0089                     _TRISE	set	137
  1324  0087                     _TRISC	set	135
  1325  0086                     _TRISB	set	134
  1326  0085                     _TRISA	set	133
  1327  008F                     _OSCCONbits	set	143
  1328  0091                     _SSPCON2bits	set	145
  1329  0094                     _SSPSTAT	set	148
  1330  0093                     _SSPADD	set	147
  1331  0091                     _SSPCON2	set	145
  1332  043F                     _TRISC7	set	1087
  1333  043E                     _TRISC6	set	1086
  1334  0460                     _TMR1IE	set	1120
  1335  043C                     _TRISC4	set	1084
  1336  043B                     _TRISC3	set	1083
  1337  010C                     _EEDATA	set	268
  1338  010D                     _EEADR	set	269
  1339  0187                     _BAUDCTLbits	set	391
  1340  018D                     _EECON2	set	397
  1341  018C                     _EECON1bits	set	396
  1342  0189                     _ANSELH	set	393
  1343  0188                     _ANSEL	set	392
  1344  1850                     STR_1:	
  1345  1850  3476               	retlw	118	;'v'
  1346  1851  3431               	retlw	49	;'1'
  1347  1852  342E               	retlw	46	;'.'
  1348  1853  3430               	retlw	48	;'0'
  1349  1854  342E               	retlw	46	;'.'
  1350  1855  3431               	retlw	49	;'1'
  1351  1856  3436               	retlw	54	;'6'
  1352  1857  3400               	retlw	0
  1353  1858                     STR_2:	
  1354  1858  344F               	retlw	79	;'O'
  1355  1859  344B               	retlw	75	;'K'
  1356  185A  3400               	retlw	0
  1357                           
  1358                           ; #config settings
  1359  0000                     
  1360                           	psect	cinit
  1361  0015                     start_initialization:	
  1362  0015                     __initialization:	
  1363                           
  1364                           ; Clear objects allocated to COMMON
  1365  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1366  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1367  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1368  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1369  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1370  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1371                           
  1372                           ; Clear objects allocated to BANK1
  1373  001B  1383               	bcf	3,7	;select IRP bank0
  1374  001C  30A0               	movlw	low __pbssBANK1
  1375  001D  0084               	movwf	4
  1376  001E  30DD               	movlw	low (__pbssBANK1+61)
  1377  001F  160A  158A  2168  120A  118A  	fcall	clear_ram0
  1378                           
  1379                           ; Clear objects allocated to BANK3
  1380  0024  1783               	bsf	3,7	;select IRP bank2
  1381  0025  3090               	movlw	low __pbssBANK3
  1382  0026  0084               	movwf	4
  1383  0027  30CA               	movlw	low (__pbssBANK3+58)
  1384  0028  160A  158A  2168  120A  118A  	fcall	clear_ram0
  1385                           
  1386                           ; Clear objects allocated to BANK2
  1387  002D  3010               	movlw	low __pbssBANK2
  1388  002E  0084               	movwf	4
  1389  002F  3044               	movlw	low (__pbssBANK2+52)
  1390  0030  160A  158A  2168   	fcall	clear_ram0
  1391  0033                     end_of_initialization:	
  1392                           ;End of C runtime variable initialization code
  1393                           
  1394  0033                     __end_of__initialization:	
  1395  0033  0183               	clrf	3
  1396  0034  120A  118A  2EBE   	ljmp	_main	;jump to C main() function
  1397                           
  1398                           	psect	bssCOMMON
  1399  0078                     __pbssCOMMON:	
  1400  0078                     _Delay_Led_Tmr0:	
  1401  0078                     	ds	2
  1402  007A                     _minuto:	
  1403  007A                     	ds	1
  1404  007B                     _statuspower_memo:	
  1405  007B                     	ds	1
  1406  007C                     _hora:	
  1407  007C                     	ds	1
  1408  007D                     _segundo:	
  1409  007D                     	ds	1
  1410                           
  1411                           	psect	bssBANK1
  1412  00A0                     __pbssBANK1:	
  1413  00A0                     _Tensao1:	
  1414  00A0                     	ds	4
  1415  00A4                     _Vaccum0:	
  1416  00A4                     	ds	4
  1417  00A8                     _errno:	
  1418  00A8                     	ds	2
  1419  00AA                     _tempodecorrido:	
  1420  00AA                     	ds	2
  1421  00AC                     _count:	
  1422  00AC                     	ds	2
  1423  00AE                     _header:	
  1424  00AE                     	ds	2
  1425  00B0                     _milisegundo:	
  1426  00B0                     	ds	2
  1427  00B2                     _Delay_Led_Usart:	
  1428  00B2                     	ds	2
  1429  00B4                     _Delay_Led_Memory:	
  1430  00B4                     	ds	2
  1431  00B6                     _pointer:	
  1432  00B6                     	ds	1
  1433  00B7                     _destino:	
  1434  00B7                     	ds	1
  1435  00B8                     _Board_Number:	
  1436  00B8                     	ds	1
  1437  00B9                     _canal:	
  1438  00B9                     	ds	1
  1439  00BA                     _statuspower:	
  1440  00BA                     	ds	1
  1441  00BB                     _generic_status:	
  1442  00BB                     	ds	1
  1443  00BC                     _buffer:	
  1444  00BC                     	ds	33
  1445                           
  1446                           	psect	bssBANK3
  1447  0190                     __pbssBANK3:	
  1448  0190                     _usart_protocol:	
  1449  0190                     	ds	58
  1450                           
  1451                           	psect	bssBANK2
  1452  0110                     __pbssBANK2:	
  1453  0110                     _usart_buffer:	
  1454  0110                     	ds	52
  1455                           
  1456                           	psect	clrtext
  1457  1968                     clear_ram0:	
  1458                           ;	Called with FSR containing the base address, and
  1459                           ;	W with the last address+1
  1460                           
  1461  1968  0064               	clrwdt	;clear the watchdog before getting into this loop
  1462  1969                     clrloop0:	
  1463  1969  0180               	clrf	0	;clear RAM location pointed to by FSR
  1464  196A  0A84               	incf	4,f	;increment pointer
  1465  196B  0604               	xorwf	4,w	;XOR with final address
  1466  196C  1903               	btfsc	3,2	;have we reached the end yet?
  1467  196D  3400               	retlw	0	;all done for this memory range, return
  1468  196E  0604               	xorwf	4,w	;XOR again to restore value
  1469  196F  2969               	goto	clrloop0	;do the next byte
  1470                           
  1471                           	psect	cstackBANK1
  1472  00DD                     __pcstackBANK1:	
  1473  00DD                     Decodify_Command@dados:	
  1474  00DD                     MediaPlacaVaccum@Valor:	
  1475                           ; 2 bytes @ 0x0
  1476                           
  1477                           
  1478                           ; 4 bytes @ 0x0
  1479  00DD                     	ds	2
  1480  00DF                     Decodify_Command@add:	
  1481                           
  1482                           ; 1 bytes @ 0x2
  1483  00DF                     	ds	1
  1484  00E0                     Decodify_Command@sizedata:	
  1485                           
  1486                           ; 1 bytes @ 0x3
  1487  00E0                     	ds	1
  1488  00E1                     MediaPlacaVaccum@canal:	
  1489  00E1                     Decodify_Command@tempint:	
  1490                           ; 1 bytes @ 0x4
  1491                           
  1492                           
  1493                           ; 2 bytes @ 0x4
  1494  00E1                     	ds	1
  1495  00E2                     MediaPlacaVaccum@Temp:	
  1496                           
  1497                           ; 4 bytes @ 0x5
  1498  00E2                     	ds	1
  1499  00E3                     Decodify_Command@OutPut:	
  1500                           
  1501                           ; 4 bytes @ 0x6
  1502  00E3                     	ds	3
  1503  00E6                     MediaPlacaVaccum@i:	
  1504                           
  1505                           ; 2 bytes @ 0x9
  1506  00E6                     	ds	1
  1507  00E7                     Decodify_Command@tempchar:	
  1508                           
  1509                           ; 1 bytes @ 0xA
  1510  00E7                     	ds	1
  1511  00E8                     Decodify_Command@add_24LCxxxx:	
  1512                           
  1513                           ; 4 bytes @ 0xB
  1514  00E8                     	ds	4
  1515                           
  1516                           	psect	cstackCOMMON
  1517  0070                     __pcstackCOMMON:	
  1518  0070                     ?_I2C_Master_Start:	
  1519  0070                     ?_I2C_Master_Stop:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0070                     ?_I2C_Master_RepeatedStart:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0070                     ?_USART_putc:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0070                     ?_ADC_init:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0070                     ?_MediaPlacaVaccum:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0070                     ?_Decodify_Command:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0070                     ?_USART_to_Protocol:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0070                     ?_Send_To_MB:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0070                     ?_Send_Reply_OK:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0070                     ?_EEPROM_Read_Byte:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0070                     ?_Package_Usart_is_for_me:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0070                     ?_I2C_Master_Wait:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0070                     ?_main:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0070                     ?_isr:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  0070                     ??_isr:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564                           
  1565                           ; 1 bytes @ 0x0
  1566  0070                     	ds	6
  1567  0076                     isr@tempo:	
  1568                           
  1569                           ; 2 bytes @ 0x6
  1570  0076                     	ds	2
  1571                           
  1572                           	psect	cstackBANK0
  1573  0020                     __pcstackBANK0:	
  1574  0020                     ?___flge:	
  1575  0020                     ?_my_delay_ms_WDT:	
  1576                           ; 1 bit 
  1577                           
  1578  0020                     ??_USART_putc:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0020                     ??_ADC_init:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0020                     ?_USART_init:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0020                     ??_USART_to_Protocol:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0020                     ?_strcpy:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0020                     ?_EEPROM_Write_Byte:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0020                     ??_EEPROM_Read_Byte:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0020                     ?_my_delay_ms:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0020                     ??_Package_Usart_is_for_me:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0020                     ?_PROCULUS_Delay:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0020                     ??_I2C_Master_Wait:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0020                     ?_strlen:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0020                     ?_captura:	
  1615                           ; 2 bytes @ 0x0
  1616                           
  1617  0020                     ?__Umul8_16:	
  1618                           ; 2 bytes @ 0x0
  1619                           
  1620  0020                     ?___lwdiv:	
  1621                           ; 2 bytes @ 0x0
  1622                           
  1623  0020                     ?___lldiv:	
  1624                           ; 2 bytes @ 0x0
  1625                           
  1626  0020                     EEPROM_Write_Byte@dado:	
  1627                           ; 4 bytes @ 0x0
  1628                           
  1629  0020                     Package_Usart_is_for_me@retorno:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632  0020                     USART_putc@value:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635  0020                     strcpy@from:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638  0020                     __Umul8_16@multiplicand:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641  0020                     PROCULUS_Delay@tempo_ms:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644  0020                     ___lwdiv@divisor:	
  1645                           ; 2 bytes @ 0x0
  1646                           
  1647  0020                     strlen@s:	
  1648                           ; 2 bytes @ 0x0
  1649                           
  1650  0020                     my_delay_ms@time:	
  1651                           ; 2 bytes @ 0x0
  1652                           
  1653  0020                     my_delay_ms_WDT@time:	
  1654                           ; 4 bytes @ 0x0
  1655                           
  1656  0020                     USART_init@baudrate:	
  1657                           ; 4 bytes @ 0x0
  1658                           
  1659  0020                     ___lldiv@divisor:	
  1660                           ; 4 bytes @ 0x0
  1661                           
  1662  0020                     ___flge@ff1:	
  1663                           ; 4 bytes @ 0x0
  1664                           
  1665                           
  1666                           ; 4 bytes @ 0x0
  1667  0020                     	ds	1
  1668  0021                     ??_strcpy:	
  1669  0021                     ??_Send_To_MB:	
  1670                           ; 1 bytes @ 0x1
  1671                           
  1672  0021                     ?_USART_put_string:	
  1673                           ; 1 bytes @ 0x1
  1674                           
  1675  0021                     ??_EEPROM_Write_Byte:	
  1676                           ; 1 bytes @ 0x1
  1677                           
  1678  0021                     Send_To_MB@size:	
  1679                           ; 1 bytes @ 0x1
  1680                           
  1681  0021                     USART_put_string@vetor:	
  1682                           ; 1 bytes @ 0x1
  1683                           
  1684                           
  1685                           ; 2 bytes @ 0x1
  1686  0021                     	ds	1
  1687  0022                     ??_strlen:	
  1688  0022                     ??_captura:	
  1689                           ; 1 bytes @ 0x2
  1690                           
  1691  0022                     ??_PROCULUS_Delay:	
  1692                           ; 1 bytes @ 0x2
  1693                           
  1694  0022                     ??__Umul8_16:	
  1695                           ; 1 bytes @ 0x2
  1696                           
  1697  0022                     I2C_Master_Wait@tempo:	
  1698                           ; 1 bytes @ 0x2
  1699                           
  1700  0022                     EEPROM_Read_Byte@addr:	
  1701                           ; 1 bytes @ 0x2
  1702                           
  1703  0022                     strcpy@to:	
  1704                           ; 1 bytes @ 0x2
  1705                           
  1706  0022                     USART_to_Protocol@i:	
  1707                           ; 1 bytes @ 0x2
  1708                           
  1709  0022                     ___lwdiv@dividend:	
  1710                           ; 2 bytes @ 0x2
  1711                           
  1712  0022                     strlen@cp:	
  1713                           ; 2 bytes @ 0x2
  1714                           
  1715                           
  1716                           ; 2 bytes @ 0x2
  1717  0022                     	ds	1
  1718  0023                     ??_I2C_Master_Start:	
  1719  0023                     ?_I2C_Master_Write:	
  1720                           ; 1 bytes @ 0x3
  1721                           
  1722  0023                     ??_I2C_Master_Stop:	
  1723                           ; 1 bytes @ 0x3
  1724                           
  1725  0023                     ??_I2C_Master_RepeatedStart:	
  1726                           ; 1 bytes @ 0x3
  1727                           
  1728  0023                     ??_USART_put_string:	
  1729                           ; 1 bytes @ 0x3
  1730                           
  1731  0023                     ?_EEPROM_Read_String:	
  1732                           ; 1 bytes @ 0x3
  1733                           
  1734  0023                     ?_I2C_Master_Read:	
  1735                           ; 1 bytes @ 0x3
  1736                           
  1737  0023                     ?_EEPROM_Read_Integer:	
  1738                           ; 2 bytes @ 0x3
  1739                           
  1740  0023                     EEPROM_Write_Byte@addr:	
  1741                           ; 2 bytes @ 0x3
  1742                           
  1743  0023                     EEPROM_Read_String@dado:	
  1744                           ; 1 bytes @ 0x3
  1745                           
  1746  0023                     strcpy@cp:	
  1747                           ; 1 bytes @ 0x3
  1748                           
  1749  0023                     I2C_Master_Write@d:	
  1750                           ; 1 bytes @ 0x3
  1751                           
  1752  0023                     I2C_Master_Read@a:	
  1753                           ; 2 bytes @ 0x3
  1754                           
  1755  0023                     USART_put_string@ptr:	
  1756                           ; 2 bytes @ 0x3
  1757                           
  1758                           
  1759                           ; 2 bytes @ 0x3
  1760  0023                     	ds	1
  1761  0024                     ??_my_delay_ms_WDT:	
  1762  0024                     ??_USART_init:	
  1763                           ; 1 bytes @ 0x4
  1764                           
  1765  0024                     ??_EEPROM_Read_String:	
  1766                           ; 1 bytes @ 0x4
  1767                           
  1768  0024                     ??_my_delay_ms:	
  1769                           ; 1 bytes @ 0x4
  1770                           
  1771  0024                     ??___lwdiv:	
  1772                           ; 1 bytes @ 0x4
  1773                           
  1774  0024                     EEPROM_Write_Byte@last_GIE:	
  1775                           ; 1 bytes @ 0x4
  1776                           
  1777  0024                     USART_to_Protocol@usart_protocol:	
  1778                           ; 1 bytes @ 0x4
  1779                           
  1780  0024                     PROCULUS_Delay@i:	
  1781                           ; 1 bytes @ 0x4
  1782                           
  1783  0024                     __Umul8_16@product:	
  1784                           ; 2 bytes @ 0x4
  1785                           
  1786  0024                     ___lldiv@dividend:	
  1787                           ; 2 bytes @ 0x4
  1788                           
  1789  0024                     ___flge@ff2:	
  1790                           ; 4 bytes @ 0x4
  1791                           
  1792                           
  1793                           ; 4 bytes @ 0x4
  1794  0024                     	ds	1
  1795  0025                     ??_I2C_Master_Write:	
  1796  0025                     ??_I2C_Master_Read:	
  1797                           ; 1 bytes @ 0x5
  1798                           
  1799  0025                     ??_EEPROM_Read_Integer:	
  1800                           ; 1 bytes @ 0x5
  1801                           
  1802  0025                     ?_EEPROM_Write_Integer:	
  1803                           ; 1 bytes @ 0x5
  1804                           
  1805  0025                     ??_Send_Reply_OK:	
  1806                           ; 1 bytes @ 0x5
  1807                           
  1808  0025                     ?_EEPROM_Write_String:	
  1809                           ; 1 bytes @ 0x5
  1810                           
  1811  0025                     EEPROM_Write_String@dado:	
  1812                           ; 1 bytes @ 0x5
  1813                           
  1814  0025                     EEPROM_Read_String@addr:	
  1815                           ; 1 bytes @ 0x5
  1816                           
  1817  0025                     ___lwdiv@counter:	
  1818                           ; 1 bytes @ 0x5
  1819                           
  1820  0025                     EEPROM_Write_Integer@dado:	
  1821                           ; 1 bytes @ 0x5
  1822                           
  1823                           
  1824                           ; 2 bytes @ 0x5
  1825  0025                     	ds	1
  1826  0026                     ??_EEPROM_Write_String:	
  1827  0026                     EEPROM_Read_Integer@addr:	
  1828                           ; 1 bytes @ 0x6
  1829                           
  1830  0026                     EEPROM_Read_String@c:	
  1831                           ; 1 bytes @ 0x6
  1832                           
  1833  0026                     USART_init@i:	
  1834                           ; 1 bytes @ 0x6
  1835                           
  1836  0026                     ___lwdiv@quotient:	
  1837                           ; 1 bytes @ 0x6
  1838                           
  1839  0026                     __Umul8_16@word_mpld:	
  1840                           ; 2 bytes @ 0x6
  1841                           
  1842  0026                     my_delay_ms@i:	
  1843                           ; 2 bytes @ 0x6
  1844                           
  1845  0026                     my_delay_ms_WDT@i:	
  1846                           ; 4 bytes @ 0x6
  1847                           
  1848                           
  1849                           ; 4 bytes @ 0x6
  1850  0026                     	ds	1
  1851  0027                     ??_EEPROM_Write_Integer:	
  1852  0027                     EEPROM_Read_Integer@ptr:	
  1853                           ; 1 bytes @ 0x7
  1854                           
  1855  0027                     EEPROM_Write_String@addr:	
  1856                           ; 1 bytes @ 0x7
  1857                           
  1858  0027                     I2C_Master_Read@temp:	
  1859                           ; 1 bytes @ 0x7
  1860                           
  1861                           
  1862                           ; 2 bytes @ 0x7
  1863  0027                     	ds	1
  1864  0028                     ??___lldiv:	
  1865  0028                     ??___flge:	
  1866                           ; 1 bytes @ 0x8
  1867                           
  1868  0028                     __Umul8_16@multiplier:	
  1869                           ; 1 bytes @ 0x8
  1870                           
  1871  0028                     EEPROM_Read_Integer@result:	
  1872                           ; 1 bytes @ 0x8
  1873                           
  1874                           
  1875                           ; 2 bytes @ 0x8
  1876  0028                     	ds	1
  1877  0029                     ?_EEPROM_24C1025_Read_Buffer_USART:	
  1878  0029                     ?_EEPROM_24C1025_Read_Str:	
  1879                           ; 1 bytes @ 0x9
  1880                           
  1881  0029                     ?___flmul:	
  1882                           ; 1 bytes @ 0x9
  1883                           
  1884  0029                     EEPROM_24C1025_Read_Buffer_USART@mem_add:	
  1885                           ; 4 bytes @ 0x9
  1886                           
  1887  0029                     EEPROM_24C1025_Read_Str@mem_add:	
  1888                           ; 4 bytes @ 0x9
  1889                           
  1890  0029                     ___lldiv@quotient:	
  1891                           ; 4 bytes @ 0x9
  1892                           
  1893  0029                     ___flmul@b:	
  1894                           ; 4 bytes @ 0x9
  1895                           
  1896                           
  1897                           ; 4 bytes @ 0x9
  1898  0029                     	ds	1
  1899  002A                     ?_EEPROM_24C1025_Write_Buffer:	
  1900  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  1901                           ; 1 bytes @ 0xA
  1902                           
  1903  002A                     ?_EEPROM_24C1025_Write_Str:	
  1904                           ; 1 bytes @ 0xA
  1905                           
  1906  002A                     ?_ADC_Max_10Bits:	
  1907                           ; 1 bytes @ 0xA
  1908                           
  1909  002A                     EEPROM_Write_Integer@ptr:	
  1910                           ; 2 bytes @ 0xA
  1911                           
  1912  002A                     EEPROM_Read_Integer@i:	
  1913                           ; 1 bytes @ 0xA
  1914                           
  1915  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1916                           ; 1 bytes @ 0xA
  1917                           
  1918  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1919                           ; 4 bytes @ 0xA
  1920                           
  1921  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  1922                           ; 4 bytes @ 0xA
  1923                           
  1924                           
  1925                           ; 4 bytes @ 0xA
  1926  002A                     	ds	1
  1927  002B                     EEPROM_Write_Integer@addr:	
  1928                           
  1929                           ; 1 bytes @ 0xB
  1930  002B                     	ds	1
  1931  002C                     ??_ADC_Max_10Bits:	
  1932  002C                     EEPROM_Write_Integer@i:	
  1933                           ; 1 bytes @ 0xC
  1934                           
  1935                           
  1936                           ; 1 bytes @ 0xC
  1937  002C                     	ds	1
  1938  002D                     EEPROM_24C1025_Read_Buffer_USART@sizedata:	
  1939  002D                     EEPROM_24C1025_Read_Str@buffer:	
  1940                           ; 1 bytes @ 0xD
  1941                           
  1942  002D                     ADC_Max_10Bits@canal:	
  1943                           ; 1 bytes @ 0xD
  1944                           
  1945  002D                     ___lldiv@counter:	
  1946                           ; 1 bytes @ 0xD
  1947                           
  1948  002D                     ___flmul@a:	
  1949                           ; 1 bytes @ 0xD
  1950                           
  1951                           
  1952                           ; 4 bytes @ 0xD
  1953  002D                     	ds	1
  1954  002E                     ??_EEPROM_24C1025_Read_Str:	
  1955  002E                     ?_I2C_Master_Init:	
  1956                           ; 1 bytes @ 0xE
  1957                           
  1958  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1959                           ; 1 bytes @ 0xE
  1960                           
  1961  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  1962                           ; 1 bytes @ 0xE
  1963                           
  1964  002E                     EEPROM_24C1025_Read_Buffer_USART@data:	
  1965                           ; 1 bytes @ 0xE
  1966                           
  1967  002E                     EEPROM_24C1025_Write_Str@data:	
  1968                           ; 1 bytes @ 0xE
  1969                           
  1970  002E                     ADC_Max_10Bits@Temp:	
  1971                           ; 1 bytes @ 0xE
  1972                           
  1973  002E                     I2C_Master_Init@c:	
  1974                           ; 2 bytes @ 0xE
  1975                           
  1976                           
  1977                           ; 4 bytes @ 0xE
  1978  002E                     	ds	1
  1979  002F                     ??_EEPROM_24C1025_Read_Buffer_USART:	
  1980  002F                     ??_EEPROM_24C1025_Write_Str:	
  1981                           ; 1 bytes @ 0xF
  1982                           
  1983  002F                     EEPROM_24C1025_Read_Buffer@data:	
  1984                           ; 1 bytes @ 0xF
  1985                           
  1986  002F                     EEPROM_24C1025_Write_Buffer@data:	
  1987                           ; 1 bytes @ 0xF
  1988                           
  1989                           
  1990                           ; 2 bytes @ 0xF
  1991  002F                     	ds	1
  1992  0030                     ??_EEPROM_24C1025_Read_Buffer:	
  1993  0030                     EEPROM_24C1025_Read_Str@cnt:	
  1994                           ; 1 bytes @ 0x10
  1995                           
  1996  0030                     ADC_Max_10Bits@value:	
  1997                           ; 1 bytes @ 0x10
  1998                           
  1999                           
  2000                           ; 2 bytes @ 0x10
  2001  0030                     	ds	1
  2002  0031                     ??_EEPROM_24C1025_Write_Buffer:	
  2003  0031                     ??___flmul:	
  2004                           ; 1 bytes @ 0x11
  2005                           
  2006  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  2007                           ; 1 bytes @ 0x11
  2008                           
  2009  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  2010                           ; 1 bytes @ 0x11
  2011                           
  2012                           
  2013                           ; 1 bytes @ 0x11
  2014  0031                     	ds	1
  2015  0032                     ??_I2C_Master_Init:	
  2016  0032                     EEPROM_24C1025_Read_Buffer_USART@cnt_117:	
  2017                           ; 1 bytes @ 0x12
  2018                           
  2019  0032                     EEPROM_24C1025_Write_Str@range:	
  2020                           ; 1 bytes @ 0x12
  2021                           
  2022  0032                     EEPROM_24C1025_Read_Str@range:	
  2023                           ; 1 bytes @ 0x12
  2024                           
  2025  0032                     ADC_Max_10Bits@i:	
  2026                           ; 1 bytes @ 0x12
  2027                           
  2028                           
  2029                           ; 1 bytes @ 0x12
  2030  0032                     	ds	1
  2031  0033                     ?___xxtofl:	
  2032  0033                     EEPROM_24C1025_Write_Buffer@count:	
  2033                           ; 4 bytes @ 0x13
  2034                           
  2035  0033                     EEPROM_24C1025_Read_Buffer@cnt_108:	
  2036                           ; 1 bytes @ 0x13
  2037                           
  2038  0033                     EEPROM_24C1025_Read_Buffer_USART@chip_add:	
  2039                           ; 1 bytes @ 0x13
  2040                           
  2041  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2042                           ; 1 bytes @ 0x13
  2043                           
  2044  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2045                           ; 1 bytes @ 0x13
  2046                           
  2047  0033                     ___xxtofl@val:	
  2048                           ; 1 bytes @ 0x13
  2049                           
  2050                           
  2051                           ; 4 bytes @ 0x13
  2052  0033                     	ds	1
  2053  0034                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2054  0034                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2055                           ; 1 bytes @ 0x14
  2056                           
  2057  0034                     EEPROM_24C1025_Read_Buffer_USART@range:	
  2058                           ; 1 bytes @ 0x14
  2059                           
  2060                           
  2061                           ; 1 bytes @ 0x14
  2062  0034                     	ds	1
  2063  0035                     EEPROM_24C1025_Write_Buffer@range:	
  2064  0035                     EEPROM_24C1025_Read_Buffer@range:	
  2065                           ; 1 bytes @ 0x15
  2066                           
  2067  0035                     EEPROM_24C1025_Read_Buffer_USART@ctrl:	
  2068                           ; 1 bytes @ 0x15
  2069                           
  2070                           
  2071                           ; 1 bytes @ 0x15
  2072  0035                     	ds	1
  2073  0036                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2074  0036                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2075                           ; 1 bytes @ 0x16
  2076                           
  2077  0036                     ___flmul@sign:	
  2078                           ; 1 bytes @ 0x16
  2079                           
  2080                           
  2081                           ; 1 bytes @ 0x16
  2082  0036                     	ds	1
  2083  0037                     ?_EEPROM_24C1025_Write_Byte:	
  2084  0037                     ?_EEPROM_24C1025_Read_Byte:	
  2085                           ; 1 bytes @ 0x17
  2086                           
  2087  0037                     ??___xxtofl:	
  2088                           ; 1 bytes @ 0x17
  2089                           
  2090  0037                     ?_EEPROM_24C1025_Read_Int:	
  2091                           ; 1 bytes @ 0x17
  2092                           
  2093  0037                     ___flmul@aexp:	
  2094                           ; 2 bytes @ 0x17
  2095                           
  2096  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2097                           ; 1 bytes @ 0x17
  2098                           
  2099  0037                     EEPROM_24C1025_Read_Byte@mem_add:	
  2100                           ; 4 bytes @ 0x17
  2101                           
  2102  0037                     EEPROM_24C1025_Read_Int@mem_add:	
  2103                           ; 4 bytes @ 0x17
  2104                           
  2105                           
  2106                           ; 4 bytes @ 0x17
  2107  0037                     	ds	1
  2108  0038                     ___flmul@bexp:	
  2109                           
  2110                           ; 1 bytes @ 0x18
  2111  0038                     	ds	1
  2112  0039                     ___flmul@grs:	
  2113                           
  2114                           ; 4 bytes @ 0x19
  2115  0039                     	ds	2
  2116  003B                     ??_EEPROM_24C1025_Read_Byte:	
  2117  003B                     ??_EEPROM_24C1025_Read_Int:	
  2118                           ; 1 bytes @ 0x1B
  2119                           
  2120  003B                     EEPROM_24C1025_Write_Byte@data:	
  2121                           ; 1 bytes @ 0x1B
  2122                           
  2123  003B                     ___xxtofl@sign:	
  2124                           ; 1 bytes @ 0x1B
  2125                           
  2126                           
  2127                           ; 1 bytes @ 0x1B
  2128  003B                     	ds	1
  2129  003C                     ??_EEPROM_24C1025_Write_Byte:	
  2130  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2131                           ; 1 bytes @ 0x1C
  2132                           
  2133  003C                     EEPROM_24C1025_Read_Byte@chip_add:	
  2134                           ; 1 bytes @ 0x1C
  2135                           
  2136  003C                     ___xxtofl@exp:	
  2137                           ; 1 bytes @ 0x1C
  2138                           
  2139                           
  2140                           ; 1 bytes @ 0x1C
  2141  003C                     	ds	1
  2142  003D                     EEPROM_24C1025_Read_Byte@data:	
  2143  003D                     EEPROM_24C1025_Read_Int@chip_add:	
  2144                           ; 1 bytes @ 0x1D
  2145                           
  2146  003D                     ___flmul@prod:	
  2147                           ; 1 bytes @ 0x1D
  2148                           
  2149  003D                     ___xxtofl@arg:	
  2150                           ; 4 bytes @ 0x1D
  2151                           
  2152                           
  2153                           ; 4 bytes @ 0x1D
  2154  003D                     	ds	1
  2155  003E                     EEPROM_24C1025_Read_Int@data:	
  2156                           
  2157                           ; 2 bytes @ 0x1E
  2158  003E                     	ds	3
  2159  0041                     ?_ADC_Media_10bits:	
  2160  0041                     ?___fldiv:	
  2161                           ; 4 bytes @ 0x21
  2162                           
  2163  0041                     ___flmul@temp:	
  2164                           ; 4 bytes @ 0x21
  2165                           
  2166  0041                     ___fldiv@a:	
  2167                           ; 2 bytes @ 0x21
  2168                           
  2169                           
  2170                           ; 4 bytes @ 0x21
  2171  0041                     	ds	2
  2172  0043                     ?___fltol:	
  2173  0043                     ___fltol@f1:	
  2174                           ; 4 bytes @ 0x23
  2175                           
  2176                           
  2177                           ; 4 bytes @ 0x23
  2178  0043                     	ds	2
  2179  0045                     ??_ADC_Media_10bits:	
  2180  0045                     ___fldiv@b:	
  2181                           ; 1 bytes @ 0x25
  2182                           
  2183                           
  2184                           ; 4 bytes @ 0x25
  2185  0045                     	ds	1
  2186  0046                     ADC_Media_10bits@canal:	
  2187                           
  2188                           ; 1 bytes @ 0x26
  2189  0046                     	ds	1
  2190  0047                     ??___fltol:	
  2191  0047                     ADC_Media_10bits@value:	
  2192                           ; 1 bytes @ 0x27
  2193                           
  2194                           
  2195                           ; 2 bytes @ 0x27
  2196  0047                     	ds	2
  2197  0049                     ??___fldiv:	
  2198  0049                     ADC_Media_10bits@i:	
  2199                           ; 1 bytes @ 0x29
  2200                           
  2201                           
  2202                           ; 1 bytes @ 0x29
  2203  0049                     	ds	1
  2204  004A                     ?___fladd:	
  2205  004A                     ___fladd@b:	
  2206                           ; 4 bytes @ 0x2A
  2207                           
  2208                           
  2209                           ; 4 bytes @ 0x2A
  2210  004A                     	ds	2
  2211  004C                     ___fltol@sign1:	
  2212                           
  2213                           ; 1 bytes @ 0x2C
  2214  004C                     	ds	1
  2215  004D                     ___fltol@exp1:	
  2216                           
  2217                           ; 1 bytes @ 0x2D
  2218  004D                     	ds	1
  2219  004E                     ?_USART_put_int:	
  2220  004E                     ?_EEPROM_24C1025_Write_Int:	
  2221                           ; 1 bytes @ 0x2E
  2222                           
  2223  004E                     USART_put_int@value:	
  2224                           ; 1 bytes @ 0x2E
  2225                           
  2226  004E                     EEPROM_24C1025_Write_Int@mem_add:	
  2227                           ; 2 bytes @ 0x2E
  2228                           
  2229  004E                     ___fladd@a:	
  2230                           ; 4 bytes @ 0x2E
  2231                           
  2232  004E                     ___fldiv@rem:	
  2233                           ; 4 bytes @ 0x2E
  2234                           
  2235                           
  2236                           ; 4 bytes @ 0x2E
  2237  004E                     	ds	2
  2238  0050                     ??_USART_put_int:	
  2239                           
  2240                           ; 1 bytes @ 0x30
  2241  0050                     	ds	1
  2242  0051                     USART_put_int@dado:	
  2243                           
  2244                           ; 1 bytes @ 0x31
  2245  0051                     	ds	1
  2246  0052                     ?_PROCULUS_Control_Register_Write:	
  2247  0052                     ?_PROCULUS_VP_Write:	
  2248                           ; 1 bytes @ 0x32
  2249                           
  2250  0052                     ??___fladd:	
  2251                           ; 1 bytes @ 0x32
  2252                           
  2253  0052                     PROCULUS_Control_Register_Write@size:	
  2254                           ; 1 bytes @ 0x32
  2255                           
  2256  0052                     ___fldiv@sign:	
  2257                           ; 1 bytes @ 0x32
  2258                           
  2259  0052                     EEPROM_24C1025_Write_Int@data:	
  2260                           ; 1 bytes @ 0x32
  2261                           
  2262  0052                     PROCULUS_VP_Write@vp:	
  2263                           ; 2 bytes @ 0x32
  2264                           
  2265                           
  2266                           ; 2 bytes @ 0x32
  2267  0052                     	ds	1
  2268  0053                     ??_PROCULUS_Control_Register_Write:	
  2269  0053                     ___fldiv@new_exp:	
  2270                           ; 1 bytes @ 0x33
  2271                           
  2272                           
  2273                           ; 2 bytes @ 0x33
  2274  0053                     	ds	1
  2275  0054                     ??_EEPROM_24C1025_Write_Int:	
  2276  0054                     PROCULUS_Control_Register_Write@vetor:	
  2277                           ; 1 bytes @ 0x34
  2278                           
  2279  0054                     PROCULUS_VP_Write@vetor:	
  2280                           ; 1 bytes @ 0x34
  2281                           
  2282                           
  2283                           ; 2 bytes @ 0x34
  2284  0054                     	ds	1
  2285  0055                     EEPROM_24C1025_Write_Int@chip_add:	
  2286  0055                     PROCULUS_Control_Register_Write@i:	
  2287                           ; 1 bytes @ 0x35
  2288                           
  2289  0055                     ___fldiv@grs:	
  2290                           ; 1 bytes @ 0x35
  2291                           
  2292                           
  2293                           ; 4 bytes @ 0x35
  2294  0055                     	ds	1
  2295  0056                     ?_PROCULUS_Show_Screen:	
  2296  0056                     ?_PROCULUS_Buzzer:	
  2297                           ; 1 bytes @ 0x36
  2298                           
  2299  0056                     PROCULUS_VP_Write@size:	
  2300                           ; 1 bytes @ 0x36
  2301                           
  2302  0056                     EEPROM_24C1025_Write_Int@local:	
  2303                           ; 1 bytes @ 0x36
  2304                           
  2305  0056                     PROCULUS_Buzzer@time_ms_x_10:	
  2306                           ; 2 bytes @ 0x36
  2307                           
  2308  0056                     PROCULUS_Show_Screen@screen:	
  2309                           ; 2 bytes @ 0x36
  2310                           
  2311                           
  2312                           ; 2 bytes @ 0x36
  2313  0056                     	ds	1
  2314  0057                     ??_PROCULUS_VP_Write:	
  2315                           
  2316                           ; 1 bytes @ 0x37
  2317  0057                     	ds	1
  2318  0058                     ?_Save_Log:	
  2319  0058                     ??_PROCULUS_Show_Screen:	
  2320                           ; 1 bytes @ 0x38
  2321                           
  2322  0058                     ??_PROCULUS_Buzzer:	
  2323                           ; 1 bytes @ 0x38
  2324                           
  2325  0058                     ?_EEPROM_24C1025_Fill_All:	
  2326                           ; 1 bytes @ 0x38
  2327                           
  2328  0058                     EEPROM_24C1025_Fill_All@value:	
  2329                           ; 1 bytes @ 0x38
  2330                           
  2331  0058                     Save_Log@add_datalog:	
  2332                           ; 2 bytes @ 0x38
  2333                           
  2334                           
  2335                           ; 4 bytes @ 0x38
  2336  0058                     	ds	1
  2337  0059                     PROCULUS_VP_Write@i:	
  2338  0059                     ___fldiv@bexp:	
  2339                           ; 1 bytes @ 0x39
  2340                           
  2341  0059                     PROCULUS_Buzzer@vetor:	
  2342                           ; 1 bytes @ 0x39
  2343                           
  2344  0059                     PROCULUS_Show_Screen@vetor:	
  2345                           ; 2 bytes @ 0x39
  2346                           
  2347                           
  2348                           ; 3 bytes @ 0x39
  2349  0059                     	ds	1
  2350  005A                     ?_PROCULUS_VP_Write_String:	
  2351  005A                     ??_EEPROM_24C1025_Fill_All:	
  2352                           ; 1 bytes @ 0x3A
  2353                           
  2354  005A                     EEPROM_24C1025_Fill_All@chip_add:	
  2355                           ; 1 bytes @ 0x3A
  2356                           
  2357  005A                     ___fladd@signs:	
  2358                           ; 1 bytes @ 0x3A
  2359                           
  2360  005A                     ___fldiv@aexp:	
  2361                           ; 1 bytes @ 0x3A
  2362                           
  2363  005A                     PROCULUS_VP_Write_String@vp:	
  2364                           ; 1 bytes @ 0x3A
  2365                           
  2366                           
  2367                           ; 2 bytes @ 0x3A
  2368  005A                     	ds	1
  2369  005B                     ___fladd@aexp:	
  2370  005B                     EEPROM_24C1025_Fill_All@mem_add:	
  2371                           ; 1 bytes @ 0x3B
  2372                           
  2373                           
  2374                           ; 4 bytes @ 0x3B
  2375  005B                     	ds	1
  2376  005C                     ??_Save_Log:	
  2377  005C                     PROCULUS_VP_Write_String@text:	
  2378                           ; 1 bytes @ 0x3C
  2379                           
  2380  005C                     ___fladd@bexp:	
  2381                           ; 1 bytes @ 0x3C
  2382                           
  2383                           
  2384                           ; 1 bytes @ 0x3C
  2385  005C                     	ds	1
  2386  005D                     ??_PROCULUS_VP_Write_String:	
  2387  005D                     ___fladd@grs:	
  2388                           ; 1 bytes @ 0x3D
  2389                           
  2390                           
  2391                           ; 1 bytes @ 0x3D
  2392  005D                     	ds	1
  2393  005E                     ?___flsub:	
  2394  005E                     ___flsub@a:	
  2395                           ; 4 bytes @ 0x3E
  2396                           
  2397                           
  2398                           ; 4 bytes @ 0x3E
  2399  005E                     	ds	1
  2400  005F                     ??_Decodify_Command:	
  2401                           
  2402                           ; 1 bytes @ 0x3F
  2403  005F                     	ds	3
  2404  0062                     ___flsub@b:	
  2405                           
  2406                           ; 4 bytes @ 0x42
  2407  0062                     	ds	4
  2408  0066                     ??_MediaPlacaVaccum:	
  2409  0066                     ??___flsub:	
  2410                           ; 1 bytes @ 0x46
  2411                           
  2412                           
  2413                           ; 1 bytes @ 0x46
  2414  0066                     	ds	4
  2415  006A                     ??_main:	
  2416                           
  2417                           ; 1 bytes @ 0x4A
  2418  006A                     	ds	3
  2419  006D                     main@reset:	
  2420                           
  2421                           ; 2 bytes @ 0x4D
  2422  006D                     	ds	2
  2423                           
  2424                           	psect	maintext
  2425  06BE                     __pmaintext:	
  2426 ;;
  2427 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2428 ;;
  2429 ;; *************** function _main *****************
  2430 ;; Defined at:
  2431 ;;		line 144 in file "SlaveLiofilizadorVer1.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  reset           2   77[BANK0 ] unsigned int 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : B00/0
  2442 ;;		On exit  : 300/100
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2445 ;;      Params:         0       0       0       0       0
  2446 ;;      Locals:         0       2       0       0       0
  2447 ;;      Temps:          0       3       0       0       0
  2448 ;;      Totals:         0       5       0       0       0
  2449 ;;Total ram usage:        5 bytes
  2450 ;; Hardware stack levels required when called:    7
  2451 ;; This function calls:
  2452 ;;		_ADC_init
  2453 ;;		_Decodify_Command
  2454 ;;		_EEPROM_Read_Integer
  2455 ;;		_EEPROM_Write_Integer
  2456 ;;		_I2C_Master_Init
  2457 ;;		_MediaPlacaVaccum
  2458 ;;		_USART_init
  2459 ;;		_my_delay_ms_WDT
  2460 ;; This function is called by:
  2461 ;;		Startup code after reset
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           
  2466                           ;psect for function _main
  2467  06BE                     _main:	
  2468                           
  2469                           ;SlaveLiofilizadorVer1.c: 145:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2470                           
  2471                           ;incstack = 0
  2472                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2473  06BE  3002               	movlw	2
  2474  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  2475  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  2476  06C1  00EC               	movwf	??_main+2
  2477  06C2  3004               	movlw	4
  2478  06C3  00EB               	movwf	??_main+1
  2479  06C4  30B9               	movlw	185
  2480  06C5  00EA               	movwf	??_main
  2481  06C6                     u7887:	
  2482  06C6  0BEA               	decfsz	??_main,f
  2483  06C7  2EC6               	goto	u7887
  2484  06C8  0BEB               	decfsz	??_main+1,f
  2485  06C9  2EC6               	goto	u7887
  2486  06CA  0BEC               	decfsz	??_main+2,f
  2487  06CB  2EC6               	goto	u7887
  2488  06CC  2ECD               	nop2
  2489                           
  2490                           ;SlaveLiofilizadorVer1.c: 146:      OSCCONbits.IRCF0=1;
  2491  06CD  1683               	bsf	3,5	;RP0=1, select bank1
  2492  06CE  1303               	bcf	3,6	;RP1=0, select bank1
  2493  06CF  160F               	bsf	15,4	;volatile
  2494                           
  2495                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF1=1;
  2496  06D0  168F               	bsf	15,5	;volatile
  2497                           
  2498                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF2=1;
  2499  06D1  170F               	bsf	15,6	;volatile
  2500                           
  2501                           ;SlaveLiofilizadorVer1.c: 150:      PORTA=0;
  2502  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  2503  06D3  0185               	clrf	5	;volatile
  2504                           
  2505                           ;SlaveLiofilizadorVer1.c: 151:      PORTB=0;
  2506  06D4  0186               	clrf	6	;volatile
  2507                           
  2508                           ;SlaveLiofilizadorVer1.c: 152:      PORTC=0;
  2509  06D5  0187               	clrf	7	;volatile
  2510                           
  2511                           ;SlaveLiofilizadorVer1.c: 153:      PORTE=0;
  2512  06D6  0189               	clrf	9	;volatile
  2513                           
  2514                           ;SlaveLiofilizadorVer1.c: 154:      TRISA=0b11101111;
  2515  06D7  30EF               	movlw	239
  2516  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  2517  06D9  0085               	movwf	5	;volatile
  2518                           
  2519                           ;SlaveLiofilizadorVer1.c: 155:      TRISB=0b00001111;
  2520  06DA  300F               	movlw	15
  2521  06DB  0086               	movwf	6	;volatile
  2522                           
  2523                           ;SlaveLiofilizadorVer1.c: 156:      TRISC=0xF0;
  2524  06DC  30F0               	movlw	240
  2525  06DD  0087               	movwf	7	;volatile
  2526                           
  2527                           ;SlaveLiofilizadorVer1.c: 157:      TRISE=0xFF;
  2528  06DE  30FF               	movlw	255
  2529  06DF  0089               	movwf	9	;volatile
  2530                           
  2531                           ;SlaveLiofilizadorVer1.c: 159:      ANSEL=0x00000011;
  2532  06E0  3011               	movlw	17
  2533  06E1  1703               	bsf	3,6	;RP1=1, select bank3
  2534  06E2  0088               	movwf	8	;volatile
  2535                           
  2536                           ;SlaveLiofilizadorVer1.c: 160:      ANSELH=0x00000000;
  2537  06E3  0189               	clrf	9	;volatile
  2538                           
  2539                           ;SlaveLiofilizadorVer1.c: 162:      OPTION_REGbits.nRBPU=0;
  2540  06E4  1303               	bcf	3,6	;RP1=0, select bank1
  2541  06E5  1381               	bcf	1,7	;volatile
  2542                           
  2543                           ;SlaveLiofilizadorVer1.c: 163:      WPUB=0b00001111;
  2544  06E6  300F               	movlw	15
  2545  06E7  0095               	movwf	21	;volatile
  2546                           
  2547                           ;SlaveLiofilizadorVer1.c: 166:      PORTBbits.RB7 =1;
  2548  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  2549  06E9  1786               	bsf	6,7	;volatile
  2550                           
  2551                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB6 =1;
  2552  06EA  1706               	bsf	6,6	;volatile
  2553                           
  2554                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB5=1;
  2555  06EB  1686               	bsf	6,5	;volatile
  2556                           
  2557                           ;SlaveLiofilizadorVer1.c: 169:      my_delay_ms_WDT(1000);
  2558  06EC  3000               	movlw	0
  2559  06ED  00A3               	movwf	my_delay_ms_WDT@time+3
  2560  06EE  3000               	movlw	0
  2561  06EF  00A2               	movwf	my_delay_ms_WDT@time+2
  2562  06F0  3003               	movlw	3
  2563  06F1  00A1               	movwf	my_delay_ms_WDT@time+1
  2564  06F2  30E8               	movlw	232
  2565  06F3  00A0               	movwf	my_delay_ms_WDT@time
  2566  06F4  160A  158A  24EB  120A  118A  	fcall	_my_delay_ms_WDT
  2567                           
  2568                           ;SlaveLiofilizadorVer1.c: 171:      OPTION_REGbits.T0CS=0;
  2569  06F9  1683               	bsf	3,5	;RP0=1, select bank1
  2570  06FA  1281               	bcf	1,5	;volatile
  2571                           
  2572                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.PSA =1;
  2573  06FB  1581               	bsf	1,3	;volatile
  2574                           
  2575                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PS0 =1;
  2576  06FC  1401               	bsf	1,0	;volatile
  2577                           
  2578                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS1 =1;
  2579  06FD  1481               	bsf	1,1	;volatile
  2580                           
  2581                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS2 =1;
  2582  06FE  1501               	bsf	1,2	;volatile
  2583                           
  2584                           ;SlaveLiofilizadorVer1.c: 176:      INTCONbits.T0IE =0;
  2585  06FF  128B               	bcf	11,5	;volatile
  2586                           
  2587                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.INTE =0;
  2588  0700  120B               	bcf	11,4	;volatile
  2589                           
  2590                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.GIE =1;
  2591  0701  178B               	bsf	11,7	;volatile
  2592                           
  2593                           ;SlaveLiofilizadorVer1.c: 181:      INTCONbits.PEIE = 1;
  2594  0702  170B               	bsf	11,6	;volatile
  2595                           
  2596                           ;SlaveLiofilizadorVer1.c: 182:      T1CKPS0=1;
  2597  0703  1283               	bcf	3,5	;RP0=0, select bank0
  2598  0704  1610               	bsf	16,4	;volatile
  2599                           
  2600                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS1=1;
  2601  0705  1690               	bsf	16,5	;volatile
  2602                           
  2603                           ;SlaveLiofilizadorVer1.c: 184:      TMR1CS=0;
  2604  0706  1090               	bcf	16,1	;volatile
  2605                           
  2606                           ;SlaveLiofilizadorVer1.c: 185:      TMR1IE=1;
  2607  0707  1683               	bsf	3,5	;RP0=1, select bank1
  2608  0708  140C               	bsf	12,0	;volatile
  2609                           
  2610                           ;SlaveLiofilizadorVer1.c: 186:      T1CON=1;
  2611  0709  3001               	movlw	1
  2612  070A  1283               	bcf	3,5	;RP0=0, select bank0
  2613  070B  0090               	movwf	16	;volatile
  2614  070C  0064               	clrwdt	;# 
  2615                           
  2616                           ;SlaveLiofilizadorVer1.c: 193:      ADC_init();
  2617  070D  160A  158A  218C  120A  118A  	fcall	_ADC_init
  2618                           
  2619                           ;SlaveLiofilizadorVer1.c: 194:      I2C_Master_Init(100000);
  2620  0712  3000               	movlw	0
  2621  0713  00B1               	movwf	I2C_Master_Init@c+3
  2622  0714  3001               	movlw	1
  2623  0715  00B0               	movwf	I2C_Master_Init@c+2
  2624  0716  3086               	movlw	134
  2625  0717  00AF               	movwf	I2C_Master_Init@c+1
  2626  0718  30A0               	movlw	160
  2627  0719  00AE               	movwf	I2C_Master_Init@c
  2628  071A  160A  158A  23E9  120A  118A  	fcall	_I2C_Master_Init
  2629                           
  2630                           ;SlaveLiofilizadorVer1.c: 195:      USART_init(115200);
  2631  071F  3000               	movlw	0
  2632  0720  1283               	bcf	3,5	;RP0=0, select bank0
  2633  0721  00A3               	movwf	USART_init@baudrate+3
  2634  0722  3001               	movlw	1
  2635  0723  00A2               	movwf	USART_init@baudrate+2
  2636  0724  30C2               	movlw	194
  2637  0725  00A1               	movwf	USART_init@baudrate+1
  2638  0726  3000               	movlw	0
  2639  0727  00A0               	movwf	USART_init@baudrate
  2640  0728  160A  158A  25D3  120A  118A  	fcall	_USART_init
  2641                           
  2642                           ;SlaveLiofilizadorVer1.c: 201:      {;SlaveLiofilizadorVer1.c: 202:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 203:      reset=EEPROM_Read_Integer(0x10);
  2643  072D  3010               	movlw	16
  2644  072E  160A  118A  2002  120A  118A  	fcall	_EEPROM_Read_Integer
  2645  0733  0824               	movf	?_EEPROM_Read_Integer+1,w
  2646  0734  00EE               	movwf	main@reset+1
  2647  0735  0823               	movf	?_EEPROM_Read_Integer,w
  2648  0736  00ED               	movwf	main@reset
  2649                           
  2650                           ;SlaveLiofilizadorVer1.c: 204:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2651  0737  0A6D               	incf	main@reset,w
  2652  0738  1D03               	skipz
  2653  0739  2F46               	goto	l7474
  2654  073A  0A6E               	incf	main@reset+1,w
  2655  073B  1D03               	btfss	3,2
  2656  073C  2F46               	goto	l7474
  2657  073D  3000               	movlw	0
  2658  073E  00A5               	movwf	EEPROM_Write_Integer@dado
  2659  073F  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2660  0740  3010               	movlw	16
  2661  0741  160A  158A  241A  120A  118A  	fcall	_EEPROM_Write_Integer
  2662  0746                     l7474:	
  2663                           
  2664                           ;SlaveLiofilizadorVer1.c: 205:      reset++;
  2665  0746  3001               	movlw	1
  2666  0747  1283               	bcf	3,5	;RP0=0, select bank0
  2667  0748  1303               	bcf	3,6	;RP1=0, select bank0
  2668  0749  07ED               	addwf	main@reset,f
  2669  074A  1803               	skipnc
  2670  074B  0AEE               	incf	main@reset+1,f
  2671  074C  3000               	movlw	0
  2672  074D  07EE               	addwf	main@reset+1,f
  2673                           
  2674                           ;SlaveLiofilizadorVer1.c: 206:      EEPROM_Write_Integer(0x10,reset);
  2675  074E  086E               	movf	main@reset+1,w
  2676  074F  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2677  0750  086D               	movf	main@reset,w
  2678  0751  00A5               	movwf	EEPROM_Write_Integer@dado
  2679  0752  3010               	movlw	16
  2680  0753  160A  158A  241A  120A  118A  	fcall	_EEPROM_Write_Integer
  2681                           
  2682                           ;SlaveLiofilizadorVer1.c: 207:      };SlaveLiofilizadorVer1.c: 211:      Delay_Led_Tmr0 
      +                          = 0;
  2683  0758  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2684  0759  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2685                           
  2686                           ;SlaveLiofilizadorVer1.c: 212:      Delay_Led_Usart = 0;
  2687  075A  1683               	bsf	3,5	;RP0=1, select bank1
  2688  075B  1303               	bcf	3,6	;RP1=0, select bank1
  2689  075C  01B2               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2690  075D  01B3               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2691                           
  2692                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Memory = 0;
  2693  075E  01B4               	clrf	_Delay_Led_Memory^(0+128)	;volatile
  2694  075F  01B5               	clrf	(_Delay_Led_Memory+1)^(0+128)	;volatile
  2695                           
  2696                           ;SlaveLiofilizadorVer1.c: 215:      segundo=0;
  2697  0760  01FD               	clrf	_segundo	;volatile
  2698                           
  2699                           ;SlaveLiofilizadorVer1.c: 216:      hora=0;
  2700  0761  01FC               	clrf	_hora	;volatile
  2701                           
  2702                           ;SlaveLiofilizadorVer1.c: 217:      PORTCbits.RC0=0;
  2703  0762  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0763  1007               	bcf	7,0	;volatile
  2705                           
  2706                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC1=0;
  2707  0764  1087               	bcf	7,1	;volatile
  2708                           
  2709                           ;SlaveLiofilizadorVer1.c: 219:      PORTAbits.RA2=0;
  2710  0765  1105               	bcf	5,2	;volatile
  2711                           
  2712                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA3=0;
  2713  0766  1185               	bcf	5,3	;volatile
  2714                           
  2715                           ;SlaveLiofilizadorVer1.c: 223:      Board_Number=(((0x0F)&(~PORTB)));
  2716  0767  0906               	comf	6,w	;volatile
  2717  0768  390F               	andlw	15
  2718  0769  00EA               	movwf	??_main
  2719  076A  086A               	movf	??_main,w
  2720  076B  1683               	bsf	3,5	;RP0=1, select bank1
  2721  076C  00B8               	movwf	_Board_Number^(0+128)
  2722                           
  2723                           ;SlaveLiofilizadorVer1.c: 224:      canal=1;
  2724  076D  01B9               	clrf	_canal^(0+128)
  2725  076E  0AB9               	incf	_canal^(0+128),f
  2726                           
  2727                           ;SlaveLiofilizadorVer1.c: 232:      statuspower.flag_global_vacuo=0;
  2728  076F  113A               	bcf	_statuspower^(0+128),2
  2729  0770                     l7500:	
  2730                           
  2731                           ;SlaveLiofilizadorVer1.c: 246:           {;SlaveLiofilizadorVer1.c: 248:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2732  0770  17BB               	bsf	_generic_status^(0+128),7
  2733                           
  2734                           ;SlaveLiofilizadorVer1.c: 274:          if(++canal==2) canal=0;
  2735  0771  3001               	movlw	1
  2736  0772  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0773  00EA               	movwf	??_main
  2738  0774  086A               	movf	??_main,w
  2739  0775  1683               	bsf	3,5	;RP0=1, select bank1
  2740  0776  07B9               	addwf	_canal^(0+128),f
  2741  0777  3002               	movlw	2
  2742  0778  0639               	xorwf	_canal^(0+128),w
  2743  0779  1903               	btfsc	3,2
  2744  077A  01B9               	clrf	_canal^(0+128)
  2745                           
  2746                           ;SlaveLiofilizadorVer1.c: 275:          MediaPlacaVaccum(canal);
  2747  077B  0839               	movf	_canal^(0+128),w
  2748  077C  120A  158A  2569  120A  118A  	fcall	_MediaPlacaVaccum
  2749                           
  2750                           ;SlaveLiofilizadorVer1.c: 283:          if(generic_status.flag_usart_rx==1)
  2751  0781  1683               	bsf	3,5	;RP0=1, select bank1
  2752  0782  1C3B               	btfss	_generic_status^(0+128),0
  2753  0783  2F70               	goto	l7500
  2754                           
  2755                           ;SlaveLiofilizadorVer1.c: 284:             {;SlaveLiofilizadorVer1.c: 285:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2756  0784  1283               	bcf	3,5	;RP0=0, select bank2
  2757  0785  1703               	bsf	3,6	;RP1=1, select bank2
  2758  0786  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2759  0787  1683               	bsf	3,5	;RP0=1, select bank1
  2760  0788  1303               	bcf	3,6	;RP1=0, select bank1
  2761  0789  00AF               	movwf	(_header+1)^(0+128)
  2762  078A  1283               	bcf	3,5	;RP0=0, select bank2
  2763  078B  1703               	bsf	3,6	;RP1=1, select bank2
  2764  078C  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2765  078D  1683               	bsf	3,5	;RP0=1, select bank1
  2766  078E  1303               	bcf	3,6	;RP1=0, select bank1
  2767  078F  00AE               	movwf	_header^(0+128)
  2768                           
  2769                           ;SlaveLiofilizadorVer1.c: 286:             if(header==0xAABB)
  2770  0790  30BB               	movlw	187
  2771  0791  062E               	xorwf	_header^(0+128),w
  2772  0792  30AA               	movlw	170
  2773  0793  1903               	skipnz
  2774  0794  062F               	xorwf	(_header+1)^(0+128),w
  2775  0795  1D03               	btfss	3,2
  2776  0796  2F70               	goto	l7500
  2777                           
  2778                           ;SlaveLiofilizadorVer1.c: 287:                {;SlaveLiofilizadorVer1.c: 288:           
      +                               destino =usart_buffer[3];
  2779  0797  1283               	bcf	3,5	;RP0=0, select bank2
  2780  0798  1703               	bsf	3,6	;RP1=1, select bank2
  2781  0799  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2782  079A  1303               	bcf	3,6	;RP1=0, select bank0
  2783  079B  00EA               	movwf	??_main
  2784  079C  086A               	movf	??_main,w
  2785  079D  1683               	bsf	3,5	;RP0=1, select bank1
  2786  079E  00B7               	movwf	_destino^(0+128)
  2787                           
  2788                           ;SlaveLiofilizadorVer1.c: 289:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2789  079F  0837               	movf	_destino^(0+128),w
  2790  07A0  0638               	xorwf	_Board_Number^(0+128),w
  2791  07A1  1D03               	btfss	3,2
  2792  07A2  0A37               	incf	_destino^(0+128),w
  2793  07A3  1D03               	btfss	3,2
  2794  07A4  2F70               	goto	l7500
  2795                           
  2796                           ;SlaveLiofilizadorVer1.c: 290:                       {;SlaveLiofilizadorVer1.c: 291:    
      +                                             Delay_Led_Usart=20;
  2797  07A5  3014               	movlw	20
  2798  07A6  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2799  07A7  3000               	movlw	0
  2800  07A8  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2801                           
  2802                           ;SlaveLiofilizadorVer1.c: 292:                       Decodify_Command();
  2803  07A9  120A  118A  2037  120A  118A  	fcall	_Decodify_Command
  2804                           
  2805                           ;SlaveLiofilizadorVer1.c: 293:                       generic_status.flag_usart_rx=0;
  2806  07AE  1683               	bsf	3,5	;RP0=1, select bank1
  2807  07AF  1303               	bcf	3,6	;RP1=0, select bank1
  2808  07B0  103B               	bcf	_generic_status^(0+128),0
  2809                           
  2810                           ;SlaveLiofilizadorVer1.c: 296:             }
  2811  07B1  2F70               	goto	l7500
  2812  07B2                     __end_of_main:	
  2813                           
  2814                           	psect	text1
  2815  1DD3                     __ptext1:	
  2816 ;; *************** function _USART_init *****************
  2817 ;; Defined at:
  2818 ;;		line 18 in file "usart.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  baudrate        4    0[BANK0 ] unsigned long 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  i               1    6[BANK0 ] unsigned char 
  2823 ;;  erro            1    0        unsigned char 
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg, status,2, status,0
  2828 ;; Tracked objects:
  2829 ;;		On entry : 300/0
  2830 ;;		On exit  : 300/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2833 ;;      Params:         0       4       0       0       0
  2834 ;;      Locals:         0       2       0       0       0
  2835 ;;      Temps:          0       1       0       0       0
  2836 ;;      Totals:         0       7       0       0       0
  2837 ;;Total ram usage:        7 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; Hardware stack levels required when called:    1
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_main
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           
  2848                           ;psect for function _USART_init
  2849  1DD3                     _USART_init:	
  2850                           
  2851                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  2852                           
  2853                           ;incstack = 0
  2854                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  2855  1DD3  304B               	movlw	75
  2856  1DD4  0621               	xorwf	USART_init@baudrate+1,w
  2857  1DD5  0420               	iorwf	USART_init@baudrate,w
  2858  1DD6  0422               	iorwf	USART_init@baudrate+2,w
  2859  1DD7  0423               	iorwf	USART_init@baudrate+3,w
  2860  1DD8  1D03               	btfss	3,2
  2861  1DD9  2DE4               	goto	l7114
  2862                           
  2863                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  2864  1DDA  1798               	bsf	24,7	;volatile
  2865                           
  2866                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  2867  1DDB  1618               	bsf	24,4	;volatile
  2868                           
  2869                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  2870  1DDC  1683               	bsf	3,5	;RP0=1, select bank1
  2871  1DDD  1518               	bsf	24,2	;volatile
  2872                           
  2873                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  2874  1DDE  1218               	bcf	24,4	;volatile
  2875                           
  2876                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  2877  1DDF  1318               	bcf	24,6	;volatile
  2878                           
  2879                           ;usart.c: 32:           SPBRG =12;
  2880  1DE0  300C               	movlw	12
  2881  1DE1  0099               	movwf	25	;volatile
  2882                           
  2883                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  2884  1DE2  170B               	bsf	11,6	;volatile
  2885  1DE3  2DFD               	goto	L1
  2886  1DE4                     l7114:	
  2887                           ;usart.c: 35:           }
  2888                           
  2889                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  2890                           
  2891  1DE4  30C2               	movlw	194
  2892  1DE5  0621               	xorwf	USART_init@baudrate+1,w
  2893  1DE6  1D03               	skipz
  2894  1DE7  2DFE               	goto	l7134
  2895  1DE8  0322               	decf	USART_init@baudrate+2,w
  2896  1DE9  0420               	iorwf	USART_init@baudrate,w
  2897  1DEA  0423               	iorwf	USART_init@baudrate+3,w
  2898  1DEB  1D03               	btfss	3,2
  2899  1DEC  2DFE               	goto	l7134
  2900                           
  2901                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  2902  1DED  3010               	movlw	16
  2903  1DEE  1683               	bsf	3,5	;RP0=1, select bank1
  2904  1DEF  0099               	movwf	25	;volatile
  2905                           
  2906                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  2907  1DF0  1703               	bsf	3,6	;RP1=1, select bank3
  2908  1DF1  1587               	bsf	7,3	;volatile
  2909                           
  2910                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  2911  1DF2  1303               	bcf	3,6	;RP1=0, select bank1
  2912  1DF3  1518               	bsf	24,2	;volatile
  2913                           
  2914                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  2915  1DF4  1283               	bcf	3,5	;RP0=0, select bank0
  2916  1DF5  1798               	bsf	24,7	;volatile
  2917                           
  2918                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  2919  1DF6  1683               	bsf	3,5	;RP0=1, select bank1
  2920  1DF7  1218               	bcf	24,4	;volatile
  2921                           
  2922                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  2923  1DF8  1318               	bcf	24,6	;volatile
  2924                           
  2925                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  2926  1DF9  1283               	bcf	3,5	;RP0=0, select bank0
  2927  1DFA  1618               	bsf	24,4	;volatile
  2928                           
  2929                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  2930  1DFB  170B               	bsf	11,6	;volatile
  2931                           
  2932                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  2933  1DFC  1683               	bsf	3,5	;RP0=1, select bank1
  2934  1DFD                     L1:	
  2935  1DFD  168C               	bsf	12,5	;volatile
  2936  1DFE                     l7134:	
  2937                           
  2938                           ;usart.c: 68:      TRISC6= 1;
  2939  1DFE  1683               	bsf	3,5	;RP0=1, select bank1
  2940  1DFF  1707               	bsf	7,6	;volatile
  2941                           
  2942                           ;usart.c: 69:      TRISC7= 1;
  2943  1E00  1787               	bsf	7,7	;volatile
  2944                           
  2945                           ;usart.c: 71:      CREN=0;
  2946  1E01  1283               	bcf	3,5	;RP0=0, select bank0
  2947  1E02  1218               	bcf	24,4	;volatile
  2948                           
  2949                           ;usart.c: 72:      CREN=1;
  2950  1E03  1618               	bsf	24,4	;volatile
  2951                           
  2952                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  2953  1E04  01A6               	clrf	USART_init@i
  2954  1E05                     l7148:	
  2955  1E05  081A               	movf	26,w	;volatile
  2956  1E06  3001               	movlw	1
  2957  1E07  00A4               	movwf	??_USART_init
  2958  1E08  0824               	movf	??_USART_init,w
  2959  1E09  07A6               	addwf	USART_init@i,f
  2960  1E0A  300F               	movlw	15
  2961  1E0B  0226               	subwf	USART_init@i,w
  2962  1E0C  1803               	btfsc	3,0
  2963  1E0D  0008               	return
  2964  1E0E  2E05               	goto	l7148
  2965  1E0F                     __end_of_USART_init:	
  2966                           
  2967                           	psect	text2
  2968  0D69                     __ptext2:	
  2969 ;; *************** function _MediaPlacaVaccum *****************
  2970 ;; Defined at:
  2971 ;;		line 740 in file "SlaveLiofilizadorVer1.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  canal           1    wreg     unsigned char 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  canal           1    4[BANK1 ] unsigned char 
  2976 ;;  Temp            4    5[BANK1 ] float 
  2977 ;;  Valor           4    0[BANK1 ] float 
  2978 ;;  i               2    9[BANK1 ] unsigned int 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 300/100
  2985 ;;		On exit  : 200/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2988 ;;      Params:         0       0       0       0       0
  2989 ;;      Locals:         0       0      11       0       0
  2990 ;;      Temps:          0       4       0       0       0
  2991 ;;      Totals:         0       4      11       0       0
  2992 ;;Total ram usage:       15 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    3
  2995 ;; This function calls:
  2996 ;;		_ADC_Max_10Bits
  2997 ;;		_ADC_Media_10bits
  2998 ;;		_Package_Usart_is_for_me
  2999 ;;		___fladd
  3000 ;;		___fldiv
  3001 ;;		___flge
  3002 ;;		___flmul
  3003 ;;		___flsub
  3004 ;;		___xxtofl
  3005 ;;		_my_delay_ms
  3006 ;; This function is called by:
  3007 ;;		_main
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           
  3012                           ;psect for function _MediaPlacaVaccum
  3013  0D69                     _MediaPlacaVaccum:	
  3014                           
  3015                           ;incstack = 0
  3016                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3017                           ;MediaPlacaVaccum@canal stored from wreg
  3018  0D69  00E1               	movwf	MediaPlacaVaccum@canal^(0+128)
  3019                           
  3020                           ;SlaveLiofilizadorVer1.c: 741:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 742:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 746:      if(canal==0)
  3021  0D6A  0861               	movf	MediaPlacaVaccum@canal^(0+128),w
  3022  0D6B  1D03               	btfss	3,2
  3023  0D6C  2F0F               	goto	l441
  3024                           
  3025                           ;SlaveLiofilizadorVer1.c: 747:        {;SlaveLiofilizadorVer1.c: 748:        ADCON1bits.
      +                          VCFG0=1;
  3026  0D6D  161F               	bsf	31,4	;volatile
  3027                           
  3028                           ;SlaveLiofilizadorVer1.c: 749:        ADCON1bits.VCFG1=1;
  3029  0D6E  169F               	bsf	31,5	;volatile
  3030                           
  3031                           ;SlaveLiofilizadorVer1.c: 750:        ADCON0bits.CHS=canal;
  3032  0D6F  0861               	movf	MediaPlacaVaccum@canal^(0+128),w
  3033  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  3034  0D71  00E6               	movwf	??_MediaPlacaVaccum
  3035  0D72  0DE6               	rlf	??_MediaPlacaVaccum,f
  3036  0D73  0DE6               	rlf	??_MediaPlacaVaccum,f
  3037  0D74  081F               	movf	31,w	;volatile
  3038  0D75  0666               	xorwf	??_MediaPlacaVaccum,w
  3039  0D76  39C3               	andlw	-61
  3040  0D77  0666               	xorwf	??_MediaPlacaVaccum,w
  3041  0D78  009F               	movwf	31	;volatile
  3042                           
  3043                           ;SlaveLiofilizadorVer1.c: 751:        my_delay_ms(1);
  3044  0D79  3000               	movlw	0
  3045  0D7A  00A3               	movwf	my_delay_ms@time+3
  3046  0D7B  3000               	movlw	0
  3047  0D7C  00A2               	movwf	my_delay_ms@time+2
  3048  0D7D  3000               	movlw	0
  3049  0D7E  00A1               	movwf	my_delay_ms@time+1
  3050  0D7F  3001               	movlw	1
  3051  0D80  00A0               	movwf	my_delay_ms@time
  3052  0D81  160A  158A  24B4  120A  158A  	fcall	_my_delay_ms
  3053                           
  3054                           ;SlaveLiofilizadorVer1.c: 752:        Temp=0;
  3055  0D86  3000               	movlw	0
  3056  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  3057  0D88  00E5               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3058  0D89  3000               	movlw	0
  3059  0D8A  00E4               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3060  0D8B  3000               	movlw	0
  3061  0D8C  00E3               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3062  0D8D  3000               	movlw	0
  3063  0D8E  00E2               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3064                           
  3065                           ;SlaveLiofilizadorVer1.c: 754:        for(i=1;i<15;i++)
  3066  0D8F  3001               	movlw	1
  3067  0D90  00E6               	movwf	MediaPlacaVaccum@i^(0+128)
  3068  0D91  3000               	movlw	0
  3069  0D92  00E7               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3070  0D93                     l7170:	
  3071                           
  3072                           ;SlaveLiofilizadorVer1.c: 755:            {;SlaveLiofilizadorVer1.c: 756:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3073  0D93  0861               	movf	MediaPlacaVaccum@canal^(0+128),w
  3074  0D94  160A  158A  26E1  120A  158A  	fcall	_ADC_Media_10bits
  3075  0D99  0844               	movf	?_ADC_Media_10bits+3,w
  3076  0D9A  00CD               	movwf	___fladd@b+3
  3077  0D9B  0843               	movf	?_ADC_Media_10bits+2,w
  3078  0D9C  00CC               	movwf	___fladd@b+2
  3079  0D9D  0842               	movf	?_ADC_Media_10bits+1,w
  3080  0D9E  00CB               	movwf	___fladd@b+1
  3081  0D9F  0841               	movf	?_ADC_Media_10bits,w
  3082  0DA0  00CA               	movwf	___fladd@b
  3083  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  3084  0DA2  0865               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3085  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0DA4  00D1               	movwf	___fladd@a+3
  3087  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  3088  0DA6  0864               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3089  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  3090  0DA8  00D0               	movwf	___fladd@a+2
  3091  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  3092  0DAA  0863               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3093  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0DAC  00CF               	movwf	___fladd@a+1
  3095  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  3096  0DAE  0862               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3097  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0DB0  00CE               	movwf	___fladd@a
  3099  0DB1  120A  158A  233C  120A  158A  	fcall	___fladd
  3100  0DB6  084D               	movf	?___fladd+3,w
  3101  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  3102  0DB8  00E5               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3103  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3104  0DBA  084C               	movf	?___fladd+2,w
  3105  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  3106  0DBC  00E4               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3107  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3108  0DBE  084B               	movf	?___fladd+1,w
  3109  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  3110  0DC0  00E3               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3111  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0DC2  084A               	movf	?___fladd,w
  3113  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  3114  0DC4  00E2               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3115                           
  3116                           ;SlaveLiofilizadorVer1.c: 757:            if(Package_Usart_is_for_me()==1) break;
  3117  0DC5  160A  158A  2242  120A  158A  	fcall	_Package_Usart_is_for_me
  3118  0DCA  3A01               	xorlw	1
  3119  0DCB  1903               	btfsc	3,2
  3120  0DCC  2DDB               	goto	l7178
  3121                           
  3122                           ;SlaveLiofilizadorVer1.c: 758:            }
  3123  0DCD  3001               	movlw	1
  3124  0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  3125  0DCF  07E6               	addwf	MediaPlacaVaccum@i^(0+128),f
  3126  0DD0  1803               	skipnc
  3127  0DD1  0AE7               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3128  0DD2  3000               	movlw	0
  3129  0DD3  07E7               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3130  0DD4  3000               	movlw	0
  3131  0DD5  0267               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3132  0DD6  300F               	movlw	15
  3133  0DD7  1903               	skipnz
  3134  0DD8  0266               	subwf	MediaPlacaVaccum@i^(0+128),w
  3135  0DD9  1C03               	skipc
  3136  0DDA  2D93               	goto	l7170
  3137  0DDB                     l7178:	
  3138                           
  3139                           ;SlaveLiofilizadorVer1.c: 759:        if(i<10)
  3140  0DDB  3000               	movlw	0
  3141  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  3142  0DDD  0267               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3143  0DDE  300A               	movlw	10
  3144  0DDF  1903               	skipnz
  3145  0DE0  0266               	subwf	MediaPlacaVaccum@i^(0+128),w
  3146  0DE1  1C03               	btfss	3,0
  3147  0DE2  0008               	return
  3148                           
  3149                           ;SlaveLiofilizadorVer1.c: 765:        if(i==15)
  3150  0DE3  300F               	movlw	15
  3151  0DE4  0666               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3152  0DE5  0467               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3153  0DE6  1D03               	btfss	3,2
  3154  0DE7  2DF2               	goto	l7186
  3155                           
  3156                           ;SlaveLiofilizadorVer1.c: 766:          Temp/=(i-1);
  3157  0DE8  0866               	movf	MediaPlacaVaccum@i^(0+128),w
  3158  0DE9  3EFF               	addlw	255
  3159  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0DEB  00B3               	movwf	___xxtofl@val
  3161  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  3162  0DED  0867               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3163  0DEE  1803               	skipnc
  3164  0DEF  3E01               	addlw	1
  3165  0DF0  3EFF               	addlw	255
  3166  0DF1  2DF7               	goto	L2
  3167  0DF2                     l7186:	
  3168                           
  3169                           ;SlaveLiofilizadorVer1.c: 768:          Temp/=(i);
  3170  0DF2  0866               	movf	MediaPlacaVaccum@i^(0+128),w
  3171  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0DF4  00B3               	movwf	___xxtofl@val
  3173  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  3174  0DF6  0867               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3175  0DF7                     L2:	
  3176  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  3177  0DF8  00B4               	movwf	___xxtofl@val+1
  3178  0DF9  01B5               	clrf	___xxtofl@val+2
  3179  0DFA  01B6               	clrf	___xxtofl@val+3
  3180  0DFB  3000               	movlw	0
  3181  0DFC  160A  118A  2136  120A  158A  	fcall	___xxtofl
  3182  0E01  0836               	movf	?___xxtofl+3,w
  3183  0E02  00C4               	movwf	___fldiv@a+3
  3184  0E03  0835               	movf	?___xxtofl+2,w
  3185  0E04  00C3               	movwf	___fldiv@a+2
  3186  0E05  0834               	movf	?___xxtofl+1,w
  3187  0E06  00C2               	movwf	___fldiv@a+1
  3188  0E07  0833               	movf	?___xxtofl,w
  3189  0E08  00C1               	movwf	___fldiv@a
  3190  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  3191  0E0A  0865               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3192  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  3193  0E0C  00C8               	movwf	___fldiv@b+3
  3194  0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  3195  0E0E  0864               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3196  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0E10  00C7               	movwf	___fldiv@b+2
  3198  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  3199  0E12  0863               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3200  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3201  0E14  00C6               	movwf	___fldiv@b+1
  3202  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  3203  0E16  0862               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3204  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  3205  0E18  00C5               	movwf	___fldiv@b
  3206  0E19  120A  158A  219B  120A  158A  	fcall	___fldiv
  3207  0E1E  0844               	movf	?___fldiv+3,w
  3208  0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  3209  0E20  00E5               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3210  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0E22  0843               	movf	?___fldiv+2,w
  3212  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  3213  0E24  00E4               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3214  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  3215  0E26  0842               	movf	?___fldiv+1,w
  3216  0E27  1683               	bsf	3,5	;RP0=1, select bank1
  3217  0E28  00E3               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3218  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3219  0E2A  0841               	movf	?___fldiv,w
  3220  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  3221  0E2C  00E2               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3222                           
  3223                           ;SlaveLiofilizadorVer1.c: 770:        Vaccum0 =1023.0-Temp;
  3224  0E2D  0865               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3225  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  3226  0E2F  00E1               	movwf	___flsub@a+3
  3227  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  3228  0E31  0864               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3229  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  3230  0E33  00E0               	movwf	___flsub@a+2
  3231  0E34  1683               	bsf	3,5	;RP0=1, select bank1
  3232  0E35  0863               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3233  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0E37  00DF               	movwf	___flsub@a+1
  3235  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  3236  0E39  0862               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3237  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  3238  0E3B  00DE               	movwf	___flsub@a
  3239  0E3C  3044               	movlw	68
  3240  0E3D  00E5               	movwf	___flsub@b+3
  3241  0E3E  307F               	movlw	127
  3242  0E3F  00E4               	movwf	___flsub@b+2
  3243  0E40  30C0               	movlw	192
  3244  0E41  00E3               	movwf	___flsub@b+1
  3245  0E42  3000               	movlw	0
  3246  0E43  00E2               	movwf	___flsub@b
  3247  0E44  160A  158A  22B3  120A  158A  	fcall	___flsub
  3248  0E49  0861               	movf	?___flsub+3,w
  3249  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  3250  0E4B  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3251  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0E4D  0860               	movf	?___flsub+2,w
  3253  0E4E  1683               	bsf	3,5	;RP0=1, select bank1
  3254  0E4F  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3255  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  3256  0E51  085F               	movf	?___flsub+1,w
  3257  0E52  1683               	bsf	3,5	;RP0=1, select bank1
  3258  0E53  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3259  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3260  0E55  085E               	movf	?___flsub,w
  3261  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  3262  0E57  00A4               	movwf	_Vaccum0^(0+128)
  3263                           
  3264                           ;SlaveLiofilizadorVer1.c: 771:        Vaccum0*=Vaccum0;
  3265  0E58  0827               	movf	(_Vaccum0+3)^(0+128),w
  3266  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3267  0E5A  00AC               	movwf	___flmul@b+3
  3268  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  3269  0E5C  0826               	movf	(_Vaccum0+2)^(0+128),w
  3270  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0E5E  00AB               	movwf	___flmul@b+2
  3272  0E5F  1683               	bsf	3,5	;RP0=1, select bank1
  3273  0E60  0825               	movf	(_Vaccum0+1)^(0+128),w
  3274  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  3275  0E62  00AA               	movwf	___flmul@b+1
  3276  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  3277  0E64  0824               	movf	_Vaccum0^(0+128),w
  3278  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  3279  0E66  00A9               	movwf	___flmul@b
  3280  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  3281  0E68  0827               	movf	(_Vaccum0+3)^(0+128),w
  3282  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3283  0E6A  00B0               	movwf	___flmul@a+3
  3284  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  3285  0E6C  0826               	movf	(_Vaccum0+2)^(0+128),w
  3286  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3287  0E6E  00AF               	movwf	___flmul@a+2
  3288  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  3289  0E70  0825               	movf	(_Vaccum0+1)^(0+128),w
  3290  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  3291  0E72  00AE               	movwf	___flmul@a+1
  3292  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  3293  0E74  0824               	movf	_Vaccum0^(0+128),w
  3294  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3295  0E76  00AD               	movwf	___flmul@a
  3296  0E77  120A  118A  23C9  120A  158A  	fcall	___flmul
  3297  0E7C  082C               	movf	?___flmul+3,w
  3298  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  3299  0E7E  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3300  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3301  0E80  082B               	movf	?___flmul+2,w
  3302  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  3303  0E82  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3304  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0E84  082A               	movf	?___flmul+1,w
  3306  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  3307  0E86  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3308  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0E88  0829               	movf	?___flmul,w
  3310  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  3311  0E8A  00A4               	movwf	_Vaccum0^(0+128)
  3312                           
  3313                           ;SlaveLiofilizadorVer1.c: 772:        Vaccum0*=0.00222;
  3314  0E8B  303B               	movlw	59
  3315  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  3316  0E8D  00AC               	movwf	___flmul@b+3
  3317  0E8E  3011               	movlw	17
  3318  0E8F  00AB               	movwf	___flmul@b+2
  3319  0E90  307D               	movlw	125
  3320  0E91  00AA               	movwf	___flmul@b+1
  3321  0E92  306B               	movlw	107
  3322  0E93  00A9               	movwf	___flmul@b
  3323  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  3324  0E95  0827               	movf	(_Vaccum0+3)^(0+128),w
  3325  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  3326  0E97  00B0               	movwf	___flmul@a+3
  3327  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  3328  0E99  0826               	movf	(_Vaccum0+2)^(0+128),w
  3329  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  3330  0E9B  00AF               	movwf	___flmul@a+2
  3331  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  3332  0E9D  0825               	movf	(_Vaccum0+1)^(0+128),w
  3333  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  3334  0E9F  00AE               	movwf	___flmul@a+1
  3335  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  3336  0EA1  0824               	movf	_Vaccum0^(0+128),w
  3337  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0EA3  00AD               	movwf	___flmul@a
  3339  0EA4  120A  118A  23C9  120A  158A  	fcall	___flmul
  3340  0EA9  082C               	movf	?___flmul+3,w
  3341  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  3342  0EAB  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3343  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3344  0EAD  082B               	movf	?___flmul+2,w
  3345  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  3346  0EAF  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3347  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  3348  0EB1  082A               	movf	?___flmul+1,w
  3349  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  3350  0EB3  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3351  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  3352  0EB5  0829               	movf	?___flmul,w
  3353  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  3354  0EB7  00A4               	movwf	_Vaccum0^(0+128)
  3355                           
  3356                           ;SlaveLiofilizadorVer1.c: 773:        Vaccum0+=150;
  3357  0EB8  3043               	movlw	67
  3358  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3359  0EBA  00CD               	movwf	___fladd@b+3
  3360  0EBB  3016               	movlw	22
  3361  0EBC  00CC               	movwf	___fladd@b+2
  3362  0EBD  3000               	movlw	0
  3363  0EBE  00CB               	movwf	___fladd@b+1
  3364  0EBF  3000               	movlw	0
  3365  0EC0  00CA               	movwf	___fladd@b
  3366  0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  3367  0EC2  0827               	movf	(_Vaccum0+3)^(0+128),w
  3368  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  3369  0EC4  00D1               	movwf	___fladd@a+3
  3370  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  3371  0EC6  0826               	movf	(_Vaccum0+2)^(0+128),w
  3372  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  3373  0EC8  00D0               	movwf	___fladd@a+2
  3374  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  3375  0ECA  0825               	movf	(_Vaccum0+1)^(0+128),w
  3376  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  3377  0ECC  00CF               	movwf	___fladd@a+1
  3378  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  3379  0ECE  0824               	movf	_Vaccum0^(0+128),w
  3380  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  3381  0ED0  00CE               	movwf	___fladd@a
  3382  0ED1  120A  158A  233C  120A  158A  	fcall	___fladd
  3383  0ED6  084D               	movf	?___fladd+3,w
  3384  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  3385  0ED8  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3386  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0EDA  084C               	movf	?___fladd+2,w
  3388  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  3389  0EDC  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3390  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0EDE  084B               	movf	?___fladd+1,w
  3392  0EDF  1683               	bsf	3,5	;RP0=1, select bank1
  3393  0EE0  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3394  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0EE2  084A               	movf	?___fladd,w
  3396  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  3397  0EE4  00A4               	movwf	_Vaccum0^(0+128)
  3398                           
  3399                           ;SlaveLiofilizadorVer1.c: 775:        if(Vaccum0>2000)Vaccum0=2000;
  3400  0EE5  3044               	movlw	68
  3401  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3402  0EE7  00A3               	movwf	___flge@ff1+3
  3403  0EE8  30FA               	movlw	250
  3404  0EE9  00A2               	movwf	___flge@ff1+2
  3405  0EEA  3000               	movlw	0
  3406  0EEB  00A1               	movwf	___flge@ff1+1
  3407  0EEC  3000               	movlw	0
  3408  0EED  00A0               	movwf	___flge@ff1
  3409  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  3410  0EEF  0827               	movf	(_Vaccum0+3)^(0+128),w
  3411  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0EF1  00A7               	movwf	___flge@ff2+3
  3413  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3414  0EF3  0826               	movf	(_Vaccum0+2)^(0+128),w
  3415  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3416  0EF5  00A6               	movwf	___flge@ff2+2
  3417  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  3418  0EF7  0825               	movf	(_Vaccum0+1)^(0+128),w
  3419  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  3420  0EF9  00A5               	movwf	___flge@ff2+1
  3421  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  3422  0EFB  0824               	movf	_Vaccum0^(0+128),w
  3423  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0EFD  00A4               	movwf	___flge@ff2
  3425  0EFE  160A  118A  20A3  120A  158A  	fcall	___flge
  3426  0F03  1803               	btfsc	3,0
  3427  0F04  0008               	return
  3428  0F05  3044               	movlw	68
  3429  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  3430  0F07  00A7               	movwf	(_Vaccum0+3)^(0+128)
  3431  0F08  30FA               	movlw	250
  3432  0F09  00A6               	movwf	(_Vaccum0+2)^(0+128)
  3433  0F0A  3000               	movlw	0
  3434  0F0B  00A5               	movwf	(_Vaccum0+1)^(0+128)
  3435  0F0C  3000               	movlw	0
  3436  0F0D  00A4               	movwf	_Vaccum0^(0+128)
  3437  0F0E  0008               	return
  3438  0F0F                     l441:	
  3439                           ;SlaveLiofilizadorVer1.c: 778:      else
  3440                           
  3441                           
  3442                           ;SlaveLiofilizadorVer1.c: 779:        {;SlaveLiofilizadorVer1.c: 780:        ADCON1bits.
      +                          VCFG0=0;
  3443  0F0F  121F               	bcf	31,4	;volatile
  3444                           
  3445                           ;SlaveLiofilizadorVer1.c: 781:        ADCON1bits.VCFG1=0;
  3446  0F10  129F               	bcf	31,5	;volatile
  3447                           
  3448                           ;SlaveLiofilizadorVer1.c: 782:        ADCON0bits.CHS=canal;
  3449  0F11  0861               	movf	MediaPlacaVaccum@canal^(0+128),w
  3450  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  3451  0F13  00E6               	movwf	??_MediaPlacaVaccum
  3452  0F14  0DE6               	rlf	??_MediaPlacaVaccum,f
  3453  0F15  0DE6               	rlf	??_MediaPlacaVaccum,f
  3454  0F16  081F               	movf	31,w	;volatile
  3455  0F17  0666               	xorwf	??_MediaPlacaVaccum,w
  3456  0F18  39C3               	andlw	-61
  3457  0F19  0666               	xorwf	??_MediaPlacaVaccum,w
  3458  0F1A  009F               	movwf	31	;volatile
  3459                           
  3460                           ;SlaveLiofilizadorVer1.c: 783:        my_delay_ms(1);
  3461  0F1B  3000               	movlw	0
  3462  0F1C  00A3               	movwf	my_delay_ms@time+3
  3463  0F1D  3000               	movlw	0
  3464  0F1E  00A2               	movwf	my_delay_ms@time+2
  3465  0F1F  3000               	movlw	0
  3466  0F20  00A1               	movwf	my_delay_ms@time+1
  3467  0F21  3001               	movlw	1
  3468  0F22  00A0               	movwf	my_delay_ms@time
  3469  0F23  160A  158A  24B4  120A  158A  	fcall	_my_delay_ms
  3470                           
  3471                           ;SlaveLiofilizadorVer1.c: 784:        Temp=0;
  3472  0F28  3000               	movlw	0
  3473  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  3474  0F2A  00E5               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3475  0F2B  3000               	movlw	0
  3476  0F2C  00E4               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3477  0F2D  3000               	movlw	0
  3478  0F2E  00E3               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3479  0F2F  3000               	movlw	0
  3480  0F30  00E2               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3481                           
  3482                           ;SlaveLiofilizadorVer1.c: 786:        for(i=1;i<15;i++)
  3483  0F31  3001               	movlw	1
  3484  0F32  00E6               	movwf	MediaPlacaVaccum@i^(0+128)
  3485  0F33  3000               	movlw	0
  3486  0F34  00E7               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3487  0F35                     l7204:	
  3488                           
  3489                           ;SlaveLiofilizadorVer1.c: 787:            {;SlaveLiofilizadorVer1.c: 788:            Val
      +                          or=ADC_Max_10Bits(canal);
  3490  0F35  0861               	movf	MediaPlacaVaccum@canal^(0+128),w
  3491  0F36  160A  158A  260F  120A  158A  	fcall	_ADC_Max_10Bits
  3492  0F3B  082A               	movf	?_ADC_Max_10Bits,w
  3493  0F3C  00E6               	movwf	??_MediaPlacaVaccum
  3494  0F3D  082B               	movf	?_ADC_Max_10Bits+1,w
  3495  0F3E  00E7               	movwf	??_MediaPlacaVaccum+1
  3496  0F3F  01E8               	clrf	??_MediaPlacaVaccum+2
  3497  0F40  01E9               	clrf	??_MediaPlacaVaccum+3
  3498  0F41  0869               	movf	??_MediaPlacaVaccum+3,w
  3499  0F42  00B6               	movwf	___xxtofl@val+3
  3500  0F43  0868               	movf	??_MediaPlacaVaccum+2,w
  3501  0F44  00B5               	movwf	___xxtofl@val+2
  3502  0F45  0867               	movf	??_MediaPlacaVaccum+1,w
  3503  0F46  00B4               	movwf	___xxtofl@val+1
  3504  0F47  0866               	movf	??_MediaPlacaVaccum,w
  3505  0F48  00B3               	movwf	___xxtofl@val
  3506  0F49  3000               	movlw	0
  3507  0F4A  160A  118A  2136  120A  158A  	fcall	___xxtofl
  3508  0F4F  0836               	movf	?___xxtofl+3,w
  3509  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  3510  0F51  00E0               	movwf	(MediaPlacaVaccum@Valor+3)^(0+128)
  3511  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3512  0F53  0835               	movf	?___xxtofl+2,w
  3513  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  3514  0F55  00DF               	movwf	(MediaPlacaVaccum@Valor+2)^(0+128)
  3515  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  3516  0F57  0834               	movf	?___xxtofl+1,w
  3517  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3518  0F59  00DE               	movwf	(MediaPlacaVaccum@Valor+1)^(0+128)
  3519  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3520  0F5B  0833               	movf	?___xxtofl,w
  3521  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  3522  0F5D  00DD               	movwf	MediaPlacaVaccum@Valor^(0+128)
  3523                           
  3524                           ;SlaveLiofilizadorVer1.c: 789:            if(Valor>Temp) Temp=Valor;
  3525  0F5E  0865               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3526  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3527  0F60  00A3               	movwf	___flge@ff1+3
  3528  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  3529  0F62  0864               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3530  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3531  0F64  00A2               	movwf	___flge@ff1+2
  3532  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  3533  0F66  0863               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3534  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3535  0F68  00A1               	movwf	___flge@ff1+1
  3536  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  3537  0F6A  0862               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3538  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3539  0F6C  00A0               	movwf	___flge@ff1
  3540  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  3541  0F6E  0860               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3542  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3543  0F70  00A7               	movwf	___flge@ff2+3
  3544  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  3545  0F72  085F               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3546  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  3547  0F74  00A6               	movwf	___flge@ff2+2
  3548  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  3549  0F76  085E               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3550  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  3551  0F78  00A5               	movwf	___flge@ff2+1
  3552  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  3553  0F7A  085D               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3554  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  3555  0F7C  00A4               	movwf	___flge@ff2
  3556  0F7D  160A  118A  20A3  120A  158A  	fcall	___flge
  3557  0F82  1803               	btfsc	3,0
  3558  0F83  2F8D               	goto	l7210
  3559  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  3560  0F85  0860               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3561  0F86  00E5               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3562  0F87  085F               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3563  0F88  00E4               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3564  0F89  085E               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3565  0F8A  00E3               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3566  0F8B  085D               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3567  0F8C  00E2               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3568  0F8D                     l7210:	
  3569                           
  3570                           ;SlaveLiofilizadorVer1.c: 790:            if(Package_Usart_is_for_me()==1) break;
  3571  0F8D  160A  158A  2242  120A  158A  	fcall	_Package_Usart_is_for_me
  3572  0F92  3A01               	xorlw	1
  3573  0F93  1903               	btfsc	3,2
  3574  0F94  2FA3               	goto	l7216
  3575                           
  3576                           ;SlaveLiofilizadorVer1.c: 791:            }
  3577  0F95  3001               	movlw	1
  3578  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  3579  0F97  07E6               	addwf	MediaPlacaVaccum@i^(0+128),f
  3580  0F98  1803               	skipnc
  3581  0F99  0AE7               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3582  0F9A  3000               	movlw	0
  3583  0F9B  07E7               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3584  0F9C  3000               	movlw	0
  3585  0F9D  0267               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3586  0F9E  300F               	movlw	15
  3587  0F9F  1903               	skipnz
  3588  0FA0  0266               	subwf	MediaPlacaVaccum@i^(0+128),w
  3589  0FA1  1C03               	skipc
  3590  0FA2  2F35               	goto	l7204
  3591  0FA3                     l7216:	
  3592                           
  3593                           ;SlaveLiofilizadorVer1.c: 792:         if(i<10)
  3594  0FA3  3000               	movlw	0
  3595  0FA4  1683               	bsf	3,5	;RP0=1, select bank1
  3596  0FA5  0267               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3597  0FA6  300A               	movlw	10
  3598  0FA7  1903               	skipnz
  3599  0FA8  0266               	subwf	MediaPlacaVaccum@i^(0+128),w
  3600  0FA9  1C03               	btfss	3,0
  3601  0FAA  0008               	return
  3602                           
  3603                           ;SlaveLiofilizadorVer1.c: 797:         Tensao1 =Temp*0.318296;
  3604  0FAB  303E               	movlw	62
  3605  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3606  0FAD  00AC               	movwf	___flmul@b+3
  3607  0FAE  30A2               	movlw	162
  3608  0FAF  00AB               	movwf	___flmul@b+2
  3609  0FB0  30F7               	movlw	247
  3610  0FB1  00AA               	movwf	___flmul@b+1
  3611  0FB2  30B1               	movlw	177
  3612  0FB3  00A9               	movwf	___flmul@b
  3613  0FB4  1683               	bsf	3,5	;RP0=1, select bank1
  3614  0FB5  0865               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3615  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3616  0FB7  00B0               	movwf	___flmul@a+3
  3617  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3618  0FB9  0864               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3619  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3620  0FBB  00AF               	movwf	___flmul@a+2
  3621  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  3622  0FBD  0863               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3623  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0FBF  00AE               	movwf	___flmul@a+1
  3625  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  3626  0FC1  0862               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3627  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0FC3  00AD               	movwf	___flmul@a
  3629  0FC4  120A  118A  23C9  120A  158A  	fcall	___flmul
  3630  0FC9  082C               	movf	?___flmul+3,w
  3631  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  3632  0FCB  00A3               	movwf	(_Tensao1+3)^(0+128)
  3633  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3634  0FCD  082B               	movf	?___flmul+2,w
  3635  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  3636  0FCF  00A2               	movwf	(_Tensao1+2)^(0+128)
  3637  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0FD1  082A               	movf	?___flmul+1,w
  3639  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  3640  0FD3  00A1               	movwf	(_Tensao1+1)^(0+128)
  3641  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3642  0FD5  0829               	movf	?___flmul,w
  3643  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3644  0FD7  00A0               	movwf	_Tensao1^(0+128)
  3645                           
  3646                           ;SlaveLiofilizadorVer1.c: 798:         if(Tensao1<15) Tensao1=0;
  3647  0FD8  0823               	movf	(_Tensao1+3)^(0+128),w
  3648  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0FDA  00A3               	movwf	___flge@ff1+3
  3650  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3651  0FDC  0822               	movf	(_Tensao1+2)^(0+128),w
  3652  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3653  0FDE  00A2               	movwf	___flge@ff1+2
  3654  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  3655  0FE0  0821               	movf	(_Tensao1+1)^(0+128),w
  3656  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3657  0FE2  00A1               	movwf	___flge@ff1+1
  3658  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  3659  0FE4  0820               	movf	_Tensao1^(0+128),w
  3660  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3661  0FE6  00A0               	movwf	___flge@ff1
  3662  0FE7  3041               	movlw	65
  3663  0FE8  00A7               	movwf	___flge@ff2+3
  3664  0FE9  3070               	movlw	112
  3665  0FEA  00A6               	movwf	___flge@ff2+2
  3666  0FEB  3000               	movlw	0
  3667  0FEC  00A5               	movwf	___flge@ff2+1
  3668  0FED  3000               	movlw	0
  3669  0FEE  00A4               	movwf	___flge@ff2
  3670  0FEF  160A  118A  20A3  120A  158A  	fcall	___flge
  3671  0FF4  1803               	btfsc	3,0
  3672  0FF5  0008               	return
  3673  0FF6  3000               	movlw	0
  3674  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  3675  0FF8  00A3               	movwf	(_Tensao1+3)^(0+128)
  3676  0FF9  3000               	movlw	0
  3677  0FFA  00A2               	movwf	(_Tensao1+2)^(0+128)
  3678  0FFB  3000               	movlw	0
  3679  0FFC  00A1               	movwf	(_Tensao1+1)^(0+128)
  3680  0FFD  3000               	movlw	0
  3681  0FFE  00A0               	movwf	_Tensao1^(0+128)
  3682  0FFF  0008               	return
  3683  1000                     __end_of_MediaPlacaVaccum:	
  3684                           
  3685                           	psect	text3
  3686  1AB3                     __ptext3:	
  3687 ;; *************** function ___flsub *****************
  3688 ;; Defined at:
  3689 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  a               4   62[BANK0 ] void 
  3692 ;;  b               4   66[BANK0 ] void 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  4   62[BANK0 ] void 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3699 ;; Tracked objects:
  3700 ;;		On entry : 300/0
  3701 ;;		On exit  : 300/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3704 ;;      Params:         0       8       0       0       0
  3705 ;;      Locals:         0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0
  3707 ;;      Totals:         0       8       0       0       0
  3708 ;;Total ram usage:        8 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; Hardware stack levels required when called:    2
  3711 ;; This function calls:
  3712 ;;		___fladd
  3713 ;; This function is called by:
  3714 ;;		_MediaPlacaVaccum
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           
  3719                           ;psect for function ___flsub
  3720  1AB3                     ___flsub:	
  3721                           
  3722                           ;incstack = 0
  3723                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3724  1AB3  3080               	movlw	128
  3725  1AB4  06E1               	xorwf	___flsub@a+3,f
  3726  1AB5  0865               	movf	___flsub@b+3,w
  3727  1AB6  00CD               	movwf	___fladd@b+3
  3728  1AB7  0864               	movf	___flsub@b+2,w
  3729  1AB8  00CC               	movwf	___fladd@b+2
  3730  1AB9  0863               	movf	___flsub@b+1,w
  3731  1ABA  00CB               	movwf	___fladd@b+1
  3732  1ABB  0862               	movf	___flsub@b,w
  3733  1ABC  00CA               	movwf	___fladd@b
  3734  1ABD  0861               	movf	___flsub@a+3,w
  3735  1ABE  00D1               	movwf	___fladd@a+3
  3736  1ABF  0860               	movf	___flsub@a+2,w
  3737  1AC0  00D0               	movwf	___fladd@a+2
  3738  1AC1  085F               	movf	___flsub@a+1,w
  3739  1AC2  00CF               	movwf	___fladd@a+1
  3740  1AC3  085E               	movf	___flsub@a,w
  3741  1AC4  00CE               	movwf	___fladd@a
  3742  1AC5  120A  158A  233C   	fcall	___fladd
  3743  1AC8  084D               	movf	?___fladd+3,w
  3744  1AC9  00E1               	movwf	?___flsub+3
  3745  1ACA  084C               	movf	?___fladd+2,w
  3746  1ACB  00E0               	movwf	?___flsub+2
  3747  1ACC  084B               	movf	?___fladd+1,w
  3748  1ACD  00DF               	movwf	?___flsub+1
  3749  1ACE  084A               	movf	?___fladd,w
  3750  1ACF  00DE               	movwf	?___flsub
  3751  1AD0  0008               	return
  3752  1AD1                     __end_of___flsub:	
  3753                           
  3754                           	psect	text4
  3755  0B3C                     __ptext4:	
  3756 ;; *************** function ___fladd *****************
  3757 ;; Defined at:
  3758 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  b               4   42[BANK0 ] void 
  3761 ;;  a               4   46[BANK0 ] void 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  grs             1   61[BANK0 ] unsigned char 
  3764 ;;  bexp            1   60[BANK0 ] unsigned char 
  3765 ;;  aexp            1   59[BANK0 ] unsigned char 
  3766 ;;  signs           1   58[BANK0 ] unsigned char 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  4   42[BANK0 ] unsigned char 
  3769 ;; Registers used:
  3770 ;;		wreg, status,2, status,0, btemp+1
  3771 ;; Tracked objects:
  3772 ;;		On entry : 300/0
  3773 ;;		On exit  : 300/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3776 ;;      Params:         0       8       0       0       0
  3777 ;;      Locals:         0       4       0       0       0
  3778 ;;      Temps:          0       8       0       0       0
  3779 ;;      Totals:         0      20       0       0       0
  3780 ;;Total ram usage:       20 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:    1
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		_MediaPlacaVaccum
  3787 ;;		___flsub
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           
  3792                           ;psect for function ___fladd
  3793  0B3C                     ___fladd:	
  3794                           
  3795                           ;incstack = 0
  3796                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3797  0B3C  084D               	movf	___fladd@b+3,w
  3798  0B3D  3980               	andlw	128
  3799  0B3E  00D2               	movwf	??___fladd
  3800  0B3F  0852               	movf	??___fladd,w
  3801  0B40  00DA               	movwf	___fladd@signs
  3802  0B41  084D               	movf	___fladd@b+3,w
  3803  0B42  00D2               	movwf	??___fladd
  3804  0B43  0752               	addwf	??___fladd,w
  3805  0B44  00D3               	movwf	??___fladd+1
  3806  0B45  0853               	movf	??___fladd+1,w
  3807  0B46  00DC               	movwf	___fladd@bexp
  3808  0B47  1BCC               	btfsc	___fladd@b+2,7
  3809  0B48  145C               	bsf	___fladd@bexp,0
  3810  0B49  085C               	movf	___fladd@bexp,w
  3811  0B4A  1903               	btfsc	3,2
  3812  0B4B  2B5A               	goto	l6068
  3813  0B4C  0A5C               	incf	___fladd@bexp,w
  3814  0B4D  1D03               	btfss	3,2
  3815  0B4E  2B57               	goto	l6064
  3816  0B4F  3000               	movlw	0
  3817  0B50  00CD               	movwf	___fladd@b+3
  3818  0B51  3000               	movlw	0
  3819  0B52  00CC               	movwf	___fladd@b+2
  3820  0B53  3000               	movlw	0
  3821  0B54  00CB               	movwf	___fladd@b+1
  3822  0B55  3000               	movlw	0
  3823  0B56  00CA               	movwf	___fladd@b
  3824  0B57                     l6064:	
  3825  0B57  17CC               	bsf	___fladd@b+2,7
  3826  0B58  01CD               	clrf	___fladd@b+3
  3827  0B59  2B62               	goto	l6070
  3828  0B5A                     l6068:	
  3829  0B5A  3000               	movlw	0
  3830  0B5B  00CD               	movwf	___fladd@b+3
  3831  0B5C  3000               	movlw	0
  3832  0B5D  00CC               	movwf	___fladd@b+2
  3833  0B5E  3000               	movlw	0
  3834  0B5F  00CB               	movwf	___fladd@b+1
  3835  0B60  3000               	movlw	0
  3836  0B61  00CA               	movwf	___fladd@b
  3837  0B62                     l6070:	
  3838  0B62  0851               	movf	___fladd@a+3,w
  3839  0B63  3980               	andlw	128
  3840  0B64  00D2               	movwf	??___fladd
  3841  0B65  0852               	movf	??___fladd,w
  3842  0B66  00DB               	movwf	___fladd@aexp
  3843  0B67  085B               	movf	___fladd@aexp,w
  3844  0B68  065A               	xorwf	___fladd@signs,w
  3845  0B69  1D03               	btfss	3,2
  3846  0B6A  175A               	bsf	___fladd@signs,6
  3847  0B6B  0851               	movf	___fladd@a+3,w
  3848  0B6C  00D2               	movwf	??___fladd
  3849  0B6D  0752               	addwf	??___fladd,w
  3850  0B6E  00D3               	movwf	??___fladd+1
  3851  0B6F  0853               	movf	??___fladd+1,w
  3852  0B70  00DB               	movwf	___fladd@aexp
  3853  0B71  1BD0               	btfsc	___fladd@a+2,7
  3854  0B72  145B               	bsf	___fladd@aexp,0
  3855  0B73  085B               	movf	___fladd@aexp,w
  3856  0B74  1903               	btfsc	3,2
  3857  0B75  2B84               	goto	l6092
  3858  0B76  0A5B               	incf	___fladd@aexp,w
  3859  0B77  1D03               	btfss	3,2
  3860  0B78  2B81               	goto	l6088
  3861  0B79  3000               	movlw	0
  3862  0B7A  00D1               	movwf	___fladd@a+3
  3863  0B7B  3000               	movlw	0
  3864  0B7C  00D0               	movwf	___fladd@a+2
  3865  0B7D  3000               	movlw	0
  3866  0B7E  00CF               	movwf	___fladd@a+1
  3867  0B7F  3000               	movlw	0
  3868  0B80  00CE               	movwf	___fladd@a
  3869  0B81                     l6088:	
  3870  0B81  17D0               	bsf	___fladd@a+2,7
  3871  0B82  01D1               	clrf	___fladd@a+3
  3872  0B83  2B8C               	goto	l1289
  3873  0B84                     l6092:	
  3874  0B84  3000               	movlw	0
  3875  0B85  00D1               	movwf	___fladd@a+3
  3876  0B86  3000               	movlw	0
  3877  0B87  00D0               	movwf	___fladd@a+2
  3878  0B88  3000               	movlw	0
  3879  0B89  00CF               	movwf	___fladd@a+1
  3880  0B8A  3000               	movlw	0
  3881  0B8B  00CE               	movwf	___fladd@a
  3882  0B8C                     l1289:	
  3883  0B8C  085C               	movf	___fladd@bexp,w
  3884  0B8D  025B               	subwf	___fladd@aexp,w
  3885  0B8E  1803               	skipnc
  3886  0B8F  2BD2               	goto	l6128
  3887  0B90  1F5A               	btfss	___fladd@signs,6
  3888  0B91  2B96               	goto	l6098
  3889  0B92  3080               	movlw	128
  3890  0B93  00D2               	movwf	??___fladd
  3891  0B94  0852               	movf	??___fladd,w
  3892  0B95  06DA               	xorwf	___fladd@signs,f
  3893  0B96                     l6098:	
  3894  0B96  085C               	movf	___fladd@bexp,w
  3895  0B97  00D2               	movwf	??___fladd
  3896  0B98  0852               	movf	??___fladd,w
  3897  0B99  00DD               	movwf	___fladd@grs
  3898  0B9A  085B               	movf	___fladd@aexp,w
  3899  0B9B  00D2               	movwf	??___fladd
  3900  0B9C  0852               	movf	??___fladd,w
  3901  0B9D  00DC               	movwf	___fladd@bexp
  3902  0B9E  085D               	movf	___fladd@grs,w
  3903  0B9F  00D2               	movwf	??___fladd
  3904  0BA0  0852               	movf	??___fladd,w
  3905  0BA1  00DB               	movwf	___fladd@aexp
  3906  0BA2  084A               	movf	___fladd@b,w
  3907  0BA3  00D2               	movwf	??___fladd
  3908  0BA4  0852               	movf	??___fladd,w
  3909  0BA5  00DD               	movwf	___fladd@grs
  3910  0BA6  084E               	movf	___fladd@a,w
  3911  0BA7  00D2               	movwf	??___fladd
  3912  0BA8  0852               	movf	??___fladd,w
  3913  0BA9  00CA               	movwf	___fladd@b
  3914  0BAA  085D               	movf	___fladd@grs,w
  3915  0BAB  00D2               	movwf	??___fladd
  3916  0BAC  0852               	movf	??___fladd,w
  3917  0BAD  00CE               	movwf	___fladd@a
  3918  0BAE  084B               	movf	___fladd@b+1,w
  3919  0BAF  00D2               	movwf	??___fladd
  3920  0BB0  0852               	movf	??___fladd,w
  3921  0BB1  00DD               	movwf	___fladd@grs
  3922  0BB2  084F               	movf	___fladd@a+1,w
  3923  0BB3  00D2               	movwf	??___fladd
  3924  0BB4  0852               	movf	??___fladd,w
  3925  0BB5  00CB               	movwf	___fladd@b+1
  3926  0BB6  085D               	movf	___fladd@grs,w
  3927  0BB7  00D2               	movwf	??___fladd
  3928  0BB8  0852               	movf	??___fladd,w
  3929  0BB9  00CF               	movwf	___fladd@a+1
  3930  0BBA  084C               	movf	___fladd@b+2,w
  3931  0BBB  00D2               	movwf	??___fladd
  3932  0BBC  0852               	movf	??___fladd,w
  3933  0BBD  00DD               	movwf	___fladd@grs
  3934  0BBE  0850               	movf	___fladd@a+2,w
  3935  0BBF  00D2               	movwf	??___fladd
  3936  0BC0  0852               	movf	??___fladd,w
  3937  0BC1  00CC               	movwf	___fladd@b+2
  3938  0BC2  085D               	movf	___fladd@grs,w
  3939  0BC3  00D2               	movwf	??___fladd
  3940  0BC4  0852               	movf	??___fladd,w
  3941  0BC5  00D0               	movwf	___fladd@a+2
  3942  0BC6  084D               	movf	___fladd@b+3,w
  3943  0BC7  00D2               	movwf	??___fladd
  3944  0BC8  0852               	movf	??___fladd,w
  3945  0BC9  00DD               	movwf	___fladd@grs
  3946  0BCA  0851               	movf	___fladd@a+3,w
  3947  0BCB  00D2               	movwf	??___fladd
  3948  0BCC  0852               	movf	??___fladd,w
  3949  0BCD  00CD               	movwf	___fladd@b+3
  3950  0BCE  085D               	movf	___fladd@grs,w
  3951  0BCF  00D2               	movwf	??___fladd
  3952  0BD0  0852               	movf	??___fladd,w
  3953  0BD1  00D1               	movwf	___fladd@a+3
  3954  0BD2                     l6128:	
  3955  0BD2  01DD               	clrf	___fladd@grs
  3956  0BD3  085B               	movf	___fladd@aexp,w
  3957  0BD4  00D2               	movwf	??___fladd
  3958  0BD5  01D3               	clrf	??___fladd+1
  3959  0BD6  0853               	movf	??___fladd+1,w
  3960  0BD7  00D5               	movwf	??___fladd+3
  3961  0BD8  085C               	movf	___fladd@bexp,w
  3962  0BD9  0252               	subwf	??___fladd,w
  3963  0BDA  00D4               	movwf	??___fladd+2
  3964  0BDB  1C03               	skipc
  3965  0BDC  03D5               	decf	??___fladd+3,f
  3966  0BDD  0855               	movf	??___fladd+3,w
  3967  0BDE  3A80               	xorlw	128
  3968  0BDF  00FF               	movwf	127
  3969  0BE0  3080               	movlw	128
  3970  0BE1  027F               	subwf	127,w
  3971  0BE2  1D03               	skipz
  3972  0BE3  2BE6               	goto	u6005
  3973  0BE4  301A               	movlw	26
  3974  0BE5  0254               	subwf	??___fladd+2,w
  3975  0BE6                     u6005:	
  3976  0BE6  1C03               	skipc
  3977  0BE7  2C1F               	goto	l6146
  3978  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  3979  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  3980  0BEA  084D               	movf	___fladd@b+3,w
  3981  0BEB  044C               	iorwf	___fladd@b+2,w
  3982  0BEC  044B               	iorwf	___fladd@b+1,w
  3983  0BED  044A               	iorwf	___fladd@b,w
  3984  0BEE  1903               	btfsc	3,2
  3985  0BEF  2BF2               	goto	u6010
  3986  0BF0  3001               	movlw	1
  3987  0BF1  2BF3               	goto	u6020
  3988  0BF2                     u6010:	
  3989  0BF2  3000               	movlw	0
  3990  0BF3                     u6020:	
  3991  0BF3  00D2               	movwf	??___fladd
  3992  0BF4  0852               	movf	??___fladd,w
  3993  0BF5  00DD               	movwf	___fladd@grs
  3994  0BF6  3000               	movlw	0
  3995  0BF7  00CD               	movwf	___fladd@b+3
  3996  0BF8  3000               	movlw	0
  3997  0BF9  00CC               	movwf	___fladd@b+2
  3998  0BFA  3000               	movlw	0
  3999  0BFB  00CB               	movwf	___fladd@b+1
  4000  0BFC  3000               	movlw	0
  4001  0BFD  00CA               	movwf	___fladd@b
  4002  0BFE  085B               	movf	___fladd@aexp,w
  4003  0BFF  00D2               	movwf	??___fladd
  4004  0C00  0852               	movf	??___fladd,w
  4005  0C01  00DC               	movwf	___fladd@bexp
  4006  0C02  2C25               	goto	l1293
  4007  0C03                     l1295:	
  4008  0C03  1C5D               	btfss	___fladd@grs,0
  4009  0C04  2C0E               	goto	l6136
  4010  0C05  085D               	movf	___fladd@grs,w
  4011  0C06  00D2               	movwf	??___fladd
  4012  0C07  1003               	clrc
  4013  0C08  0C52               	rrf	??___fladd,w
  4014  0C09  3801               	iorlw	1
  4015  0C0A  00D3               	movwf	??___fladd+1
  4016  0C0B  0853               	movf	??___fladd+1,w
  4017  0C0C  00DD               	movwf	___fladd@grs
  4018  0C0D  2C10               	goto	l6138
  4019  0C0E                     l6136:	
  4020  0C0E  1003               	clrc
  4021  0C0F  0CDD               	rrf	___fladd@grs,f
  4022  0C10                     l6138:	
  4023  0C10  184A               	btfsc	___fladd@b,0
  4024  0C11  17DD               	bsf	___fladd@grs,7
  4025  0C12  3001               	movlw	1
  4026  0C13  00D2               	movwf	??___fladd
  4027  0C14                     u6055:	
  4028  0C14  0D4D               	rlf	___fladd@b+3,w
  4029  0C15  0CCD               	rrf	___fladd@b+3,f
  4030  0C16  0CCC               	rrf	___fladd@b+2,f
  4031  0C17  0CCB               	rrf	___fladd@b+1,f
  4032  0C18  0CCA               	rrf	___fladd@b,f
  4033  0C19  0BD2               	decfsz	??___fladd& (0+127),f
  4034  0C1A  2C14               	goto	u6055
  4035  0C1B  3001               	movlw	1
  4036  0C1C  00D2               	movwf	??___fladd
  4037  0C1D  0852               	movf	??___fladd,w
  4038  0C1E  07DC               	addwf	___fladd@bexp,f
  4039  0C1F                     l6146:	
  4040  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  4041  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  4042  0C21  085B               	movf	___fladd@aexp,w
  4043  0C22  025C               	subwf	___fladd@bexp,w
  4044  0C23  1C03               	skipc
  4045  0C24  2C03               	goto	l1295
  4046  0C25                     l1293:	
  4047  0C25  1B5A               	btfsc	___fladd@signs,6
  4048  0C26  2C66               	goto	l6172
  4049  0C27  085C               	movf	___fladd@bexp,w
  4050  0C28  1D03               	btfss	3,2
  4051  0C29  2C33               	goto	l6154
  4052  0C2A  3000               	movlw	0
  4053  0C2B  00CD               	movwf	?___fladd+3
  4054  0C2C  3000               	movlw	0
  4055  0C2D  00CC               	movwf	?___fladd+2
  4056  0C2E  3000               	movlw	0
  4057  0C2F  00CB               	movwf	?___fladd+1
  4058  0C30  3000               	movlw	0
  4059  0C31  00CA               	movwf	?___fladd
  4060  0C32  0008               	return
  4061  0C33                     l6154:	
  4062  0C33  084E               	movf	___fladd@a,w
  4063  0C34  07CA               	addwf	___fladd@b,f
  4064  0C35  084F               	movf	___fladd@a+1,w
  4065  0C36  1103               	clrz
  4066  0C37  1803               	skipnc
  4067  0C38  3E01               	addlw	1
  4068  0C39  1D03               	btfss	3,2
  4069  0C3A  07CB               	addwf	___fladd@b+1,f
  4070  0C3B  0850               	movf	___fladd@a+2,w
  4071  0C3C  1103               	clrz
  4072  0C3D  1803               	skipnc
  4073  0C3E  3E01               	addlw	1
  4074  0C3F  1D03               	btfss	3,2
  4075  0C40  07CC               	addwf	___fladd@b+2,f
  4076  0C41  0851               	movf	___fladd@a+3,w
  4077  0C42  1103               	clrz
  4078  0C43  1803               	skipnc
  4079  0C44  3E01               	addlw	1
  4080  0C45  1D03               	btfss	3,2
  4081  0C46  07CD               	addwf	___fladd@b+3,f
  4082  0C47  1C4D               	btfss	___fladd@b+3,0
  4083  0C48  2D08               	goto	l6206
  4084  0C49  1C5D               	btfss	___fladd@grs,0
  4085  0C4A  2C54               	goto	l6162
  4086  0C4B  085D               	movf	___fladd@grs,w
  4087  0C4C  00D2               	movwf	??___fladd
  4088  0C4D  1003               	clrc
  4089  0C4E  0C52               	rrf	??___fladd,w
  4090  0C4F  3801               	iorlw	1
  4091  0C50  00D3               	movwf	??___fladd+1
  4092  0C51  0853               	movf	??___fladd+1,w
  4093  0C52  00DD               	movwf	___fladd@grs
  4094  0C53  2C56               	goto	l6164
  4095  0C54                     l6162:	
  4096  0C54  1003               	clrc
  4097  0C55  0CDD               	rrf	___fladd@grs,f
  4098  0C56                     l6164:	
  4099  0C56  184A               	btfsc	___fladd@b,0
  4100  0C57  17DD               	bsf	___fladd@grs,7
  4101  0C58  3001               	movlw	1
  4102  0C59  00D2               	movwf	??___fladd
  4103  0C5A                     u6135:	
  4104  0C5A  0D4D               	rlf	___fladd@b+3,w
  4105  0C5B  0CCD               	rrf	___fladd@b+3,f
  4106  0C5C  0CCC               	rrf	___fladd@b+2,f
  4107  0C5D  0CCB               	rrf	___fladd@b+1,f
  4108  0C5E  0CCA               	rrf	___fladd@b,f
  4109  0C5F  0BD2               	decfsz	??___fladd& (0+127),f
  4110  0C60  2C5A               	goto	u6135
  4111  0C61  3001               	movlw	1
  4112  0C62  00D2               	movwf	??___fladd
  4113  0C63  0852               	movf	??___fladd,w
  4114  0C64  07DC               	addwf	___fladd@bexp,f
  4115  0C65  2D08               	goto	l6206
  4116  0C66                     l6172:	
  4117  0C66  084D               	movf	___fladd@b+3,w
  4118  0C67  3A80               	xorlw	128
  4119  0C68  00FF               	movwf	127
  4120  0C69  0851               	movf	___fladd@a+3,w
  4121  0C6A  3A80               	xorlw	128
  4122  0C6B  027F               	subwf	127,w
  4123  0C6C  1D03               	skipz
  4124  0C6D  2C78               	goto	u6143
  4125  0C6E  0850               	movf	___fladd@a+2,w
  4126  0C6F  024C               	subwf	___fladd@b+2,w
  4127  0C70  1D03               	skipz
  4128  0C71  2C78               	goto	u6143
  4129  0C72  084F               	movf	___fladd@a+1,w
  4130  0C73  024B               	subwf	___fladd@b+1,w
  4131  0C74  1D03               	skipz
  4132  0C75  2C78               	goto	u6143
  4133  0C76  084E               	movf	___fladd@a,w
  4134  0C77  024A               	subwf	___fladd@b,w
  4135  0C78                     u6143:	
  4136  0C78  1803               	skipnc
  4137  0C79  2CD0               	goto	l6182
  4138  0C7A  30FF               	movlw	255
  4139  0C7B  00D2               	movwf	??___fladd
  4140  0C7C  30FF               	movlw	255
  4141  0C7D  00D3               	movwf	??___fladd+1
  4142  0C7E  30FF               	movlw	255
  4143  0C7F  00D4               	movwf	??___fladd+2
  4144  0C80  30FF               	movlw	255
  4145  0C81  00D5               	movwf	??___fladd+3
  4146  0C82  084E               	movf	___fladd@a,w
  4147  0C83  00D6               	movwf	??___fladd+4
  4148  0C84  084F               	movf	___fladd@a+1,w
  4149  0C85  00D7               	movwf	??___fladd+5
  4150  0C86  0850               	movf	___fladd@a+2,w
  4151  0C87  00D8               	movwf	??___fladd+6
  4152  0C88  0851               	movf	___fladd@a+3,w
  4153  0C89  00D9               	movwf	??___fladd+7
  4154  0C8A  084A               	movf	___fladd@b,w
  4155  0C8B  02D6               	subwf	??___fladd+4,f
  4156  0C8C  084B               	movf	___fladd@b+1,w
  4157  0C8D  1C03               	skipc
  4158  0C8E  0F4B               	incfsz	___fladd@b+1,w
  4159  0C8F  2C91               	goto	u6151
  4160  0C90  2C92               	goto	u6152
  4161  0C91                     u6151:	
  4162  0C91  02D7               	subwf	??___fladd+5,f
  4163  0C92                     u6152:	
  4164  0C92  084C               	movf	___fladd@b+2,w
  4165  0C93  1C03               	skipc
  4166  0C94  0F4C               	incfsz	___fladd@b+2,w
  4167  0C95  2C97               	goto	u6153
  4168  0C96  2C98               	goto	u6154
  4169  0C97                     u6153:	
  4170  0C97  02D8               	subwf	??___fladd+6,f
  4171  0C98                     u6154:	
  4172  0C98  084D               	movf	___fladd@b+3,w
  4173  0C99  1C03               	skipc
  4174  0C9A  0F4D               	incfsz	___fladd@b+3,w
  4175  0C9B  2C9D               	goto	u6155
  4176  0C9C  2C9E               	goto	u6156
  4177  0C9D                     u6155:	
  4178  0C9D  02D9               	subwf	??___fladd+7,f
  4179  0C9E                     u6156:	
  4180  0C9E  0856               	movf	??___fladd+4,w
  4181  0C9F  07D2               	addwf	??___fladd,f
  4182  0CA0  0857               	movf	??___fladd+5,w
  4183  0CA1  1803               	skipnc
  4184  0CA2  0F57               	incfsz	??___fladd+5,w
  4185  0CA3  2CA5               	goto	u6160
  4186  0CA4  2CA6               	goto	u6161
  4187  0CA5                     u6160:	
  4188  0CA5  07D3               	addwf	??___fladd+1,f
  4189  0CA6                     u6161:	
  4190  0CA6  0858               	movf	??___fladd+6,w
  4191  0CA7  1803               	skipnc
  4192  0CA8  0F58               	incfsz	??___fladd+6,w
  4193  0CA9  2CAB               	goto	u6162
  4194  0CAA  2CAC               	goto	u6163
  4195  0CAB                     u6162:	
  4196  0CAB  07D4               	addwf	??___fladd+2,f
  4197  0CAC                     u6163:	
  4198  0CAC  0859               	movf	??___fladd+7,w
  4199  0CAD  1803               	skipnc
  4200  0CAE  0A59               	incf	??___fladd+7,w
  4201  0CAF  07D5               	addwf	??___fladd+3,f
  4202  0CB0  0855               	movf	??___fladd+3,w
  4203  0CB1  00CD               	movwf	___fladd@b+3
  4204  0CB2  0854               	movf	??___fladd+2,w
  4205  0CB3  00CC               	movwf	___fladd@b+2
  4206  0CB4  0853               	movf	??___fladd+1,w
  4207  0CB5  00CB               	movwf	___fladd@b+1
  4208  0CB6  0852               	movf	??___fladd,w
  4209  0CB7  00CA               	movwf	___fladd@b
  4210  0CB8  3080               	movlw	128
  4211  0CB9  00D2               	movwf	??___fladd
  4212  0CBA  0852               	movf	??___fladd,w
  4213  0CBB  06DA               	xorwf	___fladd@signs,f
  4214  0CBC  09DD               	comf	___fladd@grs,f
  4215  0CBD  0ADD               	incf	___fladd@grs,f
  4216  0CBE  085D               	movf	___fladd@grs,w
  4217  0CBF  1D03               	btfss	3,2
  4218  0CC0  2CDE               	goto	l1310
  4219  0CC1  3001               	movlw	1
  4220  0CC2  07CA               	addwf	___fladd@b,f
  4221  0CC3  3000               	movlw	0
  4222  0CC4  1803               	skipnc
  4223  0CC5  3001               	movlw	1
  4224  0CC6  07CB               	addwf	___fladd@b+1,f
  4225  0CC7  3000               	movlw	0
  4226  0CC8  1803               	skipnc
  4227  0CC9  3001               	movlw	1
  4228  0CCA  07CC               	addwf	___fladd@b+2,f
  4229  0CCB  3000               	movlw	0
  4230  0CCC  1803               	skipnc
  4231  0CCD  3001               	movlw	1
  4232  0CCE  07CD               	addwf	___fladd@b+3,f
  4233  0CCF  2CDE               	goto	l1310
  4234  0CD0                     l6182:	
  4235  0CD0  084E               	movf	___fladd@a,w
  4236  0CD1  02CA               	subwf	___fladd@b,f
  4237  0CD2  084F               	movf	___fladd@a+1,w
  4238  0CD3  1C03               	skipc
  4239  0CD4  0F4F               	incfsz	___fladd@a+1,w
  4240  0CD5  02CB               	subwf	___fladd@b+1,f
  4241  0CD6  0850               	movf	___fladd@a+2,w
  4242  0CD7  1C03               	skipc
  4243  0CD8  0F50               	incfsz	___fladd@a+2,w
  4244  0CD9  02CC               	subwf	___fladd@b+2,f
  4245  0CDA  0851               	movf	___fladd@a+3,w
  4246  0CDB  1C03               	skipc
  4247  0CDC  0F51               	incfsz	___fladd@a+3,w
  4248  0CDD  02CD               	subwf	___fladd@b+3,f
  4249  0CDE                     l1310:	
  4250  0CDE  084D               	movf	___fladd@b+3,w
  4251  0CDF  044C               	iorwf	___fladd@b+2,w
  4252  0CE0  044B               	iorwf	___fladd@b+1,w
  4253  0CE1  044A               	iorwf	___fladd@b,w
  4254  0CE2  1D03               	skipz
  4255  0CE3  2D06               	goto	l6204
  4256  0CE4  085D               	movf	___fladd@grs,w
  4257  0CE5  1D03               	btfss	3,2
  4258  0CE6  2D06               	goto	l6204
  4259  0CE7  3000               	movlw	0
  4260  0CE8  00CD               	movwf	?___fladd+3
  4261  0CE9  3000               	movlw	0
  4262  0CEA  00CC               	movwf	?___fladd+2
  4263  0CEB  3000               	movlw	0
  4264  0CEC  00CB               	movwf	?___fladd+1
  4265  0CED  3000               	movlw	0
  4266  0CEE  00CA               	movwf	?___fladd
  4267  0CEF  0008               	return
  4268  0CF0                     l6190:	
  4269  0CF0  3001               	movlw	1
  4270  0CF1  00D2               	movwf	??___fladd
  4271  0CF2                     u6205:	
  4272  0CF2  1003               	clrc
  4273  0CF3  0DCA               	rlf	___fladd@b,f
  4274  0CF4  0DCB               	rlf	___fladd@b+1,f
  4275  0CF5  0DCC               	rlf	___fladd@b+2,f
  4276  0CF6  0DCD               	rlf	___fladd@b+3,f
  4277  0CF7  0BD2               	decfsz	??___fladd,f
  4278  0CF8  2CF2               	goto	u6205
  4279  0CF9  1BDD               	btfsc	___fladd@grs,7
  4280  0CFA  144A               	bsf	___fladd@b,0
  4281  0CFB  1C5D               	btfss	___fladd@grs,0
  4282  0CFC  2CFF               	goto	l6198
  4283  0CFD  1403               	setc
  4284  0CFE  2D00               	goto	L3
  4285  0CFF                     l6198:	
  4286  0CFF  1003               	clrc
  4287  0D00                     L3:	
  4288  0D00  0DDD               	rlf	___fladd@grs,f
  4289  0D01  085C               	movf	___fladd@bexp,w
  4290  0D02  1903               	btfsc	3,2
  4291  0D03  2D06               	goto	l6204
  4292  0D04  3001               	movlw	1
  4293  0D05  02DC               	subwf	___fladd@bexp,f
  4294  0D06                     l6204:	
  4295  0D06  1FCC               	btfss	___fladd@b+2,7
  4296  0D07  2CF0               	goto	l6190
  4297  0D08                     l6206:	
  4298  0D08  01DB               	clrf	___fladd@aexp
  4299  0D09  1FDD               	btfss	___fladd@grs,7
  4300  0D0A  2D13               	goto	l6216
  4301  0D0B  085D               	movf	___fladd@grs,w
  4302  0D0C  397F               	andlw	127
  4303  0D0D  1903               	btfsc	3,2
  4304  0D0E  184A               	btfsc	___fladd@b,0
  4305  0D0F  2D11               	goto	l6212
  4306  0D10  2D13               	goto	l6216
  4307  0D11                     l6212:	
  4308  0D11  01DB               	clrf	___fladd@aexp
  4309  0D12  0ADB               	incf	___fladd@aexp,f
  4310  0D13                     l6216:	
  4311  0D13  085B               	movf	___fladd@aexp,w
  4312  0D14  1903               	btfsc	3,2
  4313  0D15  2D46               	goto	l1323
  4314  0D16  3001               	movlw	1
  4315  0D17  07CA               	addwf	___fladd@b,f
  4316  0D18  3000               	movlw	0
  4317  0D19  1803               	skipnc
  4318  0D1A  3001               	movlw	1
  4319  0D1B  07CB               	addwf	___fladd@b+1,f
  4320  0D1C  3000               	movlw	0
  4321  0D1D  1803               	skipnc
  4322  0D1E  3001               	movlw	1
  4323  0D1F  07CC               	addwf	___fladd@b+2,f
  4324  0D20  3000               	movlw	0
  4325  0D21  1803               	skipnc
  4326  0D22  3001               	movlw	1
  4327  0D23  07CD               	addwf	___fladd@b+3,f
  4328  0D24  1C4D               	btfss	___fladd@b+3,0
  4329  0D25  2D46               	goto	l1323
  4330  0D26  084A               	movf	___fladd@b,w
  4331  0D27  00D2               	movwf	??___fladd
  4332  0D28  084B               	movf	___fladd@b+1,w
  4333  0D29  00D3               	movwf	??___fladd+1
  4334  0D2A  084C               	movf	___fladd@b+2,w
  4335  0D2B  00D4               	movwf	??___fladd+2
  4336  0D2C  084D               	movf	___fladd@b+3,w
  4337  0D2D  00D5               	movwf	??___fladd+3
  4338  0D2E  3001               	movlw	1
  4339  0D2F  00D6               	movwf	??___fladd+4
  4340  0D30                     u6305:	
  4341  0D30  0D55               	rlf	??___fladd+3,w
  4342  0D31  0CD5               	rrf	??___fladd+3,f
  4343  0D32  0CD4               	rrf	??___fladd+2,f
  4344  0D33  0CD3               	rrf	??___fladd+1,f
  4345  0D34  0CD2               	rrf	??___fladd,f
  4346  0D35  0BD6               	decfsz	??___fladd+4,f
  4347  0D36  2D30               	goto	u6305
  4348  0D37  0855               	movf	??___fladd+3,w
  4349  0D38  00CD               	movwf	___fladd@b+3
  4350  0D39  0854               	movf	??___fladd+2,w
  4351  0D3A  00CC               	movwf	___fladd@b+2
  4352  0D3B  0853               	movf	??___fladd+1,w
  4353  0D3C  00CB               	movwf	___fladd@b+1
  4354  0D3D  0852               	movf	??___fladd,w
  4355  0D3E  00CA               	movwf	___fladd@b
  4356  0D3F  0A5C               	incf	___fladd@bexp,w
  4357  0D40  1903               	btfsc	3,2
  4358  0D41  2D46               	goto	l1323
  4359  0D42  3001               	movlw	1
  4360  0D43  00D2               	movwf	??___fladd
  4361  0D44  0852               	movf	??___fladd,w
  4362  0D45  07DC               	addwf	___fladd@bexp,f
  4363  0D46                     l1323:	
  4364  0D46  0A5C               	incf	___fladd@bexp,w
  4365  0D47  1D03               	btfss	3,2
  4366  0D48  085C               	movf	___fladd@bexp,w
  4367  0D49  1D03               	btfss	3,2
  4368  0D4A  2D56               	goto	l6234
  4369  0D4B  3000               	movlw	0
  4370  0D4C  00CD               	movwf	___fladd@b+3
  4371  0D4D  3000               	movlw	0
  4372  0D4E  00CC               	movwf	___fladd@b+2
  4373  0D4F  3000               	movlw	0
  4374  0D50  00CB               	movwf	___fladd@b+1
  4375  0D51  3000               	movlw	0
  4376  0D52  00CA               	movwf	___fladd@b
  4377  0D53  085C               	movf	___fladd@bexp,w
  4378  0D54  1903               	btfsc	3,2
  4379  0D55  01DA               	clrf	___fladd@signs
  4380  0D56                     l6234:	
  4381  0D56  1C5C               	btfss	___fladd@bexp,0
  4382  0D57  2D5A               	goto	l6238
  4383  0D58  17CC               	bsf	___fladd@b+2,7
  4384  0D59  2D5E               	goto	l1331
  4385  0D5A                     l6238:	
  4386  0D5A  307F               	movlw	127
  4387  0D5B  00D2               	movwf	??___fladd
  4388  0D5C  0852               	movf	??___fladd,w
  4389  0D5D  05CC               	andwf	___fladd@b+2,f
  4390  0D5E                     l1331:	
  4391  0D5E  085C               	movf	___fladd@bexp,w
  4392  0D5F  00D2               	movwf	??___fladd
  4393  0D60  1003               	clrc
  4394  0D61  0C52               	rrf	??___fladd,w
  4395  0D62  00D3               	movwf	??___fladd+1
  4396  0D63  0853               	movf	??___fladd+1,w
  4397  0D64  00CD               	movwf	___fladd@b+3
  4398  0D65  1FDA               	btfss	___fladd@signs,7
  4399  0D66  0008               	return
  4400  0D67  17CD               	bsf	___fladd@b+3,7
  4401  0D68  0008               	return
  4402  0D69                     __end_of___fladd:	
  4403                           
  4404                           	psect	text5
  4405  10A3                     __ptext5:	
  4406 ;; *************** function ___flge *****************
  4407 ;; Defined at:
  4408 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  ff1             4    0[BANK0 ] unsigned char 
  4411 ;;  ff2             4    4[BANK0 ] unsigned char 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;		None               void
  4416 ;; Registers used:
  4417 ;;		wreg, status,2, status,0
  4418 ;; Tracked objects:
  4419 ;;		On entry : 300/0
  4420 ;;		On exit  : 300/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4423 ;;      Params:         0       8       0       0       0
  4424 ;;      Locals:         0       0       0       0       0
  4425 ;;      Temps:          0       4       0       0       0
  4426 ;;      Totals:         0      12       0       0       0
  4427 ;;Total ram usage:       12 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    1
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_MediaPlacaVaccum
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           
  4438                           ;psect for function ___flge
  4439  10A3                     ___flge:	
  4440                           
  4441                           ;incstack = 0
  4442                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4443  10A3  3000               	movlw	0
  4444  10A4  0520               	andwf	___flge@ff1,w
  4445  10A5  00A8               	movwf	??___flge
  4446  10A6  3000               	movlw	0
  4447  10A7  0521               	andwf	___flge@ff1+1,w
  4448  10A8  00A9               	movwf	??___flge+1
  4449  10A9  3080               	movlw	128
  4450  10AA  0522               	andwf	___flge@ff1+2,w
  4451  10AB  00AA               	movwf	??___flge+2
  4452  10AC  307F               	movlw	127
  4453  10AD  0523               	andwf	___flge@ff1+3,w
  4454  10AE  00AB               	movwf	??___flge+3
  4455  10AF  082B               	movf	??___flge+3,w
  4456  10B0  042A               	iorwf	??___flge+2,w
  4457  10B1  0429               	iorwf	??___flge+1,w
  4458  10B2  0428               	iorwf	??___flge,w
  4459  10B3  1D03               	skipz
  4460  10B4  28BD               	goto	l1170
  4461  10B5  3000               	movlw	0
  4462  10B6  00A3               	movwf	___flge@ff1+3
  4463  10B7  3000               	movlw	0
  4464  10B8  00A2               	movwf	___flge@ff1+2
  4465  10B9  3000               	movlw	0
  4466  10BA  00A1               	movwf	___flge@ff1+1
  4467  10BB  3000               	movlw	0
  4468  10BC  00A0               	movwf	___flge@ff1
  4469  10BD                     l1170:	
  4470  10BD  3000               	movlw	0
  4471  10BE  0524               	andwf	___flge@ff2,w
  4472  10BF  00A8               	movwf	??___flge
  4473  10C0  3000               	movlw	0
  4474  10C1  0525               	andwf	___flge@ff2+1,w
  4475  10C2  00A9               	movwf	??___flge+1
  4476  10C3  3080               	movlw	128
  4477  10C4  0526               	andwf	___flge@ff2+2,w
  4478  10C5  00AA               	movwf	??___flge+2
  4479  10C6  307F               	movlw	127
  4480  10C7  0527               	andwf	___flge@ff2+3,w
  4481  10C8  00AB               	movwf	??___flge+3
  4482  10C9  082B               	movf	??___flge+3,w
  4483  10CA  042A               	iorwf	??___flge+2,w
  4484  10CB  0429               	iorwf	??___flge+1,w
  4485  10CC  0428               	iorwf	??___flge,w
  4486  10CD  1D03               	skipz
  4487  10CE  28D7               	goto	l6922
  4488  10CF  3000               	movlw	0
  4489  10D0  00A7               	movwf	___flge@ff2+3
  4490  10D1  3000               	movlw	0
  4491  10D2  00A6               	movwf	___flge@ff2+2
  4492  10D3  3000               	movlw	0
  4493  10D4  00A5               	movwf	___flge@ff2+1
  4494  10D5  3000               	movlw	0
  4495  10D6  00A4               	movwf	___flge@ff2
  4496  10D7                     l6922:	
  4497  10D7  1FA3               	btfss	___flge@ff1+3,7
  4498  10D8  28FD               	goto	l6926
  4499  10D9  3000               	movlw	0
  4500  10DA  00A8               	movwf	??___flge
  4501  10DB  3000               	movlw	0
  4502  10DC  00A9               	movwf	??___flge+1
  4503  10DD  3000               	movlw	0
  4504  10DE  00AA               	movwf	??___flge+2
  4505  10DF  3080               	movlw	128
  4506  10E0  00AB               	movwf	??___flge+3
  4507  10E1  0820               	movf	___flge@ff1,w
  4508  10E2  02A8               	subwf	??___flge,f
  4509  10E3  0821               	movf	___flge@ff1+1,w
  4510  10E4  1C03               	skipc
  4511  10E5  0F21               	incfsz	___flge@ff1+1,w
  4512  10E6  28E8               	goto	u7291
  4513  10E7  28E9               	goto	u7292
  4514  10E8                     u7291:	
  4515  10E8  02A9               	subwf	??___flge+1,f
  4516  10E9                     u7292:	
  4517  10E9  0822               	movf	___flge@ff1+2,w
  4518  10EA  1C03               	skipc
  4519  10EB  0F22               	incfsz	___flge@ff1+2,w
  4520  10EC  28EE               	goto	u7293
  4521  10ED  28EF               	goto	u7294
  4522  10EE                     u7293:	
  4523  10EE  02AA               	subwf	??___flge+2,f
  4524  10EF                     u7294:	
  4525  10EF  0823               	movf	___flge@ff1+3,w
  4526  10F0  1C03               	skipc
  4527  10F1  0F23               	incfsz	___flge@ff1+3,w
  4528  10F2  28F4               	goto	u7295
  4529  10F3  28F5               	goto	u7296
  4530  10F4                     u7295:	
  4531  10F4  02AB               	subwf	??___flge+3,f
  4532  10F5                     u7296:	
  4533  10F5  082B               	movf	??___flge+3,w
  4534  10F6  00A3               	movwf	___flge@ff1+3
  4535  10F7  082A               	movf	??___flge+2,w
  4536  10F8  00A2               	movwf	___flge@ff1+2
  4537  10F9  0829               	movf	??___flge+1,w
  4538  10FA  00A1               	movwf	___flge@ff1+1
  4539  10FB  0828               	movf	??___flge,w
  4540  10FC  00A0               	movwf	___flge@ff1
  4541  10FD                     l6926:	
  4542  10FD  1FA7               	btfss	___flge@ff2+3,7
  4543  10FE  2923               	goto	l1173
  4544  10FF  3000               	movlw	0
  4545  1100  00A8               	movwf	??___flge
  4546  1101  3000               	movlw	0
  4547  1102  00A9               	movwf	??___flge+1
  4548  1103  3000               	movlw	0
  4549  1104  00AA               	movwf	??___flge+2
  4550  1105  3080               	movlw	128
  4551  1106  00AB               	movwf	??___flge+3
  4552  1107  0824               	movf	___flge@ff2,w
  4553  1108  02A8               	subwf	??___flge,f
  4554  1109  0825               	movf	___flge@ff2+1,w
  4555  110A  1C03               	skipc
  4556  110B  0F25               	incfsz	___flge@ff2+1,w
  4557  110C  290E               	goto	u7311
  4558  110D  290F               	goto	u7312
  4559  110E                     u7311:	
  4560  110E  02A9               	subwf	??___flge+1,f
  4561  110F                     u7312:	
  4562  110F  0826               	movf	___flge@ff2+2,w
  4563  1110  1C03               	skipc
  4564  1111  0F26               	incfsz	___flge@ff2+2,w
  4565  1112  2914               	goto	u7313
  4566  1113  2915               	goto	u7314
  4567  1114                     u7313:	
  4568  1114  02AA               	subwf	??___flge+2,f
  4569  1115                     u7314:	
  4570  1115  0827               	movf	___flge@ff2+3,w
  4571  1116  1C03               	skipc
  4572  1117  0F27               	incfsz	___flge@ff2+3,w
  4573  1118  291A               	goto	u7315
  4574  1119  291B               	goto	u7316
  4575  111A                     u7315:	
  4576  111A  02AB               	subwf	??___flge+3,f
  4577  111B                     u7316:	
  4578  111B  082B               	movf	??___flge+3,w
  4579  111C  00A7               	movwf	___flge@ff2+3
  4580  111D  082A               	movf	??___flge+2,w
  4581  111E  00A6               	movwf	___flge@ff2+2
  4582  111F  0829               	movf	??___flge+1,w
  4583  1120  00A5               	movwf	___flge@ff2+1
  4584  1121  0828               	movf	??___flge,w
  4585  1122  00A4               	movwf	___flge@ff2
  4586  1123                     l1173:	
  4587  1123  3080               	movlw	128
  4588  1124  06A3               	xorwf	___flge@ff1+3,f
  4589  1125  3080               	movlw	128
  4590  1126  06A7               	xorwf	___flge@ff2+3,f
  4591  1127  0827               	movf	___flge@ff2+3,w
  4592  1128  0223               	subwf	___flge@ff1+3,w
  4593  1129  1D03               	skipz
  4594  112A  0008               	return
  4595  112B  0826               	movf	___flge@ff2+2,w
  4596  112C  0222               	subwf	___flge@ff1+2,w
  4597  112D  1D03               	skipz
  4598  112E  0008               	return
  4599  112F  0825               	movf	___flge@ff2+1,w
  4600  1130  0221               	subwf	___flge@ff1+1,w
  4601  1131  1D03               	skipz
  4602  1132  0008               	return
  4603  1133  0824               	movf	___flge@ff2,w
  4604  1134  0220               	subwf	___flge@ff1,w
  4605  1135  0008               	return
  4606  1136                     __end_of___flge:	
  4607                           
  4608                           	psect	text6
  4609  099B                     __ptext6:	
  4610 ;; *************** function ___fldiv *****************
  4611 ;; Defined at:
  4612 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  a               4   33[BANK0 ] unsigned char 
  4615 ;;  b               4   37[BANK0 ] unsigned char 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  grs             4   53[BANK0 ] unsigned long 
  4618 ;;  rem             4   46[BANK0 ] unsigned long 
  4619 ;;  new_exp         2   51[BANK0 ] int 
  4620 ;;  aexp            1   58[BANK0 ] unsigned char 
  4621 ;;  bexp            1   57[BANK0 ] unsigned char 
  4622 ;;  sign            1   50[BANK0 ] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  4   33[BANK0 ] unsigned char 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2, status,0, btemp+1
  4627 ;; Tracked objects:
  4628 ;;		On entry : 300/0
  4629 ;;		On exit  : 300/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4632 ;;      Params:         0       8       0       0       0
  4633 ;;      Locals:         0      13       0       0       0
  4634 ;;      Temps:          0       5       0       0       0
  4635 ;;      Totals:         0      26       0       0       0
  4636 ;;Total ram usage:       26 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    1
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_MediaPlacaVaccum
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           
  4647                           ;psect for function ___fldiv
  4648  099B                     ___fldiv:	
  4649                           
  4650                           ;incstack = 0
  4651                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4652  099B  0848               	movf	___fldiv@b+3,w
  4653  099C  3980               	andlw	128
  4654  099D  00C9               	movwf	??___fldiv
  4655  099E  0849               	movf	??___fldiv,w
  4656  099F  00D2               	movwf	___fldiv@sign
  4657  09A0  0848               	movf	___fldiv@b+3,w
  4658  09A1  00C9               	movwf	??___fldiv
  4659  09A2  0749               	addwf	??___fldiv,w
  4660  09A3  00CA               	movwf	??___fldiv+1
  4661  09A4  084A               	movf	??___fldiv+1,w
  4662  09A5  00D9               	movwf	___fldiv@bexp
  4663  09A6  1BC7               	btfsc	___fldiv@b+2,7
  4664  09A7  1459               	bsf	___fldiv@bexp,0
  4665  09A8  0859               	movf	___fldiv@bexp,w
  4666  09A9  1903               	btfsc	3,2
  4667  09AA  29B9               	goto	l6960
  4668  09AB  0A59               	incf	___fldiv@bexp,w
  4669  09AC  1D03               	btfss	3,2
  4670  09AD  29B6               	goto	l6956
  4671  09AE  3000               	movlw	0
  4672  09AF  00C8               	movwf	___fldiv@b+3
  4673  09B0  3000               	movlw	0
  4674  09B1  00C7               	movwf	___fldiv@b+2
  4675  09B2  3000               	movlw	0
  4676  09B3  00C6               	movwf	___fldiv@b+1
  4677  09B4  3000               	movlw	0
  4678  09B5  00C5               	movwf	___fldiv@b
  4679  09B6                     l6956:	
  4680  09B6  17C7               	bsf	___fldiv@b+2,7
  4681  09B7  01C8               	clrf	___fldiv@b+3
  4682  09B8  29C1               	goto	l6962
  4683  09B9                     l6960:	
  4684  09B9  3000               	movlw	0
  4685  09BA  00C8               	movwf	___fldiv@b+3
  4686  09BB  3000               	movlw	0
  4687  09BC  00C7               	movwf	___fldiv@b+2
  4688  09BD  3000               	movlw	0
  4689  09BE  00C6               	movwf	___fldiv@b+1
  4690  09BF  3000               	movlw	0
  4691  09C0  00C5               	movwf	___fldiv@b
  4692  09C1                     l6962:	
  4693  09C1  0844               	movf	___fldiv@a+3,w
  4694  09C2  3980               	andlw	128
  4695  09C3  00C9               	movwf	??___fldiv
  4696  09C4  0849               	movf	??___fldiv,w
  4697  09C5  06D2               	xorwf	___fldiv@sign,f
  4698  09C6  0844               	movf	___fldiv@a+3,w
  4699  09C7  00C9               	movwf	??___fldiv
  4700  09C8  0749               	addwf	??___fldiv,w
  4701  09C9  00CA               	movwf	??___fldiv+1
  4702  09CA  084A               	movf	??___fldiv+1,w
  4703  09CB  00DA               	movwf	___fldiv@aexp
  4704  09CC  1BC3               	btfsc	___fldiv@a+2,7
  4705  09CD  145A               	bsf	___fldiv@aexp,0
  4706  09CE  085A               	movf	___fldiv@aexp,w
  4707  09CF  1903               	btfsc	3,2
  4708  09D0  29DF               	goto	l6980
  4709  09D1  0A5A               	incf	___fldiv@aexp,w
  4710  09D2  1D03               	btfss	3,2
  4711  09D3  29DC               	goto	l6976
  4712  09D4  3000               	movlw	0
  4713  09D5  00C4               	movwf	___fldiv@a+3
  4714  09D6  3000               	movlw	0
  4715  09D7  00C3               	movwf	___fldiv@a+2
  4716  09D8  3000               	movlw	0
  4717  09D9  00C2               	movwf	___fldiv@a+1
  4718  09DA  3000               	movlw	0
  4719  09DB  00C1               	movwf	___fldiv@a
  4720  09DC                     l6976:	
  4721  09DC  17C3               	bsf	___fldiv@a+2,7
  4722  09DD  01C4               	clrf	___fldiv@a+3
  4723  09DE  29E7               	goto	l1345
  4724  09DF                     l6980:	
  4725  09DF  3000               	movlw	0
  4726  09E0  00C4               	movwf	___fldiv@a+3
  4727  09E1  3000               	movlw	0
  4728  09E2  00C3               	movwf	___fldiv@a+2
  4729  09E3  3000               	movlw	0
  4730  09E4  00C2               	movwf	___fldiv@a+1
  4731  09E5  3000               	movlw	0
  4732  09E6  00C1               	movwf	___fldiv@a
  4733  09E7                     l1345:	
  4734  09E7  0844               	movf	___fldiv@a+3,w
  4735  09E8  0443               	iorwf	___fldiv@a+2,w
  4736  09E9  0442               	iorwf	___fldiv@a+1,w
  4737  09EA  0441               	iorwf	___fldiv@a,w
  4738  09EB  1D03               	skipz
  4739  09EC  2A06               	goto	l6990
  4740  09ED  3000               	movlw	0
  4741  09EE  00C8               	movwf	___fldiv@b+3
  4742  09EF  3000               	movlw	0
  4743  09F0  00C7               	movwf	___fldiv@b+2
  4744  09F1  3000               	movlw	0
  4745  09F2  00C6               	movwf	___fldiv@b+1
  4746  09F3  3000               	movlw	0
  4747  09F4  00C5               	movwf	___fldiv@b
  4748  09F5  3080               	movlw	128
  4749  09F6  04C7               	iorwf	___fldiv@b+2,f
  4750  09F7  307F               	movlw	127
  4751  09F8  04C8               	iorwf	___fldiv@b+3,f
  4752  09F9                     L5:	
  4753  09F9  0852               	movf	___fldiv@sign,w
  4754  09FA  00C9               	movwf	??___fldiv
  4755  09FB  0849               	movf	??___fldiv,w
  4756  09FC  04C8               	iorwf	___fldiv@b+3,f
  4757  09FD  0848               	movf	___fldiv@b+3,w
  4758  09FE  00C4               	movwf	?___fldiv+3
  4759  09FF  0847               	movf	___fldiv@b+2,w
  4760  0A00  00C3               	movwf	?___fldiv+2
  4761  0A01  0846               	movf	___fldiv@b+1,w
  4762  0A02  00C2               	movwf	?___fldiv+1
  4763  0A03  0845               	movf	___fldiv@b,w
  4764  0A04  00C1               	movwf	?___fldiv
  4765  0A05  0008               	return
  4766  0A06                     l6990:	
  4767  0A06  0859               	movf	___fldiv@bexp,w
  4768  0A07  1D03               	btfss	3,2
  4769  0A08  2A12               	goto	l6996
  4770  0A09  3000               	movlw	0
  4771  0A0A  00C4               	movwf	?___fldiv+3
  4772  0A0B  3000               	movlw	0
  4773  0A0C  00C3               	movwf	?___fldiv+2
  4774  0A0D  3000               	movlw	0
  4775  0A0E  00C2               	movwf	?___fldiv+1
  4776  0A0F  3000               	movlw	0
  4777  0A10  00C1               	movwf	?___fldiv
  4778  0A11  0008               	return
  4779  0A12                     l6996:	
  4780  0A12  0859               	movf	___fldiv@bexp,w
  4781  0A13  00C9               	movwf	??___fldiv
  4782  0A14  01CA               	clrf	??___fldiv+1
  4783  0A15  084A               	movf	??___fldiv+1,w
  4784  0A16  00CC               	movwf	??___fldiv+3
  4785  0A17  085A               	movf	___fldiv@aexp,w
  4786  0A18  0249               	subwf	??___fldiv,w
  4787  0A19  00CB               	movwf	??___fldiv+2
  4788  0A1A  1C03               	skipc
  4789  0A1B  03CC               	decf	??___fldiv+3,f
  4790  0A1C  084B               	movf	??___fldiv+2,w
  4791  0A1D  3E7F               	addlw	127
  4792  0A1E  00D3               	movwf	___fldiv@new_exp
  4793  0A1F  084C               	movf	??___fldiv+3,w
  4794  0A20  1803               	skipnc
  4795  0A21  3E01               	addlw	1
  4796  0A22  3E00               	addlw	0
  4797  0A23  00D4               	movwf	___fldiv@new_exp+1
  4798  0A24  0848               	movf	___fldiv@b+3,w
  4799  0A25  00D1               	movwf	___fldiv@rem+3
  4800  0A26  0847               	movf	___fldiv@b+2,w
  4801  0A27  00D0               	movwf	___fldiv@rem+2
  4802  0A28  0846               	movf	___fldiv@b+1,w
  4803  0A29  00CF               	movwf	___fldiv@rem+1
  4804  0A2A  0845               	movf	___fldiv@b,w
  4805  0A2B  00CE               	movwf	___fldiv@rem
  4806  0A2C  3000               	movlw	0
  4807  0A2D  00C8               	movwf	___fldiv@b+3
  4808  0A2E  3000               	movlw	0
  4809  0A2F  00C7               	movwf	___fldiv@b+2
  4810  0A30  3000               	movlw	0
  4811  0A31  00C6               	movwf	___fldiv@b+1
  4812  0A32  3000               	movlw	0
  4813  0A33  00C5               	movwf	___fldiv@b
  4814  0A34  3000               	movlw	0
  4815  0A35  00D8               	movwf	___fldiv@grs+3
  4816  0A36  3000               	movlw	0
  4817  0A37  00D7               	movwf	___fldiv@grs+2
  4818  0A38  3000               	movlw	0
  4819  0A39  00D6               	movwf	___fldiv@grs+1
  4820  0A3A  3000               	movlw	0
  4821  0A3B  00D5               	movwf	___fldiv@grs
  4822  0A3C  01DA               	clrf	___fldiv@aexp
  4823  0A3D                     l7024:	
  4824  0A3D  301A               	movlw	26
  4825  0A3E  025A               	subwf	___fldiv@aexp,w
  4826  0A3F  1803               	btfsc	3,0
  4827  0A40  2A85               	goto	l7026
  4828  0A41  085A               	movf	___fldiv@aexp,w
  4829  0A42  1903               	btfsc	3,2
  4830  0A43  2A61               	goto	l7016
  4831  0A44  3001               	movlw	1
  4832  0A45  00C9               	movwf	??___fldiv
  4833  0A46                     u7425:	
  4834  0A46  1003               	clrc
  4835  0A47  0DCE               	rlf	___fldiv@rem,f
  4836  0A48  0DCF               	rlf	___fldiv@rem+1,f
  4837  0A49  0DD0               	rlf	___fldiv@rem+2,f
  4838  0A4A  0DD1               	rlf	___fldiv@rem+3,f
  4839  0A4B  0BC9               	decfsz	??___fldiv,f
  4840  0A4C  2A46               	goto	u7425
  4841  0A4D  3001               	movlw	1
  4842  0A4E  00C9               	movwf	??___fldiv
  4843  0A4F                     u7435:	
  4844  0A4F  1003               	clrc
  4845  0A50  0DC5               	rlf	___fldiv@b,f
  4846  0A51  0DC6               	rlf	___fldiv@b+1,f
  4847  0A52  0DC7               	rlf	___fldiv@b+2,f
  4848  0A53  0DC8               	rlf	___fldiv@b+3,f
  4849  0A54  0BC9               	decfsz	??___fldiv,f
  4850  0A55  2A4F               	goto	u7435
  4851  0A56  1BD8               	btfsc	___fldiv@grs+3,7
  4852  0A57  1445               	bsf	___fldiv@b,0
  4853  0A58  3001               	movlw	1
  4854  0A59  00C9               	movwf	??___fldiv
  4855  0A5A                     u7455:	
  4856  0A5A  1003               	clrc
  4857  0A5B  0DD5               	rlf	___fldiv@grs,f
  4858  0A5C  0DD6               	rlf	___fldiv@grs+1,f
  4859  0A5D  0DD7               	rlf	___fldiv@grs+2,f
  4860  0A5E  0DD8               	rlf	___fldiv@grs+3,f
  4861  0A5F  0BC9               	decfsz	??___fldiv,f
  4862  0A60  2A5A               	goto	u7455
  4863  0A61                     l7016:	
  4864  0A61  0844               	movf	___fldiv@a+3,w
  4865  0A62  0251               	subwf	___fldiv@rem+3,w
  4866  0A63  1D03               	skipz
  4867  0A64  2A6F               	goto	u7465
  4868  0A65  0843               	movf	___fldiv@a+2,w
  4869  0A66  0250               	subwf	___fldiv@rem+2,w
  4870  0A67  1D03               	skipz
  4871  0A68  2A6F               	goto	u7465
  4872  0A69  0842               	movf	___fldiv@a+1,w
  4873  0A6A  024F               	subwf	___fldiv@rem+1,w
  4874  0A6B  1D03               	skipz
  4875  0A6C  2A6F               	goto	u7465
  4876  0A6D  0841               	movf	___fldiv@a,w
  4877  0A6E  024E               	subwf	___fldiv@rem,w
  4878  0A6F                     u7465:	
  4879  0A6F  1C03               	skipc
  4880  0A70  2A80               	goto	l7022
  4881  0A71  1758               	bsf	___fldiv@grs+3,6
  4882  0A72  0841               	movf	___fldiv@a,w
  4883  0A73  02CE               	subwf	___fldiv@rem,f
  4884  0A74  0842               	movf	___fldiv@a+1,w
  4885  0A75  1C03               	skipc
  4886  0A76  0F42               	incfsz	___fldiv@a+1,w
  4887  0A77  02CF               	subwf	___fldiv@rem+1,f
  4888  0A78  0843               	movf	___fldiv@a+2,w
  4889  0A79  1C03               	skipc
  4890  0A7A  0F43               	incfsz	___fldiv@a+2,w
  4891  0A7B  02D0               	subwf	___fldiv@rem+2,f
  4892  0A7C  0844               	movf	___fldiv@a+3,w
  4893  0A7D  1C03               	skipc
  4894  0A7E  0F44               	incfsz	___fldiv@a+3,w
  4895  0A7F  02D1               	subwf	___fldiv@rem+3,f
  4896  0A80                     l7022:	
  4897  0A80  3001               	movlw	1
  4898  0A81  00C9               	movwf	??___fldiv
  4899  0A82  0849               	movf	??___fldiv,w
  4900  0A83  07DA               	addwf	___fldiv@aexp,f
  4901  0A84  2A3D               	goto	l7024
  4902  0A85                     l7026:	
  4903  0A85  0851               	movf	___fldiv@rem+3,w
  4904  0A86  0450               	iorwf	___fldiv@rem+2,w
  4905  0A87  044F               	iorwf	___fldiv@rem+1,w
  4906  0A88  044E               	iorwf	___fldiv@rem,w
  4907  0A89  1D03               	btfss	3,2
  4908  0A8A  1455               	bsf	___fldiv@grs,0
  4909  0A8B                     l7040:	
  4910  0A8B  1BC7               	btfsc	___fldiv@b+2,7
  4911  0A8C  2AA8               	goto	l7042
  4912  0A8D  3001               	movlw	1
  4913  0A8E  00C9               	movwf	??___fldiv
  4914  0A8F                     u7495:	
  4915  0A8F  1003               	clrc
  4916  0A90  0DC5               	rlf	___fldiv@b,f
  4917  0A91  0DC6               	rlf	___fldiv@b+1,f
  4918  0A92  0DC7               	rlf	___fldiv@b+2,f
  4919  0A93  0DC8               	rlf	___fldiv@b+3,f
  4920  0A94  0BC9               	decfsz	??___fldiv,f
  4921  0A95  2A8F               	goto	u7495
  4922  0A96  1BD8               	btfsc	___fldiv@grs+3,7
  4923  0A97  1445               	bsf	___fldiv@b,0
  4924  0A98  3001               	movlw	1
  4925  0A99  00C9               	movwf	??___fldiv
  4926  0A9A                     u7515:	
  4927  0A9A  1003               	clrc
  4928  0A9B  0DD5               	rlf	___fldiv@grs,f
  4929  0A9C  0DD6               	rlf	___fldiv@grs+1,f
  4930  0A9D  0DD7               	rlf	___fldiv@grs+2,f
  4931  0A9E  0DD8               	rlf	___fldiv@grs+3,f
  4932  0A9F  0BC9               	decfsz	??___fldiv,f
  4933  0AA0  2A9A               	goto	u7515
  4934  0AA1  30FF               	movlw	255
  4935  0AA2  07D3               	addwf	___fldiv@new_exp,f
  4936  0AA3  1803               	skipnc
  4937  0AA4  0AD4               	incf	___fldiv@new_exp+1,f
  4938  0AA5  30FF               	movlw	255
  4939  0AA6  07D4               	addwf	___fldiv@new_exp+1,f
  4940  0AA7  2A8B               	goto	l7040
  4941  0AA8                     l7042:	
  4942  0AA8  01DA               	clrf	___fldiv@aexp
  4943  0AA9  1FD8               	btfss	___fldiv@grs+3,7
  4944  0AAA  2AC1               	goto	l7052
  4945  0AAB  30FF               	movlw	255
  4946  0AAC  0555               	andwf	___fldiv@grs,w
  4947  0AAD  00C9               	movwf	??___fldiv
  4948  0AAE  30FF               	movlw	255
  4949  0AAF  0556               	andwf	___fldiv@grs+1,w
  4950  0AB0  00CA               	movwf	??___fldiv+1
  4951  0AB1  30FF               	movlw	255
  4952  0AB2  0557               	andwf	___fldiv@grs+2,w
  4953  0AB3  00CB               	movwf	??___fldiv+2
  4954  0AB4  307F               	movlw	127
  4955  0AB5  0558               	andwf	___fldiv@grs+3,w
  4956  0AB6  00CC               	movwf	??___fldiv+3
  4957  0AB7  084C               	movf	??___fldiv+3,w
  4958  0AB8  044B               	iorwf	??___fldiv+2,w
  4959  0AB9  044A               	iorwf	??___fldiv+1,w
  4960  0ABA  0449               	iorwf	??___fldiv,w
  4961  0ABB  1903               	skipnz
  4962  0ABC  1845               	btfsc	___fldiv@b,0
  4963  0ABD  2ABF               	goto	l7048
  4964  0ABE  2AC1               	goto	l7052
  4965  0ABF                     l7048:	
  4966  0ABF  01DA               	clrf	___fldiv@aexp
  4967  0AC0  0ADA               	incf	___fldiv@aexp,f
  4968  0AC1                     l7052:	
  4969  0AC1  085A               	movf	___fldiv@aexp,w
  4970  0AC2  1903               	btfsc	3,2
  4971  0AC3  2AF3               	goto	l7062
  4972  0AC4  3001               	movlw	1
  4973  0AC5  07C5               	addwf	___fldiv@b,f
  4974  0AC6  3000               	movlw	0
  4975  0AC7  1803               	skipnc
  4976  0AC8  3001               	movlw	1
  4977  0AC9  07C6               	addwf	___fldiv@b+1,f
  4978  0ACA  3000               	movlw	0
  4979  0ACB  1803               	skipnc
  4980  0ACC  3001               	movlw	1
  4981  0ACD  07C7               	addwf	___fldiv@b+2,f
  4982  0ACE  3000               	movlw	0
  4983  0ACF  1803               	skipnc
  4984  0AD0  3001               	movlw	1
  4985  0AD1  07C8               	addwf	___fldiv@b+3,f
  4986  0AD2  1C48               	btfss	___fldiv@b+3,0
  4987  0AD3  2AF3               	goto	l7062
  4988  0AD4  0845               	movf	___fldiv@b,w
  4989  0AD5  00C9               	movwf	??___fldiv
  4990  0AD6  0846               	movf	___fldiv@b+1,w
  4991  0AD7  00CA               	movwf	??___fldiv+1
  4992  0AD8  0847               	movf	___fldiv@b+2,w
  4993  0AD9  00CB               	movwf	??___fldiv+2
  4994  0ADA  0848               	movf	___fldiv@b+3,w
  4995  0ADB  00CC               	movwf	??___fldiv+3
  4996  0ADC  3001               	movlw	1
  4997  0ADD  00CD               	movwf	??___fldiv+4
  4998  0ADE                     u7585:	
  4999  0ADE  0D4C               	rlf	??___fldiv+3,w
  5000  0ADF  0CCC               	rrf	??___fldiv+3,f
  5001  0AE0  0CCB               	rrf	??___fldiv+2,f
  5002  0AE1  0CCA               	rrf	??___fldiv+1,f
  5003  0AE2  0CC9               	rrf	??___fldiv,f
  5004  0AE3  0BCD               	decfsz	??___fldiv+4,f
  5005  0AE4  2ADE               	goto	u7585
  5006  0AE5  084C               	movf	??___fldiv+3,w
  5007  0AE6  00C8               	movwf	___fldiv@b+3
  5008  0AE7  084B               	movf	??___fldiv+2,w
  5009  0AE8  00C7               	movwf	___fldiv@b+2
  5010  0AE9  084A               	movf	??___fldiv+1,w
  5011  0AEA  00C6               	movwf	___fldiv@b+1
  5012  0AEB  0849               	movf	??___fldiv,w
  5013  0AEC  00C5               	movwf	___fldiv@b
  5014  0AED  3001               	movlw	1
  5015  0AEE  07D3               	addwf	___fldiv@new_exp,f
  5016  0AEF  1803               	skipnc
  5017  0AF0  0AD4               	incf	___fldiv@new_exp+1,f
  5018  0AF1  3000               	movlw	0
  5019  0AF2  07D4               	addwf	___fldiv@new_exp+1,f
  5020  0AF3                     l7062:	
  5021  0AF3  0854               	movf	___fldiv@new_exp+1,w
  5022  0AF4  3A80               	xorlw	128
  5023  0AF5  00FF               	movwf	127
  5024  0AF6  3080               	movlw	128
  5025  0AF7  027F               	subwf	127,w
  5026  0AF8  1D03               	skipz
  5027  0AF9  2AFC               	goto	u7595
  5028  0AFA  30FF               	movlw	255
  5029  0AFB  0253               	subwf	___fldiv@new_exp,w
  5030  0AFC                     u7595:	
  5031  0AFC  1C03               	skipc
  5032  0AFD  2B0C               	goto	l7066
  5033  0AFE  30FF               	movlw	255
  5034  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  5035  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  5036  0B01  00D3               	movwf	___fldiv@new_exp
  5037  0B02  3000               	movlw	0
  5038  0B03  00D4               	movwf	___fldiv@new_exp+1
  5039  0B04  3000               	movlw	0
  5040  0B05  00C8               	movwf	___fldiv@b+3
  5041  0B06  3000               	movlw	0
  5042  0B07  00C7               	movwf	___fldiv@b+2
  5043  0B08  3000               	movlw	0
  5044  0B09  00C6               	movwf	___fldiv@b+1
  5045  0B0A  3000               	movlw	0
  5046  0B0B  00C5               	movwf	___fldiv@b
  5047  0B0C                     l7066:	
  5048  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  5049  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  5050  0B0E  0854               	movf	___fldiv@new_exp+1,w
  5051  0B0F  3A80               	xorlw	128
  5052  0B10  00FF               	movwf	127
  5053  0B11  3080               	movlw	128
  5054  0B12  027F               	subwf	127,w
  5055  0B13  1D03               	skipz
  5056  0B14  2B17               	goto	u7605
  5057  0B15  3001               	movlw	1
  5058  0B16  0253               	subwf	___fldiv@new_exp,w
  5059  0B17                     u7605:	
  5060  0B17  1803               	skipnc
  5061  0B18  2B26               	goto	l1367
  5062  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  5063  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  5064  0B1B  01D3               	clrf	___fldiv@new_exp
  5065  0B1C  01D4               	clrf	___fldiv@new_exp+1
  5066  0B1D  3000               	movlw	0
  5067  0B1E  00C8               	movwf	___fldiv@b+3
  5068  0B1F  3000               	movlw	0
  5069  0B20  00C7               	movwf	___fldiv@b+2
  5070  0B21  3000               	movlw	0
  5071  0B22  00C6               	movwf	___fldiv@b+1
  5072  0B23  3000               	movlw	0
  5073  0B24  00C5               	movwf	___fldiv@b
  5074  0B25  01D2               	clrf	___fldiv@sign
  5075  0B26                     l1367:	
  5076  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  5077  0B27  1303               	bcf	3,6	;RP1=0, select bank0
  5078  0B28  0853               	movf	___fldiv@new_exp,w
  5079  0B29  00C9               	movwf	??___fldiv
  5080  0B2A  0849               	movf	??___fldiv,w
  5081  0B2B  00D9               	movwf	___fldiv@bexp
  5082  0B2C  1C59               	btfss	___fldiv@bexp,0
  5083  0B2D  2B30               	goto	l7078
  5084  0B2E  17C7               	bsf	___fldiv@b+2,7
  5085  0B2F  2B34               	goto	l1369
  5086  0B30                     l7078:	
  5087  0B30  307F               	movlw	127
  5088  0B31  00C9               	movwf	??___fldiv
  5089  0B32  0849               	movf	??___fldiv,w
  5090  0B33  05C7               	andwf	___fldiv@b+2,f
  5091  0B34                     l1369:	
  5092  0B34  0859               	movf	___fldiv@bexp,w
  5093  0B35  00C9               	movwf	??___fldiv
  5094  0B36  1003               	clrc
  5095  0B37  0C49               	rrf	??___fldiv,w
  5096  0B38  00CA               	movwf	??___fldiv+1
  5097  0B39  084A               	movf	??___fldiv+1,w
  5098  0B3A  00C8               	movwf	___fldiv@b+3
  5099  0B3B  29F9               	goto	L5
  5100  0B3C                     __end_of___fldiv:	
  5101                           
  5102                           	psect	text7
  5103  1A42                     __ptext7:	
  5104 ;; *************** function _Package_Usart_is_for_me *****************
  5105 ;; Defined at:
  5106 ;;		line 8 in file "protocolo.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;		None
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  retorno         1    0[BANK0 ] unsigned char 
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  1    wreg      unsigned char 
  5113 ;; Registers used:
  5114 ;;		wreg, status,2, status,0
  5115 ;; Tracked objects:
  5116 ;;		On entry : 200/100
  5117 ;;		On exit  : 300/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5120 ;;      Params:         0       0       0       0       0
  5121 ;;      Locals:         0       1       0       0       0
  5122 ;;      Temps:          0       0       0       0       0
  5123 ;;      Totals:         0       1       0       0       0
  5124 ;;Total ram usage:        1 bytes
  5125 ;; Hardware stack levels used:    1
  5126 ;; Hardware stack levels required when called:    1
  5127 ;; This function calls:
  5128 ;;		Nothing
  5129 ;; This function is called by:
  5130 ;;		_MediaPlacaVaccum
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           
  5135                           ;psect for function _Package_Usart_is_for_me
  5136  1A42                     _Package_Usart_is_for_me:	
  5137                           
  5138                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5139                           
  5140                           ;incstack = 0
  5141                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5142  1A42  1683               	bsf	3,5	;RP0=1, select bank1
  5143  1A43  1C3B               	btfss	_generic_status^(0+128),0
  5144  1A44  2A57               	goto	l6856
  5145                           
  5146                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5147  1A45  1283               	bcf	3,5	;RP0=0, select bank2
  5148  1A46  1703               	bsf	3,6	;RP1=1, select bank2
  5149  1A47  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5150  1A48  1683               	bsf	3,5	;RP0=1, select bank1
  5151  1A49  1303               	bcf	3,6	;RP1=0, select bank1
  5152  1A4A  0638               	xorwf	_Board_Number^(0+128),w
  5153  1A4B  1903               	skipnz
  5154  1A4C  2A52               	goto	l816
  5155  1A4D  1283               	bcf	3,5	;RP0=0, select bank2
  5156  1A4E  1703               	bsf	3,6	;RP1=1, select bank2
  5157  1A4F  0A13               	incf	(_usart_buffer^(0+256)+3),w	;volatile
  5158  1A50  1D03               	btfss	3,2
  5159  1A51  2A57               	goto	l6856
  5160  1A52                     l816:	
  5161                           
  5162                           ;protocolo.c: 13:             retorno=1;
  5163  1A52  1283               	bcf	3,5	;RP0=0, select bank0
  5164  1A53  1303               	bcf	3,6	;RP1=0, select bank0
  5165  1A54  01A0               	clrf	Package_Usart_is_for_me@retorno
  5166  1A55  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5167  1A56  2A5A               	goto	l6860
  5168  1A57                     l6856:	
  5169                           
  5170                           ;protocolo.c: 15:             retorno=0;
  5171  1A57  1283               	bcf	3,5	;RP0=0, select bank0
  5172  1A58  1303               	bcf	3,6	;RP1=0, select bank0
  5173  1A59  01A0               	clrf	Package_Usart_is_for_me@retorno
  5174  1A5A                     l6860:	
  5175                           
  5176                           ;protocolo.c: 21:      return retorno;
  5177  1A5A  0820               	movf	Package_Usart_is_for_me@retorno,w
  5178  1A5B  0008               	return
  5179  1A5C                     __end_of_Package_Usart_is_for_me:	
  5180                           
  5181                           	psect	text8
  5182  1EE1                     __ptext8:	
  5183 ;; *************** function _ADC_Media_10bits *****************
  5184 ;; Defined at:
  5185 ;;		line 20 in file "adc.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;  canal           1    wreg     unsigned char 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  canal           1   38[BANK0 ] unsigned char 
  5190 ;;  value           2   39[BANK0 ] unsigned int 
  5191 ;;  i               1   41[BANK0 ] unsigned char 
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  4   33[BANK0 ] float 
  5194 ;; Registers used:
  5195 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5196 ;; Tracked objects:
  5197 ;;		On entry : 300/100
  5198 ;;		On exit  : 300/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5201 ;;      Params:         0       4       0       0       0
  5202 ;;      Locals:         0       4       0       0       0
  5203 ;;      Temps:          0       1       0       0       0
  5204 ;;      Totals:         0       9       0       0       0
  5205 ;;Total ram usage:        9 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    2
  5208 ;; This function calls:
  5209 ;;		___lwdiv
  5210 ;;		___xxtofl
  5211 ;;		_captura
  5212 ;;		_my_delay_ms
  5213 ;; This function is called by:
  5214 ;;		_MediaPlacaVaccum
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           
  5219                           ;psect for function _ADC_Media_10bits
  5220  1EE1                     _ADC_Media_10bits:	
  5221                           
  5222                           ;incstack = 0
  5223                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5224                           ;ADC_Media_10bits@canal stored from wreg
  5225  1EE1  1283               	bcf	3,5	;RP0=0, select bank0
  5226  1EE2  00C6               	movwf	ADC_Media_10bits@canal
  5227                           
  5228                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5229  1EE3  0846               	movf	ADC_Media_10bits@canal,w
  5230  1EE4  00C5               	movwf	??_ADC_Media_10bits
  5231  1EE5  0DC5               	rlf	??_ADC_Media_10bits,f
  5232  1EE6  0DC5               	rlf	??_ADC_Media_10bits,f
  5233  1EE7  081F               	movf	31,w	;volatile
  5234  1EE8  0645               	xorwf	??_ADC_Media_10bits,w
  5235  1EE9  39C3               	andlw	-61
  5236  1EEA  0645               	xorwf	??_ADC_Media_10bits,w
  5237  1EEB  009F               	movwf	31	;volatile
  5238                           
  5239                           ;adc.c: 24:       my_delay_ms(1);
  5240  1EEC  3000               	movlw	0
  5241  1EED  00A3               	movwf	my_delay_ms@time+3
  5242  1EEE  3000               	movlw	0
  5243  1EEF  00A2               	movwf	my_delay_ms@time+2
  5244  1EF0  3000               	movlw	0
  5245  1EF1  00A1               	movwf	my_delay_ms@time+1
  5246  1EF2  3001               	movlw	1
  5247  1EF3  00A0               	movwf	my_delay_ms@time
  5248  1EF4  160A  158A  24B4  160A  158A  	fcall	_my_delay_ms
  5249                           
  5250                           ;adc.c: 26:       value=0;
  5251  1EF9  01C7               	clrf	ADC_Media_10bits@value
  5252  1EFA  01C8               	clrf	ADC_Media_10bits@value+1
  5253                           
  5254                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5255  1EFB  01C9               	clrf	ADC_Media_10bits@i
  5256  1EFC  0AC9               	incf	ADC_Media_10bits@i,f
  5257  1EFD                     l6838:	
  5258                           
  5259                           ;adc.c: 28:           value+=captura();
  5260  1EFD  160A  158A  2182  160A  158A  	fcall	_captura
  5261  1F02  0820               	movf	?_captura,w
  5262  1F03  07C7               	addwf	ADC_Media_10bits@value,f
  5263  1F04  1803               	skipnc
  5264  1F05  0AC8               	incf	ADC_Media_10bits@value+1,f
  5265  1F06  0821               	movf	?_captura+1,w
  5266  1F07  07C8               	addwf	ADC_Media_10bits@value+1,f
  5267  1F08  3001               	movlw	1
  5268  1F09  00C5               	movwf	??_ADC_Media_10bits
  5269  1F0A  0845               	movf	??_ADC_Media_10bits,w
  5270  1F0B  07C9               	addwf	ADC_Media_10bits@i,f
  5271  1F0C  3033               	movlw	51
  5272  1F0D  0249               	subwf	ADC_Media_10bits@i,w
  5273  1F0E  1C03               	skipc
  5274  1F0F  2EFD               	goto	l6838
  5275                           
  5276                           ;adc.c: 29:       value/=(i-1);
  5277  1F10  0849               	movf	ADC_Media_10bits@i,w
  5278  1F11  3EFF               	addlw	255
  5279  1F12  00A0               	movwf	___lwdiv@divisor
  5280  1F13  30FF               	movlw	255
  5281  1F14  1803               	skipnc
  5282  1F15  3000               	movlw	0
  5283  1F16  00A1               	movwf	___lwdiv@divisor+1
  5284  1F17  0848               	movf	ADC_Media_10bits@value+1,w
  5285  1F18  00A3               	movwf	___lwdiv@dividend+1
  5286  1F19  0847               	movf	ADC_Media_10bits@value,w
  5287  1F1A  00A2               	movwf	___lwdiv@dividend
  5288  1F1B  160A  158A  2597  160A  158A  	fcall	___lwdiv
  5289  1F20  0821               	movf	?___lwdiv+1,w
  5290  1F21  00C8               	movwf	ADC_Media_10bits@value+1
  5291  1F22  0820               	movf	?___lwdiv,w
  5292  1F23  00C7               	movwf	ADC_Media_10bits@value
  5293                           
  5294                           ;adc.c: 30:       return value;
  5295  1F24  0847               	movf	ADC_Media_10bits@value,w
  5296  1F25  00B3               	movwf	___xxtofl@val
  5297  1F26  0848               	movf	ADC_Media_10bits@value+1,w
  5298  1F27  00B4               	movwf	___xxtofl@val+1
  5299  1F28  01B5               	clrf	___xxtofl@val+2
  5300  1F29  01B6               	clrf	___xxtofl@val+3
  5301  1F2A  3000               	movlw	0
  5302  1F2B  160A  118A  2136   	fcall	___xxtofl
  5303  1F2E  0836               	movf	?___xxtofl+3,w
  5304  1F2F  00C4               	movwf	?_ADC_Media_10bits+3
  5305  1F30  0835               	movf	?___xxtofl+2,w
  5306  1F31  00C3               	movwf	?_ADC_Media_10bits+2
  5307  1F32  0834               	movf	?___xxtofl+1,w
  5308  1F33  00C2               	movwf	?_ADC_Media_10bits+1
  5309  1F34  0833               	movf	?___xxtofl,w
  5310  1F35  00C1               	movwf	?_ADC_Media_10bits
  5311  1F36  0008               	return
  5312  1F37                     __end_of_ADC_Media_10bits:	
  5313                           
  5314                           	psect	text9
  5315  1136                     __ptext9:	
  5316 ;; *************** function ___xxtofl *****************
  5317 ;; Defined at:
  5318 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  sign            1    wreg     unsigned char 
  5321 ;;  val             4   19[BANK0 ] long 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  sign            1   27[BANK0 ] unsigned char 
  5324 ;;  arg             4   29[BANK0 ] unsigned long 
  5325 ;;  exp             1   28[BANK0 ] unsigned char 
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  4   19[BANK0 ] unsigned char 
  5328 ;; Registers used:
  5329 ;;		wreg, status,2, status,0
  5330 ;; Tracked objects:
  5331 ;;		On entry : 300/0
  5332 ;;		On exit  : 300/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5335 ;;      Params:         0       4       0       0       0
  5336 ;;      Locals:         0       6       0       0       0
  5337 ;;      Temps:          0       4       0       0       0
  5338 ;;      Totals:         0      14       0       0       0
  5339 ;;Total ram usage:       14 bytes
  5340 ;; Hardware stack levels used:    1
  5341 ;; Hardware stack levels required when called:    1
  5342 ;; This function calls:
  5343 ;;		Nothing
  5344 ;; This function is called by:
  5345 ;;		_MediaPlacaVaccum
  5346 ;;		_ADC_Media_10bits
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           
  5351                           ;psect for function ___xxtofl
  5352  1136                     ___xxtofl:	
  5353                           
  5354                           ;incstack = 0
  5355                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5356                           ;___xxtofl@sign stored from wreg
  5357  1136  00BB               	movwf	___xxtofl@sign
  5358  1137  083B               	movf	___xxtofl@sign,w
  5359  1138  1D03               	btfss	3,2
  5360  1139  1FB6               	btfss	___xxtofl@val+3,7
  5361  113A  294B               	goto	l6390
  5362  113B  0933               	comf	___xxtofl@val,w
  5363  113C  00BD               	movwf	___xxtofl@arg
  5364  113D  0934               	comf	___xxtofl@val+1,w
  5365  113E  00BE               	movwf	___xxtofl@arg+1
  5366  113F  0935               	comf	___xxtofl@val+2,w
  5367  1140  00BF               	movwf	___xxtofl@arg+2
  5368  1141  0936               	comf	___xxtofl@val+3,w
  5369  1142  00C0               	movwf	___xxtofl@arg+3
  5370  1143  0ABD               	incf	___xxtofl@arg,f
  5371  1144  1903               	skipnz
  5372  1145  0ABE               	incf	___xxtofl@arg+1,f
  5373  1146  1903               	skipnz
  5374  1147  0ABF               	incf	___xxtofl@arg+2,f
  5375  1148  1903               	skipnz
  5376  1149  0AC0               	incf	___xxtofl@arg+3,f
  5377  114A  2953               	goto	l1423
  5378  114B                     l6390:	
  5379  114B  0836               	movf	___xxtofl@val+3,w
  5380  114C  00C0               	movwf	___xxtofl@arg+3
  5381  114D  0835               	movf	___xxtofl@val+2,w
  5382  114E  00BF               	movwf	___xxtofl@arg+2
  5383  114F  0834               	movf	___xxtofl@val+1,w
  5384  1150  00BE               	movwf	___xxtofl@arg+1
  5385  1151  0833               	movf	___xxtofl@val,w
  5386  1152  00BD               	movwf	___xxtofl@arg
  5387  1153                     l1423:	
  5388  1153  0836               	movf	___xxtofl@val+3,w
  5389  1154  0435               	iorwf	___xxtofl@val+2,w
  5390  1155  0434               	iorwf	___xxtofl@val+1,w
  5391  1156  0433               	iorwf	___xxtofl@val,w
  5392  1157  1D03               	skipz
  5393  1158  2962               	goto	l6396
  5394  1159  3000               	movlw	0
  5395  115A  00B6               	movwf	?___xxtofl+3
  5396  115B  3000               	movlw	0
  5397  115C  00B5               	movwf	?___xxtofl+2
  5398  115D  3000               	movlw	0
  5399  115E  00B4               	movwf	?___xxtofl+1
  5400  115F  3000               	movlw	0
  5401  1160  00B3               	movwf	?___xxtofl
  5402  1161  0008               	return
  5403  1162                     l6396:	
  5404  1162  3096               	movlw	150
  5405  1163  00B7               	movwf	??___xxtofl
  5406  1164  0837               	movf	??___xxtofl,w
  5407  1165  00BC               	movwf	___xxtofl@exp
  5408  1166                     l6400:	
  5409  1166  30FE               	movlw	254
  5410  1167  0540               	andwf	___xxtofl@arg+3,w
  5411  1168  1903               	btfsc	3,2
  5412  1169  2993               	goto	l1429
  5413  116A  3001               	movlw	1
  5414  116B  00B7               	movwf	??___xxtofl
  5415  116C  0837               	movf	??___xxtofl,w
  5416  116D  07BC               	addwf	___xxtofl@exp,f
  5417  116E  3001               	movlw	1
  5418  116F                     u6765:	
  5419  116F  1003               	clrc
  5420  1170  0CC0               	rrf	___xxtofl@arg+3,f
  5421  1171  0CBF               	rrf	___xxtofl@arg+2,f
  5422  1172  0CBE               	rrf	___xxtofl@arg+1,f
  5423  1173  0CBD               	rrf	___xxtofl@arg,f
  5424  1174  3EFF               	addlw	-1
  5425  1175  1D03               	skipz
  5426  1176  296F               	goto	u6765
  5427  1177  2966               	goto	l6400
  5428  1178                     l6402:	
  5429  1178  3001               	movlw	1
  5430  1179  00B7               	movwf	??___xxtofl
  5431  117A  0837               	movf	??___xxtofl,w
  5432  117B  07BC               	addwf	___xxtofl@exp,f
  5433  117C  3001               	movlw	1
  5434  117D  07BD               	addwf	___xxtofl@arg,f
  5435  117E  3000               	movlw	0
  5436  117F  1803               	skipnc
  5437  1180  3001               	movlw	1
  5438  1181  07BE               	addwf	___xxtofl@arg+1,f
  5439  1182  3000               	movlw	0
  5440  1183  1803               	skipnc
  5441  1184  3001               	movlw	1
  5442  1185  07BF               	addwf	___xxtofl@arg+2,f
  5443  1186  3000               	movlw	0
  5444  1187  1803               	skipnc
  5445  1188  3001               	movlw	1
  5446  1189  07C0               	addwf	___xxtofl@arg+3,f
  5447  118A  3001               	movlw	1
  5448  118B                     u6785:	
  5449  118B  1003               	clrc
  5450  118C  0CC0               	rrf	___xxtofl@arg+3,f
  5451  118D  0CBF               	rrf	___xxtofl@arg+2,f
  5452  118E  0CBE               	rrf	___xxtofl@arg+1,f
  5453  118F  0CBD               	rrf	___xxtofl@arg,f
  5454  1190  3EFF               	addlw	-1
  5455  1191  1D03               	skipz
  5456  1192  298B               	goto	u6785
  5457  1193                     l1429:	
  5458  1193  30FF               	movlw	255
  5459  1194  0540               	andwf	___xxtofl@arg+3,w
  5460  1195  1903               	btfsc	3,2
  5461  1196  29A7               	goto	l6410
  5462  1197  2978               	goto	l6402
  5463  1198                     l6412:	
  5464  1198  3002               	movlw	2
  5465  1199  023C               	subwf	___xxtofl@exp,w
  5466  119A  1C03               	btfss	3,0
  5467  119B  29A9               	goto	l1436
  5468  119C  3001               	movlw	1
  5469  119D  02BC               	subwf	___xxtofl@exp,f
  5470  119E  3001               	movlw	1
  5471  119F  00B7               	movwf	??___xxtofl
  5472  11A0                     u6805:	
  5473  11A0  1003               	clrc
  5474  11A1  0DBD               	rlf	___xxtofl@arg,f
  5475  11A2  0DBE               	rlf	___xxtofl@arg+1,f
  5476  11A3  0DBF               	rlf	___xxtofl@arg+2,f
  5477  11A4  0DC0               	rlf	___xxtofl@arg+3,f
  5478  11A5  0BB7               	decfsz	??___xxtofl,f
  5479  11A6  29A0               	goto	u6805
  5480  11A7                     l6410:	
  5481  11A7  1FBF               	btfss	___xxtofl@arg+2,7
  5482  11A8  2998               	goto	l6412
  5483  11A9                     l1436:	
  5484  11A9  183C               	btfsc	___xxtofl@exp,0
  5485  11AA  29B3               	goto	l1437
  5486  11AB  30FF               	movlw	255
  5487  11AC  05BD               	andwf	___xxtofl@arg,f
  5488  11AD  30FF               	movlw	255
  5489  11AE  05BE               	andwf	___xxtofl@arg+1,f
  5490  11AF  307F               	movlw	127
  5491  11B0  05BF               	andwf	___xxtofl@arg+2,f
  5492  11B1  30FF               	movlw	255
  5493  11B2  05C0               	andwf	___xxtofl@arg+3,f
  5494  11B3                     l1437:	
  5495  11B3  1003               	clrc
  5496  11B4  0CBC               	rrf	___xxtofl@exp,f
  5497  11B5  083C               	movf	___xxtofl@exp,w
  5498  11B6  00B7               	movwf	??___xxtofl
  5499  11B7  01B8               	clrf	??___xxtofl+1
  5500  11B8  01B9               	clrf	??___xxtofl+2
  5501  11B9  01BA               	clrf	??___xxtofl+3
  5502  11BA  3018               	movlw	24
  5503  11BB                     u6845:	
  5504  11BB  1003               	clrc
  5505  11BC  0DB7               	rlf	??___xxtofl,f
  5506  11BD  0DB8               	rlf	??___xxtofl+1,f
  5507  11BE  0DB9               	rlf	??___xxtofl+2,f
  5508  11BF  0DBA               	rlf	??___xxtofl+3,f
  5509  11C0  3EFF               	addlw	-1
  5510  11C1  1D03               	skipz
  5511  11C2  29BB               	goto	u6845
  5512  11C3  0837               	movf	??___xxtofl,w
  5513  11C4  04BD               	iorwf	___xxtofl@arg,f
  5514  11C5  0838               	movf	??___xxtofl+1,w
  5515  11C6  04BE               	iorwf	___xxtofl@arg+1,f
  5516  11C7  0839               	movf	??___xxtofl+2,w
  5517  11C8  04BF               	iorwf	___xxtofl@arg+2,f
  5518  11C9  083A               	movf	??___xxtofl+3,w
  5519  11CA  04C0               	iorwf	___xxtofl@arg+3,f
  5520  11CB  083B               	movf	___xxtofl@sign,w
  5521  11CC  1D03               	btfss	3,2
  5522  11CD  1FB6               	btfss	___xxtofl@val+3,7
  5523  11CE  29D0               	goto	l6424
  5524  11CF  17C0               	bsf	___xxtofl@arg+3,7
  5525  11D0                     l6424:	
  5526  11D0  0840               	movf	___xxtofl@arg+3,w
  5527  11D1  00B6               	movwf	?___xxtofl+3
  5528  11D2  083F               	movf	___xxtofl@arg+2,w
  5529  11D3  00B5               	movwf	?___xxtofl+2
  5530  11D4  083E               	movf	___xxtofl@arg+1,w
  5531  11D5  00B4               	movwf	?___xxtofl+1
  5532  11D6  083D               	movf	___xxtofl@arg,w
  5533  11D7  00B3               	movwf	?___xxtofl
  5534  11D8  0008               	return
  5535  11D9                     __end_of___xxtofl:	
  5536                           
  5537                           	psect	text10
  5538  1E0F                     __ptext10:	
  5539 ;; *************** function _ADC_Max_10Bits *****************
  5540 ;; Defined at:
  5541 ;;		line 34 in file "adc.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;  canal           1    wreg     unsigned char 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  canal           1   13[BANK0 ] unsigned char 
  5546 ;;  value           2   16[BANK0 ] unsigned int 
  5547 ;;  Temp            2   14[BANK0 ] unsigned int 
  5548 ;;  i               1   18[BANK0 ] unsigned char 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  2   10[BANK0 ] unsigned int 
  5551 ;; Registers used:
  5552 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 300/100
  5555 ;;		On exit  : 300/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5558 ;;      Params:         0       2       0       0       0
  5559 ;;      Locals:         0       6       0       0       0
  5560 ;;      Temps:          0       1       0       0       0
  5561 ;;      Totals:         0       9       0       0       0
  5562 ;;Total ram usage:        9 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    2
  5565 ;; This function calls:
  5566 ;;		_captura
  5567 ;;		_my_delay_ms
  5568 ;; This function is called by:
  5569 ;;		_MediaPlacaVaccum
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           
  5574                           ;psect for function _ADC_Max_10Bits
  5575  1E0F                     _ADC_Max_10Bits:	
  5576                           
  5577                           ;incstack = 0
  5578                           ; Regs used in _ADC_Max_10Bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5579                           ;ADC_Max_10Bits@canal stored from wreg
  5580  1E0F  1283               	bcf	3,5	;RP0=0, select bank0
  5581  1E10  00AD               	movwf	ADC_Max_10Bits@canal
  5582                           
  5583                           ;adc.c: 35:       unsigned int Temp;;adc.c: 36:       unsigned int value;;adc.c: 37:    
      +                             unsigned char i;;adc.c: 38:       ADCON0bits.CHS=canal;
  5584  1E11  082D               	movf	ADC_Max_10Bits@canal,w
  5585  1E12  00AC               	movwf	??_ADC_Max_10Bits
  5586  1E13  0DAC               	rlf	??_ADC_Max_10Bits,f
  5587  1E14  0DAC               	rlf	??_ADC_Max_10Bits,f
  5588  1E15  081F               	movf	31,w	;volatile
  5589  1E16  062C               	xorwf	??_ADC_Max_10Bits,w
  5590  1E17  39C3               	andlw	-61
  5591  1E18  062C               	xorwf	??_ADC_Max_10Bits,w
  5592  1E19  009F               	movwf	31	;volatile
  5593                           
  5594                           ;adc.c: 39:       my_delay_ms(1);
  5595  1E1A  3000               	movlw	0
  5596  1E1B  00A3               	movwf	my_delay_ms@time+3
  5597  1E1C  3000               	movlw	0
  5598  1E1D  00A2               	movwf	my_delay_ms@time+2
  5599  1E1E  3000               	movlw	0
  5600  1E1F  00A1               	movwf	my_delay_ms@time+1
  5601  1E20  3001               	movlw	1
  5602  1E21  00A0               	movwf	my_delay_ms@time
  5603  1E22  160A  158A  24B4  160A  158A  	fcall	_my_delay_ms
  5604                           
  5605                           ;adc.c: 41:       value=0;
  5606  1E27  01B0               	clrf	ADC_Max_10Bits@value
  5607  1E28  01B1               	clrf	ADC_Max_10Bits@value+1
  5608                           
  5609                           ;adc.c: 42:       for(i=1;i<=50;i++)
  5610  1E29  01B2               	clrf	ADC_Max_10Bits@i
  5611  1E2A  0AB2               	incf	ADC_Max_10Bits@i,f
  5612  1E2B                     l6878:	
  5613                           
  5614                           ;adc.c: 43:           {;adc.c: 44:           Temp=captura();
  5615  1E2B  160A  158A  2182  160A  158A  	fcall	_captura
  5616  1E30  0821               	movf	?_captura+1,w
  5617  1E31  00AF               	movwf	ADC_Max_10Bits@Temp+1
  5618  1E32  0820               	movf	?_captura,w
  5619  1E33  00AE               	movwf	ADC_Max_10Bits@Temp
  5620                           
  5621                           ;adc.c: 45:           if (Temp>value) value=Temp;
  5622  1E34  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5623  1E35  0231               	subwf	ADC_Max_10Bits@value+1,w
  5624  1E36  1D03               	skipz
  5625  1E37  2E3A               	goto	u7175
  5626  1E38  082E               	movf	ADC_Max_10Bits@Temp,w
  5627  1E39  0230               	subwf	ADC_Max_10Bits@value,w
  5628  1E3A                     u7175:	
  5629  1E3A  1803               	skipnc
  5630  1E3B  2E40               	goto	l6884
  5631  1E3C  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5632  1E3D  00B1               	movwf	ADC_Max_10Bits@value+1
  5633  1E3E  082E               	movf	ADC_Max_10Bits@Temp,w
  5634  1E3F  00B0               	movwf	ADC_Max_10Bits@value
  5635  1E40                     l6884:	
  5636                           
  5637                           ;adc.c: 46:           }
  5638  1E40  3001               	movlw	1
  5639  1E41  00AC               	movwf	??_ADC_Max_10Bits
  5640  1E42  082C               	movf	??_ADC_Max_10Bits,w
  5641  1E43  07B2               	addwf	ADC_Max_10Bits@i,f
  5642  1E44  3033               	movlw	51
  5643  1E45  0232               	subwf	ADC_Max_10Bits@i,w
  5644  1E46  1C03               	skipc
  5645  1E47  2E2B               	goto	l6878
  5646                           
  5647                           ;adc.c: 47:       return value;
  5648  1E48  0831               	movf	ADC_Max_10Bits@value+1,w
  5649  1E49  00AB               	movwf	?_ADC_Max_10Bits+1
  5650  1E4A  0830               	movf	ADC_Max_10Bits@value,w
  5651  1E4B  00AA               	movwf	?_ADC_Max_10Bits
  5652  1E4C  0008               	return
  5653  1E4D                     __end_of_ADC_Max_10Bits:	
  5654                           
  5655                           	psect	text11
  5656  1CB4                     __ptext11:	
  5657 ;; *************** function _my_delay_ms *****************
  5658 ;; Defined at:
  5659 ;;		line 5 in file "my_delay.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  time            4    0[BANK0 ] long 
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  i               4    6[BANK0 ] long 
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  1    wreg      void 
  5666 ;; Registers used:
  5667 ;;		wreg, btemp+1
  5668 ;; Tracked objects:
  5669 ;;		On entry : 300/0
  5670 ;;		On exit  : 300/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5673 ;;      Params:         0       4       0       0       0
  5674 ;;      Locals:         0       4       0       0       0
  5675 ;;      Temps:          0       2       0       0       0
  5676 ;;      Totals:         0      10       0       0       0
  5677 ;;Total ram usage:       10 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:    1
  5680 ;; This function calls:
  5681 ;;		Nothing
  5682 ;; This function is called by:
  5683 ;;		_MediaPlacaVaccum
  5684 ;;		_ADC_Media_10bits
  5685 ;;		_ADC_Max_10Bits
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           
  5690                           ;psect for function _my_delay_ms
  5691  1CB4                     _my_delay_ms:	
  5692                           
  5693                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5694                           
  5695                           ;incstack = 0
  5696                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5697  1CB4  3000               	movlw	0
  5698  1CB5  00A9               	movwf	my_delay_ms@i+3
  5699  1CB6  3000               	movlw	0
  5700  1CB7  00A8               	movwf	my_delay_ms@i+2
  5701  1CB8  3000               	movlw	0
  5702  1CB9  00A7               	movwf	my_delay_ms@i+1
  5703  1CBA  3000               	movlw	0
  5704  1CBB  00A6               	movwf	my_delay_ms@i
  5705  1CBC                     l5948:	
  5706  1CBC  0829               	movf	my_delay_ms@i+3,w
  5707  1CBD  3A80               	xorlw	128
  5708  1CBE  00FF               	movwf	127
  5709  1CBF  0823               	movf	my_delay_ms@time+3,w
  5710  1CC0  3A80               	xorlw	128
  5711  1CC1  027F               	subwf	127,w
  5712  1CC2  1D03               	skipz
  5713  1CC3  2CCE               	goto	u5703
  5714  1CC4  0822               	movf	my_delay_ms@time+2,w
  5715  1CC5  0228               	subwf	my_delay_ms@i+2,w
  5716  1CC6  1D03               	skipz
  5717  1CC7  2CCE               	goto	u5703
  5718  1CC8  0821               	movf	my_delay_ms@time+1,w
  5719  1CC9  0227               	subwf	my_delay_ms@i+1,w
  5720  1CCA  1D03               	skipz
  5721  1CCB  2CCE               	goto	u5703
  5722  1CCC  0820               	movf	my_delay_ms@time,w
  5723  1CCD  0226               	subwf	my_delay_ms@i,w
  5724  1CCE                     u5703:	
  5725  1CCE  1803               	btfsc	3,0
  5726  1CCF  0008               	return
  5727                           
  5728                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5729  1CD0  3003               	movlw	3
  5730  1CD1  1283               	bcf	3,5	;RP0=0, select bank0
  5731  1CD2  1303               	bcf	3,6	;RP1=0, select bank0
  5732  1CD3  00A5               	movwf	??_my_delay_ms+1
  5733  1CD4  3097               	movlw	151
  5734  1CD5  00A4               	movwf	??_my_delay_ms
  5735  1CD6                     u7897:	
  5736  1CD6  0BA4               	decfsz	??_my_delay_ms,f
  5737  1CD7  2CD6               	goto	u7897
  5738  1CD8  0BA5               	decfsz	??_my_delay_ms+1,f
  5739  1CD9  2CD6               	goto	u7897
  5740                           
  5741                           ;my_delay.c: 10:             }
  5742  1CDA  3001               	movlw	1
  5743  1CDB  1283               	bcf	3,5	;RP0=0, select bank0
  5744  1CDC  1303               	bcf	3,6	;RP1=0, select bank0
  5745  1CDD  07A6               	addwf	my_delay_ms@i,f
  5746  1CDE  3000               	movlw	0
  5747  1CDF  1803               	skipnc
  5748  1CE0  3001               	movlw	1
  5749  1CE1  07A7               	addwf	my_delay_ms@i+1,f
  5750  1CE2  3000               	movlw	0
  5751  1CE3  1803               	skipnc
  5752  1CE4  3001               	movlw	1
  5753  1CE5  07A8               	addwf	my_delay_ms@i+2,f
  5754  1CE6  3000               	movlw	0
  5755  1CE7  1803               	skipnc
  5756  1CE8  3001               	movlw	1
  5757  1CE9  07A9               	addwf	my_delay_ms@i+3,f
  5758  1CEA  2CBC               	goto	l5948
  5759  1CEB                     __end_of_my_delay_ms:	
  5760                           
  5761                           	psect	text12
  5762  1982                     __ptext12:	
  5763 ;; *************** function _captura *****************
  5764 ;; Defined at:
  5765 ;;		line 140 in file "adc.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;		None
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;		None
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  2    0[BANK0 ] unsigned int 
  5772 ;; Registers used:
  5773 ;;		wreg
  5774 ;; Tracked objects:
  5775 ;;		On entry : 300/0
  5776 ;;		On exit  : 300/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5779 ;;      Params:         0       2       0       0       0
  5780 ;;      Locals:         0       0       0       0       0
  5781 ;;      Temps:          0       0       0       0       0
  5782 ;;      Totals:         0       2       0       0       0
  5783 ;;Total ram usage:        2 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; Hardware stack levels required when called:    1
  5786 ;; This function calls:
  5787 ;;		Nothing
  5788 ;; This function is called by:
  5789 ;;		_ADC_Media_10bits
  5790 ;;		_ADC_Max_10Bits
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           
  5795                           ;psect for function _captura
  5796  1982                     _captura:	
  5797                           
  5798                           ;adc.c: 141:     ADCON0bits.GO=1;
  5799                           
  5800                           ;incstack = 0
  5801                           ; Regs used in _captura: [wreg]
  5802  1982  149F               	bsf	31,1	;volatile
  5803  1983                     l494:	
  5804                           ;adc.c: 145:           }
  5805                           
  5806                           
  5807                           ;adc.c: 142:     while(ADCON0bits.GO)
  5808  1983  189F               	btfsc	31,1	;volatile
  5809  1984  2983               	goto	l494
  5810                           
  5811                           ;adc.c: 146:     return ((ADRESH<<8)+ADRESL);
  5812  1985  081E               	movf	30,w	;volatile
  5813  1986  00A1               	movwf	?_captura+1
  5814  1987  1683               	bsf	3,5	;RP0=1, select bank1
  5815  1988  081E               	movf	30,w	;volatile
  5816  1989  1283               	bcf	3,5	;RP0=0, select bank0
  5817  198A  00A0               	movwf	?_captura
  5818  198B  0008               	return
  5819  198C                     __end_of_captura:	
  5820                           
  5821                           	psect	text13
  5822  1BE9                     __ptext13:	
  5823 ;; *************** function _I2C_Master_Init *****************
  5824 ;; Defined at:
  5825 ;;		line 7 in file "I2C.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  c               4   14[BANK0 ] const unsigned long 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;		None
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      void 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2, status,0, pclath, cstack
  5834 ;; Tracked objects:
  5835 ;;		On entry : 300/0
  5836 ;;		On exit  : 300/100
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5839 ;;      Params:         0       4       0       0       0
  5840 ;;      Locals:         0       0       0       0       0
  5841 ;;      Temps:          0       4       0       0       0
  5842 ;;      Totals:         0       8       0       0       0
  5843 ;;Total ram usage:        8 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    2
  5846 ;; This function calls:
  5847 ;;		___lldiv
  5848 ;; This function is called by:
  5849 ;;		_main
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           
  5854                           ;psect for function _I2C_Master_Init
  5855  1BE9                     _I2C_Master_Init:	
  5856                           
  5857                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5858                           
  5859                           ;incstack = 0
  5860                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5861  1BE9  3028               	movlw	40
  5862  1BEA  0094               	movwf	20	;volatile
  5863                           
  5864                           ;I2C.c: 11:   SSPCON2 = 0;
  5865  1BEB  1683               	bsf	3,5	;RP0=1, select bank1
  5866  1BEC  0191               	clrf	17	;volatile
  5867                           
  5868                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5869  1BED  1283               	bcf	3,5	;RP0=0, select bank0
  5870  1BEE  082E               	movf	I2C_Master_Init@c,w
  5871  1BEF  00B2               	movwf	??_I2C_Master_Init
  5872  1BF0  082F               	movf	I2C_Master_Init@c+1,w
  5873  1BF1  00B3               	movwf	??_I2C_Master_Init+1
  5874  1BF2  0830               	movf	I2C_Master_Init@c+2,w
  5875  1BF3  00B4               	movwf	??_I2C_Master_Init+2
  5876  1BF4  0831               	movf	I2C_Master_Init@c+3,w
  5877  1BF5  00B5               	movwf	??_I2C_Master_Init+3
  5878  1BF6  3002               	movlw	2
  5879  1BF7                     u7625:	
  5880  1BF7  1003               	clrc
  5881  1BF8  0DB2               	rlf	??_I2C_Master_Init,f
  5882  1BF9  0DB3               	rlf	??_I2C_Master_Init+1,f
  5883  1BFA  0DB4               	rlf	??_I2C_Master_Init+2,f
  5884  1BFB  0DB5               	rlf	??_I2C_Master_Init+3,f
  5885  1BFC  3EFF               	addlw	-1
  5886  1BFD  1D03               	skipz
  5887  1BFE  2BF7               	goto	u7625
  5888  1BFF  0835               	movf	??_I2C_Master_Init+3,w
  5889  1C00  00A3               	movwf	___lldiv@divisor+3
  5890  1C01  0834               	movf	??_I2C_Master_Init+2,w
  5891  1C02  00A2               	movwf	___lldiv@divisor+2
  5892  1C03  0833               	movf	??_I2C_Master_Init+1,w
  5893  1C04  00A1               	movwf	___lldiv@divisor+1
  5894  1C05  0832               	movf	??_I2C_Master_Init,w
  5895  1C06  00A0               	movwf	___lldiv@divisor
  5896  1C07  3000               	movlw	0
  5897  1C08  00A7               	movwf	___lldiv@dividend+3
  5898  1C09  307A               	movlw	122
  5899  1C0A  00A6               	movwf	___lldiv@dividend+2
  5900  1C0B  3012               	movlw	18
  5901  1C0C  00A5               	movwf	___lldiv@dividend+1
  5902  1C0D  3000               	movlw	0
  5903  1C0E  00A4               	movwf	___lldiv@dividend
  5904  1C0F  160A  158A  2737   	fcall	___lldiv
  5905  1C12  0820               	movf	?___lldiv,w
  5906  1C13  3EFF               	addlw	255
  5907  1C14  1683               	bsf	3,5	;RP0=1, select bank1
  5908  1C15  0093               	movwf	19	;volatile
  5909                           
  5910                           ;I2C.c: 13:   SSPSTAT = 0;
  5911  1C16  0194               	clrf	20	;volatile
  5912                           
  5913                           ;I2C.c: 14:   TRISC3 = 1;
  5914  1C17  1587               	bsf	7,3	;volatile
  5915                           
  5916                           ;I2C.c: 15:   TRISC4 = 1;
  5917  1C18  1607               	bsf	7,4	;volatile
  5918  1C19  0008               	return
  5919  1C1A                     __end_of_I2C_Master_Init:	
  5920                           
  5921                           	psect	text14
  5922  1F37                     __ptext14:	
  5923 ;; *************** function ___lldiv *****************
  5924 ;; Defined at:
  5925 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  divisor         4    0[BANK0 ] unsigned long 
  5928 ;;  dividend        4    4[BANK0 ] unsigned long 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;  quotient        4    9[BANK0 ] unsigned long 
  5931 ;;  counter         1   13[BANK0 ] unsigned char 
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  4    0[BANK0 ] unsigned long 
  5934 ;; Registers used:
  5935 ;;		wreg, status,2, status,0
  5936 ;; Tracked objects:
  5937 ;;		On entry : 300/0
  5938 ;;		On exit  : 300/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5941 ;;      Params:         0       8       0       0       0
  5942 ;;      Locals:         0       5       0       0       0
  5943 ;;      Temps:          0       1       0       0       0
  5944 ;;      Totals:         0      14       0       0       0
  5945 ;;Total ram usage:       14 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; Hardware stack levels required when called:    1
  5948 ;; This function calls:
  5949 ;;		Nothing
  5950 ;; This function is called by:
  5951 ;;		_I2C_Master_Init
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           
  5956                           ;psect for function ___lldiv
  5957  1F37                     ___lldiv:	
  5958                           
  5959                           ;incstack = 0
  5960                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5961  1F37  3000               	movlw	0
  5962  1F38  00AC               	movwf	___lldiv@quotient+3
  5963  1F39  3000               	movlw	0
  5964  1F3A  00AB               	movwf	___lldiv@quotient+2
  5965  1F3B  3000               	movlw	0
  5966  1F3C  00AA               	movwf	___lldiv@quotient+1
  5967  1F3D  3000               	movlw	0
  5968  1F3E  00A9               	movwf	___lldiv@quotient
  5969  1F3F  0823               	movf	___lldiv@divisor+3,w
  5970  1F40  0422               	iorwf	___lldiv@divisor+2,w
  5971  1F41  0421               	iorwf	___lldiv@divisor+1,w
  5972  1F42  0420               	iorwf	___lldiv@divisor,w
  5973  1F43  1903               	skipnz
  5974  1F44  2F8C               	goto	l6912
  5975  1F45  01AD               	clrf	___lldiv@counter
  5976  1F46  0AAD               	incf	___lldiv@counter,f
  5977  1F47                     l6898:	
  5978  1F47  1BA3               	btfsc	___lldiv@divisor+3,7
  5979  1F48  2F57               	goto	l6900
  5980  1F49  3001               	movlw	1
  5981  1F4A  00A8               	movwf	??___lldiv
  5982  1F4B                     u7205:	
  5983  1F4B  1003               	clrc
  5984  1F4C  0DA0               	rlf	___lldiv@divisor,f
  5985  1F4D  0DA1               	rlf	___lldiv@divisor+1,f
  5986  1F4E  0DA2               	rlf	___lldiv@divisor+2,f
  5987  1F4F  0DA3               	rlf	___lldiv@divisor+3,f
  5988  1F50  0BA8               	decfsz	??___lldiv,f
  5989  1F51  2F4B               	goto	u7205
  5990  1F52  3001               	movlw	1
  5991  1F53  00A8               	movwf	??___lldiv
  5992  1F54  0828               	movf	??___lldiv,w
  5993  1F55  07AD               	addwf	___lldiv@counter,f
  5994  1F56  2F47               	goto	l6898
  5995  1F57                     l6900:	
  5996  1F57  3001               	movlw	1
  5997  1F58  00A8               	movwf	??___lldiv
  5998  1F59                     u7225:	
  5999  1F59  1003               	clrc
  6000  1F5A  0DA9               	rlf	___lldiv@quotient,f
  6001  1F5B  0DAA               	rlf	___lldiv@quotient+1,f
  6002  1F5C  0DAB               	rlf	___lldiv@quotient+2,f
  6003  1F5D  0DAC               	rlf	___lldiv@quotient+3,f
  6004  1F5E  0BA8               	decfsz	??___lldiv,f
  6005  1F5F  2F59               	goto	u7225
  6006  1F60  0823               	movf	___lldiv@divisor+3,w
  6007  1F61  0227               	subwf	___lldiv@dividend+3,w
  6008  1F62  1D03               	skipz
  6009  1F63  2F6E               	goto	u7235
  6010  1F64  0822               	movf	___lldiv@divisor+2,w
  6011  1F65  0226               	subwf	___lldiv@dividend+2,w
  6012  1F66  1D03               	skipz
  6013  1F67  2F6E               	goto	u7235
  6014  1F68  0821               	movf	___lldiv@divisor+1,w
  6015  1F69  0225               	subwf	___lldiv@dividend+1,w
  6016  1F6A  1D03               	skipz
  6017  1F6B  2F6E               	goto	u7235
  6018  1F6C  0820               	movf	___lldiv@divisor,w
  6019  1F6D  0224               	subwf	___lldiv@dividend,w
  6020  1F6E                     u7235:	
  6021  1F6E  1C03               	skipc
  6022  1F6F  2F7F               	goto	l6908
  6023  1F70  0820               	movf	___lldiv@divisor,w
  6024  1F71  02A4               	subwf	___lldiv@dividend,f
  6025  1F72  0821               	movf	___lldiv@divisor+1,w
  6026  1F73  1C03               	skipc
  6027  1F74  0F21               	incfsz	___lldiv@divisor+1,w
  6028  1F75  02A5               	subwf	___lldiv@dividend+1,f
  6029  1F76  0822               	movf	___lldiv@divisor+2,w
  6030  1F77  1C03               	skipc
  6031  1F78  0F22               	incfsz	___lldiv@divisor+2,w
  6032  1F79  02A6               	subwf	___lldiv@dividend+2,f
  6033  1F7A  0823               	movf	___lldiv@divisor+3,w
  6034  1F7B  1C03               	skipc
  6035  1F7C  0F23               	incfsz	___lldiv@divisor+3,w
  6036  1F7D  02A7               	subwf	___lldiv@dividend+3,f
  6037  1F7E  1429               	bsf	___lldiv@quotient,0
  6038  1F7F                     l6908:	
  6039  1F7F  3001               	movlw	1
  6040  1F80                     u7245:	
  6041  1F80  1003               	clrc
  6042  1F81  0CA3               	rrf	___lldiv@divisor+3,f
  6043  1F82  0CA2               	rrf	___lldiv@divisor+2,f
  6044  1F83  0CA1               	rrf	___lldiv@divisor+1,f
  6045  1F84  0CA0               	rrf	___lldiv@divisor,f
  6046  1F85  3EFF               	addlw	-1
  6047  1F86  1D03               	skipz
  6048  1F87  2F80               	goto	u7245
  6049  1F88  3001               	movlw	1
  6050  1F89  02AD               	subwf	___lldiv@counter,f
  6051  1F8A  1D03               	btfss	3,2
  6052  1F8B  2F57               	goto	l6900
  6053  1F8C                     l6912:	
  6054  1F8C  082C               	movf	___lldiv@quotient+3,w
  6055  1F8D  00A3               	movwf	?___lldiv+3
  6056  1F8E  082B               	movf	___lldiv@quotient+2,w
  6057  1F8F  00A2               	movwf	?___lldiv+2
  6058  1F90  082A               	movf	___lldiv@quotient+1,w
  6059  1F91  00A1               	movwf	?___lldiv+1
  6060  1F92  0829               	movf	___lldiv@quotient,w
  6061  1F93  00A0               	movwf	?___lldiv
  6062  1F94  0008               	return
  6063  1F95                     __end_of___lldiv:	
  6064                           
  6065                           	psect	text15
  6066  0037                     __ptext15:	
  6067 ;; *************** function _Decodify_Command *****************
  6068 ;; Defined at:
  6069 ;;		line 304 in file "SlaveLiofilizadorVer1.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  sizedata        1    3[BANK1 ] unsigned char 
  6074 ;;  add             1    2[BANK1 ] unsigned char 
  6075 ;;  add_24LCxxxx    4   11[BANK1 ] unsigned long 
  6076 ;;  OutPut          4    6[BANK1 ] float 
  6077 ;;  tempint         2    4[BANK1 ] int 
  6078 ;;  dados           2    0[BANK1 ] int 
  6079 ;;  tempchar        1   10[BANK1 ] unsigned char 
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      void 
  6082 ;; Registers used:
  6083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 300/100
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6089 ;;      Params:         0       0       0       0       0
  6090 ;;      Locals:         0       0      15       0       0
  6091 ;;      Temps:          0       4       0       0       0
  6092 ;;      Totals:         0       4      15       0       0
  6093 ;;Total ram usage:       19 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; Hardware stack levels required when called:    6
  6096 ;; This function calls:
  6097 ;;		_EEPROM_24C1025_Fill_All
  6098 ;;		_EEPROM_24C1025_Read_Buffer_USART
  6099 ;;		_EEPROM_24C1025_Read_Byte
  6100 ;;		_EEPROM_24C1025_Read_Int
  6101 ;;		_EEPROM_24C1025_Read_Str
  6102 ;;		_EEPROM_24C1025_Write_Buffer
  6103 ;;		_EEPROM_24C1025_Write_Byte
  6104 ;;		_EEPROM_24C1025_Write_Int
  6105 ;;		_EEPROM_24C1025_Write_Str
  6106 ;;		_EEPROM_Read_Byte
  6107 ;;		_EEPROM_Read_Integer
  6108 ;;		_EEPROM_Read_String
  6109 ;;		_EEPROM_Write_Byte
  6110 ;;		_EEPROM_Write_Integer
  6111 ;;		_EEPROM_Write_String
  6112 ;;		_PROCULUS_Buzzer
  6113 ;;		_PROCULUS_Show_Screen
  6114 ;;		_PROCULUS_VP_Write_String
  6115 ;;		_Save_Log
  6116 ;;		_Send_Reply_OK
  6117 ;;		_Send_To_MB
  6118 ;;		_USART_put_int
  6119 ;;		_USART_put_string
  6120 ;;		_USART_putc
  6121 ;;		_USART_to_Protocol
  6122 ;;		___flmul
  6123 ;;		___fltol
  6124 ;;		_strcpy
  6125 ;;		_strlen
  6126 ;; This function is called by:
  6127 ;;		_main
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           
  6132                           ;psect for function _Decodify_Command
  6133  0037                     _Decodify_Command:	
  6134                           
  6135                           ;SlaveLiofilizadorVer1.c: 306:     int dados;;SlaveLiofilizadorVer1.c: 307:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 308:     int tempint;;SlaveLiofilizadorVer1.c: 309:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 310:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 322:     USART_to_Protocol(&usart_protocol);
  6136                           
  6137                           ;incstack = 0
  6138                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6139  0037  3090               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6140  0038  160A  158A  268C  120A  118A  	fcall	_USART_to_Protocol
  6141                           
  6142                           ;SlaveLiofilizadorVer1.c: 324:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6143  003D  1683               	bsf	3,5	;RP0=1, select bank3
  6144  003E  1703               	bsf	3,6	;RP1=1, select bank3
  6145  003F  0817               	movf	(_usart_protocol^(0+384)+7),w
  6146  0040  1283               	bcf	3,5	;RP0=0, select bank0
  6147  0041  1303               	bcf	3,6	;RP1=0, select bank0
  6148  0042  00DF               	movwf	??_Decodify_Command
  6149  0043  085F               	movf	??_Decodify_Command,w
  6150  0044  1683               	bsf	3,5	;RP0=1, select bank1
  6151  0045  00EB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6152                           
  6153                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6154  0046  1703               	bsf	3,6	;RP1=1, select bank3
  6155  0047  0818               	movf	(_usart_protocol^(0+384)+8),w
  6156  0048  1283               	bcf	3,5	;RP0=0, select bank0
  6157  0049  1303               	bcf	3,6	;RP1=0, select bank0
  6158  004A  00DF               	movwf	??_Decodify_Command
  6159  004B  085F               	movf	??_Decodify_Command,w
  6160  004C  1683               	bsf	3,5	;RP0=1, select bank1
  6161  004D  00EA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6162                           
  6163                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6164  004E  1703               	bsf	3,6	;RP1=1, select bank3
  6165  004F  0819               	movf	(_usart_protocol^(0+384)+9),w
  6166  0050  1283               	bcf	3,5	;RP0=0, select bank0
  6167  0051  1303               	bcf	3,6	;RP1=0, select bank0
  6168  0052  00DF               	movwf	??_Decodify_Command
  6169  0053  085F               	movf	??_Decodify_Command,w
  6170  0054  1683               	bsf	3,5	;RP0=1, select bank1
  6171  0055  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6172                           
  6173                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6174  0056  1703               	bsf	3,6	;RP1=1, select bank3
  6175  0057  081A               	movf	(_usart_protocol^(0+384)+10),w
  6176  0058  1283               	bcf	3,5	;RP0=0, select bank0
  6177  0059  1303               	bcf	3,6	;RP1=0, select bank0
  6178  005A  00DF               	movwf	??_Decodify_Command
  6179  005B  085F               	movf	??_Decodify_Command,w
  6180  005C  1683               	bsf	3,5	;RP0=1, select bank1
  6181  005D  00E8               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6182                           
  6183                           ;SlaveLiofilizadorVer1.c: 334:     switch(usart_protocol.command){
  6184  005E  2B76               	goto	l7396
  6185  005F                     l7236:	
  6186                           
  6187                           ;SlaveLiofilizadorVer1.c: 343:              strcpy(buffer,"v1.0.16");
  6188  005F  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6189  0060  00DF               	movwf	??_Decodify_Command
  6190  0061  085F               	movf	??_Decodify_Command,w
  6191  0062  00A0               	movwf	strcpy@from
  6192  0063  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6193  0064  160A  158A  2295  120A  118A  	fcall	_strcpy
  6194                           
  6195                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  6196  0069  300B               	movlw	11
  6197  006A                     L8:	
  6198  006A  160A  158A  23C1  120A  118A  	fcall	_Send_To_MB
  6199                           
  6200                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string(buffer);
  6201  006F  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6202  0070  1283               	bcf	3,5	;RP0=0, select bank0
  6203  0071  00A1               	movwf	USART_put_string@vetor
  6204  0072  3000               	movlw	0
  6205  0073  00A2               	movwf	USART_put_string@vetor+1
  6206  0074  160A  158A  244C   	fcall	_USART_put_string
  6207                           
  6208                           ;SlaveLiofilizadorVer1.c: 346:              break;
  6209  0077  0008               	return
  6210  0078                     l7242:	
  6211                           
  6212                           ;SlaveLiofilizadorVer1.c: 363:              if(usart_protocol.value[0]==0)
  6213  0078  1683               	bsf	3,5	;RP0=1, select bank3
  6214  0079  1703               	bsf	3,6	;RP1=1, select bank3
  6215  007A  0816               	movf	(_usart_protocol^(0+384)+6),w
  6216  007B  1D03               	btfss	3,2
  6217  007C  2886               	goto	l7246
  6218                           
  6219                           ;SlaveLiofilizadorVer1.c: 364:                 OutPut=Tensao1;
  6220  007D  1303               	bcf	3,6	;RP1=0, select bank1
  6221  007E  0823               	movf	(_Tensao1+3)^(0+128),w
  6222  007F  00E6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6223  0080  0822               	movf	(_Tensao1+2)^(0+128),w
  6224  0081  00E5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6225  0082  0821               	movf	(_Tensao1+1)^(0+128),w
  6226  0083  00E4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6227  0084  0820               	movf	_Tensao1^(0+128),w
  6228  0085  288E               	goto	L6
  6229  0086                     l7246:	
  6230                           
  6231                           ;SlaveLiofilizadorVer1.c: 366:                 OutPut=Vaccum0;
  6232  0086  1303               	bcf	3,6	;RP1=0, select bank1
  6233  0087  0827               	movf	(_Vaccum0+3)^(0+128),w
  6234  0088  00E6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6235  0089  0826               	movf	(_Vaccum0+2)^(0+128),w
  6236  008A  00E5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6237  008B  0825               	movf	(_Vaccum0+1)^(0+128),w
  6238  008C  00E4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6239  008D  0824               	movf	_Vaccum0^(0+128),w
  6240  008E                     L6:	
  6241  008E  00E3               	movwf	Decodify_Command@OutPut^(0+128)
  6242                           
  6243                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  6244  008F  3041               	movlw	65
  6245  0090  1283               	bcf	3,5	;RP0=0, select bank0
  6246  0091  00AC               	movwf	___flmul@b+3
  6247  0092  3020               	movlw	32
  6248  0093  00AB               	movwf	___flmul@b+2
  6249  0094  3000               	movlw	0
  6250  0095  00AA               	movwf	___flmul@b+1
  6251  0096  3000               	movlw	0
  6252  0097  00A9               	movwf	___flmul@b
  6253  0098  1683               	bsf	3,5	;RP0=1, select bank1
  6254  0099  0866               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6255  009A  1283               	bcf	3,5	;RP0=0, select bank0
  6256  009B  00B0               	movwf	___flmul@a+3
  6257  009C  1683               	bsf	3,5	;RP0=1, select bank1
  6258  009D  0865               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6259  009E  1283               	bcf	3,5	;RP0=0, select bank0
  6260  009F  00AF               	movwf	___flmul@a+2
  6261  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  6262  00A1  0864               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6263  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  6264  00A3  00AE               	movwf	___flmul@a+1
  6265  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  6266  00A5  0863               	movf	Decodify_Command@OutPut^(0+128),w
  6267  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  6268  00A7  00AD               	movwf	___flmul@a
  6269  00A8  120A  118A  23C9  120A  118A  	fcall	___flmul
  6270  00AD  082C               	movf	?___flmul+3,w
  6271  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  6272  00AF  00E6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6273  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  6274  00B1  082B               	movf	?___flmul+2,w
  6275  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  6276  00B3  00E5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6277  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  6278  00B5  082A               	movf	?___flmul+1,w
  6279  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  6280  00B7  00E4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6281  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  6282  00B9  0829               	movf	?___flmul,w
  6283  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  6284  00BB  00E3               	movwf	Decodify_Command@OutPut^(0+128)
  6285                           
  6286                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  6287  00BC  138B               	bcf	11,7	;volatile
  6288                           
  6289                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  6290  00BD  3002               	movlw	2
  6291  00BE  160A  158A  23C1  120A  118A  	fcall	_Send_To_MB
  6292                           
  6293                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  6294  00C3  0866               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6295  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  6296  00C5  00C6               	movwf	___fltol@f1+3
  6297  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  6298  00C7  0865               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6299  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  6300  00C9  00C5               	movwf	___fltol@f1+2
  6301  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  6302  00CB  0864               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6303  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  6304  00CD  00C4               	movwf	___fltol@f1+1
  6305  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  6306  00CF  0863               	movf	Decodify_Command@OutPut^(0+128),w
  6307  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  6308  00D1  00C3               	movwf	___fltol@f1
  6309  00D2  160A  158A  2795  120A  118A  	fcall	___fltol
  6310  00D7  0844               	movf	?___fltol+1,w
  6311  00D8  00CF               	movwf	USART_put_int@value+1
  6312  00D9  0843               	movf	?___fltol,w
  6313  00DA  00CE               	movwf	USART_put_int@value
  6314  00DB  160A  158A  21F9   	fcall	_USART_put_int
  6315                           
  6316                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  6317  00DE  178B               	bsf	11,7	;volatile
  6318                           
  6319                           ;SlaveLiofilizadorVer1.c: 375:              break;
  6320  00DF  0008               	return
  6321  00E0                     l7258:	
  6322                           
  6323                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6324  00E0  1683               	bsf	3,5	;RP0=1, select bank3
  6325  00E1  1703               	bsf	3,6	;RP1=1, select bank3
  6326  00E2  0816               	movf	(_usart_protocol^(0+384)+6),w
  6327  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  6328  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  6329  00E5  00DF               	movwf	??_Decodify_Command
  6330  00E6  085F               	movf	??_Decodify_Command,w
  6331  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  6332  00E8  00EB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6333                           
  6334                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6335  00E9  1703               	bsf	3,6	;RP1=1, select bank3
  6336  00EA  0817               	movf	(_usart_protocol^(0+384)+7),w
  6337  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  6338  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  6339  00ED  00DF               	movwf	??_Decodify_Command
  6340  00EE  085F               	movf	??_Decodify_Command,w
  6341  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  6342  00F0  00EA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6343                           
  6344                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6345  00F1  1703               	bsf	3,6	;RP1=1, select bank3
  6346  00F2  0818               	movf	(_usart_protocol^(0+384)+8),w
  6347  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  6348  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  6349  00F5  00DF               	movwf	??_Decodify_Command
  6350  00F6  085F               	movf	??_Decodify_Command,w
  6351  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  6352  00F8  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6353                           
  6354                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6355  00F9  1703               	bsf	3,6	;RP1=1, select bank3
  6356  00FA  0819               	movf	(_usart_protocol^(0+384)+9),w
  6357  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  6358  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  6359  00FD  00DF               	movwf	??_Decodify_Command
  6360  00FE  085F               	movf	??_Decodify_Command,w
  6361  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  6362  0100  00E8               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6363                           
  6364                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  6365  0101  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6366  0102  1283               	bcf	3,5	;RP0=0, select bank0
  6367  0103  00DB               	movwf	Save_Log@add_datalog+3
  6368  0104  1683               	bsf	3,5	;RP0=1, select bank1
  6369  0105  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6370  0106  1283               	bcf	3,5	;RP0=0, select bank0
  6371  0107  00DA               	movwf	Save_Log@add_datalog+2
  6372  0108  1683               	bsf	3,5	;RP0=1, select bank1
  6373  0109  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6374  010A  1283               	bcf	3,5	;RP0=0, select bank0
  6375  010B  00D9               	movwf	Save_Log@add_datalog+1
  6376  010C  1683               	bsf	3,5	;RP0=1, select bank1
  6377  010D  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6378  010E  1283               	bcf	3,5	;RP0=0, select bank0
  6379  010F  00D8               	movwf	Save_Log@add_datalog
  6380  0110  160A  118A  202C   	fcall	_Save_Log
  6381                           
  6382                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  6383  0113  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6384  0114  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6385                           
  6386                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  6387  0115  1683               	bsf	3,5	;RP0=1, select bank1
  6388  0116  01B0               	clrf	_milisegundo^(0+128)	;volatile
  6389  0117  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6390                           
  6391                           ;SlaveLiofilizadorVer1.c: 387:              break;
  6392  0118  0008               	return
  6393  0119                     l7266:	
  6394                           
  6395                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  6396  0119  3002               	movlw	2
  6397  011A  160A  158A  23C1  120A  118A  	fcall	_Send_To_MB
  6398                           
  6399                           ;SlaveLiofilizadorVer1.c: 401:              USART_put_int(1);
  6400  011F  3001               	movlw	1
  6401  0120  1283               	bcf	3,5	;RP0=0, select bank0
  6402  0121  00CE               	movwf	USART_put_int@value
  6403  0122  3000               	movlw	0
  6404  0123  00CF               	movwf	USART_put_int@value+1
  6405  0124  160A  158A  21F9   	fcall	_USART_put_int
  6406                           
  6407                           ;SlaveLiofilizadorVer1.c: 411:              break;
  6408  0127  0008               	return
  6409  0128                     l7270:	
  6410                           
  6411                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  6412  0128  1683               	bsf	3,5	;RP0=1, select bank3
  6413  0129  1703               	bsf	3,6	;RP1=1, select bank3
  6414  012A  0817               	movf	(_usart_protocol^(0+384)+7),w
  6415  012B  1283               	bcf	3,5	;RP0=0, select bank0
  6416  012C  1303               	bcf	3,6	;RP1=0, select bank0
  6417  012D  00DF               	movwf	??_Decodify_Command
  6418  012E  085F               	movf	??_Decodify_Command,w
  6419  012F  00A0               	movwf	EEPROM_Write_Byte@dado
  6420  0130  1683               	bsf	3,5	;RP0=1, select bank3
  6421  0131  1703               	bsf	3,6	;RP1=1, select bank3
  6422  0132  0816               	movf	(_usart_protocol^(0+384)+6),w
  6423  0133  160A  158A  255B  120A  118A  	fcall	_EEPROM_Write_Byte
  6424  0138                     L7:	
  6425                           
  6426                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  6427  0138  3003               	movlw	3
  6428  0139  160A  158A  23C1  120A  118A  	fcall	_Send_To_MB
  6429                           
  6430                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  6431  013E  160A  158A  2179   	fcall	_Send_Reply_OK
  6432                           
  6433                           ;SlaveLiofilizadorVer1.c: 432:              break;
  6434  0141  0008               	return
  6435  0142                     l7274:	
  6436                           
  6437                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6438  0142  1683               	bsf	3,5	;RP0=1, select bank3
  6439  0143  1703               	bsf	3,6	;RP1=1, select bank3
  6440  0144  0816               	movf	(_usart_protocol^(0+384)+6),w
  6441  0145  160A  158A  2332  120A  118A  	fcall	_EEPROM_Read_Byte
  6442  014A  1303               	bcf	3,6	;RP1=0, select bank0
  6443  014B  00DF               	movwf	??_Decodify_Command
  6444  014C  085F               	movf	??_Decodify_Command,w
  6445  014D  1683               	bsf	3,5	;RP0=1, select bank1
  6446  014E  00E7               	movwf	Decodify_Command@tempchar^(0+128)
  6447                           
  6448                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  6449  014F  3001               	movlw	1
  6450  0150  160A  158A  23C1  120A  118A  	fcall	_Send_To_MB
  6451                           
  6452                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  6453  0155  0867               	movf	Decodify_Command@tempchar^(0+128),w
  6454  0156  160A  158A  21AD   	fcall	_USART_putc
  6455                           
  6456                           ;SlaveLiofilizadorVer1.c: 437:              break;
  6457  0159  0008               	return
  6458  015A                     l7280:	
  6459                           
  6460                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  6461  015A  1683               	bsf	3,5	;RP0=1, select bank3
  6462  015B  1703               	bsf	3,6	;RP1=1, select bank3
  6463  015C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6464  015D  1283               	bcf	3,5	;RP0=0, select bank0
  6465  015E  1303               	bcf	3,6	;RP1=0, select bank0
  6466  015F  00DF               	movwf	??_Decodify_Command
  6467  0160  085F               	movf	??_Decodify_Command,w
  6468  0161  1683               	bsf	3,5	;RP0=1, select bank1
  6469  0162  00DF               	movwf	Decodify_Command@add^(0+128)
  6470                           
  6471                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6472  0163  1703               	bsf	3,6	;RP1=1, select bank3
  6473  0164  0818               	movf	(_usart_protocol^(0+384)+8),w
  6474  0165  1283               	bcf	3,5	;RP0=0, select bank0
  6475  0166  1303               	bcf	3,6	;RP1=0, select bank0
  6476  0167  00DF               	movwf	??_Decodify_Command
  6477  0168  01E0               	clrf	??_Decodify_Command+1
  6478  0169  1683               	bsf	3,5	;RP0=1, select bank3
  6479  016A  1703               	bsf	3,6	;RP1=1, select bank3
  6480  016B  0817               	movf	(_usart_protocol^(0+384)+7),w
  6481  016C  1283               	bcf	3,5	;RP0=0, select bank0
  6482  016D  1303               	bcf	3,6	;RP1=0, select bank0
  6483  016E  00E1               	movwf	??_Decodify_Command+2
  6484  016F  01E2               	clrf	??_Decodify_Command+3
  6485  0170  0861               	movf	??_Decodify_Command+2,w
  6486  0171  00E2               	movwf	??_Decodify_Command+3
  6487  0172  01E1               	clrf	??_Decodify_Command+2
  6488  0173  085F               	movf	??_Decodify_Command,w
  6489  0174  0461               	iorwf	??_Decodify_Command+2,w
  6490  0175  1683               	bsf	3,5	;RP0=1, select bank1
  6491  0176  00DD               	movwf	Decodify_Command@dados^(0+128)
  6492  0177  1283               	bcf	3,5	;RP0=0, select bank0
  6493  0178  0860               	movf	??_Decodify_Command+1,w
  6494  0179  0462               	iorwf	??_Decodify_Command+3,w
  6495  017A  1683               	bsf	3,5	;RP0=1, select bank1
  6496  017B  00DE               	movwf	(Decodify_Command@dados+1)^(0+128)
  6497                           
  6498                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  6499  017C  085E               	movf	(Decodify_Command@dados+1)^(0+128),w
  6500  017D  1283               	bcf	3,5	;RP0=0, select bank0
  6501  017E  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6502  017F  1683               	bsf	3,5	;RP0=1, select bank1
  6503  0180  085D               	movf	Decodify_Command@dados^(0+128),w
  6504  0181  1283               	bcf	3,5	;RP0=0, select bank0
  6505  0182  00A5               	movwf	EEPROM_Write_Integer@dado
  6506  0183  1683               	bsf	3,5	;RP0=1, select bank1
  6507  0184  085F               	movf	Decodify_Command@add^(0+128),w
  6508  0185  160A  158A  241A  120A  118A  	fcall	_EEPROM_Write_Integer
  6509  018A  2938               	goto	L7
  6510  018B                     l7290:	
  6511                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  6512                           
  6513                           
  6514                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6515  018B  1683               	bsf	3,5	;RP0=1, select bank3
  6516  018C  1703               	bsf	3,6	;RP1=1, select bank3
  6517  018D  0816               	movf	(_usart_protocol^(0+384)+6),w
  6518  018E  160A  118A  2002  120A  118A  	fcall	_EEPROM_Read_Integer
  6519  0193  0824               	movf	?_EEPROM_Read_Integer+1,w
  6520  0194  1683               	bsf	3,5	;RP0=1, select bank1
  6521  0195  00E2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6522  0196  1283               	bcf	3,5	;RP0=0, select bank0
  6523  0197  0823               	movf	?_EEPROM_Read_Integer,w
  6524  0198                     L9:	
  6525  0198  1683               	bsf	3,5	;RP0=1, select bank1
  6526  0199  00E1               	movwf	Decodify_Command@tempint^(0+128)
  6527                           
  6528                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  6529  019A  3002               	movlw	2
  6530  019B  160A  158A  23C1  120A  118A  	fcall	_Send_To_MB
  6531                           
  6532                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  6533  01A0  0862               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6534  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  6535  01A2  00CF               	movwf	USART_put_int@value+1
  6536  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  6537  01A4  0861               	movf	Decodify_Command@tempint^(0+128),w
  6538  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  6539  01A6  00CE               	movwf	USART_put_int@value
  6540  01A7  160A  158A  21F9   	fcall	_USART_put_int
  6541                           
  6542                           ;SlaveLiofilizadorVer1.c: 452:              break;
  6543  01AA  0008               	return
  6544  01AB                     l7296:	
  6545                           
  6546                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  6547  01AB  3097               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6548  01AC  00DF               	movwf	??_Decodify_Command
  6549  01AD  085F               	movf	??_Decodify_Command,w
  6550  01AE  00A5               	movwf	EEPROM_Write_String@dado
  6551  01AF  1683               	bsf	3,5	;RP0=1, select bank3
  6552  01B0  1703               	bsf	3,6	;RP1=1, select bank3
  6553  01B1  0816               	movf	(_usart_protocol^(0+384)+6),w
  6554  01B2  120A  158A  2000  120A  118A  	fcall	_EEPROM_Write_String
  6555  01B7  2938               	goto	L7
  6556  01B8                     l7302:	
  6557                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  6558                           
  6559                           
  6560                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 462:             
      +                           EEPROM_Read_String(usart_protocol.value[0],buffer);
  6561  01B8  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6562  01B9  00DF               	movwf	??_Decodify_Command
  6563  01BA  085F               	movf	??_Decodify_Command,w
  6564  01BB  00A3               	movwf	EEPROM_Read_String@dado
  6565  01BC  1683               	bsf	3,5	;RP0=1, select bank3
  6566  01BD  1703               	bsf	3,6	;RP1=1, select bank3
  6567  01BE  0816               	movf	(_usart_protocol^(0+384)+6),w
  6568  01BF  160A  158A  22F1  120A  118A  	fcall	_EEPROM_Read_String
  6569                           
  6570                           ;SlaveLiofilizadorVer1.c: 463:              Send_To_MB(sizeof(buffer));
  6571  01C4  3021               	movlw	33
  6572  01C5  286A               	goto	L8
  6573  01C6                     l7308:	
  6574                           
  6575                           ;SlaveLiofilizadorVer1.c: 470:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6576  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  6577  01C7  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6578  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  6579  01C9  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6580  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  6581  01CB  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6582  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  6583  01CD  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6584  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  6585  01CF  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6586  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  6587  01D1  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6588  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  6589  01D3  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6590  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  6591  01D5  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6592  01D6  1683               	bsf	3,5	;RP0=1, select bank3
  6593  01D7  1703               	bsf	3,6	;RP1=1, select bank3
  6594  01D8  081B               	movf	(_usart_protocol^(0+384)+11),w
  6595  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  6596  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  6597  01DB  00DF               	movwf	??_Decodify_Command
  6598  01DC  085F               	movf	??_Decodify_Command,w
  6599  01DD  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  6600  01DE  1683               	bsf	3,5	;RP0=1, select bank3
  6601  01DF  1703               	bsf	3,6	;RP1=1, select bank3
  6602  01E0  0816               	movf	(_usart_protocol^(0+384)+6),w
  6603  01E1  160A  158A  21E3  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6604  01E6  2938               	goto	L7
  6605  01E7                     l7314:	
  6606                           ;SlaveLiofilizadorVer1.c: 473:              Send_To_MB(3);
  6607                           
  6608                           
  6609                           ;SlaveLiofilizadorVer1.c: 477:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6610  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  6611  01E8  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6612  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  6613  01EA  00BA               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6614  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  6615  01EC  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6616  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  6617  01EE  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6618  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  6619  01F0  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6620  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  6621  01F2  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6622  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  6623  01F4  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6624  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  6625  01F6  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6626  01F7  1683               	bsf	3,5	;RP0=1, select bank3
  6627  01F8  1703               	bsf	3,6	;RP1=1, select bank3
  6628  01F9  0816               	movf	(_usart_protocol^(0+384)+6),w
  6629  01FA  160A  158A  220F  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6630  01FF  00DF               	movwf	??_Decodify_Command
  6631  0200  085F               	movf	??_Decodify_Command,w
  6632  0201  1683               	bsf	3,5	;RP0=1, select bank1
  6633  0202  00E7               	movwf	Decodify_Command@tempchar^(0+128)
  6634                           
  6635                           ;SlaveLiofilizadorVer1.c: 481:              Send_To_MB(1);
  6636  0203  3001               	movlw	1
  6637  0204  160A  158A  23C1  120A  118A  	fcall	_Send_To_MB
  6638                           
  6639                           ;SlaveLiofilizadorVer1.c: 482:              USART_putc(tempchar);
  6640  0209  0867               	movf	Decodify_Command@tempchar^(0+128),w
  6641  020A  160A  158A  21AD   	fcall	_USART_putc
  6642                           
  6643                           ;SlaveLiofilizadorVer1.c: 483:              break;
  6644  020D  0008               	return
  6645  020E                     l7320:	
  6646                           
  6647                           ;SlaveLiofilizadorVer1.c: 485:              {;SlaveLiofilizadorVer1.c: 486:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6648  020E  1683               	bsf	3,5	;RP0=1, select bank1
  6649  020F  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6650  0210  1283               	bcf	3,5	;RP0=0, select bank0
  6651  0211  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6652  0212  1683               	bsf	3,5	;RP0=1, select bank1
  6653  0213  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6654  0214  1283               	bcf	3,5	;RP0=0, select bank0
  6655  0215  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6656  0216  1683               	bsf	3,5	;RP0=1, select bank1
  6657  0217  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6658  0218  1283               	bcf	3,5	;RP0=0, select bank0
  6659  0219  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6660  021A  1683               	bsf	3,5	;RP0=1, select bank1
  6661  021B  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6662  021C  1283               	bcf	3,5	;RP0=0, select bank0
  6663  021D  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6664  021E  1683               	bsf	3,5	;RP0=1, select bank3
  6665  021F  1703               	bsf	3,6	;RP1=1, select bank3
  6666  0220  081C               	movf	(_usart_protocol^(0+384)+12),w
  6667  0221  1283               	bcf	3,5	;RP0=0, select bank0
  6668  0222  1303               	bcf	3,6	;RP1=0, select bank0
  6669  0223  00DF               	movwf	??_Decodify_Command
  6670  0224  01E0               	clrf	??_Decodify_Command+1
  6671  0225  1683               	bsf	3,5	;RP0=1, select bank3
  6672  0226  1703               	bsf	3,6	;RP1=1, select bank3
  6673  0227  081B               	movf	(_usart_protocol^(0+384)+11),w
  6674  0228  1283               	bcf	3,5	;RP0=0, select bank0
  6675  0229  1303               	bcf	3,6	;RP1=0, select bank0
  6676  022A  00E1               	movwf	??_Decodify_Command+2
  6677  022B  01E2               	clrf	??_Decodify_Command+3
  6678  022C  0861               	movf	??_Decodify_Command+2,w
  6679  022D  00E2               	movwf	??_Decodify_Command+3
  6680  022E  01E1               	clrf	??_Decodify_Command+2
  6681  022F  085F               	movf	??_Decodify_Command,w
  6682  0230  0461               	iorwf	??_Decodify_Command+2,w
  6683  0231  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  6684  0232  0860               	movf	??_Decodify_Command+1,w
  6685  0233  0462               	iorwf	??_Decodify_Command+3,w
  6686  0234  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  6687  0235  1683               	bsf	3,5	;RP0=1, select bank3
  6688  0236  1703               	bsf	3,6	;RP1=1, select bank3
  6689  0237  0816               	movf	(_usart_protocol^(0+384)+6),w
  6690  0238  160A  158A  22D1  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6691  023D  2938               	goto	L7
  6692  023E                     l7326:	
  6693                           ;SlaveLiofilizadorVer1.c: 491:              Send_To_MB(3);
  6694                           
  6695                           
  6696                           ;SlaveLiofilizadorVer1.c: 496:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6697  023E  1683               	bsf	3,5	;RP0=1, select bank1
  6698  023F  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6699  0240  1283               	bcf	3,5	;RP0=0, select bank0
  6700  0241  00BA               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6701  0242  1683               	bsf	3,5	;RP0=1, select bank1
  6702  0243  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6703  0244  1283               	bcf	3,5	;RP0=0, select bank0
  6704  0245  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6705  0246  1683               	bsf	3,5	;RP0=1, select bank1
  6706  0247  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6707  0248  1283               	bcf	3,5	;RP0=0, select bank0
  6708  0249  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6709  024A  1683               	bsf	3,5	;RP0=1, select bank1
  6710  024B  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6711  024C  1283               	bcf	3,5	;RP0=0, select bank0
  6712  024D  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6713  024E  1683               	bsf	3,5	;RP0=1, select bank3
  6714  024F  1703               	bsf	3,6	;RP1=1, select bank3
  6715  0250  0816               	movf	(_usart_protocol^(0+384)+6),w
  6716  0251  160A  158A  2399  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6717  0256  0838               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6718  0257  1683               	bsf	3,5	;RP0=1, select bank1
  6719  0258  00E2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6720  0259  1283               	bcf	3,5	;RP0=0, select bank0
  6721  025A  0837               	movf	?_EEPROM_24C1025_Read_Int,w
  6722  025B  2998               	goto	L9
  6723  025C                     l7332:	
  6724                           ;SlaveLiofilizadorVer1.c: 498:              Send_To_MB(2);
  6725                           
  6726                           
  6727                           ;SlaveLiofilizadorVer1.c: 504:              {;SlaveLiofilizadorVer1.c: 505:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 506:              sizedata=usart_protocol.value
      +                          [5];
  6728  025C  1683               	bsf	3,5	;RP0=1, select bank3
  6729  025D  1703               	bsf	3,6	;RP1=1, select bank3
  6730  025E  081B               	movf	(_usart_protocol^(0+384)+11),w
  6731  025F  1283               	bcf	3,5	;RP0=0, select bank0
  6732  0260  1303               	bcf	3,6	;RP1=0, select bank0
  6733  0261  00DF               	movwf	??_Decodify_Command
  6734  0262  085F               	movf	??_Decodify_Command,w
  6735  0263  1683               	bsf	3,5	;RP0=1, select bank1
  6736  0264  00E0               	movwf	Decodify_Command@sizedata^(0+128)
  6737                           
  6738                           ;SlaveLiofilizadorVer1.c: 507:              Send_To_MB(sizedata);
  6739  0265  0860               	movf	Decodify_Command@sizedata^(0+128),w
  6740  0266  160A  158A  23C1  120A  118A  	fcall	_Send_To_MB
  6741                           
  6742                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer_USART(usart_proto
      +                          col.value[0],
  6743  026B  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6744  026C  1283               	bcf	3,5	;RP0=0, select bank0
  6745  026D  00AC               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3
  6746  026E  1683               	bsf	3,5	;RP0=1, select bank1
  6747  026F  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6748  0270  1283               	bcf	3,5	;RP0=0, select bank0
  6749  0271  00AB               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2
  6750  0272  1683               	bsf	3,5	;RP0=1, select bank1
  6751  0273  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6752  0274  1283               	bcf	3,5	;RP0=0, select bank0
  6753  0275  00AA               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1
  6754  0276  1683               	bsf	3,5	;RP0=1, select bank1
  6755  0277  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6756  0278  1283               	bcf	3,5	;RP0=0, select bank0
  6757  0279  00A9               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add
  6758  027A  1683               	bsf	3,5	;RP0=1, select bank1
  6759  027B  0860               	movf	Decodify_Command@sizedata^(0+128),w
  6760  027C  1283               	bcf	3,5	;RP0=0, select bank0
  6761  027D  00DF               	movwf	??_Decodify_Command
  6762  027E  085F               	movf	??_Decodify_Command,w
  6763  027F  00AD               	movwf	EEPROM_24C1025_Read_Buffer_USART@sizedata
  6764  0280  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6765  0281  00E0               	movwf	??_Decodify_Command+1
  6766  0282  0860               	movf	??_Decodify_Command+1,w
  6767  0283  00AE               	movwf	EEPROM_24C1025_Read_Buffer_USART@data
  6768  0284  1683               	bsf	3,5	;RP0=1, select bank3
  6769  0285  1703               	bsf	3,6	;RP1=1, select bank3
  6770  0286  0816               	movf	(_usart_protocol^(0+384)+6),w
  6771  0287  160A  118A  2690   	fcall	_EEPROM_24C1025_Read_Buffer_USART
  6772                           
  6773                           ;SlaveLiofilizadorVer1.c: 513:              };SlaveLiofilizadorVer1.c: 514:             
      +                           break;
  6774  028A  0008               	return
  6775  028B                     l7338:	
  6776                           
  6777                           ;SlaveLiofilizadorVer1.c: 517:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6778  028B  1683               	bsf	3,5	;RP0=1, select bank1
  6779  028C  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6780  028D  1283               	bcf	3,5	;RP0=0, select bank0
  6781  028E  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6782  028F  1683               	bsf	3,5	;RP0=1, select bank1
  6783  0290  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6784  0291  1283               	bcf	3,5	;RP0=0, select bank0
  6785  0292  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6786  0293  1683               	bsf	3,5	;RP0=1, select bank1
  6787  0294  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6788  0295  1283               	bcf	3,5	;RP0=0, select bank0
  6789  0296  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6790  0297  1683               	bsf	3,5	;RP0=1, select bank1
  6791  0298  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6792  0299  1283               	bcf	3,5	;RP0=0, select bank0
  6793  029A  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6794  029B  1683               	bsf	3,5	;RP0=1, select bank3
  6795  029C  1703               	bsf	3,6	;RP1=1, select bank3
  6796  029D  081B               	movf	(_usart_protocol^(0+384)+11),w
  6797  029E  1283               	bcf	3,5	;RP0=0, select bank0
  6798  029F  1303               	bcf	3,6	;RP1=0, select bank0
  6799  02A0  00DF               	movwf	??_Decodify_Command
  6800  02A1  085F               	movf	??_Decodify_Command,w
  6801  02A2  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6802  02A3  309C               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6803  02A4  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6804  02A5  3001               	movlw	1
  6805  02A6  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6806  02A7  1683               	bsf	3,5	;RP0=1, select bank3
  6807  02A8  1703               	bsf	3,6	;RP1=1, select bank3
  6808  02A9  0816               	movf	(_usart_protocol^(0+384)+6),w
  6809  02AA  160A  118A  23BA  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6810  02AF  2938               	goto	L7
  6811  02B0                     l7344:	
  6812                           ;SlaveLiofilizadorVer1.c: 522:              Send_To_MB(3);
  6813                           
  6814                           
  6815                           ;SlaveLiofilizadorVer1.c: 527:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6816  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  6817  02B1  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6818  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  6819  02B3  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6820  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  6821  02B5  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6822  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  6823  02B7  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6824  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  6825  02B9  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6826  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  6827  02BB  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6828  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  6829  02BD  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6830  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  6831  02BF  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6832  02C0  309B               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6833  02C1  00DF               	movwf	??_Decodify_Command
  6834  02C2  085F               	movf	??_Decodify_Command,w
  6835  02C3  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6836  02C4  1683               	bsf	3,5	;RP0=1, select bank3
  6837  02C5  1703               	bsf	3,6	;RP1=1, select bank3
  6838  02C6  0816               	movf	(_usart_protocol^(0+384)+6),w
  6839  02C7  160A  118A  22C7  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6840  02CC  2938               	goto	L7
  6841  02CD                     l7350:	
  6842                           ;SlaveLiofilizadorVer1.c: 530:              Send_To_MB(3);
  6843                           
  6844                           
  6845                           ;SlaveLiofilizadorVer1.c: 534:              {;SlaveLiofilizadorVer1.c: 535:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6846  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  6847  02CE  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6848  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  6849  02D0  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6850  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  6851  02D2  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6852  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  6853  02D4  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6854  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  6855  02D6  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6856  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  6857  02D8  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6858  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  6859  02DA  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6860  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  6861  02DC  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6862  02DD  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6863  02DE  00DF               	movwf	??_Decodify_Command
  6864  02DF  085F               	movf	??_Decodify_Command,w
  6865  02E0  00AD               	movwf	EEPROM_24C1025_Read_Str@buffer
  6866  02E1  1683               	bsf	3,5	;RP0=1, select bank3
  6867  02E2  1703               	bsf	3,6	;RP1=1, select bank3
  6868  02E3  0816               	movf	(_usart_protocol^(0+384)+6),w
  6869  02E4  160A  118A  2524  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6870                           
  6871                           ;SlaveLiofilizadorVer1.c: 539:              Send_To_MB(strlen(buffer)+1);
  6872  02E9  30BC               	movlw	(low (_buffer| 0))& (0+255)
  6873  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  6874  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  6875  02EC  00A0               	movwf	strlen@s
  6876  02ED  3000               	movlw	0
  6877  02EE  00A1               	movwf	strlen@s+1
  6878  02EF  160A  158A  225C  120A  118A  	fcall	_strlen
  6879  02F4  0820               	movf	?_strlen,w
  6880  02F5  3E01               	addlw	1
  6881  02F6  286A               	goto	L8
  6882  02F7                     l7354:	
  6883                           
  6884                           ;SlaveLiofilizadorVer1.c: 545:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  6885  02F7  1683               	bsf	3,5	;RP0=1, select bank3
  6886  02F8  1703               	bsf	3,6	;RP1=1, select bank3
  6887  02F9  0817               	movf	(_usart_protocol^(0+384)+7),w
  6888  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  6889  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  6890  02FC  00DF               	movwf	??_Decodify_Command
  6891  02FD  01E0               	clrf	??_Decodify_Command+1
  6892  02FE  085F               	movf	??_Decodify_Command,w
  6893  02FF  00D8               	movwf	EEPROM_24C1025_Fill_All@value
  6894  0300  0860               	movf	??_Decodify_Command+1,w
  6895  0301  00D9               	movwf	EEPROM_24C1025_Fill_All@value+1
  6896  0302  1683               	bsf	3,5	;RP0=1, select bank3
  6897  0303  1703               	bsf	3,6	;RP1=1, select bank3
  6898  0304  0816               	movf	(_usart_protocol^(0+384)+6),w
  6899  0305  160A  158A  264D  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  6900  030A  2938               	goto	L7
  6901  030B                     l7360:	
  6902                           ;SlaveLiofilizadorVer1.c: 547:              Send_To_MB(3);
  6903                           
  6904                           
  6905                           ;SlaveLiofilizadorVer1.c: 552:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  6906  030B  1683               	bsf	3,5	;RP0=1, select bank3
  6907  030C  1703               	bsf	3,6	;RP1=1, select bank3
  6908  030D  0816               	movf	(_usart_protocol^(0+384)+6),w
  6909  030E  1283               	bcf	3,5	;RP0=0, select bank0
  6910  030F  1303               	bcf	3,6	;RP1=0, select bank0
  6911  0310  00DF               	movwf	??_Decodify_Command
  6912  0311  01E0               	clrf	??_Decodify_Command+1
  6913  0312  085F               	movf	??_Decodify_Command,w
  6914  0313  00D6               	movwf	PROCULUS_Show_Screen@screen
  6915  0314  0860               	movf	??_Decodify_Command+1,w
  6916  0315  00D7               	movwf	PROCULUS_Show_Screen@screen+1
  6917  0316  160A  158A  21CE  120A  118A  	fcall	_PROCULUS_Show_Screen
  6918  031B  2938               	goto	L7
  6919  031C                     l7366:	
  6920                           ;SlaveLiofilizadorVer1.c: 553:              Send_To_MB(3);
  6921                           
  6922                           
  6923                           ;SlaveLiofilizadorVer1.c: 558:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  6924  031C  1683               	bsf	3,5	;RP0=1, select bank3
  6925  031D  1703               	bsf	3,6	;RP1=1, select bank3
  6926  031E  0816               	movf	(_usart_protocol^(0+384)+6),w
  6927  031F  1283               	bcf	3,5	;RP0=0, select bank0
  6928  0320  1303               	bcf	3,6	;RP1=0, select bank0
  6929  0321  00DF               	movwf	??_Decodify_Command
  6930  0322  01E0               	clrf	??_Decodify_Command+1
  6931  0323  085F               	movf	??_Decodify_Command,w
  6932  0324  00E0               	movwf	??_Decodify_Command+1
  6933  0325  01DF               	clrf	??_Decodify_Command
  6934  0326  1683               	bsf	3,5	;RP0=1, select bank3
  6935  0327  1703               	bsf	3,6	;RP1=1, select bank3
  6936  0328  0817               	movf	(_usart_protocol^(0+384)+7),w
  6937  0329  1283               	bcf	3,5	;RP0=0, select bank0
  6938  032A  1303               	bcf	3,6	;RP1=0, select bank0
  6939  032B  075F               	addwf	??_Decodify_Command,w
  6940  032C  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  6941  032D  3000               	movlw	0
  6942  032E  1803               	skipnc
  6943  032F  3001               	movlw	1
  6944  0330  0760               	addwf	??_Decodify_Command+1,w
  6945  0331  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  6946  0332  160A  158A  2354  120A  118A  	fcall	_PROCULUS_Buzzer
  6947  0337  2938               	goto	L7
  6948  0338                     l7372:	
  6949                           ;SlaveLiofilizadorVer1.c: 560:              Send_To_MB(3);
  6950                           
  6951                           
  6952                           ;SlaveLiofilizadorVer1.c: 564:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  6953  0338  1683               	bsf	3,5	;RP0=1, select bank3
  6954  0339  1703               	bsf	3,6	;RP1=1, select bank3
  6955  033A  0816               	movf	(_usart_protocol^(0+384)+6),w
  6956  033B  1283               	bcf	3,5	;RP0=0, select bank0
  6957  033C  1303               	bcf	3,6	;RP1=0, select bank0
  6958  033D  00DF               	movwf	??_Decodify_Command
  6959  033E  01E0               	clrf	??_Decodify_Command+1
  6960  033F  085F               	movf	??_Decodify_Command,w
  6961  0340  00E0               	movwf	??_Decodify_Command+1
  6962  0341  01DF               	clrf	??_Decodify_Command
  6963  0342  1683               	bsf	3,5	;RP0=1, select bank3
  6964  0343  1703               	bsf	3,6	;RP1=1, select bank3
  6965  0344  0817               	movf	(_usart_protocol^(0+384)+7),w
  6966  0345  1283               	bcf	3,5	;RP0=0, select bank0
  6967  0346  1303               	bcf	3,6	;RP1=0, select bank0
  6968  0347  075F               	addwf	??_Decodify_Command,w
  6969  0348  00DA               	movwf	PROCULUS_VP_Write_String@vp
  6970  0349  3000               	movlw	0
  6971  034A  1803               	skipnc
  6972  034B  3001               	movlw	1
  6973  034C  0760               	addwf	??_Decodify_Command+1,w
  6974  034D  00DB               	movwf	PROCULUS_VP_Write_String@vp+1
  6975  034E  3098               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  6976  034F  00E1               	movwf	??_Decodify_Command+2
  6977  0350  0861               	movf	??_Decodify_Command+2,w
  6978  0351  00DC               	movwf	PROCULUS_VP_Write_String@text
  6979  0352  160A  158A  2228  120A  118A  	fcall	_PROCULUS_VP_Write_String
  6980  0357  2938               	goto	L7
  6981  0358                     l7378:	
  6982                           ;SlaveLiofilizadorVer1.c: 567:              Send_To_MB(3);
  6983                           
  6984                           
  6985                           ;SlaveLiofilizadorVer1.c: 573:              if(usart_protocol.value[0]==0)
  6986  0358  1683               	bsf	3,5	;RP0=1, select bank3
  6987  0359  1703               	bsf	3,6	;RP1=1, select bank3
  6988  035A  0816               	movf	(_usart_protocol^(0+384)+6),w
  6989  035B  1D03               	btfss	3,2
  6990  035C  2B68               	goto	l7384
  6991                           
  6992                           ;SlaveLiofilizadorVer1.c: 574:                 {;SlaveLiofilizadorVer1.c: 575:          
      +                                 if(!usart_protocol.value[1])
  6993  035D  0817               	movf	(_usart_protocol^(0+384)+7),w
  6994  035E  1D03               	btfss	3,2
  6995  035F  2B64               	goto	l426
  6996                           
  6997                           ;SlaveLiofilizadorVer1.c: 576:                    PORTCbits.RC0=0;
  6998  0360  1283               	bcf	3,5	;RP0=0, select bank0
  6999  0361  1303               	bcf	3,6	;RP1=0, select bank0
  7000  0362  1007               	bcf	7,0	;volatile
  7001  0363  2938               	goto	L7
  7002  0364                     l426:	
  7003                           ;SlaveLiofilizadorVer1.c: 577:                 else
  7004                           
  7005                           
  7006                           ;SlaveLiofilizadorVer1.c: 578:                    PORTCbits.RC0=1;
  7007  0364  1283               	bcf	3,5	;RP0=0, select bank0
  7008  0365  1303               	bcf	3,6	;RP1=0, select bank0
  7009  0366  1407               	bsf	7,0	;volatile
  7010  0367  2938               	goto	L7
  7011  0368                     l7384:	
  7012  0368  0316               	decf	(_usart_protocol^(0+384)+6),w
  7013  0369  1D03               	btfss	3,2
  7014  036A  2938               	goto	L7
  7015                           
  7016                           ;SlaveLiofilizadorVer1.c: 581:                      {;SlaveLiofilizadorVer1.c: 582:     
      +                                            if(!usart_protocol.value[1])
  7017  036B  0817               	movf	(_usart_protocol^(0+384)+7),w
  7018  036C  1D03               	btfss	3,2
  7019  036D  2B72               	goto	l430
  7020                           
  7021                           ;SlaveLiofilizadorVer1.c: 583:                          PORTCbits.RC1=0;
  7022  036E  1283               	bcf	3,5	;RP0=0, select bank0
  7023  036F  1303               	bcf	3,6	;RP1=0, select bank0
  7024  0370  1087               	bcf	7,1	;volatile
  7025  0371  2938               	goto	L7
  7026  0372                     l430:	
  7027                           ;SlaveLiofilizadorVer1.c: 584:                       else
  7028                           
  7029                           
  7030                           ;SlaveLiofilizadorVer1.c: 585:                          PORTCbits.RC1=1;
  7031  0372  1283               	bcf	3,5	;RP0=0, select bank0
  7032  0373  1303               	bcf	3,6	;RP1=0, select bank0
  7033  0374  1487               	bsf	7,1	;volatile
  7034  0375  2938               	goto	L7
  7035  0376                     l7396:	
  7036                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(3);
  7037                           
  7038  0376  1703               	bsf	3,6	;RP1=1, select bank3
  7039  0377  0814               	movf	(_usart_protocol^(0+384)+4),w
  7040  0378  1283               	bcf	3,5	;RP0=0, select bank0
  7041  0379  1303               	bcf	3,6	;RP1=0, select bank0
  7042  037A  00DF               	movwf	??_Decodify_Command
  7043  037B  01E0               	clrf	??_Decodify_Command+1
  7044                           
  7045                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7046                           ; Switch size 1, requested type "simple"
  7047                           ; Number of cases is 1, Range of values is 0 to 0
  7048                           ; switch strategies available:
  7049                           ; Name         Instructions Cycles
  7050                           ; simple_byte            4     3 (average)
  7051                           ; direct_byte           11     8 (fixed)
  7052                           ; jumptable            260     6 (fixed)
  7053                           ;	Chosen strategy is simple_byte
  7054  037C  0860               	movf	??_Decodify_Command+1,w
  7055  037D  3A00               	xorlw	0	; case 0
  7056  037E  1903               	skipnz
  7057  037F  2B81               	goto	l7554
  7058  0380  2BC8               	goto	l432
  7059  0381                     l7554:	
  7060                           
  7061                           ; Switch size 1, requested type "simple"
  7062                           ; Number of cases is 23, Range of values is 2 to 65
  7063                           ; switch strategies available:
  7064                           ; Name         Instructions Cycles
  7065                           ; simple_byte           70    36 (average)
  7066                           ; direct_byte          203    11 (fixed)
  7067                           ; jumptable            263     9 (fixed)
  7068                           ;	Chosen strategy is simple_byte
  7069  0381  085F               	movf	??_Decodify_Command,w
  7070  0382  3A02               	xorlw	2	; case 2
  7071  0383  1903               	skipnz
  7072  0384  28E0               	goto	l7258
  7073  0385  3A01               	xorlw	1	; case 3
  7074  0386  1903               	skipnz
  7075  0387  2919               	goto	l7266
  7076  0388  3A0B               	xorlw	11	; case 8
  7077  0389  1903               	skipnz
  7078  038A  2928               	goto	l7270
  7079  038B  3A01               	xorlw	1	; case 9
  7080  038C  1903               	skipnz
  7081  038D  2942               	goto	l7274
  7082  038E  3A03               	xorlw	3	; case 10
  7083  038F  1903               	skipnz
  7084  0390  295A               	goto	l7280
  7085  0391  3A01               	xorlw	1	; case 11
  7086  0392  1903               	skipnz
  7087  0393  298B               	goto	l7290
  7088  0394  3A07               	xorlw	7	; case 12
  7089  0395  1903               	skipnz
  7090  0396  29AB               	goto	l7296
  7091  0397  3A01               	xorlw	1	; case 13
  7092  0398  1903               	skipnz
  7093  0399  29B8               	goto	l7302
  7094  039A  3A1C               	xorlw	28	; case 17
  7095  039B  1903               	skipnz
  7096  039C  29C6               	goto	l7308
  7097  039D  3A03               	xorlw	3	; case 18
  7098  039E  1903               	skipnz
  7099  039F  29E7               	goto	l7314
  7100  03A0  3A01               	xorlw	1	; case 19
  7101  03A1  1903               	skipnz
  7102  03A2  2A0E               	goto	l7320
  7103  03A3  3A07               	xorlw	7	; case 20
  7104  03A4  1903               	skipnz
  7105  03A5  2A3E               	goto	l7326
  7106  03A6  3A01               	xorlw	1	; case 21
  7107  03A7  1903               	skipnz
  7108  03A8  2AB0               	goto	l7344
  7109  03A9  3A03               	xorlw	3	; case 22
  7110  03AA  1903               	skipnz
  7111  03AB  2ACD               	goto	l7350
  7112  03AC  3A01               	xorlw	1	; case 23
  7113  03AD  1903               	skipnz
  7114  03AE  2A8B               	goto	l7338
  7115  03AF  3A0F               	xorlw	15	; case 24
  7116  03B0  1903               	skipnz
  7117  03B1  2A5C               	goto	l7332
  7118  03B2  3A01               	xorlw	1	; case 25
  7119  03B3  1903               	skipnz
  7120  03B4  2AF7               	goto	l7354
  7121  03B5  3A03               	xorlw	3	; case 26
  7122  03B6  1903               	skipnz
  7123  03B7  2878               	goto	l7242
  7124  03B8  3A38               	xorlw	56	; case 34
  7125  03B9  1903               	skipnz
  7126  03BA  2B38               	goto	l7372
  7127  03BB  3A06               	xorlw	6	; case 36
  7128  03BC  1903               	skipnz
  7129  03BD  2B1C               	goto	l7366
  7130  03BE  3A01               	xorlw	1	; case 37
  7131  03BF  1903               	skipnz
  7132  03C0  2B0B               	goto	l7360
  7133  03C1  3A15               	xorlw	21	; case 48
  7134  03C2  1903               	skipnz
  7135  03C3  2B58               	goto	l7378
  7136  03C4  3A71               	xorlw	113	; case 65
  7137  03C5  1903               	skipnz
  7138  03C6  285F               	goto	l7236
  7139  03C7  2BC8               	goto	l432
  7140  03C8                     l432:	
  7141  03C8  0008               	return
  7142  03C9                     __end_of_Decodify_Command:	
  7143                           
  7144                           	psect	text16
  7145  1A95                     __ptext16:	
  7146 ;; *************** function _strcpy *****************
  7147 ;; Defined at:
  7148 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;  to              1    wreg     PTR unsigned char 
  7151 ;;		 -> buffer(33), 
  7152 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  7153 ;;		 -> STR_1(8), 
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;  to              1    2[BANK0 ] PTR unsigned char 
  7156 ;;		 -> buffer(33), 
  7157 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7158 ;;		 -> buffer(33), 
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      PTR unsigned char 
  7161 ;; Registers used:
  7162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7163 ;; Tracked objects:
  7164 ;;		On entry : 300/0
  7165 ;;		On exit  : B00/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7168 ;;      Params:         0       1       0       0       0
  7169 ;;      Locals:         0       2       0       0       0
  7170 ;;      Temps:          0       1       0       0       0
  7171 ;;      Totals:         0       4       0       0       0
  7172 ;;Total ram usage:        4 bytes
  7173 ;; Hardware stack levels used:    2
  7174 ;; Hardware stack levels required when called:    1
  7175 ;; This function calls:
  7176 ;;		Nothing
  7177 ;; This function is called by:
  7178 ;;		_Decodify_Command
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           
  7183                           ;psect for function _strcpy
  7184  1A95                     _strcpy:	
  7185                           
  7186                           ;incstack = 0
  7187                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  7188                           ;strcpy@to stored from wreg
  7189  1A95  00A2               	movwf	strcpy@to
  7190  1A96  0822               	movf	strcpy@to,w
  7191  1A97  00A1               	movwf	??_strcpy
  7192  1A98  0821               	movf	??_strcpy,w
  7193  1A99  00A3               	movwf	strcpy@cp
  7194  1A9A                     l6782:	
  7195  1A9A  0820               	movf	strcpy@from,w
  7196  1A9B  0084               	movwf	4
  7197  1A9C  160A  158A  200A  160A  158A  	fcall	stringdir
  7198  1AA1  00A1               	movwf	??_strcpy
  7199  1AA2  0823               	movf	strcpy@cp,w
  7200  1AA3  0084               	movwf	4
  7201  1AA4  0821               	movf	??_strcpy,w
  7202  1AA5  1383               	bcf	3,7	;select IRP bank0
  7203  1AA6  0080               	movwf	0
  7204  1AA7  0800               	movf	0,w
  7205  1AA8  1903               	btfsc	3,2
  7206  1AA9  0008               	return
  7207  1AAA  3001               	movlw	1
  7208  1AAB  00A1               	movwf	??_strcpy
  7209  1AAC  0821               	movf	??_strcpy,w
  7210  1AAD  07A3               	addwf	strcpy@cp,f
  7211  1AAE  3001               	movlw	1
  7212  1AAF  00A1               	movwf	??_strcpy
  7213  1AB0  0821               	movf	??_strcpy,w
  7214  1AB1  07A0               	addwf	strcpy@from,f
  7215  1AB2  2A9A               	goto	l6782
  7216  1AB3                     __end_of_strcpy:	
  7217                           
  7218                           	psect	text17
  7219  1E8C                     __ptext17:	
  7220 ;; *************** function _USART_to_Protocol *****************
  7221 ;; Defined at:
  7222 ;;		line 77 in file "usart.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  usart_protoc    1    wreg     PTR struct .
  7225 ;;		 -> usart_protocol(58), 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  7228 ;;		 -> usart_protocol(58), 
  7229 ;;  i               2    2[BANK0 ] int 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  1    wreg      void 
  7232 ;; Registers used:
  7233 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7234 ;; Tracked objects:
  7235 ;;		On entry : 300/100
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7239 ;;      Params:         0       0       0       0       0
  7240 ;;      Locals:         0       3       0       0       0
  7241 ;;      Temps:          0       2       0       0       0
  7242 ;;      Totals:         0       5       0       0       0
  7243 ;;Total ram usage:        5 bytes
  7244 ;; Hardware stack levels used:    1
  7245 ;; Hardware stack levels required when called:    1
  7246 ;; This function calls:
  7247 ;;		Nothing
  7248 ;; This function is called by:
  7249 ;;		_Decodify_Command
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           
  7254                           ;psect for function _USART_to_Protocol
  7255  1E8C                     _USART_to_Protocol:	
  7256                           
  7257                           ;incstack = 0
  7258                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  7259                           ;USART_to_Protocol@usart_protocol stored from wreg
  7260  1E8C  1283               	bcf	3,5	;RP0=0, select bank0
  7261  1E8D  00A4               	movwf	USART_to_Protocol@usart_protocol
  7262                           
  7263                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  7264  1E8E  0824               	movf	USART_to_Protocol@usart_protocol,w
  7265  1E8F  0084               	movwf	4
  7266  1E90  1703               	bsf	3,6	;RP1=1, select bank2
  7267  1E91  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  7268  1E92  1783               	bsf	3,7	;select IRP bank2
  7269  1E93  0080               	movwf	0
  7270  1E94  0A84               	incf	4,f
  7271  1E95  0810               	movf	_usart_buffer^(0+256),w	;volatile
  7272  1E96  0080               	movwf	0
  7273                           
  7274                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  7275  1E97  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  7276  1E98  1303               	bcf	3,6	;RP1=0, select bank0
  7277  1E99  00A0               	movwf	??_USART_to_Protocol
  7278  1E9A  0824               	movf	USART_to_Protocol@usart_protocol,w
  7279  1E9B  3E02               	addlw	2
  7280  1E9C  0084               	movwf	4
  7281  1E9D  0820               	movf	??_USART_to_Protocol,w
  7282  1E9E  0080               	movwf	0
  7283                           
  7284                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  7285  1E9F  1703               	bsf	3,6	;RP1=1, select bank2
  7286  1EA0  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  7287  1EA1  1303               	bcf	3,6	;RP1=0, select bank0
  7288  1EA2  00A0               	movwf	??_USART_to_Protocol
  7289  1EA3  0824               	movf	USART_to_Protocol@usart_protocol,w
  7290  1EA4  3E03               	addlw	3
  7291  1EA5  0084               	movwf	4
  7292  1EA6  0820               	movf	??_USART_to_Protocol,w
  7293  1EA7  0080               	movwf	0
  7294                           
  7295                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  7296  1EA8  1703               	bsf	3,6	;RP1=1, select bank2
  7297  1EA9  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  7298  1EAA  1303               	bcf	3,6	;RP1=0, select bank0
  7299  1EAB  00A0               	movwf	??_USART_to_Protocol
  7300  1EAC  0824               	movf	USART_to_Protocol@usart_protocol,w
  7301  1EAD  3E04               	addlw	4
  7302  1EAE  0084               	movwf	4
  7303  1EAF  0820               	movf	??_USART_to_Protocol,w
  7304  1EB0  0080               	movwf	0
  7305                           
  7306                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  7307  1EB1  1703               	bsf	3,6	;RP1=1, select bank2
  7308  1EB2  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  7309  1EB3  1303               	bcf	3,6	;RP1=0, select bank0
  7310  1EB4  00A0               	movwf	??_USART_to_Protocol
  7311  1EB5  0824               	movf	USART_to_Protocol@usart_protocol,w
  7312  1EB6  3E05               	addlw	5
  7313  1EB7  0084               	movwf	4
  7314  1EB8  0820               	movf	??_USART_to_Protocol,w
  7315  1EB9  0080               	movwf	0
  7316                           
  7317                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  7318  1EBA  01A2               	clrf	USART_to_Protocol@i
  7319  1EBB  01A3               	clrf	USART_to_Protocol@i+1
  7320  1EBC                     l6776:	
  7321  1EBC  0824               	movf	USART_to_Protocol@usart_protocol,w
  7322  1EBD  3E05               	addlw	5
  7323  1EBE  0084               	movwf	4
  7324  1EBF  0823               	movf	USART_to_Protocol@i+1,w
  7325  1EC0  3A80               	xorlw	128
  7326  1EC1  00A0               	movwf	??_USART_to_Protocol
  7327  1EC2  3080               	movlw	128
  7328  1EC3  0220               	subwf	??_USART_to_Protocol,w
  7329  1EC4  1D03               	skipz
  7330  1EC5  2EC8               	goto	u7095
  7331  1EC6  0800               	movf	0,w
  7332  1EC7  0222               	subwf	USART_to_Protocol@i,w
  7333  1EC8                     u7095:	
  7334  1EC8  1803               	btfsc	3,0
  7335  1EC9  0008               	return
  7336                           
  7337                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  7338  1ECA  1283               	bcf	3,5	;RP0=0, select bank0
  7339  1ECB  1303               	bcf	3,6	;RP1=0, select bank0
  7340  1ECC  0822               	movf	USART_to_Protocol@i,w
  7341  1ECD  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  7342  1ECE  0084               	movwf	4
  7343  1ECF  1783               	bsf	3,7	;select IRP bank2
  7344  1ED0  0800               	movf	0,w
  7345  1ED1  00A0               	movwf	??_USART_to_Protocol
  7346  1ED2  0822               	movf	USART_to_Protocol@i,w
  7347  1ED3  0724               	addwf	USART_to_Protocol@usart_protocol,w
  7348  1ED4  00A1               	movwf	??_USART_to_Protocol+1
  7349  1ED5  0821               	movf	??_USART_to_Protocol+1,w
  7350  1ED6  3E06               	addlw	6
  7351  1ED7  0084               	movwf	4
  7352  1ED8  0820               	movf	??_USART_to_Protocol,w
  7353  1ED9  0080               	movwf	0
  7354  1EDA  3001               	movlw	1
  7355  1EDB  07A2               	addwf	USART_to_Protocol@i,f
  7356  1EDC  1803               	skipnc
  7357  1EDD  0AA3               	incf	USART_to_Protocol@i+1,f
  7358  1EDE  3000               	movlw	0
  7359  1EDF  07A3               	addwf	USART_to_Protocol@i+1,f
  7360  1EE0  2EBC               	goto	l6776
  7361  1EE1                     __end_of_USART_to_Protocol:	
  7362                           
  7363                           	psect	text18
  7364  1BC1                     __ptext18:	
  7365 ;; *************** function _Send_To_MB *****************
  7366 ;; Defined at:
  7367 ;;		line 597 in file "SlaveLiofilizadorVer1.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  size            1    wreg     unsigned char 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;  size            1    1[BANK0 ] unsigned char 
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  1    wreg      void 
  7374 ;; Registers used:
  7375 ;;		wreg, status,2, status,0, pclath, cstack
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 300/100
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7381 ;;      Params:         0       0       0       0       0
  7382 ;;      Locals:         0       1       0       0       0
  7383 ;;      Temps:          0       0       0       0       0
  7384 ;;      Totals:         0       1       0       0       0
  7385 ;;Total ram usage:        1 bytes
  7386 ;; Hardware stack levels used:    1
  7387 ;; Hardware stack levels required when called:    2
  7388 ;; This function calls:
  7389 ;;		_USART_putc
  7390 ;; This function is called by:
  7391 ;;		_Decodify_Command
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           
  7396                           ;psect for function _Send_To_MB
  7397  1BC1                     _Send_To_MB:	
  7398                           
  7399                           ;incstack = 0
  7400                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  7401                           ;Send_To_MB@size stored from wreg
  7402  1BC1  1283               	bcf	3,5	;RP0=0, select bank0
  7403  1BC2  1303               	bcf	3,6	;RP1=0, select bank0
  7404  1BC3  00A1               	movwf	Send_To_MB@size
  7405                           
  7406                           ;SlaveLiofilizadorVer1.c: 599:      USART_putc(0xAA);
  7407  1BC4  30AA               	movlw	170
  7408  1BC5  160A  158A  21AD  160A  158A  	fcall	_USART_putc
  7409                           
  7410                           ;SlaveLiofilizadorVer1.c: 600:      USART_putc(0xBB);
  7411  1BCA  30BB               	movlw	187
  7412  1BCB  160A  158A  21AD  160A  158A  	fcall	_USART_putc
  7413                           
  7414                           ;SlaveLiofilizadorVer1.c: 601:      USART_putc(Board_Number);
  7415  1BD0  0838               	movf	_Board_Number^(0+128),w
  7416  1BD1  160A  158A  21AD  160A  158A  	fcall	_USART_putc
  7417                           
  7418                           ;SlaveLiofilizadorVer1.c: 602:      USART_putc(0x00);
  7419  1BD6  3000               	movlw	0
  7420  1BD7  160A  158A  21AD  160A  158A  	fcall	_USART_putc
  7421                           
  7422                           ;SlaveLiofilizadorVer1.c: 603:      USART_putc(usart_protocol.command);
  7423  1BDC  1703               	bsf	3,6	;RP1=1, select bank3
  7424  1BDD  0814               	movf	(_usart_protocol^(0+384)+4),w
  7425  1BDE  160A  158A  21AD  160A  158A  	fcall	_USART_putc
  7426                           
  7427                           ;SlaveLiofilizadorVer1.c: 604:      USART_putc(size);
  7428  1BE3  1283               	bcf	3,5	;RP0=0, select bank0
  7429  1BE4  0821               	movf	Send_To_MB@size,w
  7430  1BE5  160A  158A  21AD   	fcall	_USART_putc
  7431  1BE8  0008               	return
  7432  1BE9                     __end_of_Send_To_MB:	
  7433                           
  7434                           	psect	text19
  7435  1979                     __ptext19:	
  7436 ;; *************** function _Send_Reply_OK *****************
  7437 ;; Defined at:
  7438 ;;		line 608 in file "SlaveLiofilizadorVer1.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;		None
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;		None
  7443 ;; Return value:  Size  Location     Type
  7444 ;;                  1    wreg      void 
  7445 ;; Registers used:
  7446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7447 ;; Tracked objects:
  7448 ;;		On entry : 300/100
  7449 ;;		On exit  : 300/100
  7450 ;;		Unchanged: 0/0
  7451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7452 ;;      Params:         0       0       0       0       0
  7453 ;;      Locals:         0       0       0       0       0
  7454 ;;      Temps:          0       0       0       0       0
  7455 ;;      Totals:         0       0       0       0       0
  7456 ;;Total ram usage:        0 bytes
  7457 ;; Hardware stack levels used:    1
  7458 ;; Hardware stack levels required when called:    3
  7459 ;; This function calls:
  7460 ;;		_USART_put_string
  7461 ;; This function is called by:
  7462 ;;		_Decodify_Command
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           
  7467                           ;psect for function _Send_Reply_OK
  7468  1979                     _Send_Reply_OK:	
  7469                           
  7470                           ;SlaveLiofilizadorVer1.c: 609:      USART_put_string("OK");
  7471                           
  7472                           ;incstack = 0
  7473                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7474  1979  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7475  197A  1283               	bcf	3,5	;RP0=0, select bank0
  7476  197B  00A1               	movwf	USART_put_string@vetor
  7477  197C  3080               	movlw	128
  7478  197D  00A2               	movwf	USART_put_string@vetor+1
  7479  197E  160A  158A  244C   	fcall	_USART_put_string
  7480  1981  0008               	return
  7481  1982                     __end_of_Send_Reply_OK:	
  7482                           
  7483                           	psect	text20
  7484  1C4C                     __ptext20:	
  7485 ;; *************** function _USART_put_string *****************
  7486 ;; Defined at:
  7487 ;;		line 167 in file "usart.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  7490 ;;		 -> STR_2(3), buffer(33), 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  7493 ;;		 -> STR_2(3), buffer(33), 
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  1    wreg      void 
  7496 ;; Registers used:
  7497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7498 ;; Tracked objects:
  7499 ;;		On entry : 300/0
  7500 ;;		On exit  : 300/100
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7503 ;;      Params:         0       2       0       0       0
  7504 ;;      Locals:         0       2       0       0       0
  7505 ;;      Temps:          0       0       0       0       0
  7506 ;;      Totals:         0       4       0       0       0
  7507 ;;Total ram usage:        4 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; Hardware stack levels required when called:    2
  7510 ;; This function calls:
  7511 ;;		_USART_putc
  7512 ;; This function is called by:
  7513 ;;		_Decodify_Command
  7514 ;;		_Send_Reply_OK
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           
  7519                           ;psect for function _USART_put_string
  7520  1C4C                     _USART_put_string:	
  7521                           
  7522                           ;usart.c: 167: void USART_put_string(char *vetor);usart.c: 168: {;usart.c: 169:     char
      +                           *ptr;;usart.c: 170:     ptr=vetor;
  7523                           
  7524                           ;incstack = 0
  7525                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7526  1C4C  0821               	movf	USART_put_string@vetor,w
  7527  1C4D  00A3               	movwf	USART_put_string@ptr
  7528  1C4E  0822               	movf	USART_put_string@vetor+1,w
  7529  1C4F  00A4               	movwf	USART_put_string@ptr+1
  7530  1C50                     l5892:	
  7531                           ;usart.c: 171:     while(*ptr){
  7532                           
  7533                           
  7534                           ;usart.c: 171:     while(*ptr){
  7535  1C50  0824               	movf	USART_put_string@ptr+1,w
  7536  1C51  00FF               	movwf	127
  7537  1C52  0823               	movf	USART_put_string@ptr,w
  7538  1C53  0084               	movwf	4
  7539  1C54  160A  158A  2000  160A  158A  	fcall	stringtab
  7540  1C59  3A00               	xorlw	0
  7541  1C5A  1903               	btfsc	3,2
  7542  1C5B  2C72               	goto	l5894
  7543                           
  7544                           ;usart.c: 172:         USART_putc(*ptr);
  7545  1C5C  0824               	movf	USART_put_string@ptr+1,w
  7546  1C5D  00FF               	movwf	127
  7547  1C5E  0823               	movf	USART_put_string@ptr,w
  7548  1C5F  0084               	movwf	4
  7549  1C60  160A  158A  2000  160A  158A  	fcall	stringtab
  7550  1C65  160A  158A  21AD  160A  158A  	fcall	_USART_putc
  7551                           
  7552                           ;usart.c: 173:         ptr++;
  7553  1C6A  3001               	movlw	1
  7554  1C6B  1283               	bcf	3,5	;RP0=0, select bank0
  7555  1C6C  07A3               	addwf	USART_put_string@ptr,f
  7556  1C6D  1803               	skipnc
  7557  1C6E  0AA4               	incf	USART_put_string@ptr+1,f
  7558  1C6F  3000               	movlw	0
  7559  1C70  07A4               	addwf	USART_put_string@ptr+1,f
  7560  1C71  2C50               	goto	l5892
  7561  1C72                     l5894:	
  7562                           
  7563                           ;usart.c: 175:     USART_putc(*ptr);
  7564  1C72  0824               	movf	USART_put_string@ptr+1,w
  7565  1C73  00FF               	movwf	127
  7566  1C74  0823               	movf	USART_put_string@ptr,w
  7567  1C75  0084               	movwf	4
  7568  1C76  160A  158A  2000  160A  158A  	fcall	stringtab
  7569  1C7B  160A  158A  21AD   	fcall	_USART_putc
  7570  1C7E  0008               	return
  7571  1C7F                     __end_of_USART_put_string:	
  7572                           
  7573                           	psect	text21
  7574  102C                     __ptext21:	
  7575 ;; *************** function _Save_Log *****************
  7576 ;; Defined at:
  7577 ;;		line 968 in file "SlaveLiofilizadorVer1.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;  add_datalog     4   56[BANK0 ] unsigned long 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;		None
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  1    wreg      void 
  7584 ;; Registers used:
  7585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7586 ;; Tracked objects:
  7587 ;;		On entry : 300/0
  7588 ;;		On exit  : 300/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7591 ;;      Params:         0       4       0       0       0
  7592 ;;      Locals:         0       0       0       0       0
  7593 ;;      Temps:          0       0       0       0       0
  7594 ;;      Totals:         0       4       0       0       0
  7595 ;;Total ram usage:        4 bytes
  7596 ;; Hardware stack levels used:    1
  7597 ;; Hardware stack levels required when called:    5
  7598 ;; This function calls:
  7599 ;;		_EEPROM_24C1025_Write_Int
  7600 ;;		___flmul
  7601 ;;		___fltol
  7602 ;; This function is called by:
  7603 ;;		_Decodify_Command
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           
  7608                           ;psect for function _Save_Log
  7609  102C                     _Save_Log:	
  7610                           
  7611                           ;SlaveLiofilizadorVer1.c: 969:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (Tensao1
      +                          *10.0));
  7612                           
  7613                           ;incstack = 0
  7614                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7615  102C  085B               	movf	Save_Log@add_datalog+3,w
  7616  102D  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7617  102E  085A               	movf	Save_Log@add_datalog+2,w
  7618  102F  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7619  1030  0859               	movf	Save_Log@add_datalog+1,w
  7620  1031  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7621  1032  0858               	movf	Save_Log@add_datalog,w
  7622  1033  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7623  1034  1683               	bsf	3,5	;RP0=1, select bank1
  7624  1035  0823               	movf	(_Tensao1+3)^(0+128),w
  7625  1036  1283               	bcf	3,5	;RP0=0, select bank0
  7626  1037  00B0               	movwf	___flmul@a+3
  7627  1038  1683               	bsf	3,5	;RP0=1, select bank1
  7628  1039  0822               	movf	(_Tensao1+2)^(0+128),w
  7629  103A  1283               	bcf	3,5	;RP0=0, select bank0
  7630  103B  00AF               	movwf	___flmul@a+2
  7631  103C  1683               	bsf	3,5	;RP0=1, select bank1
  7632  103D  0821               	movf	(_Tensao1+1)^(0+128),w
  7633  103E  1283               	bcf	3,5	;RP0=0, select bank0
  7634  103F  00AE               	movwf	___flmul@a+1
  7635  1040  1683               	bsf	3,5	;RP0=1, select bank1
  7636  1041  0820               	movf	_Tensao1^(0+128),w
  7637  1042  1283               	bcf	3,5	;RP0=0, select bank0
  7638  1043  00AD               	movwf	___flmul@a
  7639  1044  3041               	movlw	65
  7640  1045  00AC               	movwf	___flmul@b+3
  7641  1046  3020               	movlw	32
  7642  1047  00AB               	movwf	___flmul@b+2
  7643  1048  3000               	movlw	0
  7644  1049  00AA               	movwf	___flmul@b+1
  7645  104A  3000               	movlw	0
  7646  104B  00A9               	movwf	___flmul@b
  7647  104C  120A  118A  23C9  160A  118A  	fcall	___flmul
  7648  1051  082C               	movf	?___flmul+3,w
  7649  1052  00C6               	movwf	___fltol@f1+3
  7650  1053  082B               	movf	?___flmul+2,w
  7651  1054  00C5               	movwf	___fltol@f1+2
  7652  1055  082A               	movf	?___flmul+1,w
  7653  1056  00C4               	movwf	___fltol@f1+1
  7654  1057  0829               	movf	?___flmul,w
  7655  1058  00C3               	movwf	___fltol@f1
  7656  1059  160A  158A  2795  160A  118A  	fcall	___fltol
  7657  105E  0844               	movf	?___fltol+1,w
  7658  105F  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7659  1060  0843               	movf	?___fltol,w
  7660  1061  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7661  1062  3000               	movlw	0
  7662  1063  160A  158A  22D1  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  7663                           
  7664                           ;SlaveLiofilizadorVer1.c: 970:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (Vaccum0
      +                          *10.0));
  7665  1068  085B               	movf	Save_Log@add_datalog+3,w
  7666  1069  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7667  106A  085A               	movf	Save_Log@add_datalog+2,w
  7668  106B  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7669  106C  0859               	movf	Save_Log@add_datalog+1,w
  7670  106D  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7671  106E  0858               	movf	Save_Log@add_datalog,w
  7672  106F  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7673  1070  1683               	bsf	3,5	;RP0=1, select bank1
  7674  1071  0827               	movf	(_Vaccum0+3)^(0+128),w
  7675  1072  1283               	bcf	3,5	;RP0=0, select bank0
  7676  1073  00B0               	movwf	___flmul@a+3
  7677  1074  1683               	bsf	3,5	;RP0=1, select bank1
  7678  1075  0826               	movf	(_Vaccum0+2)^(0+128),w
  7679  1076  1283               	bcf	3,5	;RP0=0, select bank0
  7680  1077  00AF               	movwf	___flmul@a+2
  7681  1078  1683               	bsf	3,5	;RP0=1, select bank1
  7682  1079  0825               	movf	(_Vaccum0+1)^(0+128),w
  7683  107A  1283               	bcf	3,5	;RP0=0, select bank0
  7684  107B  00AE               	movwf	___flmul@a+1
  7685  107C  1683               	bsf	3,5	;RP0=1, select bank1
  7686  107D  0824               	movf	_Vaccum0^(0+128),w
  7687  107E  1283               	bcf	3,5	;RP0=0, select bank0
  7688  107F  00AD               	movwf	___flmul@a
  7689  1080  3041               	movlw	65
  7690  1081  00AC               	movwf	___flmul@b+3
  7691  1082  3020               	movlw	32
  7692  1083  00AB               	movwf	___flmul@b+2
  7693  1084  3000               	movlw	0
  7694  1085  00AA               	movwf	___flmul@b+1
  7695  1086  3000               	movlw	0
  7696  1087  00A9               	movwf	___flmul@b
  7697  1088  120A  118A  23C9  160A  118A  	fcall	___flmul
  7698  108D  082C               	movf	?___flmul+3,w
  7699  108E  00C6               	movwf	___fltol@f1+3
  7700  108F  082B               	movf	?___flmul+2,w
  7701  1090  00C5               	movwf	___fltol@f1+2
  7702  1091  082A               	movf	?___flmul+1,w
  7703  1092  00C4               	movwf	___fltol@f1+1
  7704  1093  0829               	movf	?___flmul,w
  7705  1094  00C3               	movwf	___fltol@f1
  7706  1095  160A  158A  2795  160A  118A  	fcall	___fltol
  7707  109A  0844               	movf	?___fltol+1,w
  7708  109B  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7709  109C  0843               	movf	?___fltol,w
  7710  109D  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7711  109E  3001               	movlw	1
  7712  109F  160A  158A  22D1   	fcall	_EEPROM_24C1025_Write_Int
  7713  10A2  0008               	return
  7714  10A3                     __end_of_Save_Log:	
  7715                           
  7716                           	psect	text22
  7717  1F95                     __ptext22:	
  7718 ;; *************** function ___fltol *****************
  7719 ;; Defined at:
  7720 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;  f1              4   35[BANK0 ] void 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;  exp1            1   45[BANK0 ] unsigned char 
  7725 ;;  sign1           1   44[BANK0 ] unsigned char 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  4   35[BANK0 ] long 
  7728 ;; Registers used:
  7729 ;;		wreg, status,2, status,0
  7730 ;; Tracked objects:
  7731 ;;		On entry : 300/0
  7732 ;;		On exit  : 300/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7735 ;;      Params:         0       4       0       0       0
  7736 ;;      Locals:         0       2       0       0       0
  7737 ;;      Temps:          0       5       0       0       0
  7738 ;;      Totals:         0      11       0       0       0
  7739 ;;Total ram usage:       11 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    1
  7742 ;; This function calls:
  7743 ;;		Nothing
  7744 ;; This function is called by:
  7745 ;;		_Decodify_Command
  7746 ;;		_Save_Log
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           
  7751                           ;psect for function ___fltol
  7752  1F95                     ___fltol:	
  7753                           
  7754                           ;incstack = 0
  7755                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7756  1F95  1003               	clrc
  7757  1F96  0D45               	rlf	___fltol@f1+2,w
  7758  1F97  0D46               	rlf	___fltol@f1+3,w
  7759  1F98  00C7               	movwf	??___fltol
  7760  1F99  0847               	movf	??___fltol,w
  7761  1F9A  00CD               	movwf	___fltol@exp1
  7762  1F9B  084D               	movf	___fltol@exp1,w
  7763  1F9C  1D03               	btfss	3,2
  7764  1F9D  2FA7               	goto	l5994
  7765  1F9E                     l5990:	
  7766  1F9E  3000               	movlw	0
  7767  1F9F  00C6               	movwf	?___fltol+3
  7768  1FA0  3000               	movlw	0
  7769  1FA1  00C5               	movwf	?___fltol+2
  7770  1FA2  3000               	movlw	0
  7771  1FA3  00C4               	movwf	?___fltol+1
  7772  1FA4  3000               	movlw	0
  7773  1FA5  00C3               	movwf	?___fltol
  7774  1FA6  0008               	return
  7775  1FA7                     l5994:	
  7776  1FA7  0843               	movf	___fltol@f1,w
  7777  1FA8  00C7               	movwf	??___fltol
  7778  1FA9  0844               	movf	___fltol@f1+1,w
  7779  1FAA  00C8               	movwf	??___fltol+1
  7780  1FAB  0845               	movf	___fltol@f1+2,w
  7781  1FAC  00C9               	movwf	??___fltol+2
  7782  1FAD  0846               	movf	___fltol@f1+3,w
  7783  1FAE  00CA               	movwf	??___fltol+3
  7784  1FAF  301F               	movlw	31
  7785  1FB0                     u5755:	
  7786  1FB0  1003               	clrc
  7787  1FB1  0CCA               	rrf	??___fltol+3,f
  7788  1FB2  0CC9               	rrf	??___fltol+2,f
  7789  1FB3  0CC8               	rrf	??___fltol+1,f
  7790  1FB4  0CC7               	rrf	??___fltol,f
  7791  1FB5  3EFF               	addlw	-1
  7792  1FB6  1D03               	skipz
  7793  1FB7  2FB0               	goto	u5755
  7794  1FB8  0847               	movf	??___fltol,w
  7795  1FB9  00CB               	movwf	??___fltol+4
  7796  1FBA  084B               	movf	??___fltol+4,w
  7797  1FBB  00CC               	movwf	___fltol@sign1
  7798  1FBC  17C5               	bsf	___fltol@f1+2,7
  7799  1FBD  30FF               	movlw	255
  7800  1FBE  05C3               	andwf	___fltol@f1,f
  7801  1FBF  30FF               	movlw	255
  7802  1FC0  05C4               	andwf	___fltol@f1+1,f
  7803  1FC1  30FF               	movlw	255
  7804  1FC2  05C5               	andwf	___fltol@f1+2,f
  7805  1FC3  3000               	movlw	0
  7806  1FC4  05C6               	andwf	___fltol@f1+3,f
  7807  1FC5  3096               	movlw	150
  7808  1FC6  02CD               	subwf	___fltol@exp1,f
  7809  1FC7  1FCD               	btfss	___fltol@exp1,7
  7810  1FC8  2FDE               	goto	l6012
  7811  1FC9  084D               	movf	___fltol@exp1,w
  7812  1FCA  3A80               	xorlw	128
  7813  1FCB  3E97               	addlw	151
  7814  1FCC  1C03               	btfss	3,0
  7815  1FCD  2F9E               	goto	l5990
  7816  1FCE                     l6010:	
  7817  1FCE  3001               	movlw	1
  7818  1FCF                     u5785:	
  7819  1FCF  1003               	clrc
  7820  1FD0  0CC6               	rrf	___fltol@f1+3,f
  7821  1FD1  0CC5               	rrf	___fltol@f1+2,f
  7822  1FD2  0CC4               	rrf	___fltol@f1+1,f
  7823  1FD3  0CC3               	rrf	___fltol@f1,f
  7824  1FD4  3EFF               	addlw	-1
  7825  1FD5  1D03               	skipz
  7826  1FD6  2FCF               	goto	u5785
  7827  1FD7  3001               	movlw	1
  7828  1FD8  00C7               	movwf	??___fltol
  7829  1FD9  0847               	movf	??___fltol,w
  7830  1FDA  07CD               	addwf	___fltol@exp1,f
  7831  1FDB  1903               	btfsc	3,2
  7832  1FDC  2FF1               	goto	l6020
  7833  1FDD  2FCE               	goto	l6010
  7834  1FDE                     l6012:	
  7835  1FDE  3020               	movlw	32
  7836  1FDF  024D               	subwf	___fltol@exp1,w
  7837  1FE0  1803               	btfsc	3,0
  7838  1FE1  2F9E               	goto	l5990
  7839  1FE2                     l1189:	
  7840  1FE2  084D               	movf	___fltol@exp1,w
  7841  1FE3  1903               	btfsc	3,2
  7842  1FE4  2FF1               	goto	l6020
  7843  1FE5  3001               	movlw	1
  7844  1FE6  00C7               	movwf	??___fltol
  7845  1FE7                     u5815:	
  7846  1FE7  1003               	clrc
  7847  1FE8  0DC3               	rlf	___fltol@f1,f
  7848  1FE9  0DC4               	rlf	___fltol@f1+1,f
  7849  1FEA  0DC5               	rlf	___fltol@f1+2,f
  7850  1FEB  0DC6               	rlf	___fltol@f1+3,f
  7851  1FEC  0BC7               	decfsz	??___fltol,f
  7852  1FED  2FE7               	goto	u5815
  7853  1FEE  3001               	movlw	1
  7854  1FEF  02CD               	subwf	___fltol@exp1,f
  7855  1FF0  2FE2               	goto	l1189
  7856  1FF1                     l6020:	
  7857  1FF1  084C               	movf	___fltol@sign1,w
  7858  1FF2  1903               	btfsc	3,2
  7859  1FF3  0008               	return
  7860  1FF4  09C3               	comf	___fltol@f1,f
  7861  1FF5  09C4               	comf	___fltol@f1+1,f
  7862  1FF6  09C5               	comf	___fltol@f1+2,f
  7863  1FF7  09C6               	comf	___fltol@f1+3,f
  7864  1FF8  0AC3               	incf	___fltol@f1,f
  7865  1FF9  1903               	skipnz
  7866  1FFA  0AC4               	incf	___fltol@f1+1,f
  7867  1FFB  1903               	skipnz
  7868  1FFC  0AC5               	incf	___fltol@f1+2,f
  7869  1FFD  1903               	skipnz
  7870  1FFE  0AC6               	incf	___fltol@f1+3,f
  7871  1FFF  0008               	return
  7872  2000                     __end_of___fltol:	
  7873                           
  7874                           	psect	text23
  7875  03C9                     __ptext23:	
  7876 ;; *************** function ___flmul *****************
  7877 ;; Defined at:
  7878 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;  b               4    9[BANK0 ] long 
  7881 ;;  a               4   13[BANK0 ] long 
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;  prod            4   29[BANK0 ] struct .
  7884 ;;  grs             4   25[BANK0 ] unsigned long 
  7885 ;;  temp            2   33[BANK0 ] struct .
  7886 ;;  bexp            1   24[BANK0 ] unsigned char 
  7887 ;;  aexp            1   23[BANK0 ] unsigned char 
  7888 ;;  sign            1   22[BANK0 ] unsigned char 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  4    9[BANK0 ] unsigned char 
  7891 ;; Registers used:
  7892 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7893 ;; Tracked objects:
  7894 ;;		On entry : 300/0
  7895 ;;		On exit  : 300/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7898 ;;      Params:         0       8       0       0       0
  7899 ;;      Locals:         0      13       0       0       0
  7900 ;;      Temps:          0       5       0       0       0
  7901 ;;      Totals:         0      26       0       0       0
  7902 ;;Total ram usage:       26 bytes
  7903 ;; Hardware stack levels used:    1
  7904 ;; Hardware stack levels required when called:    2
  7905 ;; This function calls:
  7906 ;;		__Umul8_16
  7907 ;; This function is called by:
  7908 ;;		_Decodify_Command
  7909 ;;		_MediaPlacaVaccum
  7910 ;;		_Save_Log
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           
  7915                           ;psect for function ___flmul
  7916  03C9                     ___flmul:	
  7917                           
  7918                           ;incstack = 0
  7919                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7920  03C9  082C               	movf	___flmul@b+3,w
  7921  03CA  3980               	andlw	128
  7922  03CB  00B1               	movwf	??___flmul
  7923  03CC  0831               	movf	??___flmul,w
  7924  03CD  00B6               	movwf	___flmul@sign
  7925  03CE  082C               	movf	___flmul@b+3,w
  7926  03CF  00B1               	movwf	??___flmul
  7927  03D0  0731               	addwf	??___flmul,w
  7928  03D1  00B2               	movwf	??___flmul+1
  7929  03D2  0832               	movf	??___flmul+1,w
  7930  03D3  00B8               	movwf	___flmul@bexp
  7931  03D4  1BAB               	btfsc	___flmul@b+2,7
  7932  03D5  1438               	bsf	___flmul@bexp,0
  7933  03D6  0838               	movf	___flmul@bexp,w
  7934  03D7  1903               	btfsc	3,2
  7935  03D8  2BE6               	goto	l6260
  7936  03D9  0A38               	incf	___flmul@bexp,w
  7937  03DA  1D03               	btfss	3,2
  7938  03DB  2BE4               	goto	l6258
  7939  03DC  3000               	movlw	0
  7940  03DD  00AC               	movwf	___flmul@b+3
  7941  03DE  3000               	movlw	0
  7942  03DF  00AB               	movwf	___flmul@b+2
  7943  03E0  3000               	movlw	0
  7944  03E1  00AA               	movwf	___flmul@b+1
  7945  03E2  3000               	movlw	0
  7946  03E3  00A9               	movwf	___flmul@b
  7947  03E4                     l6258:	
  7948  03E4  17AB               	bsf	___flmul@b+2,7
  7949  03E5  2BEE               	goto	l6262
  7950  03E6                     l6260:	
  7951  03E6  3000               	movlw	0
  7952  03E7  00AC               	movwf	___flmul@b+3
  7953  03E8  3000               	movlw	0
  7954  03E9  00AB               	movwf	___flmul@b+2
  7955  03EA  3000               	movlw	0
  7956  03EB  00AA               	movwf	___flmul@b+1
  7957  03EC  3000               	movlw	0
  7958  03ED  00A9               	movwf	___flmul@b
  7959  03EE                     l6262:	
  7960  03EE  0830               	movf	___flmul@a+3,w
  7961  03EF  3980               	andlw	128
  7962  03F0  00B1               	movwf	??___flmul
  7963  03F1  0831               	movf	??___flmul,w
  7964  03F2  06B6               	xorwf	___flmul@sign,f
  7965  03F3  0830               	movf	___flmul@a+3,w
  7966  03F4  00B1               	movwf	??___flmul
  7967  03F5  0731               	addwf	??___flmul,w
  7968  03F6  00B2               	movwf	??___flmul+1
  7969  03F7  0832               	movf	??___flmul+1,w
  7970  03F8  00B7               	movwf	___flmul@aexp
  7971  03F9  1BAF               	btfsc	___flmul@a+2,7
  7972  03FA  1437               	bsf	___flmul@aexp,0
  7973  03FB  0837               	movf	___flmul@aexp,w
  7974  03FC  1903               	btfsc	3,2
  7975  03FD  2C0B               	goto	l6278
  7976  03FE  0A37               	incf	___flmul@aexp,w
  7977  03FF  1D03               	btfss	3,2
  7978  0400  2C09               	goto	l6276
  7979  0401  3000               	movlw	0
  7980  0402  00B0               	movwf	___flmul@a+3
  7981  0403  3000               	movlw	0
  7982  0404  00AF               	movwf	___flmul@a+2
  7983  0405  3000               	movlw	0
  7984  0406  00AE               	movwf	___flmul@a+1
  7985  0407  3000               	movlw	0
  7986  0408  00AD               	movwf	___flmul@a
  7987  0409                     l6276:	
  7988  0409  17AF               	bsf	___flmul@a+2,7
  7989  040A  2C13               	goto	l6280
  7990  040B                     l6278:	
  7991  040B  3000               	movlw	0
  7992  040C  00B0               	movwf	___flmul@a+3
  7993  040D  3000               	movlw	0
  7994  040E  00AF               	movwf	___flmul@a+2
  7995  040F  3000               	movlw	0
  7996  0410  00AE               	movwf	___flmul@a+1
  7997  0411  3000               	movlw	0
  7998  0412  00AD               	movwf	___flmul@a
  7999  0413                     l6280:	
  8000  0413  0837               	movf	___flmul@aexp,w
  8001  0414  1D03               	btfss	3,2
  8002  0415  0838               	movf	___flmul@bexp,w
  8003  0416  1D03               	btfss	3,2
  8004  0417  2C21               	goto	l6288
  8005  0418  3000               	movlw	0
  8006  0419  00AC               	movwf	?___flmul+3
  8007  041A  3000               	movlw	0
  8008  041B  00AB               	movwf	?___flmul+2
  8009  041C  3000               	movlw	0
  8010  041D  00AA               	movwf	?___flmul+1
  8011  041E  3000               	movlw	0
  8012  041F  00A9               	movwf	?___flmul
  8013  0420  0008               	return
  8014  0421                     l6288:	
  8015  0421  0829               	movf	___flmul@b,w
  8016  0422  00B1               	movwf	??___flmul
  8017  0423  0831               	movf	??___flmul,w
  8018  0424  00A0               	movwf	__Umul8_16@multiplicand
  8019  0425  082F               	movf	___flmul@a+2,w
  8020  0426  160A  158A  2376  120A  118A  	fcall	__Umul8_16
  8021  042B  0821               	movf	?__Umul8_16+1,w
  8022  042C  00C2               	movwf	___flmul@temp+1
  8023  042D  0820               	movf	?__Umul8_16,w
  8024  042E  00C1               	movwf	___flmul@temp
  8025  042F  0841               	movf	___flmul@temp,w
  8026  0430  00B1               	movwf	??___flmul
  8027  0431  01B2               	clrf	??___flmul+1
  8028  0432  01B3               	clrf	??___flmul+2
  8029  0433  01B4               	clrf	??___flmul+3
  8030  0434  0834               	movf	??___flmul+3,w
  8031  0435  00BC               	movwf	___flmul@grs+3
  8032  0436  0833               	movf	??___flmul+2,w
  8033  0437  00BB               	movwf	___flmul@grs+2
  8034  0438  0832               	movf	??___flmul+1,w
  8035  0439  00BA               	movwf	___flmul@grs+1
  8036  043A  0831               	movf	??___flmul,w
  8037  043B  00B9               	movwf	___flmul@grs
  8038  043C  0842               	movf	___flmul@temp+1,w
  8039  043D  00B1               	movwf	??___flmul
  8040  043E  01B2               	clrf	??___flmul+1
  8041  043F  01B3               	clrf	??___flmul+2
  8042  0440  01B4               	clrf	??___flmul+3
  8043  0441  0834               	movf	??___flmul+3,w
  8044  0442  00C0               	movwf	___flmul@prod+3
  8045  0443  0833               	movf	??___flmul+2,w
  8046  0444  00BF               	movwf	___flmul@prod+2
  8047  0445  0832               	movf	??___flmul+1,w
  8048  0446  00BE               	movwf	___flmul@prod+1
  8049  0447  0831               	movf	??___flmul,w
  8050  0448  00BD               	movwf	___flmul@prod
  8051  0449  082A               	movf	___flmul@b+1,w
  8052  044A  00B1               	movwf	??___flmul
  8053  044B  0831               	movf	??___flmul,w
  8054  044C  00A0               	movwf	__Umul8_16@multiplicand
  8055  044D  082E               	movf	___flmul@a+1,w
  8056  044E  160A  158A  2376  120A  118A  	fcall	__Umul8_16
  8057  0453  0821               	movf	?__Umul8_16+1,w
  8058  0454  00C2               	movwf	___flmul@temp+1
  8059  0455  0820               	movf	?__Umul8_16,w
  8060  0456  00C1               	movwf	___flmul@temp
  8061  0457  0841               	movf	___flmul@temp,w
  8062  0458  00B1               	movwf	??___flmul
  8063  0459  01B2               	clrf	??___flmul+1
  8064  045A  01B3               	clrf	??___flmul+2
  8065  045B  01B4               	clrf	??___flmul+3
  8066  045C  0831               	movf	??___flmul,w
  8067  045D  07B9               	addwf	___flmul@grs,f
  8068  045E  0832               	movf	??___flmul+1,w
  8069  045F  1103               	clrz
  8070  0460  1803               	skipnc
  8071  0461  3E01               	addlw	1
  8072  0462  1D03               	btfss	3,2
  8073  0463  07BA               	addwf	___flmul@grs+1,f
  8074  0464  0833               	movf	??___flmul+2,w
  8075  0465  1103               	clrz
  8076  0466  1803               	skipnc
  8077  0467  3E01               	addlw	1
  8078  0468  1D03               	btfss	3,2
  8079  0469  07BB               	addwf	___flmul@grs+2,f
  8080  046A  0834               	movf	??___flmul+3,w
  8081  046B  1103               	clrz
  8082  046C  1803               	skipnc
  8083  046D  3E01               	addlw	1
  8084  046E  1D03               	btfss	3,2
  8085  046F  07BC               	addwf	___flmul@grs+3,f
  8086  0470  0842               	movf	___flmul@temp+1,w
  8087  0471  00B1               	movwf	??___flmul
  8088  0472  01B2               	clrf	??___flmul+1
  8089  0473  01B3               	clrf	??___flmul+2
  8090  0474  01B4               	clrf	??___flmul+3
  8091  0475  0831               	movf	??___flmul,w
  8092  0476  07BD               	addwf	___flmul@prod,f
  8093  0477  0832               	movf	??___flmul+1,w
  8094  0478  1103               	clrz
  8095  0479  1803               	skipnc
  8096  047A  3E01               	addlw	1
  8097  047B  1D03               	btfss	3,2
  8098  047C  07BE               	addwf	___flmul@prod+1,f
  8099  047D  0833               	movf	??___flmul+2,w
  8100  047E  1103               	clrz
  8101  047F  1803               	skipnc
  8102  0480  3E01               	addlw	1
  8103  0481  1D03               	btfss	3,2
  8104  0482  07BF               	addwf	___flmul@prod+2,f
  8105  0483  0834               	movf	??___flmul+3,w
  8106  0484  1103               	clrz
  8107  0485  1803               	skipnc
  8108  0486  3E01               	addlw	1
  8109  0487  1D03               	btfss	3,2
  8110  0488  07C0               	addwf	___flmul@prod+3,f
  8111  0489  082B               	movf	___flmul@b+2,w
  8112  048A  00B1               	movwf	??___flmul
  8113  048B  0831               	movf	??___flmul,w
  8114  048C  00A0               	movwf	__Umul8_16@multiplicand
  8115  048D  082D               	movf	___flmul@a,w
  8116  048E  160A  158A  2376  120A  118A  	fcall	__Umul8_16
  8117  0493  0821               	movf	?__Umul8_16+1,w
  8118  0494  00C2               	movwf	___flmul@temp+1
  8119  0495  0820               	movf	?__Umul8_16,w
  8120  0496  00C1               	movwf	___flmul@temp
  8121  0497  0841               	movf	___flmul@temp,w
  8122  0498  00B1               	movwf	??___flmul
  8123  0499  01B2               	clrf	??___flmul+1
  8124  049A  01B3               	clrf	??___flmul+2
  8125  049B  01B4               	clrf	??___flmul+3
  8126  049C  0831               	movf	??___flmul,w
  8127  049D  07B9               	addwf	___flmul@grs,f
  8128  049E  0832               	movf	??___flmul+1,w
  8129  049F  1103               	clrz
  8130  04A0  1803               	skipnc
  8131  04A1  3E01               	addlw	1
  8132  04A2  1D03               	btfss	3,2
  8133  04A3  07BA               	addwf	___flmul@grs+1,f
  8134  04A4  0833               	movf	??___flmul+2,w
  8135  04A5  1103               	clrz
  8136  04A6  1803               	skipnc
  8137  04A7  3E01               	addlw	1
  8138  04A8  1D03               	btfss	3,2
  8139  04A9  07BB               	addwf	___flmul@grs+2,f
  8140  04AA  0834               	movf	??___flmul+3,w
  8141  04AB  1103               	clrz
  8142  04AC  1803               	skipnc
  8143  04AD  3E01               	addlw	1
  8144  04AE  1D03               	btfss	3,2
  8145  04AF  07BC               	addwf	___flmul@grs+3,f
  8146  04B0  0842               	movf	___flmul@temp+1,w
  8147  04B1  00B1               	movwf	??___flmul
  8148  04B2  01B2               	clrf	??___flmul+1
  8149  04B3  01B3               	clrf	??___flmul+2
  8150  04B4  01B4               	clrf	??___flmul+3
  8151  04B5  0831               	movf	??___flmul,w
  8152  04B6  07BD               	addwf	___flmul@prod,f
  8153  04B7  0832               	movf	??___flmul+1,w
  8154  04B8  1103               	clrz
  8155  04B9  1803               	skipnc
  8156  04BA  3E01               	addlw	1
  8157  04BB  1D03               	btfss	3,2
  8158  04BC  07BE               	addwf	___flmul@prod+1,f
  8159  04BD  0833               	movf	??___flmul+2,w
  8160  04BE  1103               	clrz
  8161  04BF  1803               	skipnc
  8162  04C0  3E01               	addlw	1
  8163  04C1  1D03               	btfss	3,2
  8164  04C2  07BF               	addwf	___flmul@prod+2,f
  8165  04C3  0834               	movf	??___flmul+3,w
  8166  04C4  1103               	clrz
  8167  04C5  1803               	skipnc
  8168  04C6  3E01               	addlw	1
  8169  04C7  1D03               	btfss	3,2
  8170  04C8  07C0               	addwf	___flmul@prod+3,f
  8171  04C9  3008               	movlw	8
  8172  04CA  00B1               	movwf	??___flmul
  8173  04CB                     u6495:	
  8174  04CB  1003               	clrc
  8175  04CC  0DB9               	rlf	___flmul@grs,f
  8176  04CD  0DBA               	rlf	___flmul@grs+1,f
  8177  04CE  0DBB               	rlf	___flmul@grs+2,f
  8178  04CF  0DBC               	rlf	___flmul@grs+3,f
  8179  04D0  0BB1               	decfsz	??___flmul,f
  8180  04D1  2CCB               	goto	u6495
  8181  04D2  082A               	movf	___flmul@b+1,w
  8182  04D3  00B1               	movwf	??___flmul
  8183  04D4  0831               	movf	??___flmul,w
  8184  04D5  00A0               	movwf	__Umul8_16@multiplicand
  8185  04D6  082D               	movf	___flmul@a,w
  8186  04D7  160A  158A  2376  120A  118A  	fcall	__Umul8_16
  8187  04DC  0821               	movf	?__Umul8_16+1,w
  8188  04DD  00C2               	movwf	___flmul@temp+1
  8189  04DE  0820               	movf	?__Umul8_16,w
  8190  04DF  00C1               	movwf	___flmul@temp
  8191  04E0  0841               	movf	___flmul@temp,w
  8192  04E1  00B1               	movwf	??___flmul
  8193  04E2  0842               	movf	___flmul@temp+1,w
  8194  04E3  00B2               	movwf	??___flmul+1
  8195  04E4  01B3               	clrf	??___flmul+2
  8196  04E5  01B4               	clrf	??___flmul+3
  8197  04E6  0831               	movf	??___flmul,w
  8198  04E7  07B9               	addwf	___flmul@grs,f
  8199  04E8  0832               	movf	??___flmul+1,w
  8200  04E9  1103               	clrz
  8201  04EA  1803               	skipnc
  8202  04EB  3E01               	addlw	1
  8203  04EC  1D03               	btfss	3,2
  8204  04ED  07BA               	addwf	___flmul@grs+1,f
  8205  04EE  0833               	movf	??___flmul+2,w
  8206  04EF  1103               	clrz
  8207  04F0  1803               	skipnc
  8208  04F1  3E01               	addlw	1
  8209  04F2  1D03               	btfss	3,2
  8210  04F3  07BB               	addwf	___flmul@grs+2,f
  8211  04F4  0834               	movf	??___flmul+3,w
  8212  04F5  1103               	clrz
  8213  04F6  1803               	skipnc
  8214  04F7  3E01               	addlw	1
  8215  04F8  1D03               	btfss	3,2
  8216  04F9  07BC               	addwf	___flmul@grs+3,f
  8217  04FA  0829               	movf	___flmul@b,w
  8218  04FB  00B1               	movwf	??___flmul
  8219  04FC  0831               	movf	??___flmul,w
  8220  04FD  00A0               	movwf	__Umul8_16@multiplicand
  8221  04FE  082E               	movf	___flmul@a+1,w
  8222  04FF  160A  158A  2376  120A  118A  	fcall	__Umul8_16
  8223  0504  0821               	movf	?__Umul8_16+1,w
  8224  0505  00C2               	movwf	___flmul@temp+1
  8225  0506  0820               	movf	?__Umul8_16,w
  8226  0507  00C1               	movwf	___flmul@temp
  8227  0508  0841               	movf	___flmul@temp,w
  8228  0509  00B1               	movwf	??___flmul
  8229  050A  0842               	movf	___flmul@temp+1,w
  8230  050B  00B2               	movwf	??___flmul+1
  8231  050C  01B3               	clrf	??___flmul+2
  8232  050D  01B4               	clrf	??___flmul+3
  8233  050E  0831               	movf	??___flmul,w
  8234  050F  07B9               	addwf	___flmul@grs,f
  8235  0510  0832               	movf	??___flmul+1,w
  8236  0511  1103               	clrz
  8237  0512  1803               	skipnc
  8238  0513  3E01               	addlw	1
  8239  0514  1D03               	btfss	3,2
  8240  0515  07BA               	addwf	___flmul@grs+1,f
  8241  0516  0833               	movf	??___flmul+2,w
  8242  0517  1103               	clrz
  8243  0518  1803               	skipnc
  8244  0519  3E01               	addlw	1
  8245  051A  1D03               	btfss	3,2
  8246  051B  07BB               	addwf	___flmul@grs+2,f
  8247  051C  0834               	movf	??___flmul+3,w
  8248  051D  1103               	clrz
  8249  051E  1803               	skipnc
  8250  051F  3E01               	addlw	1
  8251  0520  1D03               	btfss	3,2
  8252  0521  07BC               	addwf	___flmul@grs+3,f
  8253  0522  3008               	movlw	8
  8254  0523  00B1               	movwf	??___flmul
  8255  0524                     u6525:	
  8256  0524  1003               	clrc
  8257  0525  0DB9               	rlf	___flmul@grs,f
  8258  0526  0DBA               	rlf	___flmul@grs+1,f
  8259  0527  0DBB               	rlf	___flmul@grs+2,f
  8260  0528  0DBC               	rlf	___flmul@grs+3,f
  8261  0529  0BB1               	decfsz	??___flmul,f
  8262  052A  2D24               	goto	u6525
  8263  052B  0829               	movf	___flmul@b,w
  8264  052C  00B1               	movwf	??___flmul
  8265  052D  0831               	movf	??___flmul,w
  8266  052E  00A0               	movwf	__Umul8_16@multiplicand
  8267  052F  082D               	movf	___flmul@a,w
  8268  0530  160A  158A  2376  120A  118A  	fcall	__Umul8_16
  8269  0535  0821               	movf	?__Umul8_16+1,w
  8270  0536  00C2               	movwf	___flmul@temp+1
  8271  0537  0820               	movf	?__Umul8_16,w
  8272  0538  00C1               	movwf	___flmul@temp
  8273  0539  0841               	movf	___flmul@temp,w
  8274  053A  00B1               	movwf	??___flmul
  8275  053B  0842               	movf	___flmul@temp+1,w
  8276  053C  00B2               	movwf	??___flmul+1
  8277  053D  01B3               	clrf	??___flmul+2
  8278  053E  01B4               	clrf	??___flmul+3
  8279  053F  0831               	movf	??___flmul,w
  8280  0540  07B9               	addwf	___flmul@grs,f
  8281  0541  0832               	movf	??___flmul+1,w
  8282  0542  1103               	clrz
  8283  0543  1803               	skipnc
  8284  0544  3E01               	addlw	1
  8285  0545  1D03               	btfss	3,2
  8286  0546  07BA               	addwf	___flmul@grs+1,f
  8287  0547  0833               	movf	??___flmul+2,w
  8288  0548  1103               	clrz
  8289  0549  1803               	skipnc
  8290  054A  3E01               	addlw	1
  8291  054B  1D03               	btfss	3,2
  8292  054C  07BB               	addwf	___flmul@grs+2,f
  8293  054D  0834               	movf	??___flmul+3,w
  8294  054E  1103               	clrz
  8295  054F  1803               	skipnc
  8296  0550  3E01               	addlw	1
  8297  0551  1D03               	btfss	3,2
  8298  0552  07BC               	addwf	___flmul@grs+3,f
  8299  0553  082A               	movf	___flmul@b+1,w
  8300  0554  00B1               	movwf	??___flmul
  8301  0555  0831               	movf	??___flmul,w
  8302  0556  00A0               	movwf	__Umul8_16@multiplicand
  8303  0557  082F               	movf	___flmul@a+2,w
  8304  0558  160A  158A  2376  120A  118A  	fcall	__Umul8_16
  8305  055D  0821               	movf	?__Umul8_16+1,w
  8306  055E  00C2               	movwf	___flmul@temp+1
  8307  055F  0820               	movf	?__Umul8_16,w
  8308  0560  00C1               	movwf	___flmul@temp
  8309  0561  0841               	movf	___flmul@temp,w
  8310  0562  00B1               	movwf	??___flmul
  8311  0563  0842               	movf	___flmul@temp+1,w
  8312  0564  00B2               	movwf	??___flmul+1
  8313  0565  01B3               	clrf	??___flmul+2
  8314  0566  01B4               	clrf	??___flmul+3
  8315  0567  0831               	movf	??___flmul,w
  8316  0568  07BD               	addwf	___flmul@prod,f
  8317  0569  0832               	movf	??___flmul+1,w
  8318  056A  1103               	clrz
  8319  056B  1803               	skipnc
  8320  056C  3E01               	addlw	1
  8321  056D  1D03               	btfss	3,2
  8322  056E  07BE               	addwf	___flmul@prod+1,f
  8323  056F  0833               	movf	??___flmul+2,w
  8324  0570  1103               	clrz
  8325  0571  1803               	skipnc
  8326  0572  3E01               	addlw	1
  8327  0573  1D03               	btfss	3,2
  8328  0574  07BF               	addwf	___flmul@prod+2,f
  8329  0575  0834               	movf	??___flmul+3,w
  8330  0576  1103               	clrz
  8331  0577  1803               	skipnc
  8332  0578  3E01               	addlw	1
  8333  0579  1D03               	btfss	3,2
  8334  057A  07C0               	addwf	___flmul@prod+3,f
  8335  057B  082B               	movf	___flmul@b+2,w
  8336  057C  00B1               	movwf	??___flmul
  8337  057D  0831               	movf	??___flmul,w
  8338  057E  00A0               	movwf	__Umul8_16@multiplicand
  8339  057F  082E               	movf	___flmul@a+1,w
  8340  0580  160A  158A  2376  120A  118A  	fcall	__Umul8_16
  8341  0585  0821               	movf	?__Umul8_16+1,w
  8342  0586  00C2               	movwf	___flmul@temp+1
  8343  0587  0820               	movf	?__Umul8_16,w
  8344  0588  00C1               	movwf	___flmul@temp
  8345  0589  0841               	movf	___flmul@temp,w
  8346  058A  00B1               	movwf	??___flmul
  8347  058B  0842               	movf	___flmul@temp+1,w
  8348  058C  00B2               	movwf	??___flmul+1
  8349  058D  01B3               	clrf	??___flmul+2
  8350  058E  01B4               	clrf	??___flmul+3
  8351  058F  0831               	movf	??___flmul,w
  8352  0590  07BD               	addwf	___flmul@prod,f
  8353  0591  0832               	movf	??___flmul+1,w
  8354  0592  1103               	clrz
  8355  0593  1803               	skipnc
  8356  0594  3E01               	addlw	1
  8357  0595  1D03               	btfss	3,2
  8358  0596  07BE               	addwf	___flmul@prod+1,f
  8359  0597  0833               	movf	??___flmul+2,w
  8360  0598  1103               	clrz
  8361  0599  1803               	skipnc
  8362  059A  3E01               	addlw	1
  8363  059B  1D03               	btfss	3,2
  8364  059C  07BF               	addwf	___flmul@prod+2,f
  8365  059D  0834               	movf	??___flmul+3,w
  8366  059E  1103               	clrz
  8367  059F  1803               	skipnc
  8368  05A0  3E01               	addlw	1
  8369  05A1  1D03               	btfss	3,2
  8370  05A2  07C0               	addwf	___flmul@prod+3,f
  8371  05A3  082B               	movf	___flmul@b+2,w
  8372  05A4  00B1               	movwf	??___flmul
  8373  05A5  0831               	movf	??___flmul,w
  8374  05A6  00A0               	movwf	__Umul8_16@multiplicand
  8375  05A7  082F               	movf	___flmul@a+2,w
  8376  05A8  160A  158A  2376  120A  118A  	fcall	__Umul8_16
  8377  05AD  0821               	movf	?__Umul8_16+1,w
  8378  05AE  00C2               	movwf	___flmul@temp+1
  8379  05AF  0820               	movf	?__Umul8_16,w
  8380  05B0  00C1               	movwf	___flmul@temp
  8381  05B1  0841               	movf	___flmul@temp,w
  8382  05B2  00B1               	movwf	??___flmul
  8383  05B3  0842               	movf	___flmul@temp+1,w
  8384  05B4  00B2               	movwf	??___flmul+1
  8385  05B5  01B3               	clrf	??___flmul+2
  8386  05B6  01B4               	clrf	??___flmul+3
  8387  05B7  3008               	movlw	8
  8388  05B8                     u6565:	
  8389  05B8  1003               	clrc
  8390  05B9  0DB1               	rlf	??___flmul,f
  8391  05BA  0DB2               	rlf	??___flmul+1,f
  8392  05BB  0DB3               	rlf	??___flmul+2,f
  8393  05BC  0DB4               	rlf	??___flmul+3,f
  8394  05BD  3EFF               	addlw	-1
  8395  05BE  1D03               	skipz
  8396  05BF  2DB8               	goto	u6565
  8397  05C0  0831               	movf	??___flmul,w
  8398  05C1  07BD               	addwf	___flmul@prod,f
  8399  05C2  0832               	movf	??___flmul+1,w
  8400  05C3  1103               	clrz
  8401  05C4  1803               	skipnc
  8402  05C5  3E01               	addlw	1
  8403  05C6  1D03               	btfss	3,2
  8404  05C7  07BE               	addwf	___flmul@prod+1,f
  8405  05C8  0833               	movf	??___flmul+2,w
  8406  05C9  1103               	clrz
  8407  05CA  1803               	skipnc
  8408  05CB  3E01               	addlw	1
  8409  05CC  1D03               	btfss	3,2
  8410  05CD  07BF               	addwf	___flmul@prod+2,f
  8411  05CE  0834               	movf	??___flmul+3,w
  8412  05CF  1103               	clrz
  8413  05D0  1803               	skipnc
  8414  05D1  3E01               	addlw	1
  8415  05D2  1D03               	btfss	3,2
  8416  05D3  07C0               	addwf	___flmul@prod+3,f
  8417  05D4  083C               	movf	___flmul@grs+3,w
  8418  05D5  00B1               	movwf	??___flmul
  8419  05D6  01B2               	clrf	??___flmul+1
  8420  05D7  01B3               	clrf	??___flmul+2
  8421  05D8  01B4               	clrf	??___flmul+3
  8422  05D9  0831               	movf	??___flmul,w
  8423  05DA  07BD               	addwf	___flmul@prod,f
  8424  05DB  0832               	movf	??___flmul+1,w
  8425  05DC  1103               	clrz
  8426  05DD  1803               	skipnc
  8427  05DE  3E01               	addlw	1
  8428  05DF  1D03               	btfss	3,2
  8429  05E0  07BE               	addwf	___flmul@prod+1,f
  8430  05E1  0833               	movf	??___flmul+2,w
  8431  05E2  1103               	clrz
  8432  05E3  1803               	skipnc
  8433  05E4  3E01               	addlw	1
  8434  05E5  1D03               	btfss	3,2
  8435  05E6  07BF               	addwf	___flmul@prod+2,f
  8436  05E7  0834               	movf	??___flmul+3,w
  8437  05E8  1103               	clrz
  8438  05E9  1803               	skipnc
  8439  05EA  3E01               	addlw	1
  8440  05EB  1D03               	btfss	3,2
  8441  05EC  07C0               	addwf	___flmul@prod+3,f
  8442  05ED  3008               	movlw	8
  8443  05EE  00B1               	movwf	??___flmul
  8444  05EF                     u6595:	
  8445  05EF  1003               	clrc
  8446  05F0  0DB9               	rlf	___flmul@grs,f
  8447  05F1  0DBA               	rlf	___flmul@grs+1,f
  8448  05F2  0DBB               	rlf	___flmul@grs+2,f
  8449  05F3  0DBC               	rlf	___flmul@grs+3,f
  8450  05F4  0BB1               	decfsz	??___flmul,f
  8451  05F5  2DEF               	goto	u6595
  8452  05F6  0838               	movf	___flmul@bexp,w
  8453  05F7  0737               	addwf	___flmul@aexp,w
  8454  05F8  00B1               	movwf	??___flmul
  8455  05F9  01B2               	clrf	??___flmul+1
  8456  05FA  0DB2               	rlf	??___flmul+1,f
  8457  05FB  0831               	movf	??___flmul,w
  8458  05FC  3E82               	addlw	130
  8459  05FD  00C1               	movwf	___flmul@temp
  8460  05FE  0832               	movf	??___flmul+1,w
  8461  05FF  1803               	skipnc
  8462  0600  3E01               	addlw	1
  8463  0601  3EFF               	addlw	255
  8464  0602  00C2               	movwf	___flmul@temp+1
  8465  0603                     l6340:	
  8466  0603  1BBF               	btfsc	___flmul@prod+2,7
  8467  0604  2E20               	goto	l6342
  8468  0605  3001               	movlw	1
  8469  0606  00B1               	movwf	??___flmul
  8470  0607                     u6605:	
  8471  0607  1003               	clrc
  8472  0608  0DBD               	rlf	___flmul@prod,f
  8473  0609  0DBE               	rlf	___flmul@prod+1,f
  8474  060A  0DBF               	rlf	___flmul@prod+2,f
  8475  060B  0DC0               	rlf	___flmul@prod+3,f
  8476  060C  0BB1               	decfsz	??___flmul,f
  8477  060D  2E07               	goto	u6605
  8478  060E  1BBC               	btfsc	___flmul@grs+3,7
  8479  060F  143D               	bsf	___flmul@prod,0
  8480  0610  3001               	movlw	1
  8481  0611  00B1               	movwf	??___flmul
  8482  0612                     u6625:	
  8483  0612  1003               	clrc
  8484  0613  0DB9               	rlf	___flmul@grs,f
  8485  0614  0DBA               	rlf	___flmul@grs+1,f
  8486  0615  0DBB               	rlf	___flmul@grs+2,f
  8487  0616  0DBC               	rlf	___flmul@grs+3,f
  8488  0617  0BB1               	decfsz	??___flmul,f
  8489  0618  2E12               	goto	u6625
  8490  0619  30FF               	movlw	255
  8491  061A  07C1               	addwf	___flmul@temp,f
  8492  061B  1803               	skipnc
  8493  061C  0AC2               	incf	___flmul@temp+1,f
  8494  061D  30FF               	movlw	255
  8495  061E  07C2               	addwf	___flmul@temp+1,f
  8496  061F  2E03               	goto	l6340
  8497  0620                     l6342:	
  8498  0620  01B7               	clrf	___flmul@aexp
  8499  0621  1FBC               	btfss	___flmul@grs+3,7
  8500  0622  2E39               	goto	l6352
  8501  0623  30FF               	movlw	255
  8502  0624  0539               	andwf	___flmul@grs,w
  8503  0625  00B1               	movwf	??___flmul
  8504  0626  30FF               	movlw	255
  8505  0627  053A               	andwf	___flmul@grs+1,w
  8506  0628  00B2               	movwf	??___flmul+1
  8507  0629  30FF               	movlw	255
  8508  062A  053B               	andwf	___flmul@grs+2,w
  8509  062B  00B3               	movwf	??___flmul+2
  8510  062C  307F               	movlw	127
  8511  062D  053C               	andwf	___flmul@grs+3,w
  8512  062E  00B4               	movwf	??___flmul+3
  8513  062F  0834               	movf	??___flmul+3,w
  8514  0630  0433               	iorwf	??___flmul+2,w
  8515  0631  0432               	iorwf	??___flmul+1,w
  8516  0632  0431               	iorwf	??___flmul,w
  8517  0633  1903               	skipnz
  8518  0634  183D               	btfsc	___flmul@prod,0
  8519  0635  2E37               	goto	l6348
  8520  0636  2E39               	goto	l6352
  8521  0637                     l6348:	
  8522  0637  01B7               	clrf	___flmul@aexp
  8523  0638  0AB7               	incf	___flmul@aexp,f
  8524  0639                     l6352:	
  8525  0639  0837               	movf	___flmul@aexp,w
  8526  063A  1903               	btfsc	3,2
  8527  063B  2E6B               	goto	l6362
  8528  063C  3001               	movlw	1
  8529  063D  07BD               	addwf	___flmul@prod,f
  8530  063E  3000               	movlw	0
  8531  063F  1803               	skipnc
  8532  0640  3001               	movlw	1
  8533  0641  07BE               	addwf	___flmul@prod+1,f
  8534  0642  3000               	movlw	0
  8535  0643  1803               	skipnc
  8536  0644  3001               	movlw	1
  8537  0645  07BF               	addwf	___flmul@prod+2,f
  8538  0646  3000               	movlw	0
  8539  0647  1803               	skipnc
  8540  0648  3001               	movlw	1
  8541  0649  07C0               	addwf	___flmul@prod+3,f
  8542  064A  1C40               	btfss	___flmul@prod+3,0
  8543  064B  2E6B               	goto	l6362
  8544  064C  083D               	movf	___flmul@prod,w
  8545  064D  00B1               	movwf	??___flmul
  8546  064E  083E               	movf	___flmul@prod+1,w
  8547  064F  00B2               	movwf	??___flmul+1
  8548  0650  083F               	movf	___flmul@prod+2,w
  8549  0651  00B3               	movwf	??___flmul+2
  8550  0652  0840               	movf	___flmul@prod+3,w
  8551  0653  00B4               	movwf	??___flmul+3
  8552  0654  3001               	movlw	1
  8553  0655  00B5               	movwf	??___flmul+4
  8554  0656                     u6695:	
  8555  0656  0D34               	rlf	??___flmul+3,w
  8556  0657  0CB4               	rrf	??___flmul+3,f
  8557  0658  0CB3               	rrf	??___flmul+2,f
  8558  0659  0CB2               	rrf	??___flmul+1,f
  8559  065A  0CB1               	rrf	??___flmul,f
  8560  065B  0BB5               	decfsz	??___flmul+4,f
  8561  065C  2E56               	goto	u6695
  8562  065D  0834               	movf	??___flmul+3,w
  8563  065E  00C0               	movwf	___flmul@prod+3
  8564  065F  0833               	movf	??___flmul+2,w
  8565  0660  00BF               	movwf	___flmul@prod+2
  8566  0661  0832               	movf	??___flmul+1,w
  8567  0662  00BE               	movwf	___flmul@prod+1
  8568  0663  0831               	movf	??___flmul,w
  8569  0664  00BD               	movwf	___flmul@prod
  8570  0665  3001               	movlw	1
  8571  0666  07C1               	addwf	___flmul@temp,f
  8572  0667  1803               	skipnc
  8573  0668  0AC2               	incf	___flmul@temp+1,f
  8574  0669  3000               	movlw	0
  8575  066A  07C2               	addwf	___flmul@temp+1,f
  8576  066B                     l6362:	
  8577  066B  0842               	movf	___flmul@temp+1,w
  8578  066C  3A80               	xorlw	128
  8579  066D  00FF               	movwf	127
  8580  066E  3080               	movlw	128
  8581  066F  027F               	subwf	127,w
  8582  0670  1D03               	skipz
  8583  0671  2E74               	goto	u6705
  8584  0672  30FF               	movlw	255
  8585  0673  0241               	subwf	___flmul@temp,w
  8586  0674                     u6705:	
  8587  0674  1C03               	skipc
  8588  0675  2E81               	goto	l6366
  8589  0676  307F               	movlw	127
  8590  0677  1283               	bcf	3,5	;RP0=0, select bank0
  8591  0678  1303               	bcf	3,6	;RP1=0, select bank0
  8592  0679  00C0               	movwf	___flmul@prod+3
  8593  067A  3080               	movlw	128
  8594  067B  00BF               	movwf	___flmul@prod+2
  8595  067C  3000               	movlw	0
  8596  067D  00BE               	movwf	___flmul@prod+1
  8597  067E  3000               	movlw	0
  8598  067F  00BD               	movwf	___flmul@prod
  8599  0680  2EB1               	goto	l1397
  8600  0681                     l6366:	
  8601  0681  1283               	bcf	3,5	;RP0=0, select bank0
  8602  0682  1303               	bcf	3,6	;RP1=0, select bank0
  8603  0683  0842               	movf	___flmul@temp+1,w
  8604  0684  3A80               	xorlw	128
  8605  0685  00FF               	movwf	127
  8606  0686  3080               	movlw	128
  8607  0687  027F               	subwf	127,w
  8608  0688  1D03               	skipz
  8609  0689  2E8C               	goto	u6715
  8610  068A  3001               	movlw	1
  8611  068B  0241               	subwf	___flmul@temp,w
  8612  068C                     u6715:	
  8613  068C  1803               	skipnc
  8614  068D  2E9A               	goto	l6372
  8615  068E  3000               	movlw	0
  8616  068F  1283               	bcf	3,5	;RP0=0, select bank0
  8617  0690  1303               	bcf	3,6	;RP1=0, select bank0
  8618  0691  00C0               	movwf	___flmul@prod+3
  8619  0692  3000               	movlw	0
  8620  0693  00BF               	movwf	___flmul@prod+2
  8621  0694  3000               	movlw	0
  8622  0695  00BE               	movwf	___flmul@prod+1
  8623  0696  3000               	movlw	0
  8624  0697  00BD               	movwf	___flmul@prod
  8625  0698  01B6               	clrf	___flmul@sign
  8626  0699  2EB1               	goto	l1397
  8627  069A                     l6372:	
  8628  069A  1283               	bcf	3,5	;RP0=0, select bank0
  8629  069B  1303               	bcf	3,6	;RP1=0, select bank0
  8630  069C  0841               	movf	___flmul@temp,w
  8631  069D  00B1               	movwf	??___flmul
  8632  069E  0831               	movf	??___flmul,w
  8633  069F  00B8               	movwf	___flmul@bexp
  8634  06A0  30FF               	movlw	255
  8635  06A1  05BD               	andwf	___flmul@prod,f
  8636  06A2  30FF               	movlw	255
  8637  06A3  05BE               	andwf	___flmul@prod+1,f
  8638  06A4  307F               	movlw	127
  8639  06A5  05BF               	andwf	___flmul@prod+2,f
  8640  06A6  3000               	movlw	0
  8641  06A7  05C0               	andwf	___flmul@prod+3,f
  8642  06A8  1838               	btfsc	___flmul@bexp,0
  8643  06A9  17BF               	bsf	___flmul@prod+2,7
  8644  06AA  0838               	movf	___flmul@bexp,w
  8645  06AB  00B1               	movwf	??___flmul
  8646  06AC  1003               	clrc
  8647  06AD  0C31               	rrf	??___flmul,w
  8648  06AE  00B2               	movwf	??___flmul+1
  8649  06AF  0832               	movf	??___flmul+1,w
  8650  06B0  00C0               	movwf	___flmul@prod+3
  8651  06B1                     l1397:	
  8652  06B1  0836               	movf	___flmul@sign,w
  8653  06B2  00B1               	movwf	??___flmul
  8654  06B3  0831               	movf	??___flmul,w
  8655  06B4  04C0               	iorwf	___flmul@prod+3,f
  8656  06B5  0840               	movf	___flmul@prod+3,w
  8657  06B6  00AC               	movwf	?___flmul+3
  8658  06B7  083F               	movf	___flmul@prod+2,w
  8659  06B8  00AB               	movwf	?___flmul+2
  8660  06B9  083E               	movf	___flmul@prod+1,w
  8661  06BA  00AA               	movwf	?___flmul+1
  8662  06BB  083D               	movf	___flmul@prod,w
  8663  06BC  00A9               	movwf	?___flmul
  8664  06BD  0008               	return
  8665  06BE                     __end_of___flmul:	
  8666                           
  8667                           	psect	text24
  8668  1B76                     __ptext24:	
  8669 ;; *************** function __Umul8_16 *****************
  8670 ;; Defined at:
  8671 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;  multiplier      1    wreg     unsigned char 
  8674 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8677 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8678 ;;  product         2    4[BANK0 ] unsigned int 
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  2    0[BANK0 ] unsigned int 
  8681 ;; Registers used:
  8682 ;;		wreg, status,2, status,0
  8683 ;; Tracked objects:
  8684 ;;		On entry : 300/0
  8685 ;;		On exit  : 300/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8688 ;;      Params:         0       2       0       0       0
  8689 ;;      Locals:         0       5       0       0       0
  8690 ;;      Temps:          0       2       0       0       0
  8691 ;;      Totals:         0       9       0       0       0
  8692 ;;Total ram usage:        9 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; Hardware stack levels required when called:    1
  8695 ;; This function calls:
  8696 ;;		Nothing
  8697 ;; This function is called by:
  8698 ;;		___flmul
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           
  8703                           ;psect for function __Umul8_16
  8704  1B76                     __Umul8_16:	
  8705                           
  8706                           ;incstack = 0
  8707                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8708                           ;__Umul8_16@multiplier stored from wreg
  8709  1B76  00A8               	movwf	__Umul8_16@multiplier
  8710  1B77  01A4               	clrf	__Umul8_16@product
  8711  1B78  01A5               	clrf	__Umul8_16@product+1
  8712  1B79  0820               	movf	__Umul8_16@multiplicand,w
  8713  1B7A  00A2               	movwf	??__Umul8_16
  8714  1B7B  01A3               	clrf	??__Umul8_16+1
  8715  1B7C  0822               	movf	??__Umul8_16,w
  8716  1B7D  00A6               	movwf	__Umul8_16@word_mpld
  8717  1B7E  0823               	movf	??__Umul8_16+1,w
  8718  1B7F  00A7               	movwf	__Umul8_16@word_mpld+1
  8719  1B80                     l5778:	
  8720  1B80  1C28               	btfss	__Umul8_16@multiplier,0
  8721  1B81  2B88               	goto	l1470
  8722  1B82  0826               	movf	__Umul8_16@word_mpld,w
  8723  1B83  07A4               	addwf	__Umul8_16@product,f
  8724  1B84  1803               	skipnc
  8725  1B85  0AA5               	incf	__Umul8_16@product+1,f
  8726  1B86  0827               	movf	__Umul8_16@word_mpld+1,w
  8727  1B87  07A5               	addwf	__Umul8_16@product+1,f
  8728  1B88                     l1470:	
  8729  1B88  3001               	movlw	1
  8730  1B89                     u5565:	
  8731  1B89  1003               	clrc
  8732  1B8A  0DA6               	rlf	__Umul8_16@word_mpld,f
  8733  1B8B  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8734  1B8C  3EFF               	addlw	-1
  8735  1B8D  1D03               	skipz
  8736  1B8E  2B89               	goto	u5565
  8737  1B8F  1003               	clrc
  8738  1B90  0CA8               	rrf	__Umul8_16@multiplier,f
  8739  1B91  0828               	movf	__Umul8_16@multiplier,w
  8740  1B92  1D03               	btfss	3,2
  8741  1B93  2B80               	goto	l5778
  8742  1B94  0825               	movf	__Umul8_16@product+1,w
  8743  1B95  00A1               	movwf	?__Umul8_16+1
  8744  1B96  0824               	movf	__Umul8_16@product,w
  8745  1B97  00A0               	movwf	?__Umul8_16
  8746  1B98  0008               	return
  8747  1B99                     __end_of__Umul8_16:	
  8748                           
  8749                           	psect	text25
  8750  1A28                     __ptext25:	
  8751 ;; *************** function _PROCULUS_VP_Write_String *****************
  8752 ;; Defined at:
  8753 ;;		line 205 in file "proculus.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;  vp              2   58[BANK0 ] unsigned int 
  8756 ;;  text            1   60[BANK0 ] PTR unsigned char 
  8757 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;		None
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      void 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 300/0
  8766 ;;		On exit  : 300/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8769 ;;      Params:         0       3       0       0       0
  8770 ;;      Locals:         0       0       0       0       0
  8771 ;;      Temps:          0       1       0       0       0
  8772 ;;      Totals:         0       4       0       0       0
  8773 ;;Total ram usage:        4 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:    4
  8776 ;; This function calls:
  8777 ;;		_PROCULUS_VP_Write
  8778 ;;		_strlen
  8779 ;; This function is called by:
  8780 ;;		_Decodify_Command
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           
  8785                           ;psect for function _PROCULUS_VP_Write_String
  8786  1A28                     _PROCULUS_VP_Write_String:	
  8787                           
  8788                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  8789                           
  8790                           ;incstack = 0
  8791                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8792  1A28  085B               	movf	PROCULUS_VP_Write_String@vp+1,w
  8793  1A29  00D3               	movwf	PROCULUS_VP_Write@vp+1
  8794  1A2A  085A               	movf	PROCULUS_VP_Write_String@vp,w
  8795  1A2B  00D2               	movwf	PROCULUS_VP_Write@vp
  8796  1A2C  085C               	movf	PROCULUS_VP_Write_String@text,w
  8797  1A2D  00D4               	movwf	PROCULUS_VP_Write@vetor
  8798  1A2E  3001               	movlw	1
  8799  1A2F  00D5               	movwf	PROCULUS_VP_Write@vetor+1
  8800  1A30  085C               	movf	PROCULUS_VP_Write_String@text,w
  8801  1A31  00A0               	movwf	strlen@s
  8802  1A32  3001               	movlw	1
  8803  1A33  00A1               	movwf	strlen@s+1
  8804  1A34  160A  158A  225C  160A  158A  	fcall	_strlen
  8805  1A39  0820               	movf	?_strlen,w
  8806  1A3A  3E01               	addlw	1
  8807  1A3B  00DD               	movwf	??_PROCULUS_VP_Write_String
  8808  1A3C  085D               	movf	??_PROCULUS_VP_Write_String,w
  8809  1A3D  00D6               	movwf	PROCULUS_VP_Write@size
  8810  1A3E  120A  118A  27B2   	fcall	_PROCULUS_VP_Write
  8811  1A41  0008               	return
  8812  1A42                     __end_of_PROCULUS_VP_Write_String:	
  8813                           
  8814                           	psect	text26
  8815  1A5C                     __ptext26:	
  8816 ;; *************** function _strlen *****************
  8817 ;; Defined at:
  8818 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  8819 ;; Parameters:    Size  Location     Type
  8820 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  8821 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  8824 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  2    0[BANK0 ] unsigned int 
  8827 ;; Registers used:
  8828 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8829 ;; Tracked objects:
  8830 ;;		On entry : 300/0
  8831 ;;		On exit  : 300/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8834 ;;      Params:         0       2       0       0       0
  8835 ;;      Locals:         0       2       0       0       0
  8836 ;;      Temps:          0       0       0       0       0
  8837 ;;      Totals:         0       4       0       0       0
  8838 ;;Total ram usage:        4 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; Hardware stack levels required when called:    1
  8841 ;; This function calls:
  8842 ;;		Nothing
  8843 ;; This function is called by:
  8844 ;;		_Decodify_Command
  8845 ;;		_PROCULUS_VP_Write_String
  8846 ;; This function uses a non-reentrant model
  8847 ;;
  8848                           
  8849                           
  8850                           ;psect for function _strlen
  8851  1A5C                     _strlen:	
  8852                           
  8853                           ;incstack = 0
  8854                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8855  1A5C  0820               	movf	strlen@s,w
  8856  1A5D  00A2               	movwf	strlen@cp
  8857  1A5E  0821               	movf	strlen@s+1,w
  8858  1A5F  00A3               	movwf	strlen@cp+1
  8859  1A60                     l5938:	
  8860  1A60  0822               	movf	strlen@cp,w
  8861  1A61  0084               	movwf	4
  8862  1A62  1783               	bsf	3,7
  8863  1A63  1C23               	btfss	strlen@cp+1,0
  8864  1A64  1383               	bcf	3,7
  8865  1A65  0800               	movf	0,w
  8866  1A66  1903               	btfsc	3,2
  8867  1A67  2A6F               	goto	l5940
  8868  1A68  3001               	movlw	1
  8869  1A69  07A2               	addwf	strlen@cp,f
  8870  1A6A  1803               	skipnc
  8871  1A6B  0AA3               	incf	strlen@cp+1,f
  8872  1A6C  3000               	movlw	0
  8873  1A6D  07A3               	addwf	strlen@cp+1,f
  8874  1A6E  2A60               	goto	l5938
  8875  1A6F                     l5940:	
  8876  1A6F  0820               	movf	strlen@s,w
  8877  1A70  0222               	subwf	strlen@cp,w
  8878  1A71  00A0               	movwf	?_strlen
  8879  1A72  0821               	movf	strlen@s+1,w
  8880  1A73  1C03               	skipc
  8881  1A74  0A21               	incf	strlen@s+1,w
  8882  1A75  0223               	subwf	strlen@cp+1,w
  8883  1A76  00A1               	movwf	?_strlen+1
  8884  1A77  0008               	return
  8885  1A78                     __end_of_strlen:	
  8886                           
  8887                           	psect	text27
  8888  07B2                     __ptext27:	
  8889 ;; *************** function _PROCULUS_VP_Write *****************
  8890 ;; Defined at:
  8891 ;;		line 40 in file "proculus.c"
  8892 ;; Parameters:    Size  Location     Type
  8893 ;;  vp              2   50[BANK0 ] unsigned int 
  8894 ;;  vetor           2   52[BANK0 ] PTR unsigned char 
  8895 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  8896 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(52), usart_protocol(58), 
  8897 ;;  size            1   54[BANK0 ] unsigned char 
  8898 ;; Auto vars:     Size  Location     Type
  8899 ;;  i               1   57[BANK0 ] unsigned char 
  8900 ;; Return value:  Size  Location     Type
  8901 ;;                  1    wreg      void 
  8902 ;; Registers used:
  8903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8904 ;; Tracked objects:
  8905 ;;		On entry : 300/0
  8906 ;;		On exit  : 300/0
  8907 ;;		Unchanged: 0/0
  8908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8909 ;;      Params:         0       5       0       0       0
  8910 ;;      Locals:         0       1       0       0       0
  8911 ;;      Temps:          0       2       0       0       0
  8912 ;;      Totals:         0       8       0       0       0
  8913 ;;Total ram usage:        8 bytes
  8914 ;; Hardware stack levels used:    1
  8915 ;; Hardware stack levels required when called:    3
  8916 ;; This function calls:
  8917 ;;		_PROCULUS_Delay
  8918 ;;		_USART_put_int
  8919 ;;		_USART_putc
  8920 ;; This function is called by:
  8921 ;;		_PROCULUS_VP_Write_String
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           
  8925                           
  8926                           ;psect for function _PROCULUS_VP_Write
  8927  07B2                     _PROCULUS_VP_Write:	
  8928                           
  8929                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  8930                           
  8931                           ;incstack = 0
  8932                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8933  07B2  30A5               	movlw	165
  8934  07B3  00CE               	movwf	USART_put_int@value
  8935  07B4  305A               	movlw	90
  8936  07B5  00CF               	movwf	USART_put_int@value+1
  8937  07B6  160A  158A  21F9  120A  118A  	fcall	_USART_put_int
  8938                           
  8939                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  8940  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  8941  07BC  0856               	movf	PROCULUS_VP_Write@size,w
  8942  07BD  3E03               	addlw	3
  8943  07BE  160A  158A  21AD  120A  118A  	fcall	_USART_putc
  8944                           
  8945                           ;proculus.c: 43:      USART_putc(0x82);
  8946  07C3  3082               	movlw	130
  8947  07C4  160A  158A  21AD  120A  118A  	fcall	_USART_putc
  8948                           
  8949                           ;proculus.c: 44:      USART_put_int(vp);
  8950  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  8951  07CA  0853               	movf	PROCULUS_VP_Write@vp+1,w
  8952  07CB  00CF               	movwf	USART_put_int@value+1
  8953  07CC  0852               	movf	PROCULUS_VP_Write@vp,w
  8954  07CD  00CE               	movwf	USART_put_int@value
  8955  07CE  160A  158A  21F9  120A  118A  	fcall	_USART_put_int
  8956                           
  8957                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  8958  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  8959  07D4  01D9               	clrf	PROCULUS_VP_Write@i
  8960  07D5                     l5984:	
  8961  07D5  0856               	movf	PROCULUS_VP_Write@size,w
  8962  07D6  0259               	subwf	PROCULUS_VP_Write@i,w
  8963  07D7  1803               	btfsc	3,0
  8964  07D8  2FF1               	goto	l5986
  8965                           
  8966                           ;proculus.c: 46:          USART_putc(vetor[i]);
  8967  07D9  0859               	movf	PROCULUS_VP_Write@i,w
  8968  07DA  0754               	addwf	PROCULUS_VP_Write@vetor,w
  8969  07DB  00D7               	movwf	??_PROCULUS_VP_Write
  8970  07DC  0855               	movf	PROCULUS_VP_Write@vetor+1,w
  8971  07DD  1803               	skipnc
  8972  07DE  3E01               	addlw	1
  8973  07DF  00D8               	movwf	??_PROCULUS_VP_Write+1
  8974  07E0  0857               	movf	??_PROCULUS_VP_Write,w
  8975  07E1  0084               	movwf	4
  8976  07E2  1783               	bsf	3,7
  8977  07E3  1C58               	btfss	??_PROCULUS_VP_Write+1,0
  8978  07E4  1383               	bcf	3,7
  8979  07E5  0800               	movf	0,w
  8980  07E6  160A  158A  21AD  120A  118A  	fcall	_USART_putc
  8981  07EB  3001               	movlw	1
  8982  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  8983  07ED  00D7               	movwf	??_PROCULUS_VP_Write
  8984  07EE  0857               	movf	??_PROCULUS_VP_Write,w
  8985  07EF  07D9               	addwf	PROCULUS_VP_Write@i,f
  8986  07F0  2FD5               	goto	l5984
  8987  07F1                     l5986:	
  8988                           
  8989                           ;proculus.c: 48:      PROCULUS_Delay(1);
  8990  07F1  3001               	movlw	1
  8991  07F2  00A0               	movwf	PROCULUS_Delay@tempo_ms
  8992  07F3  3000               	movlw	0
  8993  07F4  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  8994  07F5  160A  158A  2278   	fcall	_PROCULUS_Delay
  8995  07F8  0008               	return
  8996  07F9                     __end_of_PROCULUS_VP_Write:	
  8997                           
  8998                           	psect	text28
  8999  19CE                     __ptext28:	
  9000 ;; *************** function _PROCULUS_Show_Screen *****************
  9001 ;; Defined at:
  9002 ;;		line 243 in file "proculus.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;  screen          2   54[BANK0 ] unsigned int 
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;  vetor           3   57[BANK0 ] unsigned char [3]
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  1    wreg      void 
  9009 ;; Registers used:
  9010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9011 ;; Tracked objects:
  9012 ;;		On entry : 300/0
  9013 ;;		On exit  : 300/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9016 ;;      Params:         0       2       0       0       0
  9017 ;;      Locals:         0       3       0       0       0
  9018 ;;      Temps:          0       1       0       0       0
  9019 ;;      Totals:         0       6       0       0       0
  9020 ;;Total ram usage:        6 bytes
  9021 ;; Hardware stack levels used:    1
  9022 ;; Hardware stack levels required when called:    4
  9023 ;; This function calls:
  9024 ;;		_PROCULUS_Control_Register_Write
  9025 ;; This function is called by:
  9026 ;;		_Decodify_Command
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           
  9031                           ;psect for function _PROCULUS_Show_Screen
  9032  19CE                     _PROCULUS_Show_Screen:	
  9033                           
  9034                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9035                           
  9036                           ;incstack = 0
  9037                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9038  19CE  3003               	movlw	3
  9039  19CF  00D8               	movwf	??_PROCULUS_Show_Screen
  9040  19D0  0858               	movf	??_PROCULUS_Show_Screen,w
  9041  19D1  00D9               	movwf	PROCULUS_Show_Screen@vetor
  9042                           
  9043                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9044  19D2  0857               	movf	PROCULUS_Show_Screen@screen+1,w
  9045  19D3  00D8               	movwf	??_PROCULUS_Show_Screen
  9046  19D4  0858               	movf	??_PROCULUS_Show_Screen,w
  9047  19D5  00DA               	movwf	PROCULUS_Show_Screen@vetor+1
  9048                           
  9049                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9050  19D6  0856               	movf	PROCULUS_Show_Screen@screen,w
  9051  19D7  00D8               	movwf	??_PROCULUS_Show_Screen
  9052  19D8  0858               	movf	??_PROCULUS_Show_Screen,w
  9053  19D9  00DB               	movwf	PROCULUS_Show_Screen@vetor+2
  9054                           
  9055                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9056  19DA  3003               	movlw	3
  9057  19DB  00D8               	movwf	??_PROCULUS_Show_Screen
  9058  19DC  0858               	movf	??_PROCULUS_Show_Screen,w
  9059  19DD  00D2               	movwf	PROCULUS_Control_Register_Write@size
  9060  19DE  3059               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9061  19DF  160A  158A  2523   	fcall	_PROCULUS_Control_Register_Write
  9062  19E2  0008               	return
  9063  19E3                     __end_of_PROCULUS_Show_Screen:	
  9064                           
  9065                           	psect	text29
  9066  1B54                     __ptext29:	
  9067 ;; *************** function _PROCULUS_Buzzer *****************
  9068 ;; Defined at:
  9069 ;;		line 223 in file "proculus.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;  time_ms_x_10    2   54[BANK0 ] unsigned int 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  vetor           2   57[BANK0 ] unsigned char [2]
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9078 ;; Tracked objects:
  9079 ;;		On entry : 300/0
  9080 ;;		On exit  : 300/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9083 ;;      Params:         0       2       0       0       0
  9084 ;;      Locals:         0       2       0       0       0
  9085 ;;      Temps:          0       1       0       0       0
  9086 ;;      Totals:         0       5       0       0       0
  9087 ;;Total ram usage:        5 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; Hardware stack levels required when called:    4
  9090 ;; This function calls:
  9091 ;;		_PROCULUS_Control_Register_Write
  9092 ;;		___lwdiv
  9093 ;; This function is called by:
  9094 ;;		_Decodify_Command
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098                           
  9099                           ;psect for function _PROCULUS_Buzzer
  9100  1B54                     _PROCULUS_Buzzer:	
  9101                           
  9102                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  9103                           
  9104                           ;incstack = 0
  9105                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9106  1B54  300A               	movlw	10
  9107  1B55  00A0               	movwf	___lwdiv@divisor
  9108  1B56  3000               	movlw	0
  9109  1B57  00A1               	movwf	___lwdiv@divisor+1
  9110  1B58  0857               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  9111  1B59  00A3               	movwf	___lwdiv@dividend+1
  9112  1B5A  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9113  1B5B  00A2               	movwf	___lwdiv@dividend
  9114  1B5C  160A  158A  2597  160A  158A  	fcall	___lwdiv
  9115  1B61  0821               	movf	?___lwdiv+1,w
  9116  1B62  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  9117  1B63  0820               	movf	?___lwdiv,w
  9118  1B64  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  9119                           
  9120                           ;proculus.c: 226:      vetor[0]=0x02;
  9121  1B65  3002               	movlw	2
  9122  1B66  00D8               	movwf	??_PROCULUS_Buzzer
  9123  1B67  0858               	movf	??_PROCULUS_Buzzer,w
  9124  1B68  00D9               	movwf	PROCULUS_Buzzer@vetor
  9125                           
  9126                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  9127  1B69  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  9128  1B6A  00D8               	movwf	??_PROCULUS_Buzzer
  9129  1B6B  0858               	movf	??_PROCULUS_Buzzer,w
  9130  1B6C  00DA               	movwf	PROCULUS_Buzzer@vetor+1
  9131                           
  9132                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9133  1B6D  3002               	movlw	2
  9134  1B6E  00D8               	movwf	??_PROCULUS_Buzzer
  9135  1B6F  0858               	movf	??_PROCULUS_Buzzer,w
  9136  1B70  00D2               	movwf	PROCULUS_Control_Register_Write@size
  9137  1B71  3059               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9138  1B72  160A  158A  2523   	fcall	_PROCULUS_Control_Register_Write
  9139  1B75  0008               	return
  9140  1B76                     __end_of_PROCULUS_Buzzer:	
  9141                           
  9142                           	psect	text30
  9143  1D97                     __ptext30:	
  9144 ;; *************** function ___lwdiv *****************
  9145 ;; Defined at:
  9146 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;  divisor         2    0[BANK0 ] unsigned int 
  9149 ;;  dividend        2    2[BANK0 ] unsigned int 
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;  quotient        2    6[BANK0 ] unsigned int 
  9152 ;;  counter         1    5[BANK0 ] unsigned char 
  9153 ;; Return value:  Size  Location     Type
  9154 ;;                  2    0[BANK0 ] unsigned int 
  9155 ;; Registers used:
  9156 ;;		wreg, status,2, status,0
  9157 ;; Tracked objects:
  9158 ;;		On entry : 300/0
  9159 ;;		On exit  : 300/0
  9160 ;;		Unchanged: 0/0
  9161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9162 ;;      Params:         0       4       0       0       0
  9163 ;;      Locals:         0       3       0       0       0
  9164 ;;      Temps:          0       1       0       0       0
  9165 ;;      Totals:         0       8       0       0       0
  9166 ;;Total ram usage:        8 bytes
  9167 ;; Hardware stack levels used:    1
  9168 ;; Hardware stack levels required when called:    1
  9169 ;; This function calls:
  9170 ;;		Nothing
  9171 ;; This function is called by:
  9172 ;;		_ADC_Media_10bits
  9173 ;;		_PROCULUS_Buzzer
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           
  9178                           ;psect for function ___lwdiv
  9179  1D97                     ___lwdiv:	
  9180                           
  9181                           ;incstack = 0
  9182                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9183  1D97  01A6               	clrf	___lwdiv@quotient
  9184  1D98  01A7               	clrf	___lwdiv@quotient+1
  9185  1D99  0820               	movf	___lwdiv@divisor,w
  9186  1D9A  0421               	iorwf	___lwdiv@divisor+1,w
  9187  1D9B  1903               	btfsc	3,2
  9188  1D9C  2DCE               	goto	l6046
  9189  1D9D  01A5               	clrf	___lwdiv@counter
  9190  1D9E  0AA5               	incf	___lwdiv@counter,f
  9191  1D9F                     l6034:	
  9192  1D9F  1BA1               	btfsc	___lwdiv@divisor+1,7
  9193  1DA0  2DAD               	goto	l6036
  9194  1DA1  3001               	movlw	1
  9195  1DA2                     u5855:	
  9196  1DA2  1003               	clrc
  9197  1DA3  0DA0               	rlf	___lwdiv@divisor,f
  9198  1DA4  0DA1               	rlf	___lwdiv@divisor+1,f
  9199  1DA5  3EFF               	addlw	-1
  9200  1DA6  1D03               	skipz
  9201  1DA7  2DA2               	goto	u5855
  9202  1DA8  3001               	movlw	1
  9203  1DA9  00A4               	movwf	??___lwdiv
  9204  1DAA  0824               	movf	??___lwdiv,w
  9205  1DAB  07A5               	addwf	___lwdiv@counter,f
  9206  1DAC  2D9F               	goto	l6034
  9207  1DAD                     l6036:	
  9208  1DAD  3001               	movlw	1
  9209  1DAE                     u5875:	
  9210  1DAE  1003               	clrc
  9211  1DAF  0DA6               	rlf	___lwdiv@quotient,f
  9212  1DB0  0DA7               	rlf	___lwdiv@quotient+1,f
  9213  1DB1  3EFF               	addlw	-1
  9214  1DB2  1D03               	skipz
  9215  1DB3  2DAE               	goto	u5875
  9216  1DB4  0821               	movf	___lwdiv@divisor+1,w
  9217  1DB5  0223               	subwf	___lwdiv@dividend+1,w
  9218  1DB6  1D03               	skipz
  9219  1DB7  2DBA               	goto	u5885
  9220  1DB8  0820               	movf	___lwdiv@divisor,w
  9221  1DB9  0222               	subwf	___lwdiv@dividend,w
  9222  1DBA                     u5885:	
  9223  1DBA  1C03               	skipc
  9224  1DBB  2DC3               	goto	l6042
  9225  1DBC  0820               	movf	___lwdiv@divisor,w
  9226  1DBD  02A2               	subwf	___lwdiv@dividend,f
  9227  1DBE  0821               	movf	___lwdiv@divisor+1,w
  9228  1DBF  1C03               	skipc
  9229  1DC0  03A3               	decf	___lwdiv@dividend+1,f
  9230  1DC1  02A3               	subwf	___lwdiv@dividend+1,f
  9231  1DC2  1426               	bsf	___lwdiv@quotient,0
  9232  1DC3                     l6042:	
  9233  1DC3  3001               	movlw	1
  9234  1DC4                     u5895:	
  9235  1DC4  1003               	clrc
  9236  1DC5  0CA1               	rrf	___lwdiv@divisor+1,f
  9237  1DC6  0CA0               	rrf	___lwdiv@divisor,f
  9238  1DC7  3EFF               	addlw	-1
  9239  1DC8  1D03               	skipz
  9240  1DC9  2DC4               	goto	u5895
  9241  1DCA  3001               	movlw	1
  9242  1DCB  02A5               	subwf	___lwdiv@counter,f
  9243  1DCC  1D03               	btfss	3,2
  9244  1DCD  2DAD               	goto	l6036
  9245  1DCE                     l6046:	
  9246  1DCE  0827               	movf	___lwdiv@quotient+1,w
  9247  1DCF  00A1               	movwf	?___lwdiv+1
  9248  1DD0  0826               	movf	___lwdiv@quotient,w
  9249  1DD1  00A0               	movwf	?___lwdiv
  9250  1DD2  0008               	return
  9251  1DD3                     __end_of___lwdiv:	
  9252                           
  9253                           	psect	text31
  9254  1D23                     __ptext31:	
  9255 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9256 ;; Defined at:
  9257 ;;		line 13 in file "proculus.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;  vetor           1    wreg     PTR unsigned char 
  9260 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9261 ;;  size            1   50[BANK0 ] unsigned char 
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
  9264 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9265 ;;  i               1   53[BANK0 ] unsigned char 
  9266 ;; Return value:  Size  Location     Type
  9267 ;;                  1    wreg      void 
  9268 ;; Registers used:
  9269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9270 ;; Tracked objects:
  9271 ;;		On entry : 300/0
  9272 ;;		On exit  : 300/0
  9273 ;;		Unchanged: 0/0
  9274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9275 ;;      Params:         0       1       0       0       0
  9276 ;;      Locals:         0       2       0       0       0
  9277 ;;      Temps:          0       1       0       0       0
  9278 ;;      Totals:         0       4       0       0       0
  9279 ;;Total ram usage:        4 bytes
  9280 ;; Hardware stack levels used:    1
  9281 ;; Hardware stack levels required when called:    3
  9282 ;; This function calls:
  9283 ;;		_PROCULUS_Delay
  9284 ;;		_USART_put_int
  9285 ;;		_USART_putc
  9286 ;; This function is called by:
  9287 ;;		_PROCULUS_Buzzer
  9288 ;;		_PROCULUS_Show_Screen
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           
  9293                           ;psect for function _PROCULUS_Control_Register_Write
  9294  1D23                     _PROCULUS_Control_Register_Write:	
  9295                           
  9296                           ;incstack = 0
  9297                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  9298                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9299  1D23  00D4               	movwf	PROCULUS_Control_Register_Write@vetor
  9300                           
  9301                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9302  1D24  30A5               	movlw	165
  9303  1D25  00CE               	movwf	USART_put_int@value
  9304  1D26  305A               	movlw	90
  9305  1D27  00CF               	movwf	USART_put_int@value+1
  9306  1D28  160A  158A  21F9  160A  158A  	fcall	_USART_put_int
  9307                           
  9308                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9309  1D2D  1283               	bcf	3,5	;RP0=0, select bank0
  9310  1D2E  0852               	movf	PROCULUS_Control_Register_Write@size,w
  9311  1D2F  3E01               	addlw	1
  9312  1D30  160A  158A  21AD  160A  158A  	fcall	_USART_putc
  9313                           
  9314                           ;proculus.c: 16:      USART_putc(0x80);
  9315  1D35  3080               	movlw	128
  9316  1D36  160A  158A  21AD  160A  158A  	fcall	_USART_putc
  9317                           
  9318                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9319  1D3B  1283               	bcf	3,5	;RP0=0, select bank0
  9320  1D3C  01D5               	clrf	PROCULUS_Control_Register_Write@i
  9321  1D3D                     l5968:	
  9322  1D3D  0852               	movf	PROCULUS_Control_Register_Write@size,w
  9323  1D3E  0255               	subwf	PROCULUS_Control_Register_Write@i,w
  9324  1D3F  1803               	btfsc	3,0
  9325  1D40  2D53               	goto	l5970
  9326                           
  9327                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9328  1D41  0855               	movf	PROCULUS_Control_Register_Write@i,w
  9329  1D42  0754               	addwf	PROCULUS_Control_Register_Write@vetor,w
  9330  1D43  00D3               	movwf	??_PROCULUS_Control_Register_Write
  9331  1D44  0853               	movf	??_PROCULUS_Control_Register_Write,w
  9332  1D45  0084               	movwf	4
  9333  1D46  1383               	bcf	3,7	;select IRP bank0
  9334  1D47  0800               	movf	0,w
  9335  1D48  160A  158A  21AD  160A  158A  	fcall	_USART_putc
  9336  1D4D  3001               	movlw	1
  9337  1D4E  1283               	bcf	3,5	;RP0=0, select bank0
  9338  1D4F  00D3               	movwf	??_PROCULUS_Control_Register_Write
  9339  1D50  0853               	movf	??_PROCULUS_Control_Register_Write,w
  9340  1D51  07D5               	addwf	PROCULUS_Control_Register_Write@i,f
  9341  1D52  2D3D               	goto	l5968
  9342  1D53                     l5970:	
  9343                           
  9344                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9345  1D53  3001               	movlw	1
  9346  1D54  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9347  1D55  3000               	movlw	0
  9348  1D56  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9349  1D57  160A  158A  2278   	fcall	_PROCULUS_Delay
  9350  1D5A  0008               	return
  9351  1D5B                     __end_of_PROCULUS_Control_Register_Write:	
  9352                           
  9353                           	psect	text32
  9354  19F9                     __ptext32:	
  9355 ;; *************** function _USART_put_int *****************
  9356 ;; Defined at:
  9357 ;;		line 137 in file "usart.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;  value           2   46[BANK0 ] int 
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;  dado            1   49[BANK0 ] PTR unsigned char 
  9362 ;;		 -> USART_put_int@value(2), 
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  1    wreg      void 
  9365 ;; Registers used:
  9366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9367 ;; Tracked objects:
  9368 ;;		On entry : 300/0
  9369 ;;		On exit  : 300/100
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9372 ;;      Params:         0       2       0       0       0
  9373 ;;      Locals:         0       1       0       0       0
  9374 ;;      Temps:          0       1       0       0       0
  9375 ;;      Totals:         0       4       0       0       0
  9376 ;;Total ram usage:        4 bytes
  9377 ;; Hardware stack levels used:    1
  9378 ;; Hardware stack levels required when called:    2
  9379 ;; This function calls:
  9380 ;;		_USART_putc
  9381 ;; This function is called by:
  9382 ;;		_Decodify_Command
  9383 ;;		_PROCULUS_Control_Register_Write
  9384 ;;		_PROCULUS_VP_Write
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388                           
  9389                           ;psect for function _USART_put_int
  9390  19F9                     _USART_put_int:	
  9391                           
  9392                           ;usart.c: 138:      char *dado;;usart.c: 139:      dado=(char*)&value;
  9393                           
  9394                           ;incstack = 0
  9395                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9396  19F9  304E               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9397  19FA  00D0               	movwf	??_USART_put_int
  9398  19FB  0850               	movf	??_USART_put_int,w
  9399  19FC  00D1               	movwf	USART_put_int@dado
  9400                           
  9401                           ;usart.c: 140:      USART_putc(*(dado+1));
  9402  19FD  0A51               	incf	USART_put_int@dado,w
  9403  19FE  0084               	movwf	4
  9404  19FF  1383               	bcf	3,7	;select IRP bank0
  9405  1A00  0800               	movf	0,w
  9406  1A01  160A  158A  21AD  160A  158A  	fcall	_USART_putc
  9407                           
  9408                           ;usart.c: 141:      USART_putc(*dado);
  9409  1A06  1283               	bcf	3,5	;RP0=0, select bank0
  9410  1A07  0851               	movf	USART_put_int@dado,w
  9411  1A08  0084               	movwf	4
  9412  1A09  1383               	bcf	3,7	;select IRP bank0
  9413  1A0A  0800               	movf	0,w
  9414  1A0B  160A  158A  21AD   	fcall	_USART_putc
  9415  1A0E  0008               	return
  9416  1A0F                     __end_of_USART_put_int:	
  9417                           
  9418                           	psect	text33
  9419  1A78                     __ptext33:	
  9420 ;; *************** function _PROCULUS_Delay *****************
  9421 ;; Defined at:
  9422 ;;		line 267 in file "proculus.c"
  9423 ;; Parameters:    Size  Location     Type
  9424 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;  i               2    4[BANK0 ] unsigned int 
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  1    wreg      void 
  9429 ;; Registers used:
  9430 ;;		wreg, status,2
  9431 ;; Tracked objects:
  9432 ;;		On entry : 300/0
  9433 ;;		On exit  : 300/0
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9436 ;;      Params:         0       2       0       0       0
  9437 ;;      Locals:         0       2       0       0       0
  9438 ;;      Temps:          0       2       0       0       0
  9439 ;;      Totals:         0       6       0       0       0
  9440 ;;Total ram usage:        6 bytes
  9441 ;; Hardware stack levels used:    1
  9442 ;; Hardware stack levels required when called:    1
  9443 ;; This function calls:
  9444 ;;		Nothing
  9445 ;; This function is called by:
  9446 ;;		_PROCULUS_Control_Register_Write
  9447 ;;		_PROCULUS_VP_Write
  9448 ;; This function uses a non-reentrant model
  9449 ;;
  9450                           
  9451                           
  9452                           ;psect for function _PROCULUS_Delay
  9453  1A78                     _PROCULUS_Delay:	
  9454                           
  9455                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9456                           
  9457                           ;incstack = 0
  9458                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
  9459  1A78  01A4               	clrf	PROCULUS_Delay@i
  9460  1A79  01A5               	clrf	PROCULUS_Delay@i+1
  9461  1A7A                     l799:	
  9462  1A7A  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9463  1A7B  0225               	subwf	PROCULUS_Delay@i+1,w
  9464  1A7C  1D03               	skipz
  9465  1A7D  2A80               	goto	u5545
  9466  1A7E  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9467  1A7F  0224               	subwf	PROCULUS_Delay@i,w
  9468  1A80                     u5545:	
  9469  1A80  1803               	btfsc	3,0
  9470  1A81  0008               	return
  9471                           
  9472                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9473  1A82  3003               	movlw	3
  9474  1A83  1283               	bcf	3,5	;RP0=0, select bank0
  9475  1A84  1303               	bcf	3,6	;RP1=0, select bank0
  9476  1A85  00A3               	movwf	??_PROCULUS_Delay+1
  9477  1A86  3097               	movlw	151
  9478  1A87  00A2               	movwf	??_PROCULUS_Delay
  9479  1A88                     u7907:	
  9480  1A88  0BA2               	decfsz	??_PROCULUS_Delay,f
  9481  1A89  2A88               	goto	u7907
  9482  1A8A  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9483  1A8B  2A88               	goto	u7907
  9484                           
  9485                           ;proculus.c: 270:     }
  9486  1A8C  3001               	movlw	1
  9487  1A8D  1283               	bcf	3,5	;RP0=0, select bank0
  9488  1A8E  1303               	bcf	3,6	;RP1=0, select bank0
  9489  1A8F  07A4               	addwf	PROCULUS_Delay@i,f
  9490  1A90  1803               	skipnc
  9491  1A91  0AA5               	incf	PROCULUS_Delay@i+1,f
  9492  1A92  3000               	movlw	0
  9493  1A93  07A5               	addwf	PROCULUS_Delay@i+1,f
  9494  1A94  2A7A               	goto	l799
  9495  1A95                     __end_of_PROCULUS_Delay:	
  9496                           
  9497                           	psect	text34
  9498  0800                     __ptext34:	
  9499 ;; *************** function _EEPROM_Write_String *****************
  9500 ;; Defined at:
  9501 ;;		line 97 in file "eeprom.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;  addr            1    wreg     unsigned char 
  9504 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9505 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;  addr            1    7[BANK0 ] unsigned char 
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1    wreg      void 
  9510 ;; Registers used:
  9511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9512 ;; Tracked objects:
  9513 ;;		On entry : 300/300
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9517 ;;      Params:         0       1       0       0       0
  9518 ;;      Locals:         0       1       0       0       0
  9519 ;;      Temps:          0       1       0       0       0
  9520 ;;      Totals:         0       3       0       0       0
  9521 ;;Total ram usage:        3 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; Hardware stack levels required when called:    2
  9524 ;; This function calls:
  9525 ;;		_EEPROM_Write_Byte
  9526 ;; This function is called by:
  9527 ;;		_Decodify_Command
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531                           
  9532                           ;psect for function _EEPROM_Write_String
  9533  0800                     _EEPROM_Write_String:	
  9534                           
  9535                           ;incstack = 0
  9536                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9537                           ;EEPROM_Write_String@addr stored from wreg
  9538  0800  1283               	bcf	3,5	;RP0=0, select bank0
  9539  0801  1303               	bcf	3,6	;RP1=0, select bank0
  9540  0802  00A7               	movwf	EEPROM_Write_String@addr
  9541  0803                     l6798:	
  9542                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9543                           
  9544                           
  9545                           ;eeprom.c: 99:     while(*dado)
  9546  0803  0825               	movf	EEPROM_Write_String@dado,w
  9547  0804  0084               	movwf	4
  9548  0805  1783               	bsf	3,7	;select IRP bank2
  9549  0806  0800               	movf	0,w
  9550  0807  1903               	btfsc	3,2
  9551  0808  2820               	goto	l6800
  9552                           
  9553                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9554  0809  0825               	movf	EEPROM_Write_String@dado,w
  9555  080A  0084               	movwf	4
  9556  080B  0800               	movf	0,w
  9557  080C  00A6               	movwf	??_EEPROM_Write_String
  9558  080D  0826               	movf	??_EEPROM_Write_String,w
  9559  080E  00A0               	movwf	EEPROM_Write_Byte@dado
  9560  080F  0827               	movf	EEPROM_Write_String@addr,w
  9561  0810  160A  158A  255B  120A  158A  	fcall	_EEPROM_Write_Byte
  9562                           
  9563                           ;eeprom.c: 102:      addr++;
  9564  0815  3001               	movlw	1
  9565  0816  1283               	bcf	3,5	;RP0=0, select bank0
  9566  0817  1303               	bcf	3,6	;RP1=0, select bank0
  9567  0818  00A6               	movwf	??_EEPROM_Write_String
  9568  0819  0826               	movf	??_EEPROM_Write_String,w
  9569  081A  07A7               	addwf	EEPROM_Write_String@addr,f
  9570                           
  9571                           ;eeprom.c: 103:      dado++;
  9572  081B  3001               	movlw	1
  9573  081C  00A6               	movwf	??_EEPROM_Write_String
  9574  081D  0826               	movf	??_EEPROM_Write_String,w
  9575  081E  07A5               	addwf	EEPROM_Write_String@dado,f
  9576  081F  2803               	goto	l6798
  9577  0820                     l6800:	
  9578                           
  9579                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9580  0820  0825               	movf	EEPROM_Write_String@dado,w
  9581  0821  0084               	movwf	4
  9582  0822  0800               	movf	0,w
  9583  0823  00A6               	movwf	??_EEPROM_Write_String
  9584  0824  0826               	movf	??_EEPROM_Write_String,w
  9585  0825  00A0               	movwf	EEPROM_Write_Byte@dado
  9586  0826  0827               	movf	EEPROM_Write_String@addr,w
  9587  0827  160A  158A  255B   	fcall	_EEPROM_Write_Byte
  9588  082A  0008               	return
  9589  082B                     __end_of_EEPROM_Write_String:	
  9590                           
  9591                           	psect	text35
  9592  1C1A                     __ptext35:	
  9593 ;; *************** function _EEPROM_Write_Integer *****************
  9594 ;; Defined at:
  9595 ;;		line 68 in file "eeprom.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;  addr            1    wreg     unsigned char 
  9598 ;;  dado            2    5[BANK0 ] unsigned int 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;  addr            1   11[BANK0 ] unsigned char 
  9601 ;;  i               1   12[BANK0 ] unsigned char 
  9602 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
  9603 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9604 ;;  addr_memo       1    0        unsigned char 
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  1    wreg      void 
  9607 ;; Registers used:
  9608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9609 ;; Tracked objects:
  9610 ;;		On entry : 200/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9614 ;;      Params:         0       2       0       0       0
  9615 ;;      Locals:         0       4       0       0       0
  9616 ;;      Temps:          0       2       0       0       0
  9617 ;;      Totals:         0       8       0       0       0
  9618 ;;Total ram usage:        8 bytes
  9619 ;; Hardware stack levels used:    1
  9620 ;; Hardware stack levels required when called:    2
  9621 ;; This function calls:
  9622 ;;		_EEPROM_Write_Byte
  9623 ;; This function is called by:
  9624 ;;		_main
  9625 ;;		_Decodify_Command
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           
  9630                           ;psect for function _EEPROM_Write_Integer
  9631  1C1A                     _EEPROM_Write_Integer:	
  9632                           
  9633                           ;incstack = 0
  9634                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9635                           ;EEPROM_Write_Integer@addr stored from wreg
  9636  1C1A  1283               	bcf	3,5	;RP0=0, select bank0
  9637  1C1B  00AB               	movwf	EEPROM_Write_Integer@addr
  9638                           
  9639                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9640  1C1C  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9641  1C1D  00A7               	movwf	??_EEPROM_Write_Integer
  9642  1C1E  0827               	movf	??_EEPROM_Write_Integer,w
  9643  1C1F  00AA               	movwf	EEPROM_Write_Integer@ptr
  9644                           
  9645                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9646  1C20  01AC               	clrf	EEPROM_Write_Integer@i
  9647  1C21                     l6748:	
  9648                           
  9649                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9650  1C21  082A               	movf	EEPROM_Write_Integer@ptr,w
  9651  1C22  0084               	movwf	4
  9652  1C23  1383               	bcf	3,7	;select IRP bank0
  9653  1C24  0800               	movf	0,w
  9654  1C25  00A7               	movwf	??_EEPROM_Write_Integer
  9655  1C26  0827               	movf	??_EEPROM_Write_Integer,w
  9656  1C27  00A0               	movwf	EEPROM_Write_Byte@dado
  9657  1C28  082B               	movf	EEPROM_Write_Integer@addr,w
  9658  1C29  160A  158A  255B  160A  158A  	fcall	_EEPROM_Write_Byte
  9659  1C2E  3001               	movlw	1
  9660  1C2F  1283               	bcf	3,5	;RP0=0, select bank0
  9661  1C30  1303               	bcf	3,6	;RP1=0, select bank0
  9662  1C31  00A7               	movwf	??_EEPROM_Write_Integer
  9663  1C32  0827               	movf	??_EEPROM_Write_Integer,w
  9664  1C33  07AA               	addwf	EEPROM_Write_Integer@ptr,f
  9665  1C34  3001               	movlw	1
  9666  1C35  00A7               	movwf	??_EEPROM_Write_Integer
  9667  1C36  0827               	movf	??_EEPROM_Write_Integer,w
  9668  1C37  07AB               	addwf	EEPROM_Write_Integer@addr,f
  9669  1C38  3001               	movlw	1
  9670  1C39  00A7               	movwf	??_EEPROM_Write_Integer
  9671  1C3A  0827               	movf	??_EEPROM_Write_Integer,w
  9672  1C3B  07AC               	addwf	EEPROM_Write_Integer@i,f
  9673  1C3C  3002               	movlw	2
  9674  1C3D  022C               	subwf	EEPROM_Write_Integer@i,w
  9675  1C3E  1C03               	skipc
  9676  1C3F  2C21               	goto	l6748
  9677                           
  9678                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9679  1C40  304E               	movlw	78
  9680  1C41  1283               	bcf	3,5	;RP0=0, select bank0
  9681  1C42  1303               	bcf	3,6	;RP1=0, select bank0
  9682  1C43  00A8               	movwf	??_EEPROM_Write_Integer+1
  9683  1C44  30EA               	movlw	234
  9684  1C45  00A7               	movwf	??_EEPROM_Write_Integer
  9685  1C46                     u7917:	
  9686  1C46  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9687  1C47  2C46               	goto	u7917
  9688  1C48  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9689  1C49  2C46               	goto	u7917
  9690  1C4A  0000               	nop
  9691  1C4B  0008               	return
  9692  1C4C                     __end_of_EEPROM_Write_Integer:	
  9693                           
  9694                           	psect	text36
  9695  1D5B                     __ptext36:	
  9696 ;; *************** function _EEPROM_Write_Byte *****************
  9697 ;; Defined at:
  9698 ;;		line 21 in file "eeprom.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;  addr            1    wreg     unsigned char 
  9701 ;;  dado            1    0[BANK0 ] unsigned char 
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;  addr            1    3[BANK0 ] unsigned char 
  9704 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  1    wreg      void 
  9707 ;; Registers used:
  9708 ;;		wreg, status,2, status,0
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/300
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9714 ;;      Params:         0       1       0       0       0
  9715 ;;      Locals:         0       2       0       0       0
  9716 ;;      Temps:          0       2       0       0       0
  9717 ;;      Totals:         0       5       0       0       0
  9718 ;;Total ram usage:        5 bytes
  9719 ;; Hardware stack levels used:    1
  9720 ;; Hardware stack levels required when called:    1
  9721 ;; This function calls:
  9722 ;;		Nothing
  9723 ;; This function is called by:
  9724 ;;		_Decodify_Command
  9725 ;;		_EEPROM_Write_Integer
  9726 ;;		_EEPROM_Write_String
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           
  9731                           ;psect for function _EEPROM_Write_Byte
  9732  1D5B                     _EEPROM_Write_Byte:	
  9733                           
  9734                           ;incstack = 0
  9735                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9736                           ;EEPROM_Write_Byte@addr stored from wreg
  9737  1D5B  1283               	bcf	3,5	;RP0=0, select bank0
  9738  1D5C  1303               	bcf	3,6	;RP1=0, select bank0
  9739  1D5D  00A3               	movwf	EEPROM_Write_Byte@addr
  9740                           
  9741                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9742  1D5E  3014               	movlw	20
  9743  1D5F  1683               	bsf	3,5	;RP0=1, select bank1
  9744  1D60  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9745  1D61  3000               	movlw	0
  9746  1D62  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9747  1D63                     l518:	
  9748                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9749                           
  9750  1D63  1703               	bsf	3,6	;RP1=1, select bank3
  9751  1D64  188C               	btfsc	12,1	;volsfr
  9752  1D65  2D63               	goto	l518
  9753                           
  9754                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9755  1D66  1F8B               	btfss	11,7	;volatile
  9756  1D67  2D6D               	goto	l5900
  9757                           
  9758                           ;eeprom.c: 28:           last_GIE=1;
  9759  1D68  1283               	bcf	3,5	;RP0=0, select bank0
  9760  1D69  1303               	bcf	3,6	;RP1=0, select bank0
  9761  1D6A  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9762  1D6B  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9763  1D6C  2D70               	goto	l5902
  9764  1D6D                     l5900:	
  9765                           
  9766                           ;eeprom.c: 30:           last_GIE=0;
  9767  1D6D  1283               	bcf	3,5	;RP0=0, select bank0
  9768  1D6E  1303               	bcf	3,6	;RP1=0, select bank0
  9769  1D6F  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9770  1D70                     l5902:	
  9771                           
  9772                           ;eeprom.c: 32:        EEADR=addr;
  9773  1D70  0823               	movf	EEPROM_Write_Byte@addr,w
  9774  1D71  1703               	bsf	3,6	;RP1=1, select bank2
  9775  1D72  008D               	movwf	13	;volatile
  9776                           
  9777                           ;eeprom.c: 33:        EEDATA=dado;
  9778  1D73  1303               	bcf	3,6	;RP1=0, select bank0
  9779  1D74  0820               	movf	EEPROM_Write_Byte@dado,w
  9780  1D75  1703               	bsf	3,6	;RP1=1, select bank2
  9781  1D76  008C               	movwf	12	;volatile
  9782                           
  9783                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9784  1D77  1683               	bsf	3,5	;RP0=1, select bank3
  9785  1D78  138C               	bcf	12,7	;volsfr
  9786                           
  9787                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9788  1D79  150C               	bsf	12,2	;volsfr
  9789                           
  9790                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9791  1D7A  138B               	bcf	11,7	;volatile
  9792                           
  9793                           ;eeprom.c: 37:        EECON2=0x55;
  9794  1D7B  3055               	movlw	85
  9795  1D7C  008D               	movwf	13	;volsfr
  9796                           
  9797                           ;eeprom.c: 38:        EECON2=0xAA;
  9798  1D7D  30AA               	movlw	170
  9799  1D7E  008D               	movwf	13	;volsfr
  9800                           
  9801                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9802  1D7F  148C               	bsf	12,1	;volsfr
  9803                           
  9804                           ;eeprom.c: 41:        if(last_GIE==1)
  9805  1D80  1283               	bcf	3,5	;RP0=0, select bank0
  9806  1D81  1303               	bcf	3,6	;RP1=0, select bank0
  9807  1D82  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9808  1D83  1D03               	btfss	3,2
  9809  1D84  2D87               	goto	l523
  9810                           
  9811                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9812  1D85  178B               	bsf	11,7	;volatile
  9813  1D86  2D88               	goto	l524
  9814  1D87                     l523:	
  9815                           ;eeprom.c: 43:        else
  9816                           
  9817                           
  9818                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9819  1D87  138B               	bcf	11,7	;volatile
  9820  1D88                     l524:	
  9821                           
  9822                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9823  1D88  1683               	bsf	3,5	;RP0=1, select bank3
  9824  1D89  1703               	bsf	3,6	;RP1=1, select bank3
  9825  1D8A  110C               	bcf	12,2	;volsfr
  9826                           
  9827                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9828  1D8B  304E               	movlw	78
  9829  1D8C  1283               	bcf	3,5	;RP0=0, select bank0
  9830  1D8D  1303               	bcf	3,6	;RP1=0, select bank0
  9831  1D8E  00A2               	movwf	??_EEPROM_Write_Byte+1
  9832  1D8F  30EA               	movlw	234
  9833  1D90  00A1               	movwf	??_EEPROM_Write_Byte
  9834  1D91                     u7927:	
  9835  1D91  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9836  1D92  2D91               	goto	u7927
  9837  1D93  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9838  1D94  2D91               	goto	u7927
  9839  1D95  0000               	nop
  9840  1D96  0008               	return
  9841  1D97                     __end_of_EEPROM_Write_Byte:	
  9842                           
  9843                           	psect	text37
  9844  1AF1                     __ptext37:	
  9845 ;; *************** function _EEPROM_Read_String *****************
  9846 ;; Defined at:
  9847 ;;		line 109 in file "eeprom.c"
  9848 ;; Parameters:    Size  Location     Type
  9849 ;;  addr            1    wreg     unsigned char 
  9850 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  9851 ;;		 -> buffer(33), 
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;  addr            1    5[BANK0 ] unsigned char 
  9854 ;;  c               1    6[BANK0 ] unsigned char 
  9855 ;; Return value:  Size  Location     Type
  9856 ;;                  1    wreg      void 
  9857 ;; Registers used:
  9858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9859 ;; Tracked objects:
  9860 ;;		On entry : 300/300
  9861 ;;		On exit  : B00/0
  9862 ;;		Unchanged: 0/0
  9863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9864 ;;      Params:         0       1       0       0       0
  9865 ;;      Locals:         0       2       0       0       0
  9866 ;;      Temps:          0       1       0       0       0
  9867 ;;      Totals:         0       4       0       0       0
  9868 ;;Total ram usage:        4 bytes
  9869 ;; Hardware stack levels used:    1
  9870 ;; Hardware stack levels required when called:    2
  9871 ;; This function calls:
  9872 ;;		_EEPROM_Read_Byte
  9873 ;; This function is called by:
  9874 ;;		_Decodify_Command
  9875 ;; This function uses a non-reentrant model
  9876 ;;
  9877                           
  9878                           
  9879                           ;psect for function _EEPROM_Read_String
  9880  1AF1                     _EEPROM_Read_String:	
  9881                           
  9882                           ;incstack = 0
  9883                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9884                           ;EEPROM_Read_String@addr stored from wreg
  9885  1AF1  1283               	bcf	3,5	;RP0=0, select bank0
  9886  1AF2  1303               	bcf	3,6	;RP1=0, select bank0
  9887  1AF3  00A5               	movwf	EEPROM_Read_String@addr
  9888  1AF4                     l550:	
  9889                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
  9890                           
  9891                           
  9892                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
  9893  1AF4  0825               	movf	EEPROM_Read_String@addr,w
  9894  1AF5  160A  158A  2332  160A  158A  	fcall	_EEPROM_Read_Byte
  9895  1AFA  1303               	bcf	3,6	;RP1=0, select bank0
  9896  1AFB  00A4               	movwf	??_EEPROM_Read_String
  9897  1AFC  0824               	movf	??_EEPROM_Read_String,w
  9898  1AFD  00A6               	movwf	EEPROM_Read_String@c
  9899  1AFE  3001               	movlw	1
  9900  1AFF  00A4               	movwf	??_EEPROM_Read_String
  9901  1B00  0824               	movf	??_EEPROM_Read_String,w
  9902  1B01  07A5               	addwf	EEPROM_Read_String@addr,f
  9903                           
  9904                           ;eeprom.c: 114:         *(dado++)=c;
  9905  1B02  0826               	movf	EEPROM_Read_String@c,w
  9906  1B03  00A4               	movwf	??_EEPROM_Read_String
  9907  1B04  0823               	movf	EEPROM_Read_String@dado,w
  9908  1B05  0084               	movwf	4
  9909  1B06  0824               	movf	??_EEPROM_Read_String,w
  9910  1B07  1383               	bcf	3,7	;select IRP bank0
  9911  1B08  0080               	movwf	0
  9912  1B09  3001               	movlw	1
  9913  1B0A  00A4               	movwf	??_EEPROM_Read_String
  9914  1B0B  0824               	movf	??_EEPROM_Read_String,w
  9915  1B0C  07A3               	addwf	EEPROM_Read_String@dado,f
  9916                           
  9917                           ;eeprom.c: 116:       }while(c);
  9918  1B0D  0826               	movf	EEPROM_Read_String@c,w
  9919  1B0E  1903               	btfsc	3,2
  9920  1B0F  0008               	return
  9921  1B10  2AF4               	goto	l550
  9922  1B11                     __end_of_EEPROM_Read_String:	
  9923                           
  9924                           	psect	text38
  9925  1002                     __ptext38:	
  9926 ;; *************** function _EEPROM_Read_Integer *****************
  9927 ;; Defined at:
  9928 ;;		line 81 in file "eeprom.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;  addr            1    wreg     unsigned char 
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;  addr            1    6[BANK0 ] unsigned char 
  9933 ;;  result          2    8[BANK0 ] unsigned int 
  9934 ;;  i               1   10[BANK0 ] unsigned char 
  9935 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  9936 ;;		 -> EEPROM_Read_Integer@result(2), 
  9937 ;; Return value:  Size  Location     Type
  9938 ;;                  2    3[BANK0 ] unsigned int 
  9939 ;; Registers used:
  9940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9941 ;; Tracked objects:
  9942 ;;		On entry : 0/0
  9943 ;;		On exit  : B00/0
  9944 ;;		Unchanged: 0/0
  9945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9946 ;;      Params:         0       2       0       0       0
  9947 ;;      Locals:         0       5       0       0       0
  9948 ;;      Temps:          0       1       0       0       0
  9949 ;;      Totals:         0       8       0       0       0
  9950 ;;Total ram usage:        8 bytes
  9951 ;; Hardware stack levels used:    1
  9952 ;; Hardware stack levels required when called:    2
  9953 ;; This function calls:
  9954 ;;		_EEPROM_Read_Byte
  9955 ;; This function is called by:
  9956 ;;		_main
  9957 ;;		_Decodify_Command
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           
  9962                           ;psect for function _EEPROM_Read_Integer
  9963  1002                     _EEPROM_Read_Integer:	
  9964                           
  9965                           ;incstack = 0
  9966                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9967                           ;EEPROM_Read_Integer@addr stored from wreg
  9968  1002  1283               	bcf	3,5	;RP0=0, select bank0
  9969  1003  1303               	bcf	3,6	;RP1=0, select bank0
  9970  1004  00A6               	movwf	EEPROM_Read_Integer@addr
  9971                           
  9972                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
  9973  1005  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
  9974  1006  00A5               	movwf	??_EEPROM_Read_Integer
  9975  1007  0825               	movf	??_EEPROM_Read_Integer,w
  9976  1008  00A7               	movwf	EEPROM_Read_Integer@ptr
  9977                           
  9978                           ;eeprom.c: 87:       for (i=0;i<2;i++)
  9979  1009  01AA               	clrf	EEPROM_Read_Integer@i
  9980  100A                     l6724:	
  9981                           
  9982                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
  9983  100A  0826               	movf	EEPROM_Read_Integer@addr,w
  9984  100B  160A  158A  2332  160A  118A  	fcall	_EEPROM_Read_Byte
  9985  1010  1303               	bcf	3,6	;RP1=0, select bank0
  9986  1011  00A5               	movwf	??_EEPROM_Read_Integer
  9987  1012  0827               	movf	EEPROM_Read_Integer@ptr,w
  9988  1013  0084               	movwf	4
  9989  1014  0825               	movf	??_EEPROM_Read_Integer,w
  9990  1015  1383               	bcf	3,7	;select IRP bank0
  9991  1016  0080               	movwf	0
  9992  1017  3001               	movlw	1
  9993  1018  00A5               	movwf	??_EEPROM_Read_Integer
  9994  1019  0825               	movf	??_EEPROM_Read_Integer,w
  9995  101A  07A6               	addwf	EEPROM_Read_Integer@addr,f
  9996  101B  3001               	movlw	1
  9997  101C  00A5               	movwf	??_EEPROM_Read_Integer
  9998  101D  0825               	movf	??_EEPROM_Read_Integer,w
  9999  101E  07A7               	addwf	EEPROM_Read_Integer@ptr,f
 10000  101F  3001               	movlw	1
 10001  1020  00A5               	movwf	??_EEPROM_Read_Integer
 10002  1021  0825               	movf	??_EEPROM_Read_Integer,w
 10003  1022  07AA               	addwf	EEPROM_Read_Integer@i,f
 10004  1023  3002               	movlw	2
 10005  1024  022A               	subwf	EEPROM_Read_Integer@i,w
 10006  1025  1C03               	skipc
 10007  1026  280A               	goto	l6724
 10008                           
 10009                           ;eeprom.c: 89:       return result;
 10010  1027  0829               	movf	EEPROM_Read_Integer@result+1,w
 10011  1028  00A4               	movwf	?_EEPROM_Read_Integer+1
 10012  1029  0828               	movf	EEPROM_Read_Integer@result,w
 10013  102A  00A3               	movwf	?_EEPROM_Read_Integer
 10014  102B  0008               	return
 10015  102C                     __end_of_EEPROM_Read_Integer:	
 10016                           
 10017                           	psect	text39
 10018  1B32                     __ptext39:	
 10019 ;; *************** function _EEPROM_Read_Byte *****************
 10020 ;; Defined at:
 10021 ;;		line 52 in file "eeprom.c"
 10022 ;; Parameters:    Size  Location     Type
 10023 ;;  addr            1    wreg     unsigned char 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;  addr            1    2[BANK0 ] unsigned char 
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  1    wreg      unsigned char 
 10028 ;; Registers used:
 10029 ;;		wreg
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/300
 10032 ;;		On exit  : 300/200
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10035 ;;      Params:         0       0       0       0       0
 10036 ;;      Locals:         0       1       0       0       0
 10037 ;;      Temps:          0       2       0       0       0
 10038 ;;      Totals:         0       3       0       0       0
 10039 ;;Total ram usage:        3 bytes
 10040 ;; Hardware stack levels used:    1
 10041 ;; Hardware stack levels required when called:    1
 10042 ;; This function calls:
 10043 ;;		Nothing
 10044 ;; This function is called by:
 10045 ;;		_Decodify_Command
 10046 ;;		_EEPROM_Read_Integer
 10047 ;;		_EEPROM_Read_String
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           
 10052                           ;psect for function _EEPROM_Read_Byte
 10053  1B32                     _EEPROM_Read_Byte:	
 10054                           
 10055                           ;incstack = 0
 10056                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 10057                           ;EEPROM_Read_Byte@addr stored from wreg
 10058  1B32  1283               	bcf	3,5	;RP0=0, select bank0
 10059  1B33  1303               	bcf	3,6	;RP1=0, select bank0
 10060  1B34  00A2               	movwf	EEPROM_Read_Byte@addr
 10061                           
 10062                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 10063  1B35  3014               	movlw	20
 10064  1B36  1683               	bsf	3,5	;RP0=1, select bank1
 10065  1B37  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 10066  1B38  3000               	movlw	0
 10067  1B39  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 10068  1B3A                     l528:	
 10069                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 10070                           
 10071  1B3A  1703               	bsf	3,6	;RP1=1, select bank3
 10072  1B3B  188C               	btfsc	12,1	;volsfr
 10073  1B3C  2B3A               	goto	l528
 10074                           
 10075                           ;eeprom.c: 57:    EEADR=addr;
 10076  1B3D  1283               	bcf	3,5	;RP0=0, select bank0
 10077  1B3E  1303               	bcf	3,6	;RP1=0, select bank0
 10078  1B3F  0822               	movf	EEPROM_Read_Byte@addr,w
 10079  1B40  1703               	bsf	3,6	;RP1=1, select bank2
 10080  1B41  008D               	movwf	13	;volatile
 10081                           
 10082                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 10083  1B42  1683               	bsf	3,5	;RP0=1, select bank3
 10084  1B43  138C               	bcf	12,7	;volsfr
 10085                           
 10086                           ;eeprom.c: 59:    EECON1bits.RD=1;
 10087  1B44  140C               	bsf	12,0	;volsfr
 10088                           
 10089                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 10090  1B45  304E               	movlw	78
 10091  1B46  1283               	bcf	3,5	;RP0=0, select bank0
 10092  1B47  1303               	bcf	3,6	;RP1=0, select bank0
 10093  1B48  00A1               	movwf	??_EEPROM_Read_Byte+1
 10094  1B49  30EA               	movlw	234
 10095  1B4A  00A0               	movwf	??_EEPROM_Read_Byte
 10096  1B4B                     u7937:	
 10097  1B4B  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 10098  1B4C  2B4B               	goto	u7937
 10099  1B4D  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 10100  1B4E  2B4B               	goto	u7937
 10101  1B4F  0000               	nop
 10102                           
 10103                           ;eeprom.c: 61:    return EEDATA;
 10104  1B50  1283               	bcf	3,5	;RP0=0, select bank2
 10105  1B51  1703               	bsf	3,6	;RP1=1, select bank2
 10106  1B52  080C               	movf	12,w	;volatile
 10107  1B53  0008               	return
 10108  1B54                     __end_of_EEPROM_Read_Byte:	
 10109                           
 10110                           	psect	text40
 10111  12C7                     __ptext40:	
 10112 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 10113 ;; Defined at:
 10114 ;;		line 220 in file "EEPROM_24C1025.c"
 10115 ;; Parameters:    Size  Location     Type
 10116 ;;  chip_add        1    wreg     unsigned char 
 10117 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10118 ;;  data            1   14[BANK0 ] PTR unsigned char 
 10119 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
 10120 ;; Auto vars:     Size  Location     Type
 10121 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10122 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10123 ;;  range           1   18[BANK0 ] unsigned char 
 10124 ;; Return value:  Size  Location     Type
 10125 ;;                  1    wreg      void 
 10126 ;; Registers used:
 10127 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10128 ;; Tracked objects:
 10129 ;;		On entry : 300/300
 10130 ;;		On exit  : 300/0
 10131 ;;		Unchanged: 0/0
 10132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10133 ;;      Params:         0       5       0       0       0
 10134 ;;      Locals:         0       3       0       0       0
 10135 ;;      Temps:          0       2       0       0       0
 10136 ;;      Totals:         0      10       0       0       0
 10137 ;;Total ram usage:       10 bytes
 10138 ;; Hardware stack levels used:    1
 10139 ;; Hardware stack levels required when called:    3
 10140 ;; This function calls:
 10141 ;;		_I2C_Master_Start
 10142 ;;		_I2C_Master_Stop
 10143 ;;		_I2C_Master_Write
 10144 ;;		_my_delay_ms_WDT
 10145 ;; This function is called by:
 10146 ;;		_Decodify_Command
 10147 ;; This function uses a non-reentrant model
 10148 ;;
 10149                           
 10150                           
 10151                           ;psect for function _EEPROM_24C1025_Write_Str
 10152  12C7                     _EEPROM_24C1025_Write_Str:	
 10153                           
 10154                           ;incstack = 0
 10155                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10156                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 10157  12C7  1283               	bcf	3,5	;RP0=0, select bank0
 10158  12C8  1303               	bcf	3,6	;RP1=0, select bank0
 10159  12C9  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
 10160                           
 10161                           ;EEPROM_24C1025.c: 222:      unsigned char ctrl;;EEPROM_24C1025.c: 224:      if(mem_add>
      +                          0x1FFFF) return;
 10162  12CA  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10163  12CB  1D03               	btfss	3,2
 10164  12CC  0008               	return
 10165  12CD  3002               	movlw	2
 10166  12CE  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10167  12CF  1D03               	skipz
 10168  12D0  2AD9               	goto	u6933
 10169  12D1  3000               	movlw	0
 10170  12D2  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10171  12D3  1D03               	skipz
 10172  12D4  2AD9               	goto	u6933
 10173  12D5  3000               	movlw	0
 10174  12D6  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10175  12D7  1D03               	skipz
 10176  12D8  2AD9               	goto	u6933
 10177  12D9                     u6933:	
 10178  12D9  1803               	btfsc	3,0
 10179  12DA  0008               	return
 10180  12DB                     L10:	
 10181                           
 10182                           ;EEPROM_24C1025.c: 226:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10183  12DB  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10184  12DC  1D03               	btfss	3,2
 10185  12DD  2AEC               	goto	l6526
 10186  12DE  3001               	movlw	1
 10187  12DF  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10188  12E0  1D03               	skipz
 10189  12E1  2AEA               	goto	u6943
 10190  12E2  3000               	movlw	0
 10191  12E3  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10192  12E4  1D03               	skipz
 10193  12E5  2AEA               	goto	u6943
 10194  12E6  3000               	movlw	0
 10195  12E7  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10196  12E8  1D03               	skipz
 10197  12E9  2AEA               	goto	u6943
 10198  12EA                     u6943:	
 10199  12EA  1C03               	btfss	3,0
 10200  12EB  2AF1               	goto	l6528
 10201  12EC                     l6526:	
 10202  12EC  3008               	movlw	8
 10203  12ED  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10204  12EE  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10205  12EF  00B2               	movwf	EEPROM_24C1025_Write_Str@range
 10206  12F0  2AF2               	goto	l6530
 10207  12F1                     l6528:	
 10208  12F1  01B2               	clrf	EEPROM_24C1025_Write_Str@range
 10209  12F2                     l6530:	
 10210                           
 10211                           ;EEPROM_24C1025.c: 227:      ctrl=chip_add;
 10212  12F2  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 10213  12F3  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10214  12F4  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10215  12F5  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
 10216                           
 10217                           ;EEPROM_24C1025.c: 228:      ctrl<<=1;
 10218  12F6  1003               	clrc
 10219  12F7  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 10220                           
 10221                           ;EEPROM_24C1025.c: 229:      ctrl |= 0xA0;
 10222  12F8  30A0               	movlw	160
 10223  12F9  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10224  12FA  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10225  12FB  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10226                           
 10227                           ;EEPROM_24C1025.c: 230:      ctrl |= range;
 10228  12FC  0832               	movf	EEPROM_24C1025_Write_Str@range,w
 10229  12FD  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10230  12FE  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10231  12FF  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10232                           
 10233                           ;EEPROM_24C1025.c: 232:      I2C_Master_Start();
 10234  1300  160A  158A  21BD  160A  118A  	fcall	_I2C_Master_Start
 10235                           
 10236                           ;EEPROM_24C1025.c: 233:      I2C_Master_Write(ctrl);
 10237  1305  1283               	bcf	3,5	;RP0=0, select bank0
 10238  1306  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 10239  1307  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10240  1308  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10241  1309  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10242  130A  00A3               	movwf	I2C_Master_Write@d
 10243  130B  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10244  130C  00A4               	movwf	I2C_Master_Write@d+1
 10245  130D  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 10246                           
 10247                           ;EEPROM_24C1025.c: 234:      I2C_Master_Write(((char *)&mem_add)[1]);
 10248  1312  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10249  1313  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10250  1314  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10251  1315  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10252  1316  00A3               	movwf	I2C_Master_Write@d
 10253  1317  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10254  1318  00A4               	movwf	I2C_Master_Write@d+1
 10255  1319  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 10256                           
 10257                           ;EEPROM_24C1025.c: 235:      I2C_Master_Write(((char *)&mem_add)[0]);
 10258  131E  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10259  131F  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10260  1320  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10261  1321  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10262  1322  00A3               	movwf	I2C_Master_Write@d
 10263  1323  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10264  1324  00A4               	movwf	I2C_Master_Write@d+1
 10265  1325  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 10266  132A                     l6590:	
 10267                           ;EEPROM_24C1025.c: 236:      while(*data)
 10268                           
 10269                           
 10270                           ;EEPROM_24C1025.c: 236:      while(*data)
 10271  132A  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10272  132B  0084               	movwf	4
 10273  132C  1783               	bsf	3,7	;select IRP bank2
 10274  132D  0800               	movf	0,w
 10275  132E  1903               	btfsc	3,2
 10276  132F  2BA0               	goto	l6592
 10277  1330  0064               	clrwdt	;# 
 10278                           
 10279                           ;EEPROM_24C1025.c: 239:           if(mem_add>0x1FFFF) return;
 10280  1331  1283               	bcf	3,5	;RP0=0, select bank0
 10281  1332  1303               	bcf	3,6	;RP1=0, select bank0
 10282  1333  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10283  1334  1D03               	btfss	3,2
 10284  1335  0008               	return
 10285  1336  3002               	movlw	2
 10286  1337  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10287  1338  1D03               	skipz
 10288  1339  2B42               	goto	u6953
 10289  133A  3000               	movlw	0
 10290  133B  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10291  133C  1D03               	skipz
 10292  133D  2B42               	goto	u6953
 10293  133E  3000               	movlw	0
 10294  133F  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10295  1340  1D03               	skipz
 10296  1341  2B42               	goto	u6953
 10297  1342                     u6953:	
 10298  1342  1803               	btfsc	3,0
 10299  1343  0008               	return
 10300                           
 10301                           ;EEPROM_24C1025.c: 240:           if((mem_add+1)%128==0)
 10302  1344  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10303  1345  3E01               	addlw	1
 10304  1346  397F               	andlw	127
 10305  1347  1D03               	btfss	3,2
 10306  1348  2B7E               	goto	l6584
 10307                           
 10308                           ;EEPROM_24C1025.c: 241:             {;EEPROM_24C1025.c: 242:             I2C_Master_Writ
      +                          e(*data);
 10309  1349  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10310  134A  0084               	movwf	4
 10311  134B  1783               	bsf	3,7	;select IRP bank2
 10312  134C  0800               	movf	0,w
 10313  134D  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10314  134E  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10315  134F  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10316  1350  00A3               	movwf	I2C_Master_Write@d
 10317  1351  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10318  1352  00A4               	movwf	I2C_Master_Write@d+1
 10319  1353  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 10320                           
 10321                           ;EEPROM_24C1025.c: 243:             I2C_Master_Stop();
 10322  1358  160A  158A  2170  160A  118A  	fcall	_I2C_Master_Stop
 10323                           
 10324                           ;EEPROM_24C1025.c: 245:             my_delay_ms_WDT(5);
 10325  135D  3000               	movlw	0
 10326  135E  1283               	bcf	3,5	;RP0=0, select bank0
 10327  135F  00A3               	movwf	my_delay_ms_WDT@time+3
 10328  1360  3000               	movlw	0
 10329  1361  00A2               	movwf	my_delay_ms_WDT@time+2
 10330  1362  3000               	movlw	0
 10331  1363  00A1               	movwf	my_delay_ms_WDT@time+1
 10332  1364  3005               	movlw	5
 10333  1365  00A0               	movwf	my_delay_ms_WDT@time
 10334  1366  160A  158A  24EB  160A  118A  	fcall	_my_delay_ms_WDT
 10335                           
 10336                           ;EEPROM_24C1025.c: 246:             mem_add++;
 10337  136B  3001               	movlw	1
 10338  136C  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10339  136D  3000               	movlw	0
 10340  136E  1803               	skipnc
 10341  136F  3001               	movlw	1
 10342  1370  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10343  1371  3000               	movlw	0
 10344  1372  1803               	skipnc
 10345  1373  3001               	movlw	1
 10346  1374  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10347  1375  3000               	movlw	0
 10348  1376  1803               	skipnc
 10349  1377  3001               	movlw	1
 10350  1378  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10351                           
 10352                           ;EEPROM_24C1025.c: 247:             data++;
 10353  1379  3001               	movlw	1
 10354  137A  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10355  137B  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10356  137C  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10357  137D  2ADB               	goto	L10
 10358  137E                     l6584:	
 10359                           ;EEPROM_24C1025.c: 248:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10360                           
 10361                           
 10362                           ;EEPROM_24C1025.c: 260:             {;EEPROM_24C1025.c: 261:             I2C_Master_Writ
      +                          e(*data);
 10363  137E  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10364  137F  0084               	movwf	4
 10365  1380  1783               	bsf	3,7	;select IRP bank2
 10366  1381  0800               	movf	0,w
 10367  1382  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10368  1383  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10369  1384  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10370  1385  00A3               	movwf	I2C_Master_Write@d
 10371  1386  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10372  1387  00A4               	movwf	I2C_Master_Write@d+1
 10373  1388  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 10374                           
 10375                           ;EEPROM_24C1025.c: 262:             data++;
 10376  138D  3001               	movlw	1
 10377  138E  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10378  138F  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10379  1390  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10380                           
 10381                           ;EEPROM_24C1025.c: 263:             mem_add++;
 10382  1391  3001               	movlw	1
 10383  1392  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10384  1393  3000               	movlw	0
 10385  1394  1803               	skipnc
 10386  1395  3001               	movlw	1
 10387  1396  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10388  1397  3000               	movlw	0
 10389  1398  1803               	skipnc
 10390  1399  3001               	movlw	1
 10391  139A  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10392  139B  3000               	movlw	0
 10393  139C  1803               	skipnc
 10394  139D  3001               	movlw	1
 10395  139E  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10396  139F  2B2A               	goto	l6590
 10397  13A0                     l6592:	
 10398                           
 10399                           ;EEPROM_24C1025.c: 266:      I2C_Master_Write(0);
 10400  13A0  3000               	movlw	0
 10401  13A1  00A3               	movwf	I2C_Master_Write@d
 10402  13A2  00A4               	movwf	I2C_Master_Write@d+1
 10403  13A3  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 10404                           
 10405                           ;EEPROM_24C1025.c: 267:      I2C_Master_Stop();
 10406  13A8  160A  158A  2170  160A  118A  	fcall	_I2C_Master_Stop
 10407                           
 10408                           ;EEPROM_24C1025.c: 268:      my_delay_ms_WDT(5);
 10409  13AD  3000               	movlw	0
 10410  13AE  1283               	bcf	3,5	;RP0=0, select bank0
 10411  13AF  00A3               	movwf	my_delay_ms_WDT@time+3
 10412  13B0  3000               	movlw	0
 10413  13B1  00A2               	movwf	my_delay_ms_WDT@time+2
 10414  13B2  3000               	movlw	0
 10415  13B3  00A1               	movwf	my_delay_ms_WDT@time+1
 10416  13B4  3005               	movlw	5
 10417  13B5  00A0               	movwf	my_delay_ms_WDT@time
 10418  13B6  160A  158A  24EB   	fcall	_my_delay_ms_WDT
 10419  13B9  0008               	return
 10420  13BA                     __end_of_EEPROM_24C1025_Write_Str:	
 10421                           
 10422                           	psect	text41
 10423  19E3                     __ptext41:	
 10424 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 10425 ;; Defined at:
 10426 ;;		line 341 in file "EEPROM_24C1025.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;  chip_add        1    wreg     unsigned char 
 10429 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10430 ;;  data            1   27[BANK0 ] unsigned char 
 10431 ;; Auto vars:     Size  Location     Type
 10432 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10433 ;; Return value:  Size  Location     Type
 10434 ;;                  1    wreg      void 
 10435 ;; Registers used:
 10436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10437 ;; Tracked objects:
 10438 ;;		On entry : 300/300
 10439 ;;		On exit  : 300/0
 10440 ;;		Unchanged: 0/0
 10441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10442 ;;      Params:         0       5       0       0       0
 10443 ;;      Locals:         0       1       0       0       0
 10444 ;;      Temps:          0       0       0       0       0
 10445 ;;      Totals:         0       6       0       0       0
 10446 ;;Total ram usage:        6 bytes
 10447 ;; Hardware stack levels used:    1
 10448 ;; Hardware stack levels required when called:    4
 10449 ;; This function calls:
 10450 ;;		_EEPROM_24C1025_Write_Buffer
 10451 ;; This function is called by:
 10452 ;;		_Decodify_Command
 10453 ;; This function uses a non-reentrant model
 10454 ;;
 10455                           
 10456                           
 10457                           ;psect for function _EEPROM_24C1025_Write_Byte
 10458  19E3                     _EEPROM_24C1025_Write_Byte:	
 10459                           
 10460                           ;incstack = 0
 10461                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
 10462                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 10463  19E3  1283               	bcf	3,5	;RP0=0, select bank0
 10464  19E4  1303               	bcf	3,6	;RP1=0, select bank0
 10465  19E5  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 10466                           
 10467                           ;EEPROM_24C1025.c: 342:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 10468  19E6  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 10469  19E7  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10470  19E8  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 10471  19E9  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10472  19EA  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 10473  19EB  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10474  19EC  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 10475  19ED  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10476  19EE  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 10477  19EF  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 10478  19F0  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 10479  19F1  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 10480  19F2  3000               	movlw	0
 10481  19F3  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 10482  19F4  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 10483  19F5  160A  118A  23BA   	fcall	_EEPROM_24C1025_Write_Buffer
 10484  19F8  0008               	return
 10485  19F9                     __end_of_EEPROM_24C1025_Write_Byte:	
 10486                           
 10487                           	psect	text42
 10488  1524                     __ptext42:	
 10489 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10490 ;; Defined at:
 10491 ;;		line 275 in file "EEPROM_24C1025.c"
 10492 ;; Parameters:    Size  Location     Type
 10493 ;;  chip_add        1    wreg     unsigned char 
 10494 ;;  mem_add         4    9[BANK0 ] unsigned long 
 10495 ;;  buffer          1   13[BANK0 ] PTR unsigned char 
 10496 ;;		 -> buffer(33), 
 10497 ;; Auto vars:     Size  Location     Type
 10498 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10499 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10500 ;;  range           1   18[BANK0 ] unsigned char 
 10501 ;;  cnt             1   16[BANK0 ] unsigned char 
 10502 ;; Return value:  Size  Location     Type
 10503 ;;                  1    wreg      void 
 10504 ;; Registers used:
 10505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10506 ;; Tracked objects:
 10507 ;;		On entry : 300/300
 10508 ;;		On exit  : 0/0
 10509 ;;		Unchanged: 0/0
 10510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10511 ;;      Params:         0       5       0       0       0
 10512 ;;      Locals:         0       4       0       0       0
 10513 ;;      Temps:          0       2       0       0       0
 10514 ;;      Totals:         0      11       0       0       0
 10515 ;;Total ram usage:       11 bytes
 10516 ;; Hardware stack levels used:    1
 10517 ;; Hardware stack levels required when called:    3
 10518 ;; This function calls:
 10519 ;;		_I2C_Master_Read
 10520 ;;		_I2C_Master_RepeatedStart
 10521 ;;		_I2C_Master_Start
 10522 ;;		_I2C_Master_Stop
 10523 ;;		_I2C_Master_Write
 10524 ;; This function is called by:
 10525 ;;		_Decodify_Command
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           
 10530                           ;psect for function _EEPROM_24C1025_Read_Str
 10531  1524                     _EEPROM_24C1025_Read_Str:	
 10532                           
 10533                           ;incstack = 0
 10534                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10535                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10536  1524  1283               	bcf	3,5	;RP0=0, select bank0
 10537  1525  1303               	bcf	3,6	;RP1=0, select bank0
 10538  1526  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10539                           
 10540                           ;EEPROM_24C1025.c: 277:      unsigned char range=0;
 10541  1527  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10542                           
 10543                           ;EEPROM_24C1025.c: 278:      unsigned char ctrl;;EEPROM_24C1025.c: 280:      if(mem_add>
      +                          0x1FFFF) return;
 10544  1528  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10545  1529  1D03               	btfss	3,2
 10546  152A  0008               	return
 10547  152B  3002               	movlw	2
 10548  152C  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10549  152D  1D03               	skipz
 10550  152E  2D37               	goto	u6993
 10551  152F  3000               	movlw	0
 10552  1530  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10553  1531  1D03               	skipz
 10554  1532  2D37               	goto	u6993
 10555  1533  3000               	movlw	0
 10556  1534  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10557  1535  1D03               	skipz
 10558  1536  2D37               	goto	u6993
 10559  1537                     u6993:	
 10560  1537  1803               	btfsc	3,0
 10561  1538  0008               	return
 10562                           
 10563                           ;EEPROM_24C1025.c: 282:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10564  1539  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10565  153A  1D03               	btfss	3,2
 10566  153B  2D4A               	goto	l6604
 10567  153C  3001               	movlw	1
 10568  153D  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10569  153E  1D03               	skipz
 10570  153F  2D48               	goto	u7003
 10571  1540  3000               	movlw	0
 10572  1541  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10573  1542  1D03               	skipz
 10574  1543  2D48               	goto	u7003
 10575  1544  3000               	movlw	0
 10576  1545  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10577  1546  1D03               	skipz
 10578  1547  2D48               	goto	u7003
 10579  1548                     u7003:	
 10580  1548  1C03               	btfss	3,0
 10581  1549  2D4F               	goto	l6606
 10582  154A                     l6604:	
 10583  154A  3008               	movlw	8
 10584  154B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10585  154C  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10586  154D  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10587  154E  2D50               	goto	l6608
 10588  154F                     l6606:	
 10589  154F  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10590  1550                     l6608:	
 10591                           
 10592                           ;EEPROM_24C1025.c: 283:      ctrl=chip_add;
 10593  1550  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10594  1551  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10595  1552  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10596  1553  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10597                           
 10598                           ;EEPROM_24C1025.c: 284:      ctrl<<=1;
 10599  1554  1003               	clrc
 10600  1555  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10601                           
 10602                           ;EEPROM_24C1025.c: 285:      ctrl |= 0xA0;
 10603  1556  30A0               	movlw	160
 10604  1557  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10605  1558  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10606  1559  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10607                           
 10608                           ;EEPROM_24C1025.c: 286:      ctrl |= 0b00000001;
 10609  155A  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10610                           
 10611                           ;EEPROM_24C1025.c: 287:      ctrl |= range;
 10612  155B  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10613  155C  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10614  155D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10615  155E  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10616                           
 10617                           ;EEPROM_24C1025.c: 289:      I2C_Master_Start();
 10618  155F  160A  158A  21BD  160A  118A  	fcall	_I2C_Master_Start
 10619                           
 10620                           ;EEPROM_24C1025.c: 290:      I2C_Master_Write(ctrl & 0xFE);
 10621  1564  1283               	bcf	3,5	;RP0=0, select bank0
 10622  1565  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10623  1566  39FE               	andlw	254
 10624  1567  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10625  1568  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10626  1569  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10627  156A  00A3               	movwf	I2C_Master_Write@d
 10628  156B  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10629  156C  00A4               	movwf	I2C_Master_Write@d+1
 10630  156D  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 10631                           
 10632                           ;EEPROM_24C1025.c: 291:      I2C_Master_Write(((char *)&mem_add)[1]);
 10633  1572  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10634  1573  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10635  1574  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10636  1575  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10637  1576  00A3               	movwf	I2C_Master_Write@d
 10638  1577  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10639  1578  00A4               	movwf	I2C_Master_Write@d+1
 10640  1579  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 10641                           
 10642                           ;EEPROM_24C1025.c: 292:      I2C_Master_Write(((char *)&mem_add)[0]);
 10643  157E  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10644  157F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10645  1580  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10646  1581  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10647  1582  00A3               	movwf	I2C_Master_Write@d
 10648  1583  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10649  1584  00A4               	movwf	I2C_Master_Write@d+1
 10650  1585  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 10651                           
 10652                           ;EEPROM_24C1025.c: 293:      I2C_Master_RepeatedStart();
 10653  158A  160A  158A  21A2  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10654                           
 10655                           ;EEPROM_24C1025.c: 294:      I2C_Master_Write(ctrl);
 10656  158F  1283               	bcf	3,5	;RP0=0, select bank0
 10657  1590  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10658  1591  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10659  1592  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10660  1593  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10661  1594  00A3               	movwf	I2C_Master_Write@d
 10662  1595  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10663  1596  00A4               	movwf	I2C_Master_Write@d+1
 10664  1597  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 10665                           
 10666                           ;EEPROM_24C1025.c: 296:      cnt=0;
 10667  159C  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
 10668  159D                     l6630:	
 10669                           
 10670                           ;EEPROM_24C1025.c: 298:            if(mem_add>0x1FFFF) break;
 10671  159D  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10672  159E  1D03               	btfss	3,2
 10673  159F  2E79               	goto	l6686
 10674  15A0  3002               	movlw	2
 10675  15A1  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10676  15A2  1D03               	skipz
 10677  15A3  2DAC               	goto	u7013
 10678  15A4  3000               	movlw	0
 10679  15A5  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10680  15A6  1D03               	skipz
 10681  15A7  2DAC               	goto	u7013
 10682  15A8  3000               	movlw	0
 10683  15A9  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10684  15AA  1D03               	skipz
 10685  15AB  2DAC               	goto	u7013
 10686  15AC                     u7013:	
 10687  15AC  1803               	btfsc	3,0
 10688  15AD  2E79               	goto	l6686
 10689                           
 10690                           ;EEPROM_24C1025.c: 299:            if((mem_add+1)%128==0)
 10691  15AE  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10692  15AF  3E01               	addlw	1
 10693  15B0  397F               	andlw	127
 10694  15B1  1D03               	btfss	3,2
 10695  15B2  2E49               	goto	l6674
 10696                           
 10697                           ;EEPROM_24C1025.c: 300:              {;EEPROM_24C1025.c: 301:              (*buffer)=I2C
      +                          _Master_Read(0);
 10698  15B3  3000               	movlw	0
 10699  15B4  00A3               	movwf	I2C_Master_Read@a
 10700  15B5  00A4               	movwf	I2C_Master_Read@a+1
 10701  15B6  160A  158A  247F  160A  118A  	fcall	_I2C_Master_Read
 10702  15BB  0823               	movf	?_I2C_Master_Read,w
 10703  15BC  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10704  15BD  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10705  15BE  0084               	movwf	4
 10706  15BF  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10707  15C0  1383               	bcf	3,7	;select IRP bank0
 10708  15C1  0080               	movwf	0
 10709                           
 10710                           ;EEPROM_24C1025.c: 302:              I2C_Master_Stop();
 10711  15C2  160A  158A  2170  160A  118A  	fcall	_I2C_Master_Stop
 10712                           
 10713                           ;EEPROM_24C1025.c: 304:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10714  15C7  300D               	movlw	13
 10715  15C8  1283               	bcf	3,5	;RP0=0, select bank0
 10716  15C9  1303               	bcf	3,6	;RP1=0, select bank0
 10717  15CA  00AF               	movwf	??_EEPROM_24C1025_Read_Str+1
 10718  15CB  30FB               	movlw	251
 10719  15CC  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10720  15CD                     u7947:	
 10721  15CD  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10722  15CE  2DCD               	goto	u7947
 10723  15CF  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10724  15D0  2DCD               	goto	u7947
 10725                           
 10726                           ;EEPROM_24C1025.c: 305:              mem_add++;
 10727  15D1  3001               	movlw	1
 10728  15D2  1283               	bcf	3,5	;RP0=0, select bank0
 10729  15D3  1303               	bcf	3,6	;RP1=0, select bank0
 10730  15D4  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10731  15D5  3000               	movlw	0
 10732  15D6  1803               	skipnc
 10733  15D7  3001               	movlw	1
 10734  15D8  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10735  15D9  3000               	movlw	0
 10736  15DA  1803               	skipnc
 10737  15DB  3001               	movlw	1
 10738  15DC  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10739  15DD  3000               	movlw	0
 10740  15DE  1803               	skipnc
 10741  15DF  3001               	movlw	1
 10742  15E0  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10743                           
 10744                           ;EEPROM_24C1025.c: 306:              buffer++;
 10745  15E1  3001               	movlw	1
 10746  15E2  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10747  15E3  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10748  15E4  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10749                           
 10750                           ;EEPROM_24C1025.c: 307:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10751  15E5  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10752  15E6  1D03               	btfss	3,2
 10753  15E7  2DF6               	goto	l6648
 10754  15E8  3001               	movlw	1
 10755  15E9  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10756  15EA  1D03               	skipz
 10757  15EB  2DF4               	goto	u7033
 10758  15EC  3000               	movlw	0
 10759  15ED  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10760  15EE  1D03               	skipz
 10761  15EF  2DF4               	goto	u7033
 10762  15F0  3000               	movlw	0
 10763  15F1  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10764  15F2  1D03               	skipz
 10765  15F3  2DF4               	goto	u7033
 10766  15F4                     u7033:	
 10767  15F4  1C03               	btfss	3,0
 10768  15F5  2DFB               	goto	l6650
 10769  15F6                     l6648:	
 10770  15F6  3008               	movlw	8
 10771  15F7  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10772  15F8  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10773  15F9  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10774  15FA  2DFC               	goto	l6652
 10775  15FB                     l6650:	
 10776  15FB  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10777  15FC                     l6652:	
 10778                           
 10779                           ;EEPROM_24C1025.c: 308:              ctrl=chip_add;
 10780  15FC  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10781  15FD  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10782  15FE  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10783  15FF  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10784                           
 10785                           ;EEPROM_24C1025.c: 309:              ctrl<<=1;
 10786  1600  1003               	clrc
 10787  1601  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10788                           
 10789                           ;EEPROM_24C1025.c: 310:              ctrl |= 0xA0;
 10790  1602  30A0               	movlw	160
 10791  1603  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10792  1604  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10793  1605  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10794                           
 10795                           ;EEPROM_24C1025.c: 311:              ctrl |= 0b00000001;
 10796  1606  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10797                           
 10798                           ;EEPROM_24C1025.c: 312:              ctrl |= range;
 10799  1607  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10800  1608  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10801  1609  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10802  160A  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10803                           
 10804                           ;EEPROM_24C1025.c: 314:              I2C_Master_Start();
 10805  160B  160A  158A  21BD  160A  118A  	fcall	_I2C_Master_Start
 10806                           
 10807                           ;EEPROM_24C1025.c: 315:              I2C_Master_Write(ctrl & 0xFE);
 10808  1610  1283               	bcf	3,5	;RP0=0, select bank0
 10809  1611  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10810  1612  39FE               	andlw	254
 10811  1613  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10812  1614  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10813  1615  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10814  1616  00A3               	movwf	I2C_Master_Write@d
 10815  1617  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10816  1618  00A4               	movwf	I2C_Master_Write@d+1
 10817  1619  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 10818                           
 10819                           ;EEPROM_24C1025.c: 316:              I2C_Master_Write(((char *)&mem_add)[1]);
 10820  161E  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10821  161F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10822  1620  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10823  1621  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10824  1622  00A3               	movwf	I2C_Master_Write@d
 10825  1623  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10826  1624  00A4               	movwf	I2C_Master_Write@d+1
 10827  1625  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 10828                           
 10829                           ;EEPROM_24C1025.c: 317:              I2C_Master_Write(((char *)&mem_add)[0]);
 10830  162A  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10831  162B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10832  162C  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10833  162D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10834  162E  00A3               	movwf	I2C_Master_Write@d
 10835  162F  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10836  1630  00A4               	movwf	I2C_Master_Write@d+1
 10837  1631  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 10838                           
 10839                           ;EEPROM_24C1025.c: 318:              I2C_Master_RepeatedStart();
 10840  1636  160A  158A  21A2  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10841                           
 10842                           ;EEPROM_24C1025.c: 319:              I2C_Master_Write(ctrl);
 10843  163B  1283               	bcf	3,5	;RP0=0, select bank0
 10844  163C  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10845  163D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10846  163E  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10847  163F  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10848  1640  00A3               	movwf	I2C_Master_Write@d
 10849  1641  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10850  1642  00A4               	movwf	I2C_Master_Write@d+1
 10851  1643  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 10852                           
 10853                           ;EEPROM_24C1025.c: 320:              }
 10854  1648  2E70               	goto	l6684
 10855  1649                     l6674:	
 10856                           
 10857                           ;EEPROM_24C1025.c: 322:              {;EEPROM_24C1025.c: 323:              (*buffer)=I2C
      +                          _Master_Read(1);
 10858  1649  3001               	movlw	1
 10859  164A  00A3               	movwf	I2C_Master_Read@a
 10860  164B  3000               	movlw	0
 10861  164C  00A4               	movwf	I2C_Master_Read@a+1
 10862  164D  160A  158A  247F  160A  118A  	fcall	_I2C_Master_Read
 10863  1652  0823               	movf	?_I2C_Master_Read,w
 10864  1653  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10865  1654  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10866  1655  0084               	movwf	4
 10867  1656  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10868  1657  1383               	bcf	3,7	;select IRP bank0
 10869  1658  0080               	movwf	0
 10870                           
 10871                           ;EEPROM_24C1025.c: 324:              if((*buffer)==0)break;
 10872  1659  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10873  165A  0084               	movwf	4
 10874  165B  0800               	movf	0,w
 10875  165C  1903               	btfsc	3,2
 10876  165D  2E79               	goto	l6686
 10877                           
 10878                           ;EEPROM_24C1025.c: 325:              buffer++;
 10879  165E  3001               	movlw	1
 10880  165F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10881  1660  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10882  1661  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10883                           
 10884                           ;EEPROM_24C1025.c: 326:              mem_add++;
 10885  1662  3001               	movlw	1
 10886  1663  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10887  1664  3000               	movlw	0
 10888  1665  1803               	skipnc
 10889  1666  3001               	movlw	1
 10890  1667  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10891  1668  3000               	movlw	0
 10892  1669  1803               	skipnc
 10893  166A  3001               	movlw	1
 10894  166B  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10895  166C  3000               	movlw	0
 10896  166D  1803               	skipnc
 10897  166E  3001               	movlw	1
 10898  166F  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10899  1670                     l6684:	
 10900                           
 10901                           ;EEPROM_24C1025.c: 328:        }while((cnt++)<64);
 10902  1670  3001               	movlw	1
 10903  1671  07B0               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 10904  1672  30FF               	movlw	-1
 10905  1673  0730               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 10906  1674  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10907  1675  3040               	movlw	64
 10908  1676  022E               	subwf	??_EEPROM_24C1025_Read_Str,w
 10909  1677  1C03               	skipc
 10910  1678  2D9D               	goto	l6630
 10911  1679                     l6686:	
 10912                           
 10913                           ;EEPROM_24C1025.c: 330:      I2C_Master_Read(0);
 10914  1679  3000               	movlw	0
 10915  167A  00A3               	movwf	I2C_Master_Read@a
 10916  167B  00A4               	movwf	I2C_Master_Read@a+1
 10917  167C  160A  158A  247F  160A  118A  	fcall	_I2C_Master_Read
 10918                           
 10919                           ;EEPROM_24C1025.c: 331:      I2C_Master_Stop();
 10920  1681  160A  158A  2170  160A  118A  	fcall	_I2C_Master_Stop
 10921                           
 10922                           ;EEPROM_24C1025.c: 332:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 10923  1686  30B9               	movlw	185
 10924  1687  1283               	bcf	3,5	;RP0=0, select bank0
 10925  1688  1303               	bcf	3,6	;RP1=0, select bank0
 10926  1689  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10927  168A                     u7957:	
 10928  168A  2E8B               	nop2
 10929  168B  2E8C               	nop2
 10930  168C  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10931  168D  2E8A               	goto	u7957
 10932  168E  2E8F               	nop2
 10933  168F  0008               	return
 10934  1690                     __end_of_EEPROM_24C1025_Read_Str:	
 10935                           
 10936                           	psect	text43
 10937  1B99                     __ptext43:	
 10938 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 10939 ;; Defined at:
 10940 ;;		line 360 in file "EEPROM_24C1025.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;  chip_add        1    wreg     unsigned char 
 10943 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10944 ;; Auto vars:     Size  Location     Type
 10945 ;;  chip_add        1   29[BANK0 ] unsigned char 
 10946 ;;  data            2   30[BANK0 ] unsigned char [2]
 10947 ;; Return value:  Size  Location     Type
 10948 ;;                  2   23[BANK0 ] unsigned int 
 10949 ;; Registers used:
 10950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10951 ;; Tracked objects:
 10952 ;;		On entry : 300/300
 10953 ;;		On exit  : 300/0
 10954 ;;		Unchanged: 0/0
 10955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10956 ;;      Params:         0       4       0       0       0
 10957 ;;      Locals:         0       3       0       0       0
 10958 ;;      Temps:          0       2       0       0       0
 10959 ;;      Totals:         0       9       0       0       0
 10960 ;;Total ram usage:        9 bytes
 10961 ;; Hardware stack levels used:    1
 10962 ;; Hardware stack levels required when called:    4
 10963 ;; This function calls:
 10964 ;;		_EEPROM_24C1025_Read_Buffer
 10965 ;; This function is called by:
 10966 ;;		_Decodify_Command
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           
 10971                           ;psect for function _EEPROM_24C1025_Read_Int
 10972  1B99                     _EEPROM_24C1025_Read_Int:	
 10973                           
 10974                           ;incstack = 0
 10975                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10976                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 10977  1B99  1283               	bcf	3,5	;RP0=0, select bank0
 10978  1B9A  1303               	bcf	3,6	;RP1=0, select bank0
 10979  1B9B  00BD               	movwf	EEPROM_24C1025_Read_Int@chip_add
 10980                           
 10981                           ;EEPROM_24C1025.c: 361:     char data[2];;EEPROM_24C1025.c: 362:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 10982  1B9C  083A               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 10983  1B9D  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10984  1B9E  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 10985  1B9F  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10986  1BA0  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 10987  1BA1  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10988  1BA2  0837               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 10989  1BA3  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10990  1BA4  3002               	movlw	2
 10991  1BA5  00BB               	movwf	??_EEPROM_24C1025_Read_Int
 10992  1BA6  083B               	movf	??_EEPROM_24C1025_Read_Int,w
 10993  1BA7  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 10994  1BA8  303E               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 10995  1BA9  00BC               	movwf	??_EEPROM_24C1025_Read_Int+1
 10996  1BAA  083C               	movf	??_EEPROM_24C1025_Read_Int+1,w
 10997  1BAB  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10998  1BAC  083D               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 10999  1BAD  120A  158A  202B   	fcall	_EEPROM_24C1025_Read_Buffer
 11000                           
 11001                           ;EEPROM_24C1025.c: 363:     return (data[0]<<8)+data[1];
 11002  1BB0  1283               	bcf	3,5	;RP0=0, select bank0
 11003  1BB1  1303               	bcf	3,6	;RP1=0, select bank0
 11004  1BB2  083E               	movf	EEPROM_24C1025_Read_Int@data,w
 11005  1BB3  00BB               	movwf	??_EEPROM_24C1025_Read_Int
 11006  1BB4  01BC               	clrf	??_EEPROM_24C1025_Read_Int+1
 11007  1BB5  083B               	movf	??_EEPROM_24C1025_Read_Int,w
 11008  1BB6  00BC               	movwf	??_EEPROM_24C1025_Read_Int+1
 11009  1BB7  01BB               	clrf	??_EEPROM_24C1025_Read_Int
 11010  1BB8  083F               	movf	EEPROM_24C1025_Read_Int@data+1,w
 11011  1BB9  073B               	addwf	??_EEPROM_24C1025_Read_Int,w
 11012  1BBA  00B7               	movwf	?_EEPROM_24C1025_Read_Int
 11013  1BBB  3000               	movlw	0
 11014  1BBC  1803               	skipnc
 11015  1BBD  3001               	movlw	1
 11016  1BBE  073C               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 11017  1BBF  00B8               	movwf	?_EEPROM_24C1025_Read_Int+1
 11018  1BC0  0008               	return
 11019  1BC1                     __end_of_EEPROM_24C1025_Read_Int:	
 11020                           
 11021                           	psect	text44
 11022  1A0F                     __ptext44:	
 11023 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 11024 ;; Defined at:
 11025 ;;		line 346 in file "EEPROM_24C1025.c"
 11026 ;; Parameters:    Size  Location     Type
 11027 ;;  chip_add        1    wreg     unsigned char 
 11028 ;;  mem_add         4   23[BANK0 ] unsigned long 
 11029 ;; Auto vars:     Size  Location     Type
 11030 ;;  chip_add        1   28[BANK0 ] unsigned char 
 11031 ;;  data            1   29[BANK0 ] unsigned char 
 11032 ;; Return value:  Size  Location     Type
 11033 ;;                  1    wreg      unsigned char 
 11034 ;; Registers used:
 11035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11036 ;; Tracked objects:
 11037 ;;		On entry : 300/300
 11038 ;;		On exit  : 300/0
 11039 ;;		Unchanged: 0/0
 11040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11041 ;;      Params:         0       4       0       0       0
 11042 ;;      Locals:         0       2       0       0       0
 11043 ;;      Temps:          0       1       0       0       0
 11044 ;;      Totals:         0       7       0       0       0
 11045 ;;Total ram usage:        7 bytes
 11046 ;; Hardware stack levels used:    1
 11047 ;; Hardware stack levels required when called:    4
 11048 ;; This function calls:
 11049 ;;		_EEPROM_24C1025_Read_Buffer
 11050 ;; This function is called by:
 11051 ;;		_Decodify_Command
 11052 ;; This function uses a non-reentrant model
 11053 ;;
 11054                           
 11055                           
 11056                           ;psect for function _EEPROM_24C1025_Read_Byte
 11057  1A0F                     _EEPROM_24C1025_Read_Byte:	
 11058                           
 11059                           ;incstack = 0
 11060                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11061                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 11062  1A0F  1283               	bcf	3,5	;RP0=0, select bank0
 11063  1A10  1303               	bcf	3,6	;RP1=0, select bank0
 11064  1A11  00BC               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 11065                           
 11066                           ;EEPROM_24C1025.c: 347:     char data;;EEPROM_24C1025.c: 348:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 11067  1A12  083A               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 11068  1A13  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11069  1A14  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 11070  1A15  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11071  1A16  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 11072  1A17  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11073  1A18  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 11074  1A19  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11075  1A1A  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 11076  1A1B  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 11077  1A1C  303D               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 11078  1A1D  00BB               	movwf	??_EEPROM_24C1025_Read_Byte
 11079  1A1E  083B               	movf	??_EEPROM_24C1025_Read_Byte,w
 11080  1A1F  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11081  1A20  083C               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 11082  1A21  120A  158A  202B   	fcall	_EEPROM_24C1025_Read_Buffer
 11083                           
 11084                           ;EEPROM_24C1025.c: 349:     return data;
 11085  1A24  1283               	bcf	3,5	;RP0=0, select bank0
 11086  1A25  1303               	bcf	3,6	;RP1=0, select bank0
 11087  1A26  083D               	movf	EEPROM_24C1025_Read_Byte@data,w
 11088  1A27  0008               	return
 11089  1A28                     __end_of_EEPROM_24C1025_Read_Byte:	
 11090                           
 11091                           	psect	text45
 11092  082B                     __ptext45:	
 11093 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 11094 ;; Defined at:
 11095 ;;		line 77 in file "EEPROM_24C1025.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;  chip_add        1    wreg     unsigned char 
 11098 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11099 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11100 ;;  data            1   15[BANK0 ] PTR unsigned char 
 11101 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 11102 ;; Auto vars:     Size  Location     Type
 11103 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11104 ;;  cnt             1   19[BANK0 ] unsigned char 
 11105 ;;  ctrl            1   22[BANK0 ] unsigned char 
 11106 ;;  range           1   21[BANK0 ] unsigned char 
 11107 ;;  cnt             1    0        unsigned char 
 11108 ;; Return value:  Size  Location     Type
 11109 ;;                  1    wreg      void 
 11110 ;; Registers used:
 11111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11112 ;; Tracked objects:
 11113 ;;		On entry : 300/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11117 ;;      Params:         0       6       0       0       0
 11118 ;;      Locals:         0       5       0       0       0
 11119 ;;      Temps:          0       2       0       0       0
 11120 ;;      Totals:         0      13       0       0       0
 11121 ;;Total ram usage:       13 bytes
 11122 ;; Hardware stack levels used:    1
 11123 ;; Hardware stack levels required when called:    3
 11124 ;; This function calls:
 11125 ;;		_I2C_Master_Read
 11126 ;;		_I2C_Master_RepeatedStart
 11127 ;;		_I2C_Master_Start
 11128 ;;		_I2C_Master_Stop
 11129 ;;		_I2C_Master_Write
 11130 ;;		_my_delay_ms_WDT
 11131 ;; This function is called by:
 11132 ;;		_EEPROM_24C1025_Read_Byte
 11133 ;;		_EEPROM_24C1025_Read_Int
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           
 11138                           ;psect for function _EEPROM_24C1025_Read_Buffer
 11139  082B                     _EEPROM_24C1025_Read_Buffer:	
 11140                           
 11141                           ;incstack = 0
 11142                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 11143                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 11144  082B  00B4               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 11145                           
 11146                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 11147  082C  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11148                           
 11149                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 11150  082D  3014               	movlw	20
 11151  082E  1683               	bsf	3,5	;RP0=1, select bank1
 11152  082F  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11153  0830  3000               	movlw	0
 11154  0831  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11155                           
 11156                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 11157  0832  1283               	bcf	3,5	;RP0=0, select bank0
 11158  0833  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11159  0834  1D03               	btfss	3,2
 11160  0835  0008               	return
 11161  0836  3002               	movlw	2
 11162  0837  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11163  0838  1D03               	skipz
 11164  0839  2842               	goto	u5583
 11165  083A  3000               	movlw	0
 11166  083B  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11167  083C  1D03               	skipz
 11168  083D  2842               	goto	u5583
 11169  083E  3000               	movlw	0
 11170  083F  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11171  0840  1D03               	skipz
 11172  0841  2842               	goto	u5583
 11173  0842                     u5583:	
 11174  0842  1803               	btfsc	3,0
 11175  0843  0008               	return
 11176                           
 11177                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11178  0844  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11179  0845  1D03               	btfss	3,2
 11180  0846  2855               	goto	l5798
 11181  0847  3001               	movlw	1
 11182  0848  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11183  0849  1D03               	skipz
 11184  084A  2853               	goto	u5593
 11185  084B  3000               	movlw	0
 11186  084C  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11187  084D  1D03               	skipz
 11188  084E  2853               	goto	u5593
 11189  084F  3000               	movlw	0
 11190  0850  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11191  0851  1D03               	skipz
 11192  0852  2853               	goto	u5593
 11193  0853                     u5593:	
 11194  0853  1C03               	btfss	3,0
 11195  0854  285A               	goto	l5800
 11196  0855                     l5798:	
 11197  0855  3008               	movlw	8
 11198  0856  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11199  0857  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11200  0858  00B5               	movwf	EEPROM_24C1025_Read_Buffer@range
 11201  0859  285B               	goto	l5802
 11202  085A                     l5800:	
 11203  085A  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11204  085B                     l5802:	
 11205                           
 11206                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 11207  085B  0834               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11208  085C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11209  085D  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11210  085E  00B6               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11211                           
 11212                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 11213  085F  1003               	clrc
 11214  0860  0DB6               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11215                           
 11216                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 11217  0861  30A0               	movlw	160
 11218  0862  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11219  0863  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11220  0864  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11221                           
 11222                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 11223  0865  1436               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11224                           
 11225                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 11226  0866  0835               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11227  0867  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11228  0868  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11229  0869  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11230                           
 11231                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 11232  086A  160A  158A  21BD  120A  158A  	fcall	_I2C_Master_Start
 11233                           
 11234                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 11235  086F  1283               	bcf	3,5	;RP0=0, select bank0
 11236  0870  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11237  0871  39FE               	andlw	254
 11238  0872  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11239  0873  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11240  0874  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11241  0875  00A3               	movwf	I2C_Master_Write@d
 11242  0876  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11243  0877  00A4               	movwf	I2C_Master_Write@d+1
 11244  0878  160A  158A  2197  120A  158A  	fcall	_I2C_Master_Write
 11245                           
 11246                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 11247  087D  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11248  087E  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11249  087F  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11250  0880  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11251  0881  00A3               	movwf	I2C_Master_Write@d
 11252  0882  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11253  0883  00A4               	movwf	I2C_Master_Write@d+1
 11254  0884  160A  158A  2197  120A  158A  	fcall	_I2C_Master_Write
 11255                           
 11256                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 11257  0889  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11258  088A  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11259  088B  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11260  088C  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11261  088D  00A3               	movwf	I2C_Master_Write@d
 11262  088E  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11263  088F  00A4               	movwf	I2C_Master_Write@d+1
 11264  0890  160A  158A  2197  120A  158A  	fcall	_I2C_Master_Write
 11265                           
 11266                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 11267  0895  160A  158A  21A2  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11268                           
 11269                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 11270  089A  1283               	bcf	3,5	;RP0=0, select bank0
 11271  089B  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11272  089C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11273  089D  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11274  089E  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11275  089F  00A3               	movwf	I2C_Master_Write@d
 11276  08A0  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11277  08A1  00A4               	movwf	I2C_Master_Write@d+1
 11278  08A2  160A  158A  2197  120A  158A  	fcall	_I2C_Master_Write
 11279                           
 11280                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 11281  08A7  01B3               	clrf	EEPROM_24C1025_Read_Buffer@cnt_108
 11282  08A8                     l5876:	
 11283  08A8  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 11284  08A9  0233               	subwf	EEPROM_24C1025_Read_Buffer@cnt_108,w
 11285  08AA  1803               	btfsc	3,0
 11286  08AB  2984               	goto	l5878
 11287  08AC  0064               	clrwdt	;# 
 11288                           
 11289                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 11290  08AD  1283               	bcf	3,5	;RP0=0, select bank0
 11291  08AE  1303               	bcf	3,6	;RP1=0, select bank0
 11292  08AF  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11293  08B0  1D03               	btfss	3,2
 11294  08B1  2984               	goto	l5878
 11295  08B2  3002               	movlw	2
 11296  08B3  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11297  08B4  1D03               	skipz
 11298  08B5  28BE               	goto	u5603
 11299  08B6  3000               	movlw	0
 11300  08B7  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11301  08B8  1D03               	skipz
 11302  08B9  28BE               	goto	u5603
 11303  08BA  3000               	movlw	0
 11304  08BB  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11305  08BC  1D03               	skipz
 11306  08BD  28BE               	goto	u5603
 11307  08BE                     u5603:	
 11308  08BE  1803               	btfsc	3,0
 11309  08BF  2984               	goto	l5878
 11310                           
 11311                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 11312  08C0  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11313  08C1  3E01               	addlw	1
 11314  08C2  397F               	andlw	127
 11315  08C3  1D03               	btfss	3,2
 11316  08C4  295D               	goto	l5868
 11317                           
 11318                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 11319  08C5  3000               	movlw	0
 11320  08C6  00A3               	movwf	I2C_Master_Read@a
 11321  08C7  00A4               	movwf	I2C_Master_Read@a+1
 11322  08C8  160A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
 11323  08CD  0823               	movf	?_I2C_Master_Read,w
 11324  08CE  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11325  08CF  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11326  08D0  0084               	movwf	4
 11327  08D1  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11328  08D2  1383               	bcf	3,7	;select IRP bank0
 11329  08D3  0080               	movwf	0
 11330                           
 11331                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 11332  08D4  160A  158A  2170  120A  158A  	fcall	_I2C_Master_Stop
 11333                           
 11334                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 11335  08D9  3000               	movlw	0
 11336  08DA  1283               	bcf	3,5	;RP0=0, select bank0
 11337  08DB  00A3               	movwf	my_delay_ms_WDT@time+3
 11338  08DC  3000               	movlw	0
 11339  08DD  00A2               	movwf	my_delay_ms_WDT@time+2
 11340  08DE  3000               	movlw	0
 11341  08DF  00A1               	movwf	my_delay_ms_WDT@time+1
 11342  08E0  3005               	movlw	5
 11343  08E1  00A0               	movwf	my_delay_ms_WDT@time
 11344  08E2  160A  158A  24EB  120A  158A  	fcall	_my_delay_ms_WDT
 11345                           
 11346                           ;EEPROM_24C1025.c: 114:              mem_add++;
 11347  08E7  3001               	movlw	1
 11348  08E8  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11349  08E9  3000               	movlw	0
 11350  08EA  1803               	skipnc
 11351  08EB  3001               	movlw	1
 11352  08EC  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11353  08ED  3000               	movlw	0
 11354  08EE  1803               	skipnc
 11355  08EF  3001               	movlw	1
 11356  08F0  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11357  08F1  3000               	movlw	0
 11358  08F2  1803               	skipnc
 11359  08F3  3001               	movlw	1
 11360  08F4  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11361                           
 11362                           ;EEPROM_24C1025.c: 115:              data++;
 11363  08F5  3001               	movlw	1
 11364  08F6  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11365  08F7  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11366  08F8  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11367                           
 11368                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11369  08F9  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11370  08FA  1D03               	btfss	3,2
 11371  08FB  290A               	goto	l5842
 11372  08FC  3001               	movlw	1
 11373  08FD  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11374  08FE  1D03               	skipz
 11375  08FF  2908               	goto	u5623
 11376  0900  3000               	movlw	0
 11377  0901  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11378  0902  1D03               	skipz
 11379  0903  2908               	goto	u5623
 11380  0904  3000               	movlw	0
 11381  0905  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11382  0906  1D03               	skipz
 11383  0907  2908               	goto	u5623
 11384  0908                     u5623:	
 11385  0908  1C03               	btfss	3,0
 11386  0909  290F               	goto	l5844
 11387  090A                     l5842:	
 11388  090A  3008               	movlw	8
 11389  090B  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11390  090C  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11391  090D  00B5               	movwf	EEPROM_24C1025_Read_Buffer@range
 11392  090E  2910               	goto	l5846
 11393  090F                     l5844:	
 11394  090F  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11395  0910                     l5846:	
 11396                           
 11397                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 11398  0910  0834               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11399  0911  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11400  0912  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11401  0913  00B6               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11402                           
 11403                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 11404  0914  1003               	clrc
 11405  0915  0DB6               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11406                           
 11407                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 11408  0916  30A0               	movlw	160
 11409  0917  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11410  0918  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11411  0919  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11412                           
 11413                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 11414  091A  1436               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11415                           
 11416                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 11417  091B  0835               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11418  091C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11419  091D  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11420  091E  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11421                           
 11422                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 11423  091F  160A  158A  21BD  120A  158A  	fcall	_I2C_Master_Start
 11424                           
 11425                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 11426  0924  1283               	bcf	3,5	;RP0=0, select bank0
 11427  0925  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11428  0926  39FE               	andlw	254
 11429  0927  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11430  0928  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11431  0929  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11432  092A  00A3               	movwf	I2C_Master_Write@d
 11433  092B  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11434  092C  00A4               	movwf	I2C_Master_Write@d+1
 11435  092D  160A  158A  2197  120A  158A  	fcall	_I2C_Master_Write
 11436                           
 11437                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 11438  0932  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11439  0933  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11440  0934  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11441  0935  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11442  0936  00A3               	movwf	I2C_Master_Write@d
 11443  0937  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11444  0938  00A4               	movwf	I2C_Master_Write@d+1
 11445  0939  160A  158A  2197  120A  158A  	fcall	_I2C_Master_Write
 11446                           
 11447                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 11448  093E  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11449  093F  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11450  0940  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11451  0941  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11452  0942  00A3               	movwf	I2C_Master_Write@d
 11453  0943  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11454  0944  00A4               	movwf	I2C_Master_Write@d+1
 11455  0945  160A  158A  2197  120A  158A  	fcall	_I2C_Master_Write
 11456                           
 11457                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 11458  094A  160A  158A  21A2  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11459                           
 11460                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 11461  094F  1283               	bcf	3,5	;RP0=0, select bank0
 11462  0950  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11463  0951  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11464  0952  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11465  0953  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11466  0954  00A3               	movwf	I2C_Master_Write@d
 11467  0955  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11468  0956  00A4               	movwf	I2C_Master_Write@d+1
 11469  0957  160A  158A  2197  120A  158A  	fcall	_I2C_Master_Write
 11470                           
 11471                           ;EEPROM_24C1025.c: 129:              }
 11472  095C  297F               	goto	l5874
 11473  095D                     l5868:	
 11474                           
 11475                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 11476  095D  3001               	movlw	1
 11477  095E  00A3               	movwf	I2C_Master_Read@a
 11478  095F  3000               	movlw	0
 11479  0960  00A4               	movwf	I2C_Master_Read@a+1
 11480  0961  160A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
 11481  0966  0823               	movf	?_I2C_Master_Read,w
 11482  0967  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11483  0968  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11484  0969  0084               	movwf	4
 11485  096A  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11486  096B  1383               	bcf	3,7	;select IRP bank0
 11487  096C  0080               	movwf	0
 11488                           
 11489                           ;EEPROM_24C1025.c: 133:              data++;
 11490  096D  3001               	movlw	1
 11491  096E  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11492  096F  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11493  0970  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11494                           
 11495                           ;EEPROM_24C1025.c: 134:              mem_add++;
 11496  0971  3001               	movlw	1
 11497  0972  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11498  0973  3000               	movlw	0
 11499  0974  1803               	skipnc
 11500  0975  3001               	movlw	1
 11501  0976  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11502  0977  3000               	movlw	0
 11503  0978  1803               	skipnc
 11504  0979  3001               	movlw	1
 11505  097A  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11506  097B  3000               	movlw	0
 11507  097C  1803               	skipnc
 11508  097D  3001               	movlw	1
 11509  097E  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11510  097F                     l5874:	
 11511                           
 11512                           ;EEPROM_24C1025.c: 136:         }
 11513  097F  3001               	movlw	1
 11514  0980  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11515  0981  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11516  0982  07B3               	addwf	EEPROM_24C1025_Read_Buffer@cnt_108,f
 11517  0983  28A8               	goto	l5876
 11518  0984                     l5878:	
 11519                           
 11520                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 11521  0984  3000               	movlw	0
 11522  0985  00A3               	movwf	I2C_Master_Read@a
 11523  0986  00A4               	movwf	I2C_Master_Read@a+1
 11524  0987  160A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
 11525                           
 11526                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 11527  098C  160A  158A  2170  120A  158A  	fcall	_I2C_Master_Stop
 11528                           
 11529                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11530  0991  30B9               	movlw	185
 11531  0992  1283               	bcf	3,5	;RP0=0, select bank0
 11532  0993  1303               	bcf	3,6	;RP1=0, select bank0
 11533  0994  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11534  0995                     u7967:	
 11535  0995  2996               	nop2
 11536  0996  2997               	nop2
 11537  0997  0BB0               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11538  0998  2995               	goto	u7967
 11539  0999  299A               	nop2
 11540  099A  0008               	return
 11541  099B                     __end_of_EEPROM_24C1025_Read_Buffer:	
 11542                           
 11543                           	psect	text46
 11544  1690                     __ptext46:	
 11545 ;; *************** function _EEPROM_24C1025_Read_Buffer_USART *****************
 11546 ;; Defined at:
 11547 ;;		line 148 in file "EEPROM_24C1025.c"
 11548 ;; Parameters:    Size  Location     Type
 11549 ;;  chip_add        1    wreg     unsigned char 
 11550 ;;  mem_add         4    9[BANK0 ] unsigned long 
 11551 ;;  sizedata        1   13[BANK0 ] unsigned char 
 11552 ;;  data            1   14[BANK0 ] PTR unsigned char 
 11553 ;;		 -> buffer(33), 
 11554 ;; Auto vars:     Size  Location     Type
 11555 ;;  chip_add        1   19[BANK0 ] unsigned char 
 11556 ;;  cnt             1   18[BANK0 ] unsigned char 
 11557 ;;  ctrl            1   21[BANK0 ] unsigned char 
 11558 ;;  range           1   20[BANK0 ] unsigned char 
 11559 ;;  cnt             1    0        unsigned char 
 11560 ;; Return value:  Size  Location     Type
 11561 ;;                  1    wreg      void 
 11562 ;; Registers used:
 11563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11564 ;; Tracked objects:
 11565 ;;		On entry : 300/300
 11566 ;;		On exit  : 0/0
 11567 ;;		Unchanged: 0/0
 11568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11569 ;;      Params:         0       6       0       0       0
 11570 ;;      Locals:         0       5       0       0       0
 11571 ;;      Temps:          0       2       0       0       0
 11572 ;;      Totals:         0      13       0       0       0
 11573 ;;Total ram usage:       13 bytes
 11574 ;; Hardware stack levels used:    1
 11575 ;; Hardware stack levels required when called:    3
 11576 ;; This function calls:
 11577 ;;		_I2C_Master_Read
 11578 ;;		_I2C_Master_RepeatedStart
 11579 ;;		_I2C_Master_Start
 11580 ;;		_I2C_Master_Stop
 11581 ;;		_I2C_Master_Write
 11582 ;;		_USART_putc
 11583 ;; This function is called by:
 11584 ;;		_Decodify_Command
 11585 ;; This function uses a non-reentrant model
 11586 ;;
 11587                           
 11588                           
 11589                           ;psect for function _EEPROM_24C1025_Read_Buffer_USART
 11590  1690                     _EEPROM_24C1025_Read_Buffer_USART:	
 11591                           
 11592                           ;incstack = 0
 11593                           ; Regs used in _EEPROM_24C1025_Read_Buffer_USART: [wreg-fsr0h+status,2+status,0+pclath+c
      +                          stack]
 11594                           ;EEPROM_24C1025_Read_Buffer_USART@chip_add stored from wreg
 11595  1690  1283               	bcf	3,5	;RP0=0, select bank0
 11596  1691  1303               	bcf	3,6	;RP1=0, select bank0
 11597  1692  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@chip_add
 11598                           
 11599                           ;EEPROM_24C1025.c: 154:      unsigned char range=0;
 11600  1693  01B4               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11601                           
 11602                           ;EEPROM_24C1025.c: 155:      unsigned char ctrl;;EEPROM_24C1025.c: 157:      Delay_Led_M
      +                          emory=20;
 11603  1694  3014               	movlw	20
 11604  1695  1683               	bsf	3,5	;RP0=1, select bank1
 11605  1696  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11606  1697  3000               	movlw	0
 11607  1698  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11608                           
 11609                           ;EEPROM_24C1025.c: 159:      if(mem_add>0x1FFFF) return;
 11610  1699  1283               	bcf	3,5	;RP0=0, select bank0
 11611  169A  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11612  169B  1D03               	btfss	3,2
 11613  169C  0008               	return
 11614  169D  3002               	movlw	2
 11615  169E  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11616  169F  1D03               	skipz
 11617  16A0  2EA9               	goto	u6873
 11618  16A1  3000               	movlw	0
 11619  16A2  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11620  16A3  1D03               	skipz
 11621  16A4  2EA9               	goto	u6873
 11622  16A5  3000               	movlw	0
 11623  16A6  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11624  16A7  1D03               	skipz
 11625  16A8  2EA9               	goto	u6873
 11626  16A9                     u6873:	
 11627  16A9  1803               	btfsc	3,0
 11628  16AA  0008               	return
 11629                           
 11630                           ;EEPROM_24C1025.c: 161:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11631  16AB  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11632  16AC  1D03               	btfss	3,2
 11633  16AD  2EBC               	goto	l6438
 11634  16AE  3001               	movlw	1
 11635  16AF  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11636  16B0  1D03               	skipz
 11637  16B1  2EBA               	goto	u6883
 11638  16B2  3000               	movlw	0
 11639  16B3  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11640  16B4  1D03               	skipz
 11641  16B5  2EBA               	goto	u6883
 11642  16B6  3000               	movlw	0
 11643  16B7  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11644  16B8  1D03               	skipz
 11645  16B9  2EBA               	goto	u6883
 11646  16BA                     u6883:	
 11647  16BA  1C03               	btfss	3,0
 11648  16BB  2EC1               	goto	l6440
 11649  16BC                     l6438:	
 11650  16BC  3008               	movlw	8
 11651  16BD  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11652  16BE  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11653  16BF  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11654  16C0  2EC2               	goto	l6442
 11655  16C1                     l6440:	
 11656  16C1  01B4               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11657  16C2                     l6442:	
 11658                           
 11659                           ;EEPROM_24C1025.c: 162:      ctrl=chip_add;
 11660  16C2  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11661  16C3  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11662  16C4  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11663  16C5  00B5               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11664                           
 11665                           ;EEPROM_24C1025.c: 163:      ctrl<<=1;
 11666  16C6  1003               	clrc
 11667  16C7  0DB5               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11668                           
 11669                           ;EEPROM_24C1025.c: 164:      ctrl |= 0xA0;
 11670  16C8  30A0               	movlw	160
 11671  16C9  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11672  16CA  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11673  16CB  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11674                           
 11675                           ;EEPROM_24C1025.c: 165:      ctrl |= 0b00000001;
 11676  16CC  1435               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11677                           
 11678                           ;EEPROM_24C1025.c: 166:      ctrl |= range;
 11679  16CD  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11680  16CE  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11681  16CF  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11682  16D0  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11683                           
 11684                           ;EEPROM_24C1025.c: 168:      I2C_Master_Start();
 11685  16D1  160A  158A  21BD  160A  118A  	fcall	_I2C_Master_Start
 11686                           
 11687                           ;EEPROM_24C1025.c: 169:      I2C_Master_Write(ctrl & 0xFE);
 11688  16D6  1283               	bcf	3,5	;RP0=0, select bank0
 11689  16D7  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11690  16D8  39FE               	andlw	254
 11691  16D9  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11692  16DA  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11693  16DB  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11694  16DC  00A3               	movwf	I2C_Master_Write@d
 11695  16DD  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11696  16DE  00A4               	movwf	I2C_Master_Write@d+1
 11697  16DF  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 11698                           
 11699                           ;EEPROM_24C1025.c: 170:      I2C_Master_Write(((char *)&mem_add)[1]);
 11700  16E4  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11701  16E5  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11702  16E6  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11703  16E7  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11704  16E8  00A3               	movwf	I2C_Master_Write@d
 11705  16E9  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11706  16EA  00A4               	movwf	I2C_Master_Write@d+1
 11707  16EB  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 11708                           
 11709                           ;EEPROM_24C1025.c: 171:      I2C_Master_Write(((char *)&mem_add)[0]);
 11710  16F0  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11711  16F1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11712  16F2  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11713  16F3  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11714  16F4  00A3               	movwf	I2C_Master_Write@d
 11715  16F5  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11716  16F6  00A4               	movwf	I2C_Master_Write@d+1
 11717  16F7  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 11718                           
 11719                           ;EEPROM_24C1025.c: 172:      I2C_Master_RepeatedStart();
 11720  16FC  160A  158A  21A2  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11721                           
 11722                           ;EEPROM_24C1025.c: 173:      I2C_Master_Write(ctrl);
 11723  1701  1283               	bcf	3,5	;RP0=0, select bank0
 11724  1702  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11725  1703  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11726  1704  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11727  1705  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11728  1706  00A3               	movwf	I2C_Master_Write@d
 11729  1707  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11730  1708  00A4               	movwf	I2C_Master_Write@d+1
 11731  1709  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 11732                           
 11733                           ;EEPROM_24C1025.c: 175:      for(char cnt=0;cnt<(sizedata);cnt++)
 11734  170E  01B2               	clrf	EEPROM_24C1025_Read_Buffer_USART@cnt_117
 11735  170F                     l6512:	
 11736  170F  082D               	movf	EEPROM_24C1025_Read_Buffer_USART@sizedata,w
 11737  1710  0232               	subwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,w
 11738  1711  1803               	btfsc	3,0
 11739  1712  2FE9               	goto	l6514
 11740  1713  0064               	clrwdt	;# 
 11741                           
 11742                           ;EEPROM_24C1025.c: 178:            if(mem_add>0x1FFFF) break;
 11743  1714  1283               	bcf	3,5	;RP0=0, select bank0
 11744  1715  1303               	bcf	3,6	;RP1=0, select bank0
 11745  1716  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11746  1717  1D03               	btfss	3,2
 11747  1718  2FE9               	goto	l6514
 11748  1719  3002               	movlw	2
 11749  171A  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11750  171B  1D03               	skipz
 11751  171C  2F25               	goto	u6893
 11752  171D  3000               	movlw	0
 11753  171E  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11754  171F  1D03               	skipz
 11755  1720  2F25               	goto	u6893
 11756  1721  3000               	movlw	0
 11757  1722  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11758  1723  1D03               	skipz
 11759  1724  2F25               	goto	u6893
 11760  1725                     u6893:	
 11761  1725  1803               	btfsc	3,0
 11762  1726  2FE9               	goto	l6514
 11763                           
 11764                           ;EEPROM_24C1025.c: 179:            if((mem_add+1)%128==0)
 11765  1727  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11766  1728  3E01               	addlw	1
 11767  1729  397F               	andlw	127
 11768  172A  1D03               	btfss	3,2
 11769  172B  2FBD               	goto	l6506
 11770                           
 11771                           ;EEPROM_24C1025.c: 180:              {;EEPROM_24C1025.c: 181:              (*data)=I2C_M
      +                          aster_Read(0);
 11772  172C  3000               	movlw	0
 11773  172D  00A3               	movwf	I2C_Master_Read@a
 11774  172E  00A4               	movwf	I2C_Master_Read@a+1
 11775  172F  160A  158A  247F  160A  118A  	fcall	_I2C_Master_Read
 11776  1734  0823               	movf	?_I2C_Master_Read,w
 11777  1735  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11778  1736  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11779  1737  0084               	movwf	4
 11780  1738  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11781  1739  1383               	bcf	3,7	;select IRP bank0
 11782  173A  0080               	movwf	0
 11783                           
 11784                           ;EEPROM_24C1025.c: 182:              I2C_Master_Stop();
 11785  173B  160A  158A  2170  160A  118A  	fcall	_I2C_Master_Stop
 11786                           
 11787                           ;EEPROM_24C1025.c: 183:              USART_putc(*data);
 11788  1740  1283               	bcf	3,5	;RP0=0, select bank0
 11789  1741  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11790  1742  0084               	movwf	4
 11791  1743  1383               	bcf	3,7	;select IRP bank0
 11792  1744  0800               	movf	0,w
 11793  1745  160A  158A  21AD  160A  118A  	fcall	_USART_putc
 11794                           
 11795                           ;EEPROM_24C1025.c: 186:              mem_add++;
 11796  174A  3001               	movlw	1
 11797  174B  1283               	bcf	3,5	;RP0=0, select bank0
 11798  174C  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11799  174D  3000               	movlw	0
 11800  174E  1803               	skipnc
 11801  174F  3001               	movlw	1
 11802  1750  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11803  1751  3000               	movlw	0
 11804  1752  1803               	skipnc
 11805  1753  3001               	movlw	1
 11806  1754  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11807  1755  3000               	movlw	0
 11808  1756  1803               	skipnc
 11809  1757  3001               	movlw	1
 11810  1758  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11811                           
 11812                           ;EEPROM_24C1025.c: 188:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11813  1759  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11814  175A  1D03               	btfss	3,2
 11815  175B  2F6A               	goto	l6480
 11816  175C  3001               	movlw	1
 11817  175D  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11818  175E  1D03               	skipz
 11819  175F  2F68               	goto	u6913
 11820  1760  3000               	movlw	0
 11821  1761  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11822  1762  1D03               	skipz
 11823  1763  2F68               	goto	u6913
 11824  1764  3000               	movlw	0
 11825  1765  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11826  1766  1D03               	skipz
 11827  1767  2F68               	goto	u6913
 11828  1768                     u6913:	
 11829  1768  1C03               	btfss	3,0
 11830  1769  2F6F               	goto	l6482
 11831  176A                     l6480:	
 11832  176A  3008               	movlw	8
 11833  176B  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11834  176C  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11835  176D  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11836  176E  2F70               	goto	l6484
 11837  176F                     l6482:	
 11838  176F  01B4               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11839  1770                     l6484:	
 11840                           
 11841                           ;EEPROM_24C1025.c: 189:              ctrl=chip_add;
 11842  1770  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11843  1771  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11844  1772  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11845  1773  00B5               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11846                           
 11847                           ;EEPROM_24C1025.c: 190:              ctrl<<=1;
 11848  1774  1003               	clrc
 11849  1775  0DB5               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11850                           
 11851                           ;EEPROM_24C1025.c: 191:              ctrl |= 0xA0;
 11852  1776  30A0               	movlw	160
 11853  1777  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11854  1778  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11855  1779  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11856                           
 11857                           ;EEPROM_24C1025.c: 192:              ctrl |= 0b00000001;
 11858  177A  1435               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11859                           
 11860                           ;EEPROM_24C1025.c: 193:              ctrl |= range;
 11861  177B  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11862  177C  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11863  177D  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11864  177E  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11865                           
 11866                           ;EEPROM_24C1025.c: 195:              I2C_Master_Start();
 11867  177F  160A  158A  21BD  160A  118A  	fcall	_I2C_Master_Start
 11868                           
 11869                           ;EEPROM_24C1025.c: 196:              I2C_Master_Write(ctrl & 0xFE);
 11870  1784  1283               	bcf	3,5	;RP0=0, select bank0
 11871  1785  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11872  1786  39FE               	andlw	254
 11873  1787  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11874  1788  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11875  1789  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11876  178A  00A3               	movwf	I2C_Master_Write@d
 11877  178B  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11878  178C  00A4               	movwf	I2C_Master_Write@d+1
 11879  178D  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 11880                           
 11881                           ;EEPROM_24C1025.c: 197:              I2C_Master_Write(((char *)&mem_add)[1]);
 11882  1792  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11883  1793  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11884  1794  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11885  1795  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11886  1796  00A3               	movwf	I2C_Master_Write@d
 11887  1797  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11888  1798  00A4               	movwf	I2C_Master_Write@d+1
 11889  1799  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 11890                           
 11891                           ;EEPROM_24C1025.c: 198:              I2C_Master_Write(((char *)&mem_add)[0]);
 11892  179E  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11893  179F  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11894  17A0  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11895  17A1  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11896  17A2  00A3               	movwf	I2C_Master_Write@d
 11897  17A3  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11898  17A4  00A4               	movwf	I2C_Master_Write@d+1
 11899  17A5  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 11900                           
 11901                           ;EEPROM_24C1025.c: 199:              I2C_Master_RepeatedStart();
 11902  17AA  160A  158A  21A2  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11903                           
 11904                           ;EEPROM_24C1025.c: 200:              I2C_Master_Write(ctrl);
 11905  17AF  1283               	bcf	3,5	;RP0=0, select bank0
 11906  17B0  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11907  17B1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11908  17B2  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11909  17B3  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11910  17B4  00A3               	movwf	I2C_Master_Write@d
 11911  17B5  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11912  17B6  00A4               	movwf	I2C_Master_Write@d+1
 11913  17B7  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 11914                           
 11915                           ;EEPROM_24C1025.c: 201:              }
 11916  17BC  2FE4               	goto	l6510
 11917  17BD                     l6506:	
 11918                           
 11919                           ;EEPROM_24C1025.c: 203:              {;EEPROM_24C1025.c: 204:              (*data)=I2C_M
      +                          aster_Read(1);
 11920  17BD  3001               	movlw	1
 11921  17BE  00A3               	movwf	I2C_Master_Read@a
 11922  17BF  3000               	movlw	0
 11923  17C0  00A4               	movwf	I2C_Master_Read@a+1
 11924  17C1  160A  158A  247F  160A  118A  	fcall	_I2C_Master_Read
 11925  17C6  0823               	movf	?_I2C_Master_Read,w
 11926  17C7  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11927  17C8  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11928  17C9  0084               	movwf	4
 11929  17CA  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11930  17CB  1383               	bcf	3,7	;select IRP bank0
 11931  17CC  0080               	movwf	0
 11932                           
 11933                           ;EEPROM_24C1025.c: 205:              USART_putc(*data);
 11934  17CD  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11935  17CE  0084               	movwf	4
 11936  17CF  0800               	movf	0,w
 11937  17D0  160A  158A  21AD  160A  118A  	fcall	_USART_putc
 11938                           
 11939                           ;EEPROM_24C1025.c: 207:              mem_add++;
 11940  17D5  3001               	movlw	1
 11941  17D6  1283               	bcf	3,5	;RP0=0, select bank0
 11942  17D7  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11943  17D8  3000               	movlw	0
 11944  17D9  1803               	skipnc
 11945  17DA  3001               	movlw	1
 11946  17DB  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11947  17DC  3000               	movlw	0
 11948  17DD  1803               	skipnc
 11949  17DE  3001               	movlw	1
 11950  17DF  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11951  17E0  3000               	movlw	0
 11952  17E1  1803               	skipnc
 11953  17E2  3001               	movlw	1
 11954  17E3  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11955  17E4                     l6510:	
 11956                           
 11957                           ;EEPROM_24C1025.c: 209:         }
 11958  17E4  3001               	movlw	1
 11959  17E5  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11960  17E6  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11961  17E7  07B2               	addwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,f
 11962  17E8  2F0F               	goto	l6512
 11963  17E9                     l6514:	
 11964                           
 11965                           ;EEPROM_24C1025.c: 210:         I2C_Master_Read(0);
 11966  17E9  3000               	movlw	0
 11967  17EA  00A3               	movwf	I2C_Master_Read@a
 11968  17EB  00A4               	movwf	I2C_Master_Read@a+1
 11969  17EC  160A  158A  247F  160A  118A  	fcall	_I2C_Master_Read
 11970                           
 11971                           ;EEPROM_24C1025.c: 211:         I2C_Master_Stop();
 11972  17F1  160A  158A  2170  160A  118A  	fcall	_I2C_Master_Stop
 11973                           
 11974                           ;EEPROM_24C1025.c: 212:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11975  17F6  30B9               	movlw	185
 11976  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 11977  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 11978  17F9  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11979  17FA                     u7977:	
 11980  17FA  2FFB               	nop2
 11981  17FB  2FFC               	nop2
 11982  17FC  0BAF               	decfsz	??_EEPROM_24C1025_Read_Buffer_USART,f
 11983  17FD  2FFA               	goto	u7977
 11984  17FE  2FFF               	nop2
 11985  17FF  0008               	return
 11986  1800                     __end_of_EEPROM_24C1025_Read_Buffer_USART:	
 11987                           
 11988                           	psect	text47
 11989  19AD                     __ptext47:	
 11990 ;; *************** function _USART_putc *****************
 11991 ;; Defined at:
 11992 ;;		line 89 in file "usart.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;  value           1    wreg     unsigned char 
 11995 ;; Auto vars:     Size  Location     Type
 11996 ;;  value           1    0[BANK0 ] unsigned char 
 11997 ;; Return value:  Size  Location     Type
 11998 ;;                  1    wreg      void 
 11999 ;; Registers used:
 12000 ;;		wreg
 12001 ;; Tracked objects:
 12002 ;;		On entry : 0/100
 12003 ;;		On exit  : 300/100
 12004 ;;		Unchanged: 0/0
 12005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12006 ;;      Params:         0       0       0       0       0
 12007 ;;      Locals:         0       1       0       0       0
 12008 ;;      Temps:          0       0       0       0       0
 12009 ;;      Totals:         0       1       0       0       0
 12010 ;;Total ram usage:        1 bytes
 12011 ;; Hardware stack levels used:    1
 12012 ;; Hardware stack levels required when called:    1
 12013 ;; This function calls:
 12014 ;;		Nothing
 12015 ;; This function is called by:
 12016 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12017 ;;		_Decodify_Command
 12018 ;;		_Send_To_MB
 12019 ;;		_PROCULUS_Control_Register_Write
 12020 ;;		_PROCULUS_VP_Write
 12021 ;;		_USART_put_int
 12022 ;;		_USART_put_string
 12023 ;; This function uses a non-reentrant model
 12024 ;;
 12025                           
 12026                           
 12027                           ;psect for function _USART_putc
 12028  19AD                     _USART_putc:	
 12029                           
 12030                           ;incstack = 0
 12031                           ; Regs used in _USART_putc: [wreg]
 12032                           ;USART_putc@value stored from wreg
 12033  19AD  1283               	bcf	3,5	;RP0=0, select bank0
 12034  19AE  1303               	bcf	3,6	;RP1=0, select bank0
 12035  19AF  00A0               	movwf	USART_putc@value
 12036                           
 12037                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 12038  19B0  3014               	movlw	20
 12039  19B1  1683               	bsf	3,5	;RP0=1, select bank1
 12040  19B2  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 12041  19B3  3000               	movlw	0
 12042  19B4  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 12043  19B5                     l879:	
 12044                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 12045                           
 12046  19B5  1C98               	btfss	24,1	;volatile
 12047  19B6  29B5               	goto	l879
 12048                           
 12049                           ;usart.c: 93:     TXREG=value;
 12050  19B7  1283               	bcf	3,5	;RP0=0, select bank0
 12051  19B8  0820               	movf	USART_putc@value,w
 12052  19B9  0099               	movwf	25	;volatile
 12053                           
 12054                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 12055  19BA  1683               	bsf	3,5	;RP0=1, select bank1
 12056  19BB  1698               	bsf	24,5	;volatile
 12057  19BC  0008               	return
 12058  19BD                     __end_of_USART_putc:	
 12059                           
 12060                           	psect	text48
 12061  19A2                     __ptext48:	
 12062 ;; *************** function _I2C_Master_RepeatedStart *****************
 12063 ;; Defined at:
 12064 ;;		line 62 in file "I2C.c"
 12065 ;; Parameters:    Size  Location     Type
 12066 ;;		None
 12067 ;; Auto vars:     Size  Location     Type
 12068 ;;		None
 12069 ;; Return value:  Size  Location     Type
 12070 ;;                  1    wreg      void 
 12071 ;; Registers used:
 12072 ;;		wreg, status,2, status,0, pclath, cstack
 12073 ;; Tracked objects:
 12074 ;;		On entry : 300/0
 12075 ;;		On exit  : 200/0
 12076 ;;		Unchanged: 0/0
 12077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12078 ;;      Params:         0       0       0       0       0
 12079 ;;      Locals:         0       0       0       0       0
 12080 ;;      Temps:          0       0       0       0       0
 12081 ;;      Totals:         0       0       0       0       0
 12082 ;;Total ram usage:        0 bytes
 12083 ;; Hardware stack levels used:    1
 12084 ;; Hardware stack levels required when called:    2
 12085 ;; This function calls:
 12086 ;;		_I2C_Master_Wait
 12087 ;; This function is called by:
 12088 ;;		_EEPROM_24C1025_Read_Buffer
 12089 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12090 ;;		_EEPROM_24C1025_Read_Str
 12091 ;; This function uses a non-reentrant model
 12092 ;;
 12093                           
 12094                           
 12095                           ;psect for function _I2C_Master_RepeatedStart
 12096  19A2                     _I2C_Master_RepeatedStart:	
 12097                           
 12098                           ;I2C.c: 64:   if(I2C_Master_Wait())
 12099                           
 12100                           ;incstack = 0
 12101                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 12102  19A2  160A  158A  2311  160A  158A  	fcall	_I2C_Master_Wait
 12103  19A7  3A00               	xorlw	0
 12104  19A8  1903               	skipnz
 12105  19A9  0008               	return
 12106                           
 12107                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 12108  19AA  1683               	bsf	3,5	;RP0=1, select bank1
 12109  19AB  1491               	bsf	17,1	;volatile
 12110  19AC  0008               	return
 12111  19AD                     __end_of_I2C_Master_RepeatedStart:	
 12112                           
 12113                           	psect	text49
 12114  1C7F                     __ptext49:	
 12115 ;; *************** function _I2C_Master_Read *****************
 12116 ;; Defined at:
 12117 ;;		line 87 in file "I2C.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;  a               2    3[BANK0 ] unsigned short 
 12120 ;; Auto vars:     Size  Location     Type
 12121 ;;  temp            2    7[BANK0 ] unsigned short 
 12122 ;; Return value:  Size  Location     Type
 12123 ;;                  2    3[BANK0 ] unsigned short 
 12124 ;; Registers used:
 12125 ;;		wreg, status,2, status,0, pclath, cstack
 12126 ;; Tracked objects:
 12127 ;;		On entry : 300/0
 12128 ;;		On exit  : 300/0
 12129 ;;		Unchanged: 0/0
 12130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12131 ;;      Params:         0       2       0       0       0
 12132 ;;      Locals:         0       2       0       0       0
 12133 ;;      Temps:          0       2       0       0       0
 12134 ;;      Totals:         0       6       0       0       0
 12135 ;;Total ram usage:        6 bytes
 12136 ;; Hardware stack levels used:    1
 12137 ;; Hardware stack levels required when called:    2
 12138 ;; This function calls:
 12139 ;;		_I2C_Master_Wait
 12140 ;; This function is called by:
 12141 ;;		_EEPROM_24C1025_Read_Buffer
 12142 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12143 ;;		_EEPROM_24C1025_Read_Str
 12144 ;; This function uses a non-reentrant model
 12145 ;;
 12146                           
 12147                           
 12148                           ;psect for function _I2C_Master_Read
 12149  1C7F                     _I2C_Master_Read:	
 12150                           
 12151                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 12152                           
 12153                           ;incstack = 0
 12154                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 12155  1C7F  160A  158A  2311  160A  158A  	fcall	_I2C_Master_Wait
 12156  1C84  3A00               	xorlw	0
 12157  1C85  1683               	bsf	3,5	;RP0=1, select bank1
 12158  1C86  1D03               	btfss	3,2
 12159  1C87  1591               	bsf	17,3	;volatile
 12160                           
 12161                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 12162  1C88  160A  158A  2311  160A  158A  	fcall	_I2C_Master_Wait
 12163  1C8D  3A00               	xorlw	0
 12164  1C8E  1903               	skipnz
 12165  1C8F  2C97               	goto	l5748
 12166  1C90  0813               	movf	19,w	;volatile
 12167  1C91  00A5               	movwf	??_I2C_Master_Read
 12168  1C92  01A6               	clrf	??_I2C_Master_Read+1
 12169  1C93  0825               	movf	??_I2C_Master_Read,w
 12170  1C94  00A7               	movwf	I2C_Master_Read@temp
 12171  1C95  0826               	movf	??_I2C_Master_Read+1,w
 12172  1C96  00A8               	movwf	I2C_Master_Read@temp+1
 12173  1C97                     l5748:	
 12174                           
 12175                           ;I2C.c: 92:   if(I2C_Master_Wait())
 12176  1C97  160A  158A  2311  160A  158A  	fcall	_I2C_Master_Wait
 12177  1C9C  3A00               	xorlw	0
 12178  1C9D  1903               	skipnz
 12179  1C9E  2CB1               	goto	l5760
 12180                           
 12181                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 12182  1C9F  0823               	movf	I2C_Master_Read@a,w
 12183  1CA0  0424               	iorwf	I2C_Master_Read@a+1,w
 12184  1CA1  1D03               	btfss	3,2
 12185  1CA2  2CA7               	goto	u5520
 12186  1CA3  1683               	bsf	3,5	;RP0=1, select bank1
 12187  1CA4  1303               	bcf	3,6	;RP1=0, select bank1
 12188  1CA5  1691               	bsf	17,5	;volatile
 12189  1CA6  2CAA               	goto	l5752
 12190  1CA7                     u5520:	
 12191  1CA7  1683               	bsf	3,5	;RP0=1, select bank1
 12192  1CA8  1303               	bcf	3,6	;RP1=0, select bank1
 12193  1CA9  1291               	bcf	17,5	;volatile
 12194  1CAA                     l5752:	
 12195                           
 12196                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 12197  1CAA  1611               	bsf	17,4	;volatile
 12198                           
 12199                           ;I2C.c: 96:     return temp;
 12200  1CAB  1283               	bcf	3,5	;RP0=0, select bank0
 12201  1CAC  0828               	movf	I2C_Master_Read@temp+1,w
 12202  1CAD  00A4               	movwf	?_I2C_Master_Read+1
 12203  1CAE  0827               	movf	I2C_Master_Read@temp,w
 12204  1CAF  00A3               	movwf	?_I2C_Master_Read
 12205  1CB0  0008               	return
 12206  1CB1                     l5760:	
 12207                           
 12208                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 12209  1CB1  01A3               	clrf	?_I2C_Master_Read
 12210  1CB2  01A4               	clrf	?_I2C_Master_Read+1
 12211  1CB3  0008               	return
 12212  1CB4                     __end_of_I2C_Master_Read:	
 12213                           
 12214                           	psect	text50
 12215  1E4D                     __ptext50:	
 12216 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12217 ;; Defined at:
 12218 ;;		line 367 in file "EEPROM_24C1025.c"
 12219 ;; Parameters:    Size  Location     Type
 12220 ;;  chip_add        1    wreg     unsigned char 
 12221 ;;  value           2   56[BANK0 ] unsigned int 
 12222 ;; Auto vars:     Size  Location     Type
 12223 ;;  chip_add        1   58[BANK0 ] unsigned char 
 12224 ;;  mem_add         4   59[BANK0 ] unsigned long 
 12225 ;; Return value:  Size  Location     Type
 12226 ;;                  1    wreg      void 
 12227 ;; Registers used:
 12228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12229 ;; Tracked objects:
 12230 ;;		On entry : 300/300
 12231 ;;		On exit  : 300/0
 12232 ;;		Unchanged: 0/0
 12233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12234 ;;      Params:         0       2       0       0       0
 12235 ;;      Locals:         0       5       0       0       0
 12236 ;;      Temps:          0       0       0       0       0
 12237 ;;      Totals:         0       7       0       0       0
 12238 ;;Total ram usage:        7 bytes
 12239 ;; Hardware stack levels used:    1
 12240 ;; Hardware stack levels required when called:    5
 12241 ;; This function calls:
 12242 ;;		_EEPROM_24C1025_Write_Int
 12243 ;; This function is called by:
 12244 ;;		_Decodify_Command
 12245 ;; This function uses a non-reentrant model
 12246 ;;
 12247                           
 12248                           
 12249                           ;psect for function _EEPROM_24C1025_Fill_All
 12250  1E4D                     _EEPROM_24C1025_Fill_All:	
 12251                           
 12252                           ;incstack = 0
 12253                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 12254                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12255  1E4D  1283               	bcf	3,5	;RP0=0, select bank0
 12256  1E4E  1303               	bcf	3,6	;RP1=0, select bank0
 12257  1E4F  00DA               	movwf	EEPROM_24C1025_Fill_All@chip_add
 12258                           
 12259                           ;EEPROM_24C1025.c: 368:      unsigned long mem_add;;EEPROM_24C1025.c: 369:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 12260  1E50  3000               	movlw	0
 12261  1E51  00DE               	movwf	EEPROM_24C1025_Fill_All@mem_add+3
 12262  1E52  3000               	movlw	0
 12263  1E53  00DD               	movwf	EEPROM_24C1025_Fill_All@mem_add+2
 12264  1E54  3000               	movlw	0
 12265  1E55  00DC               	movwf	EEPROM_24C1025_Fill_All@mem_add+1
 12266  1E56  3000               	movlw	0
 12267  1E57  00DB               	movwf	EEPROM_24C1025_Fill_All@mem_add
 12268  1E58                     l6710:	
 12269                           
 12270                           ;EEPROM_24C1025.c: 370:         {;EEPROM_24C1025.c: 371:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 12271  1E58  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12272  1E59  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 12273  1E5A  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12274  1E5B  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 12275  1E5C  085C               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12276  1E5D  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 12277  1E5E  085B               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 12278  1E5F  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
 12279  1E60  0859               	movf	EEPROM_24C1025_Fill_All@value+1,w
 12280  1E61  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
 12281  1E62  0858               	movf	EEPROM_24C1025_Fill_All@value,w
 12282  1E63  00D2               	movwf	EEPROM_24C1025_Write_Int@data
 12283  1E64  085A               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 12284  1E65  160A  158A  22D1  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
 12285  1E6A  0064               	clrwdt	;# 
 12286                           
 12287                           ;EEPROM_24C1025.c: 373:         }
 12288  1E6B  3002               	movlw	2
 12289  1E6C  1283               	bcf	3,5	;RP0=0, select bank0
 12290  1E6D  1303               	bcf	3,6	;RP1=0, select bank0
 12291  1E6E  07DB               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 12292  1E6F  3000               	movlw	0
 12293  1E70  1803               	skipnc
 12294  1E71  3001               	movlw	1
 12295  1E72  07DC               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 12296  1E73  3000               	movlw	0
 12297  1E74  1803               	skipnc
 12298  1E75  3001               	movlw	1
 12299  1E76  07DD               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 12300  1E77  3000               	movlw	0
 12301  1E78  1803               	skipnc
 12302  1E79  3001               	movlw	1
 12303  1E7A  07DE               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 12304  1E7B  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12305  1E7C  1D03               	btfss	3,2
 12306  1E7D  0008               	return
 12307  1E7E  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12308  1E7F  1D03               	btfss	3,2
 12309  1E80  0008               	return
 12310  1E81  3004               	movlw	4
 12311  1E82  025C               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12312  1E83  1D03               	skipz
 12313  1E84  2E89               	goto	u7063
 12314  1E85  3000               	movlw	0
 12315  1E86  025B               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 12316  1E87  1D03               	skipz
 12317  1E88  2E89               	goto	u7063
 12318  1E89                     u7063:	
 12319  1E89  1803               	btfsc	3,0
 12320  1E8A  0008               	return
 12321  1E8B  2E58               	goto	l6710
 12322  1E8C                     __end_of_EEPROM_24C1025_Fill_All:	
 12323                           
 12324                           	psect	text51
 12325  1AD1                     __ptext51:	
 12326 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 12327 ;; Defined at:
 12328 ;;		line 352 in file "EEPROM_24C1025.c"
 12329 ;; Parameters:    Size  Location     Type
 12330 ;;  chip_add        1    wreg     unsigned char 
 12331 ;;  mem_add         4   46[BANK0 ] unsigned long 
 12332 ;;  data            2   50[BANK0 ] int 
 12333 ;; Auto vars:     Size  Location     Type
 12334 ;;  chip_add        1   53[BANK0 ] unsigned char 
 12335 ;;  local           2   54[BANK0 ] unsigned char [2]
 12336 ;; Return value:  Size  Location     Type
 12337 ;;                  1    wreg      void 
 12338 ;; Registers used:
 12339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12340 ;; Tracked objects:
 12341 ;;		On entry : 0/300
 12342 ;;		On exit  : 300/0
 12343 ;;		Unchanged: 0/0
 12344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12345 ;;      Params:         0       6       0       0       0
 12346 ;;      Locals:         0       3       0       0       0
 12347 ;;      Temps:          0       1       0       0       0
 12348 ;;      Totals:         0      10       0       0       0
 12349 ;;Total ram usage:       10 bytes
 12350 ;; Hardware stack levels used:    1
 12351 ;; Hardware stack levels required when called:    4
 12352 ;; This function calls:
 12353 ;;		_EEPROM_24C1025_Write_Buffer
 12354 ;; This function is called by:
 12355 ;;		_EEPROM_24C1025_Fill_All
 12356 ;;		_Decodify_Command
 12357 ;;		_Save_Log
 12358 ;; This function uses a non-reentrant model
 12359 ;;
 12360                           
 12361                           
 12362                           ;psect for function _EEPROM_24C1025_Write_Int
 12363  1AD1                     _EEPROM_24C1025_Write_Int:	
 12364                           
 12365                           ;incstack = 0
 12366                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 12367                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 12368  1AD1  1283               	bcf	3,5	;RP0=0, select bank0
 12369  1AD2  1303               	bcf	3,6	;RP1=0, select bank0
 12370  1AD3  00D5               	movwf	EEPROM_24C1025_Write_Int@chip_add
 12371                           
 12372                           ;EEPROM_24C1025.c: 353:      char local[2];;EEPROM_24C1025.c: 354:      local[0]=((char 
      +                          *)&data)[1];
 12373  1AD4  0853               	movf	EEPROM_24C1025_Write_Int@data+1,w
 12374  1AD5  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12375  1AD6  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12376  1AD7  00D6               	movwf	EEPROM_24C1025_Write_Int@local
 12377                           
 12378                           ;EEPROM_24C1025.c: 355:      local[1]=((char *)&data)[0];
 12379  1AD8  0852               	movf	EEPROM_24C1025_Write_Int@data,w
 12380  1AD9  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12381  1ADA  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12382  1ADB  00D7               	movwf	EEPROM_24C1025_Write_Int@local+1
 12383                           
 12384                           ;EEPROM_24C1025.c: 356:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12385  1ADC  0851               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 12386  1ADD  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12387  1ADE  0850               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 12388  1ADF  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12389  1AE0  084F               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 12390  1AE1  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12391  1AE2  084E               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 12392  1AE3  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12393  1AE4  3002               	movlw	2
 12394  1AE5  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12395  1AE6  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12396  1AE7  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12397  1AE8  3056               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12398  1AE9  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 12399  1AEA  3000               	movlw	0
 12400  1AEB  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12401  1AEC  0855               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 12402  1AED  160A  118A  23BA   	fcall	_EEPROM_24C1025_Write_Buffer
 12403  1AF0  0008               	return
 12404  1AF1                     __end_of_EEPROM_24C1025_Write_Int:	
 12405                           
 12406                           	psect	text52
 12407  13BA                     __ptext52:	
 12408 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12409 ;; Defined at:
 12410 ;;		line 15 in file "EEPROM_24C1025.c"
 12411 ;; Parameters:    Size  Location     Type
 12412 ;;  chip_add        1    wreg     unsigned char 
 12413 ;;  mem_add         4   10[BANK0 ] unsigned long 
 12414 ;;  sizedata        1   14[BANK0 ] unsigned char 
 12415 ;;  data            2   15[BANK0 ] PTR unsigned char 
 12416 ;;		 -> usart_protocol.value(52), usart_protocol(58), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 12417 ;; Auto vars:     Size  Location     Type
 12418 ;;  chip_add        1   20[BANK0 ] unsigned char 
 12419 ;;  ctrl            1   22[BANK0 ] unsigned char 
 12420 ;;  range           1   21[BANK0 ] unsigned char 
 12421 ;;  count           1   19[BANK0 ] unsigned char 
 12422 ;; Return value:  Size  Location     Type
 12423 ;;                  1    wreg      void 
 12424 ;; Registers used:
 12425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12426 ;; Tracked objects:
 12427 ;;		On entry : 0/300
 12428 ;;		On exit  : 300/0
 12429 ;;		Unchanged: 0/0
 12430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12431 ;;      Params:         0       7       0       0       0
 12432 ;;      Locals:         0       4       0       0       0
 12433 ;;      Temps:          0       2       0       0       0
 12434 ;;      Totals:         0      13       0       0       0
 12435 ;;Total ram usage:       13 bytes
 12436 ;; Hardware stack levels used:    1
 12437 ;; Hardware stack levels required when called:    3
 12438 ;; This function calls:
 12439 ;;		_I2C_Master_Start
 12440 ;;		_I2C_Master_Stop
 12441 ;;		_I2C_Master_Write
 12442 ;;		_my_delay_ms_WDT
 12443 ;; This function is called by:
 12444 ;;		_EEPROM_24C1025_Write_Byte
 12445 ;;		_EEPROM_24C1025_Write_Int
 12446 ;;		_Decodify_Command
 12447 ;; This function uses a non-reentrant model
 12448 ;;
 12449                           
 12450                           
 12451                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12452  13BA                     _EEPROM_24C1025_Write_Buffer:	
 12453                           
 12454                           ;incstack = 0
 12455                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 12456                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12457  13BA  1283               	bcf	3,5	;RP0=0, select bank0
 12458  13BB  1303               	bcf	3,6	;RP1=0, select bank0
 12459  13BC  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12460                           
 12461                           ;EEPROM_24C1025.c: 21:      unsigned char ctrl;;EEPROM_24C1025.c: 22:      unsigned char
      +                           count;;EEPROM_24C1025.c: 24:      Delay_Led_Memory=20;
 12462  13BD  3014               	movlw	20
 12463  13BE  1683               	bsf	3,5	;RP0=1, select bank1
 12464  13BF  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12465  13C0  3000               	movlw	0
 12466  13C1  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12467                           
 12468                           ;EEPROM_24C1025.c: 26:      if(mem_add>0x1FFFF) return;
 12469  13C2  1283               	bcf	3,5	;RP0=0, select bank0
 12470  13C3  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12471  13C4  1D03               	btfss	3,2
 12472  13C5  0008               	return
 12473  13C6  3002               	movlw	2
 12474  13C7  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12475  13C8  1D03               	skipz
 12476  13C9  2BD2               	goto	u5423
 12477  13CA  3000               	movlw	0
 12478  13CB  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12479  13CC  1D03               	skipz
 12480  13CD  2BD2               	goto	u5423
 12481  13CE  3000               	movlw	0
 12482  13CF  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12483  13D0  1D03               	skipz
 12484  13D1  2BD2               	goto	u5423
 12485  13D2                     u5423:	
 12486  13D2  1803               	btfsc	3,0
 12487  13D3  0008               	return
 12488                           
 12489                           ;EEPROM_24C1025.c: 28:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12490  13D4  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12491  13D5  1D03               	btfss	3,2
 12492  13D6  2BE5               	goto	l5662
 12493  13D7  3001               	movlw	1
 12494  13D8  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12495  13D9  1D03               	skipz
 12496  13DA  2BE3               	goto	u5433
 12497  13DB  3000               	movlw	0
 12498  13DC  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12499  13DD  1D03               	skipz
 12500  13DE  2BE3               	goto	u5433
 12501  13DF  3000               	movlw	0
 12502  13E0  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12503  13E1  1D03               	skipz
 12504  13E2  2BE3               	goto	u5433
 12505  13E3                     u5433:	
 12506  13E3  1C03               	btfss	3,0
 12507  13E4  2BEA               	goto	l5664
 12508  13E5                     l5662:	
 12509  13E5  3008               	movlw	8
 12510  13E6  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12511  13E7  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12512  13E8  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12513  13E9  2BEB               	goto	l5666
 12514  13EA                     l5664:	
 12515  13EA  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12516  13EB                     l5666:	
 12517                           
 12518                           ;EEPROM_24C1025.c: 29:      ctrl=chip_add;
 12519  13EB  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12520  13EC  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12521  13ED  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12522  13EE  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12523                           
 12524                           ;EEPROM_24C1025.c: 30:      ctrl<<=1;
 12525  13EF  1003               	clrc
 12526  13F0  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12527                           
 12528                           ;EEPROM_24C1025.c: 31:      ctrl |= 0xA0;
 12529  13F1  30A0               	movlw	160
 12530  13F2  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12531  13F3  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12532  13F4  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12533                           
 12534                           ;EEPROM_24C1025.c: 32:      ctrl |= range;
 12535  13F5  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12536  13F6  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12537  13F7  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12538  13F8  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12539                           
 12540                           ;EEPROM_24C1025.c: 34:      I2C_Master_Start();
 12541  13F9  160A  158A  21BD  160A  118A  	fcall	_I2C_Master_Start
 12542                           
 12543                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(ctrl);
 12544  13FE  1283               	bcf	3,5	;RP0=0, select bank0
 12545  13FF  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12546  1400  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12547  1401  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12548  1402  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12549  1403  00A3               	movwf	I2C_Master_Write@d
 12550  1404  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12551  1405  00A4               	movwf	I2C_Master_Write@d+1
 12552  1406  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 12553                           
 12554                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[1]);
 12555  140B  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12556  140C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12557  140D  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12558  140E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12559  140F  00A3               	movwf	I2C_Master_Write@d
 12560  1410  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12561  1411  00A4               	movwf	I2C_Master_Write@d+1
 12562  1412  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 12563                           
 12564                           ;EEPROM_24C1025.c: 37:      I2C_Master_Write(((char *)&mem_add)[0]);
 12565  1417  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12566  1418  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12567  1419  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12568  141A  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12569  141B  00A3               	movwf	I2C_Master_Write@d
 12570  141C  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12571  141D  00A4               	movwf	I2C_Master_Write@d+1
 12572  141E  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 12573                           
 12574                           ;EEPROM_24C1025.c: 38:      for(count=0;count<(sizedata-1);count++)
 12575  1423  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 12576  1424                     l5728:	
 12577  1424  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12578  1425  3EFF               	addlw	255
 12579  1426  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12580  1427  30FF               	movlw	255
 12581  1428  1803               	skipnc
 12582  1429  3000               	movlw	0
 12583  142A  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12584  142B  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12585  142C  3A80               	xorlw	128
 12586  142D  3C80               	sublw	128
 12587  142E  1D03               	skipz
 12588  142F  2C32               	goto	u5475
 12589  1430  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12590  1431  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12591  1432                     u5475:	
 12592  1432  1803               	btfsc	3,0
 12593  1433  2CFF               	goto	l5730
 12594  1434  0064               	clrwdt	;# 
 12595                           
 12596                           ;EEPROM_24C1025.c: 41:           if(mem_add>0x1FFFF) return;
 12597  1435  1283               	bcf	3,5	;RP0=0, select bank0
 12598  1436  1303               	bcf	3,6	;RP1=0, select bank0
 12599  1437  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12600  1438  1D03               	btfss	3,2
 12601  1439  0008               	return
 12602  143A  3002               	movlw	2
 12603  143B  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12604  143C  1D03               	skipz
 12605  143D  2C46               	goto	u5443
 12606  143E  3000               	movlw	0
 12607  143F  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12608  1440  1D03               	skipz
 12609  1441  2C46               	goto	u5443
 12610  1442  3000               	movlw	0
 12611  1443  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12612  1444  1D03               	skipz
 12613  1445  2C46               	goto	u5443
 12614  1446                     u5443:	
 12615  1446  1803               	btfsc	3,0
 12616  1447  0008               	return
 12617                           
 12618                           ;EEPROM_24C1025.c: 42:           if((mem_add+1)%128==0)
 12619  1448  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12620  1449  3E01               	addlw	1
 12621  144A  397F               	andlw	127
 12622  144B  1D03               	btfss	3,2
 12623  144C  2CD5               	goto	l5720
 12624                           
 12625                           ;EEPROM_24C1025.c: 43:             {;EEPROM_24C1025.c: 44:             I2C_Master_Write(
      +                          *data);
 12626  144D  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12627  144E  0084               	movwf	4
 12628  144F  1783               	bsf	3,7
 12629  1450  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12630  1451  1383               	bcf	3,7
 12631  1452  0800               	movf	0,w
 12632  1453  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12633  1454  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12634  1455  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12635  1456  00A3               	movwf	I2C_Master_Write@d
 12636  1457  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12637  1458  00A4               	movwf	I2C_Master_Write@d+1
 12638  1459  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 12639                           
 12640                           ;EEPROM_24C1025.c: 45:             I2C_Master_Stop();
 12641  145E  160A  158A  2170  160A  118A  	fcall	_I2C_Master_Stop
 12642                           
 12643                           ;EEPROM_24C1025.c: 47:             my_delay_ms_WDT(5);
 12644  1463  3000               	movlw	0
 12645  1464  1283               	bcf	3,5	;RP0=0, select bank0
 12646  1465  00A3               	movwf	my_delay_ms_WDT@time+3
 12647  1466  3000               	movlw	0
 12648  1467  00A2               	movwf	my_delay_ms_WDT@time+2
 12649  1468  3000               	movlw	0
 12650  1469  00A1               	movwf	my_delay_ms_WDT@time+1
 12651  146A  3005               	movlw	5
 12652  146B  00A0               	movwf	my_delay_ms_WDT@time
 12653  146C  160A  158A  24EB  160A  118A  	fcall	_my_delay_ms_WDT
 12654                           
 12655                           ;EEPROM_24C1025.c: 48:             mem_add++;
 12656  1471  3001               	movlw	1
 12657  1472  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12658  1473  3000               	movlw	0
 12659  1474  1803               	skipnc
 12660  1475  3001               	movlw	1
 12661  1476  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12662  1477  3000               	movlw	0
 12663  1478  1803               	skipnc
 12664  1479  3001               	movlw	1
 12665  147A  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12666  147B  3000               	movlw	0
 12667  147C  1803               	skipnc
 12668  147D  3001               	movlw	1
 12669  147E  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12670                           
 12671                           ;EEPROM_24C1025.c: 49:             data++;
 12672  147F  3001               	movlw	1
 12673  1480  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12674  1481  1803               	skipnc
 12675  1482  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12676  1483  3000               	movlw	0
 12677  1484  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12678                           
 12679                           ;EEPROM_24C1025.c: 50:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12680  1485  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12681  1486  1D03               	btfss	3,2
 12682  1487  2C96               	goto	l5700
 12683  1488  3001               	movlw	1
 12684  1489  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12685  148A  1D03               	skipz
 12686  148B  2C94               	goto	u5463
 12687  148C  3000               	movlw	0
 12688  148D  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12689  148E  1D03               	skipz
 12690  148F  2C94               	goto	u5463
 12691  1490  3000               	movlw	0
 12692  1491  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12693  1492  1D03               	skipz
 12694  1493  2C94               	goto	u5463
 12695  1494                     u5463:	
 12696  1494  1C03               	btfss	3,0
 12697  1495  2C9B               	goto	l5702
 12698  1496                     l5700:	
 12699  1496  3008               	movlw	8
 12700  1497  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12701  1498  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12702  1499  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12703  149A  2C9C               	goto	l5704
 12704  149B                     l5702:	
 12705  149B  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12706  149C                     l5704:	
 12707                           
 12708                           ;EEPROM_24C1025.c: 51:             ctrl=chip_add;
 12709  149C  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12710  149D  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12711  149E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12712  149F  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12713                           
 12714                           ;EEPROM_24C1025.c: 52:             ctrl<<=1;
 12715  14A0  1003               	clrc
 12716  14A1  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12717                           
 12718                           ;EEPROM_24C1025.c: 53:             ctrl |= 0xA0;
 12719  14A2  30A0               	movlw	160
 12720  14A3  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12721  14A4  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12722  14A5  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12723                           
 12724                           ;EEPROM_24C1025.c: 54:             ctrl |= range;
 12725  14A6  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12726  14A7  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12727  14A8  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12728  14A9  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12729                           
 12730                           ;EEPROM_24C1025.c: 56:             I2C_Master_Start();
 12731  14AA  160A  158A  21BD  160A  118A  	fcall	_I2C_Master_Start
 12732                           
 12733                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(ctrl);
 12734  14AF  1283               	bcf	3,5	;RP0=0, select bank0
 12735  14B0  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12736  14B1  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12737  14B2  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12738  14B3  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12739  14B4  00A3               	movwf	I2C_Master_Write@d
 12740  14B5  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12741  14B6  00A4               	movwf	I2C_Master_Write@d+1
 12742  14B7  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 12743                           
 12744                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[1]);
 12745  14BC  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12746  14BD  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12747  14BE  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12748  14BF  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12749  14C0  00A3               	movwf	I2C_Master_Write@d
 12750  14C1  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12751  14C2  00A4               	movwf	I2C_Master_Write@d+1
 12752  14C3  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 12753                           
 12754                           ;EEPROM_24C1025.c: 59:             I2C_Master_Write(((char *)&mem_add)[0]);
 12755  14C8  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12756  14C9  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12757  14CA  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12758  14CB  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12759  14CC  00A3               	movwf	I2C_Master_Write@d
 12760  14CD  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12761  14CE  00A4               	movwf	I2C_Master_Write@d+1
 12762  14CF  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 12763                           
 12764                           ;EEPROM_24C1025.c: 60:             }
 12765  14D4  2CFA               	goto	l5726
 12766  14D5                     l5720:	
 12767                           
 12768                           ;EEPROM_24C1025.c: 62:             {;EEPROM_24C1025.c: 63:             I2C_Master_Write(
      +                          *data);
 12769  14D5  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12770  14D6  0084               	movwf	4
 12771  14D7  1783               	bsf	3,7
 12772  14D8  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12773  14D9  1383               	bcf	3,7
 12774  14DA  0800               	movf	0,w
 12775  14DB  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12776  14DC  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12777  14DD  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12778  14DE  00A3               	movwf	I2C_Master_Write@d
 12779  14DF  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12780  14E0  00A4               	movwf	I2C_Master_Write@d+1
 12781  14E1  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 12782                           
 12783                           ;EEPROM_24C1025.c: 64:             data++;
 12784  14E6  3001               	movlw	1
 12785  14E7  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12786  14E8  1803               	skipnc
 12787  14E9  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12788  14EA  3000               	movlw	0
 12789  14EB  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12790                           
 12791                           ;EEPROM_24C1025.c: 65:             mem_add++;
 12792  14EC  3001               	movlw	1
 12793  14ED  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12794  14EE  3000               	movlw	0
 12795  14EF  1803               	skipnc
 12796  14F0  3001               	movlw	1
 12797  14F1  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12798  14F2  3000               	movlw	0
 12799  14F3  1803               	skipnc
 12800  14F4  3001               	movlw	1
 12801  14F5  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12802  14F6  3000               	movlw	0
 12803  14F7  1803               	skipnc
 12804  14F8  3001               	movlw	1
 12805  14F9  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12806  14FA                     l5726:	
 12807                           
 12808                           ;EEPROM_24C1025.c: 67:      }
 12809  14FA  3001               	movlw	1
 12810  14FB  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12811  14FC  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12812  14FD  07B3               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 12813  14FE  2C24               	goto	l5728
 12814  14FF                     l5730:	
 12815                           
 12816                           ;EEPROM_24C1025.c: 68:      I2C_Master_Write(*data);
 12817  14FF  1283               	bcf	3,5	;RP0=0, select bank0
 12818  1500  1303               	bcf	3,6	;RP1=0, select bank0
 12819  1501  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12820  1502  0084               	movwf	4
 12821  1503  1783               	bsf	3,7
 12822  1504  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12823  1505  1383               	bcf	3,7
 12824  1506  0800               	movf	0,w
 12825  1507  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12826  1508  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12827  1509  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12828  150A  00A3               	movwf	I2C_Master_Write@d
 12829  150B  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12830  150C  00A4               	movwf	I2C_Master_Write@d+1
 12831  150D  160A  158A  2197  160A  118A  	fcall	_I2C_Master_Write
 12832                           
 12833                           ;EEPROM_24C1025.c: 69:      I2C_Master_Stop();
 12834  1512  160A  158A  2170  160A  118A  	fcall	_I2C_Master_Stop
 12835                           
 12836                           ;EEPROM_24C1025.c: 71:      my_delay_ms_WDT(5);
 12837  1517  3000               	movlw	0
 12838  1518  1283               	bcf	3,5	;RP0=0, select bank0
 12839  1519  00A3               	movwf	my_delay_ms_WDT@time+3
 12840  151A  3000               	movlw	0
 12841  151B  00A2               	movwf	my_delay_ms_WDT@time+2
 12842  151C  3000               	movlw	0
 12843  151D  00A1               	movwf	my_delay_ms_WDT@time+1
 12844  151E  3005               	movlw	5
 12845  151F  00A0               	movwf	my_delay_ms_WDT@time
 12846  1520  160A  158A  24EB   	fcall	_my_delay_ms_WDT
 12847  1523  0008               	return
 12848  1524                     __end_of_EEPROM_24C1025_Write_Buffer:	
 12849                           
 12850                           	psect	text53
 12851  1CEB                     __ptext53:	
 12852 ;; *************** function _my_delay_ms_WDT *****************
 12853 ;; Defined at:
 12854 ;;		line 13 in file "my_delay.c"
 12855 ;; Parameters:    Size  Location     Type
 12856 ;;  time            4    0[BANK0 ] long 
 12857 ;; Auto vars:     Size  Location     Type
 12858 ;;  i               4    6[BANK0 ] long 
 12859 ;; Return value:  Size  Location     Type
 12860 ;;                  1    wreg      void 
 12861 ;; Registers used:
 12862 ;;		wreg, btemp+1
 12863 ;; Tracked objects:
 12864 ;;		On entry : 300/0
 12865 ;;		On exit  : 300/0
 12866 ;;		Unchanged: 0/0
 12867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12868 ;;      Params:         0       4       0       0       0
 12869 ;;      Locals:         0       4       0       0       0
 12870 ;;      Temps:          0       2       0       0       0
 12871 ;;      Totals:         0      10       0       0       0
 12872 ;;Total ram usage:       10 bytes
 12873 ;; Hardware stack levels used:    1
 12874 ;; Hardware stack levels required when called:    1
 12875 ;; This function calls:
 12876 ;;		Nothing
 12877 ;; This function is called by:
 12878 ;;		_EEPROM_24C1025_Write_Buffer
 12879 ;;		_EEPROM_24C1025_Read_Buffer
 12880 ;;		_EEPROM_24C1025_Write_Str
 12881 ;;		_main
 12882 ;; This function uses a non-reentrant model
 12883 ;;
 12884                           
 12885                           
 12886                           ;psect for function _my_delay_ms_WDT
 12887  1CEB                     _my_delay_ms_WDT:	
 12888                           
 12889                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 12890                           
 12891                           ;incstack = 0
 12892                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 12893  1CEB  3000               	movlw	0
 12894  1CEC  00A9               	movwf	my_delay_ms_WDT@i+3
 12895  1CED  3000               	movlw	0
 12896  1CEE  00A8               	movwf	my_delay_ms_WDT@i+2
 12897  1CEF  3000               	movlw	0
 12898  1CF0  00A7               	movwf	my_delay_ms_WDT@i+1
 12899  1CF1  3000               	movlw	0
 12900  1CF2  00A6               	movwf	my_delay_ms_WDT@i
 12901  1CF3                     l5644:	
 12902  1CF3  0829               	movf	my_delay_ms_WDT@i+3,w
 12903  1CF4  3A80               	xorlw	128
 12904  1CF5  00FF               	movwf	127
 12905  1CF6  0823               	movf	my_delay_ms_WDT@time+3,w
 12906  1CF7  3A80               	xorlw	128
 12907  1CF8  027F               	subwf	127,w
 12908  1CF9  1D03               	skipz
 12909  1CFA  2D05               	goto	u5403
 12910  1CFB  0822               	movf	my_delay_ms_WDT@time+2,w
 12911  1CFC  0228               	subwf	my_delay_ms_WDT@i+2,w
 12912  1CFD  1D03               	skipz
 12913  1CFE  2D05               	goto	u5403
 12914  1CFF  0821               	movf	my_delay_ms_WDT@time+1,w
 12915  1D00  0227               	subwf	my_delay_ms_WDT@i+1,w
 12916  1D01  1D03               	skipz
 12917  1D02  2D05               	goto	u5403
 12918  1D03  0820               	movf	my_delay_ms_WDT@time,w
 12919  1D04  0226               	subwf	my_delay_ms_WDT@i,w
 12920  1D05                     u5403:	
 12921  1D05  1803               	btfsc	3,0
 12922  1D06  0008               	return
 12923  1D07  0064               	clrwdt	;# 
 12924                           
 12925                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 12926  1D08  3003               	movlw	3
 12927  1D09  1283               	bcf	3,5	;RP0=0, select bank0
 12928  1D0A  1303               	bcf	3,6	;RP1=0, select bank0
 12929  1D0B  00A5               	movwf	??_my_delay_ms_WDT+1
 12930  1D0C  3097               	movlw	151
 12931  1D0D  00A4               	movwf	??_my_delay_ms_WDT
 12932  1D0E                     u7987:	
 12933  1D0E  0BA4               	decfsz	??_my_delay_ms_WDT,f
 12934  1D0F  2D0E               	goto	u7987
 12935  1D10  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 12936  1D11  2D0E               	goto	u7987
 12937                           
 12938                           ;my_delay.c: 19:             }
 12939  1D12  3001               	movlw	1
 12940  1D13  1283               	bcf	3,5	;RP0=0, select bank0
 12941  1D14  1303               	bcf	3,6	;RP1=0, select bank0
 12942  1D15  07A6               	addwf	my_delay_ms_WDT@i,f
 12943  1D16  3000               	movlw	0
 12944  1D17  1803               	skipnc
 12945  1D18  3001               	movlw	1
 12946  1D19  07A7               	addwf	my_delay_ms_WDT@i+1,f
 12947  1D1A  3000               	movlw	0
 12948  1D1B  1803               	skipnc
 12949  1D1C  3001               	movlw	1
 12950  1D1D  07A8               	addwf	my_delay_ms_WDT@i+2,f
 12951  1D1E  3000               	movlw	0
 12952  1D1F  1803               	skipnc
 12953  1D20  3001               	movlw	1
 12954  1D21  07A9               	addwf	my_delay_ms_WDT@i+3,f
 12955  1D22  2CF3               	goto	l5644
 12956  1D23                     __end_of_my_delay_ms_WDT:	
 12957                           
 12958                           	psect	text54
 12959  1997                     __ptext54:	
 12960 ;; *************** function _I2C_Master_Write *****************
 12961 ;; Defined at:
 12962 ;;		line 79 in file "I2C.c"
 12963 ;; Parameters:    Size  Location     Type
 12964 ;;  d               2    3[BANK0 ] unsigned int 
 12965 ;; Auto vars:     Size  Location     Type
 12966 ;;		None
 12967 ;; Return value:  Size  Location     Type
 12968 ;;                  1    wreg      void 
 12969 ;; Registers used:
 12970 ;;		wreg, status,2, status,0, pclath, cstack
 12971 ;; Tracked objects:
 12972 ;;		On entry : 300/0
 12973 ;;		On exit  : 300/0
 12974 ;;		Unchanged: 0/0
 12975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12976 ;;      Params:         0       2       0       0       0
 12977 ;;      Locals:         0       0       0       0       0
 12978 ;;      Temps:          0       0       0       0       0
 12979 ;;      Totals:         0       2       0       0       0
 12980 ;;Total ram usage:        2 bytes
 12981 ;; Hardware stack levels used:    1
 12982 ;; Hardware stack levels required when called:    2
 12983 ;; This function calls:
 12984 ;;		_I2C_Master_Wait
 12985 ;; This function is called by:
 12986 ;;		_EEPROM_24C1025_Write_Buffer
 12987 ;;		_EEPROM_24C1025_Read_Buffer
 12988 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12989 ;;		_EEPROM_24C1025_Write_Str
 12990 ;;		_EEPROM_24C1025_Read_Str
 12991 ;; This function uses a non-reentrant model
 12992 ;;
 12993                           
 12994                           
 12995                           ;psect for function _I2C_Master_Write
 12996  1997                     _I2C_Master_Write:	
 12997                           
 12998                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 12999                           
 13000                           ;incstack = 0
 13001                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 13002  1997  160A  158A  2311  160A  158A  	fcall	_I2C_Master_Wait
 13003  199C  3A00               	xorlw	0
 13004  199D  1903               	skipnz
 13005  199E  0008               	return
 13006                           
 13007                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 13008  199F  0823               	movf	I2C_Master_Write@d,w
 13009  19A0  0093               	movwf	19	;volatile
 13010  19A1  0008               	return
 13011  19A2                     __end_of_I2C_Master_Write:	
 13012                           
 13013                           	psect	text55
 13014  1970                     __ptext55:	
 13015 ;; *************** function _I2C_Master_Stop *****************
 13016 ;; Defined at:
 13017 ;;		line 70 in file "I2C.c"
 13018 ;; Parameters:    Size  Location     Type
 13019 ;;		None
 13020 ;; Auto vars:     Size  Location     Type
 13021 ;;		None
 13022 ;; Return value:  Size  Location     Type
 13023 ;;                  1    wreg      void 
 13024 ;; Registers used:
 13025 ;;		wreg, status,2, status,0, pclath, cstack
 13026 ;; Tracked objects:
 13027 ;;		On entry : 300/800
 13028 ;;		On exit  : 200/0
 13029 ;;		Unchanged: 0/0
 13030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13031 ;;      Params:         0       0       0       0       0
 13032 ;;      Locals:         0       0       0       0       0
 13033 ;;      Temps:          0       0       0       0       0
 13034 ;;      Totals:         0       0       0       0       0
 13035 ;;Total ram usage:        0 bytes
 13036 ;; Hardware stack levels used:    1
 13037 ;; Hardware stack levels required when called:    2
 13038 ;; This function calls:
 13039 ;;		_I2C_Master_Wait
 13040 ;; This function is called by:
 13041 ;;		_EEPROM_24C1025_Write_Buffer
 13042 ;;		_EEPROM_24C1025_Read_Buffer
 13043 ;;		_EEPROM_24C1025_Read_Buffer_USART
 13044 ;;		_EEPROM_24C1025_Write_Str
 13045 ;;		_EEPROM_24C1025_Read_Str
 13046 ;; This function uses a non-reentrant model
 13047 ;;
 13048                           
 13049                           
 13050                           ;psect for function _I2C_Master_Stop
 13051  1970                     _I2C_Master_Stop:	
 13052                           
 13053                           ;I2C.c: 72:   if(I2C_Master_Wait())
 13054                           
 13055                           ;incstack = 0
 13056                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 13057  1970  160A  158A  2311   	fcall	_I2C_Master_Wait
 13058  1973  3A00               	xorlw	0
 13059                           
 13060                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 13061  1974  1683               	bsf	3,5	;RP0=1, select bank1
 13062  1975  1D03               	btfss	3,2
 13063  1976  1511               	bsf	17,2	;volatile
 13064                           
 13065                           ;I2C.c: 76:   INTCONbits.GIE=1;
 13066                           
 13067                           ;I2C.c: 75:     }
 13068  1977  178B               	bsf	11,7	;volatile
 13069  1978  0008               	return
 13070  1979                     __end_of_I2C_Master_Stop:	
 13071                           
 13072                           	psect	text56
 13073  19BD                     __ptext56:	
 13074 ;; *************** function _I2C_Master_Start *****************
 13075 ;; Defined at:
 13076 ;;		line 52 in file "I2C.c"
 13077 ;; Parameters:    Size  Location     Type
 13078 ;;		None
 13079 ;; Auto vars:     Size  Location     Type
 13080 ;;		None
 13081 ;; Return value:  Size  Location     Type
 13082 ;;                  1    wreg      void 
 13083 ;; Registers used:
 13084 ;;		wreg, status,2, status,0, pclath, cstack
 13085 ;; Tracked objects:
 13086 ;;		On entry : 300/0
 13087 ;;		On exit  : 200/0
 13088 ;;		Unchanged: 0/0
 13089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13090 ;;      Params:         0       0       0       0       0
 13091 ;;      Locals:         0       0       0       0       0
 13092 ;;      Temps:          0       0       0       0       0
 13093 ;;      Totals:         0       0       0       0       0
 13094 ;;Total ram usage:        0 bytes
 13095 ;; Hardware stack levels used:    1
 13096 ;; Hardware stack levels required when called:    2
 13097 ;; This function calls:
 13098 ;;		_I2C_Master_Wait
 13099 ;; This function is called by:
 13100 ;;		_EEPROM_24C1025_Write_Buffer
 13101 ;;		_EEPROM_24C1025_Read_Buffer
 13102 ;;		_EEPROM_24C1025_Read_Buffer_USART
 13103 ;;		_EEPROM_24C1025_Write_Str
 13104 ;;		_EEPROM_24C1025_Read_Str
 13105 ;; This function uses a non-reentrant model
 13106 ;;
 13107                           
 13108                           
 13109                           ;psect for function _I2C_Master_Start
 13110  19BD                     _I2C_Master_Start:	
 13111                           
 13112                           ;I2C.c: 54:   INTCONbits.GIE=0;
 13113                           
 13114                           ;incstack = 0
 13115                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 13116  19BD  138B               	bcf	11,7	;volatile
 13117                           
 13118                           ;I2C.c: 55:   Delay_Led_Memory=20;
 13119  19BE  3014               	movlw	20
 13120  19BF  1683               	bsf	3,5	;RP0=1, select bank1
 13121  19C0  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 13122  19C1  3000               	movlw	0
 13123  19C2  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 13124                           
 13125                           ;I2C.c: 56:   if(I2C_Master_Wait())
 13126  19C3  160A  158A  2311  160A  158A  	fcall	_I2C_Master_Wait
 13127  19C8  3A00               	xorlw	0
 13128  19C9  1903               	skipnz
 13129  19CA  0008               	return
 13130                           
 13131                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 13132  19CB  1683               	bsf	3,5	;RP0=1, select bank1
 13133  19CC  1411               	bsf	17,0	;volatile
 13134  19CD  0008               	return
 13135  19CE                     __end_of_I2C_Master_Start:	
 13136                           
 13137                           	psect	text57
 13138  1B11                     __ptext57:	
 13139 ;; *************** function _I2C_Master_Wait *****************
 13140 ;; Defined at:
 13141 ;;		line 37 in file "I2C.c"
 13142 ;; Parameters:    Size  Location     Type
 13143 ;;		None
 13144 ;; Auto vars:     Size  Location     Type
 13145 ;;  tempo           1    2[BANK0 ] unsigned char 
 13146 ;; Return value:  Size  Location     Type
 13147 ;;                  1    wreg      unsigned char 
 13148 ;; Registers used:
 13149 ;;		wreg, status,2, status,0
 13150 ;; Tracked objects:
 13151 ;;		On entry : 200/0
 13152 ;;		On exit  : 300/0
 13153 ;;		Unchanged: 0/0
 13154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13155 ;;      Params:         0       0       0       0       0
 13156 ;;      Locals:         0       1       0       0       0
 13157 ;;      Temps:          0       2       0       0       0
 13158 ;;      Totals:         0       3       0       0       0
 13159 ;;Total ram usage:        3 bytes
 13160 ;; Hardware stack levels used:    1
 13161 ;; Hardware stack levels required when called:    1
 13162 ;; This function calls:
 13163 ;;		Nothing
 13164 ;; This function is called by:
 13165 ;;		_I2C_Master_Start
 13166 ;;		_I2C_Master_RepeatedStart
 13167 ;;		_I2C_Master_Stop
 13168 ;;		_I2C_Master_Write
 13169 ;;		_I2C_Master_Read
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           
 13174                           ;psect for function _I2C_Master_Wait
 13175  1B11                     _I2C_Master_Wait:	
 13176                           
 13177                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 13178                           
 13179                           ;incstack = 0
 13180                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 13181  1B11  30C8               	movlw	200
 13182  1B12  1283               	bcf	3,5	;RP0=0, select bank0
 13183  1B13  00A0               	movwf	??_I2C_Master_Wait
 13184  1B14  0820               	movf	??_I2C_Master_Wait,w
 13185  1B15  00A2               	movwf	I2C_Master_Wait@tempo
 13186                           
 13187                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13188  1B16  2B23               	goto	l5616
 13189  1B17                     l5612:	
 13190                           
 13191                           ;I2C.c: 44:          tempo--;
 13192  1B17  3001               	movlw	1
 13193  1B18  02A2               	subwf	I2C_Master_Wait@tempo,f
 13194                           
 13195                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 13196  1B19  3003               	movlw	3
 13197  1B1A  1283               	bcf	3,5	;RP0=0, select bank0
 13198  1B1B  1303               	bcf	3,6	;RP1=0, select bank0
 13199  1B1C  00A1               	movwf	??_I2C_Master_Wait+1
 13200  1B1D  3097               	movlw	151
 13201  1B1E  00A0               	movwf	??_I2C_Master_Wait
 13202  1B1F                     u7997:	
 13203  1B1F  0BA0               	decfsz	??_I2C_Master_Wait,f
 13204  1B20  2B1F               	goto	u7997
 13205  1B21  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 13206  1B22  2B1F               	goto	u7997
 13207  1B23                     l5616:	
 13208                           
 13209                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13210  1B23  1683               	bsf	3,5	;RP0=1, select bank1
 13211  1B24  1303               	bcf	3,6	;RP1=0, select bank1
 13212  1B25  1914               	btfsc	20,2	;volatile
 13213  1B26  2B2B               	goto	l5610
 13214  1B27  0811               	movf	17,w	;volatile
 13215  1B28  391F               	andlw	31
 13216  1B29  1903               	btfsc	3,2
 13217  1B2A  2B2F               	goto	l5620
 13218  1B2B                     l5610:	
 13219                           
 13220                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 13221  1B2B  1283               	bcf	3,5	;RP0=0, select bank0
 13222  1B2C  0822               	movf	I2C_Master_Wait@tempo,w
 13223  1B2D  1D03               	btfss	3,2
 13224  1B2E  2B17               	goto	l5612
 13225  1B2F                     l5620:	
 13226                           
 13227                           ;I2C.c: 49:   return tempo ;
 13228  1B2F  1283               	bcf	3,5	;RP0=0, select bank0
 13229  1B30  0822               	movf	I2C_Master_Wait@tempo,w
 13230  1B31  0008               	return
 13231  1B32                     __end_of_I2C_Master_Wait:	
 13232                           
 13233                           	psect	text58
 13234  198C                     __ptext58:	
 13235 ;; *************** function _ADC_init *****************
 13236 ;; Defined at:
 13237 ;;		line 10 in file "adc.c"
 13238 ;; Parameters:    Size  Location     Type
 13239 ;;		None
 13240 ;; Auto vars:     Size  Location     Type
 13241 ;;		None
 13242 ;; Return value:  Size  Location     Type
 13243 ;;                  1    wreg      void 
 13244 ;; Registers used:
 13245 ;;		wreg, status,2, status,0
 13246 ;; Tracked objects:
 13247 ;;		On entry : 0/100
 13248 ;;		On exit  : 300/0
 13249 ;;		Unchanged: 0/0
 13250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13251 ;;      Params:         0       0       0       0       0
 13252 ;;      Locals:         0       0       0       0       0
 13253 ;;      Temps:          0       0       0       0       0
 13254 ;;      Totals:         0       0       0       0       0
 13255 ;;Total ram usage:        0 bytes
 13256 ;; Hardware stack levels used:    1
 13257 ;; Hardware stack levels required when called:    1
 13258 ;; This function calls:
 13259 ;;		Nothing
 13260 ;; This function is called by:
 13261 ;;		_main
 13262 ;; This function uses a non-reentrant model
 13263 ;;
 13264                           
 13265                           
 13266                           ;psect for function _ADC_init
 13267  198C                     _ADC_init:	
 13268                           
 13269                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13270                           
 13271                           ;incstack = 0
 13272                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13273  198C  30C0               	movlw	192
 13274  198D  1283               	bcf	3,5	;RP0=0, select bank0
 13275  198E  1303               	bcf	3,6	;RP1=0, select bank0
 13276  198F  049F               	iorwf	31,f	;volatile
 13277                           
 13278                           ;adc.c: 12:      ADCON1=0b10000000;
 13279  1990  3080               	movlw	128
 13280  1991  1683               	bsf	3,5	;RP0=1, select bank1
 13281  1992  009F               	movwf	31	;volatile
 13282                           
 13283                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13284  1993  179F               	bsf	31,7	;volatile
 13285                           
 13286                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13287  1994  1283               	bcf	3,5	;RP0=0, select bank0
 13288  1995  141F               	bsf	31,0	;volatile
 13289  1996  0008               	return
 13290  1997                     __end_of_ADC_init:	
 13291                           
 13292                           	psect	text59
 13293  11D9                     __ptext59:	
 13294 ;; *************** function _isr *****************
 13295 ;; Defined at:
 13296 ;;		line 29 in file "isr.c"
 13297 ;; Parameters:    Size  Location     Type
 13298 ;;		None
 13299 ;; Auto vars:     Size  Location     Type
 13300 ;;  tempo           2    6[COMMON] unsigned int 
 13301 ;; Return value:  Size  Location     Type
 13302 ;;                  1    wreg      void 
 13303 ;; Registers used:
 13304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13305 ;; Tracked objects:
 13306 ;;		On entry : 0/0
 13307 ;;		On exit  : 300/0
 13308 ;;		Unchanged: 0/0
 13309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13310 ;;      Params:         0       0       0       0       0
 13311 ;;      Locals:         2       0       0       0       0
 13312 ;;      Temps:          6       0       0       0       0
 13313 ;;      Totals:         8       0       0       0       0
 13314 ;;Total ram usage:        8 bytes
 13315 ;; Hardware stack levels used:    1
 13316 ;; This function calls:
 13317 ;;		Nothing
 13318 ;; This function is called by:
 13319 ;;		Interrupt level 1
 13320 ;; This function uses a non-reentrant model
 13321 ;;
 13322                           
 13323                           
 13324                           ;psect for function _isr
 13325  11D9                     _isr:	
 13326                           
 13327                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13328  11D9  188B               	btfsc	11,1	;volatile
 13329                           
 13330                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13331  11DA  108B               	bcf	11,1	;volatile
 13332                           
 13333                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13334                           
 13335                           ;isr.c: 37:       }
 13336  11DB  1C0C               	btfss	12,0	;volatile
 13337  11DC  2A54               	goto	i1l5538
 13338                           
 13339                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13340  11DD  30B1               	movlw	177
 13341  11DE  008F               	movwf	15	;volatile
 13342                           
 13343                           ;isr.c: 42:                 TMR1L=0xF3;
 13344  11DF  30F3               	movlw	243
 13345  11E0  008E               	movwf	14	;volatile
 13346                           
 13347                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13348  11E1  100C               	bcf	12,0	;volatile
 13349                           
 13350                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13351  11E2  1683               	bsf	3,5	;RP0=1, select bank1
 13352  11E3  1FBB               	btfss	_generic_status^(0+128),7
 13353  11E4  29E7               	goto	i1l5494
 13354                           
 13355                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13356  11E5  13BB               	bcf	_generic_status^(0+128),7
 13357  11E6  0064               	clrwdt	;# 
 13358  11E7                     i1l5494:	
 13359                           
 13360                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13361  11E7  300A               	movlw	10
 13362  11E8  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 13363  11E9  1803               	skipnc
 13364  11EA  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 13365  11EB  3000               	movlw	0
 13366  11EC  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 13367                           
 13368                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13369  11ED  3003               	movlw	3
 13370  11EE  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13371  11EF  30E8               	movlw	232
 13372  11F0  1903               	skipnz
 13373  11F1  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13374  11F2  1C03               	skipc
 13375  11F3  29F6               	goto	i1l5498
 13376                           
 13377                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13378  11F4  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 13379  11F5  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 13380  11F6                     i1l5498:	
 13381                           
 13382                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13383  11F6  3001               	movlw	1
 13384  11F7  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13385  11F8  30F4               	movlw	244
 13386  11F9  1903               	skipnz
 13387  11FA  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13388  11FB  1803               	skipnc
 13389  11FC  2A01               	goto	i1l643
 13390                           
 13391                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13392  11FD  1283               	bcf	3,5	;RP0=0, select bank0
 13393  11FE  1303               	bcf	3,6	;RP1=0, select bank0
 13394  11FF  1786               	bsf	6,7	;volatile
 13395  1200  2A04               	goto	i1l5502
 13396  1201                     i1l643:	
 13397                           ;isr.c: 56:                 else
 13398                           
 13399                           
 13400                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13401  1201  1283               	bcf	3,5	;RP0=0, select bank0
 13402  1202  1303               	bcf	3,6	;RP1=0, select bank0
 13403  1203  1386               	bcf	6,7	;volatile
 13404  1204                     i1l5502:	
 13405                           
 13406                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13407  1204  1683               	bsf	3,5	;RP0=1, select bank1
 13408  1205  0832               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 13409  1206  0433               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 13410  1207  1903               	btfsc	3,2
 13411  1208  2A12               	goto	i1l645
 13412                           
 13413                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13414  1209  300A               	movlw	10
 13415  120A  02B2               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 13416  120B  3000               	movlw	0
 13417  120C  1C03               	skipc
 13418  120D  03B3               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13419  120E  02B3               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13420                           
 13421                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13422  120F  1283               	bcf	3,5	;RP0=0, select bank0
 13423  1210  1706               	bsf	6,6	;volatile
 13424                           
 13425                           ;isr.c: 63:                    }
 13426  1211  2A14               	goto	i1l5508
 13427  1212                     i1l645:	
 13428                           ;isr.c: 64:                 else{
 13429                           
 13430                           
 13431                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13432  1212  1283               	bcf	3,5	;RP0=0, select bank0
 13433  1213  1306               	bcf	6,6	;volatile
 13434  1214                     i1l5508:	
 13435                           
 13436                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13437  1214  1683               	bsf	3,5	;RP0=1, select bank1
 13438  1215  0834               	movf	_Delay_Led_Memory^(0+128),w	;volatile
 13439  1216  0435               	iorwf	(_Delay_Led_Memory+1)^(0+128),w	;volatile
 13440  1217  1903               	btfsc	3,2
 13441  1218  2A22               	goto	i1l647
 13442                           
 13443                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13444  1219  300A               	movlw	10
 13445  121A  02B4               	subwf	_Delay_Led_Memory^(0+128),f	;volatile
 13446  121B  3000               	movlw	0
 13447  121C  1C03               	skipc
 13448  121D  03B5               	decf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13449  121E  02B5               	subwf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13450                           
 13451                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13452  121F  1283               	bcf	3,5	;RP0=0, select bank0
 13453  1220  1686               	bsf	6,5	;volatile
 13454                           
 13455                           ;isr.c: 71:                    }
 13456  1221  2A24               	goto	i1l5514
 13457  1222                     i1l647:	
 13458                           ;isr.c: 72:                 else{
 13459                           
 13460                           
 13461                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13462  1222  1283               	bcf	3,5	;RP0=0, select bank0
 13463  1223  1286               	bcf	6,5	;volatile
 13464  1224                     i1l5514:	
 13465                           
 13466                           ;isr.c: 77:                 tempodecorrido+=10;
 13467  1224  300A               	movlw	10
 13468  1225  1683               	bsf	3,5	;RP0=1, select bank1
 13469  1226  07AA               	addwf	_tempodecorrido^(0+128),f	;volatile
 13470  1227  1803               	skipnc
 13471  1228  0AAB               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13472  1229  3000               	movlw	0
 13473  122A  07AB               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13474                           
 13475                           ;isr.c: 78:                 milisegundo+=10;
 13476  122B  300A               	movlw	10
 13477  122C  07B0               	addwf	_milisegundo^(0+128),f	;volatile
 13478  122D  1803               	skipnc
 13479  122E  0AB1               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13480  122F  3000               	movlw	0
 13481  1230  07B1               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13482                           
 13483                           ;isr.c: 79:                 if(milisegundo==1000){
 13484  1231  30E8               	movlw	232
 13485  1232  0630               	xorwf	_milisegundo^(0+128),w	;volatile
 13486  1233  3003               	movlw	3
 13487  1234  1903               	skipnz
 13488  1235  0631               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13489  1236  1D03               	btfss	3,2
 13490  1237  2A54               	goto	i1l5538
 13491                           
 13492                           ;isr.c: 80:                    milisegundo=0;
 13493  1238  01B0               	clrf	_milisegundo^(0+128)	;volatile
 13494  1239  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13495                           
 13496                           ;isr.c: 81:                    segundo++;
 13497  123A  3001               	movlw	1
 13498  123B  00F0               	movwf	??_isr
 13499  123C  0870               	movf	??_isr,w
 13500  123D  07FD               	addwf	_segundo,f	;volatile
 13501                           
 13502                           ;isr.c: 88:                    if(segundo==60){
 13503  123E  303C               	movlw	60
 13504  123F  067D               	xorwf	_segundo,w	;volatile
 13505  1240  1D03               	btfss	3,2
 13506  1241  2A54               	goto	i1l5538
 13507                           
 13508                           ;isr.c: 89:                       segundo=0;
 13509  1242  01FD               	clrf	_segundo	;volatile
 13510                           
 13511                           ;isr.c: 90:                       minuto++;
 13512  1243  3001               	movlw	1
 13513  1244  00F0               	movwf	??_isr
 13514  1245  0870               	movf	??_isr,w
 13515  1246  07FA               	addwf	_minuto,f	;volatile
 13516                           
 13517                           ;isr.c: 91:                       if(minuto==60){
 13518  1247  303C               	movlw	60
 13519  1248  067A               	xorwf	_minuto,w	;volatile
 13520  1249  1D03               	btfss	3,2
 13521  124A  2A54               	goto	i1l5538
 13522                           
 13523                           ;isr.c: 92:                          minuto=0;
 13524  124B  01FA               	clrf	_minuto	;volatile
 13525                           
 13526                           ;isr.c: 93:                          hora++;
 13527  124C  3001               	movlw	1
 13528  124D  00F0               	movwf	??_isr
 13529  124E  0870               	movf	??_isr,w
 13530  124F  07FC               	addwf	_hora,f	;volatile
 13531                           
 13532                           ;isr.c: 94:                          if(hora==24){
 13533  1250  3018               	movlw	24
 13534  1251  067C               	xorwf	_hora,w	;volatile
 13535  1252  1903               	btfsc	3,2
 13536                           
 13537                           ;isr.c: 95:                             hora=0;
 13538  1253  01FC               	clrf	_hora	;volatile
 13539  1254                     i1l5538:	
 13540                           ;isr.c: 99:                 }
 13541                           
 13542                           
 13543                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13544  1254  1283               	bcf	3,5	;RP0=0, select bank0
 13545  1255  1E8C               	btfss	12,5	;volatile
 13546  1256  2ABB               	goto	i1l661
 13547                           
 13548                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13549  1257  1683               	bsf	3,5	;RP0=1, select bank1
 13550  1258  143B               	bsf	_generic_status^(0+128),0
 13551                           
 13552                           ;isr.c: 109:         tempo=30;
 13553  1259  301E               	movlw	30
 13554  125A  00F6               	movwf	isr@tempo
 13555  125B  3000               	movlw	0
 13556  125C  00F7               	movwf	isr@tempo+1
 13557                           
 13558                           ;isr.c: 110:         count=0;
 13559  125D  01AC               	clrf	_count^(0+128)	;volatile
 13560  125E  01AD               	clrf	(_count+1)^(0+128)	;volatile
 13561                           
 13562                           ;isr.c: 111:         pointer=usart_buffer;
 13563  125F  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13564  1260  00F0               	movwf	??_isr
 13565  1261  0870               	movf	??_isr,w
 13566  1262  00B6               	movwf	_pointer^(0+128)
 13567  1263                     i1l5560:	
 13568                           ;isr.c: 112:         while(tempo)
 13569                           
 13570                           
 13571                           ;isr.c: 112:         while(tempo)
 13572  1263  0876               	movf	isr@tempo,w
 13573  1264  0477               	iorwf	isr@tempo+1,w
 13574  1265  1903               	btfsc	3,2
 13575  1266  2A96               	goto	i1l5562
 13576                           
 13577                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13578  1267  1283               	bcf	3,5	;RP0=0, select bank0
 13579  1268  1303               	bcf	3,6	;RP1=0, select bank0
 13580  1269  1E8C               	btfss	12,5	;volatile
 13581  126A  2A8F               	goto	i1l5558
 13582                           
 13583                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13584  126B  081A               	movf	26,w	;volatile
 13585  126C  00F0               	movwf	??_isr
 13586  126D  1683               	bsf	3,5	;RP0=1, select bank1
 13587  126E  0836               	movf	_pointer^(0+128),w
 13588  126F  0084               	movwf	4
 13589  1270  0870               	movf	??_isr,w
 13590  1271  1783               	bsf	3,7	;select IRP bank2
 13591  1272  0080               	movwf	0
 13592                           
 13593                           ;isr.c: 118:                 if(count<32+20 -1)
 13594  1273  082D               	movf	(_count+1)^(0+128),w	;volatile
 13595  1274  3A80               	xorlw	128
 13596  1275  00FF               	movwf	127
 13597  1276  3080               	movlw	128
 13598  1277  027F               	subwf	127,w
 13599  1278  1D03               	skipz
 13600  1279  2A7C               	goto	u531_25
 13601  127A  3033               	movlw	51
 13602  127B  022C               	subwf	_count^(0+128),w	;volatile
 13603  127C                     u531_25:	
 13604  127C  1803               	skipnc
 13605  127D  2A8A               	goto	i1l5556
 13606                           
 13607                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13608  127E  3001               	movlw	1
 13609  127F  1683               	bsf	3,5	;RP0=1, select bank1
 13610  1280  1303               	bcf	3,6	;RP1=0, select bank1
 13611  1281  07AC               	addwf	_count^(0+128),f	;volatile
 13612  1282  1803               	skipnc
 13613  1283  0AAD               	incf	(_count+1)^(0+128),f	;volatile
 13614  1284  3000               	movlw	0
 13615  1285  07AD               	addwf	(_count+1)^(0+128),f	;volatile
 13616                           
 13617                           ;isr.c: 121:                    pointer++;
 13618  1286  3001               	movlw	1
 13619  1287  00F0               	movwf	??_isr
 13620  1288  0870               	movf	??_isr,w
 13621  1289  07B6               	addwf	_pointer^(0+128),f
 13622  128A                     i1l5556:	
 13623                           
 13624                           ;isr.c: 123:                 tempo=30;
 13625  128A  301E               	movlw	30
 13626  128B  00F6               	movwf	isr@tempo
 13627  128C  3000               	movlw	0
 13628  128D  00F7               	movwf	isr@tempo+1
 13629                           
 13630                           ;isr.c: 124:             }
 13631  128E  2A63               	goto	i1l5560
 13632  128F                     i1l5558:	
 13633                           
 13634                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13635  128F  3001               	movlw	1
 13636  1290  02F6               	subwf	isr@tempo,f
 13637  1291  3000               	movlw	0
 13638  1292  1C03               	skipc
 13639  1293  03F7               	decf	isr@tempo+1,f
 13640  1294  02F7               	subwf	isr@tempo+1,f
 13641  1295  2A63               	goto	i1l5560
 13642  1296                     i1l5562:	
 13643                           
 13644                           ;isr.c: 131:         (*pointer)=0;
 13645  1296  1683               	bsf	3,5	;RP0=1, select bank1
 13646  1297  1303               	bcf	3,6	;RP1=0, select bank1
 13647  1298  0836               	movf	_pointer^(0+128),w
 13648  1299  0084               	movwf	4
 13649  129A  1783               	bsf	3,7	;select IRP bank2
 13650  129B  0180               	clrf	0
 13651                           
 13652                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13653  129C  1283               	bcf	3,5	;RP0=0, select bank0
 13654  129D  1C98               	btfss	24,1	;volatile
 13655  129E  2ABB               	goto	i1l661
 13656                           
 13657                           ;isr.c: 134:            CREN=0;
 13658  129F  1218               	bcf	24,4	;volatile
 13659                           
 13660                           ;isr.c: 135:            CREN=1;
 13661  12A0  1618               	bsf	24,4	;volatile
 13662                           
 13663                           ;isr.c: 136:            tempo=RCREG;
 13664  12A1  081A               	movf	26,w	;volatile
 13665  12A2  00F0               	movwf	??_isr
 13666  12A3  01F1               	clrf	??_isr+1
 13667  12A4  0870               	movf	??_isr,w
 13668  12A5  00F6               	movwf	isr@tempo
 13669  12A6  0871               	movf	??_isr+1,w
 13670  12A7  00F7               	movwf	isr@tempo+1
 13671                           
 13672                           ;isr.c: 137:            tempo=RCREG;
 13673  12A8  081A               	movf	26,w	;volatile
 13674  12A9  00F0               	movwf	??_isr
 13675  12AA  01F1               	clrf	??_isr+1
 13676  12AB  0870               	movf	??_isr,w
 13677  12AC  00F6               	movwf	isr@tempo
 13678  12AD  0871               	movf	??_isr+1,w
 13679  12AE  00F7               	movwf	isr@tempo+1
 13680                           
 13681                           ;isr.c: 138:            tempo=RCREG;
 13682  12AF  081A               	movf	26,w	;volatile
 13683  12B0  00F0               	movwf	??_isr
 13684  12B1  01F1               	clrf	??_isr+1
 13685  12B2  0870               	movf	??_isr,w
 13686  12B3  00F6               	movwf	isr@tempo
 13687  12B4  0871               	movf	??_isr+1,w
 13688  12B5  00F7               	movwf	isr@tempo+1
 13689                           
 13690                           ;isr.c: 139:            usart_buffer[0]=0;
 13691  12B6  1703               	bsf	3,6	;RP1=1, select bank2
 13692  12B7  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13693                           
 13694                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13695  12B8  1683               	bsf	3,5	;RP0=1, select bank1
 13696  12B9  1303               	bcf	3,6	;RP1=0, select bank1
 13697  12BA  14BB               	bsf	_generic_status^(0+128),1
 13698  12BB                     i1l661:	
 13699  12BB  0875               	movf	??_isr+5,w
 13700  12BC  1283               	bcf	3,5	;RP0=0, select bank0
 13701  12BD  00FF               	movwf	127
 13702  12BE  0874               	movf	??_isr+4,w
 13703  12BF  008A               	movwf	10
 13704  12C0  0873               	movf	??_isr+3,w
 13705  12C1  0084               	movwf	4
 13706  12C2  0E72               	swapf	(??_isr+2)^(0+4294967168),w
 13707  12C3  0083               	movwf	3
 13708  12C4  0EFE               	swapf	126,f
 13709  12C5  0E7E               	swapf	126,w
 13710  12C6  0009               	retfie
 13711  12C7                     __end_of_isr:	
 13712  007E                     btemp	set	126	;btemp
 13713  007E                     wtemp0	set	126
 13714                           
 13715                           	psect	intentry
 13716  0004                     __pintentry:	
 13717                           ;incstack = 0
 13718                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13719                           
 13720  0004                     interrupt_function:	
 13721  007E                     saved_w	set	btemp
 13722  0004  00FE               	movwf	btemp
 13723  0005  0E03               	swapf	3,w
 13724  0006  00F2               	movwf	??_isr+2
 13725  0007  0804               	movf	4,w
 13726  0008  00F3               	movwf	??_isr+3
 13727  0009  080A               	movf	10,w
 13728  000A  00F4               	movwf	??_isr+4
 13729  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13730  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13731  000D  087F               	movf	btemp+1,w
 13732  000E  00F5               	movwf	??_isr+5
 13733  000F  160A  118A  29D9   	ljmp	_isr


Data Sizes:
    Strings     11
    Constant    64
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     79      79
    BANK1            80     15      76
    BANK3            96      0      58
    BANK2            96      0      52

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 58
		 -> buffer(BANK1[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 58
		 -> buffer(BANK1[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK1[33]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK1[33]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 58
		 -> usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 58
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 52
		 -> NULL(NULL[0]), usart_buffer(BANK2[52]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_24C1025_Read_Str@buffer	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_24C1025_Read_Buffer_USART@data	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MediaPlacaVaccum
    _MediaPlacaVaccum->___flsub
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    ___xxtofl->_ADC_Max_10Bits
    _ADC_Max_10Bits->_my_delay_ms
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Buffer_USART->_I2C_Master_Read
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  140147
                                             74 BANK0      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     223
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    15    15      0   24105
                                             70 BANK0      4     4      0
                                              0 BANK1     11    11      0
                     _ADC_Max_10Bits
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5127
                                             62 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4882
                                             42 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1226
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2463
                                             33 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    2136
                                             33 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     906
                                             19 BANK0     14    10      4
                     _ADC_Max_10Bits (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Max_10Bits                                       9     7      2     663
                                             10 BANK0      9     7      2
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     428
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    19    19      0  113147
                                             63 BANK0      4     4      0
                                              0 BANK1     15    15      0
            _EEPROM_24C1025_Fill_All
   _EEPROM_24C1025_Read_Buffer_USART
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     235
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     352
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      62
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     521
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     521
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   15138
                                             56 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                             35 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    5516
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3387
                                             58 BANK0      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     210
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2904
                                             50 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    2177
                                             54 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    2741
                                             54 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1911
                                             50 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     973
                                             46 BANK0      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     388
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     990
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2    1216
                                              5 BANK0      8     6      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     739
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     254
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     238
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    7238
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    8218
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    8096
                                              9 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    9327
                                             23 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             7     3      4    9293
                                             23 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     7      6    9067
                                             10 BANK0     13     7      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Buffer_USART                    13     7      6    8276
                                              9 BANK0     13     7      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      68
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2    1293
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    9114
                                             56 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    8863
                                             46 BANK0     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    7936
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     608
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    5699
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      68
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      68
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
     _EEPROM_24C1025_Read_Buffer_USART
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _USART_putc
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
       ___flmul (ARG)
         __Umul8_16
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
       ___flmul
         __Umul8_16
       ___fltol
         ___flmul (ARG)
           __Umul8_16
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
         __Umul8_16
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Max_10Bits
       _captura
       _my_delay_ms
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
           _ADC_Max_10Bits (ARG)
             _captura
             _my_delay_ms
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
     ___flge
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
             _ADC_Max_10Bits (ARG)
               _captura
               _my_delay_ms
           _captura
           _my_delay_ms
     ___xxtofl
       _ADC_Max_10Bits (ARG)
         _captura
         _my_delay_ms
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     117       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      F      4C       7       95.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      3A       9       60.4%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      34      11       54.2%
DATA                 0      0     117      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Apr 08 07:50:27 2020

                               _USART_putc 19AD                                 __CFG_CP$ON 0000  
                             ___fldiv@aexp 005A                               ___fldiv@bexp 0059  
                                        pc 0002                               ___fldiv@sign 0052  
                         _MediaPlacaVaccum 0D69            EEPROM_24C1025_Read_Buffer@range 0035  
         EEPROM_24C1025_Write_Str@chip_add 0031                                         fsr 0004  
 __end_of_EEPROM_24C1025_Read_Buffer_USART 1800  __size_of_EEPROM_24C1025_Read_Buffer_USART 0170  
       ??_EEPROM_24C1025_Read_Buffer_USART 002F          ?_EEPROM_24C1025_Read_Buffer_USART 0029  
         _EEPROM_24C1025_Read_Buffer_USART 1690                              _USART_put_int 19F9  
                 Decodify_Command@tempchar 00E7                        __Umul8_16@word_mpld 0026  
               __end_of_RESISTOR_ROOM_TEMP 181C               PROCULUS_VP_Write_String@text 005C  
                                      l430 0372                                        l432 03C8  
                                      l441 0F0F                                        l426 0364  
                                      l523 1D87                                        l524 1D88  
                                      l550 1AF4                                        l518 1D63  
                                      l528 1B3A                                        l494 1983  
                                      l816 1A52                                        l879 19B5  
                                      l799 1A7A                               __CFG_CPD$OFF 0000  
       EEPROM_24C1025_Read_Buffer@chip_add 0034                   Decodify_Command@sizedata 00E0  
                                      _isr 11D9                                        fsr0 0004  
                                      indf 0000                  __end_of_EEPROM_Write_Byte 1D97  
                         _ADC_Media_10bits 1EE1                               __CFG_IESO$ON 0000  
                             ___flmul@aexp 0037                               ___flmul@bexp 0038  
                   PROCULUS_VP_Write@vetor 0054               ?_EEPROM_24C1025_Write_Buffer 002A  
                             ___flmul@sign 0036                               ___flmul@temp 0041  
                             ___flmul@prod 003D    __end_of_PROCULUS_Control_Register_Write 1D5B  
 __size_of_PROCULUS_Control_Register_Write 0038          ??_PROCULUS_Control_Register_Write 0053  
         ?_PROCULUS_Control_Register_Write 0052            _PROCULUS_Control_Register_Write 1D23  
                             __CFG_LVP$OFF 0000                               ___fltol@exp1 004D  
                          __end_of_MAX_ADC 1824                                       l1310 0CDE  
                                     l1170 10BD                                       l1331 0D5E  
                                     l1323 0D46                                       l1173 1123  
                                     l1423 1153                                       l1345 09E7  
                                     l1436 11A9                                       l1189 1FE2  
                                     l1437 11B3                                       l1429 1193  
                                     l1293 0C25                                       l1470 1B88  
                                     l1367 0B26                                       l1295 0C03  
                                     l1369 0B34                                       l1289 0B8C  
                                     l1397 06B1                                       l6010 1FCE  
                                     l6020 1FF1                                       l6012 1FDE  
                                     l6042 1DC3                                       l6034 1D9F  
                                     l6036 1DAD                                       l6212 0D11  
                                     l6204 0D06                                       l6046 1DCE  
                                     l7022 0A80                                       l6206 0D08  
                                     l6070 0B62                                       l6400 1166  
                                     l7040 0A8B                                       l7016 0A61  
                                     l7024 0A3D                                       l6216 0D13  
                                     l6136 0C0E                                       l6128 0BD2  
                                     l6064 0B57                                       l5610 1B2B  
                                     l6410 11A7                                       l6402 1178  
                                     l7042 0AA8                                       l7026 0A85  
                                     l6234 0D56                                       l6162 0C54  
                                     l6154 0C33                                       l6138 0C10  
                                     l6146 0C1F                                       l7210 0F8D  
                                     l7114 1DE4                                       l5612 1B17  
                                     l5620 1B2F                                       l5700 1496  
                                     l6340 0603                                       l6260 03E6  
                                     l6412 1198                                       l7052 0AC1  
                                     l6164 0C56                                       l6172 0C66  
                                     l6092 0B84                                       l6068 0B5A  
                                     l7204 0F35                                       l5702 149B  
                                     l6510 17E4                                       l6342 0620  
                                     l6262 03EE                                       l7302 01B8  
                                     l7062 0AF3                                       l6238 0D5A  
                                     l6190 0CF0                                       l6182 0CD0  
                                     l7134 1DFE                                       l5616 1B23  
                                     l5704 149C                                       l5720 14D5  
                                     l6512 170F                                       l6440 16C1  
                                     l5800 085A                                       l6352 0639  
                                     l6280 0413                                       l7320 020E  
                                     l6424 11D0                                       l7048 0ABF  
                                     l6088 0B81                                       l7216 0FA3  
                                     l5730 14FF                                       l6506 17BD  
                                     l6514 17E9                                       l6442 16C2  
                                     l5802 085B                                       l6530 12F2  
                                     l6362 066B                                       l6258 03E4  
                                     l7314 01E7                                       l7242 0078  
                                     l7066 0B0C                                       l6098 0B96  
                                     l7170 0D93                                       l5644 1CF3  
                                     l6604 154A                                       l5900 1D6D  
                                     l6372 069A                                       l6348 0637  
                                     l6276 0409                                       l7332 025C  
                                     l7308 01C6                                       l7236 005F  
                                     l7148 1E05                                       l7500 0770  
                                     l5726 14FA                                       l5662 13E5  
                                     l6710 1E58                                       l6438 16BC  
                                     l6630 159D                                       l6606 154F  
                                     l6526 12EC                                       l5902 1D70  
                                     l6366 0681                                       l6278 040B  
                                     l7350 02CD                                       l7326 023E  
                                     l7270 0128                                       l7246 0086  
                                     l6390 114B                                       l7078 0B30  
                                     l6198 0CFF                                       l5728 1424  
                                     l5664 13EA                                       l5752 1CAA  
                                     l5760 1CB1                                       l6480 176A  
                                     l6608 1550                                       l6528 12F1  
                                     l6800 0820                                       l6288 0421  
                                     l7360 030B                                       l7344 02B0  
                                     l7280 015A                                       l5666 13EB  
                                     l6482 176F                                       l5842 090A  
                                     l6650 15FB                                       l7354 02F7  
                                     l7338 028B                                       l7290 018B  
                                     l7274 0142                                       l7266 0119  
                                     l7258 00E0                                       l7186 0DF2  
                                     l7178 0DDB                                       l5748 1C97  
                                     l6484 1770                                       l5844 090F  
                                     l6652 15FC                                       l6724 100A  
                                     l5940 1A6F                                       l7372 0338  
                                     l6900 1F57                                       l6396 1162  
                                     ?_isr 0070                                       l5846 0910  
                                     l6590 132A                                       l7366 031C  
                                     l6648 15F6                                       l6592 13A0  
                                     l6584 137E                                       l7384 0368  
                                     l7296 01AB                                       l6912 1F8C  
                                     l5874 097F                                       l6674 1649  
                                     l5970 1D53                                       l5938 1A60  
                                     l5778 1B80                                       l7554 0381  
                                     l7378 0358                                       l6922 10D7  
                                     l7474 0746                                       l5868 095D  
                                     l5876 08A8                                       l6684 1670  
                                     l6748 1C21                                       l5892 1C50  
                                     l7396 0376                                       l6908 1F7F  
                                     l5948 1CBC                                       l6860 1A5A  
                                     l5878 0984                                       l5798 0855  
                                     l6686 1679                                       l5990 1F9E  
                                     l5894 1C72                                       l6782 1A9A  
                                     l6838 1EFD                                       l6926 10FD  
                                     l5968 1D3D                                       l5984 07D5  
                                     l6776 1EBC                                       l6856 1A57  
                                     l6960 09B9                                       l5986 07F1  
                                     l5994 1FA7                                       l6962 09C1  
                                     l6884 1E40                                       l6980 09DF  
                                     l6956 09B6                                       l6798 0803  
                                     l6878 1E2B                                       l6990 0A06  
                                     l6976 09DC                                       l6898 1F47  
                                     l6996 0A12                                       _BETA 1848  
                                     STR_1 1850                               __CFG_WDTE$ON 0000  
                                     STR_2 1858                                _statuspower 00BA  
                          ADC_Max_10Bits@i 0032                                       _CREN 00C4  
                                     u6010 0BF2                                       u6020 0BF3  
                                     u6005 0BE6                                       u5403 1D05  
                                     u7003 1548                                       u7013 15AC  
                                     u6205 0CF2                                       u5423 13D2  
                                     u6151 0C91                                       u6143 0C78  
                                     u6135 0C5A                                       u6055 0C14  
                                     u5520 1CA7                                       u6160 0CA5  
                                     u6152 0C92                                       u5433 13E3  
                                     u7033 15F4                                       u6305 0D30  
                                     u6161 0CA6                                       u6153 0C97  
                                     u6162 0CAB                                       u6154 0C98  
                                     u5443 1446                                       u5603 08BE  
                                     u6163 0CAC                                       u6155 0C9D  
                                     u6156 0C9E                                       u7205 1F4B  
                                     u5463 1494                                       u7063 1E89  
                                     u5623 0908                                       u5703 1CCE  
                                     u7311 110E                                       u7312 110F  
                                     u5545 1A80                                       u7225 1F59  
                                     u7313 1114                                       u7314 1115  
                                     u5475 1432                                       u7235 1F6E  
                                     u7315 111A                                       u7316 111B  
                                     u5565 1B89                                       u6605 0607  
                                     u6525 0524                                       u7245 1F80  
                                     u5583 0842                                       u5815 1FE7  
                                     u7095 1EC8                                       u7175 1E3A  
                                     u5593 0853                                       u6705 0674  
                                     u6625 0612                                       u7425 0A46  
                                     u6715 068C                                       u5755 1FB0  
                                     u7515 0A9A                                       u7435 0A4F  
                                     u7291 10E8                                       u7292 10E9  
                                     u6565 05B8                                       u6805 11A0  
                                     u7605 0B17                                       u7293 10EE  
                                     u7294 10EF                                       u5855 1DA2  
                                     u6495 04CB                                       u7455 0A5A  
                                     u7295 10F4                                       u7296 10F5  
                                     u6913 1768                                       u5785 1FCF  
                                     u7625 1BF7                                       u7465 0A6F  
                                     u5875 1DAE                                       u6595 05EF  
                                     u6933 12D9                                       u5885 1DBA  
                                     u6845 11BB                                       u6765 116F  
                                     u6943 12EA                                       u5895 1DC4  
                                     u6695 0656                                       u7495 0A8F  
                                     u6873 16A9                                       u6953 1342  
                                     u6785 118B                                       u7585 0ADE  
                                     u6883 16BA                                       u7907 1A88  
                                     u7595 0AFC                                       u6893 1725  
                                     u7917 1C46                                       u7927 1D91  
                                     u6993 1537                                       u7937 1B4B  
                                     u7947 15CD                                       u7957 168A  
                                     u7967 0995                                       u7887 06C6  
                                     u7977 17FA                                       u7897 1CD6  
                                     u7987 1D0E                                       u7997 1B1F  
                                     _WPUB 0095                       PROCULUS_Buzzer@vetor 0059  
                             __CFG_WRT$OFF 0000                              __CFG_FCMEN$ON 0000  
         __end_of_I2C_Master_RepeatedStart 19AD                                       _main 06BE  
                                     _hora 007C          __size_of_EEPROM_24C1025_Write_Int 0020  
                                     btemp 007E          __size_of_EEPROM_24C1025_Write_Str 00F3  
                ?_EEPROM_24C1025_Write_Int 004E                              __CFG_BOREN$ON 0000  
                ?_EEPROM_24C1025_Write_Str 002A                __size_of_EEPROM_Read_String 0020  
                                     start 0012                           __end_of_ADC_init 1997  
                         _BALANCE_RESISTOR 184C                            ___fldiv@new_exp 0053  
       EEPROM_24C1025_Read_Buffer@sizedata 002E                                      ??_isr 0070  
                         ?_I2C_Master_Init 002E                           ?_I2C_Master_Read 0023  
                         ?_I2C_Master_Wait 0070                           ?_I2C_Master_Stop 0070  
                           ?_USART_put_int 004E                              ___fltol@sign1 004C  
                          __end_of___fladd 0D69                                      ?_main 0070  
                          __end_of___fldiv 0B3C                                      _EEADR 010D  
                          __end_of___flmul 06BE                            __end_of___flsub 1AD1  
                          __end_of___fltol 2000                                      _ANSEL 0188  
                          __end_of___lldiv 1F95                                      _T1CON 0010  
                          __end_of___lwdiv 1DD3                                      i1l643 1201  
                                    i1l661 12BB                                      i1l645 1212  
                                    i1l647 1222                                      _RCREG 001A  
                                    _TMR1H 000F                                      _TMR1L 000E  
                                    _SPBRG 0099                                      _PORTA 0005  
                                    _PORTB 0006                                      _PORTC 0007  
                                    _PORTE 0009                                      _TRISA 0085  
                                    _TRISB 0086                                      _TRISC 0087  
          EEPROM_24C1025_Read_Int@chip_add 003D                                      _TRISE 0089  
                                    _TXREG 0019                      ADC_Media_10bits@canal 0046  
                          __end_of_captura 198C                              __CFG_PWRTE$ON 0000  
                             _usart_buffer 0110                      ADC_Media_10bits@value 0047  
                EEPROM_Read_Integer@result 0028                                      _canal 00B9  
             __size_of_EEPROM_Read_Integer 002A                                      _count 00AC  
                                    _errno 00A8              ??_EEPROM_24C1025_Write_Buffer 0031  
       __size_of_EEPROM_24C1025_Write_Byte 0016                 ?_EEPROM_24C1025_Write_Byte 0037  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E            EEPROM_24C1025_Read_Byte@mem_add 0037  
                             __end_of_BETA 184C                    __size_of_PROCULUS_Delay 001D  
                           __CFG_MCLRE$OFF 0000          __size_of_PROCULUS_VP_Write_String 001A  
                              ?_USART_init 0020                            __initialization 0015  
                ?_PROCULUS_VP_Write_String 005A                                ?_USART_putc 0070  
                             __end_of_main 07B2                             Send_To_MB@size 0021  
                 __end_of_EEPROM_Read_Byte 1B54                                     ??_main 006A  
                         __end_of_Save_Log 10A3                           _USART_put_string 1C4C  
                    EEPROM_Write_Byte@addr 0023                      EEPROM_Write_Byte@dado 0020  
               __size_of_EEPROM_Write_Byte 003C                          ?_I2C_Master_Start 0070  
                EEPROM_Write_Byte@last_GIE 0024                          ?_I2C_Master_Write 0023  
                       ??_I2C_Master_Start 0023                                     _ADCON1 009F  
                       ??_I2C_Master_Write 0025                  PROCULUS_Show_Screen@vetor 0059  
                                   _ADRESH 001E                                     _ADRESL 009E  
                                   _EEDATA 010C                                     _EECON2 018D  
                               _Send_To_MB 1BC1                      EEPROM_Write_Integer@i 002C  
                                   _ANSELH 0189               __end_of_PROCULUS_Show_Screen 19E3  
                                   i1l5502 1204                                     i1l5514 1224  
                                   i1l5508 1214                                     i1l5560 1263  
                                   i1l5562 1296                                     i1l5538 1254  
                                   i1l5556 128A                                     i1l5558 128F  
                                   i1l5494 11E7                                     i1l5498 11F6  
                                   u531_25 127C          __end_of_EEPROM_24C1025_Write_Byte 19F9  
                             ?_my_delay_ms 0020                                     _TMR1IE 0460  
                                   _TMR1CS 0081                   ?_EEPROM_24C1025_Fill_All 0058  
                                   _SSPADD 0093                                     _TRISC3 043B  
                                   _TRISC4 043C                                     _TRISC6 043E  
                                   _TRISC7 043F                                     _SSPCON 0014  
                                   _SSPBUF 0013             EEPROM_24C1025_Fill_All@mem_add 005B  
                         __end_of___xxtofl 11D9              EEPROM_24C1025_Read_Str@buffer 002D  
                       PROCULUS_VP_Write@i 0059                   __end_of_Decodify_Command 03C9  
                 ?_EEPROM_24C1025_Read_Int 0037                   ?_EEPROM_24C1025_Read_Str 0029  
                 _I2C_Master_RepeatedStart 19A2       __size_of_EEPROM_24C1025_Write_Buffer 016A  
                                   ___flge 10A3                                  ??___fladd 0052  
                                ??___fldiv 0049                                  ??___flmul 0031  
                                ??___flsub 0066                                  ??___fltol 0047  
                          ??_USART_put_int 0050                                  ??___lldiv 0028  
                                   _header 00AE                          __end_of_ROOM_TEMP 1820  
                                ??___lwdiv 0024                                     _buffer 00BC  
                        _USART_to_Protocol 1E8C                            USART_putc@value 0020  
                                   _minuto 007A          EEPROM_24C1025_Read_Buffer@cnt_108 0033  
                                ??_captura 0022                         ?_USART_to_Protocol 0070  
             Decodify_Command@add_24LCxxxx 00E8                                     _strcpy 1A95  
                                   _strlen 1A5C          EEPROM_24C1025_Read_Buffer@mem_add 002A  
         __end_of_EEPROM_24C1025_Read_Byte 1A28                         __size_of__Umul8_16 0023  
                                   saved_w 007E          EEPROM_24C1025_Write_Byte@chip_add 003C  
                                ?_ADC_init 0070                        ??_USART_to_Protocol 0020  
                      __size_of_USART_init 003C                        __size_of_USART_putc 0010  
                 __end_of_MediaPlacaVaccum 1000                                 ___flge@ff1 0020  
                               ___flge@ff2 0024                               ___xxtofl@arg 003D  
                             ___xxtofl@exp 003C                               ___xxtofl@val 0033  
                         __end_oflog@coeff 1848                    __end_of__initialization 0033  
      PROCULUS_Control_Register_Write@size 0052                                 ___fltol@f1 0043  
                             _Board_Number 00B8                   __end_of_ADC_Media_10bits 1F37  
                           __pcstackCOMMON 0070                   __size_of_PROCULUS_Buzzer 0022  
                __end_of_USART_to_Protocol 1EE1                      USART_put_string@vetor 0021  
                      my_delay_ms_WDT@time 0020              __size_of_EEPROM_Write_Integer 0032  
                 __size_of_my_delay_ms_WDT 0038                             _OPTION_REGbits 0081  
                  __size_of_ADC_Max_10Bits 003E                   __end_of_BALANCE_RESISTOR 1850  
         __end_of_EEPROM_24C1025_Write_Int 1AF1           __end_of_EEPROM_24C1025_Write_Str 13BA  
                               ??_ADC_init 0020                __end_of_EEPROM_Write_String 082B  
          __end_of_EEPROM_24C1025_Fill_All 1E8C                                ?_Send_To_MB 0070  
                   __size_of_Send_Reply_OK 0009                                 __pbssBANK1 00A0  
                               __pbssBANK2 0110                                 __pbssBANK3 0190  
                       _RESISTOR_ROOM_TEMP 1818            __end_of_EEPROM_24C1025_Read_Int 1BC1  
          __end_of_EEPROM_24C1025_Read_Str 1690                   ?_Package_Usart_is_for_me 0070  
                                ?_Save_Log 0058                             _PROCULUS_Delay 1A78  
                        __end_of__Umul8_16 1B99                                 __pmaintext 06BE  
                                  ?___flge 0020                        Save_Log@add_datalog 0058  
                      _EEPROM_Read_Integer 1002                 PROCULUS_Show_Screen@screen 0056  
                               __pintentry 0004                       _PROCULUS_Show_Screen 19CE  
                       ADC_Max_10Bits@Temp 002E                                    _T1CKPS0 0084  
                                  _T1CKPS1 0085                                    ?_strcpy 0020  
                                  ?_strlen 0020                          MediaPlacaVaccum@i 00E6  
                                ?___xxtofl 0033                                    _MAX_ADC 1820  
                     ?_EEPROM_Read_Integer 0023                      Decodify_Command@dados 00DD  
              EEPROM_24C1025_Read_Int@data 003E                                    _SSPCON2 0091  
         __end_of_PROCULUS_VP_Write_String 1A42                    EEPROM_Read_Integer@addr 0026  
                                  _SSPSTAT 0094                   _EEPROM_24C1025_Read_Byte 1A0F  
                               __stringtab 1800                        PROCULUS_VP_Write@vp 0052  
              ??_EEPROM_24C1025_Write_Byte 003C                 __end_of_EEPROM_Read_String 1B11  
                   __end_of_PROCULUS_Delay 1A95                   __end_of_USART_put_string 1C7F  
                     __size_of_my_delay_ms 0037                                 ??_Save_Log 005C  
                          PROCULUS_Delay@i 0024                                    _Vaccum0 00A4  
                             ??_USART_init 0024                EEPROM_24C1025_Read_Str@ctrl 0033  
                                  _Tensao1 00A0                               ??_USART_putc 0020  
               __size_of_USART_to_Protocol 0055                PROCULUS_Buzzer@time_ms_x_10 0056  
                          __size_of___flge 0093                                    ___fladd 0B3C  
                                  ___fldiv 099B                   EEPROM_Write_Integer@addr 002B  
                                  ___flmul 03C9                   EEPROM_Write_Integer@dado 0025  
                                  ___flsub 1AB3                                    ___fltol 1F95  
                                  ___lldiv 1F37                                    ___lwdiv 1D97  
                            _Send_Reply_OK 1979                        __size_of_Send_To_MB 0028  
                    ?_PROCULUS_Show_Screen 0056                                    _captura 1982  
                         _statuspower_memo 007B                                    __ptext1 1DD3  
                                  __ptext2 0D69                                    __ptext3 1AB3  
                                  __ptext4 0B3C                                    __ptext5 10A3  
                                  __ptext6 099B                                    __ptext7 1A42  
                                  __ptext8 1EE1                                    __ptext9 1136  
                        ??_PROCULUS_Buzzer 0058                                    _destino 00B7  
                        ?_EEPROM_Read_Byte 0070                            __size_of_strcpy 001E  
                          __size_of_strlen 001C                               __size_of_isr 00EE  
                               ??___xxtofl 0037                         ??_EEPROM_Read_Byte 0020  
                                  _segundo 007D                   __size_of_I2C_Master_Init 0031  
                 __size_of_I2C_Master_Read 0035                             _usart_protocol 0190  
                    ??_EEPROM_Read_Integer 0025                   __size_of_I2C_Master_Wait 0021  
                 __size_of_I2C_Master_Stop 0009              EEPROM_24C1025_Write_Int@local 0056  
                                  _pointer 00B6              EEPROM_24C1025_Write_Byte@data 003B  
                                  clrloop0 1969                         __end_of_USART_init 1E0F  
          __end_of_Package_Usart_is_for_me 1A5C                         __end_of_USART_putc 19BD  
                        ADC_Media_10bits@i 0049                       end_of_initialization 0033  
                 _EEPROM_24C1025_Write_Int 1AD1                          ??_my_delay_ms_WDT 0024  
                 _EEPROM_24C1025_Write_Str 12C7                 ??_I2C_Master_RepeatedStart 0023  
                          ?_PROCULUS_Delay 0020                            my_delay_ms@time 0020  
          EEPROM_24C1025_Write_Buffer@data 002F            EEPROM_24C1025_Write_Buffer@ctrl 0036  
                __size_of_I2C_Master_Start 0011                  __size_of_I2C_Master_Write 000B  
                        ?_Decodify_Command 0070                            ___lldiv@divisor 0020  
                          ___lldiv@counter 002D       EEPROM_24C1025_Read_Buffer_USART@data 002E  
     EEPROM_24C1025_Read_Buffer_USART@ctrl 0035                         ??_Decodify_Command 005F  
                                _RCSTAbits 0018                           I2C_Master_Init@c 002E  
                         I2C_Master_Read@a 0023                             ?_Send_Reply_OK 0070  
                _EEPROM_24C1025_Write_Byte 19E3           __size_of_EEPROM_24C1025_Fill_All 003F  
                                  strlen@s 0020                         USART_to_Protocol@i 0022  
                                _PORTAbits 0005                                  _PORTBbits 0006  
                                _PORTCbits 0007                           _Delay_Led_Memory 00B4  
             ??_EEPROM_24C1025_Read_Buffer 0030              EEPROM_24C1025_Write_Str@range 0032  
                                _ROOM_TEMP 181C                             _ADC_Max_10Bits 1E0F  
                              ___fladd@grs 005D           __size_of_EEPROM_24C1025_Read_Int 0028  
  EEPROM_24C1025_Read_Buffer_USART@cnt_117 0032           __size_of_EEPROM_24C1025_Read_Str 016C  
                            ___xxtofl@sign 003B        __end_of_EEPROM_24C1025_Write_Buffer 1524  
              _EEPROM_24C1025_Write_Buffer 13BA    EEPROM_24C1025_Read_Buffer_USART@mem_add 0029  
                              ___fldiv@grs 0055                                ___fldiv@rem 004E  
     PROCULUS_Control_Register_Write@vetor 0054           EEPROM_24C1025_Write_Buffer@count 0033  
          EEPROM_24C1025_Write_Int@mem_add 004E           EEPROM_24C1025_Write_Buffer@range 0035  
                        __size_of_ADC_init 000B                    Decodify_Command@tempint 00E1  
                        ?_MediaPlacaVaccum 0070                      PROCULUS_VP_Write@size 0056  
          EEPROM_24C1025_Read_Str@chip_add 0031                                ___flmul@grs 0039  
                       ??_MediaPlacaVaccum 0066                   _PROCULUS_VP_Write_String 1A28  
                                _TXSTAbits 0098        __size_of_EEPROM_24C1025_Read_Buffer 0170  
                        ?_ADC_Media_10bits 0041                     PROCULUS_Delay@tempo_ms 0020  
                   ??_PROCULUS_Show_Screen 0058                         ??_ADC_Media_10bits 0045  
                           __end_of___flge 1136                      __end_of_USART_put_int 1A0F  
                   __end_of_ADC_Max_10Bits 1E4D                                _BAUDCTLbits 0187  
                           __end_of_strcpy 1AB3                             __end_of_strlen 1A78  
                      start_initialization 0015                                __end_of_isr 12C7  
                              USART_init@i 0026                               ??_Send_To_MB 0021  
 EEPROM_24C1025_Read_Buffer_USART@chip_add 0033                          ??_I2C_Master_Init 0032  
                        ??_I2C_Master_Read 0025                          ??_I2C_Master_Wait 0020  
                        ??_I2C_Master_Stop 0023               __end_of_EEPROM_Write_Integer 1C4C  
         EEPROM_24C1025_Write_Int@chip_add 0055                   __CFG_FOSC$INTRC_NOCLKOUT 0000  
                      Decodify_Command@add 00DF                            ??_Send_Reply_OK 0025  
                                 ??___flge 0028                          __size_of_Save_Log 0077  
                     I2C_Master_Wait@tempo 0022                                  __Umul8_16 1B76  
                       __end_of_Send_To_MB 1BE9           __size_of_Package_Usart_is_for_me 001A  
                          ?_ADC_Max_10Bits 002A                                   ??_strcpy 0021  
                                 ??_strlen 0022   EEPROM_24C1025_Read_Buffer_USART@sizedata 002D  
               ??_EEPROM_24C1025_Read_Byte 003B         EEPROM_24C1025_Write_Buffer@mem_add 002A  
                                ___fladd@a 004E                                  ___fladd@b 004A  
         EEPROM_24C1025_Write_Byte@mem_add 0037                                  ___fldiv@a 0041  
                                ___fldiv@b 0045                                  ___flmul@a 002D  
                                ___flmul@b 0029                                __pbssCOMMON 0078  
                                ___flsub@a 005E                                  ___flsub@b 0062  
                                ___latbits 0002                              __pcstackBANK0 0020  
                            __pcstackBANK1 00DD                          _PROCULUS_VP_Write 07B2  
                        __size_of___xxtofl 00A3                         ?_PROCULUS_VP_Write 0052  
             __size_of_EEPROM_Write_String 002B                           _I2C_Master_Start 19BD  
                         _I2C_Master_Write 1997                        ??_PROCULUS_VP_Write 0057  
                           _tempodecorrido 00AA                          ?_USART_put_string 0021  
                          _PROCULUS_Buzzer 1B54                           ___lwdiv@dividend 0022  
           Package_Usart_is_for_me@retorno 0020                         ??_USART_put_string 0023  
                                 ?___fladd 004A                                   ?___fldiv 0041  
                  _EEPROM_24C1025_Fill_All 1E4D                                   ?___flmul 0029  
                                 ?___flsub 005E                                   ?___fltol 0043  
                                 ?___lldiv 0020                                 ?__Umul8_16 0020  
                       _EEPROM_Read_String 1AF1                                   ?___lwdiv 0020  
       __end_of_EEPROM_24C1025_Read_Buffer 099B                 _EEPROM_24C1025_Read_Buffer 082B  
                    MediaPlacaVaccum@Valor 00DD                                   ?_captura 0020  
                                __pstrings 1800                      MediaPlacaVaccum@canal 00E1  
                          _my_delay_ms_WDT 1CEB                    _EEPROM_24C1025_Read_Int 1B99  
                  _EEPROM_24C1025_Read_Str 1524                     EEPROM_Read_Integer@ptr 0027  
               ??_EEPROM_24C1025_Write_Int 0054                 ??_EEPROM_24C1025_Write_Str 002F  
                      ?_EEPROM_Read_String 0023                  __end_of_PROCULUS_VP_Write 07F9  
               EEPROM_24C1025_Read_Str@cnt 0030                                   _ADC_init 198C  
                         ___lwdiv@quotient 0026                    EEPROM_Write_Integer@ptr 002A  
                         ??_PROCULUS_Delay 0022                        ADC_Max_10Bits@canal 002D  
           EEPROM_24C1025_Read_Buffer@data 002F             EEPROM_24C1025_Read_Buffer@ctrl 0036  
                      ADC_Max_10Bits@value 0030                              ??_my_delay_ms 0024  
                __size_of_EEPROM_Read_Byte 0022                          interrupt_function 0004  
          EEPROM_24C1025_Write_Str@mem_add 002A                       ??_EEPROM_Read_String 0024  
                                clear_ram0 1968                                   _PIE1bits 008C  
                                 _PIR1bits 000C           PROCULUS_Control_Register_Write@i 0055  
                   Decodify_Command@OutPut 00E3                            _PT100_TRANSLADA 1810  
                          _Delay_Led_Usart 00B2               EEPROM_24C1025_Read_Byte@data 003D  
              __end_of_EEPROM_Read_Integer 102C                                 _ADCON0bits 001F  
                              __stringbase 180F                                 _ADCON1bits 009F  
                __size_of_Decodify_Command 0392                       _EEPROM_Write_Integer 1C1A  
           EEPROM_24C1025_Read_Int@mem_add 0037                                  main@reset 006D  
               ??_PROCULUS_VP_Write_String 005D                        I2C_Master_Read@temp 0027  
                  __end_of_PROCULUS_Buzzer 1B76                             _generic_status 00BB  
                               _EECON1bits 018C                                   _Save_Log 102C  
                ??_EEPROM_24C1025_Fill_All 005A                        __end_of_my_delay_ms 1CEB  
             EEPROM_24C1025_Read_Str@range 0032                    __end_of_my_delay_ms_WDT 1D23  
                             my_delay_ms@i 0026                                ??__Umul8_16 0022  
                __size_of_MediaPlacaVaccum 0297          __size_of_I2C_Master_RepeatedStart 000B  
                         __size_of___fladd 022D                  ??_EEPROM_24C1025_Read_Int 003B  
                  _Package_Usart_is_for_me 1A42                           __size_of___fldiv 01A1  
                ??_EEPROM_24C1025_Read_Str 002E                           __size_of___flmul 02F5  
                ?_I2C_Master_RepeatedStart 0070                           __size_of___flsub 001E  
                         __size_of___fltol 006B                           __size_of___lldiv 005E  
                         __size_of___lwdiv 003C                         __end_of__stringtab 1810  
      EEPROM_24C1025_Write_Buffer@chip_add 0034                        USART_put_string@ptr 0023  
                         __size_of_captura 000A                      ?_EEPROM_Write_Integer 0025  
                          _I2C_Master_Init 1BE9                            _I2C_Master_Read 1C7F  
                                 ___xxtofl 1136                 __size_of_PROCULUS_VP_Write 0047  
                          _I2C_Master_Wait 1B11           EEPROM_24C1025_Read_Byte@chip_add 003C  
                          _I2C_Master_Stop 1970                  __size_of_ADC_Media_10bits 0056  
                          ___lwdiv@divisor 0020                            ___lwdiv@counter 0025  
                                 __ptext10 1E0F                                   __ptext11 1CB4  
                                 __ptext20 1C4C                                   __ptext12 1982  
                                 __ptext21 102C                                   __ptext13 1BE9  
                                 __ptext30 1D97                                   __ptext22 1F95  
                                 __ptext14 1F37                                   __ptext31 1D23  
                                 __ptext23 03C9                                   __ptext15 0037  
                                 __ptext40 12C7                                   __ptext32 19F9  
                                 __ptext24 1B76                                   __ptext16 1A95  
                                 __ptext41 19E3                                   __ptext33 1A78  
                                 __ptext25 1A28                                   __ptext17 1E8C  
                                 __ptext50 1E4D                                   __ptext42 1524  
                                 __ptext34 0800                                   __ptext26 1A5C  
                                 __ptext18 1BC1                                   __ptext51 1AD1  
                                 __ptext43 1B99                                   __ptext35 1C1A  
                                 __ptext27 07B2                                   __ptext19 1979  
                                 __ptext52 13BA                                   __ptext44 1A0F  
                                 __ptext36 1D5B                                   __ptext28 19CE  
                                 __ptext53 1CEB                                   __ptext45 082B  
                                 __ptext37 1AF1                                   __ptext29 1B54  
                                 __ptext54 1997                                   __ptext46 1690  
                                 __ptext38 1002                                   __ptext55 1970  
                                 __ptext47 19AD                                   __ptext39 1B32  
                                 __ptext56 19BD                                   __ptext48 19A2  
                                 __ptext57 1B11                                   __ptext49 1C7F  
                                 __ptext58 198C                                   __ptext59 11D9  
                        __CFG_BOR4V$BOR40V 0000                         USART_put_int@value 004E  
                           _PT100_CONSTANT 1814                       MediaPlacaVaccum@Temp 00E2  
                               strcpy@from 0020                              __size_of_main 00F4  
             EEPROM_24C1025_Fill_All@value 0058                 PROCULUS_VP_Write_String@vp 005A  
                  __end_of_PT100_TRANSLADA 1814        EEPROM_24C1025_Write_Buffer@sizedata 002E  
                              _milisegundo 00B0                           ??_ADC_Max_10Bits 002C  
                           _Delay_Led_Tmr0 0078              __size_of_PROCULUS_Show_Screen 0015  
                      _EEPROM_Write_String 0800                                   log@coeff 1824  
                 __end_of_I2C_Master_Start 19CE                   __end_of_I2C_Master_Write 19A2  
                               _INTCONbits 000B                     __end_of_PT100_CONSTANT 1818  
                                 isr@tempo 0076                       EEPROM_Read_Byte@addr 0022  
                   EEPROM_Read_String@addr 0025                     EEPROM_Read_String@dado 0023  
                         my_delay_ms_WDT@i 0026                                   intlevel1 0000  
                         ?_PROCULUS_Buzzer 0056                          USART_put_int@dado 0051  
                         _EEPROM_Read_Byte 1B32                                _my_delay_ms 1CB4  
                     ?_EEPROM_Write_String 0025                           ___lldiv@dividend 0024  
                   __size_of_USART_put_int 0016               EEPROM_24C1025_Write_Int@data 0052  
                     EEPROM_Read_Integer@i 002A                    EEPROM_Write_String@addr 0027  
                  EEPROM_Write_String@dado 0025                         USART_init@baudrate 0020  
                                stringcode 180A                                 _OSCCONbits 008F  
    EEPROM_24C1025_Read_Buffer_USART@range 0034                  ??_Package_Usart_is_for_me 0020  
                         ?_my_delay_ms_WDT 0020                      __end_of_Send_Reply_OK 1982  
                  __end_of_I2C_Master_Init 1C1A                    __end_of_I2C_Master_Read 1CB4  
                  __end_of_I2C_Master_Wait 1B32                    __end_of_I2C_Master_Stop 1979  
             EEPROM_24C1025_Write_Str@data 002E               EEPROM_24C1025_Write_Str@ctrl 0033  
              ?_EEPROM_24C1025_Read_Buffer 002A            EEPROM_24C1025_Fill_All@chip_add 005A  
                   ??_EEPROM_Write_Integer 0027                     __Umul8_16@multiplicand 0020  
          USART_to_Protocol@usart_protocol 0024                           _Decodify_Command 0037  
                __size_of_USART_put_string 0033                           ___lldiv@quotient 0029  
                        I2C_Master_Write@d 0023                                   strcpy@cp 0023  
                                 strlen@cp 0022                                   strcpy@to 0022  
                                 stringdir 180A                                   stringtab 1800  
                              _SSPCON2bits 0091                          _EEPROM_Write_Byte 1D5B  
           EEPROM_24C1025_Read_Str@mem_add 0029                              ___fladd@signs 005A  
                       ?_EEPROM_Write_Byte 0020                      ??_EEPROM_Write_String 0026  
                             ___fladd@aexp 005B                               ___fladd@bexp 005C  
        __size_of_EEPROM_24C1025_Read_Byte 0019                  ?_EEPROM_24C1025_Read_Byte 0037  
                      EEPROM_Read_String@c 0026                       __Umul8_16@multiplier 0028  
                      ??_EEPROM_Write_Byte 0021                          __Umul8_16@product 0024  
                               _USART_init 1DD3  
