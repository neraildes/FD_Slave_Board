

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 05 16:20:00 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,merge=1,delta=2
    67                           	psect	text52,local,class=CODE,merge=1,delta=2
    68                           	psect	text53,local,class=CODE,merge=1,delta=2
    69                           	psect	text54,local,class=CODE,merge=1,delta=2
    70                           	psect	text55,local,class=CODE,merge=1,delta=2
    71                           	psect	text56,local,class=CODE,merge=1,delta=2
    72                           	psect	text57,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	dabs	1,0x7E,2
    75  0000                     
    76                           ; Version 2.10
    77                           ; Generated 31/07/2019 GMT
    78                           ; 
    79                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F886 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  008F                     	;# 
   153  0090                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0093                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0095                     	;# 
   161  0096                     	;# 
   162  0097                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009A                     	;# 
   166  009B                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  0105                     	;# 
   172  0107                     	;# 
   173  0108                     	;# 
   174  0109                     	;# 
   175  010C                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  0185                     	;# 
   181  0187                     	;# 
   182  0188                     	;# 
   183  0189                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186  0000                     	;# 
   187  0001                     	;# 
   188  0002                     	;# 
   189  0003                     	;# 
   190  0004                     	;# 
   191  0005                     	;# 
   192  0006                     	;# 
   193  0007                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  001D                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  0081                     	;# 
   221  0085                     	;# 
   222  0086                     	;# 
   223  0087                     	;# 
   224  0089                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  008E                     	;# 
   228  008F                     	;# 
   229  0090                     	;# 
   230  0091                     	;# 
   231  0092                     	;# 
   232  0093                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0094                     	;# 
   236  0095                     	;# 
   237  0096                     	;# 
   238  0097                     	;# 
   239  0098                     	;# 
   240  0099                     	;# 
   241  009A                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  0105                     	;# 
   248  0107                     	;# 
   249  0108                     	;# 
   250  0109                     	;# 
   251  010C                     	;# 
   252  010C                     	;# 
   253  010D                     	;# 
   254  010E                     	;# 
   255  010F                     	;# 
   256  0185                     	;# 
   257  0187                     	;# 
   258  0188                     	;# 
   259  0189                     	;# 
   260  018C                     	;# 
   261  018D                     	;# 
   262  0000                     	;# 
   263  0001                     	;# 
   264  0002                     	;# 
   265  0003                     	;# 
   266  0004                     	;# 
   267  0005                     	;# 
   268  0006                     	;# 
   269  0007                     	;# 
   270  0009                     	;# 
   271  000A                     	;# 
   272  000B                     	;# 
   273  000C                     	;# 
   274  000D                     	;# 
   275  000E                     	;# 
   276  000E                     	;# 
   277  000F                     	;# 
   278  0010                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0013                     	;# 
   282  0014                     	;# 
   283  0015                     	;# 
   284  0015                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001B                     	;# 
   291  001B                     	;# 
   292  001C                     	;# 
   293  001D                     	;# 
   294  001E                     	;# 
   295  001F                     	;# 
   296  0081                     	;# 
   297  0085                     	;# 
   298  0086                     	;# 
   299  0087                     	;# 
   300  0089                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  008E                     	;# 
   304  008F                     	;# 
   305  0090                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0093                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0095                     	;# 
   313  0096                     	;# 
   314  0097                     	;# 
   315  0098                     	;# 
   316  0099                     	;# 
   317  009A                     	;# 
   318  009B                     	;# 
   319  009C                     	;# 
   320  009D                     	;# 
   321  009E                     	;# 
   322  009F                     	;# 
   323  0105                     	;# 
   324  0107                     	;# 
   325  0108                     	;# 
   326  0109                     	;# 
   327  010C                     	;# 
   328  010C                     	;# 
   329  010D                     	;# 
   330  010E                     	;# 
   331  010F                     	;# 
   332  0185                     	;# 
   333  0187                     	;# 
   334  0188                     	;# 
   335  0189                     	;# 
   336  018C                     	;# 
   337  018D                     	;# 
   338  0000                     	;# 
   339  0001                     	;# 
   340  0002                     	;# 
   341  0003                     	;# 
   342  0004                     	;# 
   343  0005                     	;# 
   344  0006                     	;# 
   345  0007                     	;# 
   346  0009                     	;# 
   347  000A                     	;# 
   348  000B                     	;# 
   349  000C                     	;# 
   350  000D                     	;# 
   351  000E                     	;# 
   352  000E                     	;# 
   353  000F                     	;# 
   354  0010                     	;# 
   355  0011                     	;# 
   356  0012                     	;# 
   357  0013                     	;# 
   358  0014                     	;# 
   359  0015                     	;# 
   360  0015                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001B                     	;# 
   368  001C                     	;# 
   369  001D                     	;# 
   370  001E                     	;# 
   371  001F                     	;# 
   372  0081                     	;# 
   373  0085                     	;# 
   374  0086                     	;# 
   375  0087                     	;# 
   376  0089                     	;# 
   377  008C                     	;# 
   378  008D                     	;# 
   379  008E                     	;# 
   380  008F                     	;# 
   381  0090                     	;# 
   382  0091                     	;# 
   383  0092                     	;# 
   384  0093                     	;# 
   385  0093                     	;# 
   386  0093                     	;# 
   387  0094                     	;# 
   388  0095                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009C                     	;# 
   396  009D                     	;# 
   397  009E                     	;# 
   398  009F                     	;# 
   399  0105                     	;# 
   400  0107                     	;# 
   401  0108                     	;# 
   402  0109                     	;# 
   403  010C                     	;# 
   404  010C                     	;# 
   405  010D                     	;# 
   406  010E                     	;# 
   407  010F                     	;# 
   408  0185                     	;# 
   409  0187                     	;# 
   410  0188                     	;# 
   411  0189                     	;# 
   412  018C                     	;# 
   413  018D                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0009                     	;# 
   423  000A                     	;# 
   424  000B                     	;# 
   425  000C                     	;# 
   426  000D                     	;# 
   427  000E                     	;# 
   428  000E                     	;# 
   429  000F                     	;# 
   430  0010                     	;# 
   431  0011                     	;# 
   432  0012                     	;# 
   433  0013                     	;# 
   434  0014                     	;# 
   435  0015                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  001D                     	;# 
   446  001E                     	;# 
   447  001F                     	;# 
   448  0081                     	;# 
   449  0085                     	;# 
   450  0086                     	;# 
   451  0087                     	;# 
   452  0089                     	;# 
   453  008C                     	;# 
   454  008D                     	;# 
   455  008E                     	;# 
   456  008F                     	;# 
   457  0090                     	;# 
   458  0091                     	;# 
   459  0092                     	;# 
   460  0093                     	;# 
   461  0093                     	;# 
   462  0093                     	;# 
   463  0094                     	;# 
   464  0095                     	;# 
   465  0096                     	;# 
   466  0097                     	;# 
   467  0098                     	;# 
   468  0099                     	;# 
   469  009A                     	;# 
   470  009B                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  0105                     	;# 
   476  0107                     	;# 
   477  0108                     	;# 
   478  0109                     	;# 
   479  010C                     	;# 
   480  010C                     	;# 
   481  010D                     	;# 
   482  010E                     	;# 
   483  010F                     	;# 
   484  0185                     	;# 
   485  0187                     	;# 
   486  0188                     	;# 
   487  0189                     	;# 
   488  018C                     	;# 
   489  018D                     	;# 
   490  0000                     	;# 
   491  0001                     	;# 
   492  0002                     	;# 
   493  0003                     	;# 
   494  0004                     	;# 
   495  0005                     	;# 
   496  0006                     	;# 
   497  0007                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  000E                     	;# 
   505  000F                     	;# 
   506  0010                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0014                     	;# 
   511  0015                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0017                     	;# 
   515  0018                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  001D                     	;# 
   522  001E                     	;# 
   523  001F                     	;# 
   524  0081                     	;# 
   525  0085                     	;# 
   526  0086                     	;# 
   527  0087                     	;# 
   528  0089                     	;# 
   529  008C                     	;# 
   530  008D                     	;# 
   531  008E                     	;# 
   532  008F                     	;# 
   533  0090                     	;# 
   534  0091                     	;# 
   535  0092                     	;# 
   536  0093                     	;# 
   537  0093                     	;# 
   538  0093                     	;# 
   539  0094                     	;# 
   540  0095                     	;# 
   541  0096                     	;# 
   542  0097                     	;# 
   543  0098                     	;# 
   544  0099                     	;# 
   545  009A                     	;# 
   546  009B                     	;# 
   547  009C                     	;# 
   548  009D                     	;# 
   549  009E                     	;# 
   550  009F                     	;# 
   551  0105                     	;# 
   552  0107                     	;# 
   553  0108                     	;# 
   554  0109                     	;# 
   555  010C                     	;# 
   556  010C                     	;# 
   557  010D                     	;# 
   558  010E                     	;# 
   559  010F                     	;# 
   560  0185                     	;# 
   561  0187                     	;# 
   562  0188                     	;# 
   563  0189                     	;# 
   564  018C                     	;# 
   565  018D                     	;# 
   566  0000                     	;# 
   567  0001                     	;# 
   568  0002                     	;# 
   569  0003                     	;# 
   570  0004                     	;# 
   571  0005                     	;# 
   572  0006                     	;# 
   573  0007                     	;# 
   574  0009                     	;# 
   575  000A                     	;# 
   576  000B                     	;# 
   577  000C                     	;# 
   578  000D                     	;# 
   579  000E                     	;# 
   580  000E                     	;# 
   581  000F                     	;# 
   582  0010                     	;# 
   583  0011                     	;# 
   584  0012                     	;# 
   585  0013                     	;# 
   586  0014                     	;# 
   587  0015                     	;# 
   588  0015                     	;# 
   589  0016                     	;# 
   590  0017                     	;# 
   591  0018                     	;# 
   592  0019                     	;# 
   593  001A                     	;# 
   594  001B                     	;# 
   595  001B                     	;# 
   596  001C                     	;# 
   597  001D                     	;# 
   598  001E                     	;# 
   599  001F                     	;# 
   600  0081                     	;# 
   601  0085                     	;# 
   602  0086                     	;# 
   603  0087                     	;# 
   604  0089                     	;# 
   605  008C                     	;# 
   606  008D                     	;# 
   607  008E                     	;# 
   608  008F                     	;# 
   609  0090                     	;# 
   610  0091                     	;# 
   611  0092                     	;# 
   612  0093                     	;# 
   613  0093                     	;# 
   614  0093                     	;# 
   615  0094                     	;# 
   616  0095                     	;# 
   617  0096                     	;# 
   618  0097                     	;# 
   619  0098                     	;# 
   620  0099                     	;# 
   621  009A                     	;# 
   622  009B                     	;# 
   623  009C                     	;# 
   624  009D                     	;# 
   625  009E                     	;# 
   626  009F                     	;# 
   627  0105                     	;# 
   628  0107                     	;# 
   629  0108                     	;# 
   630  0109                     	;# 
   631  010C                     	;# 
   632  010C                     	;# 
   633  010D                     	;# 
   634  010E                     	;# 
   635  010F                     	;# 
   636  0185                     	;# 
   637  0187                     	;# 
   638  0188                     	;# 
   639  0189                     	;# 
   640  018C                     	;# 
   641  018D                     	;# 
   642  0000                     	;# 
   643  0001                     	;# 
   644  0002                     	;# 
   645  0003                     	;# 
   646  0004                     	;# 
   647  0005                     	;# 
   648  0006                     	;# 
   649  0007                     	;# 
   650  0009                     	;# 
   651  000A                     	;# 
   652  000B                     	;# 
   653  000C                     	;# 
   654  000D                     	;# 
   655  000E                     	;# 
   656  000E                     	;# 
   657  000F                     	;# 
   658  0010                     	;# 
   659  0011                     	;# 
   660  0012                     	;# 
   661  0013                     	;# 
   662  0014                     	;# 
   663  0015                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0017                     	;# 
   667  0018                     	;# 
   668  0019                     	;# 
   669  001A                     	;# 
   670  001B                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  001D                     	;# 
   674  001E                     	;# 
   675  001F                     	;# 
   676  0081                     	;# 
   677  0085                     	;# 
   678  0086                     	;# 
   679  0087                     	;# 
   680  0089                     	;# 
   681  008C                     	;# 
   682  008D                     	;# 
   683  008E                     	;# 
   684  008F                     	;# 
   685  0090                     	;# 
   686  0091                     	;# 
   687  0092                     	;# 
   688  0093                     	;# 
   689  0093                     	;# 
   690  0093                     	;# 
   691  0094                     	;# 
   692  0095                     	;# 
   693  0096                     	;# 
   694  0097                     	;# 
   695  0098                     	;# 
   696  0099                     	;# 
   697  009A                     	;# 
   698  009B                     	;# 
   699  009C                     	;# 
   700  009D                     	;# 
   701  009E                     	;# 
   702  009F                     	;# 
   703  0105                     	;# 
   704  0107                     	;# 
   705  0108                     	;# 
   706  0109                     	;# 
   707  010C                     	;# 
   708  010C                     	;# 
   709  010D                     	;# 
   710  010E                     	;# 
   711  010F                     	;# 
   712  0185                     	;# 
   713  0187                     	;# 
   714  0188                     	;# 
   715  0189                     	;# 
   716  018C                     	;# 
   717  018D                     	;# 
   718  0000                     	;# 
   719  0001                     	;# 
   720  0002                     	;# 
   721  0003                     	;# 
   722  0004                     	;# 
   723  0005                     	;# 
   724  0006                     	;# 
   725  0007                     	;# 
   726  0009                     	;# 
   727  000A                     	;# 
   728  000B                     	;# 
   729  000C                     	;# 
   730  000D                     	;# 
   731  000E                     	;# 
   732  000E                     	;# 
   733  000F                     	;# 
   734  0010                     	;# 
   735  0011                     	;# 
   736  0012                     	;# 
   737  0013                     	;# 
   738  0014                     	;# 
   739  0015                     	;# 
   740  0015                     	;# 
   741  0016                     	;# 
   742  0017                     	;# 
   743  0018                     	;# 
   744  0019                     	;# 
   745  001A                     	;# 
   746  001B                     	;# 
   747  001B                     	;# 
   748  001C                     	;# 
   749  001D                     	;# 
   750  001E                     	;# 
   751  001F                     	;# 
   752  0081                     	;# 
   753  0085                     	;# 
   754  0086                     	;# 
   755  0087                     	;# 
   756  0089                     	;# 
   757  008C                     	;# 
   758  008D                     	;# 
   759  008E                     	;# 
   760  008F                     	;# 
   761  0090                     	;# 
   762  0091                     	;# 
   763  0092                     	;# 
   764  0093                     	;# 
   765  0093                     	;# 
   766  0093                     	;# 
   767  0094                     	;# 
   768  0095                     	;# 
   769  0096                     	;# 
   770  0097                     	;# 
   771  0098                     	;# 
   772  0099                     	;# 
   773  009A                     	;# 
   774  009B                     	;# 
   775  009C                     	;# 
   776  009D                     	;# 
   777  009E                     	;# 
   778  009F                     	;# 
   779  0105                     	;# 
   780  0107                     	;# 
   781  0108                     	;# 
   782  0109                     	;# 
   783  010C                     	;# 
   784  010C                     	;# 
   785  010D                     	;# 
   786  010E                     	;# 
   787  010F                     	;# 
   788  0185                     	;# 
   789  0187                     	;# 
   790  0188                     	;# 
   791  0189                     	;# 
   792  018C                     	;# 
   793  018D                     	;# 
   794  0000                     	;# 
   795  0001                     	;# 
   796  0002                     	;# 
   797  0003                     	;# 
   798  0004                     	;# 
   799  0005                     	;# 
   800  0006                     	;# 
   801  0007                     	;# 
   802  0009                     	;# 
   803  000A                     	;# 
   804  000B                     	;# 
   805  000C                     	;# 
   806  000D                     	;# 
   807  000E                     	;# 
   808  000E                     	;# 
   809  000F                     	;# 
   810  0010                     	;# 
   811  0011                     	;# 
   812  0012                     	;# 
   813  0013                     	;# 
   814  0014                     	;# 
   815  0015                     	;# 
   816  0015                     	;# 
   817  0016                     	;# 
   818  0017                     	;# 
   819  0018                     	;# 
   820  0019                     	;# 
   821  001A                     	;# 
   822  001B                     	;# 
   823  001B                     	;# 
   824  001C                     	;# 
   825  001D                     	;# 
   826  001E                     	;# 
   827  001F                     	;# 
   828  0081                     	;# 
   829  0085                     	;# 
   830  0086                     	;# 
   831  0087                     	;# 
   832  0089                     	;# 
   833  008C                     	;# 
   834  008D                     	;# 
   835  008E                     	;# 
   836  008F                     	;# 
   837  0090                     	;# 
   838  0091                     	;# 
   839  0092                     	;# 
   840  0093                     	;# 
   841  0093                     	;# 
   842  0093                     	;# 
   843  0094                     	;# 
   844  0095                     	;# 
   845  0096                     	;# 
   846  0097                     	;# 
   847  0098                     	;# 
   848  0099                     	;# 
   849  009A                     	;# 
   850  009B                     	;# 
   851  009C                     	;# 
   852  009D                     	;# 
   853  009E                     	;# 
   854  009F                     	;# 
   855  0105                     	;# 
   856  0107                     	;# 
   857  0108                     	;# 
   858  0109                     	;# 
   859  010C                     	;# 
   860  010C                     	;# 
   861  010D                     	;# 
   862  010E                     	;# 
   863  010F                     	;# 
   864  0185                     	;# 
   865  0187                     	;# 
   866  0188                     	;# 
   867  0189                     	;# 
   868  018C                     	;# 
   869  018D                     	;# 
   870  0000                     	;# 
   871  0001                     	;# 
   872  0002                     	;# 
   873  0003                     	;# 
   874  0004                     	;# 
   875  0005                     	;# 
   876  0006                     	;# 
   877  0007                     	;# 
   878  0009                     	;# 
   879  000A                     	;# 
   880  000B                     	;# 
   881  000C                     	;# 
   882  000D                     	;# 
   883  000E                     	;# 
   884  000E                     	;# 
   885  000F                     	;# 
   886  0010                     	;# 
   887  0011                     	;# 
   888  0012                     	;# 
   889  0013                     	;# 
   890  0014                     	;# 
   891  0015                     	;# 
   892  0015                     	;# 
   893  0016                     	;# 
   894  0017                     	;# 
   895  0018                     	;# 
   896  0019                     	;# 
   897  001A                     	;# 
   898  001B                     	;# 
   899  001B                     	;# 
   900  001C                     	;# 
   901  001D                     	;# 
   902  001E                     	;# 
   903  001F                     	;# 
   904  0081                     	;# 
   905  0085                     	;# 
   906  0086                     	;# 
   907  0087                     	;# 
   908  0089                     	;# 
   909  008C                     	;# 
   910  008D                     	;# 
   911  008E                     	;# 
   912  008F                     	;# 
   913  0090                     	;# 
   914  0091                     	;# 
   915  0092                     	;# 
   916  0093                     	;# 
   917  0093                     	;# 
   918  0093                     	;# 
   919  0094                     	;# 
   920  0095                     	;# 
   921  0096                     	;# 
   922  0097                     	;# 
   923  0098                     	;# 
   924  0099                     	;# 
   925  009A                     	;# 
   926  009B                     	;# 
   927  009C                     	;# 
   928  009D                     	;# 
   929  009E                     	;# 
   930  009F                     	;# 
   931  0105                     	;# 
   932  0107                     	;# 
   933  0108                     	;# 
   934  0109                     	;# 
   935  010C                     	;# 
   936  010C                     	;# 
   937  010D                     	;# 
   938  010E                     	;# 
   939  010F                     	;# 
   940  0185                     	;# 
   941  0187                     	;# 
   942  0188                     	;# 
   943  0189                     	;# 
   944  018C                     	;# 
   945  018D                     	;# 
   946  0000                     	;# 
   947  0001                     	;# 
   948  0002                     	;# 
   949  0003                     	;# 
   950  0004                     	;# 
   951  0005                     	;# 
   952  0006                     	;# 
   953  0007                     	;# 
   954  0009                     	;# 
   955  000A                     	;# 
   956  000B                     	;# 
   957  000C                     	;# 
   958  000D                     	;# 
   959  000E                     	;# 
   960  000E                     	;# 
   961  000F                     	;# 
   962  0010                     	;# 
   963  0011                     	;# 
   964  0012                     	;# 
   965  0013                     	;# 
   966  0014                     	;# 
   967  0015                     	;# 
   968  0015                     	;# 
   969  0016                     	;# 
   970  0017                     	;# 
   971  0018                     	;# 
   972  0019                     	;# 
   973  001A                     	;# 
   974  001B                     	;# 
   975  001B                     	;# 
   976  001C                     	;# 
   977  001D                     	;# 
   978  001E                     	;# 
   979  001F                     	;# 
   980  0081                     	;# 
   981  0085                     	;# 
   982  0086                     	;# 
   983  0087                     	;# 
   984  0089                     	;# 
   985  008C                     	;# 
   986  008D                     	;# 
   987  008E                     	;# 
   988  008F                     	;# 
   989  0090                     	;# 
   990  0091                     	;# 
   991  0092                     	;# 
   992  0093                     	;# 
   993  0093                     	;# 
   994  0093                     	;# 
   995  0094                     	;# 
   996  0095                     	;# 
   997  0096                     	;# 
   998  0097                     	;# 
   999  0098                     	;# 
  1000  0099                     	;# 
  1001  009A                     	;# 
  1002  009B                     	;# 
  1003  009C                     	;# 
  1004  009D                     	;# 
  1005  009E                     	;# 
  1006  009F                     	;# 
  1007  0105                     	;# 
  1008  0107                     	;# 
  1009  0108                     	;# 
  1010  0109                     	;# 
  1011  010C                     	;# 
  1012  010C                     	;# 
  1013  010D                     	;# 
  1014  010E                     	;# 
  1015  010F                     	;# 
  1016  0185                     	;# 
  1017  0187                     	;# 
  1018  0188                     	;# 
  1019  0189                     	;# 
  1020  018C                     	;# 
  1021  018D                     	;# 
  1022  0000                     	;# 
  1023  0001                     	;# 
  1024  0002                     	;# 
  1025  0003                     	;# 
  1026  0004                     	;# 
  1027  0005                     	;# 
  1028  0006                     	;# 
  1029  0007                     	;# 
  1030  0009                     	;# 
  1031  000A                     	;# 
  1032  000B                     	;# 
  1033  000C                     	;# 
  1034  000D                     	;# 
  1035  000E                     	;# 
  1036  000E                     	;# 
  1037  000F                     	;# 
  1038  0010                     	;# 
  1039  0011                     	;# 
  1040  0012                     	;# 
  1041  0013                     	;# 
  1042  0014                     	;# 
  1043  0015                     	;# 
  1044  0015                     	;# 
  1045  0016                     	;# 
  1046  0017                     	;# 
  1047  0018                     	;# 
  1048  0019                     	;# 
  1049  001A                     	;# 
  1050  001B                     	;# 
  1051  001B                     	;# 
  1052  001C                     	;# 
  1053  001D                     	;# 
  1054  001E                     	;# 
  1055  001F                     	;# 
  1056  0081                     	;# 
  1057  0085                     	;# 
  1058  0086                     	;# 
  1059  0087                     	;# 
  1060  0089                     	;# 
  1061  008C                     	;# 
  1062  008D                     	;# 
  1063  008E                     	;# 
  1064  008F                     	;# 
  1065  0090                     	;# 
  1066  0091                     	;# 
  1067  0092                     	;# 
  1068  0093                     	;# 
  1069  0093                     	;# 
  1070  0093                     	;# 
  1071  0094                     	;# 
  1072  0095                     	;# 
  1073  0096                     	;# 
  1074  0097                     	;# 
  1075  0098                     	;# 
  1076  0099                     	;# 
  1077  009A                     	;# 
  1078  009B                     	;# 
  1079  009C                     	;# 
  1080  009D                     	;# 
  1081  009E                     	;# 
  1082  009F                     	;# 
  1083  0105                     	;# 
  1084  0107                     	;# 
  1085  0108                     	;# 
  1086  0109                     	;# 
  1087  010C                     	;# 
  1088  010C                     	;# 
  1089  010D                     	;# 
  1090  010E                     	;# 
  1091  010F                     	;# 
  1092  0185                     	;# 
  1093  0187                     	;# 
  1094  0188                     	;# 
  1095  0189                     	;# 
  1096  018C                     	;# 
  1097  018D                     	;# 
  1098  0000                     	;# 
  1099  0001                     	;# 
  1100  0002                     	;# 
  1101  0003                     	;# 
  1102  0004                     	;# 
  1103  0005                     	;# 
  1104  0006                     	;# 
  1105  0007                     	;# 
  1106  0009                     	;# 
  1107  000A                     	;# 
  1108  000B                     	;# 
  1109  000C                     	;# 
  1110  000D                     	;# 
  1111  000E                     	;# 
  1112  000E                     	;# 
  1113  000F                     	;# 
  1114  0010                     	;# 
  1115  0011                     	;# 
  1116  0012                     	;# 
  1117  0013                     	;# 
  1118  0014                     	;# 
  1119  0015                     	;# 
  1120  0015                     	;# 
  1121  0016                     	;# 
  1122  0017                     	;# 
  1123  0018                     	;# 
  1124  0019                     	;# 
  1125  001A                     	;# 
  1126  001B                     	;# 
  1127  001B                     	;# 
  1128  001C                     	;# 
  1129  001D                     	;# 
  1130  001E                     	;# 
  1131  001F                     	;# 
  1132  0081                     	;# 
  1133  0085                     	;# 
  1134  0086                     	;# 
  1135  0087                     	;# 
  1136  0089                     	;# 
  1137  008C                     	;# 
  1138  008D                     	;# 
  1139  008E                     	;# 
  1140  008F                     	;# 
  1141  0090                     	;# 
  1142  0091                     	;# 
  1143  0092                     	;# 
  1144  0093                     	;# 
  1145  0093                     	;# 
  1146  0093                     	;# 
  1147  0094                     	;# 
  1148  0095                     	;# 
  1149  0096                     	;# 
  1150  0097                     	;# 
  1151  0098                     	;# 
  1152  0099                     	;# 
  1153  009A                     	;# 
  1154  009B                     	;# 
  1155  009C                     	;# 
  1156  009D                     	;# 
  1157  009E                     	;# 
  1158  009F                     	;# 
  1159  0105                     	;# 
  1160  0107                     	;# 
  1161  0108                     	;# 
  1162  0109                     	;# 
  1163  010C                     	;# 
  1164  010C                     	;# 
  1165  010D                     	;# 
  1166  010E                     	;# 
  1167  010F                     	;# 
  1168  0185                     	;# 
  1169  0187                     	;# 
  1170  0188                     	;# 
  1171  0189                     	;# 
  1172  018C                     	;# 
  1173  018D                     	;# 
  1174                           
  1175                           	psect	strings
  1176  1000                     __pstrings:	
  1177  1000                     stringtab:	
  1178  1000                     __stringtab:	
  1179                           
  1180                           ;	String table - string pointers are 1 byte each
  1181  1000  1BFF               	btfsc	btemp+1,7
  1182  1001  280A               	ljmp	stringcode
  1183  1002  1383               	bcf	3,7
  1184  1003  187F               	btfsc	btemp+1,0
  1185  1004  1783               	bsf	3,7
  1186  1005  0800               	movf	0,w
  1187  1006  0A84               	incf	4,f
  1188  1007  1903               	skipnz
  1189  1008  0AFF               	incf	btemp+1,f
  1190  1009  0008               	return
  1191  100A                     stringcode:	
  1192  100A                     stringdir:	
  1193  100A  3010               	movlw	high stringdir
  1194  100B  008A               	movwf	10
  1195  100C  0804               	movf	4,w
  1196  100D  0A84               	incf	4,f
  1197  100E  0782               	addwf	2,f
  1198  100F                     __stringbase:	
  1199  100F  3400               	retlw	0
  1200  1010                     __end_of__stringtab:	
  1201  1010                     _PT100_TRANSLADA:	
  1202  1010  3466               	retlw	102
  1203  1011  3466               	retlw	102
  1204  1012  34A6               	retlw	166
  1205  1013  34BF               	retlw	191
  1206  1014                     __end_of_PT100_TRANSLADA:	
  1207  1014                     _PT100_CONSTANT:	
  1208  1014  3414               	retlw	20
  1209  1015  34AE               	retlw	174
  1210  1016  342B               	retlw	43
  1211  1017  34C1               	retlw	193
  1212  1018                     __end_of_PT100_CONSTANT:	
  1213  1018                     _RESISTOR_ROOM_TEMP:	
  1214                           
  1215                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1216  1018  3400               	retlw	0
  1217  1019  3440               	retlw	64
  1218  101A  341C               	retlw	28
  1219  101B  3446               	retlw	70
  1220  101C                     __end_of_RESISTOR_ROOM_TEMP:	
  1221  101C                     _ROOM_TEMP:	
  1222                           
  1223                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1224  101C  3466               	retlw	102
  1225  101D  3486               	retlw	134
  1226  101E  3496               	retlw	150
  1227  101F  3443               	retlw	67
  1228  1020                     __end_of_ROOM_TEMP:	
  1229  1020                     _MAX_ADC:	
  1230                           
  1231                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1232  1020  3400               	retlw	0
  1233  1021  34C0               	retlw	192
  1234  1022  347F               	retlw	127
  1235  1023  3444               	retlw	68
  1236  1024                     __end_of_MAX_ADC:	
  1237  1024                     log@coeff:	
  1238  1024  3400               	retlw	0
  1239  1025  3400               	retlw	0
  1240  1026  3400               	retlw	0
  1241  1027  3400               	retlw	0
  1242  1028  34C4               	retlw	196
  1243  1029  34FF               	retlw	255
  1244  102A  347F               	retlw	127
  1245  102B  343F               	retlw	63
  1246  102C  3480               	retlw	128
  1247  102D  34EF               	retlw	239
  1248  102E  34FF               	retlw	255
  1249  102F  34BE               	retlw	190
  1250  1030  3490               	retlw	144
  1251  1031  34E1               	retlw	225
  1252  1032  34A9               	retlw	169
  1253  1033  343E               	retlw	62
  1254  1034  34EC               	retlw	236
  1255  1035  3482               	retlw	130
  1256  1036  3476               	retlw	118
  1257  1037  34BE               	retlw	190
  1258  1038  3482               	retlw	130
  1259  1039  34AD               	retlw	173
  1260  103A  342B               	retlw	43
  1261  103B  343E               	retlw	62
  1262  103C  340E               	retlw	14
  1263  103D  343C               	retlw	60
  1264  103E  34C3               	retlw	195
  1265  103F  34BD               	retlw	189
  1266  1040  3487               	retlw	135
  1267  1041  34D1               	retlw	209
  1268  1042  3413               	retlw	19
  1269  1043  343D               	retlw	61
  1270  1044  3441               	retlw	65
  1271  1045  3478               	retlw	120
  1272  1046  34D3               	retlw	211
  1273  1047  34BB               	retlw	187
  1274  1048                     __end_oflog@coeff:	
  1275  1048                     _BETA:	
  1276                           
  1277                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1278  1048  3400               	retlw	0
  1279  1049  3460               	retlw	96
  1280  104A  3478               	retlw	120
  1281  104B  3445               	retlw	69
  1282  104C                     __end_of_BETA:	
  1283  104C                     _BALANCE_RESISTOR:	
  1284                           
  1285                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1286  104C  3400               	retlw	0
  1287  104D  3440               	retlw	64
  1288  104E  341C               	retlw	28
  1289  104F  3446               	retlw	70
  1290  1050                     __end_of_BALANCE_RESISTOR:	
  1291  0019                     _TXREG	set	25
  1292  0018                     _RCSTAbits	set	24
  1293  001A                     _RCREG	set	26
  1294  000E                     _TMR1L	set	14
  1295  000F                     _TMR1H	set	15
  1296  000C                     _PIR1bits	set	12
  1297  001E                     _ADRESH	set	30
  1298  001F                     _ADCON0bits	set	31
  1299  0005                     _PORTAbits	set	5
  1300  0007                     _PORTCbits	set	7
  1301  0010                     _T1CON	set	16
  1302  0006                     _PORTBbits	set	6
  1303  0009                     _PORTE	set	9
  1304  0007                     _PORTC	set	7
  1305  0005                     _PORTA	set	5
  1306  0013                     _SSPBUF	set	19
  1307  000B                     _INTCONbits	set	11
  1308  0014                     _SSPCON	set	20
  1309  0006                     _PORTB	set	6
  1310  00C4                     _CREN	set	196
  1311  0081                     _TMR1CS	set	129
  1312  0085                     _T1CKPS1	set	133
  1313  0084                     _T1CKPS0	set	132
  1314  008C                     _PIE1bits	set	140
  1315  0099                     _SPBRG	set	153
  1316  0098                     _TXSTAbits	set	152
  1317  009E                     _ADRESL	set	158
  1318  009F                     _ADCON1bits	set	159
  1319  009F                     _ADCON1	set	159
  1320  0095                     _WPUB	set	149
  1321  0081                     _OPTION_REGbits	set	129
  1322  0089                     _TRISE	set	137
  1323  0087                     _TRISC	set	135
  1324  0086                     _TRISB	set	134
  1325  0085                     _TRISA	set	133
  1326  008F                     _OSCCONbits	set	143
  1327  0091                     _SSPCON2bits	set	145
  1328  0094                     _SSPSTAT	set	148
  1329  0093                     _SSPADD	set	147
  1330  0091                     _SSPCON2	set	145
  1331  043F                     _TRISC7	set	1087
  1332  043E                     _TRISC6	set	1086
  1333  0460                     _TMR1IE	set	1120
  1334  043C                     _TRISC4	set	1084
  1335  043B                     _TRISC3	set	1083
  1336  010C                     _EEDATA	set	268
  1337  010D                     _EEADR	set	269
  1338  0187                     _BAUDCTLbits	set	391
  1339  018D                     _EECON2	set	397
  1340  018C                     _EECON1bits	set	396
  1341  0189                     _ANSELH	set	393
  1342  0188                     _ANSEL	set	392
  1343  1050                     STR_1:	
  1344  1050  3476               	retlw	118	;'v'
  1345  1051  3431               	retlw	49	;'1'
  1346  1052  342E               	retlw	46	;'.'
  1347  1053  3430               	retlw	48	;'0'
  1348  1054  342E               	retlw	46	;'.'
  1349  1055  3431               	retlw	49	;'1'
  1350  1056  3436               	retlw	54	;'6'
  1351  1057  3400               	retlw	0
  1352  1058                     STR_2:	
  1353  1058  344F               	retlw	79	;'O'
  1354  1059  344B               	retlw	75	;'K'
  1355  105A  3400               	retlw	0
  1356                           
  1357                           ; #config settings
  1358  0000                     
  1359                           	psect	cinit
  1360  0015                     start_initialization:	
  1361  0015                     __initialization:	
  1362                           
  1363                           ; Clear objects allocated to COMMON
  1364  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1365  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1366  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1367  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1368  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1369  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1370                           
  1371                           ; Clear objects allocated to BANK0
  1372  001B  1283               	bcf	3,5	;RP0=0, select bank0
  1373  001C  1303               	bcf	3,6	;RP1=0, select bank0
  1374  001D  01E8               	clrf	__pbssBANK0& (0+127)
  1375  001E  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  1376  001F  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  1377  0020  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  1378  0021  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  1379                           
  1380                           ; Clear objects allocated to BANK1
  1381  0022  1383               	bcf	3,7	;select IRP bank0
  1382  0023  30A0               	movlw	low __pbssBANK1
  1383  0024  0084               	movwf	4
  1384  0025  30D8               	movlw	low (__pbssBANK1+56)
  1385  0026  160A  158A  24BC  120A  118A  	fcall	clear_ram0
  1386                           
  1387                           ; Clear objects allocated to BANK3
  1388  002B  1783               	bsf	3,7	;select IRP bank2
  1389  002C  3090               	movlw	low __pbssBANK3
  1390  002D  0084               	movwf	4
  1391  002E  30CA               	movlw	low (__pbssBANK3+58)
  1392  002F  160A  158A  24BC  120A  118A  	fcall	clear_ram0
  1393                           
  1394                           ; Clear objects allocated to BANK2
  1395  0034  3010               	movlw	low __pbssBANK2
  1396  0035  0084               	movwf	4
  1397  0036  3044               	movlw	low (__pbssBANK2+52)
  1398  0037  160A  158A  24BC   	fcall	clear_ram0
  1399  003A                     end_of_initialization:	
  1400                           ;End of C runtime variable initialization code
  1401                           
  1402  003A                     __end_of__initialization:	
  1403  003A  0183               	clrf	3
  1404  003B  160A  118A  2DA6   	ljmp	_main	;jump to C main() function
  1405                           
  1406                           	psect	bssCOMMON
  1407  0078                     __pbssCOMMON:	
  1408  0078                     _Delay_Led_Tmr0:	
  1409  0078                     	ds	2
  1410  007A                     _minuto:	
  1411  007A                     	ds	1
  1412  007B                     _statuspower_memo:	
  1413  007B                     	ds	1
  1414  007C                     _hora:	
  1415  007C                     	ds	1
  1416  007D                     _segundo:	
  1417  007D                     	ds	1
  1418                           
  1419                           	psect	bssBANK0
  1420  0068                     __pbssBANK0:	
  1421  0068                     _destino:	
  1422  0068                     	ds	1
  1423  0069                     _Board_Number:	
  1424  0069                     	ds	1
  1425  006A                     _canal:	
  1426  006A                     	ds	1
  1427  006B                     _statuspower:	
  1428  006B                     	ds	1
  1429  006C                     _generic_status:	
  1430  006C                     	ds	1
  1431                           
  1432                           	psect	bssBANK1
  1433  00A0                     __pbssBANK1:	
  1434  00A0                     _Umidade1:	
  1435  00A0                     	ds	4
  1436  00A4                     _Temperatura0:	
  1437  00A4                     	ds	4
  1438  00A8                     _errno:	
  1439  00A8                     	ds	2
  1440  00AA                     _tempodecorrido:	
  1441  00AA                     	ds	2
  1442  00AC                     _count:	
  1443  00AC                     	ds	2
  1444  00AE                     _header:	
  1445  00AE                     	ds	2
  1446  00B0                     _milisegundo:	
  1447  00B0                     	ds	2
  1448  00B2                     _Delay_Led_Usart:	
  1449  00B2                     	ds	2
  1450  00B4                     _Delay_Led_Memory:	
  1451  00B4                     	ds	2
  1452  00B6                     _pointer:	
  1453  00B6                     	ds	1
  1454  00B7                     _buffer:	
  1455  00B7                     	ds	33
  1456                           
  1457                           	psect	bssBANK3
  1458  0190                     __pbssBANK3:	
  1459  0190                     _usart_protocol:	
  1460  0190                     	ds	58
  1461                           
  1462                           	psect	bssBANK2
  1463  0110                     __pbssBANK2:	
  1464  0110                     _usart_buffer:	
  1465  0110                     	ds	52
  1466                           
  1467                           	psect	clrtext
  1468  1CBC                     clear_ram0:	
  1469                           ;	Called with FSR containing the base address, and
  1470                           ;	W with the last address+1
  1471                           
  1472  1CBC  0064               	clrwdt	;clear the watchdog before getting into this loop
  1473  1CBD                     clrloop0:	
  1474  1CBD  0180               	clrf	0	;clear RAM location pointed to by FSR
  1475  1CBE  0A84               	incf	4,f	;increment pointer
  1476  1CBF  0604               	xorwf	4,w	;XOR with final address
  1477  1CC0  1903               	btfsc	3,2	;have we reached the end yet?
  1478  1CC1  3400               	retlw	0	;all done for this memory range, return
  1479  1CC2  0604               	xorwf	4,w	;XOR again to restore value
  1480  1CC3  2CBD               	goto	clrloop0	;do the next byte
  1481                           
  1482                           	psect	cstackBANK1
  1483  00D8                     __pcstackBANK1:	
  1484  00D8                     Decodify_Command@dados:	
  1485                           
  1486                           ; 2 bytes @ 0x0
  1487  00D8                     	ds	2
  1488  00DA                     Decodify_Command@add:	
  1489                           
  1490                           ; 1 bytes @ 0x2
  1491  00DA                     	ds	1
  1492  00DB                     Decodify_Command@sizedata:	
  1493                           
  1494                           ; 1 bytes @ 0x3
  1495  00DB                     	ds	1
  1496  00DC                     Decodify_Command@tempint:	
  1497                           
  1498                           ; 2 bytes @ 0x4
  1499  00DC                     	ds	2
  1500  00DE                     Decodify_Command@OutPut:	
  1501                           
  1502                           ; 4 bytes @ 0x6
  1503  00DE                     	ds	4
  1504  00E2                     Decodify_Command@tempchar:	
  1505                           
  1506                           ; 1 bytes @ 0xA
  1507  00E2                     	ds	1
  1508  00E3                     Decodify_Command@add_24LCxxxx:	
  1509                           
  1510                           ; 4 bytes @ 0xB
  1511  00E3                     	ds	4
  1512                           
  1513                           	psect	cstackCOMMON
  1514  0070                     __pcstackCOMMON:	
  1515  0070                     ?_I2C_Master_Start:	
  1516  0070                     ?_I2C_Master_Stop:	
  1517                           ; 1 bytes @ 0x0
  1518                           
  1519  0070                     ?_I2C_Master_RepeatedStart:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0070                     ?_ADC_init:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0070                     ?_mediaLeituraPt100Umidadde:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0070                     ?_Decodify_Command:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0070                     ?_USART_to_Protocol:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0070                     ?_Send_To_MB:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0070                     ?_Send_Reply_OK:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0070                     ?_EEPROM_Read_Byte:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0070                     ?_USART_putc:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0070                     ?_Package_Usart_is_for_me:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0070                     ?_I2C_Master_Wait:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0070                     ?_main:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0070                     ?_isr:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0070                     ??_isr:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561                           
  1562                           ; 1 bytes @ 0x0
  1563  0070                     	ds	6
  1564  0076                     isr@tempo:	
  1565                           
  1566                           ; 2 bytes @ 0x6
  1567  0076                     	ds	2
  1568                           
  1569                           	psect	cstackBANK0
  1570  0020                     __pcstackBANK0:	
  1571  0020                     ?_my_delay_ms_WDT:	
  1572  0020                     ??_ADC_init:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0020                     ?_USART_init:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0020                     ??_USART_to_Protocol:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0020                     ?_strcpy:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0020                     ?_EEPROM_Write_Byte:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0020                     ??_EEPROM_Read_Byte:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0020                     ??_USART_putc:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0020                     ?_my_delay_ms:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0020                     ??_Package_Usart_is_for_me:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0020                     ?_PROCULUS_Delay:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0020                     ??_I2C_Master_Wait:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0020                     ?_strlen:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0020                     ?_captura:	
  1609                           ; 2 bytes @ 0x0
  1610                           
  1611  0020                     ?__Umul8_16:	
  1612                           ; 2 bytes @ 0x0
  1613                           
  1614  0020                     ?___lwdiv:	
  1615                           ; 2 bytes @ 0x0
  1616                           
  1617  0020                     ?___lldiv:	
  1618                           ; 2 bytes @ 0x0
  1619                           
  1620  0020                     ?___xxtofl:	
  1621                           ; 4 bytes @ 0x0
  1622                           
  1623  0020                     EEPROM_Write_Byte@dado:	
  1624                           ; 4 bytes @ 0x0
  1625                           
  1626  0020                     Package_Usart_is_for_me@retorno:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0020                     USART_putc@value:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632  0020                     strcpy@from:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635  0020                     __Umul8_16@multiplicand:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638  0020                     PROCULUS_Delay@tempo_ms:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641  0020                     ___lwdiv@divisor:	
  1642                           ; 2 bytes @ 0x0
  1643                           
  1644  0020                     strlen@s:	
  1645                           ; 2 bytes @ 0x0
  1646                           
  1647  0020                     my_delay_ms@time:	
  1648                           ; 2 bytes @ 0x0
  1649                           
  1650  0020                     my_delay_ms_WDT@time:	
  1651                           ; 4 bytes @ 0x0
  1652                           
  1653  0020                     USART_init@baudrate:	
  1654                           ; 4 bytes @ 0x0
  1655                           
  1656  0020                     ___lldiv@divisor:	
  1657                           ; 4 bytes @ 0x0
  1658                           
  1659  0020                     ___xxtofl@val:	
  1660                           ; 4 bytes @ 0x0
  1661                           
  1662                           
  1663                           ; 4 bytes @ 0x0
  1664  0020                     	ds	1
  1665  0021                     ??_strcpy:	
  1666  0021                     ??_Send_To_MB:	
  1667                           ; 1 bytes @ 0x1
  1668                           
  1669  0021                     ?_USART_put_string:	
  1670                           ; 1 bytes @ 0x1
  1671                           
  1672  0021                     ??_EEPROM_Write_Byte:	
  1673                           ; 1 bytes @ 0x1
  1674                           
  1675  0021                     ?_USART_put_buffer:	
  1676                           ; 1 bytes @ 0x1
  1677                           
  1678  0021                     Send_To_MB@size:	
  1679                           ; 1 bytes @ 0x1
  1680                           
  1681  0021                     USART_put_buffer@size:	
  1682                           ; 1 bytes @ 0x1
  1683                           
  1684  0021                     USART_put_string@vetor:	
  1685                           ; 1 bytes @ 0x1
  1686                           
  1687                           
  1688                           ; 2 bytes @ 0x1
  1689  0021                     	ds	1
  1690  0022                     ??_USART_put_buffer:	
  1691  0022                     ??_strlen:	
  1692                           ; 1 bytes @ 0x2
  1693                           
  1694  0022                     ??_captura:	
  1695                           ; 1 bytes @ 0x2
  1696                           
  1697  0022                     ??_PROCULUS_Delay:	
  1698                           ; 1 bytes @ 0x2
  1699                           
  1700  0022                     ??__Umul8_16:	
  1701                           ; 1 bytes @ 0x2
  1702                           
  1703  0022                     I2C_Master_Wait@tempo:	
  1704                           ; 1 bytes @ 0x2
  1705                           
  1706  0022                     EEPROM_Read_Byte@addr:	
  1707                           ; 1 bytes @ 0x2
  1708                           
  1709  0022                     strcpy@to:	
  1710                           ; 1 bytes @ 0x2
  1711                           
  1712  0022                     USART_to_Protocol@i:	
  1713                           ; 1 bytes @ 0x2
  1714                           
  1715  0022                     ___lwdiv@dividend:	
  1716                           ; 2 bytes @ 0x2
  1717                           
  1718  0022                     strlen@cp:	
  1719                           ; 2 bytes @ 0x2
  1720                           
  1721                           
  1722                           ; 2 bytes @ 0x2
  1723  0022                     	ds	1
  1724  0023                     ??_I2C_Master_Start:	
  1725  0023                     ?_I2C_Master_Write:	
  1726                           ; 1 bytes @ 0x3
  1727                           
  1728  0023                     ??_I2C_Master_Stop:	
  1729                           ; 1 bytes @ 0x3
  1730                           
  1731  0023                     ??_I2C_Master_RepeatedStart:	
  1732                           ; 1 bytes @ 0x3
  1733                           
  1734  0023                     ??_USART_put_string:	
  1735                           ; 1 bytes @ 0x3
  1736                           
  1737  0023                     ?_EEPROM_Read_String:	
  1738                           ; 1 bytes @ 0x3
  1739                           
  1740  0023                     ?_I2C_Master_Read:	
  1741                           ; 1 bytes @ 0x3
  1742                           
  1743  0023                     ?_EEPROM_Read_Integer:	
  1744                           ; 2 bytes @ 0x3
  1745                           
  1746  0023                     EEPROM_Write_Byte@addr:	
  1747                           ; 2 bytes @ 0x3
  1748                           
  1749  0023                     EEPROM_Read_String@dado:	
  1750                           ; 1 bytes @ 0x3
  1751                           
  1752  0023                     USART_put_buffer@vetor:	
  1753                           ; 1 bytes @ 0x3
  1754                           
  1755  0023                     strcpy@cp:	
  1756                           ; 1 bytes @ 0x3
  1757                           
  1758  0023                     I2C_Master_Write@d:	
  1759                           ; 1 bytes @ 0x3
  1760                           
  1761  0023                     I2C_Master_Read@a:	
  1762                           ; 2 bytes @ 0x3
  1763                           
  1764  0023                     USART_put_string@ptr:	
  1765                           ; 2 bytes @ 0x3
  1766                           
  1767                           
  1768                           ; 2 bytes @ 0x3
  1769  0023                     	ds	1
  1770  0024                     ??_my_delay_ms_WDT:	
  1771  0024                     ??_USART_init:	
  1772                           ; 1 bytes @ 0x4
  1773                           
  1774  0024                     ??_EEPROM_Read_String:	
  1775                           ; 1 bytes @ 0x4
  1776                           
  1777  0024                     ??_my_delay_ms:	
  1778                           ; 1 bytes @ 0x4
  1779                           
  1780  0024                     ??___lwdiv:	
  1781                           ; 1 bytes @ 0x4
  1782                           
  1783  0024                     ??___xxtofl:	
  1784                           ; 1 bytes @ 0x4
  1785                           
  1786  0024                     EEPROM_Write_Byte@last_GIE:	
  1787                           ; 1 bytes @ 0x4
  1788                           
  1789  0024                     USART_to_Protocol@usart_protocol:	
  1790                           ; 1 bytes @ 0x4
  1791                           
  1792  0024                     USART_put_buffer@loop:	
  1793                           ; 1 bytes @ 0x4
  1794                           
  1795  0024                     PROCULUS_Delay@i:	
  1796                           ; 1 bytes @ 0x4
  1797                           
  1798  0024                     __Umul8_16@product:	
  1799                           ; 2 bytes @ 0x4
  1800                           
  1801  0024                     ___lldiv@dividend:	
  1802                           ; 2 bytes @ 0x4
  1803                           
  1804                           
  1805                           ; 4 bytes @ 0x4
  1806  0024                     	ds	1
  1807  0025                     ??_I2C_Master_Write:	
  1808  0025                     ??_I2C_Master_Read:	
  1809                           ; 1 bytes @ 0x5
  1810                           
  1811  0025                     ??_EEPROM_Read_Integer:	
  1812                           ; 1 bytes @ 0x5
  1813                           
  1814  0025                     ?_EEPROM_Write_Integer:	
  1815                           ; 1 bytes @ 0x5
  1816                           
  1817  0025                     ??_Send_Reply_OK:	
  1818                           ; 1 bytes @ 0x5
  1819                           
  1820  0025                     ?_EEPROM_Write_String:	
  1821                           ; 1 bytes @ 0x5
  1822                           
  1823  0025                     EEPROM_Write_String@dado:	
  1824                           ; 1 bytes @ 0x5
  1825                           
  1826  0025                     EEPROM_Read_String@addr:	
  1827                           ; 1 bytes @ 0x5
  1828                           
  1829  0025                     USART_put_buffer@ptr:	
  1830                           ; 1 bytes @ 0x5
  1831                           
  1832  0025                     EEPROM_Write_Integer@dado:	
  1833                           ; 1 bytes @ 0x5
  1834                           
  1835  0025                     ___lwdiv@quotient:	
  1836                           ; 2 bytes @ 0x5
  1837                           
  1838                           
  1839                           ; 2 bytes @ 0x5
  1840  0025                     	ds	1
  1841  0026                     ??_EEPROM_Write_String:	
  1842  0026                     EEPROM_Read_Integer@addr:	
  1843                           ; 1 bytes @ 0x6
  1844                           
  1845  0026                     EEPROM_Read_String@c:	
  1846                           ; 1 bytes @ 0x6
  1847                           
  1848  0026                     USART_init@i:	
  1849                           ; 1 bytes @ 0x6
  1850                           
  1851  0026                     __Umul8_16@word_mpld:	
  1852                           ; 1 bytes @ 0x6
  1853                           
  1854  0026                     my_delay_ms@i:	
  1855                           ; 2 bytes @ 0x6
  1856                           
  1857  0026                     my_delay_ms_WDT@i:	
  1858                           ; 4 bytes @ 0x6
  1859                           
  1860                           
  1861                           ; 4 bytes @ 0x6
  1862  0026                     	ds	1
  1863  0027                     ??_EEPROM_Write_Integer:	
  1864  0027                     EEPROM_Read_Integer@ptr:	
  1865                           ; 1 bytes @ 0x7
  1866                           
  1867  0027                     EEPROM_Write_String@addr:	
  1868                           ; 1 bytes @ 0x7
  1869                           
  1870  0027                     ___lwdiv@counter:	
  1871                           ; 1 bytes @ 0x7
  1872                           
  1873  0027                     I2C_Master_Read@temp:	
  1874                           ; 1 bytes @ 0x7
  1875                           
  1876                           
  1877                           ; 2 bytes @ 0x7
  1878  0027                     	ds	1
  1879  0028                     ??___lldiv:	
  1880  0028                     ___xxtofl@sign:	
  1881                           ; 1 bytes @ 0x8
  1882                           
  1883  0028                     __Umul8_16@multiplier:	
  1884                           ; 1 bytes @ 0x8
  1885                           
  1886  0028                     EEPROM_Read_Integer@result:	
  1887                           ; 1 bytes @ 0x8
  1888                           
  1889                           
  1890                           ; 2 bytes @ 0x8
  1891  0028                     	ds	1
  1892  0029                     ?_EEPROM_24C1025_Read_Str:	
  1893  0029                     ?___flmul:	
  1894                           ; 1 bytes @ 0x9
  1895                           
  1896  0029                     ___xxtofl@exp:	
  1897                           ; 4 bytes @ 0x9
  1898                           
  1899  0029                     EEPROM_24C1025_Read_Str@mem_add:	
  1900                           ; 1 bytes @ 0x9
  1901                           
  1902  0029                     ___lldiv@quotient:	
  1903                           ; 4 bytes @ 0x9
  1904                           
  1905  0029                     ___flmul@b:	
  1906                           ; 4 bytes @ 0x9
  1907                           
  1908                           
  1909                           ; 4 bytes @ 0x9
  1910  0029                     	ds	1
  1911  002A                     ?_EEPROM_24C1025_Write_Buffer:	
  1912  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  1913                           ; 1 bytes @ 0xA
  1914                           
  1915  002A                     ?_EEPROM_24C1025_Write_Str:	
  1916                           ; 1 bytes @ 0xA
  1917                           
  1918  002A                     EEPROM_Write_Integer@ptr:	
  1919                           ; 1 bytes @ 0xA
  1920                           
  1921  002A                     EEPROM_Read_Integer@i:	
  1922                           ; 1 bytes @ 0xA
  1923                           
  1924  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1925                           ; 1 bytes @ 0xA
  1926                           
  1927  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1928                           ; 4 bytes @ 0xA
  1929                           
  1930  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  1931                           ; 4 bytes @ 0xA
  1932                           
  1933  002A                     ___xxtofl@arg:	
  1934                           ; 4 bytes @ 0xA
  1935                           
  1936                           
  1937                           ; 4 bytes @ 0xA
  1938  002A                     	ds	1
  1939  002B                     EEPROM_Write_Integer@addr:	
  1940                           
  1941                           ; 1 bytes @ 0xB
  1942  002B                     	ds	1
  1943  002C                     EEPROM_Write_Integer@i:	
  1944                           
  1945                           ; 1 bytes @ 0xC
  1946  002C                     	ds	1
  1947  002D                     EEPROM_24C1025_Read_Str@buffer:	
  1948  002D                     ___lldiv@counter:	
  1949                           ; 1 bytes @ 0xD
  1950                           
  1951  002D                     ___flmul@a:	
  1952                           ; 1 bytes @ 0xD
  1953                           
  1954                           
  1955                           ; 4 bytes @ 0xD
  1956  002D                     	ds	1
  1957  002E                     ??_EEPROM_24C1025_Read_Str:	
  1958  002E                     ?_I2C_Master_Init:	
  1959                           ; 1 bytes @ 0xE
  1960                           
  1961  002E                     ?_ADC_Media_10bits:	
  1962                           ; 1 bytes @ 0xE
  1963                           
  1964  002E                     ?___fldiv:	
  1965                           ; 4 bytes @ 0xE
  1966                           
  1967  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1968                           ; 4 bytes @ 0xE
  1969                           
  1970  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  1971                           ; 1 bytes @ 0xE
  1972                           
  1973  002E                     EEPROM_24C1025_Write_Str@data:	
  1974                           ; 1 bytes @ 0xE
  1975                           
  1976  002E                     I2C_Master_Init@c:	
  1977                           ; 1 bytes @ 0xE
  1978                           
  1979  002E                     ___fldiv@a:	
  1980                           ; 4 bytes @ 0xE
  1981                           
  1982                           
  1983                           ; 4 bytes @ 0xE
  1984  002E                     	ds	1
  1985  002F                     ??_EEPROM_24C1025_Write_Str:	
  1986  002F                     EEPROM_24C1025_Read_Buffer@data:	
  1987                           ; 1 bytes @ 0xF
  1988                           
  1989  002F                     EEPROM_24C1025_Write_Buffer@data:	
  1990                           ; 1 bytes @ 0xF
  1991                           
  1992                           
  1993                           ; 2 bytes @ 0xF
  1994  002F                     	ds	1
  1995  0030                     ??_EEPROM_24C1025_Read_Buffer:	
  1996  0030                     EEPROM_24C1025_Read_Str@cnt:	
  1997                           ; 1 bytes @ 0x10
  1998                           
  1999                           
  2000                           ; 1 bytes @ 0x10
  2001  0030                     	ds	1
  2002  0031                     ??_EEPROM_24C1025_Write_Buffer:	
  2003  0031                     ??___flmul:	
  2004                           ; 1 bytes @ 0x11
  2005                           
  2006  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  2007                           ; 1 bytes @ 0x11
  2008                           
  2009  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  2010                           ; 1 bytes @ 0x11
  2011                           
  2012                           
  2013                           ; 1 bytes @ 0x11
  2014  0031                     	ds	1
  2015  0032                     ??_ADC_Media_10bits:	
  2016  0032                     ??_I2C_Master_Init:	
  2017                           ; 1 bytes @ 0x12
  2018                           
  2019  0032                     EEPROM_24C1025_Write_Str@range:	
  2020                           ; 1 bytes @ 0x12
  2021                           
  2022  0032                     EEPROM_24C1025_Read_Str@range:	
  2023                           ; 1 bytes @ 0x12
  2024                           
  2025  0032                     ___fldiv@b:	
  2026                           ; 1 bytes @ 0x12
  2027                           
  2028                           
  2029                           ; 4 bytes @ 0x12
  2030  0032                     	ds	1
  2031  0033                     EEPROM_24C1025_Write_Buffer@count:	
  2032  0033                     EEPROM_24C1025_Read_Buffer@cnt_103:	
  2033                           ; 1 bytes @ 0x13
  2034                           
  2035  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2036                           ; 1 bytes @ 0x13
  2037                           
  2038  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2039                           ; 1 bytes @ 0x13
  2040                           
  2041  0033                     ADC_Media_10bits@canal:	
  2042                           ; 1 bytes @ 0x13
  2043                           
  2044                           
  2045                           ; 1 bytes @ 0x13
  2046  0033                     	ds	1
  2047  0034                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2048  0034                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2049                           ; 1 bytes @ 0x14
  2050                           
  2051  0034                     ADC_Media_10bits@value:	
  2052                           ; 1 bytes @ 0x14
  2053                           
  2054                           
  2055                           ; 2 bytes @ 0x14
  2056  0034                     	ds	1
  2057  0035                     EEPROM_24C1025_Write_Buffer@range:	
  2058  0035                     EEPROM_24C1025_Read_Buffer@range:	
  2059                           ; 1 bytes @ 0x15
  2060                           
  2061                           
  2062                           ; 1 bytes @ 0x15
  2063  0035                     	ds	1
  2064  0036                     ??___fldiv:	
  2065  0036                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2066                           ; 1 bytes @ 0x16
  2067                           
  2068  0036                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2069                           ; 1 bytes @ 0x16
  2070                           
  2071  0036                     ADC_Media_10bits@i:	
  2072                           ; 1 bytes @ 0x16
  2073                           
  2074  0036                     ___flmul@sign:	
  2075                           ; 1 bytes @ 0x16
  2076                           
  2077                           
  2078                           ; 1 bytes @ 0x16
  2079  0036                     	ds	1
  2080  0037                     ?_EEPROM_24C1025_Write_Byte:	
  2081  0037                     ?_EEPROM_24C1025_Read_Byte:	
  2082                           ; 1 bytes @ 0x17
  2083                           
  2084  0037                     ?_EEPROM_24C1025_Read_Int:	
  2085                           ; 1 bytes @ 0x17
  2086                           
  2087  0037                     ?___fladd:	
  2088                           ; 2 bytes @ 0x17
  2089                           
  2090  0037                     ___flmul@aexp:	
  2091                           ; 4 bytes @ 0x17
  2092                           
  2093  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2094                           ; 1 bytes @ 0x17
  2095                           
  2096  0037                     EEPROM_24C1025_Read_Byte@mem_add:	
  2097                           ; 4 bytes @ 0x17
  2098                           
  2099  0037                     EEPROM_24C1025_Read_Int@mem_add:	
  2100                           ; 4 bytes @ 0x17
  2101                           
  2102  0037                     ___fladd@b:	
  2103                           ; 4 bytes @ 0x17
  2104                           
  2105                           
  2106                           ; 4 bytes @ 0x17
  2107  0037                     	ds	1
  2108  0038                     ___flmul@grs:	
  2109                           
  2110                           ; 4 bytes @ 0x18
  2111  0038                     	ds	3
  2112  003B                     ??_EEPROM_24C1025_Read_Byte:	
  2113  003B                     ??_EEPROM_24C1025_Read_Int:	
  2114                           ; 1 bytes @ 0x1B
  2115                           
  2116  003B                     EEPROM_24C1025_Write_Byte@data:	
  2117                           ; 1 bytes @ 0x1B
  2118                           
  2119  003B                     ___fladd@a:	
  2120                           ; 1 bytes @ 0x1B
  2121                           
  2122  003B                     ___fldiv@rem:	
  2123                           ; 4 bytes @ 0x1B
  2124                           
  2125                           
  2126                           ; 4 bytes @ 0x1B
  2127  003B                     	ds	1
  2128  003C                     ??_EEPROM_24C1025_Write_Byte:	
  2129  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2130                           ; 1 bytes @ 0x1C
  2131                           
  2132  003C                     EEPROM_24C1025_Read_Byte@chip_add:	
  2133                           ; 1 bytes @ 0x1C
  2134                           
  2135  003C                     ___flmul@bexp:	
  2136                           ; 1 bytes @ 0x1C
  2137                           
  2138                           
  2139                           ; 1 bytes @ 0x1C
  2140  003C                     	ds	1
  2141  003D                     EEPROM_24C1025_Read_Byte@data:	
  2142  003D                     EEPROM_24C1025_Read_Int@chip_add:	
  2143                           ; 1 bytes @ 0x1D
  2144                           
  2145  003D                     ___flmul@prod:	
  2146                           ; 1 bytes @ 0x1D
  2147                           
  2148                           
  2149                           ; 4 bytes @ 0x1D
  2150  003D                     	ds	1
  2151  003E                     EEPROM_24C1025_Read_Int@data:	
  2152                           
  2153                           ; 2 bytes @ 0x1E
  2154  003E                     	ds	1
  2155  003F                     ??___fladd:	
  2156  003F                     ___fldiv@sign:	
  2157                           ; 1 bytes @ 0x1F
  2158                           
  2159                           
  2160                           ; 1 bytes @ 0x1F
  2161  003F                     	ds	1
  2162  0040                     ___fldiv@new_exp:	
  2163                           
  2164                           ; 2 bytes @ 0x20
  2165  0040                     	ds	1
  2166  0041                     ___flmul@temp:	
  2167                           
  2168                           ; 2 bytes @ 0x21
  2169  0041                     	ds	1
  2170  0042                     ___fldiv@grs:	
  2171                           
  2172                           ; 4 bytes @ 0x22
  2173  0042                     	ds	1
  2174  0043                     ?___fltol:	
  2175  0043                     ___fltol@f1:	
  2176                           ; 4 bytes @ 0x23
  2177                           
  2178                           
  2179                           ; 4 bytes @ 0x23
  2180  0043                     	ds	3
  2181  0046                     ___fldiv@bexp:	
  2182                           
  2183                           ; 1 bytes @ 0x26
  2184  0046                     	ds	1
  2185  0047                     ??___fltol:	
  2186  0047                     ___fladd@signs:	
  2187                           ; 1 bytes @ 0x27
  2188                           
  2189  0047                     ___fldiv@aexp:	
  2190                           ; 1 bytes @ 0x27
  2191                           
  2192                           
  2193                           ; 1 bytes @ 0x27
  2194  0047                     	ds	1
  2195  0048                     ___fladd@aexp:	
  2196                           
  2197                           ; 1 bytes @ 0x28
  2198  0048                     	ds	1
  2199  0049                     ___fladd@bexp:	
  2200                           
  2201                           ; 1 bytes @ 0x29
  2202  0049                     	ds	1
  2203  004A                     ___fladd@grs:	
  2204                           
  2205                           ; 1 bytes @ 0x2A
  2206  004A                     	ds	1
  2207  004B                     ?___flsub:	
  2208  004B                     ___flsub@a:	
  2209                           ; 4 bytes @ 0x2B
  2210                           
  2211                           
  2212                           ; 4 bytes @ 0x2B
  2213  004B                     	ds	1
  2214  004C                     ___fltol@sign1:	
  2215                           
  2216                           ; 1 bytes @ 0x2C
  2217  004C                     	ds	1
  2218  004D                     ___fltol@exp1:	
  2219                           
  2220                           ; 1 bytes @ 0x2D
  2221  004D                     	ds	1
  2222  004E                     ?_USART_put_int:	
  2223  004E                     ?_EEPROM_24C1025_Write_Int:	
  2224                           ; 1 bytes @ 0x2E
  2225                           
  2226  004E                     USART_put_int@value:	
  2227                           ; 1 bytes @ 0x2E
  2228                           
  2229  004E                     EEPROM_24C1025_Write_Int@mem_add:	
  2230                           ; 2 bytes @ 0x2E
  2231                           
  2232                           
  2233                           ; 4 bytes @ 0x2E
  2234  004E                     	ds	1
  2235  004F                     ___flsub@b:	
  2236                           
  2237                           ; 4 bytes @ 0x2F
  2238  004F                     	ds	1
  2239  0050                     ??_USART_put_int:	
  2240                           
  2241                           ; 1 bytes @ 0x30
  2242  0050                     	ds	1
  2243  0051                     USART_put_int@dado:	
  2244                           
  2245                           ; 1 bytes @ 0x31
  2246  0051                     	ds	1
  2247  0052                     ?_PROCULUS_Control_Register_Write:	
  2248  0052                     ?_PROCULUS_VP_Write:	
  2249                           ; 1 bytes @ 0x32
  2250                           
  2251  0052                     PROCULUS_Control_Register_Write@size:	
  2252                           ; 1 bytes @ 0x32
  2253                           
  2254  0052                     EEPROM_24C1025_Write_Int@data:	
  2255                           ; 1 bytes @ 0x32
  2256                           
  2257  0052                     PROCULUS_VP_Write@vp:	
  2258                           ; 2 bytes @ 0x32
  2259                           
  2260                           
  2261                           ; 2 bytes @ 0x32
  2262  0052                     	ds	1
  2263  0053                     ??_mediaLeituraPt100Umidadde:	
  2264  0053                     ??_PROCULUS_Control_Register_Write:	
  2265                           ; 1 bytes @ 0x33
  2266                           
  2267  0053                     ??___flsub:	
  2268                           ; 1 bytes @ 0x33
  2269                           
  2270                           
  2271                           ; 1 bytes @ 0x33
  2272  0053                     	ds	1
  2273  0054                     ??_EEPROM_24C1025_Write_Int:	
  2274  0054                     PROCULUS_Control_Register_Write@vetor:	
  2275                           ; 1 bytes @ 0x34
  2276                           
  2277  0054                     PROCULUS_VP_Write@vetor:	
  2278                           ; 1 bytes @ 0x34
  2279                           
  2280                           
  2281                           ; 2 bytes @ 0x34
  2282  0054                     	ds	1
  2283  0055                     EEPROM_24C1025_Write_Int@chip_add:	
  2284  0055                     PROCULUS_Control_Register_Write@i:	
  2285                           ; 1 bytes @ 0x35
  2286                           
  2287                           
  2288                           ; 1 bytes @ 0x35
  2289  0055                     	ds	1
  2290  0056                     ?_PROCULUS_Show_Screen:	
  2291  0056                     ?_PROCULUS_Buzzer:	
  2292                           ; 1 bytes @ 0x36
  2293                           
  2294  0056                     PROCULUS_VP_Write@size:	
  2295                           ; 1 bytes @ 0x36
  2296                           
  2297  0056                     EEPROM_24C1025_Write_Int@local:	
  2298                           ; 1 bytes @ 0x36
  2299                           
  2300  0056                     PROCULUS_Buzzer@time_ms_x_10:	
  2301                           ; 2 bytes @ 0x36
  2302                           
  2303  0056                     PROCULUS_Show_Screen@screen:	
  2304                           ; 2 bytes @ 0x36
  2305                           
  2306                           
  2307                           ; 2 bytes @ 0x36
  2308  0056                     	ds	1
  2309  0057                     ??_PROCULUS_VP_Write:	
  2310  0057                     mediaLeituraPt100Umidadde@tensao:	
  2311                           ; 1 bytes @ 0x37
  2312                           
  2313                           
  2314                           ; 4 bytes @ 0x37
  2315  0057                     	ds	1
  2316  0058                     ?_Save_Log:	
  2317  0058                     ??_PROCULUS_Show_Screen:	
  2318                           ; 1 bytes @ 0x38
  2319                           
  2320  0058                     ??_PROCULUS_Buzzer:	
  2321                           ; 1 bytes @ 0x38
  2322                           
  2323  0058                     ?_EEPROM_24C1025_Fill_All:	
  2324                           ; 1 bytes @ 0x38
  2325                           
  2326  0058                     EEPROM_24C1025_Fill_All@value:	
  2327                           ; 1 bytes @ 0x38
  2328                           
  2329  0058                     Save_Log@add_datalog:	
  2330                           ; 2 bytes @ 0x38
  2331                           
  2332                           
  2333                           ; 4 bytes @ 0x38
  2334  0058                     	ds	1
  2335  0059                     PROCULUS_VP_Write@i:	
  2336  0059                     PROCULUS_Buzzer@vetor:	
  2337                           ; 1 bytes @ 0x39
  2338                           
  2339  0059                     PROCULUS_Show_Screen@vetor:	
  2340                           ; 2 bytes @ 0x39
  2341                           
  2342                           
  2343                           ; 3 bytes @ 0x39
  2344  0059                     	ds	1
  2345  005A                     ?_PROCULUS_VP_Write_String:	
  2346  005A                     ??_EEPROM_24C1025_Fill_All:	
  2347                           ; 1 bytes @ 0x3A
  2348                           
  2349  005A                     EEPROM_24C1025_Fill_All@chip_add:	
  2350                           ; 1 bytes @ 0x3A
  2351                           
  2352  005A                     PROCULUS_VP_Write_String@vp:	
  2353                           ; 1 bytes @ 0x3A
  2354                           
  2355                           
  2356                           ; 2 bytes @ 0x3A
  2357  005A                     	ds	1
  2358  005B                     mediaLeituraPt100Umidadde@canal:	
  2359  005B                     EEPROM_24C1025_Fill_All@mem_add:	
  2360                           ; 1 bytes @ 0x3B
  2361                           
  2362                           
  2363                           ; 4 bytes @ 0x3B
  2364  005B                     	ds	1
  2365  005C                     ??_Save_Log:	
  2366  005C                     mediaLeituraPt100Umidadde@i:	
  2367                           ; 1 bytes @ 0x3C
  2368                           
  2369  005C                     PROCULUS_VP_Write_String@text:	
  2370                           ; 1 bytes @ 0x3C
  2371                           
  2372                           
  2373                           ; 1 bytes @ 0x3C
  2374  005C                     	ds	1
  2375  005D                     ??_PROCULUS_VP_Write_String:	
  2376  005D                     mediaLeituraPt100Umidadde@Temp:	
  2377                           ; 1 bytes @ 0x3D
  2378                           
  2379                           
  2380                           ; 4 bytes @ 0x3D
  2381  005D                     	ds	2
  2382  005F                     ??_Decodify_Command:	
  2383                           
  2384                           ; 1 bytes @ 0x3F
  2385  005F                     	ds	4
  2386  0063                     ??_main:	
  2387                           
  2388                           ; 1 bytes @ 0x43
  2389  0063                     	ds	3
  2390  0066                     main@reset:	
  2391                           
  2392                           ; 2 bytes @ 0x46
  2393  0066                     	ds	2
  2394                           
  2395                           	psect	maintext
  2396  15A6                     __pmaintext:	
  2397 ;;
  2398 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2399 ;;
  2400 ;; *************** function _main *****************
  2401 ;; Defined at:
  2402 ;;		line 144 in file "SlaveLiofilizadorVer1.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  reset           2   70[BANK0 ] unsigned int 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : B00/0
  2413 ;;		On exit  : 300/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2416 ;;      Params:         0       0       0       0       0
  2417 ;;      Locals:         0       2       0       0       0
  2418 ;;      Temps:          0       3       0       0       0
  2419 ;;      Totals:         0       5       0       0       0
  2420 ;;Total ram usage:        5 bytes
  2421 ;; Hardware stack levels required when called:    7
  2422 ;; This function calls:
  2423 ;;		_ADC_init
  2424 ;;		_Decodify_Command
  2425 ;;		_EEPROM_Read_Integer
  2426 ;;		_EEPROM_Write_Integer
  2427 ;;		_I2C_Master_Init
  2428 ;;		_USART_init
  2429 ;;		_mediaLeituraPt100Umidadde
  2430 ;;		_my_delay_ms_WDT
  2431 ;; This function is called by:
  2432 ;;		Startup code after reset
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           
  2437                           ;psect for function _main
  2438  15A6                     _main:	
  2439                           
  2440                           ;SlaveLiofilizadorVer1.c: 145:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2441                           
  2442                           ;incstack = 0
  2443                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2444  15A6  3002               	movlw	2
  2445  15A7  1283               	bcf	3,5	;RP0=0, select bank0
  2446  15A8  1303               	bcf	3,6	;RP1=0, select bank0
  2447  15A9  00E5               	movwf	??_main+2
  2448  15AA  3004               	movlw	4
  2449  15AB  00E4               	movwf	??_main+1
  2450  15AC  30B9               	movlw	185
  2451  15AD  00E3               	movwf	??_main
  2452  15AE                     u5147:	
  2453  15AE  0BE3               	decfsz	??_main,f
  2454  15AF  2DAE               	goto	u5147
  2455  15B0  0BE4               	decfsz	??_main+1,f
  2456  15B1  2DAE               	goto	u5147
  2457  15B2  0BE5               	decfsz	??_main+2,f
  2458  15B3  2DAE               	goto	u5147
  2459  15B4  2DB5               	nop2
  2460                           
  2461                           ;SlaveLiofilizadorVer1.c: 146:      OSCCONbits.IRCF0=1;
  2462  15B5  1683               	bsf	3,5	;RP0=1, select bank1
  2463  15B6  1303               	bcf	3,6	;RP1=0, select bank1
  2464  15B7  160F               	bsf	15,4	;volatile
  2465                           
  2466                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF1=1;
  2467  15B8  168F               	bsf	15,5	;volatile
  2468                           
  2469                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF2=1;
  2470  15B9  170F               	bsf	15,6	;volatile
  2471                           
  2472                           ;SlaveLiofilizadorVer1.c: 150:      PORTA=0;
  2473  15BA  1283               	bcf	3,5	;RP0=0, select bank0
  2474  15BB  0185               	clrf	5	;volatile
  2475                           
  2476                           ;SlaveLiofilizadorVer1.c: 151:      PORTB=0;
  2477  15BC  0186               	clrf	6	;volatile
  2478                           
  2479                           ;SlaveLiofilizadorVer1.c: 152:      PORTC=0;
  2480  15BD  0187               	clrf	7	;volatile
  2481                           
  2482                           ;SlaveLiofilizadorVer1.c: 153:      PORTE=0;
  2483  15BE  0189               	clrf	9	;volatile
  2484                           
  2485                           ;SlaveLiofilizadorVer1.c: 154:      TRISA=0b11101111;
  2486  15BF  30EF               	movlw	239
  2487  15C0  1683               	bsf	3,5	;RP0=1, select bank1
  2488  15C1  0085               	movwf	5	;volatile
  2489                           
  2490                           ;SlaveLiofilizadorVer1.c: 155:      TRISB=0b00001111;
  2491  15C2  300F               	movlw	15
  2492  15C3  0086               	movwf	6	;volatile
  2493                           
  2494                           ;SlaveLiofilizadorVer1.c: 156:      TRISC=0xF0;
  2495  15C4  30F0               	movlw	240
  2496  15C5  0087               	movwf	7	;volatile
  2497                           
  2498                           ;SlaveLiofilizadorVer1.c: 157:      TRISE=0xFF;
  2499  15C6  30FF               	movlw	255
  2500  15C7  0089               	movwf	9	;volatile
  2501                           
  2502                           ;SlaveLiofilizadorVer1.c: 159:      ANSEL=0x00000011;
  2503  15C8  3011               	movlw	17
  2504  15C9  1703               	bsf	3,6	;RP1=1, select bank3
  2505  15CA  0088               	movwf	8	;volatile
  2506                           
  2507                           ;SlaveLiofilizadorVer1.c: 160:      ANSELH=0x00000000;
  2508  15CB  0189               	clrf	9	;volatile
  2509                           
  2510                           ;SlaveLiofilizadorVer1.c: 162:      OPTION_REGbits.nRBPU=0;
  2511  15CC  1303               	bcf	3,6	;RP1=0, select bank1
  2512  15CD  1381               	bcf	1,7	;volatile
  2513                           
  2514                           ;SlaveLiofilizadorVer1.c: 163:      WPUB=0b00001111;
  2515  15CE  300F               	movlw	15
  2516  15CF  0095               	movwf	21	;volatile
  2517                           
  2518                           ;SlaveLiofilizadorVer1.c: 166:      PORTBbits.RB7 =1;
  2519  15D0  1283               	bcf	3,5	;RP0=0, select bank0
  2520  15D1  1786               	bsf	6,7	;volatile
  2521                           
  2522                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB6 =1;
  2523  15D2  1706               	bsf	6,6	;volatile
  2524                           
  2525                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB5=1;
  2526  15D3  1686               	bsf	6,5	;volatile
  2527                           
  2528                           ;SlaveLiofilizadorVer1.c: 169:      my_delay_ms_WDT(1000);
  2529  15D4  3000               	movlw	0
  2530  15D5  00A3               	movwf	my_delay_ms_WDT@time+3
  2531  15D6  3000               	movlw	0
  2532  15D7  00A2               	movwf	my_delay_ms_WDT@time+2
  2533  15D8  3003               	movlw	3
  2534  15D9  00A1               	movwf	my_delay_ms_WDT@time+1
  2535  15DA  30E8               	movlw	232
  2536  15DB  00A0               	movwf	my_delay_ms_WDT@time
  2537  15DC  160A  118A  20F7  160A  118A  	fcall	_my_delay_ms_WDT
  2538                           
  2539                           ;SlaveLiofilizadorVer1.c: 171:      OPTION_REGbits.T0CS=0;
  2540  15E1  1683               	bsf	3,5	;RP0=1, select bank1
  2541  15E2  1281               	bcf	1,5	;volatile
  2542                           
  2543                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.PSA =1;
  2544  15E3  1581               	bsf	1,3	;volatile
  2545                           
  2546                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PS0 =1;
  2547  15E4  1401               	bsf	1,0	;volatile
  2548                           
  2549                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS1 =1;
  2550  15E5  1481               	bsf	1,1	;volatile
  2551                           
  2552                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS2 =1;
  2553  15E6  1501               	bsf	1,2	;volatile
  2554                           
  2555                           ;SlaveLiofilizadorVer1.c: 176:      INTCONbits.T0IE =0;
  2556  15E7  128B               	bcf	11,5	;volatile
  2557                           
  2558                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.INTE =0;
  2559  15E8  120B               	bcf	11,4	;volatile
  2560                           
  2561                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.GIE =1;
  2562  15E9  178B               	bsf	11,7	;volatile
  2563                           
  2564                           ;SlaveLiofilizadorVer1.c: 181:      INTCONbits.PEIE = 1;
  2565  15EA  170B               	bsf	11,6	;volatile
  2566                           
  2567                           ;SlaveLiofilizadorVer1.c: 182:      T1CKPS0=1;
  2568  15EB  1283               	bcf	3,5	;RP0=0, select bank0
  2569  15EC  1610               	bsf	16,4	;volatile
  2570                           
  2571                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS1=1;
  2572  15ED  1690               	bsf	16,5	;volatile
  2573                           
  2574                           ;SlaveLiofilizadorVer1.c: 184:      TMR1CS=0;
  2575  15EE  1090               	bcf	16,1	;volatile
  2576                           
  2577                           ;SlaveLiofilizadorVer1.c: 185:      TMR1IE=1;
  2578  15EF  1683               	bsf	3,5	;RP0=1, select bank1
  2579  15F0  140C               	bsf	12,0	;volatile
  2580                           
  2581                           ;SlaveLiofilizadorVer1.c: 186:      T1CON=1;
  2582  15F1  3001               	movlw	1
  2583  15F2  1283               	bcf	3,5	;RP0=0, select bank0
  2584  15F3  0090               	movwf	16	;volatile
  2585  15F4  0064               	clrwdt	;# 
  2586                           
  2587                           ;SlaveLiofilizadorVer1.c: 193:      ADC_init();
  2588  15F5  160A  158A  24E0  160A  118A  	fcall	_ADC_init
  2589                           
  2590                           ;SlaveLiofilizadorVer1.c: 194:      I2C_Master_Init(100000);
  2591  15FA  3000               	movlw	0
  2592  15FB  00B1               	movwf	I2C_Master_Init@c+3
  2593  15FC  3001               	movlw	1
  2594  15FD  00B0               	movwf	I2C_Master_Init@c+2
  2595  15FE  3086               	movlw	134
  2596  15FF  00AF               	movwf	I2C_Master_Init@c+1
  2597  1600  30A0               	movlw	160
  2598  1601  00AE               	movwf	I2C_Master_Init@c
  2599  1602  160A  158A  276A  160A  118A  	fcall	_I2C_Master_Init
  2600                           
  2601                           ;SlaveLiofilizadorVer1.c: 195:      USART_init(115200);
  2602  1607  3000               	movlw	0
  2603  1608  1283               	bcf	3,5	;RP0=0, select bank0
  2604  1609  00A3               	movwf	USART_init@baudrate+3
  2605  160A  3001               	movlw	1
  2606  160B  00A2               	movwf	USART_init@baudrate+2
  2607  160C  30C2               	movlw	194
  2608  160D  00A1               	movwf	USART_init@baudrate+1
  2609  160E  3000               	movlw	0
  2610  160F  00A0               	movwf	USART_init@baudrate
  2611  1610  160A  118A  21DF  160A  118A  	fcall	_USART_init
  2612                           
  2613                           ;SlaveLiofilizadorVer1.c: 201:      {;SlaveLiofilizadorVer1.c: 202:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 203:      reset=EEPROM_Read_Integer(0x10);
  2614  1615  3010               	movlw	16
  2615  1616  160A  158A  2740  160A  118A  	fcall	_EEPROM_Read_Integer
  2616  161B  0824               	movf	?_EEPROM_Read_Integer+1,w
  2617  161C  00E7               	movwf	main@reset+1
  2618  161D  0823               	movf	?_EEPROM_Read_Integer,w
  2619  161E  00E6               	movwf	main@reset
  2620                           
  2621                           ;SlaveLiofilizadorVer1.c: 204:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2622  161F  0A66               	incf	main@reset,w
  2623  1620  1D03               	skipz
  2624  1621  2E2E               	goto	l5645
  2625  1622  0A67               	incf	main@reset+1,w
  2626  1623  1D03               	btfss	3,2
  2627  1624  2E2E               	goto	l5645
  2628  1625  3000               	movlw	0
  2629  1626  00A5               	movwf	EEPROM_Write_Integer@dado
  2630  1627  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2631  1628  3010               	movlw	16
  2632  1629  160A  158A  279B  160A  118A  	fcall	_EEPROM_Write_Integer
  2633  162E                     l5645:	
  2634                           
  2635                           ;SlaveLiofilizadorVer1.c: 205:      reset++;
  2636  162E  3001               	movlw	1
  2637  162F  1283               	bcf	3,5	;RP0=0, select bank0
  2638  1630  1303               	bcf	3,6	;RP1=0, select bank0
  2639  1631  07E6               	addwf	main@reset,f
  2640  1632  1803               	skipnc
  2641  1633  0AE7               	incf	main@reset+1,f
  2642  1634  3000               	movlw	0
  2643  1635  07E7               	addwf	main@reset+1,f
  2644                           
  2645                           ;SlaveLiofilizadorVer1.c: 206:      EEPROM_Write_Integer(0x10,reset);
  2646  1636  0867               	movf	main@reset+1,w
  2647  1637  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2648  1638  0866               	movf	main@reset,w
  2649  1639  00A5               	movwf	EEPROM_Write_Integer@dado
  2650  163A  3010               	movlw	16
  2651  163B  160A  158A  279B  160A  118A  	fcall	_EEPROM_Write_Integer
  2652                           
  2653                           ;SlaveLiofilizadorVer1.c: 207:      };SlaveLiofilizadorVer1.c: 211:      Delay_Led_Tmr0 
      +                          = 0;
  2654  1640  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2655  1641  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2656                           
  2657                           ;SlaveLiofilizadorVer1.c: 212:      Delay_Led_Usart = 0;
  2658  1642  1683               	bsf	3,5	;RP0=1, select bank1
  2659  1643  1303               	bcf	3,6	;RP1=0, select bank1
  2660  1644  01B2               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2661  1645  01B3               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2662                           
  2663                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Memory = 0;
  2664  1646  01B4               	clrf	_Delay_Led_Memory^(0+128)	;volatile
  2665  1647  01B5               	clrf	(_Delay_Led_Memory+1)^(0+128)	;volatile
  2666                           
  2667                           ;SlaveLiofilizadorVer1.c: 215:      segundo=0;
  2668  1648  01FD               	clrf	_segundo	;volatile
  2669                           
  2670                           ;SlaveLiofilizadorVer1.c: 216:      hora=0;
  2671  1649  01FC               	clrf	_hora	;volatile
  2672                           
  2673                           ;SlaveLiofilizadorVer1.c: 217:      PORTCbits.RC0=0;
  2674  164A  1283               	bcf	3,5	;RP0=0, select bank0
  2675  164B  1007               	bcf	7,0	;volatile
  2676                           
  2677                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC1=0;
  2678  164C  1087               	bcf	7,1	;volatile
  2679                           
  2680                           ;SlaveLiofilizadorVer1.c: 219:      PORTAbits.RA2=0;
  2681  164D  1105               	bcf	5,2	;volatile
  2682                           
  2683                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA3=0;
  2684  164E  1185               	bcf	5,3	;volatile
  2685                           
  2686                           ;SlaveLiofilizadorVer1.c: 223:      Board_Number=(((0x0F)&(~PORTB)));
  2687  164F  0906               	comf	6,w	;volatile
  2688  1650  390F               	andlw	15
  2689  1651  00E3               	movwf	??_main
  2690  1652  0863               	movf	??_main,w
  2691  1653  00E9               	movwf	_Board_Number
  2692                           
  2693                           ;SlaveLiofilizadorVer1.c: 224:      canal=1;
  2694  1654  01EA               	clrf	_canal
  2695  1655  0AEA               	incf	_canal,f
  2696                           
  2697                           ;SlaveLiofilizadorVer1.c: 228:      statuspower.flag_global_condensador=0;
  2698  1656  10EB               	bcf	_statuspower,1
  2699  1657                     l5671:	
  2700                           
  2701                           ;SlaveLiofilizadorVer1.c: 246:           {;SlaveLiofilizadorVer1.c: 248:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2702  1657  1283               	bcf	3,5	;RP0=0, select bank0
  2703  1658  17EC               	bsf	_generic_status,7
  2704                           
  2705                           ;SlaveLiofilizadorVer1.c: 269:          if(++canal==2) canal=0;
  2706  1659  3001               	movlw	1
  2707  165A  00E3               	movwf	??_main
  2708  165B  0863               	movf	??_main,w
  2709  165C  07EA               	addwf	_canal,f
  2710  165D  3002               	movlw	2
  2711  165E  066A               	xorwf	_canal,w
  2712  165F  1903               	btfsc	3,2
  2713  1660  01EA               	clrf	_canal
  2714                           
  2715                           ;SlaveLiofilizadorVer1.c: 270:          mediaLeituraPt100Umidadde(canal);
  2716  1661  086A               	movf	_canal,w
  2717  1662  120A  118A  26D0  160A  118A  	fcall	_mediaLeituraPt100Umidadde
  2718                           
  2719                           ;SlaveLiofilizadorVer1.c: 283:          if(generic_status.flag_usart_rx==1)
  2720  1667  1283               	bcf	3,5	;RP0=0, select bank0
  2721  1668  1C6C               	btfss	_generic_status,0
  2722  1669  2E57               	goto	l5671
  2723                           
  2724                           ;SlaveLiofilizadorVer1.c: 284:             {;SlaveLiofilizadorVer1.c: 285:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2725  166A  1703               	bsf	3,6	;RP1=1, select bank2
  2726  166B  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2727  166C  1683               	bsf	3,5	;RP0=1, select bank1
  2728  166D  1303               	bcf	3,6	;RP1=0, select bank1
  2729  166E  00AF               	movwf	(_header+1)^(0+128)
  2730  166F  1283               	bcf	3,5	;RP0=0, select bank2
  2731  1670  1703               	bsf	3,6	;RP1=1, select bank2
  2732  1671  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2733  1672  1683               	bsf	3,5	;RP0=1, select bank1
  2734  1673  1303               	bcf	3,6	;RP1=0, select bank1
  2735  1674  00AE               	movwf	_header^(0+128)
  2736                           
  2737                           ;SlaveLiofilizadorVer1.c: 286:             if(header==0xAABB)
  2738  1675  30BB               	movlw	187
  2739  1676  062E               	xorwf	_header^(0+128),w
  2740  1677  30AA               	movlw	170
  2741  1678  1903               	skipnz
  2742  1679  062F               	xorwf	(_header+1)^(0+128),w
  2743  167A  1D03               	btfss	3,2
  2744  167B  2E57               	goto	l5671
  2745                           
  2746                           ;SlaveLiofilizadorVer1.c: 287:                {;SlaveLiofilizadorVer1.c: 288:           
      +                               destino =usart_buffer[3];
  2747  167C  1283               	bcf	3,5	;RP0=0, select bank2
  2748  167D  1703               	bsf	3,6	;RP1=1, select bank2
  2749  167E  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2750  167F  1303               	bcf	3,6	;RP1=0, select bank0
  2751  1680  00E3               	movwf	??_main
  2752  1681  0863               	movf	??_main,w
  2753  1682  00E8               	movwf	_destino
  2754                           
  2755                           ;SlaveLiofilizadorVer1.c: 289:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2756  1683  0868               	movf	_destino,w
  2757  1684  0669               	xorwf	_Board_Number,w
  2758  1685  1D03               	btfss	3,2
  2759  1686  0A68               	incf	_destino,w
  2760  1687  1D03               	btfss	3,2
  2761  1688  2E57               	goto	l5671
  2762                           
  2763                           ;SlaveLiofilizadorVer1.c: 290:                       {;SlaveLiofilizadorVer1.c: 291:    
      +                                             Delay_Led_Usart=20;
  2764  1689  3014               	movlw	20
  2765  168A  1683               	bsf	3,5	;RP0=1, select bank1
  2766  168B  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2767  168C  3000               	movlw	0
  2768  168D  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2769                           
  2770                           ;SlaveLiofilizadorVer1.c: 292:                       Decodify_Command();
  2771  168E  120A  118A  203E  160A  118A  	fcall	_Decodify_Command
  2772                           
  2773                           ;SlaveLiofilizadorVer1.c: 293:                       generic_status.flag_usart_rx=0;
  2774  1693  1283               	bcf	3,5	;RP0=0, select bank0
  2775  1694  106C               	bcf	_generic_status,0
  2776                           
  2777                           ;SlaveLiofilizadorVer1.c: 296:             }
  2778  1695  2E57               	goto	l5671
  2779  1696                     __end_of_main:	
  2780                           
  2781                           	psect	text1
  2782  06D0                     __ptext1:	
  2783 ;; *************** function _mediaLeituraPt100Umidadde *****************
  2784 ;; Defined at:
  2785 ;;		line 685 in file "SlaveLiofilizadorVer1.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  canal           1    wreg     unsigned char 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  canal           1   59[BANK0 ] unsigned char 
  2790 ;;  Temp            4   61[BANK0 ] float 
  2791 ;;  tensao          4   55[BANK0 ] float 
  2792 ;;  i               1   60[BANK0 ] unsigned char 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 300/0
  2799 ;;		On exit  : 200/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2802 ;;      Params:         0       0       0       0       0
  2803 ;;      Locals:         0      10       0       0       0
  2804 ;;      Temps:          0       4       0       0       0
  2805 ;;      Totals:         0      14       0       0       0
  2806 ;;Total ram usage:       14 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:    3
  2809 ;; This function calls:
  2810 ;;		_ADC_Media_10bits
  2811 ;;		_Package_Usart_is_for_me
  2812 ;;		___fladd
  2813 ;;		___fldiv
  2814 ;;		___flmul
  2815 ;;		___flsub
  2816 ;;		___xxtofl
  2817 ;;		_my_delay_ms
  2818 ;; This function is called by:
  2819 ;;		_main
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           
  2824                           ;psect for function _mediaLeituraPt100Umidadde
  2825  06D0                     _mediaLeituraPt100Umidadde:	
  2826                           
  2827                           ;incstack = 0
  2828                           ; Regs used in _mediaLeituraPt100Umidadde: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2829                           ;mediaLeituraPt100Umidadde@canal stored from wreg
  2830  06D0  00DB               	movwf	mediaLeituraPt100Umidadde@canal
  2831                           
  2832                           ;SlaveLiofilizadorVer1.c: 685: void mediaLeituraPt100Umidadde(unsigned char canal);Slave
      +                          LiofilizadorVer1.c: 686:      {;SlaveLiofilizadorVer1.c: 687:      float Temp;;SlaveLiof
      +                          ilizadorVer1.c: 688:      float tensao;;SlaveLiofilizadorVer1.c: 689:      char i;;Slave
      +                          LiofilizadorVer1.c: 691:      ADCON0bits.CHS=canal;
  2833  06D1  085B               	movf	mediaLeituraPt100Umidadde@canal,w
  2834  06D2  00D3               	movwf	??_mediaLeituraPt100Umidadde
  2835  06D3  0DD3               	rlf	??_mediaLeituraPt100Umidadde,f
  2836  06D4  0DD3               	rlf	??_mediaLeituraPt100Umidadde,f
  2837  06D5  081F               	movf	31,w	;volatile
  2838  06D6  0653               	xorwf	??_mediaLeituraPt100Umidadde,w
  2839  06D7  39C3               	andlw	-61
  2840  06D8  0653               	xorwf	??_mediaLeituraPt100Umidadde,w
  2841  06D9  009F               	movwf	31	;volatile
  2842                           
  2843                           ;SlaveLiofilizadorVer1.c: 692:      my_delay_ms(1);
  2844  06DA  3000               	movlw	0
  2845  06DB  00A3               	movwf	my_delay_ms@time+3
  2846  06DC  3000               	movlw	0
  2847  06DD  00A2               	movwf	my_delay_ms@time+2
  2848  06DE  3000               	movlw	0
  2849  06DF  00A1               	movwf	my_delay_ms@time+1
  2850  06E0  3001               	movlw	1
  2851  06E1  00A0               	movwf	my_delay_ms@time
  2852  06E2  160A  118A  20C0  120A  118A  	fcall	_my_delay_ms
  2853                           
  2854                           ;SlaveLiofilizadorVer1.c: 693:      Temp=0;
  2855  06E7  3000               	movlw	0
  2856  06E8  00E0               	movwf	mediaLeituraPt100Umidadde@Temp+3
  2857  06E9  3000               	movlw	0
  2858  06EA  00DF               	movwf	mediaLeituraPt100Umidadde@Temp+2
  2859  06EB  3000               	movlw	0
  2860  06EC  00DE               	movwf	mediaLeituraPt100Umidadde@Temp+1
  2861  06ED  3000               	movlw	0
  2862  06EE  00DD               	movwf	mediaLeituraPt100Umidadde@Temp
  2863                           
  2864                           ;SlaveLiofilizadorVer1.c: 695:      for(i=1;i<15;i++)
  2865  06EF  01DC               	clrf	mediaLeituraPt100Umidadde@i
  2866  06F0  0ADC               	incf	mediaLeituraPt100Umidadde@i,f
  2867  06F1                     l4809:	
  2868                           
  2869                           ;SlaveLiofilizadorVer1.c: 696:         {;SlaveLiofilizadorVer1.c: 697:         Temp+=ADC
      +                          _Media_10bits(canal);
  2870  06F1  085B               	movf	mediaLeituraPt100Umidadde@canal,w
  2871  06F2  160A  118A  22F6  120A  118A  	fcall	_ADC_Media_10bits
  2872  06F7  0831               	movf	?_ADC_Media_10bits+3,w
  2873  06F8  00BA               	movwf	___fladd@b+3
  2874  06F9  0830               	movf	?_ADC_Media_10bits+2,w
  2875  06FA  00B9               	movwf	___fladd@b+2
  2876  06FB  082F               	movf	?_ADC_Media_10bits+1,w
  2877  06FC  00B8               	movwf	___fladd@b+1
  2878  06FD  082E               	movf	?_ADC_Media_10bits,w
  2879  06FE  00B7               	movwf	___fladd@b
  2880  06FF  0860               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  2881  0700  00BE               	movwf	___fladd@a+3
  2882  0701  085F               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  2883  0702  00BD               	movwf	___fladd@a+2
  2884  0703  085E               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  2885  0704  00BC               	movwf	___fladd@a+1
  2886  0705  085D               	movf	mediaLeituraPt100Umidadde@Temp,w
  2887  0706  00BB               	movwf	___fladd@a
  2888  0707  120A  158A  25D3  120A  118A  	fcall	___fladd
  2889  070C  083A               	movf	?___fladd+3,w
  2890  070D  00E0               	movwf	mediaLeituraPt100Umidadde@Temp+3
  2891  070E  0839               	movf	?___fladd+2,w
  2892  070F  00DF               	movwf	mediaLeituraPt100Umidadde@Temp+2
  2893  0710  0838               	movf	?___fladd+1,w
  2894  0711  00DE               	movwf	mediaLeituraPt100Umidadde@Temp+1
  2895  0712  0837               	movf	?___fladd,w
  2896  0713  00DD               	movwf	mediaLeituraPt100Umidadde@Temp
  2897                           
  2898                           ;SlaveLiofilizadorVer1.c: 698:         if(Package_Usart_is_for_me()==1) break;
  2899  0714  160A  158A  2522  120A  118A  	fcall	_Package_Usart_is_for_me
  2900  0719  3A01               	xorlw	1
  2901  071A  1903               	btfsc	3,2
  2902  071B  2F24               	goto	l4819
  2903                           
  2904                           ;SlaveLiofilizadorVer1.c: 699:         }
  2905  071C  3001               	movlw	1
  2906  071D  00D3               	movwf	??_mediaLeituraPt100Umidadde
  2907  071E  0853               	movf	??_mediaLeituraPt100Umidadde,w
  2908  071F  07DC               	addwf	mediaLeituraPt100Umidadde@i,f
  2909  0720  300F               	movlw	15
  2910  0721  025C               	subwf	mediaLeituraPt100Umidadde@i,w
  2911  0722  1C03               	skipc
  2912  0723  2EF1               	goto	l4809
  2913  0724                     l4819:	
  2914                           
  2915                           ;SlaveLiofilizadorVer1.c: 700:      if(i<10)
  2916  0724  300A               	movlw	10
  2917  0725  025C               	subwf	mediaLeituraPt100Umidadde@i,w
  2918  0726  1C03               	btfss	3,0
  2919  0727  0008               	return
  2920                           
  2921                           ;SlaveLiofilizadorVer1.c: 707:      if(i==15)
  2922  0728  300F               	movlw	15
  2923  0729  065C               	xorwf	mediaLeituraPt100Umidadde@i,w
  2924  072A  1D03               	btfss	3,2
  2925  072B  2F39               	goto	l4827
  2926                           
  2927                           ;SlaveLiofilizadorVer1.c: 708:        Temp/=(i-1);
  2928  072C  085C               	movf	mediaLeituraPt100Umidadde@i,w
  2929  072D  3EFF               	addlw	255
  2930  072E  00A0               	movwf	___xxtofl@val
  2931  072F  30FF               	movlw	255
  2932  0730  1803               	skipnc
  2933  0731  3000               	movlw	0
  2934  0732  00A1               	movwf	___xxtofl@val+1
  2935  0733  01A2               	clrf	___xxtofl@val+2
  2936  0734  1BA1               	btfsc	___xxtofl@val+1,7
  2937  0735  03A2               	decf	___xxtofl@val+2,f
  2938  0736  0822               	movf	___xxtofl@val+2,w
  2939  0737  00A3               	movwf	___xxtofl@val+3
  2940  0738  2F46               	goto	L1
  2941  0739                     l4827:	
  2942                           
  2943                           ;SlaveLiofilizadorVer1.c: 710:        Temp/=(i);
  2944  0739  085C               	movf	mediaLeituraPt100Umidadde@i,w
  2945  073A  00D3               	movwf	??_mediaLeituraPt100Umidadde
  2946  073B  01D4               	clrf	??_mediaLeituraPt100Umidadde+1
  2947  073C  01D5               	clrf	??_mediaLeituraPt100Umidadde+2
  2948  073D  01D6               	clrf	??_mediaLeituraPt100Umidadde+3
  2949  073E  0856               	movf	??_mediaLeituraPt100Umidadde+3,w
  2950  073F  00A3               	movwf	___xxtofl@val+3
  2951  0740  0855               	movf	??_mediaLeituraPt100Umidadde+2,w
  2952  0741  00A2               	movwf	___xxtofl@val+2
  2953  0742  0854               	movf	??_mediaLeituraPt100Umidadde+1,w
  2954  0743  00A1               	movwf	___xxtofl@val+1
  2955  0744  0853               	movf	??_mediaLeituraPt100Umidadde,w
  2956  0745  00A0               	movwf	___xxtofl@val
  2957  0746                     L1:	
  2958  0746  3001               	movlw	1
  2959  0747  160A  118A  2418  120A  118A  	fcall	___xxtofl
  2960  074C  0823               	movf	?___xxtofl+3,w
  2961  074D  00B1               	movwf	___fldiv@a+3
  2962  074E  0822               	movf	?___xxtofl+2,w
  2963  074F  00B0               	movwf	___fldiv@a+2
  2964  0750  0821               	movf	?___xxtofl+1,w
  2965  0751  00AF               	movwf	___fldiv@a+1
  2966  0752  0820               	movf	?___xxtofl,w
  2967  0753  00AE               	movwf	___fldiv@a
  2968  0754  0860               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  2969  0755  00B5               	movwf	___fldiv@b+3
  2970  0756  085F               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  2971  0757  00B4               	movwf	___fldiv@b+2
  2972  0758  085E               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  2973  0759  00B3               	movwf	___fldiv@b+1
  2974  075A  085D               	movf	mediaLeituraPt100Umidadde@Temp,w
  2975  075B  00B2               	movwf	___fldiv@b
  2976  075C  120A  158A  2432  120A  118A  	fcall	___fldiv
  2977  0761  0831               	movf	?___fldiv+3,w
  2978  0762  00E0               	movwf	mediaLeituraPt100Umidadde@Temp+3
  2979  0763  0830               	movf	?___fldiv+2,w
  2980  0764  00DF               	movwf	mediaLeituraPt100Umidadde@Temp+2
  2981  0765  082F               	movf	?___fldiv+1,w
  2982  0766  00DE               	movwf	mediaLeituraPt100Umidadde@Temp+1
  2983  0767  082E               	movf	?___fldiv,w
  2984  0768  00DD               	movwf	mediaLeituraPt100Umidadde@Temp
  2985                           
  2986                           ;SlaveLiofilizadorVer1.c: 716:      tensao=(5.0/1023.0);
  2987  0769  303B               	movlw	59
  2988  076A  00DA               	movwf	mediaLeituraPt100Umidadde@tensao+3
  2989  076B  30A0               	movlw	160
  2990  076C  00D9               	movwf	mediaLeituraPt100Umidadde@tensao+2
  2991  076D  3028               	movlw	40
  2992  076E  00D8               	movwf	mediaLeituraPt100Umidadde@tensao+1
  2993  076F  300A               	movlw	10
  2994  0770  00D7               	movwf	mediaLeituraPt100Umidadde@tensao
  2995                           
  2996                           ;SlaveLiofilizadorVer1.c: 717:      Temp*=tensao;
  2997  0771  085A               	movf	mediaLeituraPt100Umidadde@tensao+3,w
  2998  0772  00AC               	movwf	___flmul@b+3
  2999  0773  0859               	movf	mediaLeituraPt100Umidadde@tensao+2,w
  3000  0774  00AB               	movwf	___flmul@b+2
  3001  0775  0858               	movf	mediaLeituraPt100Umidadde@tensao+1,w
  3002  0776  00AA               	movwf	___flmul@b+1
  3003  0777  0857               	movf	mediaLeituraPt100Umidadde@tensao,w
  3004  0778  00A9               	movwf	___flmul@b
  3005  0779  0860               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3006  077A  00B0               	movwf	___flmul@a+3
  3007  077B  085F               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3008  077C  00AF               	movwf	___flmul@a+2
  3009  077D  085E               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3010  077E  00AE               	movwf	___flmul@a+1
  3011  077F  085D               	movf	mediaLeituraPt100Umidadde@Temp,w
  3012  0780  00AD               	movwf	___flmul@a
  3013  0781  120A  118A  23DB  120A  118A  	fcall	___flmul
  3014  0786  082C               	movf	?___flmul+3,w
  3015  0787  00E0               	movwf	mediaLeituraPt100Umidadde@Temp+3
  3016  0788  082B               	movf	?___flmul+2,w
  3017  0789  00DF               	movwf	mediaLeituraPt100Umidadde@Temp+2
  3018  078A  082A               	movf	?___flmul+1,w
  3019  078B  00DE               	movwf	mediaLeituraPt100Umidadde@Temp+1
  3020  078C  0829               	movf	?___flmul,w
  3021  078D  00DD               	movwf	mediaLeituraPt100Umidadde@Temp
  3022                           
  3023                           ;SlaveLiofilizadorVer1.c: 718:      Temp*=40.0;
  3024  078E  3042               	movlw	66
  3025  078F  00AC               	movwf	___flmul@b+3
  3026  0790  3020               	movlw	32
  3027  0791  00AB               	movwf	___flmul@b+2
  3028  0792  3000               	movlw	0
  3029  0793  00AA               	movwf	___flmul@b+1
  3030  0794  3000               	movlw	0
  3031  0795  00A9               	movwf	___flmul@b
  3032  0796  0860               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3033  0797  00B0               	movwf	___flmul@a+3
  3034  0798  085F               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3035  0799  00AF               	movwf	___flmul@a+2
  3036  079A  085E               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3037  079B  00AE               	movwf	___flmul@a+1
  3038  079C  085D               	movf	mediaLeituraPt100Umidadde@Temp,w
  3039  079D  00AD               	movwf	___flmul@a
  3040  079E  120A  118A  23DB  120A  118A  	fcall	___flmul
  3041  07A3  082C               	movf	?___flmul+3,w
  3042  07A4  00E0               	movwf	mediaLeituraPt100Umidadde@Temp+3
  3043  07A5  082B               	movf	?___flmul+2,w
  3044  07A6  00DF               	movwf	mediaLeituraPt100Umidadde@Temp+2
  3045  07A7  082A               	movf	?___flmul+1,w
  3046  07A8  00DE               	movwf	mediaLeituraPt100Umidadde@Temp+1
  3047  07A9  0829               	movf	?___flmul,w
  3048  07AA  00DD               	movwf	mediaLeituraPt100Umidadde@Temp
  3049                           
  3050                           ;SlaveLiofilizadorVer1.c: 719:      Temp-=110.0;
  3051  07AB  3042               	movlw	66
  3052  07AC  00CE               	movwf	___flsub@a+3
  3053  07AD  30DC               	movlw	220
  3054  07AE  00CD               	movwf	___flsub@a+2
  3055  07AF  3000               	movlw	0
  3056  07B0  00CC               	movwf	___flsub@a+1
  3057  07B1  3000               	movlw	0
  3058  07B2  00CB               	movwf	___flsub@a
  3059  07B3  0860               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3060  07B4  00D2               	movwf	___flsub@b+3
  3061  07B5  085F               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3062  07B6  00D1               	movwf	___flsub@b+2
  3063  07B7  085E               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3064  07B8  00D0               	movwf	___flsub@b+1
  3065  07B9  085D               	movf	mediaLeituraPt100Umidadde@Temp,w
  3066  07BA  00CF               	movwf	___flsub@b
  3067  07BB  160A  158A  2609  120A  118A  	fcall	___flsub
  3068  07C0  084E               	movf	?___flsub+3,w
  3069  07C1  00E0               	movwf	mediaLeituraPt100Umidadde@Temp+3
  3070  07C2  084D               	movf	?___flsub+2,w
  3071  07C3  00DF               	movwf	mediaLeituraPt100Umidadde@Temp+2
  3072  07C4  084C               	movf	?___flsub+1,w
  3073  07C5  00DE               	movwf	mediaLeituraPt100Umidadde@Temp+1
  3074  07C6  084B               	movf	?___flsub,w
  3075  07C7  00DD               	movwf	mediaLeituraPt100Umidadde@Temp
  3076                           
  3077                           ;SlaveLiofilizadorVer1.c: 722:      if(canal==0)
  3078  07C8  085B               	movf	mediaLeituraPt100Umidadde@canal,w
  3079  07C9  1D03               	btfss	3,2
  3080  07CA  2FDB               	goto	l4841
  3081                           
  3082                           ;SlaveLiofilizadorVer1.c: 723:         {;SlaveLiofilizadorVer1.c: 724:         Temperatu
      +                          ra0=Temp;
  3083  07CB  0860               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3084  07CC  1683               	bsf	3,5	;RP0=1, select bank1
  3085  07CD  00A7               	movwf	(_Temperatura0+3)^(0+128)
  3086  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  3087  07CF  085F               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3088  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  3089  07D1  00A6               	movwf	(_Temperatura0+2)^(0+128)
  3090  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  3091  07D3  085E               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3092  07D4  1683               	bsf	3,5	;RP0=1, select bank1
  3093  07D5  00A5               	movwf	(_Temperatura0+1)^(0+128)
  3094  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  3095  07D7  085D               	movf	mediaLeituraPt100Umidadde@Temp,w
  3096  07D8  1683               	bsf	3,5	;RP0=1, select bank1
  3097  07D9  00A4               	movwf	_Temperatura0^(0+128)
  3098                           
  3099                           ;SlaveLiofilizadorVer1.c: 725:         }
  3100  07DA  0008               	return
  3101  07DB                     l4841:	
  3102                           
  3103                           ;SlaveLiofilizadorVer1.c: 727:         {;SlaveLiofilizadorVer1.c: 728:         Umidade1=
      +                          Temp;
  3104  07DB  0860               	movf	mediaLeituraPt100Umidadde@Temp+3,w
  3105  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  3106  07DD  00A3               	movwf	(_Umidade1+3)^(0+128)
  3107  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  3108  07DF  085F               	movf	mediaLeituraPt100Umidadde@Temp+2,w
  3109  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  3110  07E1  00A2               	movwf	(_Umidade1+2)^(0+128)
  3111  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  3112  07E3  085E               	movf	mediaLeituraPt100Umidadde@Temp+1,w
  3113  07E4  1683               	bsf	3,5	;RP0=1, select bank1
  3114  07E5  00A1               	movwf	(_Umidade1+1)^(0+128)
  3115  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  3116  07E7  085D               	movf	mediaLeituraPt100Umidadde@Temp,w
  3117  07E8  1683               	bsf	3,5	;RP0=1, select bank1
  3118  07E9  00A0               	movwf	_Umidade1^(0+128)
  3119  07EA  0008               	return
  3120  07EB                     __end_of_mediaLeituraPt100Umidadde:	
  3121                           
  3122                           	psect	text2
  3123  1E09                     __ptext2:	
  3124 ;; *************** function ___flsub *****************
  3125 ;; Defined at:
  3126 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  a               4   43[BANK0 ] void 
  3129 ;;  b               4   47[BANK0 ] void 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  4   43[BANK0 ] void 
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : 300/0
  3138 ;;		On exit  : 300/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3141 ;;      Params:         0       8       0       0       0
  3142 ;;      Locals:         0       0       0       0       0
  3143 ;;      Temps:          0       0       0       0       0
  3144 ;;      Totals:         0       8       0       0       0
  3145 ;;Total ram usage:        8 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    2
  3148 ;; This function calls:
  3149 ;;		___fladd
  3150 ;; This function is called by:
  3151 ;;		_mediaLeituraPt100Umidadde
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function ___flsub
  3157  1E09                     ___flsub:	
  3158                           
  3159                           ;incstack = 0
  3160                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3161  1E09  3080               	movlw	128
  3162  1E0A  06CE               	xorwf	___flsub@a+3,f
  3163  1E0B  0852               	movf	___flsub@b+3,w
  3164  1E0C  00BA               	movwf	___fladd@b+3
  3165  1E0D  0851               	movf	___flsub@b+2,w
  3166  1E0E  00B9               	movwf	___fladd@b+2
  3167  1E0F  0850               	movf	___flsub@b+1,w
  3168  1E10  00B8               	movwf	___fladd@b+1
  3169  1E11  084F               	movf	___flsub@b,w
  3170  1E12  00B7               	movwf	___fladd@b
  3171  1E13  084E               	movf	___flsub@a+3,w
  3172  1E14  00BE               	movwf	___fladd@a+3
  3173  1E15  084D               	movf	___flsub@a+2,w
  3174  1E16  00BD               	movwf	___fladd@a+2
  3175  1E17  084C               	movf	___flsub@a+1,w
  3176  1E18  00BC               	movwf	___fladd@a+1
  3177  1E19  084B               	movf	___flsub@a,w
  3178  1E1A  00BB               	movwf	___fladd@a
  3179  1E1B  120A  158A  25D3   	fcall	___fladd
  3180  1E1E  083A               	movf	?___fladd+3,w
  3181  1E1F  00CE               	movwf	?___flsub+3
  3182  1E20  0839               	movf	?___fladd+2,w
  3183  1E21  00CD               	movwf	?___flsub+2
  3184  1E22  0838               	movf	?___fladd+1,w
  3185  1E23  00CC               	movwf	?___flsub+1
  3186  1E24  0837               	movf	?___fladd,w
  3187  1E25  00CB               	movwf	?___flsub
  3188  1E26  0008               	return
  3189  1E27                     __end_of___flsub:	
  3190                           
  3191                           	psect	text3
  3192  0DD3                     __ptext3:	
  3193 ;; *************** function ___fladd *****************
  3194 ;; Defined at:
  3195 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  b               4   23[BANK0 ] void 
  3198 ;;  a               4   27[BANK0 ] void 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  grs             1   42[BANK0 ] unsigned char 
  3201 ;;  bexp            1   41[BANK0 ] unsigned char 
  3202 ;;  aexp            1   40[BANK0 ] unsigned char 
  3203 ;;  signs           1   39[BANK0 ] unsigned char 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  4   23[BANK0 ] unsigned char 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0, btemp+1
  3208 ;; Tracked objects:
  3209 ;;		On entry : 300/0
  3210 ;;		On exit  : 300/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3213 ;;      Params:         0       8       0       0       0
  3214 ;;      Locals:         0       4       0       0       0
  3215 ;;      Temps:          0       8       0       0       0
  3216 ;;      Totals:         0      20       0       0       0
  3217 ;;Total ram usage:       20 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    1
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_mediaLeituraPt100Umidadde
  3224 ;;		___flsub
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           
  3229                           ;psect for function ___fladd
  3230  0DD3                     ___fladd:	
  3231                           
  3232                           ;incstack = 0
  3233                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3234  0DD3  083A               	movf	___fladd@b+3,w
  3235  0DD4  3980               	andlw	128
  3236  0DD5  00BF               	movwf	??___fladd
  3237  0DD6  083F               	movf	??___fladd,w
  3238  0DD7  00C7               	movwf	___fladd@signs
  3239  0DD8  083A               	movf	___fladd@b+3,w
  3240  0DD9  00BF               	movwf	??___fladd
  3241  0DDA  073F               	addwf	??___fladd,w
  3242  0DDB  00C0               	movwf	??___fladd+1
  3243  0DDC  0840               	movf	??___fladd+1,w
  3244  0DDD  00C9               	movwf	___fladd@bexp
  3245  0DDE  1BB9               	btfsc	___fladd@b+2,7
  3246  0DDF  1449               	bsf	___fladd@bexp,0
  3247  0DE0  0849               	movf	___fladd@bexp,w
  3248  0DE1  1903               	btfsc	3,2
  3249  0DE2  2DF1               	goto	l3837
  3250  0DE3  0A49               	incf	___fladd@bexp,w
  3251  0DE4  1D03               	btfss	3,2
  3252  0DE5  2DEE               	goto	l3833
  3253  0DE6  3000               	movlw	0
  3254  0DE7  00BA               	movwf	___fladd@b+3
  3255  0DE8  3000               	movlw	0
  3256  0DE9  00B9               	movwf	___fladd@b+2
  3257  0DEA  3000               	movlw	0
  3258  0DEB  00B8               	movwf	___fladd@b+1
  3259  0DEC  3000               	movlw	0
  3260  0DED  00B7               	movwf	___fladd@b
  3261  0DEE                     l3833:	
  3262  0DEE  17B9               	bsf	___fladd@b+2,7
  3263  0DEF  01BA               	clrf	___fladd@b+3
  3264  0DF0  2DF9               	goto	l3839
  3265  0DF1                     l3837:	
  3266  0DF1  3000               	movlw	0
  3267  0DF2  00BA               	movwf	___fladd@b+3
  3268  0DF3  3000               	movlw	0
  3269  0DF4  00B9               	movwf	___fladd@b+2
  3270  0DF5  3000               	movlw	0
  3271  0DF6  00B8               	movwf	___fladd@b+1
  3272  0DF7  3000               	movlw	0
  3273  0DF8  00B7               	movwf	___fladd@b
  3274  0DF9                     l3839:	
  3275  0DF9  083E               	movf	___fladd@a+3,w
  3276  0DFA  3980               	andlw	128
  3277  0DFB  00BF               	movwf	??___fladd
  3278  0DFC  083F               	movf	??___fladd,w
  3279  0DFD  00C8               	movwf	___fladd@aexp
  3280  0DFE  0848               	movf	___fladd@aexp,w
  3281  0DFF  0647               	xorwf	___fladd@signs,w
  3282  0E00  1D03               	btfss	3,2
  3283  0E01  1747               	bsf	___fladd@signs,6
  3284  0E02  083E               	movf	___fladd@a+3,w
  3285  0E03  00BF               	movwf	??___fladd
  3286  0E04  073F               	addwf	??___fladd,w
  3287  0E05  00C0               	movwf	??___fladd+1
  3288  0E06  0840               	movf	??___fladd+1,w
  3289  0E07  00C8               	movwf	___fladd@aexp
  3290  0E08  1BBD               	btfsc	___fladd@a+2,7
  3291  0E09  1448               	bsf	___fladd@aexp,0
  3292  0E0A  0848               	movf	___fladd@aexp,w
  3293  0E0B  1903               	btfsc	3,2
  3294  0E0C  2E1B               	goto	l3861
  3295  0E0D  0A48               	incf	___fladd@aexp,w
  3296  0E0E  1D03               	btfss	3,2
  3297  0E0F  2E18               	goto	l3857
  3298  0E10  3000               	movlw	0
  3299  0E11  00BE               	movwf	___fladd@a+3
  3300  0E12  3000               	movlw	0
  3301  0E13  00BD               	movwf	___fladd@a+2
  3302  0E14  3000               	movlw	0
  3303  0E15  00BC               	movwf	___fladd@a+1
  3304  0E16  3000               	movlw	0
  3305  0E17  00BB               	movwf	___fladd@a
  3306  0E18                     l3857:	
  3307  0E18  17BD               	bsf	___fladd@a+2,7
  3308  0E19  01BE               	clrf	___fladd@a+3
  3309  0E1A  2E23               	goto	l1264
  3310  0E1B                     l3861:	
  3311  0E1B  3000               	movlw	0
  3312  0E1C  00BE               	movwf	___fladd@a+3
  3313  0E1D  3000               	movlw	0
  3314  0E1E  00BD               	movwf	___fladd@a+2
  3315  0E1F  3000               	movlw	0
  3316  0E20  00BC               	movwf	___fladd@a+1
  3317  0E21  3000               	movlw	0
  3318  0E22  00BB               	movwf	___fladd@a
  3319  0E23                     l1264:	
  3320  0E23  0849               	movf	___fladd@bexp,w
  3321  0E24  0248               	subwf	___fladd@aexp,w
  3322  0E25  1803               	skipnc
  3323  0E26  2E69               	goto	l3897
  3324  0E27  1F47               	btfss	___fladd@signs,6
  3325  0E28  2E2D               	goto	l3867
  3326  0E29  3080               	movlw	128
  3327  0E2A  00BF               	movwf	??___fladd
  3328  0E2B  083F               	movf	??___fladd,w
  3329  0E2C  06C7               	xorwf	___fladd@signs,f
  3330  0E2D                     l3867:	
  3331  0E2D  0849               	movf	___fladd@bexp,w
  3332  0E2E  00BF               	movwf	??___fladd
  3333  0E2F  083F               	movf	??___fladd,w
  3334  0E30  00CA               	movwf	___fladd@grs
  3335  0E31  0848               	movf	___fladd@aexp,w
  3336  0E32  00BF               	movwf	??___fladd
  3337  0E33  083F               	movf	??___fladd,w
  3338  0E34  00C9               	movwf	___fladd@bexp
  3339  0E35  084A               	movf	___fladd@grs,w
  3340  0E36  00BF               	movwf	??___fladd
  3341  0E37  083F               	movf	??___fladd,w
  3342  0E38  00C8               	movwf	___fladd@aexp
  3343  0E39  0837               	movf	___fladd@b,w
  3344  0E3A  00BF               	movwf	??___fladd
  3345  0E3B  083F               	movf	??___fladd,w
  3346  0E3C  00CA               	movwf	___fladd@grs
  3347  0E3D  083B               	movf	___fladd@a,w
  3348  0E3E  00BF               	movwf	??___fladd
  3349  0E3F  083F               	movf	??___fladd,w
  3350  0E40  00B7               	movwf	___fladd@b
  3351  0E41  084A               	movf	___fladd@grs,w
  3352  0E42  00BF               	movwf	??___fladd
  3353  0E43  083F               	movf	??___fladd,w
  3354  0E44  00BB               	movwf	___fladd@a
  3355  0E45  0838               	movf	___fladd@b+1,w
  3356  0E46  00BF               	movwf	??___fladd
  3357  0E47  083F               	movf	??___fladd,w
  3358  0E48  00CA               	movwf	___fladd@grs
  3359  0E49  083C               	movf	___fladd@a+1,w
  3360  0E4A  00BF               	movwf	??___fladd
  3361  0E4B  083F               	movf	??___fladd,w
  3362  0E4C  00B8               	movwf	___fladd@b+1
  3363  0E4D  084A               	movf	___fladd@grs,w
  3364  0E4E  00BF               	movwf	??___fladd
  3365  0E4F  083F               	movf	??___fladd,w
  3366  0E50  00BC               	movwf	___fladd@a+1
  3367  0E51  0839               	movf	___fladd@b+2,w
  3368  0E52  00BF               	movwf	??___fladd
  3369  0E53  083F               	movf	??___fladd,w
  3370  0E54  00CA               	movwf	___fladd@grs
  3371  0E55  083D               	movf	___fladd@a+2,w
  3372  0E56  00BF               	movwf	??___fladd
  3373  0E57  083F               	movf	??___fladd,w
  3374  0E58  00B9               	movwf	___fladd@b+2
  3375  0E59  084A               	movf	___fladd@grs,w
  3376  0E5A  00BF               	movwf	??___fladd
  3377  0E5B  083F               	movf	??___fladd,w
  3378  0E5C  00BD               	movwf	___fladd@a+2
  3379  0E5D  083A               	movf	___fladd@b+3,w
  3380  0E5E  00BF               	movwf	??___fladd
  3381  0E5F  083F               	movf	??___fladd,w
  3382  0E60  00CA               	movwf	___fladd@grs
  3383  0E61  083E               	movf	___fladd@a+3,w
  3384  0E62  00BF               	movwf	??___fladd
  3385  0E63  083F               	movf	??___fladd,w
  3386  0E64  00BA               	movwf	___fladd@b+3
  3387  0E65  084A               	movf	___fladd@grs,w
  3388  0E66  00BF               	movwf	??___fladd
  3389  0E67  083F               	movf	??___fladd,w
  3390  0E68  00BE               	movwf	___fladd@a+3
  3391  0E69                     l3897:	
  3392  0E69  01CA               	clrf	___fladd@grs
  3393  0E6A  0848               	movf	___fladd@aexp,w
  3394  0E6B  00BF               	movwf	??___fladd
  3395  0E6C  01C0               	clrf	??___fladd+1
  3396  0E6D  0840               	movf	??___fladd+1,w
  3397  0E6E  00C2               	movwf	??___fladd+3
  3398  0E6F  0849               	movf	___fladd@bexp,w
  3399  0E70  023F               	subwf	??___fladd,w
  3400  0E71  00C1               	movwf	??___fladd+2
  3401  0E72  1C03               	skipc
  3402  0E73  03C2               	decf	??___fladd+3,f
  3403  0E74  0842               	movf	??___fladd+3,w
  3404  0E75  3A80               	xorlw	128
  3405  0E76  00FF               	movwf	127
  3406  0E77  3080               	movlw	128
  3407  0E78  027F               	subwf	127,w
  3408  0E79  1D03               	skipz
  3409  0E7A  2E7D               	goto	u3105
  3410  0E7B  301A               	movlw	26
  3411  0E7C  0241               	subwf	??___fladd+2,w
  3412  0E7D                     u3105:	
  3413  0E7D  1C03               	skipc
  3414  0E7E  2EB6               	goto	l3915
  3415  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3416  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  3417  0E81  083A               	movf	___fladd@b+3,w
  3418  0E82  0439               	iorwf	___fladd@b+2,w
  3419  0E83  0438               	iorwf	___fladd@b+1,w
  3420  0E84  0437               	iorwf	___fladd@b,w
  3421  0E85  1903               	btfsc	3,2
  3422  0E86  2E89               	goto	u3110
  3423  0E87  3001               	movlw	1
  3424  0E88  2E8A               	goto	u3120
  3425  0E89                     u3110:	
  3426  0E89  3000               	movlw	0
  3427  0E8A                     u3120:	
  3428  0E8A  00BF               	movwf	??___fladd
  3429  0E8B  083F               	movf	??___fladd,w
  3430  0E8C  00CA               	movwf	___fladd@grs
  3431  0E8D  3000               	movlw	0
  3432  0E8E  00BA               	movwf	___fladd@b+3
  3433  0E8F  3000               	movlw	0
  3434  0E90  00B9               	movwf	___fladd@b+2
  3435  0E91  3000               	movlw	0
  3436  0E92  00B8               	movwf	___fladd@b+1
  3437  0E93  3000               	movlw	0
  3438  0E94  00B7               	movwf	___fladd@b
  3439  0E95  0848               	movf	___fladd@aexp,w
  3440  0E96  00BF               	movwf	??___fladd
  3441  0E97  083F               	movf	??___fladd,w
  3442  0E98  00C9               	movwf	___fladd@bexp
  3443  0E99  2EBC               	goto	l1268
  3444  0E9A                     l1270:	
  3445  0E9A  1C4A               	btfss	___fladd@grs,0
  3446  0E9B  2EA5               	goto	l3905
  3447  0E9C  084A               	movf	___fladd@grs,w
  3448  0E9D  00BF               	movwf	??___fladd
  3449  0E9E  1003               	clrc
  3450  0E9F  0C3F               	rrf	??___fladd,w
  3451  0EA0  3801               	iorlw	1
  3452  0EA1  00C0               	movwf	??___fladd+1
  3453  0EA2  0840               	movf	??___fladd+1,w
  3454  0EA3  00CA               	movwf	___fladd@grs
  3455  0EA4  2EA7               	goto	l3907
  3456  0EA5                     l3905:	
  3457  0EA5  1003               	clrc
  3458  0EA6  0CCA               	rrf	___fladd@grs,f
  3459  0EA7                     l3907:	
  3460  0EA7  1837               	btfsc	___fladd@b,0
  3461  0EA8  17CA               	bsf	___fladd@grs,7
  3462  0EA9  3001               	movlw	1
  3463  0EAA  00BF               	movwf	??___fladd
  3464  0EAB                     u3155:	
  3465  0EAB  0D3A               	rlf	___fladd@b+3,w
  3466  0EAC  0CBA               	rrf	___fladd@b+3,f
  3467  0EAD  0CB9               	rrf	___fladd@b+2,f
  3468  0EAE  0CB8               	rrf	___fladd@b+1,f
  3469  0EAF  0CB7               	rrf	___fladd@b,f
  3470  0EB0  0BBF               	decfsz	??___fladd& (0+127),f
  3471  0EB1  2EAB               	goto	u3155
  3472  0EB2  3001               	movlw	1
  3473  0EB3  00BF               	movwf	??___fladd
  3474  0EB4  083F               	movf	??___fladd,w
  3475  0EB5  07C9               	addwf	___fladd@bexp,f
  3476  0EB6                     l3915:	
  3477  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  3478  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  3479  0EB8  0848               	movf	___fladd@aexp,w
  3480  0EB9  0249               	subwf	___fladd@bexp,w
  3481  0EBA  1C03               	skipc
  3482  0EBB  2E9A               	goto	l1270
  3483  0EBC                     l1268:	
  3484  0EBC  1B47               	btfsc	___fladd@signs,6
  3485  0EBD  2EFD               	goto	l3941
  3486  0EBE  0849               	movf	___fladd@bexp,w
  3487  0EBF  1D03               	btfss	3,2
  3488  0EC0  2ECA               	goto	l3923
  3489  0EC1  3000               	movlw	0
  3490  0EC2  00BA               	movwf	?___fladd+3
  3491  0EC3  3000               	movlw	0
  3492  0EC4  00B9               	movwf	?___fladd+2
  3493  0EC5  3000               	movlw	0
  3494  0EC6  00B8               	movwf	?___fladd+1
  3495  0EC7  3000               	movlw	0
  3496  0EC8  00B7               	movwf	?___fladd
  3497  0EC9  0008               	return
  3498  0ECA                     l3923:	
  3499  0ECA  083B               	movf	___fladd@a,w
  3500  0ECB  07B7               	addwf	___fladd@b,f
  3501  0ECC  083C               	movf	___fladd@a+1,w
  3502  0ECD  1103               	clrz
  3503  0ECE  1803               	skipnc
  3504  0ECF  3E01               	addlw	1
  3505  0ED0  1D03               	btfss	3,2
  3506  0ED1  07B8               	addwf	___fladd@b+1,f
  3507  0ED2  083D               	movf	___fladd@a+2,w
  3508  0ED3  1103               	clrz
  3509  0ED4  1803               	skipnc
  3510  0ED5  3E01               	addlw	1
  3511  0ED6  1D03               	btfss	3,2
  3512  0ED7  07B9               	addwf	___fladd@b+2,f
  3513  0ED8  083E               	movf	___fladd@a+3,w
  3514  0ED9  1103               	clrz
  3515  0EDA  1803               	skipnc
  3516  0EDB  3E01               	addlw	1
  3517  0EDC  1D03               	btfss	3,2
  3518  0EDD  07BA               	addwf	___fladd@b+3,f
  3519  0EDE  1C3A               	btfss	___fladd@b+3,0
  3520  0EDF  2F9F               	goto	l3975
  3521  0EE0  1C4A               	btfss	___fladd@grs,0
  3522  0EE1  2EEB               	goto	l3931
  3523  0EE2  084A               	movf	___fladd@grs,w
  3524  0EE3  00BF               	movwf	??___fladd
  3525  0EE4  1003               	clrc
  3526  0EE5  0C3F               	rrf	??___fladd,w
  3527  0EE6  3801               	iorlw	1
  3528  0EE7  00C0               	movwf	??___fladd+1
  3529  0EE8  0840               	movf	??___fladd+1,w
  3530  0EE9  00CA               	movwf	___fladd@grs
  3531  0EEA  2EED               	goto	l3933
  3532  0EEB                     l3931:	
  3533  0EEB  1003               	clrc
  3534  0EEC  0CCA               	rrf	___fladd@grs,f
  3535  0EED                     l3933:	
  3536  0EED  1837               	btfsc	___fladd@b,0
  3537  0EEE  17CA               	bsf	___fladd@grs,7
  3538  0EEF  3001               	movlw	1
  3539  0EF0  00BF               	movwf	??___fladd
  3540  0EF1                     u3235:	
  3541  0EF1  0D3A               	rlf	___fladd@b+3,w
  3542  0EF2  0CBA               	rrf	___fladd@b+3,f
  3543  0EF3  0CB9               	rrf	___fladd@b+2,f
  3544  0EF4  0CB8               	rrf	___fladd@b+1,f
  3545  0EF5  0CB7               	rrf	___fladd@b,f
  3546  0EF6  0BBF               	decfsz	??___fladd& (0+127),f
  3547  0EF7  2EF1               	goto	u3235
  3548  0EF8  3001               	movlw	1
  3549  0EF9  00BF               	movwf	??___fladd
  3550  0EFA  083F               	movf	??___fladd,w
  3551  0EFB  07C9               	addwf	___fladd@bexp,f
  3552  0EFC  2F9F               	goto	l3975
  3553  0EFD                     l3941:	
  3554  0EFD  083A               	movf	___fladd@b+3,w
  3555  0EFE  3A80               	xorlw	128
  3556  0EFF  00FF               	movwf	127
  3557  0F00  083E               	movf	___fladd@a+3,w
  3558  0F01  3A80               	xorlw	128
  3559  0F02  027F               	subwf	127,w
  3560  0F03  1D03               	skipz
  3561  0F04  2F0F               	goto	u3243
  3562  0F05  083D               	movf	___fladd@a+2,w
  3563  0F06  0239               	subwf	___fladd@b+2,w
  3564  0F07  1D03               	skipz
  3565  0F08  2F0F               	goto	u3243
  3566  0F09  083C               	movf	___fladd@a+1,w
  3567  0F0A  0238               	subwf	___fladd@b+1,w
  3568  0F0B  1D03               	skipz
  3569  0F0C  2F0F               	goto	u3243
  3570  0F0D  083B               	movf	___fladd@a,w
  3571  0F0E  0237               	subwf	___fladd@b,w
  3572  0F0F                     u3243:	
  3573  0F0F  1803               	skipnc
  3574  0F10  2F67               	goto	l3951
  3575  0F11  30FF               	movlw	255
  3576  0F12  00BF               	movwf	??___fladd
  3577  0F13  30FF               	movlw	255
  3578  0F14  00C0               	movwf	??___fladd+1
  3579  0F15  30FF               	movlw	255
  3580  0F16  00C1               	movwf	??___fladd+2
  3581  0F17  30FF               	movlw	255
  3582  0F18  00C2               	movwf	??___fladd+3
  3583  0F19  083B               	movf	___fladd@a,w
  3584  0F1A  00C3               	movwf	??___fladd+4
  3585  0F1B  083C               	movf	___fladd@a+1,w
  3586  0F1C  00C4               	movwf	??___fladd+5
  3587  0F1D  083D               	movf	___fladd@a+2,w
  3588  0F1E  00C5               	movwf	??___fladd+6
  3589  0F1F  083E               	movf	___fladd@a+3,w
  3590  0F20  00C6               	movwf	??___fladd+7
  3591  0F21  0837               	movf	___fladd@b,w
  3592  0F22  02C3               	subwf	??___fladd+4,f
  3593  0F23  0838               	movf	___fladd@b+1,w
  3594  0F24  1C03               	skipc
  3595  0F25  0F38               	incfsz	___fladd@b+1,w
  3596  0F26  2F28               	goto	u3251
  3597  0F27  2F29               	goto	u3252
  3598  0F28                     u3251:	
  3599  0F28  02C4               	subwf	??___fladd+5,f
  3600  0F29                     u3252:	
  3601  0F29  0839               	movf	___fladd@b+2,w
  3602  0F2A  1C03               	skipc
  3603  0F2B  0F39               	incfsz	___fladd@b+2,w
  3604  0F2C  2F2E               	goto	u3253
  3605  0F2D  2F2F               	goto	u3254
  3606  0F2E                     u3253:	
  3607  0F2E  02C5               	subwf	??___fladd+6,f
  3608  0F2F                     u3254:	
  3609  0F2F  083A               	movf	___fladd@b+3,w
  3610  0F30  1C03               	skipc
  3611  0F31  0F3A               	incfsz	___fladd@b+3,w
  3612  0F32  2F34               	goto	u3255
  3613  0F33  2F35               	goto	u3256
  3614  0F34                     u3255:	
  3615  0F34  02C6               	subwf	??___fladd+7,f
  3616  0F35                     u3256:	
  3617  0F35  0843               	movf	??___fladd+4,w
  3618  0F36  07BF               	addwf	??___fladd,f
  3619  0F37  0844               	movf	??___fladd+5,w
  3620  0F38  1803               	skipnc
  3621  0F39  0F44               	incfsz	??___fladd+5,w
  3622  0F3A  2F3C               	goto	u3260
  3623  0F3B  2F3D               	goto	u3261
  3624  0F3C                     u3260:	
  3625  0F3C  07C0               	addwf	??___fladd+1,f
  3626  0F3D                     u3261:	
  3627  0F3D  0845               	movf	??___fladd+6,w
  3628  0F3E  1803               	skipnc
  3629  0F3F  0F45               	incfsz	??___fladd+6,w
  3630  0F40  2F42               	goto	u3262
  3631  0F41  2F43               	goto	u3263
  3632  0F42                     u3262:	
  3633  0F42  07C1               	addwf	??___fladd+2,f
  3634  0F43                     u3263:	
  3635  0F43  0846               	movf	??___fladd+7,w
  3636  0F44  1803               	skipnc
  3637  0F45  0A46               	incf	??___fladd+7,w
  3638  0F46  07C2               	addwf	??___fladd+3,f
  3639  0F47  0842               	movf	??___fladd+3,w
  3640  0F48  00BA               	movwf	___fladd@b+3
  3641  0F49  0841               	movf	??___fladd+2,w
  3642  0F4A  00B9               	movwf	___fladd@b+2
  3643  0F4B  0840               	movf	??___fladd+1,w
  3644  0F4C  00B8               	movwf	___fladd@b+1
  3645  0F4D  083F               	movf	??___fladd,w
  3646  0F4E  00B7               	movwf	___fladd@b
  3647  0F4F  3080               	movlw	128
  3648  0F50  00BF               	movwf	??___fladd
  3649  0F51  083F               	movf	??___fladd,w
  3650  0F52  06C7               	xorwf	___fladd@signs,f
  3651  0F53  09CA               	comf	___fladd@grs,f
  3652  0F54  0ACA               	incf	___fladd@grs,f
  3653  0F55  084A               	movf	___fladd@grs,w
  3654  0F56  1D03               	btfss	3,2
  3655  0F57  2F75               	goto	l1285
  3656  0F58  3001               	movlw	1
  3657  0F59  07B7               	addwf	___fladd@b,f
  3658  0F5A  3000               	movlw	0
  3659  0F5B  1803               	skipnc
  3660  0F5C  3001               	movlw	1
  3661  0F5D  07B8               	addwf	___fladd@b+1,f
  3662  0F5E  3000               	movlw	0
  3663  0F5F  1803               	skipnc
  3664  0F60  3001               	movlw	1
  3665  0F61  07B9               	addwf	___fladd@b+2,f
  3666  0F62  3000               	movlw	0
  3667  0F63  1803               	skipnc
  3668  0F64  3001               	movlw	1
  3669  0F65  07BA               	addwf	___fladd@b+3,f
  3670  0F66  2F75               	goto	l1285
  3671  0F67                     l3951:	
  3672  0F67  083B               	movf	___fladd@a,w
  3673  0F68  02B7               	subwf	___fladd@b,f
  3674  0F69  083C               	movf	___fladd@a+1,w
  3675  0F6A  1C03               	skipc
  3676  0F6B  0F3C               	incfsz	___fladd@a+1,w
  3677  0F6C  02B8               	subwf	___fladd@b+1,f
  3678  0F6D  083D               	movf	___fladd@a+2,w
  3679  0F6E  1C03               	skipc
  3680  0F6F  0F3D               	incfsz	___fladd@a+2,w
  3681  0F70  02B9               	subwf	___fladd@b+2,f
  3682  0F71  083E               	movf	___fladd@a+3,w
  3683  0F72  1C03               	skipc
  3684  0F73  0F3E               	incfsz	___fladd@a+3,w
  3685  0F74  02BA               	subwf	___fladd@b+3,f
  3686  0F75                     l1285:	
  3687  0F75  083A               	movf	___fladd@b+3,w
  3688  0F76  0439               	iorwf	___fladd@b+2,w
  3689  0F77  0438               	iorwf	___fladd@b+1,w
  3690  0F78  0437               	iorwf	___fladd@b,w
  3691  0F79  1D03               	skipz
  3692  0F7A  2F9D               	goto	l3973
  3693  0F7B  084A               	movf	___fladd@grs,w
  3694  0F7C  1D03               	btfss	3,2
  3695  0F7D  2F9D               	goto	l3973
  3696  0F7E  3000               	movlw	0
  3697  0F7F  00BA               	movwf	?___fladd+3
  3698  0F80  3000               	movlw	0
  3699  0F81  00B9               	movwf	?___fladd+2
  3700  0F82  3000               	movlw	0
  3701  0F83  00B8               	movwf	?___fladd+1
  3702  0F84  3000               	movlw	0
  3703  0F85  00B7               	movwf	?___fladd
  3704  0F86  0008               	return
  3705  0F87                     l3959:	
  3706  0F87  3001               	movlw	1
  3707  0F88  00BF               	movwf	??___fladd
  3708  0F89                     u3305:	
  3709  0F89  1003               	clrc
  3710  0F8A  0DB7               	rlf	___fladd@b,f
  3711  0F8B  0DB8               	rlf	___fladd@b+1,f
  3712  0F8C  0DB9               	rlf	___fladd@b+2,f
  3713  0F8D  0DBA               	rlf	___fladd@b+3,f
  3714  0F8E  0BBF               	decfsz	??___fladd,f
  3715  0F8F  2F89               	goto	u3305
  3716  0F90  1BCA               	btfsc	___fladd@grs,7
  3717  0F91  1437               	bsf	___fladd@b,0
  3718  0F92  1C4A               	btfss	___fladd@grs,0
  3719  0F93  2F96               	goto	l3967
  3720  0F94  1403               	setc
  3721  0F95  2F97               	goto	L2
  3722  0F96                     l3967:	
  3723  0F96  1003               	clrc
  3724  0F97                     L2:	
  3725  0F97  0DCA               	rlf	___fladd@grs,f
  3726  0F98  0849               	movf	___fladd@bexp,w
  3727  0F99  1903               	btfsc	3,2
  3728  0F9A  2F9D               	goto	l3973
  3729  0F9B  3001               	movlw	1
  3730  0F9C  02C9               	subwf	___fladd@bexp,f
  3731  0F9D                     l3973:	
  3732  0F9D  1FB9               	btfss	___fladd@b+2,7
  3733  0F9E  2F87               	goto	l3959
  3734  0F9F                     l3975:	
  3735  0F9F  01C8               	clrf	___fladd@aexp
  3736  0FA0  1FCA               	btfss	___fladd@grs,7
  3737  0FA1  2FAA               	goto	l3985
  3738  0FA2  084A               	movf	___fladd@grs,w
  3739  0FA3  397F               	andlw	127
  3740  0FA4  1903               	btfsc	3,2
  3741  0FA5  1837               	btfsc	___fladd@b,0
  3742  0FA6  2FA8               	goto	l3981
  3743  0FA7  2FAA               	goto	l3985
  3744  0FA8                     l3981:	
  3745  0FA8  01C8               	clrf	___fladd@aexp
  3746  0FA9  0AC8               	incf	___fladd@aexp,f
  3747  0FAA                     l3985:	
  3748  0FAA  0848               	movf	___fladd@aexp,w
  3749  0FAB  1903               	btfsc	3,2
  3750  0FAC  2FDD               	goto	l1298
  3751  0FAD  3001               	movlw	1
  3752  0FAE  07B7               	addwf	___fladd@b,f
  3753  0FAF  3000               	movlw	0
  3754  0FB0  1803               	skipnc
  3755  0FB1  3001               	movlw	1
  3756  0FB2  07B8               	addwf	___fladd@b+1,f
  3757  0FB3  3000               	movlw	0
  3758  0FB4  1803               	skipnc
  3759  0FB5  3001               	movlw	1
  3760  0FB6  07B9               	addwf	___fladd@b+2,f
  3761  0FB7  3000               	movlw	0
  3762  0FB8  1803               	skipnc
  3763  0FB9  3001               	movlw	1
  3764  0FBA  07BA               	addwf	___fladd@b+3,f
  3765  0FBB  1C3A               	btfss	___fladd@b+3,0
  3766  0FBC  2FDD               	goto	l1298
  3767  0FBD  0837               	movf	___fladd@b,w
  3768  0FBE  00BF               	movwf	??___fladd
  3769  0FBF  0838               	movf	___fladd@b+1,w
  3770  0FC0  00C0               	movwf	??___fladd+1
  3771  0FC1  0839               	movf	___fladd@b+2,w
  3772  0FC2  00C1               	movwf	??___fladd+2
  3773  0FC3  083A               	movf	___fladd@b+3,w
  3774  0FC4  00C2               	movwf	??___fladd+3
  3775  0FC5  3001               	movlw	1
  3776  0FC6  00C3               	movwf	??___fladd+4
  3777  0FC7                     u3405:	
  3778  0FC7  0D42               	rlf	??___fladd+3,w
  3779  0FC8  0CC2               	rrf	??___fladd+3,f
  3780  0FC9  0CC1               	rrf	??___fladd+2,f
  3781  0FCA  0CC0               	rrf	??___fladd+1,f
  3782  0FCB  0CBF               	rrf	??___fladd,f
  3783  0FCC  0BC3               	decfsz	??___fladd+4,f
  3784  0FCD  2FC7               	goto	u3405
  3785  0FCE  0842               	movf	??___fladd+3,w
  3786  0FCF  00BA               	movwf	___fladd@b+3
  3787  0FD0  0841               	movf	??___fladd+2,w
  3788  0FD1  00B9               	movwf	___fladd@b+2
  3789  0FD2  0840               	movf	??___fladd+1,w
  3790  0FD3  00B8               	movwf	___fladd@b+1
  3791  0FD4  083F               	movf	??___fladd,w
  3792  0FD5  00B7               	movwf	___fladd@b
  3793  0FD6  0A49               	incf	___fladd@bexp,w
  3794  0FD7  1903               	btfsc	3,2
  3795  0FD8  2FDD               	goto	l1298
  3796  0FD9  3001               	movlw	1
  3797  0FDA  00BF               	movwf	??___fladd
  3798  0FDB  083F               	movf	??___fladd,w
  3799  0FDC  07C9               	addwf	___fladd@bexp,f
  3800  0FDD                     l1298:	
  3801  0FDD  0A49               	incf	___fladd@bexp,w
  3802  0FDE  1D03               	btfss	3,2
  3803  0FDF  0849               	movf	___fladd@bexp,w
  3804  0FE0  1D03               	btfss	3,2
  3805  0FE1  2FED               	goto	l4003
  3806  0FE2  3000               	movlw	0
  3807  0FE3  00BA               	movwf	___fladd@b+3
  3808  0FE4  3000               	movlw	0
  3809  0FE5  00B9               	movwf	___fladd@b+2
  3810  0FE6  3000               	movlw	0
  3811  0FE7  00B8               	movwf	___fladd@b+1
  3812  0FE8  3000               	movlw	0
  3813  0FE9  00B7               	movwf	___fladd@b
  3814  0FEA  0849               	movf	___fladd@bexp,w
  3815  0FEB  1903               	btfsc	3,2
  3816  0FEC  01C7               	clrf	___fladd@signs
  3817  0FED                     l4003:	
  3818  0FED  1C49               	btfss	___fladd@bexp,0
  3819  0FEE  2FF1               	goto	l4007
  3820  0FEF  17B9               	bsf	___fladd@b+2,7
  3821  0FF0  2FF5               	goto	l1306
  3822  0FF1                     l4007:	
  3823  0FF1  307F               	movlw	127
  3824  0FF2  00BF               	movwf	??___fladd
  3825  0FF3  083F               	movf	??___fladd,w
  3826  0FF4  05B9               	andwf	___fladd@b+2,f
  3827  0FF5                     l1306:	
  3828  0FF5  0849               	movf	___fladd@bexp,w
  3829  0FF6  00BF               	movwf	??___fladd
  3830  0FF7  1003               	clrc
  3831  0FF8  0C3F               	rrf	??___fladd,w
  3832  0FF9  00C0               	movwf	??___fladd+1
  3833  0FFA  0840               	movf	??___fladd+1,w
  3834  0FFB  00BA               	movwf	___fladd@b+3
  3835  0FFC  1FC7               	btfss	___fladd@signs,7
  3836  0FFD  0008               	return
  3837  0FFE  17BA               	bsf	___fladd@b+3,7
  3838  0FFF  0008               	return
  3839  1000                     __end_of___fladd:	
  3840                           
  3841                           	psect	text4
  3842  0C32                     __ptext4:	
  3843 ;; *************** function ___fldiv *****************
  3844 ;; Defined at:
  3845 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  a               4   14[BANK0 ] unsigned char 
  3848 ;;  b               4   18[BANK0 ] unsigned char 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  grs             4   34[BANK0 ] unsigned long 
  3851 ;;  rem             4   27[BANK0 ] unsigned long 
  3852 ;;  new_exp         2   32[BANK0 ] int 
  3853 ;;  aexp            1   39[BANK0 ] unsigned char 
  3854 ;;  bexp            1   38[BANK0 ] unsigned char 
  3855 ;;  sign            1   31[BANK0 ] unsigned char 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  4   14[BANK0 ] unsigned char 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2, status,0, btemp+1
  3860 ;; Tracked objects:
  3861 ;;		On entry : 300/0
  3862 ;;		On exit  : 300/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3865 ;;      Params:         0       8       0       0       0
  3866 ;;      Locals:         0      13       0       0       0
  3867 ;;      Temps:          0       5       0       0       0
  3868 ;;      Totals:         0      26       0       0       0
  3869 ;;Total ram usage:       26 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:    1
  3872 ;; This function calls:
  3873 ;;		Nothing
  3874 ;; This function is called by:
  3875 ;;		_mediaLeituraPt100Umidadde
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           
  3880                           ;psect for function ___fldiv
  3881  0C32                     ___fldiv:	
  3882                           
  3883                           ;incstack = 0
  3884                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3885  0C32  0835               	movf	___fldiv@b+3,w
  3886  0C33  3980               	andlw	128
  3887  0C34  00B6               	movwf	??___fldiv
  3888  0C35  0836               	movf	??___fldiv,w
  3889  0C36  00BF               	movwf	___fldiv@sign
  3890  0C37  0835               	movf	___fldiv@b+3,w
  3891  0C38  00B6               	movwf	??___fldiv
  3892  0C39  0736               	addwf	??___fldiv,w
  3893  0C3A  00B7               	movwf	??___fldiv+1
  3894  0C3B  0837               	movf	??___fldiv+1,w
  3895  0C3C  00C6               	movwf	___fldiv@bexp
  3896  0C3D  1BB4               	btfsc	___fldiv@b+2,7
  3897  0C3E  1446               	bsf	___fldiv@bexp,0
  3898  0C3F  0846               	movf	___fldiv@bexp,w
  3899  0C40  1903               	btfsc	3,2
  3900  0C41  2C50               	goto	l4603
  3901  0C42  0A46               	incf	___fldiv@bexp,w
  3902  0C43  1D03               	btfss	3,2
  3903  0C44  2C4D               	goto	l4599
  3904  0C45  3000               	movlw	0
  3905  0C46  00B5               	movwf	___fldiv@b+3
  3906  0C47  3000               	movlw	0
  3907  0C48  00B4               	movwf	___fldiv@b+2
  3908  0C49  3000               	movlw	0
  3909  0C4A  00B3               	movwf	___fldiv@b+1
  3910  0C4B  3000               	movlw	0
  3911  0C4C  00B2               	movwf	___fldiv@b
  3912  0C4D                     l4599:	
  3913  0C4D  17B4               	bsf	___fldiv@b+2,7
  3914  0C4E  01B5               	clrf	___fldiv@b+3
  3915  0C4F  2C58               	goto	l4605
  3916  0C50                     l4603:	
  3917  0C50  3000               	movlw	0
  3918  0C51  00B5               	movwf	___fldiv@b+3
  3919  0C52  3000               	movlw	0
  3920  0C53  00B4               	movwf	___fldiv@b+2
  3921  0C54  3000               	movlw	0
  3922  0C55  00B3               	movwf	___fldiv@b+1
  3923  0C56  3000               	movlw	0
  3924  0C57  00B2               	movwf	___fldiv@b
  3925  0C58                     l4605:	
  3926  0C58  0831               	movf	___fldiv@a+3,w
  3927  0C59  3980               	andlw	128
  3928  0C5A  00B6               	movwf	??___fldiv
  3929  0C5B  0836               	movf	??___fldiv,w
  3930  0C5C  06BF               	xorwf	___fldiv@sign,f
  3931  0C5D  0831               	movf	___fldiv@a+3,w
  3932  0C5E  00B6               	movwf	??___fldiv
  3933  0C5F  0736               	addwf	??___fldiv,w
  3934  0C60  00B7               	movwf	??___fldiv+1
  3935  0C61  0837               	movf	??___fldiv+1,w
  3936  0C62  00C7               	movwf	___fldiv@aexp
  3937  0C63  1BB0               	btfsc	___fldiv@a+2,7
  3938  0C64  1447               	bsf	___fldiv@aexp,0
  3939  0C65  0847               	movf	___fldiv@aexp,w
  3940  0C66  1903               	btfsc	3,2
  3941  0C67  2C76               	goto	l4623
  3942  0C68  0A47               	incf	___fldiv@aexp,w
  3943  0C69  1D03               	btfss	3,2
  3944  0C6A  2C73               	goto	l4619
  3945  0C6B  3000               	movlw	0
  3946  0C6C  00B1               	movwf	___fldiv@a+3
  3947  0C6D  3000               	movlw	0
  3948  0C6E  00B0               	movwf	___fldiv@a+2
  3949  0C6F  3000               	movlw	0
  3950  0C70  00AF               	movwf	___fldiv@a+1
  3951  0C71  3000               	movlw	0
  3952  0C72  00AE               	movwf	___fldiv@a
  3953  0C73                     l4619:	
  3954  0C73  17B0               	bsf	___fldiv@a+2,7
  3955  0C74  01B1               	clrf	___fldiv@a+3
  3956  0C75  2C7E               	goto	l1320
  3957  0C76                     l4623:	
  3958  0C76  3000               	movlw	0
  3959  0C77  00B1               	movwf	___fldiv@a+3
  3960  0C78  3000               	movlw	0
  3961  0C79  00B0               	movwf	___fldiv@a+2
  3962  0C7A  3000               	movlw	0
  3963  0C7B  00AF               	movwf	___fldiv@a+1
  3964  0C7C  3000               	movlw	0
  3965  0C7D  00AE               	movwf	___fldiv@a
  3966  0C7E                     l1320:	
  3967  0C7E  0831               	movf	___fldiv@a+3,w
  3968  0C7F  0430               	iorwf	___fldiv@a+2,w
  3969  0C80  042F               	iorwf	___fldiv@a+1,w
  3970  0C81  042E               	iorwf	___fldiv@a,w
  3971  0C82  1D03               	skipz
  3972  0C83  2C9D               	goto	l4633
  3973  0C84  3000               	movlw	0
  3974  0C85  00B5               	movwf	___fldiv@b+3
  3975  0C86  3000               	movlw	0
  3976  0C87  00B4               	movwf	___fldiv@b+2
  3977  0C88  3000               	movlw	0
  3978  0C89  00B3               	movwf	___fldiv@b+1
  3979  0C8A  3000               	movlw	0
  3980  0C8B  00B2               	movwf	___fldiv@b
  3981  0C8C  3080               	movlw	128
  3982  0C8D  04B4               	iorwf	___fldiv@b+2,f
  3983  0C8E  307F               	movlw	127
  3984  0C8F  04B5               	iorwf	___fldiv@b+3,f
  3985  0C90                     L3:	
  3986  0C90  083F               	movf	___fldiv@sign,w
  3987  0C91  00B6               	movwf	??___fldiv
  3988  0C92  0836               	movf	??___fldiv,w
  3989  0C93  04B5               	iorwf	___fldiv@b+3,f
  3990  0C94  0835               	movf	___fldiv@b+3,w
  3991  0C95  00B1               	movwf	?___fldiv+3
  3992  0C96  0834               	movf	___fldiv@b+2,w
  3993  0C97  00B0               	movwf	?___fldiv+2
  3994  0C98  0833               	movf	___fldiv@b+1,w
  3995  0C99  00AF               	movwf	?___fldiv+1
  3996  0C9A  0832               	movf	___fldiv@b,w
  3997  0C9B  00AE               	movwf	?___fldiv
  3998  0C9C  0008               	return
  3999  0C9D                     l4633:	
  4000  0C9D  0846               	movf	___fldiv@bexp,w
  4001  0C9E  1D03               	btfss	3,2
  4002  0C9F  2CA9               	goto	l4639
  4003  0CA0  3000               	movlw	0
  4004  0CA1  00B1               	movwf	?___fldiv+3
  4005  0CA2  3000               	movlw	0
  4006  0CA3  00B0               	movwf	?___fldiv+2
  4007  0CA4  3000               	movlw	0
  4008  0CA5  00AF               	movwf	?___fldiv+1
  4009  0CA6  3000               	movlw	0
  4010  0CA7  00AE               	movwf	?___fldiv
  4011  0CA8  0008               	return
  4012  0CA9                     l4639:	
  4013  0CA9  0846               	movf	___fldiv@bexp,w
  4014  0CAA  00B6               	movwf	??___fldiv
  4015  0CAB  01B7               	clrf	??___fldiv+1
  4016  0CAC  0837               	movf	??___fldiv+1,w
  4017  0CAD  00B9               	movwf	??___fldiv+3
  4018  0CAE  0847               	movf	___fldiv@aexp,w
  4019  0CAF  0236               	subwf	??___fldiv,w
  4020  0CB0  00B8               	movwf	??___fldiv+2
  4021  0CB1  1C03               	skipc
  4022  0CB2  03B9               	decf	??___fldiv+3,f
  4023  0CB3  0838               	movf	??___fldiv+2,w
  4024  0CB4  3E7F               	addlw	127
  4025  0CB5  00C0               	movwf	___fldiv@new_exp
  4026  0CB6  0839               	movf	??___fldiv+3,w
  4027  0CB7  1803               	skipnc
  4028  0CB8  3E01               	addlw	1
  4029  0CB9  3E00               	addlw	0
  4030  0CBA  00C1               	movwf	___fldiv@new_exp+1
  4031  0CBB  0835               	movf	___fldiv@b+3,w
  4032  0CBC  00BE               	movwf	___fldiv@rem+3
  4033  0CBD  0834               	movf	___fldiv@b+2,w
  4034  0CBE  00BD               	movwf	___fldiv@rem+2
  4035  0CBF  0833               	movf	___fldiv@b+1,w
  4036  0CC0  00BC               	movwf	___fldiv@rem+1
  4037  0CC1  0832               	movf	___fldiv@b,w
  4038  0CC2  00BB               	movwf	___fldiv@rem
  4039  0CC3  3000               	movlw	0
  4040  0CC4  00B5               	movwf	___fldiv@b+3
  4041  0CC5  3000               	movlw	0
  4042  0CC6  00B4               	movwf	___fldiv@b+2
  4043  0CC7  3000               	movlw	0
  4044  0CC8  00B3               	movwf	___fldiv@b+1
  4045  0CC9  3000               	movlw	0
  4046  0CCA  00B2               	movwf	___fldiv@b
  4047  0CCB  3000               	movlw	0
  4048  0CCC  00C5               	movwf	___fldiv@grs+3
  4049  0CCD  3000               	movlw	0
  4050  0CCE  00C4               	movwf	___fldiv@grs+2
  4051  0CCF  3000               	movlw	0
  4052  0CD0  00C3               	movwf	___fldiv@grs+1
  4053  0CD1  3000               	movlw	0
  4054  0CD2  00C2               	movwf	___fldiv@grs
  4055  0CD3  01C7               	clrf	___fldiv@aexp
  4056  0CD4                     l4667:	
  4057  0CD4  301A               	movlw	26
  4058  0CD5  0247               	subwf	___fldiv@aexp,w
  4059  0CD6  1803               	btfsc	3,0
  4060  0CD7  2D1C               	goto	l4669
  4061  0CD8  0847               	movf	___fldiv@aexp,w
  4062  0CD9  1903               	btfsc	3,2
  4063  0CDA  2CF8               	goto	l4659
  4064  0CDB  3001               	movlw	1
  4065  0CDC  00B6               	movwf	??___fldiv
  4066  0CDD                     u4385:	
  4067  0CDD  1003               	clrc
  4068  0CDE  0DBB               	rlf	___fldiv@rem,f
  4069  0CDF  0DBC               	rlf	___fldiv@rem+1,f
  4070  0CE0  0DBD               	rlf	___fldiv@rem+2,f
  4071  0CE1  0DBE               	rlf	___fldiv@rem+3,f
  4072  0CE2  0BB6               	decfsz	??___fldiv,f
  4073  0CE3  2CDD               	goto	u4385
  4074  0CE4  3001               	movlw	1
  4075  0CE5  00B6               	movwf	??___fldiv
  4076  0CE6                     u4395:	
  4077  0CE6  1003               	clrc
  4078  0CE7  0DB2               	rlf	___fldiv@b,f
  4079  0CE8  0DB3               	rlf	___fldiv@b+1,f
  4080  0CE9  0DB4               	rlf	___fldiv@b+2,f
  4081  0CEA  0DB5               	rlf	___fldiv@b+3,f
  4082  0CEB  0BB6               	decfsz	??___fldiv,f
  4083  0CEC  2CE6               	goto	u4395
  4084  0CED  1BC5               	btfsc	___fldiv@grs+3,7
  4085  0CEE  1432               	bsf	___fldiv@b,0
  4086  0CEF  3001               	movlw	1
  4087  0CF0  00B6               	movwf	??___fldiv
  4088  0CF1                     u4415:	
  4089  0CF1  1003               	clrc
  4090  0CF2  0DC2               	rlf	___fldiv@grs,f
  4091  0CF3  0DC3               	rlf	___fldiv@grs+1,f
  4092  0CF4  0DC4               	rlf	___fldiv@grs+2,f
  4093  0CF5  0DC5               	rlf	___fldiv@grs+3,f
  4094  0CF6  0BB6               	decfsz	??___fldiv,f
  4095  0CF7  2CF1               	goto	u4415
  4096  0CF8                     l4659:	
  4097  0CF8  0831               	movf	___fldiv@a+3,w
  4098  0CF9  023E               	subwf	___fldiv@rem+3,w
  4099  0CFA  1D03               	skipz
  4100  0CFB  2D06               	goto	u4425
  4101  0CFC  0830               	movf	___fldiv@a+2,w
  4102  0CFD  023D               	subwf	___fldiv@rem+2,w
  4103  0CFE  1D03               	skipz
  4104  0CFF  2D06               	goto	u4425
  4105  0D00  082F               	movf	___fldiv@a+1,w
  4106  0D01  023C               	subwf	___fldiv@rem+1,w
  4107  0D02  1D03               	skipz
  4108  0D03  2D06               	goto	u4425
  4109  0D04  082E               	movf	___fldiv@a,w
  4110  0D05  023B               	subwf	___fldiv@rem,w
  4111  0D06                     u4425:	
  4112  0D06  1C03               	skipc
  4113  0D07  2D17               	goto	l4665
  4114  0D08  1745               	bsf	___fldiv@grs+3,6
  4115  0D09  082E               	movf	___fldiv@a,w
  4116  0D0A  02BB               	subwf	___fldiv@rem,f
  4117  0D0B  082F               	movf	___fldiv@a+1,w
  4118  0D0C  1C03               	skipc
  4119  0D0D  0F2F               	incfsz	___fldiv@a+1,w
  4120  0D0E  02BC               	subwf	___fldiv@rem+1,f
  4121  0D0F  0830               	movf	___fldiv@a+2,w
  4122  0D10  1C03               	skipc
  4123  0D11  0F30               	incfsz	___fldiv@a+2,w
  4124  0D12  02BD               	subwf	___fldiv@rem+2,f
  4125  0D13  0831               	movf	___fldiv@a+3,w
  4126  0D14  1C03               	skipc
  4127  0D15  0F31               	incfsz	___fldiv@a+3,w
  4128  0D16  02BE               	subwf	___fldiv@rem+3,f
  4129  0D17                     l4665:	
  4130  0D17  3001               	movlw	1
  4131  0D18  00B6               	movwf	??___fldiv
  4132  0D19  0836               	movf	??___fldiv,w
  4133  0D1A  07C7               	addwf	___fldiv@aexp,f
  4134  0D1B  2CD4               	goto	l4667
  4135  0D1C                     l4669:	
  4136  0D1C  083E               	movf	___fldiv@rem+3,w
  4137  0D1D  043D               	iorwf	___fldiv@rem+2,w
  4138  0D1E  043C               	iorwf	___fldiv@rem+1,w
  4139  0D1F  043B               	iorwf	___fldiv@rem,w
  4140  0D20  1D03               	btfss	3,2
  4141  0D21  1442               	bsf	___fldiv@grs,0
  4142  0D22                     l4683:	
  4143  0D22  1BB4               	btfsc	___fldiv@b+2,7
  4144  0D23  2D3F               	goto	l4685
  4145  0D24  3001               	movlw	1
  4146  0D25  00B6               	movwf	??___fldiv
  4147  0D26                     u4455:	
  4148  0D26  1003               	clrc
  4149  0D27  0DB2               	rlf	___fldiv@b,f
  4150  0D28  0DB3               	rlf	___fldiv@b+1,f
  4151  0D29  0DB4               	rlf	___fldiv@b+2,f
  4152  0D2A  0DB5               	rlf	___fldiv@b+3,f
  4153  0D2B  0BB6               	decfsz	??___fldiv,f
  4154  0D2C  2D26               	goto	u4455
  4155  0D2D  1BC5               	btfsc	___fldiv@grs+3,7
  4156  0D2E  1432               	bsf	___fldiv@b,0
  4157  0D2F  3001               	movlw	1
  4158  0D30  00B6               	movwf	??___fldiv
  4159  0D31                     u4475:	
  4160  0D31  1003               	clrc
  4161  0D32  0DC2               	rlf	___fldiv@grs,f
  4162  0D33  0DC3               	rlf	___fldiv@grs+1,f
  4163  0D34  0DC4               	rlf	___fldiv@grs+2,f
  4164  0D35  0DC5               	rlf	___fldiv@grs+3,f
  4165  0D36  0BB6               	decfsz	??___fldiv,f
  4166  0D37  2D31               	goto	u4475
  4167  0D38  30FF               	movlw	255
  4168  0D39  07C0               	addwf	___fldiv@new_exp,f
  4169  0D3A  1803               	skipnc
  4170  0D3B  0AC1               	incf	___fldiv@new_exp+1,f
  4171  0D3C  30FF               	movlw	255
  4172  0D3D  07C1               	addwf	___fldiv@new_exp+1,f
  4173  0D3E  2D22               	goto	l4683
  4174  0D3F                     l4685:	
  4175  0D3F  01C7               	clrf	___fldiv@aexp
  4176  0D40  1FC5               	btfss	___fldiv@grs+3,7
  4177  0D41  2D58               	goto	l4695
  4178  0D42  30FF               	movlw	255
  4179  0D43  0542               	andwf	___fldiv@grs,w
  4180  0D44  00B6               	movwf	??___fldiv
  4181  0D45  30FF               	movlw	255
  4182  0D46  0543               	andwf	___fldiv@grs+1,w
  4183  0D47  00B7               	movwf	??___fldiv+1
  4184  0D48  30FF               	movlw	255
  4185  0D49  0544               	andwf	___fldiv@grs+2,w
  4186  0D4A  00B8               	movwf	??___fldiv+2
  4187  0D4B  307F               	movlw	127
  4188  0D4C  0545               	andwf	___fldiv@grs+3,w
  4189  0D4D  00B9               	movwf	??___fldiv+3
  4190  0D4E  0839               	movf	??___fldiv+3,w
  4191  0D4F  0438               	iorwf	??___fldiv+2,w
  4192  0D50  0437               	iorwf	??___fldiv+1,w
  4193  0D51  0436               	iorwf	??___fldiv,w
  4194  0D52  1903               	skipnz
  4195  0D53  1832               	btfsc	___fldiv@b,0
  4196  0D54  2D56               	goto	l4691
  4197  0D55  2D58               	goto	l4695
  4198  0D56                     l4691:	
  4199  0D56  01C7               	clrf	___fldiv@aexp
  4200  0D57  0AC7               	incf	___fldiv@aexp,f
  4201  0D58                     l4695:	
  4202  0D58  0847               	movf	___fldiv@aexp,w
  4203  0D59  1903               	btfsc	3,2
  4204  0D5A  2D8A               	goto	l4705
  4205  0D5B  3001               	movlw	1
  4206  0D5C  07B2               	addwf	___fldiv@b,f
  4207  0D5D  3000               	movlw	0
  4208  0D5E  1803               	skipnc
  4209  0D5F  3001               	movlw	1
  4210  0D60  07B3               	addwf	___fldiv@b+1,f
  4211  0D61  3000               	movlw	0
  4212  0D62  1803               	skipnc
  4213  0D63  3001               	movlw	1
  4214  0D64  07B4               	addwf	___fldiv@b+2,f
  4215  0D65  3000               	movlw	0
  4216  0D66  1803               	skipnc
  4217  0D67  3001               	movlw	1
  4218  0D68  07B5               	addwf	___fldiv@b+3,f
  4219  0D69  1C35               	btfss	___fldiv@b+3,0
  4220  0D6A  2D8A               	goto	l4705
  4221  0D6B  0832               	movf	___fldiv@b,w
  4222  0D6C  00B6               	movwf	??___fldiv
  4223  0D6D  0833               	movf	___fldiv@b+1,w
  4224  0D6E  00B7               	movwf	??___fldiv+1
  4225  0D6F  0834               	movf	___fldiv@b+2,w
  4226  0D70  00B8               	movwf	??___fldiv+2
  4227  0D71  0835               	movf	___fldiv@b+3,w
  4228  0D72  00B9               	movwf	??___fldiv+3
  4229  0D73  3001               	movlw	1
  4230  0D74  00BA               	movwf	??___fldiv+4
  4231  0D75                     u4545:	
  4232  0D75  0D39               	rlf	??___fldiv+3,w
  4233  0D76  0CB9               	rrf	??___fldiv+3,f
  4234  0D77  0CB8               	rrf	??___fldiv+2,f
  4235  0D78  0CB7               	rrf	??___fldiv+1,f
  4236  0D79  0CB6               	rrf	??___fldiv,f
  4237  0D7A  0BBA               	decfsz	??___fldiv+4,f
  4238  0D7B  2D75               	goto	u4545
  4239  0D7C  0839               	movf	??___fldiv+3,w
  4240  0D7D  00B5               	movwf	___fldiv@b+3
  4241  0D7E  0838               	movf	??___fldiv+2,w
  4242  0D7F  00B4               	movwf	___fldiv@b+2
  4243  0D80  0837               	movf	??___fldiv+1,w
  4244  0D81  00B3               	movwf	___fldiv@b+1
  4245  0D82  0836               	movf	??___fldiv,w
  4246  0D83  00B2               	movwf	___fldiv@b
  4247  0D84  3001               	movlw	1
  4248  0D85  07C0               	addwf	___fldiv@new_exp,f
  4249  0D86  1803               	skipnc
  4250  0D87  0AC1               	incf	___fldiv@new_exp+1,f
  4251  0D88  3000               	movlw	0
  4252  0D89  07C1               	addwf	___fldiv@new_exp+1,f
  4253  0D8A                     l4705:	
  4254  0D8A  0841               	movf	___fldiv@new_exp+1,w
  4255  0D8B  3A80               	xorlw	128
  4256  0D8C  00FF               	movwf	127
  4257  0D8D  3080               	movlw	128
  4258  0D8E  027F               	subwf	127,w
  4259  0D8F  1D03               	skipz
  4260  0D90  2D93               	goto	u4555
  4261  0D91  30FF               	movlw	255
  4262  0D92  0240               	subwf	___fldiv@new_exp,w
  4263  0D93                     u4555:	
  4264  0D93  1C03               	skipc
  4265  0D94  2DA3               	goto	l4709
  4266  0D95  30FF               	movlw	255
  4267  0D96  1283               	bcf	3,5	;RP0=0, select bank0
  4268  0D97  1303               	bcf	3,6	;RP1=0, select bank0
  4269  0D98  00C0               	movwf	___fldiv@new_exp
  4270  0D99  3000               	movlw	0
  4271  0D9A  00C1               	movwf	___fldiv@new_exp+1
  4272  0D9B  3000               	movlw	0
  4273  0D9C  00B5               	movwf	___fldiv@b+3
  4274  0D9D  3000               	movlw	0
  4275  0D9E  00B4               	movwf	___fldiv@b+2
  4276  0D9F  3000               	movlw	0
  4277  0DA0  00B3               	movwf	___fldiv@b+1
  4278  0DA1  3000               	movlw	0
  4279  0DA2  00B2               	movwf	___fldiv@b
  4280  0DA3                     l4709:	
  4281  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  4283  0DA5  0841               	movf	___fldiv@new_exp+1,w
  4284  0DA6  3A80               	xorlw	128
  4285  0DA7  00FF               	movwf	127
  4286  0DA8  3080               	movlw	128
  4287  0DA9  027F               	subwf	127,w
  4288  0DAA  1D03               	skipz
  4289  0DAB  2DAE               	goto	u4565
  4290  0DAC  3001               	movlw	1
  4291  0DAD  0240               	subwf	___fldiv@new_exp,w
  4292  0DAE                     u4565:	
  4293  0DAE  1803               	skipnc
  4294  0DAF  2DBD               	goto	l1342
  4295  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  4296  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  4297  0DB2  01C0               	clrf	___fldiv@new_exp
  4298  0DB3  01C1               	clrf	___fldiv@new_exp+1
  4299  0DB4  3000               	movlw	0
  4300  0DB5  00B5               	movwf	___fldiv@b+3
  4301  0DB6  3000               	movlw	0
  4302  0DB7  00B4               	movwf	___fldiv@b+2
  4303  0DB8  3000               	movlw	0
  4304  0DB9  00B3               	movwf	___fldiv@b+1
  4305  0DBA  3000               	movlw	0
  4306  0DBB  00B2               	movwf	___fldiv@b
  4307  0DBC  01BF               	clrf	___fldiv@sign
  4308  0DBD                     l1342:	
  4309  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  4310  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  4311  0DBF  0840               	movf	___fldiv@new_exp,w
  4312  0DC0  00B6               	movwf	??___fldiv
  4313  0DC1  0836               	movf	??___fldiv,w
  4314  0DC2  00C6               	movwf	___fldiv@bexp
  4315  0DC3  1C46               	btfss	___fldiv@bexp,0
  4316  0DC4  2DC7               	goto	l4721
  4317  0DC5  17B4               	bsf	___fldiv@b+2,7
  4318  0DC6  2DCB               	goto	l1344
  4319  0DC7                     l4721:	
  4320  0DC7  307F               	movlw	127
  4321  0DC8  00B6               	movwf	??___fldiv
  4322  0DC9  0836               	movf	??___fldiv,w
  4323  0DCA  05B4               	andwf	___fldiv@b+2,f
  4324  0DCB                     l1344:	
  4325  0DCB  0846               	movf	___fldiv@bexp,w
  4326  0DCC  00B6               	movwf	??___fldiv
  4327  0DCD  1003               	clrc
  4328  0DCE  0C36               	rrf	??___fldiv,w
  4329  0DCF  00B7               	movwf	??___fldiv+1
  4330  0DD0  0837               	movf	??___fldiv+1,w
  4331  0DD1  00B5               	movwf	___fldiv@b+3
  4332  0DD2  2C90               	goto	L3
  4333  0DD3                     __end_of___fldiv:	
  4334                           
  4335                           	psect	text5
  4336  1D22                     __ptext5:	
  4337 ;; *************** function _Package_Usart_is_for_me *****************
  4338 ;; Defined at:
  4339 ;;		line 8 in file "protocolo.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;		None
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  retorno         1    0[BANK0 ] unsigned char 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      unsigned char 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2, status,0
  4348 ;; Tracked objects:
  4349 ;;		On entry : 300/0
  4350 ;;		On exit  : 300/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4353 ;;      Params:         0       0       0       0       0
  4354 ;;      Locals:         0       1       0       0       0
  4355 ;;      Temps:          0       0       0       0       0
  4356 ;;      Totals:         0       1       0       0       0
  4357 ;;Total ram usage:        1 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:    1
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_mediaLeituraPt100Umidadde
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           
  4368                           ;psect for function _Package_Usart_is_for_me
  4369  1D22                     _Package_Usart_is_for_me:	
  4370                           
  4371                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  4372                           
  4373                           ;incstack = 0
  4374                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  4375  1D22  1C6C               	btfss	_generic_status,0
  4376  1D23  2D32               	goto	l4547
  4377                           
  4378                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  4379  1D24  1703               	bsf	3,6	;RP1=1, select bank2
  4380  1D25  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  4381  1D26  1303               	bcf	3,6	;RP1=0, select bank0
  4382  1D27  0669               	xorwf	_Board_Number,w
  4383  1D28  1903               	skipnz
  4384  1D29  2D2E               	goto	l791
  4385  1D2A  1703               	bsf	3,6	;RP1=1, select bank2
  4386  1D2B  0A13               	incf	(_usart_buffer^(0+256)+3),w	;volatile
  4387  1D2C  1D03               	btfss	3,2
  4388  1D2D  2D32               	goto	l4547
  4389  1D2E                     l791:	
  4390                           
  4391                           ;protocolo.c: 13:             retorno=1;
  4392  1D2E  1303               	bcf	3,6	;RP1=0, select bank0
  4393  1D2F  01A0               	clrf	Package_Usart_is_for_me@retorno
  4394  1D30  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  4395  1D31  2D34               	goto	l4551
  4396  1D32                     l4547:	
  4397                           
  4398                           ;protocolo.c: 15:             retorno=0;
  4399  1D32  1303               	bcf	3,6	;RP1=0, select bank0
  4400  1D33  01A0               	clrf	Package_Usart_is_for_me@retorno
  4401  1D34                     l4551:	
  4402                           
  4403                           ;protocolo.c: 21:      return retorno;
  4404  1D34  0820               	movf	Package_Usart_is_for_me@retorno,w
  4405  1D35  0008               	return
  4406  1D36                     __end_of_Package_Usart_is_for_me:	
  4407                           
  4408                           	psect	text6
  4409  12F6                     __ptext6:	
  4410 ;; *************** function _ADC_Media_10bits *****************
  4411 ;; Defined at:
  4412 ;;		line 20 in file "adc.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  canal           1    wreg     unsigned char 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  canal           1   19[BANK0 ] unsigned char 
  4417 ;;  value           2   20[BANK0 ] unsigned int 
  4418 ;;  i               1   22[BANK0 ] unsigned char 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  4   14[BANK0 ] float 
  4421 ;; Registers used:
  4422 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 300/0
  4425 ;;		On exit  : 300/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4428 ;;      Params:         0       4       0       0       0
  4429 ;;      Locals:         0       4       0       0       0
  4430 ;;      Temps:          0       1       0       0       0
  4431 ;;      Totals:         0       9       0       0       0
  4432 ;;Total ram usage:        9 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    2
  4435 ;; This function calls:
  4436 ;;		___lwdiv
  4437 ;;		___xxtofl
  4438 ;;		_captura
  4439 ;;		_my_delay_ms
  4440 ;; This function is called by:
  4441 ;;		_mediaLeituraPt100Umidadde
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           
  4446                           ;psect for function _ADC_Media_10bits
  4447  12F6                     _ADC_Media_10bits:	
  4448                           
  4449                           ;incstack = 0
  4450                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4451                           ;ADC_Media_10bits@canal stored from wreg
  4452  12F6  00B3               	movwf	ADC_Media_10bits@canal
  4453                           
  4454                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  4455  12F7  0833               	movf	ADC_Media_10bits@canal,w
  4456  12F8  00B2               	movwf	??_ADC_Media_10bits
  4457  12F9  0DB2               	rlf	??_ADC_Media_10bits,f
  4458  12FA  0DB2               	rlf	??_ADC_Media_10bits,f
  4459  12FB  081F               	movf	31,w	;volatile
  4460  12FC  0632               	xorwf	??_ADC_Media_10bits,w
  4461  12FD  39C3               	andlw	-61
  4462  12FE  0632               	xorwf	??_ADC_Media_10bits,w
  4463  12FF  009F               	movwf	31	;volatile
  4464                           
  4465                           ;adc.c: 24:       my_delay_ms(1);
  4466  1300  3000               	movlw	0
  4467  1301  00A3               	movwf	my_delay_ms@time+3
  4468  1302  3000               	movlw	0
  4469  1303  00A2               	movwf	my_delay_ms@time+2
  4470  1304  3000               	movlw	0
  4471  1305  00A1               	movwf	my_delay_ms@time+1
  4472  1306  3001               	movlw	1
  4473  1307  00A0               	movwf	my_delay_ms@time
  4474  1308  160A  118A  20C0  160A  118A  	fcall	_my_delay_ms
  4475                           
  4476                           ;adc.c: 26:       value=0;
  4477  130D  01B4               	clrf	ADC_Media_10bits@value
  4478  130E  01B5               	clrf	ADC_Media_10bits@value+1
  4479                           
  4480                           ;adc.c: 27:       for(i=1;i<=50;i++)
  4481  130F  01B6               	clrf	ADC_Media_10bits@i
  4482  1310  0AB6               	incf	ADC_Media_10bits@i,f
  4483  1311                     l4529:	
  4484                           
  4485                           ;adc.c: 28:           value+=captura();
  4486  1311  160A  158A  24D6  160A  118A  	fcall	_captura
  4487  1316  0820               	movf	?_captura,w
  4488  1317  07B4               	addwf	ADC_Media_10bits@value,f
  4489  1318  1803               	skipnc
  4490  1319  0AB5               	incf	ADC_Media_10bits@value+1,f
  4491  131A  0821               	movf	?_captura+1,w
  4492  131B  07B5               	addwf	ADC_Media_10bits@value+1,f
  4493  131C  3001               	movlw	1
  4494  131D  00B2               	movwf	??_ADC_Media_10bits
  4495  131E  0832               	movf	??_ADC_Media_10bits,w
  4496  131F  07B6               	addwf	ADC_Media_10bits@i,f
  4497  1320  3033               	movlw	51
  4498  1321  0236               	subwf	ADC_Media_10bits@i,w
  4499  1322  1C03               	skipc
  4500  1323  2B11               	goto	l4529
  4501                           
  4502                           ;adc.c: 29:       value/=(i-1);
  4503  1324  0836               	movf	ADC_Media_10bits@i,w
  4504  1325  3EFF               	addlw	255
  4505  1326  00A0               	movwf	___lwdiv@divisor
  4506  1327  30FF               	movlw	255
  4507  1328  1803               	skipnc
  4508  1329  3000               	movlw	0
  4509  132A  00A1               	movwf	___lwdiv@divisor+1
  4510  132B  0835               	movf	ADC_Media_10bits@value+1,w
  4511  132C  00A3               	movwf	___lwdiv@dividend+1
  4512  132D  0834               	movf	ADC_Media_10bits@value,w
  4513  132E  00A2               	movwf	___lwdiv@dividend
  4514  132F  160A  118A  21A3  160A  118A  	fcall	___lwdiv
  4515  1334  0821               	movf	?___lwdiv+1,w
  4516  1335  00B5               	movwf	ADC_Media_10bits@value+1
  4517  1336  0820               	movf	?___lwdiv,w
  4518  1337  00B4               	movwf	ADC_Media_10bits@value
  4519                           
  4520                           ;adc.c: 30:       return value;
  4521  1338  0834               	movf	ADC_Media_10bits@value,w
  4522  1339  00A0               	movwf	___xxtofl@val
  4523  133A  0835               	movf	ADC_Media_10bits@value+1,w
  4524  133B  00A1               	movwf	___xxtofl@val+1
  4525  133C  01A2               	clrf	___xxtofl@val+2
  4526  133D  01A3               	clrf	___xxtofl@val+3
  4527  133E  3000               	movlw	0
  4528  133F  160A  118A  2418   	fcall	___xxtofl
  4529  1342  0823               	movf	?___xxtofl+3,w
  4530  1343  00B1               	movwf	?_ADC_Media_10bits+3
  4531  1344  0822               	movf	?___xxtofl+2,w
  4532  1345  00B0               	movwf	?_ADC_Media_10bits+2
  4533  1346  0821               	movf	?___xxtofl+1,w
  4534  1347  00AF               	movwf	?_ADC_Media_10bits+1
  4535  1348  0820               	movf	?___xxtofl,w
  4536  1349  00AE               	movwf	?_ADC_Media_10bits
  4537  134A  0008               	return
  4538  134B                     __end_of_ADC_Media_10bits:	
  4539                           
  4540                           	psect	text7
  4541  10C0                     __ptext7:	
  4542 ;; *************** function _my_delay_ms *****************
  4543 ;; Defined at:
  4544 ;;		line 5 in file "my_delay.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  time            4    0[BANK0 ] long 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;  i               4    6[BANK0 ] long 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, btemp+1
  4553 ;; Tracked objects:
  4554 ;;		On entry : 300/0
  4555 ;;		On exit  : 300/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4558 ;;      Params:         0       4       0       0       0
  4559 ;;      Locals:         0       4       0       0       0
  4560 ;;      Temps:          0       2       0       0       0
  4561 ;;      Totals:         0      10       0       0       0
  4562 ;;Total ram usage:       10 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    1
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		_mediaLeituraPt100Umidadde
  4569 ;;		_ADC_Media_10bits
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           
  4574                           ;psect for function _my_delay_ms
  4575  10C0                     _my_delay_ms:	
  4576                           
  4577                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  4578                           
  4579                           ;incstack = 0
  4580                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  4581  10C0  3000               	movlw	0
  4582  10C1  00A9               	movwf	my_delay_ms@i+3
  4583  10C2  3000               	movlw	0
  4584  10C3  00A8               	movwf	my_delay_ms@i+2
  4585  10C4  3000               	movlw	0
  4586  10C5  00A7               	movwf	my_delay_ms@i+1
  4587  10C6  3000               	movlw	0
  4588  10C7  00A6               	movwf	my_delay_ms@i
  4589  10C8                     l3717:	
  4590  10C8  0829               	movf	my_delay_ms@i+3,w
  4591  10C9  3A80               	xorlw	128
  4592  10CA  00FF               	movwf	127
  4593  10CB  0823               	movf	my_delay_ms@time+3,w
  4594  10CC  3A80               	xorlw	128
  4595  10CD  027F               	subwf	127,w
  4596  10CE  1D03               	skipz
  4597  10CF  28DA               	goto	u2803
  4598  10D0  0822               	movf	my_delay_ms@time+2,w
  4599  10D1  0228               	subwf	my_delay_ms@i+2,w
  4600  10D2  1D03               	skipz
  4601  10D3  28DA               	goto	u2803
  4602  10D4  0821               	movf	my_delay_ms@time+1,w
  4603  10D5  0227               	subwf	my_delay_ms@i+1,w
  4604  10D6  1D03               	skipz
  4605  10D7  28DA               	goto	u2803
  4606  10D8  0820               	movf	my_delay_ms@time,w
  4607  10D9  0226               	subwf	my_delay_ms@i,w
  4608  10DA                     u2803:	
  4609  10DA  1803               	btfsc	3,0
  4610  10DB  0008               	return
  4611                           
  4612                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  4613  10DC  3003               	movlw	3
  4614  10DD  1283               	bcf	3,5	;RP0=0, select bank0
  4615  10DE  1303               	bcf	3,6	;RP1=0, select bank0
  4616  10DF  00A5               	movwf	??_my_delay_ms+1
  4617  10E0  3097               	movlw	151
  4618  10E1  00A4               	movwf	??_my_delay_ms
  4619  10E2                     u5157:	
  4620  10E2  0BA4               	decfsz	??_my_delay_ms,f
  4621  10E3  28E2               	goto	u5157
  4622  10E4  0BA5               	decfsz	??_my_delay_ms+1,f
  4623  10E5  28E2               	goto	u5157
  4624                           
  4625                           ;my_delay.c: 10:             }
  4626  10E6  3001               	movlw	1
  4627  10E7  1283               	bcf	3,5	;RP0=0, select bank0
  4628  10E8  1303               	bcf	3,6	;RP1=0, select bank0
  4629  10E9  07A6               	addwf	my_delay_ms@i,f
  4630  10EA  3000               	movlw	0
  4631  10EB  1803               	skipnc
  4632  10EC  3001               	movlw	1
  4633  10ED  07A7               	addwf	my_delay_ms@i+1,f
  4634  10EE  3000               	movlw	0
  4635  10EF  1803               	skipnc
  4636  10F0  3001               	movlw	1
  4637  10F1  07A8               	addwf	my_delay_ms@i+2,f
  4638  10F2  3000               	movlw	0
  4639  10F3  1803               	skipnc
  4640  10F4  3001               	movlw	1
  4641  10F5  07A9               	addwf	my_delay_ms@i+3,f
  4642  10F6  28C8               	goto	l3717
  4643  10F7                     __end_of_my_delay_ms:	
  4644                           
  4645                           	psect	text8
  4646  1CD6                     __ptext8:	
  4647 ;; *************** function _captura *****************
  4648 ;; Defined at:
  4649 ;;		line 140 in file "adc.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;		None
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  2    0[BANK0 ] unsigned int 
  4656 ;; Registers used:
  4657 ;;		wreg
  4658 ;; Tracked objects:
  4659 ;;		On entry : 300/0
  4660 ;;		On exit  : 300/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4663 ;;      Params:         0       2       0       0       0
  4664 ;;      Locals:         0       0       0       0       0
  4665 ;;      Temps:          0       0       0       0       0
  4666 ;;      Totals:         0       2       0       0       0
  4667 ;;Total ram usage:        2 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    1
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_ADC_Media_10bits
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           
  4678                           ;psect for function _captura
  4679  1CD6                     _captura:	
  4680                           
  4681                           ;adc.c: 141:     ADCON0bits.GO=1;
  4682                           
  4683                           ;incstack = 0
  4684                           ; Regs used in _captura: [wreg]
  4685  1CD6  149F               	bsf	31,1	;volatile
  4686  1CD7                     l469:	
  4687                           ;adc.c: 145:           }
  4688                           
  4689                           
  4690                           ;adc.c: 142:     while(ADCON0bits.GO)
  4691  1CD7  189F               	btfsc	31,1	;volatile
  4692  1CD8  2CD7               	goto	l469
  4693                           
  4694                           ;adc.c: 146:     return ((ADRESH<<8)+ADRESL);
  4695  1CD9  081E               	movf	30,w	;volatile
  4696  1CDA  00A1               	movwf	?_captura+1
  4697  1CDB  1683               	bsf	3,5	;RP0=1, select bank1
  4698  1CDC  081E               	movf	30,w	;volatile
  4699  1CDD  1283               	bcf	3,5	;RP0=0, select bank0
  4700  1CDE  00A0               	movwf	?_captura
  4701  1CDF  0008               	return
  4702  1CE0                     __end_of_captura:	
  4703                           
  4704                           	psect	text9
  4705  1418                     __ptext9:	
  4706 ;; *************** function ___xxtofl *****************
  4707 ;; Defined at:
  4708 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  sign            1    wreg     unsigned char 
  4711 ;;  val             4    0[BANK0 ] long 
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;  sign            1    8[BANK0 ] unsigned char 
  4714 ;;  arg             4   10[BANK0 ] unsigned long 
  4715 ;;  exp             1    9[BANK0 ] unsigned char 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  4    0[BANK0 ] unsigned char 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0
  4720 ;; Tracked objects:
  4721 ;;		On entry : 300/0
  4722 ;;		On exit  : 300/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4725 ;;      Params:         0       4       0       0       0
  4726 ;;      Locals:         0       6       0       0       0
  4727 ;;      Temps:          0       4       0       0       0
  4728 ;;      Totals:         0      14       0       0       0
  4729 ;;Total ram usage:       14 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    1
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_mediaLeituraPt100Umidadde
  4736 ;;		_ADC_Media_10bits
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           
  4741                           ;psect for function ___xxtofl
  4742  1418                     ___xxtofl:	
  4743                           
  4744                           ;incstack = 0
  4745                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4746                           ;___xxtofl@sign stored from wreg
  4747  1418  00A8               	movwf	___xxtofl@sign
  4748  1419  0828               	movf	___xxtofl@sign,w
  4749  141A  1D03               	btfss	3,2
  4750  141B  1FA3               	btfss	___xxtofl@val+3,7
  4751  141C  2C2D               	goto	l4159
  4752  141D  0920               	comf	___xxtofl@val,w
  4753  141E  00AA               	movwf	___xxtofl@arg
  4754  141F  0921               	comf	___xxtofl@val+1,w
  4755  1420  00AB               	movwf	___xxtofl@arg+1
  4756  1421  0922               	comf	___xxtofl@val+2,w
  4757  1422  00AC               	movwf	___xxtofl@arg+2
  4758  1423  0923               	comf	___xxtofl@val+3,w
  4759  1424  00AD               	movwf	___xxtofl@arg+3
  4760  1425  0AAA               	incf	___xxtofl@arg,f
  4761  1426  1903               	skipnz
  4762  1427  0AAB               	incf	___xxtofl@arg+1,f
  4763  1428  1903               	skipnz
  4764  1429  0AAC               	incf	___xxtofl@arg+2,f
  4765  142A  1903               	skipnz
  4766  142B  0AAD               	incf	___xxtofl@arg+3,f
  4767  142C  2C35               	goto	l1398
  4768  142D                     l4159:	
  4769  142D  0823               	movf	___xxtofl@val+3,w
  4770  142E  00AD               	movwf	___xxtofl@arg+3
  4771  142F  0822               	movf	___xxtofl@val+2,w
  4772  1430  00AC               	movwf	___xxtofl@arg+2
  4773  1431  0821               	movf	___xxtofl@val+1,w
  4774  1432  00AB               	movwf	___xxtofl@arg+1
  4775  1433  0820               	movf	___xxtofl@val,w
  4776  1434  00AA               	movwf	___xxtofl@arg
  4777  1435                     l1398:	
  4778  1435  0823               	movf	___xxtofl@val+3,w
  4779  1436  0422               	iorwf	___xxtofl@val+2,w
  4780  1437  0421               	iorwf	___xxtofl@val+1,w
  4781  1438  0420               	iorwf	___xxtofl@val,w
  4782  1439  1D03               	skipz
  4783  143A  2C44               	goto	l4165
  4784  143B  3000               	movlw	0
  4785  143C  00A3               	movwf	?___xxtofl+3
  4786  143D  3000               	movlw	0
  4787  143E  00A2               	movwf	?___xxtofl+2
  4788  143F  3000               	movlw	0
  4789  1440  00A1               	movwf	?___xxtofl+1
  4790  1441  3000               	movlw	0
  4791  1442  00A0               	movwf	?___xxtofl
  4792  1443  0008               	return
  4793  1444                     l4165:	
  4794  1444  3096               	movlw	150
  4795  1445  00A4               	movwf	??___xxtofl
  4796  1446  0824               	movf	??___xxtofl,w
  4797  1447  00A9               	movwf	___xxtofl@exp
  4798  1448                     l4169:	
  4799  1448  30FE               	movlw	254
  4800  1449  052D               	andwf	___xxtofl@arg+3,w
  4801  144A  1903               	btfsc	3,2
  4802  144B  2C75               	goto	l1404
  4803  144C  3001               	movlw	1
  4804  144D  00A4               	movwf	??___xxtofl
  4805  144E  0824               	movf	??___xxtofl,w
  4806  144F  07A9               	addwf	___xxtofl@exp,f
  4807  1450  3001               	movlw	1
  4808  1451                     u3865:	
  4809  1451  1003               	clrc
  4810  1452  0CAD               	rrf	___xxtofl@arg+3,f
  4811  1453  0CAC               	rrf	___xxtofl@arg+2,f
  4812  1454  0CAB               	rrf	___xxtofl@arg+1,f
  4813  1455  0CAA               	rrf	___xxtofl@arg,f
  4814  1456  3EFF               	addlw	-1
  4815  1457  1D03               	skipz
  4816  1458  2C51               	goto	u3865
  4817  1459  2C48               	goto	l4169
  4818  145A                     l4171:	
  4819  145A  3001               	movlw	1
  4820  145B  00A4               	movwf	??___xxtofl
  4821  145C  0824               	movf	??___xxtofl,w
  4822  145D  07A9               	addwf	___xxtofl@exp,f
  4823  145E  3001               	movlw	1
  4824  145F  07AA               	addwf	___xxtofl@arg,f
  4825  1460  3000               	movlw	0
  4826  1461  1803               	skipnc
  4827  1462  3001               	movlw	1
  4828  1463  07AB               	addwf	___xxtofl@arg+1,f
  4829  1464  3000               	movlw	0
  4830  1465  1803               	skipnc
  4831  1466  3001               	movlw	1
  4832  1467  07AC               	addwf	___xxtofl@arg+2,f
  4833  1468  3000               	movlw	0
  4834  1469  1803               	skipnc
  4835  146A  3001               	movlw	1
  4836  146B  07AD               	addwf	___xxtofl@arg+3,f
  4837  146C  3001               	movlw	1
  4838  146D                     u3885:	
  4839  146D  1003               	clrc
  4840  146E  0CAD               	rrf	___xxtofl@arg+3,f
  4841  146F  0CAC               	rrf	___xxtofl@arg+2,f
  4842  1470  0CAB               	rrf	___xxtofl@arg+1,f
  4843  1471  0CAA               	rrf	___xxtofl@arg,f
  4844  1472  3EFF               	addlw	-1
  4845  1473  1D03               	skipz
  4846  1474  2C6D               	goto	u3885
  4847  1475                     l1404:	
  4848  1475  30FF               	movlw	255
  4849  1476  052D               	andwf	___xxtofl@arg+3,w
  4850  1477  1903               	btfsc	3,2
  4851  1478  2C89               	goto	l4179
  4852  1479  2C5A               	goto	l4171
  4853  147A                     l4181:	
  4854  147A  3002               	movlw	2
  4855  147B  0229               	subwf	___xxtofl@exp,w
  4856  147C  1C03               	btfss	3,0
  4857  147D  2C8B               	goto	l1411
  4858  147E  3001               	movlw	1
  4859  147F  02A9               	subwf	___xxtofl@exp,f
  4860  1480  3001               	movlw	1
  4861  1481  00A4               	movwf	??___xxtofl
  4862  1482                     u3905:	
  4863  1482  1003               	clrc
  4864  1483  0DAA               	rlf	___xxtofl@arg,f
  4865  1484  0DAB               	rlf	___xxtofl@arg+1,f
  4866  1485  0DAC               	rlf	___xxtofl@arg+2,f
  4867  1486  0DAD               	rlf	___xxtofl@arg+3,f
  4868  1487  0BA4               	decfsz	??___xxtofl,f
  4869  1488  2C82               	goto	u3905
  4870  1489                     l4179:	
  4871  1489  1FAC               	btfss	___xxtofl@arg+2,7
  4872  148A  2C7A               	goto	l4181
  4873  148B                     l1411:	
  4874  148B  1829               	btfsc	___xxtofl@exp,0
  4875  148C  2C95               	goto	l1412
  4876  148D  30FF               	movlw	255
  4877  148E  05AA               	andwf	___xxtofl@arg,f
  4878  148F  30FF               	movlw	255
  4879  1490  05AB               	andwf	___xxtofl@arg+1,f
  4880  1491  307F               	movlw	127
  4881  1492  05AC               	andwf	___xxtofl@arg+2,f
  4882  1493  30FF               	movlw	255
  4883  1494  05AD               	andwf	___xxtofl@arg+3,f
  4884  1495                     l1412:	
  4885  1495  1003               	clrc
  4886  1496  0CA9               	rrf	___xxtofl@exp,f
  4887  1497  0829               	movf	___xxtofl@exp,w
  4888  1498  00A4               	movwf	??___xxtofl
  4889  1499  01A5               	clrf	??___xxtofl+1
  4890  149A  01A6               	clrf	??___xxtofl+2
  4891  149B  01A7               	clrf	??___xxtofl+3
  4892  149C  3018               	movlw	24
  4893  149D                     u3945:	
  4894  149D  1003               	clrc
  4895  149E  0DA4               	rlf	??___xxtofl,f
  4896  149F  0DA5               	rlf	??___xxtofl+1,f
  4897  14A0  0DA6               	rlf	??___xxtofl+2,f
  4898  14A1  0DA7               	rlf	??___xxtofl+3,f
  4899  14A2  3EFF               	addlw	-1
  4900  14A3  1D03               	skipz
  4901  14A4  2C9D               	goto	u3945
  4902  14A5  0824               	movf	??___xxtofl,w
  4903  14A6  04AA               	iorwf	___xxtofl@arg,f
  4904  14A7  0825               	movf	??___xxtofl+1,w
  4905  14A8  04AB               	iorwf	___xxtofl@arg+1,f
  4906  14A9  0826               	movf	??___xxtofl+2,w
  4907  14AA  04AC               	iorwf	___xxtofl@arg+2,f
  4908  14AB  0827               	movf	??___xxtofl+3,w
  4909  14AC  04AD               	iorwf	___xxtofl@arg+3,f
  4910  14AD  0828               	movf	___xxtofl@sign,w
  4911  14AE  1D03               	btfss	3,2
  4912  14AF  1FA3               	btfss	___xxtofl@val+3,7
  4913  14B0  2CB2               	goto	l4193
  4914  14B1  17AD               	bsf	___xxtofl@arg+3,7
  4915  14B2                     l4193:	
  4916  14B2  082D               	movf	___xxtofl@arg+3,w
  4917  14B3  00A3               	movwf	?___xxtofl+3
  4918  14B4  082C               	movf	___xxtofl@arg+2,w
  4919  14B5  00A2               	movwf	?___xxtofl+2
  4920  14B6  082B               	movf	___xxtofl@arg+1,w
  4921  14B7  00A1               	movwf	?___xxtofl+1
  4922  14B8  082A               	movf	___xxtofl@arg,w
  4923  14B9  00A0               	movwf	?___xxtofl
  4924  14BA  0008               	return
  4925  14BB                     __end_of___xxtofl:	
  4926                           
  4927                           	psect	text10
  4928  11DF                     __ptext10:	
  4929 ;; *************** function _USART_init *****************
  4930 ;; Defined at:
  4931 ;;		line 18 in file "usart.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  baudrate        4    0[BANK0 ] unsigned long 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  i               1    6[BANK0 ] unsigned char 
  4936 ;;  erro            1    0        unsigned char 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  1    wreg      void 
  4939 ;; Registers used:
  4940 ;;		wreg, status,2, status,0
  4941 ;; Tracked objects:
  4942 ;;		On entry : 300/0
  4943 ;;		On exit  : 300/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4946 ;;      Params:         0       4       0       0       0
  4947 ;;      Locals:         0       2       0       0       0
  4948 ;;      Temps:          0       1       0       0       0
  4949 ;;      Totals:         0       7       0       0       0
  4950 ;;Total ram usage:        7 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; Hardware stack levels required when called:    1
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_main
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           
  4961                           ;psect for function _USART_init
  4962  11DF                     _USART_init:	
  4963                           
  4964                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  4965                           
  4966                           ;incstack = 0
  4967                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  4968  11DF  304B               	movlw	75
  4969  11E0  0621               	xorwf	USART_init@baudrate+1,w
  4970  11E1  0420               	iorwf	USART_init@baudrate,w
  4971  11E2  0422               	iorwf	USART_init@baudrate+2,w
  4972  11E3  0423               	iorwf	USART_init@baudrate+3,w
  4973  11E4  1D03               	btfss	3,2
  4974  11E5  29F0               	goto	l4757
  4975                           
  4976                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  4977  11E6  1798               	bsf	24,7	;volatile
  4978                           
  4979                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  4980  11E7  1618               	bsf	24,4	;volatile
  4981                           
  4982                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  4983  11E8  1683               	bsf	3,5	;RP0=1, select bank1
  4984  11E9  1518               	bsf	24,2	;volatile
  4985                           
  4986                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  4987  11EA  1218               	bcf	24,4	;volatile
  4988                           
  4989                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  4990  11EB  1318               	bcf	24,6	;volatile
  4991                           
  4992                           ;usart.c: 32:           SPBRG =12;
  4993  11EC  300C               	movlw	12
  4994  11ED  0099               	movwf	25	;volatile
  4995                           
  4996                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  4997  11EE  170B               	bsf	11,6	;volatile
  4998  11EF  2A09               	goto	L4
  4999  11F0                     l4757:	
  5000                           ;usart.c: 35:           }
  5001                           
  5002                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  5003                           
  5004  11F0  30C2               	movlw	194
  5005  11F1  0621               	xorwf	USART_init@baudrate+1,w
  5006  11F2  1D03               	skipz
  5007  11F3  2A0A               	goto	l4777
  5008  11F4  0322               	decf	USART_init@baudrate+2,w
  5009  11F5  0420               	iorwf	USART_init@baudrate,w
  5010  11F6  0423               	iorwf	USART_init@baudrate+3,w
  5011  11F7  1D03               	btfss	3,2
  5012  11F8  2A0A               	goto	l4777
  5013                           
  5014                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  5015  11F9  3010               	movlw	16
  5016  11FA  1683               	bsf	3,5	;RP0=1, select bank1
  5017  11FB  0099               	movwf	25	;volatile
  5018                           
  5019                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  5020  11FC  1703               	bsf	3,6	;RP1=1, select bank3
  5021  11FD  1587               	bsf	7,3	;volatile
  5022                           
  5023                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  5024  11FE  1303               	bcf	3,6	;RP1=0, select bank1
  5025  11FF  1518               	bsf	24,2	;volatile
  5026                           
  5027                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  5028  1200  1283               	bcf	3,5	;RP0=0, select bank0
  5029  1201  1798               	bsf	24,7	;volatile
  5030                           
  5031                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  5032  1202  1683               	bsf	3,5	;RP0=1, select bank1
  5033  1203  1218               	bcf	24,4	;volatile
  5034                           
  5035                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  5036  1204  1318               	bcf	24,6	;volatile
  5037                           
  5038                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  5039  1205  1283               	bcf	3,5	;RP0=0, select bank0
  5040  1206  1618               	bsf	24,4	;volatile
  5041                           
  5042                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  5043  1207  170B               	bsf	11,6	;volatile
  5044                           
  5045                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  5046  1208  1683               	bsf	3,5	;RP0=1, select bank1
  5047  1209                     L4:	
  5048  1209  168C               	bsf	12,5	;volatile
  5049  120A                     l4777:	
  5050                           
  5051                           ;usart.c: 68:      TRISC6= 1;
  5052  120A  1683               	bsf	3,5	;RP0=1, select bank1
  5053  120B  1707               	bsf	7,6	;volatile
  5054                           
  5055                           ;usart.c: 69:      TRISC7= 1;
  5056  120C  1787               	bsf	7,7	;volatile
  5057                           
  5058                           ;usart.c: 71:      CREN=0;
  5059  120D  1283               	bcf	3,5	;RP0=0, select bank0
  5060  120E  1218               	bcf	24,4	;volatile
  5061                           
  5062                           ;usart.c: 72:      CREN=1;
  5063  120F  1618               	bsf	24,4	;volatile
  5064                           
  5065                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  5066  1210  01A6               	clrf	USART_init@i
  5067  1211                     l4791:	
  5068  1211  081A               	movf	26,w	;volatile
  5069  1212  3001               	movlw	1
  5070  1213  00A4               	movwf	??_USART_init
  5071  1214  0824               	movf	??_USART_init,w
  5072  1215  07A6               	addwf	USART_init@i,f
  5073  1216  300F               	movlw	15
  5074  1217  0226               	subwf	USART_init@i,w
  5075  1218  1803               	btfsc	3,0
  5076  1219  0008               	return
  5077  121A  2A11               	goto	l4791
  5078  121B                     __end_of_USART_init:	
  5079                           
  5080                           	psect	text11
  5081  1F6A                     __ptext11:	
  5082 ;; *************** function _I2C_Master_Init *****************
  5083 ;; Defined at:
  5084 ;;		line 7 in file "I2C.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  c               4   14[BANK0 ] const unsigned long 
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      void 
  5091 ;; Registers used:
  5092 ;;		wreg, status,2, status,0, pclath, cstack
  5093 ;; Tracked objects:
  5094 ;;		On entry : 300/0
  5095 ;;		On exit  : 300/100
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5098 ;;      Params:         0       4       0       0       0
  5099 ;;      Locals:         0       0       0       0       0
  5100 ;;      Temps:          0       4       0       0       0
  5101 ;;      Totals:         0       8       0       0       0
  5102 ;;Total ram usage:        8 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:    2
  5105 ;; This function calls:
  5106 ;;		___lldiv
  5107 ;; This function is called by:
  5108 ;;		_main
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           
  5113                           ;psect for function _I2C_Master_Init
  5114  1F6A                     _I2C_Master_Init:	
  5115                           
  5116                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5117                           
  5118                           ;incstack = 0
  5119                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5120  1F6A  3028               	movlw	40
  5121  1F6B  0094               	movwf	20	;volatile
  5122                           
  5123                           ;I2C.c: 11:   SSPCON2 = 0;
  5124  1F6C  1683               	bsf	3,5	;RP0=1, select bank1
  5125  1F6D  0191               	clrf	17	;volatile
  5126                           
  5127                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5128  1F6E  1283               	bcf	3,5	;RP0=0, select bank0
  5129  1F6F  082E               	movf	I2C_Master_Init@c,w
  5130  1F70  00B2               	movwf	??_I2C_Master_Init
  5131  1F71  082F               	movf	I2C_Master_Init@c+1,w
  5132  1F72  00B3               	movwf	??_I2C_Master_Init+1
  5133  1F73  0830               	movf	I2C_Master_Init@c+2,w
  5134  1F74  00B4               	movwf	??_I2C_Master_Init+2
  5135  1F75  0831               	movf	I2C_Master_Init@c+3,w
  5136  1F76  00B5               	movwf	??_I2C_Master_Init+3
  5137  1F77  3002               	movlw	2
  5138  1F78                     u4585:	
  5139  1F78  1003               	clrc
  5140  1F79  0DB2               	rlf	??_I2C_Master_Init,f
  5141  1F7A  0DB3               	rlf	??_I2C_Master_Init+1,f
  5142  1F7B  0DB4               	rlf	??_I2C_Master_Init+2,f
  5143  1F7C  0DB5               	rlf	??_I2C_Master_Init+3,f
  5144  1F7D  3EFF               	addlw	-1
  5145  1F7E  1D03               	skipz
  5146  1F7F  2F78               	goto	u4585
  5147  1F80  0835               	movf	??_I2C_Master_Init+3,w
  5148  1F81  00A3               	movwf	___lldiv@divisor+3
  5149  1F82  0834               	movf	??_I2C_Master_Init+2,w
  5150  1F83  00A2               	movwf	___lldiv@divisor+2
  5151  1F84  0833               	movf	??_I2C_Master_Init+1,w
  5152  1F85  00A1               	movwf	___lldiv@divisor+1
  5153  1F86  0832               	movf	??_I2C_Master_Init,w
  5154  1F87  00A0               	movwf	___lldiv@divisor
  5155  1F88  3000               	movlw	0
  5156  1F89  00A7               	movwf	___lldiv@dividend+3
  5157  1F8A  307A               	movlw	122
  5158  1F8B  00A6               	movwf	___lldiv@dividend+2
  5159  1F8C  3012               	movlw	18
  5160  1F8D  00A5               	movwf	___lldiv@dividend+1
  5161  1F8E  3000               	movlw	0
  5162  1F8F  00A4               	movwf	___lldiv@dividend
  5163  1F90  120A  158A  2003   	fcall	___lldiv
  5164  1F93  0820               	movf	?___lldiv,w
  5165  1F94  3EFF               	addlw	255
  5166  1F95  1683               	bsf	3,5	;RP0=1, select bank1
  5167  1F96  0093               	movwf	19	;volatile
  5168                           
  5169                           ;I2C.c: 13:   SSPSTAT = 0;
  5170  1F97  0194               	clrf	20	;volatile
  5171                           
  5172                           ;I2C.c: 14:   TRISC3 = 1;
  5173  1F98  1587               	bsf	7,3	;volatile
  5174                           
  5175                           ;I2C.c: 15:   TRISC4 = 1;
  5176  1F99  1607               	bsf	7,4	;volatile
  5177  1F9A  0008               	return
  5178  1F9B                     __end_of_I2C_Master_Init:	
  5179                           
  5180                           	psect	text12
  5181  0803                     __ptext12:	
  5182 ;; *************** function ___lldiv *****************
  5183 ;; Defined at:
  5184 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  divisor         4    0[BANK0 ] unsigned long 
  5187 ;;  dividend        4    4[BANK0 ] unsigned long 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  quotient        4    9[BANK0 ] unsigned long 
  5190 ;;  counter         1   13[BANK0 ] unsigned char 
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  4    0[BANK0 ] unsigned long 
  5193 ;; Registers used:
  5194 ;;		wreg, status,2, status,0
  5195 ;; Tracked objects:
  5196 ;;		On entry : 300/0
  5197 ;;		On exit  : 300/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5200 ;;      Params:         0       8       0       0       0
  5201 ;;      Locals:         0       5       0       0       0
  5202 ;;      Temps:          0       1       0       0       0
  5203 ;;      Totals:         0      14       0       0       0
  5204 ;;Total ram usage:       14 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:    1
  5207 ;; This function calls:
  5208 ;;		Nothing
  5209 ;; This function is called by:
  5210 ;;		_I2C_Master_Init
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           
  5215                           ;psect for function ___lldiv
  5216  0803                     ___lldiv:	
  5217                           
  5218                           ;incstack = 0
  5219                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5220  0803  3000               	movlw	0
  5221  0804  00AC               	movwf	___lldiv@quotient+3
  5222  0805  3000               	movlw	0
  5223  0806  00AB               	movwf	___lldiv@quotient+2
  5224  0807  3000               	movlw	0
  5225  0808  00AA               	movwf	___lldiv@quotient+1
  5226  0809  3000               	movlw	0
  5227  080A  00A9               	movwf	___lldiv@quotient
  5228  080B  0823               	movf	___lldiv@divisor+3,w
  5229  080C  0422               	iorwf	___lldiv@divisor+2,w
  5230  080D  0421               	iorwf	___lldiv@divisor+1,w
  5231  080E  0420               	iorwf	___lldiv@divisor,w
  5232  080F  1903               	skipnz
  5233  0810  2858               	goto	l4575
  5234  0811  01AD               	clrf	___lldiv@counter
  5235  0812  0AAD               	incf	___lldiv@counter,f
  5236  0813                     l4561:	
  5237  0813  1BA3               	btfsc	___lldiv@divisor+3,7
  5238  0814  2823               	goto	l4563
  5239  0815  3001               	movlw	1
  5240  0816  00A8               	movwf	??___lldiv
  5241  0817                     u4235:	
  5242  0817  1003               	clrc
  5243  0818  0DA0               	rlf	___lldiv@divisor,f
  5244  0819  0DA1               	rlf	___lldiv@divisor+1,f
  5245  081A  0DA2               	rlf	___lldiv@divisor+2,f
  5246  081B  0DA3               	rlf	___lldiv@divisor+3,f
  5247  081C  0BA8               	decfsz	??___lldiv,f
  5248  081D  2817               	goto	u4235
  5249  081E  3001               	movlw	1
  5250  081F  00A8               	movwf	??___lldiv
  5251  0820  0828               	movf	??___lldiv,w
  5252  0821  07AD               	addwf	___lldiv@counter,f
  5253  0822  2813               	goto	l4561
  5254  0823                     l4563:	
  5255  0823  3001               	movlw	1
  5256  0824  00A8               	movwf	??___lldiv
  5257  0825                     u4255:	
  5258  0825  1003               	clrc
  5259  0826  0DA9               	rlf	___lldiv@quotient,f
  5260  0827  0DAA               	rlf	___lldiv@quotient+1,f
  5261  0828  0DAB               	rlf	___lldiv@quotient+2,f
  5262  0829  0DAC               	rlf	___lldiv@quotient+3,f
  5263  082A  0BA8               	decfsz	??___lldiv,f
  5264  082B  2825               	goto	u4255
  5265  082C  0823               	movf	___lldiv@divisor+3,w
  5266  082D  0227               	subwf	___lldiv@dividend+3,w
  5267  082E  1D03               	skipz
  5268  082F  283A               	goto	u4265
  5269  0830  0822               	movf	___lldiv@divisor+2,w
  5270  0831  0226               	subwf	___lldiv@dividend+2,w
  5271  0832  1D03               	skipz
  5272  0833  283A               	goto	u4265
  5273  0834  0821               	movf	___lldiv@divisor+1,w
  5274  0835  0225               	subwf	___lldiv@dividend+1,w
  5275  0836  1D03               	skipz
  5276  0837  283A               	goto	u4265
  5277  0838  0820               	movf	___lldiv@divisor,w
  5278  0839  0224               	subwf	___lldiv@dividend,w
  5279  083A                     u4265:	
  5280  083A  1C03               	skipc
  5281  083B  284B               	goto	l4571
  5282  083C  0820               	movf	___lldiv@divisor,w
  5283  083D  02A4               	subwf	___lldiv@dividend,f
  5284  083E  0821               	movf	___lldiv@divisor+1,w
  5285  083F  1C03               	skipc
  5286  0840  0F21               	incfsz	___lldiv@divisor+1,w
  5287  0841  02A5               	subwf	___lldiv@dividend+1,f
  5288  0842  0822               	movf	___lldiv@divisor+2,w
  5289  0843  1C03               	skipc
  5290  0844  0F22               	incfsz	___lldiv@divisor+2,w
  5291  0845  02A6               	subwf	___lldiv@dividend+2,f
  5292  0846  0823               	movf	___lldiv@divisor+3,w
  5293  0847  1C03               	skipc
  5294  0848  0F23               	incfsz	___lldiv@divisor+3,w
  5295  0849  02A7               	subwf	___lldiv@dividend+3,f
  5296  084A  1429               	bsf	___lldiv@quotient,0
  5297  084B                     l4571:	
  5298  084B  3001               	movlw	1
  5299  084C                     u4275:	
  5300  084C  1003               	clrc
  5301  084D  0CA3               	rrf	___lldiv@divisor+3,f
  5302  084E  0CA2               	rrf	___lldiv@divisor+2,f
  5303  084F  0CA1               	rrf	___lldiv@divisor+1,f
  5304  0850  0CA0               	rrf	___lldiv@divisor,f
  5305  0851  3EFF               	addlw	-1
  5306  0852  1D03               	skipz
  5307  0853  284C               	goto	u4275
  5308  0854  3001               	movlw	1
  5309  0855  02AD               	subwf	___lldiv@counter,f
  5310  0856  1D03               	btfss	3,2
  5311  0857  2823               	goto	l4563
  5312  0858                     l4575:	
  5313  0858  082C               	movf	___lldiv@quotient+3,w
  5314  0859  00A3               	movwf	?___lldiv+3
  5315  085A  082B               	movf	___lldiv@quotient+2,w
  5316  085B  00A2               	movwf	?___lldiv+2
  5317  085C  082A               	movf	___lldiv@quotient+1,w
  5318  085D  00A1               	movwf	?___lldiv+1
  5319  085E  0829               	movf	___lldiv@quotient,w
  5320  085F  00A0               	movwf	?___lldiv
  5321  0860  0008               	return
  5322  0861                     __end_of___lldiv:	
  5323                           
  5324                           	psect	text13
  5325  003E                     __ptext13:	
  5326 ;; *************** function _Decodify_Command *****************
  5327 ;; Defined at:
  5328 ;;		line 304 in file "SlaveLiofilizadorVer1.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;		None
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  sizedata        1    3[BANK1 ] unsigned char 
  5333 ;;  add             1    2[BANK1 ] unsigned char 
  5334 ;;  add_24LCxxxx    4   11[BANK1 ] unsigned long 
  5335 ;;  OutPut          4    6[BANK1 ] float 
  5336 ;;  tempint         2    4[BANK1 ] int 
  5337 ;;  dados           2    0[BANK1 ] int 
  5338 ;;  tempchar        1   10[BANK1 ] unsigned char 
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      void 
  5341 ;; Registers used:
  5342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5343 ;; Tracked objects:
  5344 ;;		On entry : 300/100
  5345 ;;		On exit  : 200/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5348 ;;      Params:         0       0       0       0       0
  5349 ;;      Locals:         0       0      15       0       0
  5350 ;;      Temps:          0       4       0       0       0
  5351 ;;      Totals:         0       4      15       0       0
  5352 ;;Total ram usage:       19 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; Hardware stack levels required when called:    6
  5355 ;; This function calls:
  5356 ;;		_EEPROM_24C1025_Fill_All
  5357 ;;		_EEPROM_24C1025_Read_Buffer
  5358 ;;		_EEPROM_24C1025_Read_Byte
  5359 ;;		_EEPROM_24C1025_Read_Int
  5360 ;;		_EEPROM_24C1025_Read_Str
  5361 ;;		_EEPROM_24C1025_Write_Buffer
  5362 ;;		_EEPROM_24C1025_Write_Byte
  5363 ;;		_EEPROM_24C1025_Write_Int
  5364 ;;		_EEPROM_24C1025_Write_Str
  5365 ;;		_EEPROM_Read_Byte
  5366 ;;		_EEPROM_Read_Integer
  5367 ;;		_EEPROM_Read_String
  5368 ;;		_EEPROM_Write_Byte
  5369 ;;		_EEPROM_Write_Integer
  5370 ;;		_EEPROM_Write_String
  5371 ;;		_PROCULUS_Buzzer
  5372 ;;		_PROCULUS_Show_Screen
  5373 ;;		_PROCULUS_VP_Write_String
  5374 ;;		_Save_Log
  5375 ;;		_Send_Reply_OK
  5376 ;;		_Send_To_MB
  5377 ;;		_USART_put_buffer
  5378 ;;		_USART_put_int
  5379 ;;		_USART_put_string
  5380 ;;		_USART_putc
  5381 ;;		_USART_to_Protocol
  5382 ;;		___flmul
  5383 ;;		___fltol
  5384 ;;		_strcpy
  5385 ;;		_strlen
  5386 ;; This function is called by:
  5387 ;;		_main
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           
  5392                           ;psect for function _Decodify_Command
  5393  003E                     _Decodify_Command:	
  5394                           
  5395                           ;SlaveLiofilizadorVer1.c: 306:     int dados;;SlaveLiofilizadorVer1.c: 307:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 308:     int tempint;;SlaveLiofilizadorVer1.c: 309:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 310:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 322:     USART_to_Protocol(&usart_protocol);
  5396                           
  5397                           ;incstack = 0
  5398                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5399  003E  3090               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  5400  003F  160A  118A  22A1  120A  118A  	fcall	_USART_to_Protocol
  5401                           
  5402                           ;SlaveLiofilizadorVer1.c: 324:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  5403  0044  1683               	bsf	3,5	;RP0=1, select bank3
  5404  0045  1703               	bsf	3,6	;RP1=1, select bank3
  5405  0046  0817               	movf	(_usart_protocol^(0+384)+7),w
  5406  0047  1283               	bcf	3,5	;RP0=0, select bank0
  5407  0048  1303               	bcf	3,6	;RP1=0, select bank0
  5408  0049  00DF               	movwf	??_Decodify_Command
  5409  004A  085F               	movf	??_Decodify_Command,w
  5410  004B  1683               	bsf	3,5	;RP0=1, select bank1
  5411  004C  00E6               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  5412                           
  5413                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  5414  004D  1703               	bsf	3,6	;RP1=1, select bank3
  5415  004E  0818               	movf	(_usart_protocol^(0+384)+8),w
  5416  004F  1283               	bcf	3,5	;RP0=0, select bank0
  5417  0050  1303               	bcf	3,6	;RP1=0, select bank0
  5418  0051  00DF               	movwf	??_Decodify_Command
  5419  0052  085F               	movf	??_Decodify_Command,w
  5420  0053  1683               	bsf	3,5	;RP0=1, select bank1
  5421  0054  00E5               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  5422                           
  5423                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  5424  0055  1703               	bsf	3,6	;RP1=1, select bank3
  5425  0056  0819               	movf	(_usart_protocol^(0+384)+9),w
  5426  0057  1283               	bcf	3,5	;RP0=0, select bank0
  5427  0058  1303               	bcf	3,6	;RP1=0, select bank0
  5428  0059  00DF               	movwf	??_Decodify_Command
  5429  005A  085F               	movf	??_Decodify_Command,w
  5430  005B  1683               	bsf	3,5	;RP0=1, select bank1
  5431  005C  00E4               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  5432                           
  5433                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  5434  005D  1703               	bsf	3,6	;RP1=1, select bank3
  5435  005E  081A               	movf	(_usart_protocol^(0+384)+10),w
  5436  005F  1283               	bcf	3,5	;RP0=0, select bank0
  5437  0060  1303               	bcf	3,6	;RP1=0, select bank0
  5438  0061  00DF               	movwf	??_Decodify_Command
  5439  0062  085F               	movf	??_Decodify_Command,w
  5440  0063  1683               	bsf	3,5	;RP0=1, select bank1
  5441  0064  00E3               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  5442                           
  5443                           ;SlaveLiofilizadorVer1.c: 334:     switch(usart_protocol.command){
  5444  0065  2B88               	goto	l5567
  5445  0066                     l5405:	
  5446                           
  5447                           ;SlaveLiofilizadorVer1.c: 343:              strcpy(buffer,"v1.0.16");
  5448  0066  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  5449  0067  00DF               	movwf	??_Decodify_Command
  5450  0068  085F               	movf	??_Decodify_Command,w
  5451  0069  00A0               	movwf	strcpy@from
  5452  006A  30B7               	movlw	(low (_buffer| 0))& (0+255)
  5453  006B  160A  158A  25EB  120A  118A  	fcall	_strcpy
  5454                           
  5455                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  5456  0070  300B               	movlw	11
  5457  0071                     L7:	
  5458  0071  160A  158A  2717  120A  118A  	fcall	_Send_To_MB
  5459                           
  5460                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string(buffer);
  5461  0076  30B7               	movlw	(low (_buffer| 0))& (0+255)
  5462  0077  1283               	bcf	3,5	;RP0=0, select bank0
  5463  0078  00A1               	movwf	USART_put_string@vetor
  5464  0079  3000               	movlw	0
  5465  007A  00A2               	movwf	USART_put_string@vetor+1
  5466  007B  160A  158A  27CD   	fcall	_USART_put_string
  5467                           
  5468                           ;SlaveLiofilizadorVer1.c: 346:              break;
  5469  007E  0008               	return
  5470  007F                     l5411:	
  5471                           
  5472                           ;SlaveLiofilizadorVer1.c: 356:              if(usart_protocol.value[0]==0)
  5473  007F  1683               	bsf	3,5	;RP0=1, select bank3
  5474  0080  1703               	bsf	3,6	;RP1=1, select bank3
  5475  0081  0816               	movf	(_usart_protocol^(0+384)+6),w
  5476  0082  1D03               	btfss	3,2
  5477  0083  288D               	goto	l5415
  5478                           
  5479                           ;SlaveLiofilizadorVer1.c: 357:                 OutPut=Temperatura0;
  5480  0084  1303               	bcf	3,6	;RP1=0, select bank1
  5481  0085  0827               	movf	(_Temperatura0+3)^(0+128),w
  5482  0086  00E1               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  5483  0087  0826               	movf	(_Temperatura0+2)^(0+128),w
  5484  0088  00E0               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  5485  0089  0825               	movf	(_Temperatura0+1)^(0+128),w
  5486  008A  00DF               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  5487  008B  0824               	movf	_Temperatura0^(0+128),w
  5488  008C  2895               	goto	L5
  5489  008D                     l5415:	
  5490                           
  5491                           ;SlaveLiofilizadorVer1.c: 359:                 OutPut=Umidade1;
  5492  008D  1303               	bcf	3,6	;RP1=0, select bank1
  5493  008E  0823               	movf	(_Umidade1+3)^(0+128),w
  5494  008F  00E1               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  5495  0090  0822               	movf	(_Umidade1+2)^(0+128),w
  5496  0091  00E0               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  5497  0092  0821               	movf	(_Umidade1+1)^(0+128),w
  5498  0093  00DF               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  5499  0094  0820               	movf	_Umidade1^(0+128),w
  5500  0095                     L5:	
  5501  0095  00DE               	movwf	Decodify_Command@OutPut^(0+128)
  5502                           
  5503                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  5504  0096  3041               	movlw	65
  5505  0097  1283               	bcf	3,5	;RP0=0, select bank0
  5506  0098  00AC               	movwf	___flmul@b+3
  5507  0099  3020               	movlw	32
  5508  009A  00AB               	movwf	___flmul@b+2
  5509  009B  3000               	movlw	0
  5510  009C  00AA               	movwf	___flmul@b+1
  5511  009D  3000               	movlw	0
  5512  009E  00A9               	movwf	___flmul@b
  5513  009F  1683               	bsf	3,5	;RP0=1, select bank1
  5514  00A0  0861               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  5515  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  5516  00A2  00B0               	movwf	___flmul@a+3
  5517  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  5518  00A4  0860               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  5519  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  5520  00A6  00AF               	movwf	___flmul@a+2
  5521  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  5522  00A8  085F               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  5523  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  5524  00AA  00AE               	movwf	___flmul@a+1
  5525  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  5526  00AC  085E               	movf	Decodify_Command@OutPut^(0+128),w
  5527  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  5528  00AE  00AD               	movwf	___flmul@a
  5529  00AF  120A  118A  23DB  120A  118A  	fcall	___flmul
  5530  00B4  082C               	movf	?___flmul+3,w
  5531  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  5532  00B6  00E1               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  5533  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  5534  00B8  082B               	movf	?___flmul+2,w
  5535  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  5536  00BA  00E0               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  5537  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  5538  00BC  082A               	movf	?___flmul+1,w
  5539  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  5540  00BE  00DF               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  5541  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  5542  00C0  0829               	movf	?___flmul,w
  5543  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  5544  00C2  00DE               	movwf	Decodify_Command@OutPut^(0+128)
  5545                           
  5546                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  5547  00C3  138B               	bcf	11,7	;volatile
  5548                           
  5549                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  5550  00C4  3002               	movlw	2
  5551  00C5  160A  158A  2717  120A  118A  	fcall	_Send_To_MB
  5552                           
  5553                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  5554  00CA  0861               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  5555  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  5556  00CC  00C6               	movwf	___fltol@f1+3
  5557  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  5558  00CE  0860               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  5559  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  5560  00D0  00C5               	movwf	___fltol@f1+2
  5561  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  5562  00D2  085F               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  5563  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  5564  00D4  00C4               	movwf	___fltol@f1+1
  5565  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  5566  00D6  085E               	movf	Decodify_Command@OutPut^(0+128),w
  5567  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  5568  00D8  00C3               	movwf	___fltol@f1
  5569  00D9  160A  118A  23AD  120A  118A  	fcall	___fltol
  5570  00DE  0844               	movf	?___fltol+1,w
  5571  00DF  00CF               	movwf	USART_put_int@value+1
  5572  00E0  0843               	movf	?___fltol,w
  5573  00E1  00CE               	movwf	USART_put_int@value
  5574  00E2  160A  158A  254C   	fcall	_USART_put_int
  5575                           
  5576                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  5577  00E5  178B               	bsf	11,7	;volatile
  5578                           
  5579                           ;SlaveLiofilizadorVer1.c: 375:              break;
  5580  00E6  0008               	return
  5581  00E7                     l5427:	
  5582                           
  5583                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  5584  00E7  1683               	bsf	3,5	;RP0=1, select bank3
  5585  00E8  1703               	bsf	3,6	;RP1=1, select bank3
  5586  00E9  0816               	movf	(_usart_protocol^(0+384)+6),w
  5587  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  5588  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  5589  00EC  00DF               	movwf	??_Decodify_Command
  5590  00ED  085F               	movf	??_Decodify_Command,w
  5591  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  5592  00EF  00E6               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  5593                           
  5594                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  5595  00F0  1703               	bsf	3,6	;RP1=1, select bank3
  5596  00F1  0817               	movf	(_usart_protocol^(0+384)+7),w
  5597  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  5598  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  5599  00F4  00DF               	movwf	??_Decodify_Command
  5600  00F5  085F               	movf	??_Decodify_Command,w
  5601  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  5602  00F7  00E5               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  5603                           
  5604                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  5605  00F8  1703               	bsf	3,6	;RP1=1, select bank3
  5606  00F9  0818               	movf	(_usart_protocol^(0+384)+8),w
  5607  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  5608  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  5609  00FC  00DF               	movwf	??_Decodify_Command
  5610  00FD  085F               	movf	??_Decodify_Command,w
  5611  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  5612  00FF  00E4               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  5613                           
  5614                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  5615  0100  1703               	bsf	3,6	;RP1=1, select bank3
  5616  0101  0819               	movf	(_usart_protocol^(0+384)+9),w
  5617  0102  1283               	bcf	3,5	;RP0=0, select bank0
  5618  0103  1303               	bcf	3,6	;RP1=0, select bank0
  5619  0104  00DF               	movwf	??_Decodify_Command
  5620  0105  085F               	movf	??_Decodify_Command,w
  5621  0106  1683               	bsf	3,5	;RP0=1, select bank1
  5622  0107  00E3               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  5623                           
  5624                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  5625  0108  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5626  0109  1283               	bcf	3,5	;RP0=0, select bank0
  5627  010A  00DB               	movwf	Save_Log@add_datalog+3
  5628  010B  1683               	bsf	3,5	;RP0=1, select bank1
  5629  010C  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5630  010D  1283               	bcf	3,5	;RP0=0, select bank0
  5631  010E  00DA               	movwf	Save_Log@add_datalog+2
  5632  010F  1683               	bsf	3,5	;RP0=1, select bank1
  5633  0110  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5634  0111  1283               	bcf	3,5	;RP0=0, select bank0
  5635  0112  00D9               	movwf	Save_Log@add_datalog+1
  5636  0113  1683               	bsf	3,5	;RP0=1, select bank1
  5637  0114  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5638  0115  1283               	bcf	3,5	;RP0=0, select bank0
  5639  0116  00D8               	movwf	Save_Log@add_datalog
  5640  0117  160A  118A  234B   	fcall	_Save_Log
  5641                           
  5642                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  5643  011A  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  5644  011B  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  5645                           
  5646                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  5647  011C  1683               	bsf	3,5	;RP0=1, select bank1
  5648  011D  01B0               	clrf	_milisegundo^(0+128)	;volatile
  5649  011E  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
  5650                           
  5651                           ;SlaveLiofilizadorVer1.c: 387:              break;
  5652  011F  0008               	return
  5653  0120                     l5435:	
  5654                           
  5655                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  5656  0120  3002               	movlw	2
  5657  0121  160A  158A  2717  120A  118A  	fcall	_Send_To_MB
  5658                           
  5659                           ;SlaveLiofilizadorVer1.c: 405:              USART_put_int(2);
  5660  0126  3002               	movlw	2
  5661  0127  1283               	bcf	3,5	;RP0=0, select bank0
  5662  0128  00CE               	movwf	USART_put_int@value
  5663  0129  3000               	movlw	0
  5664  012A  00CF               	movwf	USART_put_int@value+1
  5665  012B  160A  158A  254C   	fcall	_USART_put_int
  5666                           
  5667                           ;SlaveLiofilizadorVer1.c: 411:              break;
  5668  012E  0008               	return
  5669  012F                     l5439:	
  5670                           
  5671                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  5672  012F  1683               	bsf	3,5	;RP0=1, select bank3
  5673  0130  1703               	bsf	3,6	;RP1=1, select bank3
  5674  0131  0817               	movf	(_usart_protocol^(0+384)+7),w
  5675  0132  1283               	bcf	3,5	;RP0=0, select bank0
  5676  0133  1303               	bcf	3,6	;RP1=0, select bank0
  5677  0134  00DF               	movwf	??_Decodify_Command
  5678  0135  085F               	movf	??_Decodify_Command,w
  5679  0136  00A0               	movwf	EEPROM_Write_Byte@dado
  5680  0137  1683               	bsf	3,5	;RP0=1, select bank3
  5681  0138  1703               	bsf	3,6	;RP1=1, select bank3
  5682  0139  0816               	movf	(_usart_protocol^(0+384)+6),w
  5683  013A  160A  118A  2167  120A  118A  	fcall	_EEPROM_Write_Byte
  5684  013F                     L6:	
  5685                           
  5686                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  5687  013F  3003               	movlw	3
  5688  0140  160A  158A  2717  120A  118A  	fcall	_Send_To_MB
  5689                           
  5690                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  5691  0145  160A  158A  24CD   	fcall	_Send_Reply_OK
  5692                           
  5693                           ;SlaveLiofilizadorVer1.c: 432:              break;
  5694  0148  0008               	return
  5695  0149                     l5443:	
  5696                           
  5697                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  5698  0149  1683               	bsf	3,5	;RP0=1, select bank3
  5699  014A  1703               	bsf	3,6	;RP1=1, select bank3
  5700  014B  0816               	movf	(_usart_protocol^(0+384)+6),w
  5701  014C  160A  158A  2688  120A  118A  	fcall	_EEPROM_Read_Byte
  5702  0151  1303               	bcf	3,6	;RP1=0, select bank0
  5703  0152  00DF               	movwf	??_Decodify_Command
  5704  0153  085F               	movf	??_Decodify_Command,w
  5705  0154  1683               	bsf	3,5	;RP0=1, select bank1
  5706  0155  00E2               	movwf	Decodify_Command@tempchar^(0+128)
  5707                           
  5708                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  5709  0156  3001               	movlw	1
  5710  0157  160A  158A  2717  120A  118A  	fcall	_Send_To_MB
  5711                           
  5712                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  5713  015C  0862               	movf	Decodify_Command@tempchar^(0+128),w
  5714  015D  160A  158A  2501   	fcall	_USART_putc
  5715                           
  5716                           ;SlaveLiofilizadorVer1.c: 437:              break;
  5717  0160  0008               	return
  5718  0161                     l5449:	
  5719                           
  5720                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  5721  0161  1683               	bsf	3,5	;RP0=1, select bank3
  5722  0162  1703               	bsf	3,6	;RP1=1, select bank3
  5723  0163  0816               	movf	(_usart_protocol^(0+384)+6),w
  5724  0164  1283               	bcf	3,5	;RP0=0, select bank0
  5725  0165  1303               	bcf	3,6	;RP1=0, select bank0
  5726  0166  00DF               	movwf	??_Decodify_Command
  5727  0167  085F               	movf	??_Decodify_Command,w
  5728  0168  1683               	bsf	3,5	;RP0=1, select bank1
  5729  0169  00DA               	movwf	Decodify_Command@add^(0+128)
  5730                           
  5731                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  5732  016A  1703               	bsf	3,6	;RP1=1, select bank3
  5733  016B  0818               	movf	(_usart_protocol^(0+384)+8),w
  5734  016C  1283               	bcf	3,5	;RP0=0, select bank0
  5735  016D  1303               	bcf	3,6	;RP1=0, select bank0
  5736  016E  00DF               	movwf	??_Decodify_Command
  5737  016F  01E0               	clrf	??_Decodify_Command+1
  5738  0170  1683               	bsf	3,5	;RP0=1, select bank3
  5739  0171  1703               	bsf	3,6	;RP1=1, select bank3
  5740  0172  0817               	movf	(_usart_protocol^(0+384)+7),w
  5741  0173  1283               	bcf	3,5	;RP0=0, select bank0
  5742  0174  1303               	bcf	3,6	;RP1=0, select bank0
  5743  0175  00E1               	movwf	??_Decodify_Command+2
  5744  0176  01E2               	clrf	??_Decodify_Command+3
  5745  0177  0861               	movf	??_Decodify_Command+2,w
  5746  0178  00E2               	movwf	??_Decodify_Command+3
  5747  0179  01E1               	clrf	??_Decodify_Command+2
  5748  017A  085F               	movf	??_Decodify_Command,w
  5749  017B  0461               	iorwf	??_Decodify_Command+2,w
  5750  017C  1683               	bsf	3,5	;RP0=1, select bank1
  5751  017D  00D8               	movwf	Decodify_Command@dados^(0+128)
  5752  017E  1283               	bcf	3,5	;RP0=0, select bank0
  5753  017F  0860               	movf	??_Decodify_Command+1,w
  5754  0180  0462               	iorwf	??_Decodify_Command+3,w
  5755  0181  1683               	bsf	3,5	;RP0=1, select bank1
  5756  0182  00D9               	movwf	(Decodify_Command@dados+1)^(0+128)
  5757                           
  5758                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  5759  0183  0859               	movf	(Decodify_Command@dados+1)^(0+128),w
  5760  0184  1283               	bcf	3,5	;RP0=0, select bank0
  5761  0185  00A6               	movwf	EEPROM_Write_Integer@dado+1
  5762  0186  1683               	bsf	3,5	;RP0=1, select bank1
  5763  0187  0858               	movf	Decodify_Command@dados^(0+128),w
  5764  0188  1283               	bcf	3,5	;RP0=0, select bank0
  5765  0189  00A5               	movwf	EEPROM_Write_Integer@dado
  5766  018A  1683               	bsf	3,5	;RP0=1, select bank1
  5767  018B  085A               	movf	Decodify_Command@add^(0+128),w
  5768  018C  160A  158A  279B  120A  118A  	fcall	_EEPROM_Write_Integer
  5769  0191  293F               	goto	L6
  5770  0192                     l5459:	
  5771                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  5772                           
  5773                           
  5774                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  5775  0192  1683               	bsf	3,5	;RP0=1, select bank3
  5776  0193  1703               	bsf	3,6	;RP1=1, select bank3
  5777  0194  0816               	movf	(_usart_protocol^(0+384)+6),w
  5778  0195  160A  158A  2740  120A  118A  	fcall	_EEPROM_Read_Integer
  5779  019A  0824               	movf	?_EEPROM_Read_Integer+1,w
  5780  019B  1683               	bsf	3,5	;RP0=1, select bank1
  5781  019C  00DD               	movwf	(Decodify_Command@tempint+1)^(0+128)
  5782  019D  1283               	bcf	3,5	;RP0=0, select bank0
  5783  019E  0823               	movf	?_EEPROM_Read_Integer,w
  5784  019F                     L8:	
  5785  019F  1683               	bsf	3,5	;RP0=1, select bank1
  5786  01A0  00DC               	movwf	Decodify_Command@tempint^(0+128)
  5787                           
  5788                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  5789  01A1  3002               	movlw	2
  5790  01A2  160A  158A  2717  120A  118A  	fcall	_Send_To_MB
  5791                           
  5792                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  5793  01A7  085D               	movf	(Decodify_Command@tempint+1)^(0+128),w
  5794  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  5795  01A9  00CF               	movwf	USART_put_int@value+1
  5796  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  5797  01AB  085C               	movf	Decodify_Command@tempint^(0+128),w
  5798  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  5799  01AD  00CE               	movwf	USART_put_int@value
  5800  01AE  160A  158A  254C   	fcall	_USART_put_int
  5801                           
  5802                           ;SlaveLiofilizadorVer1.c: 452:              break;
  5803  01B1  0008               	return
  5804  01B2                     l5465:	
  5805                           
  5806                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  5807  01B2  3097               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  5808  01B3  00DF               	movwf	??_Decodify_Command
  5809  01B4  085F               	movf	??_Decodify_Command,w
  5810  01B5  00A5               	movwf	EEPROM_Write_String@dado
  5811  01B6  1683               	bsf	3,5	;RP0=1, select bank3
  5812  01B7  1703               	bsf	3,6	;RP1=1, select bank3
  5813  01B8  0816               	movf	(_usart_protocol^(0+384)+6),w
  5814  01B9  160A  118A  2060  120A  118A  	fcall	_EEPROM_Write_String
  5815  01BE  293F               	goto	L6
  5816  01BF                     l5471:	
  5817                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  5818                           
  5819                           
  5820                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 462:             
      +                           EEPROM_Read_String(usart_protocol.value[0],buffer);
  5821  01BF  30B7               	movlw	(low (_buffer| 0))& (0+255)
  5822  01C0  00DF               	movwf	??_Decodify_Command
  5823  01C1  085F               	movf	??_Decodify_Command,w
  5824  01C2  00A3               	movwf	EEPROM_Read_String@dado
  5825  01C3  1683               	bsf	3,5	;RP0=1, select bank3
  5826  01C4  1703               	bsf	3,6	;RP1=1, select bank3
  5827  01C5  0816               	movf	(_usart_protocol^(0+384)+6),w
  5828  01C6  160A  158A  2647  120A  118A  	fcall	_EEPROM_Read_String
  5829                           
  5830                           ;SlaveLiofilizadorVer1.c: 463:              Send_To_MB(sizeof(buffer));
  5831  01CB  3021               	movlw	33
  5832  01CC  2871               	goto	L7
  5833  01CD                     l5477:	
  5834                           
  5835                           ;SlaveLiofilizadorVer1.c: 470:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  5836  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  5837  01CE  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5838  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  5839  01D0  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  5840  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  5841  01D2  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5842  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  5843  01D4  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  5844  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  5845  01D6  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5846  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  5847  01D8  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  5848  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  5849  01DA  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5850  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  5851  01DC  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  5852  01DD  1683               	bsf	3,5	;RP0=1, select bank3
  5853  01DE  1703               	bsf	3,6	;RP1=1, select bank3
  5854  01DF  081B               	movf	(_usart_protocol^(0+384)+11),w
  5855  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  5856  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  5857  01E2  00DF               	movwf	??_Decodify_Command
  5858  01E3  085F               	movf	??_Decodify_Command,w
  5859  01E4  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  5860  01E5  1683               	bsf	3,5	;RP0=1, select bank3
  5861  01E6  1703               	bsf	3,6	;RP1=1, select bank3
  5862  01E7  0816               	movf	(_usart_protocol^(0+384)+6),w
  5863  01E8  160A  158A  2536  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  5864  01ED  293F               	goto	L6
  5865  01EE                     l5483:	
  5866                           ;SlaveLiofilizadorVer1.c: 473:              Send_To_MB(3);
  5867                           
  5868                           
  5869                           ;SlaveLiofilizadorVer1.c: 477:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  5870  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  5871  01EF  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5872  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  5873  01F1  00BA               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  5874  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  5875  01F3  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5876  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  5877  01F5  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  5878  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  5879  01F7  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5880  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  5881  01F9  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  5882  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  5883  01FB  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5884  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  5885  01FD  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  5886  01FE  1683               	bsf	3,5	;RP0=1, select bank3
  5887  01FF  1703               	bsf	3,6	;RP1=1, select bank3
  5888  0200  0816               	movf	(_usart_protocol^(0+384)+6),w
  5889  0201  160A  158A  2562  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  5890  0206  00DF               	movwf	??_Decodify_Command
  5891  0207  085F               	movf	??_Decodify_Command,w
  5892  0208  1683               	bsf	3,5	;RP0=1, select bank1
  5893  0209  00E2               	movwf	Decodify_Command@tempchar^(0+128)
  5894                           
  5895                           ;SlaveLiofilizadorVer1.c: 481:              Send_To_MB(1);
  5896  020A  3001               	movlw	1
  5897  020B  160A  158A  2717  120A  118A  	fcall	_Send_To_MB
  5898                           
  5899                           ;SlaveLiofilizadorVer1.c: 482:              USART_putc(tempchar);
  5900  0210  0862               	movf	Decodify_Command@tempchar^(0+128),w
  5901  0211  160A  158A  2501   	fcall	_USART_putc
  5902                           
  5903                           ;SlaveLiofilizadorVer1.c: 483:              break;
  5904  0214  0008               	return
  5905  0215                     l5489:	
  5906                           
  5907                           ;SlaveLiofilizadorVer1.c: 485:              {;SlaveLiofilizadorVer1.c: 486:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  5908  0215  1683               	bsf	3,5	;RP0=1, select bank1
  5909  0216  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5910  0217  1283               	bcf	3,5	;RP0=0, select bank0
  5911  0218  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  5912  0219  1683               	bsf	3,5	;RP0=1, select bank1
  5913  021A  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5914  021B  1283               	bcf	3,5	;RP0=0, select bank0
  5915  021C  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  5916  021D  1683               	bsf	3,5	;RP0=1, select bank1
  5917  021E  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5918  021F  1283               	bcf	3,5	;RP0=0, select bank0
  5919  0220  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  5920  0221  1683               	bsf	3,5	;RP0=1, select bank1
  5921  0222  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5922  0223  1283               	bcf	3,5	;RP0=0, select bank0
  5923  0224  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  5924  0225  1683               	bsf	3,5	;RP0=1, select bank3
  5925  0226  1703               	bsf	3,6	;RP1=1, select bank3
  5926  0227  081C               	movf	(_usart_protocol^(0+384)+12),w
  5927  0228  1283               	bcf	3,5	;RP0=0, select bank0
  5928  0229  1303               	bcf	3,6	;RP1=0, select bank0
  5929  022A  00DF               	movwf	??_Decodify_Command
  5930  022B  01E0               	clrf	??_Decodify_Command+1
  5931  022C  1683               	bsf	3,5	;RP0=1, select bank3
  5932  022D  1703               	bsf	3,6	;RP1=1, select bank3
  5933  022E  081B               	movf	(_usart_protocol^(0+384)+11),w
  5934  022F  1283               	bcf	3,5	;RP0=0, select bank0
  5935  0230  1303               	bcf	3,6	;RP1=0, select bank0
  5936  0231  00E1               	movwf	??_Decodify_Command+2
  5937  0232  01E2               	clrf	??_Decodify_Command+3
  5938  0233  0861               	movf	??_Decodify_Command+2,w
  5939  0234  00E2               	movwf	??_Decodify_Command+3
  5940  0235  01E1               	clrf	??_Decodify_Command+2
  5941  0236  085F               	movf	??_Decodify_Command,w
  5942  0237  0461               	iorwf	??_Decodify_Command+2,w
  5943  0238  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  5944  0239  0860               	movf	??_Decodify_Command+1,w
  5945  023A  0462               	iorwf	??_Decodify_Command+3,w
  5946  023B  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  5947  023C  1683               	bsf	3,5	;RP0=1, select bank3
  5948  023D  1703               	bsf	3,6	;RP1=1, select bank3
  5949  023E  0816               	movf	(_usart_protocol^(0+384)+6),w
  5950  023F  160A  158A  2627  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  5951  0244  293F               	goto	L6
  5952  0245                     l5495:	
  5953                           ;SlaveLiofilizadorVer1.c: 491:              Send_To_MB(3);
  5954                           
  5955                           
  5956                           ;SlaveLiofilizadorVer1.c: 496:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  5957  0245  1683               	bsf	3,5	;RP0=1, select bank1
  5958  0246  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5959  0247  1283               	bcf	3,5	;RP0=0, select bank0
  5960  0248  00BA               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  5961  0249  1683               	bsf	3,5	;RP0=1, select bank1
  5962  024A  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5963  024B  1283               	bcf	3,5	;RP0=0, select bank0
  5964  024C  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  5965  024D  1683               	bsf	3,5	;RP0=1, select bank1
  5966  024E  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5967  024F  1283               	bcf	3,5	;RP0=0, select bank0
  5968  0250  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  5969  0251  1683               	bsf	3,5	;RP0=1, select bank1
  5970  0252  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5971  0253  1283               	bcf	3,5	;RP0=0, select bank0
  5972  0254  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add
  5973  0255  1683               	bsf	3,5	;RP0=1, select bank3
  5974  0256  1703               	bsf	3,6	;RP1=1, select bank3
  5975  0257  0816               	movf	(_usart_protocol^(0+384)+6),w
  5976  0258  160A  158A  26EF  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  5977  025D  0838               	movf	?_EEPROM_24C1025_Read_Int+1,w
  5978  025E  1683               	bsf	3,5	;RP0=1, select bank1
  5979  025F  00DD               	movwf	(Decodify_Command@tempint+1)^(0+128)
  5980  0260  1283               	bcf	3,5	;RP0=0, select bank0
  5981  0261  0837               	movf	?_EEPROM_24C1025_Read_Int,w
  5982  0262  299F               	goto	L8
  5983  0263                     l5501:	
  5984                           ;SlaveLiofilizadorVer1.c: 498:              Send_To_MB(2);
  5985                           
  5986                           
  5987                           ;SlaveLiofilizadorVer1.c: 504:              {;SlaveLiofilizadorVer1.c: 505:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 506:              sizedata=usart_protocol.value
      +                          [5];
  5988  0263  1683               	bsf	3,5	;RP0=1, select bank3
  5989  0264  1703               	bsf	3,6	;RP1=1, select bank3
  5990  0265  081B               	movf	(_usart_protocol^(0+384)+11),w
  5991  0266  1283               	bcf	3,5	;RP0=0, select bank0
  5992  0267  1303               	bcf	3,6	;RP1=0, select bank0
  5993  0268  00DF               	movwf	??_Decodify_Command
  5994  0269  085F               	movf	??_Decodify_Command,w
  5995  026A  1683               	bsf	3,5	;RP0=1, select bank1
  5996  026B  00DB               	movwf	Decodify_Command@sizedata^(0+128)
  5997                           
  5998                           ;SlaveLiofilizadorVer1.c: 507:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  5999  026C  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6000  026D  1283               	bcf	3,5	;RP0=0, select bank0
  6001  026E  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  6002  026F  1683               	bsf	3,5	;RP0=1, select bank1
  6003  0270  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6004  0271  1283               	bcf	3,5	;RP0=0, select bank0
  6005  0272  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  6006  0273  1683               	bsf	3,5	;RP0=1, select bank1
  6007  0274  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6008  0275  1283               	bcf	3,5	;RP0=0, select bank0
  6009  0276  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  6010  0277  1683               	bsf	3,5	;RP0=1, select bank1
  6011  0278  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6012  0279  1283               	bcf	3,5	;RP0=0, select bank0
  6013  027A  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  6014  027B  1683               	bsf	3,5	;RP0=1, select bank1
  6015  027C  085B               	movf	Decodify_Command@sizedata^(0+128),w
  6016  027D  1283               	bcf	3,5	;RP0=0, select bank0
  6017  027E  00DF               	movwf	??_Decodify_Command
  6018  027F  085F               	movf	??_Decodify_Command,w
  6019  0280  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  6020  0281  30B7               	movlw	(low (_buffer| 0))& (0+255)
  6021  0282  00E0               	movwf	??_Decodify_Command+1
  6022  0283  0860               	movf	??_Decodify_Command+1,w
  6023  0284  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
  6024  0285  1683               	bsf	3,5	;RP0=1, select bank3
  6025  0286  1703               	bsf	3,6	;RP1=1, select bank3
  6026  0287  0816               	movf	(_usart_protocol^(0+384)+6),w
  6027  0288  120A  158A  22C0  120A  118A  	fcall	_EEPROM_24C1025_Read_Buffer
  6028                           
  6029                           ;SlaveLiofilizadorVer1.c: 512:              Send_To_MB(5);
  6030  028D  3005               	movlw	5
  6031  028E  160A  158A  2717  120A  118A  	fcall	_Send_To_MB
  6032                           
  6033                           ;SlaveLiofilizadorVer1.c: 513:              USART_put_buffer(buffer,sizedata);
  6034  0293  085B               	movf	Decodify_Command@sizedata^(0+128),w
  6035  0294  1283               	bcf	3,5	;RP0=0, select bank0
  6036  0295  00DF               	movwf	??_Decodify_Command
  6037  0296  085F               	movf	??_Decodify_Command,w
  6038  0297  00A1               	movwf	USART_put_buffer@size
  6039  0298  30B7               	movlw	(low (_buffer| 0))& (0+255)
  6040  0299  160A  158A  25CE   	fcall	_USART_put_buffer
  6041                           
  6042                           ;SlaveLiofilizadorVer1.c: 514:              };SlaveLiofilizadorVer1.c: 515:             
      +                           break;
  6043  029C  0008               	return
  6044  029D                     l5509:	
  6045                           
  6046                           ;SlaveLiofilizadorVer1.c: 518:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6047  029D  1683               	bsf	3,5	;RP0=1, select bank1
  6048  029E  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6049  029F  1283               	bcf	3,5	;RP0=0, select bank0
  6050  02A0  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6051  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  6052  02A2  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6053  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  6054  02A4  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6055  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  6056  02A6  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6057  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  6058  02A8  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6059  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  6060  02AA  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6061  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  6062  02AC  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6063  02AD  1683               	bsf	3,5	;RP0=1, select bank3
  6064  02AE  1703               	bsf	3,6	;RP1=1, select bank3
  6065  02AF  081B               	movf	(_usart_protocol^(0+384)+11),w
  6066  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  6067  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  6068  02B2  00DF               	movwf	??_Decodify_Command
  6069  02B3  085F               	movf	??_Decodify_Command,w
  6070  02B4  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6071  02B5  309C               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6072  02B6  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6073  02B7  3001               	movlw	1
  6074  02B8  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6075  02B9  1683               	bsf	3,5	;RP0=1, select bank3
  6076  02BA  1703               	bsf	3,6	;RP1=1, select bank3
  6077  02BB  0816               	movf	(_usart_protocol^(0+384)+6),w
  6078  02BC  160A  118A  2696  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6079  02C1  293F               	goto	L6
  6080  02C2                     l5515:	
  6081                           ;SlaveLiofilizadorVer1.c: 523:              Send_To_MB(3);
  6082                           
  6083                           
  6084                           ;SlaveLiofilizadorVer1.c: 528:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6085  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  6086  02C3  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6087  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  6088  02C5  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6089  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  6090  02C7  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6091  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  6092  02C9  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6093  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  6094  02CB  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6095  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  6096  02CD  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6097  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  6098  02CF  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6099  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  6100  02D1  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6101  02D2  309B               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6102  02D3  00DF               	movwf	??_Decodify_Command
  6103  02D4  085F               	movf	??_Decodify_Command,w
  6104  02D5  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6105  02D6  1683               	bsf	3,5	;RP0=1, select bank3
  6106  02D7  1703               	bsf	3,6	;RP1=1, select bank3
  6107  02D8  0816               	movf	(_usart_protocol^(0+384)+6),w
  6108  02D9  120A  158A  2061  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6109  02DE  293F               	goto	L6
  6110  02DF                     l5521:	
  6111                           ;SlaveLiofilizadorVer1.c: 531:              Send_To_MB(3);
  6112                           
  6113                           
  6114                           ;SlaveLiofilizadorVer1.c: 535:              {;SlaveLiofilizadorVer1.c: 536:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6115  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  6116  02E0  0866               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6117  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  6118  02E2  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6119  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  6120  02E4  0865               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6121  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  6122  02E6  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6123  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  6124  02E8  0864               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6125  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  6126  02EA  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6127  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  6128  02EC  0863               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6129  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  6130  02EE  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6131  02EF  30B7               	movlw	(low (_buffer| 0))& (0+255)
  6132  02F0  00DF               	movwf	??_Decodify_Command
  6133  02F1  085F               	movf	??_Decodify_Command,w
  6134  02F2  00AD               	movwf	EEPROM_24C1025_Read_Str@buffer
  6135  02F3  1683               	bsf	3,5	;RP0=1, select bank3
  6136  02F4  1703               	bsf	3,6	;RP1=1, select bank3
  6137  02F5  0816               	movf	(_usart_protocol^(0+384)+6),w
  6138  02F6  120A  158A  2154  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6139                           
  6140                           ;SlaveLiofilizadorVer1.c: 540:              Send_To_MB(strlen(buffer)+1);
  6141  02FB  30B7               	movlw	(low (_buffer| 0))& (0+255)
  6142  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  6143  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  6144  02FE  00A0               	movwf	strlen@s
  6145  02FF  3000               	movlw	0
  6146  0300  00A1               	movwf	strlen@s+1
  6147  0301  160A  158A  2595  120A  118A  	fcall	_strlen
  6148  0306  0820               	movf	?_strlen,w
  6149  0307  3E01               	addlw	1
  6150  0308  2871               	goto	L7
  6151  0309                     l5525:	
  6152                           
  6153                           ;SlaveLiofilizadorVer1.c: 546:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  6154  0309  1683               	bsf	3,5	;RP0=1, select bank3
  6155  030A  1703               	bsf	3,6	;RP1=1, select bank3
  6156  030B  0817               	movf	(_usart_protocol^(0+384)+7),w
  6157  030C  1283               	bcf	3,5	;RP0=0, select bank0
  6158  030D  1303               	bcf	3,6	;RP1=0, select bank0
  6159  030E  00DF               	movwf	??_Decodify_Command
  6160  030F  01E0               	clrf	??_Decodify_Command+1
  6161  0310  085F               	movf	??_Decodify_Command,w
  6162  0311  00D8               	movwf	EEPROM_24C1025_Fill_All@value
  6163  0312  0860               	movf	??_Decodify_Command+1,w
  6164  0313  00D9               	movwf	EEPROM_24C1025_Fill_All@value+1
  6165  0314  1683               	bsf	3,5	;RP0=1, select bank3
  6166  0315  1703               	bsf	3,6	;RP1=1, select bank3
  6167  0316  0816               	movf	(_usart_protocol^(0+384)+6),w
  6168  0317  160A  118A  221B  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  6169  031C  293F               	goto	L6
  6170  031D                     l5531:	
  6171                           ;SlaveLiofilizadorVer1.c: 548:              Send_To_MB(3);
  6172                           
  6173                           
  6174                           ;SlaveLiofilizadorVer1.c: 553:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  6175  031D  1683               	bsf	3,5	;RP0=1, select bank3
  6176  031E  1703               	bsf	3,6	;RP1=1, select bank3
  6177  031F  0816               	movf	(_usart_protocol^(0+384)+6),w
  6178  0320  1283               	bcf	3,5	;RP0=0, select bank0
  6179  0321  1303               	bcf	3,6	;RP1=0, select bank0
  6180  0322  00DF               	movwf	??_Decodify_Command
  6181  0323  01E0               	clrf	??_Decodify_Command+1
  6182  0324  085F               	movf	??_Decodify_Command,w
  6183  0325  00D6               	movwf	PROCULUS_Show_Screen@screen
  6184  0326  0860               	movf	??_Decodify_Command+1,w
  6185  0327  00D7               	movwf	PROCULUS_Show_Screen@screen+1
  6186  0328  120A  118A  27EB  120A  118A  	fcall	_PROCULUS_Show_Screen
  6187  032D  293F               	goto	L6
  6188  032E                     l5537:	
  6189                           ;SlaveLiofilizadorVer1.c: 554:              Send_To_MB(3);
  6190                           
  6191                           
  6192                           ;SlaveLiofilizadorVer1.c: 559:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  6193  032E  1683               	bsf	3,5	;RP0=1, select bank3
  6194  032F  1703               	bsf	3,6	;RP1=1, select bank3
  6195  0330  0816               	movf	(_usart_protocol^(0+384)+6),w
  6196  0331  1283               	bcf	3,5	;RP0=0, select bank0
  6197  0332  1303               	bcf	3,6	;RP1=0, select bank0
  6198  0333  00DF               	movwf	??_Decodify_Command
  6199  0334  01E0               	clrf	??_Decodify_Command+1
  6200  0335  085F               	movf	??_Decodify_Command,w
  6201  0336  00E0               	movwf	??_Decodify_Command+1
  6202  0337  01DF               	clrf	??_Decodify_Command
  6203  0338  1683               	bsf	3,5	;RP0=1, select bank3
  6204  0339  1703               	bsf	3,6	;RP1=1, select bank3
  6205  033A  0817               	movf	(_usart_protocol^(0+384)+7),w
  6206  033B  1283               	bcf	3,5	;RP0=0, select bank0
  6207  033C  1303               	bcf	3,6	;RP1=0, select bank0
  6208  033D  075F               	addwf	??_Decodify_Command,w
  6209  033E  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  6210  033F  3000               	movlw	0
  6211  0340  1803               	skipnc
  6212  0341  3001               	movlw	1
  6213  0342  0760               	addwf	??_Decodify_Command+1,w
  6214  0343  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  6215  0344  160A  158A  26AA  120A  118A  	fcall	_PROCULUS_Buzzer
  6216  0349  293F               	goto	L6
  6217  034A                     l5543:	
  6218                           ;SlaveLiofilizadorVer1.c: 561:              Send_To_MB(3);
  6219                           
  6220                           
  6221                           ;SlaveLiofilizadorVer1.c: 565:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  6222  034A  1683               	bsf	3,5	;RP0=1, select bank3
  6223  034B  1703               	bsf	3,6	;RP1=1, select bank3
  6224  034C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6225  034D  1283               	bcf	3,5	;RP0=0, select bank0
  6226  034E  1303               	bcf	3,6	;RP1=0, select bank0
  6227  034F  00DF               	movwf	??_Decodify_Command
  6228  0350  01E0               	clrf	??_Decodify_Command+1
  6229  0351  085F               	movf	??_Decodify_Command,w
  6230  0352  00E0               	movwf	??_Decodify_Command+1
  6231  0353  01DF               	clrf	??_Decodify_Command
  6232  0354  1683               	bsf	3,5	;RP0=1, select bank3
  6233  0355  1703               	bsf	3,6	;RP1=1, select bank3
  6234  0356  0817               	movf	(_usart_protocol^(0+384)+7),w
  6235  0357  1283               	bcf	3,5	;RP0=0, select bank0
  6236  0358  1303               	bcf	3,6	;RP1=0, select bank0
  6237  0359  075F               	addwf	??_Decodify_Command,w
  6238  035A  00DA               	movwf	PROCULUS_VP_Write_String@vp
  6239  035B  3000               	movlw	0
  6240  035C  1803               	skipnc
  6241  035D  3001               	movlw	1
  6242  035E  0760               	addwf	??_Decodify_Command+1,w
  6243  035F  00DB               	movwf	PROCULUS_VP_Write_String@vp+1
  6244  0360  3098               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  6245  0361  00E1               	movwf	??_Decodify_Command+2
  6246  0362  0861               	movf	??_Decodify_Command+2,w
  6247  0363  00DC               	movwf	PROCULUS_VP_Write_String@text
  6248  0364  160A  158A  257B  120A  118A  	fcall	_PROCULUS_VP_Write_String
  6249  0369  293F               	goto	L6
  6250  036A                     l5549:	
  6251                           ;SlaveLiofilizadorVer1.c: 568:              Send_To_MB(3);
  6252                           
  6253                           
  6254                           ;SlaveLiofilizadorVer1.c: 574:              if(usart_protocol.value[0]==0)
  6255  036A  1683               	bsf	3,5	;RP0=1, select bank3
  6256  036B  1703               	bsf	3,6	;RP1=1, select bank3
  6257  036C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6258  036D  1D03               	btfss	3,2
  6259  036E  2B7A               	goto	l5555
  6260                           
  6261                           ;SlaveLiofilizadorVer1.c: 575:                 {;SlaveLiofilizadorVer1.c: 576:          
      +                                 if(!usart_protocol.value[1])
  6262  036F  0817               	movf	(_usart_protocol^(0+384)+7),w
  6263  0370  1D03               	btfss	3,2
  6264  0371  2B76               	goto	l408
  6265                           
  6266                           ;SlaveLiofilizadorVer1.c: 577:                    PORTCbits.RC0=0;
  6267  0372  1283               	bcf	3,5	;RP0=0, select bank0
  6268  0373  1303               	bcf	3,6	;RP1=0, select bank0
  6269  0374  1007               	bcf	7,0	;volatile
  6270  0375  293F               	goto	L6
  6271  0376                     l408:	
  6272                           ;SlaveLiofilizadorVer1.c: 578:                 else
  6273                           
  6274                           
  6275                           ;SlaveLiofilizadorVer1.c: 579:                    PORTCbits.RC0=1;
  6276  0376  1283               	bcf	3,5	;RP0=0, select bank0
  6277  0377  1303               	bcf	3,6	;RP1=0, select bank0
  6278  0378  1407               	bsf	7,0	;volatile
  6279  0379  293F               	goto	L6
  6280  037A                     l5555:	
  6281  037A  0316               	decf	(_usart_protocol^(0+384)+6),w
  6282  037B  1D03               	btfss	3,2
  6283  037C  293F               	goto	L6
  6284                           
  6285                           ;SlaveLiofilizadorVer1.c: 582:                      {;SlaveLiofilizadorVer1.c: 583:     
      +                                            if(!usart_protocol.value[1])
  6286  037D  0817               	movf	(_usart_protocol^(0+384)+7),w
  6287  037E  1D03               	btfss	3,2
  6288  037F  2B84               	goto	l412
  6289                           
  6290                           ;SlaveLiofilizadorVer1.c: 584:                          PORTCbits.RC1=0;
  6291  0380  1283               	bcf	3,5	;RP0=0, select bank0
  6292  0381  1303               	bcf	3,6	;RP1=0, select bank0
  6293  0382  1087               	bcf	7,1	;volatile
  6294  0383  293F               	goto	L6
  6295  0384                     l412:	
  6296                           ;SlaveLiofilizadorVer1.c: 585:                       else
  6297                           
  6298                           
  6299                           ;SlaveLiofilizadorVer1.c: 586:                          PORTCbits.RC1=1;
  6300  0384  1283               	bcf	3,5	;RP0=0, select bank0
  6301  0385  1303               	bcf	3,6	;RP1=0, select bank0
  6302  0386  1487               	bsf	7,1	;volatile
  6303  0387  293F               	goto	L6
  6304  0388                     l5567:	
  6305                           ;SlaveLiofilizadorVer1.c: 588:              Send_To_MB(3);
  6306                           
  6307  0388  1703               	bsf	3,6	;RP1=1, select bank3
  6308  0389  0814               	movf	(_usart_protocol^(0+384)+4),w
  6309  038A  1283               	bcf	3,5	;RP0=0, select bank0
  6310  038B  1303               	bcf	3,6	;RP1=0, select bank0
  6311  038C  00DF               	movwf	??_Decodify_Command
  6312  038D  01E0               	clrf	??_Decodify_Command+1
  6313                           
  6314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6315                           ; Switch size 1, requested type "simple"
  6316                           ; Number of cases is 1, Range of values is 0 to 0
  6317                           ; switch strategies available:
  6318                           ; Name         Instructions Cycles
  6319                           ; simple_byte            4     3 (average)
  6320                           ; direct_byte           11     8 (fixed)
  6321                           ; jumptable            260     6 (fixed)
  6322                           ;	Chosen strategy is simple_byte
  6323  038E  0860               	movf	??_Decodify_Command+1,w
  6324  038F  3A00               	xorlw	0	; case 0
  6325  0390  1903               	skipnz
  6326  0391  2B93               	goto	l5725
  6327  0392  2BDA               	goto	l414
  6328  0393                     l5725:	
  6329                           
  6330                           ; Switch size 1, requested type "simple"
  6331                           ; Number of cases is 23, Range of values is 2 to 65
  6332                           ; switch strategies available:
  6333                           ; Name         Instructions Cycles
  6334                           ; simple_byte           70    36 (average)
  6335                           ; direct_byte          203    11 (fixed)
  6336                           ; jumptable            263     9 (fixed)
  6337                           ;	Chosen strategy is simple_byte
  6338  0393  085F               	movf	??_Decodify_Command,w
  6339  0394  3A02               	xorlw	2	; case 2
  6340  0395  1903               	skipnz
  6341  0396  28E7               	goto	l5427
  6342  0397  3A01               	xorlw	1	; case 3
  6343  0398  1903               	skipnz
  6344  0399  2920               	goto	l5435
  6345  039A  3A0B               	xorlw	11	; case 8
  6346  039B  1903               	skipnz
  6347  039C  292F               	goto	l5439
  6348  039D  3A01               	xorlw	1	; case 9
  6349  039E  1903               	skipnz
  6350  039F  2949               	goto	l5443
  6351  03A0  3A03               	xorlw	3	; case 10
  6352  03A1  1903               	skipnz
  6353  03A2  2961               	goto	l5449
  6354  03A3  3A01               	xorlw	1	; case 11
  6355  03A4  1903               	skipnz
  6356  03A5  2992               	goto	l5459
  6357  03A6  3A07               	xorlw	7	; case 12
  6358  03A7  1903               	skipnz
  6359  03A8  29B2               	goto	l5465
  6360  03A9  3A01               	xorlw	1	; case 13
  6361  03AA  1903               	skipnz
  6362  03AB  29BF               	goto	l5471
  6363  03AC  3A1C               	xorlw	28	; case 17
  6364  03AD  1903               	skipnz
  6365  03AE  29CD               	goto	l5477
  6366  03AF  3A03               	xorlw	3	; case 18
  6367  03B0  1903               	skipnz
  6368  03B1  29EE               	goto	l5483
  6369  03B2  3A01               	xorlw	1	; case 19
  6370  03B3  1903               	skipnz
  6371  03B4  2A15               	goto	l5489
  6372  03B5  3A07               	xorlw	7	; case 20
  6373  03B6  1903               	skipnz
  6374  03B7  2A45               	goto	l5495
  6375  03B8  3A01               	xorlw	1	; case 21
  6376  03B9  1903               	skipnz
  6377  03BA  2AC2               	goto	l5515
  6378  03BB  3A03               	xorlw	3	; case 22
  6379  03BC  1903               	skipnz
  6380  03BD  2ADF               	goto	l5521
  6381  03BE  3A01               	xorlw	1	; case 23
  6382  03BF  1903               	skipnz
  6383  03C0  2A9D               	goto	l5509
  6384  03C1  3A0F               	xorlw	15	; case 24
  6385  03C2  1903               	skipnz
  6386  03C3  2A63               	goto	l5501
  6387  03C4  3A01               	xorlw	1	; case 25
  6388  03C5  1903               	skipnz
  6389  03C6  2B09               	goto	l5525
  6390  03C7  3A03               	xorlw	3	; case 26
  6391  03C8  1903               	skipnz
  6392  03C9  287F               	goto	l5411
  6393  03CA  3A38               	xorlw	56	; case 34
  6394  03CB  1903               	skipnz
  6395  03CC  2B4A               	goto	l5543
  6396  03CD  3A06               	xorlw	6	; case 36
  6397  03CE  1903               	skipnz
  6398  03CF  2B2E               	goto	l5537
  6399  03D0  3A01               	xorlw	1	; case 37
  6400  03D1  1903               	skipnz
  6401  03D2  2B1D               	goto	l5531
  6402  03D3  3A15               	xorlw	21	; case 48
  6403  03D4  1903               	skipnz
  6404  03D5  2B6A               	goto	l5549
  6405  03D6  3A71               	xorlw	113	; case 65
  6406  03D7  1903               	skipnz
  6407  03D8  2866               	goto	l5405
  6408  03D9  2BDA               	goto	l414
  6409  03DA                     l414:	
  6410  03DA  0008               	return
  6411  03DB                     __end_of_Decodify_Command:	
  6412                           
  6413                           	psect	text14
  6414  1DEB                     __ptext14:	
  6415 ;; *************** function _strcpy *****************
  6416 ;; Defined at:
  6417 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;  to              1    wreg     PTR unsigned char 
  6420 ;;		 -> buffer(33), 
  6421 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  6422 ;;		 -> STR_1(8), 
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;  to              1    2[BANK0 ] PTR unsigned char 
  6425 ;;		 -> buffer(33), 
  6426 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  6427 ;;		 -> buffer(33), 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      PTR unsigned char 
  6430 ;; Registers used:
  6431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6432 ;; Tracked objects:
  6433 ;;		On entry : 300/0
  6434 ;;		On exit  : B00/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6437 ;;      Params:         0       1       0       0       0
  6438 ;;      Locals:         0       2       0       0       0
  6439 ;;      Temps:          0       1       0       0       0
  6440 ;;      Totals:         0       4       0       0       0
  6441 ;;Total ram usage:        4 bytes
  6442 ;; Hardware stack levels used:    2
  6443 ;; Hardware stack levels required when called:    1
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_Decodify_Command
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           
  6452                           ;psect for function _strcpy
  6453  1DEB                     _strcpy:	
  6454                           
  6455                           ;incstack = 0
  6456                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  6457                           ;strcpy@to stored from wreg
  6458  1DEB  00A2               	movwf	strcpy@to
  6459  1DEC  0822               	movf	strcpy@to,w
  6460  1DED  00A1               	movwf	??_strcpy
  6461  1DEE  0821               	movf	??_strcpy,w
  6462  1DEF  00A3               	movwf	strcpy@cp
  6463  1DF0                     l4461:	
  6464  1DF0  0820               	movf	strcpy@from,w
  6465  1DF1  0084               	movwf	4
  6466  1DF2  160A  118A  200A  160A  158A  	fcall	stringdir
  6467  1DF7  00A1               	movwf	??_strcpy
  6468  1DF8  0823               	movf	strcpy@cp,w
  6469  1DF9  0084               	movwf	4
  6470  1DFA  0821               	movf	??_strcpy,w
  6471  1DFB  1383               	bcf	3,7	;select IRP bank0
  6472  1DFC  0080               	movwf	0
  6473  1DFD  0800               	movf	0,w
  6474  1DFE  1903               	btfsc	3,2
  6475  1DFF  0008               	return
  6476  1E00  3001               	movlw	1
  6477  1E01  00A1               	movwf	??_strcpy
  6478  1E02  0821               	movf	??_strcpy,w
  6479  1E03  07A3               	addwf	strcpy@cp,f
  6480  1E04  3001               	movlw	1
  6481  1E05  00A1               	movwf	??_strcpy
  6482  1E06  0821               	movf	??_strcpy,w
  6483  1E07  07A0               	addwf	strcpy@from,f
  6484  1E08  2DF0               	goto	l4461
  6485  1E09                     __end_of_strcpy:	
  6486                           
  6487                           	psect	text15
  6488  12A1                     __ptext15:	
  6489 ;; *************** function _USART_to_Protocol *****************
  6490 ;; Defined at:
  6491 ;;		line 77 in file "usart.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  usart_protoc    1    wreg     PTR struct .
  6494 ;;		 -> usart_protocol(58), 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  6497 ;;		 -> usart_protocol(58), 
  6498 ;;  i               2    2[BANK0 ] int 
  6499 ;; Return value:  Size  Location     Type
  6500 ;;                  1    wreg      void 
  6501 ;; Registers used:
  6502 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6503 ;; Tracked objects:
  6504 ;;		On entry : 300/100
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6508 ;;      Params:         0       0       0       0       0
  6509 ;;      Locals:         0       3       0       0       0
  6510 ;;      Temps:          0       2       0       0       0
  6511 ;;      Totals:         0       5       0       0       0
  6512 ;;Total ram usage:        5 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; Hardware stack levels required when called:    1
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		_Decodify_Command
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           
  6523                           ;psect for function _USART_to_Protocol
  6524  12A1                     _USART_to_Protocol:	
  6525                           
  6526                           ;incstack = 0
  6527                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  6528                           ;USART_to_Protocol@usart_protocol stored from wreg
  6529  12A1  1283               	bcf	3,5	;RP0=0, select bank0
  6530  12A2  00A4               	movwf	USART_to_Protocol@usart_protocol
  6531                           
  6532                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  6533  12A3  0824               	movf	USART_to_Protocol@usart_protocol,w
  6534  12A4  0084               	movwf	4
  6535  12A5  1703               	bsf	3,6	;RP1=1, select bank2
  6536  12A6  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  6537  12A7  1783               	bsf	3,7	;select IRP bank2
  6538  12A8  0080               	movwf	0
  6539  12A9  0A84               	incf	4,f
  6540  12AA  0810               	movf	_usart_buffer^(0+256),w	;volatile
  6541  12AB  0080               	movwf	0
  6542                           
  6543                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  6544  12AC  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  6545  12AD  1303               	bcf	3,6	;RP1=0, select bank0
  6546  12AE  00A0               	movwf	??_USART_to_Protocol
  6547  12AF  0824               	movf	USART_to_Protocol@usart_protocol,w
  6548  12B0  3E02               	addlw	2
  6549  12B1  0084               	movwf	4
  6550  12B2  0820               	movf	??_USART_to_Protocol,w
  6551  12B3  0080               	movwf	0
  6552                           
  6553                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  6554  12B4  1703               	bsf	3,6	;RP1=1, select bank2
  6555  12B5  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  6556  12B6  1303               	bcf	3,6	;RP1=0, select bank0
  6557  12B7  00A0               	movwf	??_USART_to_Protocol
  6558  12B8  0824               	movf	USART_to_Protocol@usart_protocol,w
  6559  12B9  3E03               	addlw	3
  6560  12BA  0084               	movwf	4
  6561  12BB  0820               	movf	??_USART_to_Protocol,w
  6562  12BC  0080               	movwf	0
  6563                           
  6564                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  6565  12BD  1703               	bsf	3,6	;RP1=1, select bank2
  6566  12BE  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  6567  12BF  1303               	bcf	3,6	;RP1=0, select bank0
  6568  12C0  00A0               	movwf	??_USART_to_Protocol
  6569  12C1  0824               	movf	USART_to_Protocol@usart_protocol,w
  6570  12C2  3E04               	addlw	4
  6571  12C3  0084               	movwf	4
  6572  12C4  0820               	movf	??_USART_to_Protocol,w
  6573  12C5  0080               	movwf	0
  6574                           
  6575                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  6576  12C6  1703               	bsf	3,6	;RP1=1, select bank2
  6577  12C7  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  6578  12C8  1303               	bcf	3,6	;RP1=0, select bank0
  6579  12C9  00A0               	movwf	??_USART_to_Protocol
  6580  12CA  0824               	movf	USART_to_Protocol@usart_protocol,w
  6581  12CB  3E05               	addlw	5
  6582  12CC  0084               	movwf	4
  6583  12CD  0820               	movf	??_USART_to_Protocol,w
  6584  12CE  0080               	movwf	0
  6585                           
  6586                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  6587  12CF  01A2               	clrf	USART_to_Protocol@i
  6588  12D0  01A3               	clrf	USART_to_Protocol@i+1
  6589  12D1                     l4455:	
  6590  12D1  0824               	movf	USART_to_Protocol@usart_protocol,w
  6591  12D2  3E05               	addlw	5
  6592  12D3  0084               	movwf	4
  6593  12D4  0823               	movf	USART_to_Protocol@i+1,w
  6594  12D5  3A80               	xorlw	128
  6595  12D6  00A0               	movwf	??_USART_to_Protocol
  6596  12D7  3080               	movlw	128
  6597  12D8  0220               	subwf	??_USART_to_Protocol,w
  6598  12D9  1D03               	skipz
  6599  12DA  2ADD               	goto	u4135
  6600  12DB  0800               	movf	0,w
  6601  12DC  0222               	subwf	USART_to_Protocol@i,w
  6602  12DD                     u4135:	
  6603  12DD  1803               	btfsc	3,0
  6604  12DE  0008               	return
  6605                           
  6606                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  6607  12DF  1283               	bcf	3,5	;RP0=0, select bank0
  6608  12E0  1303               	bcf	3,6	;RP1=0, select bank0
  6609  12E1  0822               	movf	USART_to_Protocol@i,w
  6610  12E2  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  6611  12E3  0084               	movwf	4
  6612  12E4  1783               	bsf	3,7	;select IRP bank2
  6613  12E5  0800               	movf	0,w
  6614  12E6  00A0               	movwf	??_USART_to_Protocol
  6615  12E7  0822               	movf	USART_to_Protocol@i,w
  6616  12E8  0724               	addwf	USART_to_Protocol@usart_protocol,w
  6617  12E9  00A1               	movwf	??_USART_to_Protocol+1
  6618  12EA  0821               	movf	??_USART_to_Protocol+1,w
  6619  12EB  3E06               	addlw	6
  6620  12EC  0084               	movwf	4
  6621  12ED  0820               	movf	??_USART_to_Protocol,w
  6622  12EE  0080               	movwf	0
  6623  12EF  3001               	movlw	1
  6624  12F0  07A2               	addwf	USART_to_Protocol@i,f
  6625  12F1  1803               	skipnc
  6626  12F2  0AA3               	incf	USART_to_Protocol@i+1,f
  6627  12F3  3000               	movlw	0
  6628  12F4  07A3               	addwf	USART_to_Protocol@i+1,f
  6629  12F5  2AD1               	goto	l4455
  6630  12F6                     __end_of_USART_to_Protocol:	
  6631                           
  6632                           	psect	text16
  6633  1DCE                     __ptext16:	
  6634 ;; *************** function _USART_put_buffer *****************
  6635 ;; Defined at:
  6636 ;;		line 99 in file "usart.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;  vetor           1    wreg     PTR unsigned char 
  6639 ;;		 -> buffer(33), 
  6640 ;;  size            1    1[BANK0 ] unsigned char 
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  vetor           1    3[BANK0 ] PTR unsigned char 
  6643 ;;		 -> buffer(33), 
  6644 ;;  ptr             1    5[BANK0 ] PTR unsigned char 
  6645 ;;		 -> buffer(33), 
  6646 ;;  loop            1    4[BANK0 ] unsigned char 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      void 
  6649 ;; Registers used:
  6650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 300/0
  6653 ;;		On exit  : 300/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6656 ;;      Params:         0       1       0       0       0
  6657 ;;      Locals:         0       3       0       0       0
  6658 ;;      Temps:          0       1       0       0       0
  6659 ;;      Totals:         0       5       0       0       0
  6660 ;;Total ram usage:        5 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    2
  6663 ;; This function calls:
  6664 ;;		_USART_putc
  6665 ;; This function is called by:
  6666 ;;		_Decodify_Command
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           
  6671                           ;psect for function _USART_put_buffer
  6672  1DCE                     _USART_put_buffer:	
  6673                           
  6674                           ;incstack = 0
  6675                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6676                           ;USART_put_buffer@vetor stored from wreg
  6677  1DCE  00A3               	movwf	USART_put_buffer@vetor
  6678                           
  6679                           ;usart.c: 100:     char loop=0;
  6680  1DCF  01A4               	clrf	USART_put_buffer@loop
  6681                           
  6682                           ;usart.c: 101:     char *ptr;;usart.c: 102:     ptr = vetor;
  6683  1DD0  0823               	movf	USART_put_buffer@vetor,w
  6684  1DD1  00A2               	movwf	??_USART_put_buffer
  6685  1DD2  0822               	movf	??_USART_put_buffer,w
  6686  1DD3  00A5               	movwf	USART_put_buffer@ptr
  6687  1DD4                     l4501:	
  6688                           ;usart.c: 104:     while(loop<size)
  6689                           
  6690                           
  6691                           ;usart.c: 104:     while(loop<size)
  6692  1DD4  0821               	movf	USART_put_buffer@size,w
  6693  1DD5  0224               	subwf	USART_put_buffer@loop,w
  6694  1DD6  1803               	btfsc	3,0
  6695  1DD7  0008               	return
  6696                           
  6697                           ;usart.c: 105:     {;usart.c: 106:         USART_putc(*ptr);
  6698  1DD8  0825               	movf	USART_put_buffer@ptr,w
  6699  1DD9  0084               	movwf	4
  6700  1DDA  1383               	bcf	3,7	;select IRP bank0
  6701  1DDB  0800               	movf	0,w
  6702  1DDC  160A  158A  2501  160A  158A  	fcall	_USART_putc
  6703                           
  6704                           ;usart.c: 107:         ptr++;
  6705  1DE1  3001               	movlw	1
  6706  1DE2  1283               	bcf	3,5	;RP0=0, select bank0
  6707  1DE3  00A2               	movwf	??_USART_put_buffer
  6708  1DE4  0822               	movf	??_USART_put_buffer,w
  6709  1DE5  07A5               	addwf	USART_put_buffer@ptr,f
  6710                           
  6711                           ;usart.c: 108:         loop++;
  6712  1DE6  3001               	movlw	1
  6713  1DE7  00A2               	movwf	??_USART_put_buffer
  6714  1DE8  0822               	movf	??_USART_put_buffer,w
  6715  1DE9  07A4               	addwf	USART_put_buffer@loop,f
  6716  1DEA  2DD4               	goto	l4501
  6717  1DEB                     __end_of_USART_put_buffer:	
  6718                           
  6719                           	psect	text17
  6720  1F17                     __ptext17:	
  6721 ;; *************** function _Send_To_MB *****************
  6722 ;; Defined at:
  6723 ;;		line 598 in file "SlaveLiofilizadorVer1.c"
  6724 ;; Parameters:    Size  Location     Type
  6725 ;;  size            1    wreg     unsigned char 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  size            1    1[BANK0 ] unsigned char 
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  1    wreg      void 
  6730 ;; Registers used:
  6731 ;;		wreg, status,2, status,0, pclath, cstack
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 300/100
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6737 ;;      Params:         0       0       0       0       0
  6738 ;;      Locals:         0       1       0       0       0
  6739 ;;      Temps:          0       0       0       0       0
  6740 ;;      Totals:         0       1       0       0       0
  6741 ;;Total ram usage:        1 bytes
  6742 ;; Hardware stack levels used:    1
  6743 ;; Hardware stack levels required when called:    2
  6744 ;; This function calls:
  6745 ;;		_USART_putc
  6746 ;; This function is called by:
  6747 ;;		_Decodify_Command
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           
  6752                           ;psect for function _Send_To_MB
  6753  1F17                     _Send_To_MB:	
  6754                           
  6755                           ;incstack = 0
  6756                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  6757                           ;Send_To_MB@size stored from wreg
  6758  1F17  1283               	bcf	3,5	;RP0=0, select bank0
  6759  1F18  1303               	bcf	3,6	;RP1=0, select bank0
  6760  1F19  00A1               	movwf	Send_To_MB@size
  6761                           
  6762                           ;SlaveLiofilizadorVer1.c: 600:      USART_putc(0xAA);
  6763  1F1A  30AA               	movlw	170
  6764  1F1B  160A  158A  2501  160A  158A  	fcall	_USART_putc
  6765                           
  6766                           ;SlaveLiofilizadorVer1.c: 601:      USART_putc(0xBB);
  6767  1F20  30BB               	movlw	187
  6768  1F21  160A  158A  2501  160A  158A  	fcall	_USART_putc
  6769                           
  6770                           ;SlaveLiofilizadorVer1.c: 602:      USART_putc(Board_Number);
  6771  1F26  1283               	bcf	3,5	;RP0=0, select bank0
  6772  1F27  0869               	movf	_Board_Number,w
  6773  1F28  160A  158A  2501  160A  158A  	fcall	_USART_putc
  6774                           
  6775                           ;SlaveLiofilizadorVer1.c: 603:      USART_putc(0x00);
  6776  1F2D  3000               	movlw	0
  6777  1F2E  160A  158A  2501  160A  158A  	fcall	_USART_putc
  6778                           
  6779                           ;SlaveLiofilizadorVer1.c: 604:      USART_putc(usart_protocol.command);
  6780  1F33  1703               	bsf	3,6	;RP1=1, select bank3
  6781  1F34  0814               	movf	(_usart_protocol^(0+384)+4),w
  6782  1F35  160A  158A  2501  160A  158A  	fcall	_USART_putc
  6783                           
  6784                           ;SlaveLiofilizadorVer1.c: 605:      USART_putc(size);
  6785  1F3A  1283               	bcf	3,5	;RP0=0, select bank0
  6786  1F3B  0821               	movf	Send_To_MB@size,w
  6787  1F3C  160A  158A  2501   	fcall	_USART_putc
  6788  1F3F  0008               	return
  6789  1F40                     __end_of_Send_To_MB:	
  6790                           
  6791                           	psect	text18
  6792  1CCD                     __ptext18:	
  6793 ;; *************** function _Send_Reply_OK *****************
  6794 ;; Defined at:
  6795 ;;		line 609 in file "SlaveLiofilizadorVer1.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;		None
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;		None
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6804 ;; Tracked objects:
  6805 ;;		On entry : 300/100
  6806 ;;		On exit  : 300/100
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6809 ;;      Params:         0       0       0       0       0
  6810 ;;      Locals:         0       0       0       0       0
  6811 ;;      Temps:          0       0       0       0       0
  6812 ;;      Totals:         0       0       0       0       0
  6813 ;;Total ram usage:        0 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; Hardware stack levels required when called:    3
  6816 ;; This function calls:
  6817 ;;		_USART_put_string
  6818 ;; This function is called by:
  6819 ;;		_Decodify_Command
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           
  6824                           ;psect for function _Send_Reply_OK
  6825  1CCD                     _Send_Reply_OK:	
  6826                           
  6827                           ;SlaveLiofilizadorVer1.c: 610:      USART_put_string("OK");
  6828                           
  6829                           ;incstack = 0
  6830                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6831  1CCD  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  6832  1CCE  1283               	bcf	3,5	;RP0=0, select bank0
  6833  1CCF  00A1               	movwf	USART_put_string@vetor
  6834  1CD0  3080               	movlw	128
  6835  1CD1  00A2               	movwf	USART_put_string@vetor+1
  6836  1CD2  160A  158A  27CD   	fcall	_USART_put_string
  6837  1CD5  0008               	return
  6838  1CD6                     __end_of_Send_Reply_OK:	
  6839                           
  6840                           	psect	text19
  6841  1FCD                     __ptext19:	
  6842 ;; *************** function _USART_put_string *****************
  6843 ;; Defined at:
  6844 ;;		line 167 in file "usart.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  6847 ;;		 -> STR_2(3), buffer(33), 
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  6850 ;;		 -> STR_2(3), buffer(33), 
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  1    wreg      void 
  6853 ;; Registers used:
  6854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6855 ;; Tracked objects:
  6856 ;;		On entry : 300/0
  6857 ;;		On exit  : 300/100
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6860 ;;      Params:         0       2       0       0       0
  6861 ;;      Locals:         0       2       0       0       0
  6862 ;;      Temps:          0       0       0       0       0
  6863 ;;      Totals:         0       4       0       0       0
  6864 ;;Total ram usage:        4 bytes
  6865 ;; Hardware stack levels used:    1
  6866 ;; Hardware stack levels required when called:    2
  6867 ;; This function calls:
  6868 ;;		_USART_putc
  6869 ;; This function is called by:
  6870 ;;		_Decodify_Command
  6871 ;;		_Send_Reply_OK
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           
  6876                           ;psect for function _USART_put_string
  6877  1FCD                     _USART_put_string:	
  6878                           
  6879                           ;usart.c: 167: void USART_put_string(char *vetor);usart.c: 168: {;usart.c: 169:     char
      +                           *ptr;;usart.c: 170:     ptr=vetor;
  6880                           
  6881                           ;incstack = 0
  6882                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6883  1FCD  0821               	movf	USART_put_string@vetor,w
  6884  1FCE  00A3               	movwf	USART_put_string@ptr
  6885  1FCF  0822               	movf	USART_put_string@vetor+1,w
  6886  1FD0  00A4               	movwf	USART_put_string@ptr+1
  6887  1FD1                     l3661:	
  6888                           ;usart.c: 171:     while(*ptr){
  6889                           
  6890                           
  6891                           ;usart.c: 171:     while(*ptr){
  6892  1FD1  0824               	movf	USART_put_string@ptr+1,w
  6893  1FD2  00FF               	movwf	127
  6894  1FD3  0823               	movf	USART_put_string@ptr,w
  6895  1FD4  0084               	movwf	4
  6896  1FD5  160A  118A  2000  160A  158A  	fcall	stringtab
  6897  1FDA  3A00               	xorlw	0
  6898  1FDB  1903               	btfsc	3,2
  6899  1FDC  2FF3               	goto	l3663
  6900                           
  6901                           ;usart.c: 172:         USART_putc(*ptr);
  6902  1FDD  0824               	movf	USART_put_string@ptr+1,w
  6903  1FDE  00FF               	movwf	127
  6904  1FDF  0823               	movf	USART_put_string@ptr,w
  6905  1FE0  0084               	movwf	4
  6906  1FE1  160A  118A  2000  160A  158A  	fcall	stringtab
  6907  1FE6  160A  158A  2501  160A  158A  	fcall	_USART_putc
  6908                           
  6909                           ;usart.c: 173:         ptr++;
  6910  1FEB  3001               	movlw	1
  6911  1FEC  1283               	bcf	3,5	;RP0=0, select bank0
  6912  1FED  07A3               	addwf	USART_put_string@ptr,f
  6913  1FEE  1803               	skipnc
  6914  1FEF  0AA4               	incf	USART_put_string@ptr+1,f
  6915  1FF0  3000               	movlw	0
  6916  1FF1  07A4               	addwf	USART_put_string@ptr+1,f
  6917  1FF2  2FD1               	goto	l3661
  6918  1FF3                     l3663:	
  6919                           
  6920                           ;usart.c: 175:     USART_putc(*ptr);
  6921  1FF3  0824               	movf	USART_put_string@ptr+1,w
  6922  1FF4  00FF               	movwf	127
  6923  1FF5  0823               	movf	USART_put_string@ptr,w
  6924  1FF6  0084               	movwf	4
  6925  1FF7  160A  118A  2000  160A  158A  	fcall	stringtab
  6926  1FFC  160A  158A  2501   	fcall	_USART_putc
  6927  1FFF  0008               	return
  6928  2000                     __end_of_USART_put_string:	
  6929                           
  6930                           	psect	text20
  6931  134B                     __ptext20:	
  6932 ;; *************** function _Save_Log *****************
  6933 ;; Defined at:
  6934 ;;		line 980 in file "SlaveLiofilizadorVer1.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;  add_datalog     4   56[BANK0 ] unsigned long 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;		None
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  1    wreg      void 
  6941 ;; Registers used:
  6942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6943 ;; Tracked objects:
  6944 ;;		On entry : 300/0
  6945 ;;		On exit  : 300/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6948 ;;      Params:         0       4       0       0       0
  6949 ;;      Locals:         0       0       0       0       0
  6950 ;;      Temps:          0       0       0       0       0
  6951 ;;      Totals:         0       4       0       0       0
  6952 ;;Total ram usage:        4 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; Hardware stack levels required when called:    5
  6955 ;; This function calls:
  6956 ;;		_EEPROM_24C1025_Write_Int
  6957 ;;		___flmul
  6958 ;;		___fltol
  6959 ;; This function is called by:
  6960 ;;		_Decodify_Command
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           
  6965                           ;psect for function _Save_Log
  6966  134B                     _Save_Log:	
  6967                           
  6968                           ;SlaveLiofilizadorVer1.c: 981:      EEPROM_24C1025_Write_Int(0x00, add_datalog, Temperat
      +                          ura0*10.0);
  6969                           
  6970                           ;incstack = 0
  6971                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6972  134B  085B               	movf	Save_Log@add_datalog+3,w
  6973  134C  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6974  134D  085A               	movf	Save_Log@add_datalog+2,w
  6975  134E  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6976  134F  0859               	movf	Save_Log@add_datalog+1,w
  6977  1350  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6978  1351  0858               	movf	Save_Log@add_datalog,w
  6979  1352  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6980  1353  1683               	bsf	3,5	;RP0=1, select bank1
  6981  1354  0827               	movf	(_Temperatura0+3)^(0+128),w
  6982  1355  1283               	bcf	3,5	;RP0=0, select bank0
  6983  1356  00B0               	movwf	___flmul@a+3
  6984  1357  1683               	bsf	3,5	;RP0=1, select bank1
  6985  1358  0826               	movf	(_Temperatura0+2)^(0+128),w
  6986  1359  1283               	bcf	3,5	;RP0=0, select bank0
  6987  135A  00AF               	movwf	___flmul@a+2
  6988  135B  1683               	bsf	3,5	;RP0=1, select bank1
  6989  135C  0825               	movf	(_Temperatura0+1)^(0+128),w
  6990  135D  1283               	bcf	3,5	;RP0=0, select bank0
  6991  135E  00AE               	movwf	___flmul@a+1
  6992  135F  1683               	bsf	3,5	;RP0=1, select bank1
  6993  1360  0824               	movf	_Temperatura0^(0+128),w
  6994  1361  1283               	bcf	3,5	;RP0=0, select bank0
  6995  1362  00AD               	movwf	___flmul@a
  6996  1363  3041               	movlw	65
  6997  1364  00AC               	movwf	___flmul@b+3
  6998  1365  3020               	movlw	32
  6999  1366  00AB               	movwf	___flmul@b+2
  7000  1367  3000               	movlw	0
  7001  1368  00AA               	movwf	___flmul@b+1
  7002  1369  3000               	movlw	0
  7003  136A  00A9               	movwf	___flmul@b
  7004  136B  120A  118A  23DB  160A  118A  	fcall	___flmul
  7005  1370  082C               	movf	?___flmul+3,w
  7006  1371  00C6               	movwf	___fltol@f1+3
  7007  1372  082B               	movf	?___flmul+2,w
  7008  1373  00C5               	movwf	___fltol@f1+2
  7009  1374  082A               	movf	?___flmul+1,w
  7010  1375  00C4               	movwf	___fltol@f1+1
  7011  1376  0829               	movf	?___flmul,w
  7012  1377  00C3               	movwf	___fltol@f1
  7013  1378  160A  118A  23AD  160A  118A  	fcall	___fltol
  7014  137D  0844               	movf	?___fltol+1,w
  7015  137E  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7016  137F  0843               	movf	?___fltol,w
  7017  1380  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7018  1381  3000               	movlw	0
  7019  1382  160A  158A  2627  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  7020                           
  7021                           ;SlaveLiofilizadorVer1.c: 982:      EEPROM_24C1025_Write_Int(0x01, add_datalog, Umidade1
      +                          );
  7022  1387  085B               	movf	Save_Log@add_datalog+3,w
  7023  1388  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7024  1389  085A               	movf	Save_Log@add_datalog+2,w
  7025  138A  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7026  138B  0859               	movf	Save_Log@add_datalog+1,w
  7027  138C  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7028  138D  0858               	movf	Save_Log@add_datalog,w
  7029  138E  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7030  138F  1683               	bsf	3,5	;RP0=1, select bank1
  7031  1390  0823               	movf	(_Umidade1+3)^(0+128),w
  7032  1391  1283               	bcf	3,5	;RP0=0, select bank0
  7033  1392  00C6               	movwf	___fltol@f1+3
  7034  1393  1683               	bsf	3,5	;RP0=1, select bank1
  7035  1394  0822               	movf	(_Umidade1+2)^(0+128),w
  7036  1395  1283               	bcf	3,5	;RP0=0, select bank0
  7037  1396  00C5               	movwf	___fltol@f1+2
  7038  1397  1683               	bsf	3,5	;RP0=1, select bank1
  7039  1398  0821               	movf	(_Umidade1+1)^(0+128),w
  7040  1399  1283               	bcf	3,5	;RP0=0, select bank0
  7041  139A  00C4               	movwf	___fltol@f1+1
  7042  139B  1683               	bsf	3,5	;RP0=1, select bank1
  7043  139C  0820               	movf	_Umidade1^(0+128),w
  7044  139D  1283               	bcf	3,5	;RP0=0, select bank0
  7045  139E  00C3               	movwf	___fltol@f1
  7046  139F  160A  118A  23AD  160A  118A  	fcall	___fltol
  7047  13A4  0844               	movf	?___fltol+1,w
  7048  13A5  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7049  13A6  0843               	movf	?___fltol,w
  7050  13A7  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7051  13A8  3001               	movlw	1
  7052  13A9  160A  158A  2627   	fcall	_EEPROM_24C1025_Write_Int
  7053  13AC  0008               	return
  7054  13AD                     __end_of_Save_Log:	
  7055                           
  7056                           	psect	text21
  7057  13AD                     __ptext21:	
  7058 ;; *************** function ___fltol *****************
  7059 ;; Defined at:
  7060 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;  f1              4   35[BANK0 ] void 
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;  exp1            1   45[BANK0 ] unsigned char 
  7065 ;;  sign1           1   44[BANK0 ] unsigned char 
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  4   35[BANK0 ] long 
  7068 ;; Registers used:
  7069 ;;		wreg, status,2, status,0
  7070 ;; Tracked objects:
  7071 ;;		On entry : 300/0
  7072 ;;		On exit  : 300/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7075 ;;      Params:         0       4       0       0       0
  7076 ;;      Locals:         0       2       0       0       0
  7077 ;;      Temps:          0       5       0       0       0
  7078 ;;      Totals:         0      11       0       0       0
  7079 ;;Total ram usage:       11 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; Hardware stack levels required when called:    1
  7082 ;; This function calls:
  7083 ;;		Nothing
  7084 ;; This function is called by:
  7085 ;;		_Decodify_Command
  7086 ;;		_Save_Log
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           
  7091                           ;psect for function ___fltol
  7092  13AD                     ___fltol:	
  7093                           
  7094                           ;incstack = 0
  7095                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7096  13AD  1003               	clrc
  7097  13AE  0D45               	rlf	___fltol@f1+2,w
  7098  13AF  0D46               	rlf	___fltol@f1+3,w
  7099  13B0  00C7               	movwf	??___fltol
  7100  13B1  0847               	movf	??___fltol,w
  7101  13B2  00CD               	movwf	___fltol@exp1
  7102  13B3  084D               	movf	___fltol@exp1,w
  7103  13B4  1D03               	btfss	3,2
  7104  13B5  2BBF               	goto	l3763
  7105  13B6                     l3759:	
  7106  13B6  3000               	movlw	0
  7107  13B7  00C6               	movwf	?___fltol+3
  7108  13B8  3000               	movlw	0
  7109  13B9  00C5               	movwf	?___fltol+2
  7110  13BA  3000               	movlw	0
  7111  13BB  00C4               	movwf	?___fltol+1
  7112  13BC  3000               	movlw	0
  7113  13BD  00C3               	movwf	?___fltol
  7114  13BE  0008               	return
  7115  13BF                     l3763:	
  7116  13BF  0843               	movf	___fltol@f1,w
  7117  13C0  00C7               	movwf	??___fltol
  7118  13C1  0844               	movf	___fltol@f1+1,w
  7119  13C2  00C8               	movwf	??___fltol+1
  7120  13C3  0845               	movf	___fltol@f1+2,w
  7121  13C4  00C9               	movwf	??___fltol+2
  7122  13C5  0846               	movf	___fltol@f1+3,w
  7123  13C6  00CA               	movwf	??___fltol+3
  7124  13C7  301F               	movlw	31
  7125  13C8                     u2855:	
  7126  13C8  1003               	clrc
  7127  13C9  0CCA               	rrf	??___fltol+3,f
  7128  13CA  0CC9               	rrf	??___fltol+2,f
  7129  13CB  0CC8               	rrf	??___fltol+1,f
  7130  13CC  0CC7               	rrf	??___fltol,f
  7131  13CD  3EFF               	addlw	-1
  7132  13CE  1D03               	skipz
  7133  13CF  2BC8               	goto	u2855
  7134  13D0  0847               	movf	??___fltol,w
  7135  13D1  00CB               	movwf	??___fltol+4
  7136  13D2  084B               	movf	??___fltol+4,w
  7137  13D3  00CC               	movwf	___fltol@sign1
  7138  13D4  17C5               	bsf	___fltol@f1+2,7
  7139  13D5  30FF               	movlw	255
  7140  13D6  05C3               	andwf	___fltol@f1,f
  7141  13D7  30FF               	movlw	255
  7142  13D8  05C4               	andwf	___fltol@f1+1,f
  7143  13D9  30FF               	movlw	255
  7144  13DA  05C5               	andwf	___fltol@f1+2,f
  7145  13DB  3000               	movlw	0
  7146  13DC  05C6               	andwf	___fltol@f1+3,f
  7147  13DD  3096               	movlw	150
  7148  13DE  02CD               	subwf	___fltol@exp1,f
  7149  13DF  1FCD               	btfss	___fltol@exp1,7
  7150  13E0  2BF6               	goto	l3781
  7151  13E1  084D               	movf	___fltol@exp1,w
  7152  13E2  3A80               	xorlw	128
  7153  13E3  3E97               	addlw	151
  7154  13E4  1C03               	btfss	3,0
  7155  13E5  2BB6               	goto	l3759
  7156  13E6                     l3779:	
  7157  13E6  3001               	movlw	1
  7158  13E7                     u2885:	
  7159  13E7  1003               	clrc
  7160  13E8  0CC6               	rrf	___fltol@f1+3,f
  7161  13E9  0CC5               	rrf	___fltol@f1+2,f
  7162  13EA  0CC4               	rrf	___fltol@f1+1,f
  7163  13EB  0CC3               	rrf	___fltol@f1,f
  7164  13EC  3EFF               	addlw	-1
  7165  13ED  1D03               	skipz
  7166  13EE  2BE7               	goto	u2885
  7167  13EF  3001               	movlw	1
  7168  13F0  00C7               	movwf	??___fltol
  7169  13F1  0847               	movf	??___fltol,w
  7170  13F2  07CD               	addwf	___fltol@exp1,f
  7171  13F3  1903               	btfsc	3,2
  7172  13F4  2C09               	goto	l3789
  7173  13F5  2BE6               	goto	l3779
  7174  13F6                     l3781:	
  7175  13F6  3020               	movlw	32
  7176  13F7  024D               	subwf	___fltol@exp1,w
  7177  13F8  1803               	btfsc	3,0
  7178  13F9  2BB6               	goto	l3759
  7179  13FA                     l1164:	
  7180  13FA  084D               	movf	___fltol@exp1,w
  7181  13FB  1903               	btfsc	3,2
  7182  13FC  2C09               	goto	l3789
  7183  13FD  3001               	movlw	1
  7184  13FE  00C7               	movwf	??___fltol
  7185  13FF                     u2915:	
  7186  13FF  1003               	clrc
  7187  1400  0DC3               	rlf	___fltol@f1,f
  7188  1401  0DC4               	rlf	___fltol@f1+1,f
  7189  1402  0DC5               	rlf	___fltol@f1+2,f
  7190  1403  0DC6               	rlf	___fltol@f1+3,f
  7191  1404  0BC7               	decfsz	??___fltol,f
  7192  1405  2BFF               	goto	u2915
  7193  1406  3001               	movlw	1
  7194  1407  02CD               	subwf	___fltol@exp1,f
  7195  1408  2BFA               	goto	l1164
  7196  1409                     l3789:	
  7197  1409  084C               	movf	___fltol@sign1,w
  7198  140A  1903               	btfsc	3,2
  7199  140B  0008               	return
  7200  140C  09C3               	comf	___fltol@f1,f
  7201  140D  09C4               	comf	___fltol@f1+1,f
  7202  140E  09C5               	comf	___fltol@f1+2,f
  7203  140F  09C6               	comf	___fltol@f1+3,f
  7204  1410  0AC3               	incf	___fltol@f1,f
  7205  1411  1903               	skipnz
  7206  1412  0AC4               	incf	___fltol@f1+1,f
  7207  1413  1903               	skipnz
  7208  1414  0AC5               	incf	___fltol@f1+2,f
  7209  1415  1903               	skipnz
  7210  1416  0AC6               	incf	___fltol@f1+3,f
  7211  1417  0008               	return
  7212  1418                     __end_of___fltol:	
  7213                           
  7214                           	psect	text22
  7215  03DB                     __ptext22:	
  7216 ;; *************** function ___flmul *****************
  7217 ;; Defined at:
  7218 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;  b               4    9[BANK0 ] long 
  7221 ;;  a               4   13[BANK0 ] long 
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;  prod            4   29[BANK0 ] struct .
  7224 ;;  grs             4   24[BANK0 ] unsigned long 
  7225 ;;  temp            2   33[BANK0 ] struct .
  7226 ;;  bexp            1   28[BANK0 ] unsigned char 
  7227 ;;  aexp            1   23[BANK0 ] unsigned char 
  7228 ;;  sign            1   22[BANK0 ] unsigned char 
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  4    9[BANK0 ] unsigned char 
  7231 ;; Registers used:
  7232 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7233 ;; Tracked objects:
  7234 ;;		On entry : 300/0
  7235 ;;		On exit  : 300/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7238 ;;      Params:         0       8       0       0       0
  7239 ;;      Locals:         0      13       0       0       0
  7240 ;;      Temps:          0       5       0       0       0
  7241 ;;      Totals:         0      26       0       0       0
  7242 ;;Total ram usage:       26 bytes
  7243 ;; Hardware stack levels used:    1
  7244 ;; Hardware stack levels required when called:    2
  7245 ;; This function calls:
  7246 ;;		__Umul8_16
  7247 ;; This function is called by:
  7248 ;;		_Decodify_Command
  7249 ;;		_mediaLeituraPt100Umidadde
  7250 ;;		_Save_Log
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           
  7254                           
  7255                           ;psect for function ___flmul
  7256  03DB                     ___flmul:	
  7257                           
  7258                           ;incstack = 0
  7259                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7260  03DB  082C               	movf	___flmul@b+3,w
  7261  03DC  3980               	andlw	128
  7262  03DD  00B1               	movwf	??___flmul
  7263  03DE  0831               	movf	??___flmul,w
  7264  03DF  00B6               	movwf	___flmul@sign
  7265  03E0  082C               	movf	___flmul@b+3,w
  7266  03E1  00B1               	movwf	??___flmul
  7267  03E2  0731               	addwf	??___flmul,w
  7268  03E3  00B2               	movwf	??___flmul+1
  7269  03E4  0832               	movf	??___flmul+1,w
  7270  03E5  00BC               	movwf	___flmul@bexp
  7271  03E6  1BAB               	btfsc	___flmul@b+2,7
  7272  03E7  143C               	bsf	___flmul@bexp,0
  7273  03E8  083C               	movf	___flmul@bexp,w
  7274  03E9  1903               	btfsc	3,2
  7275  03EA  2BF8               	goto	l4029
  7276  03EB  0A3C               	incf	___flmul@bexp,w
  7277  03EC  1D03               	btfss	3,2
  7278  03ED  2BF6               	goto	l4027
  7279  03EE  3000               	movlw	0
  7280  03EF  00AC               	movwf	___flmul@b+3
  7281  03F0  3000               	movlw	0
  7282  03F1  00AB               	movwf	___flmul@b+2
  7283  03F2  3000               	movlw	0
  7284  03F3  00AA               	movwf	___flmul@b+1
  7285  03F4  3000               	movlw	0
  7286  03F5  00A9               	movwf	___flmul@b
  7287  03F6                     l4027:	
  7288  03F6  17AB               	bsf	___flmul@b+2,7
  7289  03F7  2C00               	goto	l4031
  7290  03F8                     l4029:	
  7291  03F8  3000               	movlw	0
  7292  03F9  00AC               	movwf	___flmul@b+3
  7293  03FA  3000               	movlw	0
  7294  03FB  00AB               	movwf	___flmul@b+2
  7295  03FC  3000               	movlw	0
  7296  03FD  00AA               	movwf	___flmul@b+1
  7297  03FE  3000               	movlw	0
  7298  03FF  00A9               	movwf	___flmul@b
  7299  0400                     l4031:	
  7300  0400  0830               	movf	___flmul@a+3,w
  7301  0401  3980               	andlw	128
  7302  0402  00B1               	movwf	??___flmul
  7303  0403  0831               	movf	??___flmul,w
  7304  0404  06B6               	xorwf	___flmul@sign,f
  7305  0405  0830               	movf	___flmul@a+3,w
  7306  0406  00B1               	movwf	??___flmul
  7307  0407  0731               	addwf	??___flmul,w
  7308  0408  00B2               	movwf	??___flmul+1
  7309  0409  0832               	movf	??___flmul+1,w
  7310  040A  00B7               	movwf	___flmul@aexp
  7311  040B  1BAF               	btfsc	___flmul@a+2,7
  7312  040C  1437               	bsf	___flmul@aexp,0
  7313  040D  0837               	movf	___flmul@aexp,w
  7314  040E  1903               	btfsc	3,2
  7315  040F  2C1D               	goto	l4047
  7316  0410  0A37               	incf	___flmul@aexp,w
  7317  0411  1D03               	btfss	3,2
  7318  0412  2C1B               	goto	l4045
  7319  0413  3000               	movlw	0
  7320  0414  00B0               	movwf	___flmul@a+3
  7321  0415  3000               	movlw	0
  7322  0416  00AF               	movwf	___flmul@a+2
  7323  0417  3000               	movlw	0
  7324  0418  00AE               	movwf	___flmul@a+1
  7325  0419  3000               	movlw	0
  7326  041A  00AD               	movwf	___flmul@a
  7327  041B                     l4045:	
  7328  041B  17AF               	bsf	___flmul@a+2,7
  7329  041C  2C25               	goto	l4049
  7330  041D                     l4047:	
  7331  041D  3000               	movlw	0
  7332  041E  00B0               	movwf	___flmul@a+3
  7333  041F  3000               	movlw	0
  7334  0420  00AF               	movwf	___flmul@a+2
  7335  0421  3000               	movlw	0
  7336  0422  00AE               	movwf	___flmul@a+1
  7337  0423  3000               	movlw	0
  7338  0424  00AD               	movwf	___flmul@a
  7339  0425                     l4049:	
  7340  0425  0837               	movf	___flmul@aexp,w
  7341  0426  1D03               	btfss	3,2
  7342  0427  083C               	movf	___flmul@bexp,w
  7343  0428  1D03               	btfss	3,2
  7344  0429  2C33               	goto	l4057
  7345  042A  3000               	movlw	0
  7346  042B  00AC               	movwf	?___flmul+3
  7347  042C  3000               	movlw	0
  7348  042D  00AB               	movwf	?___flmul+2
  7349  042E  3000               	movlw	0
  7350  042F  00AA               	movwf	?___flmul+1
  7351  0430  3000               	movlw	0
  7352  0431  00A9               	movwf	?___flmul
  7353  0432  0008               	return
  7354  0433                     l4057:	
  7355  0433  0829               	movf	___flmul@b,w
  7356  0434  00B1               	movwf	??___flmul
  7357  0435  0831               	movf	??___flmul,w
  7358  0436  00A0               	movwf	__Umul8_16@multiplicand
  7359  0437  082F               	movf	___flmul@a+2,w
  7360  0438  160A  158A  26CC  120A  118A  	fcall	__Umul8_16
  7361  043D  0821               	movf	?__Umul8_16+1,w
  7362  043E  00C2               	movwf	___flmul@temp+1
  7363  043F  0820               	movf	?__Umul8_16,w
  7364  0440  00C1               	movwf	___flmul@temp
  7365  0441  0841               	movf	___flmul@temp,w
  7366  0442  00B1               	movwf	??___flmul
  7367  0443  01B2               	clrf	??___flmul+1
  7368  0444  01B3               	clrf	??___flmul+2
  7369  0445  01B4               	clrf	??___flmul+3
  7370  0446  0834               	movf	??___flmul+3,w
  7371  0447  00BB               	movwf	___flmul@grs+3
  7372  0448  0833               	movf	??___flmul+2,w
  7373  0449  00BA               	movwf	___flmul@grs+2
  7374  044A  0832               	movf	??___flmul+1,w
  7375  044B  00B9               	movwf	___flmul@grs+1
  7376  044C  0831               	movf	??___flmul,w
  7377  044D  00B8               	movwf	___flmul@grs
  7378  044E  0842               	movf	___flmul@temp+1,w
  7379  044F  00B1               	movwf	??___flmul
  7380  0450  01B2               	clrf	??___flmul+1
  7381  0451  01B3               	clrf	??___flmul+2
  7382  0452  01B4               	clrf	??___flmul+3
  7383  0453  0834               	movf	??___flmul+3,w
  7384  0454  00C0               	movwf	___flmul@prod+3
  7385  0455  0833               	movf	??___flmul+2,w
  7386  0456  00BF               	movwf	___flmul@prod+2
  7387  0457  0832               	movf	??___flmul+1,w
  7388  0458  00BE               	movwf	___flmul@prod+1
  7389  0459  0831               	movf	??___flmul,w
  7390  045A  00BD               	movwf	___flmul@prod
  7391  045B  082A               	movf	___flmul@b+1,w
  7392  045C  00B1               	movwf	??___flmul
  7393  045D  0831               	movf	??___flmul,w
  7394  045E  00A0               	movwf	__Umul8_16@multiplicand
  7395  045F  082E               	movf	___flmul@a+1,w
  7396  0460  160A  158A  26CC  120A  118A  	fcall	__Umul8_16
  7397  0465  0821               	movf	?__Umul8_16+1,w
  7398  0466  00C2               	movwf	___flmul@temp+1
  7399  0467  0820               	movf	?__Umul8_16,w
  7400  0468  00C1               	movwf	___flmul@temp
  7401  0469  0841               	movf	___flmul@temp,w
  7402  046A  00B1               	movwf	??___flmul
  7403  046B  01B2               	clrf	??___flmul+1
  7404  046C  01B3               	clrf	??___flmul+2
  7405  046D  01B4               	clrf	??___flmul+3
  7406  046E  0831               	movf	??___flmul,w
  7407  046F  07B8               	addwf	___flmul@grs,f
  7408  0470  0832               	movf	??___flmul+1,w
  7409  0471  1103               	clrz
  7410  0472  1803               	skipnc
  7411  0473  3E01               	addlw	1
  7412  0474  1D03               	btfss	3,2
  7413  0475  07B9               	addwf	___flmul@grs+1,f
  7414  0476  0833               	movf	??___flmul+2,w
  7415  0477  1103               	clrz
  7416  0478  1803               	skipnc
  7417  0479  3E01               	addlw	1
  7418  047A  1D03               	btfss	3,2
  7419  047B  07BA               	addwf	___flmul@grs+2,f
  7420  047C  0834               	movf	??___flmul+3,w
  7421  047D  1103               	clrz
  7422  047E  1803               	skipnc
  7423  047F  3E01               	addlw	1
  7424  0480  1D03               	btfss	3,2
  7425  0481  07BB               	addwf	___flmul@grs+3,f
  7426  0482  0842               	movf	___flmul@temp+1,w
  7427  0483  00B1               	movwf	??___flmul
  7428  0484  01B2               	clrf	??___flmul+1
  7429  0485  01B3               	clrf	??___flmul+2
  7430  0486  01B4               	clrf	??___flmul+3
  7431  0487  0831               	movf	??___flmul,w
  7432  0488  07BD               	addwf	___flmul@prod,f
  7433  0489  0832               	movf	??___flmul+1,w
  7434  048A  1103               	clrz
  7435  048B  1803               	skipnc
  7436  048C  3E01               	addlw	1
  7437  048D  1D03               	btfss	3,2
  7438  048E  07BE               	addwf	___flmul@prod+1,f
  7439  048F  0833               	movf	??___flmul+2,w
  7440  0490  1103               	clrz
  7441  0491  1803               	skipnc
  7442  0492  3E01               	addlw	1
  7443  0493  1D03               	btfss	3,2
  7444  0494  07BF               	addwf	___flmul@prod+2,f
  7445  0495  0834               	movf	??___flmul+3,w
  7446  0496  1103               	clrz
  7447  0497  1803               	skipnc
  7448  0498  3E01               	addlw	1
  7449  0499  1D03               	btfss	3,2
  7450  049A  07C0               	addwf	___flmul@prod+3,f
  7451  049B  082B               	movf	___flmul@b+2,w
  7452  049C  00B1               	movwf	??___flmul
  7453  049D  0831               	movf	??___flmul,w
  7454  049E  00A0               	movwf	__Umul8_16@multiplicand
  7455  049F  082D               	movf	___flmul@a,w
  7456  04A0  160A  158A  26CC  120A  118A  	fcall	__Umul8_16
  7457  04A5  0821               	movf	?__Umul8_16+1,w
  7458  04A6  00C2               	movwf	___flmul@temp+1
  7459  04A7  0820               	movf	?__Umul8_16,w
  7460  04A8  00C1               	movwf	___flmul@temp
  7461  04A9  0841               	movf	___flmul@temp,w
  7462  04AA  00B1               	movwf	??___flmul
  7463  04AB  01B2               	clrf	??___flmul+1
  7464  04AC  01B3               	clrf	??___flmul+2
  7465  04AD  01B4               	clrf	??___flmul+3
  7466  04AE  0831               	movf	??___flmul,w
  7467  04AF  07B8               	addwf	___flmul@grs,f
  7468  04B0  0832               	movf	??___flmul+1,w
  7469  04B1  1103               	clrz
  7470  04B2  1803               	skipnc
  7471  04B3  3E01               	addlw	1
  7472  04B4  1D03               	btfss	3,2
  7473  04B5  07B9               	addwf	___flmul@grs+1,f
  7474  04B6  0833               	movf	??___flmul+2,w
  7475  04B7  1103               	clrz
  7476  04B8  1803               	skipnc
  7477  04B9  3E01               	addlw	1
  7478  04BA  1D03               	btfss	3,2
  7479  04BB  07BA               	addwf	___flmul@grs+2,f
  7480  04BC  0834               	movf	??___flmul+3,w
  7481  04BD  1103               	clrz
  7482  04BE  1803               	skipnc
  7483  04BF  3E01               	addlw	1
  7484  04C0  1D03               	btfss	3,2
  7485  04C1  07BB               	addwf	___flmul@grs+3,f
  7486  04C2  0842               	movf	___flmul@temp+1,w
  7487  04C3  00B1               	movwf	??___flmul
  7488  04C4  01B2               	clrf	??___flmul+1
  7489  04C5  01B3               	clrf	??___flmul+2
  7490  04C6  01B4               	clrf	??___flmul+3
  7491  04C7  0831               	movf	??___flmul,w
  7492  04C8  07BD               	addwf	___flmul@prod,f
  7493  04C9  0832               	movf	??___flmul+1,w
  7494  04CA  1103               	clrz
  7495  04CB  1803               	skipnc
  7496  04CC  3E01               	addlw	1
  7497  04CD  1D03               	btfss	3,2
  7498  04CE  07BE               	addwf	___flmul@prod+1,f
  7499  04CF  0833               	movf	??___flmul+2,w
  7500  04D0  1103               	clrz
  7501  04D1  1803               	skipnc
  7502  04D2  3E01               	addlw	1
  7503  04D3  1D03               	btfss	3,2
  7504  04D4  07BF               	addwf	___flmul@prod+2,f
  7505  04D5  0834               	movf	??___flmul+3,w
  7506  04D6  1103               	clrz
  7507  04D7  1803               	skipnc
  7508  04D8  3E01               	addlw	1
  7509  04D9  1D03               	btfss	3,2
  7510  04DA  07C0               	addwf	___flmul@prod+3,f
  7511  04DB  3008               	movlw	8
  7512  04DC  00B1               	movwf	??___flmul
  7513  04DD                     u3595:	
  7514  04DD  1003               	clrc
  7515  04DE  0DB8               	rlf	___flmul@grs,f
  7516  04DF  0DB9               	rlf	___flmul@grs+1,f
  7517  04E0  0DBA               	rlf	___flmul@grs+2,f
  7518  04E1  0DBB               	rlf	___flmul@grs+3,f
  7519  04E2  0BB1               	decfsz	??___flmul,f
  7520  04E3  2CDD               	goto	u3595
  7521  04E4  082A               	movf	___flmul@b+1,w
  7522  04E5  00B1               	movwf	??___flmul
  7523  04E6  0831               	movf	??___flmul,w
  7524  04E7  00A0               	movwf	__Umul8_16@multiplicand
  7525  04E8  082D               	movf	___flmul@a,w
  7526  04E9  160A  158A  26CC  120A  118A  	fcall	__Umul8_16
  7527  04EE  0821               	movf	?__Umul8_16+1,w
  7528  04EF  00C2               	movwf	___flmul@temp+1
  7529  04F0  0820               	movf	?__Umul8_16,w
  7530  04F1  00C1               	movwf	___flmul@temp
  7531  04F2  0841               	movf	___flmul@temp,w
  7532  04F3  00B1               	movwf	??___flmul
  7533  04F4  0842               	movf	___flmul@temp+1,w
  7534  04F5  00B2               	movwf	??___flmul+1
  7535  04F6  01B3               	clrf	??___flmul+2
  7536  04F7  01B4               	clrf	??___flmul+3
  7537  04F8  0831               	movf	??___flmul,w
  7538  04F9  07B8               	addwf	___flmul@grs,f
  7539  04FA  0832               	movf	??___flmul+1,w
  7540  04FB  1103               	clrz
  7541  04FC  1803               	skipnc
  7542  04FD  3E01               	addlw	1
  7543  04FE  1D03               	btfss	3,2
  7544  04FF  07B9               	addwf	___flmul@grs+1,f
  7545  0500  0833               	movf	??___flmul+2,w
  7546  0501  1103               	clrz
  7547  0502  1803               	skipnc
  7548  0503  3E01               	addlw	1
  7549  0504  1D03               	btfss	3,2
  7550  0505  07BA               	addwf	___flmul@grs+2,f
  7551  0506  0834               	movf	??___flmul+3,w
  7552  0507  1103               	clrz
  7553  0508  1803               	skipnc
  7554  0509  3E01               	addlw	1
  7555  050A  1D03               	btfss	3,2
  7556  050B  07BB               	addwf	___flmul@grs+3,f
  7557  050C  0829               	movf	___flmul@b,w
  7558  050D  00B1               	movwf	??___flmul
  7559  050E  0831               	movf	??___flmul,w
  7560  050F  00A0               	movwf	__Umul8_16@multiplicand
  7561  0510  082E               	movf	___flmul@a+1,w
  7562  0511  160A  158A  26CC  120A  118A  	fcall	__Umul8_16
  7563  0516  0821               	movf	?__Umul8_16+1,w
  7564  0517  00C2               	movwf	___flmul@temp+1
  7565  0518  0820               	movf	?__Umul8_16,w
  7566  0519  00C1               	movwf	___flmul@temp
  7567  051A  0841               	movf	___flmul@temp,w
  7568  051B  00B1               	movwf	??___flmul
  7569  051C  0842               	movf	___flmul@temp+1,w
  7570  051D  00B2               	movwf	??___flmul+1
  7571  051E  01B3               	clrf	??___flmul+2
  7572  051F  01B4               	clrf	??___flmul+3
  7573  0520  0831               	movf	??___flmul,w
  7574  0521  07B8               	addwf	___flmul@grs,f
  7575  0522  0832               	movf	??___flmul+1,w
  7576  0523  1103               	clrz
  7577  0524  1803               	skipnc
  7578  0525  3E01               	addlw	1
  7579  0526  1D03               	btfss	3,2
  7580  0527  07B9               	addwf	___flmul@grs+1,f
  7581  0528  0833               	movf	??___flmul+2,w
  7582  0529  1103               	clrz
  7583  052A  1803               	skipnc
  7584  052B  3E01               	addlw	1
  7585  052C  1D03               	btfss	3,2
  7586  052D  07BA               	addwf	___flmul@grs+2,f
  7587  052E  0834               	movf	??___flmul+3,w
  7588  052F  1103               	clrz
  7589  0530  1803               	skipnc
  7590  0531  3E01               	addlw	1
  7591  0532  1D03               	btfss	3,2
  7592  0533  07BB               	addwf	___flmul@grs+3,f
  7593  0534  3008               	movlw	8
  7594  0535  00B1               	movwf	??___flmul
  7595  0536                     u3625:	
  7596  0536  1003               	clrc
  7597  0537  0DB8               	rlf	___flmul@grs,f
  7598  0538  0DB9               	rlf	___flmul@grs+1,f
  7599  0539  0DBA               	rlf	___flmul@grs+2,f
  7600  053A  0DBB               	rlf	___flmul@grs+3,f
  7601  053B  0BB1               	decfsz	??___flmul,f
  7602  053C  2D36               	goto	u3625
  7603  053D  0829               	movf	___flmul@b,w
  7604  053E  00B1               	movwf	??___flmul
  7605  053F  0831               	movf	??___flmul,w
  7606  0540  00A0               	movwf	__Umul8_16@multiplicand
  7607  0541  082D               	movf	___flmul@a,w
  7608  0542  160A  158A  26CC  120A  118A  	fcall	__Umul8_16
  7609  0547  0821               	movf	?__Umul8_16+1,w
  7610  0548  00C2               	movwf	___flmul@temp+1
  7611  0549  0820               	movf	?__Umul8_16,w
  7612  054A  00C1               	movwf	___flmul@temp
  7613  054B  0841               	movf	___flmul@temp,w
  7614  054C  00B1               	movwf	??___flmul
  7615  054D  0842               	movf	___flmul@temp+1,w
  7616  054E  00B2               	movwf	??___flmul+1
  7617  054F  01B3               	clrf	??___flmul+2
  7618  0550  01B4               	clrf	??___flmul+3
  7619  0551  0831               	movf	??___flmul,w
  7620  0552  07B8               	addwf	___flmul@grs,f
  7621  0553  0832               	movf	??___flmul+1,w
  7622  0554  1103               	clrz
  7623  0555  1803               	skipnc
  7624  0556  3E01               	addlw	1
  7625  0557  1D03               	btfss	3,2
  7626  0558  07B9               	addwf	___flmul@grs+1,f
  7627  0559  0833               	movf	??___flmul+2,w
  7628  055A  1103               	clrz
  7629  055B  1803               	skipnc
  7630  055C  3E01               	addlw	1
  7631  055D  1D03               	btfss	3,2
  7632  055E  07BA               	addwf	___flmul@grs+2,f
  7633  055F  0834               	movf	??___flmul+3,w
  7634  0560  1103               	clrz
  7635  0561  1803               	skipnc
  7636  0562  3E01               	addlw	1
  7637  0563  1D03               	btfss	3,2
  7638  0564  07BB               	addwf	___flmul@grs+3,f
  7639  0565  082A               	movf	___flmul@b+1,w
  7640  0566  00B1               	movwf	??___flmul
  7641  0567  0831               	movf	??___flmul,w
  7642  0568  00A0               	movwf	__Umul8_16@multiplicand
  7643  0569  082F               	movf	___flmul@a+2,w
  7644  056A  160A  158A  26CC  120A  118A  	fcall	__Umul8_16
  7645  056F  0821               	movf	?__Umul8_16+1,w
  7646  0570  00C2               	movwf	___flmul@temp+1
  7647  0571  0820               	movf	?__Umul8_16,w
  7648  0572  00C1               	movwf	___flmul@temp
  7649  0573  0841               	movf	___flmul@temp,w
  7650  0574  00B1               	movwf	??___flmul
  7651  0575  0842               	movf	___flmul@temp+1,w
  7652  0576  00B2               	movwf	??___flmul+1
  7653  0577  01B3               	clrf	??___flmul+2
  7654  0578  01B4               	clrf	??___flmul+3
  7655  0579  0831               	movf	??___flmul,w
  7656  057A  07BD               	addwf	___flmul@prod,f
  7657  057B  0832               	movf	??___flmul+1,w
  7658  057C  1103               	clrz
  7659  057D  1803               	skipnc
  7660  057E  3E01               	addlw	1
  7661  057F  1D03               	btfss	3,2
  7662  0580  07BE               	addwf	___flmul@prod+1,f
  7663  0581  0833               	movf	??___flmul+2,w
  7664  0582  1103               	clrz
  7665  0583  1803               	skipnc
  7666  0584  3E01               	addlw	1
  7667  0585  1D03               	btfss	3,2
  7668  0586  07BF               	addwf	___flmul@prod+2,f
  7669  0587  0834               	movf	??___flmul+3,w
  7670  0588  1103               	clrz
  7671  0589  1803               	skipnc
  7672  058A  3E01               	addlw	1
  7673  058B  1D03               	btfss	3,2
  7674  058C  07C0               	addwf	___flmul@prod+3,f
  7675  058D  082B               	movf	___flmul@b+2,w
  7676  058E  00B1               	movwf	??___flmul
  7677  058F  0831               	movf	??___flmul,w
  7678  0590  00A0               	movwf	__Umul8_16@multiplicand
  7679  0591  082E               	movf	___flmul@a+1,w
  7680  0592  160A  158A  26CC  120A  118A  	fcall	__Umul8_16
  7681  0597  0821               	movf	?__Umul8_16+1,w
  7682  0598  00C2               	movwf	___flmul@temp+1
  7683  0599  0820               	movf	?__Umul8_16,w
  7684  059A  00C1               	movwf	___flmul@temp
  7685  059B  0841               	movf	___flmul@temp,w
  7686  059C  00B1               	movwf	??___flmul
  7687  059D  0842               	movf	___flmul@temp+1,w
  7688  059E  00B2               	movwf	??___flmul+1
  7689  059F  01B3               	clrf	??___flmul+2
  7690  05A0  01B4               	clrf	??___flmul+3
  7691  05A1  0831               	movf	??___flmul,w
  7692  05A2  07BD               	addwf	___flmul@prod,f
  7693  05A3  0832               	movf	??___flmul+1,w
  7694  05A4  1103               	clrz
  7695  05A5  1803               	skipnc
  7696  05A6  3E01               	addlw	1
  7697  05A7  1D03               	btfss	3,2
  7698  05A8  07BE               	addwf	___flmul@prod+1,f
  7699  05A9  0833               	movf	??___flmul+2,w
  7700  05AA  1103               	clrz
  7701  05AB  1803               	skipnc
  7702  05AC  3E01               	addlw	1
  7703  05AD  1D03               	btfss	3,2
  7704  05AE  07BF               	addwf	___flmul@prod+2,f
  7705  05AF  0834               	movf	??___flmul+3,w
  7706  05B0  1103               	clrz
  7707  05B1  1803               	skipnc
  7708  05B2  3E01               	addlw	1
  7709  05B3  1D03               	btfss	3,2
  7710  05B4  07C0               	addwf	___flmul@prod+3,f
  7711  05B5  082B               	movf	___flmul@b+2,w
  7712  05B6  00B1               	movwf	??___flmul
  7713  05B7  0831               	movf	??___flmul,w
  7714  05B8  00A0               	movwf	__Umul8_16@multiplicand
  7715  05B9  082F               	movf	___flmul@a+2,w
  7716  05BA  160A  158A  26CC  120A  118A  	fcall	__Umul8_16
  7717  05BF  0821               	movf	?__Umul8_16+1,w
  7718  05C0  00C2               	movwf	___flmul@temp+1
  7719  05C1  0820               	movf	?__Umul8_16,w
  7720  05C2  00C1               	movwf	___flmul@temp
  7721  05C3  0841               	movf	___flmul@temp,w
  7722  05C4  00B1               	movwf	??___flmul
  7723  05C5  0842               	movf	___flmul@temp+1,w
  7724  05C6  00B2               	movwf	??___flmul+1
  7725  05C7  01B3               	clrf	??___flmul+2
  7726  05C8  01B4               	clrf	??___flmul+3
  7727  05C9  3008               	movlw	8
  7728  05CA                     u3665:	
  7729  05CA  1003               	clrc
  7730  05CB  0DB1               	rlf	??___flmul,f
  7731  05CC  0DB2               	rlf	??___flmul+1,f
  7732  05CD  0DB3               	rlf	??___flmul+2,f
  7733  05CE  0DB4               	rlf	??___flmul+3,f
  7734  05CF  3EFF               	addlw	-1
  7735  05D0  1D03               	skipz
  7736  05D1  2DCA               	goto	u3665
  7737  05D2  0831               	movf	??___flmul,w
  7738  05D3  07BD               	addwf	___flmul@prod,f
  7739  05D4  0832               	movf	??___flmul+1,w
  7740  05D5  1103               	clrz
  7741  05D6  1803               	skipnc
  7742  05D7  3E01               	addlw	1
  7743  05D8  1D03               	btfss	3,2
  7744  05D9  07BE               	addwf	___flmul@prod+1,f
  7745  05DA  0833               	movf	??___flmul+2,w
  7746  05DB  1103               	clrz
  7747  05DC  1803               	skipnc
  7748  05DD  3E01               	addlw	1
  7749  05DE  1D03               	btfss	3,2
  7750  05DF  07BF               	addwf	___flmul@prod+2,f
  7751  05E0  0834               	movf	??___flmul+3,w
  7752  05E1  1103               	clrz
  7753  05E2  1803               	skipnc
  7754  05E3  3E01               	addlw	1
  7755  05E4  1D03               	btfss	3,2
  7756  05E5  07C0               	addwf	___flmul@prod+3,f
  7757  05E6  083B               	movf	___flmul@grs+3,w
  7758  05E7  00B1               	movwf	??___flmul
  7759  05E8  01B2               	clrf	??___flmul+1
  7760  05E9  01B3               	clrf	??___flmul+2
  7761  05EA  01B4               	clrf	??___flmul+3
  7762  05EB  0831               	movf	??___flmul,w
  7763  05EC  07BD               	addwf	___flmul@prod,f
  7764  05ED  0832               	movf	??___flmul+1,w
  7765  05EE  1103               	clrz
  7766  05EF  1803               	skipnc
  7767  05F0  3E01               	addlw	1
  7768  05F1  1D03               	btfss	3,2
  7769  05F2  07BE               	addwf	___flmul@prod+1,f
  7770  05F3  0833               	movf	??___flmul+2,w
  7771  05F4  1103               	clrz
  7772  05F5  1803               	skipnc
  7773  05F6  3E01               	addlw	1
  7774  05F7  1D03               	btfss	3,2
  7775  05F8  07BF               	addwf	___flmul@prod+2,f
  7776  05F9  0834               	movf	??___flmul+3,w
  7777  05FA  1103               	clrz
  7778  05FB  1803               	skipnc
  7779  05FC  3E01               	addlw	1
  7780  05FD  1D03               	btfss	3,2
  7781  05FE  07C0               	addwf	___flmul@prod+3,f
  7782  05FF  3008               	movlw	8
  7783  0600  00B1               	movwf	??___flmul
  7784  0601                     u3695:	
  7785  0601  1003               	clrc
  7786  0602  0DB8               	rlf	___flmul@grs,f
  7787  0603  0DB9               	rlf	___flmul@grs+1,f
  7788  0604  0DBA               	rlf	___flmul@grs+2,f
  7789  0605  0DBB               	rlf	___flmul@grs+3,f
  7790  0606  0BB1               	decfsz	??___flmul,f
  7791  0607  2E01               	goto	u3695
  7792  0608  083C               	movf	___flmul@bexp,w
  7793  0609  0737               	addwf	___flmul@aexp,w
  7794  060A  00B1               	movwf	??___flmul
  7795  060B  01B2               	clrf	??___flmul+1
  7796  060C  0DB2               	rlf	??___flmul+1,f
  7797  060D  0831               	movf	??___flmul,w
  7798  060E  3E82               	addlw	130
  7799  060F  00C1               	movwf	___flmul@temp
  7800  0610  0832               	movf	??___flmul+1,w
  7801  0611  1803               	skipnc
  7802  0612  3E01               	addlw	1
  7803  0613  3EFF               	addlw	255
  7804  0614  00C2               	movwf	___flmul@temp+1
  7805  0615                     l4109:	
  7806  0615  1BBF               	btfsc	___flmul@prod+2,7
  7807  0616  2E32               	goto	l4111
  7808  0617  3001               	movlw	1
  7809  0618  00B1               	movwf	??___flmul
  7810  0619                     u3705:	
  7811  0619  1003               	clrc
  7812  061A  0DBD               	rlf	___flmul@prod,f
  7813  061B  0DBE               	rlf	___flmul@prod+1,f
  7814  061C  0DBF               	rlf	___flmul@prod+2,f
  7815  061D  0DC0               	rlf	___flmul@prod+3,f
  7816  061E  0BB1               	decfsz	??___flmul,f
  7817  061F  2E19               	goto	u3705
  7818  0620  1BBB               	btfsc	___flmul@grs+3,7
  7819  0621  143D               	bsf	___flmul@prod,0
  7820  0622  3001               	movlw	1
  7821  0623  00B1               	movwf	??___flmul
  7822  0624                     u3725:	
  7823  0624  1003               	clrc
  7824  0625  0DB8               	rlf	___flmul@grs,f
  7825  0626  0DB9               	rlf	___flmul@grs+1,f
  7826  0627  0DBA               	rlf	___flmul@grs+2,f
  7827  0628  0DBB               	rlf	___flmul@grs+3,f
  7828  0629  0BB1               	decfsz	??___flmul,f
  7829  062A  2E24               	goto	u3725
  7830  062B  30FF               	movlw	255
  7831  062C  07C1               	addwf	___flmul@temp,f
  7832  062D  1803               	skipnc
  7833  062E  0AC2               	incf	___flmul@temp+1,f
  7834  062F  30FF               	movlw	255
  7835  0630  07C2               	addwf	___flmul@temp+1,f
  7836  0631  2E15               	goto	l4109
  7837  0632                     l4111:	
  7838  0632  01B7               	clrf	___flmul@aexp
  7839  0633  1FBB               	btfss	___flmul@grs+3,7
  7840  0634  2E4B               	goto	l4121
  7841  0635  30FF               	movlw	255
  7842  0636  0538               	andwf	___flmul@grs,w
  7843  0637  00B1               	movwf	??___flmul
  7844  0638  30FF               	movlw	255
  7845  0639  0539               	andwf	___flmul@grs+1,w
  7846  063A  00B2               	movwf	??___flmul+1
  7847  063B  30FF               	movlw	255
  7848  063C  053A               	andwf	___flmul@grs+2,w
  7849  063D  00B3               	movwf	??___flmul+2
  7850  063E  307F               	movlw	127
  7851  063F  053B               	andwf	___flmul@grs+3,w
  7852  0640  00B4               	movwf	??___flmul+3
  7853  0641  0834               	movf	??___flmul+3,w
  7854  0642  0433               	iorwf	??___flmul+2,w
  7855  0643  0432               	iorwf	??___flmul+1,w
  7856  0644  0431               	iorwf	??___flmul,w
  7857  0645  1903               	skipnz
  7858  0646  183D               	btfsc	___flmul@prod,0
  7859  0647  2E49               	goto	l4117
  7860  0648  2E4B               	goto	l4121
  7861  0649                     l4117:	
  7862  0649  01B7               	clrf	___flmul@aexp
  7863  064A  0AB7               	incf	___flmul@aexp,f
  7864  064B                     l4121:	
  7865  064B  0837               	movf	___flmul@aexp,w
  7866  064C  1903               	btfsc	3,2
  7867  064D  2E7D               	goto	l4131
  7868  064E  3001               	movlw	1
  7869  064F  07BD               	addwf	___flmul@prod,f
  7870  0650  3000               	movlw	0
  7871  0651  1803               	skipnc
  7872  0652  3001               	movlw	1
  7873  0653  07BE               	addwf	___flmul@prod+1,f
  7874  0654  3000               	movlw	0
  7875  0655  1803               	skipnc
  7876  0656  3001               	movlw	1
  7877  0657  07BF               	addwf	___flmul@prod+2,f
  7878  0658  3000               	movlw	0
  7879  0659  1803               	skipnc
  7880  065A  3001               	movlw	1
  7881  065B  07C0               	addwf	___flmul@prod+3,f
  7882  065C  1C40               	btfss	___flmul@prod+3,0
  7883  065D  2E7D               	goto	l4131
  7884  065E  083D               	movf	___flmul@prod,w
  7885  065F  00B1               	movwf	??___flmul
  7886  0660  083E               	movf	___flmul@prod+1,w
  7887  0661  00B2               	movwf	??___flmul+1
  7888  0662  083F               	movf	___flmul@prod+2,w
  7889  0663  00B3               	movwf	??___flmul+2
  7890  0664  0840               	movf	___flmul@prod+3,w
  7891  0665  00B4               	movwf	??___flmul+3
  7892  0666  3001               	movlw	1
  7893  0667  00B5               	movwf	??___flmul+4
  7894  0668                     u3795:	
  7895  0668  0D34               	rlf	??___flmul+3,w
  7896  0669  0CB4               	rrf	??___flmul+3,f
  7897  066A  0CB3               	rrf	??___flmul+2,f
  7898  066B  0CB2               	rrf	??___flmul+1,f
  7899  066C  0CB1               	rrf	??___flmul,f
  7900  066D  0BB5               	decfsz	??___flmul+4,f
  7901  066E  2E68               	goto	u3795
  7902  066F  0834               	movf	??___flmul+3,w
  7903  0670  00C0               	movwf	___flmul@prod+3
  7904  0671  0833               	movf	??___flmul+2,w
  7905  0672  00BF               	movwf	___flmul@prod+2
  7906  0673  0832               	movf	??___flmul+1,w
  7907  0674  00BE               	movwf	___flmul@prod+1
  7908  0675  0831               	movf	??___flmul,w
  7909  0676  00BD               	movwf	___flmul@prod
  7910  0677  3001               	movlw	1
  7911  0678  07C1               	addwf	___flmul@temp,f
  7912  0679  1803               	skipnc
  7913  067A  0AC2               	incf	___flmul@temp+1,f
  7914  067B  3000               	movlw	0
  7915  067C  07C2               	addwf	___flmul@temp+1,f
  7916  067D                     l4131:	
  7917  067D  0842               	movf	___flmul@temp+1,w
  7918  067E  3A80               	xorlw	128
  7919  067F  00FF               	movwf	127
  7920  0680  3080               	movlw	128
  7921  0681  027F               	subwf	127,w
  7922  0682  1D03               	skipz
  7923  0683  2E86               	goto	u3805
  7924  0684  30FF               	movlw	255
  7925  0685  0241               	subwf	___flmul@temp,w
  7926  0686                     u3805:	
  7927  0686  1C03               	skipc
  7928  0687  2E93               	goto	l4135
  7929  0688  307F               	movlw	127
  7930  0689  1283               	bcf	3,5	;RP0=0, select bank0
  7931  068A  1303               	bcf	3,6	;RP1=0, select bank0
  7932  068B  00C0               	movwf	___flmul@prod+3
  7933  068C  3080               	movlw	128
  7934  068D  00BF               	movwf	___flmul@prod+2
  7935  068E  3000               	movlw	0
  7936  068F  00BE               	movwf	___flmul@prod+1
  7937  0690  3000               	movlw	0
  7938  0691  00BD               	movwf	___flmul@prod
  7939  0692  2EC3               	goto	l1372
  7940  0693                     l4135:	
  7941  0693  1283               	bcf	3,5	;RP0=0, select bank0
  7942  0694  1303               	bcf	3,6	;RP1=0, select bank0
  7943  0695  0842               	movf	___flmul@temp+1,w
  7944  0696  3A80               	xorlw	128
  7945  0697  00FF               	movwf	127
  7946  0698  3080               	movlw	128
  7947  0699  027F               	subwf	127,w
  7948  069A  1D03               	skipz
  7949  069B  2E9E               	goto	u3815
  7950  069C  3001               	movlw	1
  7951  069D  0241               	subwf	___flmul@temp,w
  7952  069E                     u3815:	
  7953  069E  1803               	skipnc
  7954  069F  2EAC               	goto	l4141
  7955  06A0  3000               	movlw	0
  7956  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  7957  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  7958  06A3  00C0               	movwf	___flmul@prod+3
  7959  06A4  3000               	movlw	0
  7960  06A5  00BF               	movwf	___flmul@prod+2
  7961  06A6  3000               	movlw	0
  7962  06A7  00BE               	movwf	___flmul@prod+1
  7963  06A8  3000               	movlw	0
  7964  06A9  00BD               	movwf	___flmul@prod
  7965  06AA  01B6               	clrf	___flmul@sign
  7966  06AB  2EC3               	goto	l1372
  7967  06AC                     l4141:	
  7968  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  7969  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  7970  06AE  0841               	movf	___flmul@temp,w
  7971  06AF  00B1               	movwf	??___flmul
  7972  06B0  0831               	movf	??___flmul,w
  7973  06B1  00BC               	movwf	___flmul@bexp
  7974  06B2  30FF               	movlw	255
  7975  06B3  05BD               	andwf	___flmul@prod,f
  7976  06B4  30FF               	movlw	255
  7977  06B5  05BE               	andwf	___flmul@prod+1,f
  7978  06B6  307F               	movlw	127
  7979  06B7  05BF               	andwf	___flmul@prod+2,f
  7980  06B8  3000               	movlw	0
  7981  06B9  05C0               	andwf	___flmul@prod+3,f
  7982  06BA  183C               	btfsc	___flmul@bexp,0
  7983  06BB  17BF               	bsf	___flmul@prod+2,7
  7984  06BC  083C               	movf	___flmul@bexp,w
  7985  06BD  00B1               	movwf	??___flmul
  7986  06BE  1003               	clrc
  7987  06BF  0C31               	rrf	??___flmul,w
  7988  06C0  00B2               	movwf	??___flmul+1
  7989  06C1  0832               	movf	??___flmul+1,w
  7990  06C2  00C0               	movwf	___flmul@prod+3
  7991  06C3                     l1372:	
  7992  06C3  0836               	movf	___flmul@sign,w
  7993  06C4  00B1               	movwf	??___flmul
  7994  06C5  0831               	movf	??___flmul,w
  7995  06C6  04C0               	iorwf	___flmul@prod+3,f
  7996  06C7  0840               	movf	___flmul@prod+3,w
  7997  06C8  00AC               	movwf	?___flmul+3
  7998  06C9  083F               	movf	___flmul@prod+2,w
  7999  06CA  00AB               	movwf	?___flmul+2
  8000  06CB  083E               	movf	___flmul@prod+1,w
  8001  06CC  00AA               	movwf	?___flmul+1
  8002  06CD  083D               	movf	___flmul@prod,w
  8003  06CE  00A9               	movwf	?___flmul
  8004  06CF  0008               	return
  8005  06D0                     __end_of___flmul:	
  8006                           
  8007                           	psect	text23
  8008  1ECC                     __ptext23:	
  8009 ;; *************** function __Umul8_16 *****************
  8010 ;; Defined at:
  8011 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;  multiplier      1    wreg     unsigned char 
  8014 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8017 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8018 ;;  product         2    4[BANK0 ] unsigned int 
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  2    0[BANK0 ] unsigned int 
  8021 ;; Registers used:
  8022 ;;		wreg, status,2, status,0
  8023 ;; Tracked objects:
  8024 ;;		On entry : 300/0
  8025 ;;		On exit  : 300/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8028 ;;      Params:         0       2       0       0       0
  8029 ;;      Locals:         0       5       0       0       0
  8030 ;;      Temps:          0       2       0       0       0
  8031 ;;      Totals:         0       9       0       0       0
  8032 ;;Total ram usage:        9 bytes
  8033 ;; Hardware stack levels used:    1
  8034 ;; Hardware stack levels required when called:    1
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		___flmul
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           
  8043                           ;psect for function __Umul8_16
  8044  1ECC                     __Umul8_16:	
  8045                           
  8046                           ;incstack = 0
  8047                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8048                           ;__Umul8_16@multiplier stored from wreg
  8049  1ECC  00A8               	movwf	__Umul8_16@multiplier
  8050  1ECD  01A4               	clrf	__Umul8_16@product
  8051  1ECE  01A5               	clrf	__Umul8_16@product+1
  8052  1ECF  0820               	movf	__Umul8_16@multiplicand,w
  8053  1ED0  00A2               	movwf	??__Umul8_16
  8054  1ED1  01A3               	clrf	??__Umul8_16+1
  8055  1ED2  0822               	movf	??__Umul8_16,w
  8056  1ED3  00A6               	movwf	__Umul8_16@word_mpld
  8057  1ED4  0823               	movf	??__Umul8_16+1,w
  8058  1ED5  00A7               	movwf	__Umul8_16@word_mpld+1
  8059  1ED6                     l3547:	
  8060  1ED6  1C28               	btfss	__Umul8_16@multiplier,0
  8061  1ED7  2EDE               	goto	l1445
  8062  1ED8  0826               	movf	__Umul8_16@word_mpld,w
  8063  1ED9  07A4               	addwf	__Umul8_16@product,f
  8064  1EDA  1803               	skipnc
  8065  1EDB  0AA5               	incf	__Umul8_16@product+1,f
  8066  1EDC  0827               	movf	__Umul8_16@word_mpld+1,w
  8067  1EDD  07A5               	addwf	__Umul8_16@product+1,f
  8068  1EDE                     l1445:	
  8069  1EDE  3001               	movlw	1
  8070  1EDF                     u2665:	
  8071  1EDF  1003               	clrc
  8072  1EE0  0DA6               	rlf	__Umul8_16@word_mpld,f
  8073  1EE1  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8074  1EE2  3EFF               	addlw	-1
  8075  1EE3  1D03               	skipz
  8076  1EE4  2EDF               	goto	u2665
  8077  1EE5  1003               	clrc
  8078  1EE6  0CA8               	rrf	__Umul8_16@multiplier,f
  8079  1EE7  0828               	movf	__Umul8_16@multiplier,w
  8080  1EE8  1D03               	btfss	3,2
  8081  1EE9  2ED6               	goto	l3547
  8082  1EEA  0825               	movf	__Umul8_16@product+1,w
  8083  1EEB  00A1               	movwf	?__Umul8_16+1
  8084  1EEC  0824               	movf	__Umul8_16@product,w
  8085  1EED  00A0               	movwf	?__Umul8_16
  8086  1EEE  0008               	return
  8087  1EEF                     __end_of__Umul8_16:	
  8088                           
  8089                           	psect	text24
  8090  1D7B                     __ptext24:	
  8091 ;; *************** function _PROCULUS_VP_Write_String *****************
  8092 ;; Defined at:
  8093 ;;		line 205 in file "proculus.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;  vp              2   58[BANK0 ] unsigned int 
  8096 ;;  text            1   60[BANK0 ] PTR unsigned char 
  8097 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;		None
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  1    wreg      void 
  8102 ;; Registers used:
  8103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8104 ;; Tracked objects:
  8105 ;;		On entry : 300/0
  8106 ;;		On exit  : 300/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8109 ;;      Params:         0       3       0       0       0
  8110 ;;      Locals:         0       0       0       0       0
  8111 ;;      Temps:          0       1       0       0       0
  8112 ;;      Totals:         0       4       0       0       0
  8113 ;;Total ram usage:        4 bytes
  8114 ;; Hardware stack levels used:    1
  8115 ;; Hardware stack levels required when called:    4
  8116 ;; This function calls:
  8117 ;;		_PROCULUS_VP_Write
  8118 ;;		_strlen
  8119 ;; This function is called by:
  8120 ;;		_Decodify_Command
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           
  8125                           ;psect for function _PROCULUS_VP_Write_String
  8126  1D7B                     _PROCULUS_VP_Write_String:	
  8127                           
  8128                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  8129                           
  8130                           ;incstack = 0
  8131                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8132  1D7B  085B               	movf	PROCULUS_VP_Write_String@vp+1,w
  8133  1D7C  00D3               	movwf	PROCULUS_VP_Write@vp+1
  8134  1D7D  085A               	movf	PROCULUS_VP_Write_String@vp,w
  8135  1D7E  00D2               	movwf	PROCULUS_VP_Write@vp
  8136  1D7F  085C               	movf	PROCULUS_VP_Write_String@text,w
  8137  1D80  00D4               	movwf	PROCULUS_VP_Write@vetor
  8138  1D81  3001               	movlw	1
  8139  1D82  00D5               	movwf	PROCULUS_VP_Write@vetor+1
  8140  1D83  085C               	movf	PROCULUS_VP_Write_String@text,w
  8141  1D84  00A0               	movwf	strlen@s
  8142  1D85  3001               	movlw	1
  8143  1D86  00A1               	movwf	strlen@s+1
  8144  1D87  160A  158A  2595  160A  158A  	fcall	_strlen
  8145  1D8C  0820               	movf	?_strlen,w
  8146  1D8D  3E01               	addlw	1
  8147  1D8E  00DD               	movwf	??_PROCULUS_VP_Write_String
  8148  1D8F  085D               	movf	??_PROCULUS_VP_Write_String,w
  8149  1D90  00D6               	movwf	PROCULUS_VP_Write@size
  8150  1D91  160A  118A  225A   	fcall	_PROCULUS_VP_Write
  8151  1D94  0008               	return
  8152  1D95                     __end_of_PROCULUS_VP_Write_String:	
  8153                           
  8154                           	psect	text25
  8155  1D95                     __ptext25:	
  8156 ;; *************** function _strlen *****************
  8157 ;; Defined at:
  8158 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  8161 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8162 ;; Auto vars:     Size  Location     Type
  8163 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  8164 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  2    0[BANK0 ] unsigned int 
  8167 ;; Registers used:
  8168 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8169 ;; Tracked objects:
  8170 ;;		On entry : 300/0
  8171 ;;		On exit  : 300/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8174 ;;      Params:         0       2       0       0       0
  8175 ;;      Locals:         0       2       0       0       0
  8176 ;;      Temps:          0       0       0       0       0
  8177 ;;      Totals:         0       4       0       0       0
  8178 ;;Total ram usage:        4 bytes
  8179 ;; Hardware stack levels used:    1
  8180 ;; Hardware stack levels required when called:    1
  8181 ;; This function calls:
  8182 ;;		Nothing
  8183 ;; This function is called by:
  8184 ;;		_Decodify_Command
  8185 ;;		_PROCULUS_VP_Write_String
  8186 ;; This function uses a non-reentrant model
  8187 ;;
  8188                           
  8189                           
  8190                           ;psect for function _strlen
  8191  1D95                     _strlen:	
  8192                           
  8193                           ;incstack = 0
  8194                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8195  1D95  0820               	movf	strlen@s,w
  8196  1D96  00A2               	movwf	strlen@cp
  8197  1D97  0821               	movf	strlen@s+1,w
  8198  1D98  00A3               	movwf	strlen@cp+1
  8199  1D99                     l5355:	
  8200  1D99  0822               	movf	strlen@cp,w
  8201  1D9A  0084               	movwf	4
  8202  1D9B  1783               	bsf	3,7
  8203  1D9C  1C23               	btfss	strlen@cp+1,0
  8204  1D9D  1383               	bcf	3,7
  8205  1D9E  0800               	movf	0,w
  8206  1D9F  1903               	btfsc	3,2
  8207  1DA0  2DA8               	goto	l5357
  8208  1DA1  3001               	movlw	1
  8209  1DA2  07A2               	addwf	strlen@cp,f
  8210  1DA3  1803               	skipnc
  8211  1DA4  0AA3               	incf	strlen@cp+1,f
  8212  1DA5  3000               	movlw	0
  8213  1DA6  07A3               	addwf	strlen@cp+1,f
  8214  1DA7  2D99               	goto	l5355
  8215  1DA8                     l5357:	
  8216  1DA8  0820               	movf	strlen@s,w
  8217  1DA9  0222               	subwf	strlen@cp,w
  8218  1DAA  00A0               	movwf	?_strlen
  8219  1DAB  0821               	movf	strlen@s+1,w
  8220  1DAC  1C03               	skipc
  8221  1DAD  0A21               	incf	strlen@s+1,w
  8222  1DAE  0223               	subwf	strlen@cp+1,w
  8223  1DAF  00A1               	movwf	?_strlen+1
  8224  1DB0  0008               	return
  8225  1DB1                     __end_of_strlen:	
  8226                           
  8227                           	psect	text26
  8228  125A                     __ptext26:	
  8229 ;; *************** function _PROCULUS_VP_Write *****************
  8230 ;; Defined at:
  8231 ;;		line 40 in file "proculus.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;  vp              2   50[BANK0 ] unsigned int 
  8234 ;;  vetor           2   52[BANK0 ] PTR unsigned char 
  8235 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  8236 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(52), usart_protocol(58), 
  8237 ;;  size            1   54[BANK0 ] unsigned char 
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;  i               1   57[BANK0 ] unsigned char 
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  1    wreg      void 
  8242 ;; Registers used:
  8243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8244 ;; Tracked objects:
  8245 ;;		On entry : 300/0
  8246 ;;		On exit  : 300/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8249 ;;      Params:         0       5       0       0       0
  8250 ;;      Locals:         0       1       0       0       0
  8251 ;;      Temps:          0       2       0       0       0
  8252 ;;      Totals:         0       8       0       0       0
  8253 ;;Total ram usage:        8 bytes
  8254 ;; Hardware stack levels used:    1
  8255 ;; Hardware stack levels required when called:    3
  8256 ;; This function calls:
  8257 ;;		_PROCULUS_Delay
  8258 ;;		_USART_put_int
  8259 ;;		_USART_putc
  8260 ;; This function is called by:
  8261 ;;		_PROCULUS_VP_Write_String
  8262 ;; This function uses a non-reentrant model
  8263 ;;
  8264                           
  8265                           
  8266                           ;psect for function _PROCULUS_VP_Write
  8267  125A                     _PROCULUS_VP_Write:	
  8268                           
  8269                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  8270                           
  8271                           ;incstack = 0
  8272                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8273  125A  30A5               	movlw	165
  8274  125B  00CE               	movwf	USART_put_int@value
  8275  125C  305A               	movlw	90
  8276  125D  00CF               	movwf	USART_put_int@value+1
  8277  125E  160A  158A  254C  160A  118A  	fcall	_USART_put_int
  8278                           
  8279                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  8280  1263  1283               	bcf	3,5	;RP0=0, select bank0
  8281  1264  0856               	movf	PROCULUS_VP_Write@size,w
  8282  1265  3E03               	addlw	3
  8283  1266  160A  158A  2501  160A  118A  	fcall	_USART_putc
  8284                           
  8285                           ;proculus.c: 43:      USART_putc(0x82);
  8286  126B  3082               	movlw	130
  8287  126C  160A  158A  2501  160A  118A  	fcall	_USART_putc
  8288                           
  8289                           ;proculus.c: 44:      USART_put_int(vp);
  8290  1271  1283               	bcf	3,5	;RP0=0, select bank0
  8291  1272  0853               	movf	PROCULUS_VP_Write@vp+1,w
  8292  1273  00CF               	movwf	USART_put_int@value+1
  8293  1274  0852               	movf	PROCULUS_VP_Write@vp,w
  8294  1275  00CE               	movwf	USART_put_int@value
  8295  1276  160A  158A  254C  160A  118A  	fcall	_USART_put_int
  8296                           
  8297                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  8298  127B  1283               	bcf	3,5	;RP0=0, select bank0
  8299  127C  01D9               	clrf	PROCULUS_VP_Write@i
  8300  127D                     l5373:	
  8301  127D  0856               	movf	PROCULUS_VP_Write@size,w
  8302  127E  0259               	subwf	PROCULUS_VP_Write@i,w
  8303  127F  1803               	btfsc	3,0
  8304  1280  2A99               	goto	l5375
  8305                           
  8306                           ;proculus.c: 46:          USART_putc(vetor[i]);
  8307  1281  0859               	movf	PROCULUS_VP_Write@i,w
  8308  1282  0754               	addwf	PROCULUS_VP_Write@vetor,w
  8309  1283  00D7               	movwf	??_PROCULUS_VP_Write
  8310  1284  0855               	movf	PROCULUS_VP_Write@vetor+1,w
  8311  1285  1803               	skipnc
  8312  1286  3E01               	addlw	1
  8313  1287  00D8               	movwf	??_PROCULUS_VP_Write+1
  8314  1288  0857               	movf	??_PROCULUS_VP_Write,w
  8315  1289  0084               	movwf	4
  8316  128A  1783               	bsf	3,7
  8317  128B  1C58               	btfss	??_PROCULUS_VP_Write+1,0
  8318  128C  1383               	bcf	3,7
  8319  128D  0800               	movf	0,w
  8320  128E  160A  158A  2501  160A  118A  	fcall	_USART_putc
  8321  1293  3001               	movlw	1
  8322  1294  1283               	bcf	3,5	;RP0=0, select bank0
  8323  1295  00D7               	movwf	??_PROCULUS_VP_Write
  8324  1296  0857               	movf	??_PROCULUS_VP_Write,w
  8325  1297  07D9               	addwf	PROCULUS_VP_Write@i,f
  8326  1298  2A7D               	goto	l5373
  8327  1299                     l5375:	
  8328                           
  8329                           ;proculus.c: 48:      PROCULUS_Delay(1);
  8330  1299  3001               	movlw	1
  8331  129A  00A0               	movwf	PROCULUS_Delay@tempo_ms
  8332  129B  3000               	movlw	0
  8333  129C  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  8334  129D  160A  158A  25B1   	fcall	_PROCULUS_Delay
  8335  12A0  0008               	return
  8336  12A1                     __end_of_PROCULUS_VP_Write:	
  8337                           
  8338                           	psect	text27
  8339  07EB                     __ptext27:	
  8340 ;; *************** function _PROCULUS_Show_Screen *****************
  8341 ;; Defined at:
  8342 ;;		line 243 in file "proculus.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;  screen          2   54[BANK0 ] unsigned int 
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;  vetor           3   57[BANK0 ] unsigned char [3]
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  1    wreg      void 
  8349 ;; Registers used:
  8350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8351 ;; Tracked objects:
  8352 ;;		On entry : 300/0
  8353 ;;		On exit  : 300/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8356 ;;      Params:         0       2       0       0       0
  8357 ;;      Locals:         0       3       0       0       0
  8358 ;;      Temps:          0       1       0       0       0
  8359 ;;      Totals:         0       6       0       0       0
  8360 ;;Total ram usage:        6 bytes
  8361 ;; Hardware stack levels used:    1
  8362 ;; Hardware stack levels required when called:    4
  8363 ;; This function calls:
  8364 ;;		_PROCULUS_Control_Register_Write
  8365 ;; This function is called by:
  8366 ;;		_Decodify_Command
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           
  8371                           ;psect for function _PROCULUS_Show_Screen
  8372  07EB                     _PROCULUS_Show_Screen:	
  8373                           
  8374                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  8375                           
  8376                           ;incstack = 0
  8377                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8378  07EB  3003               	movlw	3
  8379  07EC  00D8               	movwf	??_PROCULUS_Show_Screen
  8380  07ED  0858               	movf	??_PROCULUS_Show_Screen,w
  8381  07EE  00D9               	movwf	PROCULUS_Show_Screen@vetor
  8382                           
  8383                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  8384  07EF  0857               	movf	PROCULUS_Show_Screen@screen+1,w
  8385  07F0  00D8               	movwf	??_PROCULUS_Show_Screen
  8386  07F1  0858               	movf	??_PROCULUS_Show_Screen,w
  8387  07F2  00DA               	movwf	PROCULUS_Show_Screen@vetor+1
  8388                           
  8389                           ;proculus.c: 247:      vetor[2] = (char) screen;
  8390  07F3  0856               	movf	PROCULUS_Show_Screen@screen,w
  8391  07F4  00D8               	movwf	??_PROCULUS_Show_Screen
  8392  07F5  0858               	movf	??_PROCULUS_Show_Screen,w
  8393  07F6  00DB               	movwf	PROCULUS_Show_Screen@vetor+2
  8394                           
  8395                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  8396  07F7  3003               	movlw	3
  8397  07F8  00D8               	movwf	??_PROCULUS_Show_Screen
  8398  07F9  0858               	movf	??_PROCULUS_Show_Screen,w
  8399  07FA  00D2               	movwf	PROCULUS_Control_Register_Write@size
  8400  07FB  3059               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  8401  07FC  160A  118A  212F   	fcall	_PROCULUS_Control_Register_Write
  8402  07FF  0008               	return
  8403  0800                     __end_of_PROCULUS_Show_Screen:	
  8404                           
  8405                           	psect	text28
  8406  1EAA                     __ptext28:	
  8407 ;; *************** function _PROCULUS_Buzzer *****************
  8408 ;; Defined at:
  8409 ;;		line 223 in file "proculus.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  time_ms_x_10    2   54[BANK0 ] unsigned int 
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;  vetor           2   57[BANK0 ] unsigned char [2]
  8414 ;; Return value:  Size  Location     Type
  8415 ;;                  1    wreg      void 
  8416 ;; Registers used:
  8417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8418 ;; Tracked objects:
  8419 ;;		On entry : 300/0
  8420 ;;		On exit  : 300/0
  8421 ;;		Unchanged: 0/0
  8422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8423 ;;      Params:         0       2       0       0       0
  8424 ;;      Locals:         0       2       0       0       0
  8425 ;;      Temps:          0       1       0       0       0
  8426 ;;      Totals:         0       5       0       0       0
  8427 ;;Total ram usage:        5 bytes
  8428 ;; Hardware stack levels used:    1
  8429 ;; Hardware stack levels required when called:    4
  8430 ;; This function calls:
  8431 ;;		_PROCULUS_Control_Register_Write
  8432 ;;		___lwdiv
  8433 ;; This function is called by:
  8434 ;;		_Decodify_Command
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438                           
  8439                           ;psect for function _PROCULUS_Buzzer
  8440  1EAA                     _PROCULUS_Buzzer:	
  8441                           
  8442                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  8443                           
  8444                           ;incstack = 0
  8445                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8446  1EAA  300A               	movlw	10
  8447  1EAB  00A0               	movwf	___lwdiv@divisor
  8448  1EAC  3000               	movlw	0
  8449  1EAD  00A1               	movwf	___lwdiv@divisor+1
  8450  1EAE  0857               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  8451  1EAF  00A3               	movwf	___lwdiv@dividend+1
  8452  1EB0  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  8453  1EB1  00A2               	movwf	___lwdiv@dividend
  8454  1EB2  160A  118A  21A3  160A  158A  	fcall	___lwdiv
  8455  1EB7  0821               	movf	?___lwdiv+1,w
  8456  1EB8  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  8457  1EB9  0820               	movf	?___lwdiv,w
  8458  1EBA  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  8459                           
  8460                           ;proculus.c: 226:      vetor[0]=0x02;
  8461  1EBB  3002               	movlw	2
  8462  1EBC  00D8               	movwf	??_PROCULUS_Buzzer
  8463  1EBD  0858               	movf	??_PROCULUS_Buzzer,w
  8464  1EBE  00D9               	movwf	PROCULUS_Buzzer@vetor
  8465                           
  8466                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  8467  1EBF  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  8468  1EC0  00D8               	movwf	??_PROCULUS_Buzzer
  8469  1EC1  0858               	movf	??_PROCULUS_Buzzer,w
  8470  1EC2  00DA               	movwf	PROCULUS_Buzzer@vetor+1
  8471                           
  8472                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  8473  1EC3  3002               	movlw	2
  8474  1EC4  00D8               	movwf	??_PROCULUS_Buzzer
  8475  1EC5  0858               	movf	??_PROCULUS_Buzzer,w
  8476  1EC6  00D2               	movwf	PROCULUS_Control_Register_Write@size
  8477  1EC7  3059               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  8478  1EC8  160A  118A  212F   	fcall	_PROCULUS_Control_Register_Write
  8479  1ECB  0008               	return
  8480  1ECC                     __end_of_PROCULUS_Buzzer:	
  8481                           
  8482                           	psect	text29
  8483  11A3                     __ptext29:	
  8484 ;; *************** function ___lwdiv *****************
  8485 ;; Defined at:
  8486 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;  divisor         2    0[BANK0 ] unsigned int 
  8489 ;;  dividend        2    2[BANK0 ] unsigned int 
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;  quotient        2    5[BANK0 ] unsigned int 
  8492 ;;  counter         1    7[BANK0 ] unsigned char 
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  2    0[BANK0 ] unsigned int 
  8495 ;; Registers used:
  8496 ;;		wreg, status,2, status,0
  8497 ;; Tracked objects:
  8498 ;;		On entry : 300/0
  8499 ;;		On exit  : 300/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8502 ;;      Params:         0       4       0       0       0
  8503 ;;      Locals:         0       3       0       0       0
  8504 ;;      Temps:          0       1       0       0       0
  8505 ;;      Totals:         0       8       0       0       0
  8506 ;;Total ram usage:        8 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; Hardware stack levels required when called:    1
  8509 ;; This function calls:
  8510 ;;		Nothing
  8511 ;; This function is called by:
  8512 ;;		_ADC_Media_10bits
  8513 ;;		_PROCULUS_Buzzer
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           
  8518                           ;psect for function ___lwdiv
  8519  11A3                     ___lwdiv:	
  8520                           
  8521                           ;incstack = 0
  8522                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8523  11A3  01A5               	clrf	___lwdiv@quotient
  8524  11A4  01A6               	clrf	___lwdiv@quotient+1
  8525  11A5  0820               	movf	___lwdiv@divisor,w
  8526  11A6  0421               	iorwf	___lwdiv@divisor+1,w
  8527  11A7  1903               	btfsc	3,2
  8528  11A8  29DA               	goto	l3815
  8529  11A9  01A7               	clrf	___lwdiv@counter
  8530  11AA  0AA7               	incf	___lwdiv@counter,f
  8531  11AB                     l3803:	
  8532  11AB  1BA1               	btfsc	___lwdiv@divisor+1,7
  8533  11AC  29B9               	goto	l3805
  8534  11AD  3001               	movlw	1
  8535  11AE                     u2955:	
  8536  11AE  1003               	clrc
  8537  11AF  0DA0               	rlf	___lwdiv@divisor,f
  8538  11B0  0DA1               	rlf	___lwdiv@divisor+1,f
  8539  11B1  3EFF               	addlw	-1
  8540  11B2  1D03               	skipz
  8541  11B3  29AE               	goto	u2955
  8542  11B4  3001               	movlw	1
  8543  11B5  00A4               	movwf	??___lwdiv
  8544  11B6  0824               	movf	??___lwdiv,w
  8545  11B7  07A7               	addwf	___lwdiv@counter,f
  8546  11B8  29AB               	goto	l3803
  8547  11B9                     l3805:	
  8548  11B9  3001               	movlw	1
  8549  11BA                     u2975:	
  8550  11BA  1003               	clrc
  8551  11BB  0DA5               	rlf	___lwdiv@quotient,f
  8552  11BC  0DA6               	rlf	___lwdiv@quotient+1,f
  8553  11BD  3EFF               	addlw	-1
  8554  11BE  1D03               	skipz
  8555  11BF  29BA               	goto	u2975
  8556  11C0  0821               	movf	___lwdiv@divisor+1,w
  8557  11C1  0223               	subwf	___lwdiv@dividend+1,w
  8558  11C2  1D03               	skipz
  8559  11C3  29C6               	goto	u2985
  8560  11C4  0820               	movf	___lwdiv@divisor,w
  8561  11C5  0222               	subwf	___lwdiv@dividend,w
  8562  11C6                     u2985:	
  8563  11C6  1C03               	skipc
  8564  11C7  29CF               	goto	l3811
  8565  11C8  0820               	movf	___lwdiv@divisor,w
  8566  11C9  02A2               	subwf	___lwdiv@dividend,f
  8567  11CA  0821               	movf	___lwdiv@divisor+1,w
  8568  11CB  1C03               	skipc
  8569  11CC  03A3               	decf	___lwdiv@dividend+1,f
  8570  11CD  02A3               	subwf	___lwdiv@dividend+1,f
  8571  11CE  1425               	bsf	___lwdiv@quotient,0
  8572  11CF                     l3811:	
  8573  11CF  3001               	movlw	1
  8574  11D0                     u2995:	
  8575  11D0  1003               	clrc
  8576  11D1  0CA1               	rrf	___lwdiv@divisor+1,f
  8577  11D2  0CA0               	rrf	___lwdiv@divisor,f
  8578  11D3  3EFF               	addlw	-1
  8579  11D4  1D03               	skipz
  8580  11D5  29D0               	goto	u2995
  8581  11D6  3001               	movlw	1
  8582  11D7  02A7               	subwf	___lwdiv@counter,f
  8583  11D8  1D03               	btfss	3,2
  8584  11D9  29B9               	goto	l3805
  8585  11DA                     l3815:	
  8586  11DA  0826               	movf	___lwdiv@quotient+1,w
  8587  11DB  00A1               	movwf	?___lwdiv+1
  8588  11DC  0825               	movf	___lwdiv@quotient,w
  8589  11DD  00A0               	movwf	?___lwdiv
  8590  11DE  0008               	return
  8591  11DF                     __end_of___lwdiv:	
  8592                           
  8593                           	psect	text30
  8594  112F                     __ptext30:	
  8595 ;; *************** function _PROCULUS_Control_Register_Write *****************
  8596 ;; Defined at:
  8597 ;;		line 13 in file "proculus.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;  vetor           1    wreg     PTR unsigned char 
  8600 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  8601 ;;  size            1   50[BANK0 ] unsigned char 
  8602 ;; Auto vars:     Size  Location     Type
  8603 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
  8604 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  8605 ;;  i               1   53[BANK0 ] unsigned char 
  8606 ;; Return value:  Size  Location     Type
  8607 ;;                  1    wreg      void 
  8608 ;; Registers used:
  8609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8610 ;; Tracked objects:
  8611 ;;		On entry : 300/0
  8612 ;;		On exit  : 300/0
  8613 ;;		Unchanged: 0/0
  8614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8615 ;;      Params:         0       1       0       0       0
  8616 ;;      Locals:         0       2       0       0       0
  8617 ;;      Temps:          0       1       0       0       0
  8618 ;;      Totals:         0       4       0       0       0
  8619 ;;Total ram usage:        4 bytes
  8620 ;; Hardware stack levels used:    1
  8621 ;; Hardware stack levels required when called:    3
  8622 ;; This function calls:
  8623 ;;		_PROCULUS_Delay
  8624 ;;		_USART_put_int
  8625 ;;		_USART_putc
  8626 ;; This function is called by:
  8627 ;;		_PROCULUS_Buzzer
  8628 ;;		_PROCULUS_Show_Screen
  8629 ;; This function uses a non-reentrant model
  8630 ;;
  8631                           
  8632                           
  8633                           ;psect for function _PROCULUS_Control_Register_Write
  8634  112F                     _PROCULUS_Control_Register_Write:	
  8635                           
  8636                           ;incstack = 0
  8637                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  8638                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  8639  112F  00D4               	movwf	PROCULUS_Control_Register_Write@vetor
  8640                           
  8641                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  8642  1130  30A5               	movlw	165
  8643  1131  00CE               	movwf	USART_put_int@value
  8644  1132  305A               	movlw	90
  8645  1133  00CF               	movwf	USART_put_int@value+1
  8646  1134  160A  158A  254C  160A  118A  	fcall	_USART_put_int
  8647                           
  8648                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  8649  1139  1283               	bcf	3,5	;RP0=0, select bank0
  8650  113A  0852               	movf	PROCULUS_Control_Register_Write@size,w
  8651  113B  3E01               	addlw	1
  8652  113C  160A  158A  2501  160A  118A  	fcall	_USART_putc
  8653                           
  8654                           ;proculus.c: 16:      USART_putc(0x80);
  8655  1141  3080               	movlw	128
  8656  1142  160A  158A  2501  160A  118A  	fcall	_USART_putc
  8657                           
  8658                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  8659  1147  1283               	bcf	3,5	;RP0=0, select bank0
  8660  1148  01D5               	clrf	PROCULUS_Control_Register_Write@i
  8661  1149                     l3737:	
  8662  1149  0852               	movf	PROCULUS_Control_Register_Write@size,w
  8663  114A  0255               	subwf	PROCULUS_Control_Register_Write@i,w
  8664  114B  1803               	btfsc	3,0
  8665  114C  295F               	goto	l3739
  8666                           
  8667                           ;proculus.c: 18:          USART_putc(vetor[i]);
  8668  114D  0855               	movf	PROCULUS_Control_Register_Write@i,w
  8669  114E  0754               	addwf	PROCULUS_Control_Register_Write@vetor,w
  8670  114F  00D3               	movwf	??_PROCULUS_Control_Register_Write
  8671  1150  0853               	movf	??_PROCULUS_Control_Register_Write,w
  8672  1151  0084               	movwf	4
  8673  1152  1383               	bcf	3,7	;select IRP bank0
  8674  1153  0800               	movf	0,w
  8675  1154  160A  158A  2501  160A  118A  	fcall	_USART_putc
  8676  1159  3001               	movlw	1
  8677  115A  1283               	bcf	3,5	;RP0=0, select bank0
  8678  115B  00D3               	movwf	??_PROCULUS_Control_Register_Write
  8679  115C  0853               	movf	??_PROCULUS_Control_Register_Write,w
  8680  115D  07D5               	addwf	PROCULUS_Control_Register_Write@i,f
  8681  115E  2949               	goto	l3737
  8682  115F                     l3739:	
  8683                           
  8684                           ;proculus.c: 19:      PROCULUS_Delay(1);
  8685  115F  3001               	movlw	1
  8686  1160  00A0               	movwf	PROCULUS_Delay@tempo_ms
  8687  1161  3000               	movlw	0
  8688  1162  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  8689  1163  160A  158A  25B1   	fcall	_PROCULUS_Delay
  8690  1166  0008               	return
  8691  1167                     __end_of_PROCULUS_Control_Register_Write:	
  8692                           
  8693                           	psect	text31
  8694  1D4C                     __ptext31:	
  8695 ;; *************** function _USART_put_int *****************
  8696 ;; Defined at:
  8697 ;;		line 137 in file "usart.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  value           2   46[BANK0 ] int 
  8700 ;; Auto vars:     Size  Location     Type
  8701 ;;  dado            1   49[BANK0 ] PTR unsigned char 
  8702 ;;		 -> USART_put_int@value(2), 
  8703 ;; Return value:  Size  Location     Type
  8704 ;;                  1    wreg      void 
  8705 ;; Registers used:
  8706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8707 ;; Tracked objects:
  8708 ;;		On entry : 300/0
  8709 ;;		On exit  : 300/100
  8710 ;;		Unchanged: 0/0
  8711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8712 ;;      Params:         0       2       0       0       0
  8713 ;;      Locals:         0       1       0       0       0
  8714 ;;      Temps:          0       1       0       0       0
  8715 ;;      Totals:         0       4       0       0       0
  8716 ;;Total ram usage:        4 bytes
  8717 ;; Hardware stack levels used:    1
  8718 ;; Hardware stack levels required when called:    2
  8719 ;; This function calls:
  8720 ;;		_USART_putc
  8721 ;; This function is called by:
  8722 ;;		_Decodify_Command
  8723 ;;		_PROCULUS_Control_Register_Write
  8724 ;;		_PROCULUS_VP_Write
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           
  8729                           ;psect for function _USART_put_int
  8730  1D4C                     _USART_put_int:	
  8731                           
  8732                           ;usart.c: 138:      char *dado;;usart.c: 139:      dado=(char*)&value;
  8733                           
  8734                           ;incstack = 0
  8735                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8736  1D4C  304E               	movlw	(low (USART_put_int@value| 0))& (0+255)
  8737  1D4D  00D0               	movwf	??_USART_put_int
  8738  1D4E  0850               	movf	??_USART_put_int,w
  8739  1D4F  00D1               	movwf	USART_put_int@dado
  8740                           
  8741                           ;usart.c: 140:      USART_putc(*(dado+1));
  8742  1D50  0A51               	incf	USART_put_int@dado,w
  8743  1D51  0084               	movwf	4
  8744  1D52  1383               	bcf	3,7	;select IRP bank0
  8745  1D53  0800               	movf	0,w
  8746  1D54  160A  158A  2501  160A  158A  	fcall	_USART_putc
  8747                           
  8748                           ;usart.c: 141:      USART_putc(*dado);
  8749  1D59  1283               	bcf	3,5	;RP0=0, select bank0
  8750  1D5A  0851               	movf	USART_put_int@dado,w
  8751  1D5B  0084               	movwf	4
  8752  1D5C  1383               	bcf	3,7	;select IRP bank0
  8753  1D5D  0800               	movf	0,w
  8754  1D5E  160A  158A  2501   	fcall	_USART_putc
  8755  1D61  0008               	return
  8756  1D62                     __end_of_USART_put_int:	
  8757                           
  8758                           	psect	text32
  8759  1D01                     __ptext32:	
  8760 ;; *************** function _USART_putc *****************
  8761 ;; Defined at:
  8762 ;;		line 89 in file "usart.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;  value           1    wreg     unsigned char 
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;  value           1    0[BANK0 ] unsigned char 
  8767 ;; Return value:  Size  Location     Type
  8768 ;;                  1    wreg      void 
  8769 ;; Registers used:
  8770 ;;		wreg
  8771 ;; Tracked objects:
  8772 ;;		On entry : 0/100
  8773 ;;		On exit  : 300/100
  8774 ;;		Unchanged: 0/0
  8775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8776 ;;      Params:         0       0       0       0       0
  8777 ;;      Locals:         0       1       0       0       0
  8778 ;;      Temps:          0       0       0       0       0
  8779 ;;      Totals:         0       1       0       0       0
  8780 ;;Total ram usage:        1 bytes
  8781 ;; Hardware stack levels used:    1
  8782 ;; Hardware stack levels required when called:    1
  8783 ;; This function calls:
  8784 ;;		Nothing
  8785 ;; This function is called by:
  8786 ;;		_Decodify_Command
  8787 ;;		_Send_To_MB
  8788 ;;		_PROCULUS_Control_Register_Write
  8789 ;;		_PROCULUS_VP_Write
  8790 ;;		_USART_put_buffer
  8791 ;;		_USART_put_int
  8792 ;;		_USART_put_string
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           
  8797                           ;psect for function _USART_putc
  8798  1D01                     _USART_putc:	
  8799                           
  8800                           ;incstack = 0
  8801                           ; Regs used in _USART_putc: [wreg]
  8802                           ;USART_putc@value stored from wreg
  8803  1D01  1283               	bcf	3,5	;RP0=0, select bank0
  8804  1D02  1303               	bcf	3,6	;RP1=0, select bank0
  8805  1D03  00A0               	movwf	USART_putc@value
  8806                           
  8807                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
  8808  1D04  3014               	movlw	20
  8809  1D05  1683               	bsf	3,5	;RP0=1, select bank1
  8810  1D06  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  8811  1D07  3000               	movlw	0
  8812  1D08  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  8813  1D09                     l854:	
  8814                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
  8815                           
  8816  1D09  1C98               	btfss	24,1	;volatile
  8817  1D0A  2D09               	goto	l854
  8818                           
  8819                           ;usart.c: 93:     TXREG=value;
  8820  1D0B  1283               	bcf	3,5	;RP0=0, select bank0
  8821  1D0C  0820               	movf	USART_putc@value,w
  8822  1D0D  0099               	movwf	25	;volatile
  8823                           
  8824                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
  8825  1D0E  1683               	bsf	3,5	;RP0=1, select bank1
  8826  1D0F  1698               	bsf	24,5	;volatile
  8827  1D10  0008               	return
  8828  1D11                     __end_of_USART_putc:	
  8829                           
  8830                           	psect	text33
  8831  1DB1                     __ptext33:	
  8832 ;; *************** function _PROCULUS_Delay *****************
  8833 ;; Defined at:
  8834 ;;		line 267 in file "proculus.c"
  8835 ;; Parameters:    Size  Location     Type
  8836 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  8837 ;; Auto vars:     Size  Location     Type
  8838 ;;  i               2    4[BANK0 ] unsigned int 
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  1    wreg      void 
  8841 ;; Registers used:
  8842 ;;		wreg, status,2
  8843 ;; Tracked objects:
  8844 ;;		On entry : 300/0
  8845 ;;		On exit  : 300/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8848 ;;      Params:         0       2       0       0       0
  8849 ;;      Locals:         0       2       0       0       0
  8850 ;;      Temps:          0       2       0       0       0
  8851 ;;      Totals:         0       6       0       0       0
  8852 ;;Total ram usage:        6 bytes
  8853 ;; Hardware stack levels used:    1
  8854 ;; Hardware stack levels required when called:    1
  8855 ;; This function calls:
  8856 ;;		Nothing
  8857 ;; This function is called by:
  8858 ;;		_PROCULUS_Control_Register_Write
  8859 ;;		_PROCULUS_VP_Write
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863                           
  8864                           ;psect for function _PROCULUS_Delay
  8865  1DB1                     _PROCULUS_Delay:	
  8866                           
  8867                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  8868                           
  8869                           ;incstack = 0
  8870                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
  8871  1DB1  01A4               	clrf	PROCULUS_Delay@i
  8872  1DB2  01A5               	clrf	PROCULUS_Delay@i+1
  8873  1DB3                     l774:	
  8874  1DB3  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  8875  1DB4  0225               	subwf	PROCULUS_Delay@i+1,w
  8876  1DB5  1D03               	skipz
  8877  1DB6  2DB9               	goto	u2645
  8878  1DB7  0820               	movf	PROCULUS_Delay@tempo_ms,w
  8879  1DB8  0224               	subwf	PROCULUS_Delay@i,w
  8880  1DB9                     u2645:	
  8881  1DB9  1803               	btfsc	3,0
  8882  1DBA  0008               	return
  8883                           
  8884                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  8885  1DBB  3003               	movlw	3
  8886  1DBC  1283               	bcf	3,5	;RP0=0, select bank0
  8887  1DBD  1303               	bcf	3,6	;RP1=0, select bank0
  8888  1DBE  00A3               	movwf	??_PROCULUS_Delay+1
  8889  1DBF  3097               	movlw	151
  8890  1DC0  00A2               	movwf	??_PROCULUS_Delay
  8891  1DC1                     u5167:	
  8892  1DC1  0BA2               	decfsz	??_PROCULUS_Delay,f
  8893  1DC2  2DC1               	goto	u5167
  8894  1DC3  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  8895  1DC4  2DC1               	goto	u5167
  8896                           
  8897                           ;proculus.c: 270:     }
  8898  1DC5  3001               	movlw	1
  8899  1DC6  1283               	bcf	3,5	;RP0=0, select bank0
  8900  1DC7  1303               	bcf	3,6	;RP1=0, select bank0
  8901  1DC8  07A4               	addwf	PROCULUS_Delay@i,f
  8902  1DC9  1803               	skipnc
  8903  1DCA  0AA5               	incf	PROCULUS_Delay@i+1,f
  8904  1DCB  3000               	movlw	0
  8905  1DCC  07A5               	addwf	PROCULUS_Delay@i+1,f
  8906  1DCD  2DB3               	goto	l774
  8907  1DCE                     __end_of_PROCULUS_Delay:	
  8908                           
  8909                           	psect	text34
  8910  1060                     __ptext34:	
  8911 ;; *************** function _EEPROM_Write_String *****************
  8912 ;; Defined at:
  8913 ;;		line 97 in file "eeprom.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;  addr            1    wreg     unsigned char 
  8916 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  8917 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;  addr            1    7[BANK0 ] unsigned char 
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  1    wreg      void 
  8922 ;; Registers used:
  8923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8924 ;; Tracked objects:
  8925 ;;		On entry : 300/300
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8929 ;;      Params:         0       1       0       0       0
  8930 ;;      Locals:         0       1       0       0       0
  8931 ;;      Temps:          0       1       0       0       0
  8932 ;;      Totals:         0       3       0       0       0
  8933 ;;Total ram usage:        3 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; Hardware stack levels required when called:    2
  8936 ;; This function calls:
  8937 ;;		_EEPROM_Write_Byte
  8938 ;; This function is called by:
  8939 ;;		_Decodify_Command
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           
  8944                           ;psect for function _EEPROM_Write_String
  8945  1060                     _EEPROM_Write_String:	
  8946                           
  8947                           ;incstack = 0
  8948                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8949                           ;EEPROM_Write_String@addr stored from wreg
  8950  1060  1283               	bcf	3,5	;RP0=0, select bank0
  8951  1061  1303               	bcf	3,6	;RP1=0, select bank0
  8952  1062  00A7               	movwf	EEPROM_Write_String@addr
  8953  1063                     l4477:	
  8954                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  8955                           
  8956                           
  8957                           ;eeprom.c: 99:     while(*dado)
  8958  1063  0825               	movf	EEPROM_Write_String@dado,w
  8959  1064  0084               	movwf	4
  8960  1065  1783               	bsf	3,7	;select IRP bank2
  8961  1066  0800               	movf	0,w
  8962  1067  1903               	btfsc	3,2
  8963  1068  2880               	goto	l4479
  8964                           
  8965                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  8966  1069  0825               	movf	EEPROM_Write_String@dado,w
  8967  106A  0084               	movwf	4
  8968  106B  0800               	movf	0,w
  8969  106C  00A6               	movwf	??_EEPROM_Write_String
  8970  106D  0826               	movf	??_EEPROM_Write_String,w
  8971  106E  00A0               	movwf	EEPROM_Write_Byte@dado
  8972  106F  0827               	movf	EEPROM_Write_String@addr,w
  8973  1070  160A  118A  2167  160A  118A  	fcall	_EEPROM_Write_Byte
  8974                           
  8975                           ;eeprom.c: 102:      addr++;
  8976  1075  3001               	movlw	1
  8977  1076  1283               	bcf	3,5	;RP0=0, select bank0
  8978  1077  1303               	bcf	3,6	;RP1=0, select bank0
  8979  1078  00A6               	movwf	??_EEPROM_Write_String
  8980  1079  0826               	movf	??_EEPROM_Write_String,w
  8981  107A  07A7               	addwf	EEPROM_Write_String@addr,f
  8982                           
  8983                           ;eeprom.c: 103:      dado++;
  8984  107B  3001               	movlw	1
  8985  107C  00A6               	movwf	??_EEPROM_Write_String
  8986  107D  0826               	movf	??_EEPROM_Write_String,w
  8987  107E  07A5               	addwf	EEPROM_Write_String@dado,f
  8988  107F  2863               	goto	l4477
  8989  1080                     l4479:	
  8990                           
  8991                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  8992  1080  0825               	movf	EEPROM_Write_String@dado,w
  8993  1081  0084               	movwf	4
  8994  1082  0800               	movf	0,w
  8995  1083  00A6               	movwf	??_EEPROM_Write_String
  8996  1084  0826               	movf	??_EEPROM_Write_String,w
  8997  1085  00A0               	movwf	EEPROM_Write_Byte@dado
  8998  1086  0827               	movf	EEPROM_Write_String@addr,w
  8999  1087  160A  118A  2167   	fcall	_EEPROM_Write_Byte
  9000  108A  0008               	return
  9001  108B                     __end_of_EEPROM_Write_String:	
  9002                           
  9003                           	psect	text35
  9004  1F9B                     __ptext35:	
  9005 ;; *************** function _EEPROM_Write_Integer *****************
  9006 ;; Defined at:
  9007 ;;		line 68 in file "eeprom.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  addr            1    wreg     unsigned char 
  9010 ;;  dado            2    5[BANK0 ] unsigned int 
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;  addr            1   11[BANK0 ] unsigned char 
  9013 ;;  i               1   12[BANK0 ] unsigned char 
  9014 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
  9015 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9016 ;;  addr_memo       1    0        unsigned char 
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  1    wreg      void 
  9019 ;; Registers used:
  9020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9021 ;; Tracked objects:
  9022 ;;		On entry : 200/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9026 ;;      Params:         0       2       0       0       0
  9027 ;;      Locals:         0       4       0       0       0
  9028 ;;      Temps:          0       2       0       0       0
  9029 ;;      Totals:         0       8       0       0       0
  9030 ;;Total ram usage:        8 bytes
  9031 ;; Hardware stack levels used:    1
  9032 ;; Hardware stack levels required when called:    2
  9033 ;; This function calls:
  9034 ;;		_EEPROM_Write_Byte
  9035 ;; This function is called by:
  9036 ;;		_main
  9037 ;;		_Decodify_Command
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           
  9042                           ;psect for function _EEPROM_Write_Integer
  9043  1F9B                     _EEPROM_Write_Integer:	
  9044                           
  9045                           ;incstack = 0
  9046                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9047                           ;EEPROM_Write_Integer@addr stored from wreg
  9048  1F9B  1283               	bcf	3,5	;RP0=0, select bank0
  9049  1F9C  00AB               	movwf	EEPROM_Write_Integer@addr
  9050                           
  9051                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9052  1F9D  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9053  1F9E  00A7               	movwf	??_EEPROM_Write_Integer
  9054  1F9F  0827               	movf	??_EEPROM_Write_Integer,w
  9055  1FA0  00AA               	movwf	EEPROM_Write_Integer@ptr
  9056                           
  9057                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9058  1FA1  01AC               	clrf	EEPROM_Write_Integer@i
  9059  1FA2                     l4427:	
  9060                           
  9061                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9062  1FA2  082A               	movf	EEPROM_Write_Integer@ptr,w
  9063  1FA3  0084               	movwf	4
  9064  1FA4  1383               	bcf	3,7	;select IRP bank0
  9065  1FA5  0800               	movf	0,w
  9066  1FA6  00A7               	movwf	??_EEPROM_Write_Integer
  9067  1FA7  0827               	movf	??_EEPROM_Write_Integer,w
  9068  1FA8  00A0               	movwf	EEPROM_Write_Byte@dado
  9069  1FA9  082B               	movf	EEPROM_Write_Integer@addr,w
  9070  1FAA  160A  118A  2167  160A  158A  	fcall	_EEPROM_Write_Byte
  9071  1FAF  3001               	movlw	1
  9072  1FB0  1283               	bcf	3,5	;RP0=0, select bank0
  9073  1FB1  1303               	bcf	3,6	;RP1=0, select bank0
  9074  1FB2  00A7               	movwf	??_EEPROM_Write_Integer
  9075  1FB3  0827               	movf	??_EEPROM_Write_Integer,w
  9076  1FB4  07AA               	addwf	EEPROM_Write_Integer@ptr,f
  9077  1FB5  3001               	movlw	1
  9078  1FB6  00A7               	movwf	??_EEPROM_Write_Integer
  9079  1FB7  0827               	movf	??_EEPROM_Write_Integer,w
  9080  1FB8  07AB               	addwf	EEPROM_Write_Integer@addr,f
  9081  1FB9  3001               	movlw	1
  9082  1FBA  00A7               	movwf	??_EEPROM_Write_Integer
  9083  1FBB  0827               	movf	??_EEPROM_Write_Integer,w
  9084  1FBC  07AC               	addwf	EEPROM_Write_Integer@i,f
  9085  1FBD  3002               	movlw	2
  9086  1FBE  022C               	subwf	EEPROM_Write_Integer@i,w
  9087  1FBF  1C03               	skipc
  9088  1FC0  2FA2               	goto	l4427
  9089                           
  9090                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9091  1FC1  304E               	movlw	78
  9092  1FC2  1283               	bcf	3,5	;RP0=0, select bank0
  9093  1FC3  1303               	bcf	3,6	;RP1=0, select bank0
  9094  1FC4  00A8               	movwf	??_EEPROM_Write_Integer+1
  9095  1FC5  30EA               	movlw	234
  9096  1FC6  00A7               	movwf	??_EEPROM_Write_Integer
  9097  1FC7                     u5177:	
  9098  1FC7  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9099  1FC8  2FC7               	goto	u5177
  9100  1FC9  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9101  1FCA  2FC7               	goto	u5177
  9102  1FCB  0000               	nop
  9103  1FCC  0008               	return
  9104  1FCD                     __end_of_EEPROM_Write_Integer:	
  9105                           
  9106                           	psect	text36
  9107  1167                     __ptext36:	
  9108 ;; *************** function _EEPROM_Write_Byte *****************
  9109 ;; Defined at:
  9110 ;;		line 21 in file "eeprom.c"
  9111 ;; Parameters:    Size  Location     Type
  9112 ;;  addr            1    wreg     unsigned char 
  9113 ;;  dado            1    0[BANK0 ] unsigned char 
  9114 ;; Auto vars:     Size  Location     Type
  9115 ;;  addr            1    3[BANK0 ] unsigned char 
  9116 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9117 ;; Return value:  Size  Location     Type
  9118 ;;                  1    wreg      void 
  9119 ;; Registers used:
  9120 ;;		wreg, status,2, status,0
  9121 ;; Tracked objects:
  9122 ;;		On entry : 0/300
  9123 ;;		On exit  : 0/0
  9124 ;;		Unchanged: 0/0
  9125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9126 ;;      Params:         0       1       0       0       0
  9127 ;;      Locals:         0       2       0       0       0
  9128 ;;      Temps:          0       2       0       0       0
  9129 ;;      Totals:         0       5       0       0       0
  9130 ;;Total ram usage:        5 bytes
  9131 ;; Hardware stack levels used:    1
  9132 ;; Hardware stack levels required when called:    1
  9133 ;; This function calls:
  9134 ;;		Nothing
  9135 ;; This function is called by:
  9136 ;;		_Decodify_Command
  9137 ;;		_EEPROM_Write_Integer
  9138 ;;		_EEPROM_Write_String
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           
  9143                           ;psect for function _EEPROM_Write_Byte
  9144  1167                     _EEPROM_Write_Byte:	
  9145                           
  9146                           ;incstack = 0
  9147                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9148                           ;EEPROM_Write_Byte@addr stored from wreg
  9149  1167  1283               	bcf	3,5	;RP0=0, select bank0
  9150  1168  1303               	bcf	3,6	;RP1=0, select bank0
  9151  1169  00A3               	movwf	EEPROM_Write_Byte@addr
  9152                           
  9153                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9154  116A  3014               	movlw	20
  9155  116B  1683               	bsf	3,5	;RP0=1, select bank1
  9156  116C  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9157  116D  3000               	movlw	0
  9158  116E  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9159  116F                     l493:	
  9160                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9161                           
  9162  116F  1703               	bsf	3,6	;RP1=1, select bank3
  9163  1170  188C               	btfsc	12,1	;volsfr
  9164  1171  296F               	goto	l493
  9165                           
  9166                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9167  1172  1F8B               	btfss	11,7	;volatile
  9168  1173  2979               	goto	l3669
  9169                           
  9170                           ;eeprom.c: 28:           last_GIE=1;
  9171  1174  1283               	bcf	3,5	;RP0=0, select bank0
  9172  1175  1303               	bcf	3,6	;RP1=0, select bank0
  9173  1176  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9174  1177  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9175  1178  297C               	goto	l3671
  9176  1179                     l3669:	
  9177                           
  9178                           ;eeprom.c: 30:           last_GIE=0;
  9179  1179  1283               	bcf	3,5	;RP0=0, select bank0
  9180  117A  1303               	bcf	3,6	;RP1=0, select bank0
  9181  117B  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9182  117C                     l3671:	
  9183                           
  9184                           ;eeprom.c: 32:        EEADR=addr;
  9185  117C  0823               	movf	EEPROM_Write_Byte@addr,w
  9186  117D  1703               	bsf	3,6	;RP1=1, select bank2
  9187  117E  008D               	movwf	13	;volatile
  9188                           
  9189                           ;eeprom.c: 33:        EEDATA=dado;
  9190  117F  1303               	bcf	3,6	;RP1=0, select bank0
  9191  1180  0820               	movf	EEPROM_Write_Byte@dado,w
  9192  1181  1703               	bsf	3,6	;RP1=1, select bank2
  9193  1182  008C               	movwf	12	;volatile
  9194                           
  9195                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9196  1183  1683               	bsf	3,5	;RP0=1, select bank3
  9197  1184  138C               	bcf	12,7	;volsfr
  9198                           
  9199                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9200  1185  150C               	bsf	12,2	;volsfr
  9201                           
  9202                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9203  1186  138B               	bcf	11,7	;volatile
  9204                           
  9205                           ;eeprom.c: 37:        EECON2=0x55;
  9206  1187  3055               	movlw	85
  9207  1188  008D               	movwf	13	;volsfr
  9208                           
  9209                           ;eeprom.c: 38:        EECON2=0xAA;
  9210  1189  30AA               	movlw	170
  9211  118A  008D               	movwf	13	;volsfr
  9212                           
  9213                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9214  118B  148C               	bsf	12,1	;volsfr
  9215                           
  9216                           ;eeprom.c: 41:        if(last_GIE==1)
  9217  118C  1283               	bcf	3,5	;RP0=0, select bank0
  9218  118D  1303               	bcf	3,6	;RP1=0, select bank0
  9219  118E  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9220  118F  1D03               	btfss	3,2
  9221  1190  2993               	goto	l498
  9222                           
  9223                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9224  1191  178B               	bsf	11,7	;volatile
  9225  1192  2994               	goto	l499
  9226  1193                     l498:	
  9227                           ;eeprom.c: 43:        else
  9228                           
  9229                           
  9230                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9231  1193  138B               	bcf	11,7	;volatile
  9232  1194                     l499:	
  9233                           
  9234                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9235  1194  1683               	bsf	3,5	;RP0=1, select bank3
  9236  1195  1703               	bsf	3,6	;RP1=1, select bank3
  9237  1196  110C               	bcf	12,2	;volsfr
  9238                           
  9239                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9240  1197  304E               	movlw	78
  9241  1198  1283               	bcf	3,5	;RP0=0, select bank0
  9242  1199  1303               	bcf	3,6	;RP1=0, select bank0
  9243  119A  00A2               	movwf	??_EEPROM_Write_Byte+1
  9244  119B  30EA               	movlw	234
  9245  119C  00A1               	movwf	??_EEPROM_Write_Byte
  9246  119D                     u5187:	
  9247  119D  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9248  119E  299D               	goto	u5187
  9249  119F  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9250  11A0  299D               	goto	u5187
  9251  11A1  0000               	nop
  9252  11A2  0008               	return
  9253  11A3                     __end_of_EEPROM_Write_Byte:	
  9254                           
  9255                           	psect	text37
  9256  1E47                     __ptext37:	
  9257 ;; *************** function _EEPROM_Read_String *****************
  9258 ;; Defined at:
  9259 ;;		line 109 in file "eeprom.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;  addr            1    wreg     unsigned char 
  9262 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  9263 ;;		 -> buffer(33), 
  9264 ;; Auto vars:     Size  Location     Type
  9265 ;;  addr            1    5[BANK0 ] unsigned char 
  9266 ;;  c               1    6[BANK0 ] unsigned char 
  9267 ;; Return value:  Size  Location     Type
  9268 ;;                  1    wreg      void 
  9269 ;; Registers used:
  9270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9271 ;; Tracked objects:
  9272 ;;		On entry : 300/300
  9273 ;;		On exit  : B00/0
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9276 ;;      Params:         0       1       0       0       0
  9277 ;;      Locals:         0       2       0       0       0
  9278 ;;      Temps:          0       1       0       0       0
  9279 ;;      Totals:         0       4       0       0       0
  9280 ;;Total ram usage:        4 bytes
  9281 ;; Hardware stack levels used:    1
  9282 ;; Hardware stack levels required when called:    2
  9283 ;; This function calls:
  9284 ;;		_EEPROM_Read_Byte
  9285 ;; This function is called by:
  9286 ;;		_Decodify_Command
  9287 ;; This function uses a non-reentrant model
  9288 ;;
  9289                           
  9290                           
  9291                           ;psect for function _EEPROM_Read_String
  9292  1E47                     _EEPROM_Read_String:	
  9293                           
  9294                           ;incstack = 0
  9295                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9296                           ;EEPROM_Read_String@addr stored from wreg
  9297  1E47  1283               	bcf	3,5	;RP0=0, select bank0
  9298  1E48  1303               	bcf	3,6	;RP1=0, select bank0
  9299  1E49  00A5               	movwf	EEPROM_Read_String@addr
  9300  1E4A                     l525:	
  9301                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
  9302                           
  9303                           
  9304                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
  9305  1E4A  0825               	movf	EEPROM_Read_String@addr,w
  9306  1E4B  160A  158A  2688  160A  158A  	fcall	_EEPROM_Read_Byte
  9307  1E50  1303               	bcf	3,6	;RP1=0, select bank0
  9308  1E51  00A4               	movwf	??_EEPROM_Read_String
  9309  1E52  0824               	movf	??_EEPROM_Read_String,w
  9310  1E53  00A6               	movwf	EEPROM_Read_String@c
  9311  1E54  3001               	movlw	1
  9312  1E55  00A4               	movwf	??_EEPROM_Read_String
  9313  1E56  0824               	movf	??_EEPROM_Read_String,w
  9314  1E57  07A5               	addwf	EEPROM_Read_String@addr,f
  9315                           
  9316                           ;eeprom.c: 114:         *(dado++)=c;
  9317  1E58  0826               	movf	EEPROM_Read_String@c,w
  9318  1E59  00A4               	movwf	??_EEPROM_Read_String
  9319  1E5A  0823               	movf	EEPROM_Read_String@dado,w
  9320  1E5B  0084               	movwf	4
  9321  1E5C  0824               	movf	??_EEPROM_Read_String,w
  9322  1E5D  1383               	bcf	3,7	;select IRP bank0
  9323  1E5E  0080               	movwf	0
  9324  1E5F  3001               	movlw	1
  9325  1E60  00A4               	movwf	??_EEPROM_Read_String
  9326  1E61  0824               	movf	??_EEPROM_Read_String,w
  9327  1E62  07A3               	addwf	EEPROM_Read_String@dado,f
  9328                           
  9329                           ;eeprom.c: 116:       }while(c);
  9330  1E63  0826               	movf	EEPROM_Read_String@c,w
  9331  1E64  1903               	btfsc	3,2
  9332  1E65  0008               	return
  9333  1E66  2E4A               	goto	l525
  9334  1E67                     __end_of_EEPROM_Read_String:	
  9335                           
  9336                           	psect	text38
  9337  1F40                     __ptext38:	
  9338 ;; *************** function _EEPROM_Read_Integer *****************
  9339 ;; Defined at:
  9340 ;;		line 81 in file "eeprom.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;  addr            1    wreg     unsigned char 
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;  addr            1    6[BANK0 ] unsigned char 
  9345 ;;  result          2    8[BANK0 ] unsigned int 
  9346 ;;  i               1   10[BANK0 ] unsigned char 
  9347 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  9348 ;;		 -> EEPROM_Read_Integer@result(2), 
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  2    3[BANK0 ] unsigned int 
  9351 ;; Registers used:
  9352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : B00/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9358 ;;      Params:         0       2       0       0       0
  9359 ;;      Locals:         0       5       0       0       0
  9360 ;;      Temps:          0       1       0       0       0
  9361 ;;      Totals:         0       8       0       0       0
  9362 ;;Total ram usage:        8 bytes
  9363 ;; Hardware stack levels used:    1
  9364 ;; Hardware stack levels required when called:    2
  9365 ;; This function calls:
  9366 ;;		_EEPROM_Read_Byte
  9367 ;; This function is called by:
  9368 ;;		_main
  9369 ;;		_Decodify_Command
  9370 ;; This function uses a non-reentrant model
  9371 ;;
  9372                           
  9373                           
  9374                           ;psect for function _EEPROM_Read_Integer
  9375  1F40                     _EEPROM_Read_Integer:	
  9376                           
  9377                           ;incstack = 0
  9378                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9379                           ;EEPROM_Read_Integer@addr stored from wreg
  9380  1F40  1283               	bcf	3,5	;RP0=0, select bank0
  9381  1F41  1303               	bcf	3,6	;RP1=0, select bank0
  9382  1F42  00A6               	movwf	EEPROM_Read_Integer@addr
  9383                           
  9384                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
  9385  1F43  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
  9386  1F44  00A5               	movwf	??_EEPROM_Read_Integer
  9387  1F45  0825               	movf	??_EEPROM_Read_Integer,w
  9388  1F46  00A7               	movwf	EEPROM_Read_Integer@ptr
  9389                           
  9390                           ;eeprom.c: 87:       for (i=0;i<2;i++)
  9391  1F47  01AA               	clrf	EEPROM_Read_Integer@i
  9392  1F48                     l4403:	
  9393                           
  9394                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
  9395  1F48  0826               	movf	EEPROM_Read_Integer@addr,w
  9396  1F49  160A  158A  2688  160A  158A  	fcall	_EEPROM_Read_Byte
  9397  1F4E  1303               	bcf	3,6	;RP1=0, select bank0
  9398  1F4F  00A5               	movwf	??_EEPROM_Read_Integer
  9399  1F50  0827               	movf	EEPROM_Read_Integer@ptr,w
  9400  1F51  0084               	movwf	4
  9401  1F52  0825               	movf	??_EEPROM_Read_Integer,w
  9402  1F53  1383               	bcf	3,7	;select IRP bank0
  9403  1F54  0080               	movwf	0
  9404  1F55  3001               	movlw	1
  9405  1F56  00A5               	movwf	??_EEPROM_Read_Integer
  9406  1F57  0825               	movf	??_EEPROM_Read_Integer,w
  9407  1F58  07A6               	addwf	EEPROM_Read_Integer@addr,f
  9408  1F59  3001               	movlw	1
  9409  1F5A  00A5               	movwf	??_EEPROM_Read_Integer
  9410  1F5B  0825               	movf	??_EEPROM_Read_Integer,w
  9411  1F5C  07A7               	addwf	EEPROM_Read_Integer@ptr,f
  9412  1F5D  3001               	movlw	1
  9413  1F5E  00A5               	movwf	??_EEPROM_Read_Integer
  9414  1F5F  0825               	movf	??_EEPROM_Read_Integer,w
  9415  1F60  07AA               	addwf	EEPROM_Read_Integer@i,f
  9416  1F61  3002               	movlw	2
  9417  1F62  022A               	subwf	EEPROM_Read_Integer@i,w
  9418  1F63  1C03               	skipc
  9419  1F64  2F48               	goto	l4403
  9420                           
  9421                           ;eeprom.c: 89:       return result;
  9422  1F65  0829               	movf	EEPROM_Read_Integer@result+1,w
  9423  1F66  00A4               	movwf	?_EEPROM_Read_Integer+1
  9424  1F67  0828               	movf	EEPROM_Read_Integer@result,w
  9425  1F68  00A3               	movwf	?_EEPROM_Read_Integer
  9426  1F69  0008               	return
  9427  1F6A                     __end_of_EEPROM_Read_Integer:	
  9428                           
  9429                           	psect	text39
  9430  1E88                     __ptext39:	
  9431 ;; *************** function _EEPROM_Read_Byte *****************
  9432 ;; Defined at:
  9433 ;;		line 52 in file "eeprom.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;  addr            1    wreg     unsigned char 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;  addr            1    2[BANK0 ] unsigned char 
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  1    wreg      unsigned char 
  9440 ;; Registers used:
  9441 ;;		wreg
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/300
  9444 ;;		On exit  : 300/200
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9447 ;;      Params:         0       0       0       0       0
  9448 ;;      Locals:         0       1       0       0       0
  9449 ;;      Temps:          0       2       0       0       0
  9450 ;;      Totals:         0       3       0       0       0
  9451 ;;Total ram usage:        3 bytes
  9452 ;; Hardware stack levels used:    1
  9453 ;; Hardware stack levels required when called:    1
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		_Decodify_Command
  9458 ;;		_EEPROM_Read_Integer
  9459 ;;		_EEPROM_Read_String
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           
  9464                           ;psect for function _EEPROM_Read_Byte
  9465  1E88                     _EEPROM_Read_Byte:	
  9466                           
  9467                           ;incstack = 0
  9468                           ; Regs used in _EEPROM_Read_Byte: [wreg]
  9469                           ;EEPROM_Read_Byte@addr stored from wreg
  9470  1E88  1283               	bcf	3,5	;RP0=0, select bank0
  9471  1E89  1303               	bcf	3,6	;RP1=0, select bank0
  9472  1E8A  00A2               	movwf	EEPROM_Read_Byte@addr
  9473                           
  9474                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
  9475  1E8B  3014               	movlw	20
  9476  1E8C  1683               	bsf	3,5	;RP0=1, select bank1
  9477  1E8D  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9478  1E8E  3000               	movlw	0
  9479  1E8F  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9480  1E90                     l503:	
  9481                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
  9482                           
  9483  1E90  1703               	bsf	3,6	;RP1=1, select bank3
  9484  1E91  188C               	btfsc	12,1	;volsfr
  9485  1E92  2E90               	goto	l503
  9486                           
  9487                           ;eeprom.c: 57:    EEADR=addr;
  9488  1E93  1283               	bcf	3,5	;RP0=0, select bank0
  9489  1E94  1303               	bcf	3,6	;RP1=0, select bank0
  9490  1E95  0822               	movf	EEPROM_Read_Byte@addr,w
  9491  1E96  1703               	bsf	3,6	;RP1=1, select bank2
  9492  1E97  008D               	movwf	13	;volatile
  9493                           
  9494                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
  9495  1E98  1683               	bsf	3,5	;RP0=1, select bank3
  9496  1E99  138C               	bcf	12,7	;volsfr
  9497                           
  9498                           ;eeprom.c: 59:    EECON1bits.RD=1;
  9499  1E9A  140C               	bsf	12,0	;volsfr
  9500                           
  9501                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
  9502  1E9B  304E               	movlw	78
  9503  1E9C  1283               	bcf	3,5	;RP0=0, select bank0
  9504  1E9D  1303               	bcf	3,6	;RP1=0, select bank0
  9505  1E9E  00A1               	movwf	??_EEPROM_Read_Byte+1
  9506  1E9F  30EA               	movlw	234
  9507  1EA0  00A0               	movwf	??_EEPROM_Read_Byte
  9508  1EA1                     u5197:	
  9509  1EA1  0BA0               	decfsz	??_EEPROM_Read_Byte,f
  9510  1EA2  2EA1               	goto	u5197
  9511  1EA3  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
  9512  1EA4  2EA1               	goto	u5197
  9513  1EA5  0000               	nop
  9514                           
  9515                           ;eeprom.c: 61:    return EEDATA;
  9516  1EA6  1283               	bcf	3,5	;RP0=0, select bank2
  9517  1EA7  1703               	bsf	3,6	;RP1=1, select bank2
  9518  1EA8  080C               	movf	12,w	;volatile
  9519  1EA9  0008               	return
  9520  1EAA                     __end_of_EEPROM_Read_Byte:	
  9521                           
  9522                           	psect	text40
  9523  0861                     __ptext40:	
  9524 ;; *************** function _EEPROM_24C1025_Write_Str *****************
  9525 ;; Defined at:
  9526 ;;		line 147 in file "EEPROM_24C1025.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;  chip_add        1    wreg     unsigned char 
  9529 ;;  mem_add         4   10[BANK0 ] unsigned long 
  9530 ;;  data            1   14[BANK0 ] PTR unsigned char 
  9531 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;  chip_add        1   17[BANK0 ] unsigned char 
  9534 ;;  ctrl            1   19[BANK0 ] unsigned char 
  9535 ;;  range           1   18[BANK0 ] unsigned char 
  9536 ;; Return value:  Size  Location     Type
  9537 ;;                  1    wreg      void 
  9538 ;; Registers used:
  9539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9540 ;; Tracked objects:
  9541 ;;		On entry : 300/300
  9542 ;;		On exit  : 300/0
  9543 ;;		Unchanged: 0/0
  9544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9545 ;;      Params:         0       5       0       0       0
  9546 ;;      Locals:         0       3       0       0       0
  9547 ;;      Temps:          0       2       0       0       0
  9548 ;;      Totals:         0      10       0       0       0
  9549 ;;Total ram usage:       10 bytes
  9550 ;; Hardware stack levels used:    1
  9551 ;; Hardware stack levels required when called:    3
  9552 ;; This function calls:
  9553 ;;		_I2C_Master_Start
  9554 ;;		_I2C_Master_Stop
  9555 ;;		_I2C_Master_Write
  9556 ;;		_my_delay_ms_WDT
  9557 ;; This function is called by:
  9558 ;;		_Decodify_Command
  9559 ;; This function uses a non-reentrant model
  9560 ;;
  9561                           
  9562                           
  9563                           ;psect for function _EEPROM_24C1025_Write_Str
  9564  0861                     _EEPROM_24C1025_Write_Str:	
  9565                           
  9566                           ;incstack = 0
  9567                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  9568                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
  9569  0861  1283               	bcf	3,5	;RP0=0, select bank0
  9570  0862  1303               	bcf	3,6	;RP1=0, select bank0
  9571  0863  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
  9572                           
  9573                           ;EEPROM_24C1025.c: 149:      unsigned char ctrl;;EEPROM_24C1025.c: 151:      if(mem_add>
      +                          0x1FFFF) return;
  9574  0864  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9575  0865  1D03               	btfss	3,2
  9576  0866  0008               	return
  9577  0867  3002               	movlw	2
  9578  0868  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9579  0869  1D03               	skipz
  9580  086A  2873               	goto	u3973
  9581  086B  3000               	movlw	0
  9582  086C  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9583  086D  1D03               	skipz
  9584  086E  2873               	goto	u3973
  9585  086F  3000               	movlw	0
  9586  0870  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9587  0871  1D03               	skipz
  9588  0872  2873               	goto	u3973
  9589  0873                     u3973:	
  9590  0873  1803               	btfsc	3,0
  9591  0874  0008               	return
  9592  0875                     L9:	
  9593                           
  9594                           ;EEPROM_24C1025.c: 153:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9595  0875  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9596  0876  1D03               	btfss	3,2
  9597  0877  2886               	goto	l4205
  9598  0878  3001               	movlw	1
  9599  0879  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9600  087A  1D03               	skipz
  9601  087B  2884               	goto	u3983
  9602  087C  3000               	movlw	0
  9603  087D  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9604  087E  1D03               	skipz
  9605  087F  2884               	goto	u3983
  9606  0880  3000               	movlw	0
  9607  0881  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9608  0882  1D03               	skipz
  9609  0883  2884               	goto	u3983
  9610  0884                     u3983:	
  9611  0884  1C03               	btfss	3,0
  9612  0885  288B               	goto	l4207
  9613  0886                     l4205:	
  9614  0886  3008               	movlw	8
  9615  0887  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9616  0888  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9617  0889  00B2               	movwf	EEPROM_24C1025_Write_Str@range
  9618  088A  288C               	goto	l4209
  9619  088B                     l4207:	
  9620  088B  01B2               	clrf	EEPROM_24C1025_Write_Str@range
  9621  088C                     l4209:	
  9622                           
  9623                           ;EEPROM_24C1025.c: 154:      ctrl=chip_add;
  9624  088C  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
  9625  088D  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9626  088E  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9627  088F  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
  9628                           
  9629                           ;EEPROM_24C1025.c: 155:      ctrl<<=1;
  9630  0890  1003               	clrc
  9631  0891  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
  9632                           
  9633                           ;EEPROM_24C1025.c: 156:      ctrl |= 0xA0;
  9634  0892  30A0               	movlw	160
  9635  0893  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9636  0894  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9637  0895  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  9638                           
  9639                           ;EEPROM_24C1025.c: 157:      ctrl |= range;
  9640  0896  0832               	movf	EEPROM_24C1025_Write_Str@range,w
  9641  0897  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9642  0898  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9643  0899  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  9644                           
  9645                           ;EEPROM_24C1025.c: 159:      I2C_Master_Start();
  9646  089A  160A  158A  2511  120A  158A  	fcall	_I2C_Master_Start
  9647                           
  9648                           ;EEPROM_24C1025.c: 160:      I2C_Master_Write(ctrl);
  9649  089F  1283               	bcf	3,5	;RP0=0, select bank0
  9650  08A0  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
  9651  08A1  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9652  08A2  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
  9653  08A3  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9654  08A4  00A3               	movwf	I2C_Master_Write@d
  9655  08A5  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
  9656  08A6  00A4               	movwf	I2C_Master_Write@d+1
  9657  08A7  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
  9658                           
  9659                           ;EEPROM_24C1025.c: 161:      I2C_Master_Write(((char *)&mem_add)[1]);
  9660  08AC  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9661  08AD  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9662  08AE  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
  9663  08AF  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9664  08B0  00A3               	movwf	I2C_Master_Write@d
  9665  08B1  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
  9666  08B2  00A4               	movwf	I2C_Master_Write@d+1
  9667  08B3  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
  9668                           
  9669                           ;EEPROM_24C1025.c: 162:      I2C_Master_Write(((char *)&mem_add)[0]);
  9670  08B8  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  9671  08B9  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9672  08BA  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
  9673  08BB  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9674  08BC  00A3               	movwf	I2C_Master_Write@d
  9675  08BD  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
  9676  08BE  00A4               	movwf	I2C_Master_Write@d+1
  9677  08BF  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
  9678  08C4                     l4269:	
  9679                           ;EEPROM_24C1025.c: 163:      while(*data)
  9680                           
  9681                           
  9682                           ;EEPROM_24C1025.c: 163:      while(*data)
  9683  08C4  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  9684  08C5  0084               	movwf	4
  9685  08C6  1783               	bsf	3,7	;select IRP bank2
  9686  08C7  0800               	movf	0,w
  9687  08C8  1903               	btfsc	3,2
  9688  08C9  293A               	goto	l4271
  9689  08CA  0064               	clrwdt	;# 
  9690                           
  9691                           ;EEPROM_24C1025.c: 166:           if(mem_add>0x1FFFF) return;
  9692  08CB  1283               	bcf	3,5	;RP0=0, select bank0
  9693  08CC  1303               	bcf	3,6	;RP1=0, select bank0
  9694  08CD  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9695  08CE  1D03               	btfss	3,2
  9696  08CF  0008               	return
  9697  08D0  3002               	movlw	2
  9698  08D1  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9699  08D2  1D03               	skipz
  9700  08D3  28DC               	goto	u3993
  9701  08D4  3000               	movlw	0
  9702  08D5  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9703  08D6  1D03               	skipz
  9704  08D7  28DC               	goto	u3993
  9705  08D8  3000               	movlw	0
  9706  08D9  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9707  08DA  1D03               	skipz
  9708  08DB  28DC               	goto	u3993
  9709  08DC                     u3993:	
  9710  08DC  1803               	btfsc	3,0
  9711  08DD  0008               	return
  9712                           
  9713                           ;EEPROM_24C1025.c: 167:           if((mem_add+1)%128==0)
  9714  08DE  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  9715  08DF  3E01               	addlw	1
  9716  08E0  397F               	andlw	127
  9717  08E1  1D03               	btfss	3,2
  9718  08E2  2918               	goto	l4263
  9719                           
  9720                           ;EEPROM_24C1025.c: 168:             {;EEPROM_24C1025.c: 169:             I2C_Master_Writ
      +                          e(*data);
  9721  08E3  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  9722  08E4  0084               	movwf	4
  9723  08E5  1783               	bsf	3,7	;select IRP bank2
  9724  08E6  0800               	movf	0,w
  9725  08E7  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9726  08E8  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
  9727  08E9  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9728  08EA  00A3               	movwf	I2C_Master_Write@d
  9729  08EB  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
  9730  08EC  00A4               	movwf	I2C_Master_Write@d+1
  9731  08ED  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
  9732                           
  9733                           ;EEPROM_24C1025.c: 170:             I2C_Master_Stop();
  9734  08F2  160A  158A  24C4  120A  158A  	fcall	_I2C_Master_Stop
  9735                           
  9736                           ;EEPROM_24C1025.c: 172:             my_delay_ms_WDT(5);
  9737  08F7  3000               	movlw	0
  9738  08F8  1283               	bcf	3,5	;RP0=0, select bank0
  9739  08F9  00A3               	movwf	my_delay_ms_WDT@time+3
  9740  08FA  3000               	movlw	0
  9741  08FB  00A2               	movwf	my_delay_ms_WDT@time+2
  9742  08FC  3000               	movlw	0
  9743  08FD  00A1               	movwf	my_delay_ms_WDT@time+1
  9744  08FE  3005               	movlw	5
  9745  08FF  00A0               	movwf	my_delay_ms_WDT@time
  9746  0900  160A  118A  20F7  120A  158A  	fcall	_my_delay_ms_WDT
  9747                           
  9748                           ;EEPROM_24C1025.c: 173:             mem_add++;
  9749  0905  3001               	movlw	1
  9750  0906  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
  9751  0907  3000               	movlw	0
  9752  0908  1803               	skipnc
  9753  0909  3001               	movlw	1
  9754  090A  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
  9755  090B  3000               	movlw	0
  9756  090C  1803               	skipnc
  9757  090D  3001               	movlw	1
  9758  090E  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
  9759  090F  3000               	movlw	0
  9760  0910  1803               	skipnc
  9761  0911  3001               	movlw	1
  9762  0912  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
  9763                           
  9764                           ;EEPROM_24C1025.c: 174:             data++;
  9765  0913  3001               	movlw	1
  9766  0914  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9767  0915  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9768  0916  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
  9769  0917  2875               	goto	L9
  9770  0918                     l4263:	
  9771                           ;EEPROM_24C1025.c: 175:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9772                           
  9773                           
  9774                           ;EEPROM_24C1025.c: 187:             {;EEPROM_24C1025.c: 188:             I2C_Master_Writ
      +                          e(*data);
  9775  0918  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  9776  0919  0084               	movwf	4
  9777  091A  1783               	bsf	3,7	;select IRP bank2
  9778  091B  0800               	movf	0,w
  9779  091C  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9780  091D  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
  9781  091E  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9782  091F  00A3               	movwf	I2C_Master_Write@d
  9783  0920  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
  9784  0921  00A4               	movwf	I2C_Master_Write@d+1
  9785  0922  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
  9786                           
  9787                           ;EEPROM_24C1025.c: 189:             data++;
  9788  0927  3001               	movlw	1
  9789  0928  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9790  0929  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9791  092A  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
  9792                           
  9793                           ;EEPROM_24C1025.c: 190:             mem_add++;
  9794  092B  3001               	movlw	1
  9795  092C  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
  9796  092D  3000               	movlw	0
  9797  092E  1803               	skipnc
  9798  092F  3001               	movlw	1
  9799  0930  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
  9800  0931  3000               	movlw	0
  9801  0932  1803               	skipnc
  9802  0933  3001               	movlw	1
  9803  0934  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
  9804  0935  3000               	movlw	0
  9805  0936  1803               	skipnc
  9806  0937  3001               	movlw	1
  9807  0938  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
  9808  0939  28C4               	goto	l4269
  9809  093A                     l4271:	
  9810                           
  9811                           ;EEPROM_24C1025.c: 193:      I2C_Master_Write(0);
  9812  093A  3000               	movlw	0
  9813  093B  00A3               	movwf	I2C_Master_Write@d
  9814  093C  00A4               	movwf	I2C_Master_Write@d+1
  9815  093D  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
  9816                           
  9817                           ;EEPROM_24C1025.c: 194:      I2C_Master_Stop();
  9818  0942  160A  158A  24C4  120A  158A  	fcall	_I2C_Master_Stop
  9819                           
  9820                           ;EEPROM_24C1025.c: 195:      my_delay_ms_WDT(5);
  9821  0947  3000               	movlw	0
  9822  0948  1283               	bcf	3,5	;RP0=0, select bank0
  9823  0949  00A3               	movwf	my_delay_ms_WDT@time+3
  9824  094A  3000               	movlw	0
  9825  094B  00A2               	movwf	my_delay_ms_WDT@time+2
  9826  094C  3000               	movlw	0
  9827  094D  00A1               	movwf	my_delay_ms_WDT@time+1
  9828  094E  3005               	movlw	5
  9829  094F  00A0               	movwf	my_delay_ms_WDT@time
  9830  0950  160A  118A  20F7   	fcall	_my_delay_ms_WDT
  9831  0953  0008               	return
  9832  0954                     __end_of_EEPROM_24C1025_Write_Str:	
  9833                           
  9834                           	psect	text41
  9835  1D36                     __ptext41:	
  9836 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
  9837 ;; Defined at:
  9838 ;;		line 268 in file "EEPROM_24C1025.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;  chip_add        1    wreg     unsigned char 
  9841 ;;  mem_add         4   23[BANK0 ] unsigned long 
  9842 ;;  data            1   27[BANK0 ] unsigned char 
  9843 ;; Auto vars:     Size  Location     Type
  9844 ;;  chip_add        1   28[BANK0 ] unsigned char 
  9845 ;; Return value:  Size  Location     Type
  9846 ;;                  1    wreg      void 
  9847 ;; Registers used:
  9848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9849 ;; Tracked objects:
  9850 ;;		On entry : 300/300
  9851 ;;		On exit  : 300/0
  9852 ;;		Unchanged: 0/0
  9853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9854 ;;      Params:         0       5       0       0       0
  9855 ;;      Locals:         0       1       0       0       0
  9856 ;;      Temps:          0       0       0       0       0
  9857 ;;      Totals:         0       6       0       0       0
  9858 ;;Total ram usage:        6 bytes
  9859 ;; Hardware stack levels used:    1
  9860 ;; Hardware stack levels required when called:    4
  9861 ;; This function calls:
  9862 ;;		_EEPROM_24C1025_Write_Buffer
  9863 ;; This function is called by:
  9864 ;;		_Decodify_Command
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           
  9868                           
  9869                           ;psect for function _EEPROM_24C1025_Write_Byte
  9870  1D36                     _EEPROM_24C1025_Write_Byte:	
  9871                           
  9872                           ;incstack = 0
  9873                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  9874                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
  9875  1D36  1283               	bcf	3,5	;RP0=0, select bank0
  9876  1D37  1303               	bcf	3,6	;RP1=0, select bank0
  9877  1D38  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
  9878                           
  9879                           ;EEPROM_24C1025.c: 269:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
  9880  1D39  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
  9881  1D3A  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  9882  1D3B  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
  9883  1D3C  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  9884  1D3D  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
  9885  1D3E  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  9886  1D3F  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
  9887  1D40  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  9888  1D41  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
  9889  1D42  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
  9890  1D43  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
  9891  1D44  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  9892  1D45  3000               	movlw	0
  9893  1D46  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  9894  1D47  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
  9895  1D48  160A  118A  2696   	fcall	_EEPROM_24C1025_Write_Buffer
  9896  1D4B  0008               	return
  9897  1D4C                     __end_of_EEPROM_24C1025_Write_Byte:	
  9898                           
  9899                           	psect	text42
  9900  0954                     __ptext42:	
  9901 ;; *************** function _EEPROM_24C1025_Read_Str *****************
  9902 ;; Defined at:
  9903 ;;		line 202 in file "EEPROM_24C1025.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;  chip_add        1    wreg     unsigned char 
  9906 ;;  mem_add         4    9[BANK0 ] unsigned long 
  9907 ;;  buffer          1   13[BANK0 ] PTR unsigned char 
  9908 ;;		 -> buffer(33), 
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;  chip_add        1   17[BANK0 ] unsigned char 
  9911 ;;  ctrl            1   19[BANK0 ] unsigned char 
  9912 ;;  range           1   18[BANK0 ] unsigned char 
  9913 ;;  cnt             1   16[BANK0 ] unsigned char 
  9914 ;; Return value:  Size  Location     Type
  9915 ;;                  1    wreg      void 
  9916 ;; Registers used:
  9917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9918 ;; Tracked objects:
  9919 ;;		On entry : 300/300
  9920 ;;		On exit  : 0/0
  9921 ;;		Unchanged: 0/0
  9922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9923 ;;      Params:         0       5       0       0       0
  9924 ;;      Locals:         0       4       0       0       0
  9925 ;;      Temps:          0       2       0       0       0
  9926 ;;      Totals:         0      11       0       0       0
  9927 ;;Total ram usage:       11 bytes
  9928 ;; Hardware stack levels used:    1
  9929 ;; Hardware stack levels required when called:    3
  9930 ;; This function calls:
  9931 ;;		_I2C_Master_Read
  9932 ;;		_I2C_Master_RepeatedStart
  9933 ;;		_I2C_Master_Start
  9934 ;;		_I2C_Master_Stop
  9935 ;;		_I2C_Master_Write
  9936 ;; This function is called by:
  9937 ;;		_Decodify_Command
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           
  9942                           ;psect for function _EEPROM_24C1025_Read_Str
  9943  0954                     _EEPROM_24C1025_Read_Str:	
  9944                           
  9945                           ;incstack = 0
  9946                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9947                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
  9948  0954  1283               	bcf	3,5	;RP0=0, select bank0
  9949  0955  1303               	bcf	3,6	;RP1=0, select bank0
  9950  0956  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
  9951                           
  9952                           ;EEPROM_24C1025.c: 204:      unsigned char range=0;
  9953  0957  01B2               	clrf	EEPROM_24C1025_Read_Str@range
  9954                           
  9955                           ;EEPROM_24C1025.c: 205:      unsigned char ctrl;;EEPROM_24C1025.c: 207:      if(mem_add>
      +                          0x1FFFF) return;
  9956  0958  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  9957  0959  1D03               	btfss	3,2
  9958  095A  0008               	return
  9959  095B  3002               	movlw	2
  9960  095C  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  9961  095D  1D03               	skipz
  9962  095E  2967               	goto	u4033
  9963  095F  3000               	movlw	0
  9964  0960  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  9965  0961  1D03               	skipz
  9966  0962  2967               	goto	u4033
  9967  0963  3000               	movlw	0
  9968  0964  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  9969  0965  1D03               	skipz
  9970  0966  2967               	goto	u4033
  9971  0967                     u4033:	
  9972  0967  1803               	btfsc	3,0
  9973  0968  0008               	return
  9974                           
  9975                           ;EEPROM_24C1025.c: 209:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9976  0969  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  9977  096A  1D03               	btfss	3,2
  9978  096B  297A               	goto	l4283
  9979  096C  3001               	movlw	1
  9980  096D  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  9981  096E  1D03               	skipz
  9982  096F  2978               	goto	u4043
  9983  0970  3000               	movlw	0
  9984  0971  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  9985  0972  1D03               	skipz
  9986  0973  2978               	goto	u4043
  9987  0974  3000               	movlw	0
  9988  0975  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  9989  0976  1D03               	skipz
  9990  0977  2978               	goto	u4043
  9991  0978                     u4043:	
  9992  0978  1C03               	btfss	3,0
  9993  0979  297F               	goto	l4285
  9994  097A                     l4283:	
  9995  097A  3008               	movlw	8
  9996  097B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
  9997  097C  082E               	movf	??_EEPROM_24C1025_Read_Str,w
  9998  097D  00B2               	movwf	EEPROM_24C1025_Read_Str@range
  9999  097E  2980               	goto	l4287
 10000  097F                     l4285:	
 10001  097F  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10002  0980                     l4287:	
 10003                           
 10004                           ;EEPROM_24C1025.c: 210:      ctrl=chip_add;
 10005  0980  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10006  0981  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10007  0982  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10008  0983  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10009                           
 10010                           ;EEPROM_24C1025.c: 211:      ctrl<<=1;
 10011  0984  1003               	clrc
 10012  0985  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10013                           
 10014                           ;EEPROM_24C1025.c: 212:      ctrl |= 0xA0;
 10015  0986  30A0               	movlw	160
 10016  0987  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10017  0988  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10018  0989  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10019                           
 10020                           ;EEPROM_24C1025.c: 213:      ctrl |= 0b00000001;
 10021  098A  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10022                           
 10023                           ;EEPROM_24C1025.c: 214:      ctrl |= range;
 10024  098B  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10025  098C  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10026  098D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10027  098E  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10028                           
 10029                           ;EEPROM_24C1025.c: 216:      I2C_Master_Start();
 10030  098F  160A  158A  2511  120A  158A  	fcall	_I2C_Master_Start
 10031                           
 10032                           ;EEPROM_24C1025.c: 217:      I2C_Master_Write(ctrl & 0xFE);
 10033  0994  1283               	bcf	3,5	;RP0=0, select bank0
 10034  0995  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10035  0996  39FE               	andlw	254
 10036  0997  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10037  0998  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10038  0999  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10039  099A  00A3               	movwf	I2C_Master_Write@d
 10040  099B  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10041  099C  00A4               	movwf	I2C_Master_Write@d+1
 10042  099D  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10043                           
 10044                           ;EEPROM_24C1025.c: 218:      I2C_Master_Write(((char *)&mem_add)[1]);
 10045  09A2  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10046  09A3  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10047  09A4  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10048  09A5  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10049  09A6  00A3               	movwf	I2C_Master_Write@d
 10050  09A7  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10051  09A8  00A4               	movwf	I2C_Master_Write@d+1
 10052  09A9  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10053                           
 10054                           ;EEPROM_24C1025.c: 219:      I2C_Master_Write(((char *)&mem_add)[0]);
 10055  09AE  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10056  09AF  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10057  09B0  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10058  09B1  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10059  09B2  00A3               	movwf	I2C_Master_Write@d
 10060  09B3  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10061  09B4  00A4               	movwf	I2C_Master_Write@d+1
 10062  09B5  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10063                           
 10064                           ;EEPROM_24C1025.c: 220:      I2C_Master_RepeatedStart();
 10065  09BA  160A  158A  24F6  120A  158A  	fcall	_I2C_Master_RepeatedStart
 10066                           
 10067                           ;EEPROM_24C1025.c: 221:      I2C_Master_Write(ctrl);
 10068  09BF  1283               	bcf	3,5	;RP0=0, select bank0
 10069  09C0  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10070  09C1  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10071  09C2  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10072  09C3  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10073  09C4  00A3               	movwf	I2C_Master_Write@d
 10074  09C5  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10075  09C6  00A4               	movwf	I2C_Master_Write@d+1
 10076  09C7  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10077                           
 10078                           ;EEPROM_24C1025.c: 223:      cnt=0;
 10079  09CC  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
 10080  09CD                     l4309:	
 10081                           
 10082                           ;EEPROM_24C1025.c: 225:            if(mem_add>0x1FFFF) break;
 10083  09CD  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10084  09CE  1D03               	btfss	3,2
 10085  09CF  2AA9               	goto	l4365
 10086  09D0  3002               	movlw	2
 10087  09D1  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10088  09D2  1D03               	skipz
 10089  09D3  29DC               	goto	u4053
 10090  09D4  3000               	movlw	0
 10091  09D5  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10092  09D6  1D03               	skipz
 10093  09D7  29DC               	goto	u4053
 10094  09D8  3000               	movlw	0
 10095  09D9  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10096  09DA  1D03               	skipz
 10097  09DB  29DC               	goto	u4053
 10098  09DC                     u4053:	
 10099  09DC  1803               	btfsc	3,0
 10100  09DD  2AA9               	goto	l4365
 10101                           
 10102                           ;EEPROM_24C1025.c: 226:            if((mem_add+1)%128==0)
 10103  09DE  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10104  09DF  3E01               	addlw	1
 10105  09E0  397F               	andlw	127
 10106  09E1  1D03               	btfss	3,2
 10107  09E2  2A79               	goto	l4353
 10108                           
 10109                           ;EEPROM_24C1025.c: 227:              {;EEPROM_24C1025.c: 228:              (*buffer)=I2C
      +                          _Master_Read(0);
 10110  09E3  3000               	movlw	0
 10111  09E4  00A3               	movwf	I2C_Master_Read@a
 10112  09E5  00A4               	movwf	I2C_Master_Read@a+1
 10113  09E6  160A  118A  208B  120A  158A  	fcall	_I2C_Master_Read
 10114  09EB  0823               	movf	?_I2C_Master_Read,w
 10115  09EC  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10116  09ED  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10117  09EE  0084               	movwf	4
 10118  09EF  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10119  09F0  1383               	bcf	3,7	;select IRP bank0
 10120  09F1  0080               	movwf	0
 10121                           
 10122                           ;EEPROM_24C1025.c: 229:              I2C_Master_Stop();
 10123  09F2  160A  158A  24C4  120A  158A  	fcall	_I2C_Master_Stop
 10124                           
 10125                           ;EEPROM_24C1025.c: 231:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10126  09F7  300D               	movlw	13
 10127  09F8  1283               	bcf	3,5	;RP0=0, select bank0
 10128  09F9  1303               	bcf	3,6	;RP1=0, select bank0
 10129  09FA  00AF               	movwf	??_EEPROM_24C1025_Read_Str+1
 10130  09FB  30FB               	movlw	251
 10131  09FC  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10132  09FD                     u5207:	
 10133  09FD  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10134  09FE  29FD               	goto	u5207
 10135  09FF  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10136  0A00  29FD               	goto	u5207
 10137                           
 10138                           ;EEPROM_24C1025.c: 232:              mem_add++;
 10139  0A01  3001               	movlw	1
 10140  0A02  1283               	bcf	3,5	;RP0=0, select bank0
 10141  0A03  1303               	bcf	3,6	;RP1=0, select bank0
 10142  0A04  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10143  0A05  3000               	movlw	0
 10144  0A06  1803               	skipnc
 10145  0A07  3001               	movlw	1
 10146  0A08  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10147  0A09  3000               	movlw	0
 10148  0A0A  1803               	skipnc
 10149  0A0B  3001               	movlw	1
 10150  0A0C  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10151  0A0D  3000               	movlw	0
 10152  0A0E  1803               	skipnc
 10153  0A0F  3001               	movlw	1
 10154  0A10  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10155                           
 10156                           ;EEPROM_24C1025.c: 233:              buffer++;
 10157  0A11  3001               	movlw	1
 10158  0A12  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10159  0A13  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10160  0A14  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10161                           
 10162                           ;EEPROM_24C1025.c: 234:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10163  0A15  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10164  0A16  1D03               	btfss	3,2
 10165  0A17  2A26               	goto	l4327
 10166  0A18  3001               	movlw	1
 10167  0A19  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10168  0A1A  1D03               	skipz
 10169  0A1B  2A24               	goto	u4073
 10170  0A1C  3000               	movlw	0
 10171  0A1D  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10172  0A1E  1D03               	skipz
 10173  0A1F  2A24               	goto	u4073
 10174  0A20  3000               	movlw	0
 10175  0A21  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10176  0A22  1D03               	skipz
 10177  0A23  2A24               	goto	u4073
 10178  0A24                     u4073:	
 10179  0A24  1C03               	btfss	3,0
 10180  0A25  2A2B               	goto	l4329
 10181  0A26                     l4327:	
 10182  0A26  3008               	movlw	8
 10183  0A27  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10184  0A28  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10185  0A29  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10186  0A2A  2A2C               	goto	l4331
 10187  0A2B                     l4329:	
 10188  0A2B  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10189  0A2C                     l4331:	
 10190                           
 10191                           ;EEPROM_24C1025.c: 235:              ctrl=chip_add;
 10192  0A2C  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10193  0A2D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10194  0A2E  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10195  0A2F  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10196                           
 10197                           ;EEPROM_24C1025.c: 236:              ctrl<<=1;
 10198  0A30  1003               	clrc
 10199  0A31  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10200                           
 10201                           ;EEPROM_24C1025.c: 237:              ctrl |= 0xA0;
 10202  0A32  30A0               	movlw	160
 10203  0A33  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10204  0A34  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10205  0A35  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10206                           
 10207                           ;EEPROM_24C1025.c: 238:              ctrl |= 0b00000001;
 10208  0A36  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10209                           
 10210                           ;EEPROM_24C1025.c: 239:              ctrl |= range;
 10211  0A37  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10212  0A38  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10213  0A39  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10214  0A3A  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10215                           
 10216                           ;EEPROM_24C1025.c: 241:              I2C_Master_Start();
 10217  0A3B  160A  158A  2511  120A  158A  	fcall	_I2C_Master_Start
 10218                           
 10219                           ;EEPROM_24C1025.c: 242:              I2C_Master_Write(ctrl & 0xFE);
 10220  0A40  1283               	bcf	3,5	;RP0=0, select bank0
 10221  0A41  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10222  0A42  39FE               	andlw	254
 10223  0A43  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10224  0A44  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10225  0A45  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10226  0A46  00A3               	movwf	I2C_Master_Write@d
 10227  0A47  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10228  0A48  00A4               	movwf	I2C_Master_Write@d+1
 10229  0A49  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10230                           
 10231                           ;EEPROM_24C1025.c: 243:              I2C_Master_Write(((char *)&mem_add)[1]);
 10232  0A4E  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10233  0A4F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10234  0A50  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10235  0A51  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10236  0A52  00A3               	movwf	I2C_Master_Write@d
 10237  0A53  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10238  0A54  00A4               	movwf	I2C_Master_Write@d+1
 10239  0A55  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10240                           
 10241                           ;EEPROM_24C1025.c: 244:              I2C_Master_Write(((char *)&mem_add)[0]);
 10242  0A5A  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10243  0A5B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10244  0A5C  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10245  0A5D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10246  0A5E  00A3               	movwf	I2C_Master_Write@d
 10247  0A5F  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10248  0A60  00A4               	movwf	I2C_Master_Write@d+1
 10249  0A61  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10250                           
 10251                           ;EEPROM_24C1025.c: 245:              I2C_Master_RepeatedStart();
 10252  0A66  160A  158A  24F6  120A  158A  	fcall	_I2C_Master_RepeatedStart
 10253                           
 10254                           ;EEPROM_24C1025.c: 246:              I2C_Master_Write(ctrl);
 10255  0A6B  1283               	bcf	3,5	;RP0=0, select bank0
 10256  0A6C  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10257  0A6D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10258  0A6E  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10259  0A6F  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10260  0A70  00A3               	movwf	I2C_Master_Write@d
 10261  0A71  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10262  0A72  00A4               	movwf	I2C_Master_Write@d+1
 10263  0A73  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10264                           
 10265                           ;EEPROM_24C1025.c: 247:              }
 10266  0A78  2AA0               	goto	l4363
 10267  0A79                     l4353:	
 10268                           
 10269                           ;EEPROM_24C1025.c: 249:              {;EEPROM_24C1025.c: 250:              (*buffer)=I2C
      +                          _Master_Read(1);
 10270  0A79  3001               	movlw	1
 10271  0A7A  00A3               	movwf	I2C_Master_Read@a
 10272  0A7B  3000               	movlw	0
 10273  0A7C  00A4               	movwf	I2C_Master_Read@a+1
 10274  0A7D  160A  118A  208B  120A  158A  	fcall	_I2C_Master_Read
 10275  0A82  0823               	movf	?_I2C_Master_Read,w
 10276  0A83  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10277  0A84  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10278  0A85  0084               	movwf	4
 10279  0A86  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10280  0A87  1383               	bcf	3,7	;select IRP bank0
 10281  0A88  0080               	movwf	0
 10282                           
 10283                           ;EEPROM_24C1025.c: 251:              if((*buffer)==0)break;
 10284  0A89  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10285  0A8A  0084               	movwf	4
 10286  0A8B  0800               	movf	0,w
 10287  0A8C  1903               	btfsc	3,2
 10288  0A8D  2AA9               	goto	l4365
 10289                           
 10290                           ;EEPROM_24C1025.c: 252:              buffer++;
 10291  0A8E  3001               	movlw	1
 10292  0A8F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10293  0A90  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10294  0A91  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10295                           
 10296                           ;EEPROM_24C1025.c: 253:              mem_add++;
 10297  0A92  3001               	movlw	1
 10298  0A93  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10299  0A94  3000               	movlw	0
 10300  0A95  1803               	skipnc
 10301  0A96  3001               	movlw	1
 10302  0A97  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10303  0A98  3000               	movlw	0
 10304  0A99  1803               	skipnc
 10305  0A9A  3001               	movlw	1
 10306  0A9B  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10307  0A9C  3000               	movlw	0
 10308  0A9D  1803               	skipnc
 10309  0A9E  3001               	movlw	1
 10310  0A9F  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10311  0AA0                     l4363:	
 10312                           
 10313                           ;EEPROM_24C1025.c: 255:        }while((cnt++)<64);
 10314  0AA0  3001               	movlw	1
 10315  0AA1  07B0               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 10316  0AA2  30FF               	movlw	-1
 10317  0AA3  0730               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 10318  0AA4  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10319  0AA5  3040               	movlw	64
 10320  0AA6  022E               	subwf	??_EEPROM_24C1025_Read_Str,w
 10321  0AA7  1C03               	skipc
 10322  0AA8  29CD               	goto	l4309
 10323  0AA9                     l4365:	
 10324                           
 10325                           ;EEPROM_24C1025.c: 257:      I2C_Master_Read(0);
 10326  0AA9  3000               	movlw	0
 10327  0AAA  00A3               	movwf	I2C_Master_Read@a
 10328  0AAB  00A4               	movwf	I2C_Master_Read@a+1
 10329  0AAC  160A  118A  208B  120A  158A  	fcall	_I2C_Master_Read
 10330                           
 10331                           ;EEPROM_24C1025.c: 258:      I2C_Master_Stop();
 10332  0AB1  160A  158A  24C4  120A  158A  	fcall	_I2C_Master_Stop
 10333                           
 10334                           ;EEPROM_24C1025.c: 259:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 10335  0AB6  30B9               	movlw	185
 10336  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
 10337  0AB8  1303               	bcf	3,6	;RP1=0, select bank0
 10338  0AB9  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10339  0ABA                     u5217:	
 10340  0ABA  2ABB               	nop2
 10341  0ABB  2ABC               	nop2
 10342  0ABC  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10343  0ABD  2ABA               	goto	u5217
 10344  0ABE  2ABF               	nop2
 10345  0ABF  0008               	return
 10346  0AC0                     __end_of_EEPROM_24C1025_Read_Str:	
 10347                           
 10348                           	psect	text43
 10349  1EEF                     __ptext43:	
 10350 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 10351 ;; Defined at:
 10352 ;;		line 287 in file "EEPROM_24C1025.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;  chip_add        1    wreg     unsigned char 
 10355 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10356 ;; Auto vars:     Size  Location     Type
 10357 ;;  chip_add        1   29[BANK0 ] unsigned char 
 10358 ;;  data            2   30[BANK0 ] unsigned char [2]
 10359 ;; Return value:  Size  Location     Type
 10360 ;;                  2   23[BANK0 ] unsigned int 
 10361 ;; Registers used:
 10362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10363 ;; Tracked objects:
 10364 ;;		On entry : 300/300
 10365 ;;		On exit  : 300/0
 10366 ;;		Unchanged: 0/0
 10367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10368 ;;      Params:         0       4       0       0       0
 10369 ;;      Locals:         0       3       0       0       0
 10370 ;;      Temps:          0       2       0       0       0
 10371 ;;      Totals:         0       9       0       0       0
 10372 ;;Total ram usage:        9 bytes
 10373 ;; Hardware stack levels used:    1
 10374 ;; Hardware stack levels required when called:    4
 10375 ;; This function calls:
 10376 ;;		_EEPROM_24C1025_Read_Buffer
 10377 ;; This function is called by:
 10378 ;;		_Decodify_Command
 10379 ;; This function uses a non-reentrant model
 10380 ;;
 10381                           
 10382                           
 10383                           ;psect for function _EEPROM_24C1025_Read_Int
 10384  1EEF                     _EEPROM_24C1025_Read_Int:	
 10385                           
 10386                           ;incstack = 0
 10387                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10388                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 10389  1EEF  1283               	bcf	3,5	;RP0=0, select bank0
 10390  1EF0  1303               	bcf	3,6	;RP1=0, select bank0
 10391  1EF1  00BD               	movwf	EEPROM_24C1025_Read_Int@chip_add
 10392                           
 10393                           ;EEPROM_24C1025.c: 288:     char data[2];;EEPROM_24C1025.c: 289:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 10394  1EF2  083A               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 10395  1EF3  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10396  1EF4  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 10397  1EF5  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10398  1EF6  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 10399  1EF7  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10400  1EF8  0837               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 10401  1EF9  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10402  1EFA  3002               	movlw	2
 10403  1EFB  00BB               	movwf	??_EEPROM_24C1025_Read_Int
 10404  1EFC  083B               	movf	??_EEPROM_24C1025_Read_Int,w
 10405  1EFD  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 10406  1EFE  303E               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 10407  1EFF  00BC               	movwf	??_EEPROM_24C1025_Read_Int+1
 10408  1F00  083C               	movf	??_EEPROM_24C1025_Read_Int+1,w
 10409  1F01  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10410  1F02  083D               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 10411  1F03  120A  158A  22C0   	fcall	_EEPROM_24C1025_Read_Buffer
 10412                           
 10413                           ;EEPROM_24C1025.c: 290:     return (data[0]<<8)+data[1];
 10414  1F06  1283               	bcf	3,5	;RP0=0, select bank0
 10415  1F07  1303               	bcf	3,6	;RP1=0, select bank0
 10416  1F08  083E               	movf	EEPROM_24C1025_Read_Int@data,w
 10417  1F09  00BB               	movwf	??_EEPROM_24C1025_Read_Int
 10418  1F0A  01BC               	clrf	??_EEPROM_24C1025_Read_Int+1
 10419  1F0B  083B               	movf	??_EEPROM_24C1025_Read_Int,w
 10420  1F0C  00BC               	movwf	??_EEPROM_24C1025_Read_Int+1
 10421  1F0D  01BB               	clrf	??_EEPROM_24C1025_Read_Int
 10422  1F0E  083F               	movf	EEPROM_24C1025_Read_Int@data+1,w
 10423  1F0F  073B               	addwf	??_EEPROM_24C1025_Read_Int,w
 10424  1F10  00B7               	movwf	?_EEPROM_24C1025_Read_Int
 10425  1F11  3000               	movlw	0
 10426  1F12  1803               	skipnc
 10427  1F13  3001               	movlw	1
 10428  1F14  073C               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 10429  1F15  00B8               	movwf	?_EEPROM_24C1025_Read_Int+1
 10430  1F16  0008               	return
 10431  1F17                     __end_of_EEPROM_24C1025_Read_Int:	
 10432                           
 10433                           	psect	text44
 10434  1D62                     __ptext44:	
 10435 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 10436 ;; Defined at:
 10437 ;;		line 273 in file "EEPROM_24C1025.c"
 10438 ;; Parameters:    Size  Location     Type
 10439 ;;  chip_add        1    wreg     unsigned char 
 10440 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10443 ;;  data            1   29[BANK0 ] unsigned char 
 10444 ;; Return value:  Size  Location     Type
 10445 ;;                  1    wreg      unsigned char 
 10446 ;; Registers used:
 10447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10448 ;; Tracked objects:
 10449 ;;		On entry : 300/300
 10450 ;;		On exit  : 300/0
 10451 ;;		Unchanged: 0/0
 10452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10453 ;;      Params:         0       4       0       0       0
 10454 ;;      Locals:         0       2       0       0       0
 10455 ;;      Temps:          0       1       0       0       0
 10456 ;;      Totals:         0       7       0       0       0
 10457 ;;Total ram usage:        7 bytes
 10458 ;; Hardware stack levels used:    1
 10459 ;; Hardware stack levels required when called:    4
 10460 ;; This function calls:
 10461 ;;		_EEPROM_24C1025_Read_Buffer
 10462 ;; This function is called by:
 10463 ;;		_Decodify_Command
 10464 ;; This function uses a non-reentrant model
 10465 ;;
 10466                           
 10467                           
 10468                           ;psect for function _EEPROM_24C1025_Read_Byte
 10469  1D62                     _EEPROM_24C1025_Read_Byte:	
 10470                           
 10471                           ;incstack = 0
 10472                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10473                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 10474  1D62  1283               	bcf	3,5	;RP0=0, select bank0
 10475  1D63  1303               	bcf	3,6	;RP1=0, select bank0
 10476  1D64  00BC               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 10477                           
 10478                           ;EEPROM_24C1025.c: 274:     char data;;EEPROM_24C1025.c: 275:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 10479  1D65  083A               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 10480  1D66  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10481  1D67  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 10482  1D68  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10483  1D69  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 10484  1D6A  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10485  1D6B  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 10486  1D6C  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10487  1D6D  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 10488  1D6E  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 10489  1D6F  303D               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 10490  1D70  00BB               	movwf	??_EEPROM_24C1025_Read_Byte
 10491  1D71  083B               	movf	??_EEPROM_24C1025_Read_Byte,w
 10492  1D72  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10493  1D73  083C               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 10494  1D74  120A  158A  22C0   	fcall	_EEPROM_24C1025_Read_Buffer
 10495                           
 10496                           ;EEPROM_24C1025.c: 276:     return data;
 10497  1D77  1283               	bcf	3,5	;RP0=0, select bank0
 10498  1D78  1303               	bcf	3,6	;RP1=0, select bank0
 10499  1D79  083D               	movf	EEPROM_24C1025_Read_Byte@data,w
 10500  1D7A  0008               	return
 10501  1D7B                     __end_of_EEPROM_24C1025_Read_Byte:	
 10502                           
 10503                           	psect	text45
 10504  0AC0                     __ptext45:	
 10505 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 10506 ;; Defined at:
 10507 ;;		line 77 in file "EEPROM_24C1025.c"
 10508 ;; Parameters:    Size  Location     Type
 10509 ;;  chip_add        1    wreg     unsigned char 
 10510 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10511 ;;  sizedata        1   14[BANK0 ] unsigned char 
 10512 ;;  data            1   15[BANK0 ] PTR unsigned char 
 10513 ;;		 -> buffer(33), EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 10514 ;; Auto vars:     Size  Location     Type
 10515 ;;  chip_add        1   20[BANK0 ] unsigned char 
 10516 ;;  cnt             1   19[BANK0 ] unsigned char 
 10517 ;;  ctrl            1   22[BANK0 ] unsigned char 
 10518 ;;  range           1   21[BANK0 ] unsigned char 
 10519 ;;  cnt             1    0        unsigned char 
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  1    wreg      void 
 10522 ;; Registers used:
 10523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/300
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10529 ;;      Params:         0       6       0       0       0
 10530 ;;      Locals:         0       5       0       0       0
 10531 ;;      Temps:          0       2       0       0       0
 10532 ;;      Totals:         0      13       0       0       0
 10533 ;;Total ram usage:       13 bytes
 10534 ;; Hardware stack levels used:    1
 10535 ;; Hardware stack levels required when called:    3
 10536 ;; This function calls:
 10537 ;;		_I2C_Master_Read
 10538 ;;		_I2C_Master_RepeatedStart
 10539 ;;		_I2C_Master_Start
 10540 ;;		_I2C_Master_Stop
 10541 ;;		_I2C_Master_Write
 10542 ;;		_my_delay_ms_WDT
 10543 ;; This function is called by:
 10544 ;;		_EEPROM_24C1025_Read_Byte
 10545 ;;		_EEPROM_24C1025_Read_Int
 10546 ;;		_Decodify_Command
 10547 ;; This function uses a non-reentrant model
 10548 ;;
 10549                           
 10550                           
 10551                           ;psect for function _EEPROM_24C1025_Read_Buffer
 10552  0AC0                     _EEPROM_24C1025_Read_Buffer:	
 10553                           
 10554                           ;incstack = 0
 10555                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 10556                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 10557  0AC0  1283               	bcf	3,5	;RP0=0, select bank0
 10558  0AC1  1303               	bcf	3,6	;RP1=0, select bank0
 10559  0AC2  00B4               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 10560                           
 10561                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 10562  0AC3  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 10563                           
 10564                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 10565  0AC4  3014               	movlw	20
 10566  0AC5  1683               	bsf	3,5	;RP0=1, select bank1
 10567  0AC6  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 10568  0AC7  3000               	movlw	0
 10569  0AC8  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 10570                           
 10571                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 10572  0AC9  1283               	bcf	3,5	;RP0=0, select bank0
 10573  0ACA  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10574  0ACB  1D03               	btfss	3,2
 10575  0ACC  0008               	return
 10576  0ACD  3002               	movlw	2
 10577  0ACE  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10578  0ACF  1D03               	skipz
 10579  0AD0  2AD9               	goto	u2683
 10580  0AD1  3000               	movlw	0
 10581  0AD2  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10582  0AD3  1D03               	skipz
 10583  0AD4  2AD9               	goto	u2683
 10584  0AD5  3000               	movlw	0
 10585  0AD6  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10586  0AD7  1D03               	skipz
 10587  0AD8  2AD9               	goto	u2683
 10588  0AD9                     u2683:	
 10589  0AD9  1803               	btfsc	3,0
 10590  0ADA  0008               	return
 10591                           
 10592                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10593  0ADB  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10594  0ADC  1D03               	btfss	3,2
 10595  0ADD  2AEC               	goto	l3567
 10596  0ADE  3001               	movlw	1
 10597  0ADF  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10598  0AE0  1D03               	skipz
 10599  0AE1  2AEA               	goto	u2693
 10600  0AE2  3000               	movlw	0
 10601  0AE3  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10602  0AE4  1D03               	skipz
 10603  0AE5  2AEA               	goto	u2693
 10604  0AE6  3000               	movlw	0
 10605  0AE7  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10606  0AE8  1D03               	skipz
 10607  0AE9  2AEA               	goto	u2693
 10608  0AEA                     u2693:	
 10609  0AEA  1C03               	btfss	3,0
 10610  0AEB  2AF1               	goto	l3569
 10611  0AEC                     l3567:	
 10612  0AEC  3008               	movlw	8
 10613  0AED  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10614  0AEE  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10615  0AEF  00B5               	movwf	EEPROM_24C1025_Read_Buffer@range
 10616  0AF0  2AF2               	goto	l3571
 10617  0AF1                     l3569:	
 10618  0AF1  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 10619  0AF2                     l3571:	
 10620                           
 10621                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 10622  0AF2  0834               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 10623  0AF3  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10624  0AF4  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10625  0AF5  00B6               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 10626                           
 10627                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 10628  0AF6  1003               	clrc
 10629  0AF7  0DB6               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10630                           
 10631                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 10632  0AF8  30A0               	movlw	160
 10633  0AF9  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10634  0AFA  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10635  0AFB  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10636                           
 10637                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 10638  0AFC  1436               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 10639                           
 10640                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 10641  0AFD  0835               	movf	EEPROM_24C1025_Read_Buffer@range,w
 10642  0AFE  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10643  0AFF  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10644  0B00  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10645                           
 10646                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 10647  0B01  160A  158A  2511  120A  158A  	fcall	_I2C_Master_Start
 10648                           
 10649                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 10650  0B06  1283               	bcf	3,5	;RP0=0, select bank0
 10651  0B07  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10652  0B08  39FE               	andlw	254
 10653  0B09  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10654  0B0A  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10655  0B0B  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10656  0B0C  00A3               	movwf	I2C_Master_Write@d
 10657  0B0D  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10658  0B0E  00A4               	movwf	I2C_Master_Write@d+1
 10659  0B0F  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10660                           
 10661                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 10662  0B14  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10663  0B15  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10664  0B16  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10665  0B17  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10666  0B18  00A3               	movwf	I2C_Master_Write@d
 10667  0B19  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10668  0B1A  00A4               	movwf	I2C_Master_Write@d+1
 10669  0B1B  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10670                           
 10671                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 10672  0B20  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10673  0B21  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10674  0B22  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10675  0B23  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10676  0B24  00A3               	movwf	I2C_Master_Write@d
 10677  0B25  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10678  0B26  00A4               	movwf	I2C_Master_Write@d+1
 10679  0B27  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10680                           
 10681                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 10682  0B2C  160A  158A  24F6  120A  158A  	fcall	_I2C_Master_RepeatedStart
 10683                           
 10684                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 10685  0B31  1283               	bcf	3,5	;RP0=0, select bank0
 10686  0B32  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10687  0B33  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10688  0B34  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10689  0B35  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10690  0B36  00A3               	movwf	I2C_Master_Write@d
 10691  0B37  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10692  0B38  00A4               	movwf	I2C_Master_Write@d+1
 10693  0B39  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10694                           
 10695                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 10696  0B3E  01B3               	clrf	EEPROM_24C1025_Read_Buffer@cnt_103
 10697  0B3F                     l3645:	
 10698  0B3F  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 10699  0B40  0233               	subwf	EEPROM_24C1025_Read_Buffer@cnt_103,w
 10700  0B41  1803               	btfsc	3,0
 10701  0B42  2C1B               	goto	l3647
 10702  0B43  0064               	clrwdt	;# 
 10703                           
 10704                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 10705  0B44  1283               	bcf	3,5	;RP0=0, select bank0
 10706  0B45  1303               	bcf	3,6	;RP1=0, select bank0
 10707  0B46  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10708  0B47  1D03               	btfss	3,2
 10709  0B48  2C1B               	goto	l3647
 10710  0B49  3002               	movlw	2
 10711  0B4A  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10712  0B4B  1D03               	skipz
 10713  0B4C  2B55               	goto	u2703
 10714  0B4D  3000               	movlw	0
 10715  0B4E  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10716  0B4F  1D03               	skipz
 10717  0B50  2B55               	goto	u2703
 10718  0B51  3000               	movlw	0
 10719  0B52  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10720  0B53  1D03               	skipz
 10721  0B54  2B55               	goto	u2703
 10722  0B55                     u2703:	
 10723  0B55  1803               	btfsc	3,0
 10724  0B56  2C1B               	goto	l3647
 10725                           
 10726                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 10727  0B57  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10728  0B58  3E01               	addlw	1
 10729  0B59  397F               	andlw	127
 10730  0B5A  1D03               	btfss	3,2
 10731  0B5B  2BF4               	goto	l3637
 10732                           
 10733                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 10734  0B5C  3000               	movlw	0
 10735  0B5D  00A3               	movwf	I2C_Master_Read@a
 10736  0B5E  00A4               	movwf	I2C_Master_Read@a+1
 10737  0B5F  160A  118A  208B  120A  158A  	fcall	_I2C_Master_Read
 10738  0B64  0823               	movf	?_I2C_Master_Read,w
 10739  0B65  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10740  0B66  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 10741  0B67  0084               	movwf	4
 10742  0B68  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10743  0B69  1383               	bcf	3,7	;select IRP bank0
 10744  0B6A  0080               	movwf	0
 10745                           
 10746                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 10747  0B6B  160A  158A  24C4  120A  158A  	fcall	_I2C_Master_Stop
 10748                           
 10749                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 10750  0B70  3000               	movlw	0
 10751  0B71  1283               	bcf	3,5	;RP0=0, select bank0
 10752  0B72  00A3               	movwf	my_delay_ms_WDT@time+3
 10753  0B73  3000               	movlw	0
 10754  0B74  00A2               	movwf	my_delay_ms_WDT@time+2
 10755  0B75  3000               	movlw	0
 10756  0B76  00A1               	movwf	my_delay_ms_WDT@time+1
 10757  0B77  3005               	movlw	5
 10758  0B78  00A0               	movwf	my_delay_ms_WDT@time
 10759  0B79  160A  118A  20F7  120A  158A  	fcall	_my_delay_ms_WDT
 10760                           
 10761                           ;EEPROM_24C1025.c: 114:              mem_add++;
 10762  0B7E  3001               	movlw	1
 10763  0B7F  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 10764  0B80  3000               	movlw	0
 10765  0B81  1803               	skipnc
 10766  0B82  3001               	movlw	1
 10767  0B83  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 10768  0B84  3000               	movlw	0
 10769  0B85  1803               	skipnc
 10770  0B86  3001               	movlw	1
 10771  0B87  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 10772  0B88  3000               	movlw	0
 10773  0B89  1803               	skipnc
 10774  0B8A  3001               	movlw	1
 10775  0B8B  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 10776                           
 10777                           ;EEPROM_24C1025.c: 115:              data++;
 10778  0B8C  3001               	movlw	1
 10779  0B8D  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10780  0B8E  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10781  0B8F  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 10782                           
 10783                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10784  0B90  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10785  0B91  1D03               	btfss	3,2
 10786  0B92  2BA1               	goto	l3611
 10787  0B93  3001               	movlw	1
 10788  0B94  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10789  0B95  1D03               	skipz
 10790  0B96  2B9F               	goto	u2723
 10791  0B97  3000               	movlw	0
 10792  0B98  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10793  0B99  1D03               	skipz
 10794  0B9A  2B9F               	goto	u2723
 10795  0B9B  3000               	movlw	0
 10796  0B9C  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10797  0B9D  1D03               	skipz
 10798  0B9E  2B9F               	goto	u2723
 10799  0B9F                     u2723:	
 10800  0B9F  1C03               	btfss	3,0
 10801  0BA0  2BA6               	goto	l3613
 10802  0BA1                     l3611:	
 10803  0BA1  3008               	movlw	8
 10804  0BA2  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10805  0BA3  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10806  0BA4  00B5               	movwf	EEPROM_24C1025_Read_Buffer@range
 10807  0BA5  2BA7               	goto	l3615
 10808  0BA6                     l3613:	
 10809  0BA6  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 10810  0BA7                     l3615:	
 10811                           
 10812                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 10813  0BA7  0834               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 10814  0BA8  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10815  0BA9  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10816  0BAA  00B6               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 10817                           
 10818                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 10819  0BAB  1003               	clrc
 10820  0BAC  0DB6               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10821                           
 10822                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 10823  0BAD  30A0               	movlw	160
 10824  0BAE  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10825  0BAF  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10826  0BB0  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10827                           
 10828                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 10829  0BB1  1436               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 10830                           
 10831                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 10832  0BB2  0835               	movf	EEPROM_24C1025_Read_Buffer@range,w
 10833  0BB3  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10834  0BB4  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10835  0BB5  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10836                           
 10837                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 10838  0BB6  160A  158A  2511  120A  158A  	fcall	_I2C_Master_Start
 10839                           
 10840                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 10841  0BBB  1283               	bcf	3,5	;RP0=0, select bank0
 10842  0BBC  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10843  0BBD  39FE               	andlw	254
 10844  0BBE  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10845  0BBF  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10846  0BC0  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10847  0BC1  00A3               	movwf	I2C_Master_Write@d
 10848  0BC2  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10849  0BC3  00A4               	movwf	I2C_Master_Write@d+1
 10850  0BC4  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10851                           
 10852                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 10853  0BC9  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10854  0BCA  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10855  0BCB  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10856  0BCC  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10857  0BCD  00A3               	movwf	I2C_Master_Write@d
 10858  0BCE  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10859  0BCF  00A4               	movwf	I2C_Master_Write@d+1
 10860  0BD0  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10861                           
 10862                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 10863  0BD5  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10864  0BD6  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10865  0BD7  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10866  0BD8  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10867  0BD9  00A3               	movwf	I2C_Master_Write@d
 10868  0BDA  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10869  0BDB  00A4               	movwf	I2C_Master_Write@d+1
 10870  0BDC  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10871                           
 10872                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 10873  0BE1  160A  158A  24F6  120A  158A  	fcall	_I2C_Master_RepeatedStart
 10874                           
 10875                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 10876  0BE6  1283               	bcf	3,5	;RP0=0, select bank0
 10877  0BE7  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10878  0BE8  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10879  0BE9  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10880  0BEA  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10881  0BEB  00A3               	movwf	I2C_Master_Write@d
 10882  0BEC  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10883  0BED  00A4               	movwf	I2C_Master_Write@d+1
 10884  0BEE  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Write
 10885                           
 10886                           ;EEPROM_24C1025.c: 129:              }
 10887  0BF3  2C16               	goto	l3643
 10888  0BF4                     l3637:	
 10889                           
 10890                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 10891  0BF4  3001               	movlw	1
 10892  0BF5  00A3               	movwf	I2C_Master_Read@a
 10893  0BF6  3000               	movlw	0
 10894  0BF7  00A4               	movwf	I2C_Master_Read@a+1
 10895  0BF8  160A  118A  208B  120A  158A  	fcall	_I2C_Master_Read
 10896  0BFD  0823               	movf	?_I2C_Master_Read,w
 10897  0BFE  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10898  0BFF  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 10899  0C00  0084               	movwf	4
 10900  0C01  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10901  0C02  1383               	bcf	3,7	;select IRP bank0
 10902  0C03  0080               	movwf	0
 10903                           
 10904                           ;EEPROM_24C1025.c: 133:              data++;
 10905  0C04  3001               	movlw	1
 10906  0C05  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10907  0C06  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10908  0C07  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 10909                           
 10910                           ;EEPROM_24C1025.c: 134:              mem_add++;
 10911  0C08  3001               	movlw	1
 10912  0C09  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 10913  0C0A  3000               	movlw	0
 10914  0C0B  1803               	skipnc
 10915  0C0C  3001               	movlw	1
 10916  0C0D  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 10917  0C0E  3000               	movlw	0
 10918  0C0F  1803               	skipnc
 10919  0C10  3001               	movlw	1
 10920  0C11  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 10921  0C12  3000               	movlw	0
 10922  0C13  1803               	skipnc
 10923  0C14  3001               	movlw	1
 10924  0C15  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 10925  0C16                     l3643:	
 10926                           
 10927                           ;EEPROM_24C1025.c: 136:         }
 10928  0C16  3001               	movlw	1
 10929  0C17  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10930  0C18  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10931  0C19  07B3               	addwf	EEPROM_24C1025_Read_Buffer@cnt_103,f
 10932  0C1A  2B3F               	goto	l3645
 10933  0C1B                     l3647:	
 10934                           
 10935                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 10936  0C1B  3000               	movlw	0
 10937  0C1C  00A3               	movwf	I2C_Master_Read@a
 10938  0C1D  00A4               	movwf	I2C_Master_Read@a+1
 10939  0C1E  160A  118A  208B  120A  158A  	fcall	_I2C_Master_Read
 10940                           
 10941                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 10942  0C23  160A  158A  24C4  120A  158A  	fcall	_I2C_Master_Stop
 10943                           
 10944                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 10945  0C28  30B9               	movlw	185
 10946  0C29  1283               	bcf	3,5	;RP0=0, select bank0
 10947  0C2A  1303               	bcf	3,6	;RP1=0, select bank0
 10948  0C2B  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10949  0C2C                     u5227:	
 10950  0C2C  2C2D               	nop2
 10951  0C2D  2C2E               	nop2
 10952  0C2E  0BB0               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 10953  0C2F  2C2C               	goto	u5227
 10954  0C30  2C31               	nop2
 10955  0C31  0008               	return
 10956  0C32                     __end_of_EEPROM_24C1025_Read_Buffer:	
 10957                           
 10958                           	psect	text46
 10959  1CF6                     __ptext46:	
 10960 ;; *************** function _I2C_Master_RepeatedStart *****************
 10961 ;; Defined at:
 10962 ;;		line 62 in file "I2C.c"
 10963 ;; Parameters:    Size  Location     Type
 10964 ;;		None
 10965 ;; Auto vars:     Size  Location     Type
 10966 ;;		None
 10967 ;; Return value:  Size  Location     Type
 10968 ;;                  1    wreg      void 
 10969 ;; Registers used:
 10970 ;;		wreg, status,2, status,0, pclath, cstack
 10971 ;; Tracked objects:
 10972 ;;		On entry : 300/0
 10973 ;;		On exit  : 200/0
 10974 ;;		Unchanged: 0/0
 10975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10976 ;;      Params:         0       0       0       0       0
 10977 ;;      Locals:         0       0       0       0       0
 10978 ;;      Temps:          0       0       0       0       0
 10979 ;;      Totals:         0       0       0       0       0
 10980 ;;Total ram usage:        0 bytes
 10981 ;; Hardware stack levels used:    1
 10982 ;; Hardware stack levels required when called:    2
 10983 ;; This function calls:
 10984 ;;		_I2C_Master_Wait
 10985 ;; This function is called by:
 10986 ;;		_EEPROM_24C1025_Read_Buffer
 10987 ;;		_EEPROM_24C1025_Read_Str
 10988 ;; This function uses a non-reentrant model
 10989 ;;
 10990                           
 10991                           
 10992                           ;psect for function _I2C_Master_RepeatedStart
 10993  1CF6                     _I2C_Master_RepeatedStart:	
 10994                           
 10995                           ;I2C.c: 64:   if(I2C_Master_Wait())
 10996                           
 10997                           ;incstack = 0
 10998                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 10999  1CF6  160A  158A  2667  160A  158A  	fcall	_I2C_Master_Wait
 11000  1CFB  3A00               	xorlw	0
 11001  1CFC  1903               	skipnz
 11002  1CFD  0008               	return
 11003                           
 11004                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 11005  1CFE  1683               	bsf	3,5	;RP0=1, select bank1
 11006  1CFF  1491               	bsf	17,1	;volatile
 11007  1D00  0008               	return
 11008  1D01                     __end_of_I2C_Master_RepeatedStart:	
 11009                           
 11010                           	psect	text47
 11011  108B                     __ptext47:	
 11012 ;; *************** function _I2C_Master_Read *****************
 11013 ;; Defined at:
 11014 ;;		line 87 in file "I2C.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;  a               2    3[BANK0 ] unsigned short 
 11017 ;; Auto vars:     Size  Location     Type
 11018 ;;  temp            2    7[BANK0 ] unsigned short 
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  2    3[BANK0 ] unsigned short 
 11021 ;; Registers used:
 11022 ;;		wreg, status,2, status,0, pclath, cstack
 11023 ;; Tracked objects:
 11024 ;;		On entry : 300/0
 11025 ;;		On exit  : 300/0
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11028 ;;      Params:         0       2       0       0       0
 11029 ;;      Locals:         0       2       0       0       0
 11030 ;;      Temps:          0       2       0       0       0
 11031 ;;      Totals:         0       6       0       0       0
 11032 ;;Total ram usage:        6 bytes
 11033 ;; Hardware stack levels used:    1
 11034 ;; Hardware stack levels required when called:    2
 11035 ;; This function calls:
 11036 ;;		_I2C_Master_Wait
 11037 ;; This function is called by:
 11038 ;;		_EEPROM_24C1025_Read_Buffer
 11039 ;;		_EEPROM_24C1025_Read_Str
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043                           
 11044                           ;psect for function _I2C_Master_Read
 11045  108B                     _I2C_Master_Read:	
 11046                           
 11047                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 11048                           
 11049                           ;incstack = 0
 11050                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11051  108B  160A  158A  2667  160A  118A  	fcall	_I2C_Master_Wait
 11052  1090  3A00               	xorlw	0
 11053  1091  1683               	bsf	3,5	;RP0=1, select bank1
 11054  1092  1D03               	btfss	3,2
 11055  1093  1591               	bsf	17,3	;volatile
 11056                           
 11057                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 11058  1094  160A  158A  2667  160A  118A  	fcall	_I2C_Master_Wait
 11059  1099  3A00               	xorlw	0
 11060  109A  1903               	skipnz
 11061  109B  28A3               	goto	l3517
 11062  109C  0813               	movf	19,w	;volatile
 11063  109D  00A5               	movwf	??_I2C_Master_Read
 11064  109E  01A6               	clrf	??_I2C_Master_Read+1
 11065  109F  0825               	movf	??_I2C_Master_Read,w
 11066  10A0  00A7               	movwf	I2C_Master_Read@temp
 11067  10A1  0826               	movf	??_I2C_Master_Read+1,w
 11068  10A2  00A8               	movwf	I2C_Master_Read@temp+1
 11069  10A3                     l3517:	
 11070                           
 11071                           ;I2C.c: 92:   if(I2C_Master_Wait())
 11072  10A3  160A  158A  2667  160A  118A  	fcall	_I2C_Master_Wait
 11073  10A8  3A00               	xorlw	0
 11074  10A9  1903               	skipnz
 11075  10AA  28BD               	goto	l3529
 11076                           
 11077                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 11078  10AB  0823               	movf	I2C_Master_Read@a,w
 11079  10AC  0424               	iorwf	I2C_Master_Read@a+1,w
 11080  10AD  1D03               	btfss	3,2
 11081  10AE  28B3               	goto	u2620
 11082  10AF  1683               	bsf	3,5	;RP0=1, select bank1
 11083  10B0  1303               	bcf	3,6	;RP1=0, select bank1
 11084  10B1  1691               	bsf	17,5	;volatile
 11085  10B2  28B6               	goto	l3521
 11086  10B3                     u2620:	
 11087  10B3  1683               	bsf	3,5	;RP0=1, select bank1
 11088  10B4  1303               	bcf	3,6	;RP1=0, select bank1
 11089  10B5  1291               	bcf	17,5	;volatile
 11090  10B6                     l3521:	
 11091                           
 11092                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 11093  10B6  1611               	bsf	17,4	;volatile
 11094                           
 11095                           ;I2C.c: 96:     return temp;
 11096  10B7  1283               	bcf	3,5	;RP0=0, select bank0
 11097  10B8  0828               	movf	I2C_Master_Read@temp+1,w
 11098  10B9  00A4               	movwf	?_I2C_Master_Read+1
 11099  10BA  0827               	movf	I2C_Master_Read@temp,w
 11100  10BB  00A3               	movwf	?_I2C_Master_Read
 11101  10BC  0008               	return
 11102  10BD                     l3529:	
 11103                           
 11104                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 11105  10BD  01A3               	clrf	?_I2C_Master_Read
 11106  10BE  01A4               	clrf	?_I2C_Master_Read+1
 11107  10BF  0008               	return
 11108  10C0                     __end_of_I2C_Master_Read:	
 11109                           
 11110                           	psect	text48
 11111  121B                     __ptext48:	
 11112 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 11113 ;; Defined at:
 11114 ;;		line 294 in file "EEPROM_24C1025.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;  chip_add        1    wreg     unsigned char 
 11117 ;;  value           2   56[BANK0 ] unsigned int 
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;  chip_add        1   58[BANK0 ] unsigned char 
 11120 ;;  mem_add         4   59[BANK0 ] unsigned long 
 11121 ;; Return value:  Size  Location     Type
 11122 ;;                  1    wreg      void 
 11123 ;; Registers used:
 11124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11125 ;; Tracked objects:
 11126 ;;		On entry : 300/300
 11127 ;;		On exit  : 300/0
 11128 ;;		Unchanged: 0/0
 11129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11130 ;;      Params:         0       2       0       0       0
 11131 ;;      Locals:         0       5       0       0       0
 11132 ;;      Temps:          0       0       0       0       0
 11133 ;;      Totals:         0       7       0       0       0
 11134 ;;Total ram usage:        7 bytes
 11135 ;; Hardware stack levels used:    1
 11136 ;; Hardware stack levels required when called:    5
 11137 ;; This function calls:
 11138 ;;		_EEPROM_24C1025_Write_Int
 11139 ;; This function is called by:
 11140 ;;		_Decodify_Command
 11141 ;; This function uses a non-reentrant model
 11142 ;;
 11143                           
 11144                           
 11145                           ;psect for function _EEPROM_24C1025_Fill_All
 11146  121B                     _EEPROM_24C1025_Fill_All:	
 11147                           
 11148                           ;incstack = 0
 11149                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11150                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 11151  121B  1283               	bcf	3,5	;RP0=0, select bank0
 11152  121C  1303               	bcf	3,6	;RP1=0, select bank0
 11153  121D  00DA               	movwf	EEPROM_24C1025_Fill_All@chip_add
 11154                           
 11155                           ;EEPROM_24C1025.c: 295:      unsigned long mem_add;;EEPROM_24C1025.c: 296:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 11156  121E  3000               	movlw	0
 11157  121F  00DE               	movwf	EEPROM_24C1025_Fill_All@mem_add+3
 11158  1220  3000               	movlw	0
 11159  1221  00DD               	movwf	EEPROM_24C1025_Fill_All@mem_add+2
 11160  1222  3000               	movlw	0
 11161  1223  00DC               	movwf	EEPROM_24C1025_Fill_All@mem_add+1
 11162  1224  3000               	movlw	0
 11163  1225  00DB               	movwf	EEPROM_24C1025_Fill_All@mem_add
 11164  1226                     l5385:	
 11165                           
 11166                           ;EEPROM_24C1025.c: 297:         {;EEPROM_24C1025.c: 298:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 11167  1226  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 11168  1227  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 11169  1228  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 11170  1229  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 11171  122A  085C               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 11172  122B  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 11173  122C  085B               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 11174  122D  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
 11175  122E  0859               	movf	EEPROM_24C1025_Fill_All@value+1,w
 11176  122F  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
 11177  1230  0858               	movf	EEPROM_24C1025_Fill_All@value,w
 11178  1231  00D2               	movwf	EEPROM_24C1025_Write_Int@data
 11179  1232  085A               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 11180  1233  160A  158A  2627  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
 11181  1238  0064               	clrwdt	;# 
 11182                           
 11183                           ;EEPROM_24C1025.c: 300:         }
 11184  1239  3002               	movlw	2
 11185  123A  1283               	bcf	3,5	;RP0=0, select bank0
 11186  123B  1303               	bcf	3,6	;RP1=0, select bank0
 11187  123C  07DB               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 11188  123D  3000               	movlw	0
 11189  123E  1803               	skipnc
 11190  123F  3001               	movlw	1
 11191  1240  07DC               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 11192  1241  3000               	movlw	0
 11193  1242  1803               	skipnc
 11194  1243  3001               	movlw	1
 11195  1244  07DD               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 11196  1245  3000               	movlw	0
 11197  1246  1803               	skipnc
 11198  1247  3001               	movlw	1
 11199  1248  07DE               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 11200  1249  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 11201  124A  1D03               	btfss	3,2
 11202  124B  0008               	return
 11203  124C  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 11204  124D  1D03               	btfss	3,2
 11205  124E  0008               	return
 11206  124F  3004               	movlw	4
 11207  1250  025C               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 11208  1251  1D03               	skipz
 11209  1252  2A57               	goto	u5023
 11210  1253  3000               	movlw	0
 11211  1254  025B               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 11212  1255  1D03               	skipz
 11213  1256  2A57               	goto	u5023
 11214  1257                     u5023:	
 11215  1257  1803               	btfsc	3,0
 11216  1258  0008               	return
 11217  1259  2A26               	goto	l5385
 11218  125A                     __end_of_EEPROM_24C1025_Fill_All:	
 11219                           
 11220                           	psect	text49
 11221  1E27                     __ptext49:	
 11222 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 11223 ;; Defined at:
 11224 ;;		line 279 in file "EEPROM_24C1025.c"
 11225 ;; Parameters:    Size  Location     Type
 11226 ;;  chip_add        1    wreg     unsigned char 
 11227 ;;  mem_add         4   46[BANK0 ] unsigned long 
 11228 ;;  data            2   50[BANK0 ] int 
 11229 ;; Auto vars:     Size  Location     Type
 11230 ;;  chip_add        1   53[BANK0 ] unsigned char 
 11231 ;;  local           2   54[BANK0 ] unsigned char [2]
 11232 ;; Return value:  Size  Location     Type
 11233 ;;                  1    wreg      void 
 11234 ;; Registers used:
 11235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11236 ;; Tracked objects:
 11237 ;;		On entry : 0/300
 11238 ;;		On exit  : 300/0
 11239 ;;		Unchanged: 0/0
 11240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11241 ;;      Params:         0       6       0       0       0
 11242 ;;      Locals:         0       3       0       0       0
 11243 ;;      Temps:          0       1       0       0       0
 11244 ;;      Totals:         0      10       0       0       0
 11245 ;;Total ram usage:       10 bytes
 11246 ;; Hardware stack levels used:    1
 11247 ;; Hardware stack levels required when called:    4
 11248 ;; This function calls:
 11249 ;;		_EEPROM_24C1025_Write_Buffer
 11250 ;; This function is called by:
 11251 ;;		_EEPROM_24C1025_Fill_All
 11252 ;;		_Decodify_Command
 11253 ;;		_Save_Log
 11254 ;; This function uses a non-reentrant model
 11255 ;;
 11256                           
 11257                           
 11258                           ;psect for function _EEPROM_24C1025_Write_Int
 11259  1E27                     _EEPROM_24C1025_Write_Int:	
 11260                           
 11261                           ;incstack = 0
 11262                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11263                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 11264  1E27  1283               	bcf	3,5	;RP0=0, select bank0
 11265  1E28  1303               	bcf	3,6	;RP1=0, select bank0
 11266  1E29  00D5               	movwf	EEPROM_24C1025_Write_Int@chip_add
 11267                           
 11268                           ;EEPROM_24C1025.c: 280:      char local[2];;EEPROM_24C1025.c: 281:      local[0]=((char 
      +                          *)&data)[1];
 11269  1E2A  0853               	movf	EEPROM_24C1025_Write_Int@data+1,w
 11270  1E2B  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 11271  1E2C  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 11272  1E2D  00D6               	movwf	EEPROM_24C1025_Write_Int@local
 11273                           
 11274                           ;EEPROM_24C1025.c: 282:      local[1]=((char *)&data)[0];
 11275  1E2E  0852               	movf	EEPROM_24C1025_Write_Int@data,w
 11276  1E2F  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 11277  1E30  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 11278  1E31  00D7               	movwf	EEPROM_24C1025_Write_Int@local+1
 11279                           
 11280                           ;EEPROM_24C1025.c: 283:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 11281  1E32  0851               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 11282  1E33  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 11283  1E34  0850               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 11284  1E35  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 11285  1E36  084F               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 11286  1E37  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 11287  1E38  084E               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 11288  1E39  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 11289  1E3A  3002               	movlw	2
 11290  1E3B  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 11291  1E3C  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 11292  1E3D  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 11293  1E3E  3056               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 11294  1E3F  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 11295  1E40  3000               	movlw	0
 11296  1E41  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 11297  1E42  0855               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 11298  1E43  160A  118A  2696   	fcall	_EEPROM_24C1025_Write_Buffer
 11299  1E46  0008               	return
 11300  1E47                     __end_of_EEPROM_24C1025_Write_Int:	
 11301                           
 11302                           	psect	text50
 11303  1696                     __ptext50:	
 11304 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 11305 ;; Defined at:
 11306 ;;		line 15 in file "EEPROM_24C1025.c"
 11307 ;; Parameters:    Size  Location     Type
 11308 ;;  chip_add        1    wreg     unsigned char 
 11309 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11310 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11311 ;;  data            2   15[BANK0 ] PTR unsigned char 
 11312 ;;		 -> usart_protocol.value(52), usart_protocol(58), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 11313 ;; Auto vars:     Size  Location     Type
 11314 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11315 ;;  ctrl            1   22[BANK0 ] unsigned char 
 11316 ;;  range           1   21[BANK0 ] unsigned char 
 11317 ;;  count           1   19[BANK0 ] unsigned char 
 11318 ;; Return value:  Size  Location     Type
 11319 ;;                  1    wreg      void 
 11320 ;; Registers used:
 11321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11322 ;; Tracked objects:
 11323 ;;		On entry : 0/300
 11324 ;;		On exit  : 300/0
 11325 ;;		Unchanged: 0/0
 11326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11327 ;;      Params:         0       7       0       0       0
 11328 ;;      Locals:         0       4       0       0       0
 11329 ;;      Temps:          0       2       0       0       0
 11330 ;;      Totals:         0      13       0       0       0
 11331 ;;Total ram usage:       13 bytes
 11332 ;; Hardware stack levels used:    1
 11333 ;; Hardware stack levels required when called:    3
 11334 ;; This function calls:
 11335 ;;		_I2C_Master_Start
 11336 ;;		_I2C_Master_Stop
 11337 ;;		_I2C_Master_Write
 11338 ;;		_my_delay_ms_WDT
 11339 ;; This function is called by:
 11340 ;;		_EEPROM_24C1025_Write_Byte
 11341 ;;		_EEPROM_24C1025_Write_Int
 11342 ;;		_Decodify_Command
 11343 ;; This function uses a non-reentrant model
 11344 ;;
 11345                           
 11346                           
 11347                           ;psect for function _EEPROM_24C1025_Write_Buffer
 11348  1696                     _EEPROM_24C1025_Write_Buffer:	
 11349                           
 11350                           ;incstack = 0
 11351                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 11352                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 11353  1696  1283               	bcf	3,5	;RP0=0, select bank0
 11354  1697  1303               	bcf	3,6	;RP1=0, select bank0
 11355  1698  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 11356                           
 11357                           ;EEPROM_24C1025.c: 21:      unsigned char ctrl;;EEPROM_24C1025.c: 22:      unsigned char
      +                           count;;EEPROM_24C1025.c: 24:      Delay_Led_Memory=20;
 11358  1699  3014               	movlw	20
 11359  169A  1683               	bsf	3,5	;RP0=1, select bank1
 11360  169B  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11361  169C  3000               	movlw	0
 11362  169D  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11363                           
 11364                           ;EEPROM_24C1025.c: 26:      if(mem_add>0x1FFFF) return;
 11365  169E  1283               	bcf	3,5	;RP0=0, select bank0
 11366  169F  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11367  16A0  1D03               	btfss	3,2
 11368  16A1  0008               	return
 11369  16A2  3002               	movlw	2
 11370  16A3  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11371  16A4  1D03               	skipz
 11372  16A5  2EAE               	goto	u4943
 11373  16A6  3000               	movlw	0
 11374  16A7  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11375  16A8  1D03               	skipz
 11376  16A9  2EAE               	goto	u4943
 11377  16AA  3000               	movlw	0
 11378  16AB  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11379  16AC  1D03               	skipz
 11380  16AD  2EAE               	goto	u4943
 11381  16AE                     u4943:	
 11382  16AE  1803               	btfsc	3,0
 11383  16AF  0008               	return
 11384                           
 11385                           ;EEPROM_24C1025.c: 28:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11386  16B0  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11387  16B1  1D03               	btfss	3,2
 11388  16B2  2EC1               	goto	l5273
 11389  16B3  3001               	movlw	1
 11390  16B4  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11391  16B5  1D03               	skipz
 11392  16B6  2EBF               	goto	u4953
 11393  16B7  3000               	movlw	0
 11394  16B8  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11395  16B9  1D03               	skipz
 11396  16BA  2EBF               	goto	u4953
 11397  16BB  3000               	movlw	0
 11398  16BC  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11399  16BD  1D03               	skipz
 11400  16BE  2EBF               	goto	u4953
 11401  16BF                     u4953:	
 11402  16BF  1C03               	btfss	3,0
 11403  16C0  2EC6               	goto	l5275
 11404  16C1                     l5273:	
 11405  16C1  3008               	movlw	8
 11406  16C2  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11407  16C3  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11408  16C4  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 11409  16C5  2EC7               	goto	l5277
 11410  16C6                     l5275:	
 11411  16C6  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 11412  16C7                     l5277:	
 11413                           
 11414                           ;EEPROM_24C1025.c: 29:      ctrl=chip_add;
 11415  16C7  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 11416  16C8  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11417  16C9  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11418  16CA  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 11419                           
 11420                           ;EEPROM_24C1025.c: 30:      ctrl<<=1;
 11421  16CB  1003               	clrc
 11422  16CC  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11423                           
 11424                           ;EEPROM_24C1025.c: 31:      ctrl |= 0xA0;
 11425  16CD  30A0               	movlw	160
 11426  16CE  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11427  16CF  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11428  16D0  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11429                           
 11430                           ;EEPROM_24C1025.c: 32:      ctrl |= range;
 11431  16D1  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 11432  16D2  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11433  16D3  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11434  16D4  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11435                           
 11436                           ;EEPROM_24C1025.c: 34:      I2C_Master_Start();
 11437  16D5  160A  158A  2511  160A  118A  	fcall	_I2C_Master_Start
 11438                           
 11439                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(ctrl);
 11440  16DA  1283               	bcf	3,5	;RP0=0, select bank0
 11441  16DB  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 11442  16DC  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11443  16DD  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11444  16DE  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11445  16DF  00A3               	movwf	I2C_Master_Write@d
 11446  16E0  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11447  16E1  00A4               	movwf	I2C_Master_Write@d+1
 11448  16E2  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Write
 11449                           
 11450                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[1]);
 11451  16E7  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11452  16E8  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11453  16E9  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11454  16EA  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11455  16EB  00A3               	movwf	I2C_Master_Write@d
 11456  16EC  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11457  16ED  00A4               	movwf	I2C_Master_Write@d+1
 11458  16EE  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Write
 11459                           
 11460                           ;EEPROM_24C1025.c: 37:      I2C_Master_Write(((char *)&mem_add)[0]);
 11461  16F3  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11462  16F4  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11463  16F5  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11464  16F6  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11465  16F7  00A3               	movwf	I2C_Master_Write@d
 11466  16F8  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11467  16F9  00A4               	movwf	I2C_Master_Write@d+1
 11468  16FA  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Write
 11469                           
 11470                           ;EEPROM_24C1025.c: 38:      for(count=0;count<(sizedata-1);count++)
 11471  16FF  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 11472  1700                     l5339:	
 11473  1700  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 11474  1701  3EFF               	addlw	255
 11475  1702  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11476  1703  30FF               	movlw	255
 11477  1704  1803               	skipnc
 11478  1705  3000               	movlw	0
 11479  1706  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 11480  1707  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11481  1708  3A80               	xorlw	128
 11482  1709  3C80               	sublw	128
 11483  170A  1D03               	skipz
 11484  170B  2F0E               	goto	u4995
 11485  170C  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11486  170D  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 11487  170E                     u4995:	
 11488  170E  1803               	btfsc	3,0
 11489  170F  2FDB               	goto	l5341
 11490  1710  0064               	clrwdt	;# 
 11491                           
 11492                           ;EEPROM_24C1025.c: 41:           if(mem_add>0x1FFFF) return;
 11493  1711  1283               	bcf	3,5	;RP0=0, select bank0
 11494  1712  1303               	bcf	3,6	;RP1=0, select bank0
 11495  1713  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11496  1714  1D03               	btfss	3,2
 11497  1715  0008               	return
 11498  1716  3002               	movlw	2
 11499  1717  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11500  1718  1D03               	skipz
 11501  1719  2F22               	goto	u4963
 11502  171A  3000               	movlw	0
 11503  171B  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11504  171C  1D03               	skipz
 11505  171D  2F22               	goto	u4963
 11506  171E  3000               	movlw	0
 11507  171F  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11508  1720  1D03               	skipz
 11509  1721  2F22               	goto	u4963
 11510  1722                     u4963:	
 11511  1722  1803               	btfsc	3,0
 11512  1723  0008               	return
 11513                           
 11514                           ;EEPROM_24C1025.c: 42:           if((mem_add+1)%128==0)
 11515  1724  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11516  1725  3E01               	addlw	1
 11517  1726  397F               	andlw	127
 11518  1727  1D03               	btfss	3,2
 11519  1728  2FB1               	goto	l5331
 11520                           
 11521                           ;EEPROM_24C1025.c: 43:             {;EEPROM_24C1025.c: 44:             I2C_Master_Write(
      +                          *data);
 11522  1729  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 11523  172A  0084               	movwf	4
 11524  172B  1783               	bsf	3,7
 11525  172C  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 11526  172D  1383               	bcf	3,7
 11527  172E  0800               	movf	0,w
 11528  172F  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11529  1730  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11530  1731  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11531  1732  00A3               	movwf	I2C_Master_Write@d
 11532  1733  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11533  1734  00A4               	movwf	I2C_Master_Write@d+1
 11534  1735  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Write
 11535                           
 11536                           ;EEPROM_24C1025.c: 45:             I2C_Master_Stop();
 11537  173A  160A  158A  24C4  160A  118A  	fcall	_I2C_Master_Stop
 11538                           
 11539                           ;EEPROM_24C1025.c: 47:             my_delay_ms_WDT(5);
 11540  173F  3000               	movlw	0
 11541  1740  1283               	bcf	3,5	;RP0=0, select bank0
 11542  1741  00A3               	movwf	my_delay_ms_WDT@time+3
 11543  1742  3000               	movlw	0
 11544  1743  00A2               	movwf	my_delay_ms_WDT@time+2
 11545  1744  3000               	movlw	0
 11546  1745  00A1               	movwf	my_delay_ms_WDT@time+1
 11547  1746  3005               	movlw	5
 11548  1747  00A0               	movwf	my_delay_ms_WDT@time
 11549  1748  160A  118A  20F7  160A  118A  	fcall	_my_delay_ms_WDT
 11550                           
 11551                           ;EEPROM_24C1025.c: 48:             mem_add++;
 11552  174D  3001               	movlw	1
 11553  174E  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 11554  174F  3000               	movlw	0
 11555  1750  1803               	skipnc
 11556  1751  3001               	movlw	1
 11557  1752  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 11558  1753  3000               	movlw	0
 11559  1754  1803               	skipnc
 11560  1755  3001               	movlw	1
 11561  1756  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 11562  1757  3000               	movlw	0
 11563  1758  1803               	skipnc
 11564  1759  3001               	movlw	1
 11565  175A  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 11566                           
 11567                           ;EEPROM_24C1025.c: 49:             data++;
 11568  175B  3001               	movlw	1
 11569  175C  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 11570  175D  1803               	skipnc
 11571  175E  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 11572  175F  3000               	movlw	0
 11573  1760  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 11574                           
 11575                           ;EEPROM_24C1025.c: 50:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11576  1761  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11577  1762  1D03               	btfss	3,2
 11578  1763  2F72               	goto	l5311
 11579  1764  3001               	movlw	1
 11580  1765  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11581  1766  1D03               	skipz
 11582  1767  2F70               	goto	u4983
 11583  1768  3000               	movlw	0
 11584  1769  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11585  176A  1D03               	skipz
 11586  176B  2F70               	goto	u4983
 11587  176C  3000               	movlw	0
 11588  176D  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11589  176E  1D03               	skipz
 11590  176F  2F70               	goto	u4983
 11591  1770                     u4983:	
 11592  1770  1C03               	btfss	3,0
 11593  1771  2F77               	goto	l5313
 11594  1772                     l5311:	
 11595  1772  3008               	movlw	8
 11596  1773  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11597  1774  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11598  1775  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 11599  1776  2F78               	goto	l5315
 11600  1777                     l5313:	
 11601  1777  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 11602  1778                     l5315:	
 11603                           
 11604                           ;EEPROM_24C1025.c: 51:             ctrl=chip_add;
 11605  1778  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 11606  1779  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11607  177A  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11608  177B  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 11609                           
 11610                           ;EEPROM_24C1025.c: 52:             ctrl<<=1;
 11611  177C  1003               	clrc
 11612  177D  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11613                           
 11614                           ;EEPROM_24C1025.c: 53:             ctrl |= 0xA0;
 11615  177E  30A0               	movlw	160
 11616  177F  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11617  1780  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11618  1781  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11619                           
 11620                           ;EEPROM_24C1025.c: 54:             ctrl |= range;
 11621  1782  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 11622  1783  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11623  1784  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11624  1785  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11625                           
 11626                           ;EEPROM_24C1025.c: 56:             I2C_Master_Start();
 11627  1786  160A  158A  2511  160A  118A  	fcall	_I2C_Master_Start
 11628                           
 11629                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(ctrl);
 11630  178B  1283               	bcf	3,5	;RP0=0, select bank0
 11631  178C  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 11632  178D  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11633  178E  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11634  178F  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11635  1790  00A3               	movwf	I2C_Master_Write@d
 11636  1791  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11637  1792  00A4               	movwf	I2C_Master_Write@d+1
 11638  1793  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Write
 11639                           
 11640                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[1]);
 11641  1798  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11642  1799  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11643  179A  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11644  179B  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11645  179C  00A3               	movwf	I2C_Master_Write@d
 11646  179D  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11647  179E  00A4               	movwf	I2C_Master_Write@d+1
 11648  179F  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Write
 11649                           
 11650                           ;EEPROM_24C1025.c: 59:             I2C_Master_Write(((char *)&mem_add)[0]);
 11651  17A4  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11652  17A5  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11653  17A6  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11654  17A7  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11655  17A8  00A3               	movwf	I2C_Master_Write@d
 11656  17A9  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11657  17AA  00A4               	movwf	I2C_Master_Write@d+1
 11658  17AB  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Write
 11659                           
 11660                           ;EEPROM_24C1025.c: 60:             }
 11661  17B0  2FD6               	goto	l5337
 11662  17B1                     l5331:	
 11663                           
 11664                           ;EEPROM_24C1025.c: 62:             {;EEPROM_24C1025.c: 63:             I2C_Master_Write(
      +                          *data);
 11665  17B1  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 11666  17B2  0084               	movwf	4
 11667  17B3  1783               	bsf	3,7
 11668  17B4  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 11669  17B5  1383               	bcf	3,7
 11670  17B6  0800               	movf	0,w
 11671  17B7  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11672  17B8  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11673  17B9  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11674  17BA  00A3               	movwf	I2C_Master_Write@d
 11675  17BB  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11676  17BC  00A4               	movwf	I2C_Master_Write@d+1
 11677  17BD  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Write
 11678                           
 11679                           ;EEPROM_24C1025.c: 64:             data++;
 11680  17C2  3001               	movlw	1
 11681  17C3  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 11682  17C4  1803               	skipnc
 11683  17C5  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 11684  17C6  3000               	movlw	0
 11685  17C7  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 11686                           
 11687                           ;EEPROM_24C1025.c: 65:             mem_add++;
 11688  17C8  3001               	movlw	1
 11689  17C9  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 11690  17CA  3000               	movlw	0
 11691  17CB  1803               	skipnc
 11692  17CC  3001               	movlw	1
 11693  17CD  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 11694  17CE  3000               	movlw	0
 11695  17CF  1803               	skipnc
 11696  17D0  3001               	movlw	1
 11697  17D1  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 11698  17D2  3000               	movlw	0
 11699  17D3  1803               	skipnc
 11700  17D4  3001               	movlw	1
 11701  17D5  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 11702  17D6                     l5337:	
 11703                           
 11704                           ;EEPROM_24C1025.c: 67:      }
 11705  17D6  3001               	movlw	1
 11706  17D7  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11707  17D8  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11708  17D9  07B3               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 11709  17DA  2F00               	goto	l5339
 11710  17DB                     l5341:	
 11711                           
 11712                           ;EEPROM_24C1025.c: 68:      I2C_Master_Write(*data);
 11713  17DB  1283               	bcf	3,5	;RP0=0, select bank0
 11714  17DC  1303               	bcf	3,6	;RP1=0, select bank0
 11715  17DD  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 11716  17DE  0084               	movwf	4
 11717  17DF  1783               	bsf	3,7
 11718  17E0  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 11719  17E1  1383               	bcf	3,7
 11720  17E2  0800               	movf	0,w
 11721  17E3  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11722  17E4  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11723  17E5  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11724  17E6  00A3               	movwf	I2C_Master_Write@d
 11725  17E7  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11726  17E8  00A4               	movwf	I2C_Master_Write@d+1
 11727  17E9  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Write
 11728                           
 11729                           ;EEPROM_24C1025.c: 69:      I2C_Master_Stop();
 11730  17EE  160A  158A  24C4  160A  118A  	fcall	_I2C_Master_Stop
 11731                           
 11732                           ;EEPROM_24C1025.c: 71:      my_delay_ms_WDT(5);
 11733  17F3  3000               	movlw	0
 11734  17F4  1283               	bcf	3,5	;RP0=0, select bank0
 11735  17F5  00A3               	movwf	my_delay_ms_WDT@time+3
 11736  17F6  3000               	movlw	0
 11737  17F7  00A2               	movwf	my_delay_ms_WDT@time+2
 11738  17F8  3000               	movlw	0
 11739  17F9  00A1               	movwf	my_delay_ms_WDT@time+1
 11740  17FA  3005               	movlw	5
 11741  17FB  00A0               	movwf	my_delay_ms_WDT@time
 11742  17FC  160A  118A  20F7   	fcall	_my_delay_ms_WDT
 11743  17FF  0008               	return
 11744  1800                     __end_of_EEPROM_24C1025_Write_Buffer:	
 11745                           
 11746                           	psect	text51
 11747  10F7                     __ptext51:	
 11748 ;; *************** function _my_delay_ms_WDT *****************
 11749 ;; Defined at:
 11750 ;;		line 13 in file "my_delay.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;  time            4    0[BANK0 ] long 
 11753 ;; Auto vars:     Size  Location     Type
 11754 ;;  i               4    6[BANK0 ] long 
 11755 ;; Return value:  Size  Location     Type
 11756 ;;                  1    wreg      void 
 11757 ;; Registers used:
 11758 ;;		wreg, btemp+1
 11759 ;; Tracked objects:
 11760 ;;		On entry : 300/0
 11761 ;;		On exit  : 300/0
 11762 ;;		Unchanged: 0/0
 11763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11764 ;;      Params:         0       4       0       0       0
 11765 ;;      Locals:         0       4       0       0       0
 11766 ;;      Temps:          0       2       0       0       0
 11767 ;;      Totals:         0      10       0       0       0
 11768 ;;Total ram usage:       10 bytes
 11769 ;; Hardware stack levels used:    1
 11770 ;; Hardware stack levels required when called:    1
 11771 ;; This function calls:
 11772 ;;		Nothing
 11773 ;; This function is called by:
 11774 ;;		_EEPROM_24C1025_Write_Buffer
 11775 ;;		_EEPROM_24C1025_Read_Buffer
 11776 ;;		_EEPROM_24C1025_Write_Str
 11777 ;;		_main
 11778 ;; This function uses a non-reentrant model
 11779 ;;
 11780                           
 11781                           
 11782                           ;psect for function _my_delay_ms_WDT
 11783  10F7                     _my_delay_ms_WDT:	
 11784                           
 11785                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 11786                           
 11787                           ;incstack = 0
 11788                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 11789  10F7  3000               	movlw	0
 11790  10F8  00A9               	movwf	my_delay_ms_WDT@i+3
 11791  10F9  3000               	movlw	0
 11792  10FA  00A8               	movwf	my_delay_ms_WDT@i+2
 11793  10FB  3000               	movlw	0
 11794  10FC  00A7               	movwf	my_delay_ms_WDT@i+1
 11795  10FD  3000               	movlw	0
 11796  10FE  00A6               	movwf	my_delay_ms_WDT@i
 11797  10FF                     l3413:	
 11798  10FF  0829               	movf	my_delay_ms_WDT@i+3,w
 11799  1100  3A80               	xorlw	128
 11800  1101  00FF               	movwf	127
 11801  1102  0823               	movf	my_delay_ms_WDT@time+3,w
 11802  1103  3A80               	xorlw	128
 11803  1104  027F               	subwf	127,w
 11804  1105  1D03               	skipz
 11805  1106  2911               	goto	u2503
 11806  1107  0822               	movf	my_delay_ms_WDT@time+2,w
 11807  1108  0228               	subwf	my_delay_ms_WDT@i+2,w
 11808  1109  1D03               	skipz
 11809  110A  2911               	goto	u2503
 11810  110B  0821               	movf	my_delay_ms_WDT@time+1,w
 11811  110C  0227               	subwf	my_delay_ms_WDT@i+1,w
 11812  110D  1D03               	skipz
 11813  110E  2911               	goto	u2503
 11814  110F  0820               	movf	my_delay_ms_WDT@time,w
 11815  1110  0226               	subwf	my_delay_ms_WDT@i,w
 11816  1111                     u2503:	
 11817  1111  1803               	btfsc	3,0
 11818  1112  0008               	return
 11819  1113  0064               	clrwdt	;# 
 11820                           
 11821                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 11822  1114  3003               	movlw	3
 11823  1115  1283               	bcf	3,5	;RP0=0, select bank0
 11824  1116  1303               	bcf	3,6	;RP1=0, select bank0
 11825  1117  00A5               	movwf	??_my_delay_ms_WDT+1
 11826  1118  3097               	movlw	151
 11827  1119  00A4               	movwf	??_my_delay_ms_WDT
 11828  111A                     u5237:	
 11829  111A  0BA4               	decfsz	??_my_delay_ms_WDT,f
 11830  111B  291A               	goto	u5237
 11831  111C  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 11832  111D  291A               	goto	u5237
 11833                           
 11834                           ;my_delay.c: 19:             }
 11835  111E  3001               	movlw	1
 11836  111F  1283               	bcf	3,5	;RP0=0, select bank0
 11837  1120  1303               	bcf	3,6	;RP1=0, select bank0
 11838  1121  07A6               	addwf	my_delay_ms_WDT@i,f
 11839  1122  3000               	movlw	0
 11840  1123  1803               	skipnc
 11841  1124  3001               	movlw	1
 11842  1125  07A7               	addwf	my_delay_ms_WDT@i+1,f
 11843  1126  3000               	movlw	0
 11844  1127  1803               	skipnc
 11845  1128  3001               	movlw	1
 11846  1129  07A8               	addwf	my_delay_ms_WDT@i+2,f
 11847  112A  3000               	movlw	0
 11848  112B  1803               	skipnc
 11849  112C  3001               	movlw	1
 11850  112D  07A9               	addwf	my_delay_ms_WDT@i+3,f
 11851  112E  28FF               	goto	l3413
 11852  112F                     __end_of_my_delay_ms_WDT:	
 11853                           
 11854                           	psect	text52
 11855  1CEB                     __ptext52:	
 11856 ;; *************** function _I2C_Master_Write *****************
 11857 ;; Defined at:
 11858 ;;		line 79 in file "I2C.c"
 11859 ;; Parameters:    Size  Location     Type
 11860 ;;  d               2    3[BANK0 ] unsigned int 
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;		None
 11863 ;; Return value:  Size  Location     Type
 11864 ;;                  1    wreg      void 
 11865 ;; Registers used:
 11866 ;;		wreg, status,2, status,0, pclath, cstack
 11867 ;; Tracked objects:
 11868 ;;		On entry : 300/0
 11869 ;;		On exit  : 300/0
 11870 ;;		Unchanged: 0/0
 11871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11872 ;;      Params:         0       2       0       0       0
 11873 ;;      Locals:         0       0       0       0       0
 11874 ;;      Temps:          0       0       0       0       0
 11875 ;;      Totals:         0       2       0       0       0
 11876 ;;Total ram usage:        2 bytes
 11877 ;; Hardware stack levels used:    1
 11878 ;; Hardware stack levels required when called:    2
 11879 ;; This function calls:
 11880 ;;		_I2C_Master_Wait
 11881 ;; This function is called by:
 11882 ;;		_EEPROM_24C1025_Write_Buffer
 11883 ;;		_EEPROM_24C1025_Read_Buffer
 11884 ;;		_EEPROM_24C1025_Write_Str
 11885 ;;		_EEPROM_24C1025_Read_Str
 11886 ;; This function uses a non-reentrant model
 11887 ;;
 11888                           
 11889                           
 11890                           ;psect for function _I2C_Master_Write
 11891  1CEB                     _I2C_Master_Write:	
 11892                           
 11893                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 11894                           
 11895                           ;incstack = 0
 11896                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11897  1CEB  160A  158A  2667  160A  158A  	fcall	_I2C_Master_Wait
 11898  1CF0  3A00               	xorlw	0
 11899  1CF1  1903               	skipnz
 11900  1CF2  0008               	return
 11901                           
 11902                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 11903  1CF3  0823               	movf	I2C_Master_Write@d,w
 11904  1CF4  0093               	movwf	19	;volatile
 11905  1CF5  0008               	return
 11906  1CF6                     __end_of_I2C_Master_Write:	
 11907                           
 11908                           	psect	text53
 11909  1CC4                     __ptext53:	
 11910 ;; *************** function _I2C_Master_Stop *****************
 11911 ;; Defined at:
 11912 ;;		line 70 in file "I2C.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;		None
 11915 ;; Auto vars:     Size  Location     Type
 11916 ;;		None
 11917 ;; Return value:  Size  Location     Type
 11918 ;;                  1    wreg      void 
 11919 ;; Registers used:
 11920 ;;		wreg, status,2, status,0, pclath, cstack
 11921 ;; Tracked objects:
 11922 ;;		On entry : 300/800
 11923 ;;		On exit  : 200/0
 11924 ;;		Unchanged: 0/0
 11925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11926 ;;      Params:         0       0       0       0       0
 11927 ;;      Locals:         0       0       0       0       0
 11928 ;;      Temps:          0       0       0       0       0
 11929 ;;      Totals:         0       0       0       0       0
 11930 ;;Total ram usage:        0 bytes
 11931 ;; Hardware stack levels used:    1
 11932 ;; Hardware stack levels required when called:    2
 11933 ;; This function calls:
 11934 ;;		_I2C_Master_Wait
 11935 ;; This function is called by:
 11936 ;;		_EEPROM_24C1025_Write_Buffer
 11937 ;;		_EEPROM_24C1025_Read_Buffer
 11938 ;;		_EEPROM_24C1025_Write_Str
 11939 ;;		_EEPROM_24C1025_Read_Str
 11940 ;; This function uses a non-reentrant model
 11941 ;;
 11942                           
 11943                           
 11944                           ;psect for function _I2C_Master_Stop
 11945  1CC4                     _I2C_Master_Stop:	
 11946                           
 11947                           ;I2C.c: 72:   if(I2C_Master_Wait())
 11948                           
 11949                           ;incstack = 0
 11950                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11951  1CC4  160A  158A  2667   	fcall	_I2C_Master_Wait
 11952  1CC7  3A00               	xorlw	0
 11953                           
 11954                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 11955  1CC8  1683               	bsf	3,5	;RP0=1, select bank1
 11956  1CC9  1D03               	btfss	3,2
 11957  1CCA  1511               	bsf	17,2	;volatile
 11958                           
 11959                           ;I2C.c: 76:   INTCONbits.GIE=1;
 11960                           
 11961                           ;I2C.c: 75:     }
 11962  1CCB  178B               	bsf	11,7	;volatile
 11963  1CCC  0008               	return
 11964  1CCD                     __end_of_I2C_Master_Stop:	
 11965                           
 11966                           	psect	text54
 11967  1D11                     __ptext54:	
 11968 ;; *************** function _I2C_Master_Start *****************
 11969 ;; Defined at:
 11970 ;;		line 52 in file "I2C.c"
 11971 ;; Parameters:    Size  Location     Type
 11972 ;;		None
 11973 ;; Auto vars:     Size  Location     Type
 11974 ;;		None
 11975 ;; Return value:  Size  Location     Type
 11976 ;;                  1    wreg      void 
 11977 ;; Registers used:
 11978 ;;		wreg, status,2, status,0, pclath, cstack
 11979 ;; Tracked objects:
 11980 ;;		On entry : 300/0
 11981 ;;		On exit  : 200/0
 11982 ;;		Unchanged: 0/0
 11983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11984 ;;      Params:         0       0       0       0       0
 11985 ;;      Locals:         0       0       0       0       0
 11986 ;;      Temps:          0       0       0       0       0
 11987 ;;      Totals:         0       0       0       0       0
 11988 ;;Total ram usage:        0 bytes
 11989 ;; Hardware stack levels used:    1
 11990 ;; Hardware stack levels required when called:    2
 11991 ;; This function calls:
 11992 ;;		_I2C_Master_Wait
 11993 ;; This function is called by:
 11994 ;;		_EEPROM_24C1025_Write_Buffer
 11995 ;;		_EEPROM_24C1025_Read_Buffer
 11996 ;;		_EEPROM_24C1025_Write_Str
 11997 ;;		_EEPROM_24C1025_Read_Str
 11998 ;; This function uses a non-reentrant model
 11999 ;;
 12000                           
 12001                           
 12002                           ;psect for function _I2C_Master_Start
 12003  1D11                     _I2C_Master_Start:	
 12004                           
 12005                           ;I2C.c: 54:   INTCONbits.GIE=0;
 12006                           
 12007                           ;incstack = 0
 12008                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 12009  1D11  138B               	bcf	11,7	;volatile
 12010                           
 12011                           ;I2C.c: 55:   Delay_Led_Memory=20;
 12012  1D12  3014               	movlw	20
 12013  1D13  1683               	bsf	3,5	;RP0=1, select bank1
 12014  1D14  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12015  1D15  3000               	movlw	0
 12016  1D16  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12017                           
 12018                           ;I2C.c: 56:   if(I2C_Master_Wait())
 12019  1D17  160A  158A  2667  160A  158A  	fcall	_I2C_Master_Wait
 12020  1D1C  3A00               	xorlw	0
 12021  1D1D  1903               	skipnz
 12022  1D1E  0008               	return
 12023                           
 12024                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 12025  1D1F  1683               	bsf	3,5	;RP0=1, select bank1
 12026  1D20  1411               	bsf	17,0	;volatile
 12027  1D21  0008               	return
 12028  1D22                     __end_of_I2C_Master_Start:	
 12029                           
 12030                           	psect	text55
 12031  1E67                     __ptext55:	
 12032 ;; *************** function _I2C_Master_Wait *****************
 12033 ;; Defined at:
 12034 ;;		line 37 in file "I2C.c"
 12035 ;; Parameters:    Size  Location     Type
 12036 ;;		None
 12037 ;; Auto vars:     Size  Location     Type
 12038 ;;  tempo           1    2[BANK0 ] unsigned char 
 12039 ;; Return value:  Size  Location     Type
 12040 ;;                  1    wreg      unsigned char 
 12041 ;; Registers used:
 12042 ;;		wreg, status,2, status,0
 12043 ;; Tracked objects:
 12044 ;;		On entry : 200/0
 12045 ;;		On exit  : 300/0
 12046 ;;		Unchanged: 0/0
 12047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12048 ;;      Params:         0       0       0       0       0
 12049 ;;      Locals:         0       1       0       0       0
 12050 ;;      Temps:          0       2       0       0       0
 12051 ;;      Totals:         0       3       0       0       0
 12052 ;;Total ram usage:        3 bytes
 12053 ;; Hardware stack levels used:    1
 12054 ;; Hardware stack levels required when called:    1
 12055 ;; This function calls:
 12056 ;;		Nothing
 12057 ;; This function is called by:
 12058 ;;		_I2C_Master_Start
 12059 ;;		_I2C_Master_RepeatedStart
 12060 ;;		_I2C_Master_Stop
 12061 ;;		_I2C_Master_Write
 12062 ;;		_I2C_Master_Read
 12063 ;; This function uses a non-reentrant model
 12064 ;;
 12065                           
 12066                           
 12067                           ;psect for function _I2C_Master_Wait
 12068  1E67                     _I2C_Master_Wait:	
 12069                           
 12070                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 12071                           
 12072                           ;incstack = 0
 12073                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 12074  1E67  30C8               	movlw	200
 12075  1E68  1283               	bcf	3,5	;RP0=0, select bank0
 12076  1E69  00A0               	movwf	??_I2C_Master_Wait
 12077  1E6A  0820               	movf	??_I2C_Master_Wait,w
 12078  1E6B  00A2               	movwf	I2C_Master_Wait@tempo
 12079                           
 12080                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 12081  1E6C  2E79               	goto	l3385
 12082  1E6D                     l3381:	
 12083                           
 12084                           ;I2C.c: 44:          tempo--;
 12085  1E6D  3001               	movlw	1
 12086  1E6E  02A2               	subwf	I2C_Master_Wait@tempo,f
 12087                           
 12088                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 12089  1E6F  3003               	movlw	3
 12090  1E70  1283               	bcf	3,5	;RP0=0, select bank0
 12091  1E71  1303               	bcf	3,6	;RP1=0, select bank0
 12092  1E72  00A1               	movwf	??_I2C_Master_Wait+1
 12093  1E73  3097               	movlw	151
 12094  1E74  00A0               	movwf	??_I2C_Master_Wait
 12095  1E75                     u5247:	
 12096  1E75  0BA0               	decfsz	??_I2C_Master_Wait,f
 12097  1E76  2E75               	goto	u5247
 12098  1E77  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 12099  1E78  2E75               	goto	u5247
 12100  1E79                     l3385:	
 12101                           
 12102                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 12103  1E79  1683               	bsf	3,5	;RP0=1, select bank1
 12104  1E7A  1303               	bcf	3,6	;RP1=0, select bank1
 12105  1E7B  1914               	btfsc	20,2	;volatile
 12106  1E7C  2E81               	goto	l3379
 12107  1E7D  0811               	movf	17,w	;volatile
 12108  1E7E  391F               	andlw	31
 12109  1E7F  1903               	btfsc	3,2
 12110  1E80  2E85               	goto	l3389
 12111  1E81                     l3379:	
 12112                           
 12113                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 12114  1E81  1283               	bcf	3,5	;RP0=0, select bank0
 12115  1E82  0822               	movf	I2C_Master_Wait@tempo,w
 12116  1E83  1D03               	btfss	3,2
 12117  1E84  2E6D               	goto	l3381
 12118  1E85                     l3389:	
 12119                           
 12120                           ;I2C.c: 49:   return tempo ;
 12121  1E85  1283               	bcf	3,5	;RP0=0, select bank0
 12122  1E86  0822               	movf	I2C_Master_Wait@tempo,w
 12123  1E87  0008               	return
 12124  1E88                     __end_of_I2C_Master_Wait:	
 12125                           
 12126                           	psect	text56
 12127  1CE0                     __ptext56:	
 12128 ;; *************** function _ADC_init *****************
 12129 ;; Defined at:
 12130 ;;		line 10 in file "adc.c"
 12131 ;; Parameters:    Size  Location     Type
 12132 ;;		None
 12133 ;; Auto vars:     Size  Location     Type
 12134 ;;		None
 12135 ;; Return value:  Size  Location     Type
 12136 ;;                  1    wreg      void 
 12137 ;; Registers used:
 12138 ;;		wreg, status,2, status,0
 12139 ;; Tracked objects:
 12140 ;;		On entry : 0/100
 12141 ;;		On exit  : 300/0
 12142 ;;		Unchanged: 0/0
 12143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12144 ;;      Params:         0       0       0       0       0
 12145 ;;      Locals:         0       0       0       0       0
 12146 ;;      Temps:          0       0       0       0       0
 12147 ;;      Totals:         0       0       0       0       0
 12148 ;;Total ram usage:        0 bytes
 12149 ;; Hardware stack levels used:    1
 12150 ;; Hardware stack levels required when called:    1
 12151 ;; This function calls:
 12152 ;;		Nothing
 12153 ;; This function is called by:
 12154 ;;		_main
 12155 ;; This function uses a non-reentrant model
 12156 ;;
 12157                           
 12158                           
 12159                           ;psect for function _ADC_init
 12160  1CE0                     _ADC_init:	
 12161                           
 12162                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 12163                           
 12164                           ;incstack = 0
 12165                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 12166  1CE0  30C0               	movlw	192
 12167  1CE1  1283               	bcf	3,5	;RP0=0, select bank0
 12168  1CE2  1303               	bcf	3,6	;RP1=0, select bank0
 12169  1CE3  049F               	iorwf	31,f	;volatile
 12170                           
 12171                           ;adc.c: 12:      ADCON1=0b10000000;
 12172  1CE4  3080               	movlw	128
 12173  1CE5  1683               	bsf	3,5	;RP0=1, select bank1
 12174  1CE6  009F               	movwf	31	;volatile
 12175                           
 12176                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 12177  1CE7  179F               	bsf	31,7	;volatile
 12178                           
 12179                           ;adc.c: 14:      ADCON0bits.ADON=1;
 12180  1CE8  1283               	bcf	3,5	;RP0=0, select bank0
 12181  1CE9  141F               	bsf	31,0	;volatile
 12182  1CEA  0008               	return
 12183  1CEB                     __end_of_ADC_init:	
 12184                           
 12185                           	psect	text57
 12186  14BB                     __ptext57:	
 12187 ;; *************** function _isr *****************
 12188 ;; Defined at:
 12189 ;;		line 29 in file "isr.c"
 12190 ;; Parameters:    Size  Location     Type
 12191 ;;		None
 12192 ;; Auto vars:     Size  Location     Type
 12193 ;;  tempo           2    6[COMMON] unsigned int 
 12194 ;; Return value:  Size  Location     Type
 12195 ;;                  1    wreg      void 
 12196 ;; Registers used:
 12197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 12198 ;; Tracked objects:
 12199 ;;		On entry : 0/0
 12200 ;;		On exit  : 300/0
 12201 ;;		Unchanged: 0/0
 12202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12203 ;;      Params:         0       0       0       0       0
 12204 ;;      Locals:         2       0       0       0       0
 12205 ;;      Temps:          6       0       0       0       0
 12206 ;;      Totals:         8       0       0       0       0
 12207 ;;Total ram usage:        8 bytes
 12208 ;; Hardware stack levels used:    1
 12209 ;; This function calls:
 12210 ;;		Nothing
 12211 ;; This function is called by:
 12212 ;;		Interrupt level 1
 12213 ;; This function uses a non-reentrant model
 12214 ;;
 12215                           
 12216                           
 12217                           ;psect for function _isr
 12218  14BB                     _isr:	
 12219                           
 12220                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 12221  14BB  188B               	btfsc	11,1	;volatile
 12222                           
 12223                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 12224  14BC  108B               	bcf	11,1	;volatile
 12225                           
 12226                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 12227                           
 12228                           ;isr.c: 37:       }
 12229  14BD  1C0C               	btfss	12,0	;volatile
 12230  14BE  2D35               	goto	i1l5197
 12231                           
 12232                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 12233  14BF  30B1               	movlw	177
 12234  14C0  008F               	movwf	15	;volatile
 12235                           
 12236                           ;isr.c: 42:                 TMR1L=0xF3;
 12237  14C1  30F3               	movlw	243
 12238  14C2  008E               	movwf	14	;volatile
 12239                           
 12240                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 12241  14C3  100C               	bcf	12,0	;volatile
 12242                           
 12243                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 12244  14C4  1FEC               	btfss	_generic_status,7
 12245  14C5  2CC8               	goto	i1l5153
 12246                           
 12247                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 12248  14C6  13EC               	bcf	_generic_status,7
 12249  14C7  0064               	clrwdt	;# 
 12250  14C8                     i1l5153:	
 12251                           
 12252                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 12253  14C8  300A               	movlw	10
 12254  14C9  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 12255  14CA  1803               	skipnc
 12256  14CB  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 12257  14CC  3000               	movlw	0
 12258  14CD  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 12259                           
 12260                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 12261  14CE  3003               	movlw	3
 12262  14CF  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 12263  14D0  30E8               	movlw	232
 12264  14D1  1903               	skipnz
 12265  14D2  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 12266  14D3  1C03               	skipc
 12267  14D4  2CD7               	goto	i1l5157
 12268                           
 12269                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 12270  14D5  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 12271  14D6  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 12272  14D7                     i1l5157:	
 12273                           
 12274                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 12275  14D7  3001               	movlw	1
 12276  14D8  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 12277  14D9  30F4               	movlw	244
 12278  14DA  1903               	skipnz
 12279  14DB  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 12280  14DC  1803               	skipnc
 12281  14DD  2CE2               	goto	i1l618
 12282                           
 12283                           ;isr.c: 55:                    PORTBbits.RB7=1;
 12284  14DE  1283               	bcf	3,5	;RP0=0, select bank0
 12285  14DF  1303               	bcf	3,6	;RP1=0, select bank0
 12286  14E0  1786               	bsf	6,7	;volatile
 12287  14E1  2CE5               	goto	i1l5161
 12288  14E2                     i1l618:	
 12289                           ;isr.c: 56:                 else
 12290                           
 12291                           
 12292                           ;isr.c: 57:                    PORTBbits.RB7=0;
 12293  14E2  1283               	bcf	3,5	;RP0=0, select bank0
 12294  14E3  1303               	bcf	3,6	;RP1=0, select bank0
 12295  14E4  1386               	bcf	6,7	;volatile
 12296  14E5                     i1l5161:	
 12297                           
 12298                           ;isr.c: 60:                 if(Delay_Led_Usart){
 12299  14E5  1683               	bsf	3,5	;RP0=1, select bank1
 12300  14E6  0832               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 12301  14E7  0433               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 12302  14E8  1903               	btfsc	3,2
 12303  14E9  2CF3               	goto	i1l620
 12304                           
 12305                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 12306  14EA  300A               	movlw	10
 12307  14EB  02B2               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 12308  14EC  3000               	movlw	0
 12309  14ED  1C03               	skipc
 12310  14EE  03B3               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 12311  14EF  02B3               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 12312                           
 12313                           ;isr.c: 62:                    PORTBbits.RB6=1;
 12314  14F0  1283               	bcf	3,5	;RP0=0, select bank0
 12315  14F1  1706               	bsf	6,6	;volatile
 12316                           
 12317                           ;isr.c: 63:                    }
 12318  14F2  2CF5               	goto	i1l5167
 12319  14F3                     i1l620:	
 12320                           ;isr.c: 64:                 else{
 12321                           
 12322                           
 12323                           ;isr.c: 65:                    PORTBbits.RB6=0;
 12324  14F3  1283               	bcf	3,5	;RP0=0, select bank0
 12325  14F4  1306               	bcf	6,6	;volatile
 12326  14F5                     i1l5167:	
 12327                           
 12328                           ;isr.c: 68:                 if(Delay_Led_Memory){
 12329  14F5  1683               	bsf	3,5	;RP0=1, select bank1
 12330  14F6  0834               	movf	_Delay_Led_Memory^(0+128),w	;volatile
 12331  14F7  0435               	iorwf	(_Delay_Led_Memory+1)^(0+128),w	;volatile
 12332  14F8  1903               	btfsc	3,2
 12333  14F9  2D03               	goto	i1l622
 12334                           
 12335                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 12336  14FA  300A               	movlw	10
 12337  14FB  02B4               	subwf	_Delay_Led_Memory^(0+128),f	;volatile
 12338  14FC  3000               	movlw	0
 12339  14FD  1C03               	skipc
 12340  14FE  03B5               	decf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 12341  14FF  02B5               	subwf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 12342                           
 12343                           ;isr.c: 70:                    PORTBbits.RB5=1;
 12344  1500  1283               	bcf	3,5	;RP0=0, select bank0
 12345  1501  1686               	bsf	6,5	;volatile
 12346                           
 12347                           ;isr.c: 71:                    }
 12348  1502  2D05               	goto	i1l5173
 12349  1503                     i1l622:	
 12350                           ;isr.c: 72:                 else{
 12351                           
 12352                           
 12353                           ;isr.c: 73:                    PORTBbits.RB5=0;
 12354  1503  1283               	bcf	3,5	;RP0=0, select bank0
 12355  1504  1286               	bcf	6,5	;volatile
 12356  1505                     i1l5173:	
 12357                           
 12358                           ;isr.c: 77:                 tempodecorrido+=10;
 12359  1505  300A               	movlw	10
 12360  1506  1683               	bsf	3,5	;RP0=1, select bank1
 12361  1507  07AA               	addwf	_tempodecorrido^(0+128),f	;volatile
 12362  1508  1803               	skipnc
 12363  1509  0AAB               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 12364  150A  3000               	movlw	0
 12365  150B  07AB               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 12366                           
 12367                           ;isr.c: 78:                 milisegundo+=10;
 12368  150C  300A               	movlw	10
 12369  150D  07B0               	addwf	_milisegundo^(0+128),f	;volatile
 12370  150E  1803               	skipnc
 12371  150F  0AB1               	incf	(_milisegundo+1)^(0+128),f	;volatile
 12372  1510  3000               	movlw	0
 12373  1511  07B1               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 12374                           
 12375                           ;isr.c: 79:                 if(milisegundo==1000){
 12376  1512  30E8               	movlw	232
 12377  1513  0630               	xorwf	_milisegundo^(0+128),w	;volatile
 12378  1514  3003               	movlw	3
 12379  1515  1903               	skipnz
 12380  1516  0631               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 12381  1517  1D03               	btfss	3,2
 12382  1518  2D35               	goto	i1l5197
 12383                           
 12384                           ;isr.c: 80:                    milisegundo=0;
 12385  1519  01B0               	clrf	_milisegundo^(0+128)	;volatile
 12386  151A  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
 12387                           
 12388                           ;isr.c: 81:                    segundo++;
 12389  151B  3001               	movlw	1
 12390  151C  00F0               	movwf	??_isr
 12391  151D  0870               	movf	??_isr,w
 12392  151E  07FD               	addwf	_segundo,f	;volatile
 12393                           
 12394                           ;isr.c: 88:                    if(segundo==60){
 12395  151F  303C               	movlw	60
 12396  1520  067D               	xorwf	_segundo,w	;volatile
 12397  1521  1D03               	btfss	3,2
 12398  1522  2D35               	goto	i1l5197
 12399                           
 12400                           ;isr.c: 89:                       segundo=0;
 12401  1523  01FD               	clrf	_segundo	;volatile
 12402                           
 12403                           ;isr.c: 90:                       minuto++;
 12404  1524  3001               	movlw	1
 12405  1525  00F0               	movwf	??_isr
 12406  1526  0870               	movf	??_isr,w
 12407  1527  07FA               	addwf	_minuto,f	;volatile
 12408                           
 12409                           ;isr.c: 91:                       if(minuto==60){
 12410  1528  303C               	movlw	60
 12411  1529  067A               	xorwf	_minuto,w	;volatile
 12412  152A  1D03               	btfss	3,2
 12413  152B  2D35               	goto	i1l5197
 12414                           
 12415                           ;isr.c: 92:                          minuto=0;
 12416  152C  01FA               	clrf	_minuto	;volatile
 12417                           
 12418                           ;isr.c: 93:                          hora++;
 12419  152D  3001               	movlw	1
 12420  152E  00F0               	movwf	??_isr
 12421  152F  0870               	movf	??_isr,w
 12422  1530  07FC               	addwf	_hora,f	;volatile
 12423                           
 12424                           ;isr.c: 94:                          if(hora==24){
 12425  1531  3018               	movlw	24
 12426  1532  067C               	xorwf	_hora,w	;volatile
 12427  1533  1903               	btfsc	3,2
 12428                           
 12429                           ;isr.c: 95:                             hora=0;
 12430  1534  01FC               	clrf	_hora	;volatile
 12431  1535                     i1l5197:	
 12432                           ;isr.c: 99:                 }
 12433                           
 12434                           
 12435                           ;isr.c: 104:     if(PIR1bits.RCIF)
 12436  1535  1283               	bcf	3,5	;RP0=0, select bank0
 12437  1536  1E8C               	btfss	12,5	;volatile
 12438  1537  2D9B               	goto	i1l636
 12439                           
 12440                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 12441  1538  146C               	bsf	_generic_status,0
 12442                           
 12443                           ;isr.c: 109:         tempo=30;
 12444  1539  301E               	movlw	30
 12445  153A  00F6               	movwf	isr@tempo
 12446  153B  3000               	movlw	0
 12447  153C  00F7               	movwf	isr@tempo+1
 12448                           
 12449                           ;isr.c: 110:         count=0;
 12450  153D  1683               	bsf	3,5	;RP0=1, select bank1
 12451  153E  01AC               	clrf	_count^(0+128)	;volatile
 12452  153F  01AD               	clrf	(_count+1)^(0+128)	;volatile
 12453                           
 12454                           ;isr.c: 111:         pointer=usart_buffer;
 12455  1540  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 12456  1541  00F0               	movwf	??_isr
 12457  1542  0870               	movf	??_isr,w
 12458  1543  00B6               	movwf	_pointer^(0+128)
 12459  1544                     i1l5219:	
 12460                           ;isr.c: 112:         while(tempo)
 12461                           
 12462                           
 12463                           ;isr.c: 112:         while(tempo)
 12464  1544  0876               	movf	isr@tempo,w
 12465  1545  0477               	iorwf	isr@tempo+1,w
 12466  1546  1903               	btfsc	3,2
 12467  1547  2D77               	goto	i1l5221
 12468                           
 12469                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 12470  1548  1283               	bcf	3,5	;RP0=0, select bank0
 12471  1549  1303               	bcf	3,6	;RP1=0, select bank0
 12472  154A  1E8C               	btfss	12,5	;volatile
 12473  154B  2D70               	goto	i1l5217
 12474                           
 12475                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 12476  154C  081A               	movf	26,w	;volatile
 12477  154D  00F0               	movwf	??_isr
 12478  154E  1683               	bsf	3,5	;RP0=1, select bank1
 12479  154F  0836               	movf	_pointer^(0+128),w
 12480  1550  0084               	movwf	4
 12481  1551  0870               	movf	??_isr,w
 12482  1552  1783               	bsf	3,7	;select IRP bank2
 12483  1553  0080               	movwf	0
 12484                           
 12485                           ;isr.c: 118:                 if(count<32+20 -1)
 12486  1554  082D               	movf	(_count+1)^(0+128),w	;volatile
 12487  1555  3A80               	xorlw	128
 12488  1556  00FF               	movwf	127
 12489  1557  3080               	movlw	128
 12490  1558  027F               	subwf	127,w
 12491  1559  1D03               	skipz
 12492  155A  2D5D               	goto	u491_25
 12493  155B  3033               	movlw	51
 12494  155C  022C               	subwf	_count^(0+128),w	;volatile
 12495  155D                     u491_25:	
 12496  155D  1803               	skipnc
 12497  155E  2D6B               	goto	i1l5215
 12498                           
 12499                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 12500  155F  3001               	movlw	1
 12501  1560  1683               	bsf	3,5	;RP0=1, select bank1
 12502  1561  1303               	bcf	3,6	;RP1=0, select bank1
 12503  1562  07AC               	addwf	_count^(0+128),f	;volatile
 12504  1563  1803               	skipnc
 12505  1564  0AAD               	incf	(_count+1)^(0+128),f	;volatile
 12506  1565  3000               	movlw	0
 12507  1566  07AD               	addwf	(_count+1)^(0+128),f	;volatile
 12508                           
 12509                           ;isr.c: 121:                    pointer++;
 12510  1567  3001               	movlw	1
 12511  1568  00F0               	movwf	??_isr
 12512  1569  0870               	movf	??_isr,w
 12513  156A  07B6               	addwf	_pointer^(0+128),f
 12514  156B                     i1l5215:	
 12515                           
 12516                           ;isr.c: 123:                 tempo=30;
 12517  156B  301E               	movlw	30
 12518  156C  00F6               	movwf	isr@tempo
 12519  156D  3000               	movlw	0
 12520  156E  00F7               	movwf	isr@tempo+1
 12521                           
 12522                           ;isr.c: 124:             }
 12523  156F  2D44               	goto	i1l5219
 12524  1570                     i1l5217:	
 12525                           
 12526                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 12527  1570  3001               	movlw	1
 12528  1571  02F6               	subwf	isr@tempo,f
 12529  1572  3000               	movlw	0
 12530  1573  1C03               	skipc
 12531  1574  03F7               	decf	isr@tempo+1,f
 12532  1575  02F7               	subwf	isr@tempo+1,f
 12533  1576  2D44               	goto	i1l5219
 12534  1577                     i1l5221:	
 12535                           
 12536                           ;isr.c: 131:         (*pointer)=0;
 12537  1577  1683               	bsf	3,5	;RP0=1, select bank1
 12538  1578  1303               	bcf	3,6	;RP1=0, select bank1
 12539  1579  0836               	movf	_pointer^(0+128),w
 12540  157A  0084               	movwf	4
 12541  157B  1783               	bsf	3,7	;select IRP bank2
 12542  157C  0180               	clrf	0
 12543                           
 12544                           ;isr.c: 133:         if(RCSTAbits.OERR){
 12545  157D  1283               	bcf	3,5	;RP0=0, select bank0
 12546  157E  1C98               	btfss	24,1	;volatile
 12547  157F  2D9B               	goto	i1l636
 12548                           
 12549                           ;isr.c: 134:            CREN=0;
 12550  1580  1218               	bcf	24,4	;volatile
 12551                           
 12552                           ;isr.c: 135:            CREN=1;
 12553  1581  1618               	bsf	24,4	;volatile
 12554                           
 12555                           ;isr.c: 136:            tempo=RCREG;
 12556  1582  081A               	movf	26,w	;volatile
 12557  1583  00F0               	movwf	??_isr
 12558  1584  01F1               	clrf	??_isr+1
 12559  1585  0870               	movf	??_isr,w
 12560  1586  00F6               	movwf	isr@tempo
 12561  1587  0871               	movf	??_isr+1,w
 12562  1588  00F7               	movwf	isr@tempo+1
 12563                           
 12564                           ;isr.c: 137:            tempo=RCREG;
 12565  1589  081A               	movf	26,w	;volatile
 12566  158A  00F0               	movwf	??_isr
 12567  158B  01F1               	clrf	??_isr+1
 12568  158C  0870               	movf	??_isr,w
 12569  158D  00F6               	movwf	isr@tempo
 12570  158E  0871               	movf	??_isr+1,w
 12571  158F  00F7               	movwf	isr@tempo+1
 12572                           
 12573                           ;isr.c: 138:            tempo=RCREG;
 12574  1590  081A               	movf	26,w	;volatile
 12575  1591  00F0               	movwf	??_isr
 12576  1592  01F1               	clrf	??_isr+1
 12577  1593  0870               	movf	??_isr,w
 12578  1594  00F6               	movwf	isr@tempo
 12579  1595  0871               	movf	??_isr+1,w
 12580  1596  00F7               	movwf	isr@tempo+1
 12581                           
 12582                           ;isr.c: 139:            usart_buffer[0]=0;
 12583  1597  1703               	bsf	3,6	;RP1=1, select bank2
 12584  1598  0190               	clrf	_usart_buffer^(0+256)	;volatile
 12585                           
 12586                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 12587  1599  1303               	bcf	3,6	;RP1=0, select bank0
 12588  159A  14EC               	bsf	_generic_status,1
 12589  159B                     i1l636:	
 12590  159B  0875               	movf	??_isr+5,w
 12591  159C  00FF               	movwf	127
 12592  159D  0874               	movf	??_isr+4,w
 12593  159E  008A               	movwf	10
 12594  159F  0873               	movf	??_isr+3,w
 12595  15A0  0084               	movwf	4
 12596  15A1  0E72               	swapf	(??_isr+2)^(0+4294967168),w
 12597  15A2  0083               	movwf	3
 12598  15A3  0EFE               	swapf	126,f
 12599  15A4  0E7E               	swapf	126,w
 12600  15A5  0009               	retfie
 12601  15A6                     __end_of_isr:	
 12602  007E                     btemp	set	126	;btemp
 12603  007E                     wtemp0	set	126
 12604                           
 12605                           	psect	intentry
 12606  0004                     __pintentry:	
 12607                           ;incstack = 0
 12608                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 12609                           
 12610  0004                     interrupt_function:	
 12611  007E                     saved_w	set	btemp
 12612  0004  00FE               	movwf	btemp
 12613  0005  0E03               	swapf	3,w
 12614  0006  00F2               	movwf	??_isr+2
 12615  0007  0804               	movf	4,w
 12616  0008  00F3               	movwf	??_isr+3
 12617  0009  080A               	movf	10,w
 12618  000A  00F4               	movwf	??_isr+4
 12619  000B  1283               	bcf	3,5	;RP0=0, select bank0
 12620  000C  1303               	bcf	3,6	;RP1=0, select bank0
 12621  000D  087F               	movf	btemp+1,w
 12622  000E  00F5               	movwf	??_isr+5
 12623  000F  160A  118A  2CBB   	ljmp	_isr


Data Sizes:
    Strings     11
    Constant    64
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     72      77
    BANK1            80     15      71
    BANK3            96      0      58
    BANK2            96      0      52

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 58
		 -> buffer(BANK1[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 58
		 -> buffer(BANK1[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK1[33]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK1[33]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 58
		 -> usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 58
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 52
		 -> NULL(NULL[0]), usart_buffer(BANK2[52]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_24C1025_Read_Str@buffer	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK1[33]), EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Decodify_Command
    _mediaLeituraPt100Umidadde->___flsub
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  108469
                                             67 BANK0      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                         _USART_init
          _mediaLeituraPt100Umidadde
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _mediaLeituraPt100Umidadde                           14    14      0   15887
                                             51 BANK0     14    14      0
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3745
                                             43 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3548
                                             23 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1803
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    1477
                                             14 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     261
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     613
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     167
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    19    19      0   90281
                                             63 BANK0      4     4      0
                                              0 BANK1     15    15      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     5     4      1     223
                                              1 BANK0      5     4      1
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      44
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     416
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     416
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   11921
                                             56 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             35 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    4008
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3153
                                             58 BANK0      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     210
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2670
                                             50 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    1777
                                             54 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    2219
                                             54 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1584
                                             50 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     812
                                             46 BANK0      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     812
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     991
                                              5 BANK0      8     6      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     624
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     189
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     161
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    5451
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    6659
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    5927
                                              9 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    7153
                                             23 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             7     3      4    7130
                                             23 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     7      6    6962
                                             10 BANK0     13     7      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     862
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    7555
                                             56 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    7304
                                             46 BANK0     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    6377
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     502
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4290
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
       ___flmul (ARG)
         __Umul8_16
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
       ___flmul
         __Umul8_16
       ___fltol
         ___flmul (ARG)
           __Umul8_16
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
         __Umul8_16
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _USART_init
   _mediaLeituraPt100Umidadde
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
           _captura
           _my_delay_ms
     ___xxtofl
     _my_delay_ms
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     110       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4D       5       96.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      F      47       7       88.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      3A       9       60.4%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      34      11       54.2%
DATA                 0      0     110      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 05 16:20:00 2020

                              _USART_putc 1D01                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 0047                              ___fldiv@bexp 0046  
                                       pc 0002                              ___fldiv@sign 003F  
         EEPROM_24C1025_Read_Buffer@range 0035          EEPROM_24C1025_Write_Str@chip_add 0031  
                                      fsr 0004                             _USART_put_int 1D4C  
                Decodify_Command@tempchar 00E2                       __Umul8_16@word_mpld 0026  
              __end_of_RESISTOR_ROOM_TEMP 101C              PROCULUS_VP_Write_String@text 005C  
                                     l412 0384                                       l414 03DA  
                                     l503 1E90                                       l408 0376  
                                     l525 1E4A                                       l493 116F  
                                     l469 1CD7                                       l498 1193  
                                     l499 1194                                       l774 1DB3  
                                     l854 1D09                                       l791 1D2E  
                            __CFG_CPD$OFF 0000        EEPROM_24C1025_Read_Buffer@chip_add 0034  
                Decodify_Command@sizedata 00DB                                       _isr 14BB  
                                     fsr0 0004                                       indf 0000  
               __end_of_EEPROM_Write_Byte 11A3                          _ADC_Media_10bits 12F6  
                            __CFG_IESO$ON 0000                              ___flmul@aexp 0037  
                            ___flmul@bexp 003C                    PROCULUS_VP_Write@vetor 0054  
            ?_EEPROM_24C1025_Write_Buffer 002A                              ___flmul@sign 0036  
                            ___flmul@temp 0041                              ___flmul@prod 003D  
 __end_of_PROCULUS_Control_Register_Write 1167  __size_of_PROCULUS_Control_Register_Write 0038  
       ??_PROCULUS_Control_Register_Write 0053          ?_PROCULUS_Control_Register_Write 0052  
         _PROCULUS_Control_Register_Write 112F                              __CFG_LVP$OFF 0000  
                            ___fltol@exp1 004D                           __end_of_MAX_ADC 1024  
                                    l1320 0C7E                                      l1306 0FF5  
                                    l1411 148B                                      l1164 13FA  
                                    l1412 1495                                      l1404 1475  
                                    l1342 0DBD                                      l1270 0E9A  
                                    l1344 0DCB                                      l1264 0E23  
                                    l4003 0FED                                      l1372 06C3  
                                    l1268 0EBC                                      l1445 1EDE  
                                    l1285 0F75                                      l4111 0632  
                                    l4031 0400                                      l4007 0FF1  
                                    l4121 064B                                      l1298 0FDD  
                                    l4131 067D                                      l4027 03F6  
                                    l3413 10FF                                      l4205 0886  
                                    l4141 06AC                                      l4117 0649  
                                    l4109 0615                                      l4045 041B  
                                    l4029 03F8                                      l1398 1435  
                                    l4207 088B                                      l4135 0693  
                                    l4047 041D                                      l3521 10B6  
                                    l4209 088C                                      l4057 0433  
                                    l4049 0425                                      l3611 0BA1  
                                    l4331 0A2C                                      l4403 1F48  
                                    l4171 145A                                      l3381 1E6D  
                                    l3517 10A3                                      l3613 0BA6  
                                    l4309 09CD                                      l4501 1DD4  
                                    l4181 147A                                      l4165 1444  
                                    l5311 1772                                      l3615 0BA7  
                                    l4327 0A26                                      l4271 093A  
                                    l4263 0918                                      l4159 142D  
                                    l3385 1E79                                      l5313 1777  
                                    l3529 10BD                                      l4329 0A2B  
                                    l4353 0A79                                      l4193 14B2  
                                    l4169 1448                                      l3379 1E81  
                                    l5315 1778                                      l5331 17B1  
                                    l3643 0C16                                      l3571 0AF2  
                                    l4363 0AA0                                      l4283 097A  
                                    l4427 1FA2                                      l3811 11CF  
                                    l3803 11AB                                      l3547 1ED6  
                                    l5411 007F                                      l4179 1489  
                                    l4603 0C50                                      l3389 1E85  
                                    l5341 17DB                                      l3637 0BF4  
                                    l3645 0B3F                                      l4365 0AA9  
                                    l4285 097F                                      l4269 08C4  
                                    l3805 11B9                                      l3661 1FD1  
                                    l4461 1DF0                                      l5501 0263  
                                    l5405 0066                                      l3717 10C8  
                                    l4605 0C58                                      l3647 0C1B  
                                    l3567 0AEC                                      l4287 0980  
                                    l3671 117C                                      l3815 11DA  
                                    l3663 1FF3                                      l4455 12D1  
                                    l5415 008D                                      l4551 1D34  
                                    l4623 0C76                                      l5337 17D6  
                                    l5273 16C1                                      l3569 0AF1  
                                    l3737 1149                                      l5521 02DF  
                                    l4561 0813                                      l4529 1311  
                                    l4721 0DC7                                      l4705 0D8A  
                                    l4633 0C9D                                      l3905 0EA5  
                                    l3833 0DEE                                      l5339 1700  
                                    l5275 16C6                                      l3739 115F  
                                    l5355 1D99                                      l3763 13BF  
                                    l5531 031D                                      l5515 02C2  
                                    l5443 0149                                      l5435 0120  
                                    l5427 00E7                                      l4571 084B  
                                    l4563 0823                                      l4547 1D32  
                                    l4619 0C73                                      l3931 0EEB  
                                    l3923 0ECA                                      l3907 0EA7  
                                    l3915 0EB6                                      l5277 16C7  
                                    l3669 1179                                      l4477 1063  
                                    l5373 127D                                      l5357 1DA8  
                                    l3781 13F6                                      l5525 0309  
                                    l5509 029D                                      l4709 0DA3  
                                    l3933 0EED                                      l3941 0EFD  
                                    l3861 0E1B                                      l3837 0DF1  
                                    l4479 1080                                      l5375 1299  
                                    l3759 13B6                                      l5543 034A  
                                    l5471 01BF                                      l5439 012F  
                                    l4575 0858                                      l4639 0CA9  
                                    l3951 0F67                                      l3839 0DF9  
                                    l5385 1226                                      l5537 032E  
                                    l5465 01B2                                      l5449 0161  
                                    l4665 0D17                                      l3857 0E18  
                                    l4841 07DB                                      l4809 06F1  
                                    l3779 13E6                                      l5555 037A  
                                    l5483 01EE                                      l5459 0192  
                                    l4691 0D56                                      l4683 0D22  
                                    l4659 0CF8                                      l4667 0CD4  
                                    l3867 0E2D                                      l4827 0739  
                                    l4819 0724                                      l3789 1409  
                                    l5725 0393                                      l5549 036A  
                                    l5477 01CD                                      l4757 11F0  
                                    l4685 0D3F                                      l4669 0D1C  
                                    l3981 0FA8                                      l3973 0F9D  
                                    l5645 162E                                      l5495 0245  
                                    l5567 0388                                      l4791 1211  
                                    l4695 0D58                                      l4599 0C4D  
                                    l3967 0F96                                      l3959 0F87  
                                    l3975 0F9F                                      l5671 1657  
                                    l5489 0215                                      l4777 120A  
                                    l3985 0FAA                                      l3897 0E69  
                                    ?_isr 0070                                      _BETA 1048  
                                    STR_1 1050                              __CFG_WDTE$ON 0000  
                                    STR_2 1058                               _statuspower 006B  
                                    _CREN 00C4                                      u3110 0E89  
                                    u3120 0E8A                                      u3105 0E7D  
                                    u2503 1111                                      u4033 0967  
                                    u3305 0F89                                      u4043 0978  
                                    u3251 0F28                                      u3243 0F0F  
                                    u3235 0EF1                                      u3155 0EAB  
                                    u2620 10B3                                      u3260 0F3C  
                                    u3252 0F29                                      u4053 09DC  
                                    u3405 0FC7                                      u3261 0F3D  
                                    u3253 0F2E                                      u3262 0F42  
                                    u3254 0F2F                                      u5023 1257  
                                    u2703 0B55                                      u4135 12DD  
                                    u3263 0F43                                      u3255 0F34  
                                    u3256 0F35                                      u4073 0A24  
                                    u2723 0B9F                                      u4235 0817  
                                    u2803 10DA                                      u2645 1DB9  
                                    u5207 09FD                                      u4255 0825  
                                    u4415 0CF1                                      u5217 0ABA  
                                    u2665 1EDF                                      u3705 0619  
                                    u3625 0536                                      u4265 083A  
                                    u4425 0D06                                      u5227 0C2C  
                                    u2683 0AD9                                      u2915 13FF  
                                    u4275 084C                                      u5147 15AE  
                                    u5237 111A                                      u2693 0AEA  
                                    u3805 0686                                      u3725 0624  
                                    u5157 10E2                                      u5247 1E75  
                                    u5167 1DC1                                      u3815 069E  
                                    u2855 13C8                                      u4455 0D26  
                                    u5177 1FC7                                      u3665 05CA  
                                    u3905 1482                                      u4545 0D75  
                                    u4385 0CDD                                      u5187 119D  
                                    u2955 11AE                                      u3595 04DD  
                                    u4555 0D93                                      u4475 0D31  
                                    u4395 0CE6                                      u5197 1EA1  
                                    u2885 13E7                                      u4565 0DAE  
                                    u2975 11BA                                      u3695 0601  
                                    u2985 11C6                                      u4585 1F78  
                                    u3945 149D                                      u3865 1451  
                                    u2995 11D0                                      u3795 0668  
                                    u3973 0873                                      u3885 146D  
                                    u4943 16AE                                      u3983 0884  
                                    u4953 16BF                                      u3993 08DC  
                                    u4963 1722                                      u4983 1770  
                                    u4995 170E                                      _WPUB 0095  
                    PROCULUS_Buzzer@vetor 0059                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000          __end_of_I2C_Master_RepeatedStart 1D01  
                                    _main 15A6                                      _hora 007C  
       __size_of_EEPROM_24C1025_Write_Int 0020                                      btemp 007E  
       __size_of_EEPROM_24C1025_Write_Str 00F3                 ?_EEPROM_24C1025_Write_Int 004E  
                           __CFG_BOREN$ON 0000                 ?_EEPROM_24C1025_Write_Str 002A  
             __size_of_EEPROM_Read_String 0020                                      start 0012  
                        __end_of_ADC_init 1CEB                          _BALANCE_RESISTOR 104C  
                         ___fldiv@new_exp 0040        EEPROM_24C1025_Read_Buffer@sizedata 002E  
                                   ??_isr 0070                          ?_I2C_Master_Init 002E  
                        ?_I2C_Master_Read 0023                          ?_I2C_Master_Wait 0070  
                        ?_I2C_Master_Stop 0070                            ?_USART_put_int 004E  
                           ___fltol@sign1 004C                           __end_of___fladd 1000  
                                   ?_main 0070                           __end_of___fldiv 0DD3  
                                   _EEADR 010D                           __end_of___flmul 06D0  
                         __end_of___flsub 1E27                           __end_of___fltol 1418  
                                   _ANSEL 0188                           __end_of___lldiv 0861  
                                   _T1CON 0010                           __end_of___lwdiv 11DF  
                                   i1l620 14F3                                     i1l622 1503  
                                   i1l618 14E2                                     i1l636 159B  
                                   _RCREG 001A                                     _TMR1H 000F  
                                   _TMR1L 000E                                     _SPBRG 0099  
                                   _PORTA 0005                                     _PORTB 0006  
                                   _PORTC 0007                                     _PORTE 0009  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087           EEPROM_24C1025_Read_Int@chip_add 003D  
                                   _TRISE 0089                                     _TXREG 0019  
                   ADC_Media_10bits@canal 0033                           __end_of_captura 1CE0  
                           __CFG_PWRTE$ON 0000                              _usart_buffer 0110  
                   ADC_Media_10bits@value 0034                 EEPROM_Read_Integer@result 0028  
                                   _canal 006A              __size_of_EEPROM_Read_Integer 002A  
                                   _count 00AC                                     _errno 00A8  
           ??_EEPROM_24C1025_Write_Buffer 0031        __size_of_EEPROM_24C1025_Write_Byte 0016  
              ?_EEPROM_24C1025_Write_Byte 0037                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
         EEPROM_24C1025_Read_Byte@mem_add 0037                              __end_of_BETA 104C  
                 __size_of_PROCULUS_Delay 001D                            __CFG_MCLRE$OFF 0000  
       __size_of_PROCULUS_VP_Write_String 001A                               ?_USART_init 0020  
                         __initialization 0015                 ?_PROCULUS_VP_Write_String 005A  
                             ?_USART_putc 0070                              __end_of_main 1696  
                          Send_To_MB@size 0021                          _USART_put_buffer 1DCE  
                __end_of_EEPROM_Read_Byte 1EAA                                    ??_main 0063  
                        __end_of_Save_Log 13AD                          _USART_put_string 1FCD  
                   EEPROM_Write_Byte@addr 0023                     EEPROM_Write_Byte@dado 0020  
              __size_of_EEPROM_Write_Byte 003C                         ?_I2C_Master_Start 0070  
               EEPROM_Write_Byte@last_GIE 0024                         ?_I2C_Master_Write 0023  
                      ??_I2C_Master_Start 0023                                    _ADCON1 009F  
                      ??_I2C_Master_Write 0025                 PROCULUS_Show_Screen@vetor 0059  
                                  _ADRESH 001E                                    _ADRESL 009E  
                                  _EEDATA 010C                                    _EECON2 018D  
                              _Send_To_MB 1F17                     EEPROM_Write_Integer@i 002C  
                                  _ANSELH 0189              __end_of_PROCULUS_Show_Screen 0800  
              mediaLeituraPt100Umidadde@i 005C                                    i1l5221 1577  
                                  i1l5215 156B                                    i1l5217 1570  
                                  i1l5161 14E5                                    i1l5153 14C8  
                                  i1l5219 1544                                    i1l5173 1505  
                                  i1l5157 14D7                                    i1l5167 14F5  
                                  i1l5197 1535         __end_of_EEPROM_24C1025_Write_Byte 1D4C  
                                  u491_25 155D                              ?_my_delay_ms 0020  
                                  _TMR1IE 0460                                    _TMR1CS 0081  
                ?_EEPROM_24C1025_Fill_All 0058                                    _SSPADD 0093  
                                  _TRISC3 043B                                    _TRISC4 043C  
                                  _TRISC6 043E                                    _TRISC7 043F  
                                  _SSPCON 0014                                    _SSPBUF 0013  
          EEPROM_24C1025_Fill_All@mem_add 005B                          __end_of___xxtofl 14BB  
           EEPROM_24C1025_Read_Str@buffer 002D                        PROCULUS_VP_Write@i 0059  
                __end_of_Decodify_Command 03DB                  ?_EEPROM_24C1025_Read_Int 0037  
                ?_EEPROM_24C1025_Read_Str 0029                  _I2C_Master_RepeatedStart 1CF6  
              ?_mediaLeituraPt100Umidadde 0070      __size_of_EEPROM_24C1025_Write_Buffer 016A  
                               ??___fladd 003F                                 ??___fldiv 0036  
                               ??___flmul 0031                                 ??___flsub 0053  
                               ??___fltol 0047                           ??_USART_put_int 0050  
                               ??___lldiv 0028                                    _header 00AE  
                       __end_of_ROOM_TEMP 1020                                 ??___lwdiv 0024  
                                  _buffer 00B7                         _USART_to_Protocol 12A1  
                         USART_putc@value 0020         EEPROM_24C1025_Read_Buffer@cnt_103 0033  
                                  _minuto 007A                                 ??_captura 0022  
                      ?_USART_to_Protocol 0070              Decodify_Command@add_24LCxxxx 00E3  
                                  _strcpy 1DEB                                    _strlen 1D95  
       EEPROM_24C1025_Read_Buffer@mem_add 002A          __end_of_EEPROM_24C1025_Read_Byte 1D7B  
                      __size_of__Umul8_16 0023                                    saved_w 007E  
       EEPROM_24C1025_Write_Byte@chip_add 003C                                 ?_ADC_init 0070  
          mediaLeituraPt100Umidadde@canal 005B                       ??_USART_to_Protocol 0020  
                     __size_of_USART_init 003C                       __size_of_USART_putc 0010  
                            ___xxtofl@arg 002A                              ___xxtofl@exp 0029  
                            ___xxtofl@val 0020                          __end_oflog@coeff 1048  
                 __end_of__initialization 003A       PROCULUS_Control_Register_Write@size 0052  
                              ___fltol@f1 0043                              _Board_Number 0069  
                __end_of_ADC_Media_10bits 134B                            __pcstackCOMMON 0070  
                __size_of_PROCULUS_Buzzer 0022                 __end_of_USART_to_Protocol 12F6  
                   USART_put_string@vetor 0021                       my_delay_ms_WDT@time 0020  
           __size_of_EEPROM_Write_Integer 0032                  __size_of_my_delay_ms_WDT 0038  
                          _OPTION_REGbits 0081                  __end_of_BALANCE_RESISTOR 1050  
        __end_of_EEPROM_24C1025_Write_Int 1E47          __end_of_EEPROM_24C1025_Write_Str 0954  
                    USART_put_buffer@loop 0024                      USART_put_buffer@size 0021  
                              ??_ADC_init 0020               __end_of_EEPROM_Write_String 108B  
         __end_of_EEPROM_24C1025_Fill_All 125A                               ?_Send_To_MB 0070  
                  __size_of_Send_Reply_OK 0009                                __pbssBANK0 0068  
                              __pbssBANK1 00A0                                __pbssBANK2 0110  
                              __pbssBANK3 0190                        _RESISTOR_ROOM_TEMP 1018  
         __end_of_EEPROM_24C1025_Read_Int 1F17           __end_of_EEPROM_24C1025_Read_Str 0AC0  
                ?_Package_Usart_is_for_me 0070                                 ?_Save_Log 0058  
                          _PROCULUS_Delay 1DB1                         __end_of__Umul8_16 1EEF  
                              __pmaintext 15A6                       Save_Log@add_datalog 0058  
                     _EEPROM_Read_Integer 1F40                PROCULUS_Show_Screen@screen 0056  
                              __pintentry 0004                      _PROCULUS_Show_Screen 07EB  
                                 _T1CKPS0 0084                                   _T1CKPS1 0085  
                                 ?_strcpy 0020                                   ?_strlen 0020  
                               ?___xxtofl 0020                                   _MAX_ADC 1020  
                    ?_EEPROM_Read_Integer 0023                     Decodify_Command@dados 00D8  
             EEPROM_24C1025_Read_Int@data 003E                                   _SSPCON2 0091  
        __end_of_PROCULUS_VP_Write_String 1D95                   EEPROM_Read_Integer@addr 0026  
                                 _SSPSTAT 0094                  _EEPROM_24C1025_Read_Byte 1D62  
                              __stringtab 1000                       PROCULUS_VP_Write@vp 0052  
             ??_EEPROM_24C1025_Write_Byte 003C                  __end_of_USART_put_buffer 1DEB  
              __end_of_EEPROM_Read_String 1E67                    __end_of_PROCULUS_Delay 1DCE  
                __end_of_USART_put_string 2000                      __size_of_my_delay_ms 0037  
                              ??_Save_Log 005C                           PROCULUS_Delay@i 0024  
                            ??_USART_init 0024               EEPROM_24C1025_Read_Str@ctrl 0033  
                            ??_USART_putc 0020                __size_of_USART_to_Protocol 0055  
             PROCULUS_Buzzer@time_ms_x_10 0056                                   ___fladd 0DD3  
                                 ___fldiv 0C32                  EEPROM_Write_Integer@addr 002B  
                                 ___flmul 03DB                  EEPROM_Write_Integer@dado 0025  
                                 ___flsub 1E09                                   ___fltol 13AD  
                                 ___lldiv 0803                                   ___lwdiv 11A3  
                           _Send_Reply_OK 1CCD                       __size_of_Send_To_MB 0029  
                   ?_PROCULUS_Show_Screen 0056                                   _captura 1CD6  
                        _statuspower_memo 007B                                   __ptext1 06D0  
                                 __ptext2 1E09                                   __ptext3 0DD3  
                                 __ptext4 0C32                                   __ptext5 1D22  
                                 __ptext6 12F6                                   __ptext7 10C0  
                                 __ptext8 1CD6                                   __ptext9 1418  
                       ??_PROCULUS_Buzzer 0058                                   _destino 0068  
                       ?_EEPROM_Read_Byte 0070                           __size_of_strcpy 001E  
                         __size_of_strlen 001C                              __size_of_isr 00EB  
                              ??___xxtofl 0024                        ??_EEPROM_Read_Byte 0020  
                                 _segundo 007D                  __size_of_I2C_Master_Init 0031  
                __size_of_I2C_Master_Read 0035                            _usart_protocol 0190  
                   ??_EEPROM_Read_Integer 0025                  __size_of_I2C_Master_Wait 0021  
                __size_of_I2C_Master_Stop 0009             EEPROM_24C1025_Write_Int@local 0056  
                                 _pointer 00B6             EEPROM_24C1025_Write_Byte@data 003B  
                                 clrloop0 1CBD                        __end_of_USART_init 121B  
         __end_of_Package_Usart_is_for_me 1D36                        __end_of_USART_putc 1D11  
                       ADC_Media_10bits@i 0036                      end_of_initialization 003A  
                _EEPROM_24C1025_Write_Int 1E27                         ??_my_delay_ms_WDT 0024  
                _EEPROM_24C1025_Write_Str 0861                ??_I2C_Master_RepeatedStart 0023  
                         ?_PROCULUS_Delay 0020                           my_delay_ms@time 0020  
         EEPROM_24C1025_Write_Buffer@data 002F           EEPROM_24C1025_Write_Buffer@ctrl 0036  
               __size_of_I2C_Master_Start 0011                 __size_of_I2C_Master_Write 000B  
                       ?_Decodify_Command 0070                           ___lldiv@divisor 0020  
                         ___lldiv@counter 002D                        ??_Decodify_Command 005F  
                               _RCSTAbits 0018               ??_mediaLeituraPt100Umidadde 0053  
                        I2C_Master_Init@c 002E                          I2C_Master_Read@a 0023  
                          ?_Send_Reply_OK 0070                 _EEPROM_24C1025_Write_Byte 1D36  
         mediaLeituraPt100Umidadde@tensao 0057          __size_of_EEPROM_24C1025_Fill_All 003F  
                                 strlen@s 0020                        USART_to_Protocol@i 0022  
                               _PORTAbits 0005                                 _PORTBbits 0006  
                               _PORTCbits 0007                          _Delay_Led_Memory 00B4  
            ??_EEPROM_24C1025_Read_Buffer 0030             EEPROM_24C1025_Write_Str@range 0032  
                               _ROOM_TEMP 101C                               ___fladd@grs 004A  
        __size_of_EEPROM_24C1025_Read_Int 0028          __size_of_EEPROM_24C1025_Read_Str 016C  
                           ___xxtofl@sign 0028       __end_of_EEPROM_24C1025_Write_Buffer 1800  
             _EEPROM_24C1025_Write_Buffer 1696                               ___fldiv@grs 0042  
                             ___fldiv@rem 003B      PROCULUS_Control_Register_Write@vetor 0054  
        EEPROM_24C1025_Write_Buffer@count 0033           EEPROM_24C1025_Write_Int@mem_add 004E  
        EEPROM_24C1025_Write_Buffer@range 0035                         __size_of_ADC_init 000B  
                 Decodify_Command@tempint 00DC                     PROCULUS_VP_Write@size 0056  
         EEPROM_24C1025_Read_Str@chip_add 0031                               ___flmul@grs 0038  
                _PROCULUS_VP_Write_String 1D7B                                 _TXSTAbits 0098  
     __size_of_EEPROM_24C1025_Read_Buffer 0172                         ?_ADC_Media_10bits 002E  
                  PROCULUS_Delay@tempo_ms 0020                    ??_PROCULUS_Show_Screen 0058  
                      ??_ADC_Media_10bits 0032                     __end_of_USART_put_int 1D62  
                             _BAUDCTLbits 0187                            __end_of_strcpy 1E09  
                          __end_of_strlen 1DB1                       start_initialization 0015  
               _mediaLeituraPt100Umidadde 06D0                               __end_of_isr 15A6  
                             USART_init@i 0026                              ??_Send_To_MB 0021  
                       ??_I2C_Master_Init 0032                         ??_I2C_Master_Read 0025  
                       ??_I2C_Master_Wait 0020                         ??_I2C_Master_Stop 0023  
            __end_of_EEPROM_Write_Integer 1FCD          EEPROM_24C1025_Write_Int@chip_add 0055  
                __CFG_FOSC$INTRC_NOCLKOUT 0000                       Decodify_Command@add 00DA  
                   USART_put_buffer@vetor 0023                           ??_Send_Reply_OK 0025  
                       __size_of_Save_Log 0062                      I2C_Master_Wait@tempo 0022  
                               __Umul8_16 1ECC             mediaLeituraPt100Umidadde@Temp 005D  
                      __end_of_Send_To_MB 1F40          __size_of_Package_Usart_is_for_me 0014  
                                ??_strcpy 0021                                  ??_strlen 0022  
              ??_EEPROM_24C1025_Read_Byte 003B        EEPROM_24C1025_Write_Buffer@mem_add 002A  
                               ___fladd@a 003B                                 ___fladd@b 0037  
        EEPROM_24C1025_Write_Byte@mem_add 0037                                 ___fldiv@a 002E  
                               ___fldiv@b 0032                                 ___flmul@a 002D  
                               ___flmul@b 0029                               __pbssCOMMON 0078  
                               ___flsub@a 004B                                 ___flsub@b 004F  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00D8                         _PROCULUS_VP_Write 125A  
                       __size_of___xxtofl 00A3                        ?_PROCULUS_VP_Write 0052  
                     USART_put_buffer@ptr 0025                         ?_USART_put_buffer 0021  
            __size_of_EEPROM_Write_String 002B                          _I2C_Master_Start 1D11  
                      ??_USART_put_buffer 0022                          _I2C_Master_Write 1CEB  
                     ??_PROCULUS_VP_Write 0057                            _tempodecorrido 00AA  
                       ?_USART_put_string 0021                           _PROCULUS_Buzzer 1EAA  
                        ___lwdiv@dividend 0022            Package_Usart_is_for_me@retorno 0020  
                      ??_USART_put_string 0023                                  ?___fladd 0037  
                                ?___fldiv 002E                   _EEPROM_24C1025_Fill_All 121B  
                                ?___flmul 0029                                  ?___flsub 004B  
                                ?___fltol 0043                                  ?___lldiv 0020  
                              ?__Umul8_16 0020                        _EEPROM_Read_String 1E47  
                                ?___lwdiv 0020        __end_of_EEPROM_24C1025_Read_Buffer 0C32  
              _EEPROM_24C1025_Read_Buffer 0AC0                                  ?_captura 0020  
                               __pstrings 1000                           _my_delay_ms_WDT 10F7  
                 _EEPROM_24C1025_Read_Int 1EEF                   _EEPROM_24C1025_Read_Str 0954  
                  EEPROM_Read_Integer@ptr 0027                ??_EEPROM_24C1025_Write_Int 0054  
              ??_EEPROM_24C1025_Write_Str 002F                       ?_EEPROM_Read_String 0023  
               __end_of_PROCULUS_VP_Write 12A1                EEPROM_24C1025_Read_Str@cnt 0030  
                                _ADC_init 1CE0                          ___lwdiv@quotient 0025  
                 EEPROM_Write_Integer@ptr 002A                          ??_PROCULUS_Delay 0022  
          EEPROM_24C1025_Read_Buffer@data 002F            EEPROM_24C1025_Read_Buffer@ctrl 0036  
                           ??_my_delay_ms 0024                 __size_of_EEPROM_Read_Byte 0022  
                       interrupt_function 0004           EEPROM_24C1025_Write_Str@mem_add 002A  
                    ??_EEPROM_Read_String 0024                                 clear_ram0 1CBC  
                                _PIE1bits 008C                                  _PIR1bits 000C  
        PROCULUS_Control_Register_Write@i 0055                    Decodify_Command@OutPut 00DE  
                         _PT100_TRANSLADA 1010                           _Delay_Led_Usart 00B2  
            EEPROM_24C1025_Read_Byte@data 003D               __end_of_EEPROM_Read_Integer 1F6A  
                              _ADCON0bits 001F                               __stringbase 100F  
                              _ADCON1bits 009F                 __size_of_Decodify_Command 039D  
                    _EEPROM_Write_Integer 1F9B            EEPROM_24C1025_Read_Int@mem_add 0037  
                               main@reset 0066                ??_PROCULUS_VP_Write_String 005D  
                     I2C_Master_Read@temp 0027                   __end_of_PROCULUS_Buzzer 1ECC  
      __size_of_mediaLeituraPt100Umidadde 011B                            _generic_status 006C  
                              _EECON1bits 018C                                  _Save_Log 134B  
               ??_EEPROM_24C1025_Fill_All 005A                       __end_of_my_delay_ms 10F7  
            EEPROM_24C1025_Read_Str@range 0032                                  _Umidade1 00A0  
                 __end_of_my_delay_ms_WDT 112F                              my_delay_ms@i 0026  
                             ??__Umul8_16 0022         __size_of_I2C_Master_RepeatedStart 000B  
                        __size_of___fladd 022D                 ??_EEPROM_24C1025_Read_Int 003B  
                 _Package_Usart_is_for_me 1D22                          __size_of___fldiv 01A1  
               ??_EEPROM_24C1025_Read_Str 002E                          __size_of___flmul 02F5  
               ?_I2C_Master_RepeatedStart 0070                          __size_of___flsub 001E  
                        __size_of___fltol 006B                          __size_of___lldiv 005E  
                        __size_of___lwdiv 003C                        __end_of__stringtab 1010  
     EEPROM_24C1025_Write_Buffer@chip_add 0034                       USART_put_string@ptr 0023  
                        __size_of_captura 000A                     ?_EEPROM_Write_Integer 0025  
                            _Temperatura0 00A4                           _I2C_Master_Init 1F6A  
                         _I2C_Master_Read 108B                                  ___xxtofl 1418  
              __size_of_PROCULUS_VP_Write 0047                           _I2C_Master_Wait 1E67  
        EEPROM_24C1025_Read_Byte@chip_add 003C                           _I2C_Master_Stop 1CC4  
               __size_of_ADC_Media_10bits 0055                           ___lwdiv@divisor 0020  
                         ___lwdiv@counter 0027                                  __ptext10 11DF  
                                __ptext11 1F6A                                  __ptext20 134B  
                                __ptext12 0803                                  __ptext21 13AD  
                                __ptext13 003E                                  __ptext30 112F  
                                __ptext22 03DB                                  __ptext14 1DEB  
                                __ptext31 1D4C                                  __ptext23 1ECC  
                                __ptext15 12A1                                  __ptext40 0861  
                                __ptext32 1D01                                  __ptext24 1D7B  
                                __ptext16 1DCE                                  __ptext41 1D36  
                                __ptext33 1DB1                                  __ptext25 1D95  
                                __ptext17 1F17                                  __ptext50 1696  
                                __ptext42 0954                                  __ptext34 1060  
                                __ptext26 125A                                  __ptext18 1CCD  
                                __ptext51 10F7                                  __ptext43 1EEF  
                                __ptext35 1F9B                                  __ptext27 07EB  
                                __ptext19 1FCD                                  __ptext52 1CEB  
                                __ptext44 1D62                                  __ptext36 1167  
                                __ptext28 1EAA                                  __ptext53 1CC4  
                                __ptext45 0AC0                                  __ptext37 1E47  
                                __ptext29 11A3                                  __ptext54 1D11  
                                __ptext46 1CF6                                  __ptext38 1F40  
                                __ptext55 1E67                                  __ptext47 108B  
                                __ptext39 1E88                                  __ptext56 1CE0  
                                __ptext48 121B                                  __ptext57 14BB  
                                __ptext49 1E27                         __CFG_BOR4V$BOR40V 0000  
                      USART_put_int@value 004E                            _PT100_CONSTANT 1014  
                              strcpy@from 0020                             __size_of_main 00F0  
            EEPROM_24C1025_Fill_All@value 0058                PROCULUS_VP_Write_String@vp 005A  
                 __end_of_PT100_TRANSLADA 1014       EEPROM_24C1025_Write_Buffer@sizedata 002E  
                             _milisegundo 00B0         __end_of_mediaLeituraPt100Umidadde 07EB  
                          _Delay_Led_Tmr0 0078             __size_of_PROCULUS_Show_Screen 0015  
                     _EEPROM_Write_String 1060                                  log@coeff 1024  
                __end_of_I2C_Master_Start 1D22                  __end_of_I2C_Master_Write 1CF6  
                              _INTCONbits 000B                    __end_of_PT100_CONSTANT 1018  
                                isr@tempo 0076                      EEPROM_Read_Byte@addr 0022  
                  EEPROM_Read_String@addr 0025                    EEPROM_Read_String@dado 0023  
                        my_delay_ms_WDT@i 0026                                  intlevel1 0000  
                        ?_PROCULUS_Buzzer 0056                         USART_put_int@dado 0051  
                        _EEPROM_Read_Byte 1E88                               _my_delay_ms 10C0  
                    ?_EEPROM_Write_String 0025                          ___lldiv@dividend 0024  
                  __size_of_USART_put_int 0016              EEPROM_24C1025_Write_Int@data 0052  
                    EEPROM_Read_Integer@i 002A                   EEPROM_Write_String@addr 0027  
                 EEPROM_Write_String@dado 0025                        USART_init@baudrate 0020  
                               stringcode 100A                                _OSCCONbits 008F  
               ??_Package_Usart_is_for_me 0020                          ?_my_delay_ms_WDT 0020  
                   __end_of_Send_Reply_OK 1CD6                   __end_of_I2C_Master_Init 1F9B  
                 __end_of_I2C_Master_Read 10C0                   __end_of_I2C_Master_Wait 1E88  
                 __end_of_I2C_Master_Stop 1CCD              EEPROM_24C1025_Write_Str@data 002E  
            EEPROM_24C1025_Write_Str@ctrl 0033                 __size_of_USART_put_buffer 001D  
             ?_EEPROM_24C1025_Read_Buffer 002A           EEPROM_24C1025_Fill_All@chip_add 005A  
                  ??_EEPROM_Write_Integer 0027                    __Umul8_16@multiplicand 0020  
         USART_to_Protocol@usart_protocol 0024                          _Decodify_Command 003E  
               __size_of_USART_put_string 0033                          ___lldiv@quotient 0029  
                       I2C_Master_Write@d 0023                                  strcpy@cp 0023  
                                strlen@cp 0022                                  strcpy@to 0022  
                                stringdir 100A                                  stringtab 1000  
                             _SSPCON2bits 0091                         _EEPROM_Write_Byte 1167  
          EEPROM_24C1025_Read_Str@mem_add 0029                             ___fladd@signs 0047  
                      ?_EEPROM_Write_Byte 0020                     ??_EEPROM_Write_String 0026  
                            ___fladd@aexp 0048                              ___fladd@bexp 0049  
       __size_of_EEPROM_24C1025_Read_Byte 0019                 ?_EEPROM_24C1025_Read_Byte 0037  
                     EEPROM_Read_String@c 0026                      __Umul8_16@multiplier 0028  
                     ??_EEPROM_Write_Byte 0021                         __Umul8_16@product 0024  
                              _USART_init 11DF  
