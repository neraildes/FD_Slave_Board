

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 02 12:52:04 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,merge=1,delta=2
    67                           	psect	text52,local,class=CODE,merge=1,delta=2
    68                           	psect	text53,local,class=CODE,merge=1,delta=2
    69                           	psect	text54,local,class=CODE,merge=1,delta=2
    70                           	psect	text55,local,class=CODE,merge=1,delta=2
    71                           	psect	text56,local,class=CODE,merge=1,delta=2
    72                           	psect	text57,local,class=CODE,merge=1,delta=2
    73                           	psect	text58,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    76                           	dabs	1,0x7E,2
    77  0000                     
    78                           ; Version 2.20
    79                           ; Generated 12/02/2020 GMT
    80                           ; 
    81                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC16F886 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  008F                     	;# 
   155  0090                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0093                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0095                     	;# 
   163  0096                     	;# 
   164  0097                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009A                     	;# 
   168  009B                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  0105                     	;# 
   174  0107                     	;# 
   175  0108                     	;# 
   176  0109                     	;# 
   177  010C                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  0185                     	;# 
   183  0187                     	;# 
   184  0188                     	;# 
   185  0189                     	;# 
   186  018C                     	;# 
   187  018D                     	;# 
   188  0000                     	;# 
   189  0001                     	;# 
   190  0002                     	;# 
   191  0003                     	;# 
   192  0004                     	;# 
   193  0005                     	;# 
   194  0006                     	;# 
   195  0007                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000D                     	;# 
   201  000E                     	;# 
   202  000E                     	;# 
   203  000F                     	;# 
   204  0010                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0013                     	;# 
   208  0014                     	;# 
   209  0015                     	;# 
   210  0015                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001B                     	;# 
   218  001C                     	;# 
   219  001D                     	;# 
   220  001E                     	;# 
   221  001F                     	;# 
   222  0081                     	;# 
   223  0085                     	;# 
   224  0086                     	;# 
   225  0087                     	;# 
   226  0089                     	;# 
   227  008C                     	;# 
   228  008D                     	;# 
   229  008E                     	;# 
   230  008F                     	;# 
   231  0090                     	;# 
   232  0091                     	;# 
   233  0092                     	;# 
   234  0093                     	;# 
   235  0093                     	;# 
   236  0093                     	;# 
   237  0094                     	;# 
   238  0095                     	;# 
   239  0096                     	;# 
   240  0097                     	;# 
   241  0098                     	;# 
   242  0099                     	;# 
   243  009A                     	;# 
   244  009B                     	;# 
   245  009C                     	;# 
   246  009D                     	;# 
   247  009E                     	;# 
   248  009F                     	;# 
   249  0105                     	;# 
   250  0107                     	;# 
   251  0108                     	;# 
   252  0109                     	;# 
   253  010C                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  010F                     	;# 
   258  0185                     	;# 
   259  0187                     	;# 
   260  0188                     	;# 
   261  0189                     	;# 
   262  018C                     	;# 
   263  018D                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0009                     	;# 
   273  000A                     	;# 
   274  000B                     	;# 
   275  000C                     	;# 
   276  000D                     	;# 
   277  000E                     	;# 
   278  000E                     	;# 
   279  000F                     	;# 
   280  0010                     	;# 
   281  0011                     	;# 
   282  0012                     	;# 
   283  0013                     	;# 
   284  0014                     	;# 
   285  0015                     	;# 
   286  0015                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001B                     	;# 
   294  001C                     	;# 
   295  001D                     	;# 
   296  001E                     	;# 
   297  001F                     	;# 
   298  0081                     	;# 
   299  0085                     	;# 
   300  0086                     	;# 
   301  0087                     	;# 
   302  0089                     	;# 
   303  008C                     	;# 
   304  008D                     	;# 
   305  008E                     	;# 
   306  008F                     	;# 
   307  0090                     	;# 
   308  0091                     	;# 
   309  0092                     	;# 
   310  0093                     	;# 
   311  0093                     	;# 
   312  0093                     	;# 
   313  0094                     	;# 
   314  0095                     	;# 
   315  0096                     	;# 
   316  0097                     	;# 
   317  0098                     	;# 
   318  0099                     	;# 
   319  009A                     	;# 
   320  009B                     	;# 
   321  009C                     	;# 
   322  009D                     	;# 
   323  009E                     	;# 
   324  009F                     	;# 
   325  0105                     	;# 
   326  0107                     	;# 
   327  0108                     	;# 
   328  0109                     	;# 
   329  010C                     	;# 
   330  010C                     	;# 
   331  010D                     	;# 
   332  010E                     	;# 
   333  010F                     	;# 
   334  0185                     	;# 
   335  0187                     	;# 
   336  0188                     	;# 
   337  0189                     	;# 
   338  018C                     	;# 
   339  018D                     	;# 
   340  0000                     	;# 
   341  0001                     	;# 
   342  0002                     	;# 
   343  0003                     	;# 
   344  0004                     	;# 
   345  0005                     	;# 
   346  0006                     	;# 
   347  0007                     	;# 
   348  0009                     	;# 
   349  000A                     	;# 
   350  000B                     	;# 
   351  000C                     	;# 
   352  000D                     	;# 
   353  000E                     	;# 
   354  000E                     	;# 
   355  000F                     	;# 
   356  0010                     	;# 
   357  0011                     	;# 
   358  0012                     	;# 
   359  0013                     	;# 
   360  0014                     	;# 
   361  0015                     	;# 
   362  0015                     	;# 
   363  0016                     	;# 
   364  0017                     	;# 
   365  0018                     	;# 
   366  0019                     	;# 
   367  001A                     	;# 
   368  001B                     	;# 
   369  001B                     	;# 
   370  001C                     	;# 
   371  001D                     	;# 
   372  001E                     	;# 
   373  001F                     	;# 
   374  0081                     	;# 
   375  0085                     	;# 
   376  0086                     	;# 
   377  0087                     	;# 
   378  0089                     	;# 
   379  008C                     	;# 
   380  008D                     	;# 
   381  008E                     	;# 
   382  008F                     	;# 
   383  0090                     	;# 
   384  0091                     	;# 
   385  0092                     	;# 
   386  0093                     	;# 
   387  0093                     	;# 
   388  0093                     	;# 
   389  0094                     	;# 
   390  0095                     	;# 
   391  0096                     	;# 
   392  0097                     	;# 
   393  0098                     	;# 
   394  0099                     	;# 
   395  009A                     	;# 
   396  009B                     	;# 
   397  009C                     	;# 
   398  009D                     	;# 
   399  009E                     	;# 
   400  009F                     	;# 
   401  0105                     	;# 
   402  0107                     	;# 
   403  0108                     	;# 
   404  0109                     	;# 
   405  010C                     	;# 
   406  010C                     	;# 
   407  010D                     	;# 
   408  010E                     	;# 
   409  010F                     	;# 
   410  0185                     	;# 
   411  0187                     	;# 
   412  0188                     	;# 
   413  0189                     	;# 
   414  018C                     	;# 
   415  018D                     	;# 
   416  0000                     	;# 
   417  0001                     	;# 
   418  0002                     	;# 
   419  0003                     	;# 
   420  0004                     	;# 
   421  0005                     	;# 
   422  0006                     	;# 
   423  0007                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  000D                     	;# 
   429  000E                     	;# 
   430  000E                     	;# 
   431  000F                     	;# 
   432  0010                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0013                     	;# 
   436  0014                     	;# 
   437  0015                     	;# 
   438  0015                     	;# 
   439  0016                     	;# 
   440  0017                     	;# 
   441  0018                     	;# 
   442  0019                     	;# 
   443  001A                     	;# 
   444  001B                     	;# 
   445  001B                     	;# 
   446  001C                     	;# 
   447  001D                     	;# 
   448  001E                     	;# 
   449  001F                     	;# 
   450  0081                     	;# 
   451  0085                     	;# 
   452  0086                     	;# 
   453  0087                     	;# 
   454  0089                     	;# 
   455  008C                     	;# 
   456  008D                     	;# 
   457  008E                     	;# 
   458  008F                     	;# 
   459  0090                     	;# 
   460  0091                     	;# 
   461  0092                     	;# 
   462  0093                     	;# 
   463  0093                     	;# 
   464  0093                     	;# 
   465  0094                     	;# 
   466  0095                     	;# 
   467  0096                     	;# 
   468  0097                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009A                     	;# 
   472  009B                     	;# 
   473  009C                     	;# 
   474  009D                     	;# 
   475  009E                     	;# 
   476  009F                     	;# 
   477  0105                     	;# 
   478  0107                     	;# 
   479  0108                     	;# 
   480  0109                     	;# 
   481  010C                     	;# 
   482  010C                     	;# 
   483  010D                     	;# 
   484  010E                     	;# 
   485  010F                     	;# 
   486  0185                     	;# 
   487  0187                     	;# 
   488  0188                     	;# 
   489  0189                     	;# 
   490  018C                     	;# 
   491  018D                     	;# 
   492  0000                     	;# 
   493  0001                     	;# 
   494  0002                     	;# 
   495  0003                     	;# 
   496  0004                     	;# 
   497  0005                     	;# 
   498  0006                     	;# 
   499  0007                     	;# 
   500  0009                     	;# 
   501  000A                     	;# 
   502  000B                     	;# 
   503  000C                     	;# 
   504  000D                     	;# 
   505  000E                     	;# 
   506  000E                     	;# 
   507  000F                     	;# 
   508  0010                     	;# 
   509  0011                     	;# 
   510  0012                     	;# 
   511  0013                     	;# 
   512  0014                     	;# 
   513  0015                     	;# 
   514  0015                     	;# 
   515  0016                     	;# 
   516  0017                     	;# 
   517  0018                     	;# 
   518  0019                     	;# 
   519  001A                     	;# 
   520  001B                     	;# 
   521  001B                     	;# 
   522  001C                     	;# 
   523  001D                     	;# 
   524  001E                     	;# 
   525  001F                     	;# 
   526  0081                     	;# 
   527  0085                     	;# 
   528  0086                     	;# 
   529  0087                     	;# 
   530  0089                     	;# 
   531  008C                     	;# 
   532  008D                     	;# 
   533  008E                     	;# 
   534  008F                     	;# 
   535  0090                     	;# 
   536  0091                     	;# 
   537  0092                     	;# 
   538  0093                     	;# 
   539  0093                     	;# 
   540  0093                     	;# 
   541  0094                     	;# 
   542  0095                     	;# 
   543  0096                     	;# 
   544  0097                     	;# 
   545  0098                     	;# 
   546  0099                     	;# 
   547  009A                     	;# 
   548  009B                     	;# 
   549  009C                     	;# 
   550  009D                     	;# 
   551  009E                     	;# 
   552  009F                     	;# 
   553  0105                     	;# 
   554  0107                     	;# 
   555  0108                     	;# 
   556  0109                     	;# 
   557  010C                     	;# 
   558  010C                     	;# 
   559  010D                     	;# 
   560  010E                     	;# 
   561  010F                     	;# 
   562  0185                     	;# 
   563  0187                     	;# 
   564  0188                     	;# 
   565  0189                     	;# 
   566  018C                     	;# 
   567  018D                     	;# 
   568  0000                     	;# 
   569  0001                     	;# 
   570  0002                     	;# 
   571  0003                     	;# 
   572  0004                     	;# 
   573  0005                     	;# 
   574  0006                     	;# 
   575  0007                     	;# 
   576  0009                     	;# 
   577  000A                     	;# 
   578  000B                     	;# 
   579  000C                     	;# 
   580  000D                     	;# 
   581  000E                     	;# 
   582  000E                     	;# 
   583  000F                     	;# 
   584  0010                     	;# 
   585  0011                     	;# 
   586  0012                     	;# 
   587  0013                     	;# 
   588  0014                     	;# 
   589  0015                     	;# 
   590  0015                     	;# 
   591  0016                     	;# 
   592  0017                     	;# 
   593  0018                     	;# 
   594  0019                     	;# 
   595  001A                     	;# 
   596  001B                     	;# 
   597  001B                     	;# 
   598  001C                     	;# 
   599  001D                     	;# 
   600  001E                     	;# 
   601  001F                     	;# 
   602  0081                     	;# 
   603  0085                     	;# 
   604  0086                     	;# 
   605  0087                     	;# 
   606  0089                     	;# 
   607  008C                     	;# 
   608  008D                     	;# 
   609  008E                     	;# 
   610  008F                     	;# 
   611  0090                     	;# 
   612  0091                     	;# 
   613  0092                     	;# 
   614  0093                     	;# 
   615  0093                     	;# 
   616  0093                     	;# 
   617  0094                     	;# 
   618  0095                     	;# 
   619  0096                     	;# 
   620  0097                     	;# 
   621  0098                     	;# 
   622  0099                     	;# 
   623  009A                     	;# 
   624  009B                     	;# 
   625  009C                     	;# 
   626  009D                     	;# 
   627  009E                     	;# 
   628  009F                     	;# 
   629  0105                     	;# 
   630  0107                     	;# 
   631  0108                     	;# 
   632  0109                     	;# 
   633  010C                     	;# 
   634  010C                     	;# 
   635  010D                     	;# 
   636  010E                     	;# 
   637  010F                     	;# 
   638  0185                     	;# 
   639  0187                     	;# 
   640  0188                     	;# 
   641  0189                     	;# 
   642  018C                     	;# 
   643  018D                     	;# 
   644  0000                     	;# 
   645  0001                     	;# 
   646  0002                     	;# 
   647  0003                     	;# 
   648  0004                     	;# 
   649  0005                     	;# 
   650  0006                     	;# 
   651  0007                     	;# 
   652  0009                     	;# 
   653  000A                     	;# 
   654  000B                     	;# 
   655  000C                     	;# 
   656  000D                     	;# 
   657  000E                     	;# 
   658  000E                     	;# 
   659  000F                     	;# 
   660  0010                     	;# 
   661  0011                     	;# 
   662  0012                     	;# 
   663  0013                     	;# 
   664  0014                     	;# 
   665  0015                     	;# 
   666  0015                     	;# 
   667  0016                     	;# 
   668  0017                     	;# 
   669  0018                     	;# 
   670  0019                     	;# 
   671  001A                     	;# 
   672  001B                     	;# 
   673  001B                     	;# 
   674  001C                     	;# 
   675  001D                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  0081                     	;# 
   679  0085                     	;# 
   680  0086                     	;# 
   681  0087                     	;# 
   682  0089                     	;# 
   683  008C                     	;# 
   684  008D                     	;# 
   685  008E                     	;# 
   686  008F                     	;# 
   687  0090                     	;# 
   688  0091                     	;# 
   689  0092                     	;# 
   690  0093                     	;# 
   691  0093                     	;# 
   692  0093                     	;# 
   693  0094                     	;# 
   694  0095                     	;# 
   695  0096                     	;# 
   696  0097                     	;# 
   697  0098                     	;# 
   698  0099                     	;# 
   699  009A                     	;# 
   700  009B                     	;# 
   701  009C                     	;# 
   702  009D                     	;# 
   703  009E                     	;# 
   704  009F                     	;# 
   705  0105                     	;# 
   706  0107                     	;# 
   707  0108                     	;# 
   708  0109                     	;# 
   709  010C                     	;# 
   710  010C                     	;# 
   711  010D                     	;# 
   712  010E                     	;# 
   713  010F                     	;# 
   714  0185                     	;# 
   715  0187                     	;# 
   716  0188                     	;# 
   717  0189                     	;# 
   718  018C                     	;# 
   719  018D                     	;# 
   720  0000                     	;# 
   721  0001                     	;# 
   722  0002                     	;# 
   723  0003                     	;# 
   724  0004                     	;# 
   725  0005                     	;# 
   726  0006                     	;# 
   727  0007                     	;# 
   728  0009                     	;# 
   729  000A                     	;# 
   730  000B                     	;# 
   731  000C                     	;# 
   732  000D                     	;# 
   733  000E                     	;# 
   734  000E                     	;# 
   735  000F                     	;# 
   736  0010                     	;# 
   737  0011                     	;# 
   738  0012                     	;# 
   739  0013                     	;# 
   740  0014                     	;# 
   741  0015                     	;# 
   742  0015                     	;# 
   743  0016                     	;# 
   744  0017                     	;# 
   745  0018                     	;# 
   746  0019                     	;# 
   747  001A                     	;# 
   748  001B                     	;# 
   749  001B                     	;# 
   750  001C                     	;# 
   751  001D                     	;# 
   752  001E                     	;# 
   753  001F                     	;# 
   754  0081                     	;# 
   755  0085                     	;# 
   756  0086                     	;# 
   757  0087                     	;# 
   758  0089                     	;# 
   759  008C                     	;# 
   760  008D                     	;# 
   761  008E                     	;# 
   762  008F                     	;# 
   763  0090                     	;# 
   764  0091                     	;# 
   765  0092                     	;# 
   766  0093                     	;# 
   767  0093                     	;# 
   768  0093                     	;# 
   769  0094                     	;# 
   770  0095                     	;# 
   771  0096                     	;# 
   772  0097                     	;# 
   773  0098                     	;# 
   774  0099                     	;# 
   775  009A                     	;# 
   776  009B                     	;# 
   777  009C                     	;# 
   778  009D                     	;# 
   779  009E                     	;# 
   780  009F                     	;# 
   781  0105                     	;# 
   782  0107                     	;# 
   783  0108                     	;# 
   784  0109                     	;# 
   785  010C                     	;# 
   786  010C                     	;# 
   787  010D                     	;# 
   788  010E                     	;# 
   789  010F                     	;# 
   790  0185                     	;# 
   791  0187                     	;# 
   792  0188                     	;# 
   793  0189                     	;# 
   794  018C                     	;# 
   795  018D                     	;# 
   796  0000                     	;# 
   797  0001                     	;# 
   798  0002                     	;# 
   799  0003                     	;# 
   800  0004                     	;# 
   801  0005                     	;# 
   802  0006                     	;# 
   803  0007                     	;# 
   804  0009                     	;# 
   805  000A                     	;# 
   806  000B                     	;# 
   807  000C                     	;# 
   808  000D                     	;# 
   809  000E                     	;# 
   810  000E                     	;# 
   811  000F                     	;# 
   812  0010                     	;# 
   813  0011                     	;# 
   814  0012                     	;# 
   815  0013                     	;# 
   816  0014                     	;# 
   817  0015                     	;# 
   818  0015                     	;# 
   819  0016                     	;# 
   820  0017                     	;# 
   821  0018                     	;# 
   822  0019                     	;# 
   823  001A                     	;# 
   824  001B                     	;# 
   825  001B                     	;# 
   826  001C                     	;# 
   827  001D                     	;# 
   828  001E                     	;# 
   829  001F                     	;# 
   830  0081                     	;# 
   831  0085                     	;# 
   832  0086                     	;# 
   833  0087                     	;# 
   834  0089                     	;# 
   835  008C                     	;# 
   836  008D                     	;# 
   837  008E                     	;# 
   838  008F                     	;# 
   839  0090                     	;# 
   840  0091                     	;# 
   841  0092                     	;# 
   842  0093                     	;# 
   843  0093                     	;# 
   844  0093                     	;# 
   845  0094                     	;# 
   846  0095                     	;# 
   847  0096                     	;# 
   848  0097                     	;# 
   849  0098                     	;# 
   850  0099                     	;# 
   851  009A                     	;# 
   852  009B                     	;# 
   853  009C                     	;# 
   854  009D                     	;# 
   855  009E                     	;# 
   856  009F                     	;# 
   857  0105                     	;# 
   858  0107                     	;# 
   859  0108                     	;# 
   860  0109                     	;# 
   861  010C                     	;# 
   862  010C                     	;# 
   863  010D                     	;# 
   864  010E                     	;# 
   865  010F                     	;# 
   866  0185                     	;# 
   867  0187                     	;# 
   868  0188                     	;# 
   869  0189                     	;# 
   870  018C                     	;# 
   871  018D                     	;# 
   872  0000                     	;# 
   873  0001                     	;# 
   874  0002                     	;# 
   875  0003                     	;# 
   876  0004                     	;# 
   877  0005                     	;# 
   878  0006                     	;# 
   879  0007                     	;# 
   880  0009                     	;# 
   881  000A                     	;# 
   882  000B                     	;# 
   883  000C                     	;# 
   884  000D                     	;# 
   885  000E                     	;# 
   886  000E                     	;# 
   887  000F                     	;# 
   888  0010                     	;# 
   889  0011                     	;# 
   890  0012                     	;# 
   891  0013                     	;# 
   892  0014                     	;# 
   893  0015                     	;# 
   894  0015                     	;# 
   895  0016                     	;# 
   896  0017                     	;# 
   897  0018                     	;# 
   898  0019                     	;# 
   899  001A                     	;# 
   900  001B                     	;# 
   901  001B                     	;# 
   902  001C                     	;# 
   903  001D                     	;# 
   904  001E                     	;# 
   905  001F                     	;# 
   906  0081                     	;# 
   907  0085                     	;# 
   908  0086                     	;# 
   909  0087                     	;# 
   910  0089                     	;# 
   911  008C                     	;# 
   912  008D                     	;# 
   913  008E                     	;# 
   914  008F                     	;# 
   915  0090                     	;# 
   916  0091                     	;# 
   917  0092                     	;# 
   918  0093                     	;# 
   919  0093                     	;# 
   920  0093                     	;# 
   921  0094                     	;# 
   922  0095                     	;# 
   923  0096                     	;# 
   924  0097                     	;# 
   925  0098                     	;# 
   926  0099                     	;# 
   927  009A                     	;# 
   928  009B                     	;# 
   929  009C                     	;# 
   930  009D                     	;# 
   931  009E                     	;# 
   932  009F                     	;# 
   933  0105                     	;# 
   934  0107                     	;# 
   935  0108                     	;# 
   936  0109                     	;# 
   937  010C                     	;# 
   938  010C                     	;# 
   939  010D                     	;# 
   940  010E                     	;# 
   941  010F                     	;# 
   942  0185                     	;# 
   943  0187                     	;# 
   944  0188                     	;# 
   945  0189                     	;# 
   946  018C                     	;# 
   947  018D                     	;# 
   948  0000                     	;# 
   949  0001                     	;# 
   950  0002                     	;# 
   951  0003                     	;# 
   952  0004                     	;# 
   953  0005                     	;# 
   954  0006                     	;# 
   955  0007                     	;# 
   956  0009                     	;# 
   957  000A                     	;# 
   958  000B                     	;# 
   959  000C                     	;# 
   960  000D                     	;# 
   961  000E                     	;# 
   962  000E                     	;# 
   963  000F                     	;# 
   964  0010                     	;# 
   965  0011                     	;# 
   966  0012                     	;# 
   967  0013                     	;# 
   968  0014                     	;# 
   969  0015                     	;# 
   970  0015                     	;# 
   971  0016                     	;# 
   972  0017                     	;# 
   973  0018                     	;# 
   974  0019                     	;# 
   975  001A                     	;# 
   976  001B                     	;# 
   977  001B                     	;# 
   978  001C                     	;# 
   979  001D                     	;# 
   980  001E                     	;# 
   981  001F                     	;# 
   982  0081                     	;# 
   983  0085                     	;# 
   984  0086                     	;# 
   985  0087                     	;# 
   986  0089                     	;# 
   987  008C                     	;# 
   988  008D                     	;# 
   989  008E                     	;# 
   990  008F                     	;# 
   991  0090                     	;# 
   992  0091                     	;# 
   993  0092                     	;# 
   994  0093                     	;# 
   995  0093                     	;# 
   996  0093                     	;# 
   997  0094                     	;# 
   998  0095                     	;# 
   999  0096                     	;# 
  1000  0097                     	;# 
  1001  0098                     	;# 
  1002  0099                     	;# 
  1003  009A                     	;# 
  1004  009B                     	;# 
  1005  009C                     	;# 
  1006  009D                     	;# 
  1007  009E                     	;# 
  1008  009F                     	;# 
  1009  0105                     	;# 
  1010  0107                     	;# 
  1011  0108                     	;# 
  1012  0109                     	;# 
  1013  010C                     	;# 
  1014  010C                     	;# 
  1015  010D                     	;# 
  1016  010E                     	;# 
  1017  010F                     	;# 
  1018  0185                     	;# 
  1019  0187                     	;# 
  1020  0188                     	;# 
  1021  0189                     	;# 
  1022  018C                     	;# 
  1023  018D                     	;# 
  1024  0000                     	;# 
  1025  0001                     	;# 
  1026  0002                     	;# 
  1027  0003                     	;# 
  1028  0004                     	;# 
  1029  0005                     	;# 
  1030  0006                     	;# 
  1031  0007                     	;# 
  1032  0009                     	;# 
  1033  000A                     	;# 
  1034  000B                     	;# 
  1035  000C                     	;# 
  1036  000D                     	;# 
  1037  000E                     	;# 
  1038  000E                     	;# 
  1039  000F                     	;# 
  1040  0010                     	;# 
  1041  0011                     	;# 
  1042  0012                     	;# 
  1043  0013                     	;# 
  1044  0014                     	;# 
  1045  0015                     	;# 
  1046  0015                     	;# 
  1047  0016                     	;# 
  1048  0017                     	;# 
  1049  0018                     	;# 
  1050  0019                     	;# 
  1051  001A                     	;# 
  1052  001B                     	;# 
  1053  001B                     	;# 
  1054  001C                     	;# 
  1055  001D                     	;# 
  1056  001E                     	;# 
  1057  001F                     	;# 
  1058  0081                     	;# 
  1059  0085                     	;# 
  1060  0086                     	;# 
  1061  0087                     	;# 
  1062  0089                     	;# 
  1063  008C                     	;# 
  1064  008D                     	;# 
  1065  008E                     	;# 
  1066  008F                     	;# 
  1067  0090                     	;# 
  1068  0091                     	;# 
  1069  0092                     	;# 
  1070  0093                     	;# 
  1071  0093                     	;# 
  1072  0093                     	;# 
  1073  0094                     	;# 
  1074  0095                     	;# 
  1075  0096                     	;# 
  1076  0097                     	;# 
  1077  0098                     	;# 
  1078  0099                     	;# 
  1079  009A                     	;# 
  1080  009B                     	;# 
  1081  009C                     	;# 
  1082  009D                     	;# 
  1083  009E                     	;# 
  1084  009F                     	;# 
  1085  0105                     	;# 
  1086  0107                     	;# 
  1087  0108                     	;# 
  1088  0109                     	;# 
  1089  010C                     	;# 
  1090  010C                     	;# 
  1091  010D                     	;# 
  1092  010E                     	;# 
  1093  010F                     	;# 
  1094  0185                     	;# 
  1095  0187                     	;# 
  1096  0188                     	;# 
  1097  0189                     	;# 
  1098  018C                     	;# 
  1099  018D                     	;# 
  1100  0000                     	;# 
  1101  0001                     	;# 
  1102  0002                     	;# 
  1103  0003                     	;# 
  1104  0004                     	;# 
  1105  0005                     	;# 
  1106  0006                     	;# 
  1107  0007                     	;# 
  1108  0009                     	;# 
  1109  000A                     	;# 
  1110  000B                     	;# 
  1111  000C                     	;# 
  1112  000D                     	;# 
  1113  000E                     	;# 
  1114  000E                     	;# 
  1115  000F                     	;# 
  1116  0010                     	;# 
  1117  0011                     	;# 
  1118  0012                     	;# 
  1119  0013                     	;# 
  1120  0014                     	;# 
  1121  0015                     	;# 
  1122  0015                     	;# 
  1123  0016                     	;# 
  1124  0017                     	;# 
  1125  0018                     	;# 
  1126  0019                     	;# 
  1127  001A                     	;# 
  1128  001B                     	;# 
  1129  001B                     	;# 
  1130  001C                     	;# 
  1131  001D                     	;# 
  1132  001E                     	;# 
  1133  001F                     	;# 
  1134  0081                     	;# 
  1135  0085                     	;# 
  1136  0086                     	;# 
  1137  0087                     	;# 
  1138  0089                     	;# 
  1139  008C                     	;# 
  1140  008D                     	;# 
  1141  008E                     	;# 
  1142  008F                     	;# 
  1143  0090                     	;# 
  1144  0091                     	;# 
  1145  0092                     	;# 
  1146  0093                     	;# 
  1147  0093                     	;# 
  1148  0093                     	;# 
  1149  0094                     	;# 
  1150  0095                     	;# 
  1151  0096                     	;# 
  1152  0097                     	;# 
  1153  0098                     	;# 
  1154  0099                     	;# 
  1155  009A                     	;# 
  1156  009B                     	;# 
  1157  009C                     	;# 
  1158  009D                     	;# 
  1159  009E                     	;# 
  1160  009F                     	;# 
  1161  0105                     	;# 
  1162  0107                     	;# 
  1163  0108                     	;# 
  1164  0109                     	;# 
  1165  010C                     	;# 
  1166  010C                     	;# 
  1167  010D                     	;# 
  1168  010E                     	;# 
  1169  010F                     	;# 
  1170  0185                     	;# 
  1171  0187                     	;# 
  1172  0188                     	;# 
  1173  0189                     	;# 
  1174  018C                     	;# 
  1175  018D                     	;# 
  1176                           
  1177                           	psect	strings
  1178  1800                     __pstrings:
  1179  1800                     stringtab:
  1180  1800                     __stringtab:
  1181                           
  1182                           ;	String table - string pointers are 1 byte each
  1183  1800  1BFF               	btfsc	btemp+1,7
  1184  1801  280A               	ljmp	stringcode
  1185  1802  1383               	bcf	3,7
  1186  1803  187F               	btfsc	btemp+1,0
  1187  1804  1783               	bsf	3,7
  1188  1805  0800               	movf	0,w
  1189  1806  0A84               	incf	4,f
  1190  1807  1903               	skipnz
  1191  1808  0AFF               	incf	btemp+1,f
  1192  1809  0008               	return
  1193  180A                     stringcode:
  1194  180A                     stringdir:
  1195  180A  3018               	movlw	high stringdir
  1196  180B  008A               	movwf	10
  1197  180C  0804               	movf	4,w
  1198  180D  0A84               	incf	4,f
  1199  180E  0782               	addwf	2,f
  1200  180F                     __stringbase:
  1201  180F  3400               	retlw	0
  1202  1810                     __end_of__stringtab:
  1203  1810                     _PT100_TRANSLADA:
  1204  1810  3466               	retlw	102
  1205  1811  3466               	retlw	102
  1206  1812  34A6               	retlw	166
  1207  1813  34BF               	retlw	191
  1208  1814                     __end_of_PT100_TRANSLADA:
  1209  1814                     _PT100_CONSTANT:
  1210  1814  3414               	retlw	20
  1211  1815  34AE               	retlw	174
  1212  1816  342B               	retlw	43
  1213  1817  34C1               	retlw	193
  1214  1818                     __end_of_PT100_CONSTANT:
  1215  1818                     _RESISTOR_ROOM_TEMP:
  1216                           
  1217                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1218  1818  3400               	retlw	0
  1219  1819  3440               	retlw	64
  1220  181A  341C               	retlw	28
  1221  181B  3446               	retlw	70
  1222  181C                     __end_of_RESISTOR_ROOM_TEMP:
  1223  181C                     _ROOM_TEMP:
  1224                           
  1225                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1226  181C  3466               	retlw	102
  1227  181D  3486               	retlw	134
  1228  181E  3496               	retlw	150
  1229  181F  3443               	retlw	67
  1230  1820                     __end_of_ROOM_TEMP:
  1231  1820                     _MAX_ADC:
  1232                           
  1233                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1234  1820  3400               	retlw	0
  1235  1821  34C0               	retlw	192
  1236  1822  347F               	retlw	127
  1237  1823  3444               	retlw	68
  1238  1824                     __end_of_MAX_ADC:
  1239  1824                     log@coeff:
  1240  1824  3400               	retlw	0
  1241  1825  3400               	retlw	0
  1242  1826  3400               	retlw	0
  1243  1827  3400               	retlw	0
  1244  1828  34C4               	retlw	196
  1245  1829  34FF               	retlw	255
  1246  182A  347F               	retlw	127
  1247  182B  343F               	retlw	63
  1248  182C  3480               	retlw	128
  1249  182D  34EF               	retlw	239
  1250  182E  34FF               	retlw	255
  1251  182F  34BE               	retlw	190
  1252  1830  3490               	retlw	144
  1253  1831  34E1               	retlw	225
  1254  1832  34A9               	retlw	169
  1255  1833  343E               	retlw	62
  1256  1834  34EC               	retlw	236
  1257  1835  3482               	retlw	130
  1258  1836  3476               	retlw	118
  1259  1837  34BE               	retlw	190
  1260  1838  3482               	retlw	130
  1261  1839  34AD               	retlw	173
  1262  183A  342B               	retlw	43
  1263  183B  343E               	retlw	62
  1264  183C  340E               	retlw	14
  1265  183D  343C               	retlw	60
  1266  183E  34C3               	retlw	195
  1267  183F  34BD               	retlw	189
  1268  1840  3487               	retlw	135
  1269  1841  34D1               	retlw	209
  1270  1842  3413               	retlw	19
  1271  1843  343D               	retlw	61
  1272  1844  3441               	retlw	65
  1273  1845  3478               	retlw	120
  1274  1846  34D3               	retlw	211
  1275  1847  34BB               	retlw	187
  1276  1848                     __end_oflog@coeff:
  1277  1848                     _BETA:
  1278                           
  1279                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1280  1848  3400               	retlw	0
  1281  1849  3460               	retlw	96
  1282  184A  3478               	retlw	120
  1283  184B  3445               	retlw	69
  1284  184C                     __end_of_BETA:
  1285  184C                     _BALANCE_RESISTOR:
  1286                           
  1287                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1288  184C  3400               	retlw	0
  1289  184D  3440               	retlw	64
  1290  184E  341C               	retlw	28
  1291  184F  3446               	retlw	70
  1292  1850                     __end_of_BALANCE_RESISTOR:
  1293  0019                     _TXREG	set	25
  1294  0018                     _RCSTAbits	set	24
  1295  001A                     _RCREG	set	26
  1296  000E                     _TMR1L	set	14
  1297  000F                     _TMR1H	set	15
  1298  000C                     _PIR1bits	set	12
  1299  001E                     _ADRESH	set	30
  1300  001F                     _ADCON0bits	set	31
  1301  0005                     _PORTAbits	set	5
  1302  0007                     _PORTCbits	set	7
  1303  0010                     _T1CON	set	16
  1304  0006                     _PORTBbits	set	6
  1305  0009                     _PORTE	set	9
  1306  0007                     _PORTC	set	7
  1307  0005                     _PORTA	set	5
  1308  0013                     _SSPBUF	set	19
  1309  000B                     _INTCONbits	set	11
  1310  0014                     _SSPCON	set	20
  1311  0006                     _PORTB	set	6
  1312  00C4                     _CREN	set	196
  1313  0081                     _TMR1CS	set	129
  1314  0085                     _T1CKPS1	set	133
  1315  0084                     _T1CKPS0	set	132
  1316  008C                     _PIE1bits	set	140
  1317  0099                     _SPBRG	set	153
  1318  0098                     _TXSTAbits	set	152
  1319  009E                     _ADRESL	set	158
  1320  009F                     _ADCON1bits	set	159
  1321  009F                     _ADCON1	set	159
  1322  0095                     _WPUB	set	149
  1323  0081                     _OPTION_REGbits	set	129
  1324  0089                     _TRISE	set	137
  1325  0087                     _TRISC	set	135
  1326  0086                     _TRISB	set	134
  1327  0085                     _TRISA	set	133
  1328  008F                     _OSCCONbits	set	143
  1329  0091                     _SSPCON2bits	set	145
  1330  0094                     _SSPSTAT	set	148
  1331  0093                     _SSPADD	set	147
  1332  0091                     _SSPCON2	set	145
  1333  043F                     _TRISC7	set	1087
  1334  043E                     _TRISC6	set	1086
  1335  0460                     _TMR1IE	set	1120
  1336  043C                     _TRISC4	set	1084
  1337  043B                     _TRISC3	set	1083
  1338  010C                     _EEDATA	set	268
  1339  010D                     _EEADR	set	269
  1340  0187                     _BAUDCTLbits	set	391
  1341  018D                     _EECON2	set	397
  1342  018C                     _EECON1bits	set	396
  1343  0189                     _ANSELH	set	393
  1344  0188                     _ANSEL	set	392
  1345  1850                     STR_1:
  1346  1850  344C               	retlw	76	;'L'
  1347  1851  344A               	retlw	74	;'J'
  1348  1852  3442               	retlw	66	;'B'
  1349  1853  342D               	retlw	45	;'-'
  1350  1854  3431               	retlw	49	;'1'
  1351  1855  3430               	retlw	48	;'0'
  1352  1856  3435               	retlw	53	;'5'
  1353  1857  344B               	retlw	75	;'K'
  1354  1858  3400               	retlw	0
  1355  1859                     STR_2:
  1356  1859  344F               	retlw	79	;'O'
  1357  185A  344B               	retlw	75	;'K'
  1358  185B  3400               	retlw	0
  1359                           
  1360                           	psect	cinit
  1361  0015                     start_initialization:	
  1362                           ; #config settings
  1363                           
  1364  0015                     __initialization:
  1365                           
  1366                           ; Clear objects allocated to COMMON
  1367  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1368  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1369  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1370  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1371  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1372  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1373                           
  1374                           ; Clear objects allocated to BANK0
  1375  001B  1283               	bcf	3,5	;RP0=0, select bank0
  1376  001C  1303               	bcf	3,6	;RP1=0, select bank0
  1377  001D  01EF               	clrf	__pbssBANK0& (0+127)
  1378                           
  1379                           ; Clear objects allocated to BANK1
  1380  001E  1383               	bcf	3,7	;select IRP bank0
  1381  001F  30BD               	movlw	low __pbssBANK1
  1382  0020  0084               	movwf	4
  1383  0021  30D8               	movlw	low (__pbssBANK1+27)
  1384  0022  160A  158A  21B6  120A  118A  	fcall	clear_ram0
  1385                           
  1386                           ; Clear objects allocated to BANK3
  1387  0027  1783               	bsf	3,7	;select IRP bank2
  1388  0028  3090               	movlw	low __pbssBANK3
  1389  0029  0084               	movwf	4
  1390  002A  30EB               	movlw	low (__pbssBANK3+91)
  1391  002B  160A  158A  21B6  120A  118A  	fcall	clear_ram0
  1392                           
  1393                           ; Clear objects allocated to BANK2
  1394  0030  3010               	movlw	low __pbssBANK2
  1395  0031  0084               	movwf	4
  1396  0032  3044               	movlw	low (__pbssBANK2+52)
  1397  0033  160A  158A  21B6   	fcall	clear_ram0
  1398  0036                     end_of_initialization:	
  1399                           ;End of C runtime variable initialization code
  1400                           
  1401  0036                     __end_of__initialization:
  1402  0036  0183               	clrf	3
  1403  0037  160A  118A  2A9F   	ljmp	_main	;jump to C main() function
  1404                           
  1405                           	psect	bssCOMMON
  1406  0078                     __pbssCOMMON:
  1407  0078                     _Delay_Led_Tmr0:
  1408  0078                     	ds	2
  1409  007A                     _minuto:
  1410  007A                     	ds	1
  1411  007B                     _statuspower_memo:
  1412  007B                     	ds	1
  1413  007C                     _hora:
  1414  007C                     	ds	1
  1415  007D                     _segundo:
  1416  007D                     	ds	1
  1417                           
  1418                           	psect	bssBANK0
  1419  006F                     __pbssBANK0:
  1420  006F                     _generic_status:
  1421  006F                     	ds	1
  1422                           
  1423                           	psect	bssBANK1
  1424  00BD                     __pbssBANK1:
  1425  00BD                     _Umidade1:
  1426  00BD                     	ds	4
  1427  00C1                     _Temperatura0:
  1428  00C1                     	ds	4
  1429  00C5                     _errno:
  1430  00C5                     	ds	2
  1431  00C7                     _tempodecorrido:
  1432  00C7                     	ds	2
  1433  00C9                     _count:
  1434  00C9                     	ds	2
  1435  00CB                     _header:
  1436  00CB                     	ds	2
  1437  00CD                     _milisegundo:
  1438  00CD                     	ds	2
  1439  00CF                     _Delay_Led_Usart:
  1440  00CF                     	ds	2
  1441  00D1                     _Delay_Led_Memory:
  1442  00D1                     	ds	2
  1443  00D3                     _pointer:
  1444  00D3                     	ds	1
  1445  00D4                     _destino:
  1446  00D4                     	ds	1
  1447  00D5                     _Board_Number:
  1448  00D5                     	ds	1
  1449  00D6                     _canal:
  1450  00D6                     	ds	1
  1451  00D7                     _statuspower:
  1452  00D7                     	ds	1
  1453                           
  1454                           	psect	bssBANK3
  1455  0190                     __pbssBANK3:
  1456  0190                     _usart_protocol:
  1457  0190                     	ds	58
  1458  01CA                     _buffer:
  1459  01CA                     	ds	33
  1460                           
  1461                           	psect	bssBANK2
  1462  0110                     __pbssBANK2:
  1463  0110                     _usart_buffer:
  1464  0110                     	ds	52
  1465                           
  1466                           	psect	clrtext
  1467  19B6                     clear_ram0:	
  1468                           ;	Called with FSR containing the base address, and
  1469                           ;	W with the last address+1
  1470                           
  1471  19B6  0064               	clrwdt	;clear the watchdog before getting into this loop
  1472  19B7                     clrloop0:
  1473  19B7  0180               	clrf	0	;clear RAM location pointed to by FSR
  1474  19B8  0A84               	incf	4,f	;increment pointer
  1475  19B9  0604               	xorwf	4,w	;XOR with final address
  1476  19BA  1903               	btfsc	3,2	;have we reached the end yet?
  1477  19BB  3400               	retlw	0	;all done for this memory range, return
  1478  19BC  0604               	xorwf	4,w	;XOR again to restore value
  1479  19BD  29B7               	goto	clrloop0	;do the next byte
  1480                           
  1481                           	psect	cstackBANK1
  1482  00A0                     __pcstackBANK1:
  1483  00A0                     ___fladd@signs:
  1484  00A0                     Decodify_Command@dados:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487                           
  1488                           ; 2 bytes @ 0x0
  1489  00A0                     	ds	1
  1490  00A1                     ___fladd@aexp:
  1491                           
  1492                           ; 1 bytes @ 0x1
  1493  00A1                     	ds	1
  1494  00A2                     Decodify_Command@add:
  1495  00A2                     ___fladd@bexp:	
  1496                           ; 1 bytes @ 0x2
  1497                           
  1498                           
  1499                           ; 1 bytes @ 0x2
  1500  00A2                     	ds	1
  1501  00A3                     Decodify_Command@sizedata:
  1502  00A3                     ___fladd@grs:	
  1503                           ; 1 bytes @ 0x3
  1504                           
  1505                           
  1506                           ; 1 bytes @ 0x3
  1507  00A3                     	ds	1
  1508  00A4                     ?___flsub:
  1509  00A4                     Decodify_Command@tempint:	
  1510                           ; 4 bytes @ 0x4
  1511                           
  1512  00A4                     ___flsub@a:	
  1513                           ; 2 bytes @ 0x4
  1514                           
  1515                           
  1516                           ; 4 bytes @ 0x4
  1517  00A4                     	ds	2
  1518  00A6                     Decodify_Command@OutPut:
  1519                           
  1520                           ; 4 bytes @ 0x6
  1521  00A6                     	ds	2
  1522  00A8                     ___flsub@b:
  1523                           
  1524                           ; 4 bytes @ 0x8
  1525  00A8                     	ds	2
  1526  00AA                     Decodify_Command@tempchar:
  1527                           
  1528                           ; 1 bytes @ 0xA
  1529  00AA                     	ds	1
  1530  00AB                     Decodify_Command@add_24LCxxxx:
  1531                           
  1532                           ; 4 bytes @ 0xB
  1533  00AB                     	ds	1
  1534  00AC                     ??_mediaLeituraPt100Umidadde:
  1535                           
  1536                           ; 1 bytes @ 0xC
  1537  00AC                     	ds	4
  1538  00B0                     _mediaLeituraPt100Umidadde$2363:
  1539                           
  1540                           ; 4 bytes @ 0x10
  1541  00B0                     	ds	4
  1542  00B4                     mediaLeituraPt100Umidadde@canal:
  1543                           
  1544                           ; 1 bytes @ 0x14
  1545  00B4                     	ds	1
  1546  00B5                     mediaLeituraPt100Umidadde@Temp:
  1547                           
  1548                           ; 4 bytes @ 0x15
  1549  00B5                     	ds	4
  1550  00B9                     mediaLeituraPt100Umidadde@i:
  1551                           
  1552                           ; 1 bytes @ 0x19
  1553  00B9                     	ds	1
  1554  00BA                     ??_main:
  1555                           
  1556                           ; 1 bytes @ 0x1A
  1557  00BA                     	ds	3
  1558                           
  1559                           	psect	cstackCOMMON
  1560  0070                     __pcstackCOMMON:
  1561  0070                     ?_I2C_Master_Start:
  1562  0070                     ?_I2C_Master_Stop:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_I2C_Master_RepeatedStart:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_USART_putc:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_ADC_init:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?_mediaLeituraPt100Umidadde:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_Decodify_Command:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_USART_to_Protocol:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?_Send_To_MB:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ?_Send_Reply_OK:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0070                     ?_EEPROM_Read_Byte:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0070                     ?_Package_Usart_is_for_me:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0070                     ?_I2C_Master_Wait:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0070                     ?_main:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0070                     ?_isr:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ??_isr:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607                           
  1608                           ; 1 bytes @ 0x0
  1609  0070                     	ds	6
  1610  0076                     isr@tempo:
  1611                           
  1612                           ; 2 bytes @ 0x6
  1613  0076                     	ds	2
  1614                           
  1615                           	psect	cstackBANK0
  1616  0020                     __pcstackBANK0:
  1617  0020                     ?___flge:
  1618  0020                     ?_my_delay_ms_WDT:	
  1619                           ; 1 bit 
  1620                           
  1621  0020                     ??_USART_putc:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0020                     ??_ADC_init:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0020                     ?_USART_init:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0020                     ??_USART_to_Protocol:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0020                     ?_strcpy:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0020                     ?_EEPROM_Write_Byte:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0020                     ??_EEPROM_Read_Byte:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0020                     ?_my_delay_ms:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0020                     ??_Package_Usart_is_for_me:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648  0020                     ?_PROCULUS_Delay:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0020                     ??_I2C_Master_Wait:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654  0020                     ?_strlen:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0020                     ?_captura:	
  1658                           ; 2 bytes @ 0x0
  1659                           
  1660  0020                     ?__Umul8_16:	
  1661                           ; 2 bytes @ 0x0
  1662                           
  1663  0020                     ?___lwdiv:	
  1664                           ; 2 bytes @ 0x0
  1665                           
  1666  0020                     ?___lldiv:	
  1667                           ; 2 bytes @ 0x0
  1668                           
  1669  0020                     ?___xxtofl:	
  1670                           ; 4 bytes @ 0x0
  1671                           
  1672  0020                     EEPROM_Write_Byte@dado:	
  1673                           ; 4 bytes @ 0x0
  1674                           
  1675  0020                     Package_Usart_is_for_me@retorno:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0020                     USART_putc@value:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0020                     __Umul8_16@multiplicand:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0020                     strcpy@from:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0020                     PROCULUS_Delay@tempo_ms:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690  0020                     ___lwdiv@divisor:	
  1691                           ; 2 bytes @ 0x0
  1692                           
  1693  0020                     my_delay_ms@time:	
  1694                           ; 2 bytes @ 0x0
  1695                           
  1696  0020                     my_delay_ms_WDT@time:	
  1697                           ; 4 bytes @ 0x0
  1698                           
  1699  0020                     USART_init@baudrate:	
  1700                           ; 4 bytes @ 0x0
  1701                           
  1702  0020                     ___lldiv@divisor:	
  1703                           ; 4 bytes @ 0x0
  1704                           
  1705  0020                     ___flge@ff1:	
  1706                           ; 4 bytes @ 0x0
  1707                           
  1708  0020                     ___xxtofl@val:	
  1709                           ; 4 bytes @ 0x0
  1710                           
  1711                           
  1712                           ; 4 bytes @ 0x0
  1713  0020                     	ds	1
  1714  0021                     ??_strcpy:
  1715  0021                     ??_Send_To_MB:	
  1716                           ; 1 bytes @ 0x1
  1717                           
  1718  0021                     ?_USART_put_string:	
  1719                           ; 1 bytes @ 0x1
  1720                           
  1721  0021                     ??_EEPROM_Write_Byte:	
  1722                           ; 1 bytes @ 0x1
  1723                           
  1724  0021                     Send_To_MB@size:	
  1725                           ; 1 bytes @ 0x1
  1726                           
  1727  0021                     USART_put_string@vetor:	
  1728                           ; 1 bytes @ 0x1
  1729                           
  1730                           
  1731                           ; 2 bytes @ 0x1
  1732  0021                     	ds	1
  1733  0022                     ??_strlen:
  1734  0022                     ??_captura:	
  1735                           ; 1 bytes @ 0x2
  1736                           
  1737  0022                     ??_PROCULUS_Delay:	
  1738                           ; 1 bytes @ 0x2
  1739                           
  1740  0022                     ??__Umul8_16:	
  1741                           ; 1 bytes @ 0x2
  1742                           
  1743  0022                     I2C_Master_Wait@tempo:	
  1744                           ; 1 bytes @ 0x2
  1745                           
  1746  0022                     EEPROM_Read_Byte@addr:	
  1747                           ; 1 bytes @ 0x2
  1748                           
  1749  0022                     strcpy@to:	
  1750                           ; 1 bytes @ 0x2
  1751                           
  1752  0022                     USART_to_Protocol@i:	
  1753                           ; 1 bytes @ 0x2
  1754                           
  1755  0022                     ___lwdiv@dividend:	
  1756                           ; 2 bytes @ 0x2
  1757                           
  1758                           
  1759                           ; 2 bytes @ 0x2
  1760  0022                     	ds	1
  1761  0023                     ??_I2C_Master_Start:
  1762  0023                     ?_I2C_Master_Write:	
  1763                           ; 1 bytes @ 0x3
  1764                           
  1765  0023                     ??_I2C_Master_Stop:	
  1766                           ; 1 bytes @ 0x3
  1767                           
  1768  0023                     ??_I2C_Master_RepeatedStart:	
  1769                           ; 1 bytes @ 0x3
  1770                           
  1771  0023                     ??_USART_put_string:	
  1772                           ; 1 bytes @ 0x3
  1773                           
  1774  0023                     ?_EEPROM_Read_String:	
  1775                           ; 1 bytes @ 0x3
  1776                           
  1777  0023                     ?_I2C_Master_Read:	
  1778                           ; 1 bytes @ 0x3
  1779                           
  1780  0023                     ?_EEPROM_Read_Integer:	
  1781                           ; 2 bytes @ 0x3
  1782                           
  1783  0023                     EEPROM_Write_Byte@addr:	
  1784                           ; 2 bytes @ 0x3
  1785                           
  1786  0023                     EEPROM_Read_String@dado:	
  1787                           ; 1 bytes @ 0x3
  1788                           
  1789  0023                     strcpy@cp:	
  1790                           ; 1 bytes @ 0x3
  1791                           
  1792  0023                     strlen@cp:	
  1793                           ; 1 bytes @ 0x3
  1794                           
  1795  0023                     I2C_Master_Write@d:	
  1796                           ; 1 bytes @ 0x3
  1797                           
  1798  0023                     I2C_Master_Read@a:	
  1799                           ; 2 bytes @ 0x3
  1800                           
  1801  0023                     USART_put_string@ptr:	
  1802                           ; 2 bytes @ 0x3
  1803                           
  1804                           
  1805                           ; 2 bytes @ 0x3
  1806  0023                     	ds	1
  1807  0024                     ??_my_delay_ms_WDT:
  1808  0024                     ??_USART_init:	
  1809                           ; 1 bytes @ 0x4
  1810                           
  1811  0024                     ??_EEPROM_Read_String:	
  1812                           ; 1 bytes @ 0x4
  1813                           
  1814  0024                     ??_my_delay_ms:	
  1815                           ; 1 bytes @ 0x4
  1816                           
  1817  0024                     ??___lwdiv:	
  1818                           ; 1 bytes @ 0x4
  1819                           
  1820  0024                     ??___xxtofl:	
  1821                           ; 1 bytes @ 0x4
  1822                           
  1823  0024                     EEPROM_Write_Byte@last_GIE:	
  1824                           ; 1 bytes @ 0x4
  1825                           
  1826  0024                     USART_to_Protocol@usart_protocol:	
  1827                           ; 1 bytes @ 0x4
  1828                           
  1829  0024                     strlen@s:	
  1830                           ; 1 bytes @ 0x4
  1831                           
  1832  0024                     PROCULUS_Delay@i:	
  1833                           ; 1 bytes @ 0x4
  1834                           
  1835  0024                     __Umul8_16@product:	
  1836                           ; 2 bytes @ 0x4
  1837                           
  1838  0024                     ___lldiv@dividend:	
  1839                           ; 2 bytes @ 0x4
  1840                           
  1841  0024                     ___flge@ff2:	
  1842                           ; 4 bytes @ 0x4
  1843                           
  1844                           
  1845                           ; 4 bytes @ 0x4
  1846  0024                     	ds	1
  1847  0025                     ??_I2C_Master_Write:
  1848  0025                     ??_I2C_Master_Read:	
  1849                           ; 1 bytes @ 0x5
  1850                           
  1851  0025                     ??_EEPROM_Read_Integer:	
  1852                           ; 1 bytes @ 0x5
  1853                           
  1854  0025                     ?_EEPROM_Write_Integer:	
  1855                           ; 1 bytes @ 0x5
  1856                           
  1857  0025                     ??_Send_Reply_OK:	
  1858                           ; 1 bytes @ 0x5
  1859                           
  1860  0025                     ?_EEPROM_Write_String:	
  1861                           ; 1 bytes @ 0x5
  1862                           
  1863  0025                     EEPROM_Write_String@dado:	
  1864                           ; 1 bytes @ 0x5
  1865                           
  1866  0025                     EEPROM_Read_String@addr:	
  1867                           ; 1 bytes @ 0x5
  1868                           
  1869  0025                     USART_init@i:	
  1870                           ; 1 bytes @ 0x5
  1871                           
  1872  0025                     EEPROM_Write_Integer@dado:	
  1873                           ; 1 bytes @ 0x5
  1874                           
  1875  0025                     ___lwdiv@quotient:	
  1876                           ; 2 bytes @ 0x5
  1877                           
  1878                           
  1879                           ; 2 bytes @ 0x5
  1880  0025                     	ds	1
  1881  0026                     ??_EEPROM_Write_String:
  1882  0026                     EEPROM_Read_Integer@addr:	
  1883                           ; 1 bytes @ 0x6
  1884                           
  1885  0026                     EEPROM_Read_String@c:	
  1886                           ; 1 bytes @ 0x6
  1887                           
  1888  0026                     __Umul8_16@word_mpld:	
  1889                           ; 1 bytes @ 0x6
  1890                           
  1891  0026                     my_delay_ms@i:	
  1892                           ; 2 bytes @ 0x6
  1893                           
  1894  0026                     my_delay_ms_WDT@i:	
  1895                           ; 4 bytes @ 0x6
  1896                           
  1897                           
  1898                           ; 4 bytes @ 0x6
  1899  0026                     	ds	1
  1900  0027                     ??_EEPROM_Write_Integer:
  1901  0027                     EEPROM_Read_Integer@ptr:	
  1902                           ; 1 bytes @ 0x7
  1903                           
  1904  0027                     EEPROM_Write_String@addr:	
  1905                           ; 1 bytes @ 0x7
  1906                           
  1907  0027                     ___lwdiv@counter:	
  1908                           ; 1 bytes @ 0x7
  1909                           
  1910  0027                     I2C_Master_Read@temp:	
  1911                           ; 1 bytes @ 0x7
  1912                           
  1913                           
  1914                           ; 2 bytes @ 0x7
  1915  0027                     	ds	1
  1916  0028                     ??___lldiv:
  1917  0028                     ??___flge:	
  1918                           ; 1 bytes @ 0x8
  1919                           
  1920  0028                     __Umul8_16@multiplier:	
  1921                           ; 1 bytes @ 0x8
  1922                           
  1923  0028                     ___xxtofl@sign:	
  1924                           ; 1 bytes @ 0x8
  1925                           
  1926  0028                     EEPROM_Read_Integer@result:	
  1927                           ; 1 bytes @ 0x8
  1928                           
  1929                           
  1930                           ; 2 bytes @ 0x8
  1931  0028                     	ds	1
  1932  0029                     ?_EEPROM_24C1025_Read_Buffer_USART:
  1933  0029                     ?_EEPROM_24C1025_Read_Str:	
  1934                           ; 1 bytes @ 0x9
  1935                           
  1936  0029                     ?___flmul:	
  1937                           ; 1 bytes @ 0x9
  1938                           
  1939  0029                     EEPROM_Write_Integer@ptr:	
  1940                           ; 4 bytes @ 0x9
  1941                           
  1942  0029                     ___xxtofl@exp:	
  1943                           ; 1 bytes @ 0x9
  1944                           
  1945  0029                     EEPROM_24C1025_Read_Buffer_USART@mem_add:	
  1946                           ; 1 bytes @ 0x9
  1947                           
  1948  0029                     EEPROM_24C1025_Read_Str@mem_add:	
  1949                           ; 4 bytes @ 0x9
  1950                           
  1951  0029                     ___lldiv@quotient:	
  1952                           ; 4 bytes @ 0x9
  1953                           
  1954  0029                     ___flmul@b:	
  1955                           ; 4 bytes @ 0x9
  1956                           
  1957                           
  1958                           ; 4 bytes @ 0x9
  1959  0029                     	ds	1
  1960  002A                     ?_EEPROM_24C1025_Write_Buffer:
  1961  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  1962                           ; 1 bytes @ 0xA
  1963                           
  1964  002A                     ?_EEPROM_24C1025_Write_Str:	
  1965                           ; 1 bytes @ 0xA
  1966                           
  1967  002A                     EEPROM_Write_Integer@addr:	
  1968                           ; 1 bytes @ 0xA
  1969                           
  1970  002A                     EEPROM_Read_Integer@i:	
  1971                           ; 1 bytes @ 0xA
  1972                           
  1973  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1974                           ; 1 bytes @ 0xA
  1975                           
  1976  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1977                           ; 4 bytes @ 0xA
  1978                           
  1979  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  1980                           ; 4 bytes @ 0xA
  1981                           
  1982  002A                     ___xxtofl@arg:	
  1983                           ; 4 bytes @ 0xA
  1984                           
  1985                           
  1986                           ; 4 bytes @ 0xA
  1987  002A                     	ds	1
  1988  002B                     EEPROM_Write_Integer@i:
  1989                           
  1990                           ; 1 bytes @ 0xB
  1991  002B                     	ds	2
  1992  002D                     EEPROM_24C1025_Read_Buffer_USART@sizedata:
  1993  002D                     EEPROM_24C1025_Read_Str@buffer:	
  1994                           ; 1 bytes @ 0xD
  1995                           
  1996  002D                     ___lldiv@counter:	
  1997                           ; 1 bytes @ 0xD
  1998                           
  1999  002D                     ___flmul@a:	
  2000                           ; 1 bytes @ 0xD
  2001                           
  2002                           
  2003                           ; 4 bytes @ 0xD
  2004  002D                     	ds	1
  2005  002E                     ??_EEPROM_24C1025_Read_Str:
  2006  002E                     ?_I2C_Master_Init:	
  2007                           ; 1 bytes @ 0xE
  2008                           
  2009  002E                     ?_ADC_Media_10bits:	
  2010                           ; 1 bytes @ 0xE
  2011                           
  2012  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  2013                           ; 4 bytes @ 0xE
  2014                           
  2015  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2016                           ; 1 bytes @ 0xE
  2017                           
  2018  002E                     EEPROM_24C1025_Read_Buffer_USART@data:	
  2019                           ; 1 bytes @ 0xE
  2020                           
  2021  002E                     EEPROM_24C1025_Write_Str@data:	
  2022                           ; 1 bytes @ 0xE
  2023                           
  2024  002E                     I2C_Master_Init@c:	
  2025                           ; 1 bytes @ 0xE
  2026                           
  2027                           
  2028                           ; 4 bytes @ 0xE
  2029  002E                     	ds	1
  2030  002F                     ??_EEPROM_24C1025_Read_Buffer_USART:
  2031  002F                     ??_EEPROM_24C1025_Write_Str:	
  2032                           ; 1 bytes @ 0xF
  2033                           
  2034  002F                     EEPROM_24C1025_Read_Buffer@data:	
  2035                           ; 1 bytes @ 0xF
  2036                           
  2037  002F                     EEPROM_24C1025_Write_Buffer@data:	
  2038                           ; 1 bytes @ 0xF
  2039                           
  2040                           
  2041                           ; 2 bytes @ 0xF
  2042  002F                     	ds	1
  2043  0030                     ??_EEPROM_24C1025_Read_Buffer:
  2044  0030                     EEPROM_24C1025_Read_Str@cnt:	
  2045                           ; 1 bytes @ 0x10
  2046                           
  2047                           
  2048                           ; 1 bytes @ 0x10
  2049  0030                     	ds	1
  2050  0031                     ??_EEPROM_24C1025_Write_Buffer:
  2051  0031                     ??___flmul:	
  2052                           ; 1 bytes @ 0x11
  2053                           
  2054  0031                     EEPROM_24C1025_Read_Buffer_USART@cnt_117:	
  2055                           ; 1 bytes @ 0x11
  2056                           
  2057  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  2058                           ; 1 bytes @ 0x11
  2059                           
  2060  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  2061                           ; 1 bytes @ 0x11
  2062                           
  2063                           
  2064                           ; 1 bytes @ 0x11
  2065  0031                     	ds	1
  2066  0032                     ??_ADC_Media_10bits:
  2067  0032                     ??_I2C_Master_Init:	
  2068                           ; 1 bytes @ 0x12
  2069                           
  2070  0032                     EEPROM_24C1025_Read_Buffer@cnt_108:	
  2071                           ; 1 bytes @ 0x12
  2072                           
  2073  0032                     EEPROM_24C1025_Read_Buffer_USART@chip_add:	
  2074                           ; 1 bytes @ 0x12
  2075                           
  2076  0032                     EEPROM_24C1025_Write_Str@range:	
  2077                           ; 1 bytes @ 0x12
  2078                           
  2079  0032                     EEPROM_24C1025_Read_Str@range:	
  2080                           ; 1 bytes @ 0x12
  2081                           
  2082                           
  2083                           ; 1 bytes @ 0x12
  2084  0032                     	ds	1
  2085  0033                     EEPROM_24C1025_Write_Buffer@count:
  2086  0033                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2087                           ; 1 bytes @ 0x13
  2088                           
  2089  0033                     EEPROM_24C1025_Read_Buffer_USART@range:	
  2090                           ; 1 bytes @ 0x13
  2091                           
  2092  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2093                           ; 1 bytes @ 0x13
  2094                           
  2095  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2096                           ; 1 bytes @ 0x13
  2097                           
  2098  0033                     ADC_Media_10bits@canal:	
  2099                           ; 1 bytes @ 0x13
  2100                           
  2101                           
  2102                           ; 1 bytes @ 0x13
  2103  0033                     	ds	1
  2104  0034                     EEPROM_24C1025_Write_Buffer@chip_add:
  2105  0034                     EEPROM_24C1025_Read_Buffer@range:	
  2106                           ; 1 bytes @ 0x14
  2107                           
  2108  0034                     EEPROM_24C1025_Read_Buffer_USART@ctrl:	
  2109                           ; 1 bytes @ 0x14
  2110                           
  2111  0034                     ADC_Media_10bits@value:	
  2112                           ; 1 bytes @ 0x14
  2113                           
  2114                           
  2115                           ; 2 bytes @ 0x14
  2116  0034                     	ds	1
  2117  0035                     EEPROM_24C1025_Write_Buffer@range:
  2118  0035                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2119                           ; 1 bytes @ 0x15
  2120                           
  2121                           
  2122                           ; 1 bytes @ 0x15
  2123  0035                     	ds	1
  2124  0036                     ?_EEPROM_24C1025_Read_Byte:
  2125  0036                     ?_EEPROM_24C1025_Read_Int:	
  2126                           ; 1 bytes @ 0x16
  2127                           
  2128  0036                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2129                           ; 2 bytes @ 0x16
  2130                           
  2131  0036                     ADC_Media_10bits@i:	
  2132                           ; 1 bytes @ 0x16
  2133                           
  2134  0036                     ___flmul@sign:	
  2135                           ; 1 bytes @ 0x16
  2136                           
  2137  0036                     EEPROM_24C1025_Read_Byte@mem_add:	
  2138                           ; 1 bytes @ 0x16
  2139                           
  2140  0036                     EEPROM_24C1025_Read_Int@mem_add:	
  2141                           ; 4 bytes @ 0x16
  2142                           
  2143                           
  2144                           ; 4 bytes @ 0x16
  2145  0036                     	ds	1
  2146  0037                     ?_EEPROM_24C1025_Write_Byte:
  2147  0037                     ___flmul@aexp:	
  2148                           ; 1 bytes @ 0x17
  2149                           
  2150  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2151                           ; 1 bytes @ 0x17
  2152                           
  2153                           
  2154                           ; 4 bytes @ 0x17
  2155  0037                     	ds	1
  2156  0038                     ___flmul@grs:
  2157                           
  2158                           ; 4 bytes @ 0x18
  2159  0038                     	ds	2
  2160  003A                     ??_EEPROM_24C1025_Read_Byte:
  2161  003A                     ??_EEPROM_24C1025_Read_Int:	
  2162                           ; 1 bytes @ 0x1A
  2163                           
  2164                           
  2165                           ; 1 bytes @ 0x1A
  2166  003A                     	ds	1
  2167  003B                     EEPROM_24C1025_Write_Byte@data:
  2168  003B                     EEPROM_24C1025_Read_Byte@chip_add:	
  2169                           ; 1 bytes @ 0x1B
  2170                           
  2171                           
  2172                           ; 1 bytes @ 0x1B
  2173  003B                     	ds	1
  2174  003C                     ??_EEPROM_24C1025_Write_Byte:
  2175  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2176                           ; 1 bytes @ 0x1C
  2177                           
  2178  003C                     EEPROM_24C1025_Read_Byte@data:	
  2179                           ; 1 bytes @ 0x1C
  2180                           
  2181  003C                     EEPROM_24C1025_Read_Int@chip_add:	
  2182                           ; 1 bytes @ 0x1C
  2183                           
  2184  003C                     ___flmul@bexp:	
  2185                           ; 1 bytes @ 0x1C
  2186                           
  2187                           
  2188                           ; 1 bytes @ 0x1C
  2189  003C                     	ds	1
  2190  003D                     EEPROM_24C1025_Read_Int@data:
  2191  003D                     ___flmul@prod:	
  2192                           ; 2 bytes @ 0x1D
  2193                           
  2194                           
  2195                           ; 4 bytes @ 0x1D
  2196  003D                     	ds	4
  2197  0041                     ___flmul@temp:
  2198                           
  2199                           ; 2 bytes @ 0x21
  2200  0041                     	ds	2
  2201  0043                     ?___fltol:
  2202  0043                     ?___fldiv:	
  2203                           ; 4 bytes @ 0x23
  2204                           
  2205  0043                     ___fltol@f1:	
  2206                           ; 4 bytes @ 0x23
  2207                           
  2208  0043                     ___fldiv@a:	
  2209                           ; 4 bytes @ 0x23
  2210                           
  2211                           
  2212                           ; 4 bytes @ 0x23
  2213  0043                     	ds	4
  2214  0047                     ??___fltol:
  2215  0047                     ___fldiv@b:	
  2216                           ; 1 bytes @ 0x27
  2217                           
  2218                           
  2219                           ; 4 bytes @ 0x27
  2220  0047                     	ds	4
  2221  004B                     ??___fldiv:
  2222                           
  2223                           ; 1 bytes @ 0x2B
  2224  004B                     	ds	1
  2225  004C                     ___fltol@sign1:
  2226                           
  2227                           ; 1 bytes @ 0x2C
  2228  004C                     	ds	1
  2229  004D                     ___fltol@exp1:
  2230                           
  2231                           ; 1 bytes @ 0x2D
  2232  004D                     	ds	1
  2233  004E                     ?_USART_put_int:
  2234  004E                     ?_EEPROM_24C1025_Write_Int:	
  2235                           ; 1 bytes @ 0x2E
  2236                           
  2237  004E                     USART_put_int@value:	
  2238                           ; 1 bytes @ 0x2E
  2239                           
  2240  004E                     EEPROM_24C1025_Write_Int@mem_add:	
  2241                           ; 2 bytes @ 0x2E
  2242                           
  2243                           
  2244                           ; 4 bytes @ 0x2E
  2245  004E                     	ds	2
  2246  0050                     ??_USART_put_int:
  2247  0050                     ___fldiv@rem:	
  2248                           ; 1 bytes @ 0x30
  2249                           
  2250                           
  2251                           ; 4 bytes @ 0x30
  2252  0050                     	ds	1
  2253  0051                     USART_put_int@dado:
  2254                           
  2255                           ; 1 bytes @ 0x31
  2256  0051                     	ds	1
  2257  0052                     ?_PROCULUS_Control_Register_Write:
  2258  0052                     ?_PROCULUS_VP_Write:	
  2259                           ; 1 bytes @ 0x32
  2260                           
  2261  0052                     PROCULUS_Control_Register_Write@size:	
  2262                           ; 1 bytes @ 0x32
  2263                           
  2264  0052                     EEPROM_24C1025_Write_Int@data:	
  2265                           ; 1 bytes @ 0x32
  2266                           
  2267  0052                     PROCULUS_VP_Write@vp:	
  2268                           ; 2 bytes @ 0x32
  2269                           
  2270                           
  2271                           ; 2 bytes @ 0x32
  2272  0052                     	ds	1
  2273  0053                     ??_PROCULUS_Control_Register_Write:
  2274                           
  2275                           ; 1 bytes @ 0x33
  2276  0053                     	ds	1
  2277  0054                     ??_EEPROM_24C1025_Write_Int:
  2278  0054                     PROCULUS_Control_Register_Write@vetor:	
  2279                           ; 1 bytes @ 0x34
  2280                           
  2281  0054                     ___fldiv@sign:	
  2282                           ; 1 bytes @ 0x34
  2283                           
  2284  0054                     PROCULUS_VP_Write@vetor:	
  2285                           ; 1 bytes @ 0x34
  2286                           
  2287                           
  2288                           ; 2 bytes @ 0x34
  2289  0054                     	ds	1
  2290  0055                     EEPROM_24C1025_Write_Int@chip_add:
  2291  0055                     PROCULUS_Control_Register_Write@i:	
  2292                           ; 1 bytes @ 0x35
  2293                           
  2294  0055                     ___fldiv@new_exp:	
  2295                           ; 1 bytes @ 0x35
  2296                           
  2297                           
  2298                           ; 2 bytes @ 0x35
  2299  0055                     	ds	1
  2300  0056                     ?_PROCULUS_Show_Screen:
  2301  0056                     ?_PROCULUS_Buzzer:	
  2302                           ; 1 bytes @ 0x36
  2303                           
  2304  0056                     PROCULUS_VP_Write@size:	
  2305                           ; 1 bytes @ 0x36
  2306                           
  2307  0056                     EEPROM_24C1025_Write_Int@local:	
  2308                           ; 1 bytes @ 0x36
  2309                           
  2310  0056                     PROCULUS_Buzzer@time_ms_x_10:	
  2311                           ; 2 bytes @ 0x36
  2312                           
  2313  0056                     PROCULUS_Show_Screen@screen:	
  2314                           ; 2 bytes @ 0x36
  2315                           
  2316                           
  2317                           ; 2 bytes @ 0x36
  2318  0056                     	ds	1
  2319  0057                     ??_PROCULUS_VP_Write:
  2320  0057                     ___fldiv@grs:	
  2321                           ; 1 bytes @ 0x37
  2322                           
  2323                           
  2324                           ; 4 bytes @ 0x37
  2325  0057                     	ds	1
  2326  0058                     ?_Save_Log:
  2327  0058                     ??_PROCULUS_Show_Screen:	
  2328                           ; 1 bytes @ 0x38
  2329                           
  2330  0058                     ??_PROCULUS_Buzzer:	
  2331                           ; 1 bytes @ 0x38
  2332                           
  2333  0058                     ?_EEPROM_24C1025_Fill_All:	
  2334                           ; 1 bytes @ 0x38
  2335                           
  2336  0058                     EEPROM_24C1025_Fill_All@value:	
  2337                           ; 1 bytes @ 0x38
  2338                           
  2339  0058                     Save_Log@add_datalog:	
  2340                           ; 2 bytes @ 0x38
  2341                           
  2342                           
  2343                           ; 4 bytes @ 0x38
  2344  0058                     	ds	1
  2345  0059                     PROCULUS_VP_Write@i:
  2346  0059                     PROCULUS_Buzzer@vetor:	
  2347                           ; 1 bytes @ 0x39
  2348                           
  2349  0059                     PROCULUS_Show_Screen@vetor:	
  2350                           ; 2 bytes @ 0x39
  2351                           
  2352                           
  2353                           ; 3 bytes @ 0x39
  2354  0059                     	ds	1
  2355  005A                     ?_PROCULUS_VP_Write_String:
  2356  005A                     ??_EEPROM_24C1025_Fill_All:	
  2357                           ; 1 bytes @ 0x3A
  2358                           
  2359  005A                     EEPROM_24C1025_Fill_All@chip_add:	
  2360                           ; 1 bytes @ 0x3A
  2361                           
  2362  005A                     PROCULUS_VP_Write_String@vp:	
  2363                           ; 1 bytes @ 0x3A
  2364                           
  2365                           
  2366                           ; 2 bytes @ 0x3A
  2367  005A                     	ds	1
  2368  005B                     ___fldiv@bexp:
  2369  005B                     EEPROM_24C1025_Fill_All@mem_add:	
  2370                           ; 1 bytes @ 0x3B
  2371                           
  2372                           
  2373                           ; 4 bytes @ 0x3B
  2374  005B                     	ds	1
  2375  005C                     ??_Save_Log:
  2376  005C                     PROCULUS_VP_Write_String@text:	
  2377                           ; 1 bytes @ 0x3C
  2378                           
  2379  005C                     ___fldiv@aexp:	
  2380                           ; 1 bytes @ 0x3C
  2381                           
  2382                           
  2383                           ; 1 bytes @ 0x3C
  2384  005C                     	ds	1
  2385  005D                     ??_PROCULUS_VP_Write_String:
  2386  005D                     ?___fladd:	
  2387                           ; 1 bytes @ 0x3D
  2388                           
  2389  005D                     ___fladd@b:	
  2390                           ; 4 bytes @ 0x3D
  2391                           
  2392                           
  2393                           ; 4 bytes @ 0x3D
  2394  005D                     	ds	2
  2395  005F                     ??_Decodify_Command:
  2396                           
  2397                           ; 1 bytes @ 0x3F
  2398  005F                     	ds	2
  2399  0061                     ___fladd@a:
  2400                           
  2401                           ; 4 bytes @ 0x41
  2402  0061                     	ds	4
  2403  0065                     ??___fladd:
  2404                           
  2405                           ; 1 bytes @ 0x45
  2406  0065                     	ds	8
  2407  006D                     ??___flsub:
  2408  006D                     main@reset:	
  2409                           ; 1 bytes @ 0x4D
  2410                           
  2411                           
  2412                           ; 2 bytes @ 0x4D
  2413  006D                     	ds	2
  2414                           
  2415                           	psect	maintext
  2416  129F                     __pmaintext:	
  2417 ;;
  2418 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2419 ;;
  2420 ;; *************** function _main *****************
  2421 ;; Defined at:
  2422 ;;		line 144 in file "SlaveLiofilizadorVer1.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  reset           2   77[BANK0 ] unsigned int 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : B00/0
  2433 ;;		On exit  : 300/100
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2436 ;;      Params:         0       0       0       0       0
  2437 ;;      Locals:         0       2       0       0       0
  2438 ;;      Temps:          0       0       3       0       0
  2439 ;;      Totals:         0       2       3       0       0
  2440 ;;Total ram usage:        5 bytes
  2441 ;; Hardware stack levels required when called: 7
  2442 ;; This function calls:
  2443 ;;		_ADC_init
  2444 ;;		_Decodify_Command
  2445 ;;		_EEPROM_Read_Integer
  2446 ;;		_EEPROM_Write_Integer
  2447 ;;		_I2C_Master_Init
  2448 ;;		_USART_init
  2449 ;;		_mediaLeituraPt100Umidadde
  2450 ;;		_my_delay_ms_WDT
  2451 ;; This function is called by:
  2452 ;;		Startup code after reset
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           
  2457                           ;psect for function _main
  2458  129F                     _main:
  2459                           
  2460                           ;SlaveLiofilizadorVer1.c: 145:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2461                           
  2462                           ;incstack = 0
  2463                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2464  129F  3002               	movlw	2
  2465  12A0  1683               	bsf	3,5	;RP0=1, select bank1
  2466  12A1  1303               	bcf	3,6	;RP1=0, select bank1
  2467  12A2  00BC               	movwf	(??_main^(0+128)+2)
  2468  12A3  3004               	movlw	4
  2469  12A4  00BB               	movwf	(??_main^(0+128)+1)
  2470  12A5  30B9               	movlw	185
  2471  12A6  00BA               	movwf	??_main^(0+128)
  2472  12A7                     u5397:
  2473  12A7  0BBA               	decfsz	??_main^(0+128),f
  2474  12A8  2AA7               	goto	u5397
  2475  12A9  0BBB               	decfsz	(??_main^(0+128)+1),f
  2476  12AA  2AA7               	goto	u5397
  2477  12AB  0BBC               	decfsz	(??_main^(0+128)+2),f
  2478  12AC  2AA7               	goto	u5397
  2479  12AD  2AAE               	nop2
  2480                           
  2481                           ;SlaveLiofilizadorVer1.c: 146:      OSCCONbits.IRCF0=1;
  2482  12AE  1683               	bsf	3,5	;RP0=1, select bank1
  2483  12AF  1303               	bcf	3,6	;RP1=0, select bank1
  2484  12B0  160F               	bsf	15,4	;volatile
  2485                           
  2486                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF1=1;
  2487  12B1  168F               	bsf	15,5	;volatile
  2488                           
  2489                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF2=1;
  2490  12B2  170F               	bsf	15,6	;volatile
  2491                           
  2492                           ;SlaveLiofilizadorVer1.c: 150:      PORTA=0;
  2493  12B3  1283               	bcf	3,5	;RP0=0, select bank0
  2494  12B4  0185               	clrf	5	;volatile
  2495                           
  2496                           ;SlaveLiofilizadorVer1.c: 151:      PORTB=0;
  2497  12B5  0186               	clrf	6	;volatile
  2498                           
  2499                           ;SlaveLiofilizadorVer1.c: 152:      PORTC=0;
  2500  12B6  0187               	clrf	7	;volatile
  2501                           
  2502                           ;SlaveLiofilizadorVer1.c: 153:      PORTE=0;
  2503  12B7  0189               	clrf	9	;volatile
  2504                           
  2505                           ;SlaveLiofilizadorVer1.c: 154:      TRISA=0b11101111;
  2506  12B8  30EF               	movlw	239
  2507  12B9  1683               	bsf	3,5	;RP0=1, select bank1
  2508  12BA  0085               	movwf	5	;volatile
  2509                           
  2510                           ;SlaveLiofilizadorVer1.c: 155:      TRISB=0b00001111;
  2511  12BB  300F               	movlw	15
  2512  12BC  0086               	movwf	6	;volatile
  2513                           
  2514                           ;SlaveLiofilizadorVer1.c: 156:      TRISC=0xF0;
  2515  12BD  30F0               	movlw	240
  2516  12BE  0087               	movwf	7	;volatile
  2517                           
  2518                           ;SlaveLiofilizadorVer1.c: 157:      TRISE=0xFF;
  2519  12BF  30FF               	movlw	255
  2520  12C0  0089               	movwf	9	;volatile
  2521                           
  2522                           ;SlaveLiofilizadorVer1.c: 159:      ANSEL=0x00000011;
  2523  12C1  3011               	movlw	17
  2524  12C2  1703               	bsf	3,6	;RP1=1, select bank3
  2525  12C3  0088               	movwf	8	;volatile
  2526                           
  2527                           ;SlaveLiofilizadorVer1.c: 160:      ANSELH=0x00000000;
  2528  12C4  0189               	clrf	9	;volatile
  2529                           
  2530                           ;SlaveLiofilizadorVer1.c: 162:      OPTION_REGbits.nRBPU=0;
  2531  12C5  1303               	bcf	3,6	;RP1=0, select bank1
  2532  12C6  1381               	bcf	1,7	;volatile
  2533                           
  2534                           ;SlaveLiofilizadorVer1.c: 163:      WPUB=0b00001111;
  2535  12C7  300F               	movlw	15
  2536  12C8  0095               	movwf	21	;volatile
  2537                           
  2538                           ;SlaveLiofilizadorVer1.c: 166:      PORTBbits.RB7 =1;
  2539  12C9  1283               	bcf	3,5	;RP0=0, select bank0
  2540  12CA  1786               	bsf	6,7	;volatile
  2541                           
  2542                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB6 =1;
  2543  12CB  1706               	bsf	6,6	;volatile
  2544                           
  2545                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB5=1;
  2546  12CC  1686               	bsf	6,5	;volatile
  2547                           
  2548                           ;SlaveLiofilizadorVer1.c: 169:      my_delay_ms_WDT(1000);
  2549  12CD  3000               	movlw	0
  2550  12CE  00A3               	movwf	my_delay_ms_WDT@time+3
  2551  12CF  3000               	movlw	0
  2552  12D0  00A2               	movwf	my_delay_ms_WDT@time+2
  2553  12D1  3003               	movlw	3
  2554  12D2  00A1               	movwf	my_delay_ms_WDT@time+1
  2555  12D3  30E8               	movlw	232
  2556  12D4  00A0               	movwf	my_delay_ms_WDT@time
  2557  12D5  160A  158A  258C  160A  118A  	fcall	_my_delay_ms_WDT
  2558                           
  2559                           ;SlaveLiofilizadorVer1.c: 171:      OPTION_REGbits.T0CS=0;
  2560  12DA  1683               	bsf	3,5	;RP0=1, select bank1
  2561  12DB  1281               	bcf	1,5	;volatile
  2562                           
  2563                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.PSA =1;
  2564  12DC  1581               	bsf	1,3	;volatile
  2565                           
  2566                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PS0 =1;
  2567  12DD  1401               	bsf	1,0	;volatile
  2568                           
  2569                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS1 =1;
  2570  12DE  1481               	bsf	1,1	;volatile
  2571                           
  2572                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS2 =1;
  2573  12DF  1501               	bsf	1,2	;volatile
  2574                           
  2575                           ;SlaveLiofilizadorVer1.c: 176:      INTCONbits.T0IE =0;
  2576  12E0  128B               	bcf	11,5	;volatile
  2577                           
  2578                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.INTE =0;
  2579  12E1  120B               	bcf	11,4	;volatile
  2580                           
  2581                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.GIE =1;
  2582  12E2  178B               	bsf	11,7	;volatile
  2583                           
  2584                           ;SlaveLiofilizadorVer1.c: 181:      INTCONbits.PEIE = 1;
  2585  12E3  170B               	bsf	11,6	;volatile
  2586                           
  2587                           ;SlaveLiofilizadorVer1.c: 182:      T1CKPS0=1;
  2588  12E4  1283               	bcf	3,5	;RP0=0, select bank0
  2589  12E5  1610               	bsf	16,4	;volatile
  2590                           
  2591                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS1=1;
  2592  12E6  1690               	bsf	16,5	;volatile
  2593                           
  2594                           ;SlaveLiofilizadorVer1.c: 184:      TMR1CS=0;
  2595  12E7  1090               	bcf	16,1	;volatile
  2596                           
  2597                           ;SlaveLiofilizadorVer1.c: 185:      TMR1IE=1;
  2598  12E8  1683               	bsf	3,5	;RP0=1, select bank1
  2599  12E9  140C               	bsf	12,0	;volatile
  2600                           
  2601                           ;SlaveLiofilizadorVer1.c: 186:      T1CON=1;
  2602  12EA  3001               	movlw	1
  2603  12EB  1283               	bcf	3,5	;RP0=0, select bank0
  2604  12EC  0090               	movwf	16	;volatile
  2605  12ED  0064               	clrwdt	;# 
  2606                           
  2607                           ;SlaveLiofilizadorVer1.c: 193:      ADC_init();
  2608  12EE  160A  158A  21DA  160A  118A  	fcall	_ADC_init
  2609                           
  2610                           ;SlaveLiofilizadorVer1.c: 194:      I2C_Master_Init(100000);
  2611  12F3  3000               	movlw	0
  2612  12F4  00B1               	movwf	I2C_Master_Init@c+3
  2613  12F5  3001               	movlw	1
  2614  12F6  00B0               	movwf	I2C_Master_Init@c+2
  2615  12F7  3086               	movlw	134
  2616  12F8  00AF               	movwf	I2C_Master_Init@c+1
  2617  12F9  30A0               	movlw	160
  2618  12FA  00AE               	movwf	I2C_Master_Init@c
  2619  12FB  160A  158A  2455  160A  118A  	fcall	_I2C_Master_Init
  2620                           
  2621                           ;SlaveLiofilizadorVer1.c: 195:      USART_init(115200);
  2622  1300  3000               	movlw	0
  2623  1301  1283               	bcf	3,5	;RP0=0, select bank0
  2624  1302  00A3               	movwf	USART_init@baudrate+3
  2625  1303  3001               	movlw	1
  2626  1304  00A2               	movwf	USART_init@baudrate+2
  2627  1305  30C2               	movlw	194
  2628  1306  00A1               	movwf	USART_init@baudrate+1
  2629  1307  3000               	movlw	0
  2630  1308  00A0               	movwf	USART_init@baudrate
  2631  1309  160A  158A  26B5  160A  118A  	fcall	_USART_init
  2632                           
  2633                           ;SlaveLiofilizadorVer1.c: 201:      {;SlaveLiofilizadorVer1.c: 202:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 203:      reset=EEPROM_Read_Integer(0x10);
  2634  130E  3010               	movlw	16
  2635  130F  160A  158A  2400  160A  118A  	fcall	_EEPROM_Read_Integer
  2636  1314  0824               	movf	?_EEPROM_Read_Integer+1,w
  2637  1315  00EE               	movwf	main@reset+1
  2638  1316  0823               	movf	?_EEPROM_Read_Integer,w
  2639  1317  00ED               	movwf	main@reset
  2640                           
  2641                           ;SlaveLiofilizadorVer1.c: 204:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2642  1318  0A6D               	incf	main@reset,w
  2643  1319  1D03               	skipz
  2644  131A  2B27               	goto	l5848
  2645  131B  0A6E               	incf	main@reset+1,w
  2646  131C  1D03               	btfss	3,2
  2647  131D  2B27               	goto	l5848
  2648  131E  3000               	movlw	0
  2649  131F  00A5               	movwf	EEPROM_Write_Integer@dado
  2650  1320  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2651  1321  3010               	movlw	16
  2652  1322  160A  158A  2486  160A  118A  	fcall	_EEPROM_Write_Integer
  2653  1327                     l5848:
  2654                           
  2655                           ;SlaveLiofilizadorVer1.c: 205:      reset++;
  2656  1327  3001               	movlw	1
  2657  1328  1283               	bcf	3,5	;RP0=0, select bank0
  2658  1329  1303               	bcf	3,6	;RP1=0, select bank0
  2659  132A  07ED               	addwf	main@reset,f
  2660  132B  1803               	skipnc
  2661  132C  0AEE               	incf	main@reset+1,f
  2662  132D  3000               	movlw	0
  2663  132E  07EE               	addwf	main@reset+1,f
  2664                           
  2665                           ;SlaveLiofilizadorVer1.c: 206:      EEPROM_Write_Integer(0x10,reset);
  2666  132F  086E               	movf	main@reset+1,w
  2667  1330  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2668  1331  086D               	movf	main@reset,w
  2669  1332  00A5               	movwf	EEPROM_Write_Integer@dado
  2670  1333  3010               	movlw	16
  2671  1334  160A  158A  2486  160A  118A  	fcall	_EEPROM_Write_Integer
  2672                           
  2673                           ;SlaveLiofilizadorVer1.c: 207:      };SlaveLiofilizadorVer1.c: 211:      Delay_Led_Tmr0 
      +                          = 0;
  2674  1339  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2675  133A  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2676                           
  2677                           ;SlaveLiofilizadorVer1.c: 212:      Delay_Led_Usart = 0;
  2678  133B  1683               	bsf	3,5	;RP0=1, select bank1
  2679  133C  1303               	bcf	3,6	;RP1=0, select bank1
  2680  133D  01CF               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2681  133E  01D0               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2682                           
  2683                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Memory = 0;
  2684  133F  01D1               	clrf	_Delay_Led_Memory^(0+128)	;volatile
  2685  1340  01D2               	clrf	(_Delay_Led_Memory+1)^(0+128)	;volatile
  2686                           
  2687                           ;SlaveLiofilizadorVer1.c: 215:      segundo=0;
  2688  1341  01FD               	clrf	_segundo	;volatile
  2689                           
  2690                           ;SlaveLiofilizadorVer1.c: 216:      hora=0;
  2691  1342  01FC               	clrf	_hora	;volatile
  2692                           
  2693                           ;SlaveLiofilizadorVer1.c: 217:      PORTCbits.RC0=0;
  2694  1343  1283               	bcf	3,5	;RP0=0, select bank0
  2695  1344  1007               	bcf	7,0	;volatile
  2696                           
  2697                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC1=0;
  2698  1345  1087               	bcf	7,1	;volatile
  2699                           
  2700                           ;SlaveLiofilizadorVer1.c: 219:      PORTAbits.RA2=0;
  2701  1346  1105               	bcf	5,2	;volatile
  2702                           
  2703                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA3=0;
  2704  1347  1185               	bcf	5,3	;volatile
  2705                           
  2706                           ;SlaveLiofilizadorVer1.c: 223:      Board_Number=(((0x0F)&(~PORTB)));
  2707  1348  0906               	comf	6,w	;volatile
  2708  1349  390F               	andlw	15
  2709  134A  1683               	bsf	3,5	;RP0=1, select bank1
  2710  134B  00BA               	movwf	??_main^(0+128)
  2711  134C  083A               	movf	??_main^(0+128),w
  2712  134D  00D5               	movwf	_Board_Number^(0+128)
  2713                           
  2714                           ;SlaveLiofilizadorVer1.c: 224:      canal=1;
  2715  134E  01D6               	clrf	_canal^(0+128)
  2716  134F  0AD6               	incf	_canal^(0+128),f
  2717                           
  2718                           ;SlaveLiofilizadorVer1.c: 228:      statuspower.flag_global_condensador=0;
  2719  1350  10D7               	bcf	_statuspower^(0+128),1
  2720  1351                     l5874:
  2721                           
  2722                           ;SlaveLiofilizadorVer1.c: 246:           {;SlaveLiofilizadorVer1.c: 248:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2723  1351  1283               	bcf	3,5	;RP0=0, select bank0
  2724  1352  17EF               	bsf	_generic_status,7
  2725                           
  2726                           ;SlaveLiofilizadorVer1.c: 269:          if(++canal==2) canal=0;
  2727  1353  3001               	movlw	1
  2728  1354  1683               	bsf	3,5	;RP0=1, select bank1
  2729  1355  00BA               	movwf	??_main^(0+128)
  2730  1356  083A               	movf	??_main^(0+128),w
  2731  1357  07D6               	addwf	_canal^(0+128),f
  2732  1358  3002               	movlw	2
  2733  1359  0656               	xorwf	_canal^(0+128),w
  2734  135A  1903               	btfsc	3,2
  2735  135B  01D6               	clrf	_canal^(0+128)
  2736                           
  2737                           ;SlaveLiofilizadorVer1.c: 270:          mediaLeituraPt100Umidadde(canal);
  2738  135C  0856               	movf	_canal^(0+128),w
  2739  135D  120A  158A  2384  160A  118A  	fcall	_mediaLeituraPt100Umidadde
  2740                           
  2741                           ;SlaveLiofilizadorVer1.c: 283:          if(generic_status.flag_usart_rx==1)
  2742  1362  1283               	bcf	3,5	;RP0=0, select bank0
  2743  1363  1C6F               	btfss	_generic_status,0
  2744  1364  2B51               	goto	l5874
  2745                           
  2746                           ;SlaveLiofilizadorVer1.c: 284:             {;SlaveLiofilizadorVer1.c: 285:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2747  1365  1703               	bsf	3,6	;RP1=1, select bank2
  2748  1366  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2749  1367  1683               	bsf	3,5	;RP0=1, select bank1
  2750  1368  1303               	bcf	3,6	;RP1=0, select bank1
  2751  1369  00CC               	movwf	(_header+1)^(0+128)
  2752  136A  1283               	bcf	3,5	;RP0=0, select bank2
  2753  136B  1703               	bsf	3,6	;RP1=1, select bank2
  2754  136C  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2755  136D  1683               	bsf	3,5	;RP0=1, select bank1
  2756  136E  1303               	bcf	3,6	;RP1=0, select bank1
  2757  136F  00CB               	movwf	_header^(0+128)
  2758                           
  2759                           ;SlaveLiofilizadorVer1.c: 286:             if(header==0xAABB)
  2760  1370  30BB               	movlw	187
  2761  1371  064B               	xorwf	_header^(0+128),w
  2762  1372  30AA               	movlw	170
  2763  1373  1903               	skipnz
  2764  1374  064C               	xorwf	(_header+1)^(0+128),w
  2765  1375  1D03               	btfss	3,2
  2766  1376  2B51               	goto	l5874
  2767                           
  2768                           ;SlaveLiofilizadorVer1.c: 287:                {;SlaveLiofilizadorVer1.c: 288:           
      +                               destino =usart_buffer[3];
  2769  1377  1283               	bcf	3,5	;RP0=0, select bank2
  2770  1378  1703               	bsf	3,6	;RP1=1, select bank2
  2771  1379  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2772  137A  1683               	bsf	3,5	;RP0=1, select bank1
  2773  137B  1303               	bcf	3,6	;RP1=0, select bank1
  2774  137C  00BA               	movwf	??_main^(0+128)
  2775  137D  083A               	movf	??_main^(0+128),w
  2776  137E  00D4               	movwf	_destino^(0+128)
  2777                           
  2778                           ;SlaveLiofilizadorVer1.c: 289:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2779  137F  0854               	movf	_destino^(0+128),w
  2780  1380  0655               	xorwf	_Board_Number^(0+128),w
  2781  1381  1D03               	btfss	3,2
  2782  1382  0A54               	incf	_destino^(0+128),w
  2783  1383  1D03               	btfss	3,2
  2784  1384  2B51               	goto	l5874
  2785                           
  2786                           ;SlaveLiofilizadorVer1.c: 290:                       {;SlaveLiofilizadorVer1.c: 291:    
      +                                             Delay_Led_Usart=20;
  2787  1385  3014               	movlw	20
  2788  1386  00CF               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2789  1387  3000               	movlw	0
  2790  1388  00D0               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2791                           
  2792                           ;SlaveLiofilizadorVer1.c: 292:                       Decodify_Command();
  2793  1389  120A  118A  203A  160A  118A  	fcall	_Decodify_Command
  2794                           
  2795                           ;SlaveLiofilizadorVer1.c: 293:                       generic_status.flag_usart_rx=0;
  2796  138E  1283               	bcf	3,5	;RP0=0, select bank0
  2797  138F  1303               	bcf	3,6	;RP1=0, select bank0
  2798  1390  106F               	bcf	_generic_status,0
  2799                           
  2800                           ;SlaveLiofilizadorVer1.c: 296:             }
  2801  1391  2B51               	goto	l5874
  2802  1392                     __end_of_main:
  2803                           
  2804                           	psect	text1
  2805  0B84                     __ptext1:	
  2806 ;; *************** function _mediaLeituraPt100Umidadde *****************
  2807 ;; Defined at:
  2808 ;;		line 684 in file "SlaveLiofilizadorVer1.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  canal           1    wreg     unsigned char 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  canal           1   20[BANK1 ] unsigned char 
  2813 ;;  Temp            4   21[BANK1 ] float 
  2814 ;;  tensao          4    0        float 
  2815 ;;  i               1   25[BANK1 ] unsigned char 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 300/100
  2822 ;;		On exit  : 200/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2825 ;;      Params:         0       0       0       0       0
  2826 ;;      Locals:         0       0      10       0       0
  2827 ;;      Temps:          0       0       4       0       0
  2828 ;;      Totals:         0       0      14       0       0
  2829 ;;Total ram usage:       14 bytes
  2830 ;; Hardware stack levels used: 1
  2831 ;; Hardware stack levels required when called: 3
  2832 ;; This function calls:
  2833 ;;		_ADC_Media_10bits
  2834 ;;		_Package_Usart_is_for_me
  2835 ;;		___fladd
  2836 ;;		___fldiv
  2837 ;;		___flge
  2838 ;;		___flmul
  2839 ;;		___flsub
  2840 ;;		___xxtofl
  2841 ;;		_my_delay_ms
  2842 ;; This function is called by:
  2843 ;;		_main
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           
  2848                           ;psect for function _mediaLeituraPt100Umidadde
  2849  0B84                     _mediaLeituraPt100Umidadde:
  2850                           
  2851                           ;incstack = 0
  2852                           ; Regs used in _mediaLeituraPt100Umidadde: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2853                           ;mediaLeituraPt100Umidadde@canal stored from wreg
  2854  0B84  00B4               	movwf	mediaLeituraPt100Umidadde@canal^(0+128)
  2855                           
  2856                           ;SlaveLiofilizadorVer1.c: 684: void mediaLeituraPt100Umidadde(unsigned char canal);Slave
      +                          LiofilizadorVer1.c: 685:      {;SlaveLiofilizadorVer1.c: 686:      float Temp;;SlaveLiof
      +                          ilizadorVer1.c: 687:      float tensao;;SlaveLiofilizadorVer1.c: 688:      char i;;Slave
      +                          LiofilizadorVer1.c: 690:      ADCON0bits.CHS=canal;
  2857  0B85  0834               	movf	mediaLeituraPt100Umidadde@canal^(0+128),w
  2858  0B86  00AC               	movwf	??_mediaLeituraPt100Umidadde^(0+128)
  2859  0B87  0DAC               	rlf	??_mediaLeituraPt100Umidadde^(0+128),f
  2860  0B88  0DAC               	rlf	??_mediaLeituraPt100Umidadde^(0+128),f
  2861  0B89  1283               	bcf	3,5	;RP0=0, select bank0
  2862  0B8A  081F               	movf	31,w	;volatile
  2863  0B8B  1683               	bsf	3,5	;RP0=1, select bank1
  2864  0B8C  062C               	xorwf	??_mediaLeituraPt100Umidadde^(0+128),w
  2865  0B8D  39C3               	andlw	-61
  2866  0B8E  062C               	xorwf	??_mediaLeituraPt100Umidadde^(0+128),w
  2867  0B8F  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0B90  009F               	movwf	31	;volatile
  2869                           
  2870                           ;SlaveLiofilizadorVer1.c: 691:      my_delay_ms(1);
  2871  0B91  3000               	movlw	0
  2872  0B92  00A3               	movwf	my_delay_ms@time+3
  2873  0B93  3000               	movlw	0
  2874  0B94  00A2               	movwf	my_delay_ms@time+2
  2875  0B95  3000               	movlw	0
  2876  0B96  00A1               	movwf	my_delay_ms@time+1
  2877  0B97  3001               	movlw	1
  2878  0B98  00A0               	movwf	my_delay_ms@time
  2879  0B99  160A  158A  2555  120A  158A  	fcall	_my_delay_ms
  2880                           
  2881                           ;SlaveLiofilizadorVer1.c: 692:      Temp=0;
  2882  0B9E  3000               	movlw	0
  2883  0B9F  1683               	bsf	3,5	;RP0=1, select bank1
  2884  0BA0  00B8               	movwf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128)
  2885  0BA1  3000               	movlw	0
  2886  0BA2  00B7               	movwf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128)
  2887  0BA3  3000               	movlw	0
  2888  0BA4  00B6               	movwf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128)
  2889  0BA5  3000               	movlw	0
  2890  0BA6  00B5               	movwf	mediaLeituraPt100Umidadde@Temp^(0+128)
  2891                           
  2892                           ;SlaveLiofilizadorVer1.c: 694:      for(i=1;i<15;i++)
  2893  0BA7  01B9               	clrf	mediaLeituraPt100Umidadde@i^(0+128)
  2894  0BA8  0AB9               	incf	mediaLeituraPt100Umidadde@i^(0+128),f
  2895  0BA9                     l5030:
  2896                           
  2897                           ;SlaveLiofilizadorVer1.c: 695:         {;SlaveLiofilizadorVer1.c: 696:         Temp+=ADC
      +                          _Media_10bits(canal);
  2898  0BA9  0834               	movf	mediaLeituraPt100Umidadde@canal^(0+128),w
  2899  0BAA  160A  158A  274C  120A  158A  	fcall	_ADC_Media_10bits
  2900  0BAF  0831               	movf	?_ADC_Media_10bits+3,w
  2901  0BB0  00E0               	movwf	___fladd@b+3
  2902  0BB1  0830               	movf	?_ADC_Media_10bits+2,w
  2903  0BB2  00DF               	movwf	___fladd@b+2
  2904  0BB3  082F               	movf	?_ADC_Media_10bits+1,w
  2905  0BB4  00DE               	movwf	___fladd@b+1
  2906  0BB5  082E               	movf	?_ADC_Media_10bits,w
  2907  0BB6  00DD               	movwf	___fladd@b
  2908  0BB7  1683               	bsf	3,5	;RP0=1, select bank1
  2909  0BB8  0838               	movf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128),w
  2910  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0BBA  00E4               	movwf	___fladd@a+3
  2912  0BBB  1683               	bsf	3,5	;RP0=1, select bank1
  2913  0BBC  0837               	movf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128),w
  2914  0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  2915  0BBE  00E3               	movwf	___fladd@a+2
  2916  0BBF  1683               	bsf	3,5	;RP0=1, select bank1
  2917  0BC0  0836               	movf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128),w
  2918  0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0BC2  00E2               	movwf	___fladd@a+1
  2920  0BC3  1683               	bsf	3,5	;RP0=1, select bank1
  2921  0BC4  0835               	movf	mediaLeituraPt100Umidadde@Temp^(0+128),w
  2922  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  2923  0BC6  00E1               	movwf	___fladd@a
  2924  0BC7  120A  158A  256F  120A  158A  	fcall	___fladd
  2925  0BCC  1283               	bcf	3,5	;RP0=0, select bank0
  2926  0BCD  0860               	movf	?___fladd+3,w
  2927  0BCE  1683               	bsf	3,5	;RP0=1, select bank1
  2928  0BCF  00B8               	movwf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128)
  2929  0BD0  1283               	bcf	3,5	;RP0=0, select bank0
  2930  0BD1  085F               	movf	?___fladd+2,w
  2931  0BD2  1683               	bsf	3,5	;RP0=1, select bank1
  2932  0BD3  00B7               	movwf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128)
  2933  0BD4  1283               	bcf	3,5	;RP0=0, select bank0
  2934  0BD5  085E               	movf	?___fladd+1,w
  2935  0BD6  1683               	bsf	3,5	;RP0=1, select bank1
  2936  0BD7  00B6               	movwf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128)
  2937  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  2938  0BD9  085D               	movf	?___fladd,w
  2939  0BDA  1683               	bsf	3,5	;RP0=1, select bank1
  2940  0BDB  00B5               	movwf	mediaLeituraPt100Umidadde@Temp^(0+128)
  2941                           
  2942                           ;SlaveLiofilizadorVer1.c: 697:         if(Package_Usart_is_for_me()==1) break;
  2943  0BDC  160A  158A  2263  120A  158A  	fcall	_Package_Usart_is_for_me
  2944  0BE1  3A01               	xorlw	1
  2945  0BE2  1903               	btfsc	3,2
  2946  0BE3  2BED               	goto	l5040
  2947                           
  2948                           ;SlaveLiofilizadorVer1.c: 698:         }
  2949  0BE4  3001               	movlw	1
  2950  0BE5  1683               	bsf	3,5	;RP0=1, select bank1
  2951  0BE6  00AC               	movwf	??_mediaLeituraPt100Umidadde^(0+128)
  2952  0BE7  082C               	movf	??_mediaLeituraPt100Umidadde^(0+128),w
  2953  0BE8  07B9               	addwf	mediaLeituraPt100Umidadde@i^(0+128),f
  2954  0BE9  300F               	movlw	15
  2955  0BEA  0239               	subwf	mediaLeituraPt100Umidadde@i^(0+128),w
  2956  0BEB  1C03               	skipc
  2957  0BEC  2BA9               	goto	l5030
  2958  0BED                     l5040:
  2959                           
  2960                           ;SlaveLiofilizadorVer1.c: 699:      if(i<10)
  2961  0BED  300A               	movlw	10
  2962  0BEE  1683               	bsf	3,5	;RP0=1, select bank1
  2963  0BEF  0239               	subwf	mediaLeituraPt100Umidadde@i^(0+128),w
  2964  0BF0  1C03               	btfss	3,0
  2965  0BF1  0008               	return
  2966                           
  2967                           ;SlaveLiofilizadorVer1.c: 706:      if(i==15)
  2968  0BF2  300F               	movlw	15
  2969  0BF3  0639               	xorwf	mediaLeituraPt100Umidadde@i^(0+128),w
  2970  0BF4  1D03               	btfss	3,2
  2971  0BF5  2C04               	goto	l5048
  2972                           
  2973                           ;SlaveLiofilizadorVer1.c: 707:        Temp/=(i-1);
  2974  0BF6  0839               	movf	mediaLeituraPt100Umidadde@i^(0+128),w
  2975  0BF7  3EFF               	addlw	255
  2976  0BF8  1283               	bcf	3,5	;RP0=0, select bank0
  2977  0BF9  00A0               	movwf	___xxtofl@val
  2978  0BFA  30FF               	movlw	255
  2979  0BFB  1803               	skipnc
  2980  0BFC  3000               	movlw	0
  2981  0BFD  00A1               	movwf	___xxtofl@val+1
  2982  0BFE  01A2               	clrf	___xxtofl@val+2
  2983  0BFF  1BA1               	btfsc	___xxtofl@val+1,7
  2984  0C00  03A2               	decf	___xxtofl@val+2,f
  2985  0C01  0822               	movf	___xxtofl@val+2,w
  2986  0C02  00A3               	movwf	___xxtofl@val+3
  2987  0C03  2C18               	goto	L1
  2988  0C04                     l5048:
  2989                           
  2990                           ;SlaveLiofilizadorVer1.c: 709:        Temp/=(i);
  2991  0C04  0839               	movf	mediaLeituraPt100Umidadde@i^(0+128),w
  2992  0C05  00AC               	movwf	??_mediaLeituraPt100Umidadde^(0+128)
  2993  0C06  01AD               	clrf	(??_mediaLeituraPt100Umidadde^(0+128)+1)
  2994  0C07  01AE               	clrf	(??_mediaLeituraPt100Umidadde^(0+128)+2)
  2995  0C08  01AF               	clrf	(??_mediaLeituraPt100Umidadde^(0+128)+3)
  2996  0C09  082F               	movf	(??_mediaLeituraPt100Umidadde+3)^(0+128),w
  2997  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0C0B  00A3               	movwf	___xxtofl@val+3
  2999  0C0C  1683               	bsf	3,5	;RP0=1, select bank1
  3000  0C0D  082E               	movf	(??_mediaLeituraPt100Umidadde+2)^(0+128),w
  3001  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0C0F  00A2               	movwf	___xxtofl@val+2
  3003  0C10  1683               	bsf	3,5	;RP0=1, select bank1
  3004  0C11  082D               	movf	(??_mediaLeituraPt100Umidadde+1)^(0+128),w
  3005  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  3006  0C13  00A1               	movwf	___xxtofl@val+1
  3007  0C14  1683               	bsf	3,5	;RP0=1, select bank1
  3008  0C15  082C               	movf	??_mediaLeituraPt100Umidadde^(0+128),w
  3009  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  3010  0C17  00A0               	movwf	___xxtofl@val
  3011  0C18                     L1:
  3012  0C18  3001               	movlw	1
  3013  0C19  160A  118A  2111  120A  158A  	fcall	___xxtofl
  3014  0C1E  0823               	movf	?___xxtofl+3,w
  3015  0C1F  00C6               	movwf	___fldiv@a+3
  3016  0C20  0822               	movf	?___xxtofl+2,w
  3017  0C21  00C5               	movwf	___fldiv@a+2
  3018  0C22  0821               	movf	?___xxtofl+1,w
  3019  0C23  00C4               	movwf	___fldiv@a+1
  3020  0C24  0820               	movf	?___xxtofl,w
  3021  0C25  00C3               	movwf	___fldiv@a
  3022  0C26  1683               	bsf	3,5	;RP0=1, select bank1
  3023  0C27  0838               	movf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128),w
  3024  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  3025  0C29  00CA               	movwf	___fldiv@b+3
  3026  0C2A  1683               	bsf	3,5	;RP0=1, select bank1
  3027  0C2B  0837               	movf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128),w
  3028  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0C2D  00C9               	movwf	___fldiv@b+2
  3030  0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  3031  0C2F  0836               	movf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128),w
  3032  0C30  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0C31  00C8               	movwf	___fldiv@b+1
  3034  0C32  1683               	bsf	3,5	;RP0=1, select bank1
  3035  0C33  0835               	movf	mediaLeituraPt100Umidadde@Temp^(0+128),w
  3036  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  3037  0C35  00C7               	movwf	___fldiv@b
  3038  0C36  120A  158A  21E3  120A  158A  	fcall	___fldiv
  3039  0C3B  0846               	movf	?___fldiv+3,w
  3040  0C3C  1683               	bsf	3,5	;RP0=1, select bank1
  3041  0C3D  00B8               	movwf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128)
  3042  0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  3043  0C3F  0845               	movf	?___fldiv+2,w
  3044  0C40  1683               	bsf	3,5	;RP0=1, select bank1
  3045  0C41  00B7               	movwf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128)
  3046  0C42  1283               	bcf	3,5	;RP0=0, select bank0
  3047  0C43  0844               	movf	?___fldiv+1,w
  3048  0C44  1683               	bsf	3,5	;RP0=1, select bank1
  3049  0C45  00B6               	movwf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128)
  3050  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  3051  0C47  0843               	movf	?___fldiv,w
  3052  0C48  1683               	bsf	3,5	;RP0=1, select bank1
  3053  0C49  00B5               	movwf	mediaLeituraPt100Umidadde@Temp^(0+128)
  3054                           
  3055                           ;SlaveLiofilizadorVer1.c: 721:      if(canal==0)
  3056  0C4A  0834               	movf	mediaLeituraPt100Umidadde@canal^(0+128),w
  3057  0C4B  1D03               	btfss	3,2
  3058  0C4C  2D66               	goto	l5058
  3059                           
  3060                           ;SlaveLiofilizadorVer1.c: 722:         {;SlaveLiofilizadorVer1.c: 723:         Temperatu
      +                          ra0=((200.0 * Temp) / 1023.0) - 100.0;
  3061  0C4D  30C2               	movlw	194
  3062  0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0C4F  00E0               	movwf	___fladd@b+3
  3064  0C50  30C8               	movlw	200
  3065  0C51  00DF               	movwf	___fladd@b+2
  3066  0C52  3000               	movlw	0
  3067  0C53  00DE               	movwf	___fladd@b+1
  3068  0C54  3000               	movlw	0
  3069  0C55  00DD               	movwf	___fladd@b
  3070  0C56  3044               	movlw	68
  3071  0C57  00C6               	movwf	___fldiv@a+3
  3072  0C58  307F               	movlw	127
  3073  0C59  00C5               	movwf	___fldiv@a+2
  3074  0C5A  30C0               	movlw	192
  3075  0C5B  00C4               	movwf	___fldiv@a+1
  3076  0C5C  3000               	movlw	0
  3077  0C5D  00C3               	movwf	___fldiv@a
  3078  0C5E  3043               	movlw	67
  3079  0C5F  00AC               	movwf	___flmul@b+3
  3080  0C60  3048               	movlw	72
  3081  0C61  00AB               	movwf	___flmul@b+2
  3082  0C62  3000               	movlw	0
  3083  0C63  00AA               	movwf	___flmul@b+1
  3084  0C64  3000               	movlw	0
  3085  0C65  00A9               	movwf	___flmul@b
  3086  0C66  1683               	bsf	3,5	;RP0=1, select bank1
  3087  0C67  0838               	movf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128),w
  3088  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  3089  0C69  00B0               	movwf	___flmul@a+3
  3090  0C6A  1683               	bsf	3,5	;RP0=1, select bank1
  3091  0C6B  0837               	movf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128),w
  3092  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  3093  0C6D  00AF               	movwf	___flmul@a+2
  3094  0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  3095  0C6F  0836               	movf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128),w
  3096  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  3097  0C71  00AE               	movwf	___flmul@a+1
  3098  0C72  1683               	bsf	3,5	;RP0=1, select bank1
  3099  0C73  0835               	movf	mediaLeituraPt100Umidadde@Temp^(0+128),w
  3100  0C74  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0C75  00AD               	movwf	___flmul@a
  3102  0C76  120A  118A  23C8  120A  158A  	fcall	___flmul
  3103  0C7B  082C               	movf	?___flmul+3,w
  3104  0C7C  00CA               	movwf	___fldiv@b+3
  3105  0C7D  082B               	movf	?___flmul+2,w
  3106  0C7E  00C9               	movwf	___fldiv@b+2
  3107  0C7F  082A               	movf	?___flmul+1,w
  3108  0C80  00C8               	movwf	___fldiv@b+1
  3109  0C81  0829               	movf	?___flmul,w
  3110  0C82  00C7               	movwf	___fldiv@b
  3111  0C83  120A  158A  21E3  120A  158A  	fcall	___fldiv
  3112  0C88  0846               	movf	?___fldiv+3,w
  3113  0C89  00E4               	movwf	___fladd@a+3
  3114  0C8A  0845               	movf	?___fldiv+2,w
  3115  0C8B  00E3               	movwf	___fladd@a+2
  3116  0C8C  0844               	movf	?___fldiv+1,w
  3117  0C8D  00E2               	movwf	___fladd@a+1
  3118  0C8E  0843               	movf	?___fldiv,w
  3119  0C8F  00E1               	movwf	___fladd@a
  3120  0C90  120A  158A  256F  120A  158A  	fcall	___fladd
  3121  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  3122  0C96  0860               	movf	?___fladd+3,w
  3123  0C97  1683               	bsf	3,5	;RP0=1, select bank1
  3124  0C98  00C4               	movwf	(_Temperatura0+3)^(0+128)
  3125  0C99  1283               	bcf	3,5	;RP0=0, select bank0
  3126  0C9A  085F               	movf	?___fladd+2,w
  3127  0C9B  1683               	bsf	3,5	;RP0=1, select bank1
  3128  0C9C  00C3               	movwf	(_Temperatura0+2)^(0+128)
  3129  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0C9E  085E               	movf	?___fladd+1,w
  3131  0C9F  1683               	bsf	3,5	;RP0=1, select bank1
  3132  0CA0  00C2               	movwf	(_Temperatura0+1)^(0+128)
  3133  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0CA2  085D               	movf	?___fladd,w
  3135  0CA3  1683               	bsf	3,5	;RP0=1, select bank1
  3136  0CA4  00C1               	movwf	_Temperatura0^(0+128)
  3137                           
  3138                           ;SlaveLiofilizadorVer1.c: 725:         if(Temperatura0<=-45.0)
  3139  0CA5  30C2               	movlw	194
  3140  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0CA7  00A3               	movwf	___flge@ff1+3
  3142  0CA8  3034               	movlw	52
  3143  0CA9  00A2               	movwf	___flge@ff1+2
  3144  0CAA  3000               	movlw	0
  3145  0CAB  00A1               	movwf	___flge@ff1+1
  3146  0CAC  3000               	movlw	0
  3147  0CAD  00A0               	movwf	___flge@ff1
  3148  0CAE  1683               	bsf	3,5	;RP0=1, select bank1
  3149  0CAF  0844               	movf	(_Temperatura0+3)^(0+128),w
  3150  0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  3151  0CB1  00A7               	movwf	___flge@ff2+3
  3152  0CB2  1683               	bsf	3,5	;RP0=1, select bank1
  3153  0CB3  0843               	movf	(_Temperatura0+2)^(0+128),w
  3154  0CB4  1283               	bcf	3,5	;RP0=0, select bank0
  3155  0CB5  00A6               	movwf	___flge@ff2+2
  3156  0CB6  1683               	bsf	3,5	;RP0=1, select bank1
  3157  0CB7  0842               	movf	(_Temperatura0+1)^(0+128),w
  3158  0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0CB9  00A5               	movwf	___flge@ff2+1
  3160  0CBA  1683               	bsf	3,5	;RP0=1, select bank1
  3161  0CBB  0841               	movf	_Temperatura0^(0+128),w
  3162  0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  3163  0CBD  00A4               	movwf	___flge@ff2
  3164  0CBE  160A  118A  207E  120A  158A  	fcall	___flge
  3165  0CC3  1C03               	btfss	3,0
  3166  0CC4  0008               	return
  3167                           
  3168                           ;SlaveLiofilizadorVer1.c: 726:           {;SlaveLiofilizadorVer1.c: 728:           Tempe
      +                          ratura0=Temperatura0-(((Temperatura0+45.0)*(Temperatura0+45.0))*0.013);
  3169  0CC5  3042               	movlw	66
  3170  0CC6  00E0               	movwf	___fladd@b+3
  3171  0CC7  3034               	movlw	52
  3172  0CC8  00DF               	movwf	___fladd@b+2
  3173  0CC9  3000               	movlw	0
  3174  0CCA  00DE               	movwf	___fladd@b+1
  3175  0CCB  3000               	movlw	0
  3176  0CCC  00DD               	movwf	___fladd@b
  3177  0CCD  1683               	bsf	3,5	;RP0=1, select bank1
  3178  0CCE  0844               	movf	(_Temperatura0+3)^(0+128),w
  3179  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0CD0  00E4               	movwf	___fladd@a+3
  3181  0CD1  1683               	bsf	3,5	;RP0=1, select bank1
  3182  0CD2  0843               	movf	(_Temperatura0+2)^(0+128),w
  3183  0CD3  1283               	bcf	3,5	;RP0=0, select bank0
  3184  0CD4  00E3               	movwf	___fladd@a+2
  3185  0CD5  1683               	bsf	3,5	;RP0=1, select bank1
  3186  0CD6  0842               	movf	(_Temperatura0+1)^(0+128),w
  3187  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0CD8  00E2               	movwf	___fladd@a+1
  3189  0CD9  1683               	bsf	3,5	;RP0=1, select bank1
  3190  0CDA  0841               	movf	_Temperatura0^(0+128),w
  3191  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0CDC  00E1               	movwf	___fladd@a
  3193  0CDD  120A  158A  256F  120A  158A  	fcall	___fladd
  3194  0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  3195  0CE3  0860               	movf	?___fladd+3,w
  3196  0CE4  00AC               	movwf	___flmul@b+3
  3197  0CE5  085F               	movf	?___fladd+2,w
  3198  0CE6  00AB               	movwf	___flmul@b+2
  3199  0CE7  085E               	movf	?___fladd+1,w
  3200  0CE8  00AA               	movwf	___flmul@b+1
  3201  0CE9  085D               	movf	?___fladd,w
  3202  0CEA  00A9               	movwf	___flmul@b
  3203  0CEB  3042               	movlw	66
  3204  0CEC  00E0               	movwf	___fladd@b+3
  3205  0CED  3034               	movlw	52
  3206  0CEE  00DF               	movwf	___fladd@b+2
  3207  0CEF  3000               	movlw	0
  3208  0CF0  00DE               	movwf	___fladd@b+1
  3209  0CF1  3000               	movlw	0
  3210  0CF2  00DD               	movwf	___fladd@b
  3211  0CF3  1683               	bsf	3,5	;RP0=1, select bank1
  3212  0CF4  0844               	movf	(_Temperatura0+3)^(0+128),w
  3213  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  3214  0CF6  00E4               	movwf	___fladd@a+3
  3215  0CF7  1683               	bsf	3,5	;RP0=1, select bank1
  3216  0CF8  0843               	movf	(_Temperatura0+2)^(0+128),w
  3217  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  3218  0CFA  00E3               	movwf	___fladd@a+2
  3219  0CFB  1683               	bsf	3,5	;RP0=1, select bank1
  3220  0CFC  0842               	movf	(_Temperatura0+1)^(0+128),w
  3221  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0CFE  00E2               	movwf	___fladd@a+1
  3223  0CFF  1683               	bsf	3,5	;RP0=1, select bank1
  3224  0D00  0841               	movf	_Temperatura0^(0+128),w
  3225  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  3226  0D02  00E1               	movwf	___fladd@a
  3227  0D03  120A  158A  256F  120A  158A  	fcall	___fladd
  3228  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0D09  0860               	movf	?___fladd+3,w
  3230  0D0A  00B0               	movwf	___flmul@a+3
  3231  0D0B  085F               	movf	?___fladd+2,w
  3232  0D0C  00AF               	movwf	___flmul@a+2
  3233  0D0D  085E               	movf	?___fladd+1,w
  3234  0D0E  00AE               	movwf	___flmul@a+1
  3235  0D0F  085D               	movf	?___fladd,w
  3236  0D10  00AD               	movwf	___flmul@a
  3237  0D11  120A  118A  23C8  120A  158A  	fcall	___flmul
  3238  0D16  082C               	movf	?___flmul+3,w
  3239  0D17  1683               	bsf	3,5	;RP0=1, select bank1
  3240  0D18  00B3               	movwf	(_mediaLeituraPt100Umidadde$2363+3)^(0+128)
  3241  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0D1A  082B               	movf	?___flmul+2,w
  3243  0D1B  1683               	bsf	3,5	;RP0=1, select bank1
  3244  0D1C  00B2               	movwf	(_mediaLeituraPt100Umidadde$2363+2)^(0+128)
  3245  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0D1E  082A               	movf	?___flmul+1,w
  3247  0D1F  1683               	bsf	3,5	;RP0=1, select bank1
  3248  0D20  00B1               	movwf	(_mediaLeituraPt100Umidadde$2363+1)^(0+128)
  3249  0D21  1283               	bcf	3,5	;RP0=0, select bank0
  3250  0D22  0829               	movf	?___flmul,w
  3251  0D23  1683               	bsf	3,5	;RP0=1, select bank1
  3252  0D24  00B0               	movwf	_mediaLeituraPt100Umidadde$2363^(0+128)
  3253                           
  3254                           ;SlaveLiofilizadorVer1.c: 726:           {;SlaveLiofilizadorVer1.c: 728:           Tempe
      +                          ratura0=Temperatura0-(((Temperatura0+45.0)*(Temperatura0+45.0))*0.013);
  3255  0D25  303C               	movlw	60
  3256  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  3257  0D27  00AC               	movwf	___flmul@b+3
  3258  0D28  3054               	movlw	84
  3259  0D29  00AB               	movwf	___flmul@b+2
  3260  0D2A  30FD               	movlw	253
  3261  0D2B  00AA               	movwf	___flmul@b+1
  3262  0D2C  30F4               	movlw	244
  3263  0D2D  00A9               	movwf	___flmul@b
  3264  0D2E  1683               	bsf	3,5	;RP0=1, select bank1
  3265  0D2F  0833               	movf	(_mediaLeituraPt100Umidadde$2363+3)^(0+128),w
  3266  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  3267  0D31  00B0               	movwf	___flmul@a+3
  3268  0D32  1683               	bsf	3,5	;RP0=1, select bank1
  3269  0D33  0832               	movf	(_mediaLeituraPt100Umidadde$2363+2)^(0+128),w
  3270  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0D35  00AF               	movwf	___flmul@a+2
  3272  0D36  1683               	bsf	3,5	;RP0=1, select bank1
  3273  0D37  0831               	movf	(_mediaLeituraPt100Umidadde$2363+1)^(0+128),w
  3274  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  3275  0D39  00AE               	movwf	___flmul@a+1
  3276  0D3A  1683               	bsf	3,5	;RP0=1, select bank1
  3277  0D3B  0830               	movf	_mediaLeituraPt100Umidadde$2363^(0+128),w
  3278  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  3279  0D3D  00AD               	movwf	___flmul@a
  3280  0D3E  120A  118A  23C8  120A  158A  	fcall	___flmul
  3281  0D43  082C               	movf	?___flmul+3,w
  3282  0D44  1683               	bsf	3,5	;RP0=1, select bank1
  3283  0D45  00A7               	movwf	(___flsub@a+3)^(0+128)
  3284  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0D47  082B               	movf	?___flmul+2,w
  3286  0D48  1683               	bsf	3,5	;RP0=1, select bank1
  3287  0D49  00A6               	movwf	(___flsub@a+2)^(0+128)
  3288  0D4A  1283               	bcf	3,5	;RP0=0, select bank0
  3289  0D4B  082A               	movf	?___flmul+1,w
  3290  0D4C  1683               	bsf	3,5	;RP0=1, select bank1
  3291  0D4D  00A5               	movwf	(___flsub@a+1)^(0+128)
  3292  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  3293  0D4F  0829               	movf	?___flmul,w
  3294  0D50  1683               	bsf	3,5	;RP0=1, select bank1
  3295  0D51  00A4               	movwf	___flsub@a^(0+128)
  3296  0D52  0844               	movf	(_Temperatura0+3)^(0+128),w
  3297  0D53  00AB               	movwf	(___flsub@b+3)^(0+128)
  3298  0D54  0843               	movf	(_Temperatura0+2)^(0+128),w
  3299  0D55  00AA               	movwf	(___flsub@b+2)^(0+128)
  3300  0D56  0842               	movf	(_Temperatura0+1)^(0+128),w
  3301  0D57  00A9               	movwf	(___flsub@b+1)^(0+128)
  3302  0D58  0841               	movf	_Temperatura0^(0+128),w
  3303  0D59  00A8               	movwf	___flsub@b^(0+128)
  3304  0D5A  160A  158A  2520   	fcall	___flsub
  3305  0D5D  0827               	movf	(?___flsub+3)^(0+128),w
  3306  0D5E  00C4               	movwf	(_Temperatura0+3)^(0+128)
  3307  0D5F  0826               	movf	(?___flsub+2)^(0+128),w
  3308  0D60  00C3               	movwf	(_Temperatura0+2)^(0+128)
  3309  0D61  0825               	movf	(?___flsub+1)^(0+128),w
  3310  0D62  00C2               	movwf	(_Temperatura0+1)^(0+128)
  3311  0D63  0824               	movf	?___flsub^(0+128),w
  3312  0D64  00C1               	movwf	_Temperatura0^(0+128)
  3313  0D65  0008               	return
  3314  0D66                     l5058:
  3315                           
  3316                           ;SlaveLiofilizadorVer1.c: 732:         {;SlaveLiofilizadorVer1.c: 733:         Umidade1=
      +                          Temp;
  3317  0D66  0838               	movf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128),w
  3318  0D67  00C0               	movwf	(_Umidade1+3)^(0+128)
  3319  0D68  0837               	movf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128),w
  3320  0D69  00BF               	movwf	(_Umidade1+2)^(0+128)
  3321  0D6A  0836               	movf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128),w
  3322  0D6B  00BE               	movwf	(_Umidade1+1)^(0+128)
  3323  0D6C  0835               	movf	mediaLeituraPt100Umidadde@Temp^(0+128),w
  3324  0D6D  00BD               	movwf	_Umidade1^(0+128)
  3325  0D6E  0008               	return
  3326  0D6F                     __end_of_mediaLeituraPt100Umidadde:
  3327                           
  3328                           	psect	text2
  3329  1D20                     __ptext2:	
  3330 ;; *************** function ___flsub *****************
  3331 ;; Defined at:
  3332 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  a               4    4[BANK1 ] void 
  3335 ;;  b               4    8[BANK1 ] void 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  4    4[BANK1 ] void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 300/100
  3344 ;;		On exit  : 300/100
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3347 ;;      Params:         0       0       8       0       0
  3348 ;;      Locals:         0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0
  3350 ;;      Totals:         0       0       8       0       0
  3351 ;;Total ram usage:        8 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 2
  3354 ;; This function calls:
  3355 ;;		___fladd
  3356 ;; This function is called by:
  3357 ;;		_mediaLeituraPt100Umidadde
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           
  3362                           ;psect for function ___flsub
  3363  1D20                     ___flsub:
  3364                           
  3365                           ;incstack = 0
  3366                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3367  1D20  3080               	movlw	128
  3368  1D21  06A7               	xorwf	(___flsub@a+3)^(0+128),f
  3369  1D22  082B               	movf	(___flsub@b+3)^(0+128),w
  3370  1D23  1283               	bcf	3,5	;RP0=0, select bank0
  3371  1D24  00E0               	movwf	___fladd@b+3
  3372  1D25  1683               	bsf	3,5	;RP0=1, select bank1
  3373  1D26  082A               	movf	(___flsub@b+2)^(0+128),w
  3374  1D27  1283               	bcf	3,5	;RP0=0, select bank0
  3375  1D28  00DF               	movwf	___fladd@b+2
  3376  1D29  1683               	bsf	3,5	;RP0=1, select bank1
  3377  1D2A  0829               	movf	(___flsub@b+1)^(0+128),w
  3378  1D2B  1283               	bcf	3,5	;RP0=0, select bank0
  3379  1D2C  00DE               	movwf	___fladd@b+1
  3380  1D2D  1683               	bsf	3,5	;RP0=1, select bank1
  3381  1D2E  0828               	movf	___flsub@b^(0+128),w
  3382  1D2F  1283               	bcf	3,5	;RP0=0, select bank0
  3383  1D30  00DD               	movwf	___fladd@b
  3384  1D31  1683               	bsf	3,5	;RP0=1, select bank1
  3385  1D32  0827               	movf	(___flsub@a+3)^(0+128),w
  3386  1D33  1283               	bcf	3,5	;RP0=0, select bank0
  3387  1D34  00E4               	movwf	___fladd@a+3
  3388  1D35  1683               	bsf	3,5	;RP0=1, select bank1
  3389  1D36  0826               	movf	(___flsub@a+2)^(0+128),w
  3390  1D37  1283               	bcf	3,5	;RP0=0, select bank0
  3391  1D38  00E3               	movwf	___fladd@a+2
  3392  1D39  1683               	bsf	3,5	;RP0=1, select bank1
  3393  1D3A  0825               	movf	(___flsub@a+1)^(0+128),w
  3394  1D3B  1283               	bcf	3,5	;RP0=0, select bank0
  3395  1D3C  00E2               	movwf	___fladd@a+1
  3396  1D3D  1683               	bsf	3,5	;RP0=1, select bank1
  3397  1D3E  0824               	movf	___flsub@a^(0+128),w
  3398  1D3F  1283               	bcf	3,5	;RP0=0, select bank0
  3399  1D40  00E1               	movwf	___fladd@a
  3400  1D41  120A  158A  256F   	fcall	___fladd
  3401  1D44  1283               	bcf	3,5	;RP0=0, select bank0
  3402  1D45  0860               	movf	?___fladd+3,w
  3403  1D46  1683               	bsf	3,5	;RP0=1, select bank1
  3404  1D47  00A7               	movwf	(?___flsub+3)^(0+128)
  3405  1D48  1283               	bcf	3,5	;RP0=0, select bank0
  3406  1D49  085F               	movf	?___fladd+2,w
  3407  1D4A  1683               	bsf	3,5	;RP0=1, select bank1
  3408  1D4B  00A6               	movwf	(?___flsub+2)^(0+128)
  3409  1D4C  1283               	bcf	3,5	;RP0=0, select bank0
  3410  1D4D  085E               	movf	?___fladd+1,w
  3411  1D4E  1683               	bsf	3,5	;RP0=1, select bank1
  3412  1D4F  00A5               	movwf	(?___flsub+1)^(0+128)
  3413  1D50  1283               	bcf	3,5	;RP0=0, select bank0
  3414  1D51  085D               	movf	?___fladd,w
  3415  1D52  1683               	bsf	3,5	;RP0=1, select bank1
  3416  1D53  00A4               	movwf	?___flsub^(0+128)
  3417  1D54  0008               	return
  3418  1D55                     __end_of___flsub:
  3419                           
  3420                           	psect	text3
  3421  0D6F                     __ptext3:	
  3422 ;; *************** function ___fladd *****************
  3423 ;; Defined at:
  3424 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  b               4   61[BANK0 ] void 
  3427 ;;  a               4   65[BANK0 ] void 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  grs             1    3[BANK1 ] unsigned char 
  3430 ;;  bexp            1    2[BANK1 ] unsigned char 
  3431 ;;  aexp            1    1[BANK1 ] unsigned char 
  3432 ;;  signs           1    0[BANK1 ] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  4   61[BANK0 ] unsigned char 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0, btemp+1
  3437 ;; Tracked objects:
  3438 ;;		On entry : 300/0
  3439 ;;		On exit  : 200/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3442 ;;      Params:         0       8       0       0       0
  3443 ;;      Locals:         0       0       4       0       0
  3444 ;;      Temps:          0       8       0       0       0
  3445 ;;      Totals:         0      16       4       0       0
  3446 ;;Total ram usage:       20 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 1
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_mediaLeituraPt100Umidadde
  3453 ;;		___flsub
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           
  3458                           ;psect for function ___fladd
  3459  0D6F                     ___fladd:
  3460                           
  3461                           ;incstack = 0
  3462                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3463  0D6F  0860               	movf	___fladd@b+3,w
  3464  0D70  3980               	andlw	128
  3465  0D71  00E5               	movwf	??___fladd
  3466  0D72  0865               	movf	??___fladd,w
  3467  0D73  1683               	bsf	3,5	;RP0=1, select bank1
  3468  0D74  00A0               	movwf	___fladd@signs^(0+128)
  3469  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  3470  0D76  0860               	movf	___fladd@b+3,w
  3471  0D77  00E5               	movwf	??___fladd
  3472  0D78  0765               	addwf	??___fladd,w
  3473  0D79  00E6               	movwf	??___fladd+1
  3474  0D7A  0866               	movf	??___fladd+1,w
  3475  0D7B  1683               	bsf	3,5	;RP0=1, select bank1
  3476  0D7C  00A2               	movwf	___fladd@bexp^(0+128)
  3477  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  3478  0D7E  1FDF               	btfss	___fladd@b+2,7
  3479  0D7F  2D82               	goto	l3950
  3480  0D80  1683               	bsf	3,5	;RP0=1, select bank1
  3481  0D81  1422               	bsf	___fladd@bexp^(0+128),0
  3482  0D82                     l3950:
  3483  0D82  1683               	bsf	3,5	;RP0=1, select bank1
  3484  0D83  0822               	movf	___fladd@bexp^(0+128),w
  3485  0D84  1903               	btfsc	3,2
  3486  0D85  2D96               	goto	l3960
  3487  0D86  0A22               	incf	___fladd@bexp^(0+128),w
  3488  0D87  1D03               	btfss	3,2
  3489  0D88  2D92               	goto	l3956
  3490  0D89  3000               	movlw	0
  3491  0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0D8B  00E0               	movwf	___fladd@b+3
  3493  0D8C  3000               	movlw	0
  3494  0D8D  00DF               	movwf	___fladd@b+2
  3495  0D8E  3000               	movlw	0
  3496  0D8F  00DE               	movwf	___fladd@b+1
  3497  0D90  3000               	movlw	0
  3498  0D91  00DD               	movwf	___fladd@b
  3499  0D92                     l3956:
  3500  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  3501  0D93  17DF               	bsf	___fladd@b+2,7
  3502  0D94  01E0               	clrf	___fladd@b+3
  3503  0D95  2D9F               	goto	l3962
  3504  0D96                     l3960:
  3505  0D96  3000               	movlw	0
  3506  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  3507  0D98  00E0               	movwf	___fladd@b+3
  3508  0D99  3000               	movlw	0
  3509  0D9A  00DF               	movwf	___fladd@b+2
  3510  0D9B  3000               	movlw	0
  3511  0D9C  00DE               	movwf	___fladd@b+1
  3512  0D9D  3000               	movlw	0
  3513  0D9E  00DD               	movwf	___fladd@b
  3514  0D9F                     l3962:
  3515  0D9F  0864               	movf	___fladd@a+3,w
  3516  0DA0  3980               	andlw	128
  3517  0DA1  00E5               	movwf	??___fladd
  3518  0DA2  0865               	movf	??___fladd,w
  3519  0DA3  1683               	bsf	3,5	;RP0=1, select bank1
  3520  0DA4  00A1               	movwf	___fladd@aexp^(0+128)
  3521  0DA5  0821               	movf	___fladd@aexp^(0+128),w
  3522  0DA6  0620               	xorwf	___fladd@signs^(0+128),w
  3523  0DA7  1D03               	btfss	3,2
  3524  0DA8  1720               	bsf	___fladd@signs^(0+128),6
  3525  0DA9  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0DAA  0864               	movf	___fladd@a+3,w
  3527  0DAB  00E5               	movwf	??___fladd
  3528  0DAC  0765               	addwf	??___fladd,w
  3529  0DAD  00E6               	movwf	??___fladd+1
  3530  0DAE  0866               	movf	??___fladd+1,w
  3531  0DAF  1683               	bsf	3,5	;RP0=1, select bank1
  3532  0DB0  00A1               	movwf	___fladd@aexp^(0+128)
  3533  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  3534  0DB2  1FE3               	btfss	___fladd@a+2,7
  3535  0DB3  2DB6               	goto	l3974
  3536  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  3537  0DB5  1421               	bsf	___fladd@aexp^(0+128),0
  3538  0DB6                     l3974:
  3539  0DB6  1683               	bsf	3,5	;RP0=1, select bank1
  3540  0DB7  0821               	movf	___fladd@aexp^(0+128),w
  3541  0DB8  1903               	btfsc	3,2
  3542  0DB9  2DCA               	goto	l3984
  3543  0DBA  0A21               	incf	___fladd@aexp^(0+128),w
  3544  0DBB  1D03               	btfss	3,2
  3545  0DBC  2DC6               	goto	l3980
  3546  0DBD  3000               	movlw	0
  3547  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  3548  0DBF  00E4               	movwf	___fladd@a+3
  3549  0DC0  3000               	movlw	0
  3550  0DC1  00E3               	movwf	___fladd@a+2
  3551  0DC2  3000               	movlw	0
  3552  0DC3  00E2               	movwf	___fladd@a+1
  3553  0DC4  3000               	movlw	0
  3554  0DC5  00E1               	movwf	___fladd@a
  3555  0DC6                     l3980:
  3556  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  3557  0DC7  17E3               	bsf	___fladd@a+2,7
  3558  0DC8  01E4               	clrf	___fladd@a+3
  3559  0DC9  2DD3               	goto	l1279
  3560  0DCA                     l3984:
  3561  0DCA  3000               	movlw	0
  3562  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0DCC  00E4               	movwf	___fladd@a+3
  3564  0DCD  3000               	movlw	0
  3565  0DCE  00E3               	movwf	___fladd@a+2
  3566  0DCF  3000               	movlw	0
  3567  0DD0  00E2               	movwf	___fladd@a+1
  3568  0DD1  3000               	movlw	0
  3569  0DD2  00E1               	movwf	___fladd@a
  3570  0DD3                     l1279:
  3571  0DD3  1683               	bsf	3,5	;RP0=1, select bank1
  3572  0DD4  0822               	movf	___fladd@bexp^(0+128),w
  3573  0DD5  0221               	subwf	___fladd@aexp^(0+128),w
  3574  0DD6  1803               	skipnc
  3575  0DD7  2E33               	goto	l4020
  3576  0DD8  1F20               	btfss	___fladd@signs^(0+128),6
  3577  0DD9  2DE0               	goto	l3990
  3578  0DDA  3080               	movlw	128
  3579  0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  3580  0DDC  00E5               	movwf	??___fladd
  3581  0DDD  0865               	movf	??___fladd,w
  3582  0DDE  1683               	bsf	3,5	;RP0=1, select bank1
  3583  0DDF  06A0               	xorwf	___fladd@signs^(0+128),f
  3584  0DE0                     l3990:
  3585  0DE0  0822               	movf	___fladd@bexp^(0+128),w
  3586  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  3587  0DE2  00E5               	movwf	??___fladd
  3588  0DE3  0865               	movf	??___fladd,w
  3589  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  3590  0DE5  00A3               	movwf	___fladd@grs^(0+128)
  3591  0DE6  0821               	movf	___fladd@aexp^(0+128),w
  3592  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  3593  0DE8  00E5               	movwf	??___fladd
  3594  0DE9  0865               	movf	??___fladd,w
  3595  0DEA  1683               	bsf	3,5	;RP0=1, select bank1
  3596  0DEB  00A2               	movwf	___fladd@bexp^(0+128)
  3597  0DEC  0823               	movf	___fladd@grs^(0+128),w
  3598  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  3599  0DEE  00E5               	movwf	??___fladd
  3600  0DEF  0865               	movf	??___fladd,w
  3601  0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  3602  0DF1  00A1               	movwf	___fladd@aexp^(0+128)
  3603  0DF2  1283               	bcf	3,5	;RP0=0, select bank0
  3604  0DF3  085D               	movf	___fladd@b,w
  3605  0DF4  00E5               	movwf	??___fladd
  3606  0DF5  0865               	movf	??___fladd,w
  3607  0DF6  1683               	bsf	3,5	;RP0=1, select bank1
  3608  0DF7  00A3               	movwf	___fladd@grs^(0+128)
  3609  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  3610  0DF9  0861               	movf	___fladd@a,w
  3611  0DFA  00E5               	movwf	??___fladd
  3612  0DFB  0865               	movf	??___fladd,w
  3613  0DFC  00DD               	movwf	___fladd@b
  3614  0DFD  1683               	bsf	3,5	;RP0=1, select bank1
  3615  0DFE  0823               	movf	___fladd@grs^(0+128),w
  3616  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0E00  00E5               	movwf	??___fladd
  3618  0E01  0865               	movf	??___fladd,w
  3619  0E02  00E1               	movwf	___fladd@a
  3620  0E03  085E               	movf	___fladd@b+1,w
  3621  0E04  00E5               	movwf	??___fladd
  3622  0E05  0865               	movf	??___fladd,w
  3623  0E06  1683               	bsf	3,5	;RP0=1, select bank1
  3624  0E07  00A3               	movwf	___fladd@grs^(0+128)
  3625  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0E09  0862               	movf	___fladd@a+1,w
  3627  0E0A  00E5               	movwf	??___fladd
  3628  0E0B  0865               	movf	??___fladd,w
  3629  0E0C  00DE               	movwf	___fladd@b+1
  3630  0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  3631  0E0E  0823               	movf	___fladd@grs^(0+128),w
  3632  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  3633  0E10  00E5               	movwf	??___fladd
  3634  0E11  0865               	movf	??___fladd,w
  3635  0E12  00E2               	movwf	___fladd@a+1
  3636  0E13  085F               	movf	___fladd@b+2,w
  3637  0E14  00E5               	movwf	??___fladd
  3638  0E15  0865               	movf	??___fladd,w
  3639  0E16  1683               	bsf	3,5	;RP0=1, select bank1
  3640  0E17  00A3               	movwf	___fladd@grs^(0+128)
  3641  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  3642  0E19  0863               	movf	___fladd@a+2,w
  3643  0E1A  00E5               	movwf	??___fladd
  3644  0E1B  0865               	movf	??___fladd,w
  3645  0E1C  00DF               	movwf	___fladd@b+2
  3646  0E1D  1683               	bsf	3,5	;RP0=1, select bank1
  3647  0E1E  0823               	movf	___fladd@grs^(0+128),w
  3648  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0E20  00E5               	movwf	??___fladd
  3650  0E21  0865               	movf	??___fladd,w
  3651  0E22  00E3               	movwf	___fladd@a+2
  3652  0E23  0860               	movf	___fladd@b+3,w
  3653  0E24  00E5               	movwf	??___fladd
  3654  0E25  0865               	movf	??___fladd,w
  3655  0E26  1683               	bsf	3,5	;RP0=1, select bank1
  3656  0E27  00A3               	movwf	___fladd@grs^(0+128)
  3657  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0E29  0864               	movf	___fladd@a+3,w
  3659  0E2A  00E5               	movwf	??___fladd
  3660  0E2B  0865               	movf	??___fladd,w
  3661  0E2C  00E0               	movwf	___fladd@b+3
  3662  0E2D  1683               	bsf	3,5	;RP0=1, select bank1
  3663  0E2E  0823               	movf	___fladd@grs^(0+128),w
  3664  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  3665  0E30  00E5               	movwf	??___fladd
  3666  0E31  0865               	movf	??___fladd,w
  3667  0E32  00E4               	movwf	___fladd@a+3
  3668  0E33                     l4020:
  3669  0E33  1683               	bsf	3,5	;RP0=1, select bank1
  3670  0E34  01A3               	clrf	___fladd@grs^(0+128)
  3671  0E35  0821               	movf	___fladd@aexp^(0+128),w
  3672  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3673  0E37  00E5               	movwf	??___fladd
  3674  0E38  01E6               	clrf	??___fladd+1
  3675  0E39  0866               	movf	??___fladd+1,w
  3676  0E3A  00E8               	movwf	??___fladd+3
  3677  0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  3678  0E3C  0822               	movf	___fladd@bexp^(0+128),w
  3679  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  3680  0E3E  0265               	subwf	??___fladd,w
  3681  0E3F  00E7               	movwf	??___fladd+2
  3682  0E40  1C03               	skipc
  3683  0E41  03E8               	decf	??___fladd+3,f
  3684  0E42  0868               	movf	??___fladd+3,w
  3685  0E43  3A80               	xorlw	128
  3686  0E44  00FF               	movwf	127
  3687  0E45  3080               	movlw	128
  3688  0E46  027F               	subwf	127,w
  3689  0E47  1D03               	skipz
  3690  0E48  2E4B               	goto	u3235
  3691  0E49  301A               	movlw	26
  3692  0E4A  0267               	subwf	??___fladd+2,w
  3693  0E4B                     u3235:
  3694  0E4B  1C03               	skipc
  3695  0E4C  2E90               	goto	l4038
  3696  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  3697  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  3698  0E4F  0860               	movf	___fladd@b+3,w
  3699  0E50  045F               	iorwf	___fladd@b+2,w
  3700  0E51  045E               	iorwf	___fladd@b+1,w
  3701  0E52  045D               	iorwf	___fladd@b,w
  3702  0E53  1903               	btfsc	3,2
  3703  0E54  2E57               	goto	u3240
  3704  0E55  3001               	movlw	1
  3705  0E56  2E58               	goto	u3250
  3706  0E57                     u3240:
  3707  0E57  3000               	movlw	0
  3708  0E58                     u3250:
  3709  0E58  00E5               	movwf	??___fladd
  3710  0E59  0865               	movf	??___fladd,w
  3711  0E5A  1683               	bsf	3,5	;RP0=1, select bank1
  3712  0E5B  00A3               	movwf	___fladd@grs^(0+128)
  3713  0E5C  3000               	movlw	0
  3714  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3715  0E5E  00E0               	movwf	___fladd@b+3
  3716  0E5F  3000               	movlw	0
  3717  0E60  00DF               	movwf	___fladd@b+2
  3718  0E61  3000               	movlw	0
  3719  0E62  00DE               	movwf	___fladd@b+1
  3720  0E63  3000               	movlw	0
  3721  0E64  00DD               	movwf	___fladd@b
  3722  0E65  1683               	bsf	3,5	;RP0=1, select bank1
  3723  0E66  0821               	movf	___fladd@aexp^(0+128),w
  3724  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  3725  0E68  00E5               	movwf	??___fladd
  3726  0E69  0865               	movf	??___fladd,w
  3727  0E6A  1683               	bsf	3,5	;RP0=1, select bank1
  3728  0E6B  00A2               	movwf	___fladd@bexp^(0+128)
  3729  0E6C  2E96               	goto	l1283
  3730  0E6D                     l1285:
  3731  0E6D  1C23               	btfss	___fladd@grs^(0+128),0
  3732  0E6E  2E7A               	goto	l4028
  3733  0E6F  0823               	movf	___fladd@grs^(0+128),w
  3734  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0E71  00E5               	movwf	??___fladd
  3736  0E72  1003               	clrc
  3737  0E73  0C65               	rrf	??___fladd,w
  3738  0E74  3801               	iorlw	1
  3739  0E75  00E6               	movwf	??___fladd+1
  3740  0E76  0866               	movf	??___fladd+1,w
  3741  0E77  1683               	bsf	3,5	;RP0=1, select bank1
  3742  0E78  00A3               	movwf	___fladd@grs^(0+128)
  3743  0E79  2E7C               	goto	l4030
  3744  0E7A                     l4028:
  3745  0E7A  1003               	clrc
  3746  0E7B  0CA3               	rrf	___fladd@grs^(0+128),f
  3747  0E7C                     l4030:
  3748  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  3749  0E7D  1C5D               	btfss	___fladd@b,0
  3750  0E7E  2E81               	goto	l4034
  3751  0E7F  1683               	bsf	3,5	;RP0=1, select bank1
  3752  0E80  17A3               	bsf	___fladd@grs^(0+128),7
  3753  0E81                     l4034:
  3754  0E81  3001               	movlw	1
  3755  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  3756  0E83  00E5               	movwf	??___fladd
  3757  0E84                     u3285:
  3758  0E84  0D60               	rlf	___fladd@b+3,w
  3759  0E85  0CE0               	rrf	___fladd@b+3,f
  3760  0E86  0CDF               	rrf	___fladd@b+2,f
  3761  0E87  0CDE               	rrf	___fladd@b+1,f
  3762  0E88  0CDD               	rrf	___fladd@b,f
  3763  0E89  0BE5               	decfsz	??___fladd& (0+127),f
  3764  0E8A  2E84               	goto	u3285
  3765  0E8B  3001               	movlw	1
  3766  0E8C  00E5               	movwf	??___fladd
  3767  0E8D  0865               	movf	??___fladd,w
  3768  0E8E  1683               	bsf	3,5	;RP0=1, select bank1
  3769  0E8F  07A2               	addwf	___fladd@bexp^(0+128),f
  3770  0E90                     l4038:
  3771  0E90  1683               	bsf	3,5	;RP0=1, select bank1
  3772  0E91  1303               	bcf	3,6	;RP1=0, select bank1
  3773  0E92  0821               	movf	___fladd@aexp^(0+128),w
  3774  0E93  0222               	subwf	___fladd@bexp^(0+128),w
  3775  0E94  1C03               	skipc
  3776  0E95  2E6D               	goto	l1285
  3777  0E96                     l1283:
  3778  0E96  1B20               	btfsc	___fladd@signs^(0+128),6
  3779  0E97  2EE1               	goto	l4064
  3780  0E98  0822               	movf	___fladd@bexp^(0+128),w
  3781  0E99  1D03               	btfss	3,2
  3782  0E9A  2EA5               	goto	l4046
  3783  0E9B  3000               	movlw	0
  3784  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  3785  0E9D  00E0               	movwf	?___fladd+3
  3786  0E9E  3000               	movlw	0
  3787  0E9F  00DF               	movwf	?___fladd+2
  3788  0EA0  3000               	movlw	0
  3789  0EA1  00DE               	movwf	?___fladd+1
  3790  0EA2  3000               	movlw	0
  3791  0EA3  00DD               	movwf	?___fladd
  3792  0EA4  0008               	return
  3793  0EA5                     l4046:
  3794  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  3795  0EA6  0861               	movf	___fladd@a,w
  3796  0EA7  07DD               	addwf	___fladd@b,f
  3797  0EA8  0862               	movf	___fladd@a+1,w
  3798  0EA9  1103               	clrz
  3799  0EAA  1803               	skipnc
  3800  0EAB  3E01               	addlw	1
  3801  0EAC  1D03               	btfss	3,2
  3802  0EAD  07DE               	addwf	___fladd@b+1,f
  3803  0EAE  0863               	movf	___fladd@a+2,w
  3804  0EAF  1103               	clrz
  3805  0EB0  1803               	skipnc
  3806  0EB1  3E01               	addlw	1
  3807  0EB2  1D03               	btfss	3,2
  3808  0EB3  07DF               	addwf	___fladd@b+2,f
  3809  0EB4  0864               	movf	___fladd@a+3,w
  3810  0EB5  1103               	clrz
  3811  0EB6  1803               	skipnc
  3812  0EB7  3E01               	addlw	1
  3813  0EB8  1D03               	btfss	3,2
  3814  0EB9  07E0               	addwf	___fladd@b+3,f
  3815  0EBA  1C60               	btfss	___fladd@b+3,0
  3816  0EBB  2F8E               	goto	l4098
  3817  0EBC  1683               	bsf	3,5	;RP0=1, select bank1
  3818  0EBD  1C23               	btfss	___fladd@grs^(0+128),0
  3819  0EBE  2ECA               	goto	l4054
  3820  0EBF  0823               	movf	___fladd@grs^(0+128),w
  3821  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  3822  0EC1  00E5               	movwf	??___fladd
  3823  0EC2  1003               	clrc
  3824  0EC3  0C65               	rrf	??___fladd,w
  3825  0EC4  3801               	iorlw	1
  3826  0EC5  00E6               	movwf	??___fladd+1
  3827  0EC6  0866               	movf	??___fladd+1,w
  3828  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  3829  0EC8  00A3               	movwf	___fladd@grs^(0+128)
  3830  0EC9  2ECC               	goto	l4056
  3831  0ECA                     l4054:
  3832  0ECA  1003               	clrc
  3833  0ECB  0CA3               	rrf	___fladd@grs^(0+128),f
  3834  0ECC                     l4056:
  3835  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  3836  0ECD  1C5D               	btfss	___fladd@b,0
  3837  0ECE  2ED1               	goto	l4060
  3838  0ECF  1683               	bsf	3,5	;RP0=1, select bank1
  3839  0ED0  17A3               	bsf	___fladd@grs^(0+128),7
  3840  0ED1                     l4060:
  3841  0ED1  3001               	movlw	1
  3842  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0ED3  00E5               	movwf	??___fladd
  3844  0ED4                     u3365:
  3845  0ED4  0D60               	rlf	___fladd@b+3,w
  3846  0ED5  0CE0               	rrf	___fladd@b+3,f
  3847  0ED6  0CDF               	rrf	___fladd@b+2,f
  3848  0ED7  0CDE               	rrf	___fladd@b+1,f
  3849  0ED8  0CDD               	rrf	___fladd@b,f
  3850  0ED9  0BE5               	decfsz	??___fladd& (0+127),f
  3851  0EDA  2ED4               	goto	u3365
  3852  0EDB  3001               	movlw	1
  3853  0EDC  00E5               	movwf	??___fladd
  3854  0EDD  0865               	movf	??___fladd,w
  3855  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  3856  0EDF  07A2               	addwf	___fladd@bexp^(0+128),f
  3857  0EE0  2F8E               	goto	l4098
  3858  0EE1                     l4064:
  3859  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3860  0EE2  0860               	movf	___fladd@b+3,w
  3861  0EE3  3A80               	xorlw	128
  3862  0EE4  00FF               	movwf	127
  3863  0EE5  0864               	movf	___fladd@a+3,w
  3864  0EE6  3A80               	xorlw	128
  3865  0EE7  027F               	subwf	127,w
  3866  0EE8  1D03               	skipz
  3867  0EE9  2EF4               	goto	u3373
  3868  0EEA  0863               	movf	___fladd@a+2,w
  3869  0EEB  025F               	subwf	___fladd@b+2,w
  3870  0EEC  1D03               	skipz
  3871  0EED  2EF4               	goto	u3373
  3872  0EEE  0862               	movf	___fladd@a+1,w
  3873  0EEF  025E               	subwf	___fladd@b+1,w
  3874  0EF0  1D03               	skipz
  3875  0EF1  2EF4               	goto	u3373
  3876  0EF2  0861               	movf	___fladd@a,w
  3877  0EF3  025D               	subwf	___fladd@b,w
  3878  0EF4                     u3373:
  3879  0EF4  1803               	skipnc
  3880  0EF5  2F4E               	goto	l4074
  3881  0EF6  30FF               	movlw	255
  3882  0EF7  00E5               	movwf	??___fladd
  3883  0EF8  30FF               	movlw	255
  3884  0EF9  00E6               	movwf	??___fladd+1
  3885  0EFA  30FF               	movlw	255
  3886  0EFB  00E7               	movwf	??___fladd+2
  3887  0EFC  30FF               	movlw	255
  3888  0EFD  00E8               	movwf	??___fladd+3
  3889  0EFE  0861               	movf	___fladd@a,w
  3890  0EFF  00E9               	movwf	??___fladd+4
  3891  0F00  0862               	movf	___fladd@a+1,w
  3892  0F01  00EA               	movwf	??___fladd+5
  3893  0F02  0863               	movf	___fladd@a+2,w
  3894  0F03  00EB               	movwf	??___fladd+6
  3895  0F04  0864               	movf	___fladd@a+3,w
  3896  0F05  00EC               	movwf	??___fladd+7
  3897  0F06  085D               	movf	___fladd@b,w
  3898  0F07  02E9               	subwf	??___fladd+4,f
  3899  0F08  085E               	movf	___fladd@b+1,w
  3900  0F09  1C03               	skipc
  3901  0F0A  0F5E               	incfsz	___fladd@b+1,w
  3902  0F0B  2F0D               	goto	u3381
  3903  0F0C  2F0E               	goto	u3382
  3904  0F0D                     u3381:
  3905  0F0D  02EA               	subwf	??___fladd+5,f
  3906  0F0E                     u3382:
  3907  0F0E  085F               	movf	___fladd@b+2,w
  3908  0F0F  1C03               	skipc
  3909  0F10  0F5F               	incfsz	___fladd@b+2,w
  3910  0F11  2F13               	goto	u3383
  3911  0F12  2F14               	goto	u3384
  3912  0F13                     u3383:
  3913  0F13  02EB               	subwf	??___fladd+6,f
  3914  0F14                     u3384:
  3915  0F14  0860               	movf	___fladd@b+3,w
  3916  0F15  1C03               	skipc
  3917  0F16  0F60               	incfsz	___fladd@b+3,w
  3918  0F17  2F19               	goto	u3385
  3919  0F18  2F1A               	goto	u3386
  3920  0F19                     u3385:
  3921  0F19  02EC               	subwf	??___fladd+7,f
  3922  0F1A                     u3386:
  3923  0F1A  0869               	movf	??___fladd+4,w
  3924  0F1B  07E5               	addwf	??___fladd,f
  3925  0F1C  086A               	movf	??___fladd+5,w
  3926  0F1D  1803               	skipnc
  3927  0F1E  0F6A               	incfsz	??___fladd+5,w
  3928  0F1F  2F21               	goto	u3390
  3929  0F20  2F22               	goto	u3391
  3930  0F21                     u3390:
  3931  0F21  07E6               	addwf	??___fladd+1,f
  3932  0F22                     u3391:
  3933  0F22  086B               	movf	??___fladd+6,w
  3934  0F23  1803               	skipnc
  3935  0F24  0F6B               	incfsz	??___fladd+6,w
  3936  0F25  2F27               	goto	u3392
  3937  0F26  2F28               	goto	u3393
  3938  0F27                     u3392:
  3939  0F27  07E7               	addwf	??___fladd+2,f
  3940  0F28                     u3393:
  3941  0F28  086C               	movf	??___fladd+7,w
  3942  0F29  1803               	skipnc
  3943  0F2A  0A6C               	incf	??___fladd+7,w
  3944  0F2B  07E8               	addwf	??___fladd+3,f
  3945  0F2C  0868               	movf	??___fladd+3,w
  3946  0F2D  00E0               	movwf	___fladd@b+3
  3947  0F2E  0867               	movf	??___fladd+2,w
  3948  0F2F  00DF               	movwf	___fladd@b+2
  3949  0F30  0866               	movf	??___fladd+1,w
  3950  0F31  00DE               	movwf	___fladd@b+1
  3951  0F32  0865               	movf	??___fladd,w
  3952  0F33  00DD               	movwf	___fladd@b
  3953  0F34  3080               	movlw	128
  3954  0F35  00E5               	movwf	??___fladd
  3955  0F36  0865               	movf	??___fladd,w
  3956  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  3957  0F38  06A0               	xorwf	___fladd@signs^(0+128),f
  3958  0F39  09A3               	comf	___fladd@grs^(0+128),f
  3959  0F3A  0AA3               	incf	___fladd@grs^(0+128),f
  3960  0F3B  0823               	movf	___fladd@grs^(0+128),w
  3961  0F3C  1D03               	btfss	3,2
  3962  0F3D  2F5C               	goto	l1300
  3963  0F3E  3001               	movlw	1
  3964  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3965  0F40  07DD               	addwf	___fladd@b,f
  3966  0F41  3000               	movlw	0
  3967  0F42  1803               	skipnc
  3968  0F43  3001               	movlw	1
  3969  0F44  07DE               	addwf	___fladd@b+1,f
  3970  0F45  3000               	movlw	0
  3971  0F46  1803               	skipnc
  3972  0F47  3001               	movlw	1
  3973  0F48  07DF               	addwf	___fladd@b+2,f
  3974  0F49  3000               	movlw	0
  3975  0F4A  1803               	skipnc
  3976  0F4B  3001               	movlw	1
  3977  0F4C  07E0               	addwf	___fladd@b+3,f
  3978  0F4D  2F5C               	goto	l1300
  3979  0F4E                     l4074:
  3980  0F4E  0861               	movf	___fladd@a,w
  3981  0F4F  02DD               	subwf	___fladd@b,f
  3982  0F50  0862               	movf	___fladd@a+1,w
  3983  0F51  1C03               	skipc
  3984  0F52  0F62               	incfsz	___fladd@a+1,w
  3985  0F53  02DE               	subwf	___fladd@b+1,f
  3986  0F54  0863               	movf	___fladd@a+2,w
  3987  0F55  1C03               	skipc
  3988  0F56  0F63               	incfsz	___fladd@a+2,w
  3989  0F57  02DF               	subwf	___fladd@b+2,f
  3990  0F58  0864               	movf	___fladd@a+3,w
  3991  0F59  1C03               	skipc
  3992  0F5A  0F64               	incfsz	___fladd@a+3,w
  3993  0F5B  02E0               	subwf	___fladd@b+3,f
  3994  0F5C                     l1300:
  3995  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  3996  0F5D  0860               	movf	___fladd@b+3,w
  3997  0F5E  045F               	iorwf	___fladd@b+2,w
  3998  0F5F  045E               	iorwf	___fladd@b+1,w
  3999  0F60  045D               	iorwf	___fladd@b,w
  4000  0F61  1D03               	skipz
  4001  0F62  2F8B               	goto	l4096
  4002  0F63  1683               	bsf	3,5	;RP0=1, select bank1
  4003  0F64  0823               	movf	___fladd@grs^(0+128),w
  4004  0F65  1D03               	btfss	3,2
  4005  0F66  2F8B               	goto	l4096
  4006  0F67  3000               	movlw	0
  4007  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  4008  0F69  00E0               	movwf	?___fladd+3
  4009  0F6A  3000               	movlw	0
  4010  0F6B  00DF               	movwf	?___fladd+2
  4011  0F6C  3000               	movlw	0
  4012  0F6D  00DE               	movwf	?___fladd+1
  4013  0F6E  3000               	movlw	0
  4014  0F6F  00DD               	movwf	?___fladd
  4015  0F70  0008               	return
  4016  0F71                     l4082:
  4017  0F71  3001               	movlw	1
  4018  0F72  00E5               	movwf	??___fladd
  4019  0F73                     u3435:
  4020  0F73  1003               	clrc
  4021  0F74  0DDD               	rlf	___fladd@b,f
  4022  0F75  0DDE               	rlf	___fladd@b+1,f
  4023  0F76  0DDF               	rlf	___fladd@b+2,f
  4024  0F77  0DE0               	rlf	___fladd@b+3,f
  4025  0F78  0BE5               	decfsz	??___fladd,f
  4026  0F79  2F73               	goto	u3435
  4027  0F7A  1683               	bsf	3,5	;RP0=1, select bank1
  4028  0F7B  1FA3               	btfss	___fladd@grs^(0+128),7
  4029  0F7C  2F7F               	goto	l1304
  4030  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  4031  0F7E  145D               	bsf	___fladd@b,0
  4032  0F7F                     l1304:
  4033  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  4034  0F80  1C23               	btfss	___fladd@grs^(0+128),0
  4035  0F81  2F84               	goto	l4090
  4036  0F82  1403               	setc
  4037  0F83  2F85               	goto	L2
  4038  0F84                     l4090:
  4039  0F84  1003               	clrc
  4040  0F85                     L2:
  4041  0F85  0DA3               	rlf	___fladd@grs^(0+128),f
  4042  0F86  0822               	movf	___fladd@bexp^(0+128),w
  4043  0F87  1903               	btfsc	3,2
  4044  0F88  2F8B               	goto	l4096
  4045  0F89  3001               	movlw	1
  4046  0F8A  02A2               	subwf	___fladd@bexp^(0+128),f
  4047  0F8B                     l4096:
  4048  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  4049  0F8C  1FDF               	btfss	___fladd@b+2,7
  4050  0F8D  2F71               	goto	l4082
  4051  0F8E                     l4098:
  4052  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  4053  0F8F  01A1               	clrf	___fladd@aexp^(0+128)
  4054  0F90  1FA3               	btfss	___fladd@grs^(0+128),7
  4055  0F91  2F9C               	goto	l4108
  4056  0F92  0823               	movf	___fladd@grs^(0+128),w
  4057  0F93  397F               	andlw	127
  4058  0F94  1D03               	btfss	3,2
  4059  0F95  2F99               	goto	l4104
  4060  0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4061  0F97  1C5D               	btfss	___fladd@b,0
  4062  0F98  2F9C               	goto	l4108
  4063  0F99                     l4104:
  4064  0F99  1683               	bsf	3,5	;RP0=1, select bank1
  4065  0F9A  01A1               	clrf	___fladd@aexp^(0+128)
  4066  0F9B  0AA1               	incf	___fladd@aexp^(0+128),f
  4067  0F9C                     l4108:
  4068  0F9C  1683               	bsf	3,5	;RP0=1, select bank1
  4069  0F9D  0821               	movf	___fladd@aexp^(0+128),w
  4070  0F9E  1903               	btfsc	3,2
  4071  0F9F  2FD4               	goto	l1313
  4072  0FA0  3001               	movlw	1
  4073  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  4074  0FA2  07DD               	addwf	___fladd@b,f
  4075  0FA3  3000               	movlw	0
  4076  0FA4  1803               	skipnc
  4077  0FA5  3001               	movlw	1
  4078  0FA6  07DE               	addwf	___fladd@b+1,f
  4079  0FA7  3000               	movlw	0
  4080  0FA8  1803               	skipnc
  4081  0FA9  3001               	movlw	1
  4082  0FAA  07DF               	addwf	___fladd@b+2,f
  4083  0FAB  3000               	movlw	0
  4084  0FAC  1803               	skipnc
  4085  0FAD  3001               	movlw	1
  4086  0FAE  07E0               	addwf	___fladd@b+3,f
  4087  0FAF  1C60               	btfss	___fladd@b+3,0
  4088  0FB0  2FD4               	goto	l1313
  4089  0FB1  085D               	movf	___fladd@b,w
  4090  0FB2  00E5               	movwf	??___fladd
  4091  0FB3  085E               	movf	___fladd@b+1,w
  4092  0FB4  00E6               	movwf	??___fladd+1
  4093  0FB5  085F               	movf	___fladd@b+2,w
  4094  0FB6  00E7               	movwf	??___fladd+2
  4095  0FB7  0860               	movf	___fladd@b+3,w
  4096  0FB8  00E8               	movwf	??___fladd+3
  4097  0FB9  3001               	movlw	1
  4098  0FBA  00E9               	movwf	??___fladd+4
  4099  0FBB                     u3535:
  4100  0FBB  0D68               	rlf	??___fladd+3,w
  4101  0FBC  0CE8               	rrf	??___fladd+3,f
  4102  0FBD  0CE7               	rrf	??___fladd+2,f
  4103  0FBE  0CE6               	rrf	??___fladd+1,f
  4104  0FBF  0CE5               	rrf	??___fladd,f
  4105  0FC0  0BE9               	decfsz	??___fladd+4,f
  4106  0FC1  2FBB               	goto	u3535
  4107  0FC2  0868               	movf	??___fladd+3,w
  4108  0FC3  00E0               	movwf	___fladd@b+3
  4109  0FC4  0867               	movf	??___fladd+2,w
  4110  0FC5  00DF               	movwf	___fladd@b+2
  4111  0FC6  0866               	movf	??___fladd+1,w
  4112  0FC7  00DE               	movwf	___fladd@b+1
  4113  0FC8  0865               	movf	??___fladd,w
  4114  0FC9  00DD               	movwf	___fladd@b
  4115  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  4116  0FCB  0A22               	incf	___fladd@bexp^(0+128),w
  4117  0FCC  1903               	btfsc	3,2
  4118  0FCD  2FD4               	goto	l1313
  4119  0FCE  3001               	movlw	1
  4120  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  4121  0FD0  00E5               	movwf	??___fladd
  4122  0FD1  0865               	movf	??___fladd,w
  4123  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  4124  0FD3  07A2               	addwf	___fladd@bexp^(0+128),f
  4125  0FD4                     l1313:
  4126  0FD4  1683               	bsf	3,5	;RP0=1, select bank1
  4127  0FD5  0A22               	incf	___fladd@bexp^(0+128),w
  4128  0FD6  1D03               	btfss	3,2
  4129  0FD7  0822               	movf	___fladd@bexp^(0+128),w
  4130  0FD8  1D03               	btfss	3,2
  4131  0FD9  2FE7               	goto	l4126
  4132  0FDA  3000               	movlw	0
  4133  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  4134  0FDC  00E0               	movwf	___fladd@b+3
  4135  0FDD  3000               	movlw	0
  4136  0FDE  00DF               	movwf	___fladd@b+2
  4137  0FDF  3000               	movlw	0
  4138  0FE0  00DE               	movwf	___fladd@b+1
  4139  0FE1  3000               	movlw	0
  4140  0FE2  00DD               	movwf	___fladd@b
  4141  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  4142  0FE4  0822               	movf	___fladd@bexp^(0+128),w
  4143  0FE5  1903               	btfsc	3,2
  4144  0FE6  01A0               	clrf	___fladd@signs^(0+128)
  4145  0FE7                     l4126:
  4146  0FE7  1C22               	btfss	___fladd@bexp^(0+128),0
  4147  0FE8  2FEC               	goto	l4130
  4148  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  4149  0FEA  17DF               	bsf	___fladd@b+2,7
  4150  0FEB  2FF1               	goto	l1321
  4151  0FEC                     l4130:
  4152  0FEC  307F               	movlw	127
  4153  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  4154  0FEE  00E5               	movwf	??___fladd
  4155  0FEF  0865               	movf	??___fladd,w
  4156  0FF0  05DF               	andwf	___fladd@b+2,f
  4157  0FF1                     l1321:
  4158  0FF1  1683               	bsf	3,5	;RP0=1, select bank1
  4159  0FF2  0822               	movf	___fladd@bexp^(0+128),w
  4160  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  4161  0FF4  00E5               	movwf	??___fladd
  4162  0FF5  1003               	clrc
  4163  0FF6  0C65               	rrf	??___fladd,w
  4164  0FF7  00E6               	movwf	??___fladd+1
  4165  0FF8  0866               	movf	??___fladd+1,w
  4166  0FF9  00E0               	movwf	___fladd@b+3
  4167  0FFA  1683               	bsf	3,5	;RP0=1, select bank1
  4168  0FFB  1FA0               	btfss	___fladd@signs^(0+128),7
  4169  0FFC  0008               	return
  4170  0FFD  1283               	bcf	3,5	;RP0=0, select bank0
  4171  0FFE  17E0               	bsf	___fladd@b+3,7
  4172  0FFF  0008               	return
  4173  1000                     __end_of___fladd:
  4174                           
  4175                           	psect	text4
  4176  107E                     __ptext4:	
  4177 ;; *************** function ___flge *****************
  4178 ;; Defined at:
  4179 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;  ff1             4    0[BANK0 ] unsigned char 
  4182 ;;  ff2             4    4[BANK0 ] unsigned char 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;		None
  4185 ;; Return value:  Size  Location     Type
  4186 ;;		None               void
  4187 ;; Registers used:
  4188 ;;		wreg, status,2, status,0
  4189 ;; Tracked objects:
  4190 ;;		On entry : 300/0
  4191 ;;		On exit  : 300/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4194 ;;      Params:         0       8       0       0       0
  4195 ;;      Locals:         0       0       0       0       0
  4196 ;;      Temps:          0       4       0       0       0
  4197 ;;      Totals:         0      12       0       0       0
  4198 ;;Total ram usage:       12 bytes
  4199 ;; Hardware stack levels used: 1
  4200 ;; Hardware stack levels required when called: 1
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_mediaLeituraPt100Umidadde
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function ___flge
  4210  107E                     ___flge:
  4211                           
  4212                           ;incstack = 0
  4213                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4214  107E  3000               	movlw	0
  4215  107F  0520               	andwf	___flge@ff1,w
  4216  1080  00A8               	movwf	??___flge
  4217  1081  3000               	movlw	0
  4218  1082  0521               	andwf	___flge@ff1+1,w
  4219  1083  00A9               	movwf	??___flge+1
  4220  1084  3080               	movlw	128
  4221  1085  0522               	andwf	___flge@ff1+2,w
  4222  1086  00AA               	movwf	??___flge+2
  4223  1087  307F               	movlw	127
  4224  1088  0523               	andwf	___flge@ff1+3,w
  4225  1089  00AB               	movwf	??___flge+3
  4226  108A  082B               	movf	??___flge+3,w
  4227  108B  042A               	iorwf	??___flge+2,w
  4228  108C  0429               	iorwf	??___flge+1,w
  4229  108D  0428               	iorwf	??___flge,w
  4230  108E  1D03               	skipz
  4231  108F  2898               	goto	l1160
  4232  1090  3000               	movlw	0
  4233  1091  00A3               	movwf	___flge@ff1+3
  4234  1092  3000               	movlw	0
  4235  1093  00A2               	movwf	___flge@ff1+2
  4236  1094  3000               	movlw	0
  4237  1095  00A1               	movwf	___flge@ff1+1
  4238  1096  3000               	movlw	0
  4239  1097  00A0               	movwf	___flge@ff1
  4240  1098                     l1160:
  4241  1098  3000               	movlw	0
  4242  1099  0524               	andwf	___flge@ff2,w
  4243  109A  00A8               	movwf	??___flge
  4244  109B  3000               	movlw	0
  4245  109C  0525               	andwf	___flge@ff2+1,w
  4246  109D  00A9               	movwf	??___flge+1
  4247  109E  3080               	movlw	128
  4248  109F  0526               	andwf	___flge@ff2+2,w
  4249  10A0  00AA               	movwf	??___flge+2
  4250  10A1  307F               	movlw	127
  4251  10A2  0527               	andwf	___flge@ff2+3,w
  4252  10A3  00AB               	movwf	??___flge+3
  4253  10A4  082B               	movf	??___flge+3,w
  4254  10A5  042A               	iorwf	??___flge+2,w
  4255  10A6  0429               	iorwf	??___flge+1,w
  4256  10A7  0428               	iorwf	??___flge,w
  4257  10A8  1D03               	skipz
  4258  10A9  28B2               	goto	l4786
  4259  10AA  3000               	movlw	0
  4260  10AB  00A7               	movwf	___flge@ff2+3
  4261  10AC  3000               	movlw	0
  4262  10AD  00A6               	movwf	___flge@ff2+2
  4263  10AE  3000               	movlw	0
  4264  10AF  00A5               	movwf	___flge@ff2+1
  4265  10B0  3000               	movlw	0
  4266  10B1  00A4               	movwf	___flge@ff2
  4267  10B2                     l4786:
  4268  10B2  1FA3               	btfss	___flge@ff1+3,7
  4269  10B3  28D8               	goto	l4790
  4270  10B4  3000               	movlw	0
  4271  10B5  00A8               	movwf	??___flge
  4272  10B6  3000               	movlw	0
  4273  10B7  00A9               	movwf	??___flge+1
  4274  10B8  3000               	movlw	0
  4275  10B9  00AA               	movwf	??___flge+2
  4276  10BA  3080               	movlw	128
  4277  10BB  00AB               	movwf	??___flge+3
  4278  10BC  0820               	movf	___flge@ff1,w
  4279  10BD  02A8               	subwf	??___flge,f
  4280  10BE  0821               	movf	___flge@ff1+1,w
  4281  10BF  1C03               	skipc
  4282  10C0  0F21               	incfsz	___flge@ff1+1,w
  4283  10C1  28C3               	goto	u4501
  4284  10C2  28C4               	goto	u4502
  4285  10C3                     u4501:
  4286  10C3  02A9               	subwf	??___flge+1,f
  4287  10C4                     u4502:
  4288  10C4  0822               	movf	___flge@ff1+2,w
  4289  10C5  1C03               	skipc
  4290  10C6  0F22               	incfsz	___flge@ff1+2,w
  4291  10C7  28C9               	goto	u4503
  4292  10C8  28CA               	goto	u4504
  4293  10C9                     u4503:
  4294  10C9  02AA               	subwf	??___flge+2,f
  4295  10CA                     u4504:
  4296  10CA  0823               	movf	___flge@ff1+3,w
  4297  10CB  1C03               	skipc
  4298  10CC  0F23               	incfsz	___flge@ff1+3,w
  4299  10CD  28CF               	goto	u4505
  4300  10CE  28D0               	goto	u4506
  4301  10CF                     u4505:
  4302  10CF  02AB               	subwf	??___flge+3,f
  4303  10D0                     u4506:
  4304  10D0  082B               	movf	??___flge+3,w
  4305  10D1  00A3               	movwf	___flge@ff1+3
  4306  10D2  082A               	movf	??___flge+2,w
  4307  10D3  00A2               	movwf	___flge@ff1+2
  4308  10D4  0829               	movf	??___flge+1,w
  4309  10D5  00A1               	movwf	___flge@ff1+1
  4310  10D6  0828               	movf	??___flge,w
  4311  10D7  00A0               	movwf	___flge@ff1
  4312  10D8                     l4790:
  4313  10D8  1FA7               	btfss	___flge@ff2+3,7
  4314  10D9  28FE               	goto	l1163
  4315  10DA  3000               	movlw	0
  4316  10DB  00A8               	movwf	??___flge
  4317  10DC  3000               	movlw	0
  4318  10DD  00A9               	movwf	??___flge+1
  4319  10DE  3000               	movlw	0
  4320  10DF  00AA               	movwf	??___flge+2
  4321  10E0  3080               	movlw	128
  4322  10E1  00AB               	movwf	??___flge+3
  4323  10E2  0824               	movf	___flge@ff2,w
  4324  10E3  02A8               	subwf	??___flge,f
  4325  10E4  0825               	movf	___flge@ff2+1,w
  4326  10E5  1C03               	skipc
  4327  10E6  0F25               	incfsz	___flge@ff2+1,w
  4328  10E7  28E9               	goto	u4521
  4329  10E8  28EA               	goto	u4522
  4330  10E9                     u4521:
  4331  10E9  02A9               	subwf	??___flge+1,f
  4332  10EA                     u4522:
  4333  10EA  0826               	movf	___flge@ff2+2,w
  4334  10EB  1C03               	skipc
  4335  10EC  0F26               	incfsz	___flge@ff2+2,w
  4336  10ED  28EF               	goto	u4523
  4337  10EE  28F0               	goto	u4524
  4338  10EF                     u4523:
  4339  10EF  02AA               	subwf	??___flge+2,f
  4340  10F0                     u4524:
  4341  10F0  0827               	movf	___flge@ff2+3,w
  4342  10F1  1C03               	skipc
  4343  10F2  0F27               	incfsz	___flge@ff2+3,w
  4344  10F3  28F5               	goto	u4525
  4345  10F4  28F6               	goto	u4526
  4346  10F5                     u4525:
  4347  10F5  02AB               	subwf	??___flge+3,f
  4348  10F6                     u4526:
  4349  10F6  082B               	movf	??___flge+3,w
  4350  10F7  00A7               	movwf	___flge@ff2+3
  4351  10F8  082A               	movf	??___flge+2,w
  4352  10F9  00A6               	movwf	___flge@ff2+2
  4353  10FA  0829               	movf	??___flge+1,w
  4354  10FB  00A5               	movwf	___flge@ff2+1
  4355  10FC  0828               	movf	??___flge,w
  4356  10FD  00A4               	movwf	___flge@ff2
  4357  10FE                     l1163:
  4358  10FE  3080               	movlw	128
  4359  10FF  06A3               	xorwf	___flge@ff1+3,f
  4360  1100  3080               	movlw	128
  4361  1101  06A7               	xorwf	___flge@ff2+3,f
  4362  1102  0827               	movf	___flge@ff2+3,w
  4363  1103  0223               	subwf	___flge@ff1+3,w
  4364  1104  1D03               	skipz
  4365  1105  0008               	return
  4366  1106  0826               	movf	___flge@ff2+2,w
  4367  1107  0222               	subwf	___flge@ff1+2,w
  4368  1108  1D03               	skipz
  4369  1109  0008               	return
  4370  110A  0825               	movf	___flge@ff2+1,w
  4371  110B  0221               	subwf	___flge@ff1+1,w
  4372  110C  1D03               	skipz
  4373  110D  0008               	return
  4374  110E  0824               	movf	___flge@ff2,w
  4375  110F  0220               	subwf	___flge@ff1,w
  4376  1110  0008               	return
  4377  1111                     __end_of___flge:
  4378                           
  4379                           	psect	text5
  4380  09E3                     __ptext5:	
  4381 ;; *************** function ___fldiv *****************
  4382 ;; Defined at:
  4383 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;  a               4   35[BANK0 ] unsigned char 
  4386 ;;  b               4   39[BANK0 ] unsigned char 
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;  grs             4   55[BANK0 ] unsigned long 
  4389 ;;  rem             4   48[BANK0 ] unsigned long 
  4390 ;;  new_exp         2   53[BANK0 ] int 
  4391 ;;  aexp            1   60[BANK0 ] unsigned char 
  4392 ;;  bexp            1   59[BANK0 ] unsigned char 
  4393 ;;  sign            1   52[BANK0 ] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  4   35[BANK0 ] unsigned char 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0, btemp+1
  4398 ;; Tracked objects:
  4399 ;;		On entry : 300/0
  4400 ;;		On exit  : 300/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4403 ;;      Params:         0       8       0       0       0
  4404 ;;      Locals:         0      13       0       0       0
  4405 ;;      Temps:          0       5       0       0       0
  4406 ;;      Totals:         0      26       0       0       0
  4407 ;;Total ram usage:       26 bytes
  4408 ;; Hardware stack levels used: 1
  4409 ;; Hardware stack levels required when called: 1
  4410 ;; This function calls:
  4411 ;;		Nothing
  4412 ;; This function is called by:
  4413 ;;		_mediaLeituraPt100Umidadde
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           
  4418                           ;psect for function ___fldiv
  4419  09E3                     ___fldiv:
  4420                           
  4421                           ;incstack = 0
  4422                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4423  09E3  084A               	movf	___fldiv@b+3,w
  4424  09E4  3980               	andlw	128
  4425  09E5  00CB               	movwf	??___fldiv
  4426  09E6  084B               	movf	??___fldiv,w
  4427  09E7  00D4               	movwf	___fldiv@sign
  4428  09E8  084A               	movf	___fldiv@b+3,w
  4429  09E9  00CB               	movwf	??___fldiv
  4430  09EA  074B               	addwf	??___fldiv,w
  4431  09EB  00CC               	movwf	??___fldiv+1
  4432  09EC  084C               	movf	??___fldiv+1,w
  4433  09ED  00DB               	movwf	___fldiv@bexp
  4434  09EE  1BC9               	btfsc	___fldiv@b+2,7
  4435  09EF  145B               	bsf	___fldiv@bexp,0
  4436  09F0  085B               	movf	___fldiv@bexp,w
  4437  09F1  1903               	btfsc	3,2
  4438  09F2  2A01               	goto	l4824
  4439  09F3  0A5B               	incf	___fldiv@bexp,w
  4440  09F4  1D03               	btfss	3,2
  4441  09F5  29FE               	goto	l4820
  4442  09F6  3000               	movlw	0
  4443  09F7  00CA               	movwf	___fldiv@b+3
  4444  09F8  3000               	movlw	0
  4445  09F9  00C9               	movwf	___fldiv@b+2
  4446  09FA  3000               	movlw	0
  4447  09FB  00C8               	movwf	___fldiv@b+1
  4448  09FC  3000               	movlw	0
  4449  09FD  00C7               	movwf	___fldiv@b
  4450  09FE                     l4820:
  4451  09FE  17C9               	bsf	___fldiv@b+2,7
  4452  09FF  01CA               	clrf	___fldiv@b+3
  4453  0A00  2A09               	goto	l4826
  4454  0A01                     l4824:
  4455  0A01  3000               	movlw	0
  4456  0A02  00CA               	movwf	___fldiv@b+3
  4457  0A03  3000               	movlw	0
  4458  0A04  00C9               	movwf	___fldiv@b+2
  4459  0A05  3000               	movlw	0
  4460  0A06  00C8               	movwf	___fldiv@b+1
  4461  0A07  3000               	movlw	0
  4462  0A08  00C7               	movwf	___fldiv@b
  4463  0A09                     l4826:
  4464  0A09  0846               	movf	___fldiv@a+3,w
  4465  0A0A  3980               	andlw	128
  4466  0A0B  00CB               	movwf	??___fldiv
  4467  0A0C  084B               	movf	??___fldiv,w
  4468  0A0D  06D4               	xorwf	___fldiv@sign,f
  4469  0A0E  0846               	movf	___fldiv@a+3,w
  4470  0A0F  00CB               	movwf	??___fldiv
  4471  0A10  074B               	addwf	??___fldiv,w
  4472  0A11  00CC               	movwf	??___fldiv+1
  4473  0A12  084C               	movf	??___fldiv+1,w
  4474  0A13  00DC               	movwf	___fldiv@aexp
  4475  0A14  1BC5               	btfsc	___fldiv@a+2,7
  4476  0A15  145C               	bsf	___fldiv@aexp,0
  4477  0A16  085C               	movf	___fldiv@aexp,w
  4478  0A17  1903               	btfsc	3,2
  4479  0A18  2A27               	goto	l4844
  4480  0A19  0A5C               	incf	___fldiv@aexp,w
  4481  0A1A  1D03               	btfss	3,2
  4482  0A1B  2A24               	goto	l4840
  4483  0A1C  3000               	movlw	0
  4484  0A1D  00C6               	movwf	___fldiv@a+3
  4485  0A1E  3000               	movlw	0
  4486  0A1F  00C5               	movwf	___fldiv@a+2
  4487  0A20  3000               	movlw	0
  4488  0A21  00C4               	movwf	___fldiv@a+1
  4489  0A22  3000               	movlw	0
  4490  0A23  00C3               	movwf	___fldiv@a
  4491  0A24                     l4840:
  4492  0A24  17C5               	bsf	___fldiv@a+2,7
  4493  0A25  01C6               	clrf	___fldiv@a+3
  4494  0A26  2A2F               	goto	l1335
  4495  0A27                     l4844:
  4496  0A27  3000               	movlw	0
  4497  0A28  00C6               	movwf	___fldiv@a+3
  4498  0A29  3000               	movlw	0
  4499  0A2A  00C5               	movwf	___fldiv@a+2
  4500  0A2B  3000               	movlw	0
  4501  0A2C  00C4               	movwf	___fldiv@a+1
  4502  0A2D  3000               	movlw	0
  4503  0A2E  00C3               	movwf	___fldiv@a
  4504  0A2F                     l1335:
  4505  0A2F  0846               	movf	___fldiv@a+3,w
  4506  0A30  0445               	iorwf	___fldiv@a+2,w
  4507  0A31  0444               	iorwf	___fldiv@a+1,w
  4508  0A32  0443               	iorwf	___fldiv@a,w
  4509  0A33  1D03               	skipz
  4510  0A34  2A4E               	goto	l4854
  4511  0A35  3000               	movlw	0
  4512  0A36  00CA               	movwf	___fldiv@b+3
  4513  0A37  3000               	movlw	0
  4514  0A38  00C9               	movwf	___fldiv@b+2
  4515  0A39  3000               	movlw	0
  4516  0A3A  00C8               	movwf	___fldiv@b+1
  4517  0A3B  3000               	movlw	0
  4518  0A3C  00C7               	movwf	___fldiv@b
  4519  0A3D  3080               	movlw	128
  4520  0A3E  04C9               	iorwf	___fldiv@b+2,f
  4521  0A3F  307F               	movlw	127
  4522  0A40  04CA               	iorwf	___fldiv@b+3,f
  4523  0A41                     L4:
  4524  0A41  0854               	movf	___fldiv@sign,w
  4525  0A42  00CB               	movwf	??___fldiv
  4526  0A43  084B               	movf	??___fldiv,w
  4527  0A44  04CA               	iorwf	___fldiv@b+3,f
  4528  0A45  084A               	movf	___fldiv@b+3,w
  4529  0A46  00C6               	movwf	?___fldiv+3
  4530  0A47  0849               	movf	___fldiv@b+2,w
  4531  0A48  00C5               	movwf	?___fldiv+2
  4532  0A49  0848               	movf	___fldiv@b+1,w
  4533  0A4A  00C4               	movwf	?___fldiv+1
  4534  0A4B  0847               	movf	___fldiv@b,w
  4535  0A4C  00C3               	movwf	?___fldiv
  4536  0A4D  0008               	return
  4537  0A4E                     l4854:
  4538  0A4E  085B               	movf	___fldiv@bexp,w
  4539  0A4F  1D03               	btfss	3,2
  4540  0A50  2A5A               	goto	l4860
  4541  0A51  3000               	movlw	0
  4542  0A52  00C6               	movwf	?___fldiv+3
  4543  0A53  3000               	movlw	0
  4544  0A54  00C5               	movwf	?___fldiv+2
  4545  0A55  3000               	movlw	0
  4546  0A56  00C4               	movwf	?___fldiv+1
  4547  0A57  3000               	movlw	0
  4548  0A58  00C3               	movwf	?___fldiv
  4549  0A59  0008               	return
  4550  0A5A                     l4860:
  4551  0A5A  085B               	movf	___fldiv@bexp,w
  4552  0A5B  00CB               	movwf	??___fldiv
  4553  0A5C  01CC               	clrf	??___fldiv+1
  4554  0A5D  084C               	movf	??___fldiv+1,w
  4555  0A5E  00CE               	movwf	??___fldiv+3
  4556  0A5F  085C               	movf	___fldiv@aexp,w
  4557  0A60  024B               	subwf	??___fldiv,w
  4558  0A61  00CD               	movwf	??___fldiv+2
  4559  0A62  1C03               	skipc
  4560  0A63  03CE               	decf	??___fldiv+3,f
  4561  0A64  084D               	movf	??___fldiv+2,w
  4562  0A65  3E7F               	addlw	127
  4563  0A66  00D5               	movwf	___fldiv@new_exp
  4564  0A67  084E               	movf	??___fldiv+3,w
  4565  0A68  1803               	skipnc
  4566  0A69  3E01               	addlw	1
  4567  0A6A  3E00               	addlw	0
  4568  0A6B  00D6               	movwf	___fldiv@new_exp+1
  4569  0A6C  084A               	movf	___fldiv@b+3,w
  4570  0A6D  00D3               	movwf	___fldiv@rem+3
  4571  0A6E  0849               	movf	___fldiv@b+2,w
  4572  0A6F  00D2               	movwf	___fldiv@rem+2
  4573  0A70  0848               	movf	___fldiv@b+1,w
  4574  0A71  00D1               	movwf	___fldiv@rem+1
  4575  0A72  0847               	movf	___fldiv@b,w
  4576  0A73  00D0               	movwf	___fldiv@rem
  4577  0A74  3000               	movlw	0
  4578  0A75  00CA               	movwf	___fldiv@b+3
  4579  0A76  3000               	movlw	0
  4580  0A77  00C9               	movwf	___fldiv@b+2
  4581  0A78  3000               	movlw	0
  4582  0A79  00C8               	movwf	___fldiv@b+1
  4583  0A7A  3000               	movlw	0
  4584  0A7B  00C7               	movwf	___fldiv@b
  4585  0A7C  3000               	movlw	0
  4586  0A7D  00DA               	movwf	___fldiv@grs+3
  4587  0A7E  3000               	movlw	0
  4588  0A7F  00D9               	movwf	___fldiv@grs+2
  4589  0A80  3000               	movlw	0
  4590  0A81  00D8               	movwf	___fldiv@grs+1
  4591  0A82  3000               	movlw	0
  4592  0A83  00D7               	movwf	___fldiv@grs
  4593  0A84  01DC               	clrf	___fldiv@aexp
  4594  0A85                     l4888:
  4595  0A85  301A               	movlw	26
  4596  0A86  025C               	subwf	___fldiv@aexp,w
  4597  0A87  1803               	btfsc	3,0
  4598  0A88  2ACD               	goto	l4890
  4599  0A89  085C               	movf	___fldiv@aexp,w
  4600  0A8A  1903               	btfsc	3,2
  4601  0A8B  2AA9               	goto	l4880
  4602  0A8C  3001               	movlw	1
  4603  0A8D  00CB               	movwf	??___fldiv
  4604  0A8E                     u4635:
  4605  0A8E  1003               	clrc
  4606  0A8F  0DD0               	rlf	___fldiv@rem,f
  4607  0A90  0DD1               	rlf	___fldiv@rem+1,f
  4608  0A91  0DD2               	rlf	___fldiv@rem+2,f
  4609  0A92  0DD3               	rlf	___fldiv@rem+3,f
  4610  0A93  0BCB               	decfsz	??___fldiv,f
  4611  0A94  2A8E               	goto	u4635
  4612  0A95  3001               	movlw	1
  4613  0A96  00CB               	movwf	??___fldiv
  4614  0A97                     u4645:
  4615  0A97  1003               	clrc
  4616  0A98  0DC7               	rlf	___fldiv@b,f
  4617  0A99  0DC8               	rlf	___fldiv@b+1,f
  4618  0A9A  0DC9               	rlf	___fldiv@b+2,f
  4619  0A9B  0DCA               	rlf	___fldiv@b+3,f
  4620  0A9C  0BCB               	decfsz	??___fldiv,f
  4621  0A9D  2A97               	goto	u4645
  4622  0A9E  1BDA               	btfsc	___fldiv@grs+3,7
  4623  0A9F  1447               	bsf	___fldiv@b,0
  4624  0AA0  3001               	movlw	1
  4625  0AA1  00CB               	movwf	??___fldiv
  4626  0AA2                     u4665:
  4627  0AA2  1003               	clrc
  4628  0AA3  0DD7               	rlf	___fldiv@grs,f
  4629  0AA4  0DD8               	rlf	___fldiv@grs+1,f
  4630  0AA5  0DD9               	rlf	___fldiv@grs+2,f
  4631  0AA6  0DDA               	rlf	___fldiv@grs+3,f
  4632  0AA7  0BCB               	decfsz	??___fldiv,f
  4633  0AA8  2AA2               	goto	u4665
  4634  0AA9                     l4880:
  4635  0AA9  0846               	movf	___fldiv@a+3,w
  4636  0AAA  0253               	subwf	___fldiv@rem+3,w
  4637  0AAB  1D03               	skipz
  4638  0AAC  2AB7               	goto	u4675
  4639  0AAD  0845               	movf	___fldiv@a+2,w
  4640  0AAE  0252               	subwf	___fldiv@rem+2,w
  4641  0AAF  1D03               	skipz
  4642  0AB0  2AB7               	goto	u4675
  4643  0AB1  0844               	movf	___fldiv@a+1,w
  4644  0AB2  0251               	subwf	___fldiv@rem+1,w
  4645  0AB3  1D03               	skipz
  4646  0AB4  2AB7               	goto	u4675
  4647  0AB5  0843               	movf	___fldiv@a,w
  4648  0AB6  0250               	subwf	___fldiv@rem,w
  4649  0AB7                     u4675:
  4650  0AB7  1C03               	skipc
  4651  0AB8  2AC8               	goto	l4886
  4652  0AB9  175A               	bsf	___fldiv@grs+3,6
  4653  0ABA  0843               	movf	___fldiv@a,w
  4654  0ABB  02D0               	subwf	___fldiv@rem,f
  4655  0ABC  0844               	movf	___fldiv@a+1,w
  4656  0ABD  1C03               	skipc
  4657  0ABE  0F44               	incfsz	___fldiv@a+1,w
  4658  0ABF  02D1               	subwf	___fldiv@rem+1,f
  4659  0AC0  0845               	movf	___fldiv@a+2,w
  4660  0AC1  1C03               	skipc
  4661  0AC2  0F45               	incfsz	___fldiv@a+2,w
  4662  0AC3  02D2               	subwf	___fldiv@rem+2,f
  4663  0AC4  0846               	movf	___fldiv@a+3,w
  4664  0AC5  1C03               	skipc
  4665  0AC6  0F46               	incfsz	___fldiv@a+3,w
  4666  0AC7  02D3               	subwf	___fldiv@rem+3,f
  4667  0AC8                     l4886:
  4668  0AC8  3001               	movlw	1
  4669  0AC9  00CB               	movwf	??___fldiv
  4670  0ACA  084B               	movf	??___fldiv,w
  4671  0ACB  07DC               	addwf	___fldiv@aexp,f
  4672  0ACC  2A85               	goto	l4888
  4673  0ACD                     l4890:
  4674  0ACD  0853               	movf	___fldiv@rem+3,w
  4675  0ACE  0452               	iorwf	___fldiv@rem+2,w
  4676  0ACF  0451               	iorwf	___fldiv@rem+1,w
  4677  0AD0  0450               	iorwf	___fldiv@rem,w
  4678  0AD1  1D03               	btfss	3,2
  4679  0AD2  1457               	bsf	___fldiv@grs,0
  4680  0AD3                     l4904:
  4681  0AD3  1BC9               	btfsc	___fldiv@b+2,7
  4682  0AD4  2AF0               	goto	l4906
  4683  0AD5  3001               	movlw	1
  4684  0AD6  00CB               	movwf	??___fldiv
  4685  0AD7                     u4705:
  4686  0AD7  1003               	clrc
  4687  0AD8  0DC7               	rlf	___fldiv@b,f
  4688  0AD9  0DC8               	rlf	___fldiv@b+1,f
  4689  0ADA  0DC9               	rlf	___fldiv@b+2,f
  4690  0ADB  0DCA               	rlf	___fldiv@b+3,f
  4691  0ADC  0BCB               	decfsz	??___fldiv,f
  4692  0ADD  2AD7               	goto	u4705
  4693  0ADE  1BDA               	btfsc	___fldiv@grs+3,7
  4694  0ADF  1447               	bsf	___fldiv@b,0
  4695  0AE0  3001               	movlw	1
  4696  0AE1  00CB               	movwf	??___fldiv
  4697  0AE2                     u4725:
  4698  0AE2  1003               	clrc
  4699  0AE3  0DD7               	rlf	___fldiv@grs,f
  4700  0AE4  0DD8               	rlf	___fldiv@grs+1,f
  4701  0AE5  0DD9               	rlf	___fldiv@grs+2,f
  4702  0AE6  0DDA               	rlf	___fldiv@grs+3,f
  4703  0AE7  0BCB               	decfsz	??___fldiv,f
  4704  0AE8  2AE2               	goto	u4725
  4705  0AE9  30FF               	movlw	255
  4706  0AEA  07D5               	addwf	___fldiv@new_exp,f
  4707  0AEB  1803               	skipnc
  4708  0AEC  0AD6               	incf	___fldiv@new_exp+1,f
  4709  0AED  30FF               	movlw	255
  4710  0AEE  07D6               	addwf	___fldiv@new_exp+1,f
  4711  0AEF  2AD3               	goto	l4904
  4712  0AF0                     l4906:
  4713  0AF0  01DC               	clrf	___fldiv@aexp
  4714  0AF1  1FDA               	btfss	___fldiv@grs+3,7
  4715  0AF2  2B09               	goto	l4916
  4716  0AF3  30FF               	movlw	255
  4717  0AF4  0557               	andwf	___fldiv@grs,w
  4718  0AF5  00CB               	movwf	??___fldiv
  4719  0AF6  30FF               	movlw	255
  4720  0AF7  0558               	andwf	___fldiv@grs+1,w
  4721  0AF8  00CC               	movwf	??___fldiv+1
  4722  0AF9  30FF               	movlw	255
  4723  0AFA  0559               	andwf	___fldiv@grs+2,w
  4724  0AFB  00CD               	movwf	??___fldiv+2
  4725  0AFC  307F               	movlw	127
  4726  0AFD  055A               	andwf	___fldiv@grs+3,w
  4727  0AFE  00CE               	movwf	??___fldiv+3
  4728  0AFF  084E               	movf	??___fldiv+3,w
  4729  0B00  044D               	iorwf	??___fldiv+2,w
  4730  0B01  044C               	iorwf	??___fldiv+1,w
  4731  0B02  044B               	iorwf	??___fldiv,w
  4732  0B03  1903               	skipnz
  4733  0B04  1847               	btfsc	___fldiv@b,0
  4734  0B05  2B07               	goto	l4912
  4735  0B06  2B09               	goto	l4916
  4736  0B07                     l4912:
  4737  0B07  01DC               	clrf	___fldiv@aexp
  4738  0B08  0ADC               	incf	___fldiv@aexp,f
  4739  0B09                     l4916:
  4740  0B09  085C               	movf	___fldiv@aexp,w
  4741  0B0A  1903               	btfsc	3,2
  4742  0B0B  2B3B               	goto	l4926
  4743  0B0C  3001               	movlw	1
  4744  0B0D  07C7               	addwf	___fldiv@b,f
  4745  0B0E  3000               	movlw	0
  4746  0B0F  1803               	skipnc
  4747  0B10  3001               	movlw	1
  4748  0B11  07C8               	addwf	___fldiv@b+1,f
  4749  0B12  3000               	movlw	0
  4750  0B13  1803               	skipnc
  4751  0B14  3001               	movlw	1
  4752  0B15  07C9               	addwf	___fldiv@b+2,f
  4753  0B16  3000               	movlw	0
  4754  0B17  1803               	skipnc
  4755  0B18  3001               	movlw	1
  4756  0B19  07CA               	addwf	___fldiv@b+3,f
  4757  0B1A  1C4A               	btfss	___fldiv@b+3,0
  4758  0B1B  2B3B               	goto	l4926
  4759  0B1C  0847               	movf	___fldiv@b,w
  4760  0B1D  00CB               	movwf	??___fldiv
  4761  0B1E  0848               	movf	___fldiv@b+1,w
  4762  0B1F  00CC               	movwf	??___fldiv+1
  4763  0B20  0849               	movf	___fldiv@b+2,w
  4764  0B21  00CD               	movwf	??___fldiv+2
  4765  0B22  084A               	movf	___fldiv@b+3,w
  4766  0B23  00CE               	movwf	??___fldiv+3
  4767  0B24  3001               	movlw	1
  4768  0B25  00CF               	movwf	??___fldiv+4
  4769  0B26                     u4795:
  4770  0B26  0D4E               	rlf	??___fldiv+3,w
  4771  0B27  0CCE               	rrf	??___fldiv+3,f
  4772  0B28  0CCD               	rrf	??___fldiv+2,f
  4773  0B29  0CCC               	rrf	??___fldiv+1,f
  4774  0B2A  0CCB               	rrf	??___fldiv,f
  4775  0B2B  0BCF               	decfsz	??___fldiv+4,f
  4776  0B2C  2B26               	goto	u4795
  4777  0B2D  084E               	movf	??___fldiv+3,w
  4778  0B2E  00CA               	movwf	___fldiv@b+3
  4779  0B2F  084D               	movf	??___fldiv+2,w
  4780  0B30  00C9               	movwf	___fldiv@b+2
  4781  0B31  084C               	movf	??___fldiv+1,w
  4782  0B32  00C8               	movwf	___fldiv@b+1
  4783  0B33  084B               	movf	??___fldiv,w
  4784  0B34  00C7               	movwf	___fldiv@b
  4785  0B35  3001               	movlw	1
  4786  0B36  07D5               	addwf	___fldiv@new_exp,f
  4787  0B37  1803               	skipnc
  4788  0B38  0AD6               	incf	___fldiv@new_exp+1,f
  4789  0B39  3000               	movlw	0
  4790  0B3A  07D6               	addwf	___fldiv@new_exp+1,f
  4791  0B3B                     l4926:
  4792  0B3B  0856               	movf	___fldiv@new_exp+1,w
  4793  0B3C  3A80               	xorlw	128
  4794  0B3D  00FF               	movwf	127
  4795  0B3E  3080               	movlw	128
  4796  0B3F  027F               	subwf	127,w
  4797  0B40  1D03               	skipz
  4798  0B41  2B44               	goto	u4805
  4799  0B42  30FF               	movlw	255
  4800  0B43  0255               	subwf	___fldiv@new_exp,w
  4801  0B44                     u4805:
  4802  0B44  1C03               	skipc
  4803  0B45  2B54               	goto	l4930
  4804  0B46  30FF               	movlw	255
  4805  0B47  1283               	bcf	3,5	;RP0=0, select bank0
  4806  0B48  1303               	bcf	3,6	;RP1=0, select bank0
  4807  0B49  00D5               	movwf	___fldiv@new_exp
  4808  0B4A  3000               	movlw	0
  4809  0B4B  00D6               	movwf	___fldiv@new_exp+1
  4810  0B4C  3000               	movlw	0
  4811  0B4D  00CA               	movwf	___fldiv@b+3
  4812  0B4E  3000               	movlw	0
  4813  0B4F  00C9               	movwf	___fldiv@b+2
  4814  0B50  3000               	movlw	0
  4815  0B51  00C8               	movwf	___fldiv@b+1
  4816  0B52  3000               	movlw	0
  4817  0B53  00C7               	movwf	___fldiv@b
  4818  0B54                     l4930:
  4819  0B54  1283               	bcf	3,5	;RP0=0, select bank0
  4820  0B55  1303               	bcf	3,6	;RP1=0, select bank0
  4821  0B56  0856               	movf	___fldiv@new_exp+1,w
  4822  0B57  3A80               	xorlw	128
  4823  0B58  00FF               	movwf	127
  4824  0B59  3080               	movlw	128
  4825  0B5A  027F               	subwf	127,w
  4826  0B5B  1D03               	skipz
  4827  0B5C  2B5F               	goto	u4815
  4828  0B5D  3001               	movlw	1
  4829  0B5E  0255               	subwf	___fldiv@new_exp,w
  4830  0B5F                     u4815:
  4831  0B5F  1803               	skipnc
  4832  0B60  2B6E               	goto	l1357
  4833  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  4834  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  4835  0B63  01D5               	clrf	___fldiv@new_exp
  4836  0B64  01D6               	clrf	___fldiv@new_exp+1
  4837  0B65  3000               	movlw	0
  4838  0B66  00CA               	movwf	___fldiv@b+3
  4839  0B67  3000               	movlw	0
  4840  0B68  00C9               	movwf	___fldiv@b+2
  4841  0B69  3000               	movlw	0
  4842  0B6A  00C8               	movwf	___fldiv@b+1
  4843  0B6B  3000               	movlw	0
  4844  0B6C  00C7               	movwf	___fldiv@b
  4845  0B6D  01D4               	clrf	___fldiv@sign
  4846  0B6E                     l1357:
  4847  0B6E  1283               	bcf	3,5	;RP0=0, select bank0
  4848  0B6F  1303               	bcf	3,6	;RP1=0, select bank0
  4849  0B70  0855               	movf	___fldiv@new_exp,w
  4850  0B71  00CB               	movwf	??___fldiv
  4851  0B72  084B               	movf	??___fldiv,w
  4852  0B73  00DB               	movwf	___fldiv@bexp
  4853  0B74  1C5B               	btfss	___fldiv@bexp,0
  4854  0B75  2B78               	goto	l4942
  4855  0B76  17C9               	bsf	___fldiv@b+2,7
  4856  0B77  2B7C               	goto	l1359
  4857  0B78                     l4942:
  4858  0B78  307F               	movlw	127
  4859  0B79  00CB               	movwf	??___fldiv
  4860  0B7A  084B               	movf	??___fldiv,w
  4861  0B7B  05C9               	andwf	___fldiv@b+2,f
  4862  0B7C                     l1359:
  4863  0B7C  085B               	movf	___fldiv@bexp,w
  4864  0B7D  00CB               	movwf	??___fldiv
  4865  0B7E  1003               	clrc
  4866  0B7F  0C4B               	rrf	??___fldiv,w
  4867  0B80  00CC               	movwf	??___fldiv+1
  4868  0B81  084C               	movf	??___fldiv+1,w
  4869  0B82  00CA               	movwf	___fldiv@b+3
  4870  0B83  2A41               	goto	L4
  4871  0B84                     __end_of___fldiv:
  4872                           
  4873                           	psect	text6
  4874  1A63                     __ptext6:	
  4875 ;; *************** function _Package_Usart_is_for_me *****************
  4876 ;; Defined at:
  4877 ;;		line 8 in file "protocolo.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;		None
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  retorno         1    0[BANK0 ] unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    wreg      unsigned char 
  4884 ;; Registers used:
  4885 ;;		wreg, status,2, status,0
  4886 ;; Tracked objects:
  4887 ;;		On entry : 300/100
  4888 ;;		On exit  : 300/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4891 ;;      Params:         0       0       0       0       0
  4892 ;;      Locals:         0       1       0       0       0
  4893 ;;      Temps:          0       0       0       0       0
  4894 ;;      Totals:         0       1       0       0       0
  4895 ;;Total ram usage:        1 bytes
  4896 ;; Hardware stack levels used: 1
  4897 ;; Hardware stack levels required when called: 1
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_mediaLeituraPt100Umidadde
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           
  4906                           ;psect for function _Package_Usart_is_for_me
  4907  1A63                     _Package_Usart_is_for_me:
  4908                           
  4909                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  4910                           
  4911                           ;incstack = 0
  4912                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  4913  1A63  1283               	bcf	3,5	;RP0=0, select bank0
  4914  1A64  1C6F               	btfss	_generic_status,0
  4915  1A65  2A77               	goto	l4748
  4916                           
  4917                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  4918  1A66  1703               	bsf	3,6	;RP1=1, select bank2
  4919  1A67  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  4920  1A68  1683               	bsf	3,5	;RP0=1, select bank1
  4921  1A69  1303               	bcf	3,6	;RP1=0, select bank1
  4922  1A6A  0655               	xorwf	_Board_Number^(0+128),w
  4923  1A6B  1903               	skipnz
  4924  1A6C  2A72               	goto	l806
  4925  1A6D  1283               	bcf	3,5	;RP0=0, select bank2
  4926  1A6E  1703               	bsf	3,6	;RP1=1, select bank2
  4927  1A6F  0A13               	incf	(_usart_buffer^(0+256)+3),w	;volatile
  4928  1A70  1D03               	btfss	3,2
  4929  1A71  2A77               	goto	l4748
  4930  1A72                     l806:
  4931                           
  4932                           ;protocolo.c: 13:             retorno=1;
  4933  1A72  1283               	bcf	3,5	;RP0=0, select bank0
  4934  1A73  1303               	bcf	3,6	;RP1=0, select bank0
  4935  1A74  01A0               	clrf	Package_Usart_is_for_me@retorno
  4936  1A75  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  4937  1A76  2A79               	goto	l4752
  4938  1A77                     l4748:
  4939                           
  4940                           ;protocolo.c: 15:             retorno=0;
  4941  1A77  1303               	bcf	3,6	;RP1=0, select bank0
  4942  1A78  01A0               	clrf	Package_Usart_is_for_me@retorno
  4943  1A79                     l4752:
  4944                           
  4945                           ;protocolo.c: 21:      return retorno;
  4946  1A79  0820               	movf	Package_Usart_is_for_me@retorno,w
  4947  1A7A  0008               	return
  4948  1A7B                     __end_of_Package_Usart_is_for_me:
  4949                           
  4950                           	psect	text7
  4951  1F4C                     __ptext7:	
  4952 ;; *************** function _ADC_Media_10bits *****************
  4953 ;; Defined at:
  4954 ;;		line 20 in file "adc.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  canal           1    wreg     unsigned char 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  canal           1   19[BANK0 ] unsigned char 
  4959 ;;  value           2   20[BANK0 ] unsigned int 
  4960 ;;  i               1   22[BANK0 ] unsigned char 
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  4   14[BANK0 ] float 
  4963 ;; Registers used:
  4964 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4965 ;; Tracked objects:
  4966 ;;		On entry : 300/100
  4967 ;;		On exit  : 300/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4970 ;;      Params:         0       4       0       0       0
  4971 ;;      Locals:         0       4       0       0       0
  4972 ;;      Temps:          0       1       0       0       0
  4973 ;;      Totals:         0       9       0       0       0
  4974 ;;Total ram usage:        9 bytes
  4975 ;; Hardware stack levels used: 1
  4976 ;; Hardware stack levels required when called: 2
  4977 ;; This function calls:
  4978 ;;		___lwdiv
  4979 ;;		___xxtofl
  4980 ;;		_captura
  4981 ;;		_my_delay_ms
  4982 ;; This function is called by:
  4983 ;;		_mediaLeituraPt100Umidadde
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           
  4988                           ;psect for function _ADC_Media_10bits
  4989  1F4C                     _ADC_Media_10bits:
  4990                           
  4991                           ;incstack = 0
  4992                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4993                           ;ADC_Media_10bits@canal stored from wreg
  4994  1F4C  1283               	bcf	3,5	;RP0=0, select bank0
  4995  1F4D  00B3               	movwf	ADC_Media_10bits@canal
  4996                           
  4997                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  4998  1F4E  0833               	movf	ADC_Media_10bits@canal,w
  4999  1F4F  00B2               	movwf	??_ADC_Media_10bits
  5000  1F50  0DB2               	rlf	??_ADC_Media_10bits,f
  5001  1F51  0DB2               	rlf	??_ADC_Media_10bits,f
  5002  1F52  081F               	movf	31,w	;volatile
  5003  1F53  0632               	xorwf	??_ADC_Media_10bits,w
  5004  1F54  39C3               	andlw	-61
  5005  1F55  0632               	xorwf	??_ADC_Media_10bits,w
  5006  1F56  009F               	movwf	31	;volatile
  5007                           
  5008                           ;adc.c: 24:       my_delay_ms(1);
  5009  1F57  3000               	movlw	0
  5010  1F58  00A3               	movwf	my_delay_ms@time+3
  5011  1F59  3000               	movlw	0
  5012  1F5A  00A2               	movwf	my_delay_ms@time+2
  5013  1F5B  3000               	movlw	0
  5014  1F5C  00A1               	movwf	my_delay_ms@time+1
  5015  1F5D  3001               	movlw	1
  5016  1F5E  00A0               	movwf	my_delay_ms@time
  5017  1F5F  160A  158A  2555  160A  158A  	fcall	_my_delay_ms
  5018                           
  5019                           ;adc.c: 26:       value=0;
  5020  1F64  01B4               	clrf	ADC_Media_10bits@value
  5021  1F65  01B5               	clrf	ADC_Media_10bits@value+1
  5022                           
  5023                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5024  1F66  01B6               	clrf	ADC_Media_10bits@i
  5025  1F67  0AB6               	incf	ADC_Media_10bits@i,f
  5026  1F68                     l4730:
  5027                           
  5028                           ;adc.c: 28:           value+=captura();
  5029  1F68  160A  158A  21D0  160A  158A  	fcall	_captura
  5030  1F6D  0820               	movf	?_captura,w
  5031  1F6E  07B4               	addwf	ADC_Media_10bits@value,f
  5032  1F6F  1803               	skipnc
  5033  1F70  0AB5               	incf	ADC_Media_10bits@value+1,f
  5034  1F71  0821               	movf	?_captura+1,w
  5035  1F72  07B5               	addwf	ADC_Media_10bits@value+1,f
  5036  1F73  3001               	movlw	1
  5037  1F74  00B2               	movwf	??_ADC_Media_10bits
  5038  1F75  0832               	movf	??_ADC_Media_10bits,w
  5039  1F76  07B6               	addwf	ADC_Media_10bits@i,f
  5040  1F77  3033               	movlw	51
  5041  1F78  0236               	subwf	ADC_Media_10bits@i,w
  5042  1F79  1C03               	skipc
  5043  1F7A  2F68               	goto	l4730
  5044                           
  5045                           ;adc.c: 29:       value/=(i-1);
  5046  1F7B  0836               	movf	ADC_Media_10bits@i,w
  5047  1F7C  3EFF               	addlw	255
  5048  1F7D  00A0               	movwf	___lwdiv@divisor
  5049  1F7E  30FF               	movlw	255
  5050  1F7F  1803               	skipnc
  5051  1F80  3000               	movlw	0
  5052  1F81  00A1               	movwf	___lwdiv@divisor+1
  5053  1F82  0835               	movf	ADC_Media_10bits@value+1,w
  5054  1F83  00A3               	movwf	___lwdiv@dividend+1
  5055  1F84  0834               	movf	ADC_Media_10bits@value,w
  5056  1F85  00A2               	movwf	___lwdiv@dividend
  5057  1F86  160A  158A  2638  160A  158A  	fcall	___lwdiv
  5058  1F8B  0821               	movf	?___lwdiv+1,w
  5059  1F8C  00B5               	movwf	ADC_Media_10bits@value+1
  5060  1F8D  0820               	movf	?___lwdiv,w
  5061  1F8E  00B4               	movwf	ADC_Media_10bits@value
  5062                           
  5063                           ;adc.c: 30:       return value;
  5064  1F8F  0834               	movf	ADC_Media_10bits@value,w
  5065  1F90  00A0               	movwf	___xxtofl@val
  5066  1F91  0835               	movf	ADC_Media_10bits@value+1,w
  5067  1F92  00A1               	movwf	___xxtofl@val+1
  5068  1F93  01A2               	clrf	___xxtofl@val+2
  5069  1F94  01A3               	clrf	___xxtofl@val+3
  5070  1F95  3000               	movlw	0
  5071  1F96  160A  118A  2111   	fcall	___xxtofl
  5072  1F99  0823               	movf	?___xxtofl+3,w
  5073  1F9A  00B1               	movwf	?_ADC_Media_10bits+3
  5074  1F9B  0822               	movf	?___xxtofl+2,w
  5075  1F9C  00B0               	movwf	?_ADC_Media_10bits+2
  5076  1F9D  0821               	movf	?___xxtofl+1,w
  5077  1F9E  00AF               	movwf	?_ADC_Media_10bits+1
  5078  1F9F  0820               	movf	?___xxtofl,w
  5079  1FA0  00AE               	movwf	?_ADC_Media_10bits
  5080  1FA1  0008               	return
  5081  1FA2                     __end_of_ADC_Media_10bits:
  5082                           
  5083                           	psect	text8
  5084  1D55                     __ptext8:	
  5085 ;; *************** function _my_delay_ms *****************
  5086 ;; Defined at:
  5087 ;;		line 5 in file "my_delay.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  time            4    0[BANK0 ] long 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  i               4    6[BANK0 ] long 
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1    wreg      void 
  5094 ;; Registers used:
  5095 ;;		wreg, btemp+1
  5096 ;; Tracked objects:
  5097 ;;		On entry : 300/0
  5098 ;;		On exit  : 300/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5101 ;;      Params:         0       4       0       0       0
  5102 ;;      Locals:         0       4       0       0       0
  5103 ;;      Temps:          0       2       0       0       0
  5104 ;;      Totals:         0      10       0       0       0
  5105 ;;Total ram usage:       10 bytes
  5106 ;; Hardware stack levels used: 1
  5107 ;; Hardware stack levels required when called: 1
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_mediaLeituraPt100Umidadde
  5112 ;;		_ADC_Media_10bits
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           
  5117                           ;psect for function _my_delay_ms
  5118  1D55                     _my_delay_ms:
  5119                           
  5120                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5121                           
  5122                           ;incstack = 0
  5123                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5124  1D55  3000               	movlw	0
  5125  1D56  00A9               	movwf	my_delay_ms@i+3
  5126  1D57  3000               	movlw	0
  5127  1D58  00A8               	movwf	my_delay_ms@i+2
  5128  1D59  3000               	movlw	0
  5129  1D5A  00A7               	movwf	my_delay_ms@i+1
  5130  1D5B  3000               	movlw	0
  5131  1D5C  00A6               	movwf	my_delay_ms@i
  5132  1D5D                     l3840:
  5133  1D5D  0829               	movf	my_delay_ms@i+3,w
  5134  1D5E  3A80               	xorlw	128
  5135  1D5F  00FF               	movwf	127
  5136  1D60  0823               	movf	my_delay_ms@time+3,w
  5137  1D61  3A80               	xorlw	128
  5138  1D62  027F               	subwf	127,w
  5139  1D63  1D03               	skipz
  5140  1D64  2D6F               	goto	u2933
  5141  1D65  0822               	movf	my_delay_ms@time+2,w
  5142  1D66  0228               	subwf	my_delay_ms@i+2,w
  5143  1D67  1D03               	skipz
  5144  1D68  2D6F               	goto	u2933
  5145  1D69  0821               	movf	my_delay_ms@time+1,w
  5146  1D6A  0227               	subwf	my_delay_ms@i+1,w
  5147  1D6B  1D03               	skipz
  5148  1D6C  2D6F               	goto	u2933
  5149  1D6D  0820               	movf	my_delay_ms@time,w
  5150  1D6E  0226               	subwf	my_delay_ms@i,w
  5151  1D6F                     u2933:
  5152  1D6F  1803               	btfsc	3,0
  5153  1D70  0008               	return
  5154                           
  5155                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5156  1D71  3003               	movlw	3
  5157  1D72  1283               	bcf	3,5	;RP0=0, select bank0
  5158  1D73  1303               	bcf	3,6	;RP1=0, select bank0
  5159  1D74  00A5               	movwf	??_my_delay_ms+1
  5160  1D75  3097               	movlw	151
  5161  1D76  00A4               	movwf	??_my_delay_ms
  5162  1D77                     u5407:
  5163  1D77  0BA4               	decfsz	??_my_delay_ms,f
  5164  1D78  2D77               	goto	u5407
  5165  1D79  0BA5               	decfsz	??_my_delay_ms+1,f
  5166  1D7A  2D77               	goto	u5407
  5167                           
  5168                           ;my_delay.c: 10:             }
  5169  1D7B  3001               	movlw	1
  5170  1D7C  1283               	bcf	3,5	;RP0=0, select bank0
  5171  1D7D  1303               	bcf	3,6	;RP1=0, select bank0
  5172  1D7E  07A6               	addwf	my_delay_ms@i,f
  5173  1D7F  3000               	movlw	0
  5174  1D80  1803               	skipnc
  5175  1D81  3001               	movlw	1
  5176  1D82  07A7               	addwf	my_delay_ms@i+1,f
  5177  1D83  3000               	movlw	0
  5178  1D84  1803               	skipnc
  5179  1D85  3001               	movlw	1
  5180  1D86  07A8               	addwf	my_delay_ms@i+2,f
  5181  1D87  3000               	movlw	0
  5182  1D88  1803               	skipnc
  5183  1D89  3001               	movlw	1
  5184  1D8A  07A9               	addwf	my_delay_ms@i+3,f
  5185  1D8B  2D5D               	goto	l3840
  5186  1D8C                     __end_of_my_delay_ms:
  5187                           
  5188                           	psect	text9
  5189  19D0                     __ptext9:	
  5190 ;; *************** function _captura *****************
  5191 ;; Defined at:
  5192 ;;		line 140 in file "adc.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  2    0[BANK0 ] unsigned int 
  5199 ;; Registers used:
  5200 ;;		wreg
  5201 ;; Tracked objects:
  5202 ;;		On entry : 300/0
  5203 ;;		On exit  : 300/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5206 ;;      Params:         0       2       0       0       0
  5207 ;;      Locals:         0       0       0       0       0
  5208 ;;      Temps:          0       0       0       0       0
  5209 ;;      Totals:         0       2       0       0       0
  5210 ;;Total ram usage:        2 bytes
  5211 ;; Hardware stack levels used: 1
  5212 ;; Hardware stack levels required when called: 1
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_ADC_Media_10bits
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           
  5221                           ;psect for function _captura
  5222  19D0                     _captura:
  5223                           
  5224                           ;adc.c: 141:     ADCON0bits.GO=1;
  5225                           
  5226                           ;incstack = 0
  5227                           ; Regs used in _captura: [wreg]
  5228  19D0  149F               	bsf	31,1	;volatile
  5229  19D1                     l484:	
  5230                           ;adc.c: 145:           }
  5231                           
  5232                           
  5233                           ;adc.c: 142:     while(ADCON0bits.GO)
  5234  19D1  189F               	btfsc	31,1	;volatile
  5235  19D2  29D1               	goto	l484
  5236                           
  5237                           ;adc.c: 146:     return ((ADRESH<<8)+ADRESL);
  5238  19D3  081E               	movf	30,w	;volatile
  5239  19D4  00A1               	movwf	?_captura+1
  5240  19D5  1683               	bsf	3,5	;RP0=1, select bank1
  5241  19D6  081E               	movf	30,w	;volatile
  5242  19D7  1283               	bcf	3,5	;RP0=0, select bank0
  5243  19D8  00A0               	movwf	?_captura
  5244  19D9  0008               	return
  5245  19DA                     __end_of_captura:
  5246                           
  5247                           	psect	text10
  5248  1111                     __ptext10:	
  5249 ;; *************** function ___xxtofl *****************
  5250 ;; Defined at:
  5251 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  sign            1    wreg     unsigned char 
  5254 ;;  val             4    0[BANK0 ] long 
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;  sign            1    8[BANK0 ] unsigned char 
  5257 ;;  arg             4   10[BANK0 ] unsigned long 
  5258 ;;  exp             1    9[BANK0 ] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  4    0[BANK0 ] unsigned char 
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0
  5263 ;; Tracked objects:
  5264 ;;		On entry : 300/0
  5265 ;;		On exit  : 300/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5268 ;;      Params:         0       4       0       0       0
  5269 ;;      Locals:         0       6       0       0       0
  5270 ;;      Temps:          0       4       0       0       0
  5271 ;;      Totals:         0      14       0       0       0
  5272 ;;Total ram usage:       14 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; Hardware stack levels required when called: 1
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_mediaLeituraPt100Umidadde
  5279 ;;		_ADC_Media_10bits
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           
  5284                           ;psect for function ___xxtofl
  5285  1111                     ___xxtofl:
  5286                           
  5287                           ;incstack = 0
  5288                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5289                           ;___xxtofl@sign stored from wreg
  5290  1111  00A8               	movwf	___xxtofl@sign
  5291  1112  0828               	movf	___xxtofl@sign,w
  5292  1113  1D03               	btfss	3,2
  5293  1114  1FA3               	btfss	___xxtofl@val+3,7
  5294  1115  2926               	goto	l4282
  5295  1116  0920               	comf	___xxtofl@val,w
  5296  1117  00AA               	movwf	___xxtofl@arg
  5297  1118  0921               	comf	___xxtofl@val+1,w
  5298  1119  00AB               	movwf	___xxtofl@arg+1
  5299  111A  0922               	comf	___xxtofl@val+2,w
  5300  111B  00AC               	movwf	___xxtofl@arg+2
  5301  111C  0923               	comf	___xxtofl@val+3,w
  5302  111D  00AD               	movwf	___xxtofl@arg+3
  5303  111E  0AAA               	incf	___xxtofl@arg,f
  5304  111F  1903               	skipnz
  5305  1120  0AAB               	incf	___xxtofl@arg+1,f
  5306  1121  1903               	skipnz
  5307  1122  0AAC               	incf	___xxtofl@arg+2,f
  5308  1123  1903               	skipnz
  5309  1124  0AAD               	incf	___xxtofl@arg+3,f
  5310  1125  292E               	goto	l1419
  5311  1126                     l4282:
  5312  1126  0823               	movf	___xxtofl@val+3,w
  5313  1127  00AD               	movwf	___xxtofl@arg+3
  5314  1128  0822               	movf	___xxtofl@val+2,w
  5315  1129  00AC               	movwf	___xxtofl@arg+2
  5316  112A  0821               	movf	___xxtofl@val+1,w
  5317  112B  00AB               	movwf	___xxtofl@arg+1
  5318  112C  0820               	movf	___xxtofl@val,w
  5319  112D  00AA               	movwf	___xxtofl@arg
  5320  112E                     l1419:
  5321  112E  0823               	movf	___xxtofl@val+3,w
  5322  112F  0422               	iorwf	___xxtofl@val+2,w
  5323  1130  0421               	iorwf	___xxtofl@val+1,w
  5324  1131  0420               	iorwf	___xxtofl@val,w
  5325  1132  1D03               	skipz
  5326  1133  293D               	goto	l4288
  5327  1134  3000               	movlw	0
  5328  1135  00A3               	movwf	?___xxtofl+3
  5329  1136  3000               	movlw	0
  5330  1137  00A2               	movwf	?___xxtofl+2
  5331  1138  3000               	movlw	0
  5332  1139  00A1               	movwf	?___xxtofl+1
  5333  113A  3000               	movlw	0
  5334  113B  00A0               	movwf	?___xxtofl
  5335  113C  0008               	return
  5336  113D                     l4288:
  5337  113D  3096               	movlw	150
  5338  113E  00A4               	movwf	??___xxtofl
  5339  113F  0824               	movf	??___xxtofl,w
  5340  1140  00A9               	movwf	___xxtofl@exp
  5341  1141                     l4292:
  5342  1141  30FE               	movlw	254
  5343  1142  052D               	andwf	___xxtofl@arg+3,w
  5344  1143  1903               	btfsc	3,2
  5345  1144  296E               	goto	l1425
  5346  1145  3001               	movlw	1
  5347  1146  00A4               	movwf	??___xxtofl
  5348  1147  0824               	movf	??___xxtofl,w
  5349  1148  07A9               	addwf	___xxtofl@exp,f
  5350  1149  3001               	movlw	1
  5351  114A                     u3995:
  5352  114A  1003               	clrc
  5353  114B  0CAD               	rrf	___xxtofl@arg+3,f
  5354  114C  0CAC               	rrf	___xxtofl@arg+2,f
  5355  114D  0CAB               	rrf	___xxtofl@arg+1,f
  5356  114E  0CAA               	rrf	___xxtofl@arg,f
  5357  114F  3EFF               	addlw	-1
  5358  1150  1D03               	skipz
  5359  1151  294A               	goto	u3995
  5360  1152  2941               	goto	l4292
  5361  1153                     l4294:
  5362  1153  3001               	movlw	1
  5363  1154  00A4               	movwf	??___xxtofl
  5364  1155  0824               	movf	??___xxtofl,w
  5365  1156  07A9               	addwf	___xxtofl@exp,f
  5366  1157  3001               	movlw	1
  5367  1158  07AA               	addwf	___xxtofl@arg,f
  5368  1159  3000               	movlw	0
  5369  115A  1803               	skipnc
  5370  115B  3001               	movlw	1
  5371  115C  07AB               	addwf	___xxtofl@arg+1,f
  5372  115D  3000               	movlw	0
  5373  115E  1803               	skipnc
  5374  115F  3001               	movlw	1
  5375  1160  07AC               	addwf	___xxtofl@arg+2,f
  5376  1161  3000               	movlw	0
  5377  1162  1803               	skipnc
  5378  1163  3001               	movlw	1
  5379  1164  07AD               	addwf	___xxtofl@arg+3,f
  5380  1165  3001               	movlw	1
  5381  1166                     u4015:
  5382  1166  1003               	clrc
  5383  1167  0CAD               	rrf	___xxtofl@arg+3,f
  5384  1168  0CAC               	rrf	___xxtofl@arg+2,f
  5385  1169  0CAB               	rrf	___xxtofl@arg+1,f
  5386  116A  0CAA               	rrf	___xxtofl@arg,f
  5387  116B  3EFF               	addlw	-1
  5388  116C  1D03               	skipz
  5389  116D  2966               	goto	u4015
  5390  116E                     l1425:
  5391  116E  30FF               	movlw	255
  5392  116F  052D               	andwf	___xxtofl@arg+3,w
  5393  1170  1903               	btfsc	3,2
  5394  1171  2982               	goto	l4302
  5395  1172  2953               	goto	l4294
  5396  1173                     l4304:
  5397  1173  3002               	movlw	2
  5398  1174  0229               	subwf	___xxtofl@exp,w
  5399  1175  1C03               	btfss	3,0
  5400  1176  2984               	goto	l1432
  5401  1177  3001               	movlw	1
  5402  1178  02A9               	subwf	___xxtofl@exp,f
  5403  1179  3001               	movlw	1
  5404  117A  00A4               	movwf	??___xxtofl
  5405  117B                     u4035:
  5406  117B  1003               	clrc
  5407  117C  0DAA               	rlf	___xxtofl@arg,f
  5408  117D  0DAB               	rlf	___xxtofl@arg+1,f
  5409  117E  0DAC               	rlf	___xxtofl@arg+2,f
  5410  117F  0DAD               	rlf	___xxtofl@arg+3,f
  5411  1180  0BA4               	decfsz	??___xxtofl,f
  5412  1181  297B               	goto	u4035
  5413  1182                     l4302:
  5414  1182  1FAC               	btfss	___xxtofl@arg+2,7
  5415  1183  2973               	goto	l4304
  5416  1184                     l1432:
  5417  1184  1829               	btfsc	___xxtofl@exp,0
  5418  1185  298E               	goto	l1433
  5419  1186  30FF               	movlw	255
  5420  1187  05AA               	andwf	___xxtofl@arg,f
  5421  1188  30FF               	movlw	255
  5422  1189  05AB               	andwf	___xxtofl@arg+1,f
  5423  118A  307F               	movlw	127
  5424  118B  05AC               	andwf	___xxtofl@arg+2,f
  5425  118C  30FF               	movlw	255
  5426  118D  05AD               	andwf	___xxtofl@arg+3,f
  5427  118E                     l1433:
  5428  118E  1003               	clrc
  5429  118F  0CA9               	rrf	___xxtofl@exp,f
  5430  1190  0829               	movf	___xxtofl@exp,w
  5431  1191  00A4               	movwf	??___xxtofl
  5432  1192  01A5               	clrf	??___xxtofl+1
  5433  1193  01A6               	clrf	??___xxtofl+2
  5434  1194  01A7               	clrf	??___xxtofl+3
  5435  1195  3018               	movlw	24
  5436  1196                     u4075:
  5437  1196  1003               	clrc
  5438  1197  0DA4               	rlf	??___xxtofl,f
  5439  1198  0DA5               	rlf	??___xxtofl+1,f
  5440  1199  0DA6               	rlf	??___xxtofl+2,f
  5441  119A  0DA7               	rlf	??___xxtofl+3,f
  5442  119B  3EFF               	addlw	-1
  5443  119C  1D03               	skipz
  5444  119D  2996               	goto	u4075
  5445  119E  0824               	movf	??___xxtofl,w
  5446  119F  04AA               	iorwf	___xxtofl@arg,f
  5447  11A0  0825               	movf	??___xxtofl+1,w
  5448  11A1  04AB               	iorwf	___xxtofl@arg+1,f
  5449  11A2  0826               	movf	??___xxtofl+2,w
  5450  11A3  04AC               	iorwf	___xxtofl@arg+2,f
  5451  11A4  0827               	movf	??___xxtofl+3,w
  5452  11A5  04AD               	iorwf	___xxtofl@arg+3,f
  5453  11A6  0828               	movf	___xxtofl@sign,w
  5454  11A7  1D03               	btfss	3,2
  5455  11A8  1FA3               	btfss	___xxtofl@val+3,7
  5456  11A9  29AB               	goto	l4316
  5457  11AA  17AD               	bsf	___xxtofl@arg+3,7
  5458  11AB                     l4316:
  5459  11AB  082D               	movf	___xxtofl@arg+3,w
  5460  11AC  00A3               	movwf	?___xxtofl+3
  5461  11AD  082C               	movf	___xxtofl@arg+2,w
  5462  11AE  00A2               	movwf	?___xxtofl+2
  5463  11AF  082B               	movf	___xxtofl@arg+1,w
  5464  11B0  00A1               	movwf	?___xxtofl+1
  5465  11B1  082A               	movf	___xxtofl@arg,w
  5466  11B2  00A0               	movwf	?___xxtofl
  5467  11B3  0008               	return
  5468  11B4                     __end_of___xxtofl:
  5469                           
  5470                           	psect	text11
  5471  1EB5                     __ptext11:	
  5472 ;; *************** function _USART_init *****************
  5473 ;; Defined at:
  5474 ;;		line 18 in file "usart.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  baudrate        4    0[BANK0 ] unsigned long 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  i               1    5[BANK0 ] unsigned char 
  5479 ;;  erro            1    0        unsigned char 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      void 
  5482 ;; Registers used:
  5483 ;;		wreg, status,2, status,0
  5484 ;; Tracked objects:
  5485 ;;		On entry : 300/0
  5486 ;;		On exit  : 300/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5489 ;;      Params:         0       4       0       0       0
  5490 ;;      Locals:         0       1       0       0       0
  5491 ;;      Temps:          0       1       0       0       0
  5492 ;;      Totals:         0       6       0       0       0
  5493 ;;Total ram usage:        6 bytes
  5494 ;; Hardware stack levels used: 1
  5495 ;; Hardware stack levels required when called: 1
  5496 ;; This function calls:
  5497 ;;		Nothing
  5498 ;; This function is called by:
  5499 ;;		_main
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           
  5504                           ;psect for function _USART_init
  5505  1EB5                     _USART_init:
  5506                           
  5507                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  5508                           
  5509                           ;incstack = 0
  5510                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  5511  1EB5  304B               	movlw	75
  5512  1EB6  0621               	xorwf	USART_init@baudrate+1,w
  5513  1EB7  0420               	iorwf	USART_init@baudrate,w
  5514  1EB8  0422               	iorwf	USART_init@baudrate+2,w
  5515  1EB9  0423               	iorwf	USART_init@baudrate+3,w
  5516  1EBA  1D03               	btfss	3,2
  5517  1EBB  2EC8               	goto	l4978
  5518                           
  5519                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  5520  1EBC  1283               	bcf	3,5	;RP0=0, select bank0
  5521  1EBD  1303               	bcf	3,6	;RP1=0, select bank0
  5522  1EBE  1798               	bsf	24,7	;volatile
  5523                           
  5524                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  5525  1EBF  1618               	bsf	24,4	;volatile
  5526                           
  5527                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  5528  1EC0  1683               	bsf	3,5	;RP0=1, select bank1
  5529  1EC1  1518               	bsf	24,2	;volatile
  5530                           
  5531                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  5532  1EC2  1218               	bcf	24,4	;volatile
  5533                           
  5534                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  5535  1EC3  1318               	bcf	24,6	;volatile
  5536                           
  5537                           ;usart.c: 32:           SPBRG =12;
  5538  1EC4  300C               	movlw	12
  5539  1EC5  0099               	movwf	25	;volatile
  5540                           
  5541                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  5542  1EC6  170B               	bsf	11,6	;volatile
  5543  1EC7  2EE4               	goto	L5
  5544  1EC8                     l4978:	
  5545                           ;usart.c: 35:           }
  5546                           
  5547                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  5548                           
  5549  1EC8  30C2               	movlw	194
  5550  1EC9  1283               	bcf	3,5	;RP0=0, select bank0
  5551  1ECA  1303               	bcf	3,6	;RP1=0, select bank0
  5552  1ECB  0621               	xorwf	USART_init@baudrate+1,w
  5553  1ECC  1D03               	skipz
  5554  1ECD  2EE5               	goto	l4998
  5555  1ECE  0322               	decf	USART_init@baudrate+2,w
  5556  1ECF  0420               	iorwf	USART_init@baudrate,w
  5557  1ED0  0423               	iorwf	USART_init@baudrate+3,w
  5558  1ED1  1D03               	btfss	3,2
  5559  1ED2  2EE5               	goto	l4998
  5560                           
  5561                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  5562  1ED3  3010               	movlw	16
  5563  1ED4  1683               	bsf	3,5	;RP0=1, select bank1
  5564  1ED5  1303               	bcf	3,6	;RP1=0, select bank1
  5565  1ED6  0099               	movwf	25	;volatile
  5566                           
  5567                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  5568  1ED7  1703               	bsf	3,6	;RP1=1, select bank3
  5569  1ED8  1587               	bsf	7,3	;volatile
  5570                           
  5571                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  5572  1ED9  1303               	bcf	3,6	;RP1=0, select bank1
  5573  1EDA  1518               	bsf	24,2	;volatile
  5574                           
  5575                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  5576  1EDB  1283               	bcf	3,5	;RP0=0, select bank0
  5577  1EDC  1798               	bsf	24,7	;volatile
  5578                           
  5579                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  5580  1EDD  1683               	bsf	3,5	;RP0=1, select bank1
  5581  1EDE  1218               	bcf	24,4	;volatile
  5582                           
  5583                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  5584  1EDF  1318               	bcf	24,6	;volatile
  5585                           
  5586                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  5587  1EE0  1283               	bcf	3,5	;RP0=0, select bank0
  5588  1EE1  1618               	bsf	24,4	;volatile
  5589                           
  5590                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  5591  1EE2  170B               	bsf	11,6	;volatile
  5592                           
  5593                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  5594  1EE3  1683               	bsf	3,5	;RP0=1, select bank1
  5595  1EE4                     L5:
  5596  1EE4  168C               	bsf	12,5	;volatile
  5597  1EE5                     l4998:
  5598                           
  5599                           ;usart.c: 68:      TRISC6= 1;
  5600  1EE5  1683               	bsf	3,5	;RP0=1, select bank1
  5601  1EE6  1303               	bcf	3,6	;RP1=0, select bank1
  5602  1EE7  1707               	bsf	7,6	;volatile
  5603                           
  5604                           ;usart.c: 69:      TRISC7= 1;
  5605  1EE8  1787               	bsf	7,7	;volatile
  5606                           
  5607                           ;usart.c: 71:      CREN=0;
  5608  1EE9  1283               	bcf	3,5	;RP0=0, select bank0
  5609  1EEA  1218               	bcf	24,4	;volatile
  5610                           
  5611                           ;usart.c: 72:      CREN=1;
  5612  1EEB  1618               	bsf	24,4	;volatile
  5613                           
  5614                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  5615  1EEC  01A5               	clrf	USART_init@i
  5616  1EED                     l5012:
  5617  1EED  081A               	movf	26,w	;volatile
  5618  1EEE  3001               	movlw	1
  5619  1EEF  00A4               	movwf	??_USART_init
  5620  1EF0  0824               	movf	??_USART_init,w
  5621  1EF1  07A5               	addwf	USART_init@i,f
  5622  1EF2  300F               	movlw	15
  5623  1EF3  0225               	subwf	USART_init@i,w
  5624  1EF4  1803               	btfsc	3,0
  5625  1EF5  0008               	return
  5626  1EF6  2EED               	goto	l5012
  5627  1EF7                     __end_of_USART_init:
  5628                           
  5629                           	psect	text12
  5630  1C55                     __ptext12:	
  5631 ;; *************** function _I2C_Master_Init *****************
  5632 ;; Defined at:
  5633 ;;		line 7 in file "I2C.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;  c               4   14[BANK0 ] const unsigned long 
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;		None
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  1    wreg      void 
  5640 ;; Registers used:
  5641 ;;		wreg, status,2, status,0, pclath, cstack
  5642 ;; Tracked objects:
  5643 ;;		On entry : 300/0
  5644 ;;		On exit  : 300/100
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5647 ;;      Params:         0       4       0       0       0
  5648 ;;      Locals:         0       0       0       0       0
  5649 ;;      Temps:          0       4       0       0       0
  5650 ;;      Totals:         0       8       0       0       0
  5651 ;;Total ram usage:        8 bytes
  5652 ;; Hardware stack levels used: 1
  5653 ;; Hardware stack levels required when called: 2
  5654 ;; This function calls:
  5655 ;;		___lldiv
  5656 ;; This function is called by:
  5657 ;;		_main
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           
  5662                           ;psect for function _I2C_Master_Init
  5663  1C55                     _I2C_Master_Init:
  5664                           
  5665                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5666                           
  5667                           ;incstack = 0
  5668                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5669  1C55  3028               	movlw	40
  5670  1C56  0094               	movwf	20	;volatile
  5671                           
  5672                           ;I2C.c: 11:   SSPCON2 = 0;
  5673  1C57  1683               	bsf	3,5	;RP0=1, select bank1
  5674  1C58  0191               	clrf	17	;volatile
  5675                           
  5676                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5677  1C59  1283               	bcf	3,5	;RP0=0, select bank0
  5678  1C5A  082E               	movf	I2C_Master_Init@c,w
  5679  1C5B  00B2               	movwf	??_I2C_Master_Init
  5680  1C5C  082F               	movf	I2C_Master_Init@c+1,w
  5681  1C5D  00B3               	movwf	??_I2C_Master_Init+1
  5682  1C5E  0830               	movf	I2C_Master_Init@c+2,w
  5683  1C5F  00B4               	movwf	??_I2C_Master_Init+2
  5684  1C60  0831               	movf	I2C_Master_Init@c+3,w
  5685  1C61  00B5               	movwf	??_I2C_Master_Init+3
  5686  1C62  3002               	movlw	2
  5687  1C63                     u4835:
  5688  1C63  1003               	clrc
  5689  1C64  0DB2               	rlf	??_I2C_Master_Init,f
  5690  1C65  0DB3               	rlf	??_I2C_Master_Init+1,f
  5691  1C66  0DB4               	rlf	??_I2C_Master_Init+2,f
  5692  1C67  0DB5               	rlf	??_I2C_Master_Init+3,f
  5693  1C68  3EFF               	addlw	-1
  5694  1C69  1D03               	skipz
  5695  1C6A  2C63               	goto	u4835
  5696  1C6B  0835               	movf	??_I2C_Master_Init+3,w
  5697  1C6C  00A3               	movwf	___lldiv@divisor+3
  5698  1C6D  0834               	movf	??_I2C_Master_Init+2,w
  5699  1C6E  00A2               	movwf	___lldiv@divisor+2
  5700  1C6F  0833               	movf	??_I2C_Master_Init+1,w
  5701  1C70  00A1               	movwf	___lldiv@divisor+1
  5702  1C71  0832               	movf	??_I2C_Master_Init,w
  5703  1C72  00A0               	movwf	___lldiv@divisor
  5704  1C73  3000               	movlw	0
  5705  1C74  00A7               	movwf	___lldiv@dividend+3
  5706  1C75  307A               	movlw	122
  5707  1C76  00A6               	movwf	___lldiv@dividend+2
  5708  1C77  3012               	movlw	18
  5709  1C78  00A5               	movwf	___lldiv@dividend+1
  5710  1C79  3000               	movlw	0
  5711  1C7A  00A4               	movwf	___lldiv@dividend
  5712  1C7B  160A  158A  27A2   	fcall	___lldiv
  5713  1C7E  0820               	movf	?___lldiv,w
  5714  1C7F  3EFF               	addlw	255
  5715  1C80  1683               	bsf	3,5	;RP0=1, select bank1
  5716  1C81  0093               	movwf	19	;volatile
  5717                           
  5718                           ;I2C.c: 13:   SSPSTAT = 0;
  5719  1C82  0194               	clrf	20	;volatile
  5720                           
  5721                           ;I2C.c: 14:   TRISC3 = 1;
  5722  1C83  1587               	bsf	7,3	;volatile
  5723                           
  5724                           ;I2C.c: 15:   TRISC4 = 1;
  5725  1C84  1607               	bsf	7,4	;volatile
  5726  1C85  0008               	return
  5727  1C86                     __end_of_I2C_Master_Init:
  5728                           
  5729                           	psect	text13
  5730  1FA2                     __ptext13:	
  5731 ;; *************** function ___lldiv *****************
  5732 ;; Defined at:
  5733 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  5734 ;; Parameters:    Size  Location     Type
  5735 ;;  divisor         4    0[BANK0 ] unsigned long 
  5736 ;;  dividend        4    4[BANK0 ] unsigned long 
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;  quotient        4    9[BANK0 ] unsigned long 
  5739 ;;  counter         1   13[BANK0 ] unsigned char 
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  4    0[BANK0 ] unsigned long 
  5742 ;; Registers used:
  5743 ;;		wreg, status,2, status,0
  5744 ;; Tracked objects:
  5745 ;;		On entry : 300/0
  5746 ;;		On exit  : 300/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5749 ;;      Params:         0       8       0       0       0
  5750 ;;      Locals:         0       5       0       0       0
  5751 ;;      Temps:          0       1       0       0       0
  5752 ;;      Totals:         0      14       0       0       0
  5753 ;;Total ram usage:       14 bytes
  5754 ;; Hardware stack levels used: 1
  5755 ;; Hardware stack levels required when called: 1
  5756 ;; This function calls:
  5757 ;;		Nothing
  5758 ;; This function is called by:
  5759 ;;		_I2C_Master_Init
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763                           
  5764                           ;psect for function ___lldiv
  5765  1FA2                     ___lldiv:
  5766                           
  5767                           ;incstack = 0
  5768                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5769  1FA2  3000               	movlw	0
  5770  1FA3  00AC               	movwf	___lldiv@quotient+3
  5771  1FA4  3000               	movlw	0
  5772  1FA5  00AB               	movwf	___lldiv@quotient+2
  5773  1FA6  3000               	movlw	0
  5774  1FA7  00AA               	movwf	___lldiv@quotient+1
  5775  1FA8  3000               	movlw	0
  5776  1FA9  00A9               	movwf	___lldiv@quotient
  5777  1FAA  0823               	movf	___lldiv@divisor+3,w
  5778  1FAB  0422               	iorwf	___lldiv@divisor+2,w
  5779  1FAC  0421               	iorwf	___lldiv@divisor+1,w
  5780  1FAD  0420               	iorwf	___lldiv@divisor,w
  5781  1FAE  1903               	skipnz
  5782  1FAF  2FF7               	goto	l4776
  5783  1FB0  01AD               	clrf	___lldiv@counter
  5784  1FB1  0AAD               	incf	___lldiv@counter,f
  5785  1FB2                     l4762:
  5786  1FB2  1BA3               	btfsc	___lldiv@divisor+3,7
  5787  1FB3  2FC2               	goto	l4764
  5788  1FB4  3001               	movlw	1
  5789  1FB5  00A8               	movwf	??___lldiv
  5790  1FB6                     u4415:
  5791  1FB6  1003               	clrc
  5792  1FB7  0DA0               	rlf	___lldiv@divisor,f
  5793  1FB8  0DA1               	rlf	___lldiv@divisor+1,f
  5794  1FB9  0DA2               	rlf	___lldiv@divisor+2,f
  5795  1FBA  0DA3               	rlf	___lldiv@divisor+3,f
  5796  1FBB  0BA8               	decfsz	??___lldiv,f
  5797  1FBC  2FB6               	goto	u4415
  5798  1FBD  3001               	movlw	1
  5799  1FBE  00A8               	movwf	??___lldiv
  5800  1FBF  0828               	movf	??___lldiv,w
  5801  1FC0  07AD               	addwf	___lldiv@counter,f
  5802  1FC1  2FB2               	goto	l4762
  5803  1FC2                     l4764:
  5804  1FC2  3001               	movlw	1
  5805  1FC3  00A8               	movwf	??___lldiv
  5806  1FC4                     u4435:
  5807  1FC4  1003               	clrc
  5808  1FC5  0DA9               	rlf	___lldiv@quotient,f
  5809  1FC6  0DAA               	rlf	___lldiv@quotient+1,f
  5810  1FC7  0DAB               	rlf	___lldiv@quotient+2,f
  5811  1FC8  0DAC               	rlf	___lldiv@quotient+3,f
  5812  1FC9  0BA8               	decfsz	??___lldiv,f
  5813  1FCA  2FC4               	goto	u4435
  5814  1FCB  0823               	movf	___lldiv@divisor+3,w
  5815  1FCC  0227               	subwf	___lldiv@dividend+3,w
  5816  1FCD  1D03               	skipz
  5817  1FCE  2FD9               	goto	u4445
  5818  1FCF  0822               	movf	___lldiv@divisor+2,w
  5819  1FD0  0226               	subwf	___lldiv@dividend+2,w
  5820  1FD1  1D03               	skipz
  5821  1FD2  2FD9               	goto	u4445
  5822  1FD3  0821               	movf	___lldiv@divisor+1,w
  5823  1FD4  0225               	subwf	___lldiv@dividend+1,w
  5824  1FD5  1D03               	skipz
  5825  1FD6  2FD9               	goto	u4445
  5826  1FD7  0820               	movf	___lldiv@divisor,w
  5827  1FD8  0224               	subwf	___lldiv@dividend,w
  5828  1FD9                     u4445:
  5829  1FD9  1C03               	skipc
  5830  1FDA  2FEA               	goto	l4772
  5831  1FDB  0820               	movf	___lldiv@divisor,w
  5832  1FDC  02A4               	subwf	___lldiv@dividend,f
  5833  1FDD  0821               	movf	___lldiv@divisor+1,w
  5834  1FDE  1C03               	skipc
  5835  1FDF  0F21               	incfsz	___lldiv@divisor+1,w
  5836  1FE0  02A5               	subwf	___lldiv@dividend+1,f
  5837  1FE1  0822               	movf	___lldiv@divisor+2,w
  5838  1FE2  1C03               	skipc
  5839  1FE3  0F22               	incfsz	___lldiv@divisor+2,w
  5840  1FE4  02A6               	subwf	___lldiv@dividend+2,f
  5841  1FE5  0823               	movf	___lldiv@divisor+3,w
  5842  1FE6  1C03               	skipc
  5843  1FE7  0F23               	incfsz	___lldiv@divisor+3,w
  5844  1FE8  02A7               	subwf	___lldiv@dividend+3,f
  5845  1FE9  1429               	bsf	___lldiv@quotient,0
  5846  1FEA                     l4772:
  5847  1FEA  3001               	movlw	1
  5848  1FEB                     u4455:
  5849  1FEB  1003               	clrc
  5850  1FEC  0CA3               	rrf	___lldiv@divisor+3,f
  5851  1FED  0CA2               	rrf	___lldiv@divisor+2,f
  5852  1FEE  0CA1               	rrf	___lldiv@divisor+1,f
  5853  1FEF  0CA0               	rrf	___lldiv@divisor,f
  5854  1FF0  3EFF               	addlw	-1
  5855  1FF1  1D03               	skipz
  5856  1FF2  2FEB               	goto	u4455
  5857  1FF3  3001               	movlw	1
  5858  1FF4  02AD               	subwf	___lldiv@counter,f
  5859  1FF5  1D03               	btfss	3,2
  5860  1FF6  2FC2               	goto	l4764
  5861  1FF7                     l4776:
  5862  1FF7  082C               	movf	___lldiv@quotient+3,w
  5863  1FF8  00A3               	movwf	?___lldiv+3
  5864  1FF9  082B               	movf	___lldiv@quotient+2,w
  5865  1FFA  00A2               	movwf	?___lldiv+2
  5866  1FFB  082A               	movf	___lldiv@quotient+1,w
  5867  1FFC  00A1               	movwf	?___lldiv+1
  5868  1FFD  0829               	movf	___lldiv@quotient,w
  5869  1FFE  00A0               	movwf	?___lldiv
  5870  1FFF  0008               	return
  5871  2000                     __end_of___lldiv:
  5872                           
  5873                           	psect	text14
  5874  003A                     __ptext14:	
  5875 ;; *************** function _Decodify_Command *****************
  5876 ;; Defined at:
  5877 ;;		line 304 in file "SlaveLiofilizadorVer1.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;		None
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;  sizedata        1    3[BANK1 ] unsigned char 
  5882 ;;  add             1    2[BANK1 ] unsigned char 
  5883 ;;  add_24LCxxxx    4   11[BANK1 ] unsigned long 
  5884 ;;  OutPut          4    6[BANK1 ] float 
  5885 ;;  tempint         2    4[BANK1 ] int 
  5886 ;;  dados           2    0[BANK1 ] int 
  5887 ;;  tempchar        1   10[BANK1 ] unsigned char 
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  1    wreg      void 
  5890 ;; Registers used:
  5891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5892 ;; Tracked objects:
  5893 ;;		On entry : 300/100
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5897 ;;      Params:         0       0       0       0       0
  5898 ;;      Locals:         0       0      15       0       0
  5899 ;;      Temps:          0       4       0       0       0
  5900 ;;      Totals:         0       4      15       0       0
  5901 ;;Total ram usage:       19 bytes
  5902 ;; Hardware stack levels used: 1
  5903 ;; Hardware stack levels required when called: 6
  5904 ;; This function calls:
  5905 ;;		_EEPROM_24C1025_Fill_All
  5906 ;;		_EEPROM_24C1025_Read_Buffer_USART
  5907 ;;		_EEPROM_24C1025_Read_Byte
  5908 ;;		_EEPROM_24C1025_Read_Int
  5909 ;;		_EEPROM_24C1025_Read_Str
  5910 ;;		_EEPROM_24C1025_Write_Buffer
  5911 ;;		_EEPROM_24C1025_Write_Byte
  5912 ;;		_EEPROM_24C1025_Write_Int
  5913 ;;		_EEPROM_24C1025_Write_Str
  5914 ;;		_EEPROM_Read_Byte
  5915 ;;		_EEPROM_Read_Integer
  5916 ;;		_EEPROM_Read_String
  5917 ;;		_EEPROM_Write_Byte
  5918 ;;		_EEPROM_Write_Integer
  5919 ;;		_EEPROM_Write_String
  5920 ;;		_PROCULUS_Buzzer
  5921 ;;		_PROCULUS_Show_Screen
  5922 ;;		_PROCULUS_VP_Write_String
  5923 ;;		_Save_Log
  5924 ;;		_Send_Reply_OK
  5925 ;;		_Send_To_MB
  5926 ;;		_USART_put_int
  5927 ;;		_USART_put_string
  5928 ;;		_USART_putc
  5929 ;;		_USART_to_Protocol
  5930 ;;		___flmul
  5931 ;;		___fltol
  5932 ;;		_strcpy
  5933 ;;		_strlen
  5934 ;; This function is called by:
  5935 ;;		_main
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           
  5940                           ;psect for function _Decodify_Command
  5941  003A                     _Decodify_Command:
  5942                           
  5943                           ;SlaveLiofilizadorVer1.c: 306:     int dados;;SlaveLiofilizadorVer1.c: 307:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 308:     int tempint;;SlaveLiofilizadorVer1.c: 309:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 310:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 322:     USART_to_Protocol(&usart_protocol);
  5944                           
  5945                           ;incstack = 0
  5946                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5947  003A  3090               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  5948  003B  160A  158A  26F7  120A  118A  	fcall	_USART_to_Protocol
  5949                           
  5950                           ;SlaveLiofilizadorVer1.c: 324:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  5951  0040  1683               	bsf	3,5	;RP0=1, select bank3
  5952  0041  1703               	bsf	3,6	;RP1=1, select bank3
  5953  0042  0817               	movf	(_usart_protocol^(0+384)+7),w
  5954  0043  1283               	bcf	3,5	;RP0=0, select bank0
  5955  0044  1303               	bcf	3,6	;RP1=0, select bank0
  5956  0045  00DF               	movwf	??_Decodify_Command
  5957  0046  085F               	movf	??_Decodify_Command,w
  5958  0047  1683               	bsf	3,5	;RP0=1, select bank1
  5959  0048  00AE               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  5960                           
  5961                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  5962  0049  1703               	bsf	3,6	;RP1=1, select bank3
  5963  004A  0818               	movf	(_usart_protocol^(0+384)+8),w
  5964  004B  1283               	bcf	3,5	;RP0=0, select bank0
  5965  004C  1303               	bcf	3,6	;RP1=0, select bank0
  5966  004D  00DF               	movwf	??_Decodify_Command
  5967  004E  085F               	movf	??_Decodify_Command,w
  5968  004F  1683               	bsf	3,5	;RP0=1, select bank1
  5969  0050  00AD               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  5970                           
  5971                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  5972  0051  1703               	bsf	3,6	;RP1=1, select bank3
  5973  0052  0819               	movf	(_usart_protocol^(0+384)+9),w
  5974  0053  1283               	bcf	3,5	;RP0=0, select bank0
  5975  0054  1303               	bcf	3,6	;RP1=0, select bank0
  5976  0055  00DF               	movwf	??_Decodify_Command
  5977  0056  085F               	movf	??_Decodify_Command,w
  5978  0057  1683               	bsf	3,5	;RP0=1, select bank1
  5979  0058  00AC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  5980                           
  5981                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  5982  0059  1703               	bsf	3,6	;RP1=1, select bank3
  5983  005A  081A               	movf	(_usart_protocol^(0+384)+10),w
  5984  005B  1283               	bcf	3,5	;RP0=0, select bank0
  5985  005C  1303               	bcf	3,6	;RP1=0, select bank0
  5986  005D  00DF               	movwf	??_Decodify_Command
  5987  005E  085F               	movf	??_Decodify_Command,w
  5988  005F  1683               	bsf	3,5	;RP0=1, select bank1
  5989  0060  00AB               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  5990                           
  5991                           ;SlaveLiofilizadorVer1.c: 334:     switch(usart_protocol.command){
  5992  0061  2B75               	goto	l5770
  5993  0062                     l5610:
  5994                           
  5995                           ;SlaveLiofilizadorVer1.c: 343:              strcpy(buffer,"LJB-105K");
  5996  0062  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  5997  0063  00DF               	movwf	??_Decodify_Command
  5998  0064  085F               	movf	??_Decodify_Command,w
  5999  0065  00A0               	movwf	strcpy@from
  6000  0066  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6001  0067  160A  158A  22CA  120A  118A  	fcall	_strcpy
  6002                           
  6003                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  6004  006C  300B               	movlw	11
  6005  006D                     L8:
  6006  006D  160A  158A  23D8  120A  118A  	fcall	_Send_To_MB
  6007                           
  6008                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string(buffer);
  6009  0072  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6010  0073  1283               	bcf	3,5	;RP0=0, select bank0
  6011  0074  00A1               	movwf	USART_put_string@vetor
  6012  0075  3001               	movlw	1
  6013  0076  00A2               	movwf	USART_put_string@vetor+1
  6014  0077  160A  158A  24B8   	fcall	_USART_put_string
  6015                           
  6016                           ;SlaveLiofilizadorVer1.c: 346:              break;
  6017  007A  0008               	return
  6018  007B                     l5616:
  6019                           
  6020                           ;SlaveLiofilizadorVer1.c: 356:              if(usart_protocol.value[0]==0)
  6021  007B  1683               	bsf	3,5	;RP0=1, select bank3
  6022  007C  1703               	bsf	3,6	;RP1=1, select bank3
  6023  007D  0816               	movf	(_usart_protocol^(0+384)+6),w
  6024  007E  1D03               	btfss	3,2
  6025  007F  2889               	goto	l5620
  6026                           
  6027                           ;SlaveLiofilizadorVer1.c: 357:                 OutPut=Temperatura0;
  6028  0080  1303               	bcf	3,6	;RP1=0, select bank1
  6029  0081  0844               	movf	(_Temperatura0+3)^(0+128),w
  6030  0082  00A9               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6031  0083  0843               	movf	(_Temperatura0+2)^(0+128),w
  6032  0084  00A8               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6033  0085  0842               	movf	(_Temperatura0+1)^(0+128),w
  6034  0086  00A7               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6035  0087  0841               	movf	_Temperatura0^(0+128),w
  6036  0088  2891               	goto	L6
  6037  0089                     l5620:
  6038                           
  6039                           ;SlaveLiofilizadorVer1.c: 359:                 OutPut=Umidade1;
  6040  0089  1303               	bcf	3,6	;RP1=0, select bank1
  6041  008A  0840               	movf	(_Umidade1+3)^(0+128),w
  6042  008B  00A9               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6043  008C  083F               	movf	(_Umidade1+2)^(0+128),w
  6044  008D  00A8               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6045  008E  083E               	movf	(_Umidade1+1)^(0+128),w
  6046  008F  00A7               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6047  0090  083D               	movf	_Umidade1^(0+128),w
  6048  0091                     L6:
  6049  0091  00A6               	movwf	Decodify_Command@OutPut^(0+128)
  6050                           
  6051                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  6052  0092  3041               	movlw	65
  6053  0093  1283               	bcf	3,5	;RP0=0, select bank0
  6054  0094  00AC               	movwf	___flmul@b+3
  6055  0095  3020               	movlw	32
  6056  0096  00AB               	movwf	___flmul@b+2
  6057  0097  3000               	movlw	0
  6058  0098  00AA               	movwf	___flmul@b+1
  6059  0099  3000               	movlw	0
  6060  009A  00A9               	movwf	___flmul@b
  6061  009B  1683               	bsf	3,5	;RP0=1, select bank1
  6062  009C  0829               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6063  009D  1283               	bcf	3,5	;RP0=0, select bank0
  6064  009E  00B0               	movwf	___flmul@a+3
  6065  009F  1683               	bsf	3,5	;RP0=1, select bank1
  6066  00A0  0828               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6067  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  6068  00A2  00AF               	movwf	___flmul@a+2
  6069  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  6070  00A4  0827               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6071  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  6072  00A6  00AE               	movwf	___flmul@a+1
  6073  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  6074  00A8  0826               	movf	Decodify_Command@OutPut^(0+128),w
  6075  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  6076  00AA  00AD               	movwf	___flmul@a
  6077  00AB  120A  118A  23C8  120A  118A  	fcall	___flmul
  6078  00B0  082C               	movf	?___flmul+3,w
  6079  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  6080  00B2  00A9               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6081  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  6082  00B4  082B               	movf	?___flmul+2,w
  6083  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  6084  00B6  00A8               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6085  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  6086  00B8  082A               	movf	?___flmul+1,w
  6087  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  6088  00BA  00A7               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6089  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  6090  00BC  0829               	movf	?___flmul,w
  6091  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  6092  00BE  00A6               	movwf	Decodify_Command@OutPut^(0+128)
  6093                           
  6094                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  6095  00BF  138B               	bcf	11,7	;volatile
  6096                           
  6097                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  6098  00C0  3002               	movlw	2
  6099  00C1  160A  158A  23D8  120A  118A  	fcall	_Send_To_MB
  6100                           
  6101                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  6102  00C6  0829               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6103  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  6104  00C8  00C6               	movwf	___fltol@f1+3
  6105  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  6106  00CA  0828               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6107  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  6108  00CC  00C5               	movwf	___fltol@f1+2
  6109  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  6110  00CE  0827               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6111  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  6112  00D0  00C4               	movwf	___fltol@f1+1
  6113  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  6114  00D2  0826               	movf	Decodify_Command@OutPut^(0+128),w
  6115  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  6116  00D4  00C3               	movwf	___fltol@f1
  6117  00D5  160A  118A  2013  120A  118A  	fcall	___fltol
  6118  00DA  0844               	movf	?___fltol+1,w
  6119  00DB  00CF               	movwf	USART_put_int@value+1
  6120  00DC  0843               	movf	?___fltol,w
  6121  00DD  00CE               	movwf	USART_put_int@value
  6122  00DE  160A  158A  2236   	fcall	_USART_put_int
  6123                           
  6124                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  6125  00E1  178B               	bsf	11,7	;volatile
  6126                           
  6127                           ;SlaveLiofilizadorVer1.c: 375:              break;
  6128  00E2  0008               	return
  6129  00E3                     l5632:
  6130                           
  6131                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6132  00E3  1683               	bsf	3,5	;RP0=1, select bank3
  6133  00E4  1703               	bsf	3,6	;RP1=1, select bank3
  6134  00E5  0816               	movf	(_usart_protocol^(0+384)+6),w
  6135  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  6136  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  6137  00E8  00DF               	movwf	??_Decodify_Command
  6138  00E9  085F               	movf	??_Decodify_Command,w
  6139  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  6140  00EB  00AE               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6141                           
  6142                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6143  00EC  1703               	bsf	3,6	;RP1=1, select bank3
  6144  00ED  0817               	movf	(_usart_protocol^(0+384)+7),w
  6145  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  6146  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  6147  00F0  00DF               	movwf	??_Decodify_Command
  6148  00F1  085F               	movf	??_Decodify_Command,w
  6149  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  6150  00F3  00AD               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6151                           
  6152                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6153  00F4  1703               	bsf	3,6	;RP1=1, select bank3
  6154  00F5  0818               	movf	(_usart_protocol^(0+384)+8),w
  6155  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  6156  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  6157  00F8  00DF               	movwf	??_Decodify_Command
  6158  00F9  085F               	movf	??_Decodify_Command,w
  6159  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  6160  00FB  00AC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6161                           
  6162                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6163  00FC  1703               	bsf	3,6	;RP1=1, select bank3
  6164  00FD  0819               	movf	(_usart_protocol^(0+384)+9),w
  6165  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  6166  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  6167  0100  00DF               	movwf	??_Decodify_Command
  6168  0101  085F               	movf	??_Decodify_Command,w
  6169  0102  1683               	bsf	3,5	;RP0=1, select bank1
  6170  0103  00AB               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6171                           
  6172                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  6173  0104  082E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6174  0105  1283               	bcf	3,5	;RP0=0, select bank0
  6175  0106  00DB               	movwf	Save_Log@add_datalog+3
  6176  0107  1683               	bsf	3,5	;RP0=1, select bank1
  6177  0108  082D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6178  0109  1283               	bcf	3,5	;RP0=0, select bank0
  6179  010A  00DA               	movwf	Save_Log@add_datalog+2
  6180  010B  1683               	bsf	3,5	;RP0=1, select bank1
  6181  010C  082C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6182  010D  1283               	bcf	3,5	;RP0=0, select bank0
  6183  010E  00D9               	movwf	Save_Log@add_datalog+1
  6184  010F  1683               	bsf	3,5	;RP0=1, select bank1
  6185  0110  082B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6186  0111  1283               	bcf	3,5	;RP0=0, select bank0
  6187  0112  00D8               	movwf	Save_Log@add_datalog
  6188  0113  120A  158A  2001   	fcall	_Save_Log
  6189                           
  6190                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  6191  0116  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6192  0117  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6193                           
  6194                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  6195  0118  1683               	bsf	3,5	;RP0=1, select bank1
  6196  0119  1303               	bcf	3,6	;RP1=0, select bank1
  6197  011A  01CD               	clrf	_milisegundo^(0+128)	;volatile
  6198  011B  01CE               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6199                           
  6200                           ;SlaveLiofilizadorVer1.c: 387:              break;
  6201  011C  0008               	return
  6202  011D                     l5640:
  6203                           
  6204                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  6205  011D  3002               	movlw	2
  6206  011E  160A  158A  23D8  120A  118A  	fcall	_Send_To_MB
  6207                           
  6208                           ;SlaveLiofilizadorVer1.c: 405:              USART_put_int(2);
  6209  0123  3002               	movlw	2
  6210  0124  1283               	bcf	3,5	;RP0=0, select bank0
  6211  0125  00CE               	movwf	USART_put_int@value
  6212  0126  3000               	movlw	0
  6213  0127  00CF               	movwf	USART_put_int@value+1
  6214  0128  160A  158A  2236   	fcall	_USART_put_int
  6215                           
  6216                           ;SlaveLiofilizadorVer1.c: 411:              break;
  6217  012B  0008               	return
  6218  012C                     l5644:
  6219                           
  6220                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  6221  012C  1683               	bsf	3,5	;RP0=1, select bank3
  6222  012D  1703               	bsf	3,6	;RP1=1, select bank3
  6223  012E  0817               	movf	(_usart_protocol^(0+384)+7),w
  6224  012F  1283               	bcf	3,5	;RP0=0, select bank0
  6225  0130  1303               	bcf	3,6	;RP1=0, select bank0
  6226  0131  00DF               	movwf	??_Decodify_Command
  6227  0132  085F               	movf	??_Decodify_Command,w
  6228  0133  00A0               	movwf	EEPROM_Write_Byte@dado
  6229  0134  1683               	bsf	3,5	;RP0=1, select bank3
  6230  0135  1703               	bsf	3,6	;RP1=1, select bank3
  6231  0136  0816               	movf	(_usart_protocol^(0+384)+6),w
  6232  0137  160A  158A  25FC  120A  118A  	fcall	_EEPROM_Write_Byte
  6233  013C                     L7:
  6234                           
  6235                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  6236  013C  3003               	movlw	3
  6237  013D  160A  158A  23D8  120A  118A  	fcall	_Send_To_MB
  6238                           
  6239                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  6240  0142  160A  158A  21C7   	fcall	_Send_Reply_OK
  6241                           
  6242                           ;SlaveLiofilizadorVer1.c: 432:              break;
  6243  0145  0008               	return
  6244  0146                     l5648:
  6245                           
  6246                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6247  0146  1683               	bsf	3,5	;RP0=1, select bank3
  6248  0147  1703               	bsf	3,6	;RP1=1, select bank3
  6249  0148  0816               	movf	(_usart_protocol^(0+384)+6),w
  6250  0149  160A  158A  2349  120A  118A  	fcall	_EEPROM_Read_Byte
  6251  014E  1303               	bcf	3,6	;RP1=0, select bank0
  6252  014F  00DF               	movwf	??_Decodify_Command
  6253  0150  085F               	movf	??_Decodify_Command,w
  6254  0151  1683               	bsf	3,5	;RP0=1, select bank1
  6255  0152  00AA               	movwf	Decodify_Command@tempchar^(0+128)
  6256                           
  6257                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  6258  0153  3001               	movlw	1
  6259  0154  160A  158A  23D8  120A  118A  	fcall	_Send_To_MB
  6260                           
  6261                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  6262  0159  082A               	movf	Decodify_Command@tempchar^(0+128),w
  6263  015A  160A  158A  21FB   	fcall	_USART_putc
  6264                           
  6265                           ;SlaveLiofilizadorVer1.c: 437:              break;
  6266  015D  0008               	return
  6267  015E                     l5654:
  6268                           
  6269                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  6270  015E  1683               	bsf	3,5	;RP0=1, select bank3
  6271  015F  1703               	bsf	3,6	;RP1=1, select bank3
  6272  0160  0816               	movf	(_usart_protocol^(0+384)+6),w
  6273  0161  1283               	bcf	3,5	;RP0=0, select bank0
  6274  0162  1303               	bcf	3,6	;RP1=0, select bank0
  6275  0163  00DF               	movwf	??_Decodify_Command
  6276  0164  085F               	movf	??_Decodify_Command,w
  6277  0165  1683               	bsf	3,5	;RP0=1, select bank1
  6278  0166  00A2               	movwf	Decodify_Command@add^(0+128)
  6279                           
  6280                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6281  0167  1703               	bsf	3,6	;RP1=1, select bank3
  6282  0168  0818               	movf	(_usart_protocol^(0+384)+8),w
  6283  0169  1283               	bcf	3,5	;RP0=0, select bank0
  6284  016A  1303               	bcf	3,6	;RP1=0, select bank0
  6285  016B  00DF               	movwf	??_Decodify_Command
  6286  016C  01E0               	clrf	??_Decodify_Command+1
  6287  016D  1683               	bsf	3,5	;RP0=1, select bank3
  6288  016E  1703               	bsf	3,6	;RP1=1, select bank3
  6289  016F  0817               	movf	(_usart_protocol^(0+384)+7),w
  6290  0170  1283               	bcf	3,5	;RP0=0, select bank0
  6291  0171  1303               	bcf	3,6	;RP1=0, select bank0
  6292  0172  00E1               	movwf	??_Decodify_Command+2
  6293  0173  01E2               	clrf	??_Decodify_Command+3
  6294  0174  0861               	movf	??_Decodify_Command+2,w
  6295  0175  00E2               	movwf	??_Decodify_Command+3
  6296  0176  01E1               	clrf	??_Decodify_Command+2
  6297  0177  085F               	movf	??_Decodify_Command,w
  6298  0178  0461               	iorwf	??_Decodify_Command+2,w
  6299  0179  1683               	bsf	3,5	;RP0=1, select bank1
  6300  017A  00A0               	movwf	Decodify_Command@dados^(0+128)
  6301  017B  1283               	bcf	3,5	;RP0=0, select bank0
  6302  017C  0860               	movf	??_Decodify_Command+1,w
  6303  017D  0462               	iorwf	??_Decodify_Command+3,w
  6304  017E  1683               	bsf	3,5	;RP0=1, select bank1
  6305  017F  00A1               	movwf	(Decodify_Command@dados+1)^(0+128)
  6306                           
  6307                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  6308  0180  0821               	movf	(Decodify_Command@dados+1)^(0+128),w
  6309  0181  1283               	bcf	3,5	;RP0=0, select bank0
  6310  0182  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6311  0183  1683               	bsf	3,5	;RP0=1, select bank1
  6312  0184  0820               	movf	Decodify_Command@dados^(0+128),w
  6313  0185  1283               	bcf	3,5	;RP0=0, select bank0
  6314  0186  00A5               	movwf	EEPROM_Write_Integer@dado
  6315  0187  1683               	bsf	3,5	;RP0=1, select bank1
  6316  0188  0822               	movf	Decodify_Command@add^(0+128),w
  6317  0189  160A  158A  2486  120A  118A  	fcall	_EEPROM_Write_Integer
  6318  018E  293C               	goto	L7
  6319  018F                     l5664:	
  6320                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  6321                           
  6322                           
  6323                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6324  018F  1683               	bsf	3,5	;RP0=1, select bank3
  6325  0190  1703               	bsf	3,6	;RP1=1, select bank3
  6326  0191  0816               	movf	(_usart_protocol^(0+384)+6),w
  6327  0192  160A  158A  2400  120A  118A  	fcall	_EEPROM_Read_Integer
  6328  0197  0824               	movf	?_EEPROM_Read_Integer+1,w
  6329  0198  1683               	bsf	3,5	;RP0=1, select bank1
  6330  0199  00A5               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6331  019A  1283               	bcf	3,5	;RP0=0, select bank0
  6332  019B  0823               	movf	?_EEPROM_Read_Integer,w
  6333  019C                     L9:
  6334  019C  1683               	bsf	3,5	;RP0=1, select bank1
  6335  019D  00A4               	movwf	Decodify_Command@tempint^(0+128)
  6336                           
  6337                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  6338  019E  3002               	movlw	2
  6339  019F  160A  158A  23D8  120A  118A  	fcall	_Send_To_MB
  6340                           
  6341                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  6342  01A4  0825               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6343  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  6344  01A6  00CF               	movwf	USART_put_int@value+1
  6345  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  6346  01A8  0824               	movf	Decodify_Command@tempint^(0+128),w
  6347  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  6348  01AA  00CE               	movwf	USART_put_int@value
  6349  01AB  160A  158A  2236   	fcall	_USART_put_int
  6350                           
  6351                           ;SlaveLiofilizadorVer1.c: 452:              break;
  6352  01AE  0008               	return
  6353  01AF                     l5670:
  6354                           
  6355                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  6356  01AF  3097               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6357  01B0  00DF               	movwf	??_Decodify_Command
  6358  01B1  085F               	movf	??_Decodify_Command,w
  6359  01B2  00A5               	movwf	EEPROM_Write_String@dado
  6360  01B3  1683               	bsf	3,5	;RP0=1, select bank3
  6361  01B4  1703               	bsf	3,6	;RP1=1, select bank3
  6362  01B5  0816               	movf	(_usart_protocol^(0+384)+6),w
  6363  01B6  160A  158A  242A  120A  118A  	fcall	_EEPROM_Write_String
  6364  01BB  293C               	goto	L7
  6365  01BC                     l5676:	
  6366                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  6367                           
  6368                           
  6369                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 462:             
      +                           EEPROM_Read_String(usart_protocol.value[0],buffer);
  6370  01BC  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6371  01BD  00DF               	movwf	??_Decodify_Command
  6372  01BE  085F               	movf	??_Decodify_Command,w
  6373  01BF  00A3               	movwf	EEPROM_Read_String@dado
  6374  01C0  1683               	bsf	3,5	;RP0=1, select bank3
  6375  01C1  1703               	bsf	3,6	;RP1=1, select bank3
  6376  01C2  0816               	movf	(_usart_protocol^(0+384)+6),w
  6377  01C3  160A  158A  2308  120A  118A  	fcall	_EEPROM_Read_String
  6378                           
  6379                           ;SlaveLiofilizadorVer1.c: 463:              Send_To_MB(sizeof(buffer));
  6380  01C8  3021               	movlw	33
  6381  01C9  286D               	goto	L8
  6382  01CA                     l5682:
  6383                           
  6384                           ;SlaveLiofilizadorVer1.c: 470:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6385  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  6386  01CB  082E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6387  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  6388  01CD  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6389  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  6390  01CF  082D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6391  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  6392  01D1  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6393  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  6394  01D3  082C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6395  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  6396  01D5  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6397  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  6398  01D7  082B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6399  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  6400  01D9  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6401  01DA  1683               	bsf	3,5	;RP0=1, select bank3
  6402  01DB  1703               	bsf	3,6	;RP1=1, select bank3
  6403  01DC  081B               	movf	(_usart_protocol^(0+384)+11),w
  6404  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  6405  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  6406  01DF  00DF               	movwf	??_Decodify_Command
  6407  01E0  085F               	movf	??_Decodify_Command,w
  6408  01E1  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  6409  01E2  1683               	bsf	3,5	;RP0=1, select bank3
  6410  01E3  1703               	bsf	3,6	;RP1=1, select bank3
  6411  01E4  0816               	movf	(_usart_protocol^(0+384)+6),w
  6412  01E5  160A  158A  2220  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6413  01EA  293C               	goto	L7
  6414  01EB                     l5688:	
  6415                           ;SlaveLiofilizadorVer1.c: 473:              Send_To_MB(3);
  6416                           
  6417                           
  6418                           ;SlaveLiofilizadorVer1.c: 477:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6419  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  6420  01EC  082E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6421  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  6422  01EE  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6423  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  6424  01F0  082D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6425  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  6426  01F2  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6427  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  6428  01F4  082C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6429  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  6430  01F6  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6431  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  6432  01F8  082B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6433  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  6434  01FA  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6435  01FB  1683               	bsf	3,5	;RP0=1, select bank3
  6436  01FC  1703               	bsf	3,6	;RP1=1, select bank3
  6437  01FD  0816               	movf	(_usart_protocol^(0+384)+6),w
  6438  01FE  160A  158A  227B  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6439  0203  00DF               	movwf	??_Decodify_Command
  6440  0204  085F               	movf	??_Decodify_Command,w
  6441  0205  1683               	bsf	3,5	;RP0=1, select bank1
  6442  0206  00AA               	movwf	Decodify_Command@tempchar^(0+128)
  6443                           
  6444                           ;SlaveLiofilizadorVer1.c: 481:              Send_To_MB(1);
  6445  0207  3001               	movlw	1
  6446  0208  160A  158A  23D8  120A  118A  	fcall	_Send_To_MB
  6447                           
  6448                           ;SlaveLiofilizadorVer1.c: 482:              USART_putc(tempchar);
  6449  020D  082A               	movf	Decodify_Command@tempchar^(0+128),w
  6450  020E  160A  158A  21FB   	fcall	_USART_putc
  6451                           
  6452                           ;SlaveLiofilizadorVer1.c: 483:              break;
  6453  0211  0008               	return
  6454  0212                     l5694:
  6455                           
  6456                           ;SlaveLiofilizadorVer1.c: 485:              {;SlaveLiofilizadorVer1.c: 486:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6457  0212  1683               	bsf	3,5	;RP0=1, select bank1
  6458  0213  082E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6459  0214  1283               	bcf	3,5	;RP0=0, select bank0
  6460  0215  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6461  0216  1683               	bsf	3,5	;RP0=1, select bank1
  6462  0217  082D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6463  0218  1283               	bcf	3,5	;RP0=0, select bank0
  6464  0219  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6465  021A  1683               	bsf	3,5	;RP0=1, select bank1
  6466  021B  082C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6467  021C  1283               	bcf	3,5	;RP0=0, select bank0
  6468  021D  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6469  021E  1683               	bsf	3,5	;RP0=1, select bank1
  6470  021F  082B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6471  0220  1283               	bcf	3,5	;RP0=0, select bank0
  6472  0221  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6473  0222  1683               	bsf	3,5	;RP0=1, select bank3
  6474  0223  1703               	bsf	3,6	;RP1=1, select bank3
  6475  0224  081C               	movf	(_usart_protocol^(0+384)+12),w
  6476  0225  1283               	bcf	3,5	;RP0=0, select bank0
  6477  0226  1303               	bcf	3,6	;RP1=0, select bank0
  6478  0227  00DF               	movwf	??_Decodify_Command
  6479  0228  01E0               	clrf	??_Decodify_Command+1
  6480  0229  1683               	bsf	3,5	;RP0=1, select bank3
  6481  022A  1703               	bsf	3,6	;RP1=1, select bank3
  6482  022B  081B               	movf	(_usart_protocol^(0+384)+11),w
  6483  022C  1283               	bcf	3,5	;RP0=0, select bank0
  6484  022D  1303               	bcf	3,6	;RP1=0, select bank0
  6485  022E  00E1               	movwf	??_Decodify_Command+2
  6486  022F  01E2               	clrf	??_Decodify_Command+3
  6487  0230  0861               	movf	??_Decodify_Command+2,w
  6488  0231  00E2               	movwf	??_Decodify_Command+3
  6489  0232  01E1               	clrf	??_Decodify_Command+2
  6490  0233  085F               	movf	??_Decodify_Command,w
  6491  0234  0461               	iorwf	??_Decodify_Command+2,w
  6492  0235  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  6493  0236  0860               	movf	??_Decodify_Command+1,w
  6494  0237  0462               	iorwf	??_Decodify_Command+3,w
  6495  0238  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  6496  0239  1683               	bsf	3,5	;RP0=1, select bank3
  6497  023A  1703               	bsf	3,6	;RP1=1, select bank3
  6498  023B  0816               	movf	(_usart_protocol^(0+384)+6),w
  6499  023C  160A  158A  22E8  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6500  0241  293C               	goto	L7
  6501  0242                     l5700:	
  6502                           ;SlaveLiofilizadorVer1.c: 491:              Send_To_MB(3);
  6503                           
  6504                           
  6505                           ;SlaveLiofilizadorVer1.c: 496:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6506  0242  1683               	bsf	3,5	;RP0=1, select bank1
  6507  0243  082E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6508  0244  1283               	bcf	3,5	;RP0=0, select bank0
  6509  0245  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6510  0246  1683               	bsf	3,5	;RP0=1, select bank1
  6511  0247  082D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6512  0248  1283               	bcf	3,5	;RP0=0, select bank0
  6513  0249  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6514  024A  1683               	bsf	3,5	;RP0=1, select bank1
  6515  024B  082C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6516  024C  1283               	bcf	3,5	;RP0=0, select bank0
  6517  024D  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6518  024E  1683               	bsf	3,5	;RP0=1, select bank1
  6519  024F  082B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6520  0250  1283               	bcf	3,5	;RP0=0, select bank0
  6521  0251  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6522  0252  1683               	bsf	3,5	;RP0=1, select bank3
  6523  0253  1703               	bsf	3,6	;RP1=1, select bank3
  6524  0254  0816               	movf	(_usart_protocol^(0+384)+6),w
  6525  0255  160A  158A  23B0  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6526  025A  0837               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6527  025B  1683               	bsf	3,5	;RP0=1, select bank1
  6528  025C  00A5               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6529  025D  1283               	bcf	3,5	;RP0=0, select bank0
  6530  025E  0836               	movf	?_EEPROM_24C1025_Read_Int,w
  6531  025F  299C               	goto	L9
  6532  0260                     l5706:	
  6533                           ;SlaveLiofilizadorVer1.c: 498:              Send_To_MB(2);
  6534                           
  6535                           
  6536                           ;SlaveLiofilizadorVer1.c: 504:              {;SlaveLiofilizadorVer1.c: 505:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 506:              sizedata=usart_protocol.value
      +                          [5];
  6537  0260  1683               	bsf	3,5	;RP0=1, select bank3
  6538  0261  1703               	bsf	3,6	;RP1=1, select bank3
  6539  0262  081B               	movf	(_usart_protocol^(0+384)+11),w
  6540  0263  1283               	bcf	3,5	;RP0=0, select bank0
  6541  0264  1303               	bcf	3,6	;RP1=0, select bank0
  6542  0265  00DF               	movwf	??_Decodify_Command
  6543  0266  085F               	movf	??_Decodify_Command,w
  6544  0267  1683               	bsf	3,5	;RP0=1, select bank1
  6545  0268  00A3               	movwf	Decodify_Command@sizedata^(0+128)
  6546                           
  6547                           ;SlaveLiofilizadorVer1.c: 507:              Send_To_MB(sizedata);
  6548  0269  0823               	movf	Decodify_Command@sizedata^(0+128),w
  6549  026A  160A  158A  23D8  120A  118A  	fcall	_Send_To_MB
  6550                           
  6551                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer_USART(usart_proto
      +                          col.value[0],
  6552  026F  082E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6553  0270  1283               	bcf	3,5	;RP0=0, select bank0
  6554  0271  00AC               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3
  6555  0272  1683               	bsf	3,5	;RP0=1, select bank1
  6556  0273  082D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6557  0274  1283               	bcf	3,5	;RP0=0, select bank0
  6558  0275  00AB               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2
  6559  0276  1683               	bsf	3,5	;RP0=1, select bank1
  6560  0277  082C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6561  0278  1283               	bcf	3,5	;RP0=0, select bank0
  6562  0279  00AA               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1
  6563  027A  1683               	bsf	3,5	;RP0=1, select bank1
  6564  027B  082B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6565  027C  1283               	bcf	3,5	;RP0=0, select bank0
  6566  027D  00A9               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add
  6567  027E  1683               	bsf	3,5	;RP0=1, select bank1
  6568  027F  0823               	movf	Decodify_Command@sizedata^(0+128),w
  6569  0280  1283               	bcf	3,5	;RP0=0, select bank0
  6570  0281  00DF               	movwf	??_Decodify_Command
  6571  0282  085F               	movf	??_Decodify_Command,w
  6572  0283  00AD               	movwf	EEPROM_24C1025_Read_Buffer_USART@sizedata
  6573  0284  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6574  0285  00E0               	movwf	??_Decodify_Command+1
  6575  0286  0860               	movf	??_Decodify_Command+1,w
  6576  0287  00AE               	movwf	EEPROM_24C1025_Read_Buffer_USART@data
  6577  0288  1683               	bsf	3,5	;RP0=1, select bank3
  6578  0289  1703               	bsf	3,6	;RP1=1, select bank3
  6579  028A  0816               	movf	(_usart_protocol^(0+384)+6),w
  6580  028B  160A  118A  2682   	fcall	_EEPROM_24C1025_Read_Buffer_USART
  6581                           
  6582                           ;SlaveLiofilizadorVer1.c: 513:              };SlaveLiofilizadorVer1.c: 514:             
      +                           break;
  6583  028E  0008               	return
  6584  028F                     l5712:
  6585                           
  6586                           ;SlaveLiofilizadorVer1.c: 517:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6587  028F  1683               	bsf	3,5	;RP0=1, select bank1
  6588  0290  082E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6589  0291  1283               	bcf	3,5	;RP0=0, select bank0
  6590  0292  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6591  0293  1683               	bsf	3,5	;RP0=1, select bank1
  6592  0294  082D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6593  0295  1283               	bcf	3,5	;RP0=0, select bank0
  6594  0296  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6595  0297  1683               	bsf	3,5	;RP0=1, select bank1
  6596  0298  082C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6597  0299  1283               	bcf	3,5	;RP0=0, select bank0
  6598  029A  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6599  029B  1683               	bsf	3,5	;RP0=1, select bank1
  6600  029C  082B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6601  029D  1283               	bcf	3,5	;RP0=0, select bank0
  6602  029E  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6603  029F  1683               	bsf	3,5	;RP0=1, select bank3
  6604  02A0  1703               	bsf	3,6	;RP1=1, select bank3
  6605  02A1  081B               	movf	(_usart_protocol^(0+384)+11),w
  6606  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  6607  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  6608  02A4  00DF               	movwf	??_Decodify_Command
  6609  02A5  085F               	movf	??_Decodify_Command,w
  6610  02A6  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6611  02A7  309C               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6612  02A8  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6613  02A9  3001               	movlw	1
  6614  02AA  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6615  02AB  1683               	bsf	3,5	;RP0=1, select bank3
  6616  02AC  1703               	bsf	3,6	;RP1=1, select bank3
  6617  02AD  0816               	movf	(_usart_protocol^(0+384)+6),w
  6618  02AE  160A  118A  2392  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6619  02B3  293C               	goto	L7
  6620  02B4                     l5718:	
  6621                           ;SlaveLiofilizadorVer1.c: 522:              Send_To_MB(3);
  6622                           
  6623                           
  6624                           ;SlaveLiofilizadorVer1.c: 527:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6625  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  6626  02B5  082E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6627  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  6628  02B7  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6629  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  6630  02B9  082D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6631  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  6632  02BB  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6633  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  6634  02BD  082C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6635  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  6636  02BF  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6637  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  6638  02C1  082B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6639  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  6640  02C3  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6641  02C4  309B               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6642  02C5  00DF               	movwf	??_Decodify_Command
  6643  02C6  085F               	movf	??_Decodify_Command,w
  6644  02C7  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6645  02C8  1683               	bsf	3,5	;RP0=1, select bank3
  6646  02C9  1703               	bsf	3,6	;RP1=1, select bank3
  6647  02CA  0816               	movf	(_usart_protocol^(0+384)+6),w
  6648  02CB  120A  118A  26BD  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6649  02D0  293C               	goto	L7
  6650  02D1                     l5724:	
  6651                           ;SlaveLiofilizadorVer1.c: 530:              Send_To_MB(3);
  6652                           
  6653                           
  6654                           ;SlaveLiofilizadorVer1.c: 534:              {;SlaveLiofilizadorVer1.c: 535:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6655  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  6656  02D2  082E               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6657  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  6658  02D4  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6659  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  6660  02D6  082D               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6661  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  6662  02D8  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6663  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  6664  02DA  082C               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6665  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  6666  02DC  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6667  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  6668  02DE  082B               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6669  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  6670  02E0  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6671  02E1  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6672  02E2  00DF               	movwf	??_Decodify_Command
  6673  02E3  085F               	movf	??_Decodify_Command,w
  6674  02E4  00AD               	movwf	EEPROM_24C1025_Read_Str@buffer
  6675  02E5  1683               	bsf	3,5	;RP0=1, select bank3
  6676  02E6  1703               	bsf	3,6	;RP1=1, select bank3
  6677  02E7  0816               	movf	(_usart_protocol^(0+384)+6),w
  6678  02E8  160A  118A  2508  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6679                           
  6680                           ;SlaveLiofilizadorVer1.c: 539:              Send_To_MB(strlen(buffer)+1);
  6681  02ED  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6682  02EE  160A  158A  2294  120A  118A  	fcall	_strlen
  6683  02F3  0820               	movf	?_strlen,w
  6684  02F4  3E01               	addlw	1
  6685  02F5  286D               	goto	L8
  6686  02F6                     l5728:
  6687                           
  6688                           ;SlaveLiofilizadorVer1.c: 545:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  6689  02F6  1683               	bsf	3,5	;RP0=1, select bank3
  6690  02F7  1703               	bsf	3,6	;RP1=1, select bank3
  6691  02F8  0817               	movf	(_usart_protocol^(0+384)+7),w
  6692  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  6693  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  6694  02FB  00DF               	movwf	??_Decodify_Command
  6695  02FC  01E0               	clrf	??_Decodify_Command+1
  6696  02FD  085F               	movf	??_Decodify_Command,w
  6697  02FE  00D8               	movwf	EEPROM_24C1025_Fill_All@value
  6698  02FF  0860               	movf	??_Decodify_Command+1,w
  6699  0300  00D9               	movwf	EEPROM_24C1025_Fill_All@value+1
  6700  0301  1683               	bsf	3,5	;RP0=1, select bank3
  6701  0302  1703               	bsf	3,6	;RP1=1, select bank3
  6702  0303  0816               	movf	(_usart_protocol^(0+384)+6),w
  6703  0304  160A  158A  2674  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  6704  0309  293C               	goto	L7
  6705  030A                     l5734:	
  6706                           ;SlaveLiofilizadorVer1.c: 547:              Send_To_MB(3);
  6707                           
  6708                           
  6709                           ;SlaveLiofilizadorVer1.c: 552:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  6710  030A  1683               	bsf	3,5	;RP0=1, select bank3
  6711  030B  1703               	bsf	3,6	;RP1=1, select bank3
  6712  030C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6713  030D  1283               	bcf	3,5	;RP0=0, select bank0
  6714  030E  1303               	bcf	3,6	;RP1=0, select bank0
  6715  030F  00DF               	movwf	??_Decodify_Command
  6716  0310  01E0               	clrf	??_Decodify_Command+1
  6717  0311  085F               	movf	??_Decodify_Command,w
  6718  0312  00D6               	movwf	PROCULUS_Show_Screen@screen
  6719  0313  0860               	movf	??_Decodify_Command+1,w
  6720  0314  00D7               	movwf	PROCULUS_Show_Screen@screen+1
  6721  0315  160A  158A  220B  120A  118A  	fcall	_PROCULUS_Show_Screen
  6722  031A  293C               	goto	L7
  6723  031B                     l5740:	
  6724                           ;SlaveLiofilizadorVer1.c: 553:              Send_To_MB(3);
  6725                           
  6726                           
  6727                           ;SlaveLiofilizadorVer1.c: 558:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  6728  031B  1683               	bsf	3,5	;RP0=1, select bank3
  6729  031C  1703               	bsf	3,6	;RP1=1, select bank3
  6730  031D  0816               	movf	(_usart_protocol^(0+384)+6),w
  6731  031E  1283               	bcf	3,5	;RP0=0, select bank0
  6732  031F  1303               	bcf	3,6	;RP1=0, select bank0
  6733  0320  00DF               	movwf	??_Decodify_Command
  6734  0321  01E0               	clrf	??_Decodify_Command+1
  6735  0322  085F               	movf	??_Decodify_Command,w
  6736  0323  00E0               	movwf	??_Decodify_Command+1
  6737  0324  01DF               	clrf	??_Decodify_Command
  6738  0325  1683               	bsf	3,5	;RP0=1, select bank3
  6739  0326  1703               	bsf	3,6	;RP1=1, select bank3
  6740  0327  0817               	movf	(_usart_protocol^(0+384)+7),w
  6741  0328  1283               	bcf	3,5	;RP0=0, select bank0
  6742  0329  1303               	bcf	3,6	;RP1=0, select bank0
  6743  032A  075F               	addwf	??_Decodify_Command,w
  6744  032B  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  6745  032C  3000               	movlw	0
  6746  032D  1803               	skipnc
  6747  032E  3001               	movlw	1
  6748  032F  0760               	addwf	??_Decodify_Command+1,w
  6749  0330  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  6750  0331  160A  158A  236B  120A  118A  	fcall	_PROCULUS_Buzzer
  6751  0336  293C               	goto	L7
  6752  0337                     l5746:	
  6753                           ;SlaveLiofilizadorVer1.c: 560:              Send_To_MB(3);
  6754                           
  6755                           
  6756                           ;SlaveLiofilizadorVer1.c: 564:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  6757  0337  1683               	bsf	3,5	;RP0=1, select bank3
  6758  0338  1703               	bsf	3,6	;RP1=1, select bank3
  6759  0339  0816               	movf	(_usart_protocol^(0+384)+6),w
  6760  033A  1283               	bcf	3,5	;RP0=0, select bank0
  6761  033B  1303               	bcf	3,6	;RP1=0, select bank0
  6762  033C  00DF               	movwf	??_Decodify_Command
  6763  033D  01E0               	clrf	??_Decodify_Command+1
  6764  033E  085F               	movf	??_Decodify_Command,w
  6765  033F  00E0               	movwf	??_Decodify_Command+1
  6766  0340  01DF               	clrf	??_Decodify_Command
  6767  0341  1683               	bsf	3,5	;RP0=1, select bank3
  6768  0342  1703               	bsf	3,6	;RP1=1, select bank3
  6769  0343  0817               	movf	(_usart_protocol^(0+384)+7),w
  6770  0344  1283               	bcf	3,5	;RP0=0, select bank0
  6771  0345  1303               	bcf	3,6	;RP1=0, select bank0
  6772  0346  075F               	addwf	??_Decodify_Command,w
  6773  0347  00DA               	movwf	PROCULUS_VP_Write_String@vp
  6774  0348  3000               	movlw	0
  6775  0349  1803               	skipnc
  6776  034A  3001               	movlw	1
  6777  034B  0760               	addwf	??_Decodify_Command+1,w
  6778  034C  00DB               	movwf	PROCULUS_VP_Write_String@vp+1
  6779  034D  3098               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  6780  034E  00E1               	movwf	??_Decodify_Command+2
  6781  034F  0861               	movf	??_Decodify_Command+2,w
  6782  0350  00DC               	movwf	PROCULUS_VP_Write_String@text
  6783  0351  160A  158A  224C  120A  118A  	fcall	_PROCULUS_VP_Write_String
  6784  0356  293C               	goto	L7
  6785  0357                     l5752:	
  6786                           ;SlaveLiofilizadorVer1.c: 567:              Send_To_MB(3);
  6787                           
  6788                           
  6789                           ;SlaveLiofilizadorVer1.c: 573:              if(usart_protocol.value[0]==0)
  6790  0357  1683               	bsf	3,5	;RP0=1, select bank3
  6791  0358  1703               	bsf	3,6	;RP1=1, select bank3
  6792  0359  0816               	movf	(_usart_protocol^(0+384)+6),w
  6793  035A  1D03               	btfss	3,2
  6794  035B  2B67               	goto	l5758
  6795                           
  6796                           ;SlaveLiofilizadorVer1.c: 574:                 {;SlaveLiofilizadorVer1.c: 575:          
      +                                 if(!usart_protocol.value[1])
  6797  035C  0817               	movf	(_usart_protocol^(0+384)+7),w
  6798  035D  1D03               	btfss	3,2
  6799  035E  2B63               	goto	l422
  6800                           
  6801                           ;SlaveLiofilizadorVer1.c: 576:                    PORTCbits.RC0=0;
  6802  035F  1283               	bcf	3,5	;RP0=0, select bank0
  6803  0360  1303               	bcf	3,6	;RP1=0, select bank0
  6804  0361  1007               	bcf	7,0	;volatile
  6805  0362  293C               	goto	L7
  6806  0363                     l422:	
  6807                           ;SlaveLiofilizadorVer1.c: 577:                 else
  6808                           
  6809                           
  6810                           ;SlaveLiofilizadorVer1.c: 578:                    PORTCbits.RC0=1;
  6811  0363  1283               	bcf	3,5	;RP0=0, select bank0
  6812  0364  1303               	bcf	3,6	;RP1=0, select bank0
  6813  0365  1407               	bsf	7,0	;volatile
  6814  0366  293C               	goto	L7
  6815  0367                     l5758:
  6816  0367  0316               	decf	(_usart_protocol^(0+384)+6),w
  6817  0368  1D03               	btfss	3,2
  6818  0369  293C               	goto	L7
  6819                           
  6820                           ;SlaveLiofilizadorVer1.c: 581:                      {;SlaveLiofilizadorVer1.c: 582:     
      +                                            if(!usart_protocol.value[1])
  6821  036A  0817               	movf	(_usart_protocol^(0+384)+7),w
  6822  036B  1D03               	btfss	3,2
  6823  036C  2B71               	goto	l426
  6824                           
  6825                           ;SlaveLiofilizadorVer1.c: 583:                          PORTCbits.RC1=0;
  6826  036D  1283               	bcf	3,5	;RP0=0, select bank0
  6827  036E  1303               	bcf	3,6	;RP1=0, select bank0
  6828  036F  1087               	bcf	7,1	;volatile
  6829  0370  293C               	goto	L7
  6830  0371                     l426:	
  6831                           ;SlaveLiofilizadorVer1.c: 584:                       else
  6832                           
  6833                           
  6834                           ;SlaveLiofilizadorVer1.c: 585:                          PORTCbits.RC1=1;
  6835  0371  1283               	bcf	3,5	;RP0=0, select bank0
  6836  0372  1303               	bcf	3,6	;RP1=0, select bank0
  6837  0373  1487               	bsf	7,1	;volatile
  6838  0374  293C               	goto	L7
  6839  0375                     l5770:	
  6840                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(3);
  6841                           
  6842  0375  1703               	bsf	3,6	;RP1=1, select bank3
  6843  0376  0814               	movf	(_usart_protocol^(0+384)+4),w
  6844  0377  1283               	bcf	3,5	;RP0=0, select bank0
  6845  0378  1303               	bcf	3,6	;RP1=0, select bank0
  6846  0379  00DF               	movwf	??_Decodify_Command
  6847  037A  01E0               	clrf	??_Decodify_Command+1
  6848                           
  6849                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6850                           ; Switch size 1, requested type "simple"
  6851                           ; Number of cases is 1, Range of values is 0 to 0
  6852                           ; switch strategies available:
  6853                           ; Name         Instructions Cycles
  6854                           ; simple_byte            4     3 (average)
  6855                           ; direct_byte           11     8 (fixed)
  6856                           ; jumptable            260     6 (fixed)
  6857                           ;	Chosen strategy is simple_byte
  6858  037B  0860               	movf	??_Decodify_Command+1,w
  6859  037C  3A00               	xorlw	0	; case 0
  6860  037D  1903               	skipnz
  6861  037E  2B80               	goto	l5928
  6862  037F  2BC7               	goto	l428
  6863  0380                     l5928:
  6864                           
  6865                           ; Switch size 1, requested type "simple"
  6866                           ; Number of cases is 23, Range of values is 2 to 65
  6867                           ; switch strategies available:
  6868                           ; Name         Instructions Cycles
  6869                           ; simple_byte           70    36 (average)
  6870                           ; direct_byte          203    11 (fixed)
  6871                           ; jumptable            263     9 (fixed)
  6872                           ;	Chosen strategy is simple_byte
  6873  0380  085F               	movf	??_Decodify_Command,w
  6874  0381  3A02               	xorlw	2	; case 2
  6875  0382  1903               	skipnz
  6876  0383  28E3               	goto	l5632
  6877  0384  3A01               	xorlw	1	; case 3
  6878  0385  1903               	skipnz
  6879  0386  291D               	goto	l5640
  6880  0387  3A0B               	xorlw	11	; case 8
  6881  0388  1903               	skipnz
  6882  0389  292C               	goto	l5644
  6883  038A  3A01               	xorlw	1	; case 9
  6884  038B  1903               	skipnz
  6885  038C  2946               	goto	l5648
  6886  038D  3A03               	xorlw	3	; case 10
  6887  038E  1903               	skipnz
  6888  038F  295E               	goto	l5654
  6889  0390  3A01               	xorlw	1	; case 11
  6890  0391  1903               	skipnz
  6891  0392  298F               	goto	l5664
  6892  0393  3A07               	xorlw	7	; case 12
  6893  0394  1903               	skipnz
  6894  0395  29AF               	goto	l5670
  6895  0396  3A01               	xorlw	1	; case 13
  6896  0397  1903               	skipnz
  6897  0398  29BC               	goto	l5676
  6898  0399  3A1C               	xorlw	28	; case 17
  6899  039A  1903               	skipnz
  6900  039B  29CA               	goto	l5682
  6901  039C  3A03               	xorlw	3	; case 18
  6902  039D  1903               	skipnz
  6903  039E  29EB               	goto	l5688
  6904  039F  3A01               	xorlw	1	; case 19
  6905  03A0  1903               	skipnz
  6906  03A1  2A12               	goto	l5694
  6907  03A2  3A07               	xorlw	7	; case 20
  6908  03A3  1903               	skipnz
  6909  03A4  2A42               	goto	l5700
  6910  03A5  3A01               	xorlw	1	; case 21
  6911  03A6  1903               	skipnz
  6912  03A7  2AB4               	goto	l5718
  6913  03A8  3A03               	xorlw	3	; case 22
  6914  03A9  1903               	skipnz
  6915  03AA  2AD1               	goto	l5724
  6916  03AB  3A01               	xorlw	1	; case 23
  6917  03AC  1903               	skipnz
  6918  03AD  2A8F               	goto	l5712
  6919  03AE  3A0F               	xorlw	15	; case 24
  6920  03AF  1903               	skipnz
  6921  03B0  2A60               	goto	l5706
  6922  03B1  3A01               	xorlw	1	; case 25
  6923  03B2  1903               	skipnz
  6924  03B3  2AF6               	goto	l5728
  6925  03B4  3A03               	xorlw	3	; case 26
  6926  03B5  1903               	skipnz
  6927  03B6  287B               	goto	l5616
  6928  03B7  3A38               	xorlw	56	; case 34
  6929  03B8  1903               	skipnz
  6930  03B9  2B37               	goto	l5746
  6931  03BA  3A06               	xorlw	6	; case 36
  6932  03BB  1903               	skipnz
  6933  03BC  2B1B               	goto	l5740
  6934  03BD  3A01               	xorlw	1	; case 37
  6935  03BE  1903               	skipnz
  6936  03BF  2B0A               	goto	l5734
  6937  03C0  3A15               	xorlw	21	; case 48
  6938  03C1  1903               	skipnz
  6939  03C2  2B57               	goto	l5752
  6940  03C3  3A71               	xorlw	113	; case 65
  6941  03C4  1903               	skipnz
  6942  03C5  2862               	goto	l5610
  6943  03C6  2BC7               	goto	l428
  6944  03C7                     l428:
  6945  03C7  0008               	return
  6946  03C8                     __end_of_Decodify_Command:
  6947                           
  6948                           	psect	text15
  6949  1ACA                     __ptext15:	
  6950 ;; *************** function _strcpy *****************
  6951 ;; Defined at:
  6952 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcpy.c"
  6953 ;; Parameters:    Size  Location     Type
  6954 ;;  to              1    wreg     PTR unsigned char 
  6955 ;;		 -> buffer(33), 
  6956 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  6957 ;;		 -> STR_1(9), 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;  to              1    2[BANK0 ] PTR unsigned char 
  6960 ;;		 -> buffer(33), 
  6961 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  6962 ;;		 -> buffer(33), 
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  1    wreg      PTR unsigned char 
  6965 ;; Registers used:
  6966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6967 ;; Tracked objects:
  6968 ;;		On entry : 300/0
  6969 ;;		On exit  : B00/800
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6972 ;;      Params:         0       1       0       0       0
  6973 ;;      Locals:         0       2       0       0       0
  6974 ;;      Temps:          0       1       0       0       0
  6975 ;;      Totals:         0       4       0       0       0
  6976 ;;Total ram usage:        4 bytes
  6977 ;; Hardware stack levels used: 2
  6978 ;; Hardware stack levels required when called: 1
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		_Decodify_Command
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           
  6987                           ;psect for function _strcpy
  6988  1ACA                     _strcpy:
  6989                           
  6990                           ;incstack = 0
  6991                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  6992                           ;strcpy@to stored from wreg
  6993  1ACA  00A2               	movwf	strcpy@to
  6994  1ACB  0822               	movf	strcpy@to,w
  6995  1ACC  00A1               	movwf	??_strcpy
  6996  1ACD  0821               	movf	??_strcpy,w
  6997  1ACE  00A3               	movwf	strcpy@cp
  6998  1ACF                     l4674:
  6999  1ACF  0820               	movf	strcpy@from,w
  7000  1AD0  0084               	movwf	4
  7001  1AD1  160A  158A  200A  160A  158A  	fcall	stringdir
  7002  1AD6  00A1               	movwf	??_strcpy
  7003  1AD7  0823               	movf	strcpy@cp,w
  7004  1AD8  0084               	movwf	4
  7005  1AD9  0821               	movf	??_strcpy,w
  7006  1ADA  1783               	bsf	3,7	;select IRP bank2
  7007  1ADB  0080               	movwf	0
  7008  1ADC  0800               	movf	0,w
  7009  1ADD  1903               	btfsc	3,2
  7010  1ADE  0008               	return
  7011  1ADF  3001               	movlw	1
  7012  1AE0  00A1               	movwf	??_strcpy
  7013  1AE1  0821               	movf	??_strcpy,w
  7014  1AE2  07A3               	addwf	strcpy@cp,f
  7015  1AE3  3001               	movlw	1
  7016  1AE4  00A1               	movwf	??_strcpy
  7017  1AE5  0821               	movf	??_strcpy,w
  7018  1AE6  07A0               	addwf	strcpy@from,f
  7019  1AE7  2ACF               	goto	l4674
  7020  1AE8                     __end_of_strcpy:
  7021                           
  7022                           	psect	text16
  7023  1EF7                     __ptext16:	
  7024 ;; *************** function _USART_to_Protocol *****************
  7025 ;; Defined at:
  7026 ;;		line 77 in file "usart.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  usart_protoc    1    wreg     PTR struct .
  7029 ;;		 -> usart_protocol(58), 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  7032 ;;		 -> usart_protocol(58), 
  7033 ;;  i               2    2[BANK0 ] int 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1    wreg      void 
  7036 ;; Registers used:
  7037 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7038 ;; Tracked objects:
  7039 ;;		On entry : 300/100
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7043 ;;      Params:         0       0       0       0       0
  7044 ;;      Locals:         0       3       0       0       0
  7045 ;;      Temps:          0       2       0       0       0
  7046 ;;      Totals:         0       5       0       0       0
  7047 ;;Total ram usage:        5 bytes
  7048 ;; Hardware stack levels used: 1
  7049 ;; Hardware stack levels required when called: 1
  7050 ;; This function calls:
  7051 ;;		Nothing
  7052 ;; This function is called by:
  7053 ;;		_Decodify_Command
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057                           
  7058                           ;psect for function _USART_to_Protocol
  7059  1EF7                     _USART_to_Protocol:
  7060                           
  7061                           ;incstack = 0
  7062                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  7063                           ;USART_to_Protocol@usart_protocol stored from wreg
  7064  1EF7  1283               	bcf	3,5	;RP0=0, select bank0
  7065  1EF8  00A4               	movwf	USART_to_Protocol@usart_protocol
  7066                           
  7067                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  7068  1EF9  0824               	movf	USART_to_Protocol@usart_protocol,w
  7069  1EFA  0084               	movwf	4
  7070  1EFB  1703               	bsf	3,6	;RP1=1, select bank2
  7071  1EFC  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  7072  1EFD  1783               	bsf	3,7	;select IRP bank2
  7073  1EFE  0080               	movwf	0
  7074  1EFF  0A84               	incf	4,f
  7075  1F00  0810               	movf	_usart_buffer^(0+256),w	;volatile
  7076  1F01  0080               	movwf	0
  7077                           
  7078                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  7079  1F02  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  7080  1F03  1303               	bcf	3,6	;RP1=0, select bank0
  7081  1F04  00A0               	movwf	??_USART_to_Protocol
  7082  1F05  0824               	movf	USART_to_Protocol@usart_protocol,w
  7083  1F06  3E02               	addlw	2
  7084  1F07  0084               	movwf	4
  7085  1F08  0820               	movf	??_USART_to_Protocol,w
  7086  1F09  0080               	movwf	0
  7087                           
  7088                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  7089  1F0A  1703               	bsf	3,6	;RP1=1, select bank2
  7090  1F0B  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  7091  1F0C  1303               	bcf	3,6	;RP1=0, select bank0
  7092  1F0D  00A0               	movwf	??_USART_to_Protocol
  7093  1F0E  0824               	movf	USART_to_Protocol@usart_protocol,w
  7094  1F0F  3E03               	addlw	3
  7095  1F10  0084               	movwf	4
  7096  1F11  0820               	movf	??_USART_to_Protocol,w
  7097  1F12  0080               	movwf	0
  7098                           
  7099                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  7100  1F13  1703               	bsf	3,6	;RP1=1, select bank2
  7101  1F14  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  7102  1F15  1303               	bcf	3,6	;RP1=0, select bank0
  7103  1F16  00A0               	movwf	??_USART_to_Protocol
  7104  1F17  0824               	movf	USART_to_Protocol@usart_protocol,w
  7105  1F18  3E04               	addlw	4
  7106  1F19  0084               	movwf	4
  7107  1F1A  0820               	movf	??_USART_to_Protocol,w
  7108  1F1B  0080               	movwf	0
  7109                           
  7110                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  7111  1F1C  1703               	bsf	3,6	;RP1=1, select bank2
  7112  1F1D  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  7113  1F1E  1303               	bcf	3,6	;RP1=0, select bank0
  7114  1F1F  00A0               	movwf	??_USART_to_Protocol
  7115  1F20  0824               	movf	USART_to_Protocol@usart_protocol,w
  7116  1F21  3E05               	addlw	5
  7117  1F22  0084               	movwf	4
  7118  1F23  0820               	movf	??_USART_to_Protocol,w
  7119  1F24  0080               	movwf	0
  7120                           
  7121                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  7122  1F25  01A2               	clrf	USART_to_Protocol@i
  7123  1F26  01A3               	clrf	USART_to_Protocol@i+1
  7124  1F27                     l4668:
  7125  1F27  0824               	movf	USART_to_Protocol@usart_protocol,w
  7126  1F28  3E05               	addlw	5
  7127  1F29  0084               	movwf	4
  7128  1F2A  0823               	movf	USART_to_Protocol@i+1,w
  7129  1F2B  3A80               	xorlw	128
  7130  1F2C  00A0               	movwf	??_USART_to_Protocol
  7131  1F2D  3080               	movlw	128
  7132  1F2E  0220               	subwf	??_USART_to_Protocol,w
  7133  1F2F  1D03               	skipz
  7134  1F30  2F33               	goto	u4325
  7135  1F31  0800               	movf	0,w
  7136  1F32  0222               	subwf	USART_to_Protocol@i,w
  7137  1F33                     u4325:
  7138  1F33  1803               	btfsc	3,0
  7139  1F34  0008               	return
  7140                           
  7141                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  7142  1F35  1283               	bcf	3,5	;RP0=0, select bank0
  7143  1F36  1303               	bcf	3,6	;RP1=0, select bank0
  7144  1F37  0822               	movf	USART_to_Protocol@i,w
  7145  1F38  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  7146  1F39  0084               	movwf	4
  7147  1F3A  1783               	bsf	3,7	;select IRP bank2
  7148  1F3B  0800               	movf	0,w
  7149  1F3C  00A0               	movwf	??_USART_to_Protocol
  7150  1F3D  0822               	movf	USART_to_Protocol@i,w
  7151  1F3E  0724               	addwf	USART_to_Protocol@usart_protocol,w
  7152  1F3F  00A1               	movwf	??_USART_to_Protocol+1
  7153  1F40  0821               	movf	??_USART_to_Protocol+1,w
  7154  1F41  3E06               	addlw	6
  7155  1F42  0084               	movwf	4
  7156  1F43  0820               	movf	??_USART_to_Protocol,w
  7157  1F44  0080               	movwf	0
  7158  1F45  3001               	movlw	1
  7159  1F46  07A2               	addwf	USART_to_Protocol@i,f
  7160  1F47  1803               	skipnc
  7161  1F48  0AA3               	incf	USART_to_Protocol@i+1,f
  7162  1F49  3000               	movlw	0
  7163  1F4A  07A3               	addwf	USART_to_Protocol@i+1,f
  7164  1F4B  2F27               	goto	l4668
  7165  1F4C                     __end_of_USART_to_Protocol:
  7166                           
  7167                           	psect	text17
  7168  1BD8                     __ptext17:	
  7169 ;; *************** function _Send_To_MB *****************
  7170 ;; Defined at:
  7171 ;;		line 597 in file "SlaveLiofilizadorVer1.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;  size            1    wreg     unsigned char 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;  size            1    1[BANK0 ] unsigned char 
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  1    wreg      void 
  7178 ;; Registers used:
  7179 ;;		wreg, status,2, status,0, pclath, cstack
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/800
  7182 ;;		On exit  : 300/100
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7185 ;;      Params:         0       0       0       0       0
  7186 ;;      Locals:         0       1       0       0       0
  7187 ;;      Temps:          0       0       0       0       0
  7188 ;;      Totals:         0       1       0       0       0
  7189 ;;Total ram usage:        1 bytes
  7190 ;; Hardware stack levels used: 1
  7191 ;; Hardware stack levels required when called: 2
  7192 ;; This function calls:
  7193 ;;		_USART_putc
  7194 ;; This function is called by:
  7195 ;;		_Decodify_Command
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           
  7200                           ;psect for function _Send_To_MB
  7201  1BD8                     _Send_To_MB:
  7202                           
  7203                           ;incstack = 0
  7204                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  7205                           ;Send_To_MB@size stored from wreg
  7206  1BD8  1283               	bcf	3,5	;RP0=0, select bank0
  7207  1BD9  1303               	bcf	3,6	;RP1=0, select bank0
  7208  1BDA  00A1               	movwf	Send_To_MB@size
  7209                           
  7210                           ;SlaveLiofilizadorVer1.c: 599:      USART_putc(0xAA);
  7211  1BDB  30AA               	movlw	170
  7212  1BDC  160A  158A  21FB  160A  158A  	fcall	_USART_putc
  7213                           
  7214                           ;SlaveLiofilizadorVer1.c: 600:      USART_putc(0xBB);
  7215  1BE1  30BB               	movlw	187
  7216  1BE2  160A  158A  21FB  160A  158A  	fcall	_USART_putc
  7217                           
  7218                           ;SlaveLiofilizadorVer1.c: 601:      USART_putc(Board_Number);
  7219  1BE7  0855               	movf	_Board_Number^(0+128),w
  7220  1BE8  160A  158A  21FB  160A  158A  	fcall	_USART_putc
  7221                           
  7222                           ;SlaveLiofilizadorVer1.c: 602:      USART_putc(0x00);
  7223  1BED  3000               	movlw	0
  7224  1BEE  160A  158A  21FB  160A  158A  	fcall	_USART_putc
  7225                           
  7226                           ;SlaveLiofilizadorVer1.c: 603:      USART_putc(usart_protocol.command);
  7227  1BF3  1703               	bsf	3,6	;RP1=1, select bank3
  7228  1BF4  0814               	movf	(_usart_protocol^(0+384)+4),w
  7229  1BF5  160A  158A  21FB  160A  158A  	fcall	_USART_putc
  7230                           
  7231                           ;SlaveLiofilizadorVer1.c: 604:      USART_putc(size);
  7232  1BFA  1283               	bcf	3,5	;RP0=0, select bank0
  7233  1BFB  0821               	movf	Send_To_MB@size,w
  7234  1BFC  160A  158A  21FB   	fcall	_USART_putc
  7235  1BFF  0008               	return
  7236  1C00                     __end_of_Send_To_MB:
  7237                           
  7238                           	psect	text18
  7239  19C7                     __ptext18:	
  7240 ;; *************** function _Send_Reply_OK *****************
  7241 ;; Defined at:
  7242 ;;		line 608 in file "SlaveLiofilizadorVer1.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;		None
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;		None
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  1    wreg      void 
  7249 ;; Registers used:
  7250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7251 ;; Tracked objects:
  7252 ;;		On entry : 300/100
  7253 ;;		On exit  : 300/100
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7256 ;;      Params:         0       0       0       0       0
  7257 ;;      Locals:         0       0       0       0       0
  7258 ;;      Temps:          0       0       0       0       0
  7259 ;;      Totals:         0       0       0       0       0
  7260 ;;Total ram usage:        0 bytes
  7261 ;; Hardware stack levels used: 1
  7262 ;; Hardware stack levels required when called: 3
  7263 ;; This function calls:
  7264 ;;		_USART_put_string
  7265 ;; This function is called by:
  7266 ;;		_Decodify_Command
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           
  7271                           ;psect for function _Send_Reply_OK
  7272  19C7                     _Send_Reply_OK:
  7273                           
  7274                           ;SlaveLiofilizadorVer1.c: 609:      USART_put_string("OK");
  7275                           
  7276                           ;incstack = 0
  7277                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7278  19C7  304A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7279  19C8  1283               	bcf	3,5	;RP0=0, select bank0
  7280  19C9  00A1               	movwf	USART_put_string@vetor
  7281  19CA  3080               	movlw	128
  7282  19CB  00A2               	movwf	USART_put_string@vetor+1
  7283  19CC  160A  158A  24B8   	fcall	_USART_put_string
  7284  19CF  0008               	return
  7285  19D0                     __end_of_Send_Reply_OK:
  7286                           
  7287                           	psect	text19
  7288  1CB8                     __ptext19:	
  7289 ;; *************** function _USART_put_string *****************
  7290 ;; Defined at:
  7291 ;;		line 167 in file "usart.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  7294 ;;		 -> STR_2(3), buffer(33), 
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  7297 ;;		 -> STR_2(3), buffer(33), 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      void 
  7300 ;; Registers used:
  7301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7302 ;; Tracked objects:
  7303 ;;		On entry : 300/800
  7304 ;;		On exit  : 300/100
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7307 ;;      Params:         0       2       0       0       0
  7308 ;;      Locals:         0       2       0       0       0
  7309 ;;      Temps:          0       0       0       0       0
  7310 ;;      Totals:         0       4       0       0       0
  7311 ;;Total ram usage:        4 bytes
  7312 ;; Hardware stack levels used: 1
  7313 ;; Hardware stack levels required when called: 2
  7314 ;; This function calls:
  7315 ;;		_USART_putc
  7316 ;; This function is called by:
  7317 ;;		_Decodify_Command
  7318 ;;		_Send_Reply_OK
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           
  7323                           ;psect for function _USART_put_string
  7324  1CB8                     _USART_put_string:
  7325                           
  7326                           ;usart.c: 167: void USART_put_string(char *vetor);usart.c: 168: {;usart.c: 169:     char
      +                           *ptr;;usart.c: 170:     ptr=vetor;
  7327                           
  7328                           ;incstack = 0
  7329                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7330  1CB8  0821               	movf	USART_put_string@vetor,w
  7331  1CB9  00A3               	movwf	USART_put_string@ptr
  7332  1CBA  0822               	movf	USART_put_string@vetor+1,w
  7333  1CBB  00A4               	movwf	USART_put_string@ptr+1
  7334  1CBC                     l3784:	
  7335                           ;usart.c: 171:     while(*ptr){
  7336                           
  7337                           
  7338                           ;usart.c: 171:     while(*ptr){
  7339  1CBC  0824               	movf	USART_put_string@ptr+1,w
  7340  1CBD  00FF               	movwf	127
  7341  1CBE  0823               	movf	USART_put_string@ptr,w
  7342  1CBF  0084               	movwf	4
  7343  1CC0  160A  158A  2000  160A  158A  	fcall	stringtab
  7344  1CC5  3A00               	xorlw	0
  7345  1CC6  1903               	btfsc	3,2
  7346  1CC7  2CDE               	goto	l3786
  7347                           
  7348                           ;usart.c: 172:         USART_putc(*ptr);
  7349  1CC8  0824               	movf	USART_put_string@ptr+1,w
  7350  1CC9  00FF               	movwf	127
  7351  1CCA  0823               	movf	USART_put_string@ptr,w
  7352  1CCB  0084               	movwf	4
  7353  1CCC  160A  158A  2000  160A  158A  	fcall	stringtab
  7354  1CD1  160A  158A  21FB  160A  158A  	fcall	_USART_putc
  7355                           
  7356                           ;usart.c: 173:         ptr++;
  7357  1CD6  3001               	movlw	1
  7358  1CD7  1283               	bcf	3,5	;RP0=0, select bank0
  7359  1CD8  07A3               	addwf	USART_put_string@ptr,f
  7360  1CD9  1803               	skipnc
  7361  1CDA  0AA4               	incf	USART_put_string@ptr+1,f
  7362  1CDB  3000               	movlw	0
  7363  1CDC  07A4               	addwf	USART_put_string@ptr+1,f
  7364  1CDD  2CBC               	goto	l3784
  7365  1CDE                     l3786:
  7366                           
  7367                           ;usart.c: 175:     USART_putc(*ptr);
  7368  1CDE  0824               	movf	USART_put_string@ptr+1,w
  7369  1CDF  00FF               	movwf	127
  7370  1CE0  0823               	movf	USART_put_string@ptr,w
  7371  1CE1  0084               	movwf	4
  7372  1CE2  160A  158A  2000  160A  158A  	fcall	stringtab
  7373  1CE7  160A  158A  21FB   	fcall	_USART_putc
  7374  1CEA  0008               	return
  7375  1CEB                     __end_of_USART_put_string:
  7376                           
  7377                           	psect	text20
  7378  0801                     __ptext20:	
  7379 ;; *************** function _Save_Log *****************
  7380 ;; Defined at:
  7381 ;;		line 1009 in file "SlaveLiofilizadorVer1.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;  add_datalog     4   56[BANK0 ] unsigned long 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;		None
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  1    wreg      void 
  7388 ;; Registers used:
  7389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7390 ;; Tracked objects:
  7391 ;;		On entry : 300/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7395 ;;      Params:         0       4       0       0       0
  7396 ;;      Locals:         0       0       0       0       0
  7397 ;;      Temps:          0       0       0       0       0
  7398 ;;      Totals:         0       4       0       0       0
  7399 ;;Total ram usage:        4 bytes
  7400 ;; Hardware stack levels used: 1
  7401 ;; Hardware stack levels required when called: 5
  7402 ;; This function calls:
  7403 ;;		_EEPROM_24C1025_Write_Int
  7404 ;;		___flmul
  7405 ;;		___fltol
  7406 ;; This function is called by:
  7407 ;;		_Decodify_Command
  7408 ;; This function uses a non-reentrant model
  7409 ;;
  7410                           
  7411                           
  7412                           ;psect for function _Save_Log
  7413  0801                     _Save_Log:
  7414                           
  7415                           ;SlaveLiofilizadorVer1.c: 1010:      EEPROM_24C1025_Write_Int(0x00, add_datalog, Tempera
      +                          tura0*10.0);
  7416                           
  7417                           ;incstack = 0
  7418                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7419  0801  085B               	movf	Save_Log@add_datalog+3,w
  7420  0802  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7421  0803  085A               	movf	Save_Log@add_datalog+2,w
  7422  0804  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7423  0805  0859               	movf	Save_Log@add_datalog+1,w
  7424  0806  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7425  0807  0858               	movf	Save_Log@add_datalog,w
  7426  0808  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7427  0809  1683               	bsf	3,5	;RP0=1, select bank1
  7428  080A  0844               	movf	(_Temperatura0+3)^(0+128),w
  7429  080B  1283               	bcf	3,5	;RP0=0, select bank0
  7430  080C  00B0               	movwf	___flmul@a+3
  7431  080D  1683               	bsf	3,5	;RP0=1, select bank1
  7432  080E  0843               	movf	(_Temperatura0+2)^(0+128),w
  7433  080F  1283               	bcf	3,5	;RP0=0, select bank0
  7434  0810  00AF               	movwf	___flmul@a+2
  7435  0811  1683               	bsf	3,5	;RP0=1, select bank1
  7436  0812  0842               	movf	(_Temperatura0+1)^(0+128),w
  7437  0813  1283               	bcf	3,5	;RP0=0, select bank0
  7438  0814  00AE               	movwf	___flmul@a+1
  7439  0815  1683               	bsf	3,5	;RP0=1, select bank1
  7440  0816  0841               	movf	_Temperatura0^(0+128),w
  7441  0817  1283               	bcf	3,5	;RP0=0, select bank0
  7442  0818  00AD               	movwf	___flmul@a
  7443  0819  3041               	movlw	65
  7444  081A  00AC               	movwf	___flmul@b+3
  7445  081B  3020               	movlw	32
  7446  081C  00AB               	movwf	___flmul@b+2
  7447  081D  3000               	movlw	0
  7448  081E  00AA               	movwf	___flmul@b+1
  7449  081F  3000               	movlw	0
  7450  0820  00A9               	movwf	___flmul@b
  7451  0821  120A  118A  23C8  120A  158A  	fcall	___flmul
  7452  0826  082C               	movf	?___flmul+3,w
  7453  0827  00C6               	movwf	___fltol@f1+3
  7454  0828  082B               	movf	?___flmul+2,w
  7455  0829  00C5               	movwf	___fltol@f1+2
  7456  082A  082A               	movf	?___flmul+1,w
  7457  082B  00C4               	movwf	___fltol@f1+1
  7458  082C  0829               	movf	?___flmul,w
  7459  082D  00C3               	movwf	___fltol@f1
  7460  082E  160A  118A  2013  120A  158A  	fcall	___fltol
  7461  0833  0844               	movf	?___fltol+1,w
  7462  0834  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7463  0835  0843               	movf	?___fltol,w
  7464  0836  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7465  0837  3000               	movlw	0
  7466  0838  160A  158A  22E8  120A  158A  	fcall	_EEPROM_24C1025_Write_Int
  7467                           
  7468                           ;SlaveLiofilizadorVer1.c: 1011:      EEPROM_24C1025_Write_Int(0x01, add_datalog, Umidade
      +                          1);
  7469  083D  1283               	bcf	3,5	;RP0=0, select bank0
  7470  083E  1303               	bcf	3,6	;RP1=0, select bank0
  7471  083F  085B               	movf	Save_Log@add_datalog+3,w
  7472  0840  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7473  0841  085A               	movf	Save_Log@add_datalog+2,w
  7474  0842  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7475  0843  0859               	movf	Save_Log@add_datalog+1,w
  7476  0844  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7477  0845  0858               	movf	Save_Log@add_datalog,w
  7478  0846  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7479  0847  1683               	bsf	3,5	;RP0=1, select bank1
  7480  0848  0840               	movf	(_Umidade1+3)^(0+128),w
  7481  0849  1283               	bcf	3,5	;RP0=0, select bank0
  7482  084A  00C6               	movwf	___fltol@f1+3
  7483  084B  1683               	bsf	3,5	;RP0=1, select bank1
  7484  084C  083F               	movf	(_Umidade1+2)^(0+128),w
  7485  084D  1283               	bcf	3,5	;RP0=0, select bank0
  7486  084E  00C5               	movwf	___fltol@f1+2
  7487  084F  1683               	bsf	3,5	;RP0=1, select bank1
  7488  0850  083E               	movf	(_Umidade1+1)^(0+128),w
  7489  0851  1283               	bcf	3,5	;RP0=0, select bank0
  7490  0852  00C4               	movwf	___fltol@f1+1
  7491  0853  1683               	bsf	3,5	;RP0=1, select bank1
  7492  0854  083D               	movf	_Umidade1^(0+128),w
  7493  0855  1283               	bcf	3,5	;RP0=0, select bank0
  7494  0856  00C3               	movwf	___fltol@f1
  7495  0857  160A  118A  2013  120A  158A  	fcall	___fltol
  7496  085C  0844               	movf	?___fltol+1,w
  7497  085D  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7498  085E  0843               	movf	?___fltol,w
  7499  085F  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7500  0860  3001               	movlw	1
  7501  0861  160A  158A  22E8   	fcall	_EEPROM_24C1025_Write_Int
  7502  0864  0008               	return
  7503  0865                     __end_of_Save_Log:
  7504                           
  7505                           	psect	text21
  7506  1013                     __ptext21:	
  7507 ;; *************** function ___fltol *****************
  7508 ;; Defined at:
  7509 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;  f1              4   35[BANK0 ] void 
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;  exp1            1   45[BANK0 ] unsigned char 
  7514 ;;  sign1           1   44[BANK0 ] unsigned char 
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  4   35[BANK0 ] long 
  7517 ;; Registers used:
  7518 ;;		wreg, status,2, status,0
  7519 ;; Tracked objects:
  7520 ;;		On entry : 300/0
  7521 ;;		On exit  : 300/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7524 ;;      Params:         0       4       0       0       0
  7525 ;;      Locals:         0       2       0       0       0
  7526 ;;      Temps:          0       5       0       0       0
  7527 ;;      Totals:         0      11       0       0       0
  7528 ;;Total ram usage:       11 bytes
  7529 ;; Hardware stack levels used: 1
  7530 ;; Hardware stack levels required when called: 1
  7531 ;; This function calls:
  7532 ;;		Nothing
  7533 ;; This function is called by:
  7534 ;;		_Decodify_Command
  7535 ;;		_Save_Log
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538                           
  7539                           
  7540                           ;psect for function ___fltol
  7541  1013                     ___fltol:
  7542                           
  7543                           ;incstack = 0
  7544                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7545  1013  1003               	clrc
  7546  1014  0D45               	rlf	___fltol@f1+2,w
  7547  1015  0D46               	rlf	___fltol@f1+3,w
  7548  1016  00C7               	movwf	??___fltol
  7549  1017  0847               	movf	??___fltol,w
  7550  1018  00CD               	movwf	___fltol@exp1
  7551  1019  084D               	movf	___fltol@exp1,w
  7552  101A  1D03               	btfss	3,2
  7553  101B  2825               	goto	l3886
  7554  101C                     l3882:
  7555  101C  3000               	movlw	0
  7556  101D  00C6               	movwf	?___fltol+3
  7557  101E  3000               	movlw	0
  7558  101F  00C5               	movwf	?___fltol+2
  7559  1020  3000               	movlw	0
  7560  1021  00C4               	movwf	?___fltol+1
  7561  1022  3000               	movlw	0
  7562  1023  00C3               	movwf	?___fltol
  7563  1024  0008               	return
  7564  1025                     l3886:
  7565  1025  0843               	movf	___fltol@f1,w
  7566  1026  00C7               	movwf	??___fltol
  7567  1027  0844               	movf	___fltol@f1+1,w
  7568  1028  00C8               	movwf	??___fltol+1
  7569  1029  0845               	movf	___fltol@f1+2,w
  7570  102A  00C9               	movwf	??___fltol+2
  7571  102B  0846               	movf	___fltol@f1+3,w
  7572  102C  00CA               	movwf	??___fltol+3
  7573  102D  301F               	movlw	31
  7574  102E                     u2985:
  7575  102E  1003               	clrc
  7576  102F  0CCA               	rrf	??___fltol+3,f
  7577  1030  0CC9               	rrf	??___fltol+2,f
  7578  1031  0CC8               	rrf	??___fltol+1,f
  7579  1032  0CC7               	rrf	??___fltol,f
  7580  1033  3EFF               	addlw	-1
  7581  1034  1D03               	skipz
  7582  1035  282E               	goto	u2985
  7583  1036  0847               	movf	??___fltol,w
  7584  1037  00CB               	movwf	??___fltol+4
  7585  1038  084B               	movf	??___fltol+4,w
  7586  1039  00CC               	movwf	___fltol@sign1
  7587  103A  17C5               	bsf	___fltol@f1+2,7
  7588  103B  30FF               	movlw	255
  7589  103C  05C3               	andwf	___fltol@f1,f
  7590  103D  30FF               	movlw	255
  7591  103E  05C4               	andwf	___fltol@f1+1,f
  7592  103F  30FF               	movlw	255
  7593  1040  05C5               	andwf	___fltol@f1+2,f
  7594  1041  3000               	movlw	0
  7595  1042  05C6               	andwf	___fltol@f1+3,f
  7596  1043  3096               	movlw	150
  7597  1044  02CD               	subwf	___fltol@exp1,f
  7598  1045  1FCD               	btfss	___fltol@exp1,7
  7599  1046  285C               	goto	l3904
  7600  1047  084D               	movf	___fltol@exp1,w
  7601  1048  3A80               	xorlw	128
  7602  1049  3E97               	addlw	151
  7603  104A  1C03               	btfss	3,0
  7604  104B  281C               	goto	l3882
  7605  104C                     l3902:
  7606  104C  3001               	movlw	1
  7607  104D                     u3015:
  7608  104D  1003               	clrc
  7609  104E  0CC6               	rrf	___fltol@f1+3,f
  7610  104F  0CC5               	rrf	___fltol@f1+2,f
  7611  1050  0CC4               	rrf	___fltol@f1+1,f
  7612  1051  0CC3               	rrf	___fltol@f1,f
  7613  1052  3EFF               	addlw	-1
  7614  1053  1D03               	skipz
  7615  1054  284D               	goto	u3015
  7616  1055  3001               	movlw	1
  7617  1056  00C7               	movwf	??___fltol
  7618  1057  0847               	movf	??___fltol,w
  7619  1058  07CD               	addwf	___fltol@exp1,f
  7620  1059  1903               	btfsc	3,2
  7621  105A  286F               	goto	l3912
  7622  105B  284C               	goto	l3902
  7623  105C                     l3904:
  7624  105C  3020               	movlw	32
  7625  105D  024D               	subwf	___fltol@exp1,w
  7626  105E  1803               	btfsc	3,0
  7627  105F  281C               	goto	l3882
  7628  1060                     l1179:
  7629  1060  084D               	movf	___fltol@exp1,w
  7630  1061  1903               	btfsc	3,2
  7631  1062  286F               	goto	l3912
  7632  1063  3001               	movlw	1
  7633  1064  00C7               	movwf	??___fltol
  7634  1065                     u3045:
  7635  1065  1003               	clrc
  7636  1066  0DC3               	rlf	___fltol@f1,f
  7637  1067  0DC4               	rlf	___fltol@f1+1,f
  7638  1068  0DC5               	rlf	___fltol@f1+2,f
  7639  1069  0DC6               	rlf	___fltol@f1+3,f
  7640  106A  0BC7               	decfsz	??___fltol,f
  7641  106B  2865               	goto	u3045
  7642  106C  3001               	movlw	1
  7643  106D  02CD               	subwf	___fltol@exp1,f
  7644  106E  2860               	goto	l1179
  7645  106F                     l3912:
  7646  106F  084C               	movf	___fltol@sign1,w
  7647  1070  1903               	btfsc	3,2
  7648  1071  0008               	return
  7649  1072  09C3               	comf	___fltol@f1,f
  7650  1073  09C4               	comf	___fltol@f1+1,f
  7651  1074  09C5               	comf	___fltol@f1+2,f
  7652  1075  09C6               	comf	___fltol@f1+3,f
  7653  1076  0AC3               	incf	___fltol@f1,f
  7654  1077  1903               	skipnz
  7655  1078  0AC4               	incf	___fltol@f1+1,f
  7656  1079  1903               	skipnz
  7657  107A  0AC5               	incf	___fltol@f1+2,f
  7658  107B  1903               	skipnz
  7659  107C  0AC6               	incf	___fltol@f1+3,f
  7660  107D  0008               	return
  7661  107E                     __end_of___fltol:
  7662                           
  7663                           	psect	text22
  7664  03C8                     __ptext22:	
  7665 ;; *************** function ___flmul *****************
  7666 ;; Defined at:
  7667 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  b               4    9[BANK0 ] long 
  7670 ;;  a               4   13[BANK0 ] long 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;  prod            4   29[BANK0 ] struct .
  7673 ;;  grs             4   24[BANK0 ] unsigned long 
  7674 ;;  temp            2   33[BANK0 ] struct .
  7675 ;;  bexp            1   28[BANK0 ] unsigned char 
  7676 ;;  aexp            1   23[BANK0 ] unsigned char 
  7677 ;;  sign            1   22[BANK0 ] unsigned char 
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  4    9[BANK0 ] unsigned char 
  7680 ;; Registers used:
  7681 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7682 ;; Tracked objects:
  7683 ;;		On entry : 300/0
  7684 ;;		On exit  : 300/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7687 ;;      Params:         0       8       0       0       0
  7688 ;;      Locals:         0      13       0       0       0
  7689 ;;      Temps:          0       5       0       0       0
  7690 ;;      Totals:         0      26       0       0       0
  7691 ;;Total ram usage:       26 bytes
  7692 ;; Hardware stack levels used: 1
  7693 ;; Hardware stack levels required when called: 2
  7694 ;; This function calls:
  7695 ;;		__Umul8_16
  7696 ;; This function is called by:
  7697 ;;		_Decodify_Command
  7698 ;;		_mediaLeituraPt100Umidadde
  7699 ;;		_Save_Log
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           
  7704                           ;psect for function ___flmul
  7705  03C8                     ___flmul:
  7706                           
  7707                           ;incstack = 0
  7708                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7709  03C8  082C               	movf	___flmul@b+3,w
  7710  03C9  3980               	andlw	128
  7711  03CA  00B1               	movwf	??___flmul
  7712  03CB  0831               	movf	??___flmul,w
  7713  03CC  00B6               	movwf	___flmul@sign
  7714  03CD  082C               	movf	___flmul@b+3,w
  7715  03CE  00B1               	movwf	??___flmul
  7716  03CF  0731               	addwf	??___flmul,w
  7717  03D0  00B2               	movwf	??___flmul+1
  7718  03D1  0832               	movf	??___flmul+1,w
  7719  03D2  00BC               	movwf	___flmul@bexp
  7720  03D3  1BAB               	btfsc	___flmul@b+2,7
  7721  03D4  143C               	bsf	___flmul@bexp,0
  7722  03D5  083C               	movf	___flmul@bexp,w
  7723  03D6  1903               	btfsc	3,2
  7724  03D7  2BE5               	goto	l4152
  7725  03D8  0A3C               	incf	___flmul@bexp,w
  7726  03D9  1D03               	btfss	3,2
  7727  03DA  2BE3               	goto	l4150
  7728  03DB  3000               	movlw	0
  7729  03DC  00AC               	movwf	___flmul@b+3
  7730  03DD  3000               	movlw	0
  7731  03DE  00AB               	movwf	___flmul@b+2
  7732  03DF  3000               	movlw	0
  7733  03E0  00AA               	movwf	___flmul@b+1
  7734  03E1  3000               	movlw	0
  7735  03E2  00A9               	movwf	___flmul@b
  7736  03E3                     l4150:
  7737  03E3  17AB               	bsf	___flmul@b+2,7
  7738  03E4  2BED               	goto	l4154
  7739  03E5                     l4152:
  7740  03E5  3000               	movlw	0
  7741  03E6  00AC               	movwf	___flmul@b+3
  7742  03E7  3000               	movlw	0
  7743  03E8  00AB               	movwf	___flmul@b+2
  7744  03E9  3000               	movlw	0
  7745  03EA  00AA               	movwf	___flmul@b+1
  7746  03EB  3000               	movlw	0
  7747  03EC  00A9               	movwf	___flmul@b
  7748  03ED                     l4154:
  7749  03ED  0830               	movf	___flmul@a+3,w
  7750  03EE  3980               	andlw	128
  7751  03EF  00B1               	movwf	??___flmul
  7752  03F0  0831               	movf	??___flmul,w
  7753  03F1  06B6               	xorwf	___flmul@sign,f
  7754  03F2  0830               	movf	___flmul@a+3,w
  7755  03F3  00B1               	movwf	??___flmul
  7756  03F4  0731               	addwf	??___flmul,w
  7757  03F5  00B2               	movwf	??___flmul+1
  7758  03F6  0832               	movf	??___flmul+1,w
  7759  03F7  00B7               	movwf	___flmul@aexp
  7760  03F8  1BAF               	btfsc	___flmul@a+2,7
  7761  03F9  1437               	bsf	___flmul@aexp,0
  7762  03FA  0837               	movf	___flmul@aexp,w
  7763  03FB  1903               	btfsc	3,2
  7764  03FC  2C0A               	goto	l4170
  7765  03FD  0A37               	incf	___flmul@aexp,w
  7766  03FE  1D03               	btfss	3,2
  7767  03FF  2C08               	goto	l4168
  7768  0400  3000               	movlw	0
  7769  0401  00B0               	movwf	___flmul@a+3
  7770  0402  3000               	movlw	0
  7771  0403  00AF               	movwf	___flmul@a+2
  7772  0404  3000               	movlw	0
  7773  0405  00AE               	movwf	___flmul@a+1
  7774  0406  3000               	movlw	0
  7775  0407  00AD               	movwf	___flmul@a
  7776  0408                     l4168:
  7777  0408  17AF               	bsf	___flmul@a+2,7
  7778  0409  2C12               	goto	l4172
  7779  040A                     l4170:
  7780  040A  3000               	movlw	0
  7781  040B  00B0               	movwf	___flmul@a+3
  7782  040C  3000               	movlw	0
  7783  040D  00AF               	movwf	___flmul@a+2
  7784  040E  3000               	movlw	0
  7785  040F  00AE               	movwf	___flmul@a+1
  7786  0410  3000               	movlw	0
  7787  0411  00AD               	movwf	___flmul@a
  7788  0412                     l4172:
  7789  0412  0837               	movf	___flmul@aexp,w
  7790  0413  1D03               	btfss	3,2
  7791  0414  083C               	movf	___flmul@bexp,w
  7792  0415  1D03               	btfss	3,2
  7793  0416  2C20               	goto	l4180
  7794  0417  3000               	movlw	0
  7795  0418  00AC               	movwf	?___flmul+3
  7796  0419  3000               	movlw	0
  7797  041A  00AB               	movwf	?___flmul+2
  7798  041B  3000               	movlw	0
  7799  041C  00AA               	movwf	?___flmul+1
  7800  041D  3000               	movlw	0
  7801  041E  00A9               	movwf	?___flmul
  7802  041F  0008               	return
  7803  0420                     l4180:
  7804  0420  0829               	movf	___flmul@b,w
  7805  0421  00B1               	movwf	??___flmul
  7806  0422  0831               	movf	??___flmul,w
  7807  0423  00A0               	movwf	__Umul8_16@multiplicand
  7808  0424  082F               	movf	___flmul@a+2,w
  7809  0425  160A  158A  238D  120A  118A  	fcall	__Umul8_16
  7810  042A  0821               	movf	?__Umul8_16+1,w
  7811  042B  00C2               	movwf	___flmul@temp+1
  7812  042C  0820               	movf	?__Umul8_16,w
  7813  042D  00C1               	movwf	___flmul@temp
  7814  042E  0841               	movf	___flmul@temp,w
  7815  042F  00B1               	movwf	??___flmul
  7816  0430  01B2               	clrf	??___flmul+1
  7817  0431  01B3               	clrf	??___flmul+2
  7818  0432  01B4               	clrf	??___flmul+3
  7819  0433  0834               	movf	??___flmul+3,w
  7820  0434  00BB               	movwf	___flmul@grs+3
  7821  0435  0833               	movf	??___flmul+2,w
  7822  0436  00BA               	movwf	___flmul@grs+2
  7823  0437  0832               	movf	??___flmul+1,w
  7824  0438  00B9               	movwf	___flmul@grs+1
  7825  0439  0831               	movf	??___flmul,w
  7826  043A  00B8               	movwf	___flmul@grs
  7827  043B  0842               	movf	___flmul@temp+1,w
  7828  043C  00B1               	movwf	??___flmul
  7829  043D  01B2               	clrf	??___flmul+1
  7830  043E  01B3               	clrf	??___flmul+2
  7831  043F  01B4               	clrf	??___flmul+3
  7832  0440  0834               	movf	??___flmul+3,w
  7833  0441  00C0               	movwf	___flmul@prod+3
  7834  0442  0833               	movf	??___flmul+2,w
  7835  0443  00BF               	movwf	___flmul@prod+2
  7836  0444  0832               	movf	??___flmul+1,w
  7837  0445  00BE               	movwf	___flmul@prod+1
  7838  0446  0831               	movf	??___flmul,w
  7839  0447  00BD               	movwf	___flmul@prod
  7840  0448  082A               	movf	___flmul@b+1,w
  7841  0449  00B1               	movwf	??___flmul
  7842  044A  0831               	movf	??___flmul,w
  7843  044B  00A0               	movwf	__Umul8_16@multiplicand
  7844  044C  082E               	movf	___flmul@a+1,w
  7845  044D  160A  158A  238D  120A  118A  	fcall	__Umul8_16
  7846  0452  0821               	movf	?__Umul8_16+1,w
  7847  0453  00C2               	movwf	___flmul@temp+1
  7848  0454  0820               	movf	?__Umul8_16,w
  7849  0455  00C1               	movwf	___flmul@temp
  7850  0456  0841               	movf	___flmul@temp,w
  7851  0457  00B1               	movwf	??___flmul
  7852  0458  01B2               	clrf	??___flmul+1
  7853  0459  01B3               	clrf	??___flmul+2
  7854  045A  01B4               	clrf	??___flmul+3
  7855  045B  0831               	movf	??___flmul,w
  7856  045C  07B8               	addwf	___flmul@grs,f
  7857  045D  0832               	movf	??___flmul+1,w
  7858  045E  1103               	clrz
  7859  045F  1803               	skipnc
  7860  0460  3E01               	addlw	1
  7861  0461  1D03               	btfss	3,2
  7862  0462  07B9               	addwf	___flmul@grs+1,f
  7863  0463  0833               	movf	??___flmul+2,w
  7864  0464  1103               	clrz
  7865  0465  1803               	skipnc
  7866  0466  3E01               	addlw	1
  7867  0467  1D03               	btfss	3,2
  7868  0468  07BA               	addwf	___flmul@grs+2,f
  7869  0469  0834               	movf	??___flmul+3,w
  7870  046A  1103               	clrz
  7871  046B  1803               	skipnc
  7872  046C  3E01               	addlw	1
  7873  046D  1D03               	btfss	3,2
  7874  046E  07BB               	addwf	___flmul@grs+3,f
  7875  046F  0842               	movf	___flmul@temp+1,w
  7876  0470  00B1               	movwf	??___flmul
  7877  0471  01B2               	clrf	??___flmul+1
  7878  0472  01B3               	clrf	??___flmul+2
  7879  0473  01B4               	clrf	??___flmul+3
  7880  0474  0831               	movf	??___flmul,w
  7881  0475  07BD               	addwf	___flmul@prod,f
  7882  0476  0832               	movf	??___flmul+1,w
  7883  0477  1103               	clrz
  7884  0478  1803               	skipnc
  7885  0479  3E01               	addlw	1
  7886  047A  1D03               	btfss	3,2
  7887  047B  07BE               	addwf	___flmul@prod+1,f
  7888  047C  0833               	movf	??___flmul+2,w
  7889  047D  1103               	clrz
  7890  047E  1803               	skipnc
  7891  047F  3E01               	addlw	1
  7892  0480  1D03               	btfss	3,2
  7893  0481  07BF               	addwf	___flmul@prod+2,f
  7894  0482  0834               	movf	??___flmul+3,w
  7895  0483  1103               	clrz
  7896  0484  1803               	skipnc
  7897  0485  3E01               	addlw	1
  7898  0486  1D03               	btfss	3,2
  7899  0487  07C0               	addwf	___flmul@prod+3,f
  7900  0488  082B               	movf	___flmul@b+2,w
  7901  0489  00B1               	movwf	??___flmul
  7902  048A  0831               	movf	??___flmul,w
  7903  048B  00A0               	movwf	__Umul8_16@multiplicand
  7904  048C  082D               	movf	___flmul@a,w
  7905  048D  160A  158A  238D  120A  118A  	fcall	__Umul8_16
  7906  0492  0821               	movf	?__Umul8_16+1,w
  7907  0493  00C2               	movwf	___flmul@temp+1
  7908  0494  0820               	movf	?__Umul8_16,w
  7909  0495  00C1               	movwf	___flmul@temp
  7910  0496  0841               	movf	___flmul@temp,w
  7911  0497  00B1               	movwf	??___flmul
  7912  0498  01B2               	clrf	??___flmul+1
  7913  0499  01B3               	clrf	??___flmul+2
  7914  049A  01B4               	clrf	??___flmul+3
  7915  049B  0831               	movf	??___flmul,w
  7916  049C  07B8               	addwf	___flmul@grs,f
  7917  049D  0832               	movf	??___flmul+1,w
  7918  049E  1103               	clrz
  7919  049F  1803               	skipnc
  7920  04A0  3E01               	addlw	1
  7921  04A1  1D03               	btfss	3,2
  7922  04A2  07B9               	addwf	___flmul@grs+1,f
  7923  04A3  0833               	movf	??___flmul+2,w
  7924  04A4  1103               	clrz
  7925  04A5  1803               	skipnc
  7926  04A6  3E01               	addlw	1
  7927  04A7  1D03               	btfss	3,2
  7928  04A8  07BA               	addwf	___flmul@grs+2,f
  7929  04A9  0834               	movf	??___flmul+3,w
  7930  04AA  1103               	clrz
  7931  04AB  1803               	skipnc
  7932  04AC  3E01               	addlw	1
  7933  04AD  1D03               	btfss	3,2
  7934  04AE  07BB               	addwf	___flmul@grs+3,f
  7935  04AF  0842               	movf	___flmul@temp+1,w
  7936  04B0  00B1               	movwf	??___flmul
  7937  04B1  01B2               	clrf	??___flmul+1
  7938  04B2  01B3               	clrf	??___flmul+2
  7939  04B3  01B4               	clrf	??___flmul+3
  7940  04B4  0831               	movf	??___flmul,w
  7941  04B5  07BD               	addwf	___flmul@prod,f
  7942  04B6  0832               	movf	??___flmul+1,w
  7943  04B7  1103               	clrz
  7944  04B8  1803               	skipnc
  7945  04B9  3E01               	addlw	1
  7946  04BA  1D03               	btfss	3,2
  7947  04BB  07BE               	addwf	___flmul@prod+1,f
  7948  04BC  0833               	movf	??___flmul+2,w
  7949  04BD  1103               	clrz
  7950  04BE  1803               	skipnc
  7951  04BF  3E01               	addlw	1
  7952  04C0  1D03               	btfss	3,2
  7953  04C1  07BF               	addwf	___flmul@prod+2,f
  7954  04C2  0834               	movf	??___flmul+3,w
  7955  04C3  1103               	clrz
  7956  04C4  1803               	skipnc
  7957  04C5  3E01               	addlw	1
  7958  04C6  1D03               	btfss	3,2
  7959  04C7  07C0               	addwf	___flmul@prod+3,f
  7960  04C8  3008               	movlw	8
  7961  04C9  00B1               	movwf	??___flmul
  7962  04CA                     u3725:
  7963  04CA  1003               	clrc
  7964  04CB  0DB8               	rlf	___flmul@grs,f
  7965  04CC  0DB9               	rlf	___flmul@grs+1,f
  7966  04CD  0DBA               	rlf	___flmul@grs+2,f
  7967  04CE  0DBB               	rlf	___flmul@grs+3,f
  7968  04CF  0BB1               	decfsz	??___flmul,f
  7969  04D0  2CCA               	goto	u3725
  7970  04D1  082A               	movf	___flmul@b+1,w
  7971  04D2  00B1               	movwf	??___flmul
  7972  04D3  0831               	movf	??___flmul,w
  7973  04D4  00A0               	movwf	__Umul8_16@multiplicand
  7974  04D5  082D               	movf	___flmul@a,w
  7975  04D6  160A  158A  238D  120A  118A  	fcall	__Umul8_16
  7976  04DB  0821               	movf	?__Umul8_16+1,w
  7977  04DC  00C2               	movwf	___flmul@temp+1
  7978  04DD  0820               	movf	?__Umul8_16,w
  7979  04DE  00C1               	movwf	___flmul@temp
  7980  04DF  0841               	movf	___flmul@temp,w
  7981  04E0  00B1               	movwf	??___flmul
  7982  04E1  0842               	movf	___flmul@temp+1,w
  7983  04E2  00B2               	movwf	??___flmul+1
  7984  04E3  01B3               	clrf	??___flmul+2
  7985  04E4  01B4               	clrf	??___flmul+3
  7986  04E5  0831               	movf	??___flmul,w
  7987  04E6  07B8               	addwf	___flmul@grs,f
  7988  04E7  0832               	movf	??___flmul+1,w
  7989  04E8  1103               	clrz
  7990  04E9  1803               	skipnc
  7991  04EA  3E01               	addlw	1
  7992  04EB  1D03               	btfss	3,2
  7993  04EC  07B9               	addwf	___flmul@grs+1,f
  7994  04ED  0833               	movf	??___flmul+2,w
  7995  04EE  1103               	clrz
  7996  04EF  1803               	skipnc
  7997  04F0  3E01               	addlw	1
  7998  04F1  1D03               	btfss	3,2
  7999  04F2  07BA               	addwf	___flmul@grs+2,f
  8000  04F3  0834               	movf	??___flmul+3,w
  8001  04F4  1103               	clrz
  8002  04F5  1803               	skipnc
  8003  04F6  3E01               	addlw	1
  8004  04F7  1D03               	btfss	3,2
  8005  04F8  07BB               	addwf	___flmul@grs+3,f
  8006  04F9  0829               	movf	___flmul@b,w
  8007  04FA  00B1               	movwf	??___flmul
  8008  04FB  0831               	movf	??___flmul,w
  8009  04FC  00A0               	movwf	__Umul8_16@multiplicand
  8010  04FD  082E               	movf	___flmul@a+1,w
  8011  04FE  160A  158A  238D  120A  118A  	fcall	__Umul8_16
  8012  0503  0821               	movf	?__Umul8_16+1,w
  8013  0504  00C2               	movwf	___flmul@temp+1
  8014  0505  0820               	movf	?__Umul8_16,w
  8015  0506  00C1               	movwf	___flmul@temp
  8016  0507  0841               	movf	___flmul@temp,w
  8017  0508  00B1               	movwf	??___flmul
  8018  0509  0842               	movf	___flmul@temp+1,w
  8019  050A  00B2               	movwf	??___flmul+1
  8020  050B  01B3               	clrf	??___flmul+2
  8021  050C  01B4               	clrf	??___flmul+3
  8022  050D  0831               	movf	??___flmul,w
  8023  050E  07B8               	addwf	___flmul@grs,f
  8024  050F  0832               	movf	??___flmul+1,w
  8025  0510  1103               	clrz
  8026  0511  1803               	skipnc
  8027  0512  3E01               	addlw	1
  8028  0513  1D03               	btfss	3,2
  8029  0514  07B9               	addwf	___flmul@grs+1,f
  8030  0515  0833               	movf	??___flmul+2,w
  8031  0516  1103               	clrz
  8032  0517  1803               	skipnc
  8033  0518  3E01               	addlw	1
  8034  0519  1D03               	btfss	3,2
  8035  051A  07BA               	addwf	___flmul@grs+2,f
  8036  051B  0834               	movf	??___flmul+3,w
  8037  051C  1103               	clrz
  8038  051D  1803               	skipnc
  8039  051E  3E01               	addlw	1
  8040  051F  1D03               	btfss	3,2
  8041  0520  07BB               	addwf	___flmul@grs+3,f
  8042  0521  3008               	movlw	8
  8043  0522  00B1               	movwf	??___flmul
  8044  0523                     u3755:
  8045  0523  1003               	clrc
  8046  0524  0DB8               	rlf	___flmul@grs,f
  8047  0525  0DB9               	rlf	___flmul@grs+1,f
  8048  0526  0DBA               	rlf	___flmul@grs+2,f
  8049  0527  0DBB               	rlf	___flmul@grs+3,f
  8050  0528  0BB1               	decfsz	??___flmul,f
  8051  0529  2D23               	goto	u3755
  8052  052A  0829               	movf	___flmul@b,w
  8053  052B  00B1               	movwf	??___flmul
  8054  052C  0831               	movf	??___flmul,w
  8055  052D  00A0               	movwf	__Umul8_16@multiplicand
  8056  052E  082D               	movf	___flmul@a,w
  8057  052F  160A  158A  238D  120A  118A  	fcall	__Umul8_16
  8058  0534  0821               	movf	?__Umul8_16+1,w
  8059  0535  00C2               	movwf	___flmul@temp+1
  8060  0536  0820               	movf	?__Umul8_16,w
  8061  0537  00C1               	movwf	___flmul@temp
  8062  0538  0841               	movf	___flmul@temp,w
  8063  0539  00B1               	movwf	??___flmul
  8064  053A  0842               	movf	___flmul@temp+1,w
  8065  053B  00B2               	movwf	??___flmul+1
  8066  053C  01B3               	clrf	??___flmul+2
  8067  053D  01B4               	clrf	??___flmul+3
  8068  053E  0831               	movf	??___flmul,w
  8069  053F  07B8               	addwf	___flmul@grs,f
  8070  0540  0832               	movf	??___flmul+1,w
  8071  0541  1103               	clrz
  8072  0542  1803               	skipnc
  8073  0543  3E01               	addlw	1
  8074  0544  1D03               	btfss	3,2
  8075  0545  07B9               	addwf	___flmul@grs+1,f
  8076  0546  0833               	movf	??___flmul+2,w
  8077  0547  1103               	clrz
  8078  0548  1803               	skipnc
  8079  0549  3E01               	addlw	1
  8080  054A  1D03               	btfss	3,2
  8081  054B  07BA               	addwf	___flmul@grs+2,f
  8082  054C  0834               	movf	??___flmul+3,w
  8083  054D  1103               	clrz
  8084  054E  1803               	skipnc
  8085  054F  3E01               	addlw	1
  8086  0550  1D03               	btfss	3,2
  8087  0551  07BB               	addwf	___flmul@grs+3,f
  8088  0552  082A               	movf	___flmul@b+1,w
  8089  0553  00B1               	movwf	??___flmul
  8090  0554  0831               	movf	??___flmul,w
  8091  0555  00A0               	movwf	__Umul8_16@multiplicand
  8092  0556  082F               	movf	___flmul@a+2,w
  8093  0557  160A  158A  238D  120A  118A  	fcall	__Umul8_16
  8094  055C  0821               	movf	?__Umul8_16+1,w
  8095  055D  00C2               	movwf	___flmul@temp+1
  8096  055E  0820               	movf	?__Umul8_16,w
  8097  055F  00C1               	movwf	___flmul@temp
  8098  0560  0841               	movf	___flmul@temp,w
  8099  0561  00B1               	movwf	??___flmul
  8100  0562  0842               	movf	___flmul@temp+1,w
  8101  0563  00B2               	movwf	??___flmul+1
  8102  0564  01B3               	clrf	??___flmul+2
  8103  0565  01B4               	clrf	??___flmul+3
  8104  0566  0831               	movf	??___flmul,w
  8105  0567  07BD               	addwf	___flmul@prod,f
  8106  0568  0832               	movf	??___flmul+1,w
  8107  0569  1103               	clrz
  8108  056A  1803               	skipnc
  8109  056B  3E01               	addlw	1
  8110  056C  1D03               	btfss	3,2
  8111  056D  07BE               	addwf	___flmul@prod+1,f
  8112  056E  0833               	movf	??___flmul+2,w
  8113  056F  1103               	clrz
  8114  0570  1803               	skipnc
  8115  0571  3E01               	addlw	1
  8116  0572  1D03               	btfss	3,2
  8117  0573  07BF               	addwf	___flmul@prod+2,f
  8118  0574  0834               	movf	??___flmul+3,w
  8119  0575  1103               	clrz
  8120  0576  1803               	skipnc
  8121  0577  3E01               	addlw	1
  8122  0578  1D03               	btfss	3,2
  8123  0579  07C0               	addwf	___flmul@prod+3,f
  8124  057A  082B               	movf	___flmul@b+2,w
  8125  057B  00B1               	movwf	??___flmul
  8126  057C  0831               	movf	??___flmul,w
  8127  057D  00A0               	movwf	__Umul8_16@multiplicand
  8128  057E  082E               	movf	___flmul@a+1,w
  8129  057F  160A  158A  238D  120A  118A  	fcall	__Umul8_16
  8130  0584  0821               	movf	?__Umul8_16+1,w
  8131  0585  00C2               	movwf	___flmul@temp+1
  8132  0586  0820               	movf	?__Umul8_16,w
  8133  0587  00C1               	movwf	___flmul@temp
  8134  0588  0841               	movf	___flmul@temp,w
  8135  0589  00B1               	movwf	??___flmul
  8136  058A  0842               	movf	___flmul@temp+1,w
  8137  058B  00B2               	movwf	??___flmul+1
  8138  058C  01B3               	clrf	??___flmul+2
  8139  058D  01B4               	clrf	??___flmul+3
  8140  058E  0831               	movf	??___flmul,w
  8141  058F  07BD               	addwf	___flmul@prod,f
  8142  0590  0832               	movf	??___flmul+1,w
  8143  0591  1103               	clrz
  8144  0592  1803               	skipnc
  8145  0593  3E01               	addlw	1
  8146  0594  1D03               	btfss	3,2
  8147  0595  07BE               	addwf	___flmul@prod+1,f
  8148  0596  0833               	movf	??___flmul+2,w
  8149  0597  1103               	clrz
  8150  0598  1803               	skipnc
  8151  0599  3E01               	addlw	1
  8152  059A  1D03               	btfss	3,2
  8153  059B  07BF               	addwf	___flmul@prod+2,f
  8154  059C  0834               	movf	??___flmul+3,w
  8155  059D  1103               	clrz
  8156  059E  1803               	skipnc
  8157  059F  3E01               	addlw	1
  8158  05A0  1D03               	btfss	3,2
  8159  05A1  07C0               	addwf	___flmul@prod+3,f
  8160  05A2  082B               	movf	___flmul@b+2,w
  8161  05A3  00B1               	movwf	??___flmul
  8162  05A4  0831               	movf	??___flmul,w
  8163  05A5  00A0               	movwf	__Umul8_16@multiplicand
  8164  05A6  082F               	movf	___flmul@a+2,w
  8165  05A7  160A  158A  238D  120A  118A  	fcall	__Umul8_16
  8166  05AC  0821               	movf	?__Umul8_16+1,w
  8167  05AD  00C2               	movwf	___flmul@temp+1
  8168  05AE  0820               	movf	?__Umul8_16,w
  8169  05AF  00C1               	movwf	___flmul@temp
  8170  05B0  0841               	movf	___flmul@temp,w
  8171  05B1  00B1               	movwf	??___flmul
  8172  05B2  0842               	movf	___flmul@temp+1,w
  8173  05B3  00B2               	movwf	??___flmul+1
  8174  05B4  01B3               	clrf	??___flmul+2
  8175  05B5  01B4               	clrf	??___flmul+3
  8176  05B6  3008               	movlw	8
  8177  05B7                     u3795:
  8178  05B7  1003               	clrc
  8179  05B8  0DB1               	rlf	??___flmul,f
  8180  05B9  0DB2               	rlf	??___flmul+1,f
  8181  05BA  0DB3               	rlf	??___flmul+2,f
  8182  05BB  0DB4               	rlf	??___flmul+3,f
  8183  05BC  3EFF               	addlw	-1
  8184  05BD  1D03               	skipz
  8185  05BE  2DB7               	goto	u3795
  8186  05BF  0831               	movf	??___flmul,w
  8187  05C0  07BD               	addwf	___flmul@prod,f
  8188  05C1  0832               	movf	??___flmul+1,w
  8189  05C2  1103               	clrz
  8190  05C3  1803               	skipnc
  8191  05C4  3E01               	addlw	1
  8192  05C5  1D03               	btfss	3,2
  8193  05C6  07BE               	addwf	___flmul@prod+1,f
  8194  05C7  0833               	movf	??___flmul+2,w
  8195  05C8  1103               	clrz
  8196  05C9  1803               	skipnc
  8197  05CA  3E01               	addlw	1
  8198  05CB  1D03               	btfss	3,2
  8199  05CC  07BF               	addwf	___flmul@prod+2,f
  8200  05CD  0834               	movf	??___flmul+3,w
  8201  05CE  1103               	clrz
  8202  05CF  1803               	skipnc
  8203  05D0  3E01               	addlw	1
  8204  05D1  1D03               	btfss	3,2
  8205  05D2  07C0               	addwf	___flmul@prod+3,f
  8206  05D3  083B               	movf	___flmul@grs+3,w
  8207  05D4  00B1               	movwf	??___flmul
  8208  05D5  01B2               	clrf	??___flmul+1
  8209  05D6  01B3               	clrf	??___flmul+2
  8210  05D7  01B4               	clrf	??___flmul+3
  8211  05D8  0831               	movf	??___flmul,w
  8212  05D9  07BD               	addwf	___flmul@prod,f
  8213  05DA  0832               	movf	??___flmul+1,w
  8214  05DB  1103               	clrz
  8215  05DC  1803               	skipnc
  8216  05DD  3E01               	addlw	1
  8217  05DE  1D03               	btfss	3,2
  8218  05DF  07BE               	addwf	___flmul@prod+1,f
  8219  05E0  0833               	movf	??___flmul+2,w
  8220  05E1  1103               	clrz
  8221  05E2  1803               	skipnc
  8222  05E3  3E01               	addlw	1
  8223  05E4  1D03               	btfss	3,2
  8224  05E5  07BF               	addwf	___flmul@prod+2,f
  8225  05E6  0834               	movf	??___flmul+3,w
  8226  05E7  1103               	clrz
  8227  05E8  1803               	skipnc
  8228  05E9  3E01               	addlw	1
  8229  05EA  1D03               	btfss	3,2
  8230  05EB  07C0               	addwf	___flmul@prod+3,f
  8231  05EC  3008               	movlw	8
  8232  05ED  00B1               	movwf	??___flmul
  8233  05EE                     u3825:
  8234  05EE  1003               	clrc
  8235  05EF  0DB8               	rlf	___flmul@grs,f
  8236  05F0  0DB9               	rlf	___flmul@grs+1,f
  8237  05F1  0DBA               	rlf	___flmul@grs+2,f
  8238  05F2  0DBB               	rlf	___flmul@grs+3,f
  8239  05F3  0BB1               	decfsz	??___flmul,f
  8240  05F4  2DEE               	goto	u3825
  8241  05F5  083C               	movf	___flmul@bexp,w
  8242  05F6  0737               	addwf	___flmul@aexp,w
  8243  05F7  00B1               	movwf	??___flmul
  8244  05F8  01B2               	clrf	??___flmul+1
  8245  05F9  0DB2               	rlf	??___flmul+1,f
  8246  05FA  0831               	movf	??___flmul,w
  8247  05FB  3E82               	addlw	130
  8248  05FC  00C1               	movwf	___flmul@temp
  8249  05FD  0832               	movf	??___flmul+1,w
  8250  05FE  1803               	skipnc
  8251  05FF  3E01               	addlw	1
  8252  0600  3EFF               	addlw	255
  8253  0601  00C2               	movwf	___flmul@temp+1
  8254  0602                     l4232:
  8255  0602  1BBF               	btfsc	___flmul@prod+2,7
  8256  0603  2E1F               	goto	l4234
  8257  0604  3001               	movlw	1
  8258  0605  00B1               	movwf	??___flmul
  8259  0606                     u3835:
  8260  0606  1003               	clrc
  8261  0607  0DBD               	rlf	___flmul@prod,f
  8262  0608  0DBE               	rlf	___flmul@prod+1,f
  8263  0609  0DBF               	rlf	___flmul@prod+2,f
  8264  060A  0DC0               	rlf	___flmul@prod+3,f
  8265  060B  0BB1               	decfsz	??___flmul,f
  8266  060C  2E06               	goto	u3835
  8267  060D  1BBB               	btfsc	___flmul@grs+3,7
  8268  060E  143D               	bsf	___flmul@prod,0
  8269  060F  3001               	movlw	1
  8270  0610  00B1               	movwf	??___flmul
  8271  0611                     u3855:
  8272  0611  1003               	clrc
  8273  0612  0DB8               	rlf	___flmul@grs,f
  8274  0613  0DB9               	rlf	___flmul@grs+1,f
  8275  0614  0DBA               	rlf	___flmul@grs+2,f
  8276  0615  0DBB               	rlf	___flmul@grs+3,f
  8277  0616  0BB1               	decfsz	??___flmul,f
  8278  0617  2E11               	goto	u3855
  8279  0618  30FF               	movlw	255
  8280  0619  07C1               	addwf	___flmul@temp,f
  8281  061A  1803               	skipnc
  8282  061B  0AC2               	incf	___flmul@temp+1,f
  8283  061C  30FF               	movlw	255
  8284  061D  07C2               	addwf	___flmul@temp+1,f
  8285  061E  2E02               	goto	l4232
  8286  061F                     l4234:
  8287  061F  01B7               	clrf	___flmul@aexp
  8288  0620  1FBB               	btfss	___flmul@grs+3,7
  8289  0621  2E38               	goto	l4244
  8290  0622  30FF               	movlw	255
  8291  0623  0538               	andwf	___flmul@grs,w
  8292  0624  00B1               	movwf	??___flmul
  8293  0625  30FF               	movlw	255
  8294  0626  0539               	andwf	___flmul@grs+1,w
  8295  0627  00B2               	movwf	??___flmul+1
  8296  0628  30FF               	movlw	255
  8297  0629  053A               	andwf	___flmul@grs+2,w
  8298  062A  00B3               	movwf	??___flmul+2
  8299  062B  307F               	movlw	127
  8300  062C  053B               	andwf	___flmul@grs+3,w
  8301  062D  00B4               	movwf	??___flmul+3
  8302  062E  0834               	movf	??___flmul+3,w
  8303  062F  0433               	iorwf	??___flmul+2,w
  8304  0630  0432               	iorwf	??___flmul+1,w
  8305  0631  0431               	iorwf	??___flmul,w
  8306  0632  1903               	skipnz
  8307  0633  183D               	btfsc	___flmul@prod,0
  8308  0634  2E36               	goto	l4240
  8309  0635  2E38               	goto	l4244
  8310  0636                     l4240:
  8311  0636  01B7               	clrf	___flmul@aexp
  8312  0637  0AB7               	incf	___flmul@aexp,f
  8313  0638                     l4244:
  8314  0638  0837               	movf	___flmul@aexp,w
  8315  0639  1903               	btfsc	3,2
  8316  063A  2E6A               	goto	l4254
  8317  063B  3001               	movlw	1
  8318  063C  07BD               	addwf	___flmul@prod,f
  8319  063D  3000               	movlw	0
  8320  063E  1803               	skipnc
  8321  063F  3001               	movlw	1
  8322  0640  07BE               	addwf	___flmul@prod+1,f
  8323  0641  3000               	movlw	0
  8324  0642  1803               	skipnc
  8325  0643  3001               	movlw	1
  8326  0644  07BF               	addwf	___flmul@prod+2,f
  8327  0645  3000               	movlw	0
  8328  0646  1803               	skipnc
  8329  0647  3001               	movlw	1
  8330  0648  07C0               	addwf	___flmul@prod+3,f
  8331  0649  1C40               	btfss	___flmul@prod+3,0
  8332  064A  2E6A               	goto	l4254
  8333  064B  083D               	movf	___flmul@prod,w
  8334  064C  00B1               	movwf	??___flmul
  8335  064D  083E               	movf	___flmul@prod+1,w
  8336  064E  00B2               	movwf	??___flmul+1
  8337  064F  083F               	movf	___flmul@prod+2,w
  8338  0650  00B3               	movwf	??___flmul+2
  8339  0651  0840               	movf	___flmul@prod+3,w
  8340  0652  00B4               	movwf	??___flmul+3
  8341  0653  3001               	movlw	1
  8342  0654  00B5               	movwf	??___flmul+4
  8343  0655                     u3925:
  8344  0655  0D34               	rlf	??___flmul+3,w
  8345  0656  0CB4               	rrf	??___flmul+3,f
  8346  0657  0CB3               	rrf	??___flmul+2,f
  8347  0658  0CB2               	rrf	??___flmul+1,f
  8348  0659  0CB1               	rrf	??___flmul,f
  8349  065A  0BB5               	decfsz	??___flmul+4,f
  8350  065B  2E55               	goto	u3925
  8351  065C  0834               	movf	??___flmul+3,w
  8352  065D  00C0               	movwf	___flmul@prod+3
  8353  065E  0833               	movf	??___flmul+2,w
  8354  065F  00BF               	movwf	___flmul@prod+2
  8355  0660  0832               	movf	??___flmul+1,w
  8356  0661  00BE               	movwf	___flmul@prod+1
  8357  0662  0831               	movf	??___flmul,w
  8358  0663  00BD               	movwf	___flmul@prod
  8359  0664  3001               	movlw	1
  8360  0665  07C1               	addwf	___flmul@temp,f
  8361  0666  1803               	skipnc
  8362  0667  0AC2               	incf	___flmul@temp+1,f
  8363  0668  3000               	movlw	0
  8364  0669  07C2               	addwf	___flmul@temp+1,f
  8365  066A                     l4254:
  8366  066A  0842               	movf	___flmul@temp+1,w
  8367  066B  3A80               	xorlw	128
  8368  066C  00FF               	movwf	127
  8369  066D  3080               	movlw	128
  8370  066E  027F               	subwf	127,w
  8371  066F  1D03               	skipz
  8372  0670  2E73               	goto	u3935
  8373  0671  30FF               	movlw	255
  8374  0672  0241               	subwf	___flmul@temp,w
  8375  0673                     u3935:
  8376  0673  1C03               	skipc
  8377  0674  2E80               	goto	l4258
  8378  0675  307F               	movlw	127
  8379  0676  1283               	bcf	3,5	;RP0=0, select bank0
  8380  0677  1303               	bcf	3,6	;RP1=0, select bank0
  8381  0678  00C0               	movwf	___flmul@prod+3
  8382  0679  3080               	movlw	128
  8383  067A  00BF               	movwf	___flmul@prod+2
  8384  067B  3000               	movlw	0
  8385  067C  00BE               	movwf	___flmul@prod+1
  8386  067D  3000               	movlw	0
  8387  067E  00BD               	movwf	___flmul@prod
  8388  067F  2EB0               	goto	l1387
  8389  0680                     l4258:
  8390  0680  1283               	bcf	3,5	;RP0=0, select bank0
  8391  0681  1303               	bcf	3,6	;RP1=0, select bank0
  8392  0682  0842               	movf	___flmul@temp+1,w
  8393  0683  3A80               	xorlw	128
  8394  0684  00FF               	movwf	127
  8395  0685  3080               	movlw	128
  8396  0686  027F               	subwf	127,w
  8397  0687  1D03               	skipz
  8398  0688  2E8B               	goto	u3945
  8399  0689  3001               	movlw	1
  8400  068A  0241               	subwf	___flmul@temp,w
  8401  068B                     u3945:
  8402  068B  1803               	skipnc
  8403  068C  2E99               	goto	l4264
  8404  068D  3000               	movlw	0
  8405  068E  1283               	bcf	3,5	;RP0=0, select bank0
  8406  068F  1303               	bcf	3,6	;RP1=0, select bank0
  8407  0690  00C0               	movwf	___flmul@prod+3
  8408  0691  3000               	movlw	0
  8409  0692  00BF               	movwf	___flmul@prod+2
  8410  0693  3000               	movlw	0
  8411  0694  00BE               	movwf	___flmul@prod+1
  8412  0695  3000               	movlw	0
  8413  0696  00BD               	movwf	___flmul@prod
  8414  0697  01B6               	clrf	___flmul@sign
  8415  0698  2EB0               	goto	l1387
  8416  0699                     l4264:
  8417  0699  1283               	bcf	3,5	;RP0=0, select bank0
  8418  069A  1303               	bcf	3,6	;RP1=0, select bank0
  8419  069B  0841               	movf	___flmul@temp,w
  8420  069C  00B1               	movwf	??___flmul
  8421  069D  0831               	movf	??___flmul,w
  8422  069E  00BC               	movwf	___flmul@bexp
  8423  069F  30FF               	movlw	255
  8424  06A0  05BD               	andwf	___flmul@prod,f
  8425  06A1  30FF               	movlw	255
  8426  06A2  05BE               	andwf	___flmul@prod+1,f
  8427  06A3  307F               	movlw	127
  8428  06A4  05BF               	andwf	___flmul@prod+2,f
  8429  06A5  3000               	movlw	0
  8430  06A6  05C0               	andwf	___flmul@prod+3,f
  8431  06A7  183C               	btfsc	___flmul@bexp,0
  8432  06A8  17BF               	bsf	___flmul@prod+2,7
  8433  06A9  083C               	movf	___flmul@bexp,w
  8434  06AA  00B1               	movwf	??___flmul
  8435  06AB  1003               	clrc
  8436  06AC  0C31               	rrf	??___flmul,w
  8437  06AD  00B2               	movwf	??___flmul+1
  8438  06AE  0832               	movf	??___flmul+1,w
  8439  06AF  00C0               	movwf	___flmul@prod+3
  8440  06B0                     l1387:
  8441  06B0  0836               	movf	___flmul@sign,w
  8442  06B1  00B1               	movwf	??___flmul
  8443  06B2  0831               	movf	??___flmul,w
  8444  06B3  04C0               	iorwf	___flmul@prod+3,f
  8445  06B4  0840               	movf	___flmul@prod+3,w
  8446  06B5  00AC               	movwf	?___flmul+3
  8447  06B6  083F               	movf	___flmul@prod+2,w
  8448  06B7  00AB               	movwf	?___flmul+2
  8449  06B8  083E               	movf	___flmul@prod+1,w
  8450  06B9  00AA               	movwf	?___flmul+1
  8451  06BA  083D               	movf	___flmul@prod,w
  8452  06BB  00A9               	movwf	?___flmul
  8453  06BC  0008               	return
  8454  06BD                     __end_of___flmul:
  8455                           
  8456                           	psect	text23
  8457  1B8D                     __ptext23:	
  8458 ;; *************** function __Umul8_16 *****************
  8459 ;; Defined at:
  8460 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;  multiplier      1    wreg     unsigned char 
  8463 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8466 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8467 ;;  product         2    4[BANK0 ] unsigned int 
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  2    0[BANK0 ] unsigned int 
  8470 ;; Registers used:
  8471 ;;		wreg, status,2, status,0
  8472 ;; Tracked objects:
  8473 ;;		On entry : 300/0
  8474 ;;		On exit  : 300/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8477 ;;      Params:         0       2       0       0       0
  8478 ;;      Locals:         0       5       0       0       0
  8479 ;;      Temps:          0       2       0       0       0
  8480 ;;      Totals:         0       9       0       0       0
  8481 ;;Total ram usage:        9 bytes
  8482 ;; Hardware stack levels used: 1
  8483 ;; Hardware stack levels required when called: 1
  8484 ;; This function calls:
  8485 ;;		Nothing
  8486 ;; This function is called by:
  8487 ;;		___flmul
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           
  8492                           ;psect for function __Umul8_16
  8493  1B8D                     __Umul8_16:
  8494                           
  8495                           ;incstack = 0
  8496                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8497                           ;__Umul8_16@multiplier stored from wreg
  8498  1B8D  00A8               	movwf	__Umul8_16@multiplier
  8499  1B8E  01A4               	clrf	__Umul8_16@product
  8500  1B8F  01A5               	clrf	__Umul8_16@product+1
  8501  1B90  0820               	movf	__Umul8_16@multiplicand,w
  8502  1B91  00A2               	movwf	??__Umul8_16
  8503  1B92  01A3               	clrf	??__Umul8_16+1
  8504  1B93  0822               	movf	??__Umul8_16,w
  8505  1B94  00A6               	movwf	__Umul8_16@word_mpld
  8506  1B95  0823               	movf	??__Umul8_16+1,w
  8507  1B96  00A7               	movwf	__Umul8_16@word_mpld+1
  8508  1B97                     l3670:
  8509  1B97  1C28               	btfss	__Umul8_16@multiplier,0
  8510  1B98  2B9F               	goto	l1394
  8511  1B99  0826               	movf	__Umul8_16@word_mpld,w
  8512  1B9A  07A4               	addwf	__Umul8_16@product,f
  8513  1B9B  1803               	skipnc
  8514  1B9C  0AA5               	incf	__Umul8_16@product+1,f
  8515  1B9D  0827               	movf	__Umul8_16@word_mpld+1,w
  8516  1B9E  07A5               	addwf	__Umul8_16@product+1,f
  8517  1B9F                     l1394:
  8518  1B9F  3001               	movlw	1
  8519  1BA0                     u2795:
  8520  1BA0  1003               	clrc
  8521  1BA1  0DA6               	rlf	__Umul8_16@word_mpld,f
  8522  1BA2  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8523  1BA3  3EFF               	addlw	-1
  8524  1BA4  1D03               	skipz
  8525  1BA5  2BA0               	goto	u2795
  8526  1BA6  1003               	clrc
  8527  1BA7  0CA8               	rrf	__Umul8_16@multiplier,f
  8528  1BA8  0828               	movf	__Umul8_16@multiplier,w
  8529  1BA9  1D03               	btfss	3,2
  8530  1BAA  2B97               	goto	l3670
  8531  1BAB  0825               	movf	__Umul8_16@product+1,w
  8532  1BAC  00A1               	movwf	?__Umul8_16+1
  8533  1BAD  0824               	movf	__Umul8_16@product,w
  8534  1BAE  00A0               	movwf	?__Umul8_16
  8535  1BAF  0008               	return
  8536  1BB0                     __end_of__Umul8_16:
  8537                           
  8538                           	psect	text24
  8539  1A4C                     __ptext24:	
  8540 ;; *************** function _PROCULUS_VP_Write_String *****************
  8541 ;; Defined at:
  8542 ;;		line 205 in file "proculus.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;  vp              2   58[BANK0 ] unsigned int 
  8545 ;;  text            1   60[BANK0 ] PTR unsigned char 
  8546 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;		None
  8549 ;; Return value:  Size  Location     Type
  8550 ;;                  1    wreg      void 
  8551 ;; Registers used:
  8552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8553 ;; Tracked objects:
  8554 ;;		On entry : 300/0
  8555 ;;		On exit  : 300/0
  8556 ;;		Unchanged: 0/0
  8557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8558 ;;      Params:         0       3       0       0       0
  8559 ;;      Locals:         0       0       0       0       0
  8560 ;;      Temps:          0       1       0       0       0
  8561 ;;      Totals:         0       4       0       0       0
  8562 ;;Total ram usage:        4 bytes
  8563 ;; Hardware stack levels used: 1
  8564 ;; Hardware stack levels required when called: 4
  8565 ;; This function calls:
  8566 ;;		_PROCULUS_VP_Write
  8567 ;;		_strlen
  8568 ;; This function is called by:
  8569 ;;		_Decodify_Command
  8570 ;; This function uses a non-reentrant model
  8571 ;;
  8572                           
  8573                           
  8574                           ;psect for function _PROCULUS_VP_Write_String
  8575  1A4C                     _PROCULUS_VP_Write_String:
  8576                           
  8577                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  8578                           
  8579                           ;incstack = 0
  8580                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8581  1A4C  085B               	movf	PROCULUS_VP_Write_String@vp+1,w
  8582  1A4D  00D3               	movwf	PROCULUS_VP_Write@vp+1
  8583  1A4E  085A               	movf	PROCULUS_VP_Write_String@vp,w
  8584  1A4F  00D2               	movwf	PROCULUS_VP_Write@vp
  8585  1A50  085C               	movf	PROCULUS_VP_Write_String@text,w
  8586  1A51  00D4               	movwf	PROCULUS_VP_Write@vetor
  8587  1A52  3001               	movlw	1
  8588  1A53  00D5               	movwf	PROCULUS_VP_Write@vetor+1
  8589  1A54  085C               	movf	PROCULUS_VP_Write_String@text,w
  8590  1A55  160A  158A  2294  160A  158A  	fcall	_strlen
  8591  1A5A  0820               	movf	?_strlen,w
  8592  1A5B  3E01               	addlw	1
  8593  1A5C  00DD               	movwf	??_PROCULUS_VP_Write_String
  8594  1A5D  085D               	movf	??_PROCULUS_VP_Write_String,w
  8595  1A5E  00D6               	movwf	PROCULUS_VP_Write@size
  8596  1A5F  120A  118A  27B8   	fcall	_PROCULUS_VP_Write
  8597  1A62  0008               	return
  8598  1A63                     __end_of_PROCULUS_VP_Write_String:
  8599                           
  8600                           	psect	text25
  8601  1A94                     __ptext25:	
  8602 ;; *************** function _strlen *****************
  8603 ;; Defined at:
  8604 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;  s               1    wreg     PTR const unsigned char 
  8607 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  8610 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8611 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  8612 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8613 ;; Return value:  Size  Location     Type
  8614 ;;                  2    0[BANK0 ] unsigned int 
  8615 ;; Registers used:
  8616 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8617 ;; Tracked objects:
  8618 ;;		On entry : 0/300
  8619 ;;		On exit  : B00/800
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8622 ;;      Params:         0       2       0       0       0
  8623 ;;      Locals:         0       2       0       0       0
  8624 ;;      Temps:          0       1       0       0       0
  8625 ;;      Totals:         0       5       0       0       0
  8626 ;;Total ram usage:        5 bytes
  8627 ;; Hardware stack levels used: 1
  8628 ;; Hardware stack levels required when called: 1
  8629 ;; This function calls:
  8630 ;;		Nothing
  8631 ;; This function is called by:
  8632 ;;		_Decodify_Command
  8633 ;;		_PROCULUS_VP_Write_String
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637                           
  8638                           ;psect for function _strlen
  8639  1A94                     _strlen:
  8640                           
  8641                           ;incstack = 0
  8642                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8643                           ;strlen@s stored from wreg
  8644  1A94  1283               	bcf	3,5	;RP0=0, select bank0
  8645  1A95  1303               	bcf	3,6	;RP1=0, select bank0
  8646  1A96  00A4               	movwf	strlen@s
  8647  1A97  0824               	movf	strlen@s,w
  8648  1A98  00A2               	movwf	??_strlen
  8649  1A99  0822               	movf	??_strlen,w
  8650  1A9A  00A3               	movwf	strlen@cp
  8651  1A9B                     l3830:
  8652  1A9B  0823               	movf	strlen@cp,w
  8653  1A9C  0084               	movwf	4
  8654  1A9D  1783               	bsf	3,7	;select IRP bank2
  8655  1A9E  0800               	movf	0,w
  8656  1A9F  1903               	btfsc	3,2
  8657  1AA0  2AA6               	goto	l3832
  8658  1AA1  3001               	movlw	1
  8659  1AA2  00A2               	movwf	??_strlen
  8660  1AA3  0822               	movf	??_strlen,w
  8661  1AA4  07A3               	addwf	strlen@cp,f
  8662  1AA5  2A9B               	goto	l3830
  8663  1AA6                     l3832:
  8664  1AA6  0824               	movf	strlen@s,w
  8665  1AA7  0223               	subwf	strlen@cp,w
  8666  1AA8  00A0               	movwf	?_strlen
  8667  1AA9  01A1               	clrf	?_strlen+1
  8668  1AAA  1BA0               	btfsc	?_strlen,7
  8669  1AAB  03A1               	decf	?_strlen+1,f
  8670  1AAC  0008               	return
  8671  1AAD                     __end_of_strlen:
  8672                           
  8673                           	psect	text26
  8674  07B8                     __ptext26:	
  8675 ;; *************** function _PROCULUS_VP_Write *****************
  8676 ;; Defined at:
  8677 ;;		line 40 in file "proculus.c"
  8678 ;; Parameters:    Size  Location     Type
  8679 ;;  vp              2   50[BANK0 ] unsigned int 
  8680 ;;  vetor           2   52[BANK0 ] PTR unsigned char 
  8681 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  8682 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(52), usart_protocol(58), 
  8683 ;;  size            1   54[BANK0 ] unsigned char 
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;  i               1   57[BANK0 ] unsigned char 
  8686 ;; Return value:  Size  Location     Type
  8687 ;;                  1    wreg      void 
  8688 ;; Registers used:
  8689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8690 ;; Tracked objects:
  8691 ;;		On entry : B00/800
  8692 ;;		On exit  : 300/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8695 ;;      Params:         0       5       0       0       0
  8696 ;;      Locals:         0       1       0       0       0
  8697 ;;      Temps:          0       2       0       0       0
  8698 ;;      Totals:         0       8       0       0       0
  8699 ;;Total ram usage:        8 bytes
  8700 ;; Hardware stack levels used: 1
  8701 ;; Hardware stack levels required when called: 3
  8702 ;; This function calls:
  8703 ;;		_PROCULUS_Delay
  8704 ;;		_USART_put_int
  8705 ;;		_USART_putc
  8706 ;; This function is called by:
  8707 ;;		_PROCULUS_VP_Write_String
  8708 ;; This function uses a non-reentrant model
  8709 ;;
  8710                           
  8711                           
  8712                           ;psect for function _PROCULUS_VP_Write
  8713  07B8                     _PROCULUS_VP_Write:
  8714                           
  8715                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  8716                           
  8717                           ;incstack = 0
  8718                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8719  07B8  30A5               	movlw	165
  8720  07B9  00CE               	movwf	USART_put_int@value
  8721  07BA  305A               	movlw	90
  8722  07BB  00CF               	movwf	USART_put_int@value+1
  8723  07BC  160A  158A  2236  120A  118A  	fcall	_USART_put_int
  8724                           
  8725                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  8726  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  8727  07C2  0856               	movf	PROCULUS_VP_Write@size,w
  8728  07C3  3E03               	addlw	3
  8729  07C4  160A  158A  21FB  120A  118A  	fcall	_USART_putc
  8730                           
  8731                           ;proculus.c: 43:      USART_putc(0x82);
  8732  07C9  3082               	movlw	130
  8733  07CA  160A  158A  21FB  120A  118A  	fcall	_USART_putc
  8734                           
  8735                           ;proculus.c: 44:      USART_put_int(vp);
  8736  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  8737  07D0  0853               	movf	PROCULUS_VP_Write@vp+1,w
  8738  07D1  00CF               	movwf	USART_put_int@value+1
  8739  07D2  0852               	movf	PROCULUS_VP_Write@vp,w
  8740  07D3  00CE               	movwf	USART_put_int@value
  8741  07D4  160A  158A  2236  120A  118A  	fcall	_USART_put_int
  8742                           
  8743                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  8744  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  8745  07DA  01D9               	clrf	PROCULUS_VP_Write@i
  8746  07DB                     l5578:
  8747  07DB  0856               	movf	PROCULUS_VP_Write@size,w
  8748  07DC  0259               	subwf	PROCULUS_VP_Write@i,w
  8749  07DD  1803               	btfsc	3,0
  8750  07DE  2FF7               	goto	l5580
  8751                           
  8752                           ;proculus.c: 46:          USART_putc(vetor[i]);
  8753  07DF  0859               	movf	PROCULUS_VP_Write@i,w
  8754  07E0  0754               	addwf	PROCULUS_VP_Write@vetor,w
  8755  07E1  00D7               	movwf	??_PROCULUS_VP_Write
  8756  07E2  0855               	movf	PROCULUS_VP_Write@vetor+1,w
  8757  07E3  1803               	skipnc
  8758  07E4  3E01               	addlw	1
  8759  07E5  00D8               	movwf	??_PROCULUS_VP_Write+1
  8760  07E6  0857               	movf	??_PROCULUS_VP_Write,w
  8761  07E7  0084               	movwf	4
  8762  07E8  1783               	bsf	3,7
  8763  07E9  1C58               	btfss	??_PROCULUS_VP_Write+1,0
  8764  07EA  1383               	bcf	3,7
  8765  07EB  0800               	movf	0,w
  8766  07EC  160A  158A  21FB  120A  118A  	fcall	_USART_putc
  8767  07F1  3001               	movlw	1
  8768  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  8769  07F3  00D7               	movwf	??_PROCULUS_VP_Write
  8770  07F4  0857               	movf	??_PROCULUS_VP_Write,w
  8771  07F5  07D9               	addwf	PROCULUS_VP_Write@i,f
  8772  07F6  2FDB               	goto	l5578
  8773  07F7                     l5580:
  8774                           
  8775                           ;proculus.c: 48:      PROCULUS_Delay(1);
  8776  07F7  3001               	movlw	1
  8777  07F8  00A0               	movwf	PROCULUS_Delay@tempo_ms
  8778  07F9  3000               	movlw	0
  8779  07FA  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  8780  07FB  160A  158A  22AD   	fcall	_PROCULUS_Delay
  8781  07FE  0008               	return
  8782  07FF                     __end_of_PROCULUS_VP_Write:
  8783                           
  8784                           	psect	text27
  8785  1A0B                     __ptext27:	
  8786 ;; *************** function _PROCULUS_Show_Screen *****************
  8787 ;; Defined at:
  8788 ;;		line 243 in file "proculus.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;  screen          2   54[BANK0 ] unsigned int 
  8791 ;; Auto vars:     Size  Location     Type
  8792 ;;  vetor           3   57[BANK0 ] unsigned char [3]
  8793 ;; Return value:  Size  Location     Type
  8794 ;;                  1    wreg      void 
  8795 ;; Registers used:
  8796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8797 ;; Tracked objects:
  8798 ;;		On entry : 300/0
  8799 ;;		On exit  : 300/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8802 ;;      Params:         0       2       0       0       0
  8803 ;;      Locals:         0       3       0       0       0
  8804 ;;      Temps:          0       1       0       0       0
  8805 ;;      Totals:         0       6       0       0       0
  8806 ;;Total ram usage:        6 bytes
  8807 ;; Hardware stack levels used: 1
  8808 ;; Hardware stack levels required when called: 4
  8809 ;; This function calls:
  8810 ;;		_PROCULUS_Control_Register_Write
  8811 ;; This function is called by:
  8812 ;;		_Decodify_Command
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816                           
  8817                           ;psect for function _PROCULUS_Show_Screen
  8818  1A0B                     _PROCULUS_Show_Screen:
  8819                           
  8820                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  8821                           
  8822                           ;incstack = 0
  8823                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8824  1A0B  3003               	movlw	3
  8825  1A0C  00D8               	movwf	??_PROCULUS_Show_Screen
  8826  1A0D  0858               	movf	??_PROCULUS_Show_Screen,w
  8827  1A0E  00D9               	movwf	PROCULUS_Show_Screen@vetor
  8828                           
  8829                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  8830  1A0F  0857               	movf	PROCULUS_Show_Screen@screen+1,w
  8831  1A10  00D8               	movwf	??_PROCULUS_Show_Screen
  8832  1A11  0858               	movf	??_PROCULUS_Show_Screen,w
  8833  1A12  00DA               	movwf	PROCULUS_Show_Screen@vetor+1
  8834                           
  8835                           ;proculus.c: 247:      vetor[2] = (char) screen;
  8836  1A13  0856               	movf	PROCULUS_Show_Screen@screen,w
  8837  1A14  00D8               	movwf	??_PROCULUS_Show_Screen
  8838  1A15  0858               	movf	??_PROCULUS_Show_Screen,w
  8839  1A16  00DB               	movwf	PROCULUS_Show_Screen@vetor+2
  8840                           
  8841                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  8842  1A17  3003               	movlw	3
  8843  1A18  00D8               	movwf	??_PROCULUS_Show_Screen
  8844  1A19  0858               	movf	??_PROCULUS_Show_Screen,w
  8845  1A1A  00D2               	movwf	PROCULUS_Control_Register_Write@size
  8846  1A1B  3059               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  8847  1A1C  160A  158A  25C4   	fcall	_PROCULUS_Control_Register_Write
  8848  1A1F  0008               	return
  8849  1A20                     __end_of_PROCULUS_Show_Screen:
  8850                           
  8851                           	psect	text28
  8852  1B6B                     __ptext28:	
  8853 ;; *************** function _PROCULUS_Buzzer *****************
  8854 ;; Defined at:
  8855 ;;		line 223 in file "proculus.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;  time_ms_x_10    2   54[BANK0 ] unsigned int 
  8858 ;; Auto vars:     Size  Location     Type
  8859 ;;  vetor           2   57[BANK0 ] unsigned char [2]
  8860 ;; Return value:  Size  Location     Type
  8861 ;;                  1    wreg      void 
  8862 ;; Registers used:
  8863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8864 ;; Tracked objects:
  8865 ;;		On entry : 300/0
  8866 ;;		On exit  : 300/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8869 ;;      Params:         0       2       0       0       0
  8870 ;;      Locals:         0       2       0       0       0
  8871 ;;      Temps:          0       1       0       0       0
  8872 ;;      Totals:         0       5       0       0       0
  8873 ;;Total ram usage:        5 bytes
  8874 ;; Hardware stack levels used: 1
  8875 ;; Hardware stack levels required when called: 4
  8876 ;; This function calls:
  8877 ;;		_PROCULUS_Control_Register_Write
  8878 ;;		___lwdiv
  8879 ;; This function is called by:
  8880 ;;		_Decodify_Command
  8881 ;; This function uses a non-reentrant model
  8882 ;;
  8883                           
  8884                           
  8885                           ;psect for function _PROCULUS_Buzzer
  8886  1B6B                     _PROCULUS_Buzzer:
  8887                           
  8888                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  8889                           
  8890                           ;incstack = 0
  8891                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8892  1B6B  300A               	movlw	10
  8893  1B6C  00A0               	movwf	___lwdiv@divisor
  8894  1B6D  3000               	movlw	0
  8895  1B6E  00A1               	movwf	___lwdiv@divisor+1
  8896  1B6F  0857               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  8897  1B70  00A3               	movwf	___lwdiv@dividend+1
  8898  1B71  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  8899  1B72  00A2               	movwf	___lwdiv@dividend
  8900  1B73  160A  158A  2638  160A  158A  	fcall	___lwdiv
  8901  1B78  0821               	movf	?___lwdiv+1,w
  8902  1B79  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  8903  1B7A  0820               	movf	?___lwdiv,w
  8904  1B7B  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  8905                           
  8906                           ;proculus.c: 226:      vetor[0]=0x02;
  8907  1B7C  3002               	movlw	2
  8908  1B7D  00D8               	movwf	??_PROCULUS_Buzzer
  8909  1B7E  0858               	movf	??_PROCULUS_Buzzer,w
  8910  1B7F  00D9               	movwf	PROCULUS_Buzzer@vetor
  8911                           
  8912                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  8913  1B80  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  8914  1B81  00D8               	movwf	??_PROCULUS_Buzzer
  8915  1B82  0858               	movf	??_PROCULUS_Buzzer,w
  8916  1B83  00DA               	movwf	PROCULUS_Buzzer@vetor+1
  8917                           
  8918                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  8919  1B84  3002               	movlw	2
  8920  1B85  00D8               	movwf	??_PROCULUS_Buzzer
  8921  1B86  0858               	movf	??_PROCULUS_Buzzer,w
  8922  1B87  00D2               	movwf	PROCULUS_Control_Register_Write@size
  8923  1B88  3059               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  8924  1B89  160A  158A  25C4   	fcall	_PROCULUS_Control_Register_Write
  8925  1B8C  0008               	return
  8926  1B8D                     __end_of_PROCULUS_Buzzer:
  8927                           
  8928                           	psect	text29
  8929  1E38                     __ptext29:	
  8930 ;; *************** function ___lwdiv *****************
  8931 ;; Defined at:
  8932 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  divisor         2    0[BANK0 ] unsigned int 
  8935 ;;  dividend        2    2[BANK0 ] unsigned int 
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;  quotient        2    5[BANK0 ] unsigned int 
  8938 ;;  counter         1    7[BANK0 ] unsigned char 
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  2    0[BANK0 ] unsigned int 
  8941 ;; Registers used:
  8942 ;;		wreg, status,2, status,0
  8943 ;; Tracked objects:
  8944 ;;		On entry : 300/0
  8945 ;;		On exit  : 300/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8948 ;;      Params:         0       4       0       0       0
  8949 ;;      Locals:         0       3       0       0       0
  8950 ;;      Temps:          0       1       0       0       0
  8951 ;;      Totals:         0       8       0       0       0
  8952 ;;Total ram usage:        8 bytes
  8953 ;; Hardware stack levels used: 1
  8954 ;; Hardware stack levels required when called: 1
  8955 ;; This function calls:
  8956 ;;		Nothing
  8957 ;; This function is called by:
  8958 ;;		_ADC_Media_10bits
  8959 ;;		_PROCULUS_Buzzer
  8960 ;; This function uses a non-reentrant model
  8961 ;;
  8962                           
  8963                           
  8964                           ;psect for function ___lwdiv
  8965  1E38                     ___lwdiv:
  8966                           
  8967                           ;incstack = 0
  8968                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8969  1E38  01A5               	clrf	___lwdiv@quotient
  8970  1E39  01A6               	clrf	___lwdiv@quotient+1
  8971  1E3A  0820               	movf	___lwdiv@divisor,w
  8972  1E3B  0421               	iorwf	___lwdiv@divisor+1,w
  8973  1E3C  1903               	btfsc	3,2
  8974  1E3D  2E6F               	goto	l3938
  8975  1E3E  01A7               	clrf	___lwdiv@counter
  8976  1E3F  0AA7               	incf	___lwdiv@counter,f
  8977  1E40                     l3926:
  8978  1E40  1BA1               	btfsc	___lwdiv@divisor+1,7
  8979  1E41  2E4E               	goto	l3928
  8980  1E42  3001               	movlw	1
  8981  1E43                     u3085:
  8982  1E43  1003               	clrc
  8983  1E44  0DA0               	rlf	___lwdiv@divisor,f
  8984  1E45  0DA1               	rlf	___lwdiv@divisor+1,f
  8985  1E46  3EFF               	addlw	-1
  8986  1E47  1D03               	skipz
  8987  1E48  2E43               	goto	u3085
  8988  1E49  3001               	movlw	1
  8989  1E4A  00A4               	movwf	??___lwdiv
  8990  1E4B  0824               	movf	??___lwdiv,w
  8991  1E4C  07A7               	addwf	___lwdiv@counter,f
  8992  1E4D  2E40               	goto	l3926
  8993  1E4E                     l3928:
  8994  1E4E  3001               	movlw	1
  8995  1E4F                     u3105:
  8996  1E4F  1003               	clrc
  8997  1E50  0DA5               	rlf	___lwdiv@quotient,f
  8998  1E51  0DA6               	rlf	___lwdiv@quotient+1,f
  8999  1E52  3EFF               	addlw	-1
  9000  1E53  1D03               	skipz
  9001  1E54  2E4F               	goto	u3105
  9002  1E55  0821               	movf	___lwdiv@divisor+1,w
  9003  1E56  0223               	subwf	___lwdiv@dividend+1,w
  9004  1E57  1D03               	skipz
  9005  1E58  2E5B               	goto	u3115
  9006  1E59  0820               	movf	___lwdiv@divisor,w
  9007  1E5A  0222               	subwf	___lwdiv@dividend,w
  9008  1E5B                     u3115:
  9009  1E5B  1C03               	skipc
  9010  1E5C  2E64               	goto	l3934
  9011  1E5D  0820               	movf	___lwdiv@divisor,w
  9012  1E5E  02A2               	subwf	___lwdiv@dividend,f
  9013  1E5F  0821               	movf	___lwdiv@divisor+1,w
  9014  1E60  1C03               	skipc
  9015  1E61  03A3               	decf	___lwdiv@dividend+1,f
  9016  1E62  02A3               	subwf	___lwdiv@dividend+1,f
  9017  1E63  1425               	bsf	___lwdiv@quotient,0
  9018  1E64                     l3934:
  9019  1E64  3001               	movlw	1
  9020  1E65                     u3125:
  9021  1E65  1003               	clrc
  9022  1E66  0CA1               	rrf	___lwdiv@divisor+1,f
  9023  1E67  0CA0               	rrf	___lwdiv@divisor,f
  9024  1E68  3EFF               	addlw	-1
  9025  1E69  1D03               	skipz
  9026  1E6A  2E65               	goto	u3125
  9027  1E6B  3001               	movlw	1
  9028  1E6C  02A7               	subwf	___lwdiv@counter,f
  9029  1E6D  1D03               	btfss	3,2
  9030  1E6E  2E4E               	goto	l3928
  9031  1E6F                     l3938:
  9032  1E6F  0826               	movf	___lwdiv@quotient+1,w
  9033  1E70  00A1               	movwf	?___lwdiv+1
  9034  1E71  0825               	movf	___lwdiv@quotient,w
  9035  1E72  00A0               	movwf	?___lwdiv
  9036  1E73  0008               	return
  9037  1E74                     __end_of___lwdiv:
  9038                           
  9039                           	psect	text30
  9040  1DC4                     __ptext30:	
  9041 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9042 ;; Defined at:
  9043 ;;		line 13 in file "proculus.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;  vetor           1    wreg     PTR unsigned char 
  9046 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9047 ;;  size            1   50[BANK0 ] unsigned char 
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
  9050 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9051 ;;  i               1   53[BANK0 ] unsigned char 
  9052 ;; Return value:  Size  Location     Type
  9053 ;;                  1    wreg      void 
  9054 ;; Registers used:
  9055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9056 ;; Tracked objects:
  9057 ;;		On entry : 300/0
  9058 ;;		On exit  : 300/0
  9059 ;;		Unchanged: 0/0
  9060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9061 ;;      Params:         0       1       0       0       0
  9062 ;;      Locals:         0       2       0       0       0
  9063 ;;      Temps:          0       1       0       0       0
  9064 ;;      Totals:         0       4       0       0       0
  9065 ;;Total ram usage:        4 bytes
  9066 ;; Hardware stack levels used: 1
  9067 ;; Hardware stack levels required when called: 3
  9068 ;; This function calls:
  9069 ;;		_PROCULUS_Delay
  9070 ;;		_USART_put_int
  9071 ;;		_USART_putc
  9072 ;; This function is called by:
  9073 ;;		_PROCULUS_Buzzer
  9074 ;;		_PROCULUS_Show_Screen
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           
  9079                           ;psect for function _PROCULUS_Control_Register_Write
  9080  1DC4                     _PROCULUS_Control_Register_Write:
  9081                           
  9082                           ;incstack = 0
  9083                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  9084                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9085  1DC4  00D4               	movwf	PROCULUS_Control_Register_Write@vetor
  9086                           
  9087                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9088  1DC5  30A5               	movlw	165
  9089  1DC6  00CE               	movwf	USART_put_int@value
  9090  1DC7  305A               	movlw	90
  9091  1DC8  00CF               	movwf	USART_put_int@value+1
  9092  1DC9  160A  158A  2236  160A  158A  	fcall	_USART_put_int
  9093                           
  9094                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9095  1DCE  1283               	bcf	3,5	;RP0=0, select bank0
  9096  1DCF  0852               	movf	PROCULUS_Control_Register_Write@size,w
  9097  1DD0  3E01               	addlw	1
  9098  1DD1  160A  158A  21FB  160A  158A  	fcall	_USART_putc
  9099                           
  9100                           ;proculus.c: 16:      USART_putc(0x80);
  9101  1DD6  3080               	movlw	128
  9102  1DD7  160A  158A  21FB  160A  158A  	fcall	_USART_putc
  9103                           
  9104                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9105  1DDC  1283               	bcf	3,5	;RP0=0, select bank0
  9106  1DDD  01D5               	clrf	PROCULUS_Control_Register_Write@i
  9107  1DDE                     l3860:
  9108  1DDE  0852               	movf	PROCULUS_Control_Register_Write@size,w
  9109  1DDF  0255               	subwf	PROCULUS_Control_Register_Write@i,w
  9110  1DE0  1803               	btfsc	3,0
  9111  1DE1  2DF4               	goto	l3862
  9112                           
  9113                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9114  1DE2  0855               	movf	PROCULUS_Control_Register_Write@i,w
  9115  1DE3  0754               	addwf	PROCULUS_Control_Register_Write@vetor,w
  9116  1DE4  00D3               	movwf	??_PROCULUS_Control_Register_Write
  9117  1DE5  0853               	movf	??_PROCULUS_Control_Register_Write,w
  9118  1DE6  0084               	movwf	4
  9119  1DE7  1383               	bcf	3,7	;select IRP bank0
  9120  1DE8  0800               	movf	0,w
  9121  1DE9  160A  158A  21FB  160A  158A  	fcall	_USART_putc
  9122  1DEE  3001               	movlw	1
  9123  1DEF  1283               	bcf	3,5	;RP0=0, select bank0
  9124  1DF0  00D3               	movwf	??_PROCULUS_Control_Register_Write
  9125  1DF1  0853               	movf	??_PROCULUS_Control_Register_Write,w
  9126  1DF2  07D5               	addwf	PROCULUS_Control_Register_Write@i,f
  9127  1DF3  2DDE               	goto	l3860
  9128  1DF4                     l3862:
  9129                           
  9130                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9131  1DF4  3001               	movlw	1
  9132  1DF5  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9133  1DF6  3000               	movlw	0
  9134  1DF7  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9135  1DF8  160A  158A  22AD   	fcall	_PROCULUS_Delay
  9136  1DFB  0008               	return
  9137  1DFC                     __end_of_PROCULUS_Control_Register_Write:
  9138                           
  9139                           	psect	text31
  9140  1A36                     __ptext31:	
  9141 ;; *************** function _USART_put_int *****************
  9142 ;; Defined at:
  9143 ;;		line 137 in file "usart.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;  value           2   46[BANK0 ] int 
  9146 ;; Auto vars:     Size  Location     Type
  9147 ;;  dado            1   49[BANK0 ] PTR unsigned char 
  9148 ;;		 -> USART_put_int@value(2), 
  9149 ;; Return value:  Size  Location     Type
  9150 ;;                  1    wreg      void 
  9151 ;; Registers used:
  9152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9153 ;; Tracked objects:
  9154 ;;		On entry : 300/0
  9155 ;;		On exit  : 300/100
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9158 ;;      Params:         0       2       0       0       0
  9159 ;;      Locals:         0       1       0       0       0
  9160 ;;      Temps:          0       1       0       0       0
  9161 ;;      Totals:         0       4       0       0       0
  9162 ;;Total ram usage:        4 bytes
  9163 ;; Hardware stack levels used: 1
  9164 ;; Hardware stack levels required when called: 2
  9165 ;; This function calls:
  9166 ;;		_USART_putc
  9167 ;; This function is called by:
  9168 ;;		_Decodify_Command
  9169 ;;		_PROCULUS_Control_Register_Write
  9170 ;;		_PROCULUS_VP_Write
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           
  9175                           ;psect for function _USART_put_int
  9176  1A36                     _USART_put_int:
  9177                           
  9178                           ;usart.c: 138:      char *dado;;usart.c: 139:      dado=(char*)&value;
  9179                           
  9180                           ;incstack = 0
  9181                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9182  1A36  304E               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9183  1A37  00D0               	movwf	??_USART_put_int
  9184  1A38  0850               	movf	??_USART_put_int,w
  9185  1A39  00D1               	movwf	USART_put_int@dado
  9186                           
  9187                           ;usart.c: 140:      USART_putc(*(dado+1));
  9188  1A3A  0A51               	incf	USART_put_int@dado,w
  9189  1A3B  0084               	movwf	4
  9190  1A3C  1383               	bcf	3,7	;select IRP bank0
  9191  1A3D  0800               	movf	0,w
  9192  1A3E  160A  158A  21FB  160A  158A  	fcall	_USART_putc
  9193                           
  9194                           ;usart.c: 141:      USART_putc(*dado);
  9195  1A43  1283               	bcf	3,5	;RP0=0, select bank0
  9196  1A44  0851               	movf	USART_put_int@dado,w
  9197  1A45  0084               	movwf	4
  9198  1A46  1383               	bcf	3,7	;select IRP bank0
  9199  1A47  0800               	movf	0,w
  9200  1A48  160A  158A  21FB   	fcall	_USART_putc
  9201  1A4B  0008               	return
  9202  1A4C                     __end_of_USART_put_int:
  9203                           
  9204                           	psect	text32
  9205  1AAD                     __ptext32:	
  9206 ;; *************** function _PROCULUS_Delay *****************
  9207 ;; Defined at:
  9208 ;;		line 267 in file "proculus.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9211 ;; Auto vars:     Size  Location     Type
  9212 ;;  i               2    4[BANK0 ] unsigned int 
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  1    wreg      void 
  9215 ;; Registers used:
  9216 ;;		wreg, status,2
  9217 ;; Tracked objects:
  9218 ;;		On entry : 300/800
  9219 ;;		On exit  : 300/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9222 ;;      Params:         0       2       0       0       0
  9223 ;;      Locals:         0       2       0       0       0
  9224 ;;      Temps:          0       2       0       0       0
  9225 ;;      Totals:         0       6       0       0       0
  9226 ;;Total ram usage:        6 bytes
  9227 ;; Hardware stack levels used: 1
  9228 ;; Hardware stack levels required when called: 1
  9229 ;; This function calls:
  9230 ;;		Nothing
  9231 ;; This function is called by:
  9232 ;;		_PROCULUS_Control_Register_Write
  9233 ;;		_PROCULUS_VP_Write
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237                           
  9238                           ;psect for function _PROCULUS_Delay
  9239  1AAD                     _PROCULUS_Delay:
  9240                           
  9241                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9242                           
  9243                           ;incstack = 0
  9244                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
  9245  1AAD  01A4               	clrf	PROCULUS_Delay@i
  9246  1AAE  01A5               	clrf	PROCULUS_Delay@i+1
  9247  1AAF                     l789:
  9248  1AAF  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9249  1AB0  0225               	subwf	PROCULUS_Delay@i+1,w
  9250  1AB1  1D03               	skipz
  9251  1AB2  2AB5               	goto	u2775
  9252  1AB3  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9253  1AB4  0224               	subwf	PROCULUS_Delay@i,w
  9254  1AB5                     u2775:
  9255  1AB5  1803               	btfsc	3,0
  9256  1AB6  0008               	return
  9257                           
  9258                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9259  1AB7  3003               	movlw	3
  9260  1AB8  1283               	bcf	3,5	;RP0=0, select bank0
  9261  1AB9  1303               	bcf	3,6	;RP1=0, select bank0
  9262  1ABA  00A3               	movwf	??_PROCULUS_Delay+1
  9263  1ABB  3097               	movlw	151
  9264  1ABC  00A2               	movwf	??_PROCULUS_Delay
  9265  1ABD                     u5417:
  9266  1ABD  0BA2               	decfsz	??_PROCULUS_Delay,f
  9267  1ABE  2ABD               	goto	u5417
  9268  1ABF  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9269  1AC0  2ABD               	goto	u5417
  9270                           
  9271                           ;proculus.c: 270:     }
  9272  1AC1  3001               	movlw	1
  9273  1AC2  1283               	bcf	3,5	;RP0=0, select bank0
  9274  1AC3  1303               	bcf	3,6	;RP1=0, select bank0
  9275  1AC4  07A4               	addwf	PROCULUS_Delay@i,f
  9276  1AC5  1803               	skipnc
  9277  1AC6  0AA5               	incf	PROCULUS_Delay@i+1,f
  9278  1AC7  3000               	movlw	0
  9279  1AC8  07A5               	addwf	PROCULUS_Delay@i+1,f
  9280  1AC9  2AAF               	goto	l789
  9281  1ACA                     __end_of_PROCULUS_Delay:
  9282                           
  9283                           	psect	text33
  9284  1C2A                     __ptext33:	
  9285 ;; *************** function _EEPROM_Write_String *****************
  9286 ;; Defined at:
  9287 ;;		line 97 in file "eeprom.c"
  9288 ;; Parameters:    Size  Location     Type
  9289 ;;  addr            1    wreg     unsigned char 
  9290 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9291 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;  addr            1    7[BANK0 ] unsigned char 
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  1    wreg      void 
  9296 ;; Registers used:
  9297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9298 ;; Tracked objects:
  9299 ;;		On entry : 300/300
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9303 ;;      Params:         0       1       0       0       0
  9304 ;;      Locals:         0       1       0       0       0
  9305 ;;      Temps:          0       1       0       0       0
  9306 ;;      Totals:         0       3       0       0       0
  9307 ;;Total ram usage:        3 bytes
  9308 ;; Hardware stack levels used: 1
  9309 ;; Hardware stack levels required when called: 2
  9310 ;; This function calls:
  9311 ;;		_EEPROM_Write_Byte
  9312 ;; This function is called by:
  9313 ;;		_Decodify_Command
  9314 ;; This function uses a non-reentrant model
  9315 ;;
  9316                           
  9317                           
  9318                           ;psect for function _EEPROM_Write_String
  9319  1C2A                     _EEPROM_Write_String:
  9320                           
  9321                           ;incstack = 0
  9322                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9323                           ;EEPROM_Write_String@addr stored from wreg
  9324  1C2A  1283               	bcf	3,5	;RP0=0, select bank0
  9325  1C2B  1303               	bcf	3,6	;RP1=0, select bank0
  9326  1C2C  00A7               	movwf	EEPROM_Write_String@addr
  9327  1C2D                     l4690:	
  9328                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9329                           
  9330                           
  9331                           ;eeprom.c: 99:     while(*dado)
  9332  1C2D  0825               	movf	EEPROM_Write_String@dado,w
  9333  1C2E  0084               	movwf	4
  9334  1C2F  1783               	bsf	3,7	;select IRP bank2
  9335  1C30  0800               	movf	0,w
  9336  1C31  1903               	btfsc	3,2
  9337  1C32  2C4A               	goto	l4692
  9338                           
  9339                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9340  1C33  0825               	movf	EEPROM_Write_String@dado,w
  9341  1C34  0084               	movwf	4
  9342  1C35  0800               	movf	0,w
  9343  1C36  00A6               	movwf	??_EEPROM_Write_String
  9344  1C37  0826               	movf	??_EEPROM_Write_String,w
  9345  1C38  00A0               	movwf	EEPROM_Write_Byte@dado
  9346  1C39  0827               	movf	EEPROM_Write_String@addr,w
  9347  1C3A  160A  158A  25FC  160A  158A  	fcall	_EEPROM_Write_Byte
  9348                           
  9349                           ;eeprom.c: 102:      addr++;
  9350  1C3F  3001               	movlw	1
  9351  1C40  1283               	bcf	3,5	;RP0=0, select bank0
  9352  1C41  1303               	bcf	3,6	;RP1=0, select bank0
  9353  1C42  00A6               	movwf	??_EEPROM_Write_String
  9354  1C43  0826               	movf	??_EEPROM_Write_String,w
  9355  1C44  07A7               	addwf	EEPROM_Write_String@addr,f
  9356                           
  9357                           ;eeprom.c: 103:      dado++;
  9358  1C45  3001               	movlw	1
  9359  1C46  00A6               	movwf	??_EEPROM_Write_String
  9360  1C47  0826               	movf	??_EEPROM_Write_String,w
  9361  1C48  07A5               	addwf	EEPROM_Write_String@dado,f
  9362  1C49  2C2D               	goto	l4690
  9363  1C4A                     l4692:
  9364                           
  9365                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9366  1C4A  0825               	movf	EEPROM_Write_String@dado,w
  9367  1C4B  0084               	movwf	4
  9368  1C4C  0800               	movf	0,w
  9369  1C4D  00A6               	movwf	??_EEPROM_Write_String
  9370  1C4E  0826               	movf	??_EEPROM_Write_String,w
  9371  1C4F  00A0               	movwf	EEPROM_Write_Byte@dado
  9372  1C50  0827               	movf	EEPROM_Write_String@addr,w
  9373  1C51  160A  158A  25FC   	fcall	_EEPROM_Write_Byte
  9374  1C54  0008               	return
  9375  1C55                     __end_of_EEPROM_Write_String:
  9376                           
  9377                           	psect	text34
  9378  1C86                     __ptext34:	
  9379 ;; *************** function _EEPROM_Write_Integer *****************
  9380 ;; Defined at:
  9381 ;;		line 68 in file "eeprom.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;  addr            1    wreg     unsigned char 
  9384 ;;  dado            2    5[BANK0 ] unsigned int 
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;  addr            1   10[BANK0 ] unsigned char 
  9387 ;;  i               1   11[BANK0 ] unsigned char 
  9388 ;;  ptr             1    9[BANK0 ] PTR unsigned char 
  9389 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9390 ;;  addr_memo       1    0        unsigned char 
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  1    wreg      void 
  9393 ;; Registers used:
  9394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9395 ;; Tracked objects:
  9396 ;;		On entry : 200/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9400 ;;      Params:         0       2       0       0       0
  9401 ;;      Locals:         0       3       0       0       0
  9402 ;;      Temps:          0       2       0       0       0
  9403 ;;      Totals:         0       7       0       0       0
  9404 ;;Total ram usage:        7 bytes
  9405 ;; Hardware stack levels used: 1
  9406 ;; Hardware stack levels required when called: 2
  9407 ;; This function calls:
  9408 ;;		_EEPROM_Write_Byte
  9409 ;; This function is called by:
  9410 ;;		_main
  9411 ;;		_Decodify_Command
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           
  9416                           ;psect for function _EEPROM_Write_Integer
  9417  1C86                     _EEPROM_Write_Integer:
  9418                           
  9419                           ;incstack = 0
  9420                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9421                           ;EEPROM_Write_Integer@addr stored from wreg
  9422  1C86  1283               	bcf	3,5	;RP0=0, select bank0
  9423  1C87  00AA               	movwf	EEPROM_Write_Integer@addr
  9424                           
  9425                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9426  1C88  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9427  1C89  00A7               	movwf	??_EEPROM_Write_Integer
  9428  1C8A  0827               	movf	??_EEPROM_Write_Integer,w
  9429  1C8B  00A9               	movwf	EEPROM_Write_Integer@ptr
  9430                           
  9431                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9432  1C8C  01AB               	clrf	EEPROM_Write_Integer@i
  9433  1C8D                     l4640:
  9434                           
  9435                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9436  1C8D  0829               	movf	EEPROM_Write_Integer@ptr,w
  9437  1C8E  0084               	movwf	4
  9438  1C8F  1383               	bcf	3,7	;select IRP bank0
  9439  1C90  0800               	movf	0,w
  9440  1C91  00A7               	movwf	??_EEPROM_Write_Integer
  9441  1C92  0827               	movf	??_EEPROM_Write_Integer,w
  9442  1C93  00A0               	movwf	EEPROM_Write_Byte@dado
  9443  1C94  082A               	movf	EEPROM_Write_Integer@addr,w
  9444  1C95  160A  158A  25FC  160A  158A  	fcall	_EEPROM_Write_Byte
  9445  1C9A  3001               	movlw	1
  9446  1C9B  1283               	bcf	3,5	;RP0=0, select bank0
  9447  1C9C  1303               	bcf	3,6	;RP1=0, select bank0
  9448  1C9D  00A7               	movwf	??_EEPROM_Write_Integer
  9449  1C9E  0827               	movf	??_EEPROM_Write_Integer,w
  9450  1C9F  07A9               	addwf	EEPROM_Write_Integer@ptr,f
  9451  1CA0  3001               	movlw	1
  9452  1CA1  00A7               	movwf	??_EEPROM_Write_Integer
  9453  1CA2  0827               	movf	??_EEPROM_Write_Integer,w
  9454  1CA3  07AA               	addwf	EEPROM_Write_Integer@addr,f
  9455  1CA4  3001               	movlw	1
  9456  1CA5  00A7               	movwf	??_EEPROM_Write_Integer
  9457  1CA6  0827               	movf	??_EEPROM_Write_Integer,w
  9458  1CA7  07AB               	addwf	EEPROM_Write_Integer@i,f
  9459  1CA8  3002               	movlw	2
  9460  1CA9  022B               	subwf	EEPROM_Write_Integer@i,w
  9461  1CAA  1C03               	skipc
  9462  1CAB  2C8D               	goto	l4640
  9463                           
  9464                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9465  1CAC  304E               	movlw	78
  9466  1CAD  1283               	bcf	3,5	;RP0=0, select bank0
  9467  1CAE  1303               	bcf	3,6	;RP1=0, select bank0
  9468  1CAF  00A8               	movwf	??_EEPROM_Write_Integer+1
  9469  1CB0  30EA               	movlw	234
  9470  1CB1  00A7               	movwf	??_EEPROM_Write_Integer
  9471  1CB2                     u5427:
  9472  1CB2  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9473  1CB3  2CB2               	goto	u5427
  9474  1CB4  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9475  1CB5  2CB2               	goto	u5427
  9476  1CB6  0000               	nop
  9477  1CB7  0008               	return
  9478  1CB8                     __end_of_EEPROM_Write_Integer:
  9479                           
  9480                           	psect	text35
  9481  1DFC                     __ptext35:	
  9482 ;; *************** function _EEPROM_Write_Byte *****************
  9483 ;; Defined at:
  9484 ;;		line 21 in file "eeprom.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;  addr            1    wreg     unsigned char 
  9487 ;;  dado            1    0[BANK0 ] unsigned char 
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;  addr            1    3[BANK0 ] unsigned char 
  9490 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9491 ;; Return value:  Size  Location     Type
  9492 ;;                  1    wreg      void 
  9493 ;; Registers used:
  9494 ;;		wreg, status,2, status,0
  9495 ;; Tracked objects:
  9496 ;;		On entry : 0/300
  9497 ;;		On exit  : 0/0
  9498 ;;		Unchanged: 0/0
  9499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9500 ;;      Params:         0       1       0       0       0
  9501 ;;      Locals:         0       2       0       0       0
  9502 ;;      Temps:          0       2       0       0       0
  9503 ;;      Totals:         0       5       0       0       0
  9504 ;;Total ram usage:        5 bytes
  9505 ;; Hardware stack levels used: 1
  9506 ;; Hardware stack levels required when called: 1
  9507 ;; This function calls:
  9508 ;;		Nothing
  9509 ;; This function is called by:
  9510 ;;		_Decodify_Command
  9511 ;;		_EEPROM_Write_Integer
  9512 ;;		_EEPROM_Write_String
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516                           
  9517                           ;psect for function _EEPROM_Write_Byte
  9518  1DFC                     _EEPROM_Write_Byte:
  9519                           
  9520                           ;incstack = 0
  9521                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9522                           ;EEPROM_Write_Byte@addr stored from wreg
  9523  1DFC  1283               	bcf	3,5	;RP0=0, select bank0
  9524  1DFD  1303               	bcf	3,6	;RP1=0, select bank0
  9525  1DFE  00A3               	movwf	EEPROM_Write_Byte@addr
  9526                           
  9527                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9528  1DFF  3014               	movlw	20
  9529  1E00  1683               	bsf	3,5	;RP0=1, select bank1
  9530  1E01  00D1               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9531  1E02  3000               	movlw	0
  9532  1E03  00D2               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9533  1E04                     l508:	
  9534                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9535                           
  9536  1E04  1703               	bsf	3,6	;RP1=1, select bank3
  9537  1E05  188C               	btfsc	12,1	;volsfr
  9538  1E06  2E04               	goto	l508
  9539                           
  9540                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9541  1E07  1F8B               	btfss	11,7	;volatile
  9542  1E08  2E0E               	goto	l3792
  9543                           
  9544                           ;eeprom.c: 28:           last_GIE=1;
  9545  1E09  1283               	bcf	3,5	;RP0=0, select bank0
  9546  1E0A  1303               	bcf	3,6	;RP1=0, select bank0
  9547  1E0B  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9548  1E0C  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9549  1E0D  2E11               	goto	l3794
  9550  1E0E                     l3792:
  9551                           
  9552                           ;eeprom.c: 30:           last_GIE=0;
  9553  1E0E  1283               	bcf	3,5	;RP0=0, select bank0
  9554  1E0F  1303               	bcf	3,6	;RP1=0, select bank0
  9555  1E10  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9556  1E11                     l3794:
  9557                           
  9558                           ;eeprom.c: 32:        EEADR=addr;
  9559  1E11  0823               	movf	EEPROM_Write_Byte@addr,w
  9560  1E12  1703               	bsf	3,6	;RP1=1, select bank2
  9561  1E13  008D               	movwf	13	;volatile
  9562                           
  9563                           ;eeprom.c: 33:        EEDATA=dado;
  9564  1E14  1303               	bcf	3,6	;RP1=0, select bank0
  9565  1E15  0820               	movf	EEPROM_Write_Byte@dado,w
  9566  1E16  1703               	bsf	3,6	;RP1=1, select bank2
  9567  1E17  008C               	movwf	12	;volatile
  9568                           
  9569                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9570  1E18  1683               	bsf	3,5	;RP0=1, select bank3
  9571  1E19  138C               	bcf	12,7	;volsfr
  9572                           
  9573                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9574  1E1A  150C               	bsf	12,2	;volsfr
  9575                           
  9576                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9577  1E1B  138B               	bcf	11,7	;volatile
  9578                           
  9579                           ;eeprom.c: 37:        EECON2=0x55;
  9580  1E1C  3055               	movlw	85
  9581  1E1D  008D               	movwf	13	;volsfr
  9582                           
  9583                           ;eeprom.c: 38:        EECON2=0xAA;
  9584  1E1E  30AA               	movlw	170
  9585  1E1F  008D               	movwf	13	;volsfr
  9586                           
  9587                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9588  1E20  148C               	bsf	12,1	;volsfr
  9589                           
  9590                           ;eeprom.c: 41:        if(last_GIE==1)
  9591  1E21  1283               	bcf	3,5	;RP0=0, select bank0
  9592  1E22  1303               	bcf	3,6	;RP1=0, select bank0
  9593  1E23  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9594  1E24  1D03               	btfss	3,2
  9595  1E25  2E28               	goto	l513
  9596                           
  9597                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9598  1E26  178B               	bsf	11,7	;volatile
  9599  1E27  2E29               	goto	l514
  9600  1E28                     l513:	
  9601                           ;eeprom.c: 43:        else
  9602                           
  9603                           
  9604                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9605  1E28  138B               	bcf	11,7	;volatile
  9606  1E29                     l514:
  9607                           
  9608                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9609  1E29  1683               	bsf	3,5	;RP0=1, select bank3
  9610  1E2A  1703               	bsf	3,6	;RP1=1, select bank3
  9611  1E2B  110C               	bcf	12,2	;volsfr
  9612                           
  9613                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9614  1E2C  304E               	movlw	78
  9615  1E2D  1283               	bcf	3,5	;RP0=0, select bank0
  9616  1E2E  1303               	bcf	3,6	;RP1=0, select bank0
  9617  1E2F  00A2               	movwf	??_EEPROM_Write_Byte+1
  9618  1E30  30EA               	movlw	234
  9619  1E31  00A1               	movwf	??_EEPROM_Write_Byte
  9620  1E32                     u5437:
  9621  1E32  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9622  1E33  2E32               	goto	u5437
  9623  1E34  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9624  1E35  2E32               	goto	u5437
  9625  1E36  0000               	nop
  9626  1E37  0008               	return
  9627  1E38                     __end_of_EEPROM_Write_Byte:
  9628                           
  9629                           	psect	text36
  9630  1B08                     __ptext36:	
  9631 ;; *************** function _EEPROM_Read_String *****************
  9632 ;; Defined at:
  9633 ;;		line 109 in file "eeprom.c"
  9634 ;; Parameters:    Size  Location     Type
  9635 ;;  addr            1    wreg     unsigned char 
  9636 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  9637 ;;		 -> buffer(33), 
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;  addr            1    5[BANK0 ] unsigned char 
  9640 ;;  c               1    6[BANK0 ] unsigned char 
  9641 ;; Return value:  Size  Location     Type
  9642 ;;                  1    wreg      void 
  9643 ;; Registers used:
  9644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9645 ;; Tracked objects:
  9646 ;;		On entry : 300/300
  9647 ;;		On exit  : B00/800
  9648 ;;		Unchanged: 0/0
  9649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9650 ;;      Params:         0       1       0       0       0
  9651 ;;      Locals:         0       2       0       0       0
  9652 ;;      Temps:          0       1       0       0       0
  9653 ;;      Totals:         0       4       0       0       0
  9654 ;;Total ram usage:        4 bytes
  9655 ;; Hardware stack levels used: 1
  9656 ;; Hardware stack levels required when called: 2
  9657 ;; This function calls:
  9658 ;;		_EEPROM_Read_Byte
  9659 ;; This function is called by:
  9660 ;;		_Decodify_Command
  9661 ;; This function uses a non-reentrant model
  9662 ;;
  9663                           
  9664                           
  9665                           ;psect for function _EEPROM_Read_String
  9666  1B08                     _EEPROM_Read_String:
  9667                           
  9668                           ;incstack = 0
  9669                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9670                           ;EEPROM_Read_String@addr stored from wreg
  9671  1B08  1283               	bcf	3,5	;RP0=0, select bank0
  9672  1B09  1303               	bcf	3,6	;RP1=0, select bank0
  9673  1B0A  00A5               	movwf	EEPROM_Read_String@addr
  9674  1B0B                     l540:	
  9675                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
  9676                           
  9677                           
  9678                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
  9679  1B0B  0825               	movf	EEPROM_Read_String@addr,w
  9680  1B0C  160A  158A  2349  160A  158A  	fcall	_EEPROM_Read_Byte
  9681  1B11  1303               	bcf	3,6	;RP1=0, select bank0
  9682  1B12  00A4               	movwf	??_EEPROM_Read_String
  9683  1B13  0824               	movf	??_EEPROM_Read_String,w
  9684  1B14  00A6               	movwf	EEPROM_Read_String@c
  9685  1B15  3001               	movlw	1
  9686  1B16  00A4               	movwf	??_EEPROM_Read_String
  9687  1B17  0824               	movf	??_EEPROM_Read_String,w
  9688  1B18  07A5               	addwf	EEPROM_Read_String@addr,f
  9689                           
  9690                           ;eeprom.c: 114:         *(dado++)=c;
  9691  1B19  0826               	movf	EEPROM_Read_String@c,w
  9692  1B1A  00A4               	movwf	??_EEPROM_Read_String
  9693  1B1B  0823               	movf	EEPROM_Read_String@dado,w
  9694  1B1C  0084               	movwf	4
  9695  1B1D  0824               	movf	??_EEPROM_Read_String,w
  9696  1B1E  1783               	bsf	3,7	;select IRP bank2
  9697  1B1F  0080               	movwf	0
  9698  1B20  3001               	movlw	1
  9699  1B21  00A4               	movwf	??_EEPROM_Read_String
  9700  1B22  0824               	movf	??_EEPROM_Read_String,w
  9701  1B23  07A3               	addwf	EEPROM_Read_String@dado,f
  9702                           
  9703                           ;eeprom.c: 116:       }while(c);
  9704  1B24  0826               	movf	EEPROM_Read_String@c,w
  9705  1B25  1903               	btfsc	3,2
  9706  1B26  0008               	return
  9707  1B27  2B0B               	goto	l540
  9708  1B28                     __end_of_EEPROM_Read_String:
  9709                           
  9710                           	psect	text37
  9711  1C00                     __ptext37:	
  9712 ;; *************** function _EEPROM_Read_Integer *****************
  9713 ;; Defined at:
  9714 ;;		line 81 in file "eeprom.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;  addr            1    wreg     unsigned char 
  9717 ;; Auto vars:     Size  Location     Type
  9718 ;;  addr            1    6[BANK0 ] unsigned char 
  9719 ;;  result          2    8[BANK0 ] unsigned int 
  9720 ;;  i               1   10[BANK0 ] unsigned char 
  9721 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  9722 ;;		 -> EEPROM_Read_Integer@result(2), 
  9723 ;; Return value:  Size  Location     Type
  9724 ;;                  2    3[BANK0 ] unsigned int 
  9725 ;; Registers used:
  9726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : B00/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9732 ;;      Params:         0       2       0       0       0
  9733 ;;      Locals:         0       5       0       0       0
  9734 ;;      Temps:          0       1       0       0       0
  9735 ;;      Totals:         0       8       0       0       0
  9736 ;;Total ram usage:        8 bytes
  9737 ;; Hardware stack levels used: 1
  9738 ;; Hardware stack levels required when called: 2
  9739 ;; This function calls:
  9740 ;;		_EEPROM_Read_Byte
  9741 ;; This function is called by:
  9742 ;;		_main
  9743 ;;		_Decodify_Command
  9744 ;; This function uses a non-reentrant model
  9745 ;;
  9746                           
  9747                           
  9748                           ;psect for function _EEPROM_Read_Integer
  9749  1C00                     _EEPROM_Read_Integer:
  9750                           
  9751                           ;incstack = 0
  9752                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9753                           ;EEPROM_Read_Integer@addr stored from wreg
  9754  1C00  1283               	bcf	3,5	;RP0=0, select bank0
  9755  1C01  1303               	bcf	3,6	;RP1=0, select bank0
  9756  1C02  00A6               	movwf	EEPROM_Read_Integer@addr
  9757                           
  9758                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
  9759  1C03  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
  9760  1C04  00A5               	movwf	??_EEPROM_Read_Integer
  9761  1C05  0825               	movf	??_EEPROM_Read_Integer,w
  9762  1C06  00A7               	movwf	EEPROM_Read_Integer@ptr
  9763                           
  9764                           ;eeprom.c: 87:       for (i=0;i<2;i++)
  9765  1C07  01AA               	clrf	EEPROM_Read_Integer@i
  9766  1C08                     l4616:
  9767                           
  9768                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
  9769  1C08  0826               	movf	EEPROM_Read_Integer@addr,w
  9770  1C09  160A  158A  2349  160A  158A  	fcall	_EEPROM_Read_Byte
  9771  1C0E  1303               	bcf	3,6	;RP1=0, select bank0
  9772  1C0F  00A5               	movwf	??_EEPROM_Read_Integer
  9773  1C10  0827               	movf	EEPROM_Read_Integer@ptr,w
  9774  1C11  0084               	movwf	4
  9775  1C12  0825               	movf	??_EEPROM_Read_Integer,w
  9776  1C13  1383               	bcf	3,7	;select IRP bank0
  9777  1C14  0080               	movwf	0
  9778  1C15  3001               	movlw	1
  9779  1C16  00A5               	movwf	??_EEPROM_Read_Integer
  9780  1C17  0825               	movf	??_EEPROM_Read_Integer,w
  9781  1C18  07A6               	addwf	EEPROM_Read_Integer@addr,f
  9782  1C19  3001               	movlw	1
  9783  1C1A  00A5               	movwf	??_EEPROM_Read_Integer
  9784  1C1B  0825               	movf	??_EEPROM_Read_Integer,w
  9785  1C1C  07A7               	addwf	EEPROM_Read_Integer@ptr,f
  9786  1C1D  3001               	movlw	1
  9787  1C1E  00A5               	movwf	??_EEPROM_Read_Integer
  9788  1C1F  0825               	movf	??_EEPROM_Read_Integer,w
  9789  1C20  07AA               	addwf	EEPROM_Read_Integer@i,f
  9790  1C21  3002               	movlw	2
  9791  1C22  022A               	subwf	EEPROM_Read_Integer@i,w
  9792  1C23  1C03               	skipc
  9793  1C24  2C08               	goto	l4616
  9794                           
  9795                           ;eeprom.c: 89:       return result;
  9796  1C25  0829               	movf	EEPROM_Read_Integer@result+1,w
  9797  1C26  00A4               	movwf	?_EEPROM_Read_Integer+1
  9798  1C27  0828               	movf	EEPROM_Read_Integer@result,w
  9799  1C28  00A3               	movwf	?_EEPROM_Read_Integer
  9800  1C29  0008               	return
  9801  1C2A                     __end_of_EEPROM_Read_Integer:
  9802                           
  9803                           	psect	text38
  9804  1B49                     __ptext38:	
  9805 ;; *************** function _EEPROM_Read_Byte *****************
  9806 ;; Defined at:
  9807 ;;		line 52 in file "eeprom.c"
  9808 ;; Parameters:    Size  Location     Type
  9809 ;;  addr            1    wreg     unsigned char 
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;  addr            1    2[BANK0 ] unsigned char 
  9812 ;; Return value:  Size  Location     Type
  9813 ;;                  1    wreg      unsigned char 
  9814 ;; Registers used:
  9815 ;;		wreg
  9816 ;; Tracked objects:
  9817 ;;		On entry : 0/300
  9818 ;;		On exit  : 300/200
  9819 ;;		Unchanged: 0/0
  9820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9821 ;;      Params:         0       0       0       0       0
  9822 ;;      Locals:         0       1       0       0       0
  9823 ;;      Temps:          0       2       0       0       0
  9824 ;;      Totals:         0       3       0       0       0
  9825 ;;Total ram usage:        3 bytes
  9826 ;; Hardware stack levels used: 1
  9827 ;; Hardware stack levels required when called: 1
  9828 ;; This function calls:
  9829 ;;		Nothing
  9830 ;; This function is called by:
  9831 ;;		_Decodify_Command
  9832 ;;		_EEPROM_Read_Integer
  9833 ;;		_EEPROM_Read_String
  9834 ;; This function uses a non-reentrant model
  9835 ;;
  9836                           
  9837                           
  9838                           ;psect for function _EEPROM_Read_Byte
  9839  1B49                     _EEPROM_Read_Byte:
  9840                           
  9841                           ;incstack = 0
  9842                           ; Regs used in _EEPROM_Read_Byte: [wreg]
  9843                           ;EEPROM_Read_Byte@addr stored from wreg
  9844  1B49  1283               	bcf	3,5	;RP0=0, select bank0
  9845  1B4A  1303               	bcf	3,6	;RP1=0, select bank0
  9846  1B4B  00A2               	movwf	EEPROM_Read_Byte@addr
  9847                           
  9848                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
  9849  1B4C  3014               	movlw	20
  9850  1B4D  1683               	bsf	3,5	;RP0=1, select bank1
  9851  1B4E  00D1               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9852  1B4F  3000               	movlw	0
  9853  1B50  00D2               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9854  1B51                     l518:	
  9855                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
  9856                           
  9857  1B51  1703               	bsf	3,6	;RP1=1, select bank3
  9858  1B52  188C               	btfsc	12,1	;volsfr
  9859  1B53  2B51               	goto	l518
  9860                           
  9861                           ;eeprom.c: 57:    EEADR=addr;
  9862  1B54  1283               	bcf	3,5	;RP0=0, select bank0
  9863  1B55  1303               	bcf	3,6	;RP1=0, select bank0
  9864  1B56  0822               	movf	EEPROM_Read_Byte@addr,w
  9865  1B57  1703               	bsf	3,6	;RP1=1, select bank2
  9866  1B58  008D               	movwf	13	;volatile
  9867                           
  9868                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
  9869  1B59  1683               	bsf	3,5	;RP0=1, select bank3
  9870  1B5A  138C               	bcf	12,7	;volsfr
  9871                           
  9872                           ;eeprom.c: 59:    EECON1bits.RD=1;
  9873  1B5B  140C               	bsf	12,0	;volsfr
  9874                           
  9875                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
  9876  1B5C  304E               	movlw	78
  9877  1B5D  1283               	bcf	3,5	;RP0=0, select bank0
  9878  1B5E  1303               	bcf	3,6	;RP1=0, select bank0
  9879  1B5F  00A1               	movwf	??_EEPROM_Read_Byte+1
  9880  1B60  30EA               	movlw	234
  9881  1B61  00A0               	movwf	??_EEPROM_Read_Byte
  9882  1B62                     u5447:
  9883  1B62  0BA0               	decfsz	??_EEPROM_Read_Byte,f
  9884  1B63  2B62               	goto	u5447
  9885  1B64  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
  9886  1B65  2B62               	goto	u5447
  9887  1B66  0000               	nop
  9888                           
  9889                           ;eeprom.c: 61:    return EEDATA;
  9890  1B67  1283               	bcf	3,5	;RP0=0, select bank2
  9891  1B68  1703               	bsf	3,6	;RP1=1, select bank2
  9892  1B69  080C               	movf	12,w	;volatile
  9893  1B6A  0008               	return
  9894  1B6B                     __end_of_EEPROM_Read_Byte:
  9895                           
  9896                           	psect	text39
  9897  06BD                     __ptext39:	
  9898 ;; *************** function _EEPROM_24C1025_Write_Str *****************
  9899 ;; Defined at:
  9900 ;;		line 220 in file "EEPROM_24C1025.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;  chip_add        1    wreg     unsigned char 
  9903 ;;  mem_add         4   10[BANK0 ] unsigned long 
  9904 ;;  data            1   14[BANK0 ] PTR unsigned char 
  9905 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;  chip_add        1   17[BANK0 ] unsigned char 
  9908 ;;  ctrl            1   19[BANK0 ] unsigned char 
  9909 ;;  range           1   18[BANK0 ] unsigned char 
  9910 ;; Return value:  Size  Location     Type
  9911 ;;                  1    wreg      void 
  9912 ;; Registers used:
  9913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9914 ;; Tracked objects:
  9915 ;;		On entry : 300/300
  9916 ;;		On exit  : 0/0
  9917 ;;		Unchanged: 0/0
  9918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9919 ;;      Params:         0       5       0       0       0
  9920 ;;      Locals:         0       3       0       0       0
  9921 ;;      Temps:          0       2       0       0       0
  9922 ;;      Totals:         0      10       0       0       0
  9923 ;;Total ram usage:       10 bytes
  9924 ;; Hardware stack levels used: 1
  9925 ;; Hardware stack levels required when called: 3
  9926 ;; This function calls:
  9927 ;;		_I2C_Master_Start
  9928 ;;		_I2C_Master_Stop
  9929 ;;		_I2C_Master_Write
  9930 ;;		_my_delay_ms_WDT
  9931 ;; This function is called by:
  9932 ;;		_Decodify_Command
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           
  9937                           ;psect for function _EEPROM_24C1025_Write_Str
  9938  06BD                     _EEPROM_24C1025_Write_Str:
  9939                           
  9940                           ;incstack = 0
  9941                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  9942                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
  9943  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  9944  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  9945  06BF  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
  9946                           
  9947                           ;EEPROM_24C1025.c: 222:      unsigned char ctrl;;EEPROM_24C1025.c: 224:      if(mem_add>
      +                          0x1FFFF) return;
  9948  06C0  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9949  06C1  1D03               	btfss	3,2
  9950  06C2  0008               	return
  9951  06C3  3002               	movlw	2
  9952  06C4  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9953  06C5  1D03               	skipz
  9954  06C6  2ECF               	goto	u4163
  9955  06C7  3000               	movlw	0
  9956  06C8  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9957  06C9  1D03               	skipz
  9958  06CA  2ECF               	goto	u4163
  9959  06CB  3000               	movlw	0
  9960  06CC  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9961  06CD  1D03               	skipz
  9962  06CE  2ECF               	goto	u4163
  9963  06CF                     u4163:
  9964  06CF  1803               	btfsc	3,0
  9965  06D0  0008               	return
  9966                           
  9967                           ;EEPROM_24C1025.c: 226:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9968  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  9969  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  9970  06D3                     L10:
  9971  06D3  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9972  06D4  1D03               	btfss	3,2
  9973  06D5  2EE4               	goto	l4418
  9974  06D6  3001               	movlw	1
  9975  06D7  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9976  06D8  1D03               	skipz
  9977  06D9  2EE2               	goto	u4173
  9978  06DA  3000               	movlw	0
  9979  06DB  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9980  06DC  1D03               	skipz
  9981  06DD  2EE2               	goto	u4173
  9982  06DE  3000               	movlw	0
  9983  06DF  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9984  06E0  1D03               	skipz
  9985  06E1  2EE2               	goto	u4173
  9986  06E2                     u4173:
  9987  06E2  1C03               	btfss	3,0
  9988  06E3  2EEB               	goto	l4420
  9989  06E4                     l4418:
  9990  06E4  3008               	movlw	8
  9991  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  9992  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  9993  06E7  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9994  06E8  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9995  06E9  00B2               	movwf	EEPROM_24C1025_Write_Str@range
  9996  06EA  2EEE               	goto	l4422
  9997  06EB                     l4420:
  9998  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  9999  06EC  1303               	bcf	3,6	;RP1=0, select bank0
 10000  06ED  01B2               	clrf	EEPROM_24C1025_Write_Str@range
 10001  06EE                     l4422:
 10002                           
 10003                           ;EEPROM_24C1025.c: 227:      ctrl=chip_add;
 10004  06EE  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 10005  06EF  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10006  06F0  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10007  06F1  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
 10008                           
 10009                           ;EEPROM_24C1025.c: 228:      ctrl<<=1;
 10010  06F2  1003               	clrc
 10011  06F3  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 10012                           
 10013                           ;EEPROM_24C1025.c: 229:      ctrl |= 0xA0;
 10014  06F4  30A0               	movlw	160
 10015  06F5  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10016  06F6  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10017  06F7  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10018                           
 10019                           ;EEPROM_24C1025.c: 230:      ctrl |= range;
 10020  06F8  0832               	movf	EEPROM_24C1025_Write_Str@range,w
 10021  06F9  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10022  06FA  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10023  06FB  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10024                           
 10025                           ;EEPROM_24C1025.c: 232:      I2C_Master_Start();
 10026  06FC  160A  118A  2002  120A  118A  	fcall	_I2C_Master_Start
 10027                           
 10028                           ;EEPROM_24C1025.c: 233:      I2C_Master_Write(ctrl);
 10029  0701  1283               	bcf	3,5	;RP0=0, select bank0
 10030  0702  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 10031  0703  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10032  0704  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10033  0705  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10034  0706  00A3               	movwf	I2C_Master_Write@d
 10035  0707  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10036  0708  00A4               	movwf	I2C_Master_Write@d+1
 10037  0709  160A  158A  21E5  120A  118A  	fcall	_I2C_Master_Write
 10038                           
 10039                           ;EEPROM_24C1025.c: 234:      I2C_Master_Write(((char *)&mem_add)[1]);
 10040  070E  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10041  070F  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10042  0710  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10043  0711  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10044  0712  00A3               	movwf	I2C_Master_Write@d
 10045  0713  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10046  0714  00A4               	movwf	I2C_Master_Write@d+1
 10047  0715  160A  158A  21E5  120A  118A  	fcall	_I2C_Master_Write
 10048                           
 10049                           ;EEPROM_24C1025.c: 235:      I2C_Master_Write(((char *)&mem_add)[0]);
 10050  071A  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10051  071B  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10052  071C  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10053  071D  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10054  071E  00A3               	movwf	I2C_Master_Write@d
 10055  071F  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10056  0720  00A4               	movwf	I2C_Master_Write@d+1
 10057  0721  160A  158A  21E5  120A  118A  	fcall	_I2C_Master_Write
 10058  0726                     l4482:	
 10059                           ;EEPROM_24C1025.c: 236:      while(*data)
 10060                           
 10061                           
 10062                           ;EEPROM_24C1025.c: 236:      while(*data)
 10063  0726  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10064  0727  0084               	movwf	4
 10065  0728  1783               	bsf	3,7	;select IRP bank2
 10066  0729  0800               	movf	0,w
 10067  072A  1903               	btfsc	3,2
 10068  072B  2F9E               	goto	l4484
 10069  072C  0064               	clrwdt	;# 
 10070                           
 10071                           ;EEPROM_24C1025.c: 239:           if(mem_add>0x1FFFF) return;
 10072  072D  1283               	bcf	3,5	;RP0=0, select bank0
 10073  072E  1303               	bcf	3,6	;RP1=0, select bank0
 10074  072F  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10075  0730  1D03               	btfss	3,2
 10076  0731  0008               	return
 10077  0732  3002               	movlw	2
 10078  0733  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10079  0734  1D03               	skipz
 10080  0735  2F3E               	goto	u4183
 10081  0736  3000               	movlw	0
 10082  0737  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10083  0738  1D03               	skipz
 10084  0739  2F3E               	goto	u4183
 10085  073A  3000               	movlw	0
 10086  073B  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10087  073C  1D03               	skipz
 10088  073D  2F3E               	goto	u4183
 10089  073E                     u4183:
 10090  073E  1803               	btfsc	3,0
 10091  073F  0008               	return
 10092                           
 10093                           ;EEPROM_24C1025.c: 240:           if((mem_add+1)%128==0)
 10094  0740  1283               	bcf	3,5	;RP0=0, select bank0
 10095  0741  1303               	bcf	3,6	;RP1=0, select bank0
 10096  0742  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10097  0743  3E01               	addlw	1
 10098  0744  397F               	andlw	127
 10099  0745  1D03               	btfss	3,2
 10100  0746  2F7C               	goto	l4476
 10101                           
 10102                           ;EEPROM_24C1025.c: 241:             {;EEPROM_24C1025.c: 242:             I2C_Master_Writ
      +                          e(*data);
 10103  0747  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10104  0748  0084               	movwf	4
 10105  0749  1783               	bsf	3,7	;select IRP bank2
 10106  074A  0800               	movf	0,w
 10107  074B  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10108  074C  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10109  074D  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10110  074E  00A3               	movwf	I2C_Master_Write@d
 10111  074F  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10112  0750  00A4               	movwf	I2C_Master_Write@d+1
 10113  0751  160A  158A  21E5  120A  118A  	fcall	_I2C_Master_Write
 10114                           
 10115                           ;EEPROM_24C1025.c: 243:             I2C_Master_Stop();
 10116  0756  160A  158A  21BE  120A  118A  	fcall	_I2C_Master_Stop
 10117                           
 10118                           ;EEPROM_24C1025.c: 245:             my_delay_ms_WDT(5);
 10119  075B  3000               	movlw	0
 10120  075C  1283               	bcf	3,5	;RP0=0, select bank0
 10121  075D  00A3               	movwf	my_delay_ms_WDT@time+3
 10122  075E  3000               	movlw	0
 10123  075F  00A2               	movwf	my_delay_ms_WDT@time+2
 10124  0760  3000               	movlw	0
 10125  0761  00A1               	movwf	my_delay_ms_WDT@time+1
 10126  0762  3005               	movlw	5
 10127  0763  00A0               	movwf	my_delay_ms_WDT@time
 10128  0764  160A  158A  258C  120A  118A  	fcall	_my_delay_ms_WDT
 10129                           
 10130                           ;EEPROM_24C1025.c: 246:             mem_add++;
 10131  0769  3001               	movlw	1
 10132  076A  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10133  076B  3000               	movlw	0
 10134  076C  1803               	skipnc
 10135  076D  3001               	movlw	1
 10136  076E  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10137  076F  3000               	movlw	0
 10138  0770  1803               	skipnc
 10139  0771  3001               	movlw	1
 10140  0772  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10141  0773  3000               	movlw	0
 10142  0774  1803               	skipnc
 10143  0775  3001               	movlw	1
 10144  0776  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10145                           
 10146                           ;EEPROM_24C1025.c: 247:             data++;
 10147  0777  3001               	movlw	1
 10148  0778  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10149  0779  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10150  077A  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10151  077B  2ED3               	goto	L10
 10152  077C                     l4476:	
 10153                           ;EEPROM_24C1025.c: 248:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10154                           
 10155                           
 10156                           ;EEPROM_24C1025.c: 260:             {;EEPROM_24C1025.c: 261:             I2C_Master_Writ
      +                          e(*data);
 10157  077C  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10158  077D  0084               	movwf	4
 10159  077E  1783               	bsf	3,7	;select IRP bank2
 10160  077F  0800               	movf	0,w
 10161  0780  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10162  0781  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10163  0782  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10164  0783  00A3               	movwf	I2C_Master_Write@d
 10165  0784  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10166  0785  00A4               	movwf	I2C_Master_Write@d+1
 10167  0786  160A  158A  21E5  120A  118A  	fcall	_I2C_Master_Write
 10168                           
 10169                           ;EEPROM_24C1025.c: 262:             data++;
 10170  078B  3001               	movlw	1
 10171  078C  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10172  078D  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10173  078E  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10174                           
 10175                           ;EEPROM_24C1025.c: 263:             mem_add++;
 10176  078F  3001               	movlw	1
 10177  0790  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10178  0791  3000               	movlw	0
 10179  0792  1803               	skipnc
 10180  0793  3001               	movlw	1
 10181  0794  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10182  0795  3000               	movlw	0
 10183  0796  1803               	skipnc
 10184  0797  3001               	movlw	1
 10185  0798  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10186  0799  3000               	movlw	0
 10187  079A  1803               	skipnc
 10188  079B  3001               	movlw	1
 10189  079C  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10190  079D  2F26               	goto	l4482
 10191  079E                     l4484:
 10192                           
 10193                           ;EEPROM_24C1025.c: 266:      I2C_Master_Write(0);
 10194  079E  3000               	movlw	0
 10195  079F  00A3               	movwf	I2C_Master_Write@d
 10196  07A0  00A4               	movwf	I2C_Master_Write@d+1
 10197  07A1  160A  158A  21E5  120A  118A  	fcall	_I2C_Master_Write
 10198                           
 10199                           ;EEPROM_24C1025.c: 267:      I2C_Master_Stop();
 10200  07A6  160A  158A  21BE  120A  118A  	fcall	_I2C_Master_Stop
 10201                           
 10202                           ;EEPROM_24C1025.c: 268:      my_delay_ms_WDT(5);
 10203  07AB  3000               	movlw	0
 10204  07AC  1283               	bcf	3,5	;RP0=0, select bank0
 10205  07AD  00A3               	movwf	my_delay_ms_WDT@time+3
 10206  07AE  3000               	movlw	0
 10207  07AF  00A2               	movwf	my_delay_ms_WDT@time+2
 10208  07B0  3000               	movlw	0
 10209  07B1  00A1               	movwf	my_delay_ms_WDT@time+1
 10210  07B2  3005               	movlw	5
 10211  07B3  00A0               	movwf	my_delay_ms_WDT@time
 10212  07B4  160A  158A  258C   	fcall	_my_delay_ms_WDT
 10213  07B7  0008               	return
 10214  07B8                     __end_of_EEPROM_24C1025_Write_Str:
 10215                           
 10216                           	psect	text40
 10217  1A20                     __ptext40:	
 10218 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 10219 ;; Defined at:
 10220 ;;		line 341 in file "EEPROM_24C1025.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;  chip_add        1    wreg     unsigned char 
 10223 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10224 ;;  data            1   27[BANK0 ] unsigned char 
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10227 ;; Return value:  Size  Location     Type
 10228 ;;                  1    wreg      void 
 10229 ;; Registers used:
 10230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10231 ;; Tracked objects:
 10232 ;;		On entry : 300/300
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10236 ;;      Params:         0       5       0       0       0
 10237 ;;      Locals:         0       1       0       0       0
 10238 ;;      Temps:          0       0       0       0       0
 10239 ;;      Totals:         0       6       0       0       0
 10240 ;;Total ram usage:        6 bytes
 10241 ;; Hardware stack levels used: 1
 10242 ;; Hardware stack levels required when called: 4
 10243 ;; This function calls:
 10244 ;;		_EEPROM_24C1025_Write_Buffer
 10245 ;; This function is called by:
 10246 ;;		_Decodify_Command
 10247 ;; This function uses a non-reentrant model
 10248 ;;
 10249                           
 10250                           
 10251                           ;psect for function _EEPROM_24C1025_Write_Byte
 10252  1A20                     _EEPROM_24C1025_Write_Byte:
 10253                           
 10254                           ;incstack = 0
 10255                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
 10256                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 10257  1A20  1283               	bcf	3,5	;RP0=0, select bank0
 10258  1A21  1303               	bcf	3,6	;RP1=0, select bank0
 10259  1A22  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 10260                           
 10261                           ;EEPROM_24C1025.c: 342:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 10262  1A23  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 10263  1A24  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10264  1A25  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 10265  1A26  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10266  1A27  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 10267  1A28  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10268  1A29  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 10269  1A2A  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10270  1A2B  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 10271  1A2C  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 10272  1A2D  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 10273  1A2E  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 10274  1A2F  3000               	movlw	0
 10275  1A30  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 10276  1A31  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 10277  1A32  160A  118A  2392   	fcall	_EEPROM_24C1025_Write_Buffer
 10278  1A35  0008               	return
 10279  1A36                     __end_of_EEPROM_24C1025_Write_Byte:
 10280                           
 10281                           	psect	text41
 10282  1508                     __ptext41:	
 10283 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10284 ;; Defined at:
 10285 ;;		line 275 in file "EEPROM_24C1025.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;  chip_add        1    wreg     unsigned char 
 10288 ;;  mem_add         4    9[BANK0 ] unsigned long 
 10289 ;;  buffer          1   13[BANK0 ] PTR unsigned char 
 10290 ;;		 -> buffer(33), 
 10291 ;; Auto vars:     Size  Location     Type
 10292 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10293 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10294 ;;  range           1   18[BANK0 ] unsigned char 
 10295 ;;  cnt             1   16[BANK0 ] unsigned char 
 10296 ;; Return value:  Size  Location     Type
 10297 ;;                  1    wreg      void 
 10298 ;; Registers used:
 10299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10300 ;; Tracked objects:
 10301 ;;		On entry : 300/300
 10302 ;;		On exit  : 0/0
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10305 ;;      Params:         0       5       0       0       0
 10306 ;;      Locals:         0       4       0       0       0
 10307 ;;      Temps:          0       2       0       0       0
 10308 ;;      Totals:         0      11       0       0       0
 10309 ;;Total ram usage:       11 bytes
 10310 ;; Hardware stack levels used: 1
 10311 ;; Hardware stack levels required when called: 3
 10312 ;; This function calls:
 10313 ;;		_I2C_Master_Read
 10314 ;;		_I2C_Master_RepeatedStart
 10315 ;;		_I2C_Master_Start
 10316 ;;		_I2C_Master_Stop
 10317 ;;		_I2C_Master_Write
 10318 ;; This function is called by:
 10319 ;;		_Decodify_Command
 10320 ;; This function uses a non-reentrant model
 10321 ;;
 10322                           
 10323                           
 10324                           ;psect for function _EEPROM_24C1025_Read_Str
 10325  1508                     _EEPROM_24C1025_Read_Str:
 10326                           
 10327                           ;incstack = 0
 10328                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10329                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10330  1508  1283               	bcf	3,5	;RP0=0, select bank0
 10331  1509  1303               	bcf	3,6	;RP1=0, select bank0
 10332  150A  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10333                           
 10334                           ;EEPROM_24C1025.c: 277:      unsigned char range=0;
 10335  150B  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10336                           
 10337                           ;EEPROM_24C1025.c: 278:      unsigned char ctrl;;EEPROM_24C1025.c: 280:      if(mem_add>
      +                          0x1FFFF) return;
 10338  150C  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10339  150D  1D03               	btfss	3,2
 10340  150E  0008               	return
 10341  150F  3002               	movlw	2
 10342  1510  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10343  1511  1D03               	skipz
 10344  1512  2D1B               	goto	u4223
 10345  1513  3000               	movlw	0
 10346  1514  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10347  1515  1D03               	skipz
 10348  1516  2D1B               	goto	u4223
 10349  1517  3000               	movlw	0
 10350  1518  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10351  1519  1D03               	skipz
 10352  151A  2D1B               	goto	u4223
 10353  151B                     u4223:
 10354  151B  1803               	btfsc	3,0
 10355  151C  0008               	return
 10356                           
 10357                           ;EEPROM_24C1025.c: 282:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10358  151D  1283               	bcf	3,5	;RP0=0, select bank0
 10359  151E  1303               	bcf	3,6	;RP1=0, select bank0
 10360  151F  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10361  1520  1D03               	btfss	3,2
 10362  1521  2D30               	goto	l4496
 10363  1522  3001               	movlw	1
 10364  1523  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10365  1524  1D03               	skipz
 10366  1525  2D2E               	goto	u4233
 10367  1526  3000               	movlw	0
 10368  1527  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10369  1528  1D03               	skipz
 10370  1529  2D2E               	goto	u4233
 10371  152A  3000               	movlw	0
 10372  152B  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10373  152C  1D03               	skipz
 10374  152D  2D2E               	goto	u4233
 10375  152E                     u4233:
 10376  152E  1C03               	btfss	3,0
 10377  152F  2D37               	goto	l4498
 10378  1530                     l4496:
 10379  1530  3008               	movlw	8
 10380  1531  1283               	bcf	3,5	;RP0=0, select bank0
 10381  1532  1303               	bcf	3,6	;RP1=0, select bank0
 10382  1533  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10383  1534  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10384  1535  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10385  1536  2D3A               	goto	l4500
 10386  1537                     l4498:
 10387  1537  1283               	bcf	3,5	;RP0=0, select bank0
 10388  1538  1303               	bcf	3,6	;RP1=0, select bank0
 10389  1539  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10390  153A                     l4500:
 10391                           
 10392                           ;EEPROM_24C1025.c: 283:      ctrl=chip_add;
 10393  153A  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10394  153B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10395  153C  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10396  153D  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10397                           
 10398                           ;EEPROM_24C1025.c: 284:      ctrl<<=1;
 10399  153E  1003               	clrc
 10400  153F  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10401                           
 10402                           ;EEPROM_24C1025.c: 285:      ctrl |= 0xA0;
 10403  1540  30A0               	movlw	160
 10404  1541  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10405  1542  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10406  1543  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10407                           
 10408                           ;EEPROM_24C1025.c: 286:      ctrl |= 0b00000001;
 10409  1544  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10410                           
 10411                           ;EEPROM_24C1025.c: 287:      ctrl |= range;
 10412  1545  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10413  1546  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10414  1547  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10415  1548  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10416                           
 10417                           ;EEPROM_24C1025.c: 289:      I2C_Master_Start();
 10418  1549  160A  118A  2002  160A  118A  	fcall	_I2C_Master_Start
 10419                           
 10420                           ;EEPROM_24C1025.c: 290:      I2C_Master_Write(ctrl & 0xFE);
 10421  154E  1283               	bcf	3,5	;RP0=0, select bank0
 10422  154F  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10423  1550  39FE               	andlw	254
 10424  1551  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10425  1552  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10426  1553  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10427  1554  00A3               	movwf	I2C_Master_Write@d
 10428  1555  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10429  1556  00A4               	movwf	I2C_Master_Write@d+1
 10430  1557  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 10431                           
 10432                           ;EEPROM_24C1025.c: 291:      I2C_Master_Write(((char *)&mem_add)[1]);
 10433  155C  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10434  155D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10435  155E  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10436  155F  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10437  1560  00A3               	movwf	I2C_Master_Write@d
 10438  1561  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10439  1562  00A4               	movwf	I2C_Master_Write@d+1
 10440  1563  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 10441                           
 10442                           ;EEPROM_24C1025.c: 292:      I2C_Master_Write(((char *)&mem_add)[0]);
 10443  1568  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10444  1569  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10445  156A  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10446  156B  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10447  156C  00A3               	movwf	I2C_Master_Write@d
 10448  156D  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10449  156E  00A4               	movwf	I2C_Master_Write@d+1
 10450  156F  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 10451                           
 10452                           ;EEPROM_24C1025.c: 293:      I2C_Master_RepeatedStart();
 10453  1574  160A  158A  21F0  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10454                           
 10455                           ;EEPROM_24C1025.c: 294:      I2C_Master_Write(ctrl);
 10456  1579  1283               	bcf	3,5	;RP0=0, select bank0
 10457  157A  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10458  157B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10459  157C  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10460  157D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10461  157E  00A3               	movwf	I2C_Master_Write@d
 10462  157F  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10463  1580  00A4               	movwf	I2C_Master_Write@d+1
 10464  1581  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 10465                           
 10466                           ;EEPROM_24C1025.c: 296:      cnt=0;
 10467  1586  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
 10468  1587                     l4522:
 10469                           
 10470                           ;EEPROM_24C1025.c: 298:            if(mem_add>0x1FFFF) break;
 10471  1587  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10472  1588  1D03               	btfss	3,2
 10473  1589  2E69               	goto	l4578
 10474  158A  3002               	movlw	2
 10475  158B  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10476  158C  1D03               	skipz
 10477  158D  2D96               	goto	u4243
 10478  158E  3000               	movlw	0
 10479  158F  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10480  1590  1D03               	skipz
 10481  1591  2D96               	goto	u4243
 10482  1592  3000               	movlw	0
 10483  1593  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10484  1594  1D03               	skipz
 10485  1595  2D96               	goto	u4243
 10486  1596                     u4243:
 10487  1596  1803               	btfsc	3,0
 10488  1597  2E69               	goto	l4578
 10489                           
 10490                           ;EEPROM_24C1025.c: 299:            if((mem_add+1)%128==0)
 10491  1598  1283               	bcf	3,5	;RP0=0, select bank0
 10492  1599  1303               	bcf	3,6	;RP1=0, select bank0
 10493  159A  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10494  159B  3E01               	addlw	1
 10495  159C  397F               	andlw	127
 10496  159D  1D03               	btfss	3,2
 10497  159E  2E39               	goto	l4566
 10498                           
 10499                           ;EEPROM_24C1025.c: 300:              {;EEPROM_24C1025.c: 301:              (*buffer)=I2C
      +                          _Master_Read(0);
 10500  159F  3000               	movlw	0
 10501  15A0  00A3               	movwf	I2C_Master_Read@a
 10502  15A1  00A4               	movwf	I2C_Master_Read@a+1
 10503  15A2  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Read
 10504  15A7  0823               	movf	?_I2C_Master_Read,w
 10505  15A8  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10506  15A9  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10507  15AA  0084               	movwf	4
 10508  15AB  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10509  15AC  1783               	bsf	3,7	;select IRP bank2
 10510  15AD  0080               	movwf	0
 10511                           
 10512                           ;EEPROM_24C1025.c: 302:              I2C_Master_Stop();
 10513  15AE  160A  158A  21BE  160A  118A  	fcall	_I2C_Master_Stop
 10514                           
 10515                           ;EEPROM_24C1025.c: 304:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10516  15B3  300D               	movlw	13
 10517  15B4  1283               	bcf	3,5	;RP0=0, select bank0
 10518  15B5  1303               	bcf	3,6	;RP1=0, select bank0
 10519  15B6  00AF               	movwf	??_EEPROM_24C1025_Read_Str+1
 10520  15B7  30FB               	movlw	251
 10521  15B8  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10522  15B9                     u5457:
 10523  15B9  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10524  15BA  2DB9               	goto	u5457
 10525  15BB  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10526  15BC  2DB9               	goto	u5457
 10527                           
 10528                           ;EEPROM_24C1025.c: 305:              mem_add++;
 10529  15BD  3001               	movlw	1
 10530  15BE  1283               	bcf	3,5	;RP0=0, select bank0
 10531  15BF  1303               	bcf	3,6	;RP1=0, select bank0
 10532  15C0  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10533  15C1  3000               	movlw	0
 10534  15C2  1803               	skipnc
 10535  15C3  3001               	movlw	1
 10536  15C4  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10537  15C5  3000               	movlw	0
 10538  15C6  1803               	skipnc
 10539  15C7  3001               	movlw	1
 10540  15C8  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10541  15C9  3000               	movlw	0
 10542  15CA  1803               	skipnc
 10543  15CB  3001               	movlw	1
 10544  15CC  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10545                           
 10546                           ;EEPROM_24C1025.c: 306:              buffer++;
 10547  15CD  3001               	movlw	1
 10548  15CE  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10549  15CF  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10550  15D0  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10551                           
 10552                           ;EEPROM_24C1025.c: 307:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10553  15D1  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10554  15D2  1D03               	btfss	3,2
 10555  15D3  2DE2               	goto	l4540
 10556  15D4  3001               	movlw	1
 10557  15D5  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10558  15D6  1D03               	skipz
 10559  15D7  2DE0               	goto	u4263
 10560  15D8  3000               	movlw	0
 10561  15D9  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10562  15DA  1D03               	skipz
 10563  15DB  2DE0               	goto	u4263
 10564  15DC  3000               	movlw	0
 10565  15DD  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10566  15DE  1D03               	skipz
 10567  15DF  2DE0               	goto	u4263
 10568  15E0                     u4263:
 10569  15E0  1C03               	btfss	3,0
 10570  15E1  2DE9               	goto	l4542
 10571  15E2                     l4540:
 10572  15E2  3008               	movlw	8
 10573  15E3  1283               	bcf	3,5	;RP0=0, select bank0
 10574  15E4  1303               	bcf	3,6	;RP1=0, select bank0
 10575  15E5  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10576  15E6  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10577  15E7  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10578  15E8  2DEC               	goto	l4544
 10579  15E9                     l4542:
 10580  15E9  1283               	bcf	3,5	;RP0=0, select bank0
 10581  15EA  1303               	bcf	3,6	;RP1=0, select bank0
 10582  15EB  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10583  15EC                     l4544:
 10584                           
 10585                           ;EEPROM_24C1025.c: 308:              ctrl=chip_add;
 10586  15EC  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10587  15ED  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10588  15EE  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10589  15EF  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10590                           
 10591                           ;EEPROM_24C1025.c: 309:              ctrl<<=1;
 10592  15F0  1003               	clrc
 10593  15F1  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10594                           
 10595                           ;EEPROM_24C1025.c: 310:              ctrl |= 0xA0;
 10596  15F2  30A0               	movlw	160
 10597  15F3  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10598  15F4  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10599  15F5  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10600                           
 10601                           ;EEPROM_24C1025.c: 311:              ctrl |= 0b00000001;
 10602  15F6  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10603                           
 10604                           ;EEPROM_24C1025.c: 312:              ctrl |= range;
 10605  15F7  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10606  15F8  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10607  15F9  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10608  15FA  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10609                           
 10610                           ;EEPROM_24C1025.c: 314:              I2C_Master_Start();
 10611  15FB  160A  118A  2002  160A  118A  	fcall	_I2C_Master_Start
 10612                           
 10613                           ;EEPROM_24C1025.c: 315:              I2C_Master_Write(ctrl & 0xFE);
 10614  1600  1283               	bcf	3,5	;RP0=0, select bank0
 10615  1601  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10616  1602  39FE               	andlw	254
 10617  1603  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10618  1604  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10619  1605  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10620  1606  00A3               	movwf	I2C_Master_Write@d
 10621  1607  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10622  1608  00A4               	movwf	I2C_Master_Write@d+1
 10623  1609  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 10624                           
 10625                           ;EEPROM_24C1025.c: 316:              I2C_Master_Write(((char *)&mem_add)[1]);
 10626  160E  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10627  160F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10628  1610  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10629  1611  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10630  1612  00A3               	movwf	I2C_Master_Write@d
 10631  1613  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10632  1614  00A4               	movwf	I2C_Master_Write@d+1
 10633  1615  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 10634                           
 10635                           ;EEPROM_24C1025.c: 317:              I2C_Master_Write(((char *)&mem_add)[0]);
 10636  161A  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10637  161B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10638  161C  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10639  161D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10640  161E  00A3               	movwf	I2C_Master_Write@d
 10641  161F  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10642  1620  00A4               	movwf	I2C_Master_Write@d+1
 10643  1621  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 10644                           
 10645                           ;EEPROM_24C1025.c: 318:              I2C_Master_RepeatedStart();
 10646  1626  160A  158A  21F0  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10647                           
 10648                           ;EEPROM_24C1025.c: 319:              I2C_Master_Write(ctrl);
 10649  162B  1283               	bcf	3,5	;RP0=0, select bank0
 10650  162C  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10651  162D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10652  162E  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10653  162F  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10654  1630  00A3               	movwf	I2C_Master_Write@d
 10655  1631  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10656  1632  00A4               	movwf	I2C_Master_Write@d+1
 10657  1633  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 10658                           
 10659                           ;EEPROM_24C1025.c: 320:              }
 10660  1638  2E60               	goto	l4576
 10661  1639                     l4566:
 10662                           
 10663                           ;EEPROM_24C1025.c: 322:              {;EEPROM_24C1025.c: 323:              (*buffer)=I2C
      +                          _Master_Read(1);
 10664  1639  3001               	movlw	1
 10665  163A  00A3               	movwf	I2C_Master_Read@a
 10666  163B  3000               	movlw	0
 10667  163C  00A4               	movwf	I2C_Master_Read@a+1
 10668  163D  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Read
 10669  1642  0823               	movf	?_I2C_Master_Read,w
 10670  1643  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10671  1644  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10672  1645  0084               	movwf	4
 10673  1646  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10674  1647  1783               	bsf	3,7	;select IRP bank2
 10675  1648  0080               	movwf	0
 10676                           
 10677                           ;EEPROM_24C1025.c: 324:              if((*buffer)==0)break;
 10678  1649  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10679  164A  0084               	movwf	4
 10680  164B  0800               	movf	0,w
 10681  164C  1903               	btfsc	3,2
 10682  164D  2E69               	goto	l4578
 10683                           
 10684                           ;EEPROM_24C1025.c: 325:              buffer++;
 10685  164E  3001               	movlw	1
 10686  164F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10687  1650  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10688  1651  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10689                           
 10690                           ;EEPROM_24C1025.c: 326:              mem_add++;
 10691  1652  3001               	movlw	1
 10692  1653  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10693  1654  3000               	movlw	0
 10694  1655  1803               	skipnc
 10695  1656  3001               	movlw	1
 10696  1657  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10697  1658  3000               	movlw	0
 10698  1659  1803               	skipnc
 10699  165A  3001               	movlw	1
 10700  165B  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10701  165C  3000               	movlw	0
 10702  165D  1803               	skipnc
 10703  165E  3001               	movlw	1
 10704  165F  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10705  1660                     l4576:
 10706                           
 10707                           ;EEPROM_24C1025.c: 328:        }while((cnt++)<64);
 10708  1660  3001               	movlw	1
 10709  1661  07B0               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 10710  1662  30FF               	movlw	-1
 10711  1663  0730               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 10712  1664  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10713  1665  3040               	movlw	64
 10714  1666  022E               	subwf	??_EEPROM_24C1025_Read_Str,w
 10715  1667  1C03               	skipc
 10716  1668  2D87               	goto	l4522
 10717  1669                     l4578:
 10718                           
 10719                           ;EEPROM_24C1025.c: 330:      I2C_Master_Read(0);
 10720  1669  3000               	movlw	0
 10721  166A  1283               	bcf	3,5	;RP0=0, select bank0
 10722  166B  1303               	bcf	3,6	;RP1=0, select bank0
 10723  166C  00A3               	movwf	I2C_Master_Read@a
 10724  166D  00A4               	movwf	I2C_Master_Read@a+1
 10725  166E  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Read
 10726                           
 10727                           ;EEPROM_24C1025.c: 331:      I2C_Master_Stop();
 10728  1673  160A  158A  21BE  160A  118A  	fcall	_I2C_Master_Stop
 10729                           
 10730                           ;EEPROM_24C1025.c: 332:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 10731  1678  30B9               	movlw	185
 10732  1679  1283               	bcf	3,5	;RP0=0, select bank0
 10733  167A  1303               	bcf	3,6	;RP1=0, select bank0
 10734  167B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10735  167C                     u5467:
 10736  167C  2E7D               	nop2
 10737  167D  2E7E               	nop2
 10738  167E  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10739  167F  2E7C               	goto	u5467
 10740  1680  2E81               	nop2
 10741  1681  0008               	return
 10742  1682                     __end_of_EEPROM_24C1025_Read_Str:
 10743                           
 10744                           	psect	text42
 10745  1BB0                     __ptext42:	
 10746 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 10747 ;; Defined at:
 10748 ;;		line 360 in file "EEPROM_24C1025.c"
 10749 ;; Parameters:    Size  Location     Type
 10750 ;;  chip_add        1    wreg     unsigned char 
 10751 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10752 ;; Auto vars:     Size  Location     Type
 10753 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10754 ;;  data            2   29[BANK0 ] unsigned char [2]
 10755 ;; Return value:  Size  Location     Type
 10756 ;;                  2   22[BANK0 ] unsigned int 
 10757 ;; Registers used:
 10758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10759 ;; Tracked objects:
 10760 ;;		On entry : 300/300
 10761 ;;		On exit  : 300/0
 10762 ;;		Unchanged: 0/0
 10763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10764 ;;      Params:         0       4       0       0       0
 10765 ;;      Locals:         0       3       0       0       0
 10766 ;;      Temps:          0       2       0       0       0
 10767 ;;      Totals:         0       9       0       0       0
 10768 ;;Total ram usage:        9 bytes
 10769 ;; Hardware stack levels used: 1
 10770 ;; Hardware stack levels required when called: 4
 10771 ;; This function calls:
 10772 ;;		_EEPROM_24C1025_Read_Buffer
 10773 ;; This function is called by:
 10774 ;;		_Decodify_Command
 10775 ;; This function uses a non-reentrant model
 10776 ;;
 10777                           
 10778                           
 10779                           ;psect for function _EEPROM_24C1025_Read_Int
 10780  1BB0                     _EEPROM_24C1025_Read_Int:
 10781                           
 10782                           ;incstack = 0
 10783                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10784                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 10785  1BB0  1283               	bcf	3,5	;RP0=0, select bank0
 10786  1BB1  1303               	bcf	3,6	;RP1=0, select bank0
 10787  1BB2  00BC               	movwf	EEPROM_24C1025_Read_Int@chip_add
 10788                           
 10789                           ;EEPROM_24C1025.c: 361:     char data[2];;EEPROM_24C1025.c: 362:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 10790  1BB3  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 10791  1BB4  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10792  1BB5  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 10793  1BB6  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10794  1BB7  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 10795  1BB8  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10796  1BB9  0836               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 10797  1BBA  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10798  1BBB  3002               	movlw	2
 10799  1BBC  00BA               	movwf	??_EEPROM_24C1025_Read_Int
 10800  1BBD  083A               	movf	??_EEPROM_24C1025_Read_Int,w
 10801  1BBE  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 10802  1BBF  303D               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 10803  1BC0  00BB               	movwf	??_EEPROM_24C1025_Read_Int+1
 10804  1BC1  083B               	movf	??_EEPROM_24C1025_Read_Int+1,w
 10805  1BC2  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10806  1BC3  083C               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 10807  1BC4  120A  158A  2065   	fcall	_EEPROM_24C1025_Read_Buffer
 10808                           
 10809                           ;EEPROM_24C1025.c: 363:     return (data[0]<<8)+data[1];
 10810  1BC7  1283               	bcf	3,5	;RP0=0, select bank0
 10811  1BC8  1303               	bcf	3,6	;RP1=0, select bank0
 10812  1BC9  083D               	movf	EEPROM_24C1025_Read_Int@data,w
 10813  1BCA  00BA               	movwf	??_EEPROM_24C1025_Read_Int
 10814  1BCB  01BB               	clrf	??_EEPROM_24C1025_Read_Int+1
 10815  1BCC  083A               	movf	??_EEPROM_24C1025_Read_Int,w
 10816  1BCD  00BB               	movwf	??_EEPROM_24C1025_Read_Int+1
 10817  1BCE  01BA               	clrf	??_EEPROM_24C1025_Read_Int
 10818  1BCF  083E               	movf	EEPROM_24C1025_Read_Int@data+1,w
 10819  1BD0  073A               	addwf	??_EEPROM_24C1025_Read_Int,w
 10820  1BD1  00B6               	movwf	?_EEPROM_24C1025_Read_Int
 10821  1BD2  3000               	movlw	0
 10822  1BD3  1803               	skipnc
 10823  1BD4  3001               	movlw	1
 10824  1BD5  073B               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 10825  1BD6  00B7               	movwf	?_EEPROM_24C1025_Read_Int+1
 10826  1BD7  0008               	return
 10827  1BD8                     __end_of_EEPROM_24C1025_Read_Int:
 10828                           
 10829                           	psect	text43
 10830  1A7B                     __ptext43:	
 10831 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 10832 ;; Defined at:
 10833 ;;		line 346 in file "EEPROM_24C1025.c"
 10834 ;; Parameters:    Size  Location     Type
 10835 ;;  chip_add        1    wreg     unsigned char 
 10836 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10837 ;; Auto vars:     Size  Location     Type
 10838 ;;  chip_add        1   27[BANK0 ] unsigned char 
 10839 ;;  data            1   28[BANK0 ] unsigned char 
 10840 ;; Return value:  Size  Location     Type
 10841 ;;                  1    wreg      unsigned char 
 10842 ;; Registers used:
 10843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10844 ;; Tracked objects:
 10845 ;;		On entry : 300/300
 10846 ;;		On exit  : 300/0
 10847 ;;		Unchanged: 0/0
 10848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10849 ;;      Params:         0       4       0       0       0
 10850 ;;      Locals:         0       2       0       0       0
 10851 ;;      Temps:          0       1       0       0       0
 10852 ;;      Totals:         0       7       0       0       0
 10853 ;;Total ram usage:        7 bytes
 10854 ;; Hardware stack levels used: 1
 10855 ;; Hardware stack levels required when called: 4
 10856 ;; This function calls:
 10857 ;;		_EEPROM_24C1025_Read_Buffer
 10858 ;; This function is called by:
 10859 ;;		_Decodify_Command
 10860 ;; This function uses a non-reentrant model
 10861 ;;
 10862                           
 10863                           
 10864                           ;psect for function _EEPROM_24C1025_Read_Byte
 10865  1A7B                     _EEPROM_24C1025_Read_Byte:
 10866                           
 10867                           ;incstack = 0
 10868                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10869                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 10870  1A7B  1283               	bcf	3,5	;RP0=0, select bank0
 10871  1A7C  1303               	bcf	3,6	;RP1=0, select bank0
 10872  1A7D  00BB               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 10873                           
 10874                           ;EEPROM_24C1025.c: 347:     char data;;EEPROM_24C1025.c: 348:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 10875  1A7E  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 10876  1A7F  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10877  1A80  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 10878  1A81  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10879  1A82  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 10880  1A83  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10881  1A84  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 10882  1A85  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10883  1A86  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 10884  1A87  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 10885  1A88  303C               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 10886  1A89  00BA               	movwf	??_EEPROM_24C1025_Read_Byte
 10887  1A8A  083A               	movf	??_EEPROM_24C1025_Read_Byte,w
 10888  1A8B  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10889  1A8C  083B               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 10890  1A8D  120A  158A  2065   	fcall	_EEPROM_24C1025_Read_Buffer
 10891                           
 10892                           ;EEPROM_24C1025.c: 349:     return data;
 10893  1A90  1283               	bcf	3,5	;RP0=0, select bank0
 10894  1A91  1303               	bcf	3,6	;RP1=0, select bank0
 10895  1A92  083C               	movf	EEPROM_24C1025_Read_Byte@data,w
 10896  1A93  0008               	return
 10897  1A94                     __end_of_EEPROM_24C1025_Read_Byte:
 10898                           
 10899                           	psect	text44
 10900  0865                     __ptext44:	
 10901 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 10902 ;; Defined at:
 10903 ;;		line 77 in file "EEPROM_24C1025.c"
 10904 ;; Parameters:    Size  Location     Type
 10905 ;;  chip_add        1    wreg     unsigned char 
 10906 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10907 ;;  sizedata        1   14[BANK0 ] unsigned char 
 10908 ;;  data            1   15[BANK0 ] PTR unsigned char 
 10909 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 10910 ;; Auto vars:     Size  Location     Type
 10911 ;;  chip_add        1   19[BANK0 ] unsigned char 
 10912 ;;  cnt             1   18[BANK0 ] unsigned char 
 10913 ;;  ctrl            1   21[BANK0 ] unsigned char 
 10914 ;;  range           1   20[BANK0 ] unsigned char 
 10915 ;;  cnt             1    0        unsigned char 
 10916 ;; Return value:  Size  Location     Type
 10917 ;;                  1    wreg      void 
 10918 ;; Registers used:
 10919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10920 ;; Tracked objects:
 10921 ;;		On entry : 300/0
 10922 ;;		On exit  : 0/0
 10923 ;;		Unchanged: 0/0
 10924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10925 ;;      Params:         0       6       0       0       0
 10926 ;;      Locals:         0       4       0       0       0
 10927 ;;      Temps:          0       2       0       0       0
 10928 ;;      Totals:         0      12       0       0       0
 10929 ;;Total ram usage:       12 bytes
 10930 ;; Hardware stack levels used: 1
 10931 ;; Hardware stack levels required when called: 3
 10932 ;; This function calls:
 10933 ;;		_I2C_Master_Read
 10934 ;;		_I2C_Master_RepeatedStart
 10935 ;;		_I2C_Master_Start
 10936 ;;		_I2C_Master_Stop
 10937 ;;		_I2C_Master_Write
 10938 ;;		_my_delay_ms_WDT
 10939 ;; This function is called by:
 10940 ;;		_EEPROM_24C1025_Read_Byte
 10941 ;;		_EEPROM_24C1025_Read_Int
 10942 ;; This function uses a non-reentrant model
 10943 ;;
 10944                           
 10945                           
 10946                           ;psect for function _EEPROM_24C1025_Read_Buffer
 10947  0865                     _EEPROM_24C1025_Read_Buffer:
 10948                           
 10949                           ;incstack = 0
 10950                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 10951                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 10952  0865  00B3               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 10953                           
 10954                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 10955  0866  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 10956                           
 10957                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 10958  0867  3014               	movlw	20
 10959  0868  1683               	bsf	3,5	;RP0=1, select bank1
 10960  0869  00D1               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 10961  086A  3000               	movlw	0
 10962  086B  00D2               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 10963                           
 10964                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 10965  086C  1283               	bcf	3,5	;RP0=0, select bank0
 10966  086D  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10967  086E  1D03               	btfss	3,2
 10968  086F  0008               	return
 10969  0870  3002               	movlw	2
 10970  0871  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10971  0872  1D03               	skipz
 10972  0873  287C               	goto	u2813
 10973  0874  3000               	movlw	0
 10974  0875  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10975  0876  1D03               	skipz
 10976  0877  287C               	goto	u2813
 10977  0878  3000               	movlw	0
 10978  0879  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10979  087A  1D03               	skipz
 10980  087B  287C               	goto	u2813
 10981  087C                     u2813:
 10982  087C  1803               	btfsc	3,0
 10983  087D  0008               	return
 10984                           
 10985                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10986  087E  1283               	bcf	3,5	;RP0=0, select bank0
 10987  087F  1303               	bcf	3,6	;RP1=0, select bank0
 10988  0880  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10989  0881  1D03               	btfss	3,2
 10990  0882  2891               	goto	l3690
 10991  0883  3001               	movlw	1
 10992  0884  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10993  0885  1D03               	skipz
 10994  0886  288F               	goto	u2823
 10995  0887  3000               	movlw	0
 10996  0888  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10997  0889  1D03               	skipz
 10998  088A  288F               	goto	u2823
 10999  088B  3000               	movlw	0
 11000  088C  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11001  088D  1D03               	skipz
 11002  088E  288F               	goto	u2823
 11003  088F                     u2823:
 11004  088F  1C03               	btfss	3,0
 11005  0890  2898               	goto	l3692
 11006  0891                     l3690:
 11007  0891  3008               	movlw	8
 11008  0892  1283               	bcf	3,5	;RP0=0, select bank0
 11009  0893  1303               	bcf	3,6	;RP1=0, select bank0
 11010  0894  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11011  0895  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11012  0896  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
 11013  0897  289B               	goto	l3694
 11014  0898                     l3692:
 11015  0898  1283               	bcf	3,5	;RP0=0, select bank0
 11016  0899  1303               	bcf	3,6	;RP1=0, select bank0
 11017  089A  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 11018  089B                     l3694:
 11019                           
 11020                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 11021  089B  0833               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11022  089C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11023  089D  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11024  089E  00B5               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11025                           
 11026                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 11027  089F  1003               	clrc
 11028  08A0  0DB5               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11029                           
 11030                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 11031  08A1  30A0               	movlw	160
 11032  08A2  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11033  08A3  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11034  08A4  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11035                           
 11036                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 11037  08A5  1435               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11038                           
 11039                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 11040  08A6  0834               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11041  08A7  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11042  08A8  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11043  08A9  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11044                           
 11045                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 11046  08AA  160A  118A  2002  120A  158A  	fcall	_I2C_Master_Start
 11047                           
 11048                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 11049  08AF  1283               	bcf	3,5	;RP0=0, select bank0
 11050  08B0  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11051  08B1  39FE               	andlw	254
 11052  08B2  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11053  08B3  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11054  08B4  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11055  08B5  00A3               	movwf	I2C_Master_Write@d
 11056  08B6  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11057  08B7  00A4               	movwf	I2C_Master_Write@d+1
 11058  08B8  160A  158A  21E5  120A  158A  	fcall	_I2C_Master_Write
 11059                           
 11060                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 11061  08BD  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11062  08BE  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11063  08BF  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11064  08C0  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11065  08C1  00A3               	movwf	I2C_Master_Write@d
 11066  08C2  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11067  08C3  00A4               	movwf	I2C_Master_Write@d+1
 11068  08C4  160A  158A  21E5  120A  158A  	fcall	_I2C_Master_Write
 11069                           
 11070                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 11071  08C9  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11072  08CA  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11073  08CB  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11074  08CC  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11075  08CD  00A3               	movwf	I2C_Master_Write@d
 11076  08CE  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11077  08CF  00A4               	movwf	I2C_Master_Write@d+1
 11078  08D0  160A  158A  21E5  120A  158A  	fcall	_I2C_Master_Write
 11079                           
 11080                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 11081  08D5  160A  158A  21F0  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11082                           
 11083                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 11084  08DA  1283               	bcf	3,5	;RP0=0, select bank0
 11085  08DB  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11086  08DC  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11087  08DD  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11088  08DE  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11089  08DF  00A3               	movwf	I2C_Master_Write@d
 11090  08E0  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11091  08E1  00A4               	movwf	I2C_Master_Write@d+1
 11092  08E2  160A  158A  21E5  120A  158A  	fcall	_I2C_Master_Write
 11093                           
 11094                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 11095  08E7  01B2               	clrf	EEPROM_24C1025_Read_Buffer@cnt_108
 11096  08E8                     l3768:
 11097  08E8  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 11098  08E9  0232               	subwf	EEPROM_24C1025_Read_Buffer@cnt_108,w
 11099  08EA  1803               	btfsc	3,0
 11100  08EB  29CA               	goto	l3770
 11101  08EC  0064               	clrwdt	;# 
 11102                           
 11103                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 11104  08ED  1283               	bcf	3,5	;RP0=0, select bank0
 11105  08EE  1303               	bcf	3,6	;RP1=0, select bank0
 11106  08EF  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11107  08F0  1D03               	btfss	3,2
 11108  08F1  29CA               	goto	l3770
 11109  08F2  3002               	movlw	2
 11110  08F3  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11111  08F4  1D03               	skipz
 11112  08F5  28FE               	goto	u2833
 11113  08F6  3000               	movlw	0
 11114  08F7  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11115  08F8  1D03               	skipz
 11116  08F9  28FE               	goto	u2833
 11117  08FA  3000               	movlw	0
 11118  08FB  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11119  08FC  1D03               	skipz
 11120  08FD  28FE               	goto	u2833
 11121  08FE                     u2833:
 11122  08FE  1803               	btfsc	3,0
 11123  08FF  29CA               	goto	l3770
 11124                           
 11125                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 11126  0900  1283               	bcf	3,5	;RP0=0, select bank0
 11127  0901  1303               	bcf	3,6	;RP1=0, select bank0
 11128  0902  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11129  0903  3E01               	addlw	1
 11130  0904  397F               	andlw	127
 11131  0905  1D03               	btfss	3,2
 11132  0906  29A3               	goto	l3760
 11133                           
 11134                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 11135  0907  3000               	movlw	0
 11136  0908  00A3               	movwf	I2C_Master_Read@a
 11137  0909  00A4               	movwf	I2C_Master_Read@a+1
 11138  090A  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Read
 11139  090F  0823               	movf	?_I2C_Master_Read,w
 11140  0910  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11141  0911  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11142  0912  0084               	movwf	4
 11143  0913  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11144  0914  1383               	bcf	3,7	;select IRP bank0
 11145  0915  0080               	movwf	0
 11146                           
 11147                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 11148  0916  160A  158A  21BE  120A  158A  	fcall	_I2C_Master_Stop
 11149                           
 11150                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 11151  091B  3000               	movlw	0
 11152  091C  1283               	bcf	3,5	;RP0=0, select bank0
 11153  091D  00A3               	movwf	my_delay_ms_WDT@time+3
 11154  091E  3000               	movlw	0
 11155  091F  00A2               	movwf	my_delay_ms_WDT@time+2
 11156  0920  3000               	movlw	0
 11157  0921  00A1               	movwf	my_delay_ms_WDT@time+1
 11158  0922  3005               	movlw	5
 11159  0923  00A0               	movwf	my_delay_ms_WDT@time
 11160  0924  160A  158A  258C  120A  158A  	fcall	_my_delay_ms_WDT
 11161                           
 11162                           ;EEPROM_24C1025.c: 114:              mem_add++;
 11163  0929  3001               	movlw	1
 11164  092A  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11165  092B  3000               	movlw	0
 11166  092C  1803               	skipnc
 11167  092D  3001               	movlw	1
 11168  092E  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11169  092F  3000               	movlw	0
 11170  0930  1803               	skipnc
 11171  0931  3001               	movlw	1
 11172  0932  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11173  0933  3000               	movlw	0
 11174  0934  1803               	skipnc
 11175  0935  3001               	movlw	1
 11176  0936  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11177                           
 11178                           ;EEPROM_24C1025.c: 115:              data++;
 11179  0937  3001               	movlw	1
 11180  0938  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11181  0939  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11182  093A  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11183                           
 11184                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11185  093B  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11186  093C  1D03               	btfss	3,2
 11187  093D  294C               	goto	l3734
 11188  093E  3001               	movlw	1
 11189  093F  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11190  0940  1D03               	skipz
 11191  0941  294A               	goto	u2853
 11192  0942  3000               	movlw	0
 11193  0943  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11194  0944  1D03               	skipz
 11195  0945  294A               	goto	u2853
 11196  0946  3000               	movlw	0
 11197  0947  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11198  0948  1D03               	skipz
 11199  0949  294A               	goto	u2853
 11200  094A                     u2853:
 11201  094A  1C03               	btfss	3,0
 11202  094B  2953               	goto	l3736
 11203  094C                     l3734:
 11204  094C  3008               	movlw	8
 11205  094D  1283               	bcf	3,5	;RP0=0, select bank0
 11206  094E  1303               	bcf	3,6	;RP1=0, select bank0
 11207  094F  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11208  0950  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11209  0951  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
 11210  0952  2956               	goto	l3738
 11211  0953                     l3736:
 11212  0953  1283               	bcf	3,5	;RP0=0, select bank0
 11213  0954  1303               	bcf	3,6	;RP1=0, select bank0
 11214  0955  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 11215  0956                     l3738:
 11216                           
 11217                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 11218  0956  0833               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11219  0957  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11220  0958  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11221  0959  00B5               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11222                           
 11223                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 11224  095A  1003               	clrc
 11225  095B  0DB5               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11226                           
 11227                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 11228  095C  30A0               	movlw	160
 11229  095D  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11230  095E  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11231  095F  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11232                           
 11233                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 11234  0960  1435               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11235                           
 11236                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 11237  0961  0834               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11238  0962  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11239  0963  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11240  0964  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11241                           
 11242                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 11243  0965  160A  118A  2002  120A  158A  	fcall	_I2C_Master_Start
 11244                           
 11245                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 11246  096A  1283               	bcf	3,5	;RP0=0, select bank0
 11247  096B  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11248  096C  39FE               	andlw	254
 11249  096D  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11250  096E  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11251  096F  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11252  0970  00A3               	movwf	I2C_Master_Write@d
 11253  0971  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11254  0972  00A4               	movwf	I2C_Master_Write@d+1
 11255  0973  160A  158A  21E5  120A  158A  	fcall	_I2C_Master_Write
 11256                           
 11257                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 11258  0978  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11259  0979  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11260  097A  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11261  097B  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11262  097C  00A3               	movwf	I2C_Master_Write@d
 11263  097D  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11264  097E  00A4               	movwf	I2C_Master_Write@d+1
 11265  097F  160A  158A  21E5  120A  158A  	fcall	_I2C_Master_Write
 11266                           
 11267                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 11268  0984  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11269  0985  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11270  0986  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11271  0987  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11272  0988  00A3               	movwf	I2C_Master_Write@d
 11273  0989  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11274  098A  00A4               	movwf	I2C_Master_Write@d+1
 11275  098B  160A  158A  21E5  120A  158A  	fcall	_I2C_Master_Write
 11276                           
 11277                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 11278  0990  160A  158A  21F0  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11279                           
 11280                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 11281  0995  1283               	bcf	3,5	;RP0=0, select bank0
 11282  0996  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11283  0997  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11284  0998  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11285  0999  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11286  099A  00A3               	movwf	I2C_Master_Write@d
 11287  099B  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11288  099C  00A4               	movwf	I2C_Master_Write@d+1
 11289  099D  160A  158A  21E5  120A  158A  	fcall	_I2C_Master_Write
 11290                           
 11291                           ;EEPROM_24C1025.c: 129:              }
 11292  09A2  29C5               	goto	l3766
 11293  09A3                     l3760:
 11294                           
 11295                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 11296  09A3  3001               	movlw	1
 11297  09A4  00A3               	movwf	I2C_Master_Read@a
 11298  09A5  3000               	movlw	0
 11299  09A6  00A4               	movwf	I2C_Master_Read@a+1
 11300  09A7  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Read
 11301  09AC  0823               	movf	?_I2C_Master_Read,w
 11302  09AD  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11303  09AE  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11304  09AF  0084               	movwf	4
 11305  09B0  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11306  09B1  1383               	bcf	3,7	;select IRP bank0
 11307  09B2  0080               	movwf	0
 11308                           
 11309                           ;EEPROM_24C1025.c: 133:              data++;
 11310  09B3  3001               	movlw	1
 11311  09B4  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11312  09B5  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11313  09B6  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11314                           
 11315                           ;EEPROM_24C1025.c: 134:              mem_add++;
 11316  09B7  3001               	movlw	1
 11317  09B8  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11318  09B9  3000               	movlw	0
 11319  09BA  1803               	skipnc
 11320  09BB  3001               	movlw	1
 11321  09BC  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11322  09BD  3000               	movlw	0
 11323  09BE  1803               	skipnc
 11324  09BF  3001               	movlw	1
 11325  09C0  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11326  09C1  3000               	movlw	0
 11327  09C2  1803               	skipnc
 11328  09C3  3001               	movlw	1
 11329  09C4  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11330  09C5                     l3766:
 11331                           
 11332                           ;EEPROM_24C1025.c: 136:         }
 11333  09C5  3001               	movlw	1
 11334  09C6  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11335  09C7  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11336  09C8  07B2               	addwf	EEPROM_24C1025_Read_Buffer@cnt_108,f
 11337  09C9  28E8               	goto	l3768
 11338  09CA                     l3770:
 11339                           
 11340                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 11341  09CA  3000               	movlw	0
 11342  09CB  1283               	bcf	3,5	;RP0=0, select bank0
 11343  09CC  1303               	bcf	3,6	;RP1=0, select bank0
 11344  09CD  00A3               	movwf	I2C_Master_Read@a
 11345  09CE  00A4               	movwf	I2C_Master_Read@a+1
 11346  09CF  160A  158A  24EB  120A  158A  	fcall	_I2C_Master_Read
 11347                           
 11348                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 11349  09D4  160A  158A  21BE  120A  158A  	fcall	_I2C_Master_Stop
 11350                           
 11351                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11352  09D9  30B9               	movlw	185
 11353  09DA  1283               	bcf	3,5	;RP0=0, select bank0
 11354  09DB  1303               	bcf	3,6	;RP1=0, select bank0
 11355  09DC  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11356  09DD                     u5477:
 11357  09DD  29DE               	nop2
 11358  09DE  29DF               	nop2
 11359  09DF  0BB0               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11360  09E0  29DD               	goto	u5477
 11361  09E1  29E2               	nop2
 11362  09E2  0008               	return
 11363  09E3                     __end_of_EEPROM_24C1025_Read_Buffer:
 11364                           
 11365                           	psect	text45
 11366  1682                     __ptext45:	
 11367 ;; *************** function _EEPROM_24C1025_Read_Buffer_USART *****************
 11368 ;; Defined at:
 11369 ;;		line 148 in file "EEPROM_24C1025.c"
 11370 ;; Parameters:    Size  Location     Type
 11371 ;;  chip_add        1    wreg     unsigned char 
 11372 ;;  mem_add         4    9[BANK0 ] unsigned long 
 11373 ;;  sizedata        1   13[BANK0 ] unsigned char 
 11374 ;;  data            1   14[BANK0 ] PTR unsigned char 
 11375 ;;		 -> buffer(33), 
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;  chip_add        1   18[BANK0 ] unsigned char 
 11378 ;;  cnt             1   17[BANK0 ] unsigned char 
 11379 ;;  ctrl            1   20[BANK0 ] unsigned char 
 11380 ;;  range           1   19[BANK0 ] unsigned char 
 11381 ;;  cnt             1    0        unsigned char 
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  1    wreg      void 
 11384 ;; Registers used:
 11385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11386 ;; Tracked objects:
 11387 ;;		On entry : 300/300
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11391 ;;      Params:         0       6       0       0       0
 11392 ;;      Locals:         0       4       0       0       0
 11393 ;;      Temps:          0       2       0       0       0
 11394 ;;      Totals:         0      12       0       0       0
 11395 ;;Total ram usage:       12 bytes
 11396 ;; Hardware stack levels used: 1
 11397 ;; Hardware stack levels required when called: 3
 11398 ;; This function calls:
 11399 ;;		_I2C_Master_Read
 11400 ;;		_I2C_Master_RepeatedStart
 11401 ;;		_I2C_Master_Start
 11402 ;;		_I2C_Master_Stop
 11403 ;;		_I2C_Master_Write
 11404 ;;		_USART_putc
 11405 ;; This function is called by:
 11406 ;;		_Decodify_Command
 11407 ;; This function uses a non-reentrant model
 11408 ;;
 11409                           
 11410                           
 11411                           ;psect for function _EEPROM_24C1025_Read_Buffer_USART
 11412  1682                     _EEPROM_24C1025_Read_Buffer_USART:
 11413                           
 11414                           ;incstack = 0
 11415                           ; Regs used in _EEPROM_24C1025_Read_Buffer_USART: [wreg-fsr0h+status,2+status,0+pclath+c
      +                          stack]
 11416                           ;EEPROM_24C1025_Read_Buffer_USART@chip_add stored from wreg
 11417  1682  1283               	bcf	3,5	;RP0=0, select bank0
 11418  1683  1303               	bcf	3,6	;RP1=0, select bank0
 11419  1684  00B2               	movwf	EEPROM_24C1025_Read_Buffer_USART@chip_add
 11420                           
 11421                           ;EEPROM_24C1025.c: 154:      unsigned char range=0;
 11422  1685  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11423                           
 11424                           ;EEPROM_24C1025.c: 155:      unsigned char ctrl;;EEPROM_24C1025.c: 157:      Delay_Led_M
      +                          emory=20;
 11425  1686  3014               	movlw	20
 11426  1687  1683               	bsf	3,5	;RP0=1, select bank1
 11427  1688  00D1               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11428  1689  3000               	movlw	0
 11429  168A  00D2               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11430                           
 11431                           ;EEPROM_24C1025.c: 159:      if(mem_add>0x1FFFF) return;
 11432  168B  1283               	bcf	3,5	;RP0=0, select bank0
 11433  168C  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11434  168D  1D03               	btfss	3,2
 11435  168E  0008               	return
 11436  168F  3002               	movlw	2
 11437  1690  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11438  1691  1D03               	skipz
 11439  1692  2E9B               	goto	u4103
 11440  1693  3000               	movlw	0
 11441  1694  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11442  1695  1D03               	skipz
 11443  1696  2E9B               	goto	u4103
 11444  1697  3000               	movlw	0
 11445  1698  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11446  1699  1D03               	skipz
 11447  169A  2E9B               	goto	u4103
 11448  169B                     u4103:
 11449  169B  1803               	btfsc	3,0
 11450  169C  0008               	return
 11451                           
 11452                           ;EEPROM_24C1025.c: 161:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11453  169D  1283               	bcf	3,5	;RP0=0, select bank0
 11454  169E  1303               	bcf	3,6	;RP1=0, select bank0
 11455  169F  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11456  16A0  1D03               	btfss	3,2
 11457  16A1  2EB0               	goto	l4330
 11458  16A2  3001               	movlw	1
 11459  16A3  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11460  16A4  1D03               	skipz
 11461  16A5  2EAE               	goto	u4113
 11462  16A6  3000               	movlw	0
 11463  16A7  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11464  16A8  1D03               	skipz
 11465  16A9  2EAE               	goto	u4113
 11466  16AA  3000               	movlw	0
 11467  16AB  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11468  16AC  1D03               	skipz
 11469  16AD  2EAE               	goto	u4113
 11470  16AE                     u4113:
 11471  16AE  1C03               	btfss	3,0
 11472  16AF  2EB7               	goto	l4332
 11473  16B0                     l4330:
 11474  16B0  3008               	movlw	8
 11475  16B1  1283               	bcf	3,5	;RP0=0, select bank0
 11476  16B2  1303               	bcf	3,6	;RP1=0, select bank0
 11477  16B3  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11478  16B4  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11479  16B5  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11480  16B6  2EBA               	goto	l4334
 11481  16B7                     l4332:
 11482  16B7  1283               	bcf	3,5	;RP0=0, select bank0
 11483  16B8  1303               	bcf	3,6	;RP1=0, select bank0
 11484  16B9  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11485  16BA                     l4334:
 11486                           
 11487                           ;EEPROM_24C1025.c: 162:      ctrl=chip_add;
 11488  16BA  0832               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11489  16BB  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11490  16BC  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11491  16BD  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11492                           
 11493                           ;EEPROM_24C1025.c: 163:      ctrl<<=1;
 11494  16BE  1003               	clrc
 11495  16BF  0DB4               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11496                           
 11497                           ;EEPROM_24C1025.c: 164:      ctrl |= 0xA0;
 11498  16C0  30A0               	movlw	160
 11499  16C1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11500  16C2  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11501  16C3  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11502                           
 11503                           ;EEPROM_24C1025.c: 165:      ctrl |= 0b00000001;
 11504  16C4  1434               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11505                           
 11506                           ;EEPROM_24C1025.c: 166:      ctrl |= range;
 11507  16C5  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11508  16C6  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11509  16C7  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11510  16C8  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11511                           
 11512                           ;EEPROM_24C1025.c: 168:      I2C_Master_Start();
 11513  16C9  160A  118A  2002  160A  118A  	fcall	_I2C_Master_Start
 11514                           
 11515                           ;EEPROM_24C1025.c: 169:      I2C_Master_Write(ctrl & 0xFE);
 11516  16CE  1283               	bcf	3,5	;RP0=0, select bank0
 11517  16CF  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11518  16D0  39FE               	andlw	254
 11519  16D1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11520  16D2  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11521  16D3  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11522  16D4  00A3               	movwf	I2C_Master_Write@d
 11523  16D5  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11524  16D6  00A4               	movwf	I2C_Master_Write@d+1
 11525  16D7  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 11526                           
 11527                           ;EEPROM_24C1025.c: 170:      I2C_Master_Write(((char *)&mem_add)[1]);
 11528  16DC  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11529  16DD  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11530  16DE  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11531  16DF  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11532  16E0  00A3               	movwf	I2C_Master_Write@d
 11533  16E1  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11534  16E2  00A4               	movwf	I2C_Master_Write@d+1
 11535  16E3  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 11536                           
 11537                           ;EEPROM_24C1025.c: 171:      I2C_Master_Write(((char *)&mem_add)[0]);
 11538  16E8  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11539  16E9  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11540  16EA  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11541  16EB  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11542  16EC  00A3               	movwf	I2C_Master_Write@d
 11543  16ED  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11544  16EE  00A4               	movwf	I2C_Master_Write@d+1
 11545  16EF  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 11546                           
 11547                           ;EEPROM_24C1025.c: 172:      I2C_Master_RepeatedStart();
 11548  16F4  160A  158A  21F0  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11549                           
 11550                           ;EEPROM_24C1025.c: 173:      I2C_Master_Write(ctrl);
 11551  16F9  1283               	bcf	3,5	;RP0=0, select bank0
 11552  16FA  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11553  16FB  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11554  16FC  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11555  16FD  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11556  16FE  00A3               	movwf	I2C_Master_Write@d
 11557  16FF  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11558  1700  00A4               	movwf	I2C_Master_Write@d+1
 11559  1701  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 11560                           
 11561                           ;EEPROM_24C1025.c: 175:      for(char cnt=0;cnt<(sizedata);cnt++)
 11562  1706  01B1               	clrf	EEPROM_24C1025_Read_Buffer_USART@cnt_117
 11563  1707                     l4404:
 11564  1707  082D               	movf	EEPROM_24C1025_Read_Buffer_USART@sizedata,w
 11565  1708  0231               	subwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,w
 11566  1709  1803               	btfsc	3,0
 11567  170A  2FE7               	goto	l4406
 11568  170B  0064               	clrwdt	;# 
 11569                           
 11570                           ;EEPROM_24C1025.c: 178:            if(mem_add>0x1FFFF) break;
 11571  170C  1283               	bcf	3,5	;RP0=0, select bank0
 11572  170D  1303               	bcf	3,6	;RP1=0, select bank0
 11573  170E  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11574  170F  1D03               	btfss	3,2
 11575  1710  2FE7               	goto	l4406
 11576  1711  3002               	movlw	2
 11577  1712  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11578  1713  1D03               	skipz
 11579  1714  2F1D               	goto	u4123
 11580  1715  3000               	movlw	0
 11581  1716  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11582  1717  1D03               	skipz
 11583  1718  2F1D               	goto	u4123
 11584  1719  3000               	movlw	0
 11585  171A  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11586  171B  1D03               	skipz
 11587  171C  2F1D               	goto	u4123
 11588  171D                     u4123:
 11589  171D  1803               	btfsc	3,0
 11590  171E  2FE7               	goto	l4406
 11591                           
 11592                           ;EEPROM_24C1025.c: 179:            if((mem_add+1)%128==0)
 11593  171F  1283               	bcf	3,5	;RP0=0, select bank0
 11594  1720  1303               	bcf	3,6	;RP1=0, select bank0
 11595  1721  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11596  1722  3E01               	addlw	1
 11597  1723  397F               	andlw	127
 11598  1724  1D03               	btfss	3,2
 11599  1725  2FBB               	goto	l4398
 11600                           
 11601                           ;EEPROM_24C1025.c: 180:              {;EEPROM_24C1025.c: 181:              (*data)=I2C_M
      +                          aster_Read(0);
 11602  1726  3000               	movlw	0
 11603  1727  00A3               	movwf	I2C_Master_Read@a
 11604  1728  00A4               	movwf	I2C_Master_Read@a+1
 11605  1729  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Read
 11606  172E  0823               	movf	?_I2C_Master_Read,w
 11607  172F  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11608  1730  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11609  1731  0084               	movwf	4
 11610  1732  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11611  1733  1783               	bsf	3,7	;select IRP bank2
 11612  1734  0080               	movwf	0
 11613                           
 11614                           ;EEPROM_24C1025.c: 182:              I2C_Master_Stop();
 11615  1735  160A  158A  21BE  160A  118A  	fcall	_I2C_Master_Stop
 11616                           
 11617                           ;EEPROM_24C1025.c: 183:              USART_putc(*data);
 11618  173A  1283               	bcf	3,5	;RP0=0, select bank0
 11619  173B  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11620  173C  0084               	movwf	4
 11621  173D  1783               	bsf	3,7	;select IRP bank2
 11622  173E  0800               	movf	0,w
 11623  173F  160A  158A  21FB  160A  118A  	fcall	_USART_putc
 11624                           
 11625                           ;EEPROM_24C1025.c: 186:              mem_add++;
 11626  1744  3001               	movlw	1
 11627  1745  1283               	bcf	3,5	;RP0=0, select bank0
 11628  1746  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11629  1747  3000               	movlw	0
 11630  1748  1803               	skipnc
 11631  1749  3001               	movlw	1
 11632  174A  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11633  174B  3000               	movlw	0
 11634  174C  1803               	skipnc
 11635  174D  3001               	movlw	1
 11636  174E  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11637  174F  3000               	movlw	0
 11638  1750  1803               	skipnc
 11639  1751  3001               	movlw	1
 11640  1752  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11641                           
 11642                           ;EEPROM_24C1025.c: 188:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11643  1753  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11644  1754  1D03               	btfss	3,2
 11645  1755  2F64               	goto	l4372
 11646  1756  3001               	movlw	1
 11647  1757  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11648  1758  1D03               	skipz
 11649  1759  2F62               	goto	u4143
 11650  175A  3000               	movlw	0
 11651  175B  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11652  175C  1D03               	skipz
 11653  175D  2F62               	goto	u4143
 11654  175E  3000               	movlw	0
 11655  175F  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11656  1760  1D03               	skipz
 11657  1761  2F62               	goto	u4143
 11658  1762                     u4143:
 11659  1762  1C03               	btfss	3,0
 11660  1763  2F6B               	goto	l4374
 11661  1764                     l4372:
 11662  1764  3008               	movlw	8
 11663  1765  1283               	bcf	3,5	;RP0=0, select bank0
 11664  1766  1303               	bcf	3,6	;RP1=0, select bank0
 11665  1767  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11666  1768  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11667  1769  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11668  176A  2F6E               	goto	l4376
 11669  176B                     l4374:
 11670  176B  1283               	bcf	3,5	;RP0=0, select bank0
 11671  176C  1303               	bcf	3,6	;RP1=0, select bank0
 11672  176D  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11673  176E                     l4376:
 11674                           
 11675                           ;EEPROM_24C1025.c: 189:              ctrl=chip_add;
 11676  176E  0832               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11677  176F  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11678  1770  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11679  1771  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11680                           
 11681                           ;EEPROM_24C1025.c: 190:              ctrl<<=1;
 11682  1772  1003               	clrc
 11683  1773  0DB4               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11684                           
 11685                           ;EEPROM_24C1025.c: 191:              ctrl |= 0xA0;
 11686  1774  30A0               	movlw	160
 11687  1775  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11688  1776  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11689  1777  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11690                           
 11691                           ;EEPROM_24C1025.c: 192:              ctrl |= 0b00000001;
 11692  1778  1434               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11693                           
 11694                           ;EEPROM_24C1025.c: 193:              ctrl |= range;
 11695  1779  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11696  177A  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11697  177B  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11698  177C  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11699                           
 11700                           ;EEPROM_24C1025.c: 195:              I2C_Master_Start();
 11701  177D  160A  118A  2002  160A  118A  	fcall	_I2C_Master_Start
 11702                           
 11703                           ;EEPROM_24C1025.c: 196:              I2C_Master_Write(ctrl & 0xFE);
 11704  1782  1283               	bcf	3,5	;RP0=0, select bank0
 11705  1783  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11706  1784  39FE               	andlw	254
 11707  1785  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11708  1786  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11709  1787  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11710  1788  00A3               	movwf	I2C_Master_Write@d
 11711  1789  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11712  178A  00A4               	movwf	I2C_Master_Write@d+1
 11713  178B  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 11714                           
 11715                           ;EEPROM_24C1025.c: 197:              I2C_Master_Write(((char *)&mem_add)[1]);
 11716  1790  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11717  1791  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11718  1792  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11719  1793  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11720  1794  00A3               	movwf	I2C_Master_Write@d
 11721  1795  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11722  1796  00A4               	movwf	I2C_Master_Write@d+1
 11723  1797  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 11724                           
 11725                           ;EEPROM_24C1025.c: 198:              I2C_Master_Write(((char *)&mem_add)[0]);
 11726  179C  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11727  179D  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11728  179E  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11729  179F  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11730  17A0  00A3               	movwf	I2C_Master_Write@d
 11731  17A1  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11732  17A2  00A4               	movwf	I2C_Master_Write@d+1
 11733  17A3  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 11734                           
 11735                           ;EEPROM_24C1025.c: 199:              I2C_Master_RepeatedStart();
 11736  17A8  160A  158A  21F0  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11737                           
 11738                           ;EEPROM_24C1025.c: 200:              I2C_Master_Write(ctrl);
 11739  17AD  1283               	bcf	3,5	;RP0=0, select bank0
 11740  17AE  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11741  17AF  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11742  17B0  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11743  17B1  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11744  17B2  00A3               	movwf	I2C_Master_Write@d
 11745  17B3  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11746  17B4  00A4               	movwf	I2C_Master_Write@d+1
 11747  17B5  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 11748                           
 11749                           ;EEPROM_24C1025.c: 201:              }
 11750  17BA  2FE2               	goto	l4402
 11751  17BB                     l4398:
 11752                           
 11753                           ;EEPROM_24C1025.c: 203:              {;EEPROM_24C1025.c: 204:              (*data)=I2C_M
      +                          aster_Read(1);
 11754  17BB  3001               	movlw	1
 11755  17BC  00A3               	movwf	I2C_Master_Read@a
 11756  17BD  3000               	movlw	0
 11757  17BE  00A4               	movwf	I2C_Master_Read@a+1
 11758  17BF  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Read
 11759  17C4  0823               	movf	?_I2C_Master_Read,w
 11760  17C5  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11761  17C6  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11762  17C7  0084               	movwf	4
 11763  17C8  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11764  17C9  1783               	bsf	3,7	;select IRP bank2
 11765  17CA  0080               	movwf	0
 11766                           
 11767                           ;EEPROM_24C1025.c: 205:              USART_putc(*data);
 11768  17CB  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11769  17CC  0084               	movwf	4
 11770  17CD  0800               	movf	0,w
 11771  17CE  160A  158A  21FB  160A  118A  	fcall	_USART_putc
 11772                           
 11773                           ;EEPROM_24C1025.c: 207:              mem_add++;
 11774  17D3  3001               	movlw	1
 11775  17D4  1283               	bcf	3,5	;RP0=0, select bank0
 11776  17D5  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11777  17D6  3000               	movlw	0
 11778  17D7  1803               	skipnc
 11779  17D8  3001               	movlw	1
 11780  17D9  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11781  17DA  3000               	movlw	0
 11782  17DB  1803               	skipnc
 11783  17DC  3001               	movlw	1
 11784  17DD  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11785  17DE  3000               	movlw	0
 11786  17DF  1803               	skipnc
 11787  17E0  3001               	movlw	1
 11788  17E1  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11789  17E2                     l4402:
 11790                           
 11791                           ;EEPROM_24C1025.c: 209:         }
 11792  17E2  3001               	movlw	1
 11793  17E3  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11794  17E4  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11795  17E5  07B1               	addwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,f
 11796  17E6  2F07               	goto	l4404
 11797  17E7                     l4406:
 11798                           
 11799                           ;EEPROM_24C1025.c: 210:         I2C_Master_Read(0);
 11800  17E7  3000               	movlw	0
 11801  17E8  1283               	bcf	3,5	;RP0=0, select bank0
 11802  17E9  1303               	bcf	3,6	;RP1=0, select bank0
 11803  17EA  00A3               	movwf	I2C_Master_Read@a
 11804  17EB  00A4               	movwf	I2C_Master_Read@a+1
 11805  17EC  160A  158A  24EB  160A  118A  	fcall	_I2C_Master_Read
 11806                           
 11807                           ;EEPROM_24C1025.c: 211:         I2C_Master_Stop();
 11808  17F1  160A  158A  21BE  160A  118A  	fcall	_I2C_Master_Stop
 11809                           
 11810                           ;EEPROM_24C1025.c: 212:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11811  17F6  30B9               	movlw	185
 11812  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 11813  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 11814  17F9  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11815  17FA                     u5487:
 11816  17FA  2FFB               	nop2
 11817  17FB  2FFC               	nop2
 11818  17FC  0BAF               	decfsz	??_EEPROM_24C1025_Read_Buffer_USART,f
 11819  17FD  2FFA               	goto	u5487
 11820  17FE  2FFF               	nop2
 11821  17FF  0008               	return
 11822  1800                     __end_of_EEPROM_24C1025_Read_Buffer_USART:
 11823                           
 11824                           	psect	text46
 11825  19FB                     __ptext46:	
 11826 ;; *************** function _USART_putc *****************
 11827 ;; Defined at:
 11828 ;;		line 89 in file "usart.c"
 11829 ;; Parameters:    Size  Location     Type
 11830 ;;  value           1    wreg     unsigned char 
 11831 ;; Auto vars:     Size  Location     Type
 11832 ;;  value           1    0[BANK0 ] unsigned char 
 11833 ;; Return value:  Size  Location     Type
 11834 ;;                  1    wreg      void 
 11835 ;; Registers used:
 11836 ;;		wreg
 11837 ;; Tracked objects:
 11838 ;;		On entry : 0/100
 11839 ;;		On exit  : 300/100
 11840 ;;		Unchanged: 0/0
 11841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11842 ;;      Params:         0       0       0       0       0
 11843 ;;      Locals:         0       1       0       0       0
 11844 ;;      Temps:          0       0       0       0       0
 11845 ;;      Totals:         0       1       0       0       0
 11846 ;;Total ram usage:        1 bytes
 11847 ;; Hardware stack levels used: 1
 11848 ;; Hardware stack levels required when called: 1
 11849 ;; This function calls:
 11850 ;;		Nothing
 11851 ;; This function is called by:
 11852 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11853 ;;		_Decodify_Command
 11854 ;;		_Send_To_MB
 11855 ;;		_PROCULUS_Control_Register_Write
 11856 ;;		_PROCULUS_VP_Write
 11857 ;;		_USART_put_int
 11858 ;;		_USART_put_string
 11859 ;; This function uses a non-reentrant model
 11860 ;;
 11861                           
 11862                           
 11863                           ;psect for function _USART_putc
 11864  19FB                     _USART_putc:
 11865                           
 11866                           ;incstack = 0
 11867                           ; Regs used in _USART_putc: [wreg]
 11868                           ;USART_putc@value stored from wreg
 11869  19FB  1283               	bcf	3,5	;RP0=0, select bank0
 11870  19FC  1303               	bcf	3,6	;RP1=0, select bank0
 11871  19FD  00A0               	movwf	USART_putc@value
 11872                           
 11873                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 11874  19FE  3014               	movlw	20
 11875  19FF  1683               	bsf	3,5	;RP0=1, select bank1
 11876  1A00  00CF               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 11877  1A01  3000               	movlw	0
 11878  1A02  00D0               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 11879  1A03                     l869:	
 11880                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 11881                           
 11882  1A03  1C98               	btfss	24,1	;volatile
 11883  1A04  2A03               	goto	l869
 11884                           
 11885                           ;usart.c: 93:     TXREG=value;
 11886  1A05  1283               	bcf	3,5	;RP0=0, select bank0
 11887  1A06  0820               	movf	USART_putc@value,w
 11888  1A07  0099               	movwf	25	;volatile
 11889                           
 11890                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 11891  1A08  1683               	bsf	3,5	;RP0=1, select bank1
 11892  1A09  1698               	bsf	24,5	;volatile
 11893  1A0A  0008               	return
 11894  1A0B                     __end_of_USART_putc:
 11895                           
 11896                           	psect	text47
 11897  19F0                     __ptext47:	
 11898 ;; *************** function _I2C_Master_RepeatedStart *****************
 11899 ;; Defined at:
 11900 ;;		line 62 in file "I2C.c"
 11901 ;; Parameters:    Size  Location     Type
 11902 ;;		None
 11903 ;; Auto vars:     Size  Location     Type
 11904 ;;		None
 11905 ;; Return value:  Size  Location     Type
 11906 ;;                  1    wreg      void 
 11907 ;; Registers used:
 11908 ;;		wreg, status,2, status,0, pclath, cstack
 11909 ;; Tracked objects:
 11910 ;;		On entry : 300/0
 11911 ;;		On exit  : 200/0
 11912 ;;		Unchanged: 0/0
 11913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11914 ;;      Params:         0       0       0       0       0
 11915 ;;      Locals:         0       0       0       0       0
 11916 ;;      Temps:          0       0       0       0       0
 11917 ;;      Totals:         0       0       0       0       0
 11918 ;;Total ram usage:        0 bytes
 11919 ;; Hardware stack levels used: 1
 11920 ;; Hardware stack levels required when called: 2
 11921 ;; This function calls:
 11922 ;;		_I2C_Master_Wait
 11923 ;; This function is called by:
 11924 ;;		_EEPROM_24C1025_Read_Buffer
 11925 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11926 ;;		_EEPROM_24C1025_Read_Str
 11927 ;; This function uses a non-reentrant model
 11928 ;;
 11929                           
 11930                           
 11931                           ;psect for function _I2C_Master_RepeatedStart
 11932  19F0                     _I2C_Master_RepeatedStart:
 11933                           
 11934                           ;I2C.c: 64:   if(I2C_Master_Wait())
 11935                           
 11936                           ;incstack = 0
 11937                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 11938  19F0  160A  158A  2328  160A  158A  	fcall	_I2C_Master_Wait
 11939  19F5  3A00               	xorlw	0
 11940  19F6  1903               	skipnz
 11941  19F7  0008               	return
 11942                           
 11943                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 11944  19F8  1683               	bsf	3,5	;RP0=1, select bank1
 11945  19F9  1491               	bsf	17,1	;volatile
 11946  19FA  0008               	return
 11947  19FB                     __end_of_I2C_Master_RepeatedStart:
 11948                           
 11949                           	psect	text48
 11950  1CEB                     __ptext48:	
 11951 ;; *************** function _I2C_Master_Read *****************
 11952 ;; Defined at:
 11953 ;;		line 87 in file "I2C.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;  a               2    3[BANK0 ] unsigned short 
 11956 ;; Auto vars:     Size  Location     Type
 11957 ;;  temp            2    7[BANK0 ] unsigned short 
 11958 ;; Return value:  Size  Location     Type
 11959 ;;                  2    3[BANK0 ] unsigned short 
 11960 ;; Registers used:
 11961 ;;		wreg, status,2, status,0, pclath, cstack
 11962 ;; Tracked objects:
 11963 ;;		On entry : 300/0
 11964 ;;		On exit  : 300/0
 11965 ;;		Unchanged: 0/0
 11966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11967 ;;      Params:         0       2       0       0       0
 11968 ;;      Locals:         0       2       0       0       0
 11969 ;;      Temps:          0       2       0       0       0
 11970 ;;      Totals:         0       6       0       0       0
 11971 ;;Total ram usage:        6 bytes
 11972 ;; Hardware stack levels used: 1
 11973 ;; Hardware stack levels required when called: 2
 11974 ;; This function calls:
 11975 ;;		_I2C_Master_Wait
 11976 ;; This function is called by:
 11977 ;;		_EEPROM_24C1025_Read_Buffer
 11978 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11979 ;;		_EEPROM_24C1025_Read_Str
 11980 ;; This function uses a non-reentrant model
 11981 ;;
 11982                           
 11983                           
 11984                           ;psect for function _I2C_Master_Read
 11985  1CEB                     _I2C_Master_Read:
 11986                           
 11987                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 11988                           
 11989                           ;incstack = 0
 11990                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11991  1CEB  160A  158A  2328  160A  158A  	fcall	_I2C_Master_Wait
 11992  1CF0  3A00               	xorlw	0
 11993  1CF1  1683               	bsf	3,5	;RP0=1, select bank1
 11994  1CF2  1D03               	btfss	3,2
 11995  1CF3  1591               	bsf	17,3	;volatile
 11996                           
 11997                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 11998  1CF4  160A  158A  2328  160A  158A  	fcall	_I2C_Master_Wait
 11999  1CF9  3A00               	xorlw	0
 12000  1CFA  1903               	skipnz
 12001  1CFB  2D03               	goto	l3640
 12002  1CFC  0813               	movf	19,w	;volatile
 12003  1CFD  00A5               	movwf	??_I2C_Master_Read
 12004  1CFE  01A6               	clrf	??_I2C_Master_Read+1
 12005  1CFF  0825               	movf	??_I2C_Master_Read,w
 12006  1D00  00A7               	movwf	I2C_Master_Read@temp
 12007  1D01  0826               	movf	??_I2C_Master_Read+1,w
 12008  1D02  00A8               	movwf	I2C_Master_Read@temp+1
 12009  1D03                     l3640:
 12010                           
 12011                           ;I2C.c: 92:   if(I2C_Master_Wait())
 12012  1D03  160A  158A  2328  160A  158A  	fcall	_I2C_Master_Wait
 12013  1D08  3A00               	xorlw	0
 12014  1D09  1903               	skipnz
 12015  1D0A  2D1D               	goto	l3652
 12016                           
 12017                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 12018  1D0B  0823               	movf	I2C_Master_Read@a,w
 12019  1D0C  0424               	iorwf	I2C_Master_Read@a+1,w
 12020  1D0D  1D03               	btfss	3,2
 12021  1D0E  2D13               	goto	u2750
 12022  1D0F  1683               	bsf	3,5	;RP0=1, select bank1
 12023  1D10  1303               	bcf	3,6	;RP1=0, select bank1
 12024  1D11  1691               	bsf	17,5	;volatile
 12025  1D12  2D16               	goto	l3644
 12026  1D13                     u2750:
 12027  1D13  1683               	bsf	3,5	;RP0=1, select bank1
 12028  1D14  1303               	bcf	3,6	;RP1=0, select bank1
 12029  1D15  1291               	bcf	17,5	;volatile
 12030  1D16                     l3644:
 12031                           
 12032                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 12033  1D16  1611               	bsf	17,4	;volatile
 12034                           
 12035                           ;I2C.c: 96:     return temp;
 12036  1D17  1283               	bcf	3,5	;RP0=0, select bank0
 12037  1D18  0828               	movf	I2C_Master_Read@temp+1,w
 12038  1D19  00A4               	movwf	?_I2C_Master_Read+1
 12039  1D1A  0827               	movf	I2C_Master_Read@temp,w
 12040  1D1B  00A3               	movwf	?_I2C_Master_Read
 12041  1D1C  0008               	return
 12042  1D1D                     l3652:
 12043                           
 12044                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 12045  1D1D  01A3               	clrf	?_I2C_Master_Read
 12046  1D1E  01A4               	clrf	?_I2C_Master_Read+1
 12047  1D1F  0008               	return
 12048  1D20                     __end_of_I2C_Master_Read:
 12049                           
 12050                           	psect	text49
 12051  1E74                     __ptext49:	
 12052 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12053 ;; Defined at:
 12054 ;;		line 367 in file "EEPROM_24C1025.c"
 12055 ;; Parameters:    Size  Location     Type
 12056 ;;  chip_add        1    wreg     unsigned char 
 12057 ;;  value           2   56[BANK0 ] unsigned int 
 12058 ;; Auto vars:     Size  Location     Type
 12059 ;;  chip_add        1   58[BANK0 ] unsigned char 
 12060 ;;  mem_add         4   59[BANK0 ] unsigned long 
 12061 ;; Return value:  Size  Location     Type
 12062 ;;                  1    wreg      void 
 12063 ;; Registers used:
 12064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12065 ;; Tracked objects:
 12066 ;;		On entry : 300/300
 12067 ;;		On exit  : 0/0
 12068 ;;		Unchanged: 0/0
 12069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12070 ;;      Params:         0       2       0       0       0
 12071 ;;      Locals:         0       5       0       0       0
 12072 ;;      Temps:          0       0       0       0       0
 12073 ;;      Totals:         0       7       0       0       0
 12074 ;;Total ram usage:        7 bytes
 12075 ;; Hardware stack levels used: 1
 12076 ;; Hardware stack levels required when called: 5
 12077 ;; This function calls:
 12078 ;;		_EEPROM_24C1025_Write_Int
 12079 ;; This function is called by:
 12080 ;;		_Decodify_Command
 12081 ;; This function uses a non-reentrant model
 12082 ;;
 12083                           
 12084                           
 12085                           ;psect for function _EEPROM_24C1025_Fill_All
 12086  1E74                     _EEPROM_24C1025_Fill_All:
 12087                           
 12088                           ;incstack = 0
 12089                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 12090                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12091  1E74  1283               	bcf	3,5	;RP0=0, select bank0
 12092  1E75  1303               	bcf	3,6	;RP1=0, select bank0
 12093  1E76  00DA               	movwf	EEPROM_24C1025_Fill_All@chip_add
 12094                           
 12095                           ;EEPROM_24C1025.c: 368:      unsigned long mem_add;;EEPROM_24C1025.c: 369:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 12096  1E77  3000               	movlw	0
 12097  1E78  00DE               	movwf	EEPROM_24C1025_Fill_All@mem_add+3
 12098  1E79  3000               	movlw	0
 12099  1E7A  00DD               	movwf	EEPROM_24C1025_Fill_All@mem_add+2
 12100  1E7B  3000               	movlw	0
 12101  1E7C  00DC               	movwf	EEPROM_24C1025_Fill_All@mem_add+1
 12102  1E7D  3000               	movlw	0
 12103  1E7E  00DB               	movwf	EEPROM_24C1025_Fill_All@mem_add
 12104  1E7F                     l5590:
 12105                           
 12106                           ;EEPROM_24C1025.c: 370:         {;EEPROM_24C1025.c: 371:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 12107  1E7F  1283               	bcf	3,5	;RP0=0, select bank0
 12108  1E80  1303               	bcf	3,6	;RP1=0, select bank0
 12109  1E81  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12110  1E82  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 12111  1E83  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12112  1E84  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 12113  1E85  085C               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12114  1E86  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 12115  1E87  085B               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 12116  1E88  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
 12117  1E89  0859               	movf	EEPROM_24C1025_Fill_All@value+1,w
 12118  1E8A  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
 12119  1E8B  0858               	movf	EEPROM_24C1025_Fill_All@value,w
 12120  1E8C  00D2               	movwf	EEPROM_24C1025_Write_Int@data
 12121  1E8D  085A               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 12122  1E8E  160A  158A  22E8  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
 12123  1E93  0064               	clrwdt	;# 
 12124                           
 12125                           ;EEPROM_24C1025.c: 373:         }
 12126  1E94  3002               	movlw	2
 12127  1E95  1283               	bcf	3,5	;RP0=0, select bank0
 12128  1E96  1303               	bcf	3,6	;RP1=0, select bank0
 12129  1E97  07DB               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 12130  1E98  3000               	movlw	0
 12131  1E99  1803               	skipnc
 12132  1E9A  3001               	movlw	1
 12133  1E9B  07DC               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 12134  1E9C  3000               	movlw	0
 12135  1E9D  1803               	skipnc
 12136  1E9E  3001               	movlw	1
 12137  1E9F  07DD               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 12138  1EA0  3000               	movlw	0
 12139  1EA1  1803               	skipnc
 12140  1EA2  3001               	movlw	1
 12141  1EA3  07DE               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 12142  1EA4  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12143  1EA5  1D03               	btfss	3,2
 12144  1EA6  0008               	return
 12145  1EA7  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12146  1EA8  1D03               	btfss	3,2
 12147  1EA9  0008               	return
 12148  1EAA  3004               	movlw	4
 12149  1EAB  025C               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12150  1EAC  1D03               	skipz
 12151  1EAD  2EB2               	goto	u5273
 12152  1EAE  3000               	movlw	0
 12153  1EAF  025B               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 12154  1EB0  1D03               	skipz
 12155  1EB1  2EB2               	goto	u5273
 12156  1EB2                     u5273:
 12157  1EB2  1803               	btfsc	3,0
 12158  1EB3  0008               	return
 12159  1EB4  2E7F               	goto	l5590
 12160  1EB5                     __end_of_EEPROM_24C1025_Fill_All:
 12161                           
 12162                           	psect	text50
 12163  1AE8                     __ptext50:	
 12164 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 12165 ;; Defined at:
 12166 ;;		line 352 in file "EEPROM_24C1025.c"
 12167 ;; Parameters:    Size  Location     Type
 12168 ;;  chip_add        1    wreg     unsigned char 
 12169 ;;  mem_add         4   46[BANK0 ] unsigned long 
 12170 ;;  data            2   50[BANK0 ] int 
 12171 ;; Auto vars:     Size  Location     Type
 12172 ;;  chip_add        1   53[BANK0 ] unsigned char 
 12173 ;;  local           2   54[BANK0 ] unsigned char [2]
 12174 ;; Return value:  Size  Location     Type
 12175 ;;                  1    wreg      void 
 12176 ;; Registers used:
 12177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12178 ;; Tracked objects:
 12179 ;;		On entry : 0/300
 12180 ;;		On exit  : 0/0
 12181 ;;		Unchanged: 0/0
 12182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12183 ;;      Params:         0       6       0       0       0
 12184 ;;      Locals:         0       3       0       0       0
 12185 ;;      Temps:          0       1       0       0       0
 12186 ;;      Totals:         0      10       0       0       0
 12187 ;;Total ram usage:       10 bytes
 12188 ;; Hardware stack levels used: 1
 12189 ;; Hardware stack levels required when called: 4
 12190 ;; This function calls:
 12191 ;;		_EEPROM_24C1025_Write_Buffer
 12192 ;; This function is called by:
 12193 ;;		_EEPROM_24C1025_Fill_All
 12194 ;;		_Decodify_Command
 12195 ;;		_Save_Log
 12196 ;; This function uses a non-reentrant model
 12197 ;;
 12198                           
 12199                           
 12200                           ;psect for function _EEPROM_24C1025_Write_Int
 12201  1AE8                     _EEPROM_24C1025_Write_Int:
 12202                           
 12203                           ;incstack = 0
 12204                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 12205                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 12206  1AE8  1283               	bcf	3,5	;RP0=0, select bank0
 12207  1AE9  1303               	bcf	3,6	;RP1=0, select bank0
 12208  1AEA  00D5               	movwf	EEPROM_24C1025_Write_Int@chip_add
 12209                           
 12210                           ;EEPROM_24C1025.c: 353:      char local[2];;EEPROM_24C1025.c: 354:      local[0]=((char 
      +                          *)&data)[1];
 12211  1AEB  0853               	movf	EEPROM_24C1025_Write_Int@data+1,w
 12212  1AEC  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12213  1AED  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12214  1AEE  00D6               	movwf	EEPROM_24C1025_Write_Int@local
 12215                           
 12216                           ;EEPROM_24C1025.c: 355:      local[1]=((char *)&data)[0];
 12217  1AEF  0852               	movf	EEPROM_24C1025_Write_Int@data,w
 12218  1AF0  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12219  1AF1  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12220  1AF2  00D7               	movwf	EEPROM_24C1025_Write_Int@local+1
 12221                           
 12222                           ;EEPROM_24C1025.c: 356:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12223  1AF3  0851               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 12224  1AF4  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12225  1AF5  0850               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 12226  1AF6  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12227  1AF7  084F               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 12228  1AF8  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12229  1AF9  084E               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 12230  1AFA  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12231  1AFB  3002               	movlw	2
 12232  1AFC  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12233  1AFD  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12234  1AFE  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12235  1AFF  3056               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12236  1B00  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 12237  1B01  3000               	movlw	0
 12238  1B02  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12239  1B03  0855               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 12240  1B04  160A  118A  2392   	fcall	_EEPROM_24C1025_Write_Buffer
 12241  1B07  0008               	return
 12242  1B08                     __end_of_EEPROM_24C1025_Write_Int:
 12243                           
 12244                           	psect	text51
 12245  1392                     __ptext51:	
 12246 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12247 ;; Defined at:
 12248 ;;		line 15 in file "EEPROM_24C1025.c"
 12249 ;; Parameters:    Size  Location     Type
 12250 ;;  chip_add        1    wreg     unsigned char 
 12251 ;;  mem_add         4   10[BANK0 ] unsigned long 
 12252 ;;  sizedata        1   14[BANK0 ] unsigned char 
 12253 ;;  data            2   15[BANK0 ] PTR unsigned char 
 12254 ;;		 -> usart_protocol.value(52), usart_protocol(58), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 12255 ;; Auto vars:     Size  Location     Type
 12256 ;;  chip_add        1   20[BANK0 ] unsigned char 
 12257 ;;  ctrl            1   22[BANK0 ] unsigned char 
 12258 ;;  range           1   21[BANK0 ] unsigned char 
 12259 ;;  count           1   19[BANK0 ] unsigned char 
 12260 ;; Return value:  Size  Location     Type
 12261 ;;                  1    wreg      void 
 12262 ;; Registers used:
 12263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12264 ;; Tracked objects:
 12265 ;;		On entry : 0/300
 12266 ;;		On exit  : 0/0
 12267 ;;		Unchanged: 0/0
 12268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12269 ;;      Params:         0       7       0       0       0
 12270 ;;      Locals:         0       4       0       0       0
 12271 ;;      Temps:          0       2       0       0       0
 12272 ;;      Totals:         0      13       0       0       0
 12273 ;;Total ram usage:       13 bytes
 12274 ;; Hardware stack levels used: 1
 12275 ;; Hardware stack levels required when called: 3
 12276 ;; This function calls:
 12277 ;;		_I2C_Master_Start
 12278 ;;		_I2C_Master_Stop
 12279 ;;		_I2C_Master_Write
 12280 ;;		_my_delay_ms_WDT
 12281 ;; This function is called by:
 12282 ;;		_EEPROM_24C1025_Write_Byte
 12283 ;;		_EEPROM_24C1025_Write_Int
 12284 ;;		_Decodify_Command
 12285 ;; This function uses a non-reentrant model
 12286 ;;
 12287                           
 12288                           
 12289                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12290  1392                     _EEPROM_24C1025_Write_Buffer:
 12291                           
 12292                           ;incstack = 0
 12293                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 12294                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12295  1392  1283               	bcf	3,5	;RP0=0, select bank0
 12296  1393  1303               	bcf	3,6	;RP1=0, select bank0
 12297  1394  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12298                           
 12299                           ;EEPROM_24C1025.c: 21:      unsigned char ctrl;;EEPROM_24C1025.c: 22:      unsigned char
      +                           count;;EEPROM_24C1025.c: 24:      Delay_Led_Memory=20;
 12300  1395  3014               	movlw	20
 12301  1396  1683               	bsf	3,5	;RP0=1, select bank1
 12302  1397  00D1               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12303  1398  3000               	movlw	0
 12304  1399  00D2               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12305                           
 12306                           ;EEPROM_24C1025.c: 26:      if(mem_add>0x1FFFF) return;
 12307  139A  1283               	bcf	3,5	;RP0=0, select bank0
 12308  139B  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12309  139C  1D03               	btfss	3,2
 12310  139D  0008               	return
 12311  139E  3002               	movlw	2
 12312  139F  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12313  13A0  1D03               	skipz
 12314  13A1  2BAA               	goto	u5203
 12315  13A2  3000               	movlw	0
 12316  13A3  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12317  13A4  1D03               	skipz
 12318  13A5  2BAA               	goto	u5203
 12319  13A6  3000               	movlw	0
 12320  13A7  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12321  13A8  1D03               	skipz
 12322  13A9  2BAA               	goto	u5203
 12323  13AA                     u5203:
 12324  13AA  1803               	btfsc	3,0
 12325  13AB  0008               	return
 12326                           
 12327                           ;EEPROM_24C1025.c: 28:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12328  13AC  1283               	bcf	3,5	;RP0=0, select bank0
 12329  13AD  1303               	bcf	3,6	;RP1=0, select bank0
 12330  13AE  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12331  13AF  1D03               	btfss	3,2
 12332  13B0  2BBF               	goto	l5488
 12333  13B1  3001               	movlw	1
 12334  13B2  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12335  13B3  1D03               	skipz
 12336  13B4  2BBD               	goto	u5213
 12337  13B5  3000               	movlw	0
 12338  13B6  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12339  13B7  1D03               	skipz
 12340  13B8  2BBD               	goto	u5213
 12341  13B9  3000               	movlw	0
 12342  13BA  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12343  13BB  1D03               	skipz
 12344  13BC  2BBD               	goto	u5213
 12345  13BD                     u5213:
 12346  13BD  1C03               	btfss	3,0
 12347  13BE  2BC6               	goto	l5490
 12348  13BF                     l5488:
 12349  13BF  3008               	movlw	8
 12350  13C0  1283               	bcf	3,5	;RP0=0, select bank0
 12351  13C1  1303               	bcf	3,6	;RP1=0, select bank0
 12352  13C2  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12353  13C3  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12354  13C4  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12355  13C5  2BC9               	goto	l5492
 12356  13C6                     l5490:
 12357  13C6  1283               	bcf	3,5	;RP0=0, select bank0
 12358  13C7  1303               	bcf	3,6	;RP1=0, select bank0
 12359  13C8  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12360  13C9                     l5492:
 12361                           
 12362                           ;EEPROM_24C1025.c: 29:      ctrl=chip_add;
 12363  13C9  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12364  13CA  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12365  13CB  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12366  13CC  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12367                           
 12368                           ;EEPROM_24C1025.c: 30:      ctrl<<=1;
 12369  13CD  1003               	clrc
 12370  13CE  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12371                           
 12372                           ;EEPROM_24C1025.c: 31:      ctrl |= 0xA0;
 12373  13CF  30A0               	movlw	160
 12374  13D0  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12375  13D1  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12376  13D2  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12377                           
 12378                           ;EEPROM_24C1025.c: 32:      ctrl |= range;
 12379  13D3  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12380  13D4  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12381  13D5  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12382  13D6  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12383                           
 12384                           ;EEPROM_24C1025.c: 34:      I2C_Master_Start();
 12385  13D7  160A  118A  2002  160A  118A  	fcall	_I2C_Master_Start
 12386                           
 12387                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(ctrl);
 12388  13DC  1283               	bcf	3,5	;RP0=0, select bank0
 12389  13DD  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12390  13DE  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12391  13DF  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12392  13E0  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12393  13E1  00A3               	movwf	I2C_Master_Write@d
 12394  13E2  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12395  13E3  00A4               	movwf	I2C_Master_Write@d+1
 12396  13E4  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 12397                           
 12398                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[1]);
 12399  13E9  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12400  13EA  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12401  13EB  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12402  13EC  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12403  13ED  00A3               	movwf	I2C_Master_Write@d
 12404  13EE  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12405  13EF  00A4               	movwf	I2C_Master_Write@d+1
 12406  13F0  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 12407                           
 12408                           ;EEPROM_24C1025.c: 37:      I2C_Master_Write(((char *)&mem_add)[0]);
 12409  13F5  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12410  13F6  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12411  13F7  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12412  13F8  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12413  13F9  00A3               	movwf	I2C_Master_Write@d
 12414  13FA  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12415  13FB  00A4               	movwf	I2C_Master_Write@d+1
 12416  13FC  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 12417                           
 12418                           ;EEPROM_24C1025.c: 38:      for(count=0;count<(sizedata-1);count++)
 12419  1401  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 12420  1402                     l5554:
 12421  1402  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12422  1403  3EFF               	addlw	255
 12423  1404  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12424  1405  30FF               	movlw	255
 12425  1406  1803               	skipnc
 12426  1407  3000               	movlw	0
 12427  1408  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12428  1409  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12429  140A  3A80               	xorlw	128
 12430  140B  3C80               	sublw	128
 12431  140C  1D03               	skipz
 12432  140D  2C10               	goto	u5255
 12433  140E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12434  140F  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12435  1410                     u5255:
 12436  1410  1803               	btfsc	3,0
 12437  1411  2CE3               	goto	l5556
 12438  1412  0064               	clrwdt	;# 
 12439                           
 12440                           ;EEPROM_24C1025.c: 41:           if(mem_add>0x1FFFF) return;
 12441  1413  1283               	bcf	3,5	;RP0=0, select bank0
 12442  1414  1303               	bcf	3,6	;RP1=0, select bank0
 12443  1415  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12444  1416  1D03               	btfss	3,2
 12445  1417  0008               	return
 12446  1418  3002               	movlw	2
 12447  1419  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12448  141A  1D03               	skipz
 12449  141B  2C24               	goto	u5223
 12450  141C  3000               	movlw	0
 12451  141D  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12452  141E  1D03               	skipz
 12453  141F  2C24               	goto	u5223
 12454  1420  3000               	movlw	0
 12455  1421  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12456  1422  1D03               	skipz
 12457  1423  2C24               	goto	u5223
 12458  1424                     u5223:
 12459  1424  1803               	btfsc	3,0
 12460  1425  0008               	return
 12461                           
 12462                           ;EEPROM_24C1025.c: 42:           if((mem_add+1)%128==0)
 12463  1426  1283               	bcf	3,5	;RP0=0, select bank0
 12464  1427  1303               	bcf	3,6	;RP1=0, select bank0
 12465  1428  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12466  1429  3E01               	addlw	1
 12467  142A  397F               	andlw	127
 12468  142B  1D03               	btfss	3,2
 12469  142C  2CB9               	goto	l5546
 12470                           
 12471                           ;EEPROM_24C1025.c: 43:             {;EEPROM_24C1025.c: 44:             I2C_Master_Write(
      +                          *data);
 12472  142D  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12473  142E  0084               	movwf	4
 12474  142F  1783               	bsf	3,7
 12475  1430  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12476  1431  1383               	bcf	3,7
 12477  1432  0800               	movf	0,w
 12478  1433  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12479  1434  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12480  1435  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12481  1436  00A3               	movwf	I2C_Master_Write@d
 12482  1437  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12483  1438  00A4               	movwf	I2C_Master_Write@d+1
 12484  1439  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 12485                           
 12486                           ;EEPROM_24C1025.c: 45:             I2C_Master_Stop();
 12487  143E  160A  158A  21BE  160A  118A  	fcall	_I2C_Master_Stop
 12488                           
 12489                           ;EEPROM_24C1025.c: 47:             my_delay_ms_WDT(5);
 12490  1443  3000               	movlw	0
 12491  1444  1283               	bcf	3,5	;RP0=0, select bank0
 12492  1445  00A3               	movwf	my_delay_ms_WDT@time+3
 12493  1446  3000               	movlw	0
 12494  1447  00A2               	movwf	my_delay_ms_WDT@time+2
 12495  1448  3000               	movlw	0
 12496  1449  00A1               	movwf	my_delay_ms_WDT@time+1
 12497  144A  3005               	movlw	5
 12498  144B  00A0               	movwf	my_delay_ms_WDT@time
 12499  144C  160A  158A  258C  160A  118A  	fcall	_my_delay_ms_WDT
 12500                           
 12501                           ;EEPROM_24C1025.c: 48:             mem_add++;
 12502  1451  3001               	movlw	1
 12503  1452  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12504  1453  3000               	movlw	0
 12505  1454  1803               	skipnc
 12506  1455  3001               	movlw	1
 12507  1456  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12508  1457  3000               	movlw	0
 12509  1458  1803               	skipnc
 12510  1459  3001               	movlw	1
 12511  145A  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12512  145B  3000               	movlw	0
 12513  145C  1803               	skipnc
 12514  145D  3001               	movlw	1
 12515  145E  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12516                           
 12517                           ;EEPROM_24C1025.c: 49:             data++;
 12518  145F  3001               	movlw	1
 12519  1460  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12520  1461  1803               	skipnc
 12521  1462  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12522  1463  3000               	movlw	0
 12523  1464  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12524                           
 12525                           ;EEPROM_24C1025.c: 50:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12526  1465  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12527  1466  1D03               	btfss	3,2
 12528  1467  2C76               	goto	l5526
 12529  1468  3001               	movlw	1
 12530  1469  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12531  146A  1D03               	skipz
 12532  146B  2C74               	goto	u5243
 12533  146C  3000               	movlw	0
 12534  146D  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12535  146E  1D03               	skipz
 12536  146F  2C74               	goto	u5243
 12537  1470  3000               	movlw	0
 12538  1471  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12539  1472  1D03               	skipz
 12540  1473  2C74               	goto	u5243
 12541  1474                     u5243:
 12542  1474  1C03               	btfss	3,0
 12543  1475  2C7D               	goto	l5528
 12544  1476                     l5526:
 12545  1476  3008               	movlw	8
 12546  1477  1283               	bcf	3,5	;RP0=0, select bank0
 12547  1478  1303               	bcf	3,6	;RP1=0, select bank0
 12548  1479  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12549  147A  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12550  147B  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12551  147C  2C80               	goto	l5530
 12552  147D                     l5528:
 12553  147D  1283               	bcf	3,5	;RP0=0, select bank0
 12554  147E  1303               	bcf	3,6	;RP1=0, select bank0
 12555  147F  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12556  1480                     l5530:
 12557                           
 12558                           ;EEPROM_24C1025.c: 51:             ctrl=chip_add;
 12559  1480  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12560  1481  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12561  1482  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12562  1483  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12563                           
 12564                           ;EEPROM_24C1025.c: 52:             ctrl<<=1;
 12565  1484  1003               	clrc
 12566  1485  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12567                           
 12568                           ;EEPROM_24C1025.c: 53:             ctrl |= 0xA0;
 12569  1486  30A0               	movlw	160
 12570  1487  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12571  1488  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12572  1489  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12573                           
 12574                           ;EEPROM_24C1025.c: 54:             ctrl |= range;
 12575  148A  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12576  148B  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12577  148C  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12578  148D  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12579                           
 12580                           ;EEPROM_24C1025.c: 56:             I2C_Master_Start();
 12581  148E  160A  118A  2002  160A  118A  	fcall	_I2C_Master_Start
 12582                           
 12583                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(ctrl);
 12584  1493  1283               	bcf	3,5	;RP0=0, select bank0
 12585  1494  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12586  1495  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12587  1496  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12588  1497  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12589  1498  00A3               	movwf	I2C_Master_Write@d
 12590  1499  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12591  149A  00A4               	movwf	I2C_Master_Write@d+1
 12592  149B  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 12593                           
 12594                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[1]);
 12595  14A0  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12596  14A1  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12597  14A2  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12598  14A3  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12599  14A4  00A3               	movwf	I2C_Master_Write@d
 12600  14A5  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12601  14A6  00A4               	movwf	I2C_Master_Write@d+1
 12602  14A7  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 12603                           
 12604                           ;EEPROM_24C1025.c: 59:             I2C_Master_Write(((char *)&mem_add)[0]);
 12605  14AC  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12606  14AD  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12607  14AE  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12608  14AF  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12609  14B0  00A3               	movwf	I2C_Master_Write@d
 12610  14B1  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12611  14B2  00A4               	movwf	I2C_Master_Write@d+1
 12612  14B3  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 12613                           
 12614                           ;EEPROM_24C1025.c: 60:             }
 12615  14B8  2CDE               	goto	l5552
 12616  14B9                     l5546:
 12617                           
 12618                           ;EEPROM_24C1025.c: 62:             {;EEPROM_24C1025.c: 63:             I2C_Master_Write(
      +                          *data);
 12619  14B9  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12620  14BA  0084               	movwf	4
 12621  14BB  1783               	bsf	3,7
 12622  14BC  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12623  14BD  1383               	bcf	3,7
 12624  14BE  0800               	movf	0,w
 12625  14BF  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12626  14C0  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12627  14C1  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12628  14C2  00A3               	movwf	I2C_Master_Write@d
 12629  14C3  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12630  14C4  00A4               	movwf	I2C_Master_Write@d+1
 12631  14C5  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 12632                           
 12633                           ;EEPROM_24C1025.c: 64:             data++;
 12634  14CA  3001               	movlw	1
 12635  14CB  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12636  14CC  1803               	skipnc
 12637  14CD  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12638  14CE  3000               	movlw	0
 12639  14CF  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12640                           
 12641                           ;EEPROM_24C1025.c: 65:             mem_add++;
 12642  14D0  3001               	movlw	1
 12643  14D1  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12644  14D2  3000               	movlw	0
 12645  14D3  1803               	skipnc
 12646  14D4  3001               	movlw	1
 12647  14D5  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12648  14D6  3000               	movlw	0
 12649  14D7  1803               	skipnc
 12650  14D8  3001               	movlw	1
 12651  14D9  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12652  14DA  3000               	movlw	0
 12653  14DB  1803               	skipnc
 12654  14DC  3001               	movlw	1
 12655  14DD  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12656  14DE                     l5552:
 12657                           
 12658                           ;EEPROM_24C1025.c: 67:      }
 12659  14DE  3001               	movlw	1
 12660  14DF  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12661  14E0  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12662  14E1  07B3               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 12663  14E2  2C02               	goto	l5554
 12664  14E3                     l5556:
 12665                           
 12666                           ;EEPROM_24C1025.c: 68:      I2C_Master_Write(*data);
 12667  14E3  1283               	bcf	3,5	;RP0=0, select bank0
 12668  14E4  1303               	bcf	3,6	;RP1=0, select bank0
 12669  14E5  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12670  14E6  0084               	movwf	4
 12671  14E7  1783               	bsf	3,7
 12672  14E8  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12673  14E9  1383               	bcf	3,7
 12674  14EA  0800               	movf	0,w
 12675  14EB  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12676  14EC  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12677  14ED  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12678  14EE  00A3               	movwf	I2C_Master_Write@d
 12679  14EF  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12680  14F0  00A4               	movwf	I2C_Master_Write@d+1
 12681  14F1  160A  158A  21E5  160A  118A  	fcall	_I2C_Master_Write
 12682                           
 12683                           ;EEPROM_24C1025.c: 69:      I2C_Master_Stop();
 12684  14F6  160A  158A  21BE  160A  118A  	fcall	_I2C_Master_Stop
 12685                           
 12686                           ;EEPROM_24C1025.c: 71:      my_delay_ms_WDT(5);
 12687  14FB  3000               	movlw	0
 12688  14FC  1283               	bcf	3,5	;RP0=0, select bank0
 12689  14FD  00A3               	movwf	my_delay_ms_WDT@time+3
 12690  14FE  3000               	movlw	0
 12691  14FF  00A2               	movwf	my_delay_ms_WDT@time+2
 12692  1500  3000               	movlw	0
 12693  1501  00A1               	movwf	my_delay_ms_WDT@time+1
 12694  1502  3005               	movlw	5
 12695  1503  00A0               	movwf	my_delay_ms_WDT@time
 12696  1504  160A  158A  258C   	fcall	_my_delay_ms_WDT
 12697  1507  0008               	return
 12698  1508                     __end_of_EEPROM_24C1025_Write_Buffer:
 12699                           
 12700                           	psect	text52
 12701  1D8C                     __ptext52:	
 12702 ;; *************** function _my_delay_ms_WDT *****************
 12703 ;; Defined at:
 12704 ;;		line 13 in file "my_delay.c"
 12705 ;; Parameters:    Size  Location     Type
 12706 ;;  time            4    0[BANK0 ] long 
 12707 ;; Auto vars:     Size  Location     Type
 12708 ;;  i               4    6[BANK0 ] long 
 12709 ;; Return value:  Size  Location     Type
 12710 ;;                  1    wreg      void 
 12711 ;; Registers used:
 12712 ;;		wreg, btemp+1
 12713 ;; Tracked objects:
 12714 ;;		On entry : 300/0
 12715 ;;		On exit  : 300/0
 12716 ;;		Unchanged: 0/0
 12717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12718 ;;      Params:         0       4       0       0       0
 12719 ;;      Locals:         0       4       0       0       0
 12720 ;;      Temps:          0       2       0       0       0
 12721 ;;      Totals:         0      10       0       0       0
 12722 ;;Total ram usage:       10 bytes
 12723 ;; Hardware stack levels used: 1
 12724 ;; Hardware stack levels required when called: 1
 12725 ;; This function calls:
 12726 ;;		Nothing
 12727 ;; This function is called by:
 12728 ;;		_EEPROM_24C1025_Write_Buffer
 12729 ;;		_EEPROM_24C1025_Read_Buffer
 12730 ;;		_EEPROM_24C1025_Write_Str
 12731 ;;		_main
 12732 ;; This function uses a non-reentrant model
 12733 ;;
 12734                           
 12735                           
 12736                           ;psect for function _my_delay_ms_WDT
 12737  1D8C                     _my_delay_ms_WDT:
 12738                           
 12739                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 12740                           
 12741                           ;incstack = 0
 12742                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 12743  1D8C  3000               	movlw	0
 12744  1D8D  00A9               	movwf	my_delay_ms_WDT@i+3
 12745  1D8E  3000               	movlw	0
 12746  1D8F  00A8               	movwf	my_delay_ms_WDT@i+2
 12747  1D90  3000               	movlw	0
 12748  1D91  00A7               	movwf	my_delay_ms_WDT@i+1
 12749  1D92  3000               	movlw	0
 12750  1D93  00A6               	movwf	my_delay_ms_WDT@i
 12751  1D94                     l3536:
 12752  1D94  0829               	movf	my_delay_ms_WDT@i+3,w
 12753  1D95  3A80               	xorlw	128
 12754  1D96  00FF               	movwf	127
 12755  1D97  0823               	movf	my_delay_ms_WDT@time+3,w
 12756  1D98  3A80               	xorlw	128
 12757  1D99  027F               	subwf	127,w
 12758  1D9A  1D03               	skipz
 12759  1D9B  2DA6               	goto	u2633
 12760  1D9C  0822               	movf	my_delay_ms_WDT@time+2,w
 12761  1D9D  0228               	subwf	my_delay_ms_WDT@i+2,w
 12762  1D9E  1D03               	skipz
 12763  1D9F  2DA6               	goto	u2633
 12764  1DA0  0821               	movf	my_delay_ms_WDT@time+1,w
 12765  1DA1  0227               	subwf	my_delay_ms_WDT@i+1,w
 12766  1DA2  1D03               	skipz
 12767  1DA3  2DA6               	goto	u2633
 12768  1DA4  0820               	movf	my_delay_ms_WDT@time,w
 12769  1DA5  0226               	subwf	my_delay_ms_WDT@i,w
 12770  1DA6                     u2633:
 12771  1DA6  1803               	btfsc	3,0
 12772  1DA7  0008               	return
 12773  1DA8  0064               	clrwdt	;# 
 12774                           
 12775                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 12776  1DA9  3003               	movlw	3
 12777  1DAA  1283               	bcf	3,5	;RP0=0, select bank0
 12778  1DAB  1303               	bcf	3,6	;RP1=0, select bank0
 12779  1DAC  00A5               	movwf	??_my_delay_ms_WDT+1
 12780  1DAD  3097               	movlw	151
 12781  1DAE  00A4               	movwf	??_my_delay_ms_WDT
 12782  1DAF                     u5497:
 12783  1DAF  0BA4               	decfsz	??_my_delay_ms_WDT,f
 12784  1DB0  2DAF               	goto	u5497
 12785  1DB1  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 12786  1DB2  2DAF               	goto	u5497
 12787                           
 12788                           ;my_delay.c: 19:             }
 12789  1DB3  3001               	movlw	1
 12790  1DB4  1283               	bcf	3,5	;RP0=0, select bank0
 12791  1DB5  1303               	bcf	3,6	;RP1=0, select bank0
 12792  1DB6  07A6               	addwf	my_delay_ms_WDT@i,f
 12793  1DB7  3000               	movlw	0
 12794  1DB8  1803               	skipnc
 12795  1DB9  3001               	movlw	1
 12796  1DBA  07A7               	addwf	my_delay_ms_WDT@i+1,f
 12797  1DBB  3000               	movlw	0
 12798  1DBC  1803               	skipnc
 12799  1DBD  3001               	movlw	1
 12800  1DBE  07A8               	addwf	my_delay_ms_WDT@i+2,f
 12801  1DBF  3000               	movlw	0
 12802  1DC0  1803               	skipnc
 12803  1DC1  3001               	movlw	1
 12804  1DC2  07A9               	addwf	my_delay_ms_WDT@i+3,f
 12805  1DC3  2D94               	goto	l3536
 12806  1DC4                     __end_of_my_delay_ms_WDT:
 12807                           
 12808                           	psect	text53
 12809  19E5                     __ptext53:	
 12810 ;; *************** function _I2C_Master_Write *****************
 12811 ;; Defined at:
 12812 ;;		line 79 in file "I2C.c"
 12813 ;; Parameters:    Size  Location     Type
 12814 ;;  d               2    3[BANK0 ] unsigned int 
 12815 ;; Auto vars:     Size  Location     Type
 12816 ;;		None
 12817 ;; Return value:  Size  Location     Type
 12818 ;;                  1    wreg      void 
 12819 ;; Registers used:
 12820 ;;		wreg, status,2, status,0, pclath, cstack
 12821 ;; Tracked objects:
 12822 ;;		On entry : 300/0
 12823 ;;		On exit  : 300/0
 12824 ;;		Unchanged: 0/0
 12825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12826 ;;      Params:         0       2       0       0       0
 12827 ;;      Locals:         0       0       0       0       0
 12828 ;;      Temps:          0       0       0       0       0
 12829 ;;      Totals:         0       2       0       0       0
 12830 ;;Total ram usage:        2 bytes
 12831 ;; Hardware stack levels used: 1
 12832 ;; Hardware stack levels required when called: 2
 12833 ;; This function calls:
 12834 ;;		_I2C_Master_Wait
 12835 ;; This function is called by:
 12836 ;;		_EEPROM_24C1025_Write_Buffer
 12837 ;;		_EEPROM_24C1025_Read_Buffer
 12838 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12839 ;;		_EEPROM_24C1025_Write_Str
 12840 ;;		_EEPROM_24C1025_Read_Str
 12841 ;; This function uses a non-reentrant model
 12842 ;;
 12843                           
 12844                           
 12845                           ;psect for function _I2C_Master_Write
 12846  19E5                     _I2C_Master_Write:
 12847                           
 12848                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 12849                           
 12850                           ;incstack = 0
 12851                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 12852  19E5  160A  158A  2328  160A  158A  	fcall	_I2C_Master_Wait
 12853  19EA  3A00               	xorlw	0
 12854  19EB  1903               	skipnz
 12855  19EC  0008               	return
 12856                           
 12857                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 12858  19ED  0823               	movf	I2C_Master_Write@d,w
 12859  19EE  0093               	movwf	19	;volatile
 12860  19EF  0008               	return
 12861  19F0                     __end_of_I2C_Master_Write:
 12862                           
 12863                           	psect	text54
 12864  19BE                     __ptext54:	
 12865 ;; *************** function _I2C_Master_Stop *****************
 12866 ;; Defined at:
 12867 ;;		line 70 in file "I2C.c"
 12868 ;; Parameters:    Size  Location     Type
 12869 ;;		None
 12870 ;; Auto vars:     Size  Location     Type
 12871 ;;		None
 12872 ;; Return value:  Size  Location     Type
 12873 ;;                  1    wreg      void 
 12874 ;; Registers used:
 12875 ;;		wreg, status,2, status,0, pclath, cstack
 12876 ;; Tracked objects:
 12877 ;;		On entry : 300/800
 12878 ;;		On exit  : 200/0
 12879 ;;		Unchanged: 0/0
 12880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12881 ;;      Params:         0       0       0       0       0
 12882 ;;      Locals:         0       0       0       0       0
 12883 ;;      Temps:          0       0       0       0       0
 12884 ;;      Totals:         0       0       0       0       0
 12885 ;;Total ram usage:        0 bytes
 12886 ;; Hardware stack levels used: 1
 12887 ;; Hardware stack levels required when called: 2
 12888 ;; This function calls:
 12889 ;;		_I2C_Master_Wait
 12890 ;; This function is called by:
 12891 ;;		_EEPROM_24C1025_Write_Buffer
 12892 ;;		_EEPROM_24C1025_Read_Buffer
 12893 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12894 ;;		_EEPROM_24C1025_Write_Str
 12895 ;;		_EEPROM_24C1025_Read_Str
 12896 ;; This function uses a non-reentrant model
 12897 ;;
 12898                           
 12899                           
 12900                           ;psect for function _I2C_Master_Stop
 12901  19BE                     _I2C_Master_Stop:
 12902                           
 12903                           ;I2C.c: 72:   if(I2C_Master_Wait())
 12904                           
 12905                           ;incstack = 0
 12906                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 12907  19BE  160A  158A  2328   	fcall	_I2C_Master_Wait
 12908  19C1  3A00               	xorlw	0
 12909                           
 12910                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 12911  19C2  1683               	bsf	3,5	;RP0=1, select bank1
 12912  19C3  1D03               	btfss	3,2
 12913  19C4  1511               	bsf	17,2	;volatile
 12914                           
 12915                           ;I2C.c: 76:   INTCONbits.GIE=1;
 12916                           
 12917                           ;I2C.c: 75:     }
 12918  19C5  178B               	bsf	11,7	;volatile
 12919  19C6  0008               	return
 12920  19C7                     __end_of_I2C_Master_Stop:
 12921                           
 12922                           	psect	text55
 12923  1002                     __ptext55:	
 12924 ;; *************** function _I2C_Master_Start *****************
 12925 ;; Defined at:
 12926 ;;		line 52 in file "I2C.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;		None
 12929 ;; Auto vars:     Size  Location     Type
 12930 ;;		None
 12931 ;; Return value:  Size  Location     Type
 12932 ;;                  1    wreg      void 
 12933 ;; Registers used:
 12934 ;;		wreg, status,2, status,0, pclath, cstack
 12935 ;; Tracked objects:
 12936 ;;		On entry : 300/0
 12937 ;;		On exit  : 200/0
 12938 ;;		Unchanged: 0/0
 12939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12940 ;;      Params:         0       0       0       0       0
 12941 ;;      Locals:         0       0       0       0       0
 12942 ;;      Temps:          0       0       0       0       0
 12943 ;;      Totals:         0       0       0       0       0
 12944 ;;Total ram usage:        0 bytes
 12945 ;; Hardware stack levels used: 1
 12946 ;; Hardware stack levels required when called: 2
 12947 ;; This function calls:
 12948 ;;		_I2C_Master_Wait
 12949 ;; This function is called by:
 12950 ;;		_EEPROM_24C1025_Write_Buffer
 12951 ;;		_EEPROM_24C1025_Read_Buffer
 12952 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12953 ;;		_EEPROM_24C1025_Write_Str
 12954 ;;		_EEPROM_24C1025_Read_Str
 12955 ;; This function uses a non-reentrant model
 12956 ;;
 12957                           
 12958                           
 12959                           ;psect for function _I2C_Master_Start
 12960  1002                     _I2C_Master_Start:
 12961                           
 12962                           ;I2C.c: 54:   INTCONbits.GIE=0;
 12963                           
 12964                           ;incstack = 0
 12965                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 12966  1002  138B               	bcf	11,7	;volatile
 12967                           
 12968                           ;I2C.c: 55:   Delay_Led_Memory=20;
 12969  1003  3014               	movlw	20
 12970  1004  1683               	bsf	3,5	;RP0=1, select bank1
 12971  1005  00D1               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12972  1006  3000               	movlw	0
 12973  1007  00D2               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12974                           
 12975                           ;I2C.c: 56:   if(I2C_Master_Wait())
 12976  1008  160A  158A  2328  160A  118A  	fcall	_I2C_Master_Wait
 12977  100D  3A00               	xorlw	0
 12978  100E  1903               	skipnz
 12979  100F  0008               	return
 12980                           
 12981                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 12982  1010  1683               	bsf	3,5	;RP0=1, select bank1
 12983  1011  1411               	bsf	17,0	;volatile
 12984  1012  0008               	return
 12985  1013                     __end_of_I2C_Master_Start:
 12986                           
 12987                           	psect	text56
 12988  1B28                     __ptext56:	
 12989 ;; *************** function _I2C_Master_Wait *****************
 12990 ;; Defined at:
 12991 ;;		line 37 in file "I2C.c"
 12992 ;; Parameters:    Size  Location     Type
 12993 ;;		None
 12994 ;; Auto vars:     Size  Location     Type
 12995 ;;  tempo           1    2[BANK0 ] unsigned char 
 12996 ;; Return value:  Size  Location     Type
 12997 ;;                  1    wreg      unsigned char 
 12998 ;; Registers used:
 12999 ;;		wreg, status,2, status,0
 13000 ;; Tracked objects:
 13001 ;;		On entry : 200/0
 13002 ;;		On exit  : 300/0
 13003 ;;		Unchanged: 0/0
 13004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13005 ;;      Params:         0       0       0       0       0
 13006 ;;      Locals:         0       1       0       0       0
 13007 ;;      Temps:          0       2       0       0       0
 13008 ;;      Totals:         0       3       0       0       0
 13009 ;;Total ram usage:        3 bytes
 13010 ;; Hardware stack levels used: 1
 13011 ;; Hardware stack levels required when called: 1
 13012 ;; This function calls:
 13013 ;;		Nothing
 13014 ;; This function is called by:
 13015 ;;		_I2C_Master_Start
 13016 ;;		_I2C_Master_RepeatedStart
 13017 ;;		_I2C_Master_Stop
 13018 ;;		_I2C_Master_Write
 13019 ;;		_I2C_Master_Read
 13020 ;; This function uses a non-reentrant model
 13021 ;;
 13022                           
 13023                           
 13024                           ;psect for function _I2C_Master_Wait
 13025  1B28                     _I2C_Master_Wait:
 13026                           
 13027                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 13028                           
 13029                           ;incstack = 0
 13030                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 13031  1B28  30C8               	movlw	200
 13032  1B29  1283               	bcf	3,5	;RP0=0, select bank0
 13033  1B2A  00A0               	movwf	??_I2C_Master_Wait
 13034  1B2B  0820               	movf	??_I2C_Master_Wait,w
 13035  1B2C  00A2               	movwf	I2C_Master_Wait@tempo
 13036                           
 13037                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13038  1B2D  2B3A               	goto	l3508
 13039  1B2E                     l3504:
 13040                           
 13041                           ;I2C.c: 44:          tempo--;
 13042  1B2E  3001               	movlw	1
 13043  1B2F  02A2               	subwf	I2C_Master_Wait@tempo,f
 13044                           
 13045                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 13046  1B30  3003               	movlw	3
 13047  1B31  1283               	bcf	3,5	;RP0=0, select bank0
 13048  1B32  1303               	bcf	3,6	;RP1=0, select bank0
 13049  1B33  00A1               	movwf	??_I2C_Master_Wait+1
 13050  1B34  3097               	movlw	151
 13051  1B35  00A0               	movwf	??_I2C_Master_Wait
 13052  1B36                     u5507:
 13053  1B36  0BA0               	decfsz	??_I2C_Master_Wait,f
 13054  1B37  2B36               	goto	u5507
 13055  1B38  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 13056  1B39  2B36               	goto	u5507
 13057  1B3A                     l3508:
 13058                           
 13059                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13060  1B3A  1683               	bsf	3,5	;RP0=1, select bank1
 13061  1B3B  1303               	bcf	3,6	;RP1=0, select bank1
 13062  1B3C  1914               	btfsc	20,2	;volatile
 13063  1B3D  2B42               	goto	l3502
 13064  1B3E  0811               	movf	17,w	;volatile
 13065  1B3F  391F               	andlw	31
 13066  1B40  1903               	btfsc	3,2
 13067  1B41  2B46               	goto	l3512
 13068  1B42                     l3502:
 13069                           
 13070                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 13071  1B42  1283               	bcf	3,5	;RP0=0, select bank0
 13072  1B43  0822               	movf	I2C_Master_Wait@tempo,w
 13073  1B44  1D03               	btfss	3,2
 13074  1B45  2B2E               	goto	l3504
 13075  1B46                     l3512:
 13076                           
 13077                           ;I2C.c: 49:   return tempo ;
 13078  1B46  1283               	bcf	3,5	;RP0=0, select bank0
 13079  1B47  0822               	movf	I2C_Master_Wait@tempo,w
 13080  1B48  0008               	return
 13081  1B49                     __end_of_I2C_Master_Wait:
 13082                           
 13083                           	psect	text57
 13084  19DA                     __ptext57:	
 13085 ;; *************** function _ADC_init *****************
 13086 ;; Defined at:
 13087 ;;		line 10 in file "adc.c"
 13088 ;; Parameters:    Size  Location     Type
 13089 ;;		None
 13090 ;; Auto vars:     Size  Location     Type
 13091 ;;		None
 13092 ;; Return value:  Size  Location     Type
 13093 ;;                  1    wreg      void 
 13094 ;; Registers used:
 13095 ;;		wreg, status,2, status,0
 13096 ;; Tracked objects:
 13097 ;;		On entry : 0/100
 13098 ;;		On exit  : 300/0
 13099 ;;		Unchanged: 0/0
 13100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13101 ;;      Params:         0       0       0       0       0
 13102 ;;      Locals:         0       0       0       0       0
 13103 ;;      Temps:          0       0       0       0       0
 13104 ;;      Totals:         0       0       0       0       0
 13105 ;;Total ram usage:        0 bytes
 13106 ;; Hardware stack levels used: 1
 13107 ;; Hardware stack levels required when called: 1
 13108 ;; This function calls:
 13109 ;;		Nothing
 13110 ;; This function is called by:
 13111 ;;		_main
 13112 ;; This function uses a non-reentrant model
 13113 ;;
 13114                           
 13115                           
 13116                           ;psect for function _ADC_init
 13117  19DA                     _ADC_init:
 13118                           
 13119                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13120                           
 13121                           ;incstack = 0
 13122                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13123  19DA  30C0               	movlw	192
 13124  19DB  1283               	bcf	3,5	;RP0=0, select bank0
 13125  19DC  1303               	bcf	3,6	;RP1=0, select bank0
 13126  19DD  049F               	iorwf	31,f	;volatile
 13127                           
 13128                           ;adc.c: 12:      ADCON1=0b10000000;
 13129  19DE  3080               	movlw	128
 13130  19DF  1683               	bsf	3,5	;RP0=1, select bank1
 13131  19E0  009F               	movwf	31	;volatile
 13132                           
 13133                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13134  19E1  179F               	bsf	31,7	;volatile
 13135                           
 13136                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13137  19E2  1283               	bcf	3,5	;RP0=0, select bank0
 13138  19E3  141F               	bsf	31,0	;volatile
 13139  19E4  0008               	return
 13140  19E5                     __end_of_ADC_init:
 13141                           
 13142                           	psect	text58
 13143  11B4                     __ptext58:	
 13144 ;; *************** function _isr *****************
 13145 ;; Defined at:
 13146 ;;		line 29 in file "isr.c"
 13147 ;; Parameters:    Size  Location     Type
 13148 ;;		None
 13149 ;; Auto vars:     Size  Location     Type
 13150 ;;  tempo           2    6[COMMON] unsigned int 
 13151 ;; Return value:  Size  Location     Type
 13152 ;;                  1    wreg      void 
 13153 ;; Registers used:
 13154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13155 ;; Tracked objects:
 13156 ;;		On entry : 0/0
 13157 ;;		On exit  : 300/0
 13158 ;;		Unchanged: 0/0
 13159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13160 ;;      Params:         0       0       0       0       0
 13161 ;;      Locals:         2       0       0       0       0
 13162 ;;      Temps:          6       0       0       0       0
 13163 ;;      Totals:         8       0       0       0       0
 13164 ;;Total ram usage:        8 bytes
 13165 ;; Hardware stack levels used: 1
 13166 ;; This function calls:
 13167 ;;		Nothing
 13168 ;; This function is called by:
 13169 ;;		Interrupt level 1
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           
 13174                           ;psect for function _isr
 13175  11B4                     _isr:
 13176                           
 13177                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13178  11B4  188B               	btfsc	11,1	;volatile
 13179                           
 13180                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13181  11B5  108B               	bcf	11,1	;volatile
 13182                           
 13183                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13184                           
 13185                           ;isr.c: 37:       }
 13186  11B6  1C0C               	btfss	12,0	;volatile
 13187  11B7  2A2E               	goto	i1l5412
 13188                           
 13189                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13190  11B8  30B1               	movlw	177
 13191  11B9  008F               	movwf	15	;volatile
 13192                           
 13193                           ;isr.c: 42:                 TMR1L=0xF3;
 13194  11BA  30F3               	movlw	243
 13195  11BB  008E               	movwf	14	;volatile
 13196                           
 13197                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13198  11BC  100C               	bcf	12,0	;volatile
 13199                           
 13200                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13201  11BD  1FEF               	btfss	_generic_status,7
 13202  11BE  29C1               	goto	i1l5368
 13203                           
 13204                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13205  11BF  13EF               	bcf	_generic_status,7
 13206  11C0  0064               	clrwdt	;# 
 13207  11C1                     i1l5368:
 13208                           
 13209                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13210  11C1  300A               	movlw	10
 13211  11C2  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 13212  11C3  1803               	skipnc
 13213  11C4  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 13214  11C5  3000               	movlw	0
 13215  11C6  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 13216                           
 13217                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13218  11C7  3003               	movlw	3
 13219  11C8  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13220  11C9  30E8               	movlw	232
 13221  11CA  1903               	skipnz
 13222  11CB  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13223  11CC  1C03               	skipc
 13224  11CD  29D0               	goto	i1l5372
 13225                           
 13226                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13227  11CE  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 13228  11CF  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 13229  11D0                     i1l5372:
 13230                           
 13231                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13232  11D0  3001               	movlw	1
 13233  11D1  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13234  11D2  30F4               	movlw	244
 13235  11D3  1903               	skipnz
 13236  11D4  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13237  11D5  1803               	skipnc
 13238  11D6  29DB               	goto	i1l633
 13239                           
 13240                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13241  11D7  1283               	bcf	3,5	;RP0=0, select bank0
 13242  11D8  1303               	bcf	3,6	;RP1=0, select bank0
 13243  11D9  1786               	bsf	6,7	;volatile
 13244  11DA  29DE               	goto	i1l5376
 13245  11DB                     i1l633:	
 13246                           ;isr.c: 56:                 else
 13247                           
 13248                           
 13249                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13250  11DB  1283               	bcf	3,5	;RP0=0, select bank0
 13251  11DC  1303               	bcf	3,6	;RP1=0, select bank0
 13252  11DD  1386               	bcf	6,7	;volatile
 13253  11DE                     i1l5376:
 13254                           
 13255                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13256  11DE  1683               	bsf	3,5	;RP0=1, select bank1
 13257  11DF  084F               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 13258  11E0  0450               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 13259  11E1  1903               	btfsc	3,2
 13260  11E2  29EC               	goto	i1l635
 13261                           
 13262                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13263  11E3  300A               	movlw	10
 13264  11E4  02CF               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 13265  11E5  3000               	movlw	0
 13266  11E6  1C03               	skipc
 13267  11E7  03D0               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13268  11E8  02D0               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13269                           
 13270                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13271  11E9  1283               	bcf	3,5	;RP0=0, select bank0
 13272  11EA  1706               	bsf	6,6	;volatile
 13273                           
 13274                           ;isr.c: 63:                    }
 13275  11EB  29EE               	goto	i1l5382
 13276  11EC                     i1l635:	
 13277                           ;isr.c: 64:                 else{
 13278                           
 13279                           
 13280                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13281  11EC  1283               	bcf	3,5	;RP0=0, select bank0
 13282  11ED  1306               	bcf	6,6	;volatile
 13283  11EE                     i1l5382:
 13284                           
 13285                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13286  11EE  1683               	bsf	3,5	;RP0=1, select bank1
 13287  11EF  0851               	movf	_Delay_Led_Memory^(0+128),w	;volatile
 13288  11F0  0452               	iorwf	(_Delay_Led_Memory+1)^(0+128),w	;volatile
 13289  11F1  1903               	btfsc	3,2
 13290  11F2  29FC               	goto	i1l637
 13291                           
 13292                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13293  11F3  300A               	movlw	10
 13294  11F4  02D1               	subwf	_Delay_Led_Memory^(0+128),f	;volatile
 13295  11F5  3000               	movlw	0
 13296  11F6  1C03               	skipc
 13297  11F7  03D2               	decf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13298  11F8  02D2               	subwf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13299                           
 13300                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13301  11F9  1283               	bcf	3,5	;RP0=0, select bank0
 13302  11FA  1686               	bsf	6,5	;volatile
 13303                           
 13304                           ;isr.c: 71:                    }
 13305  11FB  29FE               	goto	i1l5388
 13306  11FC                     i1l637:	
 13307                           ;isr.c: 72:                 else{
 13308                           
 13309                           
 13310                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13311  11FC  1283               	bcf	3,5	;RP0=0, select bank0
 13312  11FD  1286               	bcf	6,5	;volatile
 13313  11FE                     i1l5388:
 13314                           
 13315                           ;isr.c: 77:                 tempodecorrido+=10;
 13316  11FE  300A               	movlw	10
 13317  11FF  1683               	bsf	3,5	;RP0=1, select bank1
 13318  1200  07C7               	addwf	_tempodecorrido^(0+128),f	;volatile
 13319  1201  1803               	skipnc
 13320  1202  0AC8               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13321  1203  3000               	movlw	0
 13322  1204  07C8               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13323                           
 13324                           ;isr.c: 78:                 milisegundo+=10;
 13325  1205  300A               	movlw	10
 13326  1206  07CD               	addwf	_milisegundo^(0+128),f	;volatile
 13327  1207  1803               	skipnc
 13328  1208  0ACE               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13329  1209  3000               	movlw	0
 13330  120A  07CE               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13331                           
 13332                           ;isr.c: 79:                 if(milisegundo==1000){
 13333  120B  30E8               	movlw	232
 13334  120C  064D               	xorwf	_milisegundo^(0+128),w	;volatile
 13335  120D  3003               	movlw	3
 13336  120E  1903               	skipnz
 13337  120F  064E               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13338  1210  1D03               	btfss	3,2
 13339  1211  2A2E               	goto	i1l5412
 13340                           
 13341                           ;isr.c: 80:                    milisegundo=0;
 13342  1212  01CD               	clrf	_milisegundo^(0+128)	;volatile
 13343  1213  01CE               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13344                           
 13345                           ;isr.c: 81:                    segundo++;
 13346  1214  3001               	movlw	1
 13347  1215  00F0               	movwf	??_isr
 13348  1216  0870               	movf	??_isr,w
 13349  1217  07FD               	addwf	_segundo,f	;volatile
 13350                           
 13351                           ;isr.c: 88:                    if(segundo==60){
 13352  1218  303C               	movlw	60
 13353  1219  067D               	xorwf	_segundo,w	;volatile
 13354  121A  1D03               	btfss	3,2
 13355  121B  2A2E               	goto	i1l5412
 13356                           
 13357                           ;isr.c: 89:                       segundo=0;
 13358  121C  01FD               	clrf	_segundo	;volatile
 13359                           
 13360                           ;isr.c: 90:                       minuto++;
 13361  121D  3001               	movlw	1
 13362  121E  00F0               	movwf	??_isr
 13363  121F  0870               	movf	??_isr,w
 13364  1220  07FA               	addwf	_minuto,f	;volatile
 13365                           
 13366                           ;isr.c: 91:                       if(minuto==60){
 13367  1221  303C               	movlw	60
 13368  1222  067A               	xorwf	_minuto,w	;volatile
 13369  1223  1D03               	btfss	3,2
 13370  1224  2A2E               	goto	i1l5412
 13371                           
 13372                           ;isr.c: 92:                          minuto=0;
 13373  1225  01FA               	clrf	_minuto	;volatile
 13374                           
 13375                           ;isr.c: 93:                          hora++;
 13376  1226  3001               	movlw	1
 13377  1227  00F0               	movwf	??_isr
 13378  1228  0870               	movf	??_isr,w
 13379  1229  07FC               	addwf	_hora,f	;volatile
 13380                           
 13381                           ;isr.c: 94:                          if(hora==24){
 13382  122A  3018               	movlw	24
 13383  122B  067C               	xorwf	_hora,w	;volatile
 13384  122C  1903               	btfsc	3,2
 13385                           
 13386                           ;isr.c: 95:                             hora=0;
 13387  122D  01FC               	clrf	_hora	;volatile
 13388  122E                     i1l5412:	
 13389                           ;isr.c: 99:                 }
 13390                           
 13391                           
 13392                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13393  122E  1283               	bcf	3,5	;RP0=0, select bank0
 13394  122F  1E8C               	btfss	12,5	;volatile
 13395  1230  2A94               	goto	i1l651
 13396                           
 13397                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13398  1231  146F               	bsf	_generic_status,0
 13399                           
 13400                           ;isr.c: 109:         tempo=30;
 13401  1232  301E               	movlw	30
 13402  1233  00F6               	movwf	isr@tempo
 13403  1234  3000               	movlw	0
 13404  1235  00F7               	movwf	isr@tempo+1
 13405                           
 13406                           ;isr.c: 110:         count=0;
 13407  1236  1683               	bsf	3,5	;RP0=1, select bank1
 13408  1237  01C9               	clrf	_count^(0+128)	;volatile
 13409  1238  01CA               	clrf	(_count+1)^(0+128)	;volatile
 13410                           
 13411                           ;isr.c: 111:         pointer=usart_buffer;
 13412  1239  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13413  123A  00F0               	movwf	??_isr
 13414  123B  0870               	movf	??_isr,w
 13415  123C  00D3               	movwf	_pointer^(0+128)
 13416  123D                     i1l5434:	
 13417                           ;isr.c: 112:         while(tempo)
 13418                           
 13419                           
 13420                           ;isr.c: 112:         while(tempo)
 13421  123D  0876               	movf	isr@tempo,w
 13422  123E  0477               	iorwf	isr@tempo+1,w
 13423  123F  1903               	btfsc	3,2
 13424  1240  2A70               	goto	i1l5436
 13425                           
 13426                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13427  1241  1283               	bcf	3,5	;RP0=0, select bank0
 13428  1242  1303               	bcf	3,6	;RP1=0, select bank0
 13429  1243  1E8C               	btfss	12,5	;volatile
 13430  1244  2A69               	goto	i1l5432
 13431                           
 13432                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13433  1245  081A               	movf	26,w	;volatile
 13434  1246  00F0               	movwf	??_isr
 13435  1247  1683               	bsf	3,5	;RP0=1, select bank1
 13436  1248  0853               	movf	_pointer^(0+128),w
 13437  1249  0084               	movwf	4
 13438  124A  0870               	movf	??_isr,w
 13439  124B  1783               	bsf	3,7	;select IRP bank2
 13440  124C  0080               	movwf	0
 13441                           
 13442                           ;isr.c: 118:                 if(count<32+20 -1)
 13443  124D  084A               	movf	(_count+1)^(0+128),w	;volatile
 13444  124E  3A80               	xorlw	128
 13445  124F  00FF               	movwf	127
 13446  1250  3080               	movlw	128
 13447  1251  027F               	subwf	127,w
 13448  1252  1D03               	skipz
 13449  1253  2A56               	goto	u517_25
 13450  1254  3033               	movlw	51
 13451  1255  0249               	subwf	_count^(0+128),w	;volatile
 13452  1256                     u517_25:
 13453  1256  1803               	skipnc
 13454  1257  2A64               	goto	i1l5430
 13455                           
 13456                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13457  1258  3001               	movlw	1
 13458  1259  1683               	bsf	3,5	;RP0=1, select bank1
 13459  125A  1303               	bcf	3,6	;RP1=0, select bank1
 13460  125B  07C9               	addwf	_count^(0+128),f	;volatile
 13461  125C  1803               	skipnc
 13462  125D  0ACA               	incf	(_count+1)^(0+128),f	;volatile
 13463  125E  3000               	movlw	0
 13464  125F  07CA               	addwf	(_count+1)^(0+128),f	;volatile
 13465                           
 13466                           ;isr.c: 121:                    pointer++;
 13467  1260  3001               	movlw	1
 13468  1261  00F0               	movwf	??_isr
 13469  1262  0870               	movf	??_isr,w
 13470  1263  07D3               	addwf	_pointer^(0+128),f
 13471  1264                     i1l5430:
 13472                           
 13473                           ;isr.c: 123:                 tempo=30;
 13474  1264  301E               	movlw	30
 13475  1265  00F6               	movwf	isr@tempo
 13476  1266  3000               	movlw	0
 13477  1267  00F7               	movwf	isr@tempo+1
 13478                           
 13479                           ;isr.c: 124:             }
 13480  1268  2A3D               	goto	i1l5434
 13481  1269                     i1l5432:
 13482                           
 13483                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13484  1269  3001               	movlw	1
 13485  126A  02F6               	subwf	isr@tempo,f
 13486  126B  3000               	movlw	0
 13487  126C  1C03               	skipc
 13488  126D  03F7               	decf	isr@tempo+1,f
 13489  126E  02F7               	subwf	isr@tempo+1,f
 13490  126F  2A3D               	goto	i1l5434
 13491  1270                     i1l5436:
 13492                           
 13493                           ;isr.c: 131:         (*pointer)=0;
 13494  1270  1683               	bsf	3,5	;RP0=1, select bank1
 13495  1271  1303               	bcf	3,6	;RP1=0, select bank1
 13496  1272  0853               	movf	_pointer^(0+128),w
 13497  1273  0084               	movwf	4
 13498  1274  1783               	bsf	3,7	;select IRP bank2
 13499  1275  0180               	clrf	0
 13500                           
 13501                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13502  1276  1283               	bcf	3,5	;RP0=0, select bank0
 13503  1277  1C98               	btfss	24,1	;volatile
 13504  1278  2A94               	goto	i1l651
 13505                           
 13506                           ;isr.c: 134:            CREN=0;
 13507  1279  1218               	bcf	24,4	;volatile
 13508                           
 13509                           ;isr.c: 135:            CREN=1;
 13510  127A  1618               	bsf	24,4	;volatile
 13511                           
 13512                           ;isr.c: 136:            tempo=RCREG;
 13513  127B  081A               	movf	26,w	;volatile
 13514  127C  00F0               	movwf	??_isr
 13515  127D  01F1               	clrf	??_isr+1
 13516  127E  0870               	movf	??_isr,w
 13517  127F  00F6               	movwf	isr@tempo
 13518  1280  0871               	movf	??_isr+1,w
 13519  1281  00F7               	movwf	isr@tempo+1
 13520                           
 13521                           ;isr.c: 137:            tempo=RCREG;
 13522  1282  081A               	movf	26,w	;volatile
 13523  1283  00F0               	movwf	??_isr
 13524  1284  01F1               	clrf	??_isr+1
 13525  1285  0870               	movf	??_isr,w
 13526  1286  00F6               	movwf	isr@tempo
 13527  1287  0871               	movf	??_isr+1,w
 13528  1288  00F7               	movwf	isr@tempo+1
 13529                           
 13530                           ;isr.c: 138:            tempo=RCREG;
 13531  1289  081A               	movf	26,w	;volatile
 13532  128A  00F0               	movwf	??_isr
 13533  128B  01F1               	clrf	??_isr+1
 13534  128C  0870               	movf	??_isr,w
 13535  128D  00F6               	movwf	isr@tempo
 13536  128E  0871               	movf	??_isr+1,w
 13537  128F  00F7               	movwf	isr@tempo+1
 13538                           
 13539                           ;isr.c: 139:            usart_buffer[0]=0;
 13540  1290  1703               	bsf	3,6	;RP1=1, select bank2
 13541  1291  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13542                           
 13543                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13544  1292  1303               	bcf	3,6	;RP1=0, select bank0
 13545  1293  14EF               	bsf	_generic_status,1
 13546  1294                     i1l651:
 13547  1294  0875               	movf	??_isr+5,w
 13548  1295  00FF               	movwf	127
 13549  1296  0874               	movf	??_isr+4,w
 13550  1297  008A               	movwf	10
 13551  1298  0873               	movf	??_isr+3,w
 13552  1299  0084               	movwf	4
 13553  129A  0E72               	swapf	??_isr+2,w
 13554  129B  0083               	movwf	3
 13555  129C  0EFE               	swapf	126,f
 13556  129D  0E7E               	swapf	126,w
 13557  129E  0009               	retfie
 13558  129F                     __end_of_isr:
 13559  007E                     btemp	set	126	;btemp
 13560  007E                     wtemp0	set	126
 13561                           
 13562                           	psect	intentry
 13563  0004                     __pintentry:	
 13564                           ;incstack = 0
 13565                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13566                           
 13567  0004                     interrupt_function:
 13568  007E                     saved_w	set	btemp
 13569  0004  00FE               	movwf	btemp
 13570  0005  0E03               	swapf	3,w
 13571  0006  00F2               	movwf	??_isr+2
 13572  0007  0804               	movf	4,w
 13573  0008  00F3               	movwf	??_isr+3
 13574  0009  080A               	movf	10,w
 13575  000A  00F4               	movwf	??_isr+4
 13576  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13577  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13578  000D  087F               	movf	btemp+1,w
 13579  000E  00F5               	movwf	??_isr+5
 13580  000F  160A  118A  29B4   	ljmp	_isr
 13581                           
 13582                           	psect	config
 13583                           
 13584                           ;Config register CONFIG1 @ 0x2007
 13585                           ;	Oscillator Selection bits
 13586                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 13587                           ;	Watchdog Timer Enable bit
 13588                           ;	WDTE = ON, WDT enabled
 13589                           ;	Power-up Timer Enable bit
 13590                           ;	PWRTE = ON, PWRT enabled
 13591                           ;	RE3/MCLR pin function select bit
 13592                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 13593                           ;	Code Protection bit
 13594                           ;	CP = ON, Program memory code protection is enabled
 13595                           ;	Data Code Protection bit
 13596                           ;	CPD = OFF, Data memory code protection is disabled
 13597                           ;	Brown Out Reset Selection bits
 13598                           ;	BOREN = ON, BOR enabled
 13599                           ;	Internal External Switchover bit
 13600                           ;	IESO = ON, Internal/External Switchover mode is enabled
 13601                           ;	Fail-Safe Clock Monitor Enabled bit
 13602                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13603                           ;	Low Voltage Programming Enable bit
 13604                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 13605                           ;	In-Circuit Debugger Mode bit
 13606                           ;	DEBUG = 0x1, unprogrammed default
 13607  2007                     	org	8199
 13608  2007  2F8C               	dw	12172
 13609                           
 13610                           ;Config register CONFIG2 @ 0x2008
 13611                           ;	Brown-out Reset Selection bit
 13612                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 13613                           ;	Flash Program Memory Self Write Enable bits
 13614                           ;	WRT = OFF, Write protection off
 13615  2008                     	org	8200
 13616  2008  3FFF               	dw	16383

Data Sizes:
    Strings     12
    Constant    64
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     79      80
    BANK1            80     29      56
    BANK3            96      0      91
    BANK2            96      0      52

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 58
		 -> usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 58
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 52
		 -> NULL(NULL[0]), usart_buffer(BANK2[52]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Str@buffer	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_24C1025_Read_Buffer_USART@data	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _mediaLeituraPt100Umidadde->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fldiv->___flmul
    _ADC_Media_10bits->___xxtofl
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Buffer_USART->_I2C_Master_Read
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_mediaLeituraPt100Umidadde
    _mediaLeituraPt100Umidadde->___flsub
    ___flsub->___fladd

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  115943
                                             77 BANK0      2     2      0
                                             26 BANK1      3     3      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                         _USART_init
          _mediaLeituraPt100Umidadde
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _mediaLeituraPt100Umidadde                           18    18      0   17746
                                             12 BANK1     14    14      0
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4201
                                              4 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4004
                                             61 BANK0     16     8      8
                                              0 BANK1      4     4      0
                   _ADC_Media_10bits (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     712
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1955
                                             35 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    1477
                                             14 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     261
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     613
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     167
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    19    19      0   95896
                                             63 BANK0      4     4      0
                                              0 BANK1     15    15      0
            _EEPROM_24C1025_Fill_All
   _EEPROM_24C1025_Read_Buffer_USART
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      44
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     416
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     416
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   12681
                                             56 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             35 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    4160
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3099
                                             58 BANK0      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     156
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2670
                                             50 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    1777
                                             54 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    2219
                                             54 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1584
                                             50 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     812
                                             46 BANK0      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     812
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     991
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     624
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     189
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     161
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    6059
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    7267
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    6763
                                              9 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    7761
                                             22 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             7     3      4    7738
                                             22 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     7      6    7570
                                             10 BANK0     12     6      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Buffer_USART                    13     7      6    6904
                                              9 BANK0     12     6      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2    1090
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8163
                                             56 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    7912
                                             46 BANK0     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    6985
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     502
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4898
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
     _EEPROM_24C1025_Read_Buffer_USART
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _USART_putc
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
         _I2C_Master_RepeatedStart
         _I2C_Master_Start
         _I2C_Master_Stop
         _I2C_Master_Write
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
       _I2C_Master_RepeatedStart
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
     _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Int
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
       ___flmul
       ___fltol
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_int
     _USART_put_string
     _USART_putc
     _USART_to_Protocol
     ___flmul
     ___fltol
     _strcpy
     _strlen
   _EEPROM_Read_Integer
   _EEPROM_Write_Integer
   _I2C_Master_Init
     ___lldiv
   _USART_init
   _mediaLeituraPt100Umidadde
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
     ___fldiv
     ___flge
     ___flmul
     ___flsub
       ___fladd
       ___flmul (ARG)
     ___xxtofl
     _my_delay_ms
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     125       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1D      38       7       70.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      5B       9       94.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      34      11       54.2%
DATA                 0      0     125      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 02 12:52:04 2021

                               _USART_putc 19FB                               ___fldiv@aexp 005C  
                             ___fldiv@bexp 005B                                          pc 0002  
                             ___fldiv@sign 0054            EEPROM_24C1025_Read_Buffer@range 0034  
         EEPROM_24C1025_Write_Str@chip_add 0031                                         fsr 0004  
 __end_of_EEPROM_24C1025_Read_Buffer_USART 1800  __size_of_EEPROM_24C1025_Read_Buffer_USART 017E  
       ??_EEPROM_24C1025_Read_Buffer_USART 002F          ?_EEPROM_24C1025_Read_Buffer_USART 0029  
         _EEPROM_24C1025_Read_Buffer_USART 1682                              _USART_put_int 1A36  
                 Decodify_Command@tempchar 00AA                        __Umul8_16@word_mpld 0026  
               __end_of_RESISTOR_ROOM_TEMP 181C               PROCULUS_VP_Write_String@text 005C  
                                      l422 0363                                        l513 1E28  
                                      l514 1E29                                        l426 0371  
                                      l540 1B0B                                        l508 1E04  
                                      l428 03C7                                        l518 1B51  
                                      l484 19D1                                        l806 1A72  
                                      l869 1A03                                        l789 1AAF  
       EEPROM_24C1025_Read_Buffer@chip_add 0033                   Decodify_Command@sizedata 00A3  
                                      _isr 11B4                                        fsr0 0004  
                                      indf 0000                  __end_of_EEPROM_Write_Byte 1E38  
                         _ADC_Media_10bits 1F4C                               ___flmul@aexp 0037  
                             ___flmul@bexp 003C                     PROCULUS_VP_Write@vetor 0054  
             ?_EEPROM_24C1025_Write_Buffer 002A                               ___flmul@sign 0036  
                             ___flmul@temp 0041                               ___flmul@prod 003D  
  __end_of_PROCULUS_Control_Register_Write 1DFC   __size_of_PROCULUS_Control_Register_Write 0038  
        ??_PROCULUS_Control_Register_Write 0053           ?_PROCULUS_Control_Register_Write 0052  
          _PROCULUS_Control_Register_Write 1DC4                               ___fltol@exp1 004D  
                          __end_of_MAX_ADC 1824                                       l1300 0F5C  
                                     l1160 1098                                       l1304 0F7F  
                                     l1321 0FF1                                       l1313 0FD4  
                                     l1163 10FE                                       l1335 0A2F  
                                     l1432 1184                                       l1433 118E  
                                     l1425 116E                                       l1179 1060  
                                     l1419 112E                                       l1283 0E96  
                                     l4020 0E33                                       l1357 0B6E  
                                     l1285 0E6D                                       l4030 0E7C  
                                     l1359 0B7C                                       l1279 0DD3  
                                     l4104 0F99                                       l1394 1B9F  
                                     l4130 0FEC                                       l4034 0E81  
                                     l1387 06B0                                       l5012 1EED  
                                     l4108 0F9C                                       l4060 0ED1  
                                     l4028 0E7A                                       l3502 1B42  
                                     l4150 03E3                                       l4302 1182  
                                     l4126 0FE7                                       l4054 0ECA  
                                     l4046 0EA5                                       l4038 0E90  
                                     l5030 0BA9                                       l3504 1B2E  
                                     l3512 1B46                                       l4240 0636  
                                     l4232 0602                                       l4152 03E5  
                                     l4304 1173                                       l4056 0ECC  
                                     l4064 0EE1                                       l5040 0BED  
                                     l4402 17E2                                       l4330 16B0  
                                     l4234 061F                                       l4170 040A  
                                     l4154 03ED                                       l4090 0F84  
                                     l4082 0F71                                       l4074 0F4E  
                                     l3508 1B3A                                       l4404 1707  
                                     l4332 16B7                                       l4500 153A  
                                     l4420 06EB                                       l4244 0638  
                                     l4180 0420                                       l4172 0412  
                                     l4316 11AB                                       l4406 17E7  
                                     l4334 16BA                                       l4422 06EE  
                                     l4254 066A                                       l3536 1D94  
                                     l3640 1D03                                       l4264 0699  
                                     l4168 0408                                       l4096 0F8B  
                                     l5048 0C04                                       l4522 1587  
                                     l4418 06E4                                       l4258 0680  
                                     l4282 1126                                       l4098 0F8E  
                                     l5058 0D66                                       l3644 1D16  
                                     l3652 1D1D                                       l4372 1764  
                                     l4540 15E2                                       l4292 1141  
                                     l4374 176B                                       l3734 094C  
                                     l4542 15E9                                       l3830 1A9B  
                                     l3670 1B97                                       l3902 104C  
                                     l4294 1153                                       l4376 176E  
                                     l3736 0953                                       l3760 09A3  
                                     l4544 15EC                                       l4616 1C08  
                                     l4640 1C8D                                       l3832 1AA6  
                                     l3912 106F                                       l3904 105C  
                                     l4288 113D                                       l3840 1D5D  
                                     l5530 1480                                       l3738 0956  
                                     l3770 09CA                                       l3690 0891  
                                     l4482 0726                                       l5610 0062  
                                     l4730 1F68                                       l3692 0898  
                                     l4484 079E                                       l4476 077C  
                                     l3860 1DDE                                       l5700 0242  
                                     l5620 0089                                       l4820 09FE  
                                     l5526 1476                                       l4398 17BB  
                                     l3766 09C5                                       l3694 089B  
                                     l4566 1639                                       l3862 1DF4  
                                     l3934 1E64                                       l3926 1E40  
                                     l3950 0D82                                       l5552 14DE  
                                     l5528 147D                                       l3768 08E8  
                                     l4576 1660                                       l4496 1530  
                                     l3792 1E0E                                       l3928 1E4E  
                                     l3784 1CBC                                       l5712 028F  
                                     l5640 011D                                       l5632 00E3  
                                     l5616 007B                                       l4752 1A79  
                                     l4912 0B07                                       l4904 0AD3  
                                     l4840 0A24                                       l4824 0A01  
                                     l3960 0D96                                       l5546 14B9  
                                     l5554 1402                                       l5490 13C6  
                                     l4578 1669                                       l4498 1537  
                                     l3794 1E11                                       l4690 1C2D  
                                     l3938 1E6F                                       l3882 101C  
                                     l3786 1CDE                                       l4674 1ACF  
                                     l5706 0260                                       l4762 1FB2  
                                     l4930 0B54                                       l4906 0AF0  
                                     l4826 0A09                                       l3962 0D9F  
                                     l5556 14E3                                       l5492 13C9  
                                     l4692 1C4A                                       l5580 07F7  
                                     l4668 1F27                                       l5740 031B  
                                     l5724 02D1                                       l5644 012C  
                                     l4772 1FEA                                       l4764 1FC2  
                                     l4748 1A77                                       l4916 0B09  
                                     l4860 0A5A                                       l4844 0A27  
                                     l3980 0DC6                                       l3956 0D92  
                                     l5590 1E7F                                       l3886 1025  
                                     l5734 030A                                       l5718 02B4  
                                     l5670 01AF                                       l5654 015E  
                                     l4942 0B78                                       l4926 0B3B  
                                     l4854 0A4E                                       l4790 10D8  
                                     l3990 0DE0                                       l3974 0DB6  
                                     l5488 13BF                                       l5752 0357  
                                     l5728 02F6                                       l5664 018F  
                                     l5648 0146                                       l4776 1FF7  
                                     l4880 0AA9                                       l3984 0DCA  
                                     l5578 07DB                                       l5746 0337  
                                     l5682 01CA                                       l5770 0375  
                                     l4890 0ACD                                       l4786 10B2  
                                     l5676 01BC                                       ?_isr 0070  
                                     l5758 0367                                       l5694 0212  
                                     l4886 0AC8                                       l5928 0380  
                                     l5688 01EB                                       l4888 0A85  
                                     l5848 1327                                       l4978 1EC8  
                                     l5874 1351                                       l4998 1EE5  
                                     _BETA 1848                                       STR_1 1850  
                                     STR_2 1859                                _statuspower 00D7  
                                     _CREN 00C4                                       u3015 104D  
                                     u3105 1E4F                                       u3115 1E5B  
                                     u3125 1E65                                       u3045 1065  
                                     u4103 169B                                       u4015 1166  
                                     u3240 0E57                                       u4113 16AE  
                                     u3250 0E58                                       u4123 171D  
                                     u4035 117B                                       u3235 0E4B  
                                     u3085 1E43                                       u4143 1762  
                                     u4223 151B                                       u2633 1DA6  
                                     u4233 152E                                       u5203 13AA  
                                     u4243 1596                                       u4163 06CF  
                                     u4075 1196                                       u3435 0F73  
                                     u5213 13BD                                       u2813 087C  
                                     u4173 06E2                                       u4325 1F33  
                                     u4501 10C3                                       u3381 0F0D  
                                     u3373 0EF4                                       u3365 0ED4  
                                     u3285 0E84                                       u2750 1D13  
                                     u4502 10C4                                       u3390 0F21  
                                     u3382 0F0E                                       u5223 1424  
                                     u2823 088F                                       u4263 15E0  
                                     u4183 073E                                       u4415 1FB6  
                                     u4503 10C9                                       u3535 0FBB  
                                     u3391 0F22                                       u3383 0F13  
                                     u4504 10CA                                       u3392 0F27  
                                     u3384 0F14                                       u2833 08FE  
                                     u4521 10E9                                       u4505 10CF  
                                     u3393 0F28                                       u3385 0F19  
                                     u4522 10EA                                       u4506 10D0  
                                     u3386 0F1A                                       u5243 1474  
                                     u4435 1FC4                                       u4523 10EF  
                                     u4524 10F0                                       u2853 094A  
                                     u3725 04CA                                       u4445 1FD9  
                                     u2933 1D6F                                       u4525 10F5  
                                     u4526 10F6                                       u5255 1410  
                                     u2775 1AB5                                       u4455 1FEB  
                                     u5407 1D77                                       u5273 1EB2  
                                     u5417 1ABD                                       u3825 05EE  
                                     u4705 0AD7                                       u5507 1B36  
                                     u5427 1CB2                                       u2795 1BA0  
                                     u3835 0606                                       u3755 0523  
                                     u4635 0A8E                                       u5437 1E32  
                                     u3925 0655                                       u4805 0B44  
                                     u4725 0AE2                                       u4645 0A97  
                                     u5447 1B62                                       u3935 0673  
                                     u3855 0611                                       u4815 0B5F  
                                     u5457 15B9                                       u3945 068B  
                                     u2985 102E                                       u4665 0AA2  
                                     u5467 167C                                       u3795 05B7  
                                     u4835 1C63                                       u4675 0AB7  
                                     u5477 09DD                                       u5397 12A7  
                                     u5487 17FA                                       u5497 1DAF  
                                     u3995 114A                                       u4795 0B26  
                                     _WPUB 0095                       PROCULUS_Buzzer@vetor 0059  
         __end_of_I2C_Master_RepeatedStart 19FB                                       _main 129F  
                                     _hora 007C          __size_of_EEPROM_24C1025_Write_Int 0020  
                                     btemp 007E          __size_of_EEPROM_24C1025_Write_Str 00FB  
                ?_EEPROM_24C1025_Write_Int 004E                  ?_EEPROM_24C1025_Write_Str 002A  
              __size_of_EEPROM_Read_String 0020                                       start 0012  
                         __end_of_ADC_init 19E5                           _BALANCE_RESISTOR 184C  
                          ___fldiv@new_exp 0055         EEPROM_24C1025_Read_Buffer@sizedata 002E  
                                    ??_isr 0070                           ?_I2C_Master_Init 002E  
                         ?_I2C_Master_Read 0023                           ?_I2C_Master_Wait 0070  
                         ?_I2C_Master_Stop 0070                             ?_USART_put_int 004E  
                            ___fltol@sign1 004C                            __end_of___fladd 1000  
                                    ?_main 0070                            __end_of___fldiv 0B84  
                                    _EEADR 010D                            __end_of___flmul 06BD  
                          __end_of___flsub 1D55                            __end_of___fltol 107E  
                                    _ANSEL 0188                            __end_of___lldiv 2000  
                                    _T1CON 0010                            __end_of___lwdiv 1E74  
                                    i1l633 11DB                                      i1l651 1294  
                                    i1l635 11EC                                      i1l637 11FC  
                                    _RCREG 001A                                      _TMR1H 000F  
                                    _TMR1L 000E                                      _SPBRG 0099  
                                    _PORTA 0005                                      _PORTB 0006  
                                    _PORTC 0007                                      _PORTE 0009  
                                    _TRISA 0085                                      _TRISB 0086  
                                    _TRISC 0087            EEPROM_24C1025_Read_Int@chip_add 003C  
                                    _TRISE 0089                                      _TXREG 0019  
                    ADC_Media_10bits@canal 0033                            __end_of_captura 19DA  
                             _usart_buffer 0110                      ADC_Media_10bits@value 0034  
                EEPROM_Read_Integer@result 0028                                      _canal 00D6  
             __size_of_EEPROM_Read_Integer 002A                                      _count 00C9  
                                    _errno 00C5              ??_EEPROM_24C1025_Write_Buffer 0031  
       __size_of_EEPROM_24C1025_Write_Byte 0016                 ?_EEPROM_24C1025_Write_Byte 0037  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E            EEPROM_24C1025_Read_Byte@mem_add 0036  
                             __end_of_BETA 184C                    __size_of_PROCULUS_Delay 001D  
        __size_of_PROCULUS_VP_Write_String 0017                                ?_USART_init 0020  
                          __initialization 0015                  ?_PROCULUS_VP_Write_String 005A  
                              ?_USART_putc 0070                               __end_of_main 1392  
                           Send_To_MB@size 0021                   __end_of_EEPROM_Read_Byte 1B6B  
                                   ??_main 00BA                           __end_of_Save_Log 0865  
           _mediaLeituraPt100Umidadde$2363 00B0                           _USART_put_string 1CB8  
                    EEPROM_Write_Byte@addr 0023                      EEPROM_Write_Byte@dado 0020  
               __size_of_EEPROM_Write_Byte 003C                          ?_I2C_Master_Start 0070  
                EEPROM_Write_Byte@last_GIE 0024                          ?_I2C_Master_Write 0023  
                       ??_I2C_Master_Start 0023                                     _ADCON1 009F  
                       ??_I2C_Master_Write 0025                  PROCULUS_Show_Screen@vetor 0059  
                                   _ADRESH 001E                                     _ADRESL 009E  
                                   _EEDATA 010C                                     _EECON2 018D  
                               _Send_To_MB 1BD8                      EEPROM_Write_Integer@i 002B  
                                   _ANSELH 0189               __end_of_PROCULUS_Show_Screen 1A20  
               mediaLeituraPt100Umidadde@i 00B9                                     i1l5412 122E  
                                   i1l5430 1264                                     i1l5432 1269  
                                   i1l5434 123D                                     i1l5436 1270  
                                   i1l5372 11D0                                     i1l5382 11EE  
                                   i1l5376 11DE                                     i1l5368 11C1  
                                   i1l5388 11FE          __end_of_EEPROM_24C1025_Write_Byte 1A36  
                                   u517_25 1256                               ?_my_delay_ms 0020  
                                   _TMR1IE 0460                                     _TMR1CS 0081  
                 ?_EEPROM_24C1025_Fill_All 0058                                     _SSPADD 0093  
                                   _TRISC3 043B                                     _TRISC4 043C  
                                   _TRISC6 043E                                     _TRISC7 043F  
                                   _SSPCON 0014                                     _SSPBUF 0013  
           EEPROM_24C1025_Fill_All@mem_add 005B                           __end_of___xxtofl 11B4  
            EEPROM_24C1025_Read_Str@buffer 002D                         PROCULUS_VP_Write@i 0059  
                 __end_of_Decodify_Command 03C8                   ?_EEPROM_24C1025_Read_Int 0036  
                 ?_EEPROM_24C1025_Read_Str 0029                   _I2C_Master_RepeatedStart 19F0  
               ?_mediaLeituraPt100Umidadde 0070       __size_of_EEPROM_24C1025_Write_Buffer 0176  
                                   ___flge 107E                                  ??___fladd 0065  
                                ??___fldiv 004B                                  ??___flmul 0031  
                                ??___flsub 006D                                  ??___fltol 0047  
                          ??_USART_put_int 0050                                  ??___lldiv 0028  
                                   _header 00CB                          __end_of_ROOM_TEMP 1820  
                                ??___lwdiv 0024                                     _buffer 01CA  
                        _USART_to_Protocol 1EF7                            USART_putc@value 0020  
                                   _minuto 007A          EEPROM_24C1025_Read_Buffer@cnt_108 0032  
                                ??_captura 0022                         ?_USART_to_Protocol 0070  
             Decodify_Command@add_24LCxxxx 00AB                                     _strcpy 1ACA  
                                   _strlen 1A94          EEPROM_24C1025_Read_Buffer@mem_add 002A  
         __end_of_EEPROM_24C1025_Read_Byte 1A94                         __size_of__Umul8_16 0023  
                                   saved_w 007E          EEPROM_24C1025_Write_Byte@chip_add 003C  
                                ?_ADC_init 0070             mediaLeituraPt100Umidadde@canal 00B4  
                      ??_USART_to_Protocol 0020                        __size_of_USART_init 0042  
                      __size_of_USART_putc 0010                                 ___flge@ff1 0020  
                               ___flge@ff2 0024                               ___xxtofl@arg 002A  
                             ___xxtofl@exp 0029                               ___xxtofl@val 0020  
                         __end_oflog@coeff 1848                    __end_of__initialization 0036  
      PROCULUS_Control_Register_Write@size 0052                                 ___fltol@f1 0043  
                             _Board_Number 00D5                   __end_of_ADC_Media_10bits 1FA2  
                           __pcstackCOMMON 0070                   __size_of_PROCULUS_Buzzer 0022  
                __end_of_USART_to_Protocol 1F4C                      USART_put_string@vetor 0021  
                      my_delay_ms_WDT@time 0020              __size_of_EEPROM_Write_Integer 0032  
                 __size_of_my_delay_ms_WDT 0038                             _OPTION_REGbits 0081  
                 __end_of_BALANCE_RESISTOR 1850           __end_of_EEPROM_24C1025_Write_Int 1B08  
         __end_of_EEPROM_24C1025_Write_Str 07B8                                 ??_ADC_init 0020  
              __end_of_EEPROM_Write_String 1C55            __end_of_EEPROM_24C1025_Fill_All 1EB5  
                              ?_Send_To_MB 0070                     __size_of_Send_Reply_OK 0009  
                               __pbssBANK0 006F                                 __pbssBANK1 00BD  
                               __pbssBANK2 0110                                 __pbssBANK3 0190  
                       _RESISTOR_ROOM_TEMP 1818            __end_of_EEPROM_24C1025_Read_Int 1BD8  
          __end_of_EEPROM_24C1025_Read_Str 1682                   ?_Package_Usart_is_for_me 0070  
                                ?_Save_Log 0058                             _PROCULUS_Delay 1AAD  
                        __end_of__Umul8_16 1BB0                                 __pmaintext 129F  
                                  ?___flge 0020                        Save_Log@add_datalog 0058  
                      _EEPROM_Read_Integer 1C00                 PROCULUS_Show_Screen@screen 0056  
                               __pintentry 0004                       _PROCULUS_Show_Screen 1A0B  
                                  _T1CKPS0 0084                                    _T1CKPS1 0085  
                                  ?_strcpy 0020                                    ?_strlen 0020  
                                ?___xxtofl 0020                                    _MAX_ADC 1820  
                     ?_EEPROM_Read_Integer 0023                      Decodify_Command@dados 00A0  
              EEPROM_24C1025_Read_Int@data 003D                                    _SSPCON2 0091  
         __end_of_PROCULUS_VP_Write_String 1A63                    EEPROM_Read_Integer@addr 0026  
                                  _SSPSTAT 0094                   _EEPROM_24C1025_Read_Byte 1A7B  
                               __stringtab 1800                        PROCULUS_VP_Write@vp 0052  
              ??_EEPROM_24C1025_Write_Byte 003C                 __end_of_EEPROM_Read_String 1B28  
                   __end_of_PROCULUS_Delay 1ACA                   __end_of_USART_put_string 1CEB  
                     __size_of_my_delay_ms 0037                                 ??_Save_Log 005C  
                          PROCULUS_Delay@i 0024                               ??_USART_init 0024  
              EEPROM_24C1025_Read_Str@ctrl 0033                               ??_USART_putc 0020  
               __size_of_USART_to_Protocol 0055                PROCULUS_Buzzer@time_ms_x_10 0056  
                          __size_of___flge 0093                                    ___fladd 0D6F  
                                  ___fldiv 09E3                   EEPROM_Write_Integer@addr 002A  
                                  ___flmul 03C8                   EEPROM_Write_Integer@dado 0025  
                                  ___flsub 1D20                                    ___fltol 1013  
                                  ___lldiv 1FA2                                    ___lwdiv 1E38  
                            _Send_Reply_OK 19C7                        __size_of_Send_To_MB 0028  
                    ?_PROCULUS_Show_Screen 0056                                    _captura 19D0  
                         _statuspower_memo 007B                                    __ptext1 0B84  
                                  __ptext2 1D20                                    __ptext3 0D6F  
                                  __ptext4 107E                                    __ptext5 09E3  
                                  __ptext6 1A63                                    __ptext7 1F4C  
                                  __ptext8 1D55                                    __ptext9 19D0  
                        ??_PROCULUS_Buzzer 0058                                    _destino 00D4  
                        ?_EEPROM_Read_Byte 0070                            __size_of_strcpy 001E  
                          __size_of_strlen 0019                               __size_of_isr 00EB  
                               ??___xxtofl 0024                         ??_EEPROM_Read_Byte 0020  
                                  _segundo 007D                   __size_of_I2C_Master_Init 0031  
                 __size_of_I2C_Master_Read 0035                             _usart_protocol 0190  
                    ??_EEPROM_Read_Integer 0025                   __size_of_I2C_Master_Wait 0021  
                 __size_of_I2C_Master_Stop 0009              EEPROM_24C1025_Write_Int@local 0056  
                                  _pointer 00D3              EEPROM_24C1025_Write_Byte@data 003B  
                                  clrloop0 19B7                         __end_of_USART_init 1EF7  
          __end_of_Package_Usart_is_for_me 1A7B                         __end_of_USART_putc 1A0B  
                        ADC_Media_10bits@i 0036                       end_of_initialization 0036  
                 _EEPROM_24C1025_Write_Int 1AE8                          ??_my_delay_ms_WDT 0024  
                 _EEPROM_24C1025_Write_Str 06BD                 ??_I2C_Master_RepeatedStart 0023  
                          ?_PROCULUS_Delay 0020                            my_delay_ms@time 0020  
          EEPROM_24C1025_Write_Buffer@data 002F            EEPROM_24C1025_Write_Buffer@ctrl 0036  
                __size_of_I2C_Master_Start 0011                  __size_of_I2C_Master_Write 000B  
                        ?_Decodify_Command 0070                            ___lldiv@divisor 0020  
                          ___lldiv@counter 002D       EEPROM_24C1025_Read_Buffer_USART@data 002E  
     EEPROM_24C1025_Read_Buffer_USART@ctrl 0034                         ??_Decodify_Command 005F  
                                _RCSTAbits 0018                ??_mediaLeituraPt100Umidadde 00AC  
                         I2C_Master_Init@c 002E                           I2C_Master_Read@a 0023  
                           ?_Send_Reply_OK 0070                  _EEPROM_24C1025_Write_Byte 1A20  
         __size_of_EEPROM_24C1025_Fill_All 0041                                    strlen@s 0024  
                       USART_to_Protocol@i 0022                                  _PORTAbits 0005  
                                _PORTBbits 0006                                  _PORTCbits 0007  
                         _Delay_Led_Memory 00D1               ??_EEPROM_24C1025_Read_Buffer 0030  
            EEPROM_24C1025_Write_Str@range 0032                                  _ROOM_TEMP 181C  
                              ___fladd@grs 00A3           __size_of_EEPROM_24C1025_Read_Int 0028  
  EEPROM_24C1025_Read_Buffer_USART@cnt_117 0031           __size_of_EEPROM_24C1025_Read_Str 017A  
                            ___xxtofl@sign 0028        __end_of_EEPROM_24C1025_Write_Buffer 1508  
              _EEPROM_24C1025_Write_Buffer 1392    EEPROM_24C1025_Read_Buffer_USART@mem_add 0029  
                              ___fldiv@grs 0057                                ___fldiv@rem 0050  
     PROCULUS_Control_Register_Write@vetor 0054           EEPROM_24C1025_Write_Buffer@count 0033  
          EEPROM_24C1025_Write_Int@mem_add 004E           EEPROM_24C1025_Write_Buffer@range 0035  
                        __size_of_ADC_init 000B                    Decodify_Command@tempint 00A4  
                    PROCULUS_VP_Write@size 0056            EEPROM_24C1025_Read_Str@chip_add 0031  
                              ___flmul@grs 0038                   _PROCULUS_VP_Write_String 1A4C  
                                _TXSTAbits 0098        __size_of_EEPROM_24C1025_Read_Buffer 017E  
                        ?_ADC_Media_10bits 002E                     PROCULUS_Delay@tempo_ms 0020  
                   ??_PROCULUS_Show_Screen 0058                         ??_ADC_Media_10bits 0032  
                           __end_of___flge 1111                      __end_of_USART_put_int 1A4C  
                              _BAUDCTLbits 0187                             __end_of_strcpy 1AE8  
                           __end_of_strlen 1AAD                        start_initialization 0015  
                _mediaLeituraPt100Umidadde 0B84                                __end_of_isr 129F  
                              USART_init@i 0025                               ??_Send_To_MB 0021  
 EEPROM_24C1025_Read_Buffer_USART@chip_add 0032                          ??_I2C_Master_Init 0032  
                        ??_I2C_Master_Read 0025                          ??_I2C_Master_Wait 0020  
                        ??_I2C_Master_Stop 0023               __end_of_EEPROM_Write_Integer 1CB8  
         EEPROM_24C1025_Write_Int@chip_add 0055                        Decodify_Command@add 00A2  
                          ??_Send_Reply_OK 0025                                   ??___flge 0028  
                        __size_of_Save_Log 0064                       I2C_Master_Wait@tempo 0022  
                                __Umul8_16 1B8D              mediaLeituraPt100Umidadde@Temp 00B5  
                       __end_of_Send_To_MB 1C00           __size_of_Package_Usart_is_for_me 0018  
                                 ??_strcpy 0021                                   ??_strlen 0022  
 EEPROM_24C1025_Read_Buffer_USART@sizedata 002D                 ??_EEPROM_24C1025_Read_Byte 003A  
       EEPROM_24C1025_Write_Buffer@mem_add 002A                                  ___fladd@a 0061  
                                ___fladd@b 005D           EEPROM_24C1025_Write_Byte@mem_add 0037  
                                ___fldiv@a 0043                                  ___fldiv@b 0047  
                                ___flmul@a 002D                                  ___flmul@b 0029  
                              __pbssCOMMON 0078                                  ___flsub@a 00A4  
                                ___flsub@b 00A8                                  ___latbits 0002  
                            __pcstackBANK0 0020                              __pcstackBANK1 00A0  
                        _PROCULUS_VP_Write 07B8                          __size_of___xxtofl 00A3  
                       ?_PROCULUS_VP_Write 0052               __size_of_EEPROM_Write_String 002B  
                         _I2C_Master_Start 1002                           _I2C_Master_Write 19E5  
                      ??_PROCULUS_VP_Write 0057                             _tempodecorrido 00C7  
                        ?_USART_put_string 0021                            _PROCULUS_Buzzer 1B6B  
                         ___lwdiv@dividend 0022             Package_Usart_is_for_me@retorno 0020  
                       ??_USART_put_string 0023                                   ?___fladd 005D  
                                 ?___fldiv 0043                    _EEPROM_24C1025_Fill_All 1E74  
                                 ?___flmul 0029                                   ?___flsub 00A4  
                                 ?___fltol 0043                                   ?___lldiv 0020  
                               ?__Umul8_16 0020                         _EEPROM_Read_String 1B08  
                                 ?___lwdiv 0020         __end_of_EEPROM_24C1025_Read_Buffer 09E3  
               _EEPROM_24C1025_Read_Buffer 0865                                   ?_captura 0020  
                                __pstrings 1800                            _my_delay_ms_WDT 1D8C  
                  _EEPROM_24C1025_Read_Int 1BB0                    _EEPROM_24C1025_Read_Str 1508  
                   EEPROM_Read_Integer@ptr 0027                 ??_EEPROM_24C1025_Write_Int 0054  
               ??_EEPROM_24C1025_Write_Str 002F                        ?_EEPROM_Read_String 0023  
                __end_of_PROCULUS_VP_Write 07FF                 EEPROM_24C1025_Read_Str@cnt 0030  
                                 _ADC_init 19DA                           ___lwdiv@quotient 0025  
                  EEPROM_Write_Integer@ptr 0029                           ??_PROCULUS_Delay 0022  
           EEPROM_24C1025_Read_Buffer@data 002F             EEPROM_24C1025_Read_Buffer@ctrl 0035  
                            ??_my_delay_ms 0024                  __size_of_EEPROM_Read_Byte 0022  
                        interrupt_function 0004            EEPROM_24C1025_Write_Str@mem_add 002A  
                     ??_EEPROM_Read_String 0024                                  clear_ram0 19B6  
                                 _PIE1bits 008C                                   _PIR1bits 000C  
         PROCULUS_Control_Register_Write@i 0055                     Decodify_Command@OutPut 00A6  
                          _PT100_TRANSLADA 1810                            _Delay_Led_Usart 00CF  
             EEPROM_24C1025_Read_Byte@data 003C                __end_of_EEPROM_Read_Integer 1C2A  
                               _ADCON0bits 001F                                __stringbase 180F  
                               _ADCON1bits 009F                  __size_of_Decodify_Command 038E  
                     _EEPROM_Write_Integer 1C86             EEPROM_24C1025_Read_Int@mem_add 0036  
                                main@reset 006D                 ??_PROCULUS_VP_Write_String 005D  
                      I2C_Master_Read@temp 0027                    __end_of_PROCULUS_Buzzer 1B8D  
       __size_of_mediaLeituraPt100Umidadde 01EB                             _generic_status 006F  
                               _EECON1bits 018C                                   _Save_Log 0801  
                ??_EEPROM_24C1025_Fill_All 005A                        __end_of_my_delay_ms 1D8C  
             EEPROM_24C1025_Read_Str@range 0032                                   _Umidade1 00BD  
                  __end_of_my_delay_ms_WDT 1DC4                               my_delay_ms@i 0026  
                              ??__Umul8_16 0022          __size_of_I2C_Master_RepeatedStart 000B  
                         __size_of___fladd 0291                  ??_EEPROM_24C1025_Read_Int 003A  
                  _Package_Usart_is_for_me 1A63                           __size_of___fldiv 01A1  
                ??_EEPROM_24C1025_Read_Str 002E                           __size_of___flmul 02F5  
                ?_I2C_Master_RepeatedStart 0070                           __size_of___flsub 0035  
                         __size_of___fltol 006B                           __size_of___lldiv 005E  
                         __size_of___lwdiv 003C                         __end_of__stringtab 1810  
      EEPROM_24C1025_Write_Buffer@chip_add 0034                        USART_put_string@ptr 0023  
                         __size_of_captura 000A                      ?_EEPROM_Write_Integer 0025  
                             _Temperatura0 00C1                            _I2C_Master_Init 1C55  
                          _I2C_Master_Read 1CEB                                   ___xxtofl 1111  
               __size_of_PROCULUS_VP_Write 0047                            _I2C_Master_Wait 1B28  
         EEPROM_24C1025_Read_Byte@chip_add 003B                            _I2C_Master_Stop 19BE  
                __size_of_ADC_Media_10bits 0056                            ___lwdiv@divisor 0020  
                          ___lwdiv@counter 0027                                   __ptext10 1111  
                                 __ptext11 1EB5                                   __ptext20 0801  
                                 __ptext12 1C55                                   __ptext21 1013  
                                 __ptext13 1FA2                                   __ptext30 1DC4  
                                 __ptext22 03C8                                   __ptext14 003A  
                                 __ptext31 1A36                                   __ptext23 1B8D  
                                 __ptext15 1ACA                                   __ptext40 1A20  
                                 __ptext32 1AAD                                   __ptext24 1A4C  
                                 __ptext16 1EF7                                   __ptext41 1508  
                                 __ptext33 1C2A                                   __ptext25 1A94  
                                 __ptext17 1BD8                                   __ptext50 1AE8  
                                 __ptext42 1BB0                                   __ptext34 1C86  
                                 __ptext26 07B8                                   __ptext18 19C7  
                                 __ptext51 1392                                   __ptext43 1A7B  
                                 __ptext35 1DFC                                   __ptext27 1A0B  
                                 __ptext19 1CB8                                   __ptext52 1D8C  
                                 __ptext44 0865                                   __ptext36 1B08  
                                 __ptext28 1B6B                                   __ptext53 19E5  
                                 __ptext45 1682                                   __ptext37 1C00  
                                 __ptext29 1E38                                   __ptext54 19BE  
                                 __ptext46 19FB                                   __ptext38 1B49  
                                 __ptext55 1002                                   __ptext47 19F0  
                                 __ptext39 06BD                                   __ptext56 1B28  
                                 __ptext48 1CEB                                   __ptext57 19DA  
                                 __ptext49 1E74                                   __ptext58 11B4  
                       USART_put_int@value 004E                             _PT100_CONSTANT 1814  
                               strcpy@from 0020                              __size_of_main 00F3  
             EEPROM_24C1025_Fill_All@value 0058                 PROCULUS_VP_Write_String@vp 005A  
                  __end_of_PT100_TRANSLADA 1814        EEPROM_24C1025_Write_Buffer@sizedata 002E  
                              _milisegundo 00CD          __end_of_mediaLeituraPt100Umidadde 0D6F  
                           _Delay_Led_Tmr0 0078              __size_of_PROCULUS_Show_Screen 0015  
                      _EEPROM_Write_String 1C2A                                   log@coeff 1824  
                 __end_of_I2C_Master_Start 1013                   __end_of_I2C_Master_Write 19F0  
                               _INTCONbits 000B                     __end_of_PT100_CONSTANT 1818  
                                 isr@tempo 0076                       EEPROM_Read_Byte@addr 0022  
                   EEPROM_Read_String@addr 0025                     EEPROM_Read_String@dado 0023  
                         my_delay_ms_WDT@i 0026                                   intlevel1 0000  
                         ?_PROCULUS_Buzzer 0056                          USART_put_int@dado 0051  
                         _EEPROM_Read_Byte 1B49                                _my_delay_ms 1D55  
                     ?_EEPROM_Write_String 0025                           ___lldiv@dividend 0024  
                   __size_of_USART_put_int 0016               EEPROM_24C1025_Write_Int@data 0052  
                     EEPROM_Read_Integer@i 002A                    EEPROM_Write_String@addr 0027  
                  EEPROM_Write_String@dado 0025                         USART_init@baudrate 0020  
                                stringcode 180A                                 _OSCCONbits 008F  
    EEPROM_24C1025_Read_Buffer_USART@range 0033                  ??_Package_Usart_is_for_me 0020  
                         ?_my_delay_ms_WDT 0020                      __end_of_Send_Reply_OK 19D0  
                  __end_of_I2C_Master_Init 1C86                    __end_of_I2C_Master_Read 1D20  
                  __end_of_I2C_Master_Wait 1B49                    __end_of_I2C_Master_Stop 19C7  
             EEPROM_24C1025_Write_Str@data 002E               EEPROM_24C1025_Write_Str@ctrl 0033  
              ?_EEPROM_24C1025_Read_Buffer 002A            EEPROM_24C1025_Fill_All@chip_add 005A  
                   ??_EEPROM_Write_Integer 0027                     __Umul8_16@multiplicand 0020  
          USART_to_Protocol@usart_protocol 0024                           _Decodify_Command 003A  
                __size_of_USART_put_string 0033                           ___lldiv@quotient 0029  
                        I2C_Master_Write@d 0023                                   strcpy@cp 0023  
                                 strlen@cp 0023                                   strcpy@to 0022  
                                 stringdir 180A                                   stringtab 1800  
                              _SSPCON2bits 0091                          _EEPROM_Write_Byte 1DFC  
           EEPROM_24C1025_Read_Str@mem_add 0029                              ___fladd@signs 00A0  
                       ?_EEPROM_Write_Byte 0020                      ??_EEPROM_Write_String 0026  
                             ___fladd@aexp 00A1                               ___fladd@bexp 00A2  
        __size_of_EEPROM_24C1025_Read_Byte 0019                  ?_EEPROM_24C1025_Read_Byte 0036  
                      EEPROM_Read_String@c 0026                       __Umul8_16@multiplier 0028  
                      ??_EEPROM_Write_Byte 0021                          __Umul8_16@product 0024  
                               _USART_init 1EB5  
