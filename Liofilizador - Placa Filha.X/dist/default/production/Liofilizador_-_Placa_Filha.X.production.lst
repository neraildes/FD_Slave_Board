

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
<<<<<<< HEAD
                                                                                               Sat Jan 04 08:04:41 2020
=======
                                                                                               Thu Jan 16 04:26:41 2020
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F886
     2                           	opt	pw 120
<<<<<<< HEAD
     3                           	opt	plic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text20,local,class=CODE,merge=1,delta=2
    26                           	psect	text21,local,class=CODE,merge=1,delta=2
    27                           	psect	text23,local,class=CODE,merge=1,delta=2
    28                           	psect	text29,local,class=CODE,merge=1,delta=2
    29                           	psect	text31,local,class=CODE,merge=1,delta=2
    30                           	psect	text32,local,class=CODE,merge=1,delta=2
    31                           	psect	text43,local,class=CODE,merge=1,delta=2
    32                           	psect	text45,local,class=CODE,merge=1,delta=2
    33                           	psect	text48,local,class=CODE,merge=1,delta=2
    34                           	psect	text50,local,class=CODE,merge=1,delta=2
    35                           	psect	text51,local,class=CODE,merge=1,delta=2
    36                           	psect	text55,local,class=CODE,merge=1,delta=2
    37                           	psect	text66,local,class=CODE,merge=1,delta=2
    38                           	psect	text72,local,class=CODE,merge=1,delta=2
    39                           	psect	text73,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	pa_nodes0,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F886 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458  0000                     	;# 
   459  0001                     	;# 
   460  0002                     	;# 
   461  0003                     	;# 
   462  0004                     	;# 
   463  0005                     	;# 
   464  0006                     	;# 
   465  0007                     	;# 
   466  0009                     	;# 
   467  000A                     	;# 
   468  000B                     	;# 
   469  000C                     	;# 
   470  000D                     	;# 
   471  000E                     	;# 
   472  000E                     	;# 
   473  000F                     	;# 
   474  0010                     	;# 
   475  0011                     	;# 
   476  0012                     	;# 
   477  0013                     	;# 
   478  0014                     	;# 
   479  0015                     	;# 
   480  0015                     	;# 
   481  0016                     	;# 
   482  0017                     	;# 
   483  0018                     	;# 
   484  0019                     	;# 
   485  001A                     	;# 
   486  001B                     	;# 
   487  001B                     	;# 
   488  001C                     	;# 
   489  001D                     	;# 
   490  001E                     	;# 
   491  001F                     	;# 
   492  0081                     	;# 
   493  0085                     	;# 
   494  0086                     	;# 
   495  0087                     	;# 
   496  0089                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  008F                     	;# 
   501  0090                     	;# 
   502  0091                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0096                     	;# 
   510  0097                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009A                     	;# 
   514  009B                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  0105                     	;# 
   520  0107                     	;# 
   521  0108                     	;# 
   522  0109                     	;# 
   523  010C                     	;# 
   524  010C                     	;# 
   525  010D                     	;# 
   526  010E                     	;# 
   527  010F                     	;# 
   528  0185                     	;# 
   529  0187                     	;# 
   530  0188                     	;# 
   531  0189                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  0000                     	;# 
   535  0001                     	;# 
   536  0002                     	;# 
   537  0003                     	;# 
   538  0004                     	;# 
   539  0005                     	;# 
   540  0006                     	;# 
   541  0007                     	;# 
   542  0009                     	;# 
   543  000A                     	;# 
   544  000B                     	;# 
   545  000C                     	;# 
   546  000D                     	;# 
   547  000E                     	;# 
   548  000E                     	;# 
   549  000F                     	;# 
   550  0010                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0013                     	;# 
   554  0014                     	;# 
   555  0015                     	;# 
   556  0015                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001B                     	;# 
   563  001B                     	;# 
   564  001C                     	;# 
   565  001D                     	;# 
   566  001E                     	;# 
   567  001F                     	;# 
   568  0081                     	;# 
   569  0085                     	;# 
   570  0086                     	;# 
   571  0087                     	;# 
   572  0089                     	;# 
   573  008C                     	;# 
   574  008D                     	;# 
   575  008E                     	;# 
   576  008F                     	;# 
   577  0090                     	;# 
   578  0091                     	;# 
   579  0092                     	;# 
   580  0093                     	;# 
   581  0093                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0097                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009A                     	;# 
   590  009B                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  0105                     	;# 
   596  0107                     	;# 
   597  0108                     	;# 
   598  0109                     	;# 
   599  010C                     	;# 
   600  010C                     	;# 
   601  010D                     	;# 
   602  010E                     	;# 
   603  010F                     	;# 
   604  0185                     	;# 
   605  0187                     	;# 
   606  0188                     	;# 
   607  0189                     	;# 
   608  018C                     	;# 
   609  018D                     	;# 
   610  0000                     	;# 
   611  0001                     	;# 
   612  0002                     	;# 
   613  0003                     	;# 
   614  0004                     	;# 
   615  0005                     	;# 
   616  0006                     	;# 
   617  0007                     	;# 
   618  0009                     	;# 
   619  000A                     	;# 
   620  000B                     	;# 
   621  000C                     	;# 
   622  000D                     	;# 
   623  000E                     	;# 
   624  000E                     	;# 
   625  000F                     	;# 
   626  0010                     	;# 
   627  0011                     	;# 
   628  0012                     	;# 
   629  0013                     	;# 
   630  0014                     	;# 
   631  0015                     	;# 
   632  0015                     	;# 
   633  0016                     	;# 
   634  0017                     	;# 
   635  0018                     	;# 
   636  0019                     	;# 
   637  001A                     	;# 
   638  001B                     	;# 
   639  001B                     	;# 
   640  001C                     	;# 
   641  001D                     	;# 
   642  001E                     	;# 
   643  001F                     	;# 
   644  0081                     	;# 
   645  0085                     	;# 
   646  0086                     	;# 
   647  0087                     	;# 
   648  0089                     	;# 
   649  008C                     	;# 
   650  008D                     	;# 
   651  008E                     	;# 
   652  008F                     	;# 
   653  0090                     	;# 
   654  0091                     	;# 
   655  0092                     	;# 
   656  0093                     	;# 
   657  0093                     	;# 
   658  0093                     	;# 
   659  0094                     	;# 
   660  0095                     	;# 
   661  0096                     	;# 
   662  0097                     	;# 
   663  0098                     	;# 
   664  0099                     	;# 
   665  009A                     	;# 
   666  009B                     	;# 
   667  009C                     	;# 
   668  009D                     	;# 
   669  009E                     	;# 
   670  009F                     	;# 
   671  0105                     	;# 
   672  0107                     	;# 
   673  0108                     	;# 
   674  0109                     	;# 
   675  010C                     	;# 
   676  010C                     	;# 
   677  010D                     	;# 
   678  010E                     	;# 
   679  010F                     	;# 
   680  0185                     	;# 
   681  0187                     	;# 
   682  0188                     	;# 
   683  0189                     	;# 
   684  018C                     	;# 
   685  018D                     	;# 
   686  0000                     	;# 
   687  0001                     	;# 
   688  0002                     	;# 
   689  0003                     	;# 
   690  0004                     	;# 
   691  0005                     	;# 
   692  0006                     	;# 
   693  0007                     	;# 
   694  0009                     	;# 
   695  000A                     	;# 
   696  000B                     	;# 
   697  000C                     	;# 
   698  000D                     	;# 
   699  000E                     	;# 
   700  000E                     	;# 
   701  000F                     	;# 
   702  0010                     	;# 
   703  0011                     	;# 
   704  0012                     	;# 
   705  0013                     	;# 
   706  0014                     	;# 
   707  0015                     	;# 
   708  0015                     	;# 
   709  0016                     	;# 
   710  0017                     	;# 
   711  0018                     	;# 
   712  0019                     	;# 
   713  001A                     	;# 
   714  001B                     	;# 
   715  001B                     	;# 
   716  001C                     	;# 
   717  001D                     	;# 
   718  001E                     	;# 
   719  001F                     	;# 
   720  0081                     	;# 
   721  0085                     	;# 
   722  0086                     	;# 
   723  0087                     	;# 
   724  0089                     	;# 
   725  008C                     	;# 
   726  008D                     	;# 
   727  008E                     	;# 
   728  008F                     	;# 
   729  0090                     	;# 
   730  0091                     	;# 
   731  0092                     	;# 
   732  0093                     	;# 
   733  0093                     	;# 
   734  0093                     	;# 
   735  0094                     	;# 
   736  0095                     	;# 
   737  0096                     	;# 
   738  0097                     	;# 
   739  0098                     	;# 
   740  0099                     	;# 
   741  009A                     	;# 
   742  009B                     	;# 
   743  009C                     	;# 
   744  009D                     	;# 
   745  009E                     	;# 
   746  009F                     	;# 
   747  0105                     	;# 
   748  0107                     	;# 
   749  0108                     	;# 
   750  0109                     	;# 
   751  010C                     	;# 
   752  010C                     	;# 
   753  010D                     	;# 
   754  010E                     	;# 
   755  010F                     	;# 
   756  0185                     	;# 
   757  0187                     	;# 
   758  0188                     	;# 
   759  0189                     	;# 
   760  018C                     	;# 
   761  018D                     	;# 
   762  0000                     	;# 
   763  0001                     	;# 
   764  0002                     	;# 
   765  0003                     	;# 
   766  0004                     	;# 
   767  0005                     	;# 
   768  0006                     	;# 
   769  0007                     	;# 
   770  0009                     	;# 
   771  000A                     	;# 
   772  000B                     	;# 
   773  000C                     	;# 
   774  000D                     	;# 
   775  000E                     	;# 
   776  000E                     	;# 
   777  000F                     	;# 
   778  0010                     	;# 
   779  0011                     	;# 
   780  0012                     	;# 
   781  0013                     	;# 
   782  0014                     	;# 
   783  0015                     	;# 
   784  0015                     	;# 
   785  0016                     	;# 
   786  0017                     	;# 
   787  0018                     	;# 
   788  0019                     	;# 
   789  001A                     	;# 
   790  001B                     	;# 
   791  001B                     	;# 
   792  001C                     	;# 
   793  001D                     	;# 
   794  001E                     	;# 
   795  001F                     	;# 
   796  0081                     	;# 
   797  0085                     	;# 
   798  0086                     	;# 
   799  0087                     	;# 
   800  0089                     	;# 
   801  008C                     	;# 
   802  008D                     	;# 
   803  008E                     	;# 
   804  008F                     	;# 
   805  0090                     	;# 
   806  0091                     	;# 
   807  0092                     	;# 
   808  0093                     	;# 
   809  0093                     	;# 
   810  0093                     	;# 
   811  0094                     	;# 
   812  0095                     	;# 
   813  0096                     	;# 
   814  0097                     	;# 
   815  0098                     	;# 
   816  0099                     	;# 
   817  009A                     	;# 
   818  009B                     	;# 
   819  009C                     	;# 
   820  009D                     	;# 
   821  009E                     	;# 
   822  009F                     	;# 
   823  0105                     	;# 
   824  0107                     	;# 
   825  0108                     	;# 
   826  0109                     	;# 
   827  010C                     	;# 
   828  010C                     	;# 
   829  010D                     	;# 
   830  010E                     	;# 
   831  010F                     	;# 
   832  0185                     	;# 
   833  0187                     	;# 
   834  0188                     	;# 
   835  0189                     	;# 
   836  018C                     	;# 
   837  018D                     	;# 
   838  0000                     	;# 
   839  0001                     	;# 
   840  0002                     	;# 
   841  0003                     	;# 
   842  0004                     	;# 
   843  0005                     	;# 
   844  0006                     	;# 
   845  0007                     	;# 
   846  0009                     	;# 
   847  000A                     	;# 
   848  000B                     	;# 
   849  000C                     	;# 
   850  000D                     	;# 
   851  000E                     	;# 
   852  000E                     	;# 
   853  000F                     	;# 
   854  0010                     	;# 
   855  0011                     	;# 
   856  0012                     	;# 
   857  0013                     	;# 
   858  0014                     	;# 
   859  0015                     	;# 
   860  0015                     	;# 
   861  0016                     	;# 
   862  0017                     	;# 
   863  0018                     	;# 
   864  0019                     	;# 
   865  001A                     	;# 
   866  001B                     	;# 
   867  001B                     	;# 
   868  001C                     	;# 
   869  001D                     	;# 
   870  001E                     	;# 
   871  001F                     	;# 
   872  0081                     	;# 
   873  0085                     	;# 
   874  0086                     	;# 
   875  0087                     	;# 
   876  0089                     	;# 
   877  008C                     	;# 
   878  008D                     	;# 
   879  008E                     	;# 
   880  008F                     	;# 
   881  0090                     	;# 
   882  0091                     	;# 
   883  0092                     	;# 
   884  0093                     	;# 
   885  0093                     	;# 
   886  0093                     	;# 
   887  0094                     	;# 
   888  0095                     	;# 
   889  0096                     	;# 
   890  0097                     	;# 
   891  0098                     	;# 
   892  0099                     	;# 
   893  009A                     	;# 
   894  009B                     	;# 
   895  009C                     	;# 
   896  009D                     	;# 
   897  009E                     	;# 
   898  009F                     	;# 
   899  0105                     	;# 
   900  0107                     	;# 
   901  0108                     	;# 
   902  0109                     	;# 
   903  010C                     	;# 
   904  010C                     	;# 
   905  010D                     	;# 
   906  010E                     	;# 
   907  010F                     	;# 
   908  0185                     	;# 
   909  0187                     	;# 
   910  0188                     	;# 
   911  0189                     	;# 
   912  018C                     	;# 
   913  018D                     	;# 
   914  0000                     	;# 
   915  0001                     	;# 
   916  0002                     	;# 
   917  0003                     	;# 
   918  0004                     	;# 
   919  0005                     	;# 
   920  0006                     	;# 
   921  0007                     	;# 
   922  0009                     	;# 
   923  000A                     	;# 
   924  000B                     	;# 
   925  000C                     	;# 
   926  000D                     	;# 
   927  000E                     	;# 
   928  000E                     	;# 
   929  000F                     	;# 
   930  0010                     	;# 
   931  0011                     	;# 
   932  0012                     	;# 
   933  0013                     	;# 
   934  0014                     	;# 
   935  0015                     	;# 
   936  0015                     	;# 
   937  0016                     	;# 
   938  0017                     	;# 
   939  0018                     	;# 
   940  0019                     	;# 
   941  001A                     	;# 
   942  001B                     	;# 
   943  001B                     	;# 
   944  001C                     	;# 
   945  001D                     	;# 
   946  001E                     	;# 
   947  001F                     	;# 
   948  0081                     	;# 
   949  0085                     	;# 
   950  0086                     	;# 
   951  0087                     	;# 
   952  0089                     	;# 
   953  008C                     	;# 
   954  008D                     	;# 
   955  008E                     	;# 
   956  008F                     	;# 
   957  0090                     	;# 
   958  0091                     	;# 
   959  0092                     	;# 
   960  0093                     	;# 
   961  0093                     	;# 
   962  0093                     	;# 
   963  0094                     	;# 
   964  0095                     	;# 
   965  0096                     	;# 
   966  0097                     	;# 
   967  0098                     	;# 
   968  0099                     	;# 
   969  009A                     	;# 
   970  009B                     	;# 
   971  009C                     	;# 
   972  009D                     	;# 
   973  009E                     	;# 
   974  009F                     	;# 
   975  0105                     	;# 
   976  0107                     	;# 
   977  0108                     	;# 
   978  0109                     	;# 
   979  010C                     	;# 
   980  010C                     	;# 
   981  010D                     	;# 
   982  010E                     	;# 
   983  010F                     	;# 
   984  0185                     	;# 
   985  0187                     	;# 
   986  0188                     	;# 
   987  0189                     	;# 
   988  018C                     	;# 
   989  018D                     	;# 
   990  0000                     	;# 
   991  0001                     	;# 
   992  0002                     	;# 
   993  0003                     	;# 
   994  0004                     	;# 
   995  0005                     	;# 
   996  0006                     	;# 
   997  0007                     	;# 
   998  0009                     	;# 
   999  000A                     	;# 
  1000  000B                     	;# 
  1001  000C                     	;# 
  1002  000D                     	;# 
  1003  000E                     	;# 
  1004  000E                     	;# 
  1005  000F                     	;# 
  1006  0010                     	;# 
  1007  0011                     	;# 
  1008  0012                     	;# 
  1009  0013                     	;# 
  1010  0014                     	;# 
  1011  0015                     	;# 
  1012  0015                     	;# 
  1013  0016                     	;# 
  1014  0017                     	;# 
  1015  0018                     	;# 
  1016  0019                     	;# 
  1017  001A                     	;# 
  1018  001B                     	;# 
  1019  001B                     	;# 
  1020  001C                     	;# 
  1021  001D                     	;# 
  1022  001E                     	;# 
  1023  001F                     	;# 
  1024  0081                     	;# 
  1025  0085                     	;# 
  1026  0086                     	;# 
  1027  0087                     	;# 
  1028  0089                     	;# 
  1029  008C                     	;# 
  1030  008D                     	;# 
  1031  008E                     	;# 
  1032  008F                     	;# 
  1033  0090                     	;# 
  1034  0091                     	;# 
  1035  0092                     	;# 
  1036  0093                     	;# 
  1037  0093                     	;# 
  1038  0093                     	;# 
  1039  0094                     	;# 
  1040  0095                     	;# 
  1041  0096                     	;# 
  1042  0097                     	;# 
  1043  0098                     	;# 
  1044  0099                     	;# 
  1045  009A                     	;# 
  1046  009B                     	;# 
  1047  009C                     	;# 
  1048  009D                     	;# 
  1049  009E                     	;# 
  1050  009F                     	;# 
  1051  0105                     	;# 
  1052  0107                     	;# 
  1053  0108                     	;# 
  1054  0109                     	;# 
  1055  010C                     	;# 
  1056  010C                     	;# 
  1057  010D                     	;# 
  1058  010E                     	;# 
  1059  010F                     	;# 
  1060  0185                     	;# 
  1061  0187                     	;# 
  1062  0188                     	;# 
  1063  0189                     	;# 
  1064  018C                     	;# 
  1065  018D                     	;# 
  1066                           
  1067                           	psect	idataBANK3
  1068  0000                     __pidataBANK3:	
  1069                           
  1070                           	psect	strings
  1071  1800                     __pstrings:	
  1072  1800                     stringtab:	
  1073  1800                     __stringtab:	
  1074                           
  1075                           ;	String table - string pointers are 1 byte each
  1076  1800  1BFF               	btfsc	btemp+1,7
  1077  1801  280A               	ljmp	stringcode
  1078  1802  1383               	bcf	3,7
  1079  1803  187F               	btfsc	btemp+1,0
  1080  1804  1783               	bsf	3,7
  1081  1805  0800               	movf	0,w
  1082  1806  0A84               	incf	4,f
  1083  1807  1903               	skipnz
  1084  1808  0AFF               	incf	btemp+1,f
  1085  1809  0008               	return
  1086  180A                     stringcode:	
  1087  180A                     stringdir:	
  1088  180A  3018               	movlw	high stringdir
  1089  180B  008A               	movwf	10
  1090  180C  0804               	movf	4,w
  1091  180D  0A84               	incf	4,f
  1092  180E  0782               	addwf	2,f
  1093  180F                     __stringbase:	
  1094  180F  3400               	retlw	0
  1095  1810                     __end_of__stringtab:	
  1096  1810                     log@coeff:	
  1097  1810  3400               	retlw	0
  1098  1811  3400               	retlw	0
  1099  1812  3400               	retlw	0
  1100  1813  3400               	retlw	0
  1101  1814  34C4               	retlw	196
  1102  1815  34FF               	retlw	255
  1103  1816  347F               	retlw	127
  1104  1817  343F               	retlw	63
  1105  1818  3480               	retlw	128
  1106  1819  34EF               	retlw	239
  1107  181A  34FF               	retlw	255
  1108  181B  34BE               	retlw	190
  1109  181C  3490               	retlw	144
  1110  181D  34E1               	retlw	225
  1111  181E  34A9               	retlw	169
  1112  181F  343E               	retlw	62
  1113  1820  34EC               	retlw	236
  1114  1821  3482               	retlw	130
  1115  1822  3476               	retlw	118
  1116  1823  34BE               	retlw	190
  1117  1824  3482               	retlw	130
  1118  1825  34AD               	retlw	173
  1119  1826  342B               	retlw	43
  1120  1827  343E               	retlw	62
  1121  1828  340E               	retlw	14
  1122  1829  343C               	retlw	60
  1123  182A  34C3               	retlw	195
  1124  182B  34BD               	retlw	189
  1125  182C  3487               	retlw	135
  1126  182D  34D1               	retlw	209
  1127  182E  3413               	retlw	19
  1128  182F  343D               	retlw	61
  1129  1830  3441               	retlw	65
  1130  1831  3478               	retlw	120
  1131  1832  34D3               	retlw	211
  1132  1833  34BB               	retlw	187
  1133  1834                     __end_oflog@coeff:	
  1134  1834                     _BETA:	
  1135                           
  1136                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1137  1834  3400               	retlw	0
  1138  1835  3460               	retlw	96
  1139  1836  3478               	retlw	120
  1140  1837  3445               	retlw	69
  1141  1838                     __end_of_BETA:	
  1142  1838                     _BALANCE_RESISTOR:	
  1143                           
  1144                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1145  1838  3400               	retlw	0
  1146  1839  3440               	retlw	64
  1147  183A  341C               	retlw	28
  1148  183B  3446               	retlw	70
  1149  183C                     __end_of_BALANCE_RESISTOR:	
  1150  0019                     _TXREG	set	25
  1151  0018                     _RCSTAbits	set	24
  1152  001A                     _RCREG	set	26
  1153  000E                     _TMR1L	set	14
  1154  000F                     _TMR1H	set	15
  1155  000C                     _PIR1bits	set	12
  1156  001E                     _ADRESH	set	30
  1157  001F                     _ADCON0bits	set	31
  1158  0005                     _PORTAbits	set	5
  1159  0007                     _PORTCbits	set	7
  1160  0010                     _T1CON	set	16
  1161  000B                     _INTCONbits	set	11
  1162  0006                     _PORTBbits	set	6
  1163  0009                     _PORTE	set	9
  1164  0007                     _PORTC	set	7
  1165  0005                     _PORTA	set	5
  1166  0013                     _SSPBUF	set	19
  1167  0014                     _SSPCON	set	20
  1168  0006                     _PORTB	set	6
  1169  00C4                     _CREN	set	196
  1170  0081                     _TMR1CS	set	129
  1171  0085                     _T1CKPS1	set	133
  1172  0084                     _T1CKPS0	set	132
  1173  008C                     _PIE1bits	set	140
  1174  0099                     _SPBRG	set	153
  1175  0098                     _TXSTAbits	set	152
  1176  009E                     _ADRESL	set	158
  1177  009F                     _ADCON1bits	set	159
  1178  009F                     _ADCON1	set	159
  1179  0095                     _WPUB	set	149
  1180  0081                     _OPTION_REGbits	set	129
  1181  0089                     _TRISE	set	137
  1182  0087                     _TRISC	set	135
  1183  0086                     _TRISB	set	134
  1184  0085                     _TRISA	set	133
  1185  008F                     _OSCCONbits	set	143
  1186  0094                     _SSPSTAT	set	148
  1187  0093                     _SSPADD	set	147
  1188  0091                     _SSPCON2	set	145
  1189  043F                     _TRISC7	set	1087
  1190  043E                     _TRISC6	set	1086
  1191  0460                     _TMR1IE	set	1120
  1192  048C                     _ACKEN	set	1164
  1193  048D                     _ACKDT	set	1165
  1194  048B                     _RCEN	set	1163
  1195  048A                     _PEN	set	1162
  1196  0489                     _RSEN	set	1161
  1197  0488                     _SEN	set	1160
  1198  043C                     _TRISC4	set	1084
  1199  043B                     _TRISC3	set	1083
  1200  010C                     _EEDATA	set	268
  1201  010D                     _EEADR	set	269
  1202  0187                     _BAUDCTLbits	set	391
  1203  018D                     _EECON2	set	397
  1204  018C                     _EECON1bits	set	396
  1205  0189                     _ANSELH	set	393
  1206  0188                     _ANSEL	set	392
  1207  183C                     STR_1:	
  1208  183C  3476               	retlw	118	;'v'
  1209  183D  3431               	retlw	49	;'1'
  1210  183E  342E               	retlw	46	;'.'
  1211  183F  3430               	retlw	48	;'0'
  1212  1840  342E               	retlw	46	;'.'
  1213  1841  3437               	retlw	55	;'7'
  1214  1842  3400               	retlw	0
  1215  1843                     STR_8:	
  1216  1843  344F               	retlw	79	;'O'
  1217  1844  344B               	retlw	75	;'K'
  1218  1845  3400               	retlw	0
  1219  1846                     STR_3:	
  1220  1846  3430               	retlw	48	;'0'
  1221  1847  3400               	retlw	0
  1222  1848                     STR_4:	
  1223  1848  343A               	retlw	58	;':'
  1224  1849  3400               	retlw	0
  1225  1847                     
  1226                           ; #config settings
  1227  0000                     
  1228                           	psect	cinit
  1229  0015                     start_initialization:	
  1230  0015                     __initialization:	
  1231                           
  1232                           ; Initialize objects allocated to BANK3
  1233  0015  1683               	bsf	3,5	;RP0=1, select bank3
  1234  0016  1703               	bsf	3,6	;RP1=1, select bank3
  1235                           
  1236                           ;initializer for _RL1Status
  1237  0017  3001               	movlw	1
  1238  0018  00DF               	movwf	__pdataBANK3& (0+127)
  1239                           
  1240                           ;initializer for _RL0Status
  1241  0019  00E0               	movwf	(__pdataBANK3+1)& (0+127)
  1242  001A  3090               	movlw	low __pbssBANK3
  1243                           
  1244                           ; Clear objects allocated to BANK3
  1245  001B  1783               	bsf	3,7	;select IRP bank2
  1246  001C  0084               	movwf	4
  1247  001D  30DC               	movlw	low (__pbssBANK3+76)
  1248  001E  120A  158A  2002  120A  118A  	fcall	clear_ram0
  1249                           
  1250                           ; Clear objects allocated to BANK2
  1251  0023  3010               	movlw	low __pbssBANK2
  1252  0024  0084               	movwf	4
  1253  0025  305A               	movlw	low (__pbssBANK2+74)
  1254  0026  120A  158A  2002   	fcall	clear_ram0
  1255                           
  1256                           ; Clear objects allocated to BANK1
  1257  0029  1303               	bcf	3,6	;RP1=0, select bank1
  1258  002A  01EE               	clrf	__pbssBANK1& (0+127)
  1259  002B  01EF               	clrf	(__pbssBANK1+1)& (0+127)
  1260                           
  1261                           ; Clear objects allocated to COMMON
  1262  002C  01F0               	clrf	__pbssCOMMON& (0+127)
  1263  002D  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1264  002E  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1265  002F  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1266  0030  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1267  0031  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1268  0032  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1269  0033                     end_of_initialization:	
  1270                           ;End of C runtime variable initialization code
  1271                           
  1272  0033                     __end_of__initialization:	
  1273  0033  0183               	clrf	3
  1274  0034  120A  118A  2E36   	ljmp	l7324	;jump to C main() function
  1275                           
  1276                           	psect	bssCOMMON
  1277  0070                     __pbssCOMMON:	
  1278  0070                     _SetPoint0:	
  1279  0070                     	ds	4
  1280  0074                     _hora:	
  1281  0074                     	ds	1
  1282  0075                     _segundo:	
  1283  0075                     	ds	1
  1284  0076                     _generic_status:	
  1285  0076                     	ds	1
  1286                           
  1287                           	psect	bssBANK1
  1288  00EE                     __pbssBANK1:	
  1289  00EE                     _TempoCNT_1:	
  1290  00EE                     	ds	1
  1291  00EF                     _TempoCNT_0:	
  1292  00EF                     	ds	1
  1293                           
  1294                           	psect	bssBANK3
  1295  0190                     __pbssBANK3:	
  1296  0190                     _Temperatura1:	
  1297  0190                     	ds	4
  1298  0194                     _Temperatura0:	
  1299  0194                     	ds	4
  1300  0198                     _SetPoint1:	
  1301  0198                     	ds	4
  1302  019C                     _Histerese0:	
  1303  019C                     	ds	4
  1304  01A0                     _tempodecorrido:	
  1305  01A0                     	ds	2
  1306  01A2                     _count:	
  1307  01A2                     	ds	2
  1308  01A4                     _header:	
  1309  01A4                     	ds	2
  1310  01A6                     _Status1:	
  1311  01A6                     	ds	2
  1312  01A8                     _Status0:	
  1313  01A8                     	ds	2
  1314  01AA                     _milisegundo:	
  1315  01AA                     	ds	2
  1316  01AC                     _Delay_Led_Usart:	
  1317  01AC                     	ds	2
  1318  01AE                     _Delay_Led_Tmr0:	
  1319  01AE                     	ds	2
  1320  01B0                     _Delay_Led_Memory:	
  1321  01B0                     	ds	2
  1322  01B2                     _pointer:	
  1323  01B2                     	ds	1
  1324  01B3                     _destino:	
  1325  01B3                     	ds	1
  1326  01B4                     _Board_Number:	
  1327  01B4                     	ds	1
  1328  01B5                     _canal:	
  1329  01B5                     	ds	1
  1330  01B6                     _TempoOFF_1:	
  1331  01B6                     	ds	1
  1332  01B7                     _TempoON_1:	
  1333  01B7                     	ds	1
  1334  01B8                     _Histerese1:	
  1335  01B8                     	ds	1
  1336  01B9                     _TempoOFF_0:	
  1337  01B9                     	ds	1
  1338  01BA                     _TempoON_0:	
  1339  01BA                     	ds	1
  1340  01BB                     _minuto:	
  1341  01BB                     	ds	1
  1342  01BC                     _texto:	
  1343  01BC                     	ds	16
  1344  01CC                     _usart_protocol:	
  1345  01CC                     	ds	16
  1346                           
  1347                           	psect	dataBANK3
  1348  01DF                     __pdataBANK3:	
  1349  01DF                     _RL1Status:	
  1350  01DF                     	ds	1
  1351  01E0                     _RL0Status:	
  1352  01E0                     	ds	1
  1353                           
  1354                           	psect	bssBANK2
  1355  0110                     __pbssBANK2:	
  1356  0110                     _usart_buffer:	
  1357  0110                     	ds	42
  1358  013A                     _buffer:	
  1359  013A                     	ds	32
  1360                           
  1361                           	psect	clrtext
  1362  0802                     clear_ram0:	
  1363                           ;	Called with FSR containing the base address, and
  1364                           ;	W with the last address+1
  1365                           
  1366  0802  0064               	clrwdt	;clear the watchdog before getting into this loop
  1367  0803                     clrloop0:	
  1368  0803  0180               	clrf	0	;clear RAM location pointed to by FSR
  1369  0804  0A84               	incf	4,f	;increment pointer
  1370  0805  0604               	xorwf	4,w	;XOR with final address
  1371  0806  1903               	btfsc	3,2	;have we reached the end yet?
  1372  0807  3400               	retlw	0	;all done for this memory range, return
  1373  0808  0604               	xorwf	4,w	;XOR again to restore value
  1374  0809  2803               	goto	clrloop0	;do the next byte
  1375                           
  1376                           	psect	cstackBANK3
  1377  01DC                     __pcstackBANK3:	
  1378  01DC                     ??_main:	
  1379                           
  1380                           ; 1 bytes @ 0x0
  1381  01DC                     	ds	3
  1382                           
  1383                           	psect	cstackBANK1
  1384  00A0                     __pcstackBANK1:	
  1385  00A0                     ?_eval_poly:	
  1386  00A0                     ?___fltol:	
  1387                           ; 4 bytes @ 0x0
  1388                           
  1389  00A0                     ?___fldiv:	
  1390                           ; 4 bytes @ 0x0
  1391                           
  1392  00A0                     ___fltol@f1:	
  1393                           ; 4 bytes @ 0x0
  1394                           
  1395  00A0                     ___fldiv@a:	
  1396                           ; 4 bytes @ 0x0
  1397                           
  1398  00A0                     eval_poly@x:	
  1399                           ; 4 bytes @ 0x0
  1400                           
  1401                           
  1402                           ; 4 bytes @ 0x0
  1403  00A0                     	ds	4
  1404  00A4                     ??___fltol:	
  1405  00A4                     eval_poly@d:	
  1406                           ; 1 bytes @ 0x4
  1407                           
  1408  00A4                     ___fldiv@b:	
  1409                           ; 1 bytes @ 0x4
  1410                           
  1411                           
  1412                           ; 4 bytes @ 0x4
  1413  00A4                     	ds	1
  1414  00A5                     eval_poly@n:	
  1415                           
  1416                           ; 2 bytes @ 0x5
  1417  00A5                     	ds	2
  1418  00A7                     ??_eval_poly:	
  1419                           
  1420                           ; 1 bytes @ 0x7
  1421  00A7                     	ds	1
  1422  00A8                     ?_USART_put_int:	
  1423  00A8                     ?_EEPROM_24C1025_Write_Int:	
  1424                           ; 1 bytes @ 0x8
  1425                           
  1426  00A8                     ??___fldiv:	
  1427                           ; 1 bytes @ 0x8
  1428                           
  1429  00A8                     USART_put_int@value:	
  1430                           ; 1 bytes @ 0x8
  1431                           
  1432  00A8                     EEPROM_24C1025_Write_Int@mem_add:	
  1433                           ; 2 bytes @ 0x8
  1434                           
  1435                           
  1436                           ; 4 bytes @ 0x8
  1437  00A8                     	ds	2
  1438  00AA                     USART_put_int@dado:	
  1439                           
  1440                           ; 1 bytes @ 0xA
  1441  00AA                     	ds	1
  1442  00AB                     ?_PROCULUS_Control_Register_Write:	
  1443  00AB                     ?_PROCULUS_VP_Write:	
  1444                           ; 1 bytes @ 0xB
  1445                           
  1446  00AB                     PROCULUS_Control_Register_Write@size:	
  1447                           ; 1 bytes @ 0xB
  1448                           
  1449  00AB                     PROCULUS_VP_Write@vp:	
  1450                           ; 1 bytes @ 0xB
  1451                           
  1452                           
  1453                           ; 2 bytes @ 0xB
  1454  00AB                     	ds	1
  1455  00AC                     ??_PROCULUS_Control_Register_Write:	
  1456  00AC                     EEPROM_24C1025_Write_Int@data:	
  1457                           ; 1 bytes @ 0xC
  1458                           
  1459  00AC                     ___fldiv@rem:	
  1460                           ; 2 bytes @ 0xC
  1461                           
  1462  00AC                     eval_poly@res:	
  1463                           ; 4 bytes @ 0xC
  1464                           
  1465                           
  1466                           ; 4 bytes @ 0xC
  1467  00AC                     	ds	1
  1468  00AD                     PROCULUS_Control_Register_Write@vetor:	
  1469  00AD                     PROCULUS_VP_Write@vetor:	
  1470                           ; 1 bytes @ 0xD
  1471                           
  1472                           
  1473                           ; 2 bytes @ 0xD
  1474  00AD                     	ds	1
  1475  00AE                     PROCULUS_Control_Register_Write@i:	
  1476  00AE                     EEPROM_24C1025_Write_Int@chip_add:	
  1477                           ; 1 bytes @ 0xE
  1478                           
  1479                           
  1480                           ; 1 bytes @ 0xE
  1481  00AE                     	ds	1
  1482  00AF                     ?_PROCULUS_Show_Screen:	
  1483  00AF                     ?_PROCULUS_Buzzer:	
  1484                           ; 1 bytes @ 0xF
  1485                           
  1486  00AF                     PROCULUS_VP_Write@size:	
  1487                           ; 1 bytes @ 0xF
  1488                           
  1489  00AF                     PROCULUS_Buzzer@time_ms_x_10:	
  1490                           ; 1 bytes @ 0xF
  1491                           
  1492  00AF                     PROCULUS_Show_Screen@screen:	
  1493                           ; 2 bytes @ 0xF
  1494                           
  1495  00AF                     EEPROM_24C1025_Write_Int@local:	
  1496                           ; 2 bytes @ 0xF
  1497                           
  1498                           
  1499                           ; 2 bytes @ 0xF
  1500  00AF                     	ds	1
  1501  00B0                     ??_PROCULUS_VP_Write:	
  1502  00B0                     ?_log:	
  1503                           ; 1 bytes @ 0x10
  1504                           
  1505  00B0                     ___fldiv@sign:	
  1506                           ; 4 bytes @ 0x10
  1507                           
  1508  00B0                     log@x:	
  1509                           ; 1 bytes @ 0x10
  1510                           
  1511                           
  1512                           ; 4 bytes @ 0x10
  1513  00B0                     	ds	1
  1514  00B1                     ?_Save_Log:	
  1515  00B1                     ?_EEPROM_24C1025_Fill_All:	
  1516                           ; 1 bytes @ 0x11
  1517                           
  1518  00B1                     PROCULUS_Buzzer@vetor:	
  1519                           ; 1 bytes @ 0x11
  1520                           
  1521  00B1                     EEPROM_24C1025_Fill_All@value:	
  1522                           ; 2 bytes @ 0x11
  1523                           
  1524  00B1                     ___fldiv@new_exp:	
  1525                           ; 2 bytes @ 0x11
  1526                           
  1527  00B1                     PROCULUS_Show_Screen@vetor:	
  1528                           ; 2 bytes @ 0x11
  1529                           
  1530  00B1                     Save_Log@add_datalog:	
  1531                           ; 3 bytes @ 0x11
  1532                           
  1533                           
  1534                           ; 4 bytes @ 0x11
  1535  00B1                     	ds	1
  1536  00B2                     PROCULUS_VP_Write@i:	
  1537                           
  1538                           ; 1 bytes @ 0x12
  1539  00B2                     	ds	1
  1540  00B3                     ?_PROCULUS_VP_Write_String:	
  1541  00B3                     EEPROM_24C1025_Fill_All@chip_add:	
  1542                           ; 1 bytes @ 0x13
  1543                           
  1544  00B3                     PROCULUS_VP_Write_String@vp:	
  1545                           ; 1 bytes @ 0x13
  1546                           
  1547  00B3                     ___fldiv@grs:	
  1548                           ; 2 bytes @ 0x13
  1549                           
  1550                           
  1551                           ; 4 bytes @ 0x13
  1552  00B3                     	ds	1
  1553  00B4                     EEPROM_24C1025_Fill_All@mem_add:	
  1554                           
  1555                           ; 4 bytes @ 0x14
  1556  00B4                     	ds	1
  1557  00B5                     ??_Save_Log:	
  1558  00B5                     PROCULUS_VP_Write_String@text:	
  1559                           ; 1 bytes @ 0x15
  1560                           
  1561                           
  1562                           ; 1 bytes @ 0x15
  1563  00B5                     	ds	2
  1564  00B7                     ___fldiv@bexp:	
  1565                           
  1566                           ; 1 bytes @ 0x17
  1567  00B7                     	ds	1
  1568  00B8                     ___fldiv@aexp:	
  1569                           
  1570                           ; 1 bytes @ 0x18
  1571  00B8                     	ds	1
  1572  00B9                     ??_Load_Work:	
  1573  00B9                     ?_ADC_Read_NTC:	
  1574                           ; 1 bytes @ 0x19
  1575                           
  1576                           
  1577                           ; 4 bytes @ 0x19
  1578  00B9                     	ds	4
  1579  00BD                     ??_Decodify_Command:	
  1580                           
  1581                           ; 1 bytes @ 0x1D
  1582  00BD                     	ds	1
  1583  00BE                     ADC_Read_NTC@calc:	
  1584                           
  1585                           ; 4 bytes @ 0x1E
  1586  00BE                     	ds	1
  1587  00BF                     Decodify_Command@hh:	
  1588                           
  1589                           ; 10 bytes @ 0x1F
  1590  00BF                     	ds	3
  1591  00C2                     ADC_Read_NTC@B:	
  1592                           
  1593                           ; 2 bytes @ 0x22
  1594  00C2                     	ds	2
  1595  00C4                     ADC_Read_NTC@resistencia:	
  1596                           
  1597                           ; 4 bytes @ 0x24
  1598  00C4                     	ds	4
  1599  00C8                     ADC_Read_NTC@i:	
  1600                           
  1601                           ; 1 bytes @ 0x28
  1602  00C8                     	ds	1
  1603  00C9                     ADC_Read_NTC@value:	
  1604  00C9                     Decodify_Command@mm:	
  1605                           ; 2 bytes @ 0x29
  1606                           
  1607                           
  1608                           ; 10 bytes @ 0x29
  1609  00C9                     	ds	2
  1610  00CB                     ADC_Read_NTC@temperatura:	
  1611                           
  1612                           ; 4 bytes @ 0x2B
  1613  00CB                     	ds	4
  1614  00CF                     ??_mediatemperaturaNTC:	
  1615                           
  1616                           ; 1 bytes @ 0x2F
  1617  00CF                     	ds	1
  1618  00D0                     _mediatemperaturaNTC$2292:	
  1619                           
  1620                           ; 4 bytes @ 0x30
  1621  00D0                     	ds	3
  1622  00D3                     Decodify_Command@ss:	
  1623                           
  1624                           ; 10 bytes @ 0x33
  1625  00D3                     	ds	1
  1626  00D4                     mediatemperaturaNTC@canal:	
  1627                           
  1628                           ; 1 bytes @ 0x34
  1629  00D4                     	ds	1
  1630  00D5                     mediatemperaturaNTC@Temp:	
  1631                           
  1632                           ; 4 bytes @ 0x35
  1633  00D5                     	ds	4
  1634  00D9                     mediatemperaturaNTC@i:	
  1635                           
  1636                           ; 1 bytes @ 0x39
  1637  00D9                     	ds	4
  1638  00DD                     Decodify_Command@dados:	
  1639                           
  1640                           ; 2 bytes @ 0x3D
  1641  00DD                     	ds	2
  1642  00DF                     Decodify_Command@add:	
  1643                           
  1644                           ; 1 bytes @ 0x3F
  1645  00DF                     	ds	1
  1646  00E0                     Decodify_Command@tempint:	
  1647                           
  1648                           ; 2 bytes @ 0x40
  1649  00E0                     	ds	2
  1650  00E2                     Decodify_Command@OutPut:	
  1651                           
  1652                           ; 4 bytes @ 0x42
  1653  00E2                     	ds	4
  1654  00E6                     Decodify_Command@tempchar:	
  1655                           
  1656                           ; 1 bytes @ 0x46
  1657  00E6                     	ds	1
  1658  00E7                     Decodify_Command@sizedata:	
  1659                           
  1660                           ; 1 bytes @ 0x47
  1661  00E7                     	ds	1
  1662  00E8                     Decodify_Command@add_24LCxxxx:	
  1663                           
  1664                           ; 4 bytes @ 0x48
  1665  00E8                     	ds	4
  1666  00EC                     main@reset:	
  1667                           
  1668                           ; 2 bytes @ 0x4C
  1669  00EC                     	ds	2
  1670                           
  1671                           	psect	cstackCOMMON
  1672  0077                     __pcstackCOMMON:	
  1673  0077                     ?_ADC_init:	
  1674  0077                     ?_Load_Work:	
  1675                           ; 1 bytes @ 0x0
  1676                           
  1677  0077                     ?_mediatemperaturaNTC:	
  1678                           ; 1 bytes @ 0x0
  1679                           
  1680  0077                     ?_Auto_Relay0:	
  1681                           ; 1 bytes @ 0x0
  1682                           
  1683  0077                     ?_Auto_Relay1:	
  1684                           ; 1 bytes @ 0x0
  1685                           
  1686  0077                     ?_Decodify_Command:	
  1687                           ; 1 bytes @ 0x0
  1688                           
  1689  0077                     ?_USART_to_Protocol:	
  1690                           ; 1 bytes @ 0x0
  1691                           
  1692  0077                     ?_Send_To_MB:	
  1693                           ; 1 bytes @ 0x0
  1694                           
  1695  0077                     ?_Send_Reply_OK:	
  1696                           ; 1 bytes @ 0x0
  1697                           
  1698  0077                     ?_EEPROM_Read_Byte:	
  1699                           ; 1 bytes @ 0x0
  1700                           
  1701  0077                     ?_USART_putc:	
  1702                           ; 1 bytes @ 0x0
  1703                           
  1704  0077                     ?_Package_Usart_is_for_me:	
  1705                           ; 1 bytes @ 0x0
  1706                           
  1707  0077                     ?_Rele0Ligado:	
  1708                           ; 1 bytes @ 0x0
  1709                           
  1710  0077                     ?_Rele1Ligado:	
  1711                           ; 1 bytes @ 0x0
  1712                           
  1713  0077                     ?_Rele0Desligado:	
  1714                           ; 1 bytes @ 0x0
  1715                           
  1716  0077                     ?_Rele1Desligado:	
  1717                           ; 1 bytes @ 0x0
  1718                           
  1719  0077                     ?_I2C_Master_Wait:	
  1720                           ; 1 bytes @ 0x0
  1721                           
  1722  0077                     ?_I2C_Master_Start:	
  1723                           ; 1 bytes @ 0x0
  1724                           
  1725  0077                     ?_I2C_Master_RepeatedStart:	
  1726                           ; 1 bytes @ 0x0
  1727                           
  1728  0077                     ?_I2C_Master_Stop:	
  1729                           ; 1 bytes @ 0x0
  1730                           
  1731  0077                     ?_main:	
  1732                           ; 1 bytes @ 0x0
  1733                           
  1734  0077                     ?_isr:	
  1735                           ; 1 bytes @ 0x0
  1736                           
  1737  0077                     ??_isr:	
  1738                           ; 1 bytes @ 0x0
  1739                           
  1740  0077                     ADC_Read_NTC@canal:	
  1741                           ; 1 bytes @ 0x0
  1742                           
  1743                           
  1744                           ; 1 bytes @ 0x0
  1745  0077                     	ds	4
  1746  007B                     isr@tempo:	
  1747                           
  1748                           ; 2 bytes @ 0x4
  1749  007B                     	ds	2
  1750                           
  1751                           	psect	cstackBANK0
  1752  0020                     __pcstackBANK0:	
  1753  0020                     ?___fleq:	
  1754  0020                     ?_my_delay_ms_WDT:	
  1755                           ; 1 bit 
  1756                           
  1757  0020                     ??_ADC_init:	
  1758                           ; 1 bytes @ 0x0
  1759                           
  1760  0020                     ?_USART_init:	
  1761                           ; 1 bytes @ 0x0
  1762                           
  1763  0020                     ??_USART_to_Protocol:	
  1764                           ; 1 bytes @ 0x0
  1765                           
  1766  0020                     ?_EEPROM_Write_Byte:	
  1767                           ; 1 bytes @ 0x0
  1768                           
  1769  0020                     ??_EEPROM_Read_Byte:	
  1770                           ; 1 bytes @ 0x0
  1771                           
  1772  0020                     ??_USART_putc:	
  1773                           ; 1 bytes @ 0x0
  1774                           
  1775  0020                     ?_strcpy:	
  1776                           ; 1 bytes @ 0x0
  1777                           
  1778  0020                     ?_strcat:	
  1779                           ; 1 bytes @ 0x0
  1780                           
  1781  0020                     ?_my_delay_ms:	
  1782                           ; 1 bytes @ 0x0
  1783                           
  1784  0020                     ??_Package_Usart_is_for_me:	
  1785                           ; 1 bytes @ 0x0
  1786                           
  1787  0020                     ??_Rele0Ligado:	
  1788                           ; 1 bytes @ 0x0
  1789                           
  1790  0020                     ??_Rele1Ligado:	
  1791                           ; 1 bytes @ 0x0
  1792                           
  1793  0020                     ??_Rele0Desligado:	
  1794                           ; 1 bytes @ 0x0
  1795                           
  1796  0020                     ??_Rele1Desligado:	
  1797                           ; 1 bytes @ 0x0
  1798                           
  1799  0020                     ?_PROCULUS_Delay:	
  1800                           ; 1 bytes @ 0x0
  1801                           
  1802  0020                     ??_I2C_Master_Wait:	
  1803                           ; 1 bytes @ 0x0
  1804                           
  1805  0020                     ??_I2C_Master_Start:	
  1806                           ; 1 bytes @ 0x0
  1807                           
  1808  0020                     ??_I2C_Master_RepeatedStart:	
  1809                           ; 1 bytes @ 0x0
  1810                           
  1811  0020                     ??_I2C_Master_Stop:	
  1812                           ; 1 bytes @ 0x0
  1813                           
  1814  0020                     ?_I2C_Master_Write:	
  1815                           ; 1 bytes @ 0x0
  1816                           
  1817  0020                     ?_strlen:	
  1818                           ; 1 bytes @ 0x0
  1819                           
  1820  0020                     ?_captura:	
  1821                           ; 2 bytes @ 0x0
  1822                           
  1823  0020                     ?__Umul8_16:	
  1824                           ; 2 bytes @ 0x0
  1825                           
  1826  0020                     ?_I2C_Master_Read:	
  1827                           ; 2 bytes @ 0x0
  1828                           
  1829  0020                     ?___lwdiv:	
  1830                           ; 2 bytes @ 0x0
  1831                           
  1832  0020                     ?___lwmod:	
  1833                           ; 2 bytes @ 0x0
  1834                           
  1835  0020                     ?___lldiv:	
  1836                           ; 2 bytes @ 0x0
  1837                           
  1838  0020                     EEPROM_Write_Byte@dado:	
  1839                           ; 4 bytes @ 0x0
  1840                           
  1841  0020                     Package_Usart_is_for_me@retorno:	
  1842                           ; 1 bytes @ 0x0
  1843                           
  1844  0020                     USART_putc@value:	
  1845                           ; 1 bytes @ 0x0
  1846                           
  1847  0020                     strcpy@from:	
  1848                           ; 1 bytes @ 0x0
  1849                           
  1850  0020                     __Umul8_16@multiplicand:	
  1851                           ; 1 bytes @ 0x0
  1852                           
  1853  0020                     I2C_Master_Write@d:	
  1854                           ; 1 bytes @ 0x0
  1855                           
  1856  0020                     I2C_Master_Read@a:	
  1857                           ; 2 bytes @ 0x0
  1858                           
  1859  0020                     PROCULUS_Delay@tempo_ms:	
  1860                           ; 2 bytes @ 0x0
  1861                           
  1862  0020                     ___lwdiv@divisor:	
  1863                           ; 2 bytes @ 0x0
  1864                           
  1865  0020                     ___lwmod@divisor:	
  1866                           ; 2 bytes @ 0x0
  1867                           
  1868  0020                     strcat@from:	
  1869                           ; 2 bytes @ 0x0
  1870                           
  1871  0020                     my_delay_ms@time:	
  1872                           ; 2 bytes @ 0x0
  1873                           
  1874  0020                     my_delay_ms_WDT@time:	
  1875                           ; 4 bytes @ 0x0
  1876                           
  1877  0020                     USART_init@baudrate:	
  1878                           ; 4 bytes @ 0x0
  1879                           
  1880  0020                     ___lldiv@divisor:	
  1881                           ; 4 bytes @ 0x0
  1882                           
  1883  0020                     ___fleq@ff1:	
  1884                           ; 4 bytes @ 0x0
  1885                           
  1886                           
  1887                           ; 4 bytes @ 0x0
  1888  0020                     	ds	1
  1889  0021                     ??_Send_To_MB:	
  1890  0021                     ?_USART_put_string:	
  1891                           ; 1 bytes @ 0x1
  1892                           
  1893  0021                     ??_EEPROM_Write_Byte:	
  1894                           ; 1 bytes @ 0x1
  1895                           
  1896  0021                     ?_USART_put_buffer:	
  1897                           ; 1 bytes @ 0x1
  1898                           
  1899  0021                     ??_strcpy:	
  1900                           ; 1 bytes @ 0x1
  1901                           
  1902  0021                     Send_To_MB@size:	
  1903                           ; 1 bytes @ 0x1
  1904                           
  1905  0021                     USART_put_buffer@size:	
  1906                           ; 1 bytes @ 0x1
  1907                           
  1908  0021                     USART_put_string@vetor:	
  1909                           ; 2 bytes @ 0x1
  1910                           
  1911                           
  1912                           ; 2 bytes @ 0x1
  1913  0021                     	ds	1
  1914  0022                     ?_EEPROM_24C1025_Write_Buffer:	
  1915  0022                     ?_EEPROM_24C1025_Write_Str:	
  1916                           ; 1 bytes @ 0x2
  1917                           
  1918  0022                     ??_strcat:	
  1919                           ; 1 bytes @ 0x2
  1920                           
  1921  0022                     ??_captura:	
  1922                           ; 1 bytes @ 0x2
  1923                           
  1924  0022                     ??_PROCULUS_Delay:	
  1925                           ; 1 bytes @ 0x2
  1926                           
  1927  0022                     ??_I2C_Master_Write:	
  1928                           ; 1 bytes @ 0x2
  1929                           
  1930  0022                     ??_I2C_Master_Read:	
  1931                           ; 1 bytes @ 0x2
  1932                           
  1933  0022                     EEPROM_Read_Byte@addr:	
  1934                           ; 1 bytes @ 0x2
  1935                           
  1936  0022                     strcpy@to:	
  1937                           ; 1 bytes @ 0x2
  1938                           
  1939  0022                     I2C_Master_Read@temp:	
  1940                           ; 1 bytes @ 0x2
  1941                           
  1942  0022                     USART_to_Protocol@i:	
  1943                           ; 2 bytes @ 0x2
  1944                           
  1945  0022                     ___lwdiv@dividend:	
  1946                           ; 2 bytes @ 0x2
  1947                           
  1948  0022                     ___lwmod@dividend:	
  1949                           ; 2 bytes @ 0x2
  1950                           
  1951  0022                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1952                           ; 2 bytes @ 0x2
  1953                           
  1954  0022                     EEPROM_24C1025_Write_Str@mem_add:	
  1955                           ; 4 bytes @ 0x2
  1956                           
  1957                           
  1958                           ; 4 bytes @ 0x2
  1959  0022                     	ds	1
  1960  0023                     ??_USART_put_string:	
  1961  0023                     ?_EEPROM_Read_String:	
  1962                           ; 1 bytes @ 0x3
  1963                           
  1964  0023                     ??_USART_put_buffer:	
  1965                           ; 1 bytes @ 0x3
  1966                           
  1967  0023                     ??_strlen:	
  1968                           ; 1 bytes @ 0x3
  1969                           
  1970  0023                     ??__Umul8_16:	
  1971                           ; 1 bytes @ 0x3
  1972                           
  1973  0023                     ?_EEPROM_Read_Integer:	
  1974                           ; 1 bytes @ 0x3
  1975                           
  1976  0023                     EEPROM_Write_Byte@addr:	
  1977                           ; 2 bytes @ 0x3
  1978                           
  1979  0023                     EEPROM_Read_String@dado:	
  1980                           ; 1 bytes @ 0x3
  1981                           
  1982  0023                     strcat@cp:	
  1983                           ; 1 bytes @ 0x3
  1984                           
  1985  0023                     strcpy@cp:	
  1986                           ; 1 bytes @ 0x3
  1987                           
  1988  0023                     strlen@cp:	
  1989                           ; 1 bytes @ 0x3
  1990                           
  1991  0023                     USART_put_string@ptr:	
  1992                           ; 1 bytes @ 0x3
  1993                           
  1994  0023                     __Umul8_16@product:	
  1995                           ; 2 bytes @ 0x3
  1996                           
  1997                           
  1998                           ; 2 bytes @ 0x3
  1999  0023                     	ds	1
  2000  0024                     ??_my_delay_ms_WDT:	
  2001  0024                     ??_USART_init:	
  2002                           ; 1 bytes @ 0x4
  2003                           
  2004  0024                     ??_EEPROM_Read_String:	
  2005                           ; 1 bytes @ 0x4
  2006                           
  2007  0024                     ?_EEPROM_24C1025_Read_Buffer:	
  2008                           ; 1 bytes @ 0x4
  2009                           
  2010  0024                     ?_EEPROM_24C1025_Read_Str:	
  2011                           ; 1 bytes @ 0x4
  2012                           
  2013  0024                     ??_my_delay_ms:	
  2014                           ; 1 bytes @ 0x4
  2015                           
  2016  0024                     ??___lwdiv:	
  2017                           ; 1 bytes @ 0x4
  2018                           
  2019  0024                     ??___lwmod:	
  2020                           ; 1 bytes @ 0x4
  2021                           
  2022  0024                     EEPROM_Write_Byte@last_GIE:	
  2023                           ; 1 bytes @ 0x4
  2024                           
  2025  0024                     EEPROM_Read_String@addr:	
  2026                           ; 1 bytes @ 0x4
  2027                           
  2028  0024                     USART_init@i:	
  2029                           ; 1 bytes @ 0x4
  2030                           
  2031  0024                     USART_to_Protocol@usart_protocol:	
  2032                           ; 1 bytes @ 0x4
  2033                           
  2034  0024                     ___lwdiv@counter:	
  2035                           ; 1 bytes @ 0x4
  2036                           
  2037  0024                     ___lwmod@counter:	
  2038                           ; 1 bytes @ 0x4
  2039                           
  2040  0024                     strcat@to:	
  2041                           ; 1 bytes @ 0x4
  2042                           
  2043  0024                     strlen@s:	
  2044                           ; 1 bytes @ 0x4
  2045                           
  2046  0024                     PROCULUS_Delay@i:	
  2047                           ; 1 bytes @ 0x4
  2048                           
  2049  0024                     EEPROM_24C1025_Read_Buffer@mem_add:	
  2050                           ; 2 bytes @ 0x4
  2051                           
  2052  0024                     EEPROM_24C1025_Read_Str@mem_add:	
  2053                           ; 4 bytes @ 0x4
  2054                           
  2055  0024                     ___lldiv@dividend:	
  2056                           ; 4 bytes @ 0x4
  2057                           
  2058  0024                     ___fleq@ff2:	
  2059                           ; 4 bytes @ 0x4
  2060                           
  2061                           
  2062                           ; 4 bytes @ 0x4
  2063  0024                     	ds	1
  2064  0025                     ?_EEPROM_Write_Integer:	
  2065  0025                     ??_Send_Reply_OK:	
  2066                           ; 1 bytes @ 0x5
  2067                           
  2068  0025                     ?_EEPROM_Write_String:	
  2069                           ; 1 bytes @ 0x5
  2070                           
  2071  0025                     EEPROM_Write_String@dado:	
  2072                           ; 1 bytes @ 0x5
  2073                           
  2074  0025                     EEPROM_Read_String@c:	
  2075                           ; 1 bytes @ 0x5
  2076                           
  2077  0025                     USART_put_buffer@loop:	
  2078                           ; 1 bytes @ 0x5
  2079                           
  2080  0025                     EEPROM_Write_Integer@dado:	
  2081                           ; 1 bytes @ 0x5
  2082                           
  2083  0025                     ___lwdiv@quotient:	
  2084                           ; 2 bytes @ 0x5
  2085                           
  2086  0025                     __Umul8_16@word_mpld:	
  2087                           ; 2 bytes @ 0x5
  2088                           
  2089                           
  2090                           ; 2 bytes @ 0x5
  2091  0025                     	ds	1
  2092  0026                     ??_EEPROM_Read_Integer:	
  2093  0026                     ??_EEPROM_Write_String:	
  2094                           ; 1 bytes @ 0x6
  2095                           
  2096  0026                     EEPROM_Read_Integer@addr:	
  2097                           ; 1 bytes @ 0x6
  2098                           
  2099  0026                     EEPROM_Write_String@addr:	
  2100                           ; 1 bytes @ 0x6
  2101                           
  2102  0026                     USART_put_buffer@ptr:	
  2103                           ; 1 bytes @ 0x6
  2104                           
  2105  0026                     EEPROM_24C1025_Write_Buffer@sizedata:	
  2106                           ; 1 bytes @ 0x6
  2107                           
  2108  0026                     EEPROM_24C1025_Write_Str@data:	
  2109                           ; 1 bytes @ 0x6
  2110                           
  2111  0026                     my_delay_ms@i:	
  2112                           ; 1 bytes @ 0x6
  2113                           
  2114  0026                     my_delay_ms_WDT@i:	
  2115                           ; 4 bytes @ 0x6
  2116                           
  2117                           
  2118                           ; 4 bytes @ 0x6
  2119  0026                     	ds	1
  2120  0027                     ??_EEPROM_Write_Integer:	
  2121  0027                     ??_EEPROM_24C1025_Write_Str:	
  2122                           ; 1 bytes @ 0x7
  2123                           
  2124  0027                     ?_utoa:	
  2125                           ; 1 bytes @ 0x7
  2126                           
  2127  0027                     EEPROM_Read_Integer@ptr:	
  2128                           ; 1 bytes @ 0x7
  2129                           
  2130  0027                     USART_put_buffer@vetor:	
  2131                           ; 1 bytes @ 0x7
  2132                           
  2133  0027                     __Umul8_16@multiplier:	
  2134                           ; 1 bytes @ 0x7
  2135                           
  2136  0027                     EEPROM_24C1025_Write_Buffer@data:	
  2137                           ; 1 bytes @ 0x7
  2138                           
  2139  0027                     utoa@val:	
  2140                           ; 2 bytes @ 0x7
  2141                           
  2142                           
  2143                           ; 2 bytes @ 0x7
  2144  0027                     	ds	1
  2145  0028                     ??___lldiv:	
  2146  0028                     ??___fleq:	
  2147                           ; 1 bytes @ 0x8
  2148                           
  2149  0028                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2150                           ; 1 bytes @ 0x8
  2151                           
  2152  0028                     EEPROM_24C1025_Read_Str@texto:	
  2153                           ; 1 bytes @ 0x8
  2154                           
  2155  0028                     EEPROM_Read_Integer@result:	
  2156                           ; 1 bytes @ 0x8
  2157                           
  2158  0028                     ___lldiv@quotient:	
  2159                           ; 2 bytes @ 0x8
  2160                           
  2161                           
  2162                           ; 4 bytes @ 0x8
  2163  0028                     	ds	1
  2164  0029                     ??_EEPROM_24C1025_Write_Buffer:	
  2165  0029                     ??_EEPROM_24C1025_Read_Str:	
  2166                           ; 1 bytes @ 0x9
  2167                           
  2168  0029                     EEPROM_Write_Integer@addr:	
  2169                           ; 1 bytes @ 0x9
  2170                           
  2171  0029                     EEPROM_24C1025_Write_Str@chip_add:	
  2172                           ; 1 bytes @ 0x9
  2173                           
  2174  0029                     EEPROM_24C1025_Read_Buffer@data:	
  2175                           ; 1 bytes @ 0x9
  2176                           
  2177  0029                     utoa@base:	
  2178                           ; 2 bytes @ 0x9
  2179                           
  2180                           
  2181                           ; 2 bytes @ 0x9
  2182  0029                     	ds	1
  2183  002A                     EEPROM_Write_Integer@ptr:	
  2184  002A                     EEPROM_Read_Integer@i:	
  2185                           ; 1 bytes @ 0xA
  2186                           
  2187  002A                     EEPROM_24C1025_Write_Str@range:	
  2188                           ; 1 bytes @ 0xA
  2189                           
  2190                           
  2191                           ; 1 bytes @ 0xA
  2192  002A                     	ds	1
  2193  002B                     ??_EEPROM_24C1025_Read_Buffer:	
  2194  002B                     ??_utoa:	
  2195                           ; 1 bytes @ 0xB
  2196                           
  2197  002B                     ?___xxtofl:	
  2198                           ; 1 bytes @ 0xB
  2199                           
  2200  002B                     EEPROM_Write_Integer@i:	
  2201                           ; 4 bytes @ 0xB
  2202                           
  2203  002B                     EEPROM_24C1025_Write_Buffer@count:	
  2204                           ; 1 bytes @ 0xB
  2205                           
  2206  002B                     EEPROM_24C1025_Write_Str@ctrl:	
  2207                           ; 1 bytes @ 0xB
  2208                           
  2209  002B                     EEPROM_24C1025_Read_Str@cnt:	
  2210                           ; 1 bytes @ 0xB
  2211                           
  2212  002B                     utoa@v:	
  2213                           ; 1 bytes @ 0xB
  2214                           
  2215  002B                     ___xxtofl@val:	
  2216                           ; 2 bytes @ 0xB
  2217                           
  2218                           
  2219                           ; 4 bytes @ 0xB
  2220  002B                     	ds	1
  2221  002C                     ?_frexp:	
  2222  002C                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2223                           ; 4 bytes @ 0xC
  2224                           
  2225  002C                     EEPROM_24C1025_Read_Str@chip_add:	
  2226                           ; 1 bytes @ 0xC
  2227                           
  2228  002C                     ___lldiv@counter:	
  2229                           ; 1 bytes @ 0xC
  2230                           
  2231  002C                     frexp@value:	
  2232                           ; 1 bytes @ 0xC
  2233                           
  2234                           
  2235                           ; 4 bytes @ 0xC
  2236  002C                     	ds	1
  2237  002D                     ?_I2C_Master_Init:	
  2238  002D                     EEPROM_24C1025_Write_Buffer@range:	
  2239                           ; 1 bytes @ 0xD
  2240                           
  2241  002D                     EEPROM_24C1025_Read_Buffer@cnt_1518:	
  2242                           ; 1 bytes @ 0xD
  2243                           
  2244  002D                     EEPROM_24C1025_Read_Str@range:	
  2245                           ; 1 bytes @ 0xD
  2246                           
  2247  002D                     utoa@c:	
  2248                           ; 1 bytes @ 0xD
  2249                           
  2250  002D                     I2C_Master_Init@c:	
  2251                           ; 1 bytes @ 0xD
  2252                           
  2253                           
  2254                           ; 4 bytes @ 0xD
  2255  002D                     	ds	1
  2256  002E                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2257  002E                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2258                           ; 1 bytes @ 0xE
  2259                           
  2260  002E                     EEPROM_24C1025_Read_Str@ctrl:	
  2261                           ; 1 bytes @ 0xE
  2262                           
  2263  002E                     utoa@buf:	
  2264                           ; 1 bytes @ 0xE
  2265                           
  2266                           
  2267                           ; 1 bytes @ 0xE
  2268  002E                     	ds	1
  2269  002F                     ?_EEPROM_24C1025_Write_Byte:	
  2270  002F                     ?_itoa:	
  2271                           ; 1 bytes @ 0xF
  2272                           
  2273  002F                     ??___xxtofl:	
  2274                           ; 1 bytes @ 0xF
  2275                           
  2276  002F                     EEPROM_24C1025_Read_Buffer@range:	
  2277                           ; 1 bytes @ 0xF
  2278                           
  2279  002F                     itoa@val:	
  2280                           ; 1 bytes @ 0xF
  2281                           
  2282  002F                     EEPROM_24C1025_Write_Byte@mem_add:	
  2283                           ; 2 bytes @ 0xF
  2284                           
  2285                           
  2286                           ; 4 bytes @ 0xF
  2287  002F                     	ds	1
  2288  0030                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2289  0030                     frexp@eptr:	
  2290                           ; 1 bytes @ 0x10
  2291                           
  2292                           
  2293                           ; 1 bytes @ 0x10
  2294  0030                     	ds	1
  2295  0031                     ?_EEPROM_24C1025_Read_Byte:	
  2296  0031                     ??_frexp:	
  2297                           ; 1 bytes @ 0x11
  2298                           
  2299  0031                     ??_I2C_Master_Init:	
  2300                           ; 1 bytes @ 0x11
  2301                           
  2302  0031                     ?_EEPROM_24C1025_Read_Int:	
  2303                           ; 1 bytes @ 0x11
  2304                           
  2305  0031                     itoa@base:	
  2306                           ; 2 bytes @ 0x11
  2307                           
  2308  0031                     EEPROM_24C1025_Read_Byte@mem_add:	
  2309                           ; 2 bytes @ 0x11
  2310                           
  2311  0031                     EEPROM_24C1025_Read_Int@mem_add:	
  2312                           ; 4 bytes @ 0x11
  2313                           
  2314                           
  2315                           ; 4 bytes @ 0x11
  2316  0031                     	ds	2
  2317  0033                     ??_itoa:	
  2318  0033                     EEPROM_24C1025_Write_Byte@data:	
  2319                           ; 1 bytes @ 0x13
  2320                           
  2321  0033                     ___xxtofl@sign:	
  2322                           ; 1 bytes @ 0x13
  2323                           
  2324                           
  2325                           ; 1 bytes @ 0x13
  2326  0033                     	ds	1
  2327  0034                     ??_EEPROM_24C1025_Write_Byte:	
  2328  0034                     EEPROM_24C1025_Write_Byte@chip_add:	
  2329                           ; 1 bytes @ 0x14
  2330                           
  2331  0034                     ___xxtofl@exp:	
  2332                           ; 1 bytes @ 0x14
  2333                           
  2334  0034                     itoa@buf:	
  2335                           ; 1 bytes @ 0x14
  2336                           
  2337                           
  2338                           ; 1 bytes @ 0x14
  2339  0034                     	ds	1
  2340  0035                     ??_EEPROM_24C1025_Read_Byte:	
  2341  0035                     ??_EEPROM_24C1025_Read_Int:	
  2342                           ; 1 bytes @ 0x15
  2343                           
  2344  0035                     EEPROM_24C1025_Read_Byte@chip_add:	
  2345                           ; 1 bytes @ 0x15
  2346                           
  2347  0035                     EEPROM_24C1025_Read_Int@chip_add:	
  2348                           ; 1 bytes @ 0x15
  2349                           
  2350  0035                     ___xxtofl@arg:	
  2351                           ; 1 bytes @ 0x15
  2352                           
  2353                           
  2354                           ; 4 bytes @ 0x15
  2355  0035                     	ds	1
  2356  0036                     EEPROM_24C1025_Read_Byte@data:	
  2357  0036                     EEPROM_24C1025_Read_Int@data:	
  2358                           ; 1 bytes @ 0x16
  2359                           
  2360                           
  2361                           ; 2 bytes @ 0x16
  2362  0036                     	ds	3
  2363  0039                     ?___fladd:	
  2364  0039                     ___fladd@b:	
  2365                           ; 4 bytes @ 0x19
  2366                           
  2367                           
  2368                           ; 4 bytes @ 0x19
  2369  0039                     	ds	4
  2370  003D                     ___fladd@a:	
  2371                           
  2372                           ; 4 bytes @ 0x1D
  2373  003D                     	ds	4
  2374  0041                     ??___fladd:	
  2375                           
  2376                           ; 1 bytes @ 0x21
  2377  0041                     	ds	8
  2378  0049                     ___fladd@signs:	
  2379                           
  2380                           ; 1 bytes @ 0x29
  2381  0049                     	ds	1
  2382  004A                     ___fladd@aexp:	
  2383                           
  2384                           ; 1 bytes @ 0x2A
  2385  004A                     	ds	1
  2386  004B                     ___fladd@bexp:	
  2387                           
  2388                           ; 1 bytes @ 0x2B
  2389  004B                     	ds	1
  2390  004C                     ___fladd@grs:	
  2391                           
  2392                           ; 1 bytes @ 0x2C
  2393  004C                     	ds	1
  2394  004D                     ?___flsub:	
  2395  004D                     ___flsub@a:	
  2396                           ; 4 bytes @ 0x2D
  2397                           
  2398                           
  2399                           ; 4 bytes @ 0x2D
  2400  004D                     	ds	4
  2401  0051                     ___flsub@b:	
  2402                           
  2403                           ; 4 bytes @ 0x31
  2404  0051                     	ds	4
  2405  0055                     ?___flge:	
  2406  0055                     ??___flsub:	
  2407                           ; 1 bit 
  2408                           
  2409  0055                     ?___flmul:	
  2410                           ; 1 bytes @ 0x35
  2411                           
  2412  0055                     ___flge@ff1:	
  2413                           ; 4 bytes @ 0x35
  2414                           
  2415  0055                     ___flmul@b:	
  2416                           ; 4 bytes @ 0x35
  2417                           
  2418                           
  2419                           ; 4 bytes @ 0x35
  2420  0055                     	ds	4
  2421  0059                     ___flge@ff2:	
  2422  0059                     ___flmul@a:	
  2423                           ; 4 bytes @ 0x39
  2424                           
  2425                           
  2426                           ; 4 bytes @ 0x39
  2427  0059                     	ds	4
  2428  005D                     ??___flge:	
  2429  005D                     ??___flmul:	
  2430                           ; 1 bytes @ 0x3D
  2431                           
  2432                           
  2433                           ; 1 bytes @ 0x3D
  2434  005D                     	ds	4
  2435  0061                     ??_Auto_Relay0:	
  2436  0061                     ??_Auto_Relay1:	
  2437                           ; 1 bytes @ 0x41
  2438                           
  2439  0061                     ___flmul@sign:	
  2440                           ; 1 bytes @ 0x41
  2441                           
  2442                           
  2443                           ; 1 bytes @ 0x41
  2444  0061                     	ds	1
  2445  0062                     ___flmul@aexp:	
  2446                           
  2447                           ; 1 bytes @ 0x42
  2448  0062                     	ds	1
  2449  0063                     ___flmul@bexp:	
  2450                           
  2451                           ; 1 bytes @ 0x43
  2452  0063                     	ds	1
  2453  0064                     ___flmul@grs:	
  2454                           
  2455                           ; 4 bytes @ 0x44
  2456  0064                     	ds	4
  2457  0068                     ___flmul@prod:	
  2458                           
  2459                           ; 4 bytes @ 0x48
  2460  0068                     	ds	4
  2461  006C                     ___flmul@temp:	
  2462                           
  2463                           ; 2 bytes @ 0x4C
  2464  006C                     	ds	2
  2465  006E                     ??_log:	
  2466  006E                     ___fltol@sign1:	
  2467                           ; 1 bytes @ 0x4E
  2468                           
  2469  006E                     log@exponent:	
  2470                           ; 1 bytes @ 0x4E
  2471                           
  2472                           
  2473                           ; 2 bytes @ 0x4E
  2474  006E                     	ds	1
  2475  006F                     ___fltol@exp1:	
  2476                           
  2477                           ; 1 bytes @ 0x4F
  2478  006F                     	ds	1
  2479  0070                     ??_USART_put_int:	
  2480  0070                     ??_EEPROM_24C1025_Write_Int:	
  2481                           ; 1 bytes @ 0x50
  2482                           
  2483  0070                     ??_EEPROM_24C1025_Fill_All:	
  2484                           ; 1 bytes @ 0x50
  2485                           
  2486  0070                     ??_PROCULUS_Show_Screen:	
  2487                           ; 1 bytes @ 0x50
  2488                           
  2489  0070                     ??_PROCULUS_Buzzer:	
  2490                           ; 1 bytes @ 0x50
  2491                           
  2492  0070                     ??_PROCULUS_VP_Write_String:	
  2493                           ; 1 bytes @ 0x50
  2494                           
  2495  0070                     ??_ADC_Read_NTC:	
  2496                           ; 1 bytes @ 0x50
  2497                           
  2498                           
  2499                           	psect	maintext
  2500  0636                     __pmaintext:	
  2501                           ; 1 bytes @ 0x50
  2502 ;;
  2503 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2504 ;;
  2505 ;; *************** function _main *****************
  2506 ;; Defined at:
  2507 ;;		line 145 in file "SlaveLiofilizadorVer1.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  reset           2   76[BANK1 ] unsigned int 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : B00/0
  2518 ;;		On exit  : 300/300
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2521 ;;      Params:         0       0       0       0       0
  2522 ;;      Locals:         0       0       2       0       0
  2523 ;;      Temps:          0       0       0       3       0
  2524 ;;      Totals:         0       0       2       3       0
  2525 ;;Total ram usage:        5 bytes
  2526 ;; Hardware stack levels required when called:    7
  2527 ;; This function calls:
  2528 ;;		_ADC_init
  2529 ;;		_Auto_Relay0
  2530 ;;		_Auto_Relay1
  2531 ;;		_Decodify_Command
  2532 ;;		_EEPROM_Read_Integer
  2533 ;;		_EEPROM_Write_Integer
  2534 ;;		_I2C_Master_Init
  2535 ;;		_Load_Work
  2536 ;;		_USART_init
  2537 ;;		_mediatemperaturaNTC
  2538 ;;		_my_delay_ms_WDT
  2539 ;; This function is called by:
  2540 ;;		Startup code after reset
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           
  2545                           ;psect for function _main
  2546  0636                     _main:	
  2547  0636                     l7324:	
  2548                           ;incstack = 0
  2549                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2550                           
  2551                           
  2552                           ;SlaveLiofilizadorVer1.c: 146:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2553  0636  3002               	movlw	2
  2554  0637  1683               	bsf	3,5	;RP0=1, select bank3
  2555  0638  1703               	bsf	3,6	;RP1=1, select bank3
  2556  0639  00DE               	movwf	(??_main^(0+384)+2)
  2557  063A  3004               	movlw	4
  2558  063B  00DD               	movwf	(??_main^(0+384)+1)
  2559  063C  30B9               	movlw	185
  2560  063D  00DC               	movwf	??_main^(0+384)
  2561  063E                     u6537:	
  2562  063E  0BDC               	decfsz	??_main^(0+384),f
  2563  063F  2E3E               	goto	u6537
  2564  0640  0BDD               	decfsz	(??_main^(0+384)+1),f
  2565  0641  2E3E               	goto	u6537
  2566  0642  0BDE               	decfsz	(??_main^(0+384)+2),f
  2567  0643  2E3E               	goto	u6537
  2568  0644  2E45               	nop2
  2569                           
  2570                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF0=1;
  2571  0645  1683               	bsf	3,5	;RP0=1, select bank1
  2572  0646  1303               	bcf	3,6	;RP1=0, select bank1
  2573  0647  160F               	bsf	15,4	;volatile
  2574                           
  2575                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF1=1;
  2576  0648  168F               	bsf	15,5	;volatile
  2577                           
  2578                           ;SlaveLiofilizadorVer1.c: 149:      OSCCONbits.IRCF2=1;
  2579  0649  170F               	bsf	15,6	;volatile
  2580                           
  2581                           ;SlaveLiofilizadorVer1.c: 151:      PORTA=0;
  2582  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2583  064B  0185               	clrf	5	;volatile
  2584                           
  2585                           ;SlaveLiofilizadorVer1.c: 152:      PORTB=0;
  2586  064C  0186               	clrf	6	;volatile
  2587                           
  2588                           ;SlaveLiofilizadorVer1.c: 153:      PORTC=0;
  2589  064D  0187               	clrf	7	;volatile
  2590                           
  2591                           ;SlaveLiofilizadorVer1.c: 154:      PORTE=0;
  2592  064E  0189               	clrf	9	;volatile
  2593                           
  2594                           ;SlaveLiofilizadorVer1.c: 155:      TRISA=0b11101111;
  2595  064F  30EF               	movlw	239
  2596  0650  1683               	bsf	3,5	;RP0=1, select bank1
  2597  0651  0085               	movwf	5	;volatile
  2598                           
  2599                           ;SlaveLiofilizadorVer1.c: 156:      TRISB=0b00001111;
  2600  0652  300F               	movlw	15
  2601  0653  0086               	movwf	6	;volatile
  2602                           
  2603                           ;SlaveLiofilizadorVer1.c: 157:      TRISC=0xF0;
  2604  0654  30F0               	movlw	240
  2605  0655  0087               	movwf	7	;volatile
  2606                           
  2607                           ;SlaveLiofilizadorVer1.c: 158:      TRISE=0xFF;
  2608  0656  30FF               	movlw	255
  2609  0657  0089               	movwf	9	;volatile
  2610                           
  2611                           ;SlaveLiofilizadorVer1.c: 160:      ANSEL=0x00000011;
  2612  0658  3011               	movlw	17
  2613  0659  1703               	bsf	3,6	;RP1=1, select bank3
  2614  065A  0088               	movwf	8	;volatile
  2615                           
  2616                           ;SlaveLiofilizadorVer1.c: 161:      ANSELH=0x00000000;
  2617  065B  0189               	clrf	9	;volatile
  2618                           
  2619                           ;SlaveLiofilizadorVer1.c: 163:      OPTION_REGbits.nRBPU=0;
  2620  065C  1303               	bcf	3,6	;RP1=0, select bank1
  2621  065D  1381               	bcf	1,7	;volatile
  2622                           
  2623                           ;SlaveLiofilizadorVer1.c: 164:      WPUB=0b00001111;
  2624  065E  300F               	movlw	15
  2625  065F  0095               	movwf	21	;volatile
  2626                           
  2627                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB7 =1;
  2628  0660  1283               	bcf	3,5	;RP0=0, select bank0
  2629  0661  1786               	bsf	6,7	;volatile
  2630                           
  2631                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB6 =1;
  2632  0662  1706               	bsf	6,6	;volatile
  2633                           
  2634                           ;SlaveLiofilizadorVer1.c: 169:      PORTBbits.RB5=1;
  2635  0663  1686               	bsf	6,5	;volatile
  2636                           
  2637                           ;SlaveLiofilizadorVer1.c: 170:      my_delay_ms_WDT(1000);
  2638  0664  3003               	movlw	3
  2639  0665  01A3               	clrf	my_delay_ms_WDT@time+3
  2640  0666  01A2               	clrf	my_delay_ms_WDT@time+2
  2641  0667  00A1               	movwf	my_delay_ms_WDT@time+1
  2642  0668  30E8               	movlw	232
  2643  0669  00A0               	movwf	my_delay_ms_WDT@time
  2644  066A  160A  158A  24B4  120A  118A  	fcall	_my_delay_ms_WDT
  2645                           
  2646                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.T0CS=0;
  2647  066F  1683               	bsf	3,5	;RP0=1, select bank1
  2648  0670  1281               	bcf	1,5	;volatile
  2649                           
  2650                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PSA =1;
  2651  0671  1581               	bsf	1,3	;volatile
  2652                           
  2653                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS0 =1;
  2654  0672  1401               	bsf	1,0	;volatile
  2655                           
  2656                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS1 =1;
  2657  0673  1481               	bsf	1,1	;volatile
  2658                           
  2659                           ;SlaveLiofilizadorVer1.c: 176:      OPTION_REGbits.PS2 =1;
  2660  0674  1501               	bsf	1,2	;volatile
  2661                           
  2662                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.T0IE =0;
  2663  0675  128B               	bcf	11,5	;volatile
  2664                           
  2665                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.INTE =0;
  2666  0676  120B               	bcf	11,4	;volatile
  2667                           
  2668                           ;SlaveLiofilizadorVer1.c: 179:      INTCONbits.GIE =1;
  2669  0677  178B               	bsf	11,7	;volatile
  2670                           
  2671                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.PEIE = 1;
  2672  0678  170B               	bsf	11,6	;volatile
  2673                           
  2674                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS0=1;
  2675  0679  1283               	bcf	3,5	;RP0=0, select bank0
  2676  067A  1610               	bsf	16,4	;volatile
  2677                           
  2678                           ;SlaveLiofilizadorVer1.c: 184:      T1CKPS1=1;
  2679  067B  1690               	bsf	16,5	;volatile
  2680                           
  2681                           ;SlaveLiofilizadorVer1.c: 185:      TMR1CS=0;
  2682  067C  1090               	bcf	16,1	;volatile
  2683                           
  2684                           ;SlaveLiofilizadorVer1.c: 186:      TMR1IE=1;
  2685  067D  1683               	bsf	3,5	;RP0=1, select bank1
  2686  067E  140C               	bsf	12,0	;volatile
  2687                           
  2688                           ;SlaveLiofilizadorVer1.c: 187:      T1CON=1;
  2689  067F  3001               	movlw	1
  2690  0680  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0681  0090               	movwf	16	;volatile
  2692  0682  0064               	clrwdt	;# 
  2693                           
  2694                           ;SlaveLiofilizadorVer1.c: 194:      ADC_init();
  2695  0683  160A  118A  2005  120A  118A  	fcall	_ADC_init
  2696                           
  2697                           ;SlaveLiofilizadorVer1.c: 195:      I2C_Master_Init(100000);
  2698  0688  3001               	movlw	1
  2699  0689  01B0               	clrf	I2C_Master_Init@c+3
  2700  068A  00AF               	movwf	I2C_Master_Init@c+2
  2701  068B  3086               	movlw	134
  2702  068C  00AE               	movwf	I2C_Master_Init@c+1
  2703  068D  30A0               	movlw	160
  2704  068E  00AD               	movwf	I2C_Master_Init@c
  2705  068F  160A  158A  2633  120A  118A  	fcall	_I2C_Master_Init
  2706                           
  2707                           ;SlaveLiofilizadorVer1.c: 196:      USART_init(115200);
  2708  0694  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0695  3001               	movlw	1
  2710  0696  01A3               	clrf	USART_init@baudrate+3
  2711  0697  00A2               	movwf	USART_init@baudrate+2
  2712  0698  30C2               	movlw	194
  2713  0699  00A1               	movwf	USART_init@baudrate+1
  2714  069A  01A0               	clrf	USART_init@baudrate
  2715  069B  160A  158A  2515  120A  118A  	fcall	_USART_init
  2716                           
  2717                           ;SlaveLiofilizadorVer1.c: 202:      {;SlaveLiofilizadorVer1.c: 203:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 204:      reset=EEPROM_Read_Integer(0x10);
  2718  06A0  3010               	movlw	16
  2719  06A1  120A  118A  2602  120A  118A  	fcall	_EEPROM_Read_Integer
  2720  06A6  0824               	movf	?_EEPROM_Read_Integer+1,w
  2721  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  2722  06A8  00ED               	movwf	(main@reset+1)^(0+128)
  2723  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  2724  06AA  0823               	movf	?_EEPROM_Read_Integer,w
  2725  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  2726  06AC  00EC               	movwf	main@reset^(0+128)
  2727                           
  2728                           ;SlaveLiofilizadorVer1.c: 205:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2729  06AD  0F6C               	incfsz	main@reset^(0+128),w
  2730  06AE  2EBB               	goto	l7394
  2731  06AF  0A6D               	incf	(main@reset+1)^(0+128),w
  2732  06B0  1D03               	btfss	3,2
  2733  06B1  2EBB               	goto	l7394
  2734  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  2735  06B3  3010               	movlw	16
  2736  06B4  01A5               	clrf	EEPROM_Write_Integer@dado
  2737  06B5  01A6               	clrf	EEPROM_Write_Integer@dado+1
  2738  06B6  160A  158A  26A8  120A  118A  	fcall	_EEPROM_Write_Integer
  2739  06BB                     l7394:	
  2740                           
  2741                           ;SlaveLiofilizadorVer1.c: 206:      reset++;
  2742  06BB  1683               	bsf	3,5	;RP0=1, select bank1
  2743  06BC  1303               	bcf	3,6	;RP1=0, select bank1
  2744  06BD  0AEC               	incf	main@reset^(0+128),f
  2745  06BE  1903               	skipnz
  2746  06BF  0AED               	incf	(main@reset+1)^(0+128),f
  2747                           
  2748                           ;SlaveLiofilizadorVer1.c: 207:      EEPROM_Write_Integer(0x10,reset);
  2749  06C0  086D               	movf	(main@reset+1)^(0+128),w
  2750  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  2751  06C2  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2752  06C3  1683               	bsf	3,5	;RP0=1, select bank1
  2753  06C4  086C               	movf	main@reset^(0+128),w
  2754  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  2755  06C6  00A5               	movwf	EEPROM_Write_Integer@dado
  2756  06C7  3010               	movlw	16
  2757  06C8  160A  158A  26A8  120A  118A  	fcall	_EEPROM_Write_Integer
  2758                           
  2759                           ;SlaveLiofilizadorVer1.c: 208:      };SlaveLiofilizadorVer1.c: 212:      Delay_Led_Tmr0 
      +                          = 0;
  2760  06CD  1683               	bsf	3,5	;RP0=1, select bank3
  2761  06CE  1703               	bsf	3,6	;RP1=1, select bank3
  2762  06CF  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  2763  06D0  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  2764                           
  2765                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Usart = 0;
  2766  06D1  01AC               	clrf	_Delay_Led_Usart^(0+384)	;volatile
  2767  06D2  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2768                           
  2769                           ;SlaveLiofilizadorVer1.c: 214:      Delay_Led_Memory = 0;
  2770  06D3  01B0               	clrf	_Delay_Led_Memory^(0+384)	;volatile
  2771  06D4  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  2772                           
  2773                           ;SlaveLiofilizadorVer1.c: 216:      segundo=0;
  2774  06D5  01F5               	clrf	_segundo	;volatile
  2775                           
  2776                           ;SlaveLiofilizadorVer1.c: 217:      hora=0;
  2777  06D6  01F4               	clrf	_hora	;volatile
  2778                           
  2779                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC0=0;
  2780  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  2781  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  2782  06D9  1007               	bcf	7,0	;volatile
  2783                           
  2784                           ;SlaveLiofilizadorVer1.c: 219:      PORTCbits.RC1=0;
  2785  06DA  1087               	bcf	7,1	;volatile
  2786                           
  2787                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA2=0;
  2788  06DB  1105               	bcf	5,2	;volatile
  2789                           
  2790                           ;SlaveLiofilizadorVer1.c: 221:      PORTAbits.RA3=0;
  2791  06DC  1185               	bcf	5,3	;volatile
  2792                           
  2793                           ;SlaveLiofilizadorVer1.c: 224:      Board_Number=(((0x0F)&(~PORTB)));
  2794  06DD  0906               	comf	6,w	;volatile
  2795  06DE  1683               	bsf	3,5	;RP0=1, select bank3
  2796  06DF  1703               	bsf	3,6	;RP1=1, select bank3
  2797  06E0  00B4               	movwf	_Board_Number^(0+384)
  2798  06E1  300F               	movlw	15
  2799  06E2  05B4               	andwf	_Board_Number^(0+384),f
  2800                           
  2801                           ;SlaveLiofilizadorVer1.c: 225:      canal=1;
  2802  06E3  01B5               	clrf	_canal^(0+384)
  2803  06E4  0AB5               	incf	_canal^(0+384),f
  2804                           
  2805                           ;SlaveLiofilizadorVer1.c: 239:      Load_Work();
  2806  06E5  120A  118A  2509  120A  118A  	fcall	_Load_Work
  2807                           
  2808                           ;SlaveLiofilizadorVer1.c: 240:      generic_status.flag_global_hot=0;
  2809  06EA  1376               	bcf	_generic_status,6
  2810  06EB                     l7424:	
  2811                           
  2812                           ;SlaveLiofilizadorVer1.c: 247:           {;SlaveLiofilizadorVer1.c: 249:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2813  06EB  17F6               	bsf	_generic_status,7
  2814                           
  2815                           ;SlaveLiofilizadorVer1.c: 253:          if(++canal==2) canal=0;
  2816  06EC  1683               	bsf	3,5	;RP0=1, select bank3
  2817  06ED  1703               	bsf	3,6	;RP1=1, select bank3
  2818  06EE  3002               	movlw	2
  2819  06EF  0AB5               	incf	_canal^(0+384),f
  2820  06F0  0635               	xorwf	_canal^(0+384),w
  2821  06F1  1903               	btfsc	3,2
  2822  06F2  01B5               	clrf	_canal^(0+384)
  2823                           
  2824                           ;SlaveLiofilizadorVer1.c: 254:          mediatemperaturaNTC(canal);
  2825  06F3  0835               	movf	_canal^(0+384),w
  2826  06F4  160A  118A  2010  120A  118A  	fcall	_mediatemperaturaNTC
  2827                           
  2828                           ;SlaveLiofilizadorVer1.c: 257:          if(generic_status.flag_global_hot)
  2829  06F9  1F76               	btfss	_generic_status,6
  2830  06FA  2F06               	goto	l287
  2831                           
  2832                           ;SlaveLiofilizadorVer1.c: 258:             {;SlaveLiofilizadorVer1.c: 259:              
      +                          Auto_Relay0();
  2833  06FB  120A  118A  2351  120A  118A  	fcall	_Auto_Relay0
  2834                           
  2835                           ;SlaveLiofilizadorVer1.c: 260:              Auto_Relay1();
  2836  0700  120A  118A  23AB  120A  118A  	fcall	_Auto_Relay1
  2837                           
  2838                           ;SlaveLiofilizadorVer1.c: 261:             }
  2839  0705  2F0A               	goto	l288
  2840  0706                     l287:	
  2841                           ;SlaveLiofilizadorVer1.c: 262:          else
  2842                           
  2843                           
  2844                           ;SlaveLiofilizadorVer1.c: 263:             {;SlaveLiofilizadorVer1.c: 264:             P
      +                          ORTCbits.RC0=0;
  2845  0706  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0707  1303               	bcf	3,6	;RP1=0, select bank0
  2847  0708  1007               	bcf	7,0	;volatile
  2848                           
  2849                           ;SlaveLiofilizadorVer1.c: 265:             PORTCbits.RC1=0;
  2850  0709  1087               	bcf	7,1	;volatile
  2851  070A                     l288:	
  2852                           ;SlaveLiofilizadorVer1.c: 266:             }
  2853                           
  2854                           
  2855                           ;SlaveLiofilizadorVer1.c: 284:          if(generic_status.flag_usart_rx==1)
  2856  070A  1C76               	btfss	_generic_status,0
  2857  070B  2EEB               	goto	l7424
  2858                           
  2859                           ;SlaveLiofilizadorVer1.c: 285:             {;SlaveLiofilizadorVer1.c: 286:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2860  070C  1283               	bcf	3,5	;RP0=0, select bank2
  2861  070D  1703               	bsf	3,6	;RP1=1, select bank2
  2862  070E  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2863  070F  1683               	bsf	3,5	;RP0=1, select bank3
  2864  0710  00A5               	movwf	(_header+1)^(0+384)
  2865  0711  1283               	bcf	3,5	;RP0=0, select bank2
  2866  0712  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2867  0713  1683               	bsf	3,5	;RP0=1, select bank3
  2868  0714  00A4               	movwf	_header^(0+384)
  2869                           
  2870                           ;SlaveLiofilizadorVer1.c: 287:             if(header==0xAABB)
  2871  0715  3ABB               	xorlw	187
  2872  0716  30AA               	movlw	170
  2873  0717  1903               	skipnz
  2874  0718  0625               	xorwf	(_header+1)^(0+384),w
  2875  0719  1D03               	btfss	3,2
  2876  071A  2EEB               	goto	l7424
  2877                           
  2878                           ;SlaveLiofilizadorVer1.c: 288:                {;SlaveLiofilizadorVer1.c: 289:           
      +                               destino =usart_buffer[3];
  2879  071B  1283               	bcf	3,5	;RP0=0, select bank2
  2880  071C  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2881  071D  1683               	bsf	3,5	;RP0=1, select bank3
  2882  071E  00B3               	movwf	_destino^(0+384)
  2883                           
  2884                           ;SlaveLiofilizadorVer1.c: 290:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2885  071F  0634               	xorwf	_Board_Number^(0+384),w
  2886  0720  1903               	skipnz
  2887  0721  2F24               	goto	l7444
  2888  0722  0F33               	incfsz	_destino^(0+384),w
  2889  0723  2EEB               	goto	l7424
  2890  0724                     l7444:	
  2891                           
  2892                           ;SlaveLiofilizadorVer1.c: 291:                       {;SlaveLiofilizadorVer1.c: 292:    
      +                                             Delay_Led_Usart=20;
  2893  0724  3014               	movlw	20
  2894  0725  00AC               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  2895  0726  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2896                           
  2897                           ;SlaveLiofilizadorVer1.c: 293:                       Decodify_Command();
  2898  0727  120A  158A  203F  120A  118A  	fcall	_Decodify_Command
  2899                           
  2900                           ;SlaveLiofilizadorVer1.c: 294:                       generic_status.flag_usart_rx=0;
  2901  072C  1076               	bcf	_generic_status,0
  2902                           
  2903                           ;SlaveLiofilizadorVer1.c: 297:             }
  2904  072D  2EEB               	goto	l7424
  2905  072E                     __end_of_main:	
  2906                           
  2907                           	psect	text1
  2908  1CB4                     __ptext1:	
  2909 ;; *************** function _my_delay_ms_WDT *****************
  2910 ;; Defined at:
  2911 ;;		line 13 in file "my_delay.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  time            4    0[BANK0 ] long 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  i               4    6[BANK0 ] long 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		wreg, status,2, status,0, btemp+1
  2920 ;; Tracked objects:
  2921 ;;		On entry : 300/0
  2922 ;;		On exit  : 300/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2925 ;;      Params:         0       4       0       0       0
  2926 ;;      Locals:         0       4       0       0       0
  2927 ;;      Temps:          0       2       0       0       0
  2928 ;;      Totals:         0      10       0       0       0
  2929 ;;Total ram usage:       10 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    1
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_main
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           
  2940                           ;psect for function _my_delay_ms_WDT
  2941  1CB4                     _my_delay_ms_WDT:	
  2942                           
  2943                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
  2944                           
  2945                           ;incstack = 0
  2946                           ; Regs used in _my_delay_ms_WDT: [wreg+status,2+status,0+btemp+1]
  2947  1CB4  01A6               	clrf	my_delay_ms_WDT@i
  2948  1CB5  01A7               	clrf	my_delay_ms_WDT@i+1
  2949  1CB6  01A8               	clrf	my_delay_ms_WDT@i+2
  2950  1CB7  01A9               	clrf	my_delay_ms_WDT@i+3
  2951  1CB8                     l5336:	
  2952  1CB8  0829               	movf	my_delay_ms_WDT@i+3,w
  2953  1CB9  3A80               	xorlw	128
  2954  1CBA  00FF               	movwf	127
  2955  1CBB  0823               	movf	my_delay_ms_WDT@time+3,w
  2956  1CBC  3A80               	xorlw	128
  2957  1CBD  027F               	subwf	127,w
  2958  1CBE  1D03               	skipz
  2959  1CBF  2CCA               	goto	u4593
  2960  1CC0  0822               	movf	my_delay_ms_WDT@time+2,w
  2961  1CC1  0228               	subwf	my_delay_ms_WDT@i+2,w
  2962  1CC2  1D03               	skipz
  2963  1CC3  2CCA               	goto	u4593
  2964  1CC4  0821               	movf	my_delay_ms_WDT@time+1,w
  2965  1CC5  0227               	subwf	my_delay_ms_WDT@i+1,w
  2966  1CC6  1D03               	skipz
  2967  1CC7  2CCA               	goto	u4593
  2968  1CC8  0820               	movf	my_delay_ms_WDT@time,w
  2969  1CC9  0226               	subwf	my_delay_ms_WDT@i,w
  2970  1CCA                     u4593:	
  2971  1CCA  1803               	btfsc	3,0
  2972  1CCB  0008               	return
  2973  1CCC  0064               	clrwdt	;# 
  2974                           
  2975                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
  2976  1CCD  3003               	movlw	3
  2977  1CCE  1283               	bcf	3,5	;RP0=0, select bank0
  2978  1CCF  1303               	bcf	3,6	;RP1=0, select bank0
  2979  1CD0  00A5               	movwf	??_my_delay_ms_WDT+1
  2980  1CD1  3097               	movlw	151
  2981  1CD2  00A4               	movwf	??_my_delay_ms_WDT
  2982  1CD3                     u6547:	
  2983  1CD3  0BA4               	decfsz	??_my_delay_ms_WDT,f
  2984  1CD4  2CD3               	goto	u6547
  2985  1CD5  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
  2986  1CD6  2CD3               	goto	u6547
  2987                           
  2988                           ;my_delay.c: 19:             }
  2989  1CD7  1283               	bcf	3,5	;RP0=0, select bank0
  2990  1CD8  1303               	bcf	3,6	;RP1=0, select bank0
  2991  1CD9  0AA6               	incf	my_delay_ms_WDT@i,f
  2992  1CDA  1903               	skipnz
  2993  1CDB  0AA7               	incf	my_delay_ms_WDT@i+1,f
  2994  1CDC  1903               	skipnz
  2995  1CDD  0AA8               	incf	my_delay_ms_WDT@i+2,f
  2996  1CDE  1903               	skipnz
  2997  1CDF  0AA9               	incf	my_delay_ms_WDT@i+3,f
  2998  1CE0  2CB8               	goto	l5336
  2999  1CE1                     __end_of_my_delay_ms_WDT:	
  3000                           
  3001                           	psect	text2
  3002  1010                     __ptext2:	
  3003 ;; *************** function _mediatemperaturaNTC *****************
  3004 ;; Defined at:
  3005 ;;		line 680 in file "SlaveLiofilizadorVer1.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;  canal           1    wreg     unsigned char 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  canal           1   52[BANK1 ] unsigned char 
  3010 ;;  Temp            4   53[BANK1 ] float 
  3011 ;;  i               1   57[BANK1 ] unsigned char 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 300/300
  3018 ;;		On exit  : 100/100
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3021 ;;      Params:         0       0       0       0       0
  3022 ;;      Locals:         0       0      10       0       0
  3023 ;;      Temps:          0       0       1       0       0
  3024 ;;      Totals:         0       0      11       0       0
  3025 ;;Total ram usage:       11 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    6
  3028 ;; This function calls:
  3029 ;;		_ADC_Read_NTC
  3030 ;;		_Package_Usart_is_for_me
  3031 ;;		_Rele0Ligado
  3032 ;;		_Rele1Ligado
  3033 ;;		___fladd
  3034 ;;		___fldiv
  3035 ;;		___xxtofl
  3036 ;;		_my_delay_ms
  3037 ;; This function is called by:
  3038 ;;		_main
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           
  3043                           ;psect for function _mediatemperaturaNTC
  3044  1010                     _mediatemperaturaNTC:	
  3045                           
  3046                           ;incstack = 0
  3047                           ; Regs used in _mediatemperaturaNTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3048                           ;mediatemperaturaNTC@canal stored from wreg
  3049  1010  1303               	bcf	3,6	;RP1=0, select bank1
  3050  1011  00D4               	movwf	mediatemperaturaNTC@canal^(0+128)
  3051                           
  3052                           ;SlaveLiofilizadorVer1.c: 680: void mediatemperaturaNTC(unsigned char canal);SlaveLiofil
      +                          izadorVer1.c: 681:      {;SlaveLiofilizadorVer1.c: 682:      float Temp;;SlaveLiofilizad
      +                          orVer1.c: 683:      char i;;SlaveLiofilizadorVer1.c: 685:      ADCON0bits.CHS=canal;
  3053  1012  00CF               	movwf	??_mediatemperaturaNTC^(0+128)
  3054  1013  0DCF               	rlf	??_mediatemperaturaNTC^(0+128),f
  3055  1014  0DCF               	rlf	??_mediatemperaturaNTC^(0+128),f
  3056  1015  1283               	bcf	3,5	;RP0=0, select bank0
  3057  1016  081F               	movf	31,w	;volatile
  3058  1017  1683               	bsf	3,5	;RP0=1, select bank1
  3059  1018  064F               	xorwf	??_mediatemperaturaNTC^(0+128),w
  3060  1019  39C3               	andlw	-61
  3061  101A  064F               	xorwf	??_mediatemperaturaNTC^(0+128),w
  3062  101B  1283               	bcf	3,5	;RP0=0, select bank0
  3063  101C  009F               	movwf	31	;volatile
  3064                           
  3065                           ;SlaveLiofilizadorVer1.c: 686:      my_delay_ms(1);
  3066  101D  01A0               	clrf	my_delay_ms@time
  3067  101E  0AA0               	incf	my_delay_ms@time,f
  3068  101F  01A1               	clrf	my_delay_ms@time+1
  3069  1020  01A2               	clrf	my_delay_ms@time+2
  3070  1021  01A3               	clrf	my_delay_ms@time+3
  3071  1022  27D4  160A  118A   	fcall	_my_delay_ms
  3072                           
  3073                           ;SlaveLiofilizadorVer1.c: 688:      Temp=0;
  3074  1025  1683               	bsf	3,5	;RP0=1, select bank1
  3075  1026  01D5               	clrf	mediatemperaturaNTC@Temp^(0+128)
  3076  1027  01D6               	clrf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3077  1028  01D7               	clrf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3078  1029  01D8               	clrf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3079                           
  3080                           ;SlaveLiofilizadorVer1.c: 690:      for(i=1;i<15;i++)
  3081  102A  01D9               	clrf	mediatemperaturaNTC@i^(0+128)
  3082  102B  0AD9               	incf	mediatemperaturaNTC@i^(0+128),f
  3083  102C                     l7004:	
  3084                           
  3085                           ;SlaveLiofilizadorVer1.c: 691:          {;SlaveLiofilizadorVer1.c: 692:          Temp+=A
      +                          DC_Read_NTC(canal);
  3086  102C  2337  160A  118A   	fcall	_ADC_Read_NTC
  3087  102F  083C               	movf	(?_ADC_Read_NTC+3)^(0+128),w
  3088  1030  00D3               	movwf	(_mediatemperaturaNTC$2292+3)^(0+128)
  3089  1031  083B               	movf	(?_ADC_Read_NTC+2)^(0+128),w
  3090  1032  00D2               	movwf	(_mediatemperaturaNTC$2292+2)^(0+128)
  3091  1033  083A               	movf	(?_ADC_Read_NTC+1)^(0+128),w
  3092  1034  00D1               	movwf	(_mediatemperaturaNTC$2292+1)^(0+128)
  3093  1035  0839               	movf	?_ADC_Read_NTC^(0+128),w
  3094  1036  00D0               	movwf	_mediatemperaturaNTC$2292^(0+128)
  3095                           
  3096                           ;SlaveLiofilizadorVer1.c: 691:          {;SlaveLiofilizadorVer1.c: 692:          Temp+=A
      +                          DC_Read_NTC(canal);
  3097  1037  0853               	movf	(_mediatemperaturaNTC$2292+3)^(0+128),w
  3098  1038  1283               	bcf	3,5	;RP0=0, select bank0
  3099  1039  00BC               	movwf	___fladd@b+3
  3100  103A  1683               	bsf	3,5	;RP0=1, select bank1
  3101  103B  0852               	movf	(_mediatemperaturaNTC$2292+2)^(0+128),w
  3102  103C  1283               	bcf	3,5	;RP0=0, select bank0
  3103  103D  00BB               	movwf	___fladd@b+2
  3104  103E  1683               	bsf	3,5	;RP0=1, select bank1
  3105  103F  0851               	movf	(_mediatemperaturaNTC$2292+1)^(0+128),w
  3106  1040  1283               	bcf	3,5	;RP0=0, select bank0
  3107  1041  00BA               	movwf	___fladd@b+1
  3108  1042  1683               	bsf	3,5	;RP0=1, select bank1
  3109  1043  0850               	movf	_mediatemperaturaNTC$2292^(0+128),w
  3110  1044  1283               	bcf	3,5	;RP0=0, select bank0
  3111  1045  00B9               	movwf	___fladd@b
  3112  1046  1683               	bsf	3,5	;RP0=1, select bank1
  3113  1047  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3114  1048  1283               	bcf	3,5	;RP0=0, select bank0
  3115  1049  00C0               	movwf	___fladd@a+3
  3116  104A  1683               	bsf	3,5	;RP0=1, select bank1
  3117  104B  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3118  104C  1283               	bcf	3,5	;RP0=0, select bank0
  3119  104D  00BF               	movwf	___fladd@a+2
  3120  104E  1683               	bsf	3,5	;RP0=1, select bank1
  3121  104F  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3122  1050  1283               	bcf	3,5	;RP0=0, select bank0
  3123  1051  00BE               	movwf	___fladd@a+1
  3124  1052  1683               	bsf	3,5	;RP0=1, select bank1
  3125  1053  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3126  1054  1283               	bcf	3,5	;RP0=0, select bank0
  3127  1055  00BD               	movwf	___fladd@a
  3128  1056  21C8  160A  118A   	fcall	___fladd
  3129  1059  083C               	movf	?___fladd+3,w
  3130  105A  1683               	bsf	3,5	;RP0=1, select bank1
  3131  105B  00D8               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3132  105C  1283               	bcf	3,5	;RP0=0, select bank0
  3133  105D  083B               	movf	?___fladd+2,w
  3134  105E  1683               	bsf	3,5	;RP0=1, select bank1
  3135  105F  00D7               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3136  1060  1283               	bcf	3,5	;RP0=0, select bank0
  3137  1061  083A               	movf	?___fladd+1,w
  3138  1062  1683               	bsf	3,5	;RP0=1, select bank1
  3139  1063  00D6               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3140  1064  1283               	bcf	3,5	;RP0=0, select bank0
  3141  1065  0839               	movf	?___fladd,w
  3142  1066  1683               	bsf	3,5	;RP0=1, select bank1
  3143  1067  00D5               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3144                           
  3145                           ;SlaveLiofilizadorVer1.c: 693:          if(Package_Usart_is_for_me()==1) break;
  3146  1068  275F  160A  118A   	fcall	_Package_Usart_is_for_me
  3147  106B  3A01               	xorlw	1
  3148  106C  1903               	btfsc	3,2
  3149  106D  2894               	goto	l7032
  3150                           
  3151                           ;SlaveLiofilizadorVer1.c: 695:          if(generic_status.flag_global_hot)
  3152  106E  1F76               	btfss	_generic_status,6
  3153  106F  288D               	goto	l7028
  3154                           
  3155                           ;SlaveLiofilizadorVer1.c: 696:            {;SlaveLiofilizadorVer1.c: 698:            if(
      +                          (TempoCNT_0==0)&&
  3156  1070  1683               	bsf	3,5	;RP0=1, select bank1
  3157  1071  086F               	movf	_TempoCNT_0^(0+128),w	;volatile
  3158  1072  1D03               	btfss	3,2
  3159  1073  287E               	goto	l7020
  3160  1074  1703               	bsf	3,6	;RP1=1, select bank3
  3161  1075  0B60               	decfsz	_RL0Status^(0+384),w
  3162  1076  287E               	goto	l7020
  3163  1077  0328               	decf	_Status0^(0+384),w
  3164  1078  0429               	iorwf	(_Status0+1)^(0+384),w
  3165  1079  1D03               	btfss	3,2
  3166  107A  287E               	goto	l7020
  3167                           
  3168                           ;SlaveLiofilizadorVer1.c: 700:               (Status0==1)) Rele0Ligado();
  3169  107B  20EF  160A  118A   	fcall	_Rele0Ligado
  3170  107E                     l7020:	
  3171                           
  3172                           ;SlaveLiofilizadorVer1.c: 702:            if((TempoCNT_1==0)&&
  3173  107E  1683               	bsf	3,5	;RP0=1, select bank1
  3174  107F  1303               	bcf	3,6	;RP1=0, select bank1
  3175  1080  086E               	movf	_TempoCNT_1^(0+128),w	;volatile
  3176  1081  1D03               	btfss	3,2
  3177  1082  288D               	goto	l7028
  3178  1083  1703               	bsf	3,6	;RP1=1, select bank3
  3179  1084  0B5F               	decfsz	_RL1Status^(0+384),w
  3180  1085  288D               	goto	l7028
  3181  1086  0326               	decf	_Status1^(0+384),w
  3182  1087  0427               	iorwf	(_Status1+1)^(0+384),w
  3183  1088  1D03               	btfss	3,2
  3184  1089  288D               	goto	l7028
  3185                           
  3186                           ;SlaveLiofilizadorVer1.c: 704:               (Status1==1)) Rele1Ligado();
  3187  108A  2106  160A  118A   	fcall	_Rele1Ligado
  3188  108D                     l7028:	
  3189                           
  3190                           ;SlaveLiofilizadorVer1.c: 707:          }
  3191  108D  1683               	bsf	3,5	;RP0=1, select bank1
  3192  108E  1303               	bcf	3,6	;RP1=0, select bank1
  3193  108F  300F               	movlw	15
  3194  1090  0AD9               	incf	mediatemperaturaNTC@i^(0+128),f
  3195  1091  0259               	subwf	mediatemperaturaNTC@i^(0+128),w
  3196  1092  1C03               	skipc
  3197  1093  282C               	goto	l7004
  3198  1094                     l7032:	
  3199                           
  3200                           ;SlaveLiofilizadorVer1.c: 708:      if(i<10)
  3201  1094  300A               	movlw	10
  3202  1095  1683               	bsf	3,5	;RP0=1, select bank1
  3203  1096  0259               	subwf	mediatemperaturaNTC@i^(0+128),w
  3204  1097  1C03               	btfss	3,0
  3205  1098  0008               	return
  3206                           
  3207                           ;SlaveLiofilizadorVer1.c: 713:      if(i==15)
  3208  1099  300F               	movlw	15
  3209  109A  0659               	xorwf	mediatemperaturaNTC@i^(0+128),w
  3210  109B  1D03               	btfss	3,2
  3211  109C  28AC               	goto	l7040
  3212                           
  3213                           ;SlaveLiofilizadorVer1.c: 714:         Temp/=(i-1);
  3214  109D  0859               	movf	mediatemperaturaNTC@i^(0+128),w
  3215  109E  3EFF               	addlw	255
  3216  109F  1283               	bcf	3,5	;RP0=0, select bank0
  3217  10A0  00AB               	movwf	___xxtofl@val
  3218  10A1  30FF               	movlw	255
  3219  10A2  1803               	skipnc
  3220  10A3  3000               	movlw	0
  3221  10A4  00AC               	movwf	___xxtofl@val+1
  3222  10A5  01AD               	clrf	___xxtofl@val+2
  3223  10A6  1BAC               	btfsc	___xxtofl@val+1,7
  3224  10A7  03AD               	decf	___xxtofl@val+2,f
  3225  10A8  082D               	movf	___xxtofl@val+2,w
  3226  10A9  00AE               	movwf	___xxtofl@val+3
  3227  10AA  3001               	movlw	1
  3228  10AB  28B3               	goto	L1
  3229  10AC                     l7040:	
  3230                           
  3231                           ;SlaveLiofilizadorVer1.c: 716:         Temp/=(i);
  3232  10AC  0859               	movf	mediatemperaturaNTC@i^(0+128),w
  3233  10AD  1283               	bcf	3,5	;RP0=0, select bank0
  3234  10AE  120A  118A  24EF  160A  118A  	fcall	PL72	;call to abstracted procedure
  3235  10B3                     L1:	
  3236  10B3  24A9  160A  118A   	fcall	___xxtofl
  3237  10B6  2775  160A  118A   	fcall	PL18	;call to abstracted procedure
  3238  10B9  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3239  10BA  00A7               	movwf	(___fldiv@b+3)^(0+128)
  3240  10BB  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3241  10BC  00A6               	movwf	(___fldiv@b+2)^(0+128)
  3242  10BD  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3243  10BE  00A5               	movwf	(___fldiv@b+1)^(0+128)
  3244  10BF  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3245  10C0  00A4               	movwf	___fldiv@b^(0+128)
  3246  10C1  2517  160A  118A   	fcall	___fldiv
  3247  10C4  0823               	movf	(?___fldiv+3)^(0+128),w
  3248  10C5  00D8               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3249  10C6  0822               	movf	(?___fldiv+2)^(0+128),w
  3250  10C7  00D7               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3251  10C8  0821               	movf	(?___fldiv+1)^(0+128),w
  3252  10C9  00D6               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3253  10CA  0820               	movf	?___fldiv^(0+128),w
  3254  10CB  00D5               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3255                           
  3256                           ;SlaveLiofilizadorVer1.c: 718:      if(canal==0)
  3257  10CC  0854               	movf	mediatemperaturaNTC@canal^(0+128),w
  3258  10CD  1D03               	btfss	3,2
  3259  10CE  28DF               	goto	l7046
  3260                           
  3261                           ;SlaveLiofilizadorVer1.c: 719:         {;SlaveLiofilizadorVer1.c: 720:         Temperatu
      +                          ra0=Temp;
  3262  10CF  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3263  10D0  1703               	bsf	3,6	;RP1=1, select bank3
  3264  10D1  0097               	movwf	(_Temperatura0+3)^(0+384)
  3265  10D2  1303               	bcf	3,6	;RP1=0, select bank1
  3266  10D3  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3267  10D4  1703               	bsf	3,6	;RP1=1, select bank3
  3268  10D5  0096               	movwf	(_Temperatura0+2)^(0+384)
  3269  10D6  1303               	bcf	3,6	;RP1=0, select bank1
  3270  10D7  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3271  10D8  1703               	bsf	3,6	;RP1=1, select bank3
  3272  10D9  0095               	movwf	(_Temperatura0+1)^(0+384)
  3273  10DA  1303               	bcf	3,6	;RP1=0, select bank1
  3274  10DB  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3275  10DC  1703               	bsf	3,6	;RP1=1, select bank3
  3276  10DD  0094               	movwf	_Temperatura0^(0+384)
  3277                           
  3278                           ;SlaveLiofilizadorVer1.c: 721:         }
  3279  10DE  0008               	return
  3280  10DF                     l7046:	
  3281                           
  3282                           ;SlaveLiofilizadorVer1.c: 723:         {;SlaveLiofilizadorVer1.c: 724:         Temperatu
      +                          ra1=Temp;
  3283  10DF  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3284  10E0  1703               	bsf	3,6	;RP1=1, select bank3
  3285  10E1  0093               	movwf	(_Temperatura1+3)^(0+384)
  3286  10E2  1303               	bcf	3,6	;RP1=0, select bank1
  3287  10E3  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3288  10E4  1703               	bsf	3,6	;RP1=1, select bank3
  3289  10E5  0092               	movwf	(_Temperatura1+2)^(0+384)
  3290  10E6  1303               	bcf	3,6	;RP1=0, select bank1
  3291  10E7  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3292  10E8  1703               	bsf	3,6	;RP1=1, select bank3
  3293  10E9  0091               	movwf	(_Temperatura1+1)^(0+384)
  3294  10EA  1303               	bcf	3,6	;RP1=0, select bank1
  3295  10EB  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3296  10EC  1703               	bsf	3,6	;RP1=1, select bank3
  3297  10ED  0090               	movwf	_Temperatura1^(0+384)
  3298  10EE  0008               	return
  3299  10EF                     __end_of_mediatemperaturaNTC:	
  3300  10EF                     __ptext70:	
  3301 ;; *************** function _Rele0Ligado *****************
  3302 ;; Defined at:
  3303 ;;		line 937 in file "SlaveLiofilizadorVer1.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      void 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0
  3312 ;; Tracked objects:
  3313 ;;		On entry : 100/300
  3314 ;;		On exit  : 200/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3317 ;;      Params:         0       0       0       0       0
  3318 ;;      Locals:         0       0       0       0       0
  3319 ;;      Temps:          0       0       0       0       0
  3320 ;;      Totals:         0       0       0       0       0
  3321 ;;Total ram usage:        0 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    1
  3324 ;; This function calls:
  3325 ;;		Nothing
  3326 ;; This function is called by:
  3327 ;;		_mediatemperaturaNTC
  3328 ;;		_Auto_Relay0
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           
  3333                           ;psect for function _Rele0Ligado
  3334  10EF                     _Rele0Ligado:	
  3335  10EF                     l6868:	
  3336                           ;incstack = 0
  3337                           ; Regs used in _Rele0Ligado: [wreg+status,2+status,0]
  3338                           
  3339                           
  3340                           ;SlaveLiofilizadorVer1.c: 940:         if(TempoCNT_0==0)
  3341  10EF  1303               	bcf	3,6	;RP1=0, select bank1
  3342  10F0  086F               	movf	_TempoCNT_0^(0+128),w	;volatile
  3343  10F1  1D03               	btfss	3,2
  3344  10F2  0008               	return
  3345                           
  3346                           ;SlaveLiofilizadorVer1.c: 941:             {;SlaveLiofilizadorVer1.c: 944:             i
      +                          f(PORTCbits.RC0==0)
  3347  10F3  1283               	bcf	3,5	;RP0=0, select bank0
  3348  10F4  1807               	btfsc	7,0	;volatile
  3349  10F5  28FE               	goto	l6876
  3350                           
  3351                           ;SlaveLiofilizadorVer1.c: 945:               {;SlaveLiofilizadorVer1.c: 946:            
      +                             TempoCNT_0=TempoON_0;
  3352  10F6  1683               	bsf	3,5	;RP0=1, select bank3
  3353  10F7  1703               	bsf	3,6	;RP1=1, select bank3
  3354  10F8  083A               	movf	_TempoON_0^(0+384),w
  3355  10F9  1303               	bcf	3,6	;RP1=0, select bank1
  3356  10FA  00EF               	movwf	_TempoCNT_0^(0+128)	;volatile
  3357                           
  3358                           ;SlaveLiofilizadorVer1.c: 947:               PORTCbits.RC0=1;
  3359  10FB  1283               	bcf	3,5	;RP0=0, select bank0
  3360  10FC  1407               	bsf	7,0	;volatile
  3361                           
  3362                           ;SlaveLiofilizadorVer1.c: 948:               }
  3363  10FD  0008               	return
  3364  10FE                     l6876:	
  3365                           
  3366                           ;SlaveLiofilizadorVer1.c: 950:               {;SlaveLiofilizadorVer1.c: 951:            
      +                             TempoCNT_0=TempoOFF_0;
  3367  10FE  1683               	bsf	3,5	;RP0=1, select bank3
  3368  10FF  1703               	bsf	3,6	;RP1=1, select bank3
  3369  1100  0839               	movf	_TempoOFF_0^(0+384),w
  3370  1101  1303               	bcf	3,6	;RP1=0, select bank1
  3371  1102  00EF               	movwf	_TempoCNT_0^(0+128)	;volatile
  3372                           
  3373                           ;SlaveLiofilizadorVer1.c: 952:               PORTCbits.RC0=0;
  3374  1103  1283               	bcf	3,5	;RP0=0, select bank0
  3375  1104  1007               	bcf	7,0	;volatile
  3376  1105  0008               	return
  3377  1106                     __end_of_Rele0Ligado:	
  3378  1106                     __ptext64:	
  3379 ;; *************** function _Rele1Ligado *****************
  3380 ;; Defined at:
  3381 ;;		line 958 in file "SlaveLiofilizadorVer1.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;		None
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;		None
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/300
  3392 ;;		On exit  : 200/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3395 ;;      Params:         0       0       0       0       0
  3396 ;;      Locals:         0       0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0
  3398 ;;      Totals:         0       0       0       0       0
  3399 ;;Total ram usage:        0 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    1
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_mediatemperaturaNTC
  3406 ;;		_Auto_Relay1
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           
  3411                           ;psect for function _Rele1Ligado
  3412  1106                     _Rele1Ligado:	
  3413  1106                     l6880:	
  3414                           ;incstack = 0
  3415                           ; Regs used in _Rele1Ligado: [wreg+status,2+status,0]
  3416                           
  3417                           
  3418                           ;SlaveLiofilizadorVer1.c: 961:         if(TempoCNT_1==0)
  3419  1106  1683               	bsf	3,5	;RP0=1, select bank1
  3420  1107  1303               	bcf	3,6	;RP1=0, select bank1
  3421  1108  086E               	movf	_TempoCNT_1^(0+128),w	;volatile
  3422  1109  1D03               	btfss	3,2
  3423  110A  0008               	return
  3424                           
  3425                           ;SlaveLiofilizadorVer1.c: 962:             {;SlaveLiofilizadorVer1.c: 965:             i
      +                          f(PORTCbits.RC1==0)
  3426  110B  1283               	bcf	3,5	;RP0=0, select bank0
  3427  110C  1887               	btfsc	7,1	;volatile
  3428  110D  2916               	goto	l6888
  3429                           
  3430                           ;SlaveLiofilizadorVer1.c: 966:               {;SlaveLiofilizadorVer1.c: 967:            
      +                             TempoCNT_1=TempoON_1;
  3431  110E  1683               	bsf	3,5	;RP0=1, select bank3
  3432  110F  1703               	bsf	3,6	;RP1=1, select bank3
  3433  1110  0837               	movf	_TempoON_1^(0+384),w
  3434  1111  1303               	bcf	3,6	;RP1=0, select bank1
  3435  1112  00EE               	movwf	_TempoCNT_1^(0+128)	;volatile
  3436                           
  3437                           ;SlaveLiofilizadorVer1.c: 968:               PORTCbits.RC1=1;
  3438  1113  1283               	bcf	3,5	;RP0=0, select bank0
  3439  1114  1487               	bsf	7,1	;volatile
  3440                           
  3441                           ;SlaveLiofilizadorVer1.c: 969:               }
  3442  1115  0008               	return
  3443  1116                     l6888:	
  3444                           
  3445                           ;SlaveLiofilizadorVer1.c: 971:               {;SlaveLiofilizadorVer1.c: 972:            
      +                             TempoCNT_1=TempoOFF_1;
  3446  1116  1683               	bsf	3,5	;RP0=1, select bank3
  3447  1117  1703               	bsf	3,6	;RP1=1, select bank3
  3448  1118  0836               	movf	_TempoOFF_1^(0+384),w
  3449  1119  1303               	bcf	3,6	;RP1=0, select bank1
  3450  111A  00EE               	movwf	_TempoCNT_1^(0+128)	;volatile
  3451                           
  3452                           ;SlaveLiofilizadorVer1.c: 973:               PORTCbits.RC1=0;
  3453  111B  1283               	bcf	3,5	;RP0=0, select bank0
  3454  111C  1087               	bcf	7,1	;volatile
  3455  111D  0008               	return
  3456  111E                     __end_of_Rele1Ligado:	
  3457  111E                     __ptext9:	
  3458 ;; *************** function _eval_poly *****************
  3459 ;; Defined at:
  3460 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\evalpoly.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  x               4    0[BANK1 ] PTR int 
  3463 ;;  d               1    4[BANK1 ] PTR const 
  3464 ;;		 -> log@coeff(36), 
  3465 ;;  n               2    5[BANK1 ] int 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  res             4   12[BANK1 ] int 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  4    0[BANK1 ] int 
  3470 ;; Registers used:
  3471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 300/100
  3474 ;;		On exit  : 300/100
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3477 ;;      Params:         0       0       7       0       0
  3478 ;;      Locals:         0       0       4       0       0
  3479 ;;      Temps:          0       0       5       0       0
  3480 ;;      Totals:         0       0      16       0       0
  3481 ;;Total ram usage:       16 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    3
  3484 ;; This function calls:
  3485 ;;		___fladd
  3486 ;;		___flmul
  3487 ;; This function is called by:
  3488 ;;		_log
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           
  3493                           ;psect for function _eval_poly
  3494  111E                     _eval_poly:	
  3495                           
  3496                           ;incstack = 0
  3497                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3498  111E  0825               	movf	eval_poly@n^(0+128),w
  3499  111F  00A7               	movwf	??_eval_poly^(0+128)
  3500  1120  3001               	movlw	1
  3501  1121  1003               	clrc
  3502  1122                     L2:	
  3503  1122  0DA7               	rlf	??_eval_poly^(0+128),f
  3504  1123  3EFF               	addlw	-1
  3505  1124  1003               	clrc
  3506  1125  1D03               	skipz
  3507  1126  2922               	goto	L2
  3508  1127  0D27               	rlf	??_eval_poly^(0+128),w
  3509  1128  0724               	addwf	eval_poly@d^(0+128),w
  3510  1129  0084               	movwf	4
  3511  112A  160A  158A  200A  160A  118A  	fcall	stringdir
  3512  112F  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3513  1130  160A  158A  200A  160A  118A  	fcall	stringdir
  3514  1135  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3515  1136  160A  158A  200A  160A  118A  	fcall	stringdir
  3516  113B  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3517  113C  160A  158A  200A  160A  118A  	fcall	stringdir
  3518  1141  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3519  1142  082B               	movf	(??_eval_poly+4)^(0+128),w
  3520  1143  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3521  1144  082A               	movf	(??_eval_poly+3)^(0+128),w
  3522  1145  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3523  1146  0829               	movf	(??_eval_poly+2)^(0+128),w
  3524  1147  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3525  1148  0828               	movf	(??_eval_poly+1)^(0+128),w
  3526  1149                     L4:	
  3527  1149  00AC               	movwf	eval_poly@res^(0+128)
  3528  114A  0825               	movf	eval_poly@n^(0+128),w
  3529  114B  0426               	iorwf	(eval_poly@n+1)^(0+128),w
  3530  114C  1903               	btfsc	3,2
  3531  114D  29BF               	goto	l6304
  3532  114E  30FF               	movlw	-1
  3533  114F  07A5               	addwf	eval_poly@n^(0+128),f
  3534  1150  1C03               	skipc
  3535  1151  03A6               	decf	(eval_poly@n+1)^(0+128),f
  3536  1152  0825               	movf	eval_poly@n^(0+128),w
  3537  1153  00A7               	movwf	??_eval_poly^(0+128)
  3538  1154  3001               	movlw	1
  3539  1155  1003               	clrc
  3540  1156                     L3:	
  3541  1156  0DA7               	rlf	??_eval_poly^(0+128),f
  3542  1157  3EFF               	addlw	-1
  3543  1158  1003               	clrc
  3544  1159  1D03               	skipz
  3545  115A  2956               	goto	L3
  3546  115B  0D27               	rlf	??_eval_poly^(0+128),w
  3547  115C  0724               	addwf	eval_poly@d^(0+128),w
  3548  115D  0084               	movwf	4
  3549  115E  160A  158A  200A  160A  118A  	fcall	stringdir
  3550  1163  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3551  1164  160A  158A  200A  160A  118A  	fcall	stringdir
  3552  1169  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3553  116A  160A  158A  200A  160A  118A  	fcall	stringdir
  3554  116F  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3555  1170  160A  158A  200A  160A  118A  	fcall	stringdir
  3556  1175  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3557  1176  082B               	movf	(??_eval_poly+4)^(0+128),w
  3558  1177  1283               	bcf	3,5	;RP0=0, select bank0
  3559  1178  00BC               	movwf	___fladd@b+3
  3560  1179  1683               	bsf	3,5	;RP0=1, select bank1
  3561  117A  082A               	movf	(??_eval_poly+3)^(0+128),w
  3562  117B  1283               	bcf	3,5	;RP0=0, select bank0
  3563  117C  00BB               	movwf	___fladd@b+2
  3564  117D  1683               	bsf	3,5	;RP0=1, select bank1
  3565  117E  0829               	movf	(??_eval_poly+2)^(0+128),w
  3566  117F  1283               	bcf	3,5	;RP0=0, select bank0
  3567  1180  00BA               	movwf	___fladd@b+1
  3568  1181  1683               	bsf	3,5	;RP0=1, select bank1
  3569  1182  0828               	movf	(??_eval_poly+1)^(0+128),w
  3570  1183  1283               	bcf	3,5	;RP0=0, select bank0
  3571  1184  00B9               	movwf	___fladd@b
  3572  1185  1683               	bsf	3,5	;RP0=1, select bank1
  3573  1186  082F               	movf	(eval_poly@res+3)^(0+128),w
  3574  1187  1283               	bcf	3,5	;RP0=0, select bank0
  3575  1188  00D8               	movwf	___flmul@b+3
  3576  1189  1683               	bsf	3,5	;RP0=1, select bank1
  3577  118A  082E               	movf	(eval_poly@res+2)^(0+128),w
  3578  118B  1283               	bcf	3,5	;RP0=0, select bank0
  3579  118C  00D7               	movwf	___flmul@b+2
  3580  118D  1683               	bsf	3,5	;RP0=1, select bank1
  3581  118E  082D               	movf	(eval_poly@res+1)^(0+128),w
  3582  118F  1283               	bcf	3,5	;RP0=0, select bank0
  3583  1190  00D6               	movwf	___flmul@b+1
  3584  1191  1683               	bsf	3,5	;RP0=1, select bank1
  3585  1192  082C               	movf	eval_poly@res^(0+128),w
  3586  1193  1283               	bcf	3,5	;RP0=0, select bank0
  3587  1194  00D5               	movwf	___flmul@b
  3588  1195  1683               	bsf	3,5	;RP0=1, select bank1
  3589  1196  0823               	movf	(eval_poly@x+3)^(0+128),w
  3590  1197  1283               	bcf	3,5	;RP0=0, select bank0
  3591  1198  00DC               	movwf	___flmul@a+3
  3592  1199  1683               	bsf	3,5	;RP0=1, select bank1
  3593  119A  0822               	movf	(eval_poly@x+2)^(0+128),w
  3594  119B  1283               	bcf	3,5	;RP0=0, select bank0
  3595  119C  00DB               	movwf	___flmul@a+2
  3596  119D  1683               	bsf	3,5	;RP0=1, select bank1
  3597  119E  0821               	movf	(eval_poly@x+1)^(0+128),w
  3598  119F  1283               	bcf	3,5	;RP0=0, select bank0
  3599  11A0  00DA               	movwf	___flmul@a+1
  3600  11A1  1683               	bsf	3,5	;RP0=1, select bank1
  3601  11A2  0820               	movf	eval_poly@x^(0+128),w
  3602  11A3  1283               	bcf	3,5	;RP0=0, select bank0
  3603  11A4  00D9               	movwf	___flmul@a
  3604  11A5  120A  118A  20EB  160A  118A  	fcall	___flmul
  3605  11AA  278F  160A  118A   	fcall	PL28	;call to abstracted procedure
  3606  11AD  21C8  160A  118A   	fcall	___fladd
  3607  11B0  083C               	movf	?___fladd+3,w
  3608  11B1  1683               	bsf	3,5	;RP0=1, select bank1
  3609  11B2  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3610  11B3  1283               	bcf	3,5	;RP0=0, select bank0
  3611  11B4  083B               	movf	?___fladd+2,w
  3612  11B5  1683               	bsf	3,5	;RP0=1, select bank1
  3613  11B6  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3614  11B7  1283               	bcf	3,5	;RP0=0, select bank0
  3615  11B8  083A               	movf	?___fladd+1,w
  3616  11B9  1683               	bsf	3,5	;RP0=1, select bank1
  3617  11BA  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3618  11BB  1283               	bcf	3,5	;RP0=0, select bank0
  3619  11BC  0839               	movf	?___fladd,w
  3620  11BD  1683               	bsf	3,5	;RP0=1, select bank1
  3621  11BE  2949               	goto	L4
  3622  11BF                     l6304:	
  3623  11BF  082F               	movf	(eval_poly@res+3)^(0+128),w
  3624  11C0  00A3               	movwf	(?_eval_poly+3)^(0+128)
  3625  11C1  082E               	movf	(eval_poly@res+2)^(0+128),w
  3626  11C2  00A2               	movwf	(?_eval_poly+2)^(0+128)
  3627  11C3  082D               	movf	(eval_poly@res+1)^(0+128),w
  3628  11C4  00A1               	movwf	(?_eval_poly+1)^(0+128)
  3629  11C5  082C               	movf	eval_poly@res^(0+128),w
  3630  11C6  00A0               	movwf	?_eval_poly^(0+128)
  3631  11C7  0008               	return
  3632  11C8                     __end_of_eval_poly:	
  3633  11C8                     __ptext68:	
  3634 ;; *************** function ___fladd *****************
  3635 ;; Defined at:
  3636 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  b               4   25[BANK0 ] void 
  3639 ;;  a               4   29[BANK0 ] void 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  grs             1   44[BANK0 ] unsigned char 
  3642 ;;  bexp            1   43[BANK0 ] unsigned char 
  3643 ;;  aexp            1   42[BANK0 ] unsigned char 
  3644 ;;  signs           1   41[BANK0 ] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  4   25[BANK0 ] unsigned char 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, status,0, btemp+1
  3649 ;; Tracked objects:
  3650 ;;		On entry : 300/0
  3651 ;;		On exit  : 300/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3654 ;;      Params:         0       8       0       0       0
  3655 ;;      Locals:         0       4       0       0       0
  3656 ;;      Temps:          0       8       0       0       0
  3657 ;;      Totals:         0      20       0       0       0
  3658 ;;Total ram usage:       20 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    1
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_mediatemperaturaNTC
  3665 ;;		_ADC_Read_NTC
  3666 ;;		___flsub
  3667 ;;		_log
  3668 ;;		_eval_poly
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           
  3673                           ;psect for function ___fladd
  3674  11C8                     ___fladd:	
  3675                           
  3676                           ;incstack = 0
  3677                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3678  11C8  083C               	movf	___fladd@b+3,w
  3679  11C9  00C9               	movwf	___fladd@signs
  3680  11CA  3080               	movlw	128
  3681  11CB  05C9               	andwf	___fladd@signs,f
  3682  11CC  1003               	clrc
  3683  11CD  0D3C               	rlf	___fladd@b+3,w
  3684  11CE  00CB               	movwf	___fladd@bexp
  3685  11CF  1BBB               	btfsc	___fladd@b+2,7
  3686  11D0  144B               	bsf	___fladd@bexp,0
  3687  11D1  084B               	movf	___fladd@bexp,w
  3688  11D2  1903               	btfsc	3,2
  3689  11D3  29DC               	goto	l1283
  3690  11D4  0F4B               	incfsz	___fladd@bexp,w
  3691  11D5  29DA               	goto	l1284
  3692  11D6  01B9               	clrf	___fladd@b
  3693  11D7  01BA               	clrf	___fladd@b+1
  3694  11D8  01BB               	clrf	___fladd@b+2
  3695  11D9  01BC               	clrf	___fladd@b+3
  3696  11DA                     l1284:	
  3697  11DA  17BB               	bsf	___fladd@b+2,7
  3698  11DB  29DF               	goto	L19
  3699  11DC                     l1283:	
  3700  11DC  01B9               	clrf	___fladd@b
  3701  11DD  01BA               	clrf	___fladd@b+1
  3702  11DE  01BB               	clrf	___fladd@b+2
  3703  11DF                     L19:	
  3704  11DF  01BC               	clrf	___fladd@b+3
  3705  11E0  0840               	movf	___fladd@a+3,w
  3706  11E1  00CA               	movwf	___fladd@aexp
  3707  11E2  3080               	movlw	128
  3708  11E3  05CA               	andwf	___fladd@aexp,f
  3709  11E4  084A               	movf	___fladd@aexp,w
  3710  11E5  0649               	xorwf	___fladd@signs,w
  3711  11E6  1D03               	btfss	3,2
  3712  11E7  1749               	bsf	___fladd@signs,6
  3713  11E8  1003               	clrc
  3714  11E9  0D40               	rlf	___fladd@a+3,w
  3715  11EA  00CA               	movwf	___fladd@aexp
  3716  11EB  1BBF               	btfsc	___fladd@a+2,7
  3717  11EC  144A               	bsf	___fladd@aexp,0
  3718  11ED  084A               	movf	___fladd@aexp,w
  3719  11EE  1903               	btfsc	3,2
  3720  11EF  29F8               	goto	l1288
  3721  11F0  0F4A               	incfsz	___fladd@aexp,w
  3722  11F1  29F6               	goto	l1289
  3723  11F2  01BD               	clrf	___fladd@a
  3724  11F3  01BE               	clrf	___fladd@a+1
  3725  11F4  01BF               	clrf	___fladd@a+2
  3726  11F5  01C0               	clrf	___fladd@a+3
  3727  11F6                     l1289:	
  3728  11F6  17BF               	bsf	___fladd@a+2,7
  3729  11F7  29FB               	goto	L20
  3730  11F8                     l1288:	
  3731  11F8  01BD               	clrf	___fladd@a
  3732  11F9  01BE               	clrf	___fladd@a+1
  3733  11FA  01BF               	clrf	___fladd@a+2
  3734  11FB                     L20:	
  3735  11FB  01C0               	clrf	___fladd@a+3
  3736  11FC  084B               	movf	___fladd@bexp,w
  3737  11FD  024A               	subwf	___fladd@aexp,w
  3738  11FE  1803               	skipnc
  3739  11FF  2A22               	goto	l3916
  3740  1200  1F49               	btfss	___fladd@signs,6
  3741  1201  2A04               	goto	l3886
  3742  1202  3080               	movlw	128
  3743  1203  06C9               	xorwf	___fladd@signs,f
  3744  1204                     l3886:	
  3745  1204  084B               	movf	___fladd@bexp,w
  3746  1205  00CC               	movwf	___fladd@grs
  3747  1206  084A               	movf	___fladd@aexp,w
  3748  1207  00CB               	movwf	___fladd@bexp
  3749  1208  084C               	movf	___fladd@grs,w
  3750  1209  00CA               	movwf	___fladd@aexp
  3751  120A  0839               	movf	___fladd@b,w
  3752  120B  00CC               	movwf	___fladd@grs
  3753  120C  083D               	movf	___fladd@a,w
  3754  120D  00B9               	movwf	___fladd@b
  3755  120E  084C               	movf	___fladd@grs,w
  3756  120F  00BD               	movwf	___fladd@a
  3757  1210  083A               	movf	___fladd@b+1,w
  3758  1211  00CC               	movwf	___fladd@grs
  3759  1212  083E               	movf	___fladd@a+1,w
  3760  1213  00BA               	movwf	___fladd@b+1
  3761  1214  084C               	movf	___fladd@grs,w
  3762  1215  00BE               	movwf	___fladd@a+1
  3763  1216  083B               	movf	___fladd@b+2,w
  3764  1217  00CC               	movwf	___fladd@grs
  3765  1218  083F               	movf	___fladd@a+2,w
  3766  1219  00BB               	movwf	___fladd@b+2
  3767  121A  084C               	movf	___fladd@grs,w
  3768  121B  00BF               	movwf	___fladd@a+2
  3769  121C  083C               	movf	___fladd@b+3,w
  3770  121D  00CC               	movwf	___fladd@grs
  3771  121E  0840               	movf	___fladd@a+3,w
  3772  121F  00BC               	movwf	___fladd@b+3
  3773  1220  084C               	movf	___fladd@grs,w
  3774  1221  00C0               	movwf	___fladd@a+3
  3775  1222                     l3916:	
  3776  1222  01CC               	clrf	___fladd@grs
  3777  1223  084A               	movf	___fladd@aexp,w
  3778  1224  00C1               	movwf	??___fladd
  3779  1225  01C2               	clrf	??___fladd+1
  3780  1226  0842               	movf	??___fladd+1,w
  3781  1227  00C4               	movwf	??___fladd+3
  3782  1228  084B               	movf	___fladd@bexp,w
  3783  1229  0241               	subwf	??___fladd,w
  3784  122A  00C3               	movwf	??___fladd+2
  3785  122B  1C03               	skipc
  3786  122C  03C4               	decf	??___fladd+3,f
  3787  122D  0844               	movf	??___fladd+3,w
  3788  122E  3A80               	xorlw	128
  3789  122F  00FF               	movwf	127
  3790  1230  3080               	movlw	128
  3791  1231  027F               	subwf	127,w
  3792  1232  1D03               	skipz
  3793  1233  2A36               	goto	u2735
  3794  1234  301A               	movlw	26
  3795  1235  0243               	subwf	??___fladd+2,w
  3796  1236                     u2735:	
  3797  1236  1C03               	skipc
  3798  1237  2A57               	goto	l3932
  3799  1238  1283               	bcf	3,5	;RP0=0, select bank0
  3800  1239  1303               	bcf	3,6	;RP1=0, select bank0
  3801  123A  083C               	movf	___fladd@b+3,w
  3802  123B  043B               	iorwf	___fladd@b+2,w
  3803  123C  043A               	iorwf	___fladd@b+1,w
  3804  123D  0439               	iorwf	___fladd@b,w
  3805  123E  1903               	btfsc	3,2
  3806  123F  2A42               	goto	u2740
  3807  1240  3001               	movlw	1
  3808  1241  2A43               	goto	u2750
  3809  1242                     u2740:	
  3810  1242  3000               	movlw	0
  3811  1243                     u2750:	
  3812  1243  00CC               	movwf	___fladd@grs
  3813  1244  01B9               	clrf	___fladd@b
  3814  1245  01BA               	clrf	___fladd@b+1
  3815  1246  01BB               	clrf	___fladd@b+2
  3816  1247  01BC               	clrf	___fladd@b+3
  3817  1248  084A               	movf	___fladd@aexp,w
  3818  1249  00CB               	movwf	___fladd@bexp
  3819  124A  2A5D               	goto	l1294
  3820  124B                     l1296:	
  3821  124B  1C4C               	btfss	___fladd@grs,0
  3822  124C  2A52               	goto	l1297
  3823  124D  1003               	clrc
  3824  124E  0C4C               	rrf	___fladd@grs,w
  3825  124F  3801               	iorlw	1
  3826  1250  00CC               	movwf	___fladd@grs
  3827  1251  2A54               	goto	l1298
  3828  1252                     l1297:	
  3829  1252  1003               	clrc
  3830  1253  0CCC               	rrf	___fladd@grs,f
  3831  1254                     l1298:	
  3832  1254  27B3  160A  118A   	fcall	PL50	;call to abstracted procedure
  3833  1257                     l3932:	
  3834  1257  1283               	bcf	3,5	;RP0=0, select bank0
  3835  1258  1303               	bcf	3,6	;RP1=0, select bank0
  3836  1259  084A               	movf	___fladd@aexp,w
  3837  125A  024B               	subwf	___fladd@bexp,w
  3838  125B  1C03               	skipc
  3839  125C  2A4B               	goto	l1296
  3840  125D                     l1294:	
  3841  125D  1B49               	btfsc	___fladd@signs,6
  3842  125E  2A86               	goto	l3952
  3843  125F  084B               	movf	___fladd@bexp,w
  3844  1260  1D03               	btfss	3,2
  3845  1261  2A63               	goto	l3938
  3846  1262  2FCF               	ljmp	PL68	;call to abstracted procedure
  3847  1263                     l3938:	
  3848  1263  083D               	movf	___fladd@a,w
  3849  1264  07B9               	addwf	___fladd@b,f
  3850  1265  083E               	movf	___fladd@a+1,w
  3851  1266  1103               	clrz
  3852  1267  1803               	skipnc
  3853  1268  3E01               	addlw	1
  3854  1269  1D03               	btfss	3,2
  3855  126A  07BA               	addwf	___fladd@b+1,f
  3856  126B  083F               	movf	___fladd@a+2,w
  3857  126C  1103               	clrz
  3858  126D  1803               	skipnc
  3859  126E  3E01               	addlw	1
  3860  126F  1D03               	btfss	3,2
  3861  1270  07BB               	addwf	___fladd@b+2,f
  3862  1271  0840               	movf	___fladd@a+3,w
  3863  1272  1103               	clrz
  3864  1273  1803               	skipnc
  3865  1274  3E01               	addlw	1
  3866  1275  1D03               	btfss	3,2
  3867  1276  07BC               	addwf	___fladd@b+3,f
  3868  1277  1C3C               	btfss	___fladd@b+3,0
  3869  1278  2B02               	goto	l3982
  3870  1279  1C4C               	btfss	___fladd@grs,0
  3871  127A  2A80               	goto	l1305
  3872  127B  1003               	clrc
  3873  127C  0C4C               	rrf	___fladd@grs,w
  3874  127D  3801               	iorlw	1
  3875  127E  00CC               	movwf	___fladd@grs
  3876  127F  2A82               	goto	l1306
  3877  1280                     l1305:	
  3878  1280  1003               	clrc
  3879  1281  0CCC               	rrf	___fladd@grs,f
  3880  1282                     l1306:	
  3881  1282  27B3  160A  118A   	fcall	PL50	;call to abstracted procedure
  3882  1285  2B02               	goto	l3982
  3883  1286                     l3952:	
  3884  1286  083C               	movf	___fladd@b+3,w
  3885  1287  3A80               	xorlw	128
  3886  1288  00FF               	movwf	127
  3887  1289  0840               	movf	___fladd@a+3,w
  3888  128A  3A80               	xorlw	128
  3889  128B  027F               	subwf	127,w
  3890  128C  1D03               	skipz
  3891  128D  2A98               	goto	u2853
  3892  128E  083F               	movf	___fladd@a+2,w
  3893  128F  023B               	subwf	___fladd@b+2,w
  3894  1290  1D03               	skipz
  3895  1291  2A98               	goto	u2853
  3896  1292  083E               	movf	___fladd@a+1,w
  3897  1293  023A               	subwf	___fladd@b+1,w
  3898  1294  1D03               	skipz
  3899  1295  2A98               	goto	u2853
  3900  1296  083D               	movf	___fladd@a,w
  3901  1297  0239               	subwf	___fladd@b,w
  3902  1298                     u2853:	
  3903  1298  1803               	skipnc
  3904  1299  2AD8               	goto	l3962
  3905  129A  30FF               	movlw	255
  3906  129B  00C1               	movwf	??___fladd
  3907  129C  00C2               	movwf	??___fladd+1
  3908  129D  00C3               	movwf	??___fladd+2
  3909  129E  00C4               	movwf	??___fladd+3
  3910  129F  083D               	movf	___fladd@a,w
  3911  12A0  00C5               	movwf	??___fladd+4
  3912  12A1  083E               	movf	___fladd@a+1,w
  3913  12A2  00C6               	movwf	??___fladd+5
  3914  12A3  083F               	movf	___fladd@a+2,w
  3915  12A4  00C7               	movwf	??___fladd+6
  3916  12A5  0840               	movf	___fladd@a+3,w
  3917  12A6  00C8               	movwf	??___fladd+7
  3918  12A7  0839               	movf	___fladd@b,w
  3919  12A8  02C5               	subwf	??___fladd+4,f
  3920  12A9  083A               	movf	___fladd@b+1,w
  3921  12AA  1C03               	skipc
  3922  12AB  0F3A               	incfsz	___fladd@b+1,w
  3923  12AC  02C6               	subwf	??___fladd+5,f
  3924  12AD  083B               	movf	___fladd@b+2,w
  3925  12AE  1C03               	skipc
  3926  12AF  0F3B               	incfsz	___fladd@b+2,w
  3927  12B0  02C7               	subwf	??___fladd+6,f
  3928  12B1  083C               	movf	___fladd@b+3,w
  3929  12B2  1C03               	skipc
  3930  12B3  0F3C               	incfsz	___fladd@b+3,w
  3931  12B4  02C8               	subwf	??___fladd+7,f
  3932  12B5  0845               	movf	??___fladd+4,w
  3933  12B6  07C1               	addwf	??___fladd,f
  3934  12B7  0846               	movf	??___fladd+5,w
  3935  12B8  1803               	skipnc
  3936  12B9  0F46               	incfsz	??___fladd+5,w
  3937  12BA  07C2               	addwf	??___fladd+1,f
  3938  12BB  0847               	movf	??___fladd+6,w
  3939  12BC  1803               	skipnc
  3940  12BD  0F47               	incfsz	??___fladd+6,w
  3941  12BE  07C3               	addwf	??___fladd+2,f
  3942  12BF  0848               	movf	??___fladd+7,w
  3943  12C0  1803               	skipnc
  3944  12C1  0A48               	incf	??___fladd+7,w
  3945  12C2  07C4               	addwf	??___fladd+3,f
  3946  12C3  0844               	movf	??___fladd+3,w
  3947  12C4  00BC               	movwf	___fladd@b+3
  3948  12C5  0843               	movf	??___fladd+2,w
  3949  12C6  00BB               	movwf	___fladd@b+2
  3950  12C7  0842               	movf	??___fladd+1,w
  3951  12C8  00BA               	movwf	___fladd@b+1
  3952  12C9  0841               	movf	??___fladd,w
  3953  12CA  00B9               	movwf	___fladd@b
  3954  12CB  3080               	movlw	128
  3955  12CC  06C9               	xorwf	___fladd@signs,f
  3956  12CD  09CC               	comf	___fladd@grs,f
  3957  12CE  0FCC               	incfsz	___fladd@grs,f
  3958  12CF  2AE6               	goto	l1311
  3959  12D0  0AB9               	incf	___fladd@b,f
  3960  12D1  1903               	skipnz
  3961  12D2  0ABA               	incf	___fladd@b+1,f
  3962  12D3  1903               	skipnz
  3963  12D4  0ABB               	incf	___fladd@b+2,f
  3964  12D5  1903               	skipnz
  3965  12D6  0ABC               	incf	___fladd@b+3,f
  3966  12D7  2AE6               	goto	l1311
  3967  12D8                     l3962:	
  3968  12D8  083D               	movf	___fladd@a,w
  3969  12D9  02B9               	subwf	___fladd@b,f
  3970  12DA  083E               	movf	___fladd@a+1,w
  3971  12DB  1C03               	skipc
  3972  12DC  0F3E               	incfsz	___fladd@a+1,w
  3973  12DD  02BA               	subwf	___fladd@b+1,f
  3974  12DE  083F               	movf	___fladd@a+2,w
  3975  12DF  1C03               	skipc
  3976  12E0  0F3F               	incfsz	___fladd@a+2,w
  3977  12E1  02BB               	subwf	___fladd@b+2,f
  3978  12E2  0840               	movf	___fladd@a+3,w
  3979  12E3  1C03               	skipc
  3980  12E4  0F40               	incfsz	___fladd@a+3,w
  3981  12E5  02BC               	subwf	___fladd@b+3,f
  3982  12E6                     l1311:	
  3983  12E6  083C               	movf	___fladd@b+3,w
  3984  12E7  043B               	iorwf	___fladd@b+2,w
  3985  12E8  043A               	iorwf	___fladd@b+1,w
  3986  12E9  0439               	iorwf	___fladd@b,w
  3987  12EA  1D03               	skipz
  3988  12EB  2B00               	goto	l3980
  3989  12EC  084C               	movf	___fladd@grs,w
  3990  12ED  1D03               	btfss	3,2
  3991  12EE  2B00               	goto	l3980
  3992  12EF  2FCF               	ljmp	PL68	;call to abstracted procedure
  3993  12F0                     l3968:	
  3994  12F0  1003               	clrc
  3995  12F1  0DB9               	rlf	___fladd@b,f
  3996  12F2  0DBA               	rlf	___fladd@b+1,f
  3997  12F3  0DBB               	rlf	___fladd@b+2,f
  3998  12F4  0DBC               	rlf	___fladd@b+3,f
  3999  12F5  1BCC               	btfsc	___fladd@grs,7
  4000  12F6  1439               	bsf	___fladd@b,0
  4001  12F7  1C4C               	btfss	___fladd@grs,0
  4002  12F8  2AFB               	goto	l1316
  4003  12F9  1403               	setc
  4004  12FA  2AFC               	goto	L21
  4005  12FB                     l1316:	
  4006  12FB  1003               	clrc
  4007  12FC                     L21:	
  4008  12FC  0DCC               	rlf	___fladd@grs,f
  4009  12FD  084B               	movf	___fladd@bexp,w
  4010  12FE  1D03               	btfss	3,2
  4011  12FF  03CB               	decf	___fladd@bexp,f
  4012  1300                     l3980:	
  4013  1300  1FBB               	btfss	___fladd@b+2,7
  4014  1301  2AF0               	goto	l3968
  4015  1302                     l3982:	
  4016  1302  01CA               	clrf	___fladd@aexp
  4017  1303  1FCC               	btfss	___fladd@grs,7
  4018  1304  2B0D               	goto	l3992
  4019  1305  084C               	movf	___fladd@grs,w
  4020  1306  397F               	andlw	127
  4021  1307  1903               	btfsc	3,2
  4022  1308  1839               	btfsc	___fladd@b,0
  4023  1309  2B0B               	goto	l3988
  4024  130A  2B0D               	goto	l3992
  4025  130B                     l3988:	
  4026  130B  01CA               	clrf	___fladd@aexp
  4027  130C  0ACA               	incf	___fladd@aexp,f
  4028  130D                     l3992:	
  4029  130D  084A               	movf	___fladd@aexp,w
  4030  130E  1903               	btfsc	3,2
  4031  130F  2B20               	goto	l4004
  4032  1310  0AB9               	incf	___fladd@b,f
  4033  1311  1903               	skipnz
  4034  1312  0ABA               	incf	___fladd@b+1,f
  4035  1313  1903               	skipnz
  4036  1314  0ABB               	incf	___fladd@b+2,f
  4037  1315  1903               	skipnz
  4038  1316  0ABC               	incf	___fladd@b+3,f
  4039  1317  1C3C               	btfss	___fladd@b+3,0
  4040  1318  2B20               	goto	l4004
  4041  1319  0D3C               	rlf	___fladd@b+3,w
  4042  131A  0CBC               	rrf	___fladd@b+3,f
  4043  131B  0CBB               	rrf	___fladd@b+2,f
  4044  131C  0CBA               	rrf	___fladd@b+1,f
  4045  131D  0CB9               	rrf	___fladd@b,f
  4046  131E  0F4B               	incfsz	___fladd@bexp,w
  4047  131F  0ACB               	incf	___fladd@bexp,f
  4048  1320                     l4004:	
  4049  1320  0A4B               	incf	___fladd@bexp,w
  4050  1321  1D03               	btfss	3,2
  4051  1322  084B               	movf	___fladd@bexp,w
  4052  1323  1D03               	btfss	3,2
  4053  1324  2B2C               	goto	l4012
  4054  1325  01B9               	clrf	___fladd@b
  4055  1326  01BA               	clrf	___fladd@b+1
  4056  1327  01BB               	clrf	___fladd@b+2
  4057  1328  01BC               	clrf	___fladd@b+3
  4058  1329  084B               	movf	___fladd@bexp,w
  4059  132A  1903               	btfsc	3,2
  4060  132B  01C9               	clrf	___fladd@signs
  4061  132C                     l4012:	
  4062  132C  1C4B               	btfss	___fladd@bexp,0
  4063  132D  2B30               	goto	l1331
  4064  132E  17BB               	bsf	___fladd@b+2,7
  4065  132F  2B31               	goto	l4016
  4066  1330                     l1331:	
  4067  1330  13BB               	bcf	___fladd@b+2,7
  4068  1331                     l4016:	
  4069  1331  1003               	clrc
  4070  1332  0C4B               	rrf	___fladd@bexp,w
  4071  1333  00BC               	movwf	___fladd@b+3
  4072  1334  1BC9               	btfsc	___fladd@signs,7
  4073  1335  17BC               	bsf	___fladd@b+3,7
  4074  1336  0008               	return
  4075  1337                     __end_of___fladd:	
  4076  1337                     __ptext5:	
  4077 ;; *************** function _ADC_Read_NTC *****************
  4078 ;; Defined at:
  4079 ;;		line 56 in file "adc.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  canal           1    wreg     unsigned char 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  canal           1    0[COMMON] unsigned char 
  4084 ;;  temperatura     4   43[BANK1 ] float 
  4085 ;;  resistencia     4   36[BANK1 ] float 
  4086 ;;  calc            4   30[BANK1 ] float 
  4087 ;;  value           2   41[BANK1 ] unsigned int 
  4088 ;;  B               2   34[BANK1 ] int 
  4089 ;;  i               1   40[BANK1 ] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  4   25[BANK1 ] float 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 300/100
  4096 ;;		On exit  : 300/100
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4099 ;;      Params:         0       0       5       0       0
  4100 ;;      Locals:         0       0      17       0       0
  4101 ;;      Temps:          0       0       0       0       0
  4102 ;;      Totals:         0       0      22       0       0
  4103 ;;Total ram usage:       22 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    5
  4106 ;; This function calls:
  4107 ;;		___fladd
  4108 ;;		___fldiv
  4109 ;;		___flmul
  4110 ;;		___flsub
  4111 ;;		___lwdiv
  4112 ;;		___xxtofl
  4113 ;;		_captura
  4114 ;;		_log
  4115 ;; This function is called by:
  4116 ;;		_mediatemperaturaNTC
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           
  4121                           ;psect for function _ADC_Read_NTC
  4122  1337                     _ADC_Read_NTC:	
  4123                           
  4124                           ;adc.c: 57:     int B = 3975;
  4125                           
  4126                           ;incstack = 0
  4127                           ; Regs used in _ADC_Read_NTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4128  1337  3087               	movlw	135
  4129  1338  00C2               	movwf	ADC_Read_NTC@B^(0+128)
  4130  1339  300F               	movlw	15
  4131  133A  00C3               	movwf	(ADC_Read_NTC@B^(0+128)+1)
  4132                           
  4133                           ;adc.c: 58:     float resistencia;;adc.c: 59:     float temperatura;;adc.c: 60:     floa
      +                          t calc;;adc.c: 61:     unsigned int value;;adc.c: 62:     unsigned char i;;adc.c: 64:   
      +                            value=0;
  4134  133B  01C9               	clrf	ADC_Read_NTC@value^(0+128)
  4135  133C  01CA               	clrf	(ADC_Read_NTC@value+1)^(0+128)
  4136                           
  4137                           ;adc.c: 65:     for(i=1;i<=50;i++)
  4138  133D  01C8               	clrf	ADC_Read_NTC@i^(0+128)
  4139  133E  0AC8               	incf	ADC_Read_NTC@i^(0+128),f
  4140  133F                     l6838:	
  4141                           
  4142                           ;adc.c: 66:         value+=captura();
  4143  133F  267E  160A  118A   	fcall	_captura
  4144  1342  0820               	movf	?_captura,w
  4145  1343  1683               	bsf	3,5	;RP0=1, select bank1
  4146  1344  07C9               	addwf	ADC_Read_NTC@value^(0+128),f
  4147  1345  1803               	skipnc
  4148  1346  0ACA               	incf	(ADC_Read_NTC@value+1)^(0+128),f
  4149  1347  1283               	bcf	3,5	;RP0=0, select bank0
  4150  1348  0821               	movf	?_captura+1,w
  4151  1349  1683               	bsf	3,5	;RP0=1, select bank1
  4152  134A  07CA               	addwf	(ADC_Read_NTC@value+1)^(0+128),f
  4153  134B  3033               	movlw	51
  4154  134C  0AC8               	incf	ADC_Read_NTC@i^(0+128),f
  4155  134D  0248               	subwf	ADC_Read_NTC@i^(0+128),w
  4156  134E  1C03               	skipc
  4157  134F  2B3F               	goto	l6838
  4158                           
  4159                           ;adc.c: 67:     value/=(i-1);
  4160  1350  0848               	movf	ADC_Read_NTC@i^(0+128),w
  4161  1351  1283               	bcf	3,5	;RP0=0, select bank0
  4162  1352  00A0               	movwf	___lwdiv@divisor
  4163  1353  30FF               	movlw	255
  4164  1354  01A1               	clrf	___lwdiv@divisor+1
  4165  1355  07A0               	addwf	___lwdiv@divisor,f
  4166  1356  1803               	skipnc
  4167  1357  0AA1               	incf	___lwdiv@divisor+1,f
  4168  1358  07A1               	addwf	___lwdiv@divisor+1,f
  4169  1359  1683               	bsf	3,5	;RP0=1, select bank1
  4170  135A  084A               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  4171  135B  1283               	bcf	3,5	;RP0=0, select bank0
  4172  135C  00A3               	movwf	___lwdiv@dividend+1
  4173  135D  1683               	bsf	3,5	;RP0=1, select bank1
  4174  135E  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4175  135F  1283               	bcf	3,5	;RP0=0, select bank0
  4176  1360  00A2               	movwf	___lwdiv@dividend
  4177  1361  2654  160A  118A   	fcall	___lwdiv
  4178  1364  0821               	movf	?___lwdiv+1,w
  4179  1365  1683               	bsf	3,5	;RP0=1, select bank1
  4180  1366  00CA               	movwf	(ADC_Read_NTC@value+1)^(0+128)
  4181  1367  1283               	bcf	3,5	;RP0=0, select bank0
  4182  1368  0820               	movf	?___lwdiv,w
  4183  1369  1683               	bsf	3,5	;RP0=1, select bank1
  4184  136A  00C9               	movwf	ADC_Read_NTC@value^(0+128)
  4185                           
  4186                           ;adc.c: 68:     resistencia =(1023.0-value);
  4187  136B  2785  160A  118A   	fcall	PL24	;call to abstracted procedure
  4188  136E  24A9  160A  118A   	fcall	___xxtofl
  4189  1371  2798  160A  118A   	fcall	PL32	;call to abstracted procedure
  4190  1374  3044               	movlw	68
  4191  1375  00D4               	movwf	___flsub@b+3
  4192  1376  307F               	movlw	127
  4193  1377  00D3               	movwf	___flsub@b+2
  4194  1378  30C0               	movlw	192
  4195  1379  00D2               	movwf	___flsub@b+1
  4196  137A  01D1               	clrf	___flsub@b
  4197  137B  2638  160A  118A   	fcall	___flsub
  4198  137E  0850               	movf	?___flsub+3,w
  4199  137F  1683               	bsf	3,5	;RP0=1, select bank1
  4200  1380  00C7               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4201  1381  1283               	bcf	3,5	;RP0=0, select bank0
  4202  1382  084F               	movf	?___flsub+2,w
  4203  1383  1683               	bsf	3,5	;RP0=1, select bank1
  4204  1384  00C6               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4205  1385  1283               	bcf	3,5	;RP0=0, select bank0
  4206  1386  084E               	movf	?___flsub+1,w
  4207  1387  1683               	bsf	3,5	;RP0=1, select bank1
  4208  1388  00C5               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4209  1389  1283               	bcf	3,5	;RP0=0, select bank0
  4210  138A  084D               	movf	?___flsub,w
  4211  138B  1683               	bsf	3,5	;RP0=1, select bank1
  4212  138C  00C4               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4213                           
  4214                           ;adc.c: 69:     resistencia*=(10000.0-value);
  4215  138D  3046               	movlw	70
  4216  138E  1283               	bcf	3,5	;RP0=0, select bank0
  4217  138F  00D4               	movwf	___flsub@b+3
  4218  1390  301C               	movlw	28
  4219  1391  00D3               	movwf	___flsub@b+2
  4220  1392  3040               	movlw	64
  4221  1393  00D2               	movwf	___flsub@b+1
  4222  1394  01D1               	clrf	___flsub@b
  4223  1395  1683               	bsf	3,5	;RP0=1, select bank1
  4224  1396  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4225  1397  2785  160A  118A   	fcall	PL24	;call to abstracted procedure
  4226  139A  24A9  160A  118A   	fcall	___xxtofl
  4227  139D  2798  160A  118A   	fcall	PL32	;call to abstracted procedure
  4228  13A0  2638               	fcall	___flsub
  4229  13A1  0850               	movf	?___flsub+3,w
  4230  13A2  00D8               	movwf	___flmul@b+3
  4231  13A3  084F               	movf	?___flsub+2,w
  4232  13A4  00D7               	movwf	___flmul@b+2
  4233  13A5  084E               	movf	?___flsub+1,w
  4234  13A6  00D6               	movwf	___flmul@b+1
  4235  13A7  084D               	movf	?___flsub,w
  4236  13A8  00D5               	movwf	___flmul@b
  4237  13A9  1683               	bsf	3,5	;RP0=1, select bank1
  4238  13AA  0847               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4239  13AB  1283               	bcf	3,5	;RP0=0, select bank0
  4240  13AC  00DC               	movwf	___flmul@a+3
  4241  13AD  1683               	bsf	3,5	;RP0=1, select bank1
  4242  13AE  0846               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4243  13AF  1283               	bcf	3,5	;RP0=0, select bank0
  4244  13B0  00DB               	movwf	___flmul@a+2
  4245  13B1  1683               	bsf	3,5	;RP0=1, select bank1
  4246  13B2  0845               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4247  13B3  1283               	bcf	3,5	;RP0=0, select bank0
  4248  13B4  00DA               	movwf	___flmul@a+1
  4249  13B5  1683               	bsf	3,5	;RP0=1, select bank1
  4250  13B6  0844               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4251  13B7  1283               	bcf	3,5	;RP0=0, select bank0
  4252  13B8  00D9               	movwf	___flmul@a
  4253  13B9  120A  118A  20EB  160A  118A  	fcall	___flmul
  4254  13BE  0858               	movf	?___flmul+3,w
  4255  13BF  1683               	bsf	3,5	;RP0=1, select bank1
  4256  13C0  00C7               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4257  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4258  13C2  0857               	movf	?___flmul+2,w
  4259  13C3  1683               	bsf	3,5	;RP0=1, select bank1
  4260  13C4  00C6               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4261  13C5  1283               	bcf	3,5	;RP0=0, select bank0
  4262  13C6  0856               	movf	?___flmul+1,w
  4263  13C7  1683               	bsf	3,5	;RP0=1, select bank1
  4264  13C8  00C5               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4265  13C9  1283               	bcf	3,5	;RP0=0, select bank0
  4266  13CA  0855               	movf	?___flmul,w
  4267  13CB  1683               	bsf	3,5	;RP0=1, select bank1
  4268  13CC  00C4               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4269                           
  4270                           ;adc.c: 70:     temperatura =value*10000.0/resistencia;
  4271  13CD  0847               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4272  13CE  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4273  13CF  0846               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4274  13D0  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4275  13D1  0845               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4276  13D2  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4277  13D3  0844               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4278  13D4  00A0               	movwf	___fldiv@a^(0+128)
  4279  13D5  3046               	movlw	70
  4280  13D6  1283               	bcf	3,5	;RP0=0, select bank0
  4281  13D7  00D8               	movwf	___flmul@b+3
  4282  13D8  301C               	movlw	28
  4283  13D9  00D7               	movwf	___flmul@b+2
  4284  13DA  3040               	movlw	64
  4285  13DB  00D6               	movwf	___flmul@b+1
  4286  13DC  01D5               	clrf	___flmul@b
  4287  13DD  1683               	bsf	3,5	;RP0=1, select bank1
  4288  13DE  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4289  13DF  2785  160A  118A   	fcall	PL24	;call to abstracted procedure
  4290  13E2  24A9  160A  118A   	fcall	___xxtofl
  4291  13E5  27AA               	fcall	PL48	;call to abstracted procedure
  4292  13E6  120A  118A  20EB  160A  118A  	fcall	___flmul
  4293  13EB  0858               	movf	?___flmul+3,w
  4294  13EC  1683               	bsf	3,5	;RP0=1, select bank1
  4295  13ED  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4296  13EE  1283               	bcf	3,5	;RP0=0, select bank0
  4297  13EF  0857               	movf	?___flmul+2,w
  4298  13F0  1683               	bsf	3,5	;RP0=1, select bank1
  4299  13F1  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4300  13F2  1283               	bcf	3,5	;RP0=0, select bank0
  4301  13F3  0856               	movf	?___flmul+1,w
  4302  13F4  1683               	bsf	3,5	;RP0=1, select bank1
  4303  13F5  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4304  13F6  1283               	bcf	3,5	;RP0=0, select bank0
  4305  13F7  0855               	movf	?___flmul,w
  4306  13F8  1683               	bsf	3,5	;RP0=1, select bank1
  4307  13F9  00A4               	movwf	___fldiv@b^(0+128)
  4308  13FA  2517  160A  118A   	fcall	___fldiv
  4309  13FD  27A1  160A  118A   	fcall	PL34	;call to abstracted procedure
  4310                           
  4311                           ;adc.c: 71:     calc=temperatura;
  4312  1400  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4313  1401  00C1               	movwf	(ADC_Read_NTC@calc+3)^(0+128)
  4314  1402  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4315  1403  00C0               	movwf	(ADC_Read_NTC@calc+2)^(0+128)
  4316  1404  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4317  1405  00BF               	movwf	(ADC_Read_NTC@calc+1)^(0+128)
  4318  1406  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4319  1407  00BE               	movwf	ADC_Read_NTC@calc^(0+128)
  4320                           
  4321                           ;adc.c: 72:     temperatura =log(calc);
  4322  1408  0841               	movf	(ADC_Read_NTC@calc+3)^(0+128),w
  4323  1409  00B3               	movwf	(log@x+3)^(0+128)
  4324  140A  0840               	movf	(ADC_Read_NTC@calc+2)^(0+128),w
  4325  140B  00B2               	movwf	(log@x+2)^(0+128)
  4326  140C  083F               	movf	(ADC_Read_NTC@calc+1)^(0+128),w
  4327  140D  00B1               	movwf	(log@x+1)^(0+128)
  4328  140E  083E               	movf	ADC_Read_NTC@calc^(0+128),w
  4329  140F  00B0               	movwf	log@x^(0+128)
  4330  1410  268C  160A  118A   	fcall	_log
  4331  1413  0833               	movf	(?_log+3)^(0+128),w
  4332  1414  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4333  1415  0832               	movf	(?_log+2)^(0+128),w
  4334  1416  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4335  1417  0831               	movf	(?_log+1)^(0+128),w
  4336  1418  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4337  1419  0830               	movf	?_log^(0+128),w
  4338  141A  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4339                           
  4340                           ;adc.c: 73:     temperatura/=B;
  4341  141B  0842               	movf	ADC_Read_NTC@B^(0+128),w
  4342  141C  1283               	bcf	3,5	;RP0=0, select bank0
  4343  141D  00AB               	movwf	___xxtofl@val
  4344  141E  1683               	bsf	3,5	;RP0=1, select bank1
  4345  141F  0843               	movf	(ADC_Read_NTC@B+1)^(0+128),w
  4346  1420  1283               	bcf	3,5	;RP0=0, select bank0
  4347  1421  27BC  160A  118A   	fcall	PL54	;call to abstracted procedure
  4348  1424  24A9  160A  118A   	fcall	___xxtofl
  4349  1427  2775  160A  118A   	fcall	PL18	;call to abstracted procedure
  4350  142A  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4351  142B  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4352  142C  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4353  142D  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4354  142E  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4355  142F  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4356  1430  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4357  1431  00A4               	movwf	___fldiv@b^(0+128)
  4358  1432  2517  160A  118A   	fcall	___fldiv
  4359  1435  27A1  160A  118A   	fcall	PL34	;call to abstracted procedure
  4360                           
  4361                           ;adc.c: 74:     temperatura+=1/(25+273.15);
  4362  1438  303B               	movlw	59
  4363  1439  1283               	bcf	3,5	;RP0=0, select bank0
  4364  143A  00BC               	movwf	___fladd@b+3
  4365  143B  305B               	movlw	91
  4366  143C  00BB               	movwf	___fladd@b+2
  4367  143D  30CF               	movlw	207
  4368  143E  00BA               	movwf	___fladd@b+1
  4369  143F  300F               	movlw	15
  4370  1440  00B9               	movwf	___fladd@b
  4371  1441  1683               	bsf	3,5	;RP0=1, select bank1
  4372  1442  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4373  1443  1283               	bcf	3,5	;RP0=0, select bank0
  4374  1444  00C0               	movwf	___fladd@a+3
  4375  1445  1683               	bsf	3,5	;RP0=1, select bank1
  4376  1446  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4377  1447  1283               	bcf	3,5	;RP0=0, select bank0
  4378  1448  00BF               	movwf	___fladd@a+2
  4379  1449  1683               	bsf	3,5	;RP0=1, select bank1
  4380  144A  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4381  144B  1283               	bcf	3,5	;RP0=0, select bank0
  4382  144C  00BE               	movwf	___fladd@a+1
  4383  144D  1683               	bsf	3,5	;RP0=1, select bank1
  4384  144E  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4385  144F  1283               	bcf	3,5	;RP0=0, select bank0
  4386  1450  00BD               	movwf	___fladd@a
  4387  1451  21C8  160A  118A   	fcall	___fladd
  4388  1454  083C               	movf	?___fladd+3,w
  4389  1455  1683               	bsf	3,5	;RP0=1, select bank1
  4390  1456  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4391  1457  1283               	bcf	3,5	;RP0=0, select bank0
  4392  1458  083B               	movf	?___fladd+2,w
  4393  1459  1683               	bsf	3,5	;RP0=1, select bank1
  4394  145A  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4395  145B  1283               	bcf	3,5	;RP0=0, select bank0
  4396  145C  083A               	movf	?___fladd+1,w
  4397  145D  1683               	bsf	3,5	;RP0=1, select bank1
  4398  145E  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4399  145F  1283               	bcf	3,5	;RP0=0, select bank0
  4400  1460  0839               	movf	?___fladd,w
  4401  1461  1683               	bsf	3,5	;RP0=1, select bank1
  4402  1462  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4403                           
  4404                           ;adc.c: 75:     temperatura =1/temperatura;
  4405  1463  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4406  1464  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4407  1465  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4408  1466  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4409  1467  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4410  1468  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4411  1469  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4412  146A  00A0               	movwf	___fldiv@a^(0+128)
  4413  146B  303F               	movlw	63
  4414  146C  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4415  146D  3080               	movlw	128
  4416  146E  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4417  146F  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4418  1470  01A4               	clrf	___fldiv@b^(0+128)
  4419  1471  2517  160A  118A   	fcall	___fldiv
  4420  1474  27A1  160A  118A   	fcall	PL34	;call to abstracted procedure
  4421                           
  4422                           ;adc.c: 76:     temperatura-=273.15;
  4423  1477  3043               	movlw	67
  4424  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4425  1479  00D0               	movwf	___flsub@a+3
  4426  147A  3088               	movlw	136
  4427  147B  00CF               	movwf	___flsub@a+2
  4428  147C  3093               	movlw	147
  4429  147D  00CE               	movwf	___flsub@a+1
  4430  147E  3033               	movlw	51
  4431  147F  00CD               	movwf	___flsub@a
  4432  1480  1683               	bsf	3,5	;RP0=1, select bank1
  4433  1481  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4434  1482  1283               	bcf	3,5	;RP0=0, select bank0
  4435  1483  00D4               	movwf	___flsub@b+3
  4436  1484  1683               	bsf	3,5	;RP0=1, select bank1
  4437  1485  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4438  1486  1283               	bcf	3,5	;RP0=0, select bank0
  4439  1487  00D3               	movwf	___flsub@b+2
  4440  1488  1683               	bsf	3,5	;RP0=1, select bank1
  4441  1489  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4442  148A  1283               	bcf	3,5	;RP0=0, select bank0
  4443  148B  00D2               	movwf	___flsub@b+1
  4444  148C  1683               	bsf	3,5	;RP0=1, select bank1
  4445  148D  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4446  148E  1283               	bcf	3,5	;RP0=0, select bank0
  4447  148F  00D1               	movwf	___flsub@b
  4448  1490  2638               	fcall	___flsub
  4449  1491  0850               	movf	?___flsub+3,w
  4450  1492  1683               	bsf	3,5	;RP0=1, select bank1
  4451  1493  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4452  1494  1283               	bcf	3,5	;RP0=0, select bank0
  4453  1495  084F               	movf	?___flsub+2,w
  4454  1496  1683               	bsf	3,5	;RP0=1, select bank1
  4455  1497  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4456  1498  1283               	bcf	3,5	;RP0=0, select bank0
  4457  1499  084E               	movf	?___flsub+1,w
  4458  149A  1683               	bsf	3,5	;RP0=1, select bank1
  4459  149B  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4460  149C  1283               	bcf	3,5	;RP0=0, select bank0
  4461  149D  084D               	movf	?___flsub,w
  4462  149E  1683               	bsf	3,5	;RP0=1, select bank1
  4463  149F  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4464                           
  4465                           ;adc.c: 78:     return temperatura;
  4466  14A0  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4467  14A1  00BC               	movwf	(?_ADC_Read_NTC+3)^(0+128)
  4468  14A2  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4469  14A3  00BB               	movwf	(?_ADC_Read_NTC+2)^(0+128)
  4470  14A4  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4471  14A5  00BA               	movwf	(?_ADC_Read_NTC+1)^(0+128)
  4472  14A6  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4473  14A7  00B9               	movwf	?_ADC_Read_NTC^(0+128)
  4474  14A8  0008               	return
  4475  14A9                     __end_of_ADC_Read_NTC:	
  4476  14A9                     __ptext63:	
  4477 ;; *************** function ___xxtofl *****************
  4478 ;; Defined at:
  4479 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  sign            1    wreg     unsigned char 
  4482 ;;  val             4   11[BANK0 ] long 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  sign            1   19[BANK0 ] unsigned char 
  4485 ;;  arg             4   21[BANK0 ] unsigned long 
  4486 ;;  exp             1   20[BANK0 ] unsigned char 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  4   11[BANK0 ] unsigned char 
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 300/0
  4493 ;;		On exit  : 300/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4496 ;;      Params:         0       4       0       0       0
  4497 ;;      Locals:         0       6       0       0       0
  4498 ;;      Temps:          0       4       0       0       0
  4499 ;;      Totals:         0      14       0       0       0
  4500 ;;Total ram usage:       14 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    1
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_mediatemperaturaNTC
  4507 ;;		_Auto_Relay1
  4508 ;;		_Load_Work
  4509 ;;		_ADC_Read_NTC
  4510 ;;		_log
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           
  4515                           ;psect for function ___xxtofl
  4516  14A9                     ___xxtofl:	
  4517                           
  4518                           ;incstack = 0
  4519                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4520                           ;___xxtofl@sign stored from wreg
  4521  14A9  00B3               	movwf	___xxtofl@sign
  4522  14AA  0833               	movf	___xxtofl@sign,w
  4523  14AB  1D03               	btfss	3,2
  4524  14AC  1FAE               	btfss	___xxtofl@val+3,7
  4525  14AD  2CBE               	goto	l4348
  4526  14AE  092B               	comf	___xxtofl@val,w
  4527  14AF  00B5               	movwf	___xxtofl@arg
  4528  14B0  092C               	comf	___xxtofl@val+1,w
  4529  14B1  00B6               	movwf	___xxtofl@arg+1
  4530  14B2  092D               	comf	___xxtofl@val+2,w
  4531  14B3  00B7               	movwf	___xxtofl@arg+2
  4532  14B4  092E               	comf	___xxtofl@val+3,w
  4533  14B5  00B8               	movwf	___xxtofl@arg+3
  4534  14B6  0AB5               	incf	___xxtofl@arg,f
  4535  14B7  1903               	skipnz
  4536  14B8  0AB6               	incf	___xxtofl@arg+1,f
  4537  14B9  1903               	skipnz
  4538  14BA  0AB7               	incf	___xxtofl@arg+2,f
  4539  14BB  1903               	skipnz
  4540  14BC  0AB8               	incf	___xxtofl@arg+3,f
  4541  14BD  2CC6               	goto	l1424
  4542  14BE                     l4348:	
  4543  14BE  082E               	movf	___xxtofl@val+3,w
  4544  14BF  00B8               	movwf	___xxtofl@arg+3
  4545  14C0  082D               	movf	___xxtofl@val+2,w
  4546  14C1  00B7               	movwf	___xxtofl@arg+2
  4547  14C2  082C               	movf	___xxtofl@val+1,w
  4548  14C3  00B6               	movwf	___xxtofl@arg+1
  4549  14C4  082B               	movf	___xxtofl@val,w
  4550  14C5  00B5               	movwf	___xxtofl@arg
  4551  14C6                     l1424:	
  4552  14C6  082E               	movf	___xxtofl@val+3,w
  4553  14C7  042D               	iorwf	___xxtofl@val+2,w
  4554  14C8  042C               	iorwf	___xxtofl@val+1,w
  4555  14C9  042B               	iorwf	___xxtofl@val,w
  4556  14CA  1D03               	skipz
  4557  14CB  2CD1               	goto	l4352
  4558  14CC  01AB               	clrf	?___xxtofl
  4559  14CD  01AC               	clrf	?___xxtofl+1
  4560  14CE  01AD               	clrf	?___xxtofl+2
  4561  14CF  01AE               	clrf	?___xxtofl+3
  4562  14D0  0008               	return
  4563  14D1                     l4352:	
  4564  14D1  3096               	movlw	150
  4565  14D2  00B4               	movwf	___xxtofl@exp
  4566  14D3                     l4356:	
  4567  14D3  30FE               	movlw	254
  4568  14D4  0538               	andwf	___xxtofl@arg+3,w
  4569  14D5  1903               	btfsc	3,2
  4570  14D6  2CE7               	goto	l4360
  4571  14D7  0AB4               	incf	___xxtofl@exp,f
  4572  14D8  27C9  160A  118A   	fcall	PL66	;call to abstracted procedure
  4573  14DB  2CD3               	goto	l4356
  4574  14DC                     l4358:	
  4575  14DC  0AB4               	incf	___xxtofl@exp,f
  4576  14DD  0AB5               	incf	___xxtofl@arg,f
  4577  14DE  1903               	skipnz
  4578  14DF  0AB6               	incf	___xxtofl@arg+1,f
  4579  14E0  1903               	skipnz
  4580  14E1  0AB7               	incf	___xxtofl@arg+2,f
  4581  14E2  1903               	skipnz
  4582  14E3  0AB8               	incf	___xxtofl@arg+3,f
  4583  14E4  27C9  160A  118A   	fcall	PL66	;call to abstracted procedure
  4584  14E7                     l4360:	
  4585  14E7  30FF               	movlw	255
  4586  14E8  0538               	andwf	___xxtofl@arg+3,w
  4587  14E9  1903               	btfsc	3,2
  4588  14EA  2CF6               	goto	l4364
  4589  14EB  2CDC               	goto	l4358
  4590  14EC                     l4366:	
  4591  14EC  3002               	movlw	2
  4592  14ED  0234               	subwf	___xxtofl@exp,w
  4593  14EE  1C03               	btfss	3,0
  4594  14EF  2CF8               	goto	l1437
  4595  14F0  03B4               	decf	___xxtofl@exp,f
  4596  14F1  1003               	clrc
  4597  14F2  0DB5               	rlf	___xxtofl@arg,f
  4598  14F3  0DB6               	rlf	___xxtofl@arg+1,f
  4599  14F4  0DB7               	rlf	___xxtofl@arg+2,f
  4600  14F5  0DB8               	rlf	___xxtofl@arg+3,f
  4601  14F6                     l4364:	
  4602  14F6  1FB7               	btfss	___xxtofl@arg+2,7
  4603  14F7  2CEC               	goto	l4366
  4604  14F8                     l1437:	
  4605  14F8  1C34               	btfss	___xxtofl@exp,0
  4606  14F9  13B7               	bcf	___xxtofl@arg+2,7
  4607  14FA  1003               	clrc
  4608  14FB  0CB4               	rrf	___xxtofl@exp,f
  4609  14FC  0834               	movf	___xxtofl@exp,w
  4610  14FD  00B2               	movwf	??___xxtofl+3
  4611  14FE  01B1               	clrf	??___xxtofl+2
  4612  14FF  01B0               	clrf	??___xxtofl+1
  4613  1500  01AF               	clrf	??___xxtofl
  4614  1501  082F               	movf	??___xxtofl,w
  4615  1502  04B5               	iorwf	___xxtofl@arg,f
  4616  1503  0830               	movf	??___xxtofl+1,w
  4617  1504  04B6               	iorwf	___xxtofl@arg+1,f
  4618  1505  0831               	movf	??___xxtofl+2,w
  4619  1506  04B7               	iorwf	___xxtofl@arg+2,f
  4620  1507  0832               	movf	??___xxtofl+3,w
  4621  1508  04B8               	iorwf	___xxtofl@arg+3,f
  4622  1509  0833               	movf	___xxtofl@sign,w
  4623  150A  1D03               	btfss	3,2
  4624  150B  1FAE               	btfss	___xxtofl@val+3,7
  4625  150C  2D0E               	goto	l4378
  4626  150D  17B8               	bsf	___xxtofl@arg+3,7
  4627  150E                     l4378:	
  4628  150E  0838               	movf	___xxtofl@arg+3,w
  4629  150F  00AE               	movwf	?___xxtofl+3
  4630  1510  0837               	movf	___xxtofl@arg+2,w
  4631  1511  00AD               	movwf	?___xxtofl+2
  4632  1512  0836               	movf	___xxtofl@arg+1,w
  4633  1513  00AC               	movwf	?___xxtofl+1
  4634  1514  0835               	movf	___xxtofl@arg,w
  4635  1515  00AB               	movwf	?___xxtofl
  4636  1516  0008               	return
  4637  1517                     __end_of___xxtofl:	
  4638  1517                     __ptext40:	
  4639 ;; *************** function ___fldiv *****************
  4640 ;; Defined at:
  4641 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  a               4    0[BANK1 ] void 
  4644 ;;  b               4    4[BANK1 ] void 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  grs             4   19[BANK1 ] unsigned long 
  4647 ;;  rem             4   12[BANK1 ] unsigned long 
  4648 ;;  new_exp         2   17[BANK1 ] int 
  4649 ;;  aexp            1   24[BANK1 ] unsigned char 
  4650 ;;  bexp            1   23[BANK1 ] unsigned char 
  4651 ;;  sign            1   16[BANK1 ] unsigned char 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  4    0[BANK1 ] unsigned char 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0, btemp+1
  4656 ;; Tracked objects:
  4657 ;;		On entry : 300/100
  4658 ;;		On exit  : 300/100
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4661 ;;      Params:         0       0       8       0       0
  4662 ;;      Locals:         0       0      13       0       0
  4663 ;;      Temps:          0       0       4       0       0
  4664 ;;      Totals:         0       0      25       0       0
  4665 ;;Total ram usage:       25 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    1
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_mediatemperaturaNTC
  4672 ;;		_Load_Work
  4673 ;;		_ADC_Read_NTC
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           
  4678                           ;psect for function ___fldiv
  4679  1517                     ___fldiv:	
  4680                           
  4681                           ;incstack = 0
  4682                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4683  1517  0827               	movf	(___fldiv@b^(0+128)+3),w
  4684  1518  00B0               	movwf	___fldiv@sign^(0+128)
  4685  1519  3080               	movlw	128
  4686  151A  05B0               	andwf	___fldiv@sign^(0+128),f
  4687  151B  1003               	clrc
  4688  151C  0D27               	rlf	(___fldiv@b^(0+128)+3),w
  4689  151D  00B7               	movwf	___fldiv@bexp^(0+128)
  4690  151E  1BA6               	btfsc	(___fldiv@b^(0+128)+2),7
  4691  151F  1437               	bsf	___fldiv@bexp^(0+128),0
  4692  1520  0837               	movf	___fldiv@bexp^(0+128),w
  4693  1521  1903               	btfsc	3,2
  4694  1522  2D2C               	goto	l1340
  4695  1523  0F37               	incfsz	___fldiv@bexp^(0+128),w
  4696  1524  2D29               	goto	l1341
  4697  1525  01A4               	clrf	___fldiv@b^(0+128)
  4698  1526  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4699  1527  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4700  1528  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4701  1529                     l1341:	
  4702  1529  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  4703  152A  01A7               	clrf	(___fldiv@b^(0+128)+3)
  4704  152B  2D30               	goto	l4698
  4705  152C                     l1340:	
  4706  152C  01A4               	clrf	___fldiv@b^(0+128)
  4707  152D  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4708  152E  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4709  152F  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4710  1530                     l4698:	
  4711  1530  0823               	movf	(___fldiv@a^(0+128)+3),w
  4712  1531  3980               	andlw	128
  4713  1532  06B0               	xorwf	___fldiv@sign^(0+128),f
  4714  1533  1003               	clrc
  4715  1534  0D23               	rlf	(___fldiv@a^(0+128)+3),w
  4716  1535  00B8               	movwf	___fldiv@aexp^(0+128)
  4717  1536  1BA2               	btfsc	(___fldiv@a^(0+128)+2),7
  4718  1537  1438               	bsf	___fldiv@aexp^(0+128),0
  4719  1538  0838               	movf	___fldiv@aexp^(0+128),w
  4720  1539  1903               	btfsc	3,2
  4721  153A  2D44               	goto	l1344
  4722  153B  0F38               	incfsz	___fldiv@aexp^(0+128),w
  4723  153C  2D41               	goto	l1345
  4724  153D  01A0               	clrf	___fldiv@a^(0+128)
  4725  153E  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4726  153F  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4727  1540  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4728  1541                     l1345:	
  4729  1541  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  4730  1542  01A3               	clrf	(___fldiv@a^(0+128)+3)
  4731  1543  2D48               	goto	l4712
  4732  1544                     l1344:	
  4733  1544  01A0               	clrf	___fldiv@a^(0+128)
  4734  1545  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4735  1546  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4736  1547  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4737  1548                     l4712:	
  4738  1548  0823               	movf	(___fldiv@a+3)^(0+128),w
  4739  1549  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  4740  154A  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  4741  154B  0420               	iorwf	___fldiv@a^(0+128),w
  4742  154C  1D03               	skipz
  4743  154D  2D61               	goto	l4724
  4744  154E  3080               	movlw	128
  4745  154F  01A4               	clrf	___fldiv@b^(0+128)
  4746  1550  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4747  1551  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4748  1552  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4749  1553  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  4750  1554  307F               	movlw	127
  4751  1555  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  4752  1556                     L17:	
  4753  1556  0830               	movf	___fldiv@sign^(0+128),w
  4754  1557  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  4755  1558  0827               	movf	(___fldiv@b+3)^(0+128),w
  4756  1559  00A3               	movwf	(?___fldiv+3)^(0+128)
  4757  155A  0826               	movf	(___fldiv@b+2)^(0+128),w
  4758  155B  00A2               	movwf	(?___fldiv+2)^(0+128)
  4759  155C  0825               	movf	(___fldiv@b+1)^(0+128),w
  4760  155D  00A1               	movwf	(?___fldiv+1)^(0+128)
  4761  155E  0824               	movf	___fldiv@b^(0+128),w
  4762  155F  00A0               	movwf	?___fldiv^(0+128)
  4763  1560  0008               	return
  4764  1561                     l4724:	
  4765  1561  0837               	movf	___fldiv@bexp^(0+128),w
  4766  1562  1D03               	btfss	3,2
  4767  1563  2D69               	goto	l4732
  4768  1564  01A0               	clrf	?___fldiv^(0+128)
  4769  1565  01A1               	clrf	(?___fldiv+1)^(0+128)
  4770  1566  01A2               	clrf	(?___fldiv+2)^(0+128)
  4771  1567  01A3               	clrf	(?___fldiv+3)^(0+128)
  4772  1568  0008               	return
  4773  1569                     l4732:	
  4774  1569  0837               	movf	___fldiv@bexp^(0+128),w
  4775  156A  00B1               	movwf	___fldiv@new_exp^(0+128)
  4776  156B  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4777  156C  0838               	movf	___fldiv@aexp^(0+128),w
  4778  156D  02B1               	subwf	___fldiv@new_exp^(0+128),f
  4779  156E  1C03               	skipc
  4780  156F  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4781  1570  307F               	movlw	127
  4782  1571  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4783  1572  1803               	skipnc
  4784  1573  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  4785  1574  0827               	movf	(___fldiv@b+3)^(0+128),w
  4786  1575  00AF               	movwf	(___fldiv@rem+3)^(0+128)
  4787  1576  0826               	movf	(___fldiv@b+2)^(0+128),w
  4788  1577  00AE               	movwf	(___fldiv@rem+2)^(0+128)
  4789  1578  0825               	movf	(___fldiv@b+1)^(0+128),w
  4790  1579  00AD               	movwf	(___fldiv@rem+1)^(0+128)
  4791  157A  0824               	movf	___fldiv@b^(0+128),w
  4792  157B  00AC               	movwf	___fldiv@rem^(0+128)
  4793  157C  01A4               	clrf	___fldiv@b^(0+128)
  4794  157D  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4795  157E  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4796  157F  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4797  1580  01B3               	clrf	___fldiv@grs^(0+128)
  4798  1581  01B4               	clrf	(___fldiv@grs+1)^(0+128)
  4799  1582  01B5               	clrf	(___fldiv@grs+2)^(0+128)
  4800  1583  01B6               	clrf	(___fldiv@grs+3)^(0+128)
  4801  1584  01B8               	clrf	___fldiv@aexp^(0+128)
  4802  1585                     l4758:	
  4803  1585  301A               	movlw	26
  4804  1586  0238               	subwf	___fldiv@aexp^(0+128),w
  4805  1587  1803               	btfsc	3,0
  4806  1588  2DBE               	goto	l4760
  4807  1589  0838               	movf	___fldiv@aexp^(0+128),w
  4808  158A  1903               	btfsc	3,2
  4809  158B  2D9D               	goto	l4750
  4810  158C  1003               	clrc
  4811  158D  0DAC               	rlf	___fldiv@rem^(0+128),f
  4812  158E  0DAD               	rlf	(___fldiv@rem+1)^(0+128),f
  4813  158F  0DAE               	rlf	(___fldiv@rem+2)^(0+128),f
  4814  1590  0DAF               	rlf	(___fldiv@rem+3)^(0+128),f
  4815  1591  1003               	clrc
  4816  1592  0DA4               	rlf	___fldiv@b^(0+128),f
  4817  1593  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4818  1594  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4819  1595  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4820  1596  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4821  1597  1424               	bsf	___fldiv@b^(0+128),0
  4822  1598  1003               	clrc
  4823  1599  0DB3               	rlf	___fldiv@grs^(0+128),f
  4824  159A  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4825  159B  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4826  159C  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4827  159D                     l4750:	
  4828  159D  0823               	movf	(___fldiv@a+3)^(0+128),w
  4829  159E  022F               	subwf	(___fldiv@rem+3)^(0+128),w
  4830  159F  1D03               	skipz
  4831  15A0  2DAB               	goto	u4045
  4832  15A1  0822               	movf	(___fldiv@a+2)^(0+128),w
  4833  15A2  022E               	subwf	(___fldiv@rem+2)^(0+128),w
  4834  15A3  1D03               	skipz
  4835  15A4  2DAB               	goto	u4045
  4836  15A5  0821               	movf	(___fldiv@a+1)^(0+128),w
  4837  15A6  022D               	subwf	(___fldiv@rem+1)^(0+128),w
  4838  15A7  1D03               	skipz
  4839  15A8  2DAB               	goto	u4045
  4840  15A9  0820               	movf	___fldiv@a^(0+128),w
  4841  15AA  022C               	subwf	___fldiv@rem^(0+128),w
  4842  15AB                     u4045:	
  4843  15AB  1C03               	skipc
  4844  15AC  2DBC               	goto	l4756
  4845  15AD  1736               	bsf	(___fldiv@grs^(0+128)+3),6
  4846  15AE  0820               	movf	___fldiv@a^(0+128),w
  4847  15AF  02AC               	subwf	___fldiv@rem^(0+128),f
  4848  15B0  0821               	movf	(___fldiv@a+1)^(0+128),w
  4849  15B1  1C03               	skipc
  4850  15B2  0F21               	incfsz	(___fldiv@a+1)^(0+128),w
  4851  15B3  02AD               	subwf	(___fldiv@rem+1)^(0+128),f
  4852  15B4  0822               	movf	(___fldiv@a+2)^(0+128),w
  4853  15B5  1C03               	skipc
  4854  15B6  0F22               	incfsz	(___fldiv@a+2)^(0+128),w
  4855  15B7  02AE               	subwf	(___fldiv@rem+2)^(0+128),f
  4856  15B8  0823               	movf	(___fldiv@a+3)^(0+128),w
  4857  15B9  1C03               	skipc
  4858  15BA  0F23               	incfsz	(___fldiv@a+3)^(0+128),w
  4859  15BB  02AF               	subwf	(___fldiv@rem+3)^(0+128),f
  4860  15BC                     l4756:	
  4861  15BC  0AB8               	incf	___fldiv@aexp^(0+128),f
  4862  15BD  2D85               	goto	l4758
  4863  15BE                     l4760:	
  4864  15BE  082F               	movf	(___fldiv@rem+3)^(0+128),w
  4865  15BF  042E               	iorwf	(___fldiv@rem+2)^(0+128),w
  4866  15C0  042D               	iorwf	(___fldiv@rem+1)^(0+128),w
  4867  15C1  042C               	iorwf	___fldiv@rem^(0+128),w
  4868  15C2  1D03               	btfss	3,2
  4869  15C3  1433               	bsf	___fldiv@grs^(0+128),0
  4870  15C4                     l4774:	
  4871  15C4  1BA6               	btfsc	(___fldiv@b+2)^(0+128),7
  4872  15C5  2DD7               	goto	l4776
  4873  15C6  1003               	clrc
  4874  15C7  0DA4               	rlf	___fldiv@b^(0+128),f
  4875  15C8  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4876  15C9  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4877  15CA  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4878  15CB  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4879  15CC  1424               	bsf	___fldiv@b^(0+128),0
  4880  15CD  30FF               	movlw	-1
  4881  15CE  1003               	clrc
  4882  15CF  0DB3               	rlf	___fldiv@grs^(0+128),f
  4883  15D0  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4884  15D1  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4885  15D2  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4886  15D3  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4887  15D4  1C03               	skipc
  4888  15D5  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4889  15D6  2DC4               	goto	l4774
  4890  15D7                     l4776:	
  4891  15D7  01B8               	clrf	___fldiv@aexp^(0+128)
  4892  15D8  1FB6               	btfss	(___fldiv@grs+3)^(0+128),7
  4893  15D9  2DED               	goto	l4786
  4894  15DA  0833               	movf	___fldiv@grs^(0+128),w
  4895  15DB  00A8               	movwf	??___fldiv^(0+128)
  4896  15DC  0834               	movf	(___fldiv@grs+1)^(0+128),w
  4897  15DD  00A9               	movwf	(??___fldiv^(0+128)+1)
  4898  15DE  0835               	movf	(___fldiv@grs+2)^(0+128),w
  4899  15DF  00AA               	movwf	(??___fldiv^(0+128)+2)
  4900  15E0  307F               	movlw	127
  4901  15E1  0536               	andwf	(___fldiv@grs+3)^(0+128),w
  4902  15E2  00AB               	movwf	(??___fldiv^(0+128)+3)
  4903  15E3  082B               	movf	(??___fldiv+3)^(0+128),w
  4904  15E4  042A               	iorwf	(??___fldiv+2)^(0+128),w
  4905  15E5  0429               	iorwf	(??___fldiv+1)^(0+128),w
  4906  15E6  0428               	iorwf	??___fldiv^(0+128),w
  4907  15E7  1903               	skipnz
  4908  15E8  1824               	btfsc	___fldiv@b^(0+128),0
  4909  15E9  2DEB               	goto	l4782
  4910  15EA  2DED               	goto	l4786
  4911  15EB                     l4782:	
  4912  15EB  01B8               	clrf	___fldiv@aexp^(0+128)
  4913  15EC  0AB8               	incf	___fldiv@aexp^(0+128),f
  4914  15ED                     l4786:	
  4915  15ED  0838               	movf	___fldiv@aexp^(0+128),w
  4916  15EE  1903               	btfsc	3,2
  4917  15EF  2E01               	goto	l4796
  4918  15F0  0AA4               	incf	___fldiv@b^(0+128),f
  4919  15F1  1903               	skipnz
  4920  15F2  0AA5               	incf	(___fldiv@b+1)^(0+128),f
  4921  15F3  1903               	skipnz
  4922  15F4  0AA6               	incf	(___fldiv@b+2)^(0+128),f
  4923  15F5  1903               	skipnz
  4924  15F6  0AA7               	incf	(___fldiv@b+3)^(0+128),f
  4925  15F7  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  4926  15F8  2E01               	goto	l4796
  4927  15F9  0D27               	rlf	(___fldiv@b+3)^(0+128),w
  4928  15FA  0CA7               	rrf	(___fldiv@b+3)^(0+128),f
  4929  15FB  0CA6               	rrf	(___fldiv@b+2)^(0+128),f
  4930  15FC  0CA5               	rrf	(___fldiv@b+1)^(0+128),f
  4931  15FD  0CA4               	rrf	___fldiv@b^(0+128),f
  4932  15FE  0AB1               	incf	___fldiv@new_exp^(0+128),f
  4933  15FF  1903               	skipnz
  4934  1600  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  4935  1601                     l4796:	
  4936  1601  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  4937  1602  3A80               	xorlw	128
  4938  1603  00FF               	movwf	127
  4939  1604  3080               	movlw	128
  4940  1605  027F               	subwf	127,w
  4941  1606  1D03               	skipz
  4942  1607  2E0A               	goto	u4145
  4943  1608  30FF               	movlw	255
  4944  1609  0231               	subwf	___fldiv@new_exp^(0+128),w
  4945  160A                     u4145:	
  4946  160A  1C03               	skipc
  4947  160B  2E15               	goto	l4802
  4948  160C  30FF               	movlw	255
  4949  160D  1683               	bsf	3,5	;RP0=1, select bank1
  4950  160E  1303               	bcf	3,6	;RP1=0, select bank1
  4951  160F  00B1               	movwf	___fldiv@new_exp^(0+128)
  4952  1610  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4953  1611  01A4               	clrf	___fldiv@b^(0+128)
  4954  1612  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4955  1613  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4956  1614  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4957  1615                     l4802:	
  4958  1615  1683               	bsf	3,5	;RP0=1, select bank1
  4959  1616  1303               	bcf	3,6	;RP1=0, select bank1
  4960  1617  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  4961  1618  3A80               	xorlw	128
  4962  1619  00FF               	movwf	127
  4963  161A  3080               	movlw	128
  4964  161B  027F               	subwf	127,w
  4965  161C  1D03               	skipz
  4966  161D  2E20               	goto	u4155
  4967  161E  3001               	movlw	1
  4968  161F  0231               	subwf	___fldiv@new_exp^(0+128),w
  4969  1620                     u4155:	
  4970  1620  1803               	skipnc
  4971  1621  2E2B               	goto	l4808
  4972  1622  1683               	bsf	3,5	;RP0=1, select bank1
  4973  1623  1303               	bcf	3,6	;RP1=0, select bank1
  4974  1624  01B1               	clrf	___fldiv@new_exp^(0+128)
  4975  1625  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4976  1626  01A4               	clrf	___fldiv@b^(0+128)
  4977  1627  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4978  1628  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4979  1629  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4980  162A  01B0               	clrf	___fldiv@sign^(0+128)
  4981  162B                     l4808:	
  4982  162B  1683               	bsf	3,5	;RP0=1, select bank1
  4983  162C  1303               	bcf	3,6	;RP1=0, select bank1
  4984  162D  0831               	movf	___fldiv@new_exp^(0+128),w
  4985  162E  00B7               	movwf	___fldiv@bexp^(0+128)
  4986  162F  1C37               	btfss	___fldiv@bexp^(0+128),0
  4987  1630  2E33               	goto	l1369
  4988  1631  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  4989  1632  2E34               	goto	l4814
  4990  1633                     l1369:	
  4991  1633  13A6               	bcf	(___fldiv@b^(0+128)+2),7
  4992  1634                     l4814:	
  4993  1634  1003               	clrc
  4994  1635  0C37               	rrf	___fldiv@bexp^(0+128),w
  4995  1636  00A7               	movwf	(___fldiv@b^(0+128)+3)
  4996  1637  2D56               	goto	L17
  4997  1638                     __end_of___fldiv:	
  4998  1638                     __ptext67:	
  4999 ;; *************** function ___flsub *****************
  5000 ;; Defined at:
  5001 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  a               4   45[BANK0 ] void 
  5004 ;;  b               4   49[BANK0 ] void 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  4   45[BANK0 ] void 
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5011 ;; Tracked objects:
  5012 ;;		On entry : 300/0
  5013 ;;		On exit  : 300/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5016 ;;      Params:         0       8       0       0       0
  5017 ;;      Locals:         0       0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0
  5019 ;;      Totals:         0       8       0       0       0
  5020 ;;Total ram usage:        8 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:    2
  5023 ;; This function calls:
  5024 ;;		___fladd
  5025 ;; This function is called by:
  5026 ;;		_Auto_Relay0
  5027 ;;		_Auto_Relay1
  5028 ;;		_ADC_Read_NTC
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           
  5033                           ;psect for function ___flsub
  5034  1638                     ___flsub:	
  5035                           
  5036                           ;incstack = 0
  5037                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5038  1638  3080               	movlw	128
  5039  1639  06D0               	xorwf	___flsub@a+3,f
  5040  163A  0854               	movf	___flsub@b+3,w
  5041  163B  00BC               	movwf	___fladd@b+3
  5042  163C  0853               	movf	___flsub@b+2,w
  5043  163D  00BB               	movwf	___fladd@b+2
  5044  163E  0852               	movf	___flsub@b+1,w
  5045  163F  00BA               	movwf	___fladd@b+1
  5046  1640  0851               	movf	___flsub@b,w
  5047  1641  00B9               	movwf	___fladd@b
  5048  1642  0850               	movf	___flsub@a+3,w
  5049  1643  00C0               	movwf	___fladd@a+3
  5050  1644  084F               	movf	___flsub@a+2,w
  5051  1645  00BF               	movwf	___fladd@a+2
  5052  1646  084E               	movf	___flsub@a+1,w
  5053  1647  00BE               	movwf	___fladd@a+1
  5054  1648  084D               	movf	___flsub@a,w
  5055  1649  00BD               	movwf	___fladd@a
  5056  164A  21C8               	fcall	___fladd
  5057  164B  083C               	movf	?___fladd+3,w
  5058  164C  00D0               	movwf	?___flsub+3
  5059  164D  083B               	movf	?___fladd+2,w
  5060  164E  00CF               	movwf	?___flsub+2
  5061  164F  083A               	movf	?___fladd+1,w
  5062  1650  00CE               	movwf	?___flsub+1
  5063  1651  0839               	movf	?___fladd,w
  5064  1652  00CD               	movwf	?___flsub
  5065  1653  0008               	return
  5066  1654                     __end_of___flsub:	
  5067  1654                     __ptext34:	
  5068 ;; *************** function ___lwdiv *****************
  5069 ;; Defined at:
  5070 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;  divisor         2    0[BANK0 ] unsigned int 
  5073 ;;  dividend        2    2[BANK0 ] unsigned int 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  quotient        2    5[BANK0 ] unsigned int 
  5076 ;;  counter         1    4[BANK0 ] unsigned char 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  2    0[BANK0 ] unsigned int 
  5079 ;; Registers used:
  5080 ;;		wreg, status,2, status,0
  5081 ;; Tracked objects:
  5082 ;;		On entry : 300/0
  5083 ;;		On exit  : 300/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5086 ;;      Params:         0       4       0       0       0
  5087 ;;      Locals:         0       3       0       0       0
  5088 ;;      Temps:          0       0       0       0       0
  5089 ;;      Totals:         0       7       0       0       0
  5090 ;;Total ram usage:        7 bytes
  5091 ;; Hardware stack levels used:    1
  5092 ;; Hardware stack levels required when called:    1
  5093 ;; This function calls:
  5094 ;;		Nothing
  5095 ;; This function is called by:
  5096 ;;		_ADC_Read_NTC
  5097 ;;		_PROCULUS_Buzzer
  5098 ;;		_utoa
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           
  5103                           ;psect for function ___lwdiv
  5104  1654                     ___lwdiv:	
  5105                           
  5106                           ;incstack = 0
  5107                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5108  1654  01A5               	clrf	___lwdiv@quotient
  5109  1655  01A6               	clrf	___lwdiv@quotient+1
  5110  1656  0820               	movf	___lwdiv@divisor,w
  5111  1657  0421               	iorwf	___lwdiv@divisor+1,w
  5112  1658  1903               	btfsc	3,2
  5113  1659  2E79               	goto	l6274
  5114  165A  01A4               	clrf	___lwdiv@counter
  5115  165B                     L15:	
  5116  165B  0AA4               	incf	___lwdiv@counter,f
  5117  165C  1BA1               	btfsc	___lwdiv@divisor+1,7
  5118  165D  2E62               	goto	l6262
  5119  165E  1003               	clrc
  5120  165F  0DA0               	rlf	___lwdiv@divisor,f
  5121  1660  0DA1               	rlf	___lwdiv@divisor+1,f
  5122  1661  2E5B               	goto	L15
  5123  1662                     l6262:	
  5124  1662  1003               	clrc
  5125  1663  0DA5               	rlf	___lwdiv@quotient,f
  5126  1664  0DA6               	rlf	___lwdiv@quotient+1,f
  5127  1665  0821               	movf	___lwdiv@divisor+1,w
  5128  1666  0223               	subwf	___lwdiv@dividend+1,w
  5129  1667  1D03               	skipz
  5130  1668  2E6B               	goto	u5575
  5131  1669  0820               	movf	___lwdiv@divisor,w
  5132  166A  0222               	subwf	___lwdiv@dividend,w
  5133  166B                     u5575:	
  5134  166B  1C03               	skipc
  5135  166C  2E75               	goto	L16
  5136  166D  0820               	movf	___lwdiv@divisor,w
  5137  166E  02A2               	subwf	___lwdiv@dividend,f
  5138  166F  0821               	movf	___lwdiv@divisor+1,w
  5139  1670  1C03               	skipc
  5140  1671  03A3               	decf	___lwdiv@dividend+1,f
  5141  1672  02A3               	subwf	___lwdiv@dividend+1,f
  5142  1673  1425               	bsf	___lwdiv@quotient,0
  5143  1674  1003               	clrc
  5144  1675                     L16:	
  5145  1675  0CA1               	rrf	___lwdiv@divisor+1,f
  5146  1676  0CA0               	rrf	___lwdiv@divisor,f
  5147  1677  0BA4               	decfsz	___lwdiv@counter,f
  5148  1678  2E62               	goto	l6262
  5149  1679                     l6274:	
  5150  1679  0826               	movf	___lwdiv@quotient+1,w
  5151  167A  00A1               	movwf	?___lwdiv+1
  5152  167B  0825               	movf	___lwdiv@quotient,w
  5153  167C  00A0               	movwf	?___lwdiv
  5154  167D  0008               	return
  5155  167E                     __end_of___lwdiv:	
  5156  167E                     __ptext10:	
  5157 ;; *************** function _captura *****************
  5158 ;; Defined at:
  5159 ;;		line 123 in file "adc.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;		None
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  2    0[BANK0 ] unsigned int 
  5166 ;; Registers used:
  5167 ;;		wreg
  5168 ;; Tracked objects:
  5169 ;;		On entry : 300/100
  5170 ;;		On exit  : 300/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5173 ;;      Params:         0       2       0       0       0
  5174 ;;      Locals:         0       0       0       0       0
  5175 ;;      Temps:          0       0       0       0       0
  5176 ;;      Totals:         0       2       0       0       0
  5177 ;;Total ram usage:        2 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    1
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_ADC_Read_NTC
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           
  5188                           ;psect for function _captura
  5189  167E                     _captura:	
  5190                           
  5191                           ;adc.c: 124:     ADCON0bits.GO=1;
  5192                           
  5193                           ;incstack = 0
  5194                           ; Regs used in _captura: [wreg]
  5195  167E  1283               	bcf	3,5	;RP0=0, select bank0
  5196  167F  149F               	bsf	31,1	;volatile
  5197  1680                     l450:	
  5198                           ;adc.c: 128:           }
  5199                           
  5200                           
  5201                           ;adc.c: 125:     while(ADCON0bits.GO)
  5202  1680  189F               	btfsc	31,1	;volatile
  5203  1681  2E80               	goto	l450
  5204                           
  5205                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  5206  1682  081E               	movf	30,w	;volatile
  5207  1683  00A1               	movwf	?_captura+1
  5208  1684  01A0               	clrf	?_captura
  5209  1685  1683               	bsf	3,5	;RP0=1, select bank1
  5210  1686  081E               	movf	30,w	;volatile
  5211  1687  1283               	bcf	3,5	;RP0=0, select bank0
  5212  1688  07A0               	addwf	?_captura,f
  5213  1689  1803               	skipnc
  5214  168A  0AA1               	incf	?_captura+1,f
  5215  168B  0008               	return
  5216  168C                     __end_of_captura:	
  5217  168C                     __ptext6:	
  5218 ;; *************** function _log *****************
  5219 ;; Defined at:
  5220 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\log.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  x               4   16[BANK1 ] float 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  exponent        2   78[BANK0 ] int 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  4   16[BANK1 ] int 
  5227 ;; Registers used:
  5228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 300/100
  5231 ;;		On exit  : 300/100
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5234 ;;      Params:         0       0       4       0       0
  5235 ;;      Locals:         0       2       0       0       0
  5236 ;;      Temps:          0       0       0       0       0
  5237 ;;      Totals:         0       2       4       0       0
  5238 ;;Total ram usage:        6 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    4
  5241 ;; This function calls:
  5242 ;;		___fladd
  5243 ;;		___fleq
  5244 ;;		___flge
  5245 ;;		___flmul
  5246 ;;		___xxtofl
  5247 ;;		_eval_poly
  5248 ;;		_frexp
  5249 ;; This function is called by:
  5250 ;;		_ADC_Read_NTC
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           
  5255                           ;psect for function _log
  5256  168C                     _log:	
  5257                           
  5258                           ;incstack = 0
  5259                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5260  168C  0833               	movf	(log@x+3)^(0+128),w
  5261  168D  1283               	bcf	3,5	;RP0=0, select bank0
  5262  168E  00D8               	movwf	___flge@ff1+3
  5263  168F  1683               	bsf	3,5	;RP0=1, select bank1
  5264  1690  0832               	movf	(log@x+2)^(0+128),w
  5265  1691  1283               	bcf	3,5	;RP0=0, select bank0
  5266  1692  00D7               	movwf	___flge@ff1+2
  5267  1693  1683               	bsf	3,5	;RP0=1, select bank1
  5268  1694  0831               	movf	(log@x+1)^(0+128),w
  5269  1695  1283               	bcf	3,5	;RP0=0, select bank0
  5270  1696  00D6               	movwf	___flge@ff1+1
  5271  1697  1683               	bsf	3,5	;RP0=1, select bank1
  5272  1698  0830               	movf	log@x^(0+128),w
  5273  1699  1283               	bcf	3,5	;RP0=0, select bank0
  5274  169A  00D5               	movwf	___flge@ff1
  5275  169B  01D9               	clrf	___flge@ff2
  5276  169C  01DA               	clrf	___flge@ff2+1
  5277  169D  01DB               	clrf	___flge@ff2+2
  5278  169E  01DC               	clrf	___flge@ff2+3
  5279  169F  120A  118A  241E  160A  118A  	fcall	___flge
  5280  16A4  1803               	btfsc	3,0
  5281  16A5  2EA7               	goto	l6462
  5282  16A6  2FC3               	ljmp	PL62	;call to abstracted procedure
  5283  16A7                     l6462:	
  5284  16A7  1683               	bsf	3,5	;RP0=1, select bank1
  5285  16A8  0833               	movf	(log@x+3)^(0+128),w
  5286  16A9  1283               	bcf	3,5	;RP0=0, select bank0
  5287  16AA  00A3               	movwf	___fleq@ff1+3
  5288  16AB  1683               	bsf	3,5	;RP0=1, select bank1
  5289  16AC  0832               	movf	(log@x+2)^(0+128),w
  5290  16AD  1283               	bcf	3,5	;RP0=0, select bank0
  5291  16AE  00A2               	movwf	___fleq@ff1+2
  5292  16AF  1683               	bsf	3,5	;RP0=1, select bank1
  5293  16B0  0831               	movf	(log@x+1)^(0+128),w
  5294  16B1  1283               	bcf	3,5	;RP0=0, select bank0
  5295  16B2  00A1               	movwf	___fleq@ff1+1
  5296  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  5297  16B4  0830               	movf	log@x^(0+128),w
  5298  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  5299  16B6  120A  118A  27AB  160A  118A  	fcall	PL74	;call to abstracted procedure
  5300  16BB  120A  118A  2775  160A  118A  	fcall	___fleq
  5301  16C0  1C03               	btfss	3,0
  5302  16C1  2EC3               	goto	l6466
  5303  16C2  2FC3               	ljmp	PL62	;call to abstracted procedure
  5304  16C3                     l6466:	
  5305  16C3  30BF               	movlw	191
  5306  16C4  00BC               	movwf	___fladd@b+3
  5307  16C5  3080               	movlw	128
  5308  16C6  00BB               	movwf	___fladd@b+2
  5309  16C7  3040               	movlw	64
  5310  16C8  01BA               	clrf	___fladd@b+1
  5311  16C9  01B9               	clrf	___fladd@b
  5312  16CA  00D8               	movwf	___flmul@b+3
  5313  16CB  306E               	movlw	(low (log@exponent| 0))& (0+255)
  5314  16CC  01D7               	clrf	___flmul@b+2
  5315  16CD  01D6               	clrf	___flmul@b+1
  5316  16CE  01D5               	clrf	___flmul@b
  5317  16CF  00B0               	movwf	frexp@eptr
  5318  16D0  1683               	bsf	3,5	;RP0=1, select bank1
  5319  16D1  0833               	movf	(log@x+3)^(0+128),w
  5320  16D2  1283               	bcf	3,5	;RP0=0, select bank0
  5321  16D3  00AF               	movwf	frexp@value+3
  5322  16D4  1683               	bsf	3,5	;RP0=1, select bank1
  5323  16D5  0832               	movf	(log@x+2)^(0+128),w
  5324  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  5325  16D7  00AE               	movwf	frexp@value+2
  5326  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  5327  16D9  0831               	movf	(log@x+1)^(0+128),w
  5328  16DA  1283               	bcf	3,5	;RP0=0, select bank0
  5329  16DB  00AD               	movwf	frexp@value+1
  5330  16DC  1683               	bsf	3,5	;RP0=1, select bank1
  5331  16DD  0830               	movf	log@x^(0+128),w
  5332  16DE  1283               	bcf	3,5	;RP0=0, select bank0
  5333  16DF  00AC               	movwf	frexp@value
  5334  16E0  120A  118A  272E  160A  118A  	fcall	_frexp
  5335  16E5  082F               	movf	?_frexp+3,w
  5336  16E6  00DC               	movwf	___flmul@a+3
  5337  16E7  082E               	movf	?_frexp+2,w
  5338  16E8  00DB               	movwf	___flmul@a+2
  5339  16E9  082D               	movf	?_frexp+1,w
  5340  16EA  00DA               	movwf	___flmul@a+1
  5341  16EB  082C               	movf	?_frexp,w
  5342  16EC  00D9               	movwf	___flmul@a
  5343  16ED  120A  118A  20EB  160A  118A  	fcall	___flmul
  5344  16F2  278F  160A  118A   	fcall	PL28	;call to abstracted procedure
  5345  16F5  21C8  160A  118A   	fcall	___fladd
  5346  16F8  083C               	movf	?___fladd+3,w
  5347  16F9  1683               	bsf	3,5	;RP0=1, select bank1
  5348  16FA  00B3               	movwf	(log@x+3)^(0+128)
  5349  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  5350  16FC  083B               	movf	?___fladd+2,w
  5351  16FD  1683               	bsf	3,5	;RP0=1, select bank1
  5352  16FE  00B2               	movwf	(log@x+2)^(0+128)
  5353  16FF  1283               	bcf	3,5	;RP0=0, select bank0
  5354  1700  083A               	movf	?___fladd+1,w
  5355  1701  1683               	bsf	3,5	;RP0=1, select bank1
  5356  1702  00B1               	movwf	(log@x+1)^(0+128)
  5357  1703  1283               	bcf	3,5	;RP0=0, select bank0
  5358  1704  0839               	movf	?___fladd,w
  5359  1705  1683               	bsf	3,5	;RP0=1, select bank1
  5360  1706  00B0               	movwf	log@x^(0+128)
  5361  1707  30FF               	movlw	-1
  5362  1708  1283               	bcf	3,5	;RP0=0, select bank0
  5363  1709  07EE               	addwf	log@exponent,f
  5364  170A  1C03               	skipc
  5365  170B  03EF               	decf	log@exponent+1,f
  5366  170C  1683               	bsf	3,5	;RP0=1, select bank1
  5367  170D  0833               	movf	(log@x+3)^(0+128),w
  5368  170E  00A3               	movwf	(eval_poly@x+3)^(0+128)
  5369  170F  0832               	movf	(log@x+2)^(0+128),w
  5370  1710  00A2               	movwf	(eval_poly@x+2)^(0+128)
  5371  1711  0831               	movf	(log@x+1)^(0+128),w
  5372  1712  00A1               	movwf	(eval_poly@x+1)^(0+128)
  5373  1713  0830               	movf	log@x^(0+128),w
  5374  1714  00A0               	movwf	eval_poly@x^(0+128)
  5375  1715  3001               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  5376  1716  00A4               	movwf	eval_poly@d^(0+128)
  5377  1717  3008               	movlw	8
  5378  1718  00A5               	movwf	eval_poly@n^(0+128)
  5379  1719  01A6               	clrf	(eval_poly@n+1)^(0+128)
  5380  171A  211E  160A  118A   	fcall	_eval_poly
  5381  171D  0823               	movf	(?_eval_poly+3)^(0+128),w
  5382  171E  00B3               	movwf	(log@x+3)^(0+128)
  5383  171F  0822               	movf	(?_eval_poly+2)^(0+128),w
  5384  1720  00B2               	movwf	(log@x+2)^(0+128)
  5385  1721  0821               	movf	(?_eval_poly+1)^(0+128),w
  5386  1722  00B1               	movwf	(log@x+1)^(0+128)
  5387  1723  0820               	movf	?_eval_poly^(0+128),w
  5388  1724  00B0               	movwf	log@x^(0+128)
  5389  1725  0833               	movf	(log@x+3)^(0+128),w
  5390  1726  1283               	bcf	3,5	;RP0=0, select bank0
  5391  1727  00BC               	movwf	___fladd@b+3
  5392  1728  1683               	bsf	3,5	;RP0=1, select bank1
  5393  1729  0832               	movf	(log@x+2)^(0+128),w
  5394  172A  1283               	bcf	3,5	;RP0=0, select bank0
  5395  172B  00BB               	movwf	___fladd@b+2
  5396  172C  1683               	bsf	3,5	;RP0=1, select bank1
  5397  172D  0831               	movf	(log@x+1)^(0+128),w
  5398  172E  1283               	bcf	3,5	;RP0=0, select bank0
  5399  172F  00BA               	movwf	___fladd@b+1
  5400  1730  1683               	bsf	3,5	;RP0=1, select bank1
  5401  1731  0830               	movf	log@x^(0+128),w
  5402  1732  1283               	bcf	3,5	;RP0=0, select bank0
  5403  1733  00B9               	movwf	___fladd@b
  5404  1734  303F               	movlw	63
  5405  1735  00D8               	movwf	___flmul@b+3
  5406  1736  3031               	movlw	49
  5407  1737  00D7               	movwf	___flmul@b+2
  5408  1738  3072               	movlw	114
  5409  1739  00D6               	movwf	___flmul@b+1
  5410  173A  3018               	movlw	24
  5411  173B  00D5               	movwf	___flmul@b
  5412  173C  086E               	movf	log@exponent,w
  5413  173D  00AB               	movwf	___xxtofl@val
  5414  173E  086F               	movf	log@exponent+1,w
  5415  173F  27BC  160A  118A   	fcall	PL54	;call to abstracted procedure
  5416  1742  24A9  160A  118A   	fcall	___xxtofl
  5417  1745  27AA               	fcall	PL48	;call to abstracted procedure
  5418  1746  120A  118A  20EB  160A  118A  	fcall	___flmul
  5419  174B  278F  160A  118A   	fcall	PL28	;call to abstracted procedure
  5420  174E  21C8               	fcall	___fladd
  5421  174F  083C               	movf	?___fladd+3,w
  5422  1750  1683               	bsf	3,5	;RP0=1, select bank1
  5423  1751  00B3               	movwf	(?_log+3)^(0+128)
  5424  1752  1283               	bcf	3,5	;RP0=0, select bank0
  5425  1753  083B               	movf	?___fladd+2,w
  5426  1754  1683               	bsf	3,5	;RP0=1, select bank1
  5427  1755  00B2               	movwf	(?_log+2)^(0+128)
  5428  1756  1283               	bcf	3,5	;RP0=0, select bank0
  5429  1757  083A               	movf	?___fladd+1,w
  5430  1758  1683               	bsf	3,5	;RP0=1, select bank1
  5431  1759  00B1               	movwf	(?_log+1)^(0+128)
  5432  175A  1283               	bcf	3,5	;RP0=0, select bank0
  5433  175B  0839               	movf	?___fladd,w
  5434  175C  1683               	bsf	3,5	;RP0=1, select bank1
  5435  175D  00B0               	movwf	?_log^(0+128)
  5436  175E  0008               	return
  5437  175F                     __end_of_log:	
  5438  175F                     __ptext4:	
  5439 ;; *************** function _Package_Usart_is_for_me *****************
  5440 ;; Defined at:
  5441 ;;		line 8 in file "protocolo.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;		None
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  retorno         1    0[BANK0 ] unsigned char 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  1    wreg      unsigned char 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0
  5450 ;; Tracked objects:
  5451 ;;		On entry : 300/100
  5452 ;;		On exit  : 300/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5455 ;;      Params:         0       0       0       0       0
  5456 ;;      Locals:         0       1       0       0       0
  5457 ;;      Temps:          0       0       0       0       0
  5458 ;;      Totals:         0       1       0       0       0
  5459 ;;Total ram usage:        1 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; Hardware stack levels required when called:    1
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_mediatemperaturaNTC
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           
  5470                           ;psect for function _Package_Usart_is_for_me
  5471  175F                     _Package_Usart_is_for_me:	
  5472                           
  5473                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5474                           
  5475                           ;incstack = 0
  5476                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5477  175F  1C76               	btfss	_generic_status,0
  5478  1760  2F70               	goto	l5256
  5479                           
  5480                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5481  1761  1283               	bcf	3,5	;RP0=0, select bank2
  5482  1762  1703               	bsf	3,6	;RP1=1, select bank2
  5483  1763  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5484  1764  1683               	bsf	3,5	;RP0=1, select bank3
  5485  1765  0634               	xorwf	_Board_Number^(0+384),w
  5486  1766  1903               	skipnz
  5487  1767  2F6B               	goto	l738
  5488  1768  1283               	bcf	3,5	;RP0=0, select bank2
  5489  1769  0F13               	incfsz	(_usart_buffer^(0+256)+3),w	;volatile
  5490  176A  2F70               	goto	l5256
  5491  176B                     l738:	
  5492                           
  5493                           ;protocolo.c: 13:             retorno=1;
  5494  176B  1283               	bcf	3,5	;RP0=0, select bank0
  5495  176C  1303               	bcf	3,6	;RP1=0, select bank0
  5496  176D  01A0               	clrf	Package_Usart_is_for_me@retorno
  5497  176E  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5498  176F  2F73               	goto	l5260
  5499  1770                     l5256:	
  5500                           
  5501                           ;protocolo.c: 15:             retorno=0;
  5502  1770  1283               	bcf	3,5	;RP0=0, select bank0
  5503  1771  1303               	bcf	3,6	;RP1=0, select bank0
  5504  1772  01A0               	clrf	Package_Usart_is_for_me@retorno
  5505  1773                     l5260:	
  5506                           
  5507                           ;protocolo.c: 21:      return retorno;
  5508  1773  0820               	movf	Package_Usart_is_for_me@retorno,w
  5509  1774  0008               	return
  5510  1775                     __end_of_Package_Usart_is_for_me:	
  5511  1775                     PL18:	
  5512  1775  082E               	movf	?___xxtofl+3,w
  5513  1776  1683               	bsf	3,5	;RP0=1, select bank1
  5514  1777  00A3               	movwf	(___fldiv@a+3)^(0+128)
  5515  1778  1283               	bcf	3,5	;RP0=0, select bank0
  5516  1779  082D               	movf	?___xxtofl+2,w
  5517  177A  1683               	bsf	3,5	;RP0=1, select bank1
  5518  177B  00A2               	movwf	(___fldiv@a+2)^(0+128)
  5519  177C  1283               	bcf	3,5	;RP0=0, select bank0
  5520  177D  082C               	movf	?___xxtofl+1,w
  5521  177E  1683               	bsf	3,5	;RP0=1, select bank1
  5522  177F  00A1               	movwf	(___fldiv@a+1)^(0+128)
  5523  1780  1283               	bcf	3,5	;RP0=0, select bank0
  5524  1781  082B               	movf	?___xxtofl,w
  5525  1782  1683               	bsf	3,5	;RP0=1, select bank1
  5526  1783  00A0               	movwf	___fldiv@a^(0+128)
  5527  1784  0008               	return
  5528  1785                     __end_ofPL18:	
  5529  1785                     PL24:	
  5530  1785  1283               	bcf	3,5	;RP0=0, select bank0
  5531  1786  00AB               	movwf	___xxtofl@val
  5532  1787  1683               	bsf	3,5	;RP0=1, select bank1
  5533  1788  084A               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  5534  1789  1283               	bcf	3,5	;RP0=0, select bank0
  5535  178A  00AC               	movwf	___xxtofl@val+1
  5536  178B  3000               	movlw	0
  5537  178C  01AD               	clrf	___xxtofl@val+2
  5538  178D  01AE               	clrf	___xxtofl@val+3
  5539  178E  0008               	return
  5540  178F                     __end_ofPL24:	
  5541  178F                     PL28:	
  5542  178F  0858               	movf	?___flmul+3,w
  5543  1790  00C0               	movwf	___fladd@a+3
  5544  1791  0857               	movf	?___flmul+2,w
  5545  1792  00BF               	movwf	___fladd@a+2
  5546  1793  0856               	movf	?___flmul+1,w
  5547  1794  00BE               	movwf	___fladd@a+1
  5548  1795  0855               	movf	?___flmul,w
  5549  1796  00BD               	movwf	___fladd@a
  5550  1797  0008               	return
  5551  1798                     __end_ofPL28:	
  5552  1798                     PL32:	
  5553  1798  082E               	movf	?___xxtofl+3,w
  5554  1799  00D0               	movwf	___flsub@a+3
  5555  179A  082D               	movf	?___xxtofl+2,w
  5556  179B  00CF               	movwf	___flsub@a+2
  5557  179C  082C               	movf	?___xxtofl+1,w
  5558  179D  00CE               	movwf	___flsub@a+1
  5559  179E  082B               	movf	?___xxtofl,w
  5560  179F  00CD               	movwf	___flsub@a
  5561  17A0  0008               	return
  5562  17A1                     __end_ofPL32:	
  5563  17A1                     PL34:	
  5564  17A1  0823               	movf	(?___fldiv+3)^(0+128),w
  5565  17A2  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  5566  17A3  0822               	movf	(?___fldiv+2)^(0+128),w
  5567  17A4  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  5568  17A5  0821               	movf	(?___fldiv+1)^(0+128),w
  5569  17A6  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  5570  17A7  0820               	movf	?___fldiv^(0+128),w
  5571  17A8  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  5572  17A9  0008               	return
  5573  17AA                     __end_ofPL34:	
  5574  17AA                     PL48:	
  5575  17AA  082E               	movf	?___xxtofl+3,w
  5576  17AB  00DC               	movwf	___flmul@a+3
  5577  17AC  082D               	movf	?___xxtofl+2,w
  5578  17AD  00DB               	movwf	___flmul@a+2
  5579  17AE  082C               	movf	?___xxtofl+1,w
  5580  17AF  00DA               	movwf	___flmul@a+1
  5581  17B0  082B               	movf	?___xxtofl,w
  5582  17B1  00D9               	movwf	___flmul@a
  5583  17B2  0008               	return
  5584  17B3                     __end_ofPL48:	
  5585  17B3                     PL50:	
  5586  17B3  1839               	btfsc	___fladd@b,0
  5587  17B4  17CC               	bsf	___fladd@grs,7
  5588  17B5  0D3C               	rlf	___fladd@b+3,w
  5589  17B6  0CBC               	rrf	___fladd@b+3,f
  5590  17B7  0CBB               	rrf	___fladd@b+2,f
  5591  17B8  0CBA               	rrf	___fladd@b+1,f
  5592  17B9  0CB9               	rrf	___fladd@b,f
  5593  17BA  0ACB               	incf	___fladd@bexp,f
  5594  17BB  0008               	return
  5595  17BC                     __end_ofPL50:	
  5596  17BC                     PL54:	
  5597  17BC  00AC               	movwf	___xxtofl@val+1
  5598  17BD  3000               	movlw	0
  5599  17BE  1BAC               	btfsc	___xxtofl@val+1,7
  5600  17BF  30FF               	movlw	255
  5601  17C0  00AD               	movwf	___xxtofl@val+2
  5602  17C1  00AE               	movwf	___xxtofl@val+3
  5603  17C2  3401               	retlw	1
  5604  17C3                     __end_ofPL54:	
  5605  17C3                     PL62:	
  5606  17C3  1683               	bsf	3,5	;RP0=1, select bank1
  5607  17C4  01B0               	clrf	?_log^(0+128)
  5608  17C5  01B1               	clrf	(?_log+1)^(0+128)
  5609  17C6  01B2               	clrf	(?_log+2)^(0+128)
  5610  17C7  01B3               	clrf	(?_log+3)^(0+128)
  5611  17C8  0008               	return
  5612  17C9                     __end_ofPL62:	
  5613  17C9                     PL66:	
  5614  17C9  1003               	clrc
  5615  17CA  0CB8               	rrf	___xxtofl@arg+3,f
  5616  17CB  0CB7               	rrf	___xxtofl@arg+2,f
  5617  17CC  0CB6               	rrf	___xxtofl@arg+1,f
  5618  17CD  0CB5               	rrf	___xxtofl@arg,f
  5619  17CE  0008               	return
  5620  17CF                     __end_ofPL66:	
  5621  17CF                     PL68:	
  5622  17CF  01B9               	clrf	?___fladd
  5623  17D0  01BA               	clrf	?___fladd+1
  5624  17D1  01BB               	clrf	?___fladd+2
  5625  17D2  01BC               	clrf	?___fladd+3
  5626  17D3  0008               	return
  5627  17D4                     __end_ofPL68:	
  5628  17D4                     __ptext3:	
  5629 ;; *************** function _my_delay_ms *****************
  5630 ;; Defined at:
  5631 ;;		line 5 in file "my_delay.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  time            4    0[BANK0 ] long 
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  i               4    6[BANK0 ] long 
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      void 
  5638 ;; Registers used:
  5639 ;;		wreg, status,2, status,0, btemp+1
  5640 ;; Tracked objects:
  5641 ;;		On entry : 300/0
  5642 ;;		On exit  : 300/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5645 ;;      Params:         0       4       0       0       0
  5646 ;;      Locals:         0       4       0       0       0
  5647 ;;      Temps:          0       2       0       0       0
  5648 ;;      Totals:         0      10       0       0       0
  5649 ;;Total ram usage:       10 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    1
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		_mediatemperaturaNTC
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           
  5660                           ;psect for function _my_delay_ms
  5661  17D4                     _my_delay_ms:	
  5662                           
  5663                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5664                           
  5665                           ;incstack = 0
  5666                           ; Regs used in _my_delay_ms: [wreg+status,2+status,0+btemp+1]
  5667  17D4  01A6               	clrf	my_delay_ms@i
  5668  17D5  01A7               	clrf	my_delay_ms@i+1
  5669  17D6  01A8               	clrf	my_delay_ms@i+2
  5670  17D7  01A9               	clrf	my_delay_ms@i+3
  5671  17D8                     l5206:	
  5672  17D8  0829               	movf	my_delay_ms@i+3,w
  5673  17D9  3A80               	xorlw	128
  5674  17DA  00FF               	movwf	127
  5675  17DB  0823               	movf	my_delay_ms@time+3,w
  5676  17DC  3A80               	xorlw	128
  5677  17DD  027F               	subwf	127,w
  5678  17DE  1D03               	skipz
  5679  17DF  2FEA               	goto	u4453
  5680  17E0  0822               	movf	my_delay_ms@time+2,w
  5681  17E1  0228               	subwf	my_delay_ms@i+2,w
  5682  17E2  1D03               	skipz
  5683  17E3  2FEA               	goto	u4453
  5684  17E4  0821               	movf	my_delay_ms@time+1,w
  5685  17E5  0227               	subwf	my_delay_ms@i+1,w
  5686  17E6  1D03               	skipz
  5687  17E7  2FEA               	goto	u4453
  5688  17E8  0820               	movf	my_delay_ms@time,w
  5689  17E9  0226               	subwf	my_delay_ms@i,w
  5690  17EA                     u4453:	
  5691  17EA  1803               	btfsc	3,0
  5692  17EB  0008               	return
  5693                           
  5694                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5695  17EC  3003               	movlw	3
  5696  17ED  1283               	bcf	3,5	;RP0=0, select bank0
  5697  17EE  1303               	bcf	3,6	;RP1=0, select bank0
  5698  17EF  00A5               	movwf	??_my_delay_ms+1
  5699  17F0  3097               	movlw	151
  5700  17F1  00A4               	movwf	??_my_delay_ms
  5701  17F2                     u6557:	
  5702  17F2  0BA4               	decfsz	??_my_delay_ms,f
  5703  17F3  2FF2               	goto	u6557
  5704  17F4  0BA5               	decfsz	??_my_delay_ms+1,f
  5705  17F5  2FF2               	goto	u6557
  5706                           
  5707                           ;my_delay.c: 10:             }
  5708  17F6  1283               	bcf	3,5	;RP0=0, select bank0
  5709  17F7  1303               	bcf	3,6	;RP1=0, select bank0
  5710  17F8  0AA6               	incf	my_delay_ms@i,f
  5711  17F9  1903               	skipnz
  5712  17FA  0AA7               	incf	my_delay_ms@i+1,f
  5713  17FB  1903               	skipnz
  5714  17FC  0AA8               	incf	my_delay_ms@i+2,f
  5715  17FD  1903               	skipnz
  5716  17FE  0AA9               	incf	my_delay_ms@i+3,f
  5717  17FF  2FD8               	goto	l5206
  5718  1800                     __end_of_my_delay_ms:	
  5719                           
  5720                           	psect	text7
  5721  072E                     __ptext7:	
  5722 ;; *************** function _frexp *****************
  5723 ;; Defined at:
  5724 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\frexp.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  value           4   12[BANK0 ] int 
  5727 ;;  eptr            1   16[BANK0 ] PTR int 
  5728 ;;		 -> log@exponent(2), 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;		None
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  4   12[BANK0 ] PTR int 
  5733 ;; Registers used:
  5734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5735 ;; Tracked objects:
  5736 ;;		On entry : 300/0
  5737 ;;		On exit  : B00/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5740 ;;      Params:         0       5       0       0       0
  5741 ;;      Locals:         0       0       0       0       0
  5742 ;;      Temps:          0       2       0       0       0
  5743 ;;      Totals:         0       7       0       0       0
  5744 ;;Total ram usage:        7 bytes
  5745 ;; Hardware stack levels used:    1
  5746 ;; Hardware stack levels required when called:    2
  5747 ;; This function calls:
  5748 ;;		___fleq
  5749 ;; This function is called by:
  5750 ;;		_log
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           
  5755                           ;psect for function _frexp
  5756  072E                     _frexp:	
  5757                           
  5758                           ;incstack = 0
  5759                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5760  072E  082F               	movf	frexp@value+3,w
  5761  072F  00A3               	movwf	___fleq@ff1+3
  5762  0730  082E               	movf	frexp@value+2,w
  5763  0731  00A2               	movwf	___fleq@ff1+2
  5764  0732  082D               	movf	frexp@value+1,w
  5765  0733  00A1               	movwf	___fleq@ff1+1
  5766  0734  082C               	movf	frexp@value,w
  5767  0735  27AB  120A  118A   	fcall	PL74	;call to abstracted procedure
  5768  0738  2775  120A  118A   	fcall	___fleq
  5769  073B  1C03               	btfss	3,0
  5770  073C  2F48               	goto	l4390
  5771  073D  0830               	movf	frexp@eptr,w
  5772  073E  0084               	movwf	4
  5773  073F  1383               	bcf	3,7	;select IRP bank0
  5774  0740  0180               	clrf	0
  5775  0741  0A84               	incf	4,f
  5776  0742  0180               	clrf	0
  5777  0743  01AC               	clrf	?_frexp
  5778  0744  01AD               	clrf	?_frexp+1
  5779  0745  01AE               	clrf	?_frexp+2
  5780  0746  01AF               	clrf	?_frexp+3
  5781  0747  0008               	return
  5782  0748                     l4390:	
  5783  0748  082F               	movf	frexp@value+3,w
  5784  0749  397F               	andlw	127
  5785  074A  00B1               	movwf	??_frexp
  5786  074B  01B2               	clrf	??_frexp+1
  5787  074C  1003               	clrc
  5788  074D  0DB1               	rlf	??_frexp,f
  5789  074E  0DB2               	rlf	??_frexp+1,f
  5790  074F  0830               	movf	frexp@eptr,w
  5791  0750  0084               	movwf	4
  5792  0751  0831               	movf	??_frexp,w
  5793  0752  1383               	bcf	3,7	;select IRP bank0
  5794  0753  0080               	movwf	0
  5795  0754  0A84               	incf	4,f
  5796  0755  0832               	movf	??_frexp+1,w
  5797  0756  0080               	movwf	0
  5798  0757  0D2E               	rlf	frexp@value+2,w
  5799  0758  0D2E               	rlf	frexp@value+2,w
  5800  0759  3901               	andlw	1
  5801  075A  00B1               	movwf	??_frexp
  5802  075B  01B2               	clrf	??_frexp+1
  5803  075C  0830               	movf	frexp@eptr,w
  5804  075D  0084               	movwf	4
  5805  075E  0831               	movf	??_frexp,w
  5806  075F  0480               	iorwf	0,f
  5807  0760  0A84               	incf	4,f
  5808  0761  0832               	movf	??_frexp+1,w
  5809  0762  0480               	iorwf	0,f
  5810  0763  0830               	movf	frexp@eptr,w
  5811  0764  0084               	movwf	4
  5812  0765  3082               	movlw	130
  5813  0766  0780               	addwf	0,f
  5814  0767  0F84               	incfsz	4,f
  5815  0768  0800               	movf	0,w
  5816  0769  1803               	skipnc
  5817  076A  0A00               	incf	0,w
  5818  076B  00FF               	movwf	127
  5819  076C  3EFF               	addlw	255
  5820  076D  0080               	movwf	0
  5821  076E  0384               	decf	4,f
  5822  076F  082F               	movf	frexp@value+3,w
  5823  0770  3980               	andlw	-128
  5824  0771  383F               	iorlw	63
  5825  0772  00AF               	movwf	frexp@value+3
  5826  0773  13AE               	bcf	frexp@value+2,7
  5827  0774  0008               	return
  5828  0775                     __end_of_frexp:	
  5829  0775                     __ptext8:	
  5830 ;; *************** function ___fleq *****************
  5831 ;; Defined at:
  5832 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  ff1             4    0[BANK0 ] PTR int 
  5835 ;;  ff2             4    4[BANK0 ] PTR int 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;		None
  5838 ;; Return value:  Size  Location     Type
  5839 ;;		None               void
  5840 ;; Registers used:
  5841 ;;		wreg, status,2, status,0
  5842 ;; Tracked objects:
  5843 ;;		On entry : 300/0
  5844 ;;		On exit  : 300/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5847 ;;      Params:         0       8       0       0       0
  5848 ;;      Locals:         0       0       0       0       0
  5849 ;;      Temps:          0       4       0       0       0
  5850 ;;      Totals:         0      12       0       0       0
  5851 ;;Total ram usage:       12 bytes
  5852 ;; Hardware stack levels used:    1
  5853 ;; Hardware stack levels required when called:    1
  5854 ;; This function calls:
  5855 ;;		Nothing
  5856 ;; This function is called by:
  5857 ;;		_log
  5858 ;;		_frexp
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           
  5863                           ;psect for function ___fleq
  5864  0775                     ___fleq:	
  5865                           
  5866                           ;incstack = 0
  5867                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  5868  0775  3080               	movlw	128
  5869  0776  01A8               	clrf	??___fleq
  5870  0777  01A9               	clrf	??___fleq+1
  5871  0778  0522               	andwf	___fleq@ff1+2,w
  5872  0779  00AA               	movwf	??___fleq+2
  5873  077A  307F               	movlw	127
  5874  077B  0523               	andwf	___fleq@ff1+3,w
  5875  077C  00AB               	movwf	??___fleq+3
  5876  077D  042A               	iorwf	??___fleq+2,w
  5877  077E  0429               	iorwf	??___fleq+1,w
  5878  077F  0428               	iorwf	??___fleq,w
  5879  0780  1D03               	skipz
  5880  0781  2F86               	goto	l3828
  5881  0782  01A0               	clrf	___fleq@ff1
  5882  0783  01A1               	clrf	___fleq@ff1+1
  5883  0784  01A2               	clrf	___fleq@ff1+2
  5884  0785  01A3               	clrf	___fleq@ff1+3
  5885  0786                     l3828:	
  5886  0786  3080               	movlw	128
  5887  0787  01A8               	clrf	??___fleq
  5888  0788  01A9               	clrf	??___fleq+1
  5889  0789  0526               	andwf	___fleq@ff2+2,w
  5890  078A  00AA               	movwf	??___fleq+2
  5891  078B  307F               	movlw	127
  5892  078C  0527               	andwf	___fleq@ff2+3,w
  5893  078D  00AB               	movwf	??___fleq+3
  5894  078E  042A               	iorwf	??___fleq+2,w
  5895  078F  0429               	iorwf	??___fleq+1,w
  5896  0790  0428               	iorwf	??___fleq,w
  5897  0791  1D03               	skipz
  5898  0792  2F97               	goto	l3832
  5899  0793  01A4               	clrf	___fleq@ff2
  5900  0794  01A5               	clrf	___fleq@ff2+1
  5901  0795  01A6               	clrf	___fleq@ff2+2
  5902  0796  01A7               	clrf	___fleq@ff2+3
  5903  0797                     l3832:	
  5904  0797  0827               	movf	___fleq@ff2+3,w
  5905  0798  0623               	xorwf	___fleq@ff1+3,w
  5906  0799  1D03               	skipz
  5907  079A  2FA5               	goto	u2635
  5908  079B  0826               	movf	___fleq@ff2+2,w
  5909  079C  0622               	xorwf	___fleq@ff1+2,w
  5910  079D  1D03               	skipz
  5911  079E  2FA5               	goto	u2635
  5912  079F  0825               	movf	___fleq@ff2+1,w
  5913  07A0  0621               	xorwf	___fleq@ff1+1,w
  5914  07A1  1D03               	skipz
  5915  07A2  2FA5               	goto	u2635
  5916  07A3  0824               	movf	___fleq@ff2,w
  5917  07A4  0620               	xorwf	___fleq@ff1,w
  5918  07A5                     u2635:	
  5919  07A5  1903               	skipnz
  5920  07A6  2FA9               	goto	l3836
  5921  07A7  1003               	clrc
  5922  07A8  0008               	return
  5923  07A9                     l3836:	
  5924  07A9  1403               	setc
  5925  07AA  0008               	return
  5926  07AB                     __end_of___fleq:	
  5927  07AB                     PL74:	
  5928  07AB  00A0               	movwf	___fleq@ff1
  5929  07AC  01A4               	clrf	___fleq@ff2
  5930  07AD  01A5               	clrf	___fleq@ff2+1
  5931  07AE  01A6               	clrf	___fleq@ff2+2
  5932  07AF  01A7               	clrf	___fleq@ff2+3
  5933  07B0  0008               	return
  5934  07B1                     __end_ofPL74:	
  5935                           
  5936                           	psect	text11
  5937  1D15                     __ptext11:	
  5938 ;; *************** function _USART_init *****************
  5939 ;; Defined at:
  5940 ;;		line 18 in file "usart.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  baudrate        4    0[BANK0 ] unsigned long 
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;  i               1    4[BANK0 ] unsigned char 
  5945 ;;  erro            1    0        unsigned char 
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  1    wreg      void 
  5948 ;; Registers used:
  5949 ;;		wreg, status,2, status,0
  5950 ;; Tracked objects:
  5951 ;;		On entry : 300/0
  5952 ;;		On exit  : 300/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5955 ;;      Params:         0       4       0       0       0
  5956 ;;      Locals:         0       1       0       0       0
  5957 ;;      Temps:          0       0       0       0       0
  5958 ;;      Totals:         0       5       0       0       0
  5959 ;;Total ram usage:        5 bytes
  5960 ;; Hardware stack levels used:    1
  5961 ;; Hardware stack levels required when called:    1
  5962 ;; This function calls:
  5963 ;;		Nothing
  5964 ;; This function is called by:
  5965 ;;		_main
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           
  5970                           ;psect for function _USART_init
  5971  1D15                     _USART_init:	
  5972                           
  5973                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  5974                           
  5975                           ;incstack = 0
  5976                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  5977  1D15  304B               	movlw	75
  5978  1D16  0621               	xorwf	USART_init@baudrate+1,w
  5979  1D17  0420               	iorwf	USART_init@baudrate,w
  5980  1D18  0422               	iorwf	USART_init@baudrate+2,w
  5981  1D19  0423               	iorwf	USART_init@baudrate+3,w
  5982  1D1A  1D03               	btfss	3,2
  5983  1D1B  2D26               	goto	l6952
  5984                           
  5985                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  5986  1D1C  1798               	bsf	24,7	;volatile
  5987                           
  5988                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  5989  1D1D  1618               	bsf	24,4	;volatile
  5990                           
  5991                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  5992  1D1E  1683               	bsf	3,5	;RP0=1, select bank1
  5993  1D1F  1518               	bsf	24,2	;volatile
  5994                           
  5995                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  5996  1D20  1218               	bcf	24,4	;volatile
  5997                           
  5998                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  5999  1D21  1318               	bcf	24,6	;volatile
  6000                           
  6001                           ;usart.c: 32:           SPBRG =12;
  6002  1D22  300C               	movlw	12
  6003  1D23  0099               	movwf	25	;volatile
  6004                           
  6005                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  6006  1D24  170B               	bsf	11,6	;volatile
  6007  1D25  2D3F               	goto	L5
  6008  1D26                     l6952:	
  6009                           ;usart.c: 35:           }
  6010                           
  6011                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  6012                           
  6013  1D26  30C2               	movlw	194
  6014  1D27  0621               	xorwf	USART_init@baudrate+1,w
  6015  1D28  1D03               	skipz
  6016  1D29  2D40               	goto	l6972
  6017  1D2A  0322               	decf	USART_init@baudrate+2,w
  6018  1D2B  0420               	iorwf	USART_init@baudrate,w
  6019  1D2C  0423               	iorwf	USART_init@baudrate+3,w
  6020  1D2D  1D03               	btfss	3,2
  6021  1D2E  2D40               	goto	l6972
  6022                           
  6023                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  6024  1D2F  3010               	movlw	16
  6025  1D30  1683               	bsf	3,5	;RP0=1, select bank1
  6026  1D31  0099               	movwf	25	;volatile
  6027                           
  6028                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  6029  1D32  1703               	bsf	3,6	;RP1=1, select bank3
  6030  1D33  1587               	bsf	7,3	;volatile
  6031                           
  6032                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  6033  1D34  1303               	bcf	3,6	;RP1=0, select bank1
  6034  1D35  1518               	bsf	24,2	;volatile
  6035                           
  6036                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  6037  1D36  1283               	bcf	3,5	;RP0=0, select bank0
  6038  1D37  1798               	bsf	24,7	;volatile
  6039                           
  6040                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  6041  1D38  1683               	bsf	3,5	;RP0=1, select bank1
  6042  1D39  1218               	bcf	24,4	;volatile
  6043                           
  6044                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  6045  1D3A  1318               	bcf	24,6	;volatile
  6046                           
  6047                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  6048  1D3B  1283               	bcf	3,5	;RP0=0, select bank0
  6049  1D3C  1618               	bsf	24,4	;volatile
  6050                           
  6051                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  6052  1D3D  170B               	bsf	11,6	;volatile
  6053                           
  6054                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  6055  1D3E  1683               	bsf	3,5	;RP0=1, select bank1
  6056  1D3F                     L5:	
  6057  1D3F  168C               	bsf	12,5	;volatile
  6058  1D40                     l6972:	
  6059                           
  6060                           ;usart.c: 68:      TRISC6= 1;
  6061  1D40  1683               	bsf	3,5	;RP0=1, select bank1
  6062  1D41  1707               	bsf	7,6	;volatile
  6063                           
  6064                           ;usart.c: 69:      TRISC7= 1;
  6065  1D42  1787               	bsf	7,7	;volatile
  6066                           
  6067                           ;usart.c: 71:      CREN=0;
  6068  1D43  1283               	bcf	3,5	;RP0=0, select bank0
  6069  1D44  1218               	bcf	24,4	;volatile
  6070                           
  6071                           ;usart.c: 72:      CREN=1;
  6072  1D45  1618               	bsf	24,4	;volatile
  6073                           
  6074                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  6075  1D46  01A4               	clrf	USART_init@i
  6076  1D47                     l6986:	
  6077  1D47  081A               	movf	26,w	;volatile
  6078  1D48  300F               	movlw	15
  6079  1D49  0AA4               	incf	USART_init@i,f
  6080  1D4A  0224               	subwf	USART_init@i,w
  6081  1D4B  1803               	btfsc	3,0
  6082  1D4C  0008               	return
  6083  1D4D  2D47               	goto	l6986
  6084  1D4E                     __end_of_USART_init:	
  6085                           
  6086                           	psect	text12
  6087  1E33                     __ptext12:	
  6088 ;; *************** function _I2C_Master_Init *****************
  6089 ;; Defined at:
  6090 ;;		line 7 in file "I2C.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;  c               4   13[BANK0 ] const unsigned long 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;		None
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  1    wreg      void 
  6097 ;; Registers used:
  6098 ;;		wreg, status,2, status,0, pclath, cstack
  6099 ;; Tracked objects:
  6100 ;;		On entry : 300/0
  6101 ;;		On exit  : 300/100
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6104 ;;      Params:         0       4       0       0       0
  6105 ;;      Locals:         0       0       0       0       0
  6106 ;;      Temps:          0       4       0       0       0
  6107 ;;      Totals:         0       8       0       0       0
  6108 ;;Total ram usage:        8 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:    2
  6111 ;; This function calls:
  6112 ;;		___lldiv
  6113 ;; This function is called by:
  6114 ;;		_main
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           
  6119                           ;psect for function _I2C_Master_Init
  6120  1E33                     _I2C_Master_Init:	
  6121                           
  6122                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  6123                           
  6124                           ;incstack = 0
  6125                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  6126  1E33  3028               	movlw	40
  6127  1E34  0094               	movwf	20	;volatile
  6128                           
  6129                           ;I2C.c: 11:   SSPCON2 = 0;
  6130  1E35  1683               	bsf	3,5	;RP0=1, select bank1
  6131  1E36  0191               	clrf	17	;volatile
  6132                           
  6133                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  6134  1E37  1283               	bcf	3,5	;RP0=0, select bank0
  6135  1E38  082D               	movf	I2C_Master_Init@c,w
  6136  1E39  00B1               	movwf	??_I2C_Master_Init
  6137  1E3A  082E               	movf	I2C_Master_Init@c+1,w
  6138  1E3B  00B2               	movwf	??_I2C_Master_Init+1
  6139  1E3C  082F               	movf	I2C_Master_Init@c+2,w
  6140  1E3D  00B3               	movwf	??_I2C_Master_Init+2
  6141  1E3E  0830               	movf	I2C_Master_Init@c+3,w
  6142  1E3F  00B4               	movwf	??_I2C_Master_Init+3
  6143  1E40  3002               	movlw	2
  6144  1E41                     u6115:	
  6145  1E41  1003               	clrc
  6146  1E42  0DB1               	rlf	??_I2C_Master_Init,f
  6147  1E43  0DB2               	rlf	??_I2C_Master_Init+1,f
  6148  1E44  0DB3               	rlf	??_I2C_Master_Init+2,f
  6149  1E45  0DB4               	rlf	??_I2C_Master_Init+3,f
  6150  1E46  3EFF               	addlw	-1
  6151  1E47  1D03               	skipz
  6152  1E48  2E41               	goto	u6115
  6153  1E49  0834               	movf	??_I2C_Master_Init+3,w
  6154  1E4A  00A3               	movwf	___lldiv@divisor+3
  6155  1E4B  0833               	movf	??_I2C_Master_Init+2,w
  6156  1E4C  00A2               	movwf	___lldiv@divisor+2
  6157  1E4D  0832               	movf	??_I2C_Master_Init+1,w
  6158  1E4E  00A1               	movwf	___lldiv@divisor+1
  6159  1E4F  0831               	movf	??_I2C_Master_Init,w
  6160  1E50  00A0               	movwf	___lldiv@divisor
  6161  1E51  307A               	movlw	122
  6162  1E52  01A7               	clrf	___lldiv@dividend+3
  6163  1E53  00A6               	movwf	___lldiv@dividend+2
  6164  1E54  3012               	movlw	18
  6165  1E55  00A5               	movwf	___lldiv@dividend+1
  6166  1E56  01A4               	clrf	___lldiv@dividend
  6167  1E57  2660               	fcall	___lldiv
  6168  1E58  0820               	movf	?___lldiv,w
  6169  1E59  3EFF               	addlw	255
  6170  1E5A  1683               	bsf	3,5	;RP0=1, select bank1
  6171  1E5B  0093               	movwf	19	;volatile
  6172                           
  6173                           ;I2C.c: 13:   SSPSTAT = 0;
  6174  1E5C  0194               	clrf	20	;volatile
  6175                           
  6176                           ;I2C.c: 14:   TRISC3 = 1;
  6177  1E5D  1587               	bsf	7,3	;volatile
  6178                           
  6179                           ;I2C.c: 15:   TRISC4 = 1;
  6180  1E5E  1607               	bsf	7,4	;volatile
  6181  1E5F  0008               	return
  6182  1E60                     __end_of_I2C_Master_Init:	
  6183  1E60                     __ptext13:	
  6184 ;; *************** function ___lldiv *****************
  6185 ;; Defined at:
  6186 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;  divisor         4    0[BANK0 ] unsigned long 
  6189 ;;  dividend        4    4[BANK0 ] unsigned long 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;  quotient        4    8[BANK0 ] unsigned long 
  6192 ;;  counter         1   12[BANK0 ] unsigned char 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  4    0[BANK0 ] unsigned long 
  6195 ;; Registers used:
  6196 ;;		wreg, status,2, status,0
  6197 ;; Tracked objects:
  6198 ;;		On entry : 300/0
  6199 ;;		On exit  : 300/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6202 ;;      Params:         0       8       0       0       0
  6203 ;;      Locals:         0       5       0       0       0
  6204 ;;      Temps:          0       0       0       0       0
  6205 ;;      Totals:         0      13       0       0       0
  6206 ;;Total ram usage:       13 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    1
  6209 ;; This function calls:
  6210 ;;		Nothing
  6211 ;; This function is called by:
  6212 ;;		_I2C_Master_Init
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           
  6217                           ;psect for function ___lldiv
  6218  1E60                     ___lldiv:	
  6219                           
  6220                           ;incstack = 0
  6221                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6222  1E60  01A8               	clrf	___lldiv@quotient
  6223  1E61  01A9               	clrf	___lldiv@quotient+1
  6224  1E62  01AA               	clrf	___lldiv@quotient+2
  6225  1E63  01AB               	clrf	___lldiv@quotient+3
  6226  1E64  0823               	movf	___lldiv@divisor+3,w
  6227  1E65  0422               	iorwf	___lldiv@divisor+2,w
  6228  1E66  0421               	iorwf	___lldiv@divisor+1,w
  6229  1E67  0420               	iorwf	___lldiv@divisor,w
  6230  1E68  1903               	skipnz
  6231  1E69  2E9F               	goto	l6918
  6232  1E6A  01AC               	clrf	___lldiv@counter
  6233  1E6B                     L6:	
  6234  1E6B  0AAC               	incf	___lldiv@counter,f
  6235  1E6C  1BA3               	btfsc	___lldiv@divisor+3,7
  6236  1E6D  2E74               	goto	l6906
  6237  1E6E  1003               	clrc
  6238  1E6F  0DA0               	rlf	___lldiv@divisor,f
  6239  1E70  0DA1               	rlf	___lldiv@divisor+1,f
  6240  1E71  0DA2               	rlf	___lldiv@divisor+2,f
  6241  1E72  0DA3               	rlf	___lldiv@divisor+3,f
  6242  1E73  2E6B               	goto	L6
  6243  1E74                     l6906:	
  6244  1E74  1003               	clrc
  6245  1E75  0DA8               	rlf	___lldiv@quotient,f
  6246  1E76  0DA9               	rlf	___lldiv@quotient+1,f
  6247  1E77  0DAA               	rlf	___lldiv@quotient+2,f
  6248  1E78  0DAB               	rlf	___lldiv@quotient+3,f
  6249  1E79  0823               	movf	___lldiv@divisor+3,w
  6250  1E7A  0227               	subwf	___lldiv@dividend+3,w
  6251  1E7B  1D03               	skipz
  6252  1E7C  2E87               	goto	u6095
  6253  1E7D  0822               	movf	___lldiv@divisor+2,w
  6254  1E7E  0226               	subwf	___lldiv@dividend+2,w
  6255  1E7F  1D03               	skipz
  6256  1E80  2E87               	goto	u6095
  6257  1E81  0821               	movf	___lldiv@divisor+1,w
  6258  1E82  0225               	subwf	___lldiv@dividend+1,w
  6259  1E83  1D03               	skipz
  6260  1E84  2E87               	goto	u6095
  6261  1E85  0820               	movf	___lldiv@divisor,w
  6262  1E86  0224               	subwf	___lldiv@dividend,w
  6263  1E87                     u6095:	
  6264  1E87  1C03               	skipc
  6265  1E88  2E99               	goto	L7
  6266  1E89  0820               	movf	___lldiv@divisor,w
  6267  1E8A  02A4               	subwf	___lldiv@dividend,f
  6268  1E8B  0821               	movf	___lldiv@divisor+1,w
  6269  1E8C  1C03               	skipc
  6270  1E8D  0F21               	incfsz	___lldiv@divisor+1,w
  6271  1E8E  02A5               	subwf	___lldiv@dividend+1,f
  6272  1E8F  0822               	movf	___lldiv@divisor+2,w
  6273  1E90  1C03               	skipc
  6274  1E91  0F22               	incfsz	___lldiv@divisor+2,w
  6275  1E92  02A6               	subwf	___lldiv@dividend+2,f
  6276  1E93  0823               	movf	___lldiv@divisor+3,w
  6277  1E94  1C03               	skipc
  6278  1E95  0F23               	incfsz	___lldiv@divisor+3,w
  6279  1E96  02A7               	subwf	___lldiv@dividend+3,f
  6280  1E97  1428               	bsf	___lldiv@quotient,0
  6281  1E98  1003               	clrc
  6282  1E99                     L7:	
  6283  1E99  0CA3               	rrf	___lldiv@divisor+3,f
  6284  1E9A  0CA2               	rrf	___lldiv@divisor+2,f
  6285  1E9B  0CA1               	rrf	___lldiv@divisor+1,f
  6286  1E9C  0CA0               	rrf	___lldiv@divisor,f
  6287  1E9D  0BAC               	decfsz	___lldiv@counter,f
  6288  1E9E  2E74               	goto	l6906
  6289  1E9F                     l6918:	
  6290  1E9F  082B               	movf	___lldiv@quotient+3,w
  6291  1EA0  00A3               	movwf	?___lldiv+3
  6292  1EA1  082A               	movf	___lldiv@quotient+2,w
  6293  1EA2  00A2               	movwf	?___lldiv+2
  6294  1EA3  0829               	movf	___lldiv@quotient+1,w
  6295  1EA4  00A1               	movwf	?___lldiv+1
  6296  1EA5  0828               	movf	___lldiv@quotient,w
  6297  1EA6  00A0               	movwf	?___lldiv
  6298  1EA7  0008               	return
  6299  1EA8                     __end_of___lldiv:	
  6300                           
  6301                           	psect	text15
  6302  1C50                     __ptext15:	
  6303 ;; *************** function _strcpy *****************
  6304 ;; Defined at:
  6305 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;  to              1    wreg     PTR unsigned char 
  6308 ;;		 -> texto(16), 
  6309 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  6310 ;;		 -> STR_2(1), 
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;  to              1    2[BANK0 ] PTR unsigned char 
  6313 ;;		 -> texto(16), 
  6314 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  6315 ;;		 -> texto(16), 
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  1    wreg      PTR unsigned char 
  6318 ;; Registers used:
  6319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6320 ;; Tracked objects:
  6321 ;;		On entry : B00/0
  6322 ;;		On exit  : B00/800
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6325 ;;      Params:         0       1       0       0       0
  6326 ;;      Locals:         0       2       0       0       0
  6327 ;;      Temps:          0       1       0       0       0
  6328 ;;      Totals:         0       4       0       0       0
  6329 ;;Total ram usage:        4 bytes
  6330 ;; Hardware stack levels used:    2
  6331 ;; Hardware stack levels required when called:    1
  6332 ;; This function calls:
  6333 ;;		Nothing
  6334 ;; This function is called by:
  6335 ;;		_Decodify_Command
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           
  6340                           ;psect for function _strcpy
  6341  1C50                     _strcpy:	
  6342                           
  6343                           ;incstack = 0
  6344                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  6345                           ;strcpy@to stored from wreg
  6346  1C50  00A2               	movwf	strcpy@to
  6347  1C51  00A3               	movwf	strcpy@cp
  6348  1C52                     l5174:	
  6349  1C52  0820               	movf	strcpy@from,w
  6350  1C53  0084               	movwf	4
  6351  1C54  160A  158A  200A  160A  158A  	fcall	stringdir
  6352  1C59  00A1               	movwf	??_strcpy
  6353  1C5A  0823               	movf	strcpy@cp,w
  6354  1C5B  0084               	movwf	4
  6355  1C5C  0821               	movf	??_strcpy,w
  6356  1C5D  1783               	bsf	3,7	;select IRP bank2
  6357  1C5E  0080               	movwf	0
  6358  1C5F  0800               	movf	0,w
  6359  1C60  1903               	btfsc	3,2
  6360  1C61  0008               	return
  6361  1C62  0AA3               	incf	strcpy@cp,f
  6362  1C63  0AA0               	incf	strcpy@from,f
  6363  1C64  2C52               	goto	l5174
  6364  1C65                     __end_of_strcpy:	
  6365                           
  6366                           	psect	text18
  6367  1DC0                     __ptext18:	
  6368 ;; *************** function _utoa *****************
  6369 ;; Defined at:
  6370 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  buf             1    wreg     PTR unsigned char 
  6373 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6374 ;;  val             2    7[BANK0 ] unsigned int 
  6375 ;;  base            2    9[BANK0 ] int 
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  6378 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6379 ;;  v               2   11[BANK0 ] unsigned int 
  6380 ;;  c               1   13[BANK0 ] unsigned char 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      PTR unsigned char 
  6383 ;; Registers used:
  6384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6385 ;; Tracked objects:
  6386 ;;		On entry : 300/0
  6387 ;;		On exit  : B00/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6390 ;;      Params:         0       4       0       0       0
  6391 ;;      Locals:         0       4       0       0       0
  6392 ;;      Temps:          0       0       0       0       0
  6393 ;;      Totals:         0       8       0       0       0
  6394 ;;Total ram usage:        8 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; Hardware stack levels required when called:    2
  6397 ;; This function calls:
  6398 ;;		___lwdiv
  6399 ;;		___lwmod
  6400 ;; This function is called by:
  6401 ;;		_itoa
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           
  6406                           ;psect for function _utoa
  6407  1DC0                     _utoa:	
  6408                           
  6409                           ;incstack = 0
  6410                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6411                           ;utoa@buf stored from wreg
  6412  1DC0  00AE               	movwf	utoa@buf
  6413  1DC1  0828               	movf	utoa@val+1,w
  6414  1DC2  00AC               	movwf	utoa@v+1
  6415  1DC3  0827               	movf	utoa@val,w
  6416  1DC4  00AB               	movwf	utoa@v
  6417  1DC5                     l6516:	
  6418  1DC5  082A               	movf	utoa@base+1,w
  6419  1DC6  00A1               	movwf	___lwdiv@divisor+1
  6420  1DC7  0829               	movf	utoa@base,w
  6421  1DC8  00A0               	movwf	___lwdiv@divisor
  6422  1DC9  082C               	movf	utoa@v+1,w
  6423  1DCA  00A3               	movwf	___lwdiv@dividend+1
  6424  1DCB  082B               	movf	utoa@v,w
  6425  1DCC  00A2               	movwf	___lwdiv@dividend
  6426  1DCD  160A  118A  2654  160A  158A  	fcall	___lwdiv
  6427  1DD2  0821               	movf	?___lwdiv+1,w
  6428  1DD3  00AC               	movwf	utoa@v+1
  6429  1DD4  0820               	movf	?___lwdiv,w
  6430  1DD5  00AB               	movwf	utoa@v
  6431  1DD6  0AAE               	incf	utoa@buf,f
  6432  1DD7  042C               	iorwf	utoa@v+1,w
  6433  1DD8  1D03               	btfss	3,2
  6434  1DD9  2DC5               	goto	l6516
  6435  1DDA  082E               	movf	utoa@buf,w
  6436  1DDB  0084               	movwf	4
  6437  1DDC  1383               	bcf	3,7	;select IRP bank0
  6438  1DDD  0180               	clrf	0
  6439  1DDE  03AE               	decf	utoa@buf,f
  6440  1DDF                     l6526:	
  6441  1DDF  082A               	movf	utoa@base+1,w
  6442  1DE0  00A1               	movwf	___lwmod@divisor+1
  6443  1DE1  0829               	movf	utoa@base,w
  6444  1DE2  00A0               	movwf	___lwmod@divisor
  6445  1DE3  0828               	movf	utoa@val+1,w
  6446  1DE4  00A3               	movwf	___lwmod@dividend+1
  6447  1DE5  0827               	movf	utoa@val,w
  6448  1DE6  00A2               	movwf	___lwmod@dividend
  6449  1DE7  260F               	fcall	___lwmod
  6450  1DE8  0820               	movf	?___lwmod,w
  6451  1DE9  00AD               	movwf	utoa@c
  6452  1DEA  082A               	movf	utoa@base+1,w
  6453  1DEB  00A1               	movwf	___lwdiv@divisor+1
  6454  1DEC  0829               	movf	utoa@base,w
  6455  1DED  00A0               	movwf	___lwdiv@divisor
  6456  1DEE  0828               	movf	utoa@val+1,w
  6457  1DEF  00A3               	movwf	___lwdiv@dividend+1
  6458  1DF0  0827               	movf	utoa@val,w
  6459  1DF1  00A2               	movwf	___lwdiv@dividend
  6460  1DF2  160A  118A  2654  160A  158A  	fcall	___lwdiv
  6461  1DF7  0821               	movf	?___lwdiv+1,w
  6462  1DF8  00A8               	movwf	utoa@val+1
  6463  1DF9  0820               	movf	?___lwdiv,w
  6464  1DFA  00A7               	movwf	utoa@val
  6465  1DFB  300A               	movlw	10
  6466  1DFC  022D               	subwf	utoa@c,w
  6467  1DFD  1C03               	skipc
  6468  1DFE  2E01               	goto	l1451
  6469  1DFF  3007               	movlw	7
  6470  1E00  07AD               	addwf	utoa@c,f
  6471  1E01                     l1451:	
  6472  1E01  3030               	movlw	48
  6473  1E02  07AD               	addwf	utoa@c,f
  6474  1E03  082E               	movf	utoa@buf,w
  6475  1E04  0084               	movwf	4
  6476  1E05  082D               	movf	utoa@c,w
  6477  1E06  1383               	bcf	3,7	;select IRP bank0
  6478  1E07  0080               	movwf	0
  6479  1E08  03AE               	decf	utoa@buf,f
  6480  1E09  0827               	movf	utoa@val,w
  6481  1E0A  0428               	iorwf	utoa@val+1,w
  6482  1E0B  1D03               	btfss	3,2
  6483  1E0C  2DDF               	goto	l6526
  6484                           
  6485                           ;	Return value of _utoa is never used
  6486  1E0D  0AAE               	incf	utoa@buf,f
  6487  1E0E  0008               	return
  6488  1E0F                     __end_of_utoa:	
  6489  1E0F                     __ptext19:	
  6490 ;; *************** function ___lwmod *****************
  6491 ;; Defined at:
  6492 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  divisor         2    0[BANK0 ] unsigned int 
  6495 ;;  dividend        2    2[BANK0 ] unsigned int 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  counter         1    4[BANK0 ] unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  2    0[BANK0 ] unsigned int 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2, status,0
  6502 ;; Tracked objects:
  6503 ;;		On entry : 300/0
  6504 ;;		On exit  : 300/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6507 ;;      Params:         0       4       0       0       0
  6508 ;;      Locals:         0       1       0       0       0
  6509 ;;      Temps:          0       0       0       0       0
  6510 ;;      Totals:         0       5       0       0       0
  6511 ;;Total ram usage:        5 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:    1
  6514 ;; This function calls:
  6515 ;;		Nothing
  6516 ;; This function is called by:
  6517 ;;		_utoa
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           
  6522                           ;psect for function ___lwmod
  6523  1E0F                     ___lwmod:	
  6524                           
  6525                           ;incstack = 0
  6526                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6527  1E0F  0820               	movf	___lwmod@divisor,w
  6528  1E10  0421               	iorwf	___lwmod@divisor+1,w
  6529  1E11  1903               	btfsc	3,2
  6530  1E12  2E2E               	goto	l6294
  6531  1E13  01A4               	clrf	___lwmod@counter
  6532  1E14                     L12:	
  6533  1E14  0AA4               	incf	___lwmod@counter,f
  6534  1E15  1BA1               	btfsc	___lwmod@divisor+1,7
  6535  1E16  2E1B               	goto	l6286
  6536  1E17  1003               	clrc
  6537  1E18  0DA0               	rlf	___lwmod@divisor,f
  6538  1E19  0DA1               	rlf	___lwmod@divisor+1,f
  6539  1E1A  2E14               	goto	L12
  6540  1E1B                     l6286:	
  6541  1E1B  0821               	movf	___lwmod@divisor+1,w
  6542  1E1C  0223               	subwf	___lwmod@dividend+1,w
  6543  1E1D  1D03               	skipz
  6544  1E1E  2E21               	goto	u5615
  6545  1E1F  0820               	movf	___lwmod@divisor,w
  6546  1E20  0222               	subwf	___lwmod@dividend,w
  6547  1E21                     u5615:	
  6548  1E21  1C03               	skipc
  6549  1E22  2E2A               	goto	L13
  6550  1E23  0820               	movf	___lwmod@divisor,w
  6551  1E24  02A2               	subwf	___lwmod@dividend,f
  6552  1E25  0821               	movf	___lwmod@divisor+1,w
  6553  1E26  1C03               	skipc
  6554  1E27  03A3               	decf	___lwmod@dividend+1,f
  6555  1E28  02A3               	subwf	___lwmod@dividend+1,f
  6556  1E29  1003               	clrc
  6557  1E2A                     L13:	
  6558  1E2A  0CA1               	rrf	___lwmod@divisor+1,f
  6559  1E2B  0CA0               	rrf	___lwmod@divisor,f
  6560  1E2C  0BA4               	decfsz	___lwmod@counter,f
  6561  1E2D  2E1B               	goto	l6286
  6562  1E2E                     l6294:	
  6563  1E2E  0823               	movf	___lwmod@dividend+1,w
  6564  1E2F  00A1               	movwf	?___lwmod+1
  6565  1E30  0822               	movf	___lwmod@dividend,w
  6566  1E31  00A0               	movwf	?___lwmod
  6567  1E32  0008               	return
  6568  1E33                     __end_of___lwmod:	
  6569                           
  6570                           	psect	text20
  6571  07B1                     __ptext20:	
  6572 ;; *************** function _USART_to_Protocol *****************
  6573 ;; Defined at:
  6574 ;;		line 77 in file "usart.c"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;  usart_protoc    1    wreg     PTR struct .
  6577 ;;		 -> usart_protocol(16), 
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  6580 ;;		 -> usart_protocol(16), 
  6581 ;;  i               2    2[BANK0 ] int 
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6586 ;; Tracked objects:
  6587 ;;		On entry : 300/300
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6591 ;;      Params:         0       0       0       0       0
  6592 ;;      Locals:         0       3       0       0       0
  6593 ;;      Temps:          0       2       0       0       0
  6594 ;;      Totals:         0       5       0       0       0
  6595 ;;Total ram usage:        5 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    1
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_Decodify_Command
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           
  6606                           ;psect for function _USART_to_Protocol
  6607  07B1                     _USART_to_Protocol:	
  6608                           
  6609                           ;incstack = 0
  6610                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  6611                           ;USART_to_Protocol@usart_protocol stored from wreg
  6612  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  6613  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  6614  07B3  00A4               	movwf	USART_to_Protocol@usart_protocol
  6615                           
  6616                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  6617  07B4  0084               	movwf	4
  6618  07B5  1703               	bsf	3,6	;RP1=1, select bank2
  6619  07B6  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  6620  07B7  1783               	bsf	3,7	;select IRP bank2
  6621  07B8  0080               	movwf	0
  6622  07B9  0A84               	incf	4,f
  6623  07BA  0810               	movf	_usart_buffer^(0+256),w	;volatile
  6624  07BB  0080               	movwf	0
  6625                           
  6626                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  6627  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  6628  07BD  0824               	movf	USART_to_Protocol@usart_protocol,w
  6629  07BE  3E02               	addlw	2
  6630  07BF  0084               	movwf	4
  6631  07C0  1703               	bsf	3,6	;RP1=1, select bank2
  6632  07C1  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  6633  07C2  0080               	movwf	0
  6634                           
  6635                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  6636  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  6637  07C4  0824               	movf	USART_to_Protocol@usart_protocol,w
  6638  07C5  3E03               	addlw	3
  6639  07C6  0084               	movwf	4
  6640  07C7  1703               	bsf	3,6	;RP1=1, select bank2
  6641  07C8  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  6642  07C9  0080               	movwf	0
  6643                           
  6644                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  6645  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  6646  07CB  0824               	movf	USART_to_Protocol@usart_protocol,w
  6647  07CC  3E04               	addlw	4
  6648  07CD  0084               	movwf	4
  6649  07CE  1703               	bsf	3,6	;RP1=1, select bank2
  6650  07CF  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  6651  07D0  0080               	movwf	0
  6652                           
  6653                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  6654  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  6655  07D2  0824               	movf	USART_to_Protocol@usart_protocol,w
  6656  07D3  3E05               	addlw	5
  6657  07D4  0084               	movwf	4
  6658  07D5  1703               	bsf	3,6	;RP1=1, select bank2
  6659  07D6  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  6660  07D7  0080               	movwf	0
  6661                           
  6662                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  6663  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  6664  07D9  01A2               	clrf	USART_to_Protocol@i
  6665  07DA  01A3               	clrf	USART_to_Protocol@i+1
  6666  07DB                     l4912:	
  6667  07DB  0824               	movf	USART_to_Protocol@usart_protocol,w
  6668  07DC  3E05               	addlw	5
  6669  07DD  0084               	movwf	4
  6670  07DE  0823               	movf	USART_to_Protocol@i+1,w
  6671  07DF  3A80               	xorlw	128
  6672  07E0  00A0               	movwf	??_USART_to_Protocol
  6673  07E1  3080               	movlw	128
  6674  07E2  0220               	subwf	??_USART_to_Protocol,w
  6675  07E3  1D03               	skipz
  6676  07E4  2FE7               	goto	u4215
  6677  07E5  0800               	movf	0,w
  6678  07E6  0222               	subwf	USART_to_Protocol@i,w
  6679  07E7                     u4215:	
  6680  07E7  1803               	btfsc	3,0
  6681  07E8  0008               	return
  6682                           
  6683                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  6684  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  6685  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  6686  07EB  0822               	movf	USART_to_Protocol@i,w
  6687  07EC  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  6688  07ED  0084               	movwf	4
  6689  07EE  1783               	bsf	3,7	;select IRP bank2
  6690  07EF  0800               	movf	0,w
  6691  07F0  00A0               	movwf	??_USART_to_Protocol
  6692  07F1  0822               	movf	USART_to_Protocol@i,w
  6693  07F2  0724               	addwf	USART_to_Protocol@usart_protocol,w
  6694  07F3  00A1               	movwf	??_USART_to_Protocol+1
  6695  07F4  3E06               	addlw	6
  6696  07F5  0084               	movwf	4
  6697  07F6  0820               	movf	??_USART_to_Protocol,w
  6698  07F7  0080               	movwf	0
  6699  07F8  0AA2               	incf	USART_to_Protocol@i,f
  6700  07F9  1903               	skipnz
  6701  07FA  0AA3               	incf	USART_to_Protocol@i+1,f
  6702  07FB  2FDB               	goto	l4912
  6703  07FC                     __end_of_USART_to_Protocol:	
  6704                           
  6705                           	psect	text21
  6706  1C98                     __ptext21:	
  6707 ;; *************** function _USART_put_buffer *****************
  6708 ;; Defined at:
  6709 ;;		line 99 in file "usart.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;  vetor           1    wreg     PTR unsigned char 
  6712 ;;		 -> buffer(32), 
  6713 ;;  size            2    1[BANK0 ] unsigned int 
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;  vetor           1    7[BANK0 ] PTR unsigned char 
  6716 ;;		 -> buffer(32), 
  6717 ;;  ptr             1    6[BANK0 ] PTR unsigned char 
  6718 ;;		 -> USART_put_buffer@vetor(1), 
  6719 ;;  loop            1    5[BANK0 ] unsigned char 
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  1    wreg      void 
  6722 ;; Registers used:
  6723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6724 ;; Tracked objects:
  6725 ;;		On entry : 300/0
  6726 ;;		On exit  : 300/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6729 ;;      Params:         0       2       0       0       0
  6730 ;;      Locals:         0       3       0       0       0
  6731 ;;      Temps:          0       2       0       0       0
  6732 ;;      Totals:         0       7       0       0       0
  6733 ;;Total ram usage:        7 bytes
  6734 ;; Hardware stack levels used:    1
  6735 ;; Hardware stack levels required when called:    2
  6736 ;; This function calls:
  6737 ;;		_USART_putc
  6738 ;; This function is called by:
  6739 ;;		_Decodify_Command
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           
  6744                           ;psect for function _USART_put_buffer
  6745  1C98                     _USART_put_buffer:	
  6746                           
  6747                           ;incstack = 0
  6748                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6749                           ;USART_put_buffer@vetor stored from wreg
  6750  1C98  00A7               	movwf	USART_put_buffer@vetor
  6751  1C99  3027               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  6752                           
  6753                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  6754  1C9A  01A5               	clrf	USART_put_buffer@loop
  6755                           
  6756                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  6757  1C9B  00A6               	movwf	USART_put_buffer@ptr
  6758  1C9C                     l4970:	
  6759                           ;usart.c: 105:     while(loop<size)
  6760                           
  6761                           
  6762                           ;usart.c: 105:     while(loop<size)
  6763  1C9C  0825               	movf	USART_put_buffer@loop,w
  6764  1C9D  00A3               	movwf	??_USART_put_buffer
  6765  1C9E  01A4               	clrf	??_USART_put_buffer+1
  6766  1C9F  0822               	movf	USART_put_buffer@size+1,w
  6767  1CA0  0224               	subwf	??_USART_put_buffer+1,w
  6768  1CA1  1D03               	skipz
  6769  1CA2  2CA5               	goto	u4265
  6770  1CA3  0821               	movf	USART_put_buffer@size,w
  6771  1CA4  0223               	subwf	??_USART_put_buffer,w
  6772  1CA5                     u4265:	
  6773  1CA5  1803               	btfsc	3,0
  6774  1CA6  0008               	return
  6775                           
  6776                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  6777  1CA7  0826               	movf	USART_put_buffer@ptr,w
  6778  1CA8  0084               	movwf	4
  6779  1CA9  1383               	bcf	3,7	;select IRP bank0
  6780  1CAA  0800               	movf	0,w
  6781  1CAB  120A  158A  23DD  160A  158A  	fcall	_USART_putc
  6782                           
  6783                           ;usart.c: 108:         ptr++;
  6784  1CB0  1283               	bcf	3,5	;RP0=0, select bank0
  6785  1CB1  0AA6               	incf	USART_put_buffer@ptr,f
  6786                           
  6787                           ;usart.c: 109:         loop++;
  6788  1CB2  0AA5               	incf	USART_put_buffer@loop,f
  6789  1CB3  2C9C               	goto	l4970
  6790  1CB4                     __end_of_USART_put_buffer:	
  6791                           
  6792                           	psect	text23
  6793  1CE1                     __ptext23:	
  6794 ;; *************** function _Send_Reply_OK *****************
  6795 ;; Defined at:
  6796 ;;		line 658 in file "SlaveLiofilizadorVer1.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;		None
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;		None
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  1    wreg      void 
  6803 ;; Registers used:
  6804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6805 ;; Tracked objects:
  6806 ;;		On entry : 100/100
  6807 ;;		On exit  : 300/100
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6810 ;;      Params:         0       0       0       0       0
  6811 ;;      Locals:         0       0       0       0       0
  6812 ;;      Temps:          0       0       0       0       0
  6813 ;;      Totals:         0       0       0       0       0
  6814 ;;Total ram usage:        0 bytes
  6815 ;; Hardware stack levels used:    1
  6816 ;; Hardware stack levels required when called:    3
  6817 ;; This function calls:
  6818 ;;		_USART_put_string
  6819 ;; This function is called by:
  6820 ;;		_Decodify_Command
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           
  6825                           ;psect for function _Send_Reply_OK
  6826  1CE1                     _Send_Reply_OK:	
  6827  1CE1                     l6578:	
  6828                           ;incstack = 0
  6829                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6830                           
  6831                           
  6832                           ;SlaveLiofilizadorVer1.c: 659:      USART_put_string("OK");
  6833  1CE1  3034               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  6834  1CE2  1283               	bcf	3,5	;RP0=0, select bank0
  6835  1CE3  1303               	bcf	3,6	;RP1=0, select bank0
  6836  1CE4  00A1               	movwf	USART_put_string@vetor
  6837  1CE5  3080               	movlw	128
  6838  1CE6  00A2               	movwf	USART_put_string@vetor+1
  6839  1CE7  2CE8               	ljmp	l6332
  6840  1CE8                     __end_of_Send_Reply_OK:	
  6841  1CE8                     __ptext24:	
  6842 ;; *************** function _USART_put_string *****************
  6843 ;; Defined at:
  6844 ;;		line 168 in file "usart.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  6847 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  6850 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  1    wreg      void 
  6853 ;; Registers used:
  6854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6855 ;; Tracked objects:
  6856 ;;		On entry : 300/0
  6857 ;;		On exit  : 300/100
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6860 ;;      Params:         0       2       0       0       0
  6861 ;;      Locals:         0       2       0       0       0
  6862 ;;      Temps:          0       0       0       0       0
  6863 ;;      Totals:         0       4       0       0       0
  6864 ;;Total ram usage:        4 bytes
  6865 ;; Hardware stack levels used:    1
  6866 ;; Hardware stack levels required when called:    2
  6867 ;; This function calls:
  6868 ;;		_USART_putc
  6869 ;; This function is called by:
  6870 ;;		_Decodify_Command
  6871 ;;		_Send_Reply_OK
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           
  6876                           ;psect for function _USART_put_string
  6877  1CE8                     _USART_put_string:	
  6878  1CE8                     l6332:	
  6879                           ;incstack = 0
  6880                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6881                           
  6882                           
  6883                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  6884  1CE8  0821               	movf	USART_put_string@vetor,w
  6885  1CE9  00A3               	movwf	USART_put_string@ptr
  6886  1CEA  0822               	movf	USART_put_string@vetor+1,w
  6887  1CEB  00A4               	movwf	USART_put_string@ptr+1
  6888  1CEC                     l6338:	
  6889                           ;usart.c: 172:     while(*(ptr)){
  6890                           
  6891                           
  6892                           ;usart.c: 172:     while(*(ptr)){
  6893  1CEC  0824               	movf	USART_put_string@ptr+1,w
  6894  1CED  00FF               	movwf	127
  6895  1CEE  0823               	movf	USART_put_string@ptr,w
  6896  1CEF  0084               	movwf	4
  6897  1CF0  160A  158A  2000  160A  158A  	fcall	stringtab
  6898  1CF5  3A00               	xorlw	0
  6899  1CF6  1903               	btfsc	3,2
  6900  1CF7  2D0B               	goto	l6340
  6901                           
  6902                           ;usart.c: 173:         USART_putc(*(ptr));
  6903  1CF8  0824               	movf	USART_put_string@ptr+1,w
  6904  1CF9  00FF               	movwf	127
  6905  1CFA  0823               	movf	USART_put_string@ptr,w
  6906  1CFB  0084               	movwf	4
  6907  1CFC  160A  158A  2000  160A  158A  	fcall	stringtab
  6908  1D01  120A  158A  23DD  160A  158A  	fcall	_USART_putc
  6909                           
  6910                           ;usart.c: 174:         ptr++;
  6911  1D06  1283               	bcf	3,5	;RP0=0, select bank0
  6912  1D07  0AA3               	incf	USART_put_string@ptr,f
  6913  1D08  1903               	skipnz
  6914  1D09  0AA4               	incf	USART_put_string@ptr+1,f
  6915  1D0A  2CEC               	goto	l6338
  6916  1D0B                     l6340:	
  6917                           
  6918                           ;usart.c: 176:     USART_putc(*(ptr));
  6919  1D0B  0824               	movf	USART_put_string@ptr+1,w
  6920  1D0C  00FF               	movwf	127
  6921  1D0D  0823               	movf	USART_put_string@ptr,w
  6922  1D0E  0084               	movwf	4
  6923  1D0F  160A  158A  2000   	fcall	stringtab
  6924  1D12  120A  158A  2BDD   	ljmp	_USART_putc
  6925  1D15                     __end_of_USART_put_string:	
  6926                           
  6927                           	psect	text29
  6928  1C29                     __ptext29:	
  6929 ;; *************** function _PROCULUS_VP_Write_String *****************
  6930 ;; Defined at:
  6931 ;;		line 205 in file "proculus.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  vp              2   19[BANK1 ] unsigned int 
  6934 ;;  text            1   21[BANK1 ] PTR unsigned char 
  6935 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;		None
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  1    wreg      void 
  6940 ;; Registers used:
  6941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6942 ;; Tracked objects:
  6943 ;;		On entry : 300/100
  6944 ;;		On exit  : 300/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6947 ;;      Params:         0       0       3       0       0
  6948 ;;      Locals:         0       0       0       0       0
  6949 ;;      Temps:          0       0       0       0       0
  6950 ;;      Totals:         0       0       3       0       0
  6951 ;;Total ram usage:        3 bytes
  6952 ;; Hardware stack levels used:    1
  6953 ;; Hardware stack levels required when called:    4
  6954 ;; This function calls:
  6955 ;;		_PROCULUS_VP_Write
  6956 ;;		_strlen
  6957 ;; This function is called by:
  6958 ;;		_Decodify_Command
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962                           
  6963                           ;psect for function _PROCULUS_VP_Write_String
  6964  1C29                     _PROCULUS_VP_Write_String:	
  6965                           
  6966                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  6967                           
  6968                           ;incstack = 0
  6969                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6970  1C29  0834               	movf	(PROCULUS_VP_Write_String@vp+1)^(0+128),w
  6971  1C2A  00AC               	movwf	(PROCULUS_VP_Write@vp+1)^(0+128)
  6972  1C2B  0833               	movf	PROCULUS_VP_Write_String@vp^(0+128),w
  6973  1C2C  00AB               	movwf	PROCULUS_VP_Write@vp^(0+128)
  6974  1C2D  0835               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  6975  1C2E  00AD               	movwf	PROCULUS_VP_Write@vetor^(0+128)
  6976  1C2F  3001               	movlw	1
  6977  1C30  00AE               	movwf	(PROCULUS_VP_Write@vetor+1)^(0+128)
  6978  1C31  0835               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  6979  1C32  120A  158A  2795   	fcall	_strlen
  6980  1C35  0820               	movf	?_strlen,w
  6981  1C36  3E01               	addlw	1
  6982  1C37  1683               	bsf	3,5	;RP0=1, select bank1
  6983  1C38  00AF               	movwf	PROCULUS_VP_Write@size^(0+128)
  6984  1C39  120A  158A  280A   	ljmp	l6492
  6985  1C3C                     __end_of_PROCULUS_VP_Write_String:	
  6986                           
  6987                           	psect	text31
  6988  080A                     __ptext31:	
  6989 ;; *************** function _PROCULUS_VP_Write *****************
  6990 ;; Defined at:
  6991 ;;		line 40 in file "proculus.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  vp              2   11[BANK1 ] unsigned int 
  6994 ;;  vetor           2   13[BANK1 ] PTR unsigned char 
  6995 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  6996 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  6997 ;;  size            1   15[BANK1 ] unsigned char 
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;  i               1   18[BANK1 ] unsigned char 
  7000 ;; Return value:  Size  Location     Type
  7001 ;;                  1    wreg      void 
  7002 ;; Registers used:
  7003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7004 ;; Tracked objects:
  7005 ;;		On entry : B00/900
  7006 ;;		On exit  : 300/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7009 ;;      Params:         0       0       5       0       0
  7010 ;;      Locals:         0       0       1       0       0
  7011 ;;      Temps:          0       0       2       0       0
  7012 ;;      Totals:         0       0       8       0       0
  7013 ;;Total ram usage:        8 bytes
  7014 ;; Hardware stack levels used:    1
  7015 ;; Hardware stack levels required when called:    3
  7016 ;; This function calls:
  7017 ;;		_PROCULUS_Delay
  7018 ;;		_USART_put_int
  7019 ;;		_USART_putc
  7020 ;; This function is called by:
  7021 ;;		_PROCULUS_VP_Write_String
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           
  7026                           ;psect for function _PROCULUS_VP_Write
  7027  080A                     _PROCULUS_VP_Write:	
  7028  080A                     l6492:	
  7029                           ;incstack = 0
  7030                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7031                           
  7032                           
  7033                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  7034  080A  30A5               	movlw	165
  7035  080B  00A8               	movwf	USART_put_int@value^(0+128)
  7036  080C  305A               	movlw	90
  7037  080D  00A9               	movwf	(USART_put_int@value^(0+128)+1)
  7038  080E  2787  120A  158A   	fcall	_USART_put_int
  7039                           
  7040                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  7041  0811  082F               	movf	PROCULUS_VP_Write@size^(0+128),w
  7042  0812  3E03               	addlw	3
  7043  0813  23DD  120A  158A   	fcall	_USART_putc
  7044                           
  7045                           ;proculus.c: 43:      USART_putc(0x82);
  7046  0816  3082               	movlw	130
  7047  0817  23DD  120A  158A   	fcall	_USART_putc
  7048                           
  7049                           ;proculus.c: 44:      USART_put_int(vp);
  7050  081A  082C               	movf	(PROCULUS_VP_Write@vp+1)^(0+128),w
  7051  081B  00A9               	movwf	(USART_put_int@value+1)^(0+128)
  7052  081C  082B               	movf	PROCULUS_VP_Write@vp^(0+128),w
  7053  081D  00A8               	movwf	USART_put_int@value^(0+128)
  7054  081E  2787  120A  158A   	fcall	_USART_put_int
  7055                           
  7056                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  7057  0821  01B2               	clrf	PROCULUS_VP_Write@i^(0+128)
  7058  0822                     l6504:	
  7059  0822  082F               	movf	PROCULUS_VP_Write@size^(0+128),w
  7060  0823  0232               	subwf	PROCULUS_VP_Write@i^(0+128),w
  7061  0824  1803               	btfsc	3,0
  7062  0825  2838               	goto	l6506
  7063                           
  7064                           ;proculus.c: 46:          USART_putc(vetor[i]);
  7065  0826  0832               	movf	PROCULUS_VP_Write@i^(0+128),w
  7066  0827  072D               	addwf	PROCULUS_VP_Write@vetor^(0+128),w
  7067  0828  00B0               	movwf	??_PROCULUS_VP_Write^(0+128)
  7068  0829  082E               	movf	(PROCULUS_VP_Write@vetor+1)^(0+128),w
  7069  082A  1803               	skipnc
  7070  082B  3E01               	addlw	1
  7071  082C  00B1               	movwf	(??_PROCULUS_VP_Write^(0+128)+1)
  7072  082D  0830               	movf	??_PROCULUS_VP_Write^(0+128),w
  7073  082E  0084               	movwf	4
  7074  082F  1783               	bsf	3,7
  7075  0830  1C31               	btfss	(??_PROCULUS_VP_Write+1)^(0+128),0
  7076  0831  1383               	bcf	3,7
  7077  0832  0800               	movf	0,w
  7078  0833  23DD  120A  158A   	fcall	_USART_putc
  7079  0836  0AB2               	incf	PROCULUS_VP_Write@i^(0+128),f
  7080  0837  2822               	goto	l6504
  7081  0838                     l6506:	
  7082                           
  7083                           ;proculus.c: 48:      PROCULUS_Delay(1);
  7084  0838  1283               	bcf	3,5	;RP0=0, select bank0
  7085  0839  01A0               	clrf	PROCULUS_Delay@tempo_ms
  7086  083A  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  7087  083B  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  7088  083C  160A  158A  2DA6   	ljmp	l4268
  7089  083F                     __end_of_PROCULUS_VP_Write:	
  7090  083F                     __ptext14:	
  7091 ;; *************** function _Decodify_Command *****************
  7092 ;; Defined at:
  7093 ;;		line 305 in file "SlaveLiofilizadorVer1.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;		None
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  ss             10   51[BANK1 ] unsigned char [10]
  7098 ;;  mm             10   41[BANK1 ] unsigned char [10]
  7099 ;;  hh             10   31[BANK1 ] unsigned char [10]
  7100 ;;  sizedata        1   71[BANK1 ] unsigned char 
  7101 ;;  add             1   63[BANK1 ] unsigned char 
  7102 ;;  add_24LCxxxx    4   72[BANK1 ] unsigned long 
  7103 ;;  OutPut          4   66[BANK1 ] float 
  7104 ;;  tempint         2   64[BANK1 ] int 
  7105 ;;  dados           2   61[BANK1 ] int 
  7106 ;;  tempchar        1   70[BANK1 ] unsigned char 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  1    wreg      void 
  7109 ;; Registers used:
  7110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7111 ;; Tracked objects:
  7112 ;;		On entry : 300/300
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7116 ;;      Params:         0       0       0       0       0
  7117 ;;      Locals:         0       0      45       0       0
  7118 ;;      Temps:          0       0       2       0       0
  7119 ;;      Totals:         0       0      47       0       0
  7120 ;;Total ram usage:       47 bytes
  7121 ;; Hardware stack levels used:    1
  7122 ;; Hardware stack levels required when called:    6
  7123 ;; This function calls:
  7124 ;;		_EEPROM_24C1025_Fill_All
  7125 ;;		_EEPROM_24C1025_Read_Buffer
  7126 ;;		_EEPROM_24C1025_Read_Byte
  7127 ;;		_EEPROM_24C1025_Read_Int
  7128 ;;		_EEPROM_24C1025_Read_Str
  7129 ;;		_EEPROM_24C1025_Write_Buffer
  7130 ;;		_EEPROM_24C1025_Write_Byte
  7131 ;;		_EEPROM_24C1025_Write_Int
  7132 ;;		_EEPROM_24C1025_Write_Str
  7133 ;;		_EEPROM_Read_Byte
  7134 ;;		_EEPROM_Read_Integer
  7135 ;;		_EEPROM_Read_String
  7136 ;;		_EEPROM_Write_Byte
  7137 ;;		_EEPROM_Write_Integer
  7138 ;;		_EEPROM_Write_String
  7139 ;;		_Load_Work
  7140 ;;		_PROCULUS_Buzzer
  7141 ;;		_PROCULUS_Show_Screen
  7142 ;;		_PROCULUS_VP_Write_String
  7143 ;;		_Save_Log
  7144 ;;		_Send_Reply_OK
  7145 ;;		_Send_To_MB
  7146 ;;		_USART_put_buffer
  7147 ;;		_USART_put_int
  7148 ;;		_USART_put_string
  7149 ;;		_USART_putc
  7150 ;;		_USART_to_Protocol
  7151 ;;		___flmul
  7152 ;;		___fltol
  7153 ;;		_itoa
  7154 ;;		_strcat
  7155 ;;		_strcpy
  7156 ;;		_strlen
  7157 ;; This function is called by:
  7158 ;;		_main
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           
  7163                           ;psect for function _Decodify_Command
  7164  083F                     _Decodify_Command:	
  7165                           
  7166                           ;SlaveLiofilizadorVer1.c: 307:     int dados;;SlaveLiofilizadorVer1.c: 308:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 309:     int tempint;;SlaveLiofilizadorVer1.c: 310:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 311:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 323:     USART_to_Protocol(&usart_protocol);
  7167                           
  7168                           ;incstack = 0
  7169                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7170  083F  30CC               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  7171  0840  120A  118A  27B1  120A  158A  	fcall	_USART_to_Protocol
  7172                           
  7173                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  7174  0845  1683               	bsf	3,5	;RP0=1, select bank3
  7175  0846  1703               	bsf	3,6	;RP1=1, select bank3
  7176  0847  0853               	movf	(_usart_protocol^(0+384)+7),w
  7177  0848  1303               	bcf	3,6	;RP1=0, select bank1
  7178  0849  00EB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  7179                           
  7180                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  7181  084A  1703               	bsf	3,6	;RP1=1, select bank3
  7182  084B  0854               	movf	(_usart_protocol^(0+384)+8),w
  7183  084C  1303               	bcf	3,6	;RP1=0, select bank1
  7184  084D  00EA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  7185                           
  7186                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  7187  084E  1703               	bsf	3,6	;RP1=1, select bank3
  7188  084F  0855               	movf	(_usart_protocol^(0+384)+9),w
  7189  0850  1303               	bcf	3,6	;RP1=0, select bank1
  7190  0851  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  7191                           
  7192                           ;SlaveLiofilizadorVer1.c: 328:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  7193  0852  1703               	bsf	3,6	;RP1=1, select bank3
  7194  0853  0856               	movf	(_usart_protocol^(0+384)+10),w
  7195  0854  1303               	bcf	3,6	;RP1=0, select bank1
  7196  0855  00E8               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  7197                           
  7198                           ;SlaveLiofilizadorVer1.c: 335:     switch(usart_protocol.command){
  7199  0856  2B43               	goto	l7316
  7200  0857                     l7106:	
  7201                           
  7202                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  7203  0857  300B               	movlw	11
  7204  0858  23A1               	fcall	_Send_To_MB
  7205                           
  7206                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string("v1.0.7");
  7207  0859  302D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  7208  085A  1283               	bcf	3,5	;RP0=0, select bank0
  7209  085B  00A1               	movwf	USART_put_string@vetor
  7210  085C  3080               	movlw	128
  7211  085D  00A2               	movwf	USART_put_string@vetor+1
  7212  085E  160A  158A  2CE8   	ljmp	l6332
  7213  0861                     l7110:	
  7214                           ;SlaveLiofilizadorVer1.c: 346:              break;
  7215                           
  7216                           
  7217                           ;SlaveLiofilizadorVer1.c: 349:              if(usart_protocol.value[0]==0)
  7218  0861  1703               	bsf	3,6	;RP1=1, select bank3
  7219  0862  0852               	movf	(_usart_protocol^(0+384)+6),w
  7220  0863  1D03               	btfss	3,2
  7221  0864  2873               	goto	l7114
  7222                           
  7223                           ;SlaveLiofilizadorVer1.c: 350:                 OutPut=Temperatura0;
  7224  0865  0817               	movf	(_Temperatura0+3)^(0+384),w
  7225  0866  1303               	bcf	3,6	;RP1=0, select bank1
  7226  0867  00E5               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  7227  0868  1703               	bsf	3,6	;RP1=1, select bank3
  7228  0869  0816               	movf	(_Temperatura0+2)^(0+384),w
  7229  086A  1303               	bcf	3,6	;RP1=0, select bank1
  7230  086B  00E4               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  7231  086C  1703               	bsf	3,6	;RP1=1, select bank3
  7232  086D  0815               	movf	(_Temperatura0+1)^(0+384),w
  7233  086E  1303               	bcf	3,6	;RP1=0, select bank1
  7234  086F  00E3               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  7235  0870  1703               	bsf	3,6	;RP1=1, select bank3
  7236  0871  0814               	movf	_Temperatura0^(0+384),w
  7237  0872  2880               	goto	L8
  7238  0873                     l7114:	
  7239                           
  7240                           ;SlaveLiofilizadorVer1.c: 352:                 OutPut=Temperatura1;
  7241  0873  0813               	movf	(_Temperatura1+3)^(0+384),w
  7242  0874  1303               	bcf	3,6	;RP1=0, select bank1
  7243  0875  00E5               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  7244  0876  1703               	bsf	3,6	;RP1=1, select bank3
  7245  0877  0812               	movf	(_Temperatura1+2)^(0+384),w
  7246  0878  1303               	bcf	3,6	;RP1=0, select bank1
  7247  0879  00E4               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  7248  087A  1703               	bsf	3,6	;RP1=1, select bank3
  7249  087B  0811               	movf	(_Temperatura1+1)^(0+384),w
  7250  087C  1303               	bcf	3,6	;RP1=0, select bank1
  7251  087D  00E3               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  7252  087E  1703               	bsf	3,6	;RP1=1, select bank3
  7253  087F  0810               	movf	_Temperatura1^(0+384),w
  7254  0880                     L8:	
  7255  0880  1303               	bcf	3,6	;RP1=0, select bank1
  7256  0881  00E2               	movwf	Decodify_Command@OutPut^(0+128)
  7257                           
  7258                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  7259  0882  3041               	movlw	65
  7260  0883  1283               	bcf	3,5	;RP0=0, select bank0
  7261  0884  00D8               	movwf	___flmul@b+3
  7262  0885  3020               	movlw	32
  7263  0886  00D7               	movwf	___flmul@b+2
  7264  0887  01D6               	clrf	___flmul@b+1
  7265  0888  01D5               	clrf	___flmul@b
  7266  0889  1683               	bsf	3,5	;RP0=1, select bank1
  7267  088A  0865               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  7268  088B  1283               	bcf	3,5	;RP0=0, select bank0
  7269  088C  00DC               	movwf	___flmul@a+3
  7270  088D  1683               	bsf	3,5	;RP0=1, select bank1
  7271  088E  0864               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  7272  088F  1283               	bcf	3,5	;RP0=0, select bank0
  7273  0890  00DB               	movwf	___flmul@a+2
  7274  0891  1683               	bsf	3,5	;RP0=1, select bank1
  7275  0892  0863               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  7276  0893  1283               	bcf	3,5	;RP0=0, select bank0
  7277  0894  00DA               	movwf	___flmul@a+1
  7278  0895  1683               	bsf	3,5	;RP0=1, select bank1
  7279  0896  0862               	movf	Decodify_Command@OutPut^(0+128),w
  7280  0897  1283               	bcf	3,5	;RP0=0, select bank0
  7281  0898  00D9               	movwf	___flmul@a
  7282  0899  120A  118A  20EB  120A  158A  	fcall	___flmul
  7283  089E  0858               	movf	?___flmul+3,w
  7284  089F  1683               	bsf	3,5	;RP0=1, select bank1
  7285  08A0  00E5               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  7286  08A1  1283               	bcf	3,5	;RP0=0, select bank0
  7287  08A2  0857               	movf	?___flmul+2,w
  7288  08A3  1683               	bsf	3,5	;RP0=1, select bank1
  7289  08A4  00E4               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  7290  08A5  1283               	bcf	3,5	;RP0=0, select bank0
  7291  08A6  0856               	movf	?___flmul+1,w
  7292  08A7  1683               	bsf	3,5	;RP0=1, select bank1
  7293  08A8  00E3               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  7294  08A9  1283               	bcf	3,5	;RP0=0, select bank0
  7295  08AA  0855               	movf	?___flmul,w
  7296  08AB  1683               	bsf	3,5	;RP0=1, select bank1
  7297  08AC  00E2               	movwf	Decodify_Command@OutPut^(0+128)
  7298                           
  7299                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  7300  08AD  138B               	bcf	11,7	;volatile
  7301                           
  7302                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  7303  08AE  3002               	movlw	2
  7304  08AF  23A1               	fcall	_Send_To_MB
  7305                           
  7306                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  7307  08B0  0865               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  7308  08B1  00A3               	movwf	(___fltol@f1+3)^(0+128)
  7309  08B2  0864               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  7310  08B3  00A2               	movwf	(___fltol@f1+2)^(0+128)
  7311  08B4  0863               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  7312  08B5  00A1               	movwf	(___fltol@f1+1)^(0+128)
  7313  08B6  0862               	movf	Decodify_Command@OutPut^(0+128),w
  7314  08B7  00A0               	movwf	___fltol@f1^(0+128)
  7315  08B8  120A  118A  225A  120A  158A  	fcall	___fltol
  7316  08BD  1683               	bsf	3,5	;RP0=1, select bank1
  7317  08BE  0821               	movf	(?___fltol+1)^(0+128),w
  7318  08BF  00A9               	movwf	(USART_put_int@value+1)^(0+128)
  7319  08C0  0820               	movf	?___fltol^(0+128),w
  7320  08C1  00A8               	movwf	USART_put_int@value^(0+128)
  7321  08C2  2787               	fcall	_USART_put_int
  7322                           
  7323                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  7324  08C3  178B               	bsf	11,7	;volatile
  7325                           
  7326                           ;SlaveLiofilizadorVer1.c: 375:              break;
  7327  08C4  0008               	return
  7328  08C5                     l7126:	
  7329                           
  7330                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  7331  08C5  1703               	bsf	3,6	;RP1=1, select bank3
  7332  08C6  0852               	movf	(_usart_protocol^(0+384)+6),w
  7333  08C7  1303               	bcf	3,6	;RP1=0, select bank1
  7334  08C8  00EB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  7335                           
  7336                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  7337  08C9  1703               	bsf	3,6	;RP1=1, select bank3
  7338  08CA  0853               	movf	(_usart_protocol^(0+384)+7),w
  7339  08CB  1303               	bcf	3,6	;RP1=0, select bank1
  7340  08CC  00EA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  7341                           
  7342                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  7343  08CD  1703               	bsf	3,6	;RP1=1, select bank3
  7344  08CE  0854               	movf	(_usart_protocol^(0+384)+8),w
  7345  08CF  1303               	bcf	3,6	;RP1=0, select bank1
  7346  08D0  00E9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  7347                           
  7348                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  7349  08D1  1703               	bsf	3,6	;RP1=1, select bank3
  7350  08D2  0855               	movf	(_usart_protocol^(0+384)+9),w
  7351  08D3  1303               	bcf	3,6	;RP1=0, select bank1
  7352  08D4  00E8               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  7353                           
  7354                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  7355  08D5  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7356  08D6  00B4               	movwf	(Save_Log@add_datalog+3)^(0+128)
  7357  08D7  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7358  08D8  00B3               	movwf	(Save_Log@add_datalog+2)^(0+128)
  7359  08D9  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7360  08DA  00B2               	movwf	(Save_Log@add_datalog+1)^(0+128)
  7361  08DB  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7362  08DC  00B1               	movwf	Save_Log@add_datalog^(0+128)
  7363  08DD  120A  118A  2068   	fcall	_Save_Log
  7364                           
  7365                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  7366  08E0  1683               	bsf	3,5	;RP0=1, select bank3
  7367  08E1  1703               	bsf	3,6	;RP1=1, select bank3
  7368  08E2  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  7369  08E3  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  7370                           
  7371                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  7372  08E4  01AA               	clrf	_milisegundo^(0+384)	;volatile
  7373  08E5  01AB               	clrf	(_milisegundo+1)^(0+384)	;volatile
  7374                           
  7375                           ;SlaveLiofilizadorVer1.c: 387:              break;
  7376  08E6  0008               	return
  7377  08E7                     l7134:	
  7378                           
  7379                           ;SlaveLiofilizadorVer1.c: 391:              if(usart_protocol.value[0]==0)
  7380  08E7  1703               	bsf	3,6	;RP1=1, select bank3
  7381  08E8  0852               	movf	(_usart_protocol^(0+384)+6),w
  7382  08E9  1D03               	btfss	3,2
  7383  08EA  28ED               	goto	l307
  7384                           
  7385                           ;SlaveLiofilizadorVer1.c: 392:                 generic_status.flag_global_hot=0;
  7386  08EB  1376               	bcf	_generic_status,6
  7387  08EC  0008               	return
  7388  08ED                     l307:	
  7389                           ;SlaveLiofilizadorVer1.c: 393:              else
  7390                           
  7391                           
  7392                           ;SlaveLiofilizadorVer1.c: 394:                 generic_status.flag_global_hot=1;
  7393  08ED  1776               	bsf	_generic_status,6
  7394  08EE  0008               	return
  7395  08EF                     l7138:	
  7396                           
  7397                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  7398  08EF  3002               	movlw	2
  7399  08F0  23A1  120A  158A   	fcall	_Send_To_MB
  7400                           
  7401                           ;SlaveLiofilizadorVer1.c: 409:              USART_put_int(3);
  7402  08F3  3003               	movlw	3
  7403  08F4  00A8               	movwf	USART_put_int@value^(0+128)
  7404  08F5  01A9               	clrf	(USART_put_int@value+1)^(0+128)
  7405  08F6  2F87               	ljmp	l6160
  7406  08F7                     l7142:	
  7407                           ;SlaveLiofilizadorVer1.c: 411:              break;
  7408                           
  7409                           
  7410                           ;SlaveLiofilizadorVer1.c: 420:              Send_To_MB(3);
  7411  08F7  3003               	movlw	3
  7412  08F8  23A1               	fcall	_Send_To_MB
  7413                           
  7414                           ;SlaveLiofilizadorVer1.c: 421:              Send_Reply_OK();
  7415  08F9  160A  158A  24E1  120A  158A  	fcall	_Send_Reply_OK
  7416                           
  7417                           ;SlaveLiofilizadorVer1.c: 422:              Load_Work();
  7418  08FE  120A  118A  2D09   	ljmp	l6544
  7419  0901                     l7148:	
  7420                           ;SlaveLiofilizadorVer1.c: 423:              break;
  7421                           
  7422                           
  7423                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  7424  0901  1703               	bsf	3,6	;RP1=1, select bank3
  7425  0902  0853               	movf	(_usart_protocol^(0+384)+7),w
  7426  0903  1283               	bcf	3,5	;RP0=0, select bank0
  7427  0904  1303               	bcf	3,6	;RP1=0, select bank0
  7428  0905  00A0               	movwf	EEPROM_Write_Byte@dado
  7429  0906  1683               	bsf	3,5	;RP0=1, select bank3
  7430  0907  1703               	bsf	3,6	;RP1=1, select bank3
  7431  0908  0852               	movf	(_usart_protocol^(0+384)+6),w
  7432  0909  160A  158A  26E3  120A  158A  	fcall	_EEPROM_Write_Byte
  7433  090E                     L9:	
  7434                           
  7435                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  7436  090E  3003               	movlw	3
  7437  090F  23A1               	fcall	_Send_To_MB
  7438                           
  7439                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  7440  0910  160A  158A  2CE1   	ljmp	l6578
  7441  0913                     l7152:	
  7442                           ;SlaveLiofilizadorVer1.c: 432:              break;
  7443                           
  7444                           
  7445                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  7446  0913  1703               	bsf	3,6	;RP1=1, select bank3
  7447  0914  0852               	movf	(_usart_protocol^(0+384)+6),w
  7448  0915  120A  118A  25E1  120A  158A  	fcall	_EEPROM_Read_Byte
  7449  091A  1683               	bsf	3,5	;RP0=1, select bank1
  7450  091B  1303               	bcf	3,6	;RP1=0, select bank1
  7451  091C  00E6               	movwf	Decodify_Command@tempchar^(0+128)
  7452                           
  7453                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  7454  091D  3001               	movlw	1
  7455  091E  23A1  120A  158A   	fcall	_Send_To_MB
  7456                           
  7457                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  7458  0921  0866               	movf	Decodify_Command@tempchar^(0+128),w
  7459  0922  2BDD               	ljmp	_USART_putc
  7460  0923                     l7158:	
  7461                           ;SlaveLiofilizadorVer1.c: 437:              break;
  7462                           
  7463                           
  7464                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  7465  0923  1703               	bsf	3,6	;RP1=1, select bank3
  7466  0924  0852               	movf	(_usart_protocol^(0+384)+6),w
  7467  0925  1303               	bcf	3,6	;RP1=0, select bank1
  7468  0926  00DF               	movwf	Decodify_Command@add^(0+128)
  7469                           
  7470                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  7471  0927  1703               	bsf	3,6	;RP1=1, select bank3
  7472  0928  0853               	movf	(_usart_protocol^(0+384)+7),w
  7473  0929  1303               	bcf	3,6	;RP1=0, select bank1
  7474  092A  00DE               	movwf	(Decodify_Command@dados+1)^(0+128)
  7475  092B  1703               	bsf	3,6	;RP1=1, select bank3
  7476  092C  0854               	movf	(_usart_protocol^(0+384)+8),w
  7477  092D  1303               	bcf	3,6	;RP1=0, select bank1
  7478  092E  00DD               	movwf	Decodify_Command@dados^(0+128)
  7479                           
  7480                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  7481  092F  085E               	movf	(Decodify_Command@dados+1)^(0+128),w
  7482  0930  1283               	bcf	3,5	;RP0=0, select bank0
  7483  0931  00A6               	movwf	EEPROM_Write_Integer@dado+1
  7484  0932  1683               	bsf	3,5	;RP0=1, select bank1
  7485  0933  085D               	movf	Decodify_Command@dados^(0+128),w
  7486  0934  1283               	bcf	3,5	;RP0=0, select bank0
  7487  0935  00A5               	movwf	EEPROM_Write_Integer@dado
  7488  0936  1683               	bsf	3,5	;RP0=1, select bank1
  7489  0937  085F               	movf	Decodify_Command@add^(0+128),w
  7490  0938  160A  158A  26A8  120A  158A  	fcall	_EEPROM_Write_Integer
  7491  093D  290E               	goto	L9
  7492  093E                     l7166:	
  7493                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  7494                           
  7495                           
  7496                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  7497  093E  1703               	bsf	3,6	;RP1=1, select bank3
  7498  093F  0852               	movf	(_usart_protocol^(0+384)+6),w
  7499  0940  120A  118A  2602  120A  158A  	fcall	_EEPROM_Read_Integer
  7500  0945  0824               	movf	?_EEPROM_Read_Integer+1,w
  7501  0946  1683               	bsf	3,5	;RP0=1, select bank1
  7502  0947  00E1               	movwf	(Decodify_Command@tempint+1)^(0+128)
  7503  0948  1283               	bcf	3,5	;RP0=0, select bank0
  7504  0949  0823               	movf	?_EEPROM_Read_Integer,w
  7505  094A                     L10:	
  7506  094A  1683               	bsf	3,5	;RP0=1, select bank1
  7507  094B  00E0               	movwf	Decodify_Command@tempint^(0+128)
  7508                           
  7509                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  7510  094C  3002               	movlw	2
  7511  094D  23A1  120A  158A   	fcall	_Send_To_MB
  7512                           
  7513                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  7514  0950  0861               	movf	(Decodify_Command@tempint+1)^(0+128),w
  7515  0951  00A9               	movwf	(USART_put_int@value+1)^(0+128)
  7516  0952  0860               	movf	Decodify_Command@tempint^(0+128),w
  7517  0953  00A8               	movwf	USART_put_int@value^(0+128)
  7518  0954  2F87               	ljmp	l6160
  7519  0955                     l7172:	
  7520                           ;SlaveLiofilizadorVer1.c: 452:              break;
  7521                           
  7522                           
  7523                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  7524  0955  30D3               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  7525  0956  1283               	bcf	3,5	;RP0=0, select bank0
  7526  0957  00A5               	movwf	EEPROM_Write_String@dado
  7527  0958  1683               	bsf	3,5	;RP0=1, select bank3
  7528  0959  1703               	bsf	3,6	;RP1=1, select bank3
  7529  095A  0852               	movf	(_usart_protocol^(0+384)+6),w
  7530  095B  160A  158A  26CB  120A  158A  	fcall	_EEPROM_Write_String
  7531  0960  290E               	goto	L9
  7532  0961                     l7178:	
  7533                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  7534                           
  7535                           
  7536                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 463:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  7537  0961  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7538  0962  1283               	bcf	3,5	;RP0=0, select bank0
  7539  0963  00A3               	movwf	EEPROM_Read_String@dado
  7540  0964  1683               	bsf	3,5	;RP0=1, select bank3
  7541  0965  1703               	bsf	3,6	;RP1=1, select bank3
  7542  0966  0852               	movf	(_usart_protocol^(0+384)+6),w
  7543  0967  120A  118A  24F5  120A  158A  	fcall	_EEPROM_Read_String
  7544                           
  7545                           ;SlaveLiofilizadorVer1.c: 464:              Send_To_MB(sizeof(texto));
  7546  096C  3010               	movlw	16
  7547  096D                     L11:	
  7548  096D  23A1  120A  158A   	fcall	_Send_To_MB
  7549                           
  7550                           ;SlaveLiofilizadorVer1.c: 465:              USART_put_string(texto);
  7551  0970  27F4               	fcall	PL80	;call to abstracted procedure
  7552  0971  160A  158A  2CE8   	ljmp	l6332
  7553  0974                     l7184:	
  7554                           ;SlaveLiofilizadorVer1.c: 466:              break;
  7555                           
  7556                           
  7557                           ;SlaveLiofilizadorVer1.c: 471:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  7558  0974  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7559  0975  1283               	bcf	3,5	;RP0=0, select bank0
  7560  0976  00B2               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  7561  0977  1683               	bsf	3,5	;RP0=1, select bank1
  7562  0978  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7563  0979  1283               	bcf	3,5	;RP0=0, select bank0
  7564  097A  00B1               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  7565  097B  1683               	bsf	3,5	;RP0=1, select bank1
  7566  097C  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7567  097D  1283               	bcf	3,5	;RP0=0, select bank0
  7568  097E  00B0               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  7569  097F  1683               	bsf	3,5	;RP0=1, select bank1
  7570  0980  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7571  0981  1283               	bcf	3,5	;RP0=0, select bank0
  7572  0982  00AF               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  7573  0983  1683               	bsf	3,5	;RP0=1, select bank3
  7574  0984  1703               	bsf	3,6	;RP1=1, select bank3
  7575  0985  0857               	movf	(_usart_protocol^(0+384)+11),w
  7576  0986  1283               	bcf	3,5	;RP0=0, select bank0
  7577  0987  1303               	bcf	3,6	;RP1=0, select bank0
  7578  0988  00B3               	movwf	EEPROM_24C1025_Write_Byte@data
  7579  0989  1683               	bsf	3,5	;RP0=1, select bank3
  7580  098A  1703               	bsf	3,6	;RP1=1, select bank3
  7581  098B  0852               	movf	(_usart_protocol^(0+384)+6),w
  7582  098C  160A  158A  243C  120A  158A  	fcall	_EEPROM_24C1025_Write_Byte
  7583  0991  290E               	goto	L9
  7584  0992                     l7190:	
  7585                           ;SlaveLiofilizadorVer1.c: 474:              Send_To_MB(3);
  7586                           
  7587                           
  7588                           ;SlaveLiofilizadorVer1.c: 478:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  7589  0992  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7590  0993  1283               	bcf	3,5	;RP0=0, select bank0
  7591  0994  00B4               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  7592  0995  1683               	bsf	3,5	;RP0=1, select bank1
  7593  0996  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7594  0997  1283               	bcf	3,5	;RP0=0, select bank0
  7595  0998  00B3               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  7596  0999  1683               	bsf	3,5	;RP0=1, select bank1
  7597  099A  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7598  099B  1283               	bcf	3,5	;RP0=0, select bank0
  7599  099C  00B2               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  7600  099D  1683               	bsf	3,5	;RP0=1, select bank1
  7601  099E  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7602  099F  1283               	bcf	3,5	;RP0=0, select bank0
  7603  09A0  00B1               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  7604  09A1  1683               	bsf	3,5	;RP0=1, select bank3
  7605  09A2  1703               	bsf	3,6	;RP1=1, select bank3
  7606  09A3  0852               	movf	(_usart_protocol^(0+384)+6),w
  7607  09A4  160A  158A  2465  120A  158A  	fcall	_EEPROM_24C1025_Read_Byte
  7608  09A9  1683               	bsf	3,5	;RP0=1, select bank1
  7609  09AA  00E6               	movwf	Decodify_Command@tempchar^(0+128)
  7610                           
  7611                           ;SlaveLiofilizadorVer1.c: 482:              Send_To_MB(1);
  7612  09AB  3001               	movlw	1
  7613  09AC  23A1  120A  158A   	fcall	_Send_To_MB
  7614                           
  7615                           ;SlaveLiofilizadorVer1.c: 483:              USART_putc(tempchar);
  7616  09AF  0866               	movf	Decodify_Command@tempchar^(0+128),w
  7617  09B0  2BDD               	ljmp	_USART_putc
  7618  09B1                     l7196:	
  7619                           ;SlaveLiofilizadorVer1.c: 484:              break;
  7620                           
  7621                           
  7622                           ;SlaveLiofilizadorVer1.c: 486:              {;SlaveLiofilizadorVer1.c: 487:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  7623  09B1  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7624  09B2  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  7625  09B3  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7626  09B4  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  7627  09B5  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7628  09B6  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  7629  09B7  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7630  09B8  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  7631  09B9  1703               	bsf	3,6	;RP1=1, select bank3
  7632  09BA  0857               	movf	(_usart_protocol^(0+384)+11),w
  7633  09BB  1303               	bcf	3,6	;RP1=0, select bank1
  7634  09BC  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  7635  09BD  1703               	bsf	3,6	;RP1=1, select bank3
  7636  09BE  0858               	movf	(_usart_protocol^(0+384)+12),w
  7637  09BF  1303               	bcf	3,6	;RP1=0, select bank1
  7638  09C0  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  7639  09C1  1703               	bsf	3,6	;RP1=1, select bank3
  7640  09C2  0852               	movf	(_usart_protocol^(0+384)+6),w
  7641  09C3  120A  118A  20CC  120A  158A  	fcall	_EEPROM_24C1025_Write_Int
  7642  09C8  290E               	goto	L9
  7643  09C9                     l7202:	
  7644                           ;SlaveLiofilizadorVer1.c: 492:              Send_To_MB(3);
  7645                           
  7646                           
  7647                           ;SlaveLiofilizadorVer1.c: 497:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  7648  09C9  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7649  09CA  1283               	bcf	3,5	;RP0=0, select bank0
  7650  09CB  00B4               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  7651  09CC  1683               	bsf	3,5	;RP0=1, select bank1
  7652  09CD  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7653  09CE  1283               	bcf	3,5	;RP0=0, select bank0
  7654  09CF  00B3               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  7655  09D0  1683               	bsf	3,5	;RP0=1, select bank1
  7656  09D1  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7657  09D2  1283               	bcf	3,5	;RP0=0, select bank0
  7658  09D3  00B2               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  7659  09D4  1683               	bsf	3,5	;RP0=1, select bank1
  7660  09D5  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7661  09D6  1283               	bcf	3,5	;RP0=0, select bank0
  7662  09D7  00B1               	movwf	EEPROM_24C1025_Read_Int@mem_add
  7663  09D8  1683               	bsf	3,5	;RP0=1, select bank3
  7664  09D9  1703               	bsf	3,6	;RP1=1, select bank3
  7665  09DA  0852               	movf	(_usart_protocol^(0+384)+6),w
  7666  09DB  160A  158A  247D  120A  158A  	fcall	_EEPROM_24C1025_Read_Int
  7667  09E0  0832               	movf	?_EEPROM_24C1025_Read_Int+1,w
  7668  09E1  1683               	bsf	3,5	;RP0=1, select bank1
  7669  09E2  00E1               	movwf	(Decodify_Command@tempint+1)^(0+128)
  7670  09E3  1283               	bcf	3,5	;RP0=0, select bank0
  7671  09E4  0831               	movf	?_EEPROM_24C1025_Read_Int,w
  7672  09E5  294A               	goto	L10
  7673  09E6                     l7208:	
  7674                           ;SlaveLiofilizadorVer1.c: 499:              Send_To_MB(2);
  7675                           
  7676                           
  7677                           ;SlaveLiofilizadorVer1.c: 505:              {;SlaveLiofilizadorVer1.c: 506:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 507:              sizedata=usart_protocol.value
      +                          [5];
  7678  09E6  1703               	bsf	3,6	;RP1=1, select bank3
  7679  09E7  0857               	movf	(_usart_protocol^(0+384)+11),w
  7680  09E8  1303               	bcf	3,6	;RP1=0, select bank1
  7681  09E9  00E7               	movwf	Decodify_Command@sizedata^(0+128)
  7682                           
  7683                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  7684  09EA  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7685  09EB  1283               	bcf	3,5	;RP0=0, select bank0
  7686  09EC  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  7687  09ED  1683               	bsf	3,5	;RP0=1, select bank1
  7688  09EE  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7689  09EF  1283               	bcf	3,5	;RP0=0, select bank0
  7690  09F0  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  7691  09F1  1683               	bsf	3,5	;RP0=1, select bank1
  7692  09F2  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7693  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  7694  09F4  00A5               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  7695  09F5  1683               	bsf	3,5	;RP0=1, select bank1
  7696  09F6  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7697  09F7  1283               	bcf	3,5	;RP0=0, select bank0
  7698  09F8  00A4               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  7699  09F9  1683               	bsf	3,5	;RP0=1, select bank1
  7700  09FA  0867               	movf	Decodify_Command@sizedata^(0+128),w
  7701  09FB  1283               	bcf	3,5	;RP0=0, select bank0
  7702  09FC  00A8               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  7703  09FD  303A               	movlw	(low (_buffer| (0+256)))& (0+255)
  7704  09FE  00A9               	movwf	EEPROM_24C1025_Read_Buffer@data
  7705  09FF  3001               	movlw	1
  7706  0A00  00AA               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  7707  0A01  1683               	bsf	3,5	;RP0=1, select bank3
  7708  0A02  1703               	bsf	3,6	;RP1=1, select bank3
  7709  0A03  0852               	movf	(_usart_protocol^(0+384)+6),w
  7710  0A04  2570  120A  158A   	fcall	_EEPROM_24C1025_Read_Buffer
  7711                           
  7712                           ;SlaveLiofilizadorVer1.c: 515:              Send_To_MB(sizedata);
  7713  0A07  1683               	bsf	3,5	;RP0=1, select bank1
  7714  0A08  1303               	bcf	3,6	;RP1=0, select bank1
  7715  0A09  0867               	movf	Decodify_Command@sizedata^(0+128),w
  7716  0A0A  23A1               	fcall	_Send_To_MB
  7717                           
  7718                           ;SlaveLiofilizadorVer1.c: 516:              USART_put_buffer(buffer,sizedata);
  7719  0A0B  0867               	movf	Decodify_Command@sizedata^(0+128),w
  7720  0A0C  1283               	bcf	3,5	;RP0=0, select bank0
  7721  0A0D  00A1               	movwf	USART_put_buffer@size
  7722  0A0E  303A               	movlw	(low (_buffer| (0+256)))& (0+255)
  7723  0A0F  01A2               	clrf	USART_put_buffer@size+1
  7724  0A10  160A  158A  2C98   	ljmp	_USART_put_buffer
  7725  0A13                     l7216:	
  7726                           ;SlaveLiofilizadorVer1.c: 517:              };SlaveLiofilizadorVer1.c: 518:             
      +                           break;
  7727                           
  7728                           
  7729                           ;SlaveLiofilizadorVer1.c: 521:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  7730  0A13  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7731  0A14  1283               	bcf	3,5	;RP0=0, select bank0
  7732  0A15  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  7733  0A16  1683               	bsf	3,5	;RP0=1, select bank1
  7734  0A17  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7735  0A18  1283               	bcf	3,5	;RP0=0, select bank0
  7736  0A19  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  7737  0A1A  1683               	bsf	3,5	;RP0=1, select bank1
  7738  0A1B  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7739  0A1C  1283               	bcf	3,5	;RP0=0, select bank0
  7740  0A1D  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  7741  0A1E  1683               	bsf	3,5	;RP0=1, select bank1
  7742  0A1F  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7743  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  7744  0A21  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  7745  0A22  1683               	bsf	3,5	;RP0=1, select bank3
  7746  0A23  1703               	bsf	3,6	;RP1=1, select bank3
  7747  0A24  0857               	movf	(_usart_protocol^(0+384)+11),w
  7748  0A25  1283               	bcf	3,5	;RP0=0, select bank0
  7749  0A26  1303               	bcf	3,6	;RP1=0, select bank0
  7750  0A27  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  7751  0A28  30D8               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  7752  0A29  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
  7753  0A2A  3001               	movlw	1
  7754  0A2B  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  7755  0A2C  1683               	bsf	3,5	;RP0=1, select bank3
  7756  0A2D  1703               	bsf	3,6	;RP1=1, select bank3
  7757  0A2E  0852               	movf	(_usart_protocol^(0+384)+6),w
  7758  0A2F  2653  120A  158A   	fcall	_EEPROM_24C1025_Write_Buffer
  7759  0A32  290E               	goto	L9
  7760  0A33                     l7222:	
  7761                           ;SlaveLiofilizadorVer1.c: 526:              Send_To_MB(3);
  7762                           
  7763                           
  7764                           ;SlaveLiofilizadorVer1.c: 531:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  7765  0A33  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7766  0A34  1283               	bcf	3,5	;RP0=0, select bank0
  7767  0A35  00A5               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  7768  0A36  1683               	bsf	3,5	;RP0=1, select bank1
  7769  0A37  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7770  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  7771  0A39  00A4               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  7772  0A3A  1683               	bsf	3,5	;RP0=1, select bank1
  7773  0A3B  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7774  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  7775  0A3D  00A3               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  7776  0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  7777  0A3F  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7778  0A40  1283               	bcf	3,5	;RP0=0, select bank0
  7779  0A41  00A2               	movwf	EEPROM_24C1025_Write_Str@mem_add
  7780  0A42  30D7               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  7781  0A43  00A6               	movwf	EEPROM_24C1025_Write_Str@data
  7782  0A44  1683               	bsf	3,5	;RP0=1, select bank3
  7783  0A45  1703               	bsf	3,6	;RP1=1, select bank3
  7784  0A46  0852               	movf	(_usart_protocol^(0+384)+6),w
  7785  0A47  23EE  120A  158A   	fcall	_EEPROM_24C1025_Write_Str
  7786  0A4A  290E               	goto	L9
  7787  0A4B                     l7228:	
  7788                           ;SlaveLiofilizadorVer1.c: 534:              Send_To_MB(3);
  7789                           
  7790                           
  7791                           ;SlaveLiofilizadorVer1.c: 538:              {;SlaveLiofilizadorVer1.c: 539:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  7792  0A4B  086B               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7793  0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  7794  0A4D  00A7               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  7795  0A4E  1683               	bsf	3,5	;RP0=1, select bank1
  7796  0A4F  086A               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7797  0A50  1283               	bcf	3,5	;RP0=0, select bank0
  7798  0A51  00A6               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  7799  0A52  1683               	bsf	3,5	;RP0=1, select bank1
  7800  0A53  0869               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7801  0A54  1283               	bcf	3,5	;RP0=0, select bank0
  7802  0A55  00A5               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  7803  0A56  1683               	bsf	3,5	;RP0=1, select bank1
  7804  0A57  0868               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7805  0A58  1283               	bcf	3,5	;RP0=0, select bank0
  7806  0A59  00A4               	movwf	EEPROM_24C1025_Read_Str@mem_add
  7807  0A5A  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7808  0A5B  00A8               	movwf	EEPROM_24C1025_Read_Str@texto
  7809  0A5C  1683               	bsf	3,5	;RP0=1, select bank3
  7810  0A5D  1703               	bsf	3,6	;RP1=1, select bank3
  7811  0A5E  0852               	movf	(_usart_protocol^(0+384)+6),w
  7812  0A5F  248B  120A  158A   	fcall	_EEPROM_24C1025_Read_Str
  7813                           
  7814                           ;SlaveLiofilizadorVer1.c: 543:              Send_To_MB(strlen(texto));
  7815  0A62  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7816  0A63  2795  120A  158A   	fcall	_strlen
  7817  0A66  0820               	movf	?_strlen,w
  7818  0A67  296D               	goto	L11
  7819  0A68                     l7232:	
  7820                           
  7821                           ;SlaveLiofilizadorVer1.c: 549:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  7822  0A68  1703               	bsf	3,6	;RP1=1, select bank3
  7823  0A69  0853               	movf	(_usart_protocol^(0+384)+7),w
  7824  0A6A  1303               	bcf	3,6	;RP1=0, select bank1
  7825  0A6B  00B1               	movwf	EEPROM_24C1025_Fill_All@value^(0+128)
  7826  0A6C  01B2               	clrf	(EEPROM_24C1025_Fill_All@value+1)^(0+128)
  7827  0A6D  1703               	bsf	3,6	;RP1=1, select bank3
  7828  0A6E  0852               	movf	(_usart_protocol^(0+384)+6),w
  7829  0A6F  120A  118A  2037  120A  158A  	fcall	_EEPROM_24C1025_Fill_All
  7830  0A74  290E               	goto	L9
  7831  0A75                     l7238:	
  7832                           ;SlaveLiofilizadorVer1.c: 551:              Send_To_MB(3);
  7833                           
  7834                           
  7835                           ;SlaveLiofilizadorVer1.c: 556:              {;SlaveLiofilizadorVer1.c: 557:             
      +                           char hh[10];;SlaveLiofilizadorVer1.c: 558:              char mm[10];;SlaveLiofilizadorV
      +                          er1.c: 559:              char ss[10];;SlaveLiofilizadorVer1.c: 561:              itoa(hh
      +                          ,hora,10);
  7836  0A75  0874               	movf	_hora,w	;volatile
  7837  0A76  1283               	bcf	3,5	;RP0=0, select bank0
  7838  0A77  00AF               	movwf	itoa@val
  7839  0A78  300A               	movlw	10
  7840  0A79  01B0               	clrf	itoa@val+1
  7841  0A7A  00B1               	movwf	itoa@base
  7842  0A7B  30BF               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7843  0A7C  01B2               	clrf	itoa@base+1
  7844  0A7D  276D  120A  158A   	fcall	_itoa
  7845                           
  7846                           ;SlaveLiofilizadorVer1.c: 562:              itoa(mm,minuto,10);
  7847  0A80  1683               	bsf	3,5	;RP0=1, select bank3
  7848  0A81  1703               	bsf	3,6	;RP1=1, select bank3
  7849  0A82  083B               	movf	_minuto^(0+384),w	;volatile
  7850  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  7851  0A84  1303               	bcf	3,6	;RP1=0, select bank0
  7852  0A85  00AF               	movwf	itoa@val
  7853  0A86  300A               	movlw	10
  7854  0A87  01B0               	clrf	itoa@val+1
  7855  0A88  00B1               	movwf	itoa@base
  7856  0A89  30C9               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7857  0A8A  01B2               	clrf	itoa@base+1
  7858  0A8B  276D  120A  158A   	fcall	_itoa
  7859                           
  7860                           ;SlaveLiofilizadorVer1.c: 563:              itoa(ss,segundo,10);
  7861  0A8E  0875               	movf	_segundo,w	;volatile
  7862  0A8F  00AF               	movwf	itoa@val
  7863  0A90  300A               	movlw	10
  7864  0A91  01B0               	clrf	itoa@val+1
  7865  0A92  00B1               	movwf	itoa@base
  7866  0A93  30D3               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7867  0A94  01B2               	clrf	itoa@base+1
  7868  0A95  276D               	fcall	_itoa
  7869                           
  7870                           ;SlaveLiofilizadorVer1.c: 566:              strcpy(texto,"");
  7871  0A96  3038               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  7872  0A97  00A0               	movwf	strcpy@from
  7873  0A98  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7874  0A99  160A  158A  2450  120A  158A  	fcall	_strcpy
  7875                           
  7876                           ;SlaveLiofilizadorVer1.c: 567:              if (hh[1]==0)
  7877  0A9E  1683               	bsf	3,5	;RP0=1, select bank1
  7878  0A9F  0840               	movf	(Decodify_Command@hh^(0+128)+1),w
  7879  0AA0  1D03               	btfss	3,2
  7880  0AA1  2AAA               	goto	l7246
  7881                           
  7882                           ;SlaveLiofilizadorVer1.c: 568:                 {;SlaveLiofilizadorVer1.c: 569:          
      +                                 strcat(texto,"0");
  7883  0AA2  27CE  120A  158A   	fcall	PL52	;call to abstracted procedure
  7884  0AA5  23BD  120A  158A   	fcall	_strcat
  7885                           
  7886                           ;SlaveLiofilizadorVer1.c: 570:                 hh[2]=0;
  7887  0AA8  1683               	bsf	3,5	;RP0=1, select bank1
  7888  0AA9  01C1               	clrf	(Decodify_Command@hh^(0+128)+2)
  7889  0AAA                     l7246:	
  7890                           
  7891                           ;SlaveLiofilizadorVer1.c: 572:              strcat(texto,hh);
  7892  0AAA  30BF               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7893  0AAB  1283               	bcf	3,5	;RP0=0, select bank0
  7894  0AAC  00A0               	movwf	strcat@from
  7895  0AAD  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7896  0AAE  01A1               	clrf	strcat@from+1
  7897  0AAF  23BD  120A  158A   	fcall	_strcat
  7898                           
  7899                           ;SlaveLiofilizadorVer1.c: 573:              strcat(texto,":");
  7900  0AB2  27E9  120A  158A   	fcall	PL76	;call to abstracted procedure
  7901  0AB5  23BD  120A  158A   	fcall	_strcat
  7902                           
  7903                           ;SlaveLiofilizadorVer1.c: 574:              if(mm[1]==0)
  7904  0AB8  1683               	bsf	3,5	;RP0=1, select bank1
  7905  0AB9  084A               	movf	(Decodify_Command@mm^(0+128)+1),w
  7906  0ABA  1D03               	btfss	3,2
  7907  0ABB  2AC4               	goto	l7256
  7908                           
  7909                           ;SlaveLiofilizadorVer1.c: 575:                 {;SlaveLiofilizadorVer1.c: 576:          
      +                                 strcat(texto,"0");
  7910  0ABC  27CE  120A  158A   	fcall	PL52	;call to abstracted procedure
  7911  0ABF  23BD  120A  158A   	fcall	_strcat
  7912                           
  7913                           ;SlaveLiofilizadorVer1.c: 577:                 mm[2]=0;
  7914  0AC2  1683               	bsf	3,5	;RP0=1, select bank1
  7915  0AC3  01CB               	clrf	(Decodify_Command@mm^(0+128)+2)
  7916  0AC4                     l7256:	
  7917                           
  7918                           ;SlaveLiofilizadorVer1.c: 579:              strcat(texto,mm);
  7919  0AC4  30C9               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7920  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  7921  0AC6  00A0               	movwf	strcat@from
  7922  0AC7  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7923  0AC8  01A1               	clrf	strcat@from+1
  7924  0AC9  23BD  120A  158A   	fcall	_strcat
  7925                           
  7926                           ;SlaveLiofilizadorVer1.c: 580:              strcat(texto,":");
  7927  0ACC  27E9  120A  158A   	fcall	PL76	;call to abstracted procedure
  7928  0ACF  23BD  120A  158A   	fcall	_strcat
  7929                           
  7930                           ;SlaveLiofilizadorVer1.c: 581:              if(ss[1]==0)
  7931  0AD2  1683               	bsf	3,5	;RP0=1, select bank1
  7932  0AD3  0854               	movf	(Decodify_Command@ss^(0+128)+1),w
  7933  0AD4  1D03               	btfss	3,2
  7934  0AD5  2ADE               	goto	l7266
  7935                           
  7936                           ;SlaveLiofilizadorVer1.c: 582:                 {;SlaveLiofilizadorVer1.c: 583:          
      +                                 strcat(texto,"0");
  7937  0AD6  27CE  120A  158A   	fcall	PL52	;call to abstracted procedure
  7938  0AD9  23BD  120A  158A   	fcall	_strcat
  7939                           
  7940                           ;SlaveLiofilizadorVer1.c: 584:                 ss[2]=0;
  7941  0ADC  1683               	bsf	3,5	;RP0=1, select bank1
  7942  0ADD  01D5               	clrf	(Decodify_Command@ss^(0+128)+2)
  7943  0ADE                     l7266:	
  7944                           
  7945                           ;SlaveLiofilizadorVer1.c: 586:              strcat(texto,ss);
  7946  0ADE  30D3               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7947  0ADF  1283               	bcf	3,5	;RP0=0, select bank0
  7948  0AE0  00A0               	movwf	strcat@from
  7949  0AE1  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7950  0AE2  01A1               	clrf	strcat@from+1
  7951  0AE3  23BD  120A  158A   	fcall	_strcat
  7952                           
  7953                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(strlen(texto));
  7954  0AE6  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
  7955  0AE7  2795  120A  158A   	fcall	_strlen
  7956  0AEA  0820               	movf	?_strlen,w
  7957  0AEB  23A1  120A  158A   	fcall	_Send_To_MB
  7958                           
  7959                           ;SlaveLiofilizadorVer1.c: 588:              USART_put_string(texto);
  7960  0AEE  27F4               	fcall	PL80	;call to abstracted procedure
  7961  0AEF  160A  158A  24E8  120A  158A  	fcall	_USART_put_string
  7962                           
  7963                           ;SlaveLiofilizadorVer1.c: 589:              USART_putc(0);
  7964  0AF4  3000               	movlw	0
  7965  0AF5  2BDD               	ljmp	_USART_putc
  7966  0AF6                     l7274:	
  7967                           ;SlaveLiofilizadorVer1.c: 590:              };SlaveLiofilizadorVer1.c: 591:             
      +                           break;
  7968                           
  7969                           
  7970                           ;SlaveLiofilizadorVer1.c: 594:              hora=usart_protocol.value[0];
  7971  0AF6  1703               	bsf	3,6	;RP1=1, select bank3
  7972  0AF7  0852               	movf	(_usart_protocol^(0+384)+6),w
  7973  0AF8  00F4               	movwf	_hora	;volatile
  7974                           
  7975                           ;SlaveLiofilizadorVer1.c: 595:              minuto=usart_protocol.value[1];
  7976  0AF9  0853               	movf	(_usart_protocol^(0+384)+7),w
  7977  0AFA  00BB               	movwf	_minuto^(0+384)	;volatile
  7978                           
  7979                           ;SlaveLiofilizadorVer1.c: 596:              segundo=usart_protocol.value[2];
  7980  0AFB  0854               	movf	(_usart_protocol^(0+384)+8),w
  7981  0AFC  00F5               	movwf	_segundo	;volatile
  7982  0AFD  290E               	goto	L9
  7983  0AFE                     l7280:	
  7984                           ;SlaveLiofilizadorVer1.c: 597:              Send_To_MB(3);
  7985                           
  7986                           
  7987                           ;SlaveLiofilizadorVer1.c: 602:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7988  0AFE  1703               	bsf	3,6	;RP1=1, select bank3
  7989  0AFF  0852               	movf	(_usart_protocol^(0+384)+6),w
  7990  0B00  1303               	bcf	3,6	;RP1=0, select bank1
  7991  0B01  00AF               	movwf	PROCULUS_Show_Screen@screen^(0+128)
  7992  0B02  01B0               	clrf	(PROCULUS_Show_Screen@screen+1)^(0+128)
  7993  0B03  160A  158A  254E  120A  158A  	fcall	_PROCULUS_Show_Screen
  7994  0B08  290E               	goto	L9
  7995  0B09                     l7286:	
  7996                           ;SlaveLiofilizadorVer1.c: 603:              Send_To_MB(3);
  7997                           
  7998                           
  7999                           ;SlaveLiofilizadorVer1.c: 608:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  8000  0B09  1703               	bsf	3,6	;RP1=1, select bank3
  8001  0B0A  0852               	movf	(_usart_protocol^(0+384)+6),w
  8002  0B0B  1303               	bcf	3,6	;RP1=0, select bank1
  8003  0B0C  00B0               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  8004  0B0D  1703               	bsf	3,6	;RP1=1, select bank3
  8005  0B0E  0853               	movf	(_usart_protocol^(0+384)+7),w
  8006  0B0F  1303               	bcf	3,6	;RP1=0, select bank1
  8007  0B10  00AF               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  8008  0B11  160A  158A  2558  120A  158A  	fcall	_PROCULUS_Buzzer
  8009  0B16  290E               	goto	L9
  8010  0B17                     l7292:	
  8011                           ;SlaveLiofilizadorVer1.c: 610:              Send_To_MB(3);
  8012                           
  8013                           
  8014                           ;SlaveLiofilizadorVer1.c: 614:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  8015  0B17  1703               	bsf	3,6	;RP1=1, select bank3
  8016  0B18  0852               	movf	(_usart_protocol^(0+384)+6),w
  8017  0B19  1303               	bcf	3,6	;RP1=0, select bank1
  8018  0B1A  00B4               	movwf	(PROCULUS_VP_Write_String@vp+1)^(0+128)
  8019  0B1B  1703               	bsf	3,6	;RP1=1, select bank3
  8020  0B1C  0853               	movf	(_usart_protocol^(0+384)+7),w
  8021  0B1D  1303               	bcf	3,6	;RP1=0, select bank1
  8022  0B1E  00B3               	movwf	PROCULUS_VP_Write_String@vp^(0+128)
  8023  0B1F  30D4               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  8024  0B20  00B5               	movwf	PROCULUS_VP_Write_String@text^(0+128)
  8025  0B21  160A  158A  2429  120A  158A  	fcall	_PROCULUS_VP_Write_String
  8026  0B26  290E               	goto	L9
  8027  0B27                     l7298:	
  8028                           ;SlaveLiofilizadorVer1.c: 617:              Send_To_MB(3);
  8029                           
  8030                           
  8031                           ;SlaveLiofilizadorVer1.c: 623:              if(usart_protocol.value[0]==0)
  8032  0B27  1703               	bsf	3,6	;RP1=1, select bank3
  8033  0B28  0852               	movf	(_usart_protocol^(0+384)+6),w
  8034  0B29  1D03               	btfss	3,2
  8035  0B2A  2B36               	goto	l7304
  8036                           
  8037                           ;SlaveLiofilizadorVer1.c: 624:                 {;SlaveLiofilizadorVer1.c: 625:          
      +                                 if(!usart_protocol.value[1])
  8038  0B2B  0853               	movf	(_usart_protocol^(0+384)+7),w
  8039  0B2C  1D03               	btfss	3,2
  8040  0B2D  2B32               	goto	l336
  8041                           
  8042                           ;SlaveLiofilizadorVer1.c: 626:                    PORTCbits.RC0=0;
  8043  0B2E  1283               	bcf	3,5	;RP0=0, select bank0
  8044  0B2F  1303               	bcf	3,6	;RP1=0, select bank0
  8045  0B30  1007               	bcf	7,0	;volatile
  8046  0B31  290E               	goto	L9
  8047  0B32                     l336:	
  8048                           ;SlaveLiofilizadorVer1.c: 627:                 else
  8049                           
  8050                           
  8051                           ;SlaveLiofilizadorVer1.c: 628:                    PORTCbits.RC0=1;
  8052  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  8053  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  8054  0B34  1407               	bsf	7,0	;volatile
  8055  0B35  290E               	goto	L9
  8056  0B36                     l7304:	
  8057  0B36  0B52               	decfsz	(_usart_protocol^(0+384)+6),w
  8058  0B37  290E               	goto	L9
  8059                           
  8060                           ;SlaveLiofilizadorVer1.c: 631:                      {;SlaveLiofilizadorVer1.c: 632:     
      +                                            if(!usart_protocol.value[1])
  8061  0B38  0853               	movf	(_usart_protocol^(0+384)+7),w
  8062  0B39  1D03               	btfss	3,2
  8063  0B3A  2B3F               	goto	l340
  8064                           
  8065                           ;SlaveLiofilizadorVer1.c: 633:                          PORTCbits.RC1=0;
  8066  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  8067  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  8068  0B3D  1087               	bcf	7,1	;volatile
  8069  0B3E  290E               	goto	L9
  8070  0B3F                     l340:	
  8071                           ;SlaveLiofilizadorVer1.c: 634:                       else
  8072                           
  8073                           
  8074                           ;SlaveLiofilizadorVer1.c: 635:                          PORTCbits.RC1=1;
  8075  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  8076  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  8077  0B41  1487               	bsf	7,1	;volatile
  8078  0B42  290E               	goto	L9
  8079  0B43                     l7316:	
  8080                           ;SlaveLiofilizadorVer1.c: 637:              Send_To_MB(3);
  8081                           
  8082  0B43  1703               	bsf	3,6	;RP1=1, select bank3
  8083  0B44  0850               	movf	(_usart_protocol^(0+384)+4),w
  8084  0B45  1303               	bcf	3,6	;RP1=0, select bank1
  8085  0B46  00BD               	movwf	??_Decodify_Command^(0+128)
  8086  0B47  01BE               	clrf	(??_Decodify_Command^(0+128)+1)
  8087                           
  8088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8089                           ; Switch size 1, requested type "space"
  8090                           ; Number of cases is 1, Range of values is 0 to 0
  8091                           ; switch strategies available:
  8092                           ; Name         Instructions Cycles
  8093                           ; simple_byte            4     3 (average)
  8094                           ; direct_byte           11     8 (fixed)
  8095                           ; jumptable            260     6 (fixed)
  8096                           ;	Chosen strategy is simple_byte
  8097  0B48  083E               	movf	(??_Decodify_Command+1)^(0+128),w
  8098  0B49  3A00               	xorlw	0	; case 0
  8099  0B4A  1903               	skipnz
  8100  0B4B  2B4D               	goto	l7480
  8101  0B4C  2BA0               	goto	l342
  8102  0B4D                     l7480:	
  8103                           
  8104                           ; Switch size 1, requested type "space"
  8105                           ; Number of cases is 27, Range of values is 1 to 43
  8106                           ; switch strategies available:
  8107                           ; Name         Instructions Cycles
  8108                           ; simple_byte           82    42 (average)
  8109                           ; direct_byte          140    11 (fixed)
  8110                           ; jumptable            263     9 (fixed)
  8111                           ;	Chosen strategy is simple_byte
  8112  0B4D  083D               	movf	??_Decodify_Command^(0+128),w
  8113  0B4E  3A01               	xorlw	1	; case 1
  8114  0B4F  1903               	skipnz
  8115  0B50  28F7               	goto	l7142
  8116  0B51  3A03               	xorlw	3	; case 2
  8117  0B52  1903               	skipnz
  8118  0B53  28C5               	goto	l7126
  8119  0B54  3A01               	xorlw	1	; case 3
  8120  0B55  1903               	skipnz
  8121  0B56  28EF               	goto	l7138
  8122  0B57  3A0B               	xorlw	11	; case 8
  8123  0B58  1903               	skipnz
  8124  0B59  2901               	goto	l7148
  8125  0B5A  3A01               	xorlw	1	; case 9
  8126  0B5B  1903               	skipnz
  8127  0B5C  2913               	goto	l7152
  8128  0B5D  3A03               	xorlw	3	; case 10
  8129  0B5E  1903               	skipnz
  8130  0B5F  2923               	goto	l7158
  8131  0B60  3A01               	xorlw	1	; case 11
  8132  0B61  1903               	skipnz
  8133  0B62  293E               	goto	l7166
  8134  0B63  3A07               	xorlw	7	; case 12
  8135  0B64  1903               	skipnz
  8136  0B65  2955               	goto	l7172
  8137  0B66  3A01               	xorlw	1	; case 13
  8138  0B67  1903               	skipnz
  8139  0B68  2961               	goto	l7178
  8140  0B69  3A1C               	xorlw	28	; case 17
  8141  0B6A  1903               	skipnz
  8142  0B6B  2974               	goto	l7184
  8143  0B6C  3A03               	xorlw	3	; case 18
  8144  0B6D  1903               	skipnz
  8145  0B6E  2992               	goto	l7190
  8146  0B6F  3A01               	xorlw	1	; case 19
  8147  0B70  1903               	skipnz
  8148  0B71  29B1               	goto	l7196
  8149  0B72  3A07               	xorlw	7	; case 20
  8150  0B73  1903               	skipnz
  8151  0B74  29C9               	goto	l7202
  8152  0B75  3A01               	xorlw	1	; case 21
  8153  0B76  1903               	skipnz
  8154  0B77  2A33               	goto	l7222
  8155  0B78  3A03               	xorlw	3	; case 22
  8156  0B79  1903               	skipnz
  8157  0B7A  2A4B               	goto	l7228
  8158  0B7B  3A01               	xorlw	1	; case 23
  8159  0B7C  1903               	skipnz
  8160  0B7D  2A13               	goto	l7216
  8161  0B7E  3A0F               	xorlw	15	; case 24
  8162  0B7F  1903               	skipnz
  8163  0B80  29E6               	goto	l7208
  8164  0B81  3A01               	xorlw	1	; case 25
  8165  0B82  1903               	skipnz
  8166  0B83  2A68               	goto	l7232
  8167  0B84  3A03               	xorlw	3	; case 26
  8168  0B85  1903               	skipnz
  8169  0B86  2861               	goto	l7110
  8170  0B87  3A04               	xorlw	4	; case 30
  8171  0B88  1903               	skipnz
  8172  0B89  2AF6               	goto	l7274
  8173  0B8A  3A01               	xorlw	1	; case 31
  8174  0B8B  1903               	skipnz
  8175  0B8C  2A75               	goto	l7238
  8176  0B8D  3A3F               	xorlw	63	; case 32
  8177  0B8E  1903               	skipnz
  8178  0B8F  2AFE               	goto	l7280
  8179  0B90  3A01               	xorlw	1	; case 33
  8180  0B91  1903               	skipnz
  8181  0B92  2B09               	goto	l7286
  8182  0B93  3A05               	xorlw	5	; case 36
  8183  0B94  1903               	skipnz
  8184  0B95  2B17               	goto	l7292
  8185  0B96  3A02               	xorlw	2	; case 38
  8186  0B97  1903               	skipnz
  8187  0B98  2B27               	goto	l7298
  8188  0B99  3A0C               	xorlw	12	; case 42
  8189  0B9A  1903               	skipnz
  8190  0B9B  28E7               	goto	l7134
  8191  0B9C  3A01               	xorlw	1	; case 43
  8192  0B9D  1903               	skipnz
  8193  0B9E  2857               	goto	l7106
  8194  0B9F  2BA0               	goto	l342
  8195  0BA0                     l342:	
  8196  0BA0  0008               	return
  8197  0BA1                     __end_of_Decodify_Command:	
  8198  0BA1                     __ptext22:	
  8199 ;; *************** function _Send_To_MB *****************
  8200 ;; Defined at:
  8201 ;;		line 647 in file "SlaveLiofilizadorVer1.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;  size            1    wreg     unsigned char 
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;  size            1    1[BANK0 ] unsigned char 
  8206 ;; Return value:  Size  Location     Type
  8207 ;;                  1    wreg      void 
  8208 ;; Registers used:
  8209 ;;		wreg, status,2, status,0, pclath, cstack
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/100
  8212 ;;		On exit  : 300/100
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8215 ;;      Params:         0       0       0       0       0
  8216 ;;      Locals:         0       1       0       0       0
  8217 ;;      Temps:          0       0       0       0       0
  8218 ;;      Totals:         0       1       0       0       0
  8219 ;;Total ram usage:        1 bytes
  8220 ;; Hardware stack levels used:    1
  8221 ;; Hardware stack levels required when called:    2
  8222 ;; This function calls:
  8223 ;;		_USART_putc
  8224 ;; This function is called by:
  8225 ;;		_Decodify_Command
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           
  8230                           ;psect for function _Send_To_MB
  8231  0BA1                     _Send_To_MB:	
  8232                           
  8233                           ;incstack = 0
  8234                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  8235                           ;Send_To_MB@size stored from wreg
  8236  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  8237  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  8238  0BA3  00A1               	movwf	Send_To_MB@size
  8239                           
  8240                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(0xAA);
  8241  0BA4  30AA               	movlw	170
  8242  0BA5  23DD  120A  158A   	fcall	_USART_putc
  8243                           
  8244                           ;SlaveLiofilizadorVer1.c: 650:      USART_putc(0xBB);
  8245  0BA8  30BB               	movlw	187
  8246  0BA9  23DD  120A  158A   	fcall	_USART_putc
  8247                           
  8248                           ;SlaveLiofilizadorVer1.c: 651:      USART_putc(Board_Number);
  8249  0BAC  1703               	bsf	3,6	;RP1=1, select bank3
  8250  0BAD  0834               	movf	_Board_Number^(0+384),w
  8251  0BAE  23DD  120A  158A   	fcall	_USART_putc
  8252                           
  8253                           ;SlaveLiofilizadorVer1.c: 652:      USART_putc(0x00);
  8254  0BB1  3000               	movlw	0
  8255  0BB2  23DD  120A  158A   	fcall	_USART_putc
  8256                           
  8257                           ;SlaveLiofilizadorVer1.c: 653:      USART_putc(usart_protocol.command);
  8258  0BB5  1703               	bsf	3,6	;RP1=1, select bank3
  8259  0BB6  0850               	movf	(_usart_protocol^(0+384)+4),w
  8260  0BB7  23DD  120A  158A   	fcall	_USART_putc
  8261                           
  8262                           ;SlaveLiofilizadorVer1.c: 654:      USART_putc(size);
  8263  0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  8264  0BBB  0821               	movf	Send_To_MB@size,w
  8265  0BBC  2BDD               	ljmp	_USART_putc
  8266  0BBD                     __end_of_Send_To_MB:	
  8267  0BBD                     __ptext16:	
  8268 ;; *************** function _strcat *****************
  8269 ;; Defined at:
  8270 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;  to              1    wreg     PTR unsigned char 
  8273 ;;		 -> texto(16), 
  8274 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  8275 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  8276 ;;		 -> STR_3(2), Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;  to              1    4[BANK0 ] PTR unsigned char 
  8279 ;;		 -> texto(16), 
  8280 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  8281 ;;		 -> texto(16), 
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  1    wreg      PTR unsigned char 
  8284 ;; Registers used:
  8285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  8286 ;; Tracked objects:
  8287 ;;		On entry : B00/800
  8288 ;;		On exit  : B00/800
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8291 ;;      Params:         0       2       0       0       0
  8292 ;;      Locals:         0       2       0       0       0
  8293 ;;      Temps:          0       1       0       0       0
  8294 ;;      Totals:         0       5       0       0       0
  8295 ;;Total ram usage:        5 bytes
  8296 ;; Hardware stack levels used:    2
  8297 ;; Hardware stack levels required when called:    1
  8298 ;; This function calls:
  8299 ;;		Nothing
  8300 ;; This function is called by:
  8301 ;;		_Decodify_Command
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           
  8306                           ;psect for function _strcat
  8307  0BBD                     _strcat:	
  8308                           
  8309                           ;incstack = 0
  8310                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  8311                           ;strcat@to stored from wreg
  8312  0BBD  00A4               	movwf	strcat@to
  8313  0BBE  00A3               	movwf	strcat@cp
  8314  0BBF                     l5180:	
  8315  0BBF  0823               	movf	strcat@cp,w
  8316  0BC0  0084               	movwf	4
  8317  0BC1  0800               	movf	0,w
  8318  0BC2  1903               	btfsc	3,2
  8319  0BC3  2BCA               	goto	l5184
  8320  0BC4  0AA3               	incf	strcat@cp,f
  8321  0BC5  2BBF               	goto	l5180
  8322  0BC6                     l5182:	
  8323  0BC6  0AA3               	incf	strcat@cp,f
  8324  0BC7  0AA0               	incf	strcat@from,f
  8325  0BC8  1903               	skipnz
  8326  0BC9  0AA1               	incf	strcat@from+1,f
  8327  0BCA                     l5184:	
  8328  0BCA  0821               	movf	strcat@from+1,w
  8329  0BCB  00FF               	movwf	127
  8330  0BCC  0820               	movf	strcat@from,w
  8331  0BCD  0084               	movwf	4
  8332  0BCE  160A  158A  2000  120A  158A  	fcall	stringtab
  8333  0BD3  00A2               	movwf	??_strcat
  8334  0BD4  0823               	movf	strcat@cp,w
  8335  0BD5  0084               	movwf	4
  8336  0BD6  0822               	movf	??_strcat,w
  8337  0BD7  1783               	bsf	3,7	;select IRP bank2
  8338  0BD8  0080               	movwf	0
  8339  0BD9  0800               	movf	0,w
  8340  0BDA  1903               	btfsc	3,2
  8341  0BDB  0008               	return
  8342  0BDC  2BC6               	goto	l5182
  8343  0BDD                     __end_of_strcat:	
  8344  0BDD                     __ptext37:	
  8345 ;; *************** function _USART_putc *****************
  8346 ;; Defined at:
  8347 ;;		line 89 in file "usart.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;  value           1    wreg     unsigned char 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  value           1    0[BANK0 ] unsigned char 
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  1    wreg      void 
  8354 ;; Registers used:
  8355 ;;		wreg
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/100
  8358 ;;		On exit  : 300/100
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8361 ;;      Params:         0       0       0       0       0
  8362 ;;      Locals:         0       1       0       0       0
  8363 ;;      Temps:          0       0       0       0       0
  8364 ;;      Totals:         0       1       0       0       0
  8365 ;;Total ram usage:        1 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:    1
  8368 ;; This function calls:
  8369 ;;		Nothing
  8370 ;; This function is called by:
  8371 ;;		_Decodify_Command
  8372 ;;		_Send_To_MB
  8373 ;;		_PROCULUS_Control_Register_Write
  8374 ;;		_PROCULUS_VP_Write
  8375 ;;		_USART_put_buffer
  8376 ;;		_USART_put_int
  8377 ;;		_USART_put_string
  8378 ;; This function uses a non-reentrant model
  8379 ;;
  8380                           
  8381                           
  8382                           ;psect for function _USART_putc
  8383  0BDD                     _USART_putc:	
  8384                           
  8385                           ;incstack = 0
  8386                           ; Regs used in _USART_putc: [wreg]
  8387                           ;USART_putc@value stored from wreg
  8388  0BDD  1283               	bcf	3,5	;RP0=0, select bank0
  8389  0BDE  1303               	bcf	3,6	;RP1=0, select bank0
  8390  0BDF  00A0               	movwf	USART_putc@value
  8391                           
  8392                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
  8393  0BE0  3014               	movlw	20
  8394  0BE1  1683               	bsf	3,5	;RP0=1, select bank3
  8395  0BE2  1703               	bsf	3,6	;RP1=1, select bank3
  8396  0BE3  00AC               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  8397  0BE4  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  8398  0BE5                     l796:	
  8399                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
  8400                           
  8401  0BE5  1303               	bcf	3,6	;RP1=0, select bank1
  8402  0BE6  1C98               	btfss	24,1	;volatile
  8403  0BE7  2BE5               	goto	l796
  8404                           
  8405                           ;usart.c: 93:     TXREG=value;
  8406  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  8407  0BE9  0820               	movf	USART_putc@value,w
  8408  0BEA  0099               	movwf	25	;volatile
  8409                           
  8410                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
  8411  0BEB  1683               	bsf	3,5	;RP0=1, select bank1
  8412  0BEC  1698               	bsf	24,5	;volatile
  8413  0BED  0008               	return
  8414  0BEE                     __end_of_USART_putc:	
  8415  0BEE                     __ptext47:	
  8416 ;; *************** function _EEPROM_24C1025_Write_Str *****************
  8417 ;; Defined at:
  8418 ;;		line 142 in file "EEPROM_24C1025.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  chip_add        1    wreg     unsigned char 
  8421 ;;  mem_add         4    2[BANK0 ] unsigned long 
  8422 ;;  data            1    6[BANK0 ] PTR unsigned char 
  8423 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;  chip_add        1    9[BANK0 ] unsigned char 
  8426 ;;  ctrl            1   11[BANK0 ] unsigned char 
  8427 ;;  range           1   10[BANK0 ] unsigned char 
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  1    wreg      void 
  8430 ;; Registers used:
  8431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8432 ;; Tracked objects:
  8433 ;;		On entry : 300/300
  8434 ;;		On exit  : 0/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8437 ;;      Params:         0       5       0       0       0
  8438 ;;      Locals:         0       3       0       0       0
  8439 ;;      Temps:          0       2       0       0       0
  8440 ;;      Totals:         0      10       0       0       0
  8441 ;;Total ram usage:       10 bytes
  8442 ;; Hardware stack levels used:    1
  8443 ;; Hardware stack levels required when called:    3
  8444 ;; This function calls:
  8445 ;;		_I2C_Master_Start
  8446 ;;		_I2C_Master_Stop
  8447 ;;		_I2C_Master_Write
  8448 ;; This function is called by:
  8449 ;;		_Decodify_Command
  8450 ;; This function uses a non-reentrant model
  8451 ;;
  8452                           
  8453                           
  8454                           ;psect for function _EEPROM_24C1025_Write_Str
  8455  0BEE                     _EEPROM_24C1025_Write_Str:	
  8456                           
  8457                           ;incstack = 0
  8458                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8459                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
  8460  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  8461  0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  8462  0BF0  00A9               	movwf	EEPROM_24C1025_Write_Str@chip_add
  8463                           
  8464                           ;EEPROM_24C1025.c: 144:      unsigned char ctrl;;EEPROM_24C1025.c: 146:      if(mem_add>
      +                          0x1FFFF) return;
  8465  0BF1  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  8466  0BF2  1D03               	btfss	3,2
  8467  0BF3  0008               	return
  8468  0BF4  3002               	movlw	2
  8469  0BF5  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  8470  0BF6  1D03               	skipz
  8471  0BF7  2BFE               	goto	u5873
  8472  0BF8  3000               	movlw	0
  8473  0BF9  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  8474  0BFA  1D03               	skipz
  8475  0BFB  2BFE               	goto	u5873
  8476  0BFC  3000               	movlw	0
  8477  0BFD  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  8478  0BFE                     u5873:	
  8479  0BFE  1803               	btfsc	3,0
  8480  0BFF  0008               	return
  8481  0C00                     L18:	
  8482                           
  8483                           ;EEPROM_24C1025.c: 148:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8484  0C00  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  8485  0C01  1D03               	btfss	3,2
  8486  0C02  2C0F               	goto	l6624
  8487  0C03  3001               	movlw	1
  8488  0C04  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  8489  0C05  1D03               	skipz
  8490  0C06  2C0D               	goto	u5883
  8491  0C07  3000               	movlw	0
  8492  0C08  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  8493  0C09  1D03               	skipz
  8494  0C0A  2C0D               	goto	u5883
  8495  0C0B  3000               	movlw	0
  8496  0C0C  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  8497  0C0D                     u5883:	
  8498  0C0D  1C03               	btfss	3,0
  8499  0C0E  2C12               	goto	l6626
  8500  0C0F                     l6624:	
  8501  0C0F  3008               	movlw	8
  8502  0C10  00AA               	movwf	EEPROM_24C1025_Write_Str@range
  8503  0C11  2C13               	goto	l6628
  8504  0C12                     l6626:	
  8505  0C12  01AA               	clrf	EEPROM_24C1025_Write_Str@range
  8506  0C13                     l6628:	
  8507                           
  8508                           ;EEPROM_24C1025.c: 149:      ctrl=chip_add;
  8509  0C13  0829               	movf	EEPROM_24C1025_Write_Str@chip_add,w
  8510  0C14  00AB               	movwf	EEPROM_24C1025_Write_Str@ctrl
  8511  0C15  30A0               	movlw	160
  8512                           
  8513                           ;EEPROM_24C1025.c: 150:      ctrl<<=1;
  8514  0C16  1003               	clrc
  8515  0C17  0DAB               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
  8516                           
  8517                           ;EEPROM_24C1025.c: 151:      ctrl |= 0xA0;
  8518  0C18  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  8519                           
  8520                           ;EEPROM_24C1025.c: 152:      ctrl |= range;
  8521  0C19  082A               	movf	EEPROM_24C1025_Write_Str@range,w
  8522  0C1A  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  8523                           
  8524                           ;EEPROM_24C1025.c: 154:      I2C_Master_Start();
  8525  0C1B  2734  120A  158A   	fcall	_I2C_Master_Start
  8526                           
  8527                           ;EEPROM_24C1025.c: 155:      I2C_Master_Write(ctrl);
  8528  0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  8529  0C1F  082B               	movf	EEPROM_24C1025_Write_Str@ctrl,w
  8530  0C20  00A0               	movwf	I2C_Master_Write@d
  8531  0C21  01A1               	clrf	I2C_Master_Write@d+1
  8532  0C22  272E  120A  158A   	fcall	_I2C_Master_Write
  8533                           
  8534                           ;EEPROM_24C1025.c: 156:      I2C_Master_Write(((char *)&mem_add)[1]);
  8535  0C25  0823               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
  8536  0C26  00A0               	movwf	I2C_Master_Write@d
  8537  0C27  01A1               	clrf	I2C_Master_Write@d+1
  8538  0C28  272E  120A  158A   	fcall	_I2C_Master_Write
  8539                           
  8540                           ;EEPROM_24C1025.c: 157:      I2C_Master_Write(((char *)&mem_add)[0]);
  8541  0C2B  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  8542  0C2C  00A0               	movwf	I2C_Master_Write@d
  8543  0C2D  01A1               	clrf	I2C_Master_Write@d+1
  8544  0C2E  272E  120A  158A   	fcall	_I2C_Master_Write
  8545  0C31                     l6688:	
  8546                           ;EEPROM_24C1025.c: 158:      while(*data)
  8547                           
  8548                           
  8549                           ;EEPROM_24C1025.c: 158:      while(*data)
  8550  0C31  0826               	movf	EEPROM_24C1025_Write_Str@data,w
  8551  0C32  0084               	movwf	4
  8552  0C33  1783               	bsf	3,7	;select IRP bank2
  8553  0C34  0800               	movf	0,w
  8554  0C35  1903               	btfsc	3,2
  8555  0C36  2C78               	goto	l6690
  8556                           
  8557                           ;EEPROM_24C1025.c: 159:           {;EEPROM_24C1025.c: 160:           if(mem_add>0x1FFFF)
      +                           return;
  8558  0C37  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  8559  0C38  1D03               	btfss	3,2
  8560  0C39  0008               	return
  8561  0C3A  3002               	movlw	2
  8562  0C3B  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  8563  0C3C  1D03               	skipz
  8564  0C3D  2C44               	goto	u5893
  8565  0C3E  3000               	movlw	0
  8566  0C3F  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  8567  0C40  1D03               	skipz
  8568  0C41  2C44               	goto	u5893
  8569  0C42  3000               	movlw	0
  8570  0C43  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  8571  0C44                     u5893:	
  8572  0C44  1803               	btfsc	3,0
  8573  0C45  0008               	return
  8574                           
  8575                           ;EEPROM_24C1025.c: 161:           if((mem_add+1)%128==0)
  8576  0C46  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  8577  0C47  3E01               	addlw	1
  8578  0C48  397F               	andlw	127
  8579  0C49  1D03               	btfss	3,2
  8580  0C4A  2C69               	goto	l6682
  8581                           
  8582                           ;EEPROM_24C1025.c: 162:             {;EEPROM_24C1025.c: 163:             I2C_Master_Writ
      +                          e(*data);
  8583  0C4B  27E3  120A  158A   	fcall	PL64	;call to abstracted procedure
  8584  0C4E  272E  120A  158A   	fcall	_I2C_Master_Write
  8585                           
  8586                           ;EEPROM_24C1025.c: 164:             I2C_Master_Stop();
  8587  0C51  273C  120A  158A   	fcall	_I2C_Master_Stop
  8588                           
  8589                           ;EEPROM_24C1025.c: 166:             _delay((unsigned long)((5)*(8000000/4000.0)));
  8590  0C54  300D               	movlw	13
  8591  0C55  1283               	bcf	3,5	;RP0=0, select bank0
  8592  0C56  1303               	bcf	3,6	;RP1=0, select bank0
  8593  0C57  00A8               	movwf	??_EEPROM_24C1025_Write_Str+1
  8594  0C58  30FB               	movlw	251
  8595  0C59  00A7               	movwf	??_EEPROM_24C1025_Write_Str
  8596  0C5A                     u6607:	
  8597  0C5A  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
  8598  0C5B  2C5A               	goto	u6607
  8599  0C5C  0BA8               	decfsz	??_EEPROM_24C1025_Write_Str+1,f
  8600  0C5D  2C5A               	goto	u6607
  8601                           
  8602                           ;EEPROM_24C1025.c: 167:             mem_add++;
  8603  0C5E  1283               	bcf	3,5	;RP0=0, select bank0
  8604  0C5F  1303               	bcf	3,6	;RP1=0, select bank0
  8605  0C60  0AA2               	incf	EEPROM_24C1025_Write_Str@mem_add,f
  8606  0C61  1903               	skipnz
  8607  0C62  0AA3               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
  8608  0C63  1903               	skipnz
  8609  0C64  0AA4               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
  8610  0C65  1903               	skipnz
  8611  0C66  0AA5               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
  8612                           
  8613                           ;EEPROM_24C1025.c: 168:             data++;
  8614  0C67  0AA6               	incf	EEPROM_24C1025_Write_Str@data,f
  8615  0C68  2C00               	goto	L18
  8616  0C69                     l6682:	
  8617                           ;EEPROM_24C1025.c: 169:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8618                           
  8619                           
  8620                           ;EEPROM_24C1025.c: 181:             {;EEPROM_24C1025.c: 182:             I2C_Master_Writ
      +                          e(*data);
  8621  0C69  27E3  120A  158A   	fcall	PL64	;call to abstracted procedure
  8622  0C6C  272E  120A  158A   	fcall	_I2C_Master_Write
  8623                           
  8624                           ;EEPROM_24C1025.c: 183:             data++;
  8625  0C6F  0AA6               	incf	EEPROM_24C1025_Write_Str@data,f
  8626                           
  8627                           ;EEPROM_24C1025.c: 184:             mem_add++;
  8628  0C70  0AA2               	incf	EEPROM_24C1025_Write_Str@mem_add,f
  8629  0C71  1903               	skipnz
  8630  0C72  0AA3               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
  8631  0C73  1903               	skipnz
  8632  0C74  0AA4               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
  8633  0C75  1903               	skipnz
  8634  0C76  0AA5               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
  8635  0C77  2C31               	goto	l6688
  8636  0C78                     l6690:	
  8637                           
  8638                           ;EEPROM_24C1025.c: 187:      I2C_Master_Write(0);
  8639  0C78  01A0               	clrf	I2C_Master_Write@d
  8640  0C79  01A1               	clrf	I2C_Master_Write@d+1
  8641  0C7A  272E  120A  158A   	fcall	_I2C_Master_Write
  8642                           
  8643                           ;EEPROM_24C1025.c: 188:      I2C_Master_Stop();
  8644  0C7D  273C  120A  158A   	fcall	_I2C_Master_Stop
  8645                           
  8646                           ;EEPROM_24C1025.c: 189:      _delay((unsigned long)((5)*(8000000/4000.0)));
  8647  0C80  300D               	movlw	13
  8648  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  8649  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  8650  0C83  00A8               	movwf	??_EEPROM_24C1025_Write_Str+1
  8651  0C84  30FB               	movlw	251
  8652  0C85  00A7               	movwf	??_EEPROM_24C1025_Write_Str
  8653  0C86                     u6617:	
  8654  0C86  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
  8655  0C87  2C86               	goto	u6617
  8656  0C88  0BA8               	decfsz	??_EEPROM_24C1025_Write_Str+1,f
  8657  0C89  2C86               	goto	u6617
  8658  0C8A  0008               	return
  8659  0C8B                     __end_of_EEPROM_24C1025_Write_Str:	
  8660  0C8B                     __ptext49:	
  8661 ;; *************** function _EEPROM_24C1025_Read_Str *****************
  8662 ;; Defined at:
  8663 ;;		line 196 in file "EEPROM_24C1025.c"
  8664 ;; Parameters:    Size  Location     Type
  8665 ;;  chip_add        1    wreg     unsigned char 
  8666 ;;  mem_add         4    4[BANK0 ] unsigned long 
  8667 ;;  texto           1    8[BANK0 ] PTR unsigned char 
  8668 ;;		 -> texto(16), 
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;  chip_add        1   12[BANK0 ] unsigned char 
  8671 ;;  ctrl            1   14[BANK0 ] unsigned char 
  8672 ;;  range           1   13[BANK0 ] unsigned char 
  8673 ;;  cnt             1   11[BANK0 ] unsigned char 
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  1    wreg      void 
  8676 ;; Registers used:
  8677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8678 ;; Tracked objects:
  8679 ;;		On entry : 300/300
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8683 ;;      Params:         0       5       0       0       0
  8684 ;;      Locals:         0       4       0       0       0
  8685 ;;      Temps:          0       2       0       0       0
  8686 ;;      Totals:         0      11       0       0       0
  8687 ;;Total ram usage:       11 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; Hardware stack levels required when called:    3
  8690 ;; This function calls:
  8691 ;;		_I2C_Master_Read
  8692 ;;		_I2C_Master_RepeatedStart
  8693 ;;		_I2C_Master_Start
  8694 ;;		_I2C_Master_Stop
  8695 ;;		_I2C_Master_Write
  8696 ;; This function is called by:
  8697 ;;		_Decodify_Command
  8698 ;; This function uses a non-reentrant model
  8699 ;;
  8700                           
  8701                           
  8702                           ;psect for function _EEPROM_24C1025_Read_Str
  8703  0C8B                     _EEPROM_24C1025_Read_Str:	
  8704                           
  8705                           ;incstack = 0
  8706                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8707                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
  8708  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  8709  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  8710  0C8D  00AC               	movwf	EEPROM_24C1025_Read_Str@chip_add
  8711                           
  8712                           ;EEPROM_24C1025.c: 198:      unsigned char range=0;
  8713  0C8E  01AD               	clrf	EEPROM_24C1025_Read_Str@range
  8714                           
  8715                           ;EEPROM_24C1025.c: 199:      unsigned char ctrl;;EEPROM_24C1025.c: 201:      if(mem_add>
      +                          0x1FFFF) return;
  8716  0C8F  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8717  0C90  1D03               	btfss	3,2
  8718  0C91  0008               	return
  8719  0C92  3002               	movlw	2
  8720  0C93  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8721  0C94  1D03               	skipz
  8722  0C95  2C9C               	goto	u5933
  8723  0C96  3000               	movlw	0
  8724  0C97  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8725  0C98  1D03               	skipz
  8726  0C99  2C9C               	goto	u5933
  8727  0C9A  3000               	movlw	0
  8728  0C9B  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8729  0C9C                     u5933:	
  8730  0C9C  1803               	btfsc	3,0
  8731  0C9D  0008               	return
  8732                           
  8733                           ;EEPROM_24C1025.c: 203:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8734  0C9E  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8735  0C9F  1D03               	btfss	3,2
  8736  0CA0  2CAD               	goto	l6702
  8737  0CA1  3001               	movlw	1
  8738  0CA2  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8739  0CA3  1D03               	skipz
  8740  0CA4  2CAB               	goto	u5943
  8741  0CA5  3000               	movlw	0
  8742  0CA6  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8743  0CA7  1D03               	skipz
  8744  0CA8  2CAB               	goto	u5943
  8745  0CA9  3000               	movlw	0
  8746  0CAA  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8747  0CAB                     u5943:	
  8748  0CAB  1C03               	btfss	3,0
  8749  0CAC  2CB0               	goto	l6704
  8750  0CAD                     l6702:	
  8751  0CAD  3008               	movlw	8
  8752  0CAE  00AD               	movwf	EEPROM_24C1025_Read_Str@range
  8753  0CAF  2CB1               	goto	l6706
  8754  0CB0                     l6704:	
  8755  0CB0  01AD               	clrf	EEPROM_24C1025_Read_Str@range
  8756  0CB1                     l6706:	
  8757                           
  8758                           ;EEPROM_24C1025.c: 204:      ctrl=chip_add;
  8759                           
  8760                           ;EEPROM_24C1025.c: 205:      ctrl<<=1;
  8761                           
  8762                           ;EEPROM_24C1025.c: 206:      ctrl |= 0xA0;
  8763                           
  8764                           ;EEPROM_24C1025.c: 207:      ctrl |= 0b00000001;
  8765                           
  8766                           ;EEPROM_24C1025.c: 208:      ctrl |= range;
  8767  0CB1  27B1  120A  158A   	fcall	PL42	;call to abstracted procedure
  8768                           
  8769                           ;EEPROM_24C1025.c: 210:      I2C_Master_Start();
  8770  0CB4  2734  120A  158A   	fcall	_I2C_Master_Start
  8771                           
  8772                           ;EEPROM_24C1025.c: 211:      I2C_Master_Write(ctrl & 0xFE);
  8773  0CB7  27FA  120A  158A   	fcall	PL82	;call to abstracted procedure
  8774  0CBA  272E  120A  158A   	fcall	_I2C_Master_Write
  8775                           
  8776                           ;EEPROM_24C1025.c: 212:      I2C_Master_Write(((char *)&mem_add)[1]);
  8777  0CBD  0825               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8778  0CBE  00A0               	movwf	I2C_Master_Write@d
  8779  0CBF  01A1               	clrf	I2C_Master_Write@d+1
  8780  0CC0  272E  120A  158A   	fcall	_I2C_Master_Write
  8781                           
  8782                           ;EEPROM_24C1025.c: 213:      I2C_Master_Write(((char *)&mem_add)[0]);
  8783  0CC3  0824               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  8784  0CC4  00A0               	movwf	I2C_Master_Write@d
  8785  0CC5  01A1               	clrf	I2C_Master_Write@d+1
  8786  0CC6  272E  120A  158A   	fcall	_I2C_Master_Write
  8787                           
  8788                           ;EEPROM_24C1025.c: 214:      I2C_Master_RepeatedStart();
  8789  0CC9  276A  120A  158A   	fcall	_I2C_Master_RepeatedStart
  8790                           
  8791                           ;EEPROM_24C1025.c: 215:      I2C_Master_Write(ctrl);
  8792  0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  8793  0CCD  082E               	movf	EEPROM_24C1025_Read_Str@ctrl,w
  8794  0CCE  00A0               	movwf	I2C_Master_Write@d
  8795  0CCF  01A1               	clrf	I2C_Master_Write@d+1
  8796  0CD0  272E  120A  158A   	fcall	_I2C_Master_Write
  8797                           
  8798                           ;EEPROM_24C1025.c: 217:      cnt=0;
  8799  0CD3  01AB               	clrf	EEPROM_24C1025_Read_Str@cnt
  8800  0CD4                     l6730:	
  8801                           
  8802                           ;EEPROM_24C1025.c: 219:            if(mem_add>0x1FFFF) break;
  8803  0CD4  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8804  0CD5  1D03               	btfss	3,2
  8805  0CD6  2D5E               	goto	l6784
  8806  0CD7  3002               	movlw	2
  8807  0CD8  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8808  0CD9  1D03               	skipz
  8809  0CDA  2CE1               	goto	u5953
  8810  0CDB  3000               	movlw	0
  8811  0CDC  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8812  0CDD  1D03               	skipz
  8813  0CDE  2CE1               	goto	u5953
  8814  0CDF  3000               	movlw	0
  8815  0CE0  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8816  0CE1                     u5953:	
  8817  0CE1  1803               	btfsc	3,0
  8818  0CE2  2D5E               	goto	l6784
  8819                           
  8820                           ;EEPROM_24C1025.c: 220:            if((mem_add+1)%128==0)
  8821  0CE3  0824               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  8822  0CE4  3E01               	addlw	1
  8823  0CE5  397F               	andlw	127
  8824  0CE6  1D03               	btfss	3,2
  8825  0CE7  2D3F               	goto	l6774
  8826                           
  8827                           ;EEPROM_24C1025.c: 221:              {;EEPROM_24C1025.c: 222:              (*texto)=I2C_
      +                          Master_Read(0);
  8828  0CE8  0828               	movf	EEPROM_24C1025_Read_Str@texto,w
  8829  0CE9  0084               	movwf	4
  8830  0CEA  01A0               	clrf	I2C_Master_Read@a
  8831  0CEB  01A1               	clrf	I2C_Master_Read@a+1
  8832  0CEC  273F  120A  158A   	fcall	_I2C_Master_Read
  8833  0CEF  0820               	movf	?_I2C_Master_Read,w
  8834  0CF0  1783               	bsf	3,7	;select IRP bank2
  8835  0CF1  0080               	movwf	0
  8836                           
  8837                           ;EEPROM_24C1025.c: 223:              I2C_Master_Stop();
  8838  0CF2  273C  120A  158A   	fcall	_I2C_Master_Stop
  8839                           
  8840                           ;EEPROM_24C1025.c: 225:              _delay((unsigned long)((5)*(8000000/4000.0)));
  8841  0CF5  300D               	movlw	13
  8842  0CF6  1283               	bcf	3,5	;RP0=0, select bank0
  8843  0CF7  1303               	bcf	3,6	;RP1=0, select bank0
  8844  0CF8  00AA               	movwf	??_EEPROM_24C1025_Read_Str+1
  8845  0CF9  30FB               	movlw	251
  8846  0CFA  00A9               	movwf	??_EEPROM_24C1025_Read_Str
  8847  0CFB                     u6627:	
  8848  0CFB  0BA9               	decfsz	??_EEPROM_24C1025_Read_Str,f
  8849  0CFC  2CFB               	goto	u6627
  8850  0CFD  0BAA               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
  8851  0CFE  2CFB               	goto	u6627
  8852                           
  8853                           ;EEPROM_24C1025.c: 226:              mem_add++;
  8854  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  8855  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  8856  0D01  0AA4               	incf	EEPROM_24C1025_Read_Str@mem_add,f
  8857  0D02  1903               	skipnz
  8858  0D03  0AA5               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
  8859  0D04  1903               	skipnz
  8860  0D05  0AA6               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
  8861  0D06  1903               	skipnz
  8862  0D07  0AA7               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
  8863                           
  8864                           ;EEPROM_24C1025.c: 227:              texto++;
  8865  0D08  0AA8               	incf	EEPROM_24C1025_Read_Str@texto,f
  8866                           
  8867                           ;EEPROM_24C1025.c: 228:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
  8868  0D09  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  8869  0D0A  1D03               	btfss	3,2
  8870  0D0B  2D18               	goto	l6748
  8871  0D0C  3001               	movlw	1
  8872  0D0D  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  8873  0D0E  1D03               	skipz
  8874  0D0F  2D16               	goto	u5973
  8875  0D10  3000               	movlw	0
  8876  0D11  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8877  0D12  1D03               	skipz
  8878  0D13  2D16               	goto	u5973
  8879  0D14  3000               	movlw	0
  8880  0D15  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  8881  0D16                     u5973:	
  8882  0D16  1C03               	btfss	3,0
  8883  0D17  2D1B               	goto	l6750
  8884  0D18                     l6748:	
  8885  0D18  3008               	movlw	8
  8886  0D19  00AD               	movwf	EEPROM_24C1025_Read_Str@range
  8887  0D1A  2D1C               	goto	l6752
  8888  0D1B                     l6750:	
  8889  0D1B  01AD               	clrf	EEPROM_24C1025_Read_Str@range
  8890  0D1C                     l6752:	
  8891                           
  8892                           ;EEPROM_24C1025.c: 229:              ctrl=chip_add;
  8893                           
  8894                           ;EEPROM_24C1025.c: 230:              ctrl<<=1;
  8895                           
  8896                           ;EEPROM_24C1025.c: 231:              ctrl |= 0xA0;
  8897                           
  8898                           ;EEPROM_24C1025.c: 232:              ctrl |= 0b00000001;
  8899                           
  8900                           ;EEPROM_24C1025.c: 233:              ctrl |= range;
  8901  0D1C  27B1  120A  158A   	fcall	PL42	;call to abstracted procedure
  8902                           
  8903                           ;EEPROM_24C1025.c: 235:              I2C_Master_Start();
  8904  0D1F  2734  120A  158A   	fcall	_I2C_Master_Start
  8905                           
  8906                           ;EEPROM_24C1025.c: 236:              I2C_Master_Write(ctrl & 0xFE);
  8907  0D22  27FA  120A  158A   	fcall	PL82	;call to abstracted procedure
  8908  0D25  272E  120A  158A   	fcall	_I2C_Master_Write
  8909                           
  8910                           ;EEPROM_24C1025.c: 237:              I2C_Master_Write(((char *)&mem_add)[1]);
  8911  0D28  0825               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
  8912  0D29  00A0               	movwf	I2C_Master_Write@d
  8913  0D2A  01A1               	clrf	I2C_Master_Write@d+1
  8914  0D2B  272E  120A  158A   	fcall	_I2C_Master_Write
  8915                           
  8916                           ;EEPROM_24C1025.c: 238:              I2C_Master_Write(((char *)&mem_add)[0]);
  8917  0D2E  0824               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  8918  0D2F  00A0               	movwf	I2C_Master_Write@d
  8919  0D30  01A1               	clrf	I2C_Master_Write@d+1
  8920  0D31  272E  120A  158A   	fcall	_I2C_Master_Write
  8921                           
  8922                           ;EEPROM_24C1025.c: 239:              I2C_Master_RepeatedStart();
  8923  0D34  276A  120A  158A   	fcall	_I2C_Master_RepeatedStart
  8924                           
  8925                           ;EEPROM_24C1025.c: 240:              I2C_Master_Write(ctrl);
  8926  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  8927  0D38  082E               	movf	EEPROM_24C1025_Read_Str@ctrl,w
  8928  0D39  00A0               	movwf	I2C_Master_Write@d
  8929  0D3A  01A1               	clrf	I2C_Master_Write@d+1
  8930  0D3B  272E  120A  158A   	fcall	_I2C_Master_Write
  8931                           
  8932                           ;EEPROM_24C1025.c: 241:              }
  8933  0D3E  2D57               	goto	l6782
  8934  0D3F                     l6774:	
  8935                           
  8936                           ;EEPROM_24C1025.c: 243:              {;EEPROM_24C1025.c: 244:              (*texto)=I2C_
      +                          Master_Read(1);
  8937  0D3F  0828               	movf	EEPROM_24C1025_Read_Str@texto,w
  8938  0D40  0084               	movwf	4
  8939  0D41  01A0               	clrf	I2C_Master_Read@a
  8940  0D42  0AA0               	incf	I2C_Master_Read@a,f
  8941  0D43  01A1               	clrf	I2C_Master_Read@a+1
  8942  0D44  273F  120A  158A   	fcall	_I2C_Master_Read
  8943  0D47  0820               	movf	?_I2C_Master_Read,w
  8944  0D48  1783               	bsf	3,7	;select IRP bank2
  8945  0D49  0080               	movwf	0
  8946                           
  8947                           ;EEPROM_24C1025.c: 245:              if((*texto)==0)break;
  8948  0D4A  0828               	movf	EEPROM_24C1025_Read_Str@texto,w
  8949  0D4B  0084               	movwf	4
  8950  0D4C  0800               	movf	0,w
  8951  0D4D  1903               	btfsc	3,2
  8952  0D4E  2D5E               	goto	l6784
  8953                           
  8954                           ;EEPROM_24C1025.c: 246:              texto++;
  8955  0D4F  0AA8               	incf	EEPROM_24C1025_Read_Str@texto,f
  8956                           
  8957                           ;EEPROM_24C1025.c: 247:              mem_add++;
  8958  0D50  0AA4               	incf	EEPROM_24C1025_Read_Str@mem_add,f
  8959  0D51  1903               	skipnz
  8960  0D52  0AA5               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
  8961  0D53  1903               	skipnz
  8962  0D54  0AA6               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
  8963  0D55  1903               	skipnz
  8964  0D56  0AA7               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
  8965  0D57                     l6782:	
  8966                           
  8967                           ;EEPROM_24C1025.c: 249:        }while((cnt++)<64);
  8968  0D57  082B               	movf	EEPROM_24C1025_Read_Str@cnt,w
  8969  0D58  0AAB               	incf	EEPROM_24C1025_Read_Str@cnt,f
  8970  0D59  00A9               	movwf	??_EEPROM_24C1025_Read_Str
  8971  0D5A  3040               	movlw	64
  8972  0D5B  0229               	subwf	??_EEPROM_24C1025_Read_Str,w
  8973  0D5C  1C03               	skipc
  8974  0D5D  2CD4               	goto	l6730
  8975  0D5E                     l6784:	
  8976                           
  8977                           ;EEPROM_24C1025.c: 251:      I2C_Master_Read(0);
  8978  0D5E  01A0               	clrf	I2C_Master_Read@a
  8979  0D5F  01A1               	clrf	I2C_Master_Read@a+1
  8980  0D60  273F  120A  158A   	fcall	_I2C_Master_Read
  8981                           
  8982                           ;EEPROM_24C1025.c: 252:      I2C_Master_Stop();
  8983  0D63  273C  120A  158A   	fcall	_I2C_Master_Stop
  8984                           
  8985                           ;EEPROM_24C1025.c: 253:      _delay((unsigned long)((650)*(8000000/4000000.0)));
  8986  0D66  30B9               	movlw	185
  8987  0D67  1283               	bcf	3,5	;RP0=0, select bank0
  8988  0D68  1303               	bcf	3,6	;RP1=0, select bank0
  8989  0D69  00A9               	movwf	??_EEPROM_24C1025_Read_Str
  8990  0D6A                     u6637:	
  8991  0D6A  2D6B               	nop2
  8992  0D6B  2D6C               	nop2
  8993  0D6C  0BA9               	decfsz	??_EEPROM_24C1025_Read_Str,f
  8994  0D6D  2D6A               	goto	u6637
  8995  0D6E  2D6F               	nop2
  8996  0D6F  0008               	return
  8997  0D70                     __end_of_EEPROM_24C1025_Read_Str:	
  8998  0D70                     __ptext52:	
  8999 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
  9000 ;; Defined at:
  9001 ;;		line 74 in file "EEPROM_24C1025.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;  chip_add        1    wreg     unsigned char 
  9004 ;;  mem_add         4    4[BANK0 ] unsigned long 
  9005 ;;  sizedata        1    8[BANK0 ] unsigned char 
  9006 ;;  data            2    9[BANK0 ] PTR unsigned char 
  9007 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), buffer(32), 
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;  chip_add        1   14[BANK0 ] unsigned char 
  9010 ;;  cnt             1   13[BANK0 ] unsigned char 
  9011 ;;  ctrl            1   16[BANK0 ] unsigned char 
  9012 ;;  range           1   15[BANK0 ] unsigned char 
  9013 ;;  cnt             1    0        unsigned char 
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  1    wreg      void 
  9016 ;; Registers used:
  9017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/300
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9023 ;;      Params:         0       7       0       0       0
  9024 ;;      Locals:         0       4       0       0       0
  9025 ;;      Temps:          0       2       0       0       0
  9026 ;;      Totals:         0      13       0       0       0
  9027 ;;Total ram usage:       13 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; Hardware stack levels required when called:    3
  9030 ;; This function calls:
  9031 ;;		_I2C_Master_Read
  9032 ;;		_I2C_Master_RepeatedStart
  9033 ;;		_I2C_Master_Start
  9034 ;;		_I2C_Master_Stop
  9035 ;;		_I2C_Master_Write
  9036 ;; This function is called by:
  9037 ;;		_Decodify_Command
  9038 ;;		_EEPROM_24C1025_Read_Byte
  9039 ;;		_EEPROM_24C1025_Read_Int
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           
  9044                           ;psect for function _EEPROM_24C1025_Read_Buffer
  9045  0D70                     _EEPROM_24C1025_Read_Buffer:	
  9046                           
  9047                           ;incstack = 0
  9048                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9049                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
  9050  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  9051  0D71  1303               	bcf	3,6	;RP1=0, select bank0
  9052  0D72  00AE               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
  9053                           
  9054                           ;EEPROM_24C1025.c: 81:      unsigned char ctrl;;EEPROM_24C1025.c: 83:      Delay_Led_Mem
      +                          ory=20;
  9055                           
  9056                           ;EEPROM_24C1025.c: 85:      if(mem_add>0x1FFFF) return;
  9057  0D73  27D4  120A  158A   	fcall	PL56	;call to abstracted procedure
  9058  0D76  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  9059  0D77  1D03               	btfss	3,2
  9060  0D78  0008               	return
  9061  0D79  3002               	movlw	2
  9062  0D7A  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  9063  0D7B  1D03               	skipz
  9064  0D7C  2D83               	goto	u5683
  9065  0D7D  3000               	movlw	0
  9066  0D7E  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9067  0D7F  1D03               	skipz
  9068  0D80  2D83               	goto	u5683
  9069  0D81  3000               	movlw	0
  9070  0D82  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9071  0D83                     u5683:	
  9072  0D83  1803               	btfsc	3,0
  9073  0D84  0008               	return
  9074                           
  9075                           ;EEPROM_24C1025.c: 87:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9076  0D85  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  9077  0D86  1D03               	btfss	3,2
  9078  0D87  2D94               	goto	l6356
  9079  0D88  3001               	movlw	1
  9080  0D89  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  9081  0D8A  1D03               	skipz
  9082  0D8B  2D92               	goto	u5693
  9083  0D8C  3000               	movlw	0
  9084  0D8D  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9085  0D8E  1D03               	skipz
  9086  0D8F  2D92               	goto	u5693
  9087  0D90  3000               	movlw	0
  9088  0D91  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9089  0D92                     u5693:	
  9090  0D92  1C03               	btfss	3,0
  9091  0D93  2D97               	goto	l6358
  9092  0D94                     l6356:	
  9093  0D94  3008               	movlw	8
  9094  0D95  00AF               	movwf	EEPROM_24C1025_Read_Buffer@range
  9095  0D96  2D98               	goto	l6360
  9096  0D97                     l6358:	
  9097  0D97  01AF               	clrf	EEPROM_24C1025_Read_Buffer@range
  9098  0D98                     l6360:	
  9099                           
  9100                           ;EEPROM_24C1025.c: 88:      ctrl=chip_add;
  9101                           
  9102                           ;EEPROM_24C1025.c: 89:      ctrl<<=1;
  9103                           
  9104                           ;EEPROM_24C1025.c: 90:      ctrl |= 0xA0;
  9105                           
  9106                           ;EEPROM_24C1025.c: 91:      ctrl |= 0b00000001;
  9107                           
  9108                           ;EEPROM_24C1025.c: 92:      ctrl |= range;
  9109  0D98  27BB  120A  158A   	fcall	PL44	;call to abstracted procedure
  9110                           
  9111                           ;EEPROM_24C1025.c: 94:      I2C_Master_Start();
  9112  0D9B  2734  120A  158A   	fcall	_I2C_Master_Start
  9113                           
  9114                           ;EEPROM_24C1025.c: 95:      I2C_Master_Write(ctrl & 0xFE);
  9115  0D9E  27EE  120A  158A   	fcall	PL78	;call to abstracted procedure
  9116  0DA1  272E  120A  158A   	fcall	_I2C_Master_Write
  9117                           
  9118                           ;EEPROM_24C1025.c: 96:      I2C_Master_Write(((char *)&mem_add)[1]);
  9119  0DA4  0825               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9120  0DA5  00A0               	movwf	I2C_Master_Write@d
  9121  0DA6  01A1               	clrf	I2C_Master_Write@d+1
  9122  0DA7  272E  120A  158A   	fcall	_I2C_Master_Write
  9123                           
  9124                           ;EEPROM_24C1025.c: 97:      I2C_Master_Write(((char *)&mem_add)[0]);
  9125  0DAA  0824               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9126  0DAB  00A0               	movwf	I2C_Master_Write@d
  9127  0DAC  01A1               	clrf	I2C_Master_Write@d+1
  9128  0DAD  272E  120A  158A   	fcall	_I2C_Master_Write
  9129                           
  9130                           ;EEPROM_24C1025.c: 98:      I2C_Master_RepeatedStart();
  9131  0DB0  276A  120A  158A   	fcall	_I2C_Master_RepeatedStart
  9132                           
  9133                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(ctrl);
  9134  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  9135  0DB4  0830               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
  9136  0DB5  00A0               	movwf	I2C_Master_Write@d
  9137  0DB6  01A1               	clrf	I2C_Master_Write@d+1
  9138  0DB7  272E  120A  158A   	fcall	_I2C_Master_Write
  9139                           
  9140                           ;EEPROM_24C1025.c: 101:      for(char cnt=0;cnt<(sizedata);cnt++)
  9141  0DBA  01AD               	clrf	EEPROM_24C1025_Read_Buffer@cnt_1518
  9142  0DBB                     l6436:	
  9143  0DBB  0828               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
  9144  0DBC  022D               	subwf	EEPROM_24C1025_Read_Buffer@cnt_1518,w
  9145  0DBD  1803               	btfsc	3,0
  9146  0DBE  2E41               	goto	l6438
  9147                           
  9148                           ;EEPROM_24C1025.c: 102:         {;EEPROM_24C1025.c: 103:            if(mem_add>0x1FFFF) 
      +                          break;
  9149  0DBF  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  9150  0DC0  1D03               	btfss	3,2
  9151  0DC1  2E41               	goto	l6438
  9152  0DC2  3002               	movlw	2
  9153  0DC3  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  9154  0DC4  1D03               	skipz
  9155  0DC5  2DCC               	goto	u5703
  9156  0DC6  3000               	movlw	0
  9157  0DC7  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9158  0DC8  1D03               	skipz
  9159  0DC9  2DCC               	goto	u5703
  9160  0DCA  3000               	movlw	0
  9161  0DCB  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9162  0DCC                     u5703:	
  9163  0DCC  1803               	btfsc	3,0
  9164  0DCD  2E41               	goto	l6438
  9165                           
  9166                           ;EEPROM_24C1025.c: 104:            if((mem_add+1)%128==0)
  9167  0DCE  0824               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9168  0DCF  3E01               	addlw	1
  9169  0DD0  397F               	andlw	127
  9170  0DD1  1D03               	btfss	3,2
  9171  0DD2  2E2B               	goto	l6428
  9172                           
  9173                           ;EEPROM_24C1025.c: 105:              {;EEPROM_24C1025.c: 106:              (*data)=I2C_M
      +                          aster_Read(0);
  9174  0DD3  27DC  120A  158A   	fcall	PL58	;call to abstracted procedure
  9175  0DD6  01A1               	clrf	I2C_Master_Read@a+1
  9176  0DD7  273F  120A  158A   	fcall	_I2C_Master_Read
  9177  0DDA  0820               	movf	?_I2C_Master_Read,w
  9178  0DDB  0080               	movwf	0
  9179                           
  9180                           ;EEPROM_24C1025.c: 107:              I2C_Master_Stop();
  9181  0DDC  273C  120A  158A   	fcall	_I2C_Master_Stop
  9182                           
  9183                           ;EEPROM_24C1025.c: 109:              _delay((unsigned long)((5)*(8000000/4000.0)));
  9184  0DDF  300D               	movlw	13
  9185  0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  9186  0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  9187  0DE2  00AC               	movwf	??_EEPROM_24C1025_Read_Buffer+1
  9188  0DE3  30FB               	movlw	251
  9189  0DE4  00AB               	movwf	??_EEPROM_24C1025_Read_Buffer
  9190  0DE5                     u6647:	
  9191  0DE5  0BAB               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
  9192  0DE6  2DE5               	goto	u6647
  9193  0DE7  0BAC               	decfsz	??_EEPROM_24C1025_Read_Buffer+1,f
  9194  0DE8  2DE5               	goto	u6647
  9195                           
  9196                           ;EEPROM_24C1025.c: 110:              mem_add++;
  9197  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  9198  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  9199  0DEB  0AA4               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
  9200  0DEC  1903               	skipnz
  9201  0DED  0AA5               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
  9202  0DEE  1903               	skipnz
  9203  0DEF  0AA6               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
  9204  0DF0  1903               	skipnz
  9205  0DF1  0AA7               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
  9206                           
  9207                           ;EEPROM_24C1025.c: 111:              data++;
  9208  0DF2  0AA9               	incf	EEPROM_24C1025_Read_Buffer@data,f
  9209  0DF3  1903               	skipnz
  9210  0DF4  0AAA               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
  9211                           
  9212                           ;EEPROM_24C1025.c: 112:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9213  0DF5  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  9214  0DF6  1D03               	btfss	3,2
  9215  0DF7  2E04               	goto	l6402
  9216  0DF8  3001               	movlw	1
  9217  0DF9  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  9218  0DFA  1D03               	skipz
  9219  0DFB  2E02               	goto	u5723
  9220  0DFC  3000               	movlw	0
  9221  0DFD  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9222  0DFE  1D03               	skipz
  9223  0DFF  2E02               	goto	u5723
  9224  0E00  3000               	movlw	0
  9225  0E01  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9226  0E02                     u5723:	
  9227  0E02  1C03               	btfss	3,0
  9228  0E03  2E07               	goto	l6404
  9229  0E04                     l6402:	
  9230  0E04  3008               	movlw	8
  9231  0E05  00AF               	movwf	EEPROM_24C1025_Read_Buffer@range
  9232  0E06  2E08               	goto	l6406
  9233  0E07                     l6404:	
  9234  0E07  01AF               	clrf	EEPROM_24C1025_Read_Buffer@range
  9235  0E08                     l6406:	
  9236                           
  9237                           ;EEPROM_24C1025.c: 113:              ctrl=chip_add;
  9238                           
  9239                           ;EEPROM_24C1025.c: 114:              ctrl<<=1;
  9240                           
  9241                           ;EEPROM_24C1025.c: 115:              ctrl |= 0xA0;
  9242                           
  9243                           ;EEPROM_24C1025.c: 116:              ctrl |= 0b00000001;
  9244                           
  9245                           ;EEPROM_24C1025.c: 117:              ctrl |= range;
  9246  0E08  27BB  120A  158A   	fcall	PL44	;call to abstracted procedure
  9247                           
  9248                           ;EEPROM_24C1025.c: 119:              I2C_Master_Start();
  9249  0E0B  2734  120A  158A   	fcall	_I2C_Master_Start
  9250                           
  9251                           ;EEPROM_24C1025.c: 120:              I2C_Master_Write(ctrl & 0xFE);
  9252  0E0E  27EE  120A  158A   	fcall	PL78	;call to abstracted procedure
  9253  0E11  272E  120A  158A   	fcall	_I2C_Master_Write
  9254                           
  9255                           ;EEPROM_24C1025.c: 121:              I2C_Master_Write(((char *)&mem_add)[1]);
  9256  0E14  0825               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9257  0E15  00A0               	movwf	I2C_Master_Write@d
  9258  0E16  01A1               	clrf	I2C_Master_Write@d+1
  9259  0E17  272E  120A  158A   	fcall	_I2C_Master_Write
  9260                           
  9261                           ;EEPROM_24C1025.c: 122:              I2C_Master_Write(((char *)&mem_add)[0]);
  9262  0E1A  0824               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9263  0E1B  00A0               	movwf	I2C_Master_Write@d
  9264  0E1C  01A1               	clrf	I2C_Master_Write@d+1
  9265  0E1D  272E  120A  158A   	fcall	_I2C_Master_Write
  9266                           
  9267                           ;EEPROM_24C1025.c: 123:              I2C_Master_RepeatedStart();
  9268  0E20  276A  120A  158A   	fcall	_I2C_Master_RepeatedStart
  9269                           
  9270                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl);
  9271  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  9272  0E24  0830               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
  9273  0E25  00A0               	movwf	I2C_Master_Write@d
  9274  0E26  01A1               	clrf	I2C_Master_Write@d+1
  9275  0E27  272E  120A  158A   	fcall	_I2C_Master_Write
  9276                           
  9277                           ;EEPROM_24C1025.c: 125:              }
  9278  0E2A  2E3F               	goto	l6434
  9279  0E2B                     l6428:	
  9280                           
  9281                           ;EEPROM_24C1025.c: 127:              {;EEPROM_24C1025.c: 128:              (*data)=I2C_M
      +                          aster_Read(1);
  9282  0E2B  27DC  120A  158A   	fcall	PL58	;call to abstracted procedure
  9283  0E2E  0AA0               	incf	I2C_Master_Read@a,f
  9284  0E2F  01A1               	clrf	I2C_Master_Read@a+1
  9285  0E30  273F  120A  158A   	fcall	_I2C_Master_Read
  9286  0E33  0820               	movf	?_I2C_Master_Read,w
  9287  0E34  0080               	movwf	0
  9288                           
  9289                           ;EEPROM_24C1025.c: 129:              data++;
  9290  0E35  0AA9               	incf	EEPROM_24C1025_Read_Buffer@data,f
  9291  0E36  1903               	skipnz
  9292  0E37  0AAA               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
  9293                           
  9294                           ;EEPROM_24C1025.c: 130:              mem_add++;
  9295  0E38  0AA4               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
  9296  0E39  1903               	skipnz
  9297  0E3A  0AA5               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
  9298  0E3B  1903               	skipnz
  9299  0E3C  0AA6               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
  9300  0E3D  1903               	skipnz
  9301  0E3E  0AA7               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
  9302  0E3F                     l6434:	
  9303                           
  9304                           ;EEPROM_24C1025.c: 132:         }
  9305  0E3F  0AAD               	incf	EEPROM_24C1025_Read_Buffer@cnt_1518,f
  9306  0E40  2DBB               	goto	l6436
  9307  0E41                     l6438:	
  9308                           
  9309                           ;EEPROM_24C1025.c: 133:         I2C_Master_Read(0);
  9310  0E41  01A0               	clrf	I2C_Master_Read@a
  9311  0E42  01A1               	clrf	I2C_Master_Read@a+1
  9312  0E43  273F  120A  158A   	fcall	_I2C_Master_Read
  9313                           
  9314                           ;EEPROM_24C1025.c: 134:         I2C_Master_Stop();
  9315  0E46  273C  120A  158A   	fcall	_I2C_Master_Stop
  9316                           
  9317                           ;EEPROM_24C1025.c: 135:         _delay((unsigned long)((650)*(8000000/4000000.0)));
  9318  0E49  30B9               	movlw	185
  9319  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  9320  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  9321  0E4C  00AB               	movwf	??_EEPROM_24C1025_Read_Buffer
  9322  0E4D                     u6657:	
  9323  0E4D  2E4E               	nop2
  9324  0E4E  2E4F               	nop2
  9325  0E4F  0BAB               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
  9326  0E50  2E4D               	goto	u6657
  9327  0E51  2E52               	nop2
  9328  0E52  0008               	return
  9329  0E53                     __end_of_EEPROM_24C1025_Read_Buffer:	
  9330  0E53                     __ptext57:	
  9331 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
  9332 ;; Defined at:
  9333 ;;		line 13 in file "EEPROM_24C1025.c"
  9334 ;; Parameters:    Size  Location     Type
  9335 ;;  chip_add        1    wreg     unsigned char 
  9336 ;;  mem_add         4    2[BANK0 ] unsigned long 
  9337 ;;  sizedata        1    6[BANK0 ] unsigned char 
  9338 ;;  data            2    7[BANK0 ] PTR unsigned char 
  9339 ;;		 -> EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(1), usart_protocol.value(10), usart_protocol(1
      +6), 
  9340 ;; Auto vars:     Size  Location     Type
  9341 ;;  chip_add        1   12[BANK0 ] unsigned char 
  9342 ;;  ctrl            1   14[BANK0 ] unsigned char 
  9343 ;;  range           1   13[BANK0 ] unsigned char 
  9344 ;;  count           1   11[BANK0 ] unsigned char 
  9345 ;; Return value:  Size  Location     Type
  9346 ;;                  1    wreg      void 
  9347 ;; Registers used:
  9348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9349 ;; Tracked objects:
  9350 ;;		On entry : 0/300
  9351 ;;		On exit  : 0/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9354 ;;      Params:         0       7       0       0       0
  9355 ;;      Locals:         0       4       0       0       0
  9356 ;;      Temps:          0       2       0       0       0
  9357 ;;      Totals:         0      13       0       0       0
  9358 ;;Total ram usage:       13 bytes
  9359 ;; Hardware stack levels used:    1
  9360 ;; Hardware stack levels required when called:    3
  9361 ;; This function calls:
  9362 ;;		_I2C_Master_Start
  9363 ;;		_I2C_Master_Stop
  9364 ;;		_I2C_Master_Write
  9365 ;; This function is called by:
  9366 ;;		_Decodify_Command
  9367 ;;		_EEPROM_24C1025_Write_Byte
  9368 ;;		_EEPROM_24C1025_Write_Int
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           
  9373                           ;psect for function _EEPROM_24C1025_Write_Buffer
  9374  0E53                     _EEPROM_24C1025_Write_Buffer:	
  9375                           
  9376                           ;incstack = 0
  9377                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack
      +                          ]
  9378                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
  9379  0E53  1283               	bcf	3,5	;RP0=0, select bank0
  9380  0E54  1303               	bcf	3,6	;RP1=0, select bank0
  9381  0E55  00AC               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
  9382                           
  9383                           ;EEPROM_24C1025.c: 19:      unsigned char ctrl;;EEPROM_24C1025.c: 20:      unsigned char
      +                           count;;EEPROM_24C1025.c: 22:      Delay_Led_Memory=20;
  9384                           
  9385                           ;EEPROM_24C1025.c: 24:      if(mem_add>0x1FFFF) return;
  9386  0E56  27D4  120A  158A   	fcall	PL56	;call to abstracted procedure
  9387  0E59  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  9388  0E5A  1D03               	btfss	3,2
  9389  0E5B  0008               	return
  9390  0E5C  3002               	movlw	2
  9391  0E5D  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  9392  0E5E  1D03               	skipz
  9393  0E5F  2E66               	goto	u5493
  9394  0E60  3000               	movlw	0
  9395  0E61  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  9396  0E62  1D03               	skipz
  9397  0E63  2E66               	goto	u5493
  9398  0E64  3000               	movlw	0
  9399  0E65  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  9400  0E66                     u5493:	
  9401  0E66  1803               	btfsc	3,0
  9402  0E67  0008               	return
  9403                           
  9404                           ;EEPROM_24C1025.c: 26:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9405  0E68  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  9406  0E69  1D03               	btfss	3,2
  9407  0E6A  2E77               	goto	l6176
  9408  0E6B  3001               	movlw	1
  9409  0E6C  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  9410  0E6D  1D03               	skipz
  9411  0E6E  2E75               	goto	u5503
  9412  0E6F  3000               	movlw	0
  9413  0E70  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  9414  0E71  1D03               	skipz
  9415  0E72  2E75               	goto	u5503
  9416  0E73  3000               	movlw	0
  9417  0E74  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  9418  0E75                     u5503:	
  9419  0E75  1C03               	btfss	3,0
  9420  0E76  2E7A               	goto	l6178
  9421  0E77                     l6176:	
  9422  0E77  3008               	movlw	8
  9423  0E78  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
  9424  0E79  2E7B               	goto	l6180
  9425  0E7A                     l6178:	
  9426  0E7A  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
  9427  0E7B                     l6180:	
  9428                           
  9429                           ;EEPROM_24C1025.c: 27:      ctrl=chip_add;
  9430                           
  9431                           ;EEPROM_24C1025.c: 28:      ctrl<<=1;
  9432                           
  9433                           ;EEPROM_24C1025.c: 29:      ctrl |= 0xA0;
  9434                           
  9435                           ;EEPROM_24C1025.c: 30:      ctrl |= range;
  9436  0E7B  27C5  120A  158A   	fcall	PL46	;call to abstracted procedure
  9437                           
  9438                           ;EEPROM_24C1025.c: 32:      I2C_Master_Start();
  9439  0E7E  2734  120A  158A   	fcall	_I2C_Master_Start
  9440                           
  9441                           ;EEPROM_24C1025.c: 33:      I2C_Master_Write(ctrl);
  9442  0E81  1283               	bcf	3,5	;RP0=0, select bank0
  9443  0E82  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
  9444  0E83  00A0               	movwf	I2C_Master_Write@d
  9445  0E84  01A1               	clrf	I2C_Master_Write@d+1
  9446  0E85  272E  120A  158A   	fcall	_I2C_Master_Write
  9447                           
  9448                           ;EEPROM_24C1025.c: 34:      I2C_Master_Write(((char *)&mem_add)[1]);
  9449  0E88  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  9450  0E89  00A0               	movwf	I2C_Master_Write@d
  9451  0E8A  01A1               	clrf	I2C_Master_Write@d+1
  9452  0E8B  272E  120A  158A   	fcall	_I2C_Master_Write
  9453                           
  9454                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(((char *)&mem_add)[0]);
  9455  0E8E  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
  9456  0E8F  00A0               	movwf	I2C_Master_Write@d
  9457  0E90  01A1               	clrf	I2C_Master_Write@d+1
  9458  0E91  272E  120A  158A   	fcall	_I2C_Master_Write
  9459                           
  9460                           ;EEPROM_24C1025.c: 36:      for(count=0;count<(sizedata-1);count++)
  9461  0E94  01AB               	clrf	EEPROM_24C1025_Write_Buffer@count
  9462  0E95                     l6244:	
  9463  0E95  0826               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
  9464  0E96  3EFF               	addlw	255
  9465  0E97  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
  9466  0E98  30FF               	movlw	255
  9467  0E99  1803               	skipnc
  9468  0E9A  3000               	movlw	0
  9469  0E9B  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
  9470  0E9C  3A80               	xorlw	128
  9471  0E9D  3C80               	sublw	128
  9472  0E9E  1D03               	skipz
  9473  0E9F  2EA2               	goto	u5545
  9474  0EA0  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
  9475  0EA1  022B               	subwf	EEPROM_24C1025_Write_Buffer@count,w
  9476  0EA2                     u5545:	
  9477  0EA2  1803               	btfsc	3,0
  9478  0EA3  2F18               	goto	l6246
  9479                           
  9480                           ;EEPROM_24C1025.c: 37:           {;EEPROM_24C1025.c: 38:           if(mem_add>0x1FFFF) r
      +                          eturn;
  9481  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  9482  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  9483  0EA6  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  9484  0EA7  1D03               	btfss	3,2
  9485  0EA8  0008               	return
  9486  0EA9  3002               	movlw	2
  9487  0EAA  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  9488  0EAB  1D03               	skipz
  9489  0EAC  2EB3               	goto	u5513
  9490  0EAD  3000               	movlw	0
  9491  0EAE  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  9492  0EAF  1D03               	skipz
  9493  0EB0  2EB3               	goto	u5513
  9494  0EB1  3000               	movlw	0
  9495  0EB2  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  9496  0EB3                     u5513:	
  9497  0EB3  1803               	btfsc	3,0
  9498  0EB4  0008               	return
  9499                           
  9500                           ;EEPROM_24C1025.c: 39:           if((mem_add+1)%128==0)
  9501  0EB5  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
  9502  0EB6  3E01               	addlw	1
  9503  0EB7  397F               	andlw	127
  9504  0EB8  1D03               	btfss	3,2
  9505  0EB9  2F06               	goto	l6236
  9506                           
  9507                           ;EEPROM_24C1025.c: 40:             {;EEPROM_24C1025.c: 41:             I2C_Master_Write(
      +                          *data);
  9508  0EBA  27A8  120A  158A   	fcall	PL30	;call to abstracted procedure
  9509  0EBD  272E  120A  158A   	fcall	_I2C_Master_Write
  9510                           
  9511                           ;EEPROM_24C1025.c: 42:             I2C_Master_Stop();
  9512  0EC0  273C  120A  158A   	fcall	_I2C_Master_Stop
  9513                           
  9514                           ;EEPROM_24C1025.c: 44:             _delay((unsigned long)((5)*(8000000/4000.0)));
  9515  0EC3  300D               	movlw	13
  9516  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  9517  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  9518  0EC6  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
  9519  0EC7  30FB               	movlw	251
  9520  0EC8  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
  9521  0EC9                     u6667:	
  9522  0EC9  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
  9523  0ECA  2EC9               	goto	u6667
  9524  0ECB  0BAA               	decfsz	??_EEPROM_24C1025_Write_Buffer+1,f
  9525  0ECC  2EC9               	goto	u6667
  9526                           
  9527                           ;EEPROM_24C1025.c: 45:             mem_add++;
  9528  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  9529  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  9530  0ECF  0AA2               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
  9531  0ED0  1903               	skipnz
  9532  0ED1  0AA3               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
  9533  0ED2  1903               	skipnz
  9534  0ED3  0AA4               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
  9535  0ED4  1903               	skipnz
  9536  0ED5  0AA5               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
  9537                           
  9538                           ;EEPROM_24C1025.c: 46:             data++;
  9539  0ED6  0AA7               	incf	EEPROM_24C1025_Write_Buffer@data,f
  9540  0ED7  1903               	skipnz
  9541  0ED8  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
  9542                           
  9543                           ;EEPROM_24C1025.c: 47:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9544  0ED9  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
  9545  0EDA  1D03               	btfss	3,2
  9546  0EDB  2EE8               	goto	l6216
  9547  0EDC  3001               	movlw	1
  9548  0EDD  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
  9549  0EDE  1D03               	skipz
  9550  0EDF  2EE6               	goto	u5533
  9551  0EE0  3000               	movlw	0
  9552  0EE1  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  9553  0EE2  1D03               	skipz
  9554  0EE3  2EE6               	goto	u5533
  9555  0EE4  3000               	movlw	0
  9556  0EE5  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
  9557  0EE6                     u5533:	
  9558  0EE6  1C03               	btfss	3,0
  9559  0EE7  2EEB               	goto	l6218
  9560  0EE8                     l6216:	
  9561  0EE8  3008               	movlw	8
  9562  0EE9  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
  9563  0EEA  2EEC               	goto	l6220
  9564  0EEB                     l6218:	
  9565  0EEB  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
  9566  0EEC                     l6220:	
  9567                           
  9568                           ;EEPROM_24C1025.c: 48:             ctrl=chip_add;
  9569                           
  9570                           ;EEPROM_24C1025.c: 49:             ctrl<<=1;
  9571                           
  9572                           ;EEPROM_24C1025.c: 50:             ctrl |= 0xA0;
  9573                           
  9574                           ;EEPROM_24C1025.c: 51:             ctrl |= range;
  9575  0EEC  27C5  120A  158A   	fcall	PL46	;call to abstracted procedure
  9576                           
  9577                           ;EEPROM_24C1025.c: 53:             I2C_Master_Start();
  9578  0EEF  2734  120A  158A   	fcall	_I2C_Master_Start
  9579                           
  9580                           ;EEPROM_24C1025.c: 54:             I2C_Master_Write(ctrl);
  9581  0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  9582  0EF3  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
  9583  0EF4  00A0               	movwf	I2C_Master_Write@d
  9584  0EF5  01A1               	clrf	I2C_Master_Write@d+1
  9585  0EF6  272E  120A  158A   	fcall	_I2C_Master_Write
  9586                           
  9587                           ;EEPROM_24C1025.c: 55:             I2C_Master_Write(((char *)&mem_add)[1]);
  9588  0EF9  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
  9589  0EFA  00A0               	movwf	I2C_Master_Write@d
  9590  0EFB  01A1               	clrf	I2C_Master_Write@d+1
  9591  0EFC  272E  120A  158A   	fcall	_I2C_Master_Write
  9592                           
  9593                           ;EEPROM_24C1025.c: 56:             I2C_Master_Write(((char *)&mem_add)[0]);
  9594  0EFF  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
  9595  0F00  00A0               	movwf	I2C_Master_Write@d
  9596  0F01  01A1               	clrf	I2C_Master_Write@d+1
  9597  0F02  272E  120A  158A   	fcall	_I2C_Master_Write
  9598                           
  9599                           ;EEPROM_24C1025.c: 57:             }
  9600  0F05  2F16               	goto	l6242
  9601  0F06                     l6236:	
  9602                           
  9603                           ;EEPROM_24C1025.c: 59:             {;EEPROM_24C1025.c: 60:             I2C_Master_Write(
      +                          *data);
  9604  0F06  27A8  120A  158A   	fcall	PL30	;call to abstracted procedure
  9605  0F09  272E  120A  158A   	fcall	_I2C_Master_Write
  9606                           
  9607                           ;EEPROM_24C1025.c: 61:             data++;
  9608  0F0C  0AA7               	incf	EEPROM_24C1025_Write_Buffer@data,f
  9609  0F0D  1903               	skipnz
  9610  0F0E  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
  9611                           
  9612                           ;EEPROM_24C1025.c: 62:             mem_add++;
  9613  0F0F  0AA2               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
  9614  0F10  1903               	skipnz
  9615  0F11  0AA3               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
  9616  0F12  1903               	skipnz
  9617  0F13  0AA4               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
  9618  0F14  1903               	skipnz
  9619  0F15  0AA5               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
  9620  0F16                     l6242:	
  9621                           
  9622                           ;EEPROM_24C1025.c: 64:      }
  9623  0F16  0AAB               	incf	EEPROM_24C1025_Write_Buffer@count,f
  9624  0F17  2E95               	goto	l6244
  9625  0F18                     l6246:	
  9626                           
  9627                           ;EEPROM_24C1025.c: 65:      I2C_Master_Write(*data);
  9628  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  9629  0F19  1303               	bcf	3,6	;RP1=0, select bank0
  9630  0F1A  27A8  120A  158A   	fcall	PL30	;call to abstracted procedure
  9631  0F1D  272E  120A  158A   	fcall	_I2C_Master_Write
  9632                           
  9633                           ;EEPROM_24C1025.c: 66:      I2C_Master_Stop();
  9634  0F20  273C  120A  158A   	fcall	_I2C_Master_Stop
  9635                           
  9636                           ;EEPROM_24C1025.c: 67:      _delay((unsigned long)((5)*(8000000/4000.0)));
  9637  0F23  300D               	movlw	13
  9638  0F24  1283               	bcf	3,5	;RP0=0, select bank0
  9639  0F25  1303               	bcf	3,6	;RP1=0, select bank0
  9640  0F26  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
  9641  0F27  30FB               	movlw	251
  9642  0F28  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
  9643  0F29                     u6677:	
  9644  0F29  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
  9645  0F2A  2F29               	goto	u6677
  9646  0F2B  0BAA               	decfsz	??_EEPROM_24C1025_Write_Buffer+1,f
  9647  0F2C  2F29               	goto	u6677
  9648  0F2D  0008               	return
  9649  0F2E                     __end_of_EEPROM_24C1025_Write_Buffer:	
  9650  0F2E                     __ptext58:	
  9651 ;; *************** function _I2C_Master_Write *****************
  9652 ;; Defined at:
  9653 ;;		line 64 in file "I2C.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;  d               2    0[BANK0 ] unsigned int 
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;		None
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  1    wreg      void 
  9660 ;; Registers used:
  9661 ;;		wreg, status,2, status,0, pclath, cstack
  9662 ;; Tracked objects:
  9663 ;;		On entry : 300/0
  9664 ;;		On exit  : 300/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9667 ;;      Params:         0       2       0       0       0
  9668 ;;      Locals:         0       0       0       0       0
  9669 ;;      Temps:          0       0       0       0       0
  9670 ;;      Totals:         0       2       0       0       0
  9671 ;;Total ram usage:        2 bytes
  9672 ;; Hardware stack levels used:    1
  9673 ;; Hardware stack levels required when called:    2
  9674 ;; This function calls:
  9675 ;;		_I2C_Master_Wait
  9676 ;; This function is called by:
  9677 ;;		_EEPROM_24C1025_Write_Buffer
  9678 ;;		_EEPROM_24C1025_Read_Buffer
  9679 ;;		_EEPROM_24C1025_Write_Str
  9680 ;;		_EEPROM_24C1025_Read_Str
  9681 ;; This function uses a non-reentrant model
  9682 ;;
  9683                           
  9684                           
  9685                           ;psect for function _I2C_Master_Write
  9686  0F2E                     _I2C_Master_Write:	
  9687                           
  9688                           ;I2C.c: 64: void I2C_Master_Write(unsigned d);I2C.c: 65: {;I2C.c: 66:   generic_status.f
      +                          lag_main_loop_WDT=1;
  9689                           
  9690                           ;incstack = 0
  9691                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  9692  0F2E  17F6               	bsf	_generic_status,7
  9693                           
  9694                           ;I2C.c: 67:   I2C_Master_Wait();
  9695  0F2F  2761               	fcall	_I2C_Master_Wait
  9696                           
  9697                           ;I2C.c: 68:   SSPBUF = d;
  9698  0F30  1283               	bcf	3,5	;RP0=0, select bank0
  9699  0F31  0820               	movf	I2C_Master_Write@d,w
  9700  0F32  0093               	movwf	19	;volatile
  9701  0F33  0008               	return
  9702  0F34                     __end_of_I2C_Master_Write:	
  9703  0F34                     __ptext60:	
  9704 ;; *************** function _I2C_Master_Start *****************
  9705 ;; Defined at:
  9706 ;;		line 45 in file "I2C.c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;		None
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;		None
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  1    wreg      void 
  9713 ;; Registers used:
  9714 ;;		wreg, status,2, status,0, pclath, cstack
  9715 ;; Tracked objects:
  9716 ;;		On entry : 300/0
  9717 ;;		On exit  : 300/100
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9720 ;;      Params:         0       0       0       0       0
  9721 ;;      Locals:         0       0       0       0       0
  9722 ;;      Temps:          0       0       0       0       0
  9723 ;;      Totals:         0       0       0       0       0
  9724 ;;Total ram usage:        0 bytes
  9725 ;; Hardware stack levels used:    1
  9726 ;; Hardware stack levels required when called:    2
  9727 ;; This function calls:
  9728 ;;		_I2C_Master_Wait
  9729 ;; This function is called by:
  9730 ;;		_EEPROM_24C1025_Write_Buffer
  9731 ;;		_EEPROM_24C1025_Read_Buffer
  9732 ;;		_EEPROM_24C1025_Write_Str
  9733 ;;		_EEPROM_24C1025_Read_Str
  9734 ;; This function uses a non-reentrant model
  9735 ;;
  9736                           
  9737                           
  9738                           ;psect for function _I2C_Master_Start
  9739  0F34                     _I2C_Master_Start:	
  9740                           
  9741                           ;I2C.c: 47:   Delay_Led_Memory=20;
  9742                           
  9743                           ;incstack = 0
  9744                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  9745  0F34  3014               	movlw	20
  9746  0F35  1683               	bsf	3,5	;RP0=1, select bank3
  9747  0F36  1703               	bsf	3,6	;RP1=1, select bank3
  9748  0F37  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
  9749  0F38  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  9750                           
  9751                           ;I2C.c: 48:   I2C_Master_Wait();
  9752  0F39  2761               	fcall	_I2C_Master_Wait
  9753                           
  9754                           ;I2C.c: 49:   SEN = 1;
  9755  0F3A  1411               	bsf	17,0	;volatile
  9756  0F3B  0008               	return
  9757  0F3C                     __end_of_I2C_Master_Start:	
  9758  0F3C                     __ptext59:	
  9759 ;; *************** function _I2C_Master_Stop *****************
  9760 ;; Defined at:
  9761 ;;		line 58 in file "I2C.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;		None
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;		None
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  1    wreg      void 
  9768 ;; Registers used:
  9769 ;;		wreg, status,2, status,0, pclath, cstack
  9770 ;; Tracked objects:
  9771 ;;		On entry : 300/800
  9772 ;;		On exit  : 300/100
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9775 ;;      Params:         0       0       0       0       0
  9776 ;;      Locals:         0       0       0       0       0
  9777 ;;      Temps:          0       0       0       0       0
  9778 ;;      Totals:         0       0       0       0       0
  9779 ;;Total ram usage:        0 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; Hardware stack levels required when called:    2
  9782 ;; This function calls:
  9783 ;;		_I2C_Master_Wait
  9784 ;; This function is called by:
  9785 ;;		_EEPROM_24C1025_Write_Buffer
  9786 ;;		_EEPROM_24C1025_Read_Buffer
  9787 ;;		_EEPROM_24C1025_Write_Str
  9788 ;;		_EEPROM_24C1025_Read_Str
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           
  9793                           ;psect for function _I2C_Master_Stop
  9794  0F3C                     _I2C_Master_Stop:	
  9795                           
  9796                           ;I2C.c: 60:   I2C_Master_Wait();
  9797                           
  9798                           ;incstack = 0
  9799                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  9800  0F3C  2761               	fcall	_I2C_Master_Wait
  9801                           
  9802                           ;I2C.c: 61:   PEN = 1;
  9803  0F3D  1511               	bsf	17,2	;volatile
  9804  0F3E  0008               	return
  9805  0F3F                     __end_of_I2C_Master_Stop:	
  9806  0F3F                     __ptext54:	
  9807 ;; *************** function _I2C_Master_Read *****************
  9808 ;; Defined at:
  9809 ;;		line 71 in file "I2C.c"
  9810 ;; Parameters:    Size  Location     Type
  9811 ;;  a               2    0[BANK0 ] unsigned short 
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;  temp            2    2[BANK0 ] unsigned short 
  9814 ;; Return value:  Size  Location     Type
  9815 ;;                  2    0[BANK0 ] unsigned short 
  9816 ;; Registers used:
  9817 ;;		wreg, status,2, status,0, pclath, cstack
  9818 ;; Tracked objects:
  9819 ;;		On entry : 300/0
  9820 ;;		On exit  : 300/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9823 ;;      Params:         0       2       0       0       0
  9824 ;;      Locals:         0       2       0       0       0
  9825 ;;      Temps:          0       0       0       0       0
  9826 ;;      Totals:         0       4       0       0       0
  9827 ;;Total ram usage:        4 bytes
  9828 ;; Hardware stack levels used:    1
  9829 ;; Hardware stack levels required when called:    2
  9830 ;; This function calls:
  9831 ;;		_I2C_Master_Wait
  9832 ;; This function is called by:
  9833 ;;		_EEPROM_24C1025_Read_Buffer
  9834 ;;		_EEPROM_24C1025_Read_Str
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           
  9839                           ;psect for function _I2C_Master_Read
  9840  0F3F                     _I2C_Master_Read:	
  9841                           
  9842                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:   u
      +                          nsigned short temp;;I2C.c: 74:   generic_status.flag_main_loop_WDT=1;
  9843                           
  9844                           ;incstack = 0
  9845                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  9846  0F3F  17F6               	bsf	_generic_status,7
  9847                           
  9848                           ;I2C.c: 75:   I2C_Master_Wait();
  9849  0F40  2761  120A  158A   	fcall	_I2C_Master_Wait
  9850                           
  9851                           ;I2C.c: 76:   RCEN = 1;
  9852  0F43  1591               	bsf	17,3	;volatile
  9853                           
  9854                           ;I2C.c: 77:   I2C_Master_Wait();
  9855  0F44  2761  120A  158A   	fcall	_I2C_Master_Wait
  9856                           
  9857                           ;I2C.c: 78:   temp = SSPBUF;
  9858  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  9859  0F48  0813               	movf	19,w	;volatile
  9860  0F49  00A2               	movwf	I2C_Master_Read@temp
  9861  0F4A  01A3               	clrf	I2C_Master_Read@temp+1
  9862                           
  9863                           ;I2C.c: 79:   I2C_Master_Wait();
  9864  0F4B  2761  120A  158A   	fcall	_I2C_Master_Wait
  9865                           
  9866                           ;I2C.c: 80:   ACKDT = (a)?0:1;
  9867  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  9868  0F4F  0820               	movf	I2C_Master_Read@a,w
  9869  0F50  0421               	iorwf	I2C_Master_Read@a+1,w
  9870  0F51  1D03               	btfss	3,2
  9871  0F52  2F57               	goto	u5470
  9872  0F53  1683               	bsf	3,5	;RP0=1, select bank1
  9873  0F54  1303               	bcf	3,6	;RP1=0, select bank1
  9874  0F55  1691               	bsf	17,5	;volatile
  9875  0F56  2F5A               	goto	l6154
  9876  0F57                     u5470:	
  9877  0F57  1683               	bsf	3,5	;RP0=1, select bank1
  9878  0F58  1303               	bcf	3,6	;RP1=0, select bank1
  9879  0F59  1291               	bcf	17,5	;volatile
  9880  0F5A                     l6154:	
  9881                           
  9882                           ;I2C.c: 81:   ACKEN = 1;
  9883  0F5A  1611               	bsf	17,4	;volatile
  9884                           
  9885                           ;I2C.c: 82:   return temp;
  9886  0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  9887  0F5C  0823               	movf	I2C_Master_Read@temp+1,w
  9888  0F5D  00A1               	movwf	?_I2C_Master_Read+1
  9889  0F5E  0822               	movf	I2C_Master_Read@temp,w
  9890  0F5F  00A0               	movwf	?_I2C_Master_Read
  9891  0F60  0008               	return
  9892  0F61                     __end_of_I2C_Master_Read:	
  9893  0F61                     __ptext61:	
  9894 ;; *************** function _I2C_Master_Wait *****************
  9895 ;; Defined at:
  9896 ;;		line 40 in file "I2C.c"
  9897 ;; Parameters:    Size  Location     Type
  9898 ;;		None
  9899 ;; Auto vars:     Size  Location     Type
  9900 ;;		None
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  1    wreg      void 
  9903 ;; Registers used:
  9904 ;;		wreg, status,2
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 300/100
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9910 ;;      Params:         0       0       0       0       0
  9911 ;;      Locals:         0       0       0       0       0
  9912 ;;      Temps:          0       0       0       0       0
  9913 ;;      Totals:         0       0       0       0       0
  9914 ;;Total ram usage:        0 bytes
  9915 ;; Hardware stack levels used:    1
  9916 ;; Hardware stack levels required when called:    1
  9917 ;; This function calls:
  9918 ;;		Nothing
  9919 ;; This function is called by:
  9920 ;;		_I2C_Master_Start
  9921 ;;		_I2C_Master_RepeatedStart
  9922 ;;		_I2C_Master_Stop
  9923 ;;		_I2C_Master_Write
  9924 ;;		_I2C_Master_Read
  9925 ;; This function uses a non-reentrant model
  9926 ;;
  9927                           
  9928                           
  9929                           ;psect for function _I2C_Master_Wait
  9930  0F61                     _I2C_Master_Wait:	
  9931  0F61                     l49:	
  9932                           ;I2C.c: 42:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  9933                           
  9934                           ;incstack = 0
  9935                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  9936                           
  9937  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  9938  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  9939  0F63  1914               	btfsc	20,2	;volatile
  9940  0F64  2F61               	goto	l49
  9941  0F65  0811               	movf	17,w	;volatile
  9942  0F66  391F               	andlw	31
  9943  0F67  1903               	btfsc	3,2
  9944  0F68  0008               	return
  9945  0F69  2F61               	goto	l49
  9946  0F6A                     __end_of_I2C_Master_Wait:	
  9947  0F6A                     __ptext53:	
  9948 ;; *************** function _I2C_Master_RepeatedStart *****************
  9949 ;; Defined at:
  9950 ;;		line 52 in file "I2C.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;		None
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;		None
  9955 ;; Return value:  Size  Location     Type
  9956 ;;                  1    wreg      void 
  9957 ;; Registers used:
  9958 ;;		wreg, status,2, status,0, pclath, cstack
  9959 ;; Tracked objects:
  9960 ;;		On entry : 300/0
  9961 ;;		On exit  : 300/100
  9962 ;;		Unchanged: 0/0
  9963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9964 ;;      Params:         0       0       0       0       0
  9965 ;;      Locals:         0       0       0       0       0
  9966 ;;      Temps:          0       0       0       0       0
  9967 ;;      Totals:         0       0       0       0       0
  9968 ;;Total ram usage:        0 bytes
  9969 ;; Hardware stack levels used:    1
  9970 ;; Hardware stack levels required when called:    2
  9971 ;; This function calls:
  9972 ;;		_I2C_Master_Wait
  9973 ;; This function is called by:
  9974 ;;		_EEPROM_24C1025_Read_Buffer
  9975 ;;		_EEPROM_24C1025_Read_Str
  9976 ;; This function uses a non-reentrant model
  9977 ;;
  9978                           
  9979                           
  9980                           ;psect for function _I2C_Master_RepeatedStart
  9981  0F6A                     _I2C_Master_RepeatedStart:	
  9982                           
  9983                           ;I2C.c: 54:   I2C_Master_Wait();
  9984                           
  9985                           ;incstack = 0
  9986                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  9987  0F6A  2761               	fcall	_I2C_Master_Wait
  9988                           
  9989                           ;I2C.c: 55:   RSEN = 1;
  9990  0F6B  1491               	bsf	17,1	;volatile
  9991  0F6C  0008               	return
  9992  0F6D                     __end_of_I2C_Master_RepeatedStart:	
  9993  0F6D                     __ptext17:	
  9994 ;; *************** function _itoa *****************
  9995 ;; Defined at:
  9996 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;  buf             1    wreg     PTR unsigned char 
  9999 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
 10000 ;;  val             2   15[BANK0 ] int 
 10001 ;;  base            2   17[BANK0 ] int 
 10002 ;; Auto vars:     Size  Location     Type
 10003 ;;  buf             1   20[BANK0 ] PTR unsigned char 
 10004 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
 10005 ;;  cp              1    0        PTR unsigned char 
 10006 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
 10007 ;; Return value:  Size  Location     Type
 10008 ;;                  1    wreg      PTR unsigned char 
 10009 ;; Registers used:
 10010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10011 ;; Tracked objects:
 10012 ;;		On entry : 300/0
 10013 ;;		On exit  : B00/0
 10014 ;;		Unchanged: 0/0
 10015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10016 ;;      Params:         0       4       0       0       0
 10017 ;;      Locals:         0       2       0       0       0
 10018 ;;      Temps:          0       0       0       0       0
 10019 ;;      Totals:         0       6       0       0       0
 10020 ;;Total ram usage:        6 bytes
 10021 ;; Hardware stack levels used:    1
 10022 ;; Hardware stack levels required when called:    3
 10023 ;; This function calls:
 10024 ;;		_utoa
=======
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,delta=2
    79                           	dabs	1,0x7E,2
    80  0000                     
    81                           ; Version 2.10
    82                           ; Generated 31/07/2019 GMT
    83                           ; 
    84                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC16F886 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0093                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  0105                     	;# 
   177  0107                     	;# 
   178  0108                     	;# 
   179  0109                     	;# 
   180  010C                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  0185                     	;# 
   186  0187                     	;# 
   187  0188                     	;# 
   188  0189                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001B                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001D                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  0081                     	;# 
   226  0085                     	;# 
   227  0086                     	;# 
   228  0087                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  008F                     	;# 
   234  0090                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0093                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  009F                     	;# 
   252  0105                     	;# 
   253  0107                     	;# 
   254  0108                     	;# 
   255  0109                     	;# 
   256  010C                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  0185                     	;# 
   262  0187                     	;# 
   263  0188                     	;# 
   264  0189                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0089                     	;# 
   306  008C                     	;# 
   307  008D                     	;# 
   308  008E                     	;# 
   309  008F                     	;# 
   310  0090                     	;# 
   311  0091                     	;# 
   312  0092                     	;# 
   313  0093                     	;# 
   314  0093                     	;# 
   315  0093                     	;# 
   316  0094                     	;# 
   317  0095                     	;# 
   318  0096                     	;# 
   319  0097                     	;# 
   320  0098                     	;# 
   321  0099                     	;# 
   322  009A                     	;# 
   323  009B                     	;# 
   324  009C                     	;# 
   325  009D                     	;# 
   326  009E                     	;# 
   327  009F                     	;# 
   328  0105                     	;# 
   329  0107                     	;# 
   330  0108                     	;# 
   331  0109                     	;# 
   332  010C                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  010E                     	;# 
   336  010F                     	;# 
   337  0185                     	;# 
   338  0187                     	;# 
   339  0188                     	;# 
   340  0189                     	;# 
   341  018C                     	;# 
   342  018D                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000D                     	;# 
   356  000E                     	;# 
   357  000E                     	;# 
   358  000F                     	;# 
   359  0010                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0014                     	;# 
   364  0015                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  001D                     	;# 
   375  001E                     	;# 
   376  001F                     	;# 
   377  0081                     	;# 
   378  0085                     	;# 
   379  0086                     	;# 
   380  0087                     	;# 
   381  0089                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  008F                     	;# 
   386  0090                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0093                     	;# 
   391  0093                     	;# 
   392  0094                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0097                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009A                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  009F                     	;# 
   404  0105                     	;# 
   405  0107                     	;# 
   406  0108                     	;# 
   407  0109                     	;# 
   408  010C                     	;# 
   409  010C                     	;# 
   410  010D                     	;# 
   411  010E                     	;# 
   412  010F                     	;# 
   413  0185                     	;# 
   414  0187                     	;# 
   415  0188                     	;# 
   416  0189                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0009                     	;# 
   428  000A                     	;# 
   429  000B                     	;# 
   430  000C                     	;# 
   431  000D                     	;# 
   432  000E                     	;# 
   433  000E                     	;# 
   434  000F                     	;# 
   435  0010                     	;# 
   436  0011                     	;# 
   437  0012                     	;# 
   438  0013                     	;# 
   439  0014                     	;# 
   440  0015                     	;# 
   441  0015                     	;# 
   442  0016                     	;# 
   443  0017                     	;# 
   444  0018                     	;# 
   445  0019                     	;# 
   446  001A                     	;# 
   447  001B                     	;# 
   448  001B                     	;# 
   449  001C                     	;# 
   450  001D                     	;# 
   451  001E                     	;# 
   452  001F                     	;# 
   453  0081                     	;# 
   454  0085                     	;# 
   455  0086                     	;# 
   456  0087                     	;# 
   457  0089                     	;# 
   458  008C                     	;# 
   459  008D                     	;# 
   460  008E                     	;# 
   461  008F                     	;# 
   462  0090                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0093                     	;# 
   466  0093                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0095                     	;# 
   470  0096                     	;# 
   471  0097                     	;# 
   472  0098                     	;# 
   473  0099                     	;# 
   474  009A                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  009F                     	;# 
   480  0105                     	;# 
   481  0107                     	;# 
   482  0108                     	;# 
   483  0109                     	;# 
   484  010C                     	;# 
   485  010C                     	;# 
   486  010D                     	;# 
   487  010E                     	;# 
   488  010F                     	;# 
   489  0185                     	;# 
   490  0187                     	;# 
   491  0188                     	;# 
   492  0189                     	;# 
   493  018C                     	;# 
   494  018D                     	;# 
   495  0000                     	;# 
   496  0001                     	;# 
   497  0002                     	;# 
   498  0003                     	;# 
   499  0004                     	;# 
   500  0005                     	;# 
   501  0006                     	;# 
   502  0007                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000E                     	;# 
   510  000F                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  001D                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  0081                     	;# 
   530  0085                     	;# 
   531  0086                     	;# 
   532  0087                     	;# 
   533  0089                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  008E                     	;# 
   537  008F                     	;# 
   538  0090                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0093                     	;# 
   542  0093                     	;# 
   543  0093                     	;# 
   544  0094                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0097                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009A                     	;# 
   551  009B                     	;# 
   552  009C                     	;# 
   553  009D                     	;# 
   554  009E                     	;# 
   555  009F                     	;# 
   556  0105                     	;# 
   557  0107                     	;# 
   558  0108                     	;# 
   559  0109                     	;# 
   560  010C                     	;# 
   561  010C                     	;# 
   562  010D                     	;# 
   563  010E                     	;# 
   564  010F                     	;# 
   565  0185                     	;# 
   566  0187                     	;# 
   567  0188                     	;# 
   568  0189                     	;# 
   569  018C                     	;# 
   570  018D                     	;# 
   571  0000                     	;# 
   572  0001                     	;# 
   573  0002                     	;# 
   574  0003                     	;# 
   575  0004                     	;# 
   576  0005                     	;# 
   577  0006                     	;# 
   578  0007                     	;# 
   579  0009                     	;# 
   580  000A                     	;# 
   581  000B                     	;# 
   582  000C                     	;# 
   583  000D                     	;# 
   584  000E                     	;# 
   585  000E                     	;# 
   586  000F                     	;# 
   587  0010                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0013                     	;# 
   591  0014                     	;# 
   592  0015                     	;# 
   593  0015                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  0019                     	;# 
   598  001A                     	;# 
   599  001B                     	;# 
   600  001B                     	;# 
   601  001C                     	;# 
   602  001D                     	;# 
   603  001E                     	;# 
   604  001F                     	;# 
   605  0081                     	;# 
   606  0085                     	;# 
   607  0086                     	;# 
   608  0087                     	;# 
   609  0089                     	;# 
   610  008C                     	;# 
   611  008D                     	;# 
   612  008E                     	;# 
   613  008F                     	;# 
   614  0090                     	;# 
   615  0091                     	;# 
   616  0092                     	;# 
   617  0093                     	;# 
   618  0093                     	;# 
   619  0093                     	;# 
   620  0094                     	;# 
   621  0095                     	;# 
   622  0096                     	;# 
   623  0097                     	;# 
   624  0098                     	;# 
   625  0099                     	;# 
   626  009A                     	;# 
   627  009B                     	;# 
   628  009C                     	;# 
   629  009D                     	;# 
   630  009E                     	;# 
   631  009F                     	;# 
   632  0105                     	;# 
   633  0107                     	;# 
   634  0108                     	;# 
   635  0109                     	;# 
   636  010C                     	;# 
   637  010C                     	;# 
   638  010D                     	;# 
   639  010E                     	;# 
   640  010F                     	;# 
   641  0185                     	;# 
   642  0187                     	;# 
   643  0188                     	;# 
   644  0189                     	;# 
   645  018C                     	;# 
   646  018D                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0009                     	;# 
   656  000A                     	;# 
   657  000B                     	;# 
   658  000C                     	;# 
   659  000D                     	;# 
   660  000E                     	;# 
   661  000E                     	;# 
   662  000F                     	;# 
   663  0010                     	;# 
   664  0011                     	;# 
   665  0012                     	;# 
   666  0013                     	;# 
   667  0014                     	;# 
   668  0015                     	;# 
   669  0015                     	;# 
   670  0016                     	;# 
   671  0017                     	;# 
   672  0018                     	;# 
   673  0019                     	;# 
   674  001A                     	;# 
   675  001B                     	;# 
   676  001B                     	;# 
   677  001C                     	;# 
   678  001D                     	;# 
   679  001E                     	;# 
   680  001F                     	;# 
   681  0081                     	;# 
   682  0085                     	;# 
   683  0086                     	;# 
   684  0087                     	;# 
   685  0089                     	;# 
   686  008C                     	;# 
   687  008D                     	;# 
   688  008E                     	;# 
   689  008F                     	;# 
   690  0090                     	;# 
   691  0091                     	;# 
   692  0092                     	;# 
   693  0093                     	;# 
   694  0093                     	;# 
   695  0093                     	;# 
   696  0094                     	;# 
   697  0095                     	;# 
   698  0096                     	;# 
   699  0097                     	;# 
   700  0098                     	;# 
   701  0099                     	;# 
   702  009A                     	;# 
   703  009B                     	;# 
   704  009C                     	;# 
   705  009D                     	;# 
   706  009E                     	;# 
   707  009F                     	;# 
   708  0105                     	;# 
   709  0107                     	;# 
   710  0108                     	;# 
   711  0109                     	;# 
   712  010C                     	;# 
   713  010C                     	;# 
   714  010D                     	;# 
   715  010E                     	;# 
   716  010F                     	;# 
   717  0185                     	;# 
   718  0187                     	;# 
   719  0188                     	;# 
   720  0189                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  0000                     	;# 
   724  0001                     	;# 
   725  0002                     	;# 
   726  0003                     	;# 
   727  0004                     	;# 
   728  0005                     	;# 
   729  0006                     	;# 
   730  0007                     	;# 
   731  0009                     	;# 
   732  000A                     	;# 
   733  000B                     	;# 
   734  000C                     	;# 
   735  000D                     	;# 
   736  000E                     	;# 
   737  000E                     	;# 
   738  000F                     	;# 
   739  0010                     	;# 
   740  0011                     	;# 
   741  0012                     	;# 
   742  0013                     	;# 
   743  0014                     	;# 
   744  0015                     	;# 
   745  0015                     	;# 
   746  0016                     	;# 
   747  0017                     	;# 
   748  0018                     	;# 
   749  0019                     	;# 
   750  001A                     	;# 
   751  001B                     	;# 
   752  001B                     	;# 
   753  001C                     	;# 
   754  001D                     	;# 
   755  001E                     	;# 
   756  001F                     	;# 
   757  0081                     	;# 
   758  0085                     	;# 
   759  0086                     	;# 
   760  0087                     	;# 
   761  0089                     	;# 
   762  008C                     	;# 
   763  008D                     	;# 
   764  008E                     	;# 
   765  008F                     	;# 
   766  0090                     	;# 
   767  0091                     	;# 
   768  0092                     	;# 
   769  0093                     	;# 
   770  0093                     	;# 
   771  0093                     	;# 
   772  0094                     	;# 
   773  0095                     	;# 
   774  0096                     	;# 
   775  0097                     	;# 
   776  0098                     	;# 
   777  0099                     	;# 
   778  009A                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  009F                     	;# 
   784  0105                     	;# 
   785  0107                     	;# 
   786  0108                     	;# 
   787  0109                     	;# 
   788  010C                     	;# 
   789  010C                     	;# 
   790  010D                     	;# 
   791  010E                     	;# 
   792  010F                     	;# 
   793  0185                     	;# 
   794  0187                     	;# 
   795  0188                     	;# 
   796  0189                     	;# 
   797  018C                     	;# 
   798  018D                     	;# 
   799  0000                     	;# 
   800  0001                     	;# 
   801  0002                     	;# 
   802  0003                     	;# 
   803  0004                     	;# 
   804  0005                     	;# 
   805  0006                     	;# 
   806  0007                     	;# 
   807  0009                     	;# 
   808  000A                     	;# 
   809  000B                     	;# 
   810  000C                     	;# 
   811  000D                     	;# 
   812  000E                     	;# 
   813  000E                     	;# 
   814  000F                     	;# 
   815  0010                     	;# 
   816  0011                     	;# 
   817  0012                     	;# 
   818  0013                     	;# 
   819  0014                     	;# 
   820  0015                     	;# 
   821  0015                     	;# 
   822  0016                     	;# 
   823  0017                     	;# 
   824  0018                     	;# 
   825  0019                     	;# 
   826  001A                     	;# 
   827  001B                     	;# 
   828  001B                     	;# 
   829  001C                     	;# 
   830  001D                     	;# 
   831  001E                     	;# 
   832  001F                     	;# 
   833  0081                     	;# 
   834  0085                     	;# 
   835  0086                     	;# 
   836  0087                     	;# 
   837  0089                     	;# 
   838  008C                     	;# 
   839  008D                     	;# 
   840  008E                     	;# 
   841  008F                     	;# 
   842  0090                     	;# 
   843  0091                     	;# 
   844  0092                     	;# 
   845  0093                     	;# 
   846  0093                     	;# 
   847  0093                     	;# 
   848  0094                     	;# 
   849  0095                     	;# 
   850  0096                     	;# 
   851  0097                     	;# 
   852  0098                     	;# 
   853  0099                     	;# 
   854  009A                     	;# 
   855  009B                     	;# 
   856  009C                     	;# 
   857  009D                     	;# 
   858  009E                     	;# 
   859  009F                     	;# 
   860  0105                     	;# 
   861  0107                     	;# 
   862  0108                     	;# 
   863  0109                     	;# 
   864  010C                     	;# 
   865  010C                     	;# 
   866  010D                     	;# 
   867  010E                     	;# 
   868  010F                     	;# 
   869  0185                     	;# 
   870  0187                     	;# 
   871  0188                     	;# 
   872  0189                     	;# 
   873  018C                     	;# 
   874  018D                     	;# 
   875  0000                     	;# 
   876  0001                     	;# 
   877  0002                     	;# 
   878  0003                     	;# 
   879  0004                     	;# 
   880  0005                     	;# 
   881  0006                     	;# 
   882  0007                     	;# 
   883  0009                     	;# 
   884  000A                     	;# 
   885  000B                     	;# 
   886  000C                     	;# 
   887  000D                     	;# 
   888  000E                     	;# 
   889  000E                     	;# 
   890  000F                     	;# 
   891  0010                     	;# 
   892  0011                     	;# 
   893  0012                     	;# 
   894  0013                     	;# 
   895  0014                     	;# 
   896  0015                     	;# 
   897  0015                     	;# 
   898  0016                     	;# 
   899  0017                     	;# 
   900  0018                     	;# 
   901  0019                     	;# 
   902  001A                     	;# 
   903  001B                     	;# 
   904  001B                     	;# 
   905  001C                     	;# 
   906  001D                     	;# 
   907  001E                     	;# 
   908  001F                     	;# 
   909  0081                     	;# 
   910  0085                     	;# 
   911  0086                     	;# 
   912  0087                     	;# 
   913  0089                     	;# 
   914  008C                     	;# 
   915  008D                     	;# 
   916  008E                     	;# 
   917  008F                     	;# 
   918  0090                     	;# 
   919  0091                     	;# 
   920  0092                     	;# 
   921  0093                     	;# 
   922  0093                     	;# 
   923  0093                     	;# 
   924  0094                     	;# 
   925  0095                     	;# 
   926  0096                     	;# 
   927  0097                     	;# 
   928  0098                     	;# 
   929  0099                     	;# 
   930  009A                     	;# 
   931  009B                     	;# 
   932  009C                     	;# 
   933  009D                     	;# 
   934  009E                     	;# 
   935  009F                     	;# 
   936  0105                     	;# 
   937  0107                     	;# 
   938  0108                     	;# 
   939  0109                     	;# 
   940  010C                     	;# 
   941  010C                     	;# 
   942  010D                     	;# 
   943  010E                     	;# 
   944  010F                     	;# 
   945  0185                     	;# 
   946  0187                     	;# 
   947  0188                     	;# 
   948  0189                     	;# 
   949  018C                     	;# 
   950  018D                     	;# 
   951  0000                     	;# 
   952  0001                     	;# 
   953  0002                     	;# 
   954  0003                     	;# 
   955  0004                     	;# 
   956  0005                     	;# 
   957  0006                     	;# 
   958  0007                     	;# 
   959  0009                     	;# 
   960  000A                     	;# 
   961  000B                     	;# 
   962  000C                     	;# 
   963  000D                     	;# 
   964  000E                     	;# 
   965  000E                     	;# 
   966  000F                     	;# 
   967  0010                     	;# 
   968  0011                     	;# 
   969  0012                     	;# 
   970  0013                     	;# 
   971  0014                     	;# 
   972  0015                     	;# 
   973  0015                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001B                     	;# 
   980  001B                     	;# 
   981  001C                     	;# 
   982  001D                     	;# 
   983  001E                     	;# 
   984  001F                     	;# 
   985  0081                     	;# 
   986  0085                     	;# 
   987  0086                     	;# 
   988  0087                     	;# 
   989  0089                     	;# 
   990  008C                     	;# 
   991  008D                     	;# 
   992  008E                     	;# 
   993  008F                     	;# 
   994  0090                     	;# 
   995  0091                     	;# 
   996  0092                     	;# 
   997  0093                     	;# 
   998  0093                     	;# 
   999  0093                     	;# 
  1000  0094                     	;# 
  1001  0095                     	;# 
  1002  0096                     	;# 
  1003  0097                     	;# 
  1004  0098                     	;# 
  1005  0099                     	;# 
  1006  009A                     	;# 
  1007  009B                     	;# 
  1008  009C                     	;# 
  1009  009D                     	;# 
  1010  009E                     	;# 
  1011  009F                     	;# 
  1012  0105                     	;# 
  1013  0107                     	;# 
  1014  0108                     	;# 
  1015  0109                     	;# 
  1016  010C                     	;# 
  1017  010C                     	;# 
  1018  010D                     	;# 
  1019  010E                     	;# 
  1020  010F                     	;# 
  1021  0185                     	;# 
  1022  0187                     	;# 
  1023  0188                     	;# 
  1024  0189                     	;# 
  1025  018C                     	;# 
  1026  018D                     	;# 
  1027  0000                     	;# 
  1028  0001                     	;# 
  1029  0002                     	;# 
  1030  0003                     	;# 
  1031  0004                     	;# 
  1032  0005                     	;# 
  1033  0006                     	;# 
  1034  0007                     	;# 
  1035  0009                     	;# 
  1036  000A                     	;# 
  1037  000B                     	;# 
  1038  000C                     	;# 
  1039  000D                     	;# 
  1040  000E                     	;# 
  1041  000E                     	;# 
  1042  000F                     	;# 
  1043  0010                     	;# 
  1044  0011                     	;# 
  1045  0012                     	;# 
  1046  0013                     	;# 
  1047  0014                     	;# 
  1048  0015                     	;# 
  1049  0015                     	;# 
  1050  0016                     	;# 
  1051  0017                     	;# 
  1052  0018                     	;# 
  1053  0019                     	;# 
  1054  001A                     	;# 
  1055  001B                     	;# 
  1056  001B                     	;# 
  1057  001C                     	;# 
  1058  001D                     	;# 
  1059  001E                     	;# 
  1060  001F                     	;# 
  1061  0081                     	;# 
  1062  0085                     	;# 
  1063  0086                     	;# 
  1064  0087                     	;# 
  1065  0089                     	;# 
  1066  008C                     	;# 
  1067  008D                     	;# 
  1068  008E                     	;# 
  1069  008F                     	;# 
  1070  0090                     	;# 
  1071  0091                     	;# 
  1072  0092                     	;# 
  1073  0093                     	;# 
  1074  0093                     	;# 
  1075  0093                     	;# 
  1076  0094                     	;# 
  1077  0095                     	;# 
  1078  0096                     	;# 
  1079  0097                     	;# 
  1080  0098                     	;# 
  1081  0099                     	;# 
  1082  009A                     	;# 
  1083  009B                     	;# 
  1084  009C                     	;# 
  1085  009D                     	;# 
  1086  009E                     	;# 
  1087  009F                     	;# 
  1088  0105                     	;# 
  1089  0107                     	;# 
  1090  0108                     	;# 
  1091  0109                     	;# 
  1092  010C                     	;# 
  1093  010C                     	;# 
  1094  010D                     	;# 
  1095  010E                     	;# 
  1096  010F                     	;# 
  1097  0185                     	;# 
  1098  0187                     	;# 
  1099  0188                     	;# 
  1100  0189                     	;# 
  1101  018C                     	;# 
  1102  018D                     	;# 
  1103  0000                     	;# 
  1104  0001                     	;# 
  1105  0002                     	;# 
  1106  0003                     	;# 
  1107  0004                     	;# 
  1108  0005                     	;# 
  1109  0006                     	;# 
  1110  0007                     	;# 
  1111  0009                     	;# 
  1112  000A                     	;# 
  1113  000B                     	;# 
  1114  000C                     	;# 
  1115  000D                     	;# 
  1116  000E                     	;# 
  1117  000E                     	;# 
  1118  000F                     	;# 
  1119  0010                     	;# 
  1120  0011                     	;# 
  1121  0012                     	;# 
  1122  0013                     	;# 
  1123  0014                     	;# 
  1124  0015                     	;# 
  1125  0015                     	;# 
  1126  0016                     	;# 
  1127  0017                     	;# 
  1128  0018                     	;# 
  1129  0019                     	;# 
  1130  001A                     	;# 
  1131  001B                     	;# 
  1132  001B                     	;# 
  1133  001C                     	;# 
  1134  001D                     	;# 
  1135  001E                     	;# 
  1136  001F                     	;# 
  1137  0081                     	;# 
  1138  0085                     	;# 
  1139  0086                     	;# 
  1140  0087                     	;# 
  1141  0089                     	;# 
  1142  008C                     	;# 
  1143  008D                     	;# 
  1144  008E                     	;# 
  1145  008F                     	;# 
  1146  0090                     	;# 
  1147  0091                     	;# 
  1148  0092                     	;# 
  1149  0093                     	;# 
  1150  0093                     	;# 
  1151  0093                     	;# 
  1152  0094                     	;# 
  1153  0095                     	;# 
  1154  0096                     	;# 
  1155  0097                     	;# 
  1156  0098                     	;# 
  1157  0099                     	;# 
  1158  009A                     	;# 
  1159  009B                     	;# 
  1160  009C                     	;# 
  1161  009D                     	;# 
  1162  009E                     	;# 
  1163  009F                     	;# 
  1164  0105                     	;# 
  1165  0107                     	;# 
  1166  0108                     	;# 
  1167  0109                     	;# 
  1168  010C                     	;# 
  1169  010C                     	;# 
  1170  010D                     	;# 
  1171  010E                     	;# 
  1172  010F                     	;# 
  1173  0185                     	;# 
  1174  0187                     	;# 
  1175  0188                     	;# 
  1176  0189                     	;# 
  1177  018C                     	;# 
  1178  018D                     	;# 
  1179                           
  1180                           	psect	strings
  1181  1800                     __pstrings:	
  1182  1800                     stringtab:	
  1183  1800                     __stringtab:	
  1184                           
  1185                           ;	String table - string pointers are 1 byte each
  1186  1800  1BFF               	btfsc	btemp+1,7
  1187  1801  280A               	ljmp	stringcode
  1188  1802  1383               	bcf	3,7
  1189  1803  187F               	btfsc	btemp+1,0
  1190  1804  1783               	bsf	3,7
  1191  1805  0800               	movf	0,w
  1192  1806  0A84               	incf	4,f
  1193  1807  1903               	skipnz
  1194  1808  0AFF               	incf	btemp+1,f
  1195  1809  0008               	return
  1196  180A                     stringcode:	
  1197  180A                     stringdir:	
  1198  180A  3018               	movlw	high stringdir
  1199  180B  008A               	movwf	10
  1200  180C  0804               	movf	4,w
  1201  180D  0A84               	incf	4,f
  1202  180E  0782               	addwf	2,f
  1203  180F                     __stringbase:	
  1204  180F  3400               	retlw	0
  1205  1810                     __end_of__stringtab:	
  1206  1810                     _PT100_TRANSLADA:	
  1207  1810  3466               	retlw	102
  1208  1811  3466               	retlw	102
  1209  1812  34A6               	retlw	166
  1210  1813  34BF               	retlw	191
  1211  1814                     __end_of_PT100_TRANSLADA:	
  1212  1814                     _PT100_CONSTANT:	
  1213  1814  3414               	retlw	20
  1214  1815  34AE               	retlw	174
  1215  1816  342B               	retlw	43
  1216  1817  34C1               	retlw	193
  1217  1818                     __end_of_PT100_CONSTANT:	
  1218  1818                     _RESISTOR_ROOM_TEMP:	
  1219                           
  1220                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1221  1818  3400               	retlw	0
  1222  1819  3440               	retlw	64
  1223  181A  341C               	retlw	28
  1224  181B  3446               	retlw	70
  1225  181C                     __end_of_RESISTOR_ROOM_TEMP:	
  1226  181C                     _ROOM_TEMP:	
  1227                           
  1228                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1229  181C  3466               	retlw	102
  1230  181D  3486               	retlw	134
  1231  181E  3496               	retlw	150
  1232  181F  3443               	retlw	67
  1233  1820                     __end_of_ROOM_TEMP:	
  1234  1820                     _MAX_ADC:	
  1235                           
  1236                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1237  1820  3400               	retlw	0
  1238  1821  34C0               	retlw	192
  1239  1822  347F               	retlw	127
  1240  1823  3444               	retlw	68
  1241  1824                     __end_of_MAX_ADC:	
  1242  1824                     log@coeff:	
  1243  1824  3400               	retlw	0
  1244  1825  3400               	retlw	0
  1245  1826  3400               	retlw	0
  1246  1827  3400               	retlw	0
  1247  1828  34C4               	retlw	196
  1248  1829  34FF               	retlw	255
  1249  182A  347F               	retlw	127
  1250  182B  343F               	retlw	63
  1251  182C  3480               	retlw	128
  1252  182D  34EF               	retlw	239
  1253  182E  34FF               	retlw	255
  1254  182F  34BE               	retlw	190
  1255  1830  3490               	retlw	144
  1256  1831  34E1               	retlw	225
  1257  1832  34A9               	retlw	169
  1258  1833  343E               	retlw	62
  1259  1834  34EC               	retlw	236
  1260  1835  3482               	retlw	130
  1261  1836  3476               	retlw	118
  1262  1837  34BE               	retlw	190
  1263  1838  3482               	retlw	130
  1264  1839  34AD               	retlw	173
  1265  183A  342B               	retlw	43
  1266  183B  343E               	retlw	62
  1267  183C  340E               	retlw	14
  1268  183D  343C               	retlw	60
  1269  183E  34C3               	retlw	195
  1270  183F  34BD               	retlw	189
  1271  1840  3487               	retlw	135
  1272  1841  34D1               	retlw	209
  1273  1842  3413               	retlw	19
  1274  1843  343D               	retlw	61
  1275  1844  3441               	retlw	65
  1276  1845  3478               	retlw	120
  1277  1846  34D3               	retlw	211
  1278  1847  34BB               	retlw	187
  1279  1848                     __end_oflog@coeff:	
  1280  1848                     _BETA:	
  1281                           
  1282                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1283  1848  3400               	retlw	0
  1284  1849  3460               	retlw	96
  1285  184A  3478               	retlw	120
  1286  184B  3445               	retlw	69
  1287  184C                     __end_of_BETA:	
  1288  184C                     _BALANCE_RESISTOR:	
  1289                           
  1290                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1291  184C  3400               	retlw	0
  1292  184D  3440               	retlw	64
  1293  184E  341C               	retlw	28
  1294  184F  3446               	retlw	70
  1295  1850                     __end_of_BALANCE_RESISTOR:	
  1296  0019                     _TXREG	set	25
  1297  0018                     _RCSTAbits	set	24
  1298  001A                     _RCREG	set	26
  1299  000E                     _TMR1L	set	14
  1300  000F                     _TMR1H	set	15
  1301  000C                     _PIR1bits	set	12
  1302  001E                     _ADRESH	set	30
  1303  001F                     _ADCON0bits	set	31
  1304  0005                     _PORTAbits	set	5
  1305  0007                     _PORTCbits	set	7
  1306  0010                     _T1CON	set	16
  1307  000B                     _INTCONbits	set	11
  1308  0006                     _PORTBbits	set	6
  1309  0009                     _PORTE	set	9
  1310  0007                     _PORTC	set	7
  1311  0005                     _PORTA	set	5
  1312  0013                     _SSPBUF	set	19
  1313  0014                     _SSPCON	set	20
  1314  0006                     _PORTB	set	6
  1315  00C4                     _CREN	set	196
  1316  0081                     _TMR1CS	set	129
  1317  0085                     _T1CKPS1	set	133
  1318  0084                     _T1CKPS0	set	132
  1319  008C                     _PIE1bits	set	140
  1320  0099                     _SPBRG	set	153
  1321  0098                     _TXSTAbits	set	152
  1322  009E                     _ADRESL	set	158
  1323  009F                     _ADCON1	set	159
  1324  009F                     _ADCON1bits	set	159
  1325  0095                     _WPUB	set	149
  1326  0081                     _OPTION_REGbits	set	129
  1327  0089                     _TRISE	set	137
  1328  0087                     _TRISC	set	135
  1329  0086                     _TRISB	set	134
  1330  0085                     _TRISA	set	133
  1331  008F                     _OSCCONbits	set	143
  1332  0094                     _SSPSTAT	set	148
  1333  0093                     _SSPADD	set	147
  1334  0091                     _SSPCON2	set	145
  1335  043F                     _TRISC7	set	1087
  1336  043E                     _TRISC6	set	1086
  1337  0460                     _TMR1IE	set	1120
  1338  048C                     _ACKEN	set	1164
  1339  048D                     _ACKDT	set	1165
  1340  048B                     _RCEN	set	1163
  1341  048A                     _PEN	set	1162
  1342  0489                     _RSEN	set	1161
  1343  0488                     _SEN	set	1160
  1344  043C                     _TRISC4	set	1084
  1345  043B                     _TRISC3	set	1083
  1346  010C                     _EEDATA	set	268
  1347  010D                     _EEADR	set	269
  1348  0187                     _BAUDCTLbits	set	391
  1349  018D                     _EECON2	set	397
  1350  018C                     _EECON1bits	set	396
  1351  0189                     _ANSELH	set	393
  1352  0188                     _ANSEL	set	392
  1353  1850                     STR_1:	
  1354  1850  3476               	retlw	118	;'v'
  1355  1851  3431               	retlw	49	;'1'
  1356  1852  342E               	retlw	46	;'.'
  1357  1853  3430               	retlw	48	;'0'
  1358  1854  342E               	retlw	46	;'.'
  1359  1855  3437               	retlw	55	;'7'
  1360  1856  3400               	retlw	0
  1361  1857                     STR_8:	
  1362  1857  344F               	retlw	79	;'O'
  1363  1858  344B               	retlw	75	;'K'
  1364  1859  3400               	retlw	0
  1365  185A                     STR_3:	
  1366  185A  3430               	retlw	48	;'0'
  1367  185B  3400               	retlw	0
  1368  185C                     STR_4:	
  1369  185C  343A               	retlw	58	;':'
  1370  185D  3400               	retlw	0
  1371  185B                     
  1372                           ; #config settings
  1373  0000                     
  1374                           	psect	cinit
  1375  0015                     start_initialization:	
  1376  0015                     __initialization:	
  1377                           
  1378                           ; Clear objects allocated to COMMON
  1379  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1380  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1381  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1382  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1383  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1384                           
  1385                           ; Clear objects allocated to BANK1
  1386  001A  1383               	bcf	3,7	;select IRP bank0
  1387  001B  30CD               	movlw	low __pbssBANK1
  1388  001C  0084               	movwf	4
  1389  001D  30EA               	movlw	low (__pbssBANK1+29)
  1390  001E  120A  118A  27F8  120A  118A  	fcall	clear_ram0
  1391                           
  1392                           ; Clear objects allocated to BANK3
  1393  0023  1783               	bsf	3,7	;select IRP bank2
  1394  0024  3090               	movlw	low __pbssBANK3
  1395  0025  0084               	movwf	4
  1396  0026  30DA               	movlw	low (__pbssBANK3+74)
  1397  0027  120A  118A  27F8  120A  118A  	fcall	clear_ram0
  1398                           
  1399                           ; Clear objects allocated to BANK2
  1400  002C  3010               	movlw	low __pbssBANK2
  1401  002D  0084               	movwf	4
  1402  002E  3030               	movlw	low (__pbssBANK2+32)
  1403  002F  120A  118A  27F8   	fcall	clear_ram0
  1404  0032                     end_of_initialization:	
  1405                           ;End of C runtime variable initialization code
  1406                           
  1407  0032                     __end_of__initialization:	
  1408  0032  0183               	clrf	3
  1409  0033  160A  118A  2C42   	ljmp	_main	;jump to C main() function
  1410                           
  1411                           	psect	bssCOMMON
  1412  0078                     __pbssCOMMON:	
  1413  0078                     _Delay_Led_Tmr0:	
  1414  0078                     	ds	2
  1415  007A                     _Delay_Led_Memory:	
  1416  007A                     	ds	2
  1417  007C                     _statuspower_memo:	
  1418  007C                     	ds	1
  1419                           
  1420                           	psect	bssBANK1
  1421  00CD                     __pbssBANK1:	
  1422  00CD                     _Tensao1:	
  1423  00CD                     	ds	4
  1424  00D1                     _Vaccum0:	
  1425  00D1                     	ds	4
  1426  00D5                     _errno:	
  1427  00D5                     	ds	2
  1428  00D7                     _tempodecorrido:	
  1429  00D7                     	ds	2
  1430  00D9                     _count:	
  1431  00D9                     	ds	2
  1432  00DB                     _header:	
  1433  00DB                     	ds	2
  1434  00DD                     _milisegundo:	
  1435  00DD                     	ds	2
  1436  00DF                     _Delay_Led_Usart:	
  1437  00DF                     	ds	2
  1438  00E1                     _pointer:	
  1439  00E1                     	ds	1
  1440  00E2                     _destino:	
  1441  00E2                     	ds	1
  1442  00E3                     _Board_Number:	
  1443  00E3                     	ds	1
  1444  00E4                     _canal:	
  1445  00E4                     	ds	1
  1446  00E5                     _minuto:	
  1447  00E5                     	ds	1
  1448  00E6                     _hora:	
  1449  00E6                     	ds	1
  1450  00E7                     _segundo:	
  1451  00E7                     	ds	1
  1452  00E8                     _statuspower:	
  1453  00E8                     	ds	1
  1454  00E9                     _generic_status:	
  1455  00E9                     	ds	1
  1456                           
  1457                           	psect	bssBANK3
  1458  0190                     __pbssBANK3:	
  1459  0190                     _usart_buffer:	
  1460  0190                     	ds	42
  1461  01BA                     _texto:	
  1462  01BA                     	ds	16
  1463  01CA                     _usart_protocol:	
  1464  01CA                     	ds	16
  1465                           
  1466                           	psect	bssBANK2
  1467  0110                     __pbssBANK2:	
  1468  0110                     _buffer:	
  1469  0110                     	ds	32
  1470                           
  1471                           	psect	clrtext
  1472  07F8                     clear_ram0:	
  1473                           ;	Called with FSR containing the base address, and
  1474                           ;	W with the last address+1
  1475                           
  1476  07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1477  07F9                     clrloop0:	
  1478  07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1479  07FA  0A84               	incf	4,f	;increment pointer
  1480  07FB  0604               	xorwf	4,w	;XOR with final address
  1481  07FC  1903               	btfsc	3,2	;have we reached the end yet?
  1482  07FD  3400               	retlw	0	;all done for this memory range, return
  1483  07FE  0604               	xorwf	4,w	;XOR again to restore value
  1484  07FF  2FF9               	goto	clrloop0	;do the next byte
  1485                           
  1486                           	psect	cstackBANK1
  1487  00A0                     __pcstackBANK1:	
  1488  00A0                     MediaPlacaVaccum@Valor:	
  1489  00A0                     Decodify_Command@hh:	
  1490                           ; 4 bytes @ 0x0
  1491                           
  1492                           
  1493                           ; 10 bytes @ 0x0
  1494  00A0                     	ds	4
  1495  00A4                     MediaPlacaVaccum@canal:	
  1496                           
  1497                           ; 1 bytes @ 0x4
  1498  00A4                     	ds	1
  1499  00A5                     MediaPlacaVaccum@Temp:	
  1500                           
  1501                           ; 4 bytes @ 0x5
  1502  00A5                     	ds	4
  1503  00A9                     MediaPlacaVaccum@i:	
  1504                           
  1505                           ; 2 bytes @ 0x9
  1506  00A9                     	ds	1
  1507  00AA                     Decodify_Command@mm:	
  1508                           
  1509                           ; 10 bytes @ 0xA
  1510  00AA                     	ds	10
  1511  00B4                     Decodify_Command@ss:	
  1512                           
  1513                           ; 10 bytes @ 0x14
  1514  00B4                     	ds	10
  1515  00BE                     Decodify_Command@dados:	
  1516                           
  1517                           ; 2 bytes @ 0x1E
  1518  00BE                     	ds	2
  1519  00C0                     Decodify_Command@add:	
  1520                           
  1521                           ; 1 bytes @ 0x20
  1522  00C0                     	ds	1
  1523  00C1                     Decodify_Command@tempint:	
  1524                           
  1525                           ; 2 bytes @ 0x21
  1526  00C1                     	ds	2
  1527  00C3                     Decodify_Command@OutPut:	
  1528                           
  1529                           ; 4 bytes @ 0x23
  1530  00C3                     	ds	4
  1531  00C7                     Decodify_Command@tempchar:	
  1532                           
  1533                           ; 1 bytes @ 0x27
  1534  00C7                     	ds	1
  1535  00C8                     Decodify_Command@sizedata:	
  1536                           
  1537                           ; 1 bytes @ 0x28
  1538  00C8                     	ds	1
  1539  00C9                     Decodify_Command@add_24LCxxxx:	
  1540                           
  1541                           ; 4 bytes @ 0x29
  1542  00C9                     	ds	4
  1543                           
  1544                           	psect	cstackCOMMON
  1545  0070                     __pcstackCOMMON:	
  1546  0070                     ?_I2C_Master_Start:	
  1547  0070                     ?_I2C_Master_Stop:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_I2C_Master_RepeatedStart:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_ADC_init:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_MediaPlacaVaccum:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_Decodify_Command:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_USART_to_Protocol:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_Send_To_MB:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_Send_Reply_OK:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_EEPROM_Read_Byte:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?_USART_putc:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_Package_Usart_is_for_me:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_I2C_Master_Wait:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?_main:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ?_isr:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0070                     ??_isr:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592                           
  1593                           ; 1 bytes @ 0x0
  1594  0070                     	ds	6
  1595  0076                     isr@tempo:	
  1596                           
  1597                           ; 2 bytes @ 0x6
  1598  0076                     	ds	2
  1599                           
  1600                           	psect	cstackBANK0
  1601  0020                     __pcstackBANK0:	
  1602  0020                     ?___flge:	
  1603  0020                     ??_I2C_Master_Start:	
  1604                           ; 1 bit 
  1605                           
  1606  0020                     ?_I2C_Master_Write:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0020                     ??_I2C_Master_Stop:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0020                     ??_I2C_Master_RepeatedStart:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0020                     ?_my_delay_ms_WDT:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0020                     ??_ADC_init:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0020                     ?_USART_init:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0020                     ??_USART_to_Protocol:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0020                     ?_EEPROM_Write_Byte:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0020                     ??_EEPROM_Read_Byte:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0020                     ??_USART_putc:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0020                     ?_strcpy:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0020                     ?_strcat:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0020                     ?_my_delay_ms:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0020                     ??_Package_Usart_is_for_me:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648  0020                     ?_PROCULUS_Delay:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0020                     ??_I2C_Master_Wait:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654  0020                     ?_I2C_Master_Read:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0020                     ?_strlen:	
  1658                           ; 2 bytes @ 0x0
  1659                           
  1660  0020                     ?_captura:	
  1661                           ; 2 bytes @ 0x0
  1662                           
  1663  0020                     ?__Umul8_16:	
  1664                           ; 2 bytes @ 0x0
  1665                           
  1666  0020                     ?___lwdiv:	
  1667                           ; 2 bytes @ 0x0
  1668                           
  1669  0020                     ?___lwmod:	
  1670                           ; 2 bytes @ 0x0
  1671                           
  1672  0020                     ?___lldiv:	
  1673                           ; 2 bytes @ 0x0
  1674                           
  1675  0020                     EEPROM_Write_Byte@dado:	
  1676                           ; 4 bytes @ 0x0
  1677                           
  1678  0020                     Package_Usart_is_for_me@retorno:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0020                     USART_putc@value:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0020                     strcpy@from:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0020                     __Umul8_16@multiplicand:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690  0020                     I2C_Master_Write@d:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693  0020                     I2C_Master_Read@a:	
  1694                           ; 2 bytes @ 0x0
  1695                           
  1696  0020                     PROCULUS_Delay@tempo_ms:	
  1697                           ; 2 bytes @ 0x0
  1698                           
  1699  0020                     ___lwdiv@divisor:	
  1700                           ; 2 bytes @ 0x0
  1701                           
  1702  0020                     ___lwmod@divisor:	
  1703                           ; 2 bytes @ 0x0
  1704                           
  1705  0020                     strcat@from:	
  1706                           ; 2 bytes @ 0x0
  1707                           
  1708  0020                     my_delay_ms@time:	
  1709                           ; 2 bytes @ 0x0
  1710                           
  1711  0020                     my_delay_ms_WDT@time:	
  1712                           ; 4 bytes @ 0x0
  1713                           
  1714  0020                     USART_init@baudrate:	
  1715                           ; 4 bytes @ 0x0
  1716                           
  1717  0020                     ___lldiv@divisor:	
  1718                           ; 4 bytes @ 0x0
  1719                           
  1720  0020                     ___flge@ff1:	
  1721                           ; 4 bytes @ 0x0
  1722                           
  1723                           
  1724                           ; 4 bytes @ 0x0
  1725  0020                     	ds	1
  1726  0021                     ??_Send_To_MB:	
  1727  0021                     ?_USART_put_string:	
  1728                           ; 1 bytes @ 0x1
  1729                           
  1730  0021                     ??_EEPROM_Write_Byte:	
  1731                           ; 1 bytes @ 0x1
  1732                           
  1733  0021                     ?_USART_put_buffer:	
  1734                           ; 1 bytes @ 0x1
  1735                           
  1736  0021                     ??_strcpy:	
  1737                           ; 1 bytes @ 0x1
  1738                           
  1739  0021                     Send_To_MB@size:	
  1740                           ; 1 bytes @ 0x1
  1741                           
  1742  0021                     USART_put_buffer@size:	
  1743                           ; 1 bytes @ 0x1
  1744                           
  1745  0021                     USART_put_string@vetor:	
  1746                           ; 2 bytes @ 0x1
  1747                           
  1748                           
  1749                           ; 2 bytes @ 0x1
  1750  0021                     	ds	1
  1751  0022                     ??_I2C_Master_Write:	
  1752  0022                     ??_I2C_Master_Read:	
  1753                           ; 1 bytes @ 0x2
  1754                           
  1755  0022                     ??_strlen:	
  1756                           ; 1 bytes @ 0x2
  1757                           
  1758  0022                     ??_strcat:	
  1759                           ; 1 bytes @ 0x2
  1760                           
  1761  0022                     ??_captura:	
  1762                           ; 1 bytes @ 0x2
  1763                           
  1764  0022                     ??_PROCULUS_Delay:	
  1765                           ; 1 bytes @ 0x2
  1766                           
  1767  0022                     ??__Umul8_16:	
  1768                           ; 1 bytes @ 0x2
  1769                           
  1770  0022                     ?_EEPROM_24C1025_Write_Buffer:	
  1771                           ; 1 bytes @ 0x2
  1772                           
  1773  0022                     ?_EEPROM_24C1025_Write_Str:	
  1774                           ; 1 bytes @ 0x2
  1775                           
  1776  0022                     EEPROM_Read_Byte@addr:	
  1777                           ; 1 bytes @ 0x2
  1778                           
  1779  0022                     strcpy@to:	
  1780                           ; 1 bytes @ 0x2
  1781                           
  1782  0022                     USART_to_Protocol@i:	
  1783                           ; 1 bytes @ 0x2
  1784                           
  1785  0022                     ___lwdiv@dividend:	
  1786                           ; 2 bytes @ 0x2
  1787                           
  1788  0022                     ___lwmod@dividend:	
  1789                           ; 2 bytes @ 0x2
  1790                           
  1791  0022                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1792                           ; 2 bytes @ 0x2
  1793                           
  1794  0022                     EEPROM_24C1025_Write_Str@mem_add:	
  1795                           ; 4 bytes @ 0x2
  1796                           
  1797                           
  1798                           ; 4 bytes @ 0x2
  1799  0022                     	ds	1
  1800  0023                     ??_USART_put_string:	
  1801  0023                     ?_EEPROM_Read_String:	
  1802                           ; 1 bytes @ 0x3
  1803                           
  1804  0023                     ??_USART_put_buffer:	
  1805                           ; 1 bytes @ 0x3
  1806                           
  1807  0023                     ?_EEPROM_Read_Integer:	
  1808                           ; 1 bytes @ 0x3
  1809                           
  1810  0023                     EEPROM_Write_Byte@addr:	
  1811                           ; 2 bytes @ 0x3
  1812                           
  1813  0023                     EEPROM_Read_String@dado:	
  1814                           ; 1 bytes @ 0x3
  1815                           
  1816  0023                     strcat@cp:	
  1817                           ; 1 bytes @ 0x3
  1818                           
  1819  0023                     strcpy@cp:	
  1820                           ; 1 bytes @ 0x3
  1821                           
  1822  0023                     strlen@cp:	
  1823                           ; 1 bytes @ 0x3
  1824                           
  1825  0023                     USART_put_string@ptr:	
  1826                           ; 1 bytes @ 0x3
  1827                           
  1828                           
  1829                           ; 2 bytes @ 0x3
  1830  0023                     	ds	1
  1831  0024                     ??_my_delay_ms_WDT:	
  1832  0024                     ??_USART_init:	
  1833                           ; 1 bytes @ 0x4
  1834                           
  1835  0024                     ??_EEPROM_Read_String:	
  1836                           ; 1 bytes @ 0x4
  1837                           
  1838  0024                     ??_my_delay_ms:	
  1839                           ; 1 bytes @ 0x4
  1840                           
  1841  0024                     ??___lwdiv:	
  1842                           ; 1 bytes @ 0x4
  1843                           
  1844  0024                     ??___lwmod:	
  1845                           ; 1 bytes @ 0x4
  1846                           
  1847  0024                     EEPROM_Write_Byte@last_GIE:	
  1848                           ; 1 bytes @ 0x4
  1849                           
  1850  0024                     USART_to_Protocol@usart_protocol:	
  1851                           ; 1 bytes @ 0x4
  1852                           
  1853  0024                     strcat@to:	
  1854                           ; 1 bytes @ 0x4
  1855                           
  1856  0024                     strlen@s:	
  1857                           ; 1 bytes @ 0x4
  1858                           
  1859  0024                     I2C_Master_Read@temp:	
  1860                           ; 1 bytes @ 0x4
  1861                           
  1862  0024                     PROCULUS_Delay@i:	
  1863                           ; 2 bytes @ 0x4
  1864                           
  1865  0024                     __Umul8_16@product:	
  1866                           ; 2 bytes @ 0x4
  1867                           
  1868  0024                     ___lldiv@dividend:	
  1869                           ; 2 bytes @ 0x4
  1870                           
  1871  0024                     ___flge@ff2:	
  1872                           ; 4 bytes @ 0x4
  1873                           
  1874                           
  1875                           ; 4 bytes @ 0x4
  1876  0024                     	ds	1
  1877  0025                     ??_EEPROM_Read_Integer:	
  1878  0025                     ?_EEPROM_Write_Integer:	
  1879                           ; 1 bytes @ 0x5
  1880                           
  1881  0025                     ??_Send_Reply_OK:	
  1882                           ; 1 bytes @ 0x5
  1883                           
  1884  0025                     ?_EEPROM_Write_String:	
  1885                           ; 1 bytes @ 0x5
  1886                           
  1887  0025                     EEPROM_Write_String@dado:	
  1888                           ; 1 bytes @ 0x5
  1889                           
  1890  0025                     EEPROM_Read_String@addr:	
  1891                           ; 1 bytes @ 0x5
  1892                           
  1893  0025                     USART_put_buffer@vetor:	
  1894                           ; 1 bytes @ 0x5
  1895                           
  1896  0025                     ___lwdiv@counter:	
  1897                           ; 1 bytes @ 0x5
  1898                           
  1899  0025                     ___lwmod@counter:	
  1900                           ; 1 bytes @ 0x5
  1901                           
  1902  0025                     EEPROM_Write_Integer@dado:	
  1903                           ; 1 bytes @ 0x5
  1904                           
  1905                           
  1906                           ; 2 bytes @ 0x5
  1907  0025                     	ds	1
  1908  0026                     ??_EEPROM_Write_String:	
  1909  0026                     ?_EEPROM_24C1025_Read_Buffer:	
  1910                           ; 1 bytes @ 0x6
  1911                           
  1912  0026                     ?_EEPROM_24C1025_Read_Str:	
  1913                           ; 1 bytes @ 0x6
  1914                           
  1915  0026                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1916                           ; 1 bytes @ 0x6
  1917                           
  1918  0026                     EEPROM_24C1025_Write_Str@data:	
  1919                           ; 1 bytes @ 0x6
  1920                           
  1921  0026                     EEPROM_Read_Integer@addr:	
  1922                           ; 1 bytes @ 0x6
  1923                           
  1924  0026                     EEPROM_Read_String@c:	
  1925                           ; 1 bytes @ 0x6
  1926                           
  1927  0026                     USART_init@i:	
  1928                           ; 1 bytes @ 0x6
  1929                           
  1930  0026                     USART_put_buffer@loop:	
  1931                           ; 1 bytes @ 0x6
  1932                           
  1933  0026                     ___lwdiv@quotient:	
  1934                           ; 1 bytes @ 0x6
  1935                           
  1936  0026                     __Umul8_16@word_mpld:	
  1937                           ; 2 bytes @ 0x6
  1938                           
  1939  0026                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1940                           ; 2 bytes @ 0x6
  1941                           
  1942  0026                     EEPROM_24C1025_Read_Str@mem_add:	
  1943                           ; 4 bytes @ 0x6
  1944                           
  1945  0026                     my_delay_ms@i:	
  1946                           ; 4 bytes @ 0x6
  1947                           
  1948  0026                     my_delay_ms_WDT@i:	
  1949                           ; 4 bytes @ 0x6
  1950                           
  1951                           
  1952                           ; 4 bytes @ 0x6
  1953  0026                     	ds	1
  1954  0027                     ??_EEPROM_Write_Integer:	
  1955  0027                     ??_EEPROM_24C1025_Write_Str:	
  1956                           ; 1 bytes @ 0x7
  1957                           
  1958  0027                     EEPROM_Read_Integer@ptr:	
  1959                           ; 1 bytes @ 0x7
  1960                           
  1961  0027                     EEPROM_Write_String@addr:	
  1962                           ; 1 bytes @ 0x7
  1963                           
  1964  0027                     USART_put_buffer@ptr:	
  1965                           ; 1 bytes @ 0x7
  1966                           
  1967  0027                     EEPROM_24C1025_Write_Buffer@data:	
  1968                           ; 1 bytes @ 0x7
  1969                           
  1970                           
  1971                           ; 2 bytes @ 0x7
  1972  0027                     	ds	1
  1973  0028                     ?_utoa:	
  1974  0028                     ??___lldiv:	
  1975                           ; 1 bytes @ 0x8
  1976                           
  1977  0028                     ??___flge:	
  1978                           ; 1 bytes @ 0x8
  1979                           
  1980  0028                     __Umul8_16@multiplier:	
  1981                           ; 1 bytes @ 0x8
  1982                           
  1983  0028                     EEPROM_Read_Integer@result:	
  1984                           ; 1 bytes @ 0x8
  1985                           
  1986  0028                     utoa@val:	
  1987                           ; 2 bytes @ 0x8
  1988                           
  1989                           
  1990                           ; 2 bytes @ 0x8
  1991  0028                     	ds	1
  1992  0029                     ??_EEPROM_24C1025_Write_Buffer:	
  1993  0029                     ?___flmul:	
  1994                           ; 1 bytes @ 0x9
  1995                           
  1996  0029                     EEPROM_24C1025_Write_Str@chip_add:	
  1997                           ; 4 bytes @ 0x9
  1998                           
  1999  0029                     ___lldiv@quotient:	
  2000                           ; 1 bytes @ 0x9
  2001                           
  2002  0029                     ___flmul@b:	
  2003                           ; 4 bytes @ 0x9
  2004                           
  2005                           
  2006                           ; 4 bytes @ 0x9
  2007  0029                     	ds	1
  2008  002A                     ?_ADC_Max_10Bits:	
  2009  002A                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2010                           ; 2 bytes @ 0xA
  2011                           
  2012  002A                     EEPROM_24C1025_Write_Str@range:	
  2013                           ; 1 bytes @ 0xA
  2014                           
  2015  002A                     EEPROM_24C1025_Read_Str@texto:	
  2016                           ; 1 bytes @ 0xA
  2017                           
  2018  002A                     EEPROM_Write_Integer@ptr:	
  2019                           ; 1 bytes @ 0xA
  2020                           
  2021  002A                     EEPROM_Read_Integer@i:	
  2022                           ; 1 bytes @ 0xA
  2023                           
  2024  002A                     utoa@base:	
  2025                           ; 1 bytes @ 0xA
  2026                           
  2027                           
  2028                           ; 2 bytes @ 0xA
  2029  002A                     	ds	1
  2030  002B                     ??_EEPROM_24C1025_Read_Str:	
  2031  002B                     EEPROM_24C1025_Write_Buffer@count:	
  2032                           ; 1 bytes @ 0xB
  2033                           
  2034  002B                     EEPROM_24C1025_Write_Str@ctrl:	
  2035                           ; 1 bytes @ 0xB
  2036                           
  2037  002B                     EEPROM_Write_Integer@addr:	
  2038                           ; 1 bytes @ 0xB
  2039                           
  2040  002B                     EEPROM_24C1025_Read_Buffer@data:	
  2041                           ; 1 bytes @ 0xB
  2042                           
  2043                           
  2044                           ; 2 bytes @ 0xB
  2045  002B                     	ds	1
  2046  002C                     ??_ADC_Max_10Bits:	
  2047  002C                     ??_utoa:	
  2048                           ; 1 bytes @ 0xC
  2049                           
  2050  002C                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2051                           ; 1 bytes @ 0xC
  2052                           
  2053  002C                     EEPROM_Write_Integer@i:	
  2054                           ; 1 bytes @ 0xC
  2055                           
  2056                           
  2057                           ; 1 bytes @ 0xC
  2058  002C                     	ds	1
  2059  002D                     ??_EEPROM_24C1025_Read_Buffer:	
  2060  002D                     EEPROM_24C1025_Write_Buffer@range:	
  2061                           ; 1 bytes @ 0xD
  2062                           
  2063  002D                     EEPROM_24C1025_Read_Str@cnt:	
  2064                           ; 1 bytes @ 0xD
  2065                           
  2066  002D                     ADC_Max_10Bits@canal:	
  2067                           ; 1 bytes @ 0xD
  2068                           
  2069  002D                     ___lldiv@counter:	
  2070                           ; 1 bytes @ 0xD
  2071                           
  2072  002D                     utoa@v:	
  2073                           ; 1 bytes @ 0xD
  2074                           
  2075  002D                     ___flmul@a:	
  2076                           ; 2 bytes @ 0xD
  2077                           
  2078                           
  2079                           ; 4 bytes @ 0xD
  2080  002D                     	ds	1
  2081  002E                     ?_I2C_Master_Init:	
  2082  002E                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2083                           ; 1 bytes @ 0xE
  2084                           
  2085  002E                     EEPROM_24C1025_Read_Str@chip_add:	
  2086                           ; 1 bytes @ 0xE
  2087                           
  2088  002E                     ADC_Max_10Bits@Temp:	
  2089                           ; 1 bytes @ 0xE
  2090                           
  2091  002E                     I2C_Master_Init@c:	
  2092                           ; 2 bytes @ 0xE
  2093                           
  2094                           
  2095                           ; 4 bytes @ 0xE
  2096  002E                     	ds	1
  2097  002F                     ?_EEPROM_24C1025_Write_Byte:	
  2098  002F                     EEPROM_24C1025_Read_Str@range:	
  2099                           ; 1 bytes @ 0xF
  2100                           
  2101  002F                     utoa@c:	
  2102                           ; 1 bytes @ 0xF
  2103                           
  2104  002F                     EEPROM_24C1025_Write_Byte@mem_add:	
  2105                           ; 1 bytes @ 0xF
  2106                           
  2107                           
  2108                           ; 4 bytes @ 0xF
  2109  002F                     	ds	1
  2110  0030                     EEPROM_24C1025_Read_Buffer@cnt_98:	
  2111  0030                     EEPROM_24C1025_Read_Str@ctrl:	
  2112                           ; 1 bytes @ 0x10
  2113                           
  2114  0030                     utoa@buf:	
  2115                           ; 1 bytes @ 0x10
  2116                           
  2117  0030                     ADC_Max_10Bits@value:	
  2118                           ; 1 bytes @ 0x10
  2119                           
  2120                           
  2121                           ; 2 bytes @ 0x10
  2122  0030                     	ds	1
  2123  0031                     ?_itoa:	
  2124  0031                     ??___flmul:	
  2125                           ; 1 bytes @ 0x11
  2126                           
  2127  0031                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2128                           ; 1 bytes @ 0x11
  2129                           
  2130  0031                     itoa@val:	
  2131                           ; 1 bytes @ 0x11
  2132                           
  2133                           
  2134                           ; 2 bytes @ 0x11
  2135  0031                     	ds	1
  2136  0032                     ??_I2C_Master_Init:	
  2137  0032                     EEPROM_24C1025_Read_Buffer@range:	
  2138                           ; 1 bytes @ 0x12
  2139                           
  2140  0032                     ADC_Max_10Bits@i:	
  2141                           ; 1 bytes @ 0x12
  2142                           
  2143                           
  2144                           ; 1 bytes @ 0x12
  2145  0032                     	ds	1
  2146  0033                     ?___xxtofl:	
  2147  0033                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2148                           ; 4 bytes @ 0x13
  2149                           
  2150  0033                     EEPROM_24C1025_Write_Byte@data:	
  2151                           ; 1 bytes @ 0x13
  2152                           
  2153  0033                     itoa@base:	
  2154                           ; 1 bytes @ 0x13
  2155                           
  2156  0033                     ___xxtofl@val:	
  2157                           ; 2 bytes @ 0x13
  2158                           
  2159                           
  2160                           ; 4 bytes @ 0x13
  2161  0033                     	ds	1
  2162  0034                     ??_EEPROM_24C1025_Write_Byte:	
  2163  0034                     ?_EEPROM_24C1025_Read_Byte:	
  2164                           ; 1 bytes @ 0x14
  2165                           
  2166  0034                     ?_EEPROM_24C1025_Read_Int:	
  2167                           ; 1 bytes @ 0x14
  2168                           
  2169  0034                     EEPROM_24C1025_Write_Byte@chip_add:	
  2170                           ; 2 bytes @ 0x14
  2171                           
  2172  0034                     EEPROM_24C1025_Read_Byte@mem_add:	
  2173                           ; 1 bytes @ 0x14
  2174                           
  2175  0034                     EEPROM_24C1025_Read_Int@mem_add:	
  2176                           ; 4 bytes @ 0x14
  2177                           
  2178                           
  2179                           ; 4 bytes @ 0x14
  2180  0034                     	ds	1
  2181  0035                     ??_itoa:	
  2182                           
  2183                           ; 1 bytes @ 0x15
  2184  0035                     	ds	1
  2185  0036                     ___flmul@sign:	
  2186                           
  2187                           ; 1 bytes @ 0x16
  2188  0036                     	ds	1
  2189  0037                     ??___xxtofl:	
  2190  0037                     ___flmul@aexp:	
  2191                           ; 1 bytes @ 0x17
  2192                           
  2193  0037                     itoa@buf:	
  2194                           ; 1 bytes @ 0x17
  2195                           
  2196                           
  2197                           ; 1 bytes @ 0x17
  2198  0037                     	ds	1
  2199  0038                     ??_EEPROM_24C1025_Read_Byte:	
  2200  0038                     ??_EEPROM_24C1025_Read_Int:	
  2201                           ; 1 bytes @ 0x18
  2202                           
  2203  0038                     EEPROM_24C1025_Read_Byte@chip_add:	
  2204                           ; 1 bytes @ 0x18
  2205                           
  2206  0038                     ___flmul@bexp:	
  2207                           ; 1 bytes @ 0x18
  2208                           
  2209                           
  2210                           ; 1 bytes @ 0x18
  2211  0038                     	ds	1
  2212  0039                     EEPROM_24C1025_Read_Byte@data:	
  2213  0039                     ___flmul@grs:	
  2214                           ; 1 bytes @ 0x19
  2215                           
  2216                           
  2217                           ; 4 bytes @ 0x19
  2218  0039                     	ds	1
  2219  003A                     EEPROM_24C1025_Read_Int@chip_add:	
  2220                           
  2221                           ; 1 bytes @ 0x1A
  2222  003A                     	ds	1
  2223  003B                     ___xxtofl@sign:	
  2224  003B                     EEPROM_24C1025_Read_Int@data:	
  2225                           ; 1 bytes @ 0x1B
  2226                           
  2227                           
  2228                           ; 2 bytes @ 0x1B
  2229  003B                     	ds	1
  2230  003C                     ___xxtofl@exp:	
  2231                           
  2232                           ; 1 bytes @ 0x1C
  2233  003C                     	ds	1
  2234  003D                     ___flmul@prod:	
  2235  003D                     ___xxtofl@arg:	
  2236                           ; 4 bytes @ 0x1D
  2237                           
  2238                           
  2239                           ; 4 bytes @ 0x1D
  2240  003D                     	ds	4
  2241  0041                     ?_ADC_Media_10bits:	
  2242  0041                     ?___fldiv:	
  2243                           ; 4 bytes @ 0x21
  2244                           
  2245  0041                     ___flmul@temp:	
  2246                           ; 4 bytes @ 0x21
  2247                           
  2248  0041                     ___fldiv@a:	
  2249                           ; 2 bytes @ 0x21
  2250                           
  2251                           
  2252                           ; 4 bytes @ 0x21
  2253  0041                     	ds	2
  2254  0043                     ?___fltol:	
  2255  0043                     ___fltol@f1:	
  2256                           ; 4 bytes @ 0x23
  2257                           
  2258                           
  2259                           ; 4 bytes @ 0x23
  2260  0043                     	ds	2
  2261  0045                     ??_ADC_Media_10bits:	
  2262  0045                     ___fldiv@b:	
  2263                           ; 1 bytes @ 0x25
  2264                           
  2265                           
  2266                           ; 4 bytes @ 0x25
  2267  0045                     	ds	1
  2268  0046                     ADC_Media_10bits@canal:	
  2269                           
  2270                           ; 1 bytes @ 0x26
  2271  0046                     	ds	1
  2272  0047                     ??___fltol:	
  2273  0047                     ADC_Media_10bits@value:	
  2274                           ; 1 bytes @ 0x27
  2275                           
  2276                           
  2277                           ; 2 bytes @ 0x27
  2278  0047                     	ds	2
  2279  0049                     ??___fldiv:	
  2280  0049                     ADC_Media_10bits@i:	
  2281                           ; 1 bytes @ 0x29
  2282                           
  2283                           
  2284                           ; 1 bytes @ 0x29
  2285  0049                     	ds	1
  2286  004A                     ?___fladd:	
  2287  004A                     ___fladd@b:	
  2288                           ; 4 bytes @ 0x2A
  2289                           
  2290                           
  2291                           ; 4 bytes @ 0x2A
  2292  004A                     	ds	2
  2293  004C                     ___fltol@sign1:	
  2294                           
  2295                           ; 1 bytes @ 0x2C
  2296  004C                     	ds	1
  2297  004D                     ___fltol@exp1:	
  2298                           
  2299                           ; 1 bytes @ 0x2D
  2300  004D                     	ds	1
  2301  004E                     ?_USART_put_int:	
  2302  004E                     ?_EEPROM_24C1025_Write_Int:	
  2303                           ; 1 bytes @ 0x2E
  2304                           
  2305  004E                     USART_put_int@value:	
  2306                           ; 1 bytes @ 0x2E
  2307                           
  2308  004E                     EEPROM_24C1025_Write_Int@mem_add:	
  2309                           ; 2 bytes @ 0x2E
  2310                           
  2311  004E                     ___fladd@a:	
  2312                           ; 4 bytes @ 0x2E
  2313                           
  2314  004E                     ___fldiv@rem:	
  2315                           ; 4 bytes @ 0x2E
  2316                           
  2317                           
  2318                           ; 4 bytes @ 0x2E
  2319  004E                     	ds	2
  2320  0050                     ??_USART_put_int:	
  2321                           
  2322                           ; 1 bytes @ 0x30
  2323  0050                     	ds	1
  2324  0051                     USART_put_int@dado:	
  2325                           
  2326                           ; 1 bytes @ 0x31
  2327  0051                     	ds	1
  2328  0052                     ?_PROCULUS_Control_Register_Write:	
  2329  0052                     ?_PROCULUS_VP_Write:	
  2330                           ; 1 bytes @ 0x32
  2331                           
  2332  0052                     ??___fladd:	
  2333                           ; 1 bytes @ 0x32
  2334                           
  2335  0052                     PROCULUS_Control_Register_Write@size:	
  2336                           ; 1 bytes @ 0x32
  2337                           
  2338  0052                     ___fldiv@sign:	
  2339                           ; 1 bytes @ 0x32
  2340                           
  2341  0052                     EEPROM_24C1025_Write_Int@data:	
  2342                           ; 1 bytes @ 0x32
  2343                           
  2344  0052                     PROCULUS_VP_Write@vp:	
  2345                           ; 2 bytes @ 0x32
  2346                           
  2347                           
  2348                           ; 2 bytes @ 0x32
  2349  0052                     	ds	1
  2350  0053                     ??_PROCULUS_Control_Register_Write:	
  2351  0053                     ___fldiv@new_exp:	
  2352                           ; 1 bytes @ 0x33
  2353                           
  2354                           
  2355                           ; 2 bytes @ 0x33
  2356  0053                     	ds	1
  2357  0054                     ??_EEPROM_24C1025_Write_Int:	
  2358  0054                     PROCULUS_Control_Register_Write@vetor:	
  2359                           ; 1 bytes @ 0x34
  2360                           
  2361  0054                     PROCULUS_VP_Write@vetor:	
  2362                           ; 1 bytes @ 0x34
  2363                           
  2364                           
  2365                           ; 2 bytes @ 0x34
  2366  0054                     	ds	1
  2367  0055                     EEPROM_24C1025_Write_Int@chip_add:	
  2368  0055                     PROCULUS_Control_Register_Write@i:	
  2369                           ; 1 bytes @ 0x35
  2370                           
  2371  0055                     ___fldiv@grs:	
  2372                           ; 1 bytes @ 0x35
  2373                           
  2374                           
  2375                           ; 4 bytes @ 0x35
  2376  0055                     	ds	1
  2377  0056                     ?_PROCULUS_Show_Screen:	
  2378  0056                     ?_PROCULUS_Buzzer:	
  2379                           ; 1 bytes @ 0x36
  2380                           
  2381  0056                     PROCULUS_VP_Write@size:	
  2382                           ; 1 bytes @ 0x36
  2383                           
  2384  0056                     EEPROM_24C1025_Write_Int@local:	
  2385                           ; 1 bytes @ 0x36
  2386                           
  2387  0056                     PROCULUS_Buzzer@time_ms_x_10:	
  2388                           ; 2 bytes @ 0x36
  2389                           
  2390  0056                     PROCULUS_Show_Screen@screen:	
  2391                           ; 2 bytes @ 0x36
  2392                           
  2393                           
  2394                           ; 2 bytes @ 0x36
  2395  0056                     	ds	1
  2396  0057                     ??_PROCULUS_VP_Write:	
  2397                           
  2398                           ; 1 bytes @ 0x37
  2399  0057                     	ds	1
  2400  0058                     ?_Save_Log:	
  2401  0058                     ??_PROCULUS_Show_Screen:	
  2402                           ; 1 bytes @ 0x38
  2403                           
  2404  0058                     ??_PROCULUS_Buzzer:	
  2405                           ; 1 bytes @ 0x38
  2406                           
  2407  0058                     ?_EEPROM_24C1025_Fill_All:	
  2408                           ; 1 bytes @ 0x38
  2409                           
  2410  0058                     EEPROM_24C1025_Fill_All@value:	
  2411                           ; 1 bytes @ 0x38
  2412                           
  2413  0058                     Save_Log@add_datalog:	
  2414                           ; 2 bytes @ 0x38
  2415                           
  2416                           
  2417                           ; 4 bytes @ 0x38
  2418  0058                     	ds	1
  2419  0059                     PROCULUS_VP_Write@i:	
  2420  0059                     ___fldiv@bexp:	
  2421                           ; 1 bytes @ 0x39
  2422                           
  2423  0059                     PROCULUS_Buzzer@vetor:	
  2424                           ; 1 bytes @ 0x39
  2425                           
  2426  0059                     PROCULUS_Show_Screen@vetor:	
  2427                           ; 2 bytes @ 0x39
  2428                           
  2429                           
  2430                           ; 3 bytes @ 0x39
  2431  0059                     	ds	1
  2432  005A                     ?_PROCULUS_VP_Write_String:	
  2433  005A                     ??_EEPROM_24C1025_Fill_All:	
  2434                           ; 1 bytes @ 0x3A
  2435                           
  2436  005A                     EEPROM_24C1025_Fill_All@chip_add:	
  2437                           ; 1 bytes @ 0x3A
  2438                           
  2439  005A                     ___fladd@signs:	
  2440                           ; 1 bytes @ 0x3A
  2441                           
  2442  005A                     ___fldiv@aexp:	
  2443                           ; 1 bytes @ 0x3A
  2444                           
  2445  005A                     PROCULUS_VP_Write_String@vp:	
  2446                           ; 1 bytes @ 0x3A
  2447                           
  2448                           
  2449                           ; 2 bytes @ 0x3A
  2450  005A                     	ds	1
  2451  005B                     ___fladd@aexp:	
  2452  005B                     EEPROM_24C1025_Fill_All@mem_add:	
  2453                           ; 1 bytes @ 0x3B
  2454                           
  2455                           
  2456                           ; 4 bytes @ 0x3B
  2457  005B                     	ds	1
  2458  005C                     ??_Save_Log:	
  2459  005C                     PROCULUS_VP_Write_String@text:	
  2460                           ; 1 bytes @ 0x3C
  2461                           
  2462  005C                     ___fladd@bexp:	
  2463                           ; 1 bytes @ 0x3C
  2464                           
  2465                           
  2466                           ; 1 bytes @ 0x3C
  2467  005C                     	ds	1
  2468  005D                     ??_PROCULUS_VP_Write_String:	
  2469  005D                     ___fladd@grs:	
  2470                           ; 1 bytes @ 0x3D
  2471                           
  2472                           
  2473                           ; 1 bytes @ 0x3D
  2474  005D                     	ds	1
  2475  005E                     ?___flsub:	
  2476  005E                     ___flsub@a:	
  2477                           ; 4 bytes @ 0x3E
  2478                           
  2479                           
  2480                           ; 4 bytes @ 0x3E
  2481  005E                     	ds	1
  2482  005F                     ??_Decodify_Command:	
  2483                           
  2484                           ; 1 bytes @ 0x3F
  2485  005F                     	ds	3
  2486  0062                     ___flsub@b:	
  2487                           
  2488                           ; 4 bytes @ 0x42
  2489  0062                     	ds	4
  2490  0066                     ??_MediaPlacaVaccum:	
  2491  0066                     ??___flsub:	
  2492                           ; 1 bytes @ 0x46
  2493                           
  2494                           
  2495                           ; 1 bytes @ 0x46
  2496  0066                     	ds	4
  2497  006A                     ??_main:	
  2498                           
  2499                           ; 1 bytes @ 0x4A
  2500  006A                     	ds	3
  2501  006D                     main@reset:	
  2502                           
  2503                           ; 2 bytes @ 0x4D
  2504  006D                     	ds	2
  2505                           
  2506                           	psect	maintext
  2507  1442                     __pmaintext:	
  2508 ;;
  2509 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2510 ;;
  2511 ;; *************** function _main *****************
  2512 ;; Defined at:
  2513 ;;		line 145 in file "SlaveLiofilizadorVer1.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;		None
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;  reset           2   77[BANK0 ] unsigned int 
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : B00/0
  2524 ;;		On exit  : 300/100
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2527 ;;      Params:         0       0       0       0       0
  2528 ;;      Locals:         0       2       0       0       0
  2529 ;;      Temps:          0       3       0       0       0
  2530 ;;      Totals:         0       5       0       0       0
  2531 ;;Total ram usage:        5 bytes
  2532 ;; Hardware stack levels required when called:    7
  2533 ;; This function calls:
  2534 ;;		_ADC_init
  2535 ;;		_Decodify_Command
  2536 ;;		_EEPROM_Read_Integer
  2537 ;;		_EEPROM_Write_Integer
  2538 ;;		_I2C_Master_Init
  2539 ;;		_MediaPlacaVaccum
  2540 ;;		_USART_init
  2541 ;;		_my_delay_ms_WDT
  2542 ;; This function is called by:
  2543 ;;		Startup code after reset
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           
  2548                           ;psect for function _main
  2549  1442                     _main:	
  2550                           
  2551                           ;SlaveLiofilizadorVer1.c: 146:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2552                           
  2553                           ;incstack = 0
  2554                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2555  1442  3002               	movlw	2
  2556  1443  1283               	bcf	3,5	;RP0=0, select bank0
  2557  1444  1303               	bcf	3,6	;RP1=0, select bank0
  2558  1445  00EC               	movwf	??_main+2
  2559  1446  3004               	movlw	4
  2560  1447  00EB               	movwf	??_main+1
  2561  1448  30B9               	movlw	185
  2562  1449  00EA               	movwf	??_main
  2563  144A                     u7937:	
  2564  144A  0BEA               	decfsz	??_main,f
  2565  144B  2C4A               	goto	u7937
  2566  144C  0BEB               	decfsz	??_main+1,f
  2567  144D  2C4A               	goto	u7937
  2568  144E  0BEC               	decfsz	??_main+2,f
  2569  144F  2C4A               	goto	u7937
  2570  1450  2C51               	nop2
  2571                           
  2572                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF0=1;
  2573  1451  1683               	bsf	3,5	;RP0=1, select bank1
  2574  1452  1303               	bcf	3,6	;RP1=0, select bank1
  2575  1453  160F               	bsf	15,4	;volatile
  2576                           
  2577                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF1=1;
  2578  1454  168F               	bsf	15,5	;volatile
  2579                           
  2580                           ;SlaveLiofilizadorVer1.c: 149:      OSCCONbits.IRCF2=1;
  2581  1455  170F               	bsf	15,6	;volatile
  2582                           
  2583                           ;SlaveLiofilizadorVer1.c: 151:      PORTA=0;
  2584  1456  1283               	bcf	3,5	;RP0=0, select bank0
  2585  1457  0185               	clrf	5	;volatile
  2586                           
  2587                           ;SlaveLiofilizadorVer1.c: 152:      PORTB=0;
  2588  1458  0186               	clrf	6	;volatile
  2589                           
  2590                           ;SlaveLiofilizadorVer1.c: 153:      PORTC=0;
  2591  1459  0187               	clrf	7	;volatile
  2592                           
  2593                           ;SlaveLiofilizadorVer1.c: 154:      PORTE=0;
  2594  145A  0189               	clrf	9	;volatile
  2595                           
  2596                           ;SlaveLiofilizadorVer1.c: 155:      TRISA=0b11101111;
  2597  145B  30EF               	movlw	239
  2598  145C  1683               	bsf	3,5	;RP0=1, select bank1
  2599  145D  0085               	movwf	5	;volatile
  2600                           
  2601                           ;SlaveLiofilizadorVer1.c: 156:      TRISB=0b00001111;
  2602  145E  300F               	movlw	15
  2603  145F  0086               	movwf	6	;volatile
  2604                           
  2605                           ;SlaveLiofilizadorVer1.c: 157:      TRISC=0xF0;
  2606  1460  30F0               	movlw	240
  2607  1461  0087               	movwf	7	;volatile
  2608                           
  2609                           ;SlaveLiofilizadorVer1.c: 158:      TRISE=0xFF;
  2610  1462  30FF               	movlw	255
  2611  1463  0089               	movwf	9	;volatile
  2612                           
  2613                           ;SlaveLiofilizadorVer1.c: 160:      ANSEL=0x00000011;
  2614  1464  3011               	movlw	17
  2615  1465  1703               	bsf	3,6	;RP1=1, select bank3
  2616  1466  0088               	movwf	8	;volatile
  2617                           
  2618                           ;SlaveLiofilizadorVer1.c: 161:      ANSELH=0x00000000;
  2619  1467  0189               	clrf	9	;volatile
  2620                           
  2621                           ;SlaveLiofilizadorVer1.c: 163:      OPTION_REGbits.nRBPU=0;
  2622  1468  1303               	bcf	3,6	;RP1=0, select bank1
  2623  1469  1381               	bcf	1,7	;volatile
  2624                           
  2625                           ;SlaveLiofilizadorVer1.c: 164:      WPUB=0b00001111;
  2626  146A  300F               	movlw	15
  2627  146B  0095               	movwf	21	;volatile
  2628                           
  2629                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB7 =1;
  2630  146C  1283               	bcf	3,5	;RP0=0, select bank0
  2631  146D  1786               	bsf	6,7	;volatile
  2632                           
  2633                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB6 =1;
  2634  146E  1706               	bsf	6,6	;volatile
  2635                           
  2636                           ;SlaveLiofilizadorVer1.c: 169:      PORTBbits.RB5=1;
  2637  146F  1686               	bsf	6,5	;volatile
  2638                           
  2639                           ;SlaveLiofilizadorVer1.c: 170:      my_delay_ms_WDT(1000);
  2640  1470  3000               	movlw	0
  2641  1471  00A3               	movwf	my_delay_ms_WDT@time+3
  2642  1472  3000               	movlw	0
  2643  1473  00A2               	movwf	my_delay_ms_WDT@time+2
  2644  1474  3003               	movlw	3
  2645  1475  00A1               	movwf	my_delay_ms_WDT@time+1
  2646  1476  30E8               	movlw	232
  2647  1477  00A0               	movwf	my_delay_ms_WDT@time
  2648  1478  160A  158A  2561  160A  118A  	fcall	_my_delay_ms_WDT
  2649                           
  2650                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.T0CS=0;
  2651  147D  1683               	bsf	3,5	;RP0=1, select bank1
  2652  147E  1281               	bcf	1,5	;volatile
  2653                           
  2654                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PSA =1;
  2655  147F  1581               	bsf	1,3	;volatile
  2656                           
  2657                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS0 =1;
  2658  1480  1401               	bsf	1,0	;volatile
  2659                           
  2660                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS1 =1;
  2661  1481  1481               	bsf	1,1	;volatile
  2662                           
  2663                           ;SlaveLiofilizadorVer1.c: 176:      OPTION_REGbits.PS2 =1;
  2664  1482  1501               	bsf	1,2	;volatile
  2665                           
  2666                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.T0IE =0;
  2667  1483  128B               	bcf	11,5	;volatile
  2668                           
  2669                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.INTE =0;
  2670  1484  120B               	bcf	11,4	;volatile
  2671                           
  2672                           ;SlaveLiofilizadorVer1.c: 179:      INTCONbits.GIE =1;
  2673  1485  178B               	bsf	11,7	;volatile
  2674                           
  2675                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.PEIE = 1;
  2676  1486  170B               	bsf	11,6	;volatile
  2677                           
  2678                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS0=1;
  2679  1487  1283               	bcf	3,5	;RP0=0, select bank0
  2680  1488  1610               	bsf	16,4	;volatile
  2681                           
  2682                           ;SlaveLiofilizadorVer1.c: 184:      T1CKPS1=1;
  2683  1489  1690               	bsf	16,5	;volatile
  2684                           
  2685                           ;SlaveLiofilizadorVer1.c: 185:      TMR1CS=0;
  2686  148A  1090               	bcf	16,1	;volatile
  2687                           
  2688                           ;SlaveLiofilizadorVer1.c: 186:      TMR1IE=1;
  2689  148B  1683               	bsf	3,5	;RP0=1, select bank1
  2690  148C  140C               	bsf	12,0	;volatile
  2691                           
  2692                           ;SlaveLiofilizadorVer1.c: 187:      T1CON=1;
  2693  148D  3001               	movlw	1
  2694  148E  1283               	bcf	3,5	;RP0=0, select bank0
  2695  148F  0090               	movwf	16	;volatile
  2696  1490  0064               	clrwdt	;# 
  2697                           
  2698                           ;SlaveLiofilizadorVer1.c: 194:      ADC_init();
  2699  1491  160A  158A  2164  160A  118A  	fcall	_ADC_init
  2700                           
  2701                           ;SlaveLiofilizadorVer1.c: 195:      I2C_Master_Init(100000);
  2702  1496  3000               	movlw	0
  2703  1497  00B1               	movwf	I2C_Master_Init@c+3
  2704  1498  3001               	movlw	1
  2705  1499  00B0               	movwf	I2C_Master_Init@c+2
  2706  149A  3086               	movlw	134
  2707  149B  00AF               	movwf	I2C_Master_Init@c+1
  2708  149C  30A0               	movlw	160
  2709  149D  00AE               	movwf	I2C_Master_Init@c
  2710  149E  160A  158A  242A  160A  118A  	fcall	_I2C_Master_Init
  2711                           
  2712                           ;SlaveLiofilizadorVer1.c: 196:      USART_init(115200);
  2713  14A3  3000               	movlw	0
  2714  14A4  1283               	bcf	3,5	;RP0=0, select bank0
  2715  14A5  00A3               	movwf	USART_init@baudrate+3
  2716  14A6  3001               	movlw	1
  2717  14A7  00A2               	movwf	USART_init@baudrate+2
  2718  14A8  30C2               	movlw	194
  2719  14A9  00A1               	movwf	USART_init@baudrate+1
  2720  14AA  3000               	movlw	0
  2721  14AB  00A0               	movwf	USART_init@baudrate
  2722  14AC  160A  158A  2611  160A  118A  	fcall	_USART_init
  2723                           
  2724                           ;SlaveLiofilizadorVer1.c: 202:      {;SlaveLiofilizadorVer1.c: 203:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 204:      reset=EEPROM_Read_Integer(0x10);
  2725  14B1  3010               	movlw	16
  2726  14B2  160A  158A  237C  160A  118A  	fcall	_EEPROM_Read_Integer
  2727  14B7  0824               	movf	?_EEPROM_Read_Integer+1,w
  2728  14B8  00EE               	movwf	main@reset+1
  2729  14B9  0823               	movf	?_EEPROM_Read_Integer,w
  2730  14BA  00ED               	movwf	main@reset
  2731                           
  2732                           ;SlaveLiofilizadorVer1.c: 205:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2733  14BB  0A6D               	incf	main@reset,w
  2734  14BC  1D03               	skipz
  2735  14BD  2CCA               	goto	l7564
  2736  14BE  0A6E               	incf	main@reset+1,w
  2737  14BF  1D03               	btfss	3,2
  2738  14C0  2CCA               	goto	l7564
  2739  14C1  3000               	movlw	0
  2740  14C2  00A5               	movwf	EEPROM_Write_Integer@dado
  2741  14C3  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2742  14C4  3010               	movlw	16
  2743  14C5  160A  158A  245B  160A  118A  	fcall	_EEPROM_Write_Integer
  2744  14CA                     l7564:	
  2745                           
  2746                           ;SlaveLiofilizadorVer1.c: 206:      reset++;
  2747  14CA  3001               	movlw	1
  2748  14CB  1283               	bcf	3,5	;RP0=0, select bank0
  2749  14CC  1303               	bcf	3,6	;RP1=0, select bank0
  2750  14CD  07ED               	addwf	main@reset,f
  2751  14CE  1803               	skipnc
  2752  14CF  0AEE               	incf	main@reset+1,f
  2753  14D0  3000               	movlw	0
  2754  14D1  07EE               	addwf	main@reset+1,f
  2755                           
  2756                           ;SlaveLiofilizadorVer1.c: 207:      EEPROM_Write_Integer(0x10,reset);
  2757  14D2  086E               	movf	main@reset+1,w
  2758  14D3  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2759  14D4  086D               	movf	main@reset,w
  2760  14D5  00A5               	movwf	EEPROM_Write_Integer@dado
  2761  14D6  3010               	movlw	16
  2762  14D7  160A  158A  245B  160A  118A  	fcall	_EEPROM_Write_Integer
  2763                           
  2764                           ;SlaveLiofilizadorVer1.c: 208:      };SlaveLiofilizadorVer1.c: 212:      Delay_Led_Tmr0 
      +                          = 0;
  2765  14DC  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2766  14DD  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2767                           
  2768                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Usart = 0;
  2769  14DE  1683               	bsf	3,5	;RP0=1, select bank1
  2770  14DF  1303               	bcf	3,6	;RP1=0, select bank1
  2771  14E0  01DF               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2772  14E1  01E0               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2773                           
  2774                           ;SlaveLiofilizadorVer1.c: 214:      Delay_Led_Memory = 0;
  2775  14E2  01FA               	clrf	_Delay_Led_Memory	;volatile
  2776  14E3  01FB               	clrf	_Delay_Led_Memory+1	;volatile
  2777                           
  2778                           ;SlaveLiofilizadorVer1.c: 216:      segundo=0;
  2779  14E4  01E7               	clrf	_segundo^(0+128)	;volatile
  2780                           
  2781                           ;SlaveLiofilizadorVer1.c: 217:      hora=0;
  2782  14E5  01E6               	clrf	_hora^(0+128)	;volatile
  2783                           
  2784                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC0=0;
  2785  14E6  1283               	bcf	3,5	;RP0=0, select bank0
  2786  14E7  1007               	bcf	7,0	;volatile
  2787                           
  2788                           ;SlaveLiofilizadorVer1.c: 219:      PORTCbits.RC1=0;
  2789  14E8  1087               	bcf	7,1	;volatile
  2790                           
  2791                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA2=0;
  2792  14E9  1105               	bcf	5,2	;volatile
  2793                           
  2794                           ;SlaveLiofilizadorVer1.c: 221:      PORTAbits.RA3=0;
  2795  14EA  1185               	bcf	5,3	;volatile
  2796                           
  2797                           ;SlaveLiofilizadorVer1.c: 224:      Board_Number=(((0x0F)&(~PORTB)));
  2798  14EB  0906               	comf	6,w	;volatile
  2799  14EC  390F               	andlw	15
  2800  14ED  00EA               	movwf	??_main
  2801  14EE  086A               	movf	??_main,w
  2802  14EF  1683               	bsf	3,5	;RP0=1, select bank1
  2803  14F0  00E3               	movwf	_Board_Number^(0+128)
  2804                           
  2805                           ;SlaveLiofilizadorVer1.c: 225:      canal=1;
  2806  14F1  01E4               	clrf	_canal^(0+128)
  2807  14F2  0AE4               	incf	_canal^(0+128),f
  2808                           
  2809                           ;SlaveLiofilizadorVer1.c: 233:      statuspower.flag_global_vacuo=0;
  2810  14F3  1168               	bcf	_statuspower^(0+128),2
  2811  14F4                     l7590:	
  2812                           
  2813                           ;SlaveLiofilizadorVer1.c: 247:           {;SlaveLiofilizadorVer1.c: 249:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2814  14F4  17E9               	bsf	_generic_status^(0+128),7
  2815                           
  2816                           ;SlaveLiofilizadorVer1.c: 275:          if(++canal==2) canal=0;
  2817  14F5  3001               	movlw	1
  2818  14F6  1283               	bcf	3,5	;RP0=0, select bank0
  2819  14F7  00EA               	movwf	??_main
  2820  14F8  086A               	movf	??_main,w
  2821  14F9  1683               	bsf	3,5	;RP0=1, select bank1
  2822  14FA  07E4               	addwf	_canal^(0+128),f
  2823  14FB  3002               	movlw	2
  2824  14FC  0664               	xorwf	_canal^(0+128),w
  2825  14FD  1903               	btfsc	3,2
  2826  14FE  01E4               	clrf	_canal^(0+128)
  2827                           
  2828                           ;SlaveLiofilizadorVer1.c: 276:          MediaPlacaVaccum(canal);
  2829  14FF  0864               	movf	_canal^(0+128),w
  2830  1500  120A  158A  2569  160A  118A  	fcall	_MediaPlacaVaccum
  2831                           
  2832                           ;SlaveLiofilizadorVer1.c: 284:          if(generic_status.flag_usart_rx==1)
  2833  1505  1683               	bsf	3,5	;RP0=1, select bank1
  2834  1506  1C69               	btfss	_generic_status^(0+128),0
  2835  1507  2CF4               	goto	l7590
  2836                           
  2837                           ;SlaveLiofilizadorVer1.c: 285:             {;SlaveLiofilizadorVer1.c: 286:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2838  1508  1703               	bsf	3,6	;RP1=1, select bank3
  2839  1509  0810               	movf	_usart_buffer^(0+384),w	;volatile
  2840  150A  1303               	bcf	3,6	;RP1=0, select bank1
  2841  150B  00DC               	movwf	(_header+1)^(0+128)
  2842  150C  1703               	bsf	3,6	;RP1=1, select bank3
  2843  150D  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  2844  150E  1303               	bcf	3,6	;RP1=0, select bank1
  2845  150F  00DB               	movwf	_header^(0+128)
  2846                           
  2847                           ;SlaveLiofilizadorVer1.c: 287:             if(header==0xAABB)
  2848  1510  30BB               	movlw	187
  2849  1511  065B               	xorwf	_header^(0+128),w
  2850  1512  30AA               	movlw	170
  2851  1513  1903               	skipnz
  2852  1514  065C               	xorwf	(_header+1)^(0+128),w
  2853  1515  1D03               	btfss	3,2
  2854  1516  2CF4               	goto	l7590
  2855                           
  2856                           ;SlaveLiofilizadorVer1.c: 288:                {;SlaveLiofilizadorVer1.c: 289:           
      +                               destino =usart_buffer[3];
  2857  1517  1703               	bsf	3,6	;RP1=1, select bank3
  2858  1518  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  2859  1519  1283               	bcf	3,5	;RP0=0, select bank0
  2860  151A  1303               	bcf	3,6	;RP1=0, select bank0
  2861  151B  00EA               	movwf	??_main
  2862  151C  086A               	movf	??_main,w
  2863  151D  1683               	bsf	3,5	;RP0=1, select bank1
  2864  151E  00E2               	movwf	_destino^(0+128)
  2865                           
  2866                           ;SlaveLiofilizadorVer1.c: 290:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2867  151F  0862               	movf	_destino^(0+128),w
  2868  1520  0663               	xorwf	_Board_Number^(0+128),w
  2869  1521  1D03               	btfss	3,2
  2870  1522  0A62               	incf	_destino^(0+128),w
  2871  1523  1D03               	btfss	3,2
  2872  1524  2CF4               	goto	l7590
  2873                           
  2874                           ;SlaveLiofilizadorVer1.c: 291:                       {;SlaveLiofilizadorVer1.c: 292:    
      +                                             Delay_Led_Usart=20;
  2875  1525  3014               	movlw	20
  2876  1526  00DF               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2877  1527  3000               	movlw	0
  2878  1528  00E0               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2879                           
  2880                           ;SlaveLiofilizadorVer1.c: 293:                       Decodify_Command();
  2881  1529  120A  118A  2036  160A  118A  	fcall	_Decodify_Command
  2882                           
  2883                           ;SlaveLiofilizadorVer1.c: 294:                       generic_status.flag_usart_rx=0;
  2884  152E  1683               	bsf	3,5	;RP0=1, select bank1
  2885  152F  1069               	bcf	_generic_status^(0+128),0
  2886                           
  2887                           ;SlaveLiofilizadorVer1.c: 297:             }
  2888  1530  2CF4               	goto	l7590
  2889  1531                     __end_of_main:	
  2890                           
  2891                           	psect	text1
  2892  1D61                     __ptext1:	
  2893 ;; *************** function _my_delay_ms_WDT *****************
  2894 ;; Defined at:
  2895 ;;		line 13 in file "my_delay.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  time            4    0[BANK0 ] long 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  i               4    6[BANK0 ] long 
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, btemp+1
  2904 ;; Tracked objects:
  2905 ;;		On entry : 300/0
  2906 ;;		On exit  : 300/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2909 ;;      Params:         0       4       0       0       0
  2910 ;;      Locals:         0       4       0       0       0
  2911 ;;      Temps:          0       2       0       0       0
  2912 ;;      Totals:         0      10       0       0       0
  2913 ;;Total ram usage:       10 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    1
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           
  2924                           ;psect for function _my_delay_ms_WDT
  2925  1D61                     _my_delay_ms_WDT:	
  2926                           
  2927                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
  2928                           
  2929                           ;incstack = 0
  2930                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
  2931  1D61  3000               	movlw	0
  2932  1D62  00A9               	movwf	my_delay_ms_WDT@i+3
  2933  1D63  3000               	movlw	0
  2934  1D64  00A8               	movwf	my_delay_ms_WDT@i+2
  2935  1D65  3000               	movlw	0
  2936  1D66  00A7               	movwf	my_delay_ms_WDT@i+1
  2937  1D67  3000               	movlw	0
  2938  1D68  00A6               	movwf	my_delay_ms_WDT@i
  2939  1D69                     l7142:	
  2940  1D69  0829               	movf	my_delay_ms_WDT@i+3,w
  2941  1D6A  3A80               	xorlw	128
  2942  1D6B  00FF               	movwf	127
  2943  1D6C  0823               	movf	my_delay_ms_WDT@time+3,w
  2944  1D6D  3A80               	xorlw	128
  2945  1D6E  027F               	subwf	127,w
  2946  1D6F  1D03               	skipz
  2947  1D70  2D7B               	goto	u7643
  2948  1D71  0822               	movf	my_delay_ms_WDT@time+2,w
  2949  1D72  0228               	subwf	my_delay_ms_WDT@i+2,w
  2950  1D73  1D03               	skipz
  2951  1D74  2D7B               	goto	u7643
  2952  1D75  0821               	movf	my_delay_ms_WDT@time+1,w
  2953  1D76  0227               	subwf	my_delay_ms_WDT@i+1,w
  2954  1D77  1D03               	skipz
  2955  1D78  2D7B               	goto	u7643
  2956  1D79  0820               	movf	my_delay_ms_WDT@time,w
  2957  1D7A  0226               	subwf	my_delay_ms_WDT@i,w
  2958  1D7B                     u7643:	
  2959  1D7B  1803               	btfsc	3,0
  2960  1D7C  0008               	return
  2961  1D7D  0064               	clrwdt	;# 
  2962                           
  2963                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
  2964  1D7E  3003               	movlw	3
  2965  1D7F  1283               	bcf	3,5	;RP0=0, select bank0
  2966  1D80  1303               	bcf	3,6	;RP1=0, select bank0
  2967  1D81  00A5               	movwf	??_my_delay_ms_WDT+1
  2968  1D82  3097               	movlw	151
  2969  1D83  00A4               	movwf	??_my_delay_ms_WDT
  2970  1D84                     u7947:	
  2971  1D84  0BA4               	decfsz	??_my_delay_ms_WDT,f
  2972  1D85  2D84               	goto	u7947
  2973  1D86  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
  2974  1D87  2D84               	goto	u7947
  2975                           
  2976                           ;my_delay.c: 19:             }
  2977  1D88  3001               	movlw	1
  2978  1D89  1283               	bcf	3,5	;RP0=0, select bank0
  2979  1D8A  1303               	bcf	3,6	;RP1=0, select bank0
  2980  1D8B  07A6               	addwf	my_delay_ms_WDT@i,f
  2981  1D8C  3000               	movlw	0
  2982  1D8D  1803               	skipnc
  2983  1D8E  3001               	movlw	1
  2984  1D8F  07A7               	addwf	my_delay_ms_WDT@i+1,f
  2985  1D90  3000               	movlw	0
  2986  1D91  1803               	skipnc
  2987  1D92  3001               	movlw	1
  2988  1D93  07A8               	addwf	my_delay_ms_WDT@i+2,f
  2989  1D94  3000               	movlw	0
  2990  1D95  1803               	skipnc
  2991  1D96  3001               	movlw	1
  2992  1D97  07A9               	addwf	my_delay_ms_WDT@i+3,f
  2993  1D98  2D69               	goto	l7142
  2994  1D99                     __end_of_my_delay_ms_WDT:	
  2995                           
  2996                           	psect	text2
  2997  1E11                     __ptext2:	
  2998 ;; *************** function _USART_init *****************
  2999 ;; Defined at:
  3000 ;;		line 18 in file "usart.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  baudrate        4    0[BANK0 ] unsigned long 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  i               1    6[BANK0 ] unsigned char 
  3005 ;;  erro            1    0        unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0
  3010 ;; Tracked objects:
  3011 ;;		On entry : 300/0
  3012 ;;		On exit  : 300/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3015 ;;      Params:         0       4       0       0       0
  3016 ;;      Locals:         0       2       0       0       0
  3017 ;;      Temps:          0       1       0       0       0
  3018 ;;      Totals:         0       7       0       0       0
  3019 ;;Total ram usage:        7 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    1
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_main
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _USART_init
  3031  1E11                     _USART_init:	
  3032                           
  3033                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  3034                           
  3035                           ;incstack = 0
  3036                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  3037  1E11  304B               	movlw	75
  3038  1E12  0621               	xorwf	USART_init@baudrate+1,w
  3039  1E13  0420               	iorwf	USART_init@baudrate,w
  3040  1E14  0422               	iorwf	USART_init@baudrate+2,w
  3041  1E15  0423               	iorwf	USART_init@baudrate+3,w
  3042  1E16  1D03               	btfss	3,2
  3043  1E17  2E22               	goto	l7162
  3044                           
  3045                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  3046  1E18  1798               	bsf	24,7	;volatile
  3047                           
  3048                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  3049  1E19  1618               	bsf	24,4	;volatile
  3050                           
  3051                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  3052  1E1A  1683               	bsf	3,5	;RP0=1, select bank1
  3053  1E1B  1518               	bsf	24,2	;volatile
  3054                           
  3055                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  3056  1E1C  1218               	bcf	24,4	;volatile
  3057                           
  3058                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  3059  1E1D  1318               	bcf	24,6	;volatile
  3060                           
  3061                           ;usart.c: 32:           SPBRG =12;
  3062  1E1E  300C               	movlw	12
  3063  1E1F  0099               	movwf	25	;volatile
  3064                           
  3065                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  3066  1E20  170B               	bsf	11,6	;volatile
  3067  1E21  2E3B               	goto	L1
  3068  1E22                     l7162:	
  3069                           ;usart.c: 35:           }
  3070                           
  3071                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  3072                           
  3073  1E22  30C2               	movlw	194
  3074  1E23  0621               	xorwf	USART_init@baudrate+1,w
  3075  1E24  1D03               	skipz
  3076  1E25  2E3C               	goto	l7182
  3077  1E26  0322               	decf	USART_init@baudrate+2,w
  3078  1E27  0420               	iorwf	USART_init@baudrate,w
  3079  1E28  0423               	iorwf	USART_init@baudrate+3,w
  3080  1E29  1D03               	btfss	3,2
  3081  1E2A  2E3C               	goto	l7182
  3082                           
  3083                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  3084  1E2B  3010               	movlw	16
  3085  1E2C  1683               	bsf	3,5	;RP0=1, select bank1
  3086  1E2D  0099               	movwf	25	;volatile
  3087                           
  3088                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  3089  1E2E  1703               	bsf	3,6	;RP1=1, select bank3
  3090  1E2F  1587               	bsf	7,3	;volatile
  3091                           
  3092                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  3093  1E30  1303               	bcf	3,6	;RP1=0, select bank1
  3094  1E31  1518               	bsf	24,2	;volatile
  3095                           
  3096                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  3097  1E32  1283               	bcf	3,5	;RP0=0, select bank0
  3098  1E33  1798               	bsf	24,7	;volatile
  3099                           
  3100                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  3101  1E34  1683               	bsf	3,5	;RP0=1, select bank1
  3102  1E35  1218               	bcf	24,4	;volatile
  3103                           
  3104                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  3105  1E36  1318               	bcf	24,6	;volatile
  3106                           
  3107                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  3108  1E37  1283               	bcf	3,5	;RP0=0, select bank0
  3109  1E38  1618               	bsf	24,4	;volatile
  3110                           
  3111                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  3112  1E39  170B               	bsf	11,6	;volatile
  3113                           
  3114                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  3115  1E3A  1683               	bsf	3,5	;RP0=1, select bank1
  3116  1E3B                     L1:	
  3117  1E3B  168C               	bsf	12,5	;volatile
  3118  1E3C                     l7182:	
  3119                           
  3120                           ;usart.c: 68:      TRISC6= 1;
  3121  1E3C  1683               	bsf	3,5	;RP0=1, select bank1
  3122  1E3D  1707               	bsf	7,6	;volatile
  3123                           
  3124                           ;usart.c: 69:      TRISC7= 1;
  3125  1E3E  1787               	bsf	7,7	;volatile
  3126                           
  3127                           ;usart.c: 71:      CREN=0;
  3128  1E3F  1283               	bcf	3,5	;RP0=0, select bank0
  3129  1E40  1218               	bcf	24,4	;volatile
  3130                           
  3131                           ;usart.c: 72:      CREN=1;
  3132  1E41  1618               	bsf	24,4	;volatile
  3133                           
  3134                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  3135  1E42  01A6               	clrf	USART_init@i
  3136  1E43                     l7196:	
  3137  1E43  081A               	movf	26,w	;volatile
  3138  1E44  3001               	movlw	1
  3139  1E45  00A4               	movwf	??_USART_init
  3140  1E46  0824               	movf	??_USART_init,w
  3141  1E47  07A6               	addwf	USART_init@i,f
  3142  1E48  300F               	movlw	15
  3143  1E49  0226               	subwf	USART_init@i,w
  3144  1E4A  1803               	btfsc	3,0
  3145  1E4B  0008               	return
  3146  1E4C  2E43               	goto	l7196
  3147  1E4D                     __end_of_USART_init:	
  3148                           
  3149                           	psect	text3
  3150  0D69                     __ptext3:	
  3151 ;; *************** function _MediaPlacaVaccum *****************
  3152 ;; Defined at:
  3153 ;;		line 789 in file "SlaveLiofilizadorVer1.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  canal           1    wreg     unsigned char 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;  canal           1    4[BANK1 ] unsigned char 
  3158 ;;  Temp            4    5[BANK1 ] float 
  3159 ;;  Valor           4    0[BANK1 ] float 
  3160 ;;  i               2    9[BANK1 ] unsigned int 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 300/100
  3167 ;;		On exit  : 200/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3170 ;;      Params:         0       0       0       0       0
  3171 ;;      Locals:         0       0      11       0       0
  3172 ;;      Temps:          0       4       0       0       0
  3173 ;;      Totals:         0       4      11       0       0
  3174 ;;Total ram usage:       15 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    3
  3177 ;; This function calls:
  3178 ;;		_ADC_Max_10Bits
  3179 ;;		_ADC_Media_10bits
  3180 ;;		_Package_Usart_is_for_me
  3181 ;;		___fladd
  3182 ;;		___fldiv
  3183 ;;		___flge
  3184 ;;		___flmul
  3185 ;;		___flsub
  3186 ;;		___xxtofl
  3187 ;;		_my_delay_ms
  3188 ;; This function is called by:
  3189 ;;		_main
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           
  3194                           ;psect for function _MediaPlacaVaccum
  3195  0D69                     _MediaPlacaVaccum:	
  3196                           
  3197                           ;incstack = 0
  3198                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3199                           ;MediaPlacaVaccum@canal stored from wreg
  3200  0D69  00A4               	movwf	MediaPlacaVaccum@canal^(0+128)
  3201                           
  3202                           ;SlaveLiofilizadorVer1.c: 790:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 791:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 795:      if(canal==0)
  3203  0D6A  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3204  0D6B  1D03               	btfss	3,2
  3205  0D6C  2F0F               	goto	l434
  3206                           
  3207                           ;SlaveLiofilizadorVer1.c: 796:        {;SlaveLiofilizadorVer1.c: 797:        ADCON1bits.
      +                          VCFG0=1;
  3208  0D6D  161F               	bsf	31,4	;volatile
  3209                           
  3210                           ;SlaveLiofilizadorVer1.c: 798:        ADCON1bits.VCFG1=1;
  3211  0D6E  169F               	bsf	31,5	;volatile
  3212                           
  3213                           ;SlaveLiofilizadorVer1.c: 799:        ADCON0bits.CHS=canal;
  3214  0D6F  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3215  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0D71  00E6               	movwf	??_MediaPlacaVaccum
  3217  0D72  0DE6               	rlf	??_MediaPlacaVaccum,f
  3218  0D73  0DE6               	rlf	??_MediaPlacaVaccum,f
  3219  0D74  081F               	movf	31,w	;volatile
  3220  0D75  0666               	xorwf	??_MediaPlacaVaccum,w
  3221  0D76  39C3               	andlw	-61
  3222  0D77  0666               	xorwf	??_MediaPlacaVaccum,w
  3223  0D78  009F               	movwf	31	;volatile
  3224                           
  3225                           ;SlaveLiofilizadorVer1.c: 800:        my_delay_ms(1);
  3226  0D79  3000               	movlw	0
  3227  0D7A  00A3               	movwf	my_delay_ms@time+3
  3228  0D7B  3000               	movlw	0
  3229  0D7C  00A2               	movwf	my_delay_ms@time+2
  3230  0D7D  3000               	movlw	0
  3231  0D7E  00A1               	movwf	my_delay_ms@time+1
  3232  0D7F  3001               	movlw	1
  3233  0D80  00A0               	movwf	my_delay_ms@time
  3234  0D81  160A  158A  24F2  120A  158A  	fcall	_my_delay_ms
  3235                           
  3236                           ;SlaveLiofilizadorVer1.c: 801:        Temp=0;
  3237  0D86  3000               	movlw	0
  3238  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  3239  0D88  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3240  0D89  3000               	movlw	0
  3241  0D8A  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3242  0D8B  3000               	movlw	0
  3243  0D8C  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3244  0D8D  3000               	movlw	0
  3245  0D8E  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3246                           
  3247                           ;SlaveLiofilizadorVer1.c: 803:        for(i=1;i<15;i++)
  3248  0D8F  3001               	movlw	1
  3249  0D90  00A9               	movwf	MediaPlacaVaccum@i^(0+128)
  3250  0D91  3000               	movlw	0
  3251  0D92  00AA               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3252  0D93                     l7218:	
  3253                           
  3254                           ;SlaveLiofilizadorVer1.c: 804:            {;SlaveLiofilizadorVer1.c: 805:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3255  0D93  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3256  0D94  160A  158A  268B  120A  158A  	fcall	_ADC_Media_10bits
  3257  0D99  0844               	movf	?_ADC_Media_10bits+3,w
  3258  0D9A  00CD               	movwf	___fladd@b+3
  3259  0D9B  0843               	movf	?_ADC_Media_10bits+2,w
  3260  0D9C  00CC               	movwf	___fladd@b+2
  3261  0D9D  0842               	movf	?_ADC_Media_10bits+1,w
  3262  0D9E  00CB               	movwf	___fladd@b+1
  3263  0D9F  0841               	movf	?_ADC_Media_10bits,w
  3264  0DA0  00CA               	movwf	___fladd@b
  3265  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  3266  0DA2  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3267  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0DA4  00D1               	movwf	___fladd@a+3
  3269  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  3270  0DA6  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3271  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  3272  0DA8  00D0               	movwf	___fladd@a+2
  3273  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  3274  0DAA  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3275  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  3276  0DAC  00CF               	movwf	___fladd@a+1
  3277  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  3278  0DAE  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3279  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3280  0DB0  00CE               	movwf	___fladd@a
  3281  0DB1  120A  158A  233C  120A  158A  	fcall	___fladd
  3282  0DB6  084D               	movf	?___fladd+3,w
  3283  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  3284  0DB8  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3285  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3286  0DBA  084C               	movf	?___fladd+2,w
  3287  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  3288  0DBC  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3289  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0DBE  084B               	movf	?___fladd+1,w
  3291  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  3292  0DC0  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3293  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  3294  0DC2  084A               	movf	?___fladd,w
  3295  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  3296  0DC4  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3297                           
  3298                           ;SlaveLiofilizadorVer1.c: 806:            if(Package_Usart_is_for_me()==1) break;
  3299  0DC5  160A  158A  21C7  120A  158A  	fcall	_Package_Usart_is_for_me
  3300  0DCA  3A01               	xorlw	1
  3301  0DCB  1903               	btfsc	3,2
  3302  0DCC  2DDB               	goto	l7226
  3303                           
  3304                           ;SlaveLiofilizadorVer1.c: 807:            }
  3305  0DCD  3001               	movlw	1
  3306  0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  3307  0DCF  07A9               	addwf	MediaPlacaVaccum@i^(0+128),f
  3308  0DD0  1803               	skipnc
  3309  0DD1  0AAA               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3310  0DD2  3000               	movlw	0
  3311  0DD3  07AA               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3312  0DD4  3000               	movlw	0
  3313  0DD5  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3314  0DD6  300F               	movlw	15
  3315  0DD7  1903               	skipnz
  3316  0DD8  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3317  0DD9  1C03               	skipc
  3318  0DDA  2D93               	goto	l7218
  3319  0DDB                     l7226:	
  3320                           
  3321                           ;SlaveLiofilizadorVer1.c: 808:        if(i<10)
  3322  0DDB  3000               	movlw	0
  3323  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  3324  0DDD  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3325  0DDE  300A               	movlw	10
  3326  0DDF  1903               	skipnz
  3327  0DE0  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3328  0DE1  1C03               	btfss	3,0
  3329  0DE2  0008               	return
  3330                           
  3331                           ;SlaveLiofilizadorVer1.c: 814:        if(i==15)
  3332  0DE3  300F               	movlw	15
  3333  0DE4  0629               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3334  0DE5  042A               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3335  0DE6  1D03               	btfss	3,2
  3336  0DE7  2DF2               	goto	l7234
  3337                           
  3338                           ;SlaveLiofilizadorVer1.c: 815:          Temp/=(i-1);
  3339  0DE8  0829               	movf	MediaPlacaVaccum@i^(0+128),w
  3340  0DE9  3EFF               	addlw	255
  3341  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0DEB  00B3               	movwf	___xxtofl@val
  3343  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  3344  0DED  082A               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3345  0DEE  1803               	skipnc
  3346  0DEF  3E01               	addlw	1
  3347  0DF0  3EFF               	addlw	255
  3348  0DF1  2DF7               	goto	L2
  3349  0DF2                     l7234:	
  3350                           
  3351                           ;SlaveLiofilizadorVer1.c: 817:          Temp/=(i);
  3352  0DF2  0829               	movf	MediaPlacaVaccum@i^(0+128),w
  3353  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0DF4  00B3               	movwf	___xxtofl@val
  3355  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  3356  0DF6  082A               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3357  0DF7                     L2:	
  3358  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  3359  0DF8  00B4               	movwf	___xxtofl@val+1
  3360  0DF9  01B5               	clrf	___xxtofl@val+2
  3361  0DFA  01B6               	clrf	___xxtofl@val+3
  3362  0DFB  3000               	movlw	0
  3363  0DFC  160A  118A  21CA  120A  158A  	fcall	___xxtofl
  3364  0E01  0836               	movf	?___xxtofl+3,w
  3365  0E02  00C4               	movwf	___fldiv@a+3
  3366  0E03  0835               	movf	?___xxtofl+2,w
  3367  0E04  00C3               	movwf	___fldiv@a+2
  3368  0E05  0834               	movf	?___xxtofl+1,w
  3369  0E06  00C2               	movwf	___fldiv@a+1
  3370  0E07  0833               	movf	?___xxtofl,w
  3371  0E08  00C1               	movwf	___fldiv@a
  3372  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  3373  0E0A  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3374  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0E0C  00C8               	movwf	___fldiv@b+3
  3376  0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  3377  0E0E  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3378  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  3379  0E10  00C7               	movwf	___fldiv@b+2
  3380  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  3381  0E12  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3382  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3383  0E14  00C6               	movwf	___fldiv@b+1
  3384  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  3385  0E16  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3386  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0E18  00C5               	movwf	___fldiv@b
  3388  0E19  120A  158A  219B  120A  158A  	fcall	___fldiv
  3389  0E1E  0844               	movf	?___fldiv+3,w
  3390  0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  3391  0E20  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3392  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  3393  0E22  0843               	movf	?___fldiv+2,w
  3394  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  3395  0E24  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3396  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  3397  0E26  0842               	movf	?___fldiv+1,w
  3398  0E27  1683               	bsf	3,5	;RP0=1, select bank1
  3399  0E28  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3400  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0E2A  0841               	movf	?___fldiv,w
  3402  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  3403  0E2C  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3404                           
  3405                           ;SlaveLiofilizadorVer1.c: 819:        Vaccum0 =1023.0-Temp;
  3406  0E2D  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3407  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  3408  0E2F  00E1               	movwf	___flsub@a+3
  3409  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  3410  0E31  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3411  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0E33  00E0               	movwf	___flsub@a+2
  3413  0E34  1683               	bsf	3,5	;RP0=1, select bank1
  3414  0E35  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3415  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3416  0E37  00DF               	movwf	___flsub@a+1
  3417  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  3418  0E39  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3419  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  3420  0E3B  00DE               	movwf	___flsub@a
  3421  0E3C  3044               	movlw	68
  3422  0E3D  00E5               	movwf	___flsub@b+3
  3423  0E3E  307F               	movlw	127
  3424  0E3F  00E4               	movwf	___flsub@b+2
  3425  0E40  30C0               	movlw	192
  3426  0E41  00E3               	movwf	___flsub@b+1
  3427  0E42  3000               	movlw	0
  3428  0E43  00E2               	movwf	___flsub@b
  3429  0E44  160A  158A  224B  120A  158A  	fcall	___flsub
  3430  0E49  0861               	movf	?___flsub+3,w
  3431  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  3432  0E4B  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3433  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3434  0E4D  0860               	movf	?___flsub+2,w
  3435  0E4E  1683               	bsf	3,5	;RP0=1, select bank1
  3436  0E4F  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3437  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0E51  085F               	movf	?___flsub+1,w
  3439  0E52  1683               	bsf	3,5	;RP0=1, select bank1
  3440  0E53  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3441  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0E55  085E               	movf	?___flsub,w
  3443  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  3444  0E57  00D1               	movwf	_Vaccum0^(0+128)
  3445                           
  3446                           ;SlaveLiofilizadorVer1.c: 820:        Vaccum0*=Vaccum0;
  3447  0E58  0854               	movf	(_Vaccum0+3)^(0+128),w
  3448  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3449  0E5A  00AC               	movwf	___flmul@b+3
  3450  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  3451  0E5C  0853               	movf	(_Vaccum0+2)^(0+128),w
  3452  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3453  0E5E  00AB               	movwf	___flmul@b+2
  3454  0E5F  1683               	bsf	3,5	;RP0=1, select bank1
  3455  0E60  0852               	movf	(_Vaccum0+1)^(0+128),w
  3456  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  3457  0E62  00AA               	movwf	___flmul@b+1
  3458  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  3459  0E64  0851               	movf	_Vaccum0^(0+128),w
  3460  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  3461  0E66  00A9               	movwf	___flmul@b
  3462  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  3463  0E68  0854               	movf	(_Vaccum0+3)^(0+128),w
  3464  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3465  0E6A  00B0               	movwf	___flmul@a+3
  3466  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  3467  0E6C  0853               	movf	(_Vaccum0+2)^(0+128),w
  3468  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3469  0E6E  00AF               	movwf	___flmul@a+2
  3470  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  3471  0E70  0852               	movf	(_Vaccum0+1)^(0+128),w
  3472  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  3473  0E72  00AE               	movwf	___flmul@a+1
  3474  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  3475  0E74  0851               	movf	_Vaccum0^(0+128),w
  3476  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3477  0E76  00AD               	movwf	___flmul@a
  3478  0E77  120A  118A  24BC  120A  158A  	fcall	___flmul
  3479  0E7C  082C               	movf	?___flmul+3,w
  3480  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  3481  0E7E  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3482  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3483  0E80  082B               	movf	?___flmul+2,w
  3484  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  3485  0E82  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3486  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0E84  082A               	movf	?___flmul+1,w
  3488  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  3489  0E86  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3490  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  3491  0E88  0829               	movf	?___flmul,w
  3492  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  3493  0E8A  00D1               	movwf	_Vaccum0^(0+128)
  3494                           
  3495                           ;SlaveLiofilizadorVer1.c: 821:        Vaccum0*=0.00222;
  3496  0E8B  303B               	movlw	59
  3497  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  3498  0E8D  00AC               	movwf	___flmul@b+3
  3499  0E8E  3011               	movlw	17
  3500  0E8F  00AB               	movwf	___flmul@b+2
  3501  0E90  307D               	movlw	125
  3502  0E91  00AA               	movwf	___flmul@b+1
  3503  0E92  306B               	movlw	107
  3504  0E93  00A9               	movwf	___flmul@b
  3505  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  3506  0E95  0854               	movf	(_Vaccum0+3)^(0+128),w
  3507  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  3508  0E97  00B0               	movwf	___flmul@a+3
  3509  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  3510  0E99  0853               	movf	(_Vaccum0+2)^(0+128),w
  3511  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  3512  0E9B  00AF               	movwf	___flmul@a+2
  3513  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  3514  0E9D  0852               	movf	(_Vaccum0+1)^(0+128),w
  3515  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  3516  0E9F  00AE               	movwf	___flmul@a+1
  3517  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  3518  0EA1  0851               	movf	_Vaccum0^(0+128),w
  3519  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  3520  0EA3  00AD               	movwf	___flmul@a
  3521  0EA4  120A  118A  24BC  120A  158A  	fcall	___flmul
  3522  0EA9  082C               	movf	?___flmul+3,w
  3523  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  3524  0EAB  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3525  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0EAD  082B               	movf	?___flmul+2,w
  3527  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  3528  0EAF  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3529  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  3530  0EB1  082A               	movf	?___flmul+1,w
  3531  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  3532  0EB3  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3533  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  3534  0EB5  0829               	movf	?___flmul,w
  3535  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  3536  0EB7  00D1               	movwf	_Vaccum0^(0+128)
  3537                           
  3538                           ;SlaveLiofilizadorVer1.c: 822:        Vaccum0+=150;
  3539  0EB8  3043               	movlw	67
  3540  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3541  0EBA  00CD               	movwf	___fladd@b+3
  3542  0EBB  3016               	movlw	22
  3543  0EBC  00CC               	movwf	___fladd@b+2
  3544  0EBD  3000               	movlw	0
  3545  0EBE  00CB               	movwf	___fladd@b+1
  3546  0EBF  3000               	movlw	0
  3547  0EC0  00CA               	movwf	___fladd@b
  3548  0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  3549  0EC2  0854               	movf	(_Vaccum0+3)^(0+128),w
  3550  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  3551  0EC4  00D1               	movwf	___fladd@a+3
  3552  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  3553  0EC6  0853               	movf	(_Vaccum0+2)^(0+128),w
  3554  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  3555  0EC8  00D0               	movwf	___fladd@a+2
  3556  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  3557  0ECA  0852               	movf	(_Vaccum0+1)^(0+128),w
  3558  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  3559  0ECC  00CF               	movwf	___fladd@a+1
  3560  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  3561  0ECE  0851               	movf	_Vaccum0^(0+128),w
  3562  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0ED0  00CE               	movwf	___fladd@a
  3564  0ED1  120A  158A  233C  120A  158A  	fcall	___fladd
  3565  0ED6  084D               	movf	?___fladd+3,w
  3566  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  3567  0ED8  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3568  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  3569  0EDA  084C               	movf	?___fladd+2,w
  3570  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  3571  0EDC  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3572  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  3573  0EDE  084B               	movf	?___fladd+1,w
  3574  0EDF  1683               	bsf	3,5	;RP0=1, select bank1
  3575  0EE0  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3576  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3577  0EE2  084A               	movf	?___fladd,w
  3578  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  3579  0EE4  00D1               	movwf	_Vaccum0^(0+128)
  3580                           
  3581                           ;SlaveLiofilizadorVer1.c: 824:        if(Vaccum0>2000)Vaccum0=2000;
  3582  0EE5  3044               	movlw	68
  3583  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3584  0EE7  00A3               	movwf	___flge@ff1+3
  3585  0EE8  30FA               	movlw	250
  3586  0EE9  00A2               	movwf	___flge@ff1+2
  3587  0EEA  3000               	movlw	0
  3588  0EEB  00A1               	movwf	___flge@ff1+1
  3589  0EEC  3000               	movlw	0
  3590  0EED  00A0               	movwf	___flge@ff1
  3591  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  3592  0EEF  0854               	movf	(_Vaccum0+3)^(0+128),w
  3593  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  3594  0EF1  00A7               	movwf	___flge@ff2+3
  3595  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3596  0EF3  0853               	movf	(_Vaccum0+2)^(0+128),w
  3597  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3598  0EF5  00A6               	movwf	___flge@ff2+2
  3599  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  3600  0EF7  0852               	movf	(_Vaccum0+1)^(0+128),w
  3601  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  3602  0EF9  00A5               	movwf	___flge@ff2+1
  3603  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  3604  0EFB  0851               	movf	_Vaccum0^(0+128),w
  3605  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  3606  0EFD  00A4               	movwf	___flge@ff2
  3607  0EFE  160A  118A  2137  120A  158A  	fcall	___flge
  3608  0F03  1803               	btfsc	3,0
  3609  0F04  0008               	return
  3610  0F05  3044               	movlw	68
  3611  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  3612  0F07  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3613  0F08  30FA               	movlw	250
  3614  0F09  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3615  0F0A  3000               	movlw	0
  3616  0F0B  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3617  0F0C  3000               	movlw	0
  3618  0F0D  00D1               	movwf	_Vaccum0^(0+128)
  3619  0F0E  0008               	return
  3620  0F0F                     l434:	
  3621                           ;SlaveLiofilizadorVer1.c: 827:      else
  3622                           
  3623                           
  3624                           ;SlaveLiofilizadorVer1.c: 828:        {;SlaveLiofilizadorVer1.c: 829:        ADCON1bits.
      +                          VCFG0=0;
  3625  0F0F  121F               	bcf	31,4	;volatile
  3626                           
  3627                           ;SlaveLiofilizadorVer1.c: 830:        ADCON1bits.VCFG1=0;
  3628  0F10  129F               	bcf	31,5	;volatile
  3629                           
  3630                           ;SlaveLiofilizadorVer1.c: 831:        ADCON0bits.CHS=canal;
  3631  0F11  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3632  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  3633  0F13  00E6               	movwf	??_MediaPlacaVaccum
  3634  0F14  0DE6               	rlf	??_MediaPlacaVaccum,f
  3635  0F15  0DE6               	rlf	??_MediaPlacaVaccum,f
  3636  0F16  081F               	movf	31,w	;volatile
  3637  0F17  0666               	xorwf	??_MediaPlacaVaccum,w
  3638  0F18  39C3               	andlw	-61
  3639  0F19  0666               	xorwf	??_MediaPlacaVaccum,w
  3640  0F1A  009F               	movwf	31	;volatile
  3641                           
  3642                           ;SlaveLiofilizadorVer1.c: 832:        my_delay_ms(1);
  3643  0F1B  3000               	movlw	0
  3644  0F1C  00A3               	movwf	my_delay_ms@time+3
  3645  0F1D  3000               	movlw	0
  3646  0F1E  00A2               	movwf	my_delay_ms@time+2
  3647  0F1F  3000               	movlw	0
  3648  0F20  00A1               	movwf	my_delay_ms@time+1
  3649  0F21  3001               	movlw	1
  3650  0F22  00A0               	movwf	my_delay_ms@time
  3651  0F23  160A  158A  24F2  120A  158A  	fcall	_my_delay_ms
  3652                           
  3653                           ;SlaveLiofilizadorVer1.c: 833:        Temp=0;
  3654  0F28  3000               	movlw	0
  3655  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  3656  0F2A  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3657  0F2B  3000               	movlw	0
  3658  0F2C  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3659  0F2D  3000               	movlw	0
  3660  0F2E  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3661  0F2F  3000               	movlw	0
  3662  0F30  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3663                           
  3664                           ;SlaveLiofilizadorVer1.c: 835:        for(i=1;i<15;i++)
  3665  0F31  3001               	movlw	1
  3666  0F32  00A9               	movwf	MediaPlacaVaccum@i^(0+128)
  3667  0F33  3000               	movlw	0
  3668  0F34  00AA               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3669  0F35                     l7252:	
  3670                           
  3671                           ;SlaveLiofilizadorVer1.c: 836:            {;SlaveLiofilizadorVer1.c: 837:            Val
      +                          or=ADC_Max_10Bits(canal);
  3672  0F35  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3673  0F36  160A  158A  264D  120A  158A  	fcall	_ADC_Max_10Bits
  3674  0F3B  082A               	movf	?_ADC_Max_10Bits,w
  3675  0F3C  00E6               	movwf	??_MediaPlacaVaccum
  3676  0F3D  082B               	movf	?_ADC_Max_10Bits+1,w
  3677  0F3E  00E7               	movwf	??_MediaPlacaVaccum+1
  3678  0F3F  01E8               	clrf	??_MediaPlacaVaccum+2
  3679  0F40  01E9               	clrf	??_MediaPlacaVaccum+3
  3680  0F41  0869               	movf	??_MediaPlacaVaccum+3,w
  3681  0F42  00B6               	movwf	___xxtofl@val+3
  3682  0F43  0868               	movf	??_MediaPlacaVaccum+2,w
  3683  0F44  00B5               	movwf	___xxtofl@val+2
  3684  0F45  0867               	movf	??_MediaPlacaVaccum+1,w
  3685  0F46  00B4               	movwf	___xxtofl@val+1
  3686  0F47  0866               	movf	??_MediaPlacaVaccum,w
  3687  0F48  00B3               	movwf	___xxtofl@val
  3688  0F49  3000               	movlw	0
  3689  0F4A  160A  118A  21CA  120A  158A  	fcall	___xxtofl
  3690  0F4F  0836               	movf	?___xxtofl+3,w
  3691  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  3692  0F51  00A3               	movwf	(MediaPlacaVaccum@Valor+3)^(0+128)
  3693  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3694  0F53  0835               	movf	?___xxtofl+2,w
  3695  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  3696  0F55  00A2               	movwf	(MediaPlacaVaccum@Valor+2)^(0+128)
  3697  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  3698  0F57  0834               	movf	?___xxtofl+1,w
  3699  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3700  0F59  00A1               	movwf	(MediaPlacaVaccum@Valor+1)^(0+128)
  3701  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3702  0F5B  0833               	movf	?___xxtofl,w
  3703  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  3704  0F5D  00A0               	movwf	MediaPlacaVaccum@Valor^(0+128)
  3705                           
  3706                           ;SlaveLiofilizadorVer1.c: 838:            if(Valor>Temp) Temp=Valor;
  3707  0F5E  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3708  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3709  0F60  00A3               	movwf	___flge@ff1+3
  3710  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  3711  0F62  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3712  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3713  0F64  00A2               	movwf	___flge@ff1+2
  3714  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  3715  0F66  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3716  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0F68  00A1               	movwf	___flge@ff1+1
  3718  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  3719  0F6A  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3720  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3721  0F6C  00A0               	movwf	___flge@ff1
  3722  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  3723  0F6E  0823               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3724  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3725  0F70  00A7               	movwf	___flge@ff2+3
  3726  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  3727  0F72  0822               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3728  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0F74  00A6               	movwf	___flge@ff2+2
  3730  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  3731  0F76  0821               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3732  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0F78  00A5               	movwf	___flge@ff2+1
  3734  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  3735  0F7A  0820               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3736  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  3737  0F7C  00A4               	movwf	___flge@ff2
  3738  0F7D  160A  118A  2137  120A  158A  	fcall	___flge
  3739  0F82  1803               	btfsc	3,0
  3740  0F83  2F8D               	goto	l7258
  3741  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  3742  0F85  0823               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3743  0F86  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3744  0F87  0822               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3745  0F88  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3746  0F89  0821               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3747  0F8A  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3748  0F8B  0820               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3749  0F8C  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3750  0F8D                     l7258:	
  3751                           
  3752                           ;SlaveLiofilizadorVer1.c: 839:            if(Package_Usart_is_for_me()==1) break;
  3753  0F8D  160A  158A  21C7  120A  158A  	fcall	_Package_Usart_is_for_me
  3754  0F92  3A01               	xorlw	1
  3755  0F93  1903               	btfsc	3,2
  3756  0F94  2FA3               	goto	l7264
  3757                           
  3758                           ;SlaveLiofilizadorVer1.c: 840:            }
  3759  0F95  3001               	movlw	1
  3760  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  3761  0F97  07A9               	addwf	MediaPlacaVaccum@i^(0+128),f
  3762  0F98  1803               	skipnc
  3763  0F99  0AAA               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3764  0F9A  3000               	movlw	0
  3765  0F9B  07AA               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3766  0F9C  3000               	movlw	0
  3767  0F9D  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3768  0F9E  300F               	movlw	15
  3769  0F9F  1903               	skipnz
  3770  0FA0  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3771  0FA1  1C03               	skipc
  3772  0FA2  2F35               	goto	l7252
  3773  0FA3                     l7264:	
  3774                           
  3775                           ;SlaveLiofilizadorVer1.c: 841:         if(i<10)
  3776  0FA3  3000               	movlw	0
  3777  0FA4  1683               	bsf	3,5	;RP0=1, select bank1
  3778  0FA5  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3779  0FA6  300A               	movlw	10
  3780  0FA7  1903               	skipnz
  3781  0FA8  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3782  0FA9  1C03               	btfss	3,0
  3783  0FAA  0008               	return
  3784                           
  3785                           ;SlaveLiofilizadorVer1.c: 846:         Tensao1 =Temp*0.318296;
  3786  0FAB  303E               	movlw	62
  3787  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3788  0FAD  00AC               	movwf	___flmul@b+3
  3789  0FAE  30A2               	movlw	162
  3790  0FAF  00AB               	movwf	___flmul@b+2
  3791  0FB0  30F7               	movlw	247
  3792  0FB1  00AA               	movwf	___flmul@b+1
  3793  0FB2  30B1               	movlw	177
  3794  0FB3  00A9               	movwf	___flmul@b
  3795  0FB4  1683               	bsf	3,5	;RP0=1, select bank1
  3796  0FB5  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3797  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3798  0FB7  00B0               	movwf	___flmul@a+3
  3799  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3800  0FB9  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3801  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3802  0FBB  00AF               	movwf	___flmul@a+2
  3803  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  3804  0FBD  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3805  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  3806  0FBF  00AE               	movwf	___flmul@a+1
  3807  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  3808  0FC1  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3809  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3810  0FC3  00AD               	movwf	___flmul@a
  3811  0FC4  120A  118A  24BC  120A  158A  	fcall	___flmul
  3812  0FC9  082C               	movf	?___flmul+3,w
  3813  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  3814  0FCB  00D0               	movwf	(_Tensao1+3)^(0+128)
  3815  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3816  0FCD  082B               	movf	?___flmul+2,w
  3817  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  3818  0FCF  00CF               	movwf	(_Tensao1+2)^(0+128)
  3819  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3820  0FD1  082A               	movf	?___flmul+1,w
  3821  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  3822  0FD3  00CE               	movwf	(_Tensao1+1)^(0+128)
  3823  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3824  0FD5  0829               	movf	?___flmul,w
  3825  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3826  0FD7  00CD               	movwf	_Tensao1^(0+128)
  3827                           
  3828                           ;SlaveLiofilizadorVer1.c: 847:         if(Tensao1<15) Tensao1=0;
  3829  0FD8  0850               	movf	(_Tensao1+3)^(0+128),w
  3830  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  3831  0FDA  00A3               	movwf	___flge@ff1+3
  3832  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3833  0FDC  084F               	movf	(_Tensao1+2)^(0+128),w
  3834  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3835  0FDE  00A2               	movwf	___flge@ff1+2
  3836  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  3837  0FE0  084E               	movf	(_Tensao1+1)^(0+128),w
  3838  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3839  0FE2  00A1               	movwf	___flge@ff1+1
  3840  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  3841  0FE4  084D               	movf	_Tensao1^(0+128),w
  3842  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0FE6  00A0               	movwf	___flge@ff1
  3844  0FE7  3041               	movlw	65
  3845  0FE8  00A7               	movwf	___flge@ff2+3
  3846  0FE9  3070               	movlw	112
  3847  0FEA  00A6               	movwf	___flge@ff2+2
  3848  0FEB  3000               	movlw	0
  3849  0FEC  00A5               	movwf	___flge@ff2+1
  3850  0FED  3000               	movlw	0
  3851  0FEE  00A4               	movwf	___flge@ff2
  3852  0FEF  160A  118A  2137  120A  158A  	fcall	___flge
  3853  0FF4  1803               	btfsc	3,0
  3854  0FF5  0008               	return
  3855  0FF6  3000               	movlw	0
  3856  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  3857  0FF8  00D0               	movwf	(_Tensao1+3)^(0+128)
  3858  0FF9  3000               	movlw	0
  3859  0FFA  00CF               	movwf	(_Tensao1+2)^(0+128)
  3860  0FFB  3000               	movlw	0
  3861  0FFC  00CE               	movwf	(_Tensao1+1)^(0+128)
  3862  0FFD  3000               	movlw	0
  3863  0FFE  00CD               	movwf	_Tensao1^(0+128)
  3864  0FFF  0008               	return
  3865  1000                     __end_of_MediaPlacaVaccum:	
  3866                           
  3867                           	psect	text4
  3868  1A4B                     __ptext4:	
  3869 ;; *************** function ___flsub *****************
  3870 ;; Defined at:
  3871 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  a               4   62[BANK0 ] void 
  3874 ;;  b               4   66[BANK0 ] void 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  4   62[BANK0 ] void 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 300/0
  3883 ;;		On exit  : 300/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3886 ;;      Params:         0       8       0       0       0
  3887 ;;      Locals:         0       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0
  3889 ;;      Totals:         0       8       0       0       0
  3890 ;;Total ram usage:        8 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    2
  3893 ;; This function calls:
  3894 ;;		___fladd
  3895 ;; This function is called by:
  3896 ;;		_MediaPlacaVaccum
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           
  3901                           ;psect for function ___flsub
  3902  1A4B                     ___flsub:	
  3903                           
  3904                           ;incstack = 0
  3905                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3906  1A4B  3080               	movlw	128
  3907  1A4C  06E1               	xorwf	___flsub@a+3,f
  3908  1A4D  0865               	movf	___flsub@b+3,w
  3909  1A4E  00CD               	movwf	___fladd@b+3
  3910  1A4F  0864               	movf	___flsub@b+2,w
  3911  1A50  00CC               	movwf	___fladd@b+2
  3912  1A51  0863               	movf	___flsub@b+1,w
  3913  1A52  00CB               	movwf	___fladd@b+1
  3914  1A53  0862               	movf	___flsub@b,w
  3915  1A54  00CA               	movwf	___fladd@b
  3916  1A55  0861               	movf	___flsub@a+3,w
  3917  1A56  00D1               	movwf	___fladd@a+3
  3918  1A57  0860               	movf	___flsub@a+2,w
  3919  1A58  00D0               	movwf	___fladd@a+2
  3920  1A59  085F               	movf	___flsub@a+1,w
  3921  1A5A  00CF               	movwf	___fladd@a+1
  3922  1A5B  085E               	movf	___flsub@a,w
  3923  1A5C  00CE               	movwf	___fladd@a
  3924  1A5D  120A  158A  233C   	fcall	___fladd
  3925  1A60  084D               	movf	?___fladd+3,w
  3926  1A61  00E1               	movwf	?___flsub+3
  3927  1A62  084C               	movf	?___fladd+2,w
  3928  1A63  00E0               	movwf	?___flsub+2
  3929  1A64  084B               	movf	?___fladd+1,w
  3930  1A65  00DF               	movwf	?___flsub+1
  3931  1A66  084A               	movf	?___fladd,w
  3932  1A67  00DE               	movwf	?___flsub
  3933  1A68  0008               	return
  3934  1A69                     __end_of___flsub:	
  3935                           
  3936                           	psect	text5
  3937  0B3C                     __ptext5:	
  3938 ;; *************** function ___fladd *****************
  3939 ;; Defined at:
  3940 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  b               4   42[BANK0 ] void 
  3943 ;;  a               4   46[BANK0 ] void 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  grs             1   61[BANK0 ] unsigned char 
  3946 ;;  bexp            1   60[BANK0 ] unsigned char 
  3947 ;;  aexp            1   59[BANK0 ] unsigned char 
  3948 ;;  signs           1   58[BANK0 ] unsigned char 
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  4   42[BANK0 ] unsigned char 
  3951 ;; Registers used:
  3952 ;;		wreg, status,2, status,0, btemp+1
  3953 ;; Tracked objects:
  3954 ;;		On entry : 300/0
  3955 ;;		On exit  : 300/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3958 ;;      Params:         0       8       0       0       0
  3959 ;;      Locals:         0       4       0       0       0
  3960 ;;      Temps:          0       8       0       0       0
  3961 ;;      Totals:         0      20       0       0       0
  3962 ;;Total ram usage:       20 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    1
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_MediaPlacaVaccum
  3969 ;;		___flsub
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           
  3974                           ;psect for function ___fladd
  3975  0B3C                     ___fladd:	
  3976                           
  3977                           ;incstack = 0
  3978                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3979  0B3C  084D               	movf	___fladd@b+3,w
  3980  0B3D  3980               	andlw	128
  3981  0B3E  00D2               	movwf	??___fladd
  3982  0B3F  0852               	movf	??___fladd,w
  3983  0B40  00DA               	movwf	___fladd@signs
  3984  0B41  084D               	movf	___fladd@b+3,w
  3985  0B42  00D2               	movwf	??___fladd
  3986  0B43  0752               	addwf	??___fladd,w
  3987  0B44  00D3               	movwf	??___fladd+1
  3988  0B45  0853               	movf	??___fladd+1,w
  3989  0B46  00DC               	movwf	___fladd@bexp
  3990  0B47  1BCC               	btfsc	___fladd@b+2,7
  3991  0B48  145C               	bsf	___fladd@bexp,0
  3992  0B49  085C               	movf	___fladd@bexp,w
  3993  0B4A  1903               	btfsc	3,2
  3994  0B4B  2B5A               	goto	l6132
  3995  0B4C  0A5C               	incf	___fladd@bexp,w
  3996  0B4D  1D03               	btfss	3,2
  3997  0B4E  2B57               	goto	l6128
  3998  0B4F  3000               	movlw	0
  3999  0B50  00CD               	movwf	___fladd@b+3
  4000  0B51  3000               	movlw	0
  4001  0B52  00CC               	movwf	___fladd@b+2
  4002  0B53  3000               	movlw	0
  4003  0B54  00CB               	movwf	___fladd@b+1
  4004  0B55  3000               	movlw	0
  4005  0B56  00CA               	movwf	___fladd@b
  4006  0B57                     l6128:	
  4007  0B57  17CC               	bsf	___fladd@b+2,7
  4008  0B58  01CD               	clrf	___fladd@b+3
  4009  0B59  2B62               	goto	l6134
  4010  0B5A                     l6132:	
  4011  0B5A  3000               	movlw	0
  4012  0B5B  00CD               	movwf	___fladd@b+3
  4013  0B5C  3000               	movlw	0
  4014  0B5D  00CC               	movwf	___fladd@b+2
  4015  0B5E  3000               	movlw	0
  4016  0B5F  00CB               	movwf	___fladd@b+1
  4017  0B60  3000               	movlw	0
  4018  0B61  00CA               	movwf	___fladd@b
  4019  0B62                     l6134:	
  4020  0B62  0851               	movf	___fladd@a+3,w
  4021  0B63  3980               	andlw	128
  4022  0B64  00D2               	movwf	??___fladd
  4023  0B65  0852               	movf	??___fladd,w
  4024  0B66  00DB               	movwf	___fladd@aexp
  4025  0B67  085B               	movf	___fladd@aexp,w
  4026  0B68  065A               	xorwf	___fladd@signs,w
  4027  0B69  1D03               	btfss	3,2
  4028  0B6A  175A               	bsf	___fladd@signs,6
  4029  0B6B  0851               	movf	___fladd@a+3,w
  4030  0B6C  00D2               	movwf	??___fladd
  4031  0B6D  0752               	addwf	??___fladd,w
  4032  0B6E  00D3               	movwf	??___fladd+1
  4033  0B6F  0853               	movf	??___fladd+1,w
  4034  0B70  00DB               	movwf	___fladd@aexp
  4035  0B71  1BD0               	btfsc	___fladd@a+2,7
  4036  0B72  145B               	bsf	___fladd@aexp,0
  4037  0B73  085B               	movf	___fladd@aexp,w
  4038  0B74  1903               	btfsc	3,2
  4039  0B75  2B84               	goto	l6156
  4040  0B76  0A5B               	incf	___fladd@aexp,w
  4041  0B77  1D03               	btfss	3,2
  4042  0B78  2B81               	goto	l6152
  4043  0B79  3000               	movlw	0
  4044  0B7A  00D1               	movwf	___fladd@a+3
  4045  0B7B  3000               	movlw	0
  4046  0B7C  00D0               	movwf	___fladd@a+2
  4047  0B7D  3000               	movlw	0
  4048  0B7E  00CF               	movwf	___fladd@a+1
  4049  0B7F  3000               	movlw	0
  4050  0B80  00CE               	movwf	___fladd@a
  4051  0B81                     l6152:	
  4052  0B81  17D0               	bsf	___fladd@a+2,7
  4053  0B82  01D1               	clrf	___fladd@a+3
  4054  0B83  2B8C               	goto	l1282
  4055  0B84                     l6156:	
  4056  0B84  3000               	movlw	0
  4057  0B85  00D1               	movwf	___fladd@a+3
  4058  0B86  3000               	movlw	0
  4059  0B87  00D0               	movwf	___fladd@a+2
  4060  0B88  3000               	movlw	0
  4061  0B89  00CF               	movwf	___fladd@a+1
  4062  0B8A  3000               	movlw	0
  4063  0B8B  00CE               	movwf	___fladd@a
  4064  0B8C                     l1282:	
  4065  0B8C  085C               	movf	___fladd@bexp,w
  4066  0B8D  025B               	subwf	___fladd@aexp,w
  4067  0B8E  1803               	skipnc
  4068  0B8F  2BD2               	goto	l6192
  4069  0B90  1F5A               	btfss	___fladd@signs,6
  4070  0B91  2B96               	goto	l6162
  4071  0B92  3080               	movlw	128
  4072  0B93  00D2               	movwf	??___fladd
  4073  0B94  0852               	movf	??___fladd,w
  4074  0B95  06DA               	xorwf	___fladd@signs,f
  4075  0B96                     l6162:	
  4076  0B96  085C               	movf	___fladd@bexp,w
  4077  0B97  00D2               	movwf	??___fladd
  4078  0B98  0852               	movf	??___fladd,w
  4079  0B99  00DD               	movwf	___fladd@grs
  4080  0B9A  085B               	movf	___fladd@aexp,w
  4081  0B9B  00D2               	movwf	??___fladd
  4082  0B9C  0852               	movf	??___fladd,w
  4083  0B9D  00DC               	movwf	___fladd@bexp
  4084  0B9E  085D               	movf	___fladd@grs,w
  4085  0B9F  00D2               	movwf	??___fladd
  4086  0BA0  0852               	movf	??___fladd,w
  4087  0BA1  00DB               	movwf	___fladd@aexp
  4088  0BA2  084A               	movf	___fladd@b,w
  4089  0BA3  00D2               	movwf	??___fladd
  4090  0BA4  0852               	movf	??___fladd,w
  4091  0BA5  00DD               	movwf	___fladd@grs
  4092  0BA6  084E               	movf	___fladd@a,w
  4093  0BA7  00D2               	movwf	??___fladd
  4094  0BA8  0852               	movf	??___fladd,w
  4095  0BA9  00CA               	movwf	___fladd@b
  4096  0BAA  085D               	movf	___fladd@grs,w
  4097  0BAB  00D2               	movwf	??___fladd
  4098  0BAC  0852               	movf	??___fladd,w
  4099  0BAD  00CE               	movwf	___fladd@a
  4100  0BAE  084B               	movf	___fladd@b+1,w
  4101  0BAF  00D2               	movwf	??___fladd
  4102  0BB0  0852               	movf	??___fladd,w
  4103  0BB1  00DD               	movwf	___fladd@grs
  4104  0BB2  084F               	movf	___fladd@a+1,w
  4105  0BB3  00D2               	movwf	??___fladd
  4106  0BB4  0852               	movf	??___fladd,w
  4107  0BB5  00CB               	movwf	___fladd@b+1
  4108  0BB6  085D               	movf	___fladd@grs,w
  4109  0BB7  00D2               	movwf	??___fladd
  4110  0BB8  0852               	movf	??___fladd,w
  4111  0BB9  00CF               	movwf	___fladd@a+1
  4112  0BBA  084C               	movf	___fladd@b+2,w
  4113  0BBB  00D2               	movwf	??___fladd
  4114  0BBC  0852               	movf	??___fladd,w
  4115  0BBD  00DD               	movwf	___fladd@grs
  4116  0BBE  0850               	movf	___fladd@a+2,w
  4117  0BBF  00D2               	movwf	??___fladd
  4118  0BC0  0852               	movf	??___fladd,w
  4119  0BC1  00CC               	movwf	___fladd@b+2
  4120  0BC2  085D               	movf	___fladd@grs,w
  4121  0BC3  00D2               	movwf	??___fladd
  4122  0BC4  0852               	movf	??___fladd,w
  4123  0BC5  00D0               	movwf	___fladd@a+2
  4124  0BC6  084D               	movf	___fladd@b+3,w
  4125  0BC7  00D2               	movwf	??___fladd
  4126  0BC8  0852               	movf	??___fladd,w
  4127  0BC9  00DD               	movwf	___fladd@grs
  4128  0BCA  0851               	movf	___fladd@a+3,w
  4129  0BCB  00D2               	movwf	??___fladd
  4130  0BCC  0852               	movf	??___fladd,w
  4131  0BCD  00CD               	movwf	___fladd@b+3
  4132  0BCE  085D               	movf	___fladd@grs,w
  4133  0BCF  00D2               	movwf	??___fladd
  4134  0BD0  0852               	movf	??___fladd,w
  4135  0BD1  00D1               	movwf	___fladd@a+3
  4136  0BD2                     l6192:	
  4137  0BD2  01DD               	clrf	___fladd@grs
  4138  0BD3  085B               	movf	___fladd@aexp,w
  4139  0BD4  00D2               	movwf	??___fladd
  4140  0BD5  01D3               	clrf	??___fladd+1
  4141  0BD6  0853               	movf	??___fladd+1,w
  4142  0BD7  00D5               	movwf	??___fladd+3
  4143  0BD8  085C               	movf	___fladd@bexp,w
  4144  0BD9  0252               	subwf	??___fladd,w
  4145  0BDA  00D4               	movwf	??___fladd+2
  4146  0BDB  1C03               	skipc
  4147  0BDC  03D5               	decf	??___fladd+3,f
  4148  0BDD  0855               	movf	??___fladd+3,w
  4149  0BDE  3A80               	xorlw	128
  4150  0BDF  00FF               	movwf	127
  4151  0BE0  3080               	movlw	128
  4152  0BE1  027F               	subwf	127,w
  4153  0BE2  1D03               	skipz
  4154  0BE3  2BE6               	goto	u6005
  4155  0BE4  301A               	movlw	26
  4156  0BE5  0254               	subwf	??___fladd+2,w
  4157  0BE6                     u6005:	
  4158  0BE6  1C03               	skipc
  4159  0BE7  2C1F               	goto	l6210
  4160  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  4161  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  4162  0BEA  084D               	movf	___fladd@b+3,w
  4163  0BEB  044C               	iorwf	___fladd@b+2,w
  4164  0BEC  044B               	iorwf	___fladd@b+1,w
  4165  0BED  044A               	iorwf	___fladd@b,w
  4166  0BEE  1903               	btfsc	3,2
  4167  0BEF  2BF2               	goto	u6010
  4168  0BF0  3001               	movlw	1
  4169  0BF1  2BF3               	goto	u6020
  4170  0BF2                     u6010:	
  4171  0BF2  3000               	movlw	0
  4172  0BF3                     u6020:	
  4173  0BF3  00D2               	movwf	??___fladd
  4174  0BF4  0852               	movf	??___fladd,w
  4175  0BF5  00DD               	movwf	___fladd@grs
  4176  0BF6  3000               	movlw	0
  4177  0BF7  00CD               	movwf	___fladd@b+3
  4178  0BF8  3000               	movlw	0
  4179  0BF9  00CC               	movwf	___fladd@b+2
  4180  0BFA  3000               	movlw	0
  4181  0BFB  00CB               	movwf	___fladd@b+1
  4182  0BFC  3000               	movlw	0
  4183  0BFD  00CA               	movwf	___fladd@b
  4184  0BFE  085B               	movf	___fladd@aexp,w
  4185  0BFF  00D2               	movwf	??___fladd
  4186  0C00  0852               	movf	??___fladd,w
  4187  0C01  00DC               	movwf	___fladd@bexp
  4188  0C02  2C25               	goto	l1286
  4189  0C03                     l1288:	
  4190  0C03  1C5D               	btfss	___fladd@grs,0
  4191  0C04  2C0E               	goto	l6200
  4192  0C05  085D               	movf	___fladd@grs,w
  4193  0C06  00D2               	movwf	??___fladd
  4194  0C07  1003               	clrc
  4195  0C08  0C52               	rrf	??___fladd,w
  4196  0C09  3801               	iorlw	1
  4197  0C0A  00D3               	movwf	??___fladd+1
  4198  0C0B  0853               	movf	??___fladd+1,w
  4199  0C0C  00DD               	movwf	___fladd@grs
  4200  0C0D  2C10               	goto	l6202
  4201  0C0E                     l6200:	
  4202  0C0E  1003               	clrc
  4203  0C0F  0CDD               	rrf	___fladd@grs,f
  4204  0C10                     l6202:	
  4205  0C10  184A               	btfsc	___fladd@b,0
  4206  0C11  17DD               	bsf	___fladd@grs,7
  4207  0C12  3001               	movlw	1
  4208  0C13  00D2               	movwf	??___fladd
  4209  0C14                     u6055:	
  4210  0C14  0D4D               	rlf	___fladd@b+3,w
  4211  0C15  0CCD               	rrf	___fladd@b+3,f
  4212  0C16  0CCC               	rrf	___fladd@b+2,f
  4213  0C17  0CCB               	rrf	___fladd@b+1,f
  4214  0C18  0CCA               	rrf	___fladd@b,f
  4215  0C19  0BD2               	decfsz	??___fladd& (0+127),f
  4216  0C1A  2C14               	goto	u6055
  4217  0C1B  3001               	movlw	1
  4218  0C1C  00D2               	movwf	??___fladd
  4219  0C1D  0852               	movf	??___fladd,w
  4220  0C1E  07DC               	addwf	___fladd@bexp,f
  4221  0C1F                     l6210:	
  4222  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  4223  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  4224  0C21  085B               	movf	___fladd@aexp,w
  4225  0C22  025C               	subwf	___fladd@bexp,w
  4226  0C23  1C03               	skipc
  4227  0C24  2C03               	goto	l1288
  4228  0C25                     l1286:	
  4229  0C25  1B5A               	btfsc	___fladd@signs,6
  4230  0C26  2C66               	goto	l6236
  4231  0C27  085C               	movf	___fladd@bexp,w
  4232  0C28  1D03               	btfss	3,2
  4233  0C29  2C33               	goto	l6218
  4234  0C2A  3000               	movlw	0
  4235  0C2B  00CD               	movwf	?___fladd+3
  4236  0C2C  3000               	movlw	0
  4237  0C2D  00CC               	movwf	?___fladd+2
  4238  0C2E  3000               	movlw	0
  4239  0C2F  00CB               	movwf	?___fladd+1
  4240  0C30  3000               	movlw	0
  4241  0C31  00CA               	movwf	?___fladd
  4242  0C32  0008               	return
  4243  0C33                     l6218:	
  4244  0C33  084E               	movf	___fladd@a,w
  4245  0C34  07CA               	addwf	___fladd@b,f
  4246  0C35  084F               	movf	___fladd@a+1,w
  4247  0C36  1103               	clrz
  4248  0C37  1803               	skipnc
  4249  0C38  3E01               	addlw	1
  4250  0C39  1D03               	btfss	3,2
  4251  0C3A  07CB               	addwf	___fladd@b+1,f
  4252  0C3B  0850               	movf	___fladd@a+2,w
  4253  0C3C  1103               	clrz
  4254  0C3D  1803               	skipnc
  4255  0C3E  3E01               	addlw	1
  4256  0C3F  1D03               	btfss	3,2
  4257  0C40  07CC               	addwf	___fladd@b+2,f
  4258  0C41  0851               	movf	___fladd@a+3,w
  4259  0C42  1103               	clrz
  4260  0C43  1803               	skipnc
  4261  0C44  3E01               	addlw	1
  4262  0C45  1D03               	btfss	3,2
  4263  0C46  07CD               	addwf	___fladd@b+3,f
  4264  0C47  1C4D               	btfss	___fladd@b+3,0
  4265  0C48  2D08               	goto	l6270
  4266  0C49  1C5D               	btfss	___fladd@grs,0
  4267  0C4A  2C54               	goto	l6226
  4268  0C4B  085D               	movf	___fladd@grs,w
  4269  0C4C  00D2               	movwf	??___fladd
  4270  0C4D  1003               	clrc
  4271  0C4E  0C52               	rrf	??___fladd,w
  4272  0C4F  3801               	iorlw	1
  4273  0C50  00D3               	movwf	??___fladd+1
  4274  0C51  0853               	movf	??___fladd+1,w
  4275  0C52  00DD               	movwf	___fladd@grs
  4276  0C53  2C56               	goto	l6228
  4277  0C54                     l6226:	
  4278  0C54  1003               	clrc
  4279  0C55  0CDD               	rrf	___fladd@grs,f
  4280  0C56                     l6228:	
  4281  0C56  184A               	btfsc	___fladd@b,0
  4282  0C57  17DD               	bsf	___fladd@grs,7
  4283  0C58  3001               	movlw	1
  4284  0C59  00D2               	movwf	??___fladd
  4285  0C5A                     u6135:	
  4286  0C5A  0D4D               	rlf	___fladd@b+3,w
  4287  0C5B  0CCD               	rrf	___fladd@b+3,f
  4288  0C5C  0CCC               	rrf	___fladd@b+2,f
  4289  0C5D  0CCB               	rrf	___fladd@b+1,f
  4290  0C5E  0CCA               	rrf	___fladd@b,f
  4291  0C5F  0BD2               	decfsz	??___fladd& (0+127),f
  4292  0C60  2C5A               	goto	u6135
  4293  0C61  3001               	movlw	1
  4294  0C62  00D2               	movwf	??___fladd
  4295  0C63  0852               	movf	??___fladd,w
  4296  0C64  07DC               	addwf	___fladd@bexp,f
  4297  0C65  2D08               	goto	l6270
  4298  0C66                     l6236:	
  4299  0C66  084D               	movf	___fladd@b+3,w
  4300  0C67  3A80               	xorlw	128
  4301  0C68  00FF               	movwf	127
  4302  0C69  0851               	movf	___fladd@a+3,w
  4303  0C6A  3A80               	xorlw	128
  4304  0C6B  027F               	subwf	127,w
  4305  0C6C  1D03               	skipz
  4306  0C6D  2C78               	goto	u6143
  4307  0C6E  0850               	movf	___fladd@a+2,w
  4308  0C6F  024C               	subwf	___fladd@b+2,w
  4309  0C70  1D03               	skipz
  4310  0C71  2C78               	goto	u6143
  4311  0C72  084F               	movf	___fladd@a+1,w
  4312  0C73  024B               	subwf	___fladd@b+1,w
  4313  0C74  1D03               	skipz
  4314  0C75  2C78               	goto	u6143
  4315  0C76  084E               	movf	___fladd@a,w
  4316  0C77  024A               	subwf	___fladd@b,w
  4317  0C78                     u6143:	
  4318  0C78  1803               	skipnc
  4319  0C79  2CD0               	goto	l6246
  4320  0C7A  30FF               	movlw	255
  4321  0C7B  00D2               	movwf	??___fladd
  4322  0C7C  30FF               	movlw	255
  4323  0C7D  00D3               	movwf	??___fladd+1
  4324  0C7E  30FF               	movlw	255
  4325  0C7F  00D4               	movwf	??___fladd+2
  4326  0C80  30FF               	movlw	255
  4327  0C81  00D5               	movwf	??___fladd+3
  4328  0C82  084E               	movf	___fladd@a,w
  4329  0C83  00D6               	movwf	??___fladd+4
  4330  0C84  084F               	movf	___fladd@a+1,w
  4331  0C85  00D7               	movwf	??___fladd+5
  4332  0C86  0850               	movf	___fladd@a+2,w
  4333  0C87  00D8               	movwf	??___fladd+6
  4334  0C88  0851               	movf	___fladd@a+3,w
  4335  0C89  00D9               	movwf	??___fladd+7
  4336  0C8A  084A               	movf	___fladd@b,w
  4337  0C8B  02D6               	subwf	??___fladd+4,f
  4338  0C8C  084B               	movf	___fladd@b+1,w
  4339  0C8D  1C03               	skipc
  4340  0C8E  0F4B               	incfsz	___fladd@b+1,w
  4341  0C8F  2C91               	goto	u6151
  4342  0C90  2C92               	goto	u6152
  4343  0C91                     u6151:	
  4344  0C91  02D7               	subwf	??___fladd+5,f
  4345  0C92                     u6152:	
  4346  0C92  084C               	movf	___fladd@b+2,w
  4347  0C93  1C03               	skipc
  4348  0C94  0F4C               	incfsz	___fladd@b+2,w
  4349  0C95  2C97               	goto	u6153
  4350  0C96  2C98               	goto	u6154
  4351  0C97                     u6153:	
  4352  0C97  02D8               	subwf	??___fladd+6,f
  4353  0C98                     u6154:	
  4354  0C98  084D               	movf	___fladd@b+3,w
  4355  0C99  1C03               	skipc
  4356  0C9A  0F4D               	incfsz	___fladd@b+3,w
  4357  0C9B  2C9D               	goto	u6155
  4358  0C9C  2C9E               	goto	u6156
  4359  0C9D                     u6155:	
  4360  0C9D  02D9               	subwf	??___fladd+7,f
  4361  0C9E                     u6156:	
  4362  0C9E  0856               	movf	??___fladd+4,w
  4363  0C9F  07D2               	addwf	??___fladd,f
  4364  0CA0  0857               	movf	??___fladd+5,w
  4365  0CA1  1803               	skipnc
  4366  0CA2  0F57               	incfsz	??___fladd+5,w
  4367  0CA3  2CA5               	goto	u6160
  4368  0CA4  2CA6               	goto	u6161
  4369  0CA5                     u6160:	
  4370  0CA5  07D3               	addwf	??___fladd+1,f
  4371  0CA6                     u6161:	
  4372  0CA6  0858               	movf	??___fladd+6,w
  4373  0CA7  1803               	skipnc
  4374  0CA8  0F58               	incfsz	??___fladd+6,w
  4375  0CA9  2CAB               	goto	u6162
  4376  0CAA  2CAC               	goto	u6163
  4377  0CAB                     u6162:	
  4378  0CAB  07D4               	addwf	??___fladd+2,f
  4379  0CAC                     u6163:	
  4380  0CAC  0859               	movf	??___fladd+7,w
  4381  0CAD  1803               	skipnc
  4382  0CAE  0A59               	incf	??___fladd+7,w
  4383  0CAF  07D5               	addwf	??___fladd+3,f
  4384  0CB0  0855               	movf	??___fladd+3,w
  4385  0CB1  00CD               	movwf	___fladd@b+3
  4386  0CB2  0854               	movf	??___fladd+2,w
  4387  0CB3  00CC               	movwf	___fladd@b+2
  4388  0CB4  0853               	movf	??___fladd+1,w
  4389  0CB5  00CB               	movwf	___fladd@b+1
  4390  0CB6  0852               	movf	??___fladd,w
  4391  0CB7  00CA               	movwf	___fladd@b
  4392  0CB8  3080               	movlw	128
  4393  0CB9  00D2               	movwf	??___fladd
  4394  0CBA  0852               	movf	??___fladd,w
  4395  0CBB  06DA               	xorwf	___fladd@signs,f
  4396  0CBC  09DD               	comf	___fladd@grs,f
  4397  0CBD  0ADD               	incf	___fladd@grs,f
  4398  0CBE  085D               	movf	___fladd@grs,w
  4399  0CBF  1D03               	btfss	3,2
  4400  0CC0  2CDE               	goto	l1303
  4401  0CC1  3001               	movlw	1
  4402  0CC2  07CA               	addwf	___fladd@b,f
  4403  0CC3  3000               	movlw	0
  4404  0CC4  1803               	skipnc
  4405  0CC5  3001               	movlw	1
  4406  0CC6  07CB               	addwf	___fladd@b+1,f
  4407  0CC7  3000               	movlw	0
  4408  0CC8  1803               	skipnc
  4409  0CC9  3001               	movlw	1
  4410  0CCA  07CC               	addwf	___fladd@b+2,f
  4411  0CCB  3000               	movlw	0
  4412  0CCC  1803               	skipnc
  4413  0CCD  3001               	movlw	1
  4414  0CCE  07CD               	addwf	___fladd@b+3,f
  4415  0CCF  2CDE               	goto	l1303
  4416  0CD0                     l6246:	
  4417  0CD0  084E               	movf	___fladd@a,w
  4418  0CD1  02CA               	subwf	___fladd@b,f
  4419  0CD2  084F               	movf	___fladd@a+1,w
  4420  0CD3  1C03               	skipc
  4421  0CD4  0F4F               	incfsz	___fladd@a+1,w
  4422  0CD5  02CB               	subwf	___fladd@b+1,f
  4423  0CD6  0850               	movf	___fladd@a+2,w
  4424  0CD7  1C03               	skipc
  4425  0CD8  0F50               	incfsz	___fladd@a+2,w
  4426  0CD9  02CC               	subwf	___fladd@b+2,f
  4427  0CDA  0851               	movf	___fladd@a+3,w
  4428  0CDB  1C03               	skipc
  4429  0CDC  0F51               	incfsz	___fladd@a+3,w
  4430  0CDD  02CD               	subwf	___fladd@b+3,f
  4431  0CDE                     l1303:	
  4432  0CDE  084D               	movf	___fladd@b+3,w
  4433  0CDF  044C               	iorwf	___fladd@b+2,w
  4434  0CE0  044B               	iorwf	___fladd@b+1,w
  4435  0CE1  044A               	iorwf	___fladd@b,w
  4436  0CE2  1D03               	skipz
  4437  0CE3  2D06               	goto	l6268
  4438  0CE4  085D               	movf	___fladd@grs,w
  4439  0CE5  1D03               	btfss	3,2
  4440  0CE6  2D06               	goto	l6268
  4441  0CE7  3000               	movlw	0
  4442  0CE8  00CD               	movwf	?___fladd+3
  4443  0CE9  3000               	movlw	0
  4444  0CEA  00CC               	movwf	?___fladd+2
  4445  0CEB  3000               	movlw	0
  4446  0CEC  00CB               	movwf	?___fladd+1
  4447  0CED  3000               	movlw	0
  4448  0CEE  00CA               	movwf	?___fladd
  4449  0CEF  0008               	return
  4450  0CF0                     l6254:	
  4451  0CF0  3001               	movlw	1
  4452  0CF1  00D2               	movwf	??___fladd
  4453  0CF2                     u6205:	
  4454  0CF2  1003               	clrc
  4455  0CF3  0DCA               	rlf	___fladd@b,f
  4456  0CF4  0DCB               	rlf	___fladd@b+1,f
  4457  0CF5  0DCC               	rlf	___fladd@b+2,f
  4458  0CF6  0DCD               	rlf	___fladd@b+3,f
  4459  0CF7  0BD2               	decfsz	??___fladd,f
  4460  0CF8  2CF2               	goto	u6205
  4461  0CF9  1BDD               	btfsc	___fladd@grs,7
  4462  0CFA  144A               	bsf	___fladd@b,0
  4463  0CFB  1C5D               	btfss	___fladd@grs,0
  4464  0CFC  2CFF               	goto	l6262
  4465  0CFD  1403               	setc
  4466  0CFE  2D00               	goto	L3
  4467  0CFF                     l6262:	
  4468  0CFF  1003               	clrc
  4469  0D00                     L3:	
  4470  0D00  0DDD               	rlf	___fladd@grs,f
  4471  0D01  085C               	movf	___fladd@bexp,w
  4472  0D02  1903               	btfsc	3,2
  4473  0D03  2D06               	goto	l6268
  4474  0D04  3001               	movlw	1
  4475  0D05  02DC               	subwf	___fladd@bexp,f
  4476  0D06                     l6268:	
  4477  0D06  1FCC               	btfss	___fladd@b+2,7
  4478  0D07  2CF0               	goto	l6254
  4479  0D08                     l6270:	
  4480  0D08  01DB               	clrf	___fladd@aexp
  4481  0D09  1FDD               	btfss	___fladd@grs,7
  4482  0D0A  2D13               	goto	l6280
  4483  0D0B  085D               	movf	___fladd@grs,w
  4484  0D0C  397F               	andlw	127
  4485  0D0D  1903               	btfsc	3,2
  4486  0D0E  184A               	btfsc	___fladd@b,0
  4487  0D0F  2D11               	goto	l6276
  4488  0D10  2D13               	goto	l6280
  4489  0D11                     l6276:	
  4490  0D11  01DB               	clrf	___fladd@aexp
  4491  0D12  0ADB               	incf	___fladd@aexp,f
  4492  0D13                     l6280:	
  4493  0D13  085B               	movf	___fladd@aexp,w
  4494  0D14  1903               	btfsc	3,2
  4495  0D15  2D46               	goto	l1316
  4496  0D16  3001               	movlw	1
  4497  0D17  07CA               	addwf	___fladd@b,f
  4498  0D18  3000               	movlw	0
  4499  0D19  1803               	skipnc
  4500  0D1A  3001               	movlw	1
  4501  0D1B  07CB               	addwf	___fladd@b+1,f
  4502  0D1C  3000               	movlw	0
  4503  0D1D  1803               	skipnc
  4504  0D1E  3001               	movlw	1
  4505  0D1F  07CC               	addwf	___fladd@b+2,f
  4506  0D20  3000               	movlw	0
  4507  0D21  1803               	skipnc
  4508  0D22  3001               	movlw	1
  4509  0D23  07CD               	addwf	___fladd@b+3,f
  4510  0D24  1C4D               	btfss	___fladd@b+3,0
  4511  0D25  2D46               	goto	l1316
  4512  0D26  084A               	movf	___fladd@b,w
  4513  0D27  00D2               	movwf	??___fladd
  4514  0D28  084B               	movf	___fladd@b+1,w
  4515  0D29  00D3               	movwf	??___fladd+1
  4516  0D2A  084C               	movf	___fladd@b+2,w
  4517  0D2B  00D4               	movwf	??___fladd+2
  4518  0D2C  084D               	movf	___fladd@b+3,w
  4519  0D2D  00D5               	movwf	??___fladd+3
  4520  0D2E  3001               	movlw	1
  4521  0D2F  00D6               	movwf	??___fladd+4
  4522  0D30                     u6305:	
  4523  0D30  0D55               	rlf	??___fladd+3,w
  4524  0D31  0CD5               	rrf	??___fladd+3,f
  4525  0D32  0CD4               	rrf	??___fladd+2,f
  4526  0D33  0CD3               	rrf	??___fladd+1,f
  4527  0D34  0CD2               	rrf	??___fladd,f
  4528  0D35  0BD6               	decfsz	??___fladd+4,f
  4529  0D36  2D30               	goto	u6305
  4530  0D37  0855               	movf	??___fladd+3,w
  4531  0D38  00CD               	movwf	___fladd@b+3
  4532  0D39  0854               	movf	??___fladd+2,w
  4533  0D3A  00CC               	movwf	___fladd@b+2
  4534  0D3B  0853               	movf	??___fladd+1,w
  4535  0D3C  00CB               	movwf	___fladd@b+1
  4536  0D3D  0852               	movf	??___fladd,w
  4537  0D3E  00CA               	movwf	___fladd@b
  4538  0D3F  0A5C               	incf	___fladd@bexp,w
  4539  0D40  1903               	btfsc	3,2
  4540  0D41  2D46               	goto	l1316
  4541  0D42  3001               	movlw	1
  4542  0D43  00D2               	movwf	??___fladd
  4543  0D44  0852               	movf	??___fladd,w
  4544  0D45  07DC               	addwf	___fladd@bexp,f
  4545  0D46                     l1316:	
  4546  0D46  0A5C               	incf	___fladd@bexp,w
  4547  0D47  1D03               	btfss	3,2
  4548  0D48  085C               	movf	___fladd@bexp,w
  4549  0D49  1D03               	btfss	3,2
  4550  0D4A  2D56               	goto	l6298
  4551  0D4B  3000               	movlw	0
  4552  0D4C  00CD               	movwf	___fladd@b+3
  4553  0D4D  3000               	movlw	0
  4554  0D4E  00CC               	movwf	___fladd@b+2
  4555  0D4F  3000               	movlw	0
  4556  0D50  00CB               	movwf	___fladd@b+1
  4557  0D51  3000               	movlw	0
  4558  0D52  00CA               	movwf	___fladd@b
  4559  0D53  085C               	movf	___fladd@bexp,w
  4560  0D54  1903               	btfsc	3,2
  4561  0D55  01DA               	clrf	___fladd@signs
  4562  0D56                     l6298:	
  4563  0D56  1C5C               	btfss	___fladd@bexp,0
  4564  0D57  2D5A               	goto	l6302
  4565  0D58  17CC               	bsf	___fladd@b+2,7
  4566  0D59  2D5E               	goto	l1324
  4567  0D5A                     l6302:	
  4568  0D5A  307F               	movlw	127
  4569  0D5B  00D2               	movwf	??___fladd
  4570  0D5C  0852               	movf	??___fladd,w
  4571  0D5D  05CC               	andwf	___fladd@b+2,f
  4572  0D5E                     l1324:	
  4573  0D5E  085C               	movf	___fladd@bexp,w
  4574  0D5F  00D2               	movwf	??___fladd
  4575  0D60  1003               	clrc
  4576  0D61  0C52               	rrf	??___fladd,w
  4577  0D62  00D3               	movwf	??___fladd+1
  4578  0D63  0853               	movf	??___fladd+1,w
  4579  0D64  00CD               	movwf	___fladd@b+3
  4580  0D65  1FDA               	btfss	___fladd@signs,7
  4581  0D66  0008               	return
  4582  0D67  17CD               	bsf	___fladd@b+3,7
  4583  0D68  0008               	return
  4584  0D69                     __end_of___fladd:	
  4585                           
  4586                           	psect	text6
  4587  1137                     __ptext6:	
  4588 ;; *************** function ___flge *****************
  4589 ;; Defined at:
  4590 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  ff1             4    0[BANK0 ] unsigned char 
  4593 ;;  ff2             4    4[BANK0 ] unsigned char 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;		None
  4596 ;; Return value:  Size  Location     Type
  4597 ;;		None               void
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 300/0
  4602 ;;		On exit  : 300/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4605 ;;      Params:         0       8       0       0       0
  4606 ;;      Locals:         0       0       0       0       0
  4607 ;;      Temps:          0       4       0       0       0
  4608 ;;      Totals:         0      12       0       0       0
  4609 ;;Total ram usage:       12 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    1
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_MediaPlacaVaccum
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function ___flge
  4621  1137                     ___flge:	
  4622                           
  4623                           ;incstack = 0
  4624                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4625  1137  3000               	movlw	0
  4626  1138  0520               	andwf	___flge@ff1,w
  4627  1139  00A8               	movwf	??___flge
  4628  113A  3000               	movlw	0
  4629  113B  0521               	andwf	___flge@ff1+1,w
  4630  113C  00A9               	movwf	??___flge+1
  4631  113D  3080               	movlw	128
  4632  113E  0522               	andwf	___flge@ff1+2,w
  4633  113F  00AA               	movwf	??___flge+2
  4634  1140  307F               	movlw	127
  4635  1141  0523               	andwf	___flge@ff1+3,w
  4636  1142  00AB               	movwf	??___flge+3
  4637  1143  082B               	movf	??___flge+3,w
  4638  1144  042A               	iorwf	??___flge+2,w
  4639  1145  0429               	iorwf	??___flge+1,w
  4640  1146  0428               	iorwf	??___flge,w
  4641  1147  1D03               	skipz
  4642  1148  2951               	goto	l1163
  4643  1149  3000               	movlw	0
  4644  114A  00A3               	movwf	___flge@ff1+3
  4645  114B  3000               	movlw	0
  4646  114C  00A2               	movwf	___flge@ff1+2
  4647  114D  3000               	movlw	0
  4648  114E  00A1               	movwf	___flge@ff1+1
  4649  114F  3000               	movlw	0
  4650  1150  00A0               	movwf	___flge@ff1
  4651  1151                     l1163:	
  4652  1151  3000               	movlw	0
  4653  1152  0524               	andwf	___flge@ff2,w
  4654  1153  00A8               	movwf	??___flge
  4655  1154  3000               	movlw	0
  4656  1155  0525               	andwf	___flge@ff2+1,w
  4657  1156  00A9               	movwf	??___flge+1
  4658  1157  3080               	movlw	128
  4659  1158  0526               	andwf	___flge@ff2+2,w
  4660  1159  00AA               	movwf	??___flge+2
  4661  115A  307F               	movlw	127
  4662  115B  0527               	andwf	___flge@ff2+3,w
  4663  115C  00AB               	movwf	??___flge+3
  4664  115D  082B               	movf	??___flge+3,w
  4665  115E  042A               	iorwf	??___flge+2,w
  4666  115F  0429               	iorwf	??___flge+1,w
  4667  1160  0428               	iorwf	??___flge,w
  4668  1161  1D03               	skipz
  4669  1162  296B               	goto	l6964
  4670  1163  3000               	movlw	0
  4671  1164  00A7               	movwf	___flge@ff2+3
  4672  1165  3000               	movlw	0
  4673  1166  00A6               	movwf	___flge@ff2+2
  4674  1167  3000               	movlw	0
  4675  1168  00A5               	movwf	___flge@ff2+1
  4676  1169  3000               	movlw	0
  4677  116A  00A4               	movwf	___flge@ff2
  4678  116B                     l6964:	
  4679  116B  1FA3               	btfss	___flge@ff1+3,7
  4680  116C  2991               	goto	l6968
  4681  116D  3000               	movlw	0
  4682  116E  00A8               	movwf	??___flge
  4683  116F  3000               	movlw	0
  4684  1170  00A9               	movwf	??___flge+1
  4685  1171  3000               	movlw	0
  4686  1172  00AA               	movwf	??___flge+2
  4687  1173  3080               	movlw	128
  4688  1174  00AB               	movwf	??___flge+3
  4689  1175  0820               	movf	___flge@ff1,w
  4690  1176  02A8               	subwf	??___flge,f
  4691  1177  0821               	movf	___flge@ff1+1,w
  4692  1178  1C03               	skipc
  4693  1179  0F21               	incfsz	___flge@ff1+1,w
  4694  117A  297C               	goto	u7301
  4695  117B  297D               	goto	u7302
  4696  117C                     u7301:	
  4697  117C  02A9               	subwf	??___flge+1,f
  4698  117D                     u7302:	
  4699  117D  0822               	movf	___flge@ff1+2,w
  4700  117E  1C03               	skipc
  4701  117F  0F22               	incfsz	___flge@ff1+2,w
  4702  1180  2982               	goto	u7303
  4703  1181  2983               	goto	u7304
  4704  1182                     u7303:	
  4705  1182  02AA               	subwf	??___flge+2,f
  4706  1183                     u7304:	
  4707  1183  0823               	movf	___flge@ff1+3,w
  4708  1184  1C03               	skipc
  4709  1185  0F23               	incfsz	___flge@ff1+3,w
  4710  1186  2988               	goto	u7305
  4711  1187  2989               	goto	u7306
  4712  1188                     u7305:	
  4713  1188  02AB               	subwf	??___flge+3,f
  4714  1189                     u7306:	
  4715  1189  082B               	movf	??___flge+3,w
  4716  118A  00A3               	movwf	___flge@ff1+3
  4717  118B  082A               	movf	??___flge+2,w
  4718  118C  00A2               	movwf	___flge@ff1+2
  4719  118D  0829               	movf	??___flge+1,w
  4720  118E  00A1               	movwf	___flge@ff1+1
  4721  118F  0828               	movf	??___flge,w
  4722  1190  00A0               	movwf	___flge@ff1
  4723  1191                     l6968:	
  4724  1191  1FA7               	btfss	___flge@ff2+3,7
  4725  1192  29B7               	goto	l1166
  4726  1193  3000               	movlw	0
  4727  1194  00A8               	movwf	??___flge
  4728  1195  3000               	movlw	0
  4729  1196  00A9               	movwf	??___flge+1
  4730  1197  3000               	movlw	0
  4731  1198  00AA               	movwf	??___flge+2
  4732  1199  3080               	movlw	128
  4733  119A  00AB               	movwf	??___flge+3
  4734  119B  0824               	movf	___flge@ff2,w
  4735  119C  02A8               	subwf	??___flge,f
  4736  119D  0825               	movf	___flge@ff2+1,w
  4737  119E  1C03               	skipc
  4738  119F  0F25               	incfsz	___flge@ff2+1,w
  4739  11A0  29A2               	goto	u7321
  4740  11A1  29A3               	goto	u7322
  4741  11A2                     u7321:	
  4742  11A2  02A9               	subwf	??___flge+1,f
  4743  11A3                     u7322:	
  4744  11A3  0826               	movf	___flge@ff2+2,w
  4745  11A4  1C03               	skipc
  4746  11A5  0F26               	incfsz	___flge@ff2+2,w
  4747  11A6  29A8               	goto	u7323
  4748  11A7  29A9               	goto	u7324
  4749  11A8                     u7323:	
  4750  11A8  02AA               	subwf	??___flge+2,f
  4751  11A9                     u7324:	
  4752  11A9  0827               	movf	___flge@ff2+3,w
  4753  11AA  1C03               	skipc
  4754  11AB  0F27               	incfsz	___flge@ff2+3,w
  4755  11AC  29AE               	goto	u7325
  4756  11AD  29AF               	goto	u7326
  4757  11AE                     u7325:	
  4758  11AE  02AB               	subwf	??___flge+3,f
  4759  11AF                     u7326:	
  4760  11AF  082B               	movf	??___flge+3,w
  4761  11B0  00A7               	movwf	___flge@ff2+3
  4762  11B1  082A               	movf	??___flge+2,w
  4763  11B2  00A6               	movwf	___flge@ff2+2
  4764  11B3  0829               	movf	??___flge+1,w
  4765  11B4  00A5               	movwf	___flge@ff2+1
  4766  11B5  0828               	movf	??___flge,w
  4767  11B6  00A4               	movwf	___flge@ff2
  4768  11B7                     l1166:	
  4769  11B7  3080               	movlw	128
  4770  11B8  06A3               	xorwf	___flge@ff1+3,f
  4771  11B9  3080               	movlw	128
  4772  11BA  06A7               	xorwf	___flge@ff2+3,f
  4773  11BB  0827               	movf	___flge@ff2+3,w
  4774  11BC  0223               	subwf	___flge@ff1+3,w
  4775  11BD  1D03               	skipz
  4776  11BE  0008               	return
  4777  11BF  0826               	movf	___flge@ff2+2,w
  4778  11C0  0222               	subwf	___flge@ff1+2,w
  4779  11C1  1D03               	skipz
  4780  11C2  0008               	return
  4781  11C3  0825               	movf	___flge@ff2+1,w
  4782  11C4  0221               	subwf	___flge@ff1+1,w
  4783  11C5  1D03               	skipz
  4784  11C6  0008               	return
  4785  11C7  0824               	movf	___flge@ff2,w
  4786  11C8  0220               	subwf	___flge@ff1,w
  4787  11C9  0008               	return
  4788  11CA                     __end_of___flge:	
  4789                           
  4790                           	psect	text7
  4791  099B                     __ptext7:	
  4792 ;; *************** function ___fldiv *****************
  4793 ;; Defined at:
  4794 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  a               4   33[BANK0 ] unsigned char 
  4797 ;;  b               4   37[BANK0 ] unsigned char 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  grs             4   53[BANK0 ] unsigned long 
  4800 ;;  rem             4   46[BANK0 ] unsigned long 
  4801 ;;  new_exp         2   51[BANK0 ] int 
  4802 ;;  aexp            1   58[BANK0 ] unsigned char 
  4803 ;;  bexp            1   57[BANK0 ] unsigned char 
  4804 ;;  sign            1   50[BANK0 ] unsigned char 
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  4   33[BANK0 ] unsigned char 
  4807 ;; Registers used:
  4808 ;;		wreg, status,2, status,0, btemp+1
  4809 ;; Tracked objects:
  4810 ;;		On entry : 300/0
  4811 ;;		On exit  : 300/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4814 ;;      Params:         0       8       0       0       0
  4815 ;;      Locals:         0      13       0       0       0
  4816 ;;      Temps:          0       5       0       0       0
  4817 ;;      Totals:         0      26       0       0       0
  4818 ;;Total ram usage:       26 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    1
  4821 ;; This function calls:
  4822 ;;		Nothing
  4823 ;; This function is called by:
  4824 ;;		_MediaPlacaVaccum
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           
  4829                           ;psect for function ___fldiv
  4830  099B                     ___fldiv:	
  4831                           
  4832                           ;incstack = 0
  4833                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4834  099B  0848               	movf	___fldiv@b+3,w
  4835  099C  3980               	andlw	128
  4836  099D  00C9               	movwf	??___fldiv
  4837  099E  0849               	movf	??___fldiv,w
  4838  099F  00D2               	movwf	___fldiv@sign
  4839  09A0  0848               	movf	___fldiv@b+3,w
  4840  09A1  00C9               	movwf	??___fldiv
  4841  09A2  0749               	addwf	??___fldiv,w
  4842  09A3  00CA               	movwf	??___fldiv+1
  4843  09A4  084A               	movf	??___fldiv+1,w
  4844  09A5  00D9               	movwf	___fldiv@bexp
  4845  09A6  1BC7               	btfsc	___fldiv@b+2,7
  4846  09A7  1459               	bsf	___fldiv@bexp,0
  4847  09A8  0859               	movf	___fldiv@bexp,w
  4848  09A9  1903               	btfsc	3,2
  4849  09AA  29B9               	goto	l7002
  4850  09AB  0A59               	incf	___fldiv@bexp,w
  4851  09AC  1D03               	btfss	3,2
  4852  09AD  29B6               	goto	l6998
  4853  09AE  3000               	movlw	0
  4854  09AF  00C8               	movwf	___fldiv@b+3
  4855  09B0  3000               	movlw	0
  4856  09B1  00C7               	movwf	___fldiv@b+2
  4857  09B2  3000               	movlw	0
  4858  09B3  00C6               	movwf	___fldiv@b+1
  4859  09B4  3000               	movlw	0
  4860  09B5  00C5               	movwf	___fldiv@b
  4861  09B6                     l6998:	
  4862  09B6  17C7               	bsf	___fldiv@b+2,7
  4863  09B7  01C8               	clrf	___fldiv@b+3
  4864  09B8  29C1               	goto	l7004
  4865  09B9                     l7002:	
  4866  09B9  3000               	movlw	0
  4867  09BA  00C8               	movwf	___fldiv@b+3
  4868  09BB  3000               	movlw	0
  4869  09BC  00C7               	movwf	___fldiv@b+2
  4870  09BD  3000               	movlw	0
  4871  09BE  00C6               	movwf	___fldiv@b+1
  4872  09BF  3000               	movlw	0
  4873  09C0  00C5               	movwf	___fldiv@b
  4874  09C1                     l7004:	
  4875  09C1  0844               	movf	___fldiv@a+3,w
  4876  09C2  3980               	andlw	128
  4877  09C3  00C9               	movwf	??___fldiv
  4878  09C4  0849               	movf	??___fldiv,w
  4879  09C5  06D2               	xorwf	___fldiv@sign,f
  4880  09C6  0844               	movf	___fldiv@a+3,w
  4881  09C7  00C9               	movwf	??___fldiv
  4882  09C8  0749               	addwf	??___fldiv,w
  4883  09C9  00CA               	movwf	??___fldiv+1
  4884  09CA  084A               	movf	??___fldiv+1,w
  4885  09CB  00DA               	movwf	___fldiv@aexp
  4886  09CC  1BC3               	btfsc	___fldiv@a+2,7
  4887  09CD  145A               	bsf	___fldiv@aexp,0
  4888  09CE  085A               	movf	___fldiv@aexp,w
  4889  09CF  1903               	btfsc	3,2
  4890  09D0  29DF               	goto	l7022
  4891  09D1  0A5A               	incf	___fldiv@aexp,w
  4892  09D2  1D03               	btfss	3,2
  4893  09D3  29DC               	goto	l7018
  4894  09D4  3000               	movlw	0
  4895  09D5  00C4               	movwf	___fldiv@a+3
  4896  09D6  3000               	movlw	0
  4897  09D7  00C3               	movwf	___fldiv@a+2
  4898  09D8  3000               	movlw	0
  4899  09D9  00C2               	movwf	___fldiv@a+1
  4900  09DA  3000               	movlw	0
  4901  09DB  00C1               	movwf	___fldiv@a
  4902  09DC                     l7018:	
  4903  09DC  17C3               	bsf	___fldiv@a+2,7
  4904  09DD  01C4               	clrf	___fldiv@a+3
  4905  09DE  29E7               	goto	l1338
  4906  09DF                     l7022:	
  4907  09DF  3000               	movlw	0
  4908  09E0  00C4               	movwf	___fldiv@a+3
  4909  09E1  3000               	movlw	0
  4910  09E2  00C3               	movwf	___fldiv@a+2
  4911  09E3  3000               	movlw	0
  4912  09E4  00C2               	movwf	___fldiv@a+1
  4913  09E5  3000               	movlw	0
  4914  09E6  00C1               	movwf	___fldiv@a
  4915  09E7                     l1338:	
  4916  09E7  0844               	movf	___fldiv@a+3,w
  4917  09E8  0443               	iorwf	___fldiv@a+2,w
  4918  09E9  0442               	iorwf	___fldiv@a+1,w
  4919  09EA  0441               	iorwf	___fldiv@a,w
  4920  09EB  1D03               	skipz
  4921  09EC  2A06               	goto	l7032
  4922  09ED  3000               	movlw	0
  4923  09EE  00C8               	movwf	___fldiv@b+3
  4924  09EF  3000               	movlw	0
  4925  09F0  00C7               	movwf	___fldiv@b+2
  4926  09F1  3000               	movlw	0
  4927  09F2  00C6               	movwf	___fldiv@b+1
  4928  09F3  3000               	movlw	0
  4929  09F4  00C5               	movwf	___fldiv@b
  4930  09F5  3080               	movlw	128
  4931  09F6  04C7               	iorwf	___fldiv@b+2,f
  4932  09F7  307F               	movlw	127
  4933  09F8  04C8               	iorwf	___fldiv@b+3,f
  4934  09F9                     L5:	
  4935  09F9  0852               	movf	___fldiv@sign,w
  4936  09FA  00C9               	movwf	??___fldiv
  4937  09FB  0849               	movf	??___fldiv,w
  4938  09FC  04C8               	iorwf	___fldiv@b+3,f
  4939  09FD  0848               	movf	___fldiv@b+3,w
  4940  09FE  00C4               	movwf	?___fldiv+3
  4941  09FF  0847               	movf	___fldiv@b+2,w
  4942  0A00  00C3               	movwf	?___fldiv+2
  4943  0A01  0846               	movf	___fldiv@b+1,w
  4944  0A02  00C2               	movwf	?___fldiv+1
  4945  0A03  0845               	movf	___fldiv@b,w
  4946  0A04  00C1               	movwf	?___fldiv
  4947  0A05  0008               	return
  4948  0A06                     l7032:	
  4949  0A06  0859               	movf	___fldiv@bexp,w
  4950  0A07  1D03               	btfss	3,2
  4951  0A08  2A12               	goto	l7038
  4952  0A09  3000               	movlw	0
  4953  0A0A  00C4               	movwf	?___fldiv+3
  4954  0A0B  3000               	movlw	0
  4955  0A0C  00C3               	movwf	?___fldiv+2
  4956  0A0D  3000               	movlw	0
  4957  0A0E  00C2               	movwf	?___fldiv+1
  4958  0A0F  3000               	movlw	0
  4959  0A10  00C1               	movwf	?___fldiv
  4960  0A11  0008               	return
  4961  0A12                     l7038:	
  4962  0A12  0859               	movf	___fldiv@bexp,w
  4963  0A13  00C9               	movwf	??___fldiv
  4964  0A14  01CA               	clrf	??___fldiv+1
  4965  0A15  084A               	movf	??___fldiv+1,w
  4966  0A16  00CC               	movwf	??___fldiv+3
  4967  0A17  085A               	movf	___fldiv@aexp,w
  4968  0A18  0249               	subwf	??___fldiv,w
  4969  0A19  00CB               	movwf	??___fldiv+2
  4970  0A1A  1C03               	skipc
  4971  0A1B  03CC               	decf	??___fldiv+3,f
  4972  0A1C  084B               	movf	??___fldiv+2,w
  4973  0A1D  3E7F               	addlw	127
  4974  0A1E  00D3               	movwf	___fldiv@new_exp
  4975  0A1F  084C               	movf	??___fldiv+3,w
  4976  0A20  1803               	skipnc
  4977  0A21  3E01               	addlw	1
  4978  0A22  3E00               	addlw	0
  4979  0A23  00D4               	movwf	___fldiv@new_exp+1
  4980  0A24  0848               	movf	___fldiv@b+3,w
  4981  0A25  00D1               	movwf	___fldiv@rem+3
  4982  0A26  0847               	movf	___fldiv@b+2,w
  4983  0A27  00D0               	movwf	___fldiv@rem+2
  4984  0A28  0846               	movf	___fldiv@b+1,w
  4985  0A29  00CF               	movwf	___fldiv@rem+1
  4986  0A2A  0845               	movf	___fldiv@b,w
  4987  0A2B  00CE               	movwf	___fldiv@rem
  4988  0A2C  3000               	movlw	0
  4989  0A2D  00C8               	movwf	___fldiv@b+3
  4990  0A2E  3000               	movlw	0
  4991  0A2F  00C7               	movwf	___fldiv@b+2
  4992  0A30  3000               	movlw	0
  4993  0A31  00C6               	movwf	___fldiv@b+1
  4994  0A32  3000               	movlw	0
  4995  0A33  00C5               	movwf	___fldiv@b
  4996  0A34  3000               	movlw	0
  4997  0A35  00D8               	movwf	___fldiv@grs+3
  4998  0A36  3000               	movlw	0
  4999  0A37  00D7               	movwf	___fldiv@grs+2
  5000  0A38  3000               	movlw	0
  5001  0A39  00D6               	movwf	___fldiv@grs+1
  5002  0A3A  3000               	movlw	0
  5003  0A3B  00D5               	movwf	___fldiv@grs
  5004  0A3C  01DA               	clrf	___fldiv@aexp
  5005  0A3D                     l7066:	
  5006  0A3D  301A               	movlw	26
  5007  0A3E  025A               	subwf	___fldiv@aexp,w
  5008  0A3F  1803               	btfsc	3,0
  5009  0A40  2A85               	goto	l7068
  5010  0A41  085A               	movf	___fldiv@aexp,w
  5011  0A42  1903               	btfsc	3,2
  5012  0A43  2A61               	goto	l7058
  5013  0A44  3001               	movlw	1
  5014  0A45  00C9               	movwf	??___fldiv
  5015  0A46                     u7435:	
  5016  0A46  1003               	clrc
  5017  0A47  0DCE               	rlf	___fldiv@rem,f
  5018  0A48  0DCF               	rlf	___fldiv@rem+1,f
  5019  0A49  0DD0               	rlf	___fldiv@rem+2,f
  5020  0A4A  0DD1               	rlf	___fldiv@rem+3,f
  5021  0A4B  0BC9               	decfsz	??___fldiv,f
  5022  0A4C  2A46               	goto	u7435
  5023  0A4D  3001               	movlw	1
  5024  0A4E  00C9               	movwf	??___fldiv
  5025  0A4F                     u7445:	
  5026  0A4F  1003               	clrc
  5027  0A50  0DC5               	rlf	___fldiv@b,f
  5028  0A51  0DC6               	rlf	___fldiv@b+1,f
  5029  0A52  0DC7               	rlf	___fldiv@b+2,f
  5030  0A53  0DC8               	rlf	___fldiv@b+3,f
  5031  0A54  0BC9               	decfsz	??___fldiv,f
  5032  0A55  2A4F               	goto	u7445
  5033  0A56  1BD8               	btfsc	___fldiv@grs+3,7
  5034  0A57  1445               	bsf	___fldiv@b,0
  5035  0A58  3001               	movlw	1
  5036  0A59  00C9               	movwf	??___fldiv
  5037  0A5A                     u7465:	
  5038  0A5A  1003               	clrc
  5039  0A5B  0DD5               	rlf	___fldiv@grs,f
  5040  0A5C  0DD6               	rlf	___fldiv@grs+1,f
  5041  0A5D  0DD7               	rlf	___fldiv@grs+2,f
  5042  0A5E  0DD8               	rlf	___fldiv@grs+3,f
  5043  0A5F  0BC9               	decfsz	??___fldiv,f
  5044  0A60  2A5A               	goto	u7465
  5045  0A61                     l7058:	
  5046  0A61  0844               	movf	___fldiv@a+3,w
  5047  0A62  0251               	subwf	___fldiv@rem+3,w
  5048  0A63  1D03               	skipz
  5049  0A64  2A6F               	goto	u7475
  5050  0A65  0843               	movf	___fldiv@a+2,w
  5051  0A66  0250               	subwf	___fldiv@rem+2,w
  5052  0A67  1D03               	skipz
  5053  0A68  2A6F               	goto	u7475
  5054  0A69  0842               	movf	___fldiv@a+1,w
  5055  0A6A  024F               	subwf	___fldiv@rem+1,w
  5056  0A6B  1D03               	skipz
  5057  0A6C  2A6F               	goto	u7475
  5058  0A6D  0841               	movf	___fldiv@a,w
  5059  0A6E  024E               	subwf	___fldiv@rem,w
  5060  0A6F                     u7475:	
  5061  0A6F  1C03               	skipc
  5062  0A70  2A80               	goto	l7064
  5063  0A71  1758               	bsf	___fldiv@grs+3,6
  5064  0A72  0841               	movf	___fldiv@a,w
  5065  0A73  02CE               	subwf	___fldiv@rem,f
  5066  0A74  0842               	movf	___fldiv@a+1,w
  5067  0A75  1C03               	skipc
  5068  0A76  0F42               	incfsz	___fldiv@a+1,w
  5069  0A77  02CF               	subwf	___fldiv@rem+1,f
  5070  0A78  0843               	movf	___fldiv@a+2,w
  5071  0A79  1C03               	skipc
  5072  0A7A  0F43               	incfsz	___fldiv@a+2,w
  5073  0A7B  02D0               	subwf	___fldiv@rem+2,f
  5074  0A7C  0844               	movf	___fldiv@a+3,w
  5075  0A7D  1C03               	skipc
  5076  0A7E  0F44               	incfsz	___fldiv@a+3,w
  5077  0A7F  02D1               	subwf	___fldiv@rem+3,f
  5078  0A80                     l7064:	
  5079  0A80  3001               	movlw	1
  5080  0A81  00C9               	movwf	??___fldiv
  5081  0A82  0849               	movf	??___fldiv,w
  5082  0A83  07DA               	addwf	___fldiv@aexp,f
  5083  0A84  2A3D               	goto	l7066
  5084  0A85                     l7068:	
  5085  0A85  0851               	movf	___fldiv@rem+3,w
  5086  0A86  0450               	iorwf	___fldiv@rem+2,w
  5087  0A87  044F               	iorwf	___fldiv@rem+1,w
  5088  0A88  044E               	iorwf	___fldiv@rem,w
  5089  0A89  1D03               	btfss	3,2
  5090  0A8A  1455               	bsf	___fldiv@grs,0
  5091  0A8B                     l7082:	
  5092  0A8B  1BC7               	btfsc	___fldiv@b+2,7
  5093  0A8C  2AA8               	goto	l7084
  5094  0A8D  3001               	movlw	1
  5095  0A8E  00C9               	movwf	??___fldiv
  5096  0A8F                     u7505:	
  5097  0A8F  1003               	clrc
  5098  0A90  0DC5               	rlf	___fldiv@b,f
  5099  0A91  0DC6               	rlf	___fldiv@b+1,f
  5100  0A92  0DC7               	rlf	___fldiv@b+2,f
  5101  0A93  0DC8               	rlf	___fldiv@b+3,f
  5102  0A94  0BC9               	decfsz	??___fldiv,f
  5103  0A95  2A8F               	goto	u7505
  5104  0A96  1BD8               	btfsc	___fldiv@grs+3,7
  5105  0A97  1445               	bsf	___fldiv@b,0
  5106  0A98  3001               	movlw	1
  5107  0A99  00C9               	movwf	??___fldiv
  5108  0A9A                     u7525:	
  5109  0A9A  1003               	clrc
  5110  0A9B  0DD5               	rlf	___fldiv@grs,f
  5111  0A9C  0DD6               	rlf	___fldiv@grs+1,f
  5112  0A9D  0DD7               	rlf	___fldiv@grs+2,f
  5113  0A9E  0DD8               	rlf	___fldiv@grs+3,f
  5114  0A9F  0BC9               	decfsz	??___fldiv,f
  5115  0AA0  2A9A               	goto	u7525
  5116  0AA1  30FF               	movlw	255
  5117  0AA2  07D3               	addwf	___fldiv@new_exp,f
  5118  0AA3  1803               	skipnc
  5119  0AA4  0AD4               	incf	___fldiv@new_exp+1,f
  5120  0AA5  30FF               	movlw	255
  5121  0AA6  07D4               	addwf	___fldiv@new_exp+1,f
  5122  0AA7  2A8B               	goto	l7082
  5123  0AA8                     l7084:	
  5124  0AA8  01DA               	clrf	___fldiv@aexp
  5125  0AA9  1FD8               	btfss	___fldiv@grs+3,7
  5126  0AAA  2AC1               	goto	l7094
  5127  0AAB  30FF               	movlw	255
  5128  0AAC  0555               	andwf	___fldiv@grs,w
  5129  0AAD  00C9               	movwf	??___fldiv
  5130  0AAE  30FF               	movlw	255
  5131  0AAF  0556               	andwf	___fldiv@grs+1,w
  5132  0AB0  00CA               	movwf	??___fldiv+1
  5133  0AB1  30FF               	movlw	255
  5134  0AB2  0557               	andwf	___fldiv@grs+2,w
  5135  0AB3  00CB               	movwf	??___fldiv+2
  5136  0AB4  307F               	movlw	127
  5137  0AB5  0558               	andwf	___fldiv@grs+3,w
  5138  0AB6  00CC               	movwf	??___fldiv+3
  5139  0AB7  084C               	movf	??___fldiv+3,w
  5140  0AB8  044B               	iorwf	??___fldiv+2,w
  5141  0AB9  044A               	iorwf	??___fldiv+1,w
  5142  0ABA  0449               	iorwf	??___fldiv,w
  5143  0ABB  1903               	skipnz
  5144  0ABC  1845               	btfsc	___fldiv@b,0
  5145  0ABD  2ABF               	goto	l7090
  5146  0ABE  2AC1               	goto	l7094
  5147  0ABF                     l7090:	
  5148  0ABF  01DA               	clrf	___fldiv@aexp
  5149  0AC0  0ADA               	incf	___fldiv@aexp,f
  5150  0AC1                     l7094:	
  5151  0AC1  085A               	movf	___fldiv@aexp,w
  5152  0AC2  1903               	btfsc	3,2
  5153  0AC3  2AF3               	goto	l7104
  5154  0AC4  3001               	movlw	1
  5155  0AC5  07C5               	addwf	___fldiv@b,f
  5156  0AC6  3000               	movlw	0
  5157  0AC7  1803               	skipnc
  5158  0AC8  3001               	movlw	1
  5159  0AC9  07C6               	addwf	___fldiv@b+1,f
  5160  0ACA  3000               	movlw	0
  5161  0ACB  1803               	skipnc
  5162  0ACC  3001               	movlw	1
  5163  0ACD  07C7               	addwf	___fldiv@b+2,f
  5164  0ACE  3000               	movlw	0
  5165  0ACF  1803               	skipnc
  5166  0AD0  3001               	movlw	1
  5167  0AD1  07C8               	addwf	___fldiv@b+3,f
  5168  0AD2  1C48               	btfss	___fldiv@b+3,0
  5169  0AD3  2AF3               	goto	l7104
  5170  0AD4  0845               	movf	___fldiv@b,w
  5171  0AD5  00C9               	movwf	??___fldiv
  5172  0AD6  0846               	movf	___fldiv@b+1,w
  5173  0AD7  00CA               	movwf	??___fldiv+1
  5174  0AD8  0847               	movf	___fldiv@b+2,w
  5175  0AD9  00CB               	movwf	??___fldiv+2
  5176  0ADA  0848               	movf	___fldiv@b+3,w
  5177  0ADB  00CC               	movwf	??___fldiv+3
  5178  0ADC  3001               	movlw	1
  5179  0ADD  00CD               	movwf	??___fldiv+4
  5180  0ADE                     u7595:	
  5181  0ADE  0D4C               	rlf	??___fldiv+3,w
  5182  0ADF  0CCC               	rrf	??___fldiv+3,f
  5183  0AE0  0CCB               	rrf	??___fldiv+2,f
  5184  0AE1  0CCA               	rrf	??___fldiv+1,f
  5185  0AE2  0CC9               	rrf	??___fldiv,f
  5186  0AE3  0BCD               	decfsz	??___fldiv+4,f
  5187  0AE4  2ADE               	goto	u7595
  5188  0AE5  084C               	movf	??___fldiv+3,w
  5189  0AE6  00C8               	movwf	___fldiv@b+3
  5190  0AE7  084B               	movf	??___fldiv+2,w
  5191  0AE8  00C7               	movwf	___fldiv@b+2
  5192  0AE9  084A               	movf	??___fldiv+1,w
  5193  0AEA  00C6               	movwf	___fldiv@b+1
  5194  0AEB  0849               	movf	??___fldiv,w
  5195  0AEC  00C5               	movwf	___fldiv@b
  5196  0AED  3001               	movlw	1
  5197  0AEE  07D3               	addwf	___fldiv@new_exp,f
  5198  0AEF  1803               	skipnc
  5199  0AF0  0AD4               	incf	___fldiv@new_exp+1,f
  5200  0AF1  3000               	movlw	0
  5201  0AF2  07D4               	addwf	___fldiv@new_exp+1,f
  5202  0AF3                     l7104:	
  5203  0AF3  0854               	movf	___fldiv@new_exp+1,w
  5204  0AF4  3A80               	xorlw	128
  5205  0AF5  00FF               	movwf	127
  5206  0AF6  3080               	movlw	128
  5207  0AF7  027F               	subwf	127,w
  5208  0AF8  1D03               	skipz
  5209  0AF9  2AFC               	goto	u7605
  5210  0AFA  30FF               	movlw	255
  5211  0AFB  0253               	subwf	___fldiv@new_exp,w
  5212  0AFC                     u7605:	
  5213  0AFC  1C03               	skipc
  5214  0AFD  2B0C               	goto	l7108
  5215  0AFE  30FF               	movlw	255
  5216  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  5217  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  5218  0B01  00D3               	movwf	___fldiv@new_exp
  5219  0B02  3000               	movlw	0
  5220  0B03  00D4               	movwf	___fldiv@new_exp+1
  5221  0B04  3000               	movlw	0
  5222  0B05  00C8               	movwf	___fldiv@b+3
  5223  0B06  3000               	movlw	0
  5224  0B07  00C7               	movwf	___fldiv@b+2
  5225  0B08  3000               	movlw	0
  5226  0B09  00C6               	movwf	___fldiv@b+1
  5227  0B0A  3000               	movlw	0
  5228  0B0B  00C5               	movwf	___fldiv@b
  5229  0B0C                     l7108:	
  5230  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  5231  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  5232  0B0E  0854               	movf	___fldiv@new_exp+1,w
  5233  0B0F  3A80               	xorlw	128
  5234  0B10  00FF               	movwf	127
  5235  0B11  3080               	movlw	128
  5236  0B12  027F               	subwf	127,w
  5237  0B13  1D03               	skipz
  5238  0B14  2B17               	goto	u7615
  5239  0B15  3001               	movlw	1
  5240  0B16  0253               	subwf	___fldiv@new_exp,w
  5241  0B17                     u7615:	
  5242  0B17  1803               	skipnc
  5243  0B18  2B26               	goto	l1360
  5244  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  5245  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  5246  0B1B  01D3               	clrf	___fldiv@new_exp
  5247  0B1C  01D4               	clrf	___fldiv@new_exp+1
  5248  0B1D  3000               	movlw	0
  5249  0B1E  00C8               	movwf	___fldiv@b+3
  5250  0B1F  3000               	movlw	0
  5251  0B20  00C7               	movwf	___fldiv@b+2
  5252  0B21  3000               	movlw	0
  5253  0B22  00C6               	movwf	___fldiv@b+1
  5254  0B23  3000               	movlw	0
  5255  0B24  00C5               	movwf	___fldiv@b
  5256  0B25  01D2               	clrf	___fldiv@sign
  5257  0B26                     l1360:	
  5258  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  5259  0B27  1303               	bcf	3,6	;RP1=0, select bank0
  5260  0B28  0853               	movf	___fldiv@new_exp,w
  5261  0B29  00C9               	movwf	??___fldiv
  5262  0B2A  0849               	movf	??___fldiv,w
  5263  0B2B  00D9               	movwf	___fldiv@bexp
  5264  0B2C  1C59               	btfss	___fldiv@bexp,0
  5265  0B2D  2B30               	goto	l7120
  5266  0B2E  17C7               	bsf	___fldiv@b+2,7
  5267  0B2F  2B34               	goto	l1362
  5268  0B30                     l7120:	
  5269  0B30  307F               	movlw	127
  5270  0B31  00C9               	movwf	??___fldiv
  5271  0B32  0849               	movf	??___fldiv,w
  5272  0B33  05C7               	andwf	___fldiv@b+2,f
  5273  0B34                     l1362:	
  5274  0B34  0859               	movf	___fldiv@bexp,w
  5275  0B35  00C9               	movwf	??___fldiv
  5276  0B36  1003               	clrc
  5277  0B37  0C49               	rrf	??___fldiv,w
  5278  0B38  00CA               	movwf	??___fldiv+1
  5279  0B39  084A               	movf	??___fldiv+1,w
  5280  0B3A  00C8               	movwf	___fldiv@b+3
  5281  0B3B  29F9               	goto	L5
  5282  0B3C                     __end_of___fldiv:	
  5283                           
  5284                           	psect	text8
  5285  19C7                     __ptext8:	
  5286 ;; *************** function _Package_Usart_is_for_me *****************
  5287 ;; Defined at:
  5288 ;;		line 8 in file "protocolo.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;		None
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;  retorno         1    0[BANK0 ] unsigned char 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  1    wreg      unsigned char 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0
  5297 ;; Tracked objects:
  5298 ;;		On entry : 200/100
  5299 ;;		On exit  : 300/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5302 ;;      Params:         0       0       0       0       0
  5303 ;;      Locals:         0       1       0       0       0
  5304 ;;      Temps:          0       0       0       0       0
  5305 ;;      Totals:         0       1       0       0       0
  5306 ;;Total ram usage:        1 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; Hardware stack levels required when called:    1
  5309 ;; This function calls:
  5310 ;;		Nothing
  5311 ;; This function is called by:
  5312 ;;		_MediaPlacaVaccum
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           
  5317                           ;psect for function _Package_Usart_is_for_me
  5318  19C7                     _Package_Usart_is_for_me:	
  5319                           
  5320                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5321                           
  5322                           ;incstack = 0
  5323                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5324  19C7  1683               	bsf	3,5	;RP0=1, select bank1
  5325  19C8  1C69               	btfss	_generic_status^(0+128),0
  5326  19C9  29D9               	goto	l6898
  5327                           
  5328                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5329  19CA  1703               	bsf	3,6	;RP1=1, select bank3
  5330  19CB  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  5331  19CC  1303               	bcf	3,6	;RP1=0, select bank1
  5332  19CD  0663               	xorwf	_Board_Number^(0+128),w
  5333  19CE  1903               	skipnz
  5334  19CF  29D4               	goto	l809
  5335  19D0  1703               	bsf	3,6	;RP1=1, select bank3
  5336  19D1  0A13               	incf	(_usart_buffer^(0+384)+3),w	;volatile
  5337  19D2  1D03               	btfss	3,2
  5338  19D3  29D9               	goto	l6898
  5339  19D4                     l809:	
  5340                           
  5341                           ;protocolo.c: 13:             retorno=1;
  5342  19D4  1283               	bcf	3,5	;RP0=0, select bank0
  5343  19D5  1303               	bcf	3,6	;RP1=0, select bank0
  5344  19D6  01A0               	clrf	Package_Usart_is_for_me@retorno
  5345  19D7  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5346  19D8  29DC               	goto	l6902
  5347  19D9                     l6898:	
  5348                           
  5349                           ;protocolo.c: 15:             retorno=0;
  5350  19D9  1283               	bcf	3,5	;RP0=0, select bank0
  5351  19DA  1303               	bcf	3,6	;RP1=0, select bank0
  5352  19DB  01A0               	clrf	Package_Usart_is_for_me@retorno
  5353  19DC                     l6902:	
  5354                           
  5355                           ;protocolo.c: 21:      return retorno;
  5356  19DC  0820               	movf	Package_Usart_is_for_me@retorno,w
  5357  19DD  0008               	return
  5358  19DE                     __end_of_Package_Usart_is_for_me:	
  5359                           
  5360                           	psect	text9
  5361  1E8B                     __ptext9:	
  5362 ;; *************** function _ADC_Media_10bits *****************
  5363 ;; Defined at:
  5364 ;;		line 20 in file "adc.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  canal           1    wreg     unsigned char 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  canal           1   38[BANK0 ] unsigned char 
  5369 ;;  value           2   39[BANK0 ] unsigned int 
  5370 ;;  i               1   41[BANK0 ] unsigned char 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  4   33[BANK0 ] float 
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5375 ;; Tracked objects:
  5376 ;;		On entry : 300/100
  5377 ;;		On exit  : 300/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5380 ;;      Params:         0       4       0       0       0
  5381 ;;      Locals:         0       4       0       0       0
  5382 ;;      Temps:          0       1       0       0       0
  5383 ;;      Totals:         0       9       0       0       0
  5384 ;;Total ram usage:        9 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    2
  5387 ;; This function calls:
  5388 ;;		___lwdiv
  5389 ;;		___xxtofl
  5390 ;;		_captura
  5391 ;;		_my_delay_ms
  5392 ;; This function is called by:
  5393 ;;		_MediaPlacaVaccum
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           
  5398                           ;psect for function _ADC_Media_10bits
  5399  1E8B                     _ADC_Media_10bits:	
  5400                           
  5401                           ;incstack = 0
  5402                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5403                           ;ADC_Media_10bits@canal stored from wreg
  5404  1E8B  1283               	bcf	3,5	;RP0=0, select bank0
  5405  1E8C  00C6               	movwf	ADC_Media_10bits@canal
  5406                           
  5407                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5408  1E8D  0846               	movf	ADC_Media_10bits@canal,w
  5409  1E8E  00C5               	movwf	??_ADC_Media_10bits
  5410  1E8F  0DC5               	rlf	??_ADC_Media_10bits,f
  5411  1E90  0DC5               	rlf	??_ADC_Media_10bits,f
  5412  1E91  081F               	movf	31,w	;volatile
  5413  1E92  0645               	xorwf	??_ADC_Media_10bits,w
  5414  1E93  39C3               	andlw	-61
  5415  1E94  0645               	xorwf	??_ADC_Media_10bits,w
  5416  1E95  009F               	movwf	31	;volatile
  5417                           
  5418                           ;adc.c: 24:       my_delay_ms(1);
  5419  1E96  3000               	movlw	0
  5420  1E97  00A3               	movwf	my_delay_ms@time+3
  5421  1E98  3000               	movlw	0
  5422  1E99  00A2               	movwf	my_delay_ms@time+2
  5423  1E9A  3000               	movlw	0
  5424  1E9B  00A1               	movwf	my_delay_ms@time+1
  5425  1E9C  3001               	movlw	1
  5426  1E9D  00A0               	movwf	my_delay_ms@time
  5427  1E9E  160A  158A  24F2  160A  158A  	fcall	_my_delay_ms
  5428                           
  5429                           ;adc.c: 26:       value=0;
  5430  1EA3  01C7               	clrf	ADC_Media_10bits@value
  5431  1EA4  01C8               	clrf	ADC_Media_10bits@value+1
  5432                           
  5433                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5434  1EA5  01C9               	clrf	ADC_Media_10bits@i
  5435  1EA6  0AC9               	incf	ADC_Media_10bits@i,f
  5436  1EA7                     l6880:	
  5437                           
  5438                           ;adc.c: 28:           value+=captura();
  5439  1EA7  160A  158A  215A  160A  158A  	fcall	_captura
  5440  1EAC  0820               	movf	?_captura,w
  5441  1EAD  07C7               	addwf	ADC_Media_10bits@value,f
  5442  1EAE  1803               	skipnc
  5443  1EAF  0AC8               	incf	ADC_Media_10bits@value+1,f
  5444  1EB0  0821               	movf	?_captura+1,w
  5445  1EB1  07C8               	addwf	ADC_Media_10bits@value+1,f
  5446  1EB2  3001               	movlw	1
  5447  1EB3  00C5               	movwf	??_ADC_Media_10bits
  5448  1EB4  0845               	movf	??_ADC_Media_10bits,w
  5449  1EB5  07C9               	addwf	ADC_Media_10bits@i,f
  5450  1EB6  3033               	movlw	51
  5451  1EB7  0249               	subwf	ADC_Media_10bits@i,w
  5452  1EB8  1C03               	skipc
  5453  1EB9  2EA7               	goto	l6880
  5454                           
  5455                           ;adc.c: 29:       value/=(i-1);
  5456  1EBA  0849               	movf	ADC_Media_10bits@i,w
  5457  1EBB  3EFF               	addlw	255
  5458  1EBC  00A0               	movwf	___lwdiv@divisor
  5459  1EBD  30FF               	movlw	255
  5460  1EBE  1803               	skipnc
  5461  1EBF  3000               	movlw	0
  5462  1EC0  00A1               	movwf	___lwdiv@divisor+1
  5463  1EC1  0848               	movf	ADC_Media_10bits@value+1,w
  5464  1EC2  00A3               	movwf	___lwdiv@dividend+1
  5465  1EC3  0847               	movf	ADC_Media_10bits@value,w
  5466  1EC4  00A2               	movwf	___lwdiv@dividend
  5467  1EC5  160A  158A  25D5  160A  158A  	fcall	___lwdiv
  5468  1ECA  0821               	movf	?___lwdiv+1,w
  5469  1ECB  00C8               	movwf	ADC_Media_10bits@value+1
  5470  1ECC  0820               	movf	?___lwdiv,w
  5471  1ECD  00C7               	movwf	ADC_Media_10bits@value
  5472                           
  5473                           ;adc.c: 30:       return value;
  5474  1ECE  0847               	movf	ADC_Media_10bits@value,w
  5475  1ECF  00B3               	movwf	___xxtofl@val
  5476  1ED0  0848               	movf	ADC_Media_10bits@value+1,w
  5477  1ED1  00B4               	movwf	___xxtofl@val+1
  5478  1ED2  01B5               	clrf	___xxtofl@val+2
  5479  1ED3  01B6               	clrf	___xxtofl@val+3
  5480  1ED4  3000               	movlw	0
  5481  1ED5  160A  118A  21CA   	fcall	___xxtofl
  5482  1ED8  0836               	movf	?___xxtofl+3,w
  5483  1ED9  00C4               	movwf	?_ADC_Media_10bits+3
  5484  1EDA  0835               	movf	?___xxtofl+2,w
  5485  1EDB  00C3               	movwf	?_ADC_Media_10bits+2
  5486  1EDC  0834               	movf	?___xxtofl+1,w
  5487  1EDD  00C2               	movwf	?_ADC_Media_10bits+1
  5488  1EDE  0833               	movf	?___xxtofl,w
  5489  1EDF  00C1               	movwf	?_ADC_Media_10bits
  5490  1EE0  0008               	return
  5491  1EE1                     __end_of_ADC_Media_10bits:	
  5492                           
  5493                           	psect	text10
  5494  11CA                     __ptext10:	
  5495 ;; *************** function ___xxtofl *****************
  5496 ;; Defined at:
  5497 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;  sign            1    wreg     unsigned char 
  5500 ;;  val             4   19[BANK0 ] long 
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;  sign            1   27[BANK0 ] unsigned char 
  5503 ;;  arg             4   29[BANK0 ] unsigned long 
  5504 ;;  exp             1   28[BANK0 ] unsigned char 
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  4   19[BANK0 ] unsigned char 
  5507 ;; Registers used:
  5508 ;;		wreg, status,2, status,0
  5509 ;; Tracked objects:
  5510 ;;		On entry : 300/0
  5511 ;;		On exit  : 300/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5514 ;;      Params:         0       4       0       0       0
  5515 ;;      Locals:         0       6       0       0       0
  5516 ;;      Temps:          0       4       0       0       0
  5517 ;;      Totals:         0      14       0       0       0
  5518 ;;Total ram usage:       14 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; Hardware stack levels required when called:    1
  5521 ;; This function calls:
  5522 ;;		Nothing
  5523 ;; This function is called by:
  5524 ;;		_MediaPlacaVaccum
  5525 ;;		_ADC_Media_10bits
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           
  5530                           ;psect for function ___xxtofl
  5531  11CA                     ___xxtofl:	
  5532                           
  5533                           ;incstack = 0
  5534                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5535                           ;___xxtofl@sign stored from wreg
  5536  11CA  00BB               	movwf	___xxtofl@sign
  5537  11CB  083B               	movf	___xxtofl@sign,w
  5538  11CC  1D03               	btfss	3,2
  5539  11CD  1FB6               	btfss	___xxtofl@val+3,7
  5540  11CE  29DF               	goto	l6454
  5541  11CF  0933               	comf	___xxtofl@val,w
  5542  11D0  00BD               	movwf	___xxtofl@arg
  5543  11D1  0934               	comf	___xxtofl@val+1,w
  5544  11D2  00BE               	movwf	___xxtofl@arg+1
  5545  11D3  0935               	comf	___xxtofl@val+2,w
  5546  11D4  00BF               	movwf	___xxtofl@arg+2
  5547  11D5  0936               	comf	___xxtofl@val+3,w
  5548  11D6  00C0               	movwf	___xxtofl@arg+3
  5549  11D7  0ABD               	incf	___xxtofl@arg,f
  5550  11D8  1903               	skipnz
  5551  11D9  0ABE               	incf	___xxtofl@arg+1,f
  5552  11DA  1903               	skipnz
  5553  11DB  0ABF               	incf	___xxtofl@arg+2,f
  5554  11DC  1903               	skipnz
  5555  11DD  0AC0               	incf	___xxtofl@arg+3,f
  5556  11DE  29E7               	goto	l1416
  5557  11DF                     l6454:	
  5558  11DF  0836               	movf	___xxtofl@val+3,w
  5559  11E0  00C0               	movwf	___xxtofl@arg+3
  5560  11E1  0835               	movf	___xxtofl@val+2,w
  5561  11E2  00BF               	movwf	___xxtofl@arg+2
  5562  11E3  0834               	movf	___xxtofl@val+1,w
  5563  11E4  00BE               	movwf	___xxtofl@arg+1
  5564  11E5  0833               	movf	___xxtofl@val,w
  5565  11E6  00BD               	movwf	___xxtofl@arg
  5566  11E7                     l1416:	
  5567  11E7  0836               	movf	___xxtofl@val+3,w
  5568  11E8  0435               	iorwf	___xxtofl@val+2,w
  5569  11E9  0434               	iorwf	___xxtofl@val+1,w
  5570  11EA  0433               	iorwf	___xxtofl@val,w
  5571  11EB  1D03               	skipz
  5572  11EC  29F6               	goto	l6460
  5573  11ED  3000               	movlw	0
  5574  11EE  00B6               	movwf	?___xxtofl+3
  5575  11EF  3000               	movlw	0
  5576  11F0  00B5               	movwf	?___xxtofl+2
  5577  11F1  3000               	movlw	0
  5578  11F2  00B4               	movwf	?___xxtofl+1
  5579  11F3  3000               	movlw	0
  5580  11F4  00B3               	movwf	?___xxtofl
  5581  11F5  0008               	return
  5582  11F6                     l6460:	
  5583  11F6  3096               	movlw	150
  5584  11F7  00B7               	movwf	??___xxtofl
  5585  11F8  0837               	movf	??___xxtofl,w
  5586  11F9  00BC               	movwf	___xxtofl@exp
  5587  11FA                     l6464:	
  5588  11FA  30FE               	movlw	254
  5589  11FB  0540               	andwf	___xxtofl@arg+3,w
  5590  11FC  1903               	btfsc	3,2
  5591  11FD  2A27               	goto	l1422
  5592  11FE  3001               	movlw	1
  5593  11FF  00B7               	movwf	??___xxtofl
  5594  1200  0837               	movf	??___xxtofl,w
  5595  1201  07BC               	addwf	___xxtofl@exp,f
  5596  1202  3001               	movlw	1
  5597  1203                     u6765:	
  5598  1203  1003               	clrc
  5599  1204  0CC0               	rrf	___xxtofl@arg+3,f
  5600  1205  0CBF               	rrf	___xxtofl@arg+2,f
  5601  1206  0CBE               	rrf	___xxtofl@arg+1,f
  5602  1207  0CBD               	rrf	___xxtofl@arg,f
  5603  1208  3EFF               	addlw	-1
  5604  1209  1D03               	skipz
  5605  120A  2A03               	goto	u6765
  5606  120B  29FA               	goto	l6464
  5607  120C                     l6466:	
  5608  120C  3001               	movlw	1
  5609  120D  00B7               	movwf	??___xxtofl
  5610  120E  0837               	movf	??___xxtofl,w
  5611  120F  07BC               	addwf	___xxtofl@exp,f
  5612  1210  3001               	movlw	1
  5613  1211  07BD               	addwf	___xxtofl@arg,f
  5614  1212  3000               	movlw	0
  5615  1213  1803               	skipnc
  5616  1214  3001               	movlw	1
  5617  1215  07BE               	addwf	___xxtofl@arg+1,f
  5618  1216  3000               	movlw	0
  5619  1217  1803               	skipnc
  5620  1218  3001               	movlw	1
  5621  1219  07BF               	addwf	___xxtofl@arg+2,f
  5622  121A  3000               	movlw	0
  5623  121B  1803               	skipnc
  5624  121C  3001               	movlw	1
  5625  121D  07C0               	addwf	___xxtofl@arg+3,f
  5626  121E  3001               	movlw	1
  5627  121F                     u6785:	
  5628  121F  1003               	clrc
  5629  1220  0CC0               	rrf	___xxtofl@arg+3,f
  5630  1221  0CBF               	rrf	___xxtofl@arg+2,f
  5631  1222  0CBE               	rrf	___xxtofl@arg+1,f
  5632  1223  0CBD               	rrf	___xxtofl@arg,f
  5633  1224  3EFF               	addlw	-1
  5634  1225  1D03               	skipz
  5635  1226  2A1F               	goto	u6785
  5636  1227                     l1422:	
  5637  1227  30FF               	movlw	255
  5638  1228  0540               	andwf	___xxtofl@arg+3,w
  5639  1229  1903               	btfsc	3,2
  5640  122A  2A3B               	goto	l6474
  5641  122B  2A0C               	goto	l6466
  5642  122C                     l6476:	
  5643  122C  3002               	movlw	2
  5644  122D  023C               	subwf	___xxtofl@exp,w
  5645  122E  1C03               	btfss	3,0
  5646  122F  2A3D               	goto	l1429
  5647  1230  3001               	movlw	1
  5648  1231  02BC               	subwf	___xxtofl@exp,f
  5649  1232  3001               	movlw	1
  5650  1233  00B7               	movwf	??___xxtofl
  5651  1234                     u6805:	
  5652  1234  1003               	clrc
  5653  1235  0DBD               	rlf	___xxtofl@arg,f
  5654  1236  0DBE               	rlf	___xxtofl@arg+1,f
  5655  1237  0DBF               	rlf	___xxtofl@arg+2,f
  5656  1238  0DC0               	rlf	___xxtofl@arg+3,f
  5657  1239  0BB7               	decfsz	??___xxtofl,f
  5658  123A  2A34               	goto	u6805
  5659  123B                     l6474:	
  5660  123B  1FBF               	btfss	___xxtofl@arg+2,7
  5661  123C  2A2C               	goto	l6476
  5662  123D                     l1429:	
  5663  123D  183C               	btfsc	___xxtofl@exp,0
  5664  123E  2A47               	goto	l1430
  5665  123F  30FF               	movlw	255
  5666  1240  05BD               	andwf	___xxtofl@arg,f
  5667  1241  30FF               	movlw	255
  5668  1242  05BE               	andwf	___xxtofl@arg+1,f
  5669  1243  307F               	movlw	127
  5670  1244  05BF               	andwf	___xxtofl@arg+2,f
  5671  1245  30FF               	movlw	255
  5672  1246  05C0               	andwf	___xxtofl@arg+3,f
  5673  1247                     l1430:	
  5674  1247  1003               	clrc
  5675  1248  0CBC               	rrf	___xxtofl@exp,f
  5676  1249  083C               	movf	___xxtofl@exp,w
  5677  124A  00B7               	movwf	??___xxtofl
  5678  124B  01B8               	clrf	??___xxtofl+1
  5679  124C  01B9               	clrf	??___xxtofl+2
  5680  124D  01BA               	clrf	??___xxtofl+3
  5681  124E  3018               	movlw	24
  5682  124F                     u6845:	
  5683  124F  1003               	clrc
  5684  1250  0DB7               	rlf	??___xxtofl,f
  5685  1251  0DB8               	rlf	??___xxtofl+1,f
  5686  1252  0DB9               	rlf	??___xxtofl+2,f
  5687  1253  0DBA               	rlf	??___xxtofl+3,f
  5688  1254  3EFF               	addlw	-1
  5689  1255  1D03               	skipz
  5690  1256  2A4F               	goto	u6845
  5691  1257  0837               	movf	??___xxtofl,w
  5692  1258  04BD               	iorwf	___xxtofl@arg,f
  5693  1259  0838               	movf	??___xxtofl+1,w
  5694  125A  04BE               	iorwf	___xxtofl@arg+1,f
  5695  125B  0839               	movf	??___xxtofl+2,w
  5696  125C  04BF               	iorwf	___xxtofl@arg+2,f
  5697  125D  083A               	movf	??___xxtofl+3,w
  5698  125E  04C0               	iorwf	___xxtofl@arg+3,f
  5699  125F  083B               	movf	___xxtofl@sign,w
  5700  1260  1D03               	btfss	3,2
  5701  1261  1FB6               	btfss	___xxtofl@val+3,7
  5702  1262  2A64               	goto	l6488
  5703  1263  17C0               	bsf	___xxtofl@arg+3,7
  5704  1264                     l6488:	
  5705  1264  0840               	movf	___xxtofl@arg+3,w
  5706  1265  00B6               	movwf	?___xxtofl+3
  5707  1266  083F               	movf	___xxtofl@arg+2,w
  5708  1267  00B5               	movwf	?___xxtofl+2
  5709  1268  083E               	movf	___xxtofl@arg+1,w
  5710  1269  00B4               	movwf	?___xxtofl+1
  5711  126A  083D               	movf	___xxtofl@arg,w
  5712  126B  00B3               	movwf	?___xxtofl
  5713  126C  0008               	return
  5714  126D                     __end_of___xxtofl:	
  5715                           
  5716                           	psect	text11
  5717  1E4D                     __ptext11:	
  5718 ;; *************** function _ADC_Max_10Bits *****************
  5719 ;; Defined at:
  5720 ;;		line 34 in file "adc.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  canal           1    wreg     unsigned char 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  canal           1   13[BANK0 ] unsigned char 
  5725 ;;  value           2   16[BANK0 ] unsigned int 
  5726 ;;  Temp            2   14[BANK0 ] unsigned int 
  5727 ;;  i               1   18[BANK0 ] unsigned char 
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  2   10[BANK0 ] unsigned int 
  5730 ;; Registers used:
  5731 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5732 ;; Tracked objects:
  5733 ;;		On entry : 300/100
  5734 ;;		On exit  : 300/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5737 ;;      Params:         0       2       0       0       0
  5738 ;;      Locals:         0       6       0       0       0
  5739 ;;      Temps:          0       1       0       0       0
  5740 ;;      Totals:         0       9       0       0       0
  5741 ;;Total ram usage:        9 bytes
  5742 ;; Hardware stack levels used:    1
  5743 ;; Hardware stack levels required when called:    2
  5744 ;; This function calls:
  5745 ;;		_captura
  5746 ;;		_my_delay_ms
  5747 ;; This function is called by:
  5748 ;;		_MediaPlacaVaccum
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           
  5753                           ;psect for function _ADC_Max_10Bits
  5754  1E4D                     _ADC_Max_10Bits:	
  5755                           
  5756                           ;incstack = 0
  5757                           ; Regs used in _ADC_Max_10Bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5758                           ;ADC_Max_10Bits@canal stored from wreg
  5759  1E4D  1283               	bcf	3,5	;RP0=0, select bank0
  5760  1E4E  00AD               	movwf	ADC_Max_10Bits@canal
  5761                           
  5762                           ;adc.c: 35:       unsigned int Temp;;adc.c: 36:       unsigned int value;;adc.c: 37:    
      +                             unsigned char i;;adc.c: 38:       ADCON0bits.CHS=canal;
  5763  1E4F  082D               	movf	ADC_Max_10Bits@canal,w
  5764  1E50  00AC               	movwf	??_ADC_Max_10Bits
  5765  1E51  0DAC               	rlf	??_ADC_Max_10Bits,f
  5766  1E52  0DAC               	rlf	??_ADC_Max_10Bits,f
  5767  1E53  081F               	movf	31,w	;volatile
  5768  1E54  062C               	xorwf	??_ADC_Max_10Bits,w
  5769  1E55  39C3               	andlw	-61
  5770  1E56  062C               	xorwf	??_ADC_Max_10Bits,w
  5771  1E57  009F               	movwf	31	;volatile
  5772                           
  5773                           ;adc.c: 39:       my_delay_ms(1);
  5774  1E58  3000               	movlw	0
  5775  1E59  00A3               	movwf	my_delay_ms@time+3
  5776  1E5A  3000               	movlw	0
  5777  1E5B  00A2               	movwf	my_delay_ms@time+2
  5778  1E5C  3000               	movlw	0
  5779  1E5D  00A1               	movwf	my_delay_ms@time+1
  5780  1E5E  3001               	movlw	1
  5781  1E5F  00A0               	movwf	my_delay_ms@time
  5782  1E60  160A  158A  24F2  160A  158A  	fcall	_my_delay_ms
  5783                           
  5784                           ;adc.c: 41:       value=0;
  5785  1E65  01B0               	clrf	ADC_Max_10Bits@value
  5786  1E66  01B1               	clrf	ADC_Max_10Bits@value+1
  5787                           
  5788                           ;adc.c: 42:       for(i=1;i<=50;i++)
  5789  1E67  01B2               	clrf	ADC_Max_10Bits@i
  5790  1E68  0AB2               	incf	ADC_Max_10Bits@i,f
  5791  1E69                     l6920:	
  5792                           
  5793                           ;adc.c: 43:           {;adc.c: 44:           Temp=captura();
  5794  1E69  160A  158A  215A  160A  158A  	fcall	_captura
  5795  1E6E  0821               	movf	?_captura+1,w
  5796  1E6F  00AF               	movwf	ADC_Max_10Bits@Temp+1
  5797  1E70  0820               	movf	?_captura,w
  5798  1E71  00AE               	movwf	ADC_Max_10Bits@Temp
  5799                           
  5800                           ;adc.c: 45:           if (Temp>value) value=Temp;
  5801  1E72  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5802  1E73  0231               	subwf	ADC_Max_10Bits@value+1,w
  5803  1E74  1D03               	skipz
  5804  1E75  2E78               	goto	u7185
  5805  1E76  082E               	movf	ADC_Max_10Bits@Temp,w
  5806  1E77  0230               	subwf	ADC_Max_10Bits@value,w
  5807  1E78                     u7185:	
  5808  1E78  1803               	skipnc
  5809  1E79  2E7E               	goto	l6926
  5810  1E7A  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5811  1E7B  00B1               	movwf	ADC_Max_10Bits@value+1
  5812  1E7C  082E               	movf	ADC_Max_10Bits@Temp,w
  5813  1E7D  00B0               	movwf	ADC_Max_10Bits@value
  5814  1E7E                     l6926:	
  5815                           
  5816                           ;adc.c: 46:           }
  5817  1E7E  3001               	movlw	1
  5818  1E7F  00AC               	movwf	??_ADC_Max_10Bits
  5819  1E80  082C               	movf	??_ADC_Max_10Bits,w
  5820  1E81  07B2               	addwf	ADC_Max_10Bits@i,f
  5821  1E82  3033               	movlw	51
  5822  1E83  0232               	subwf	ADC_Max_10Bits@i,w
  5823  1E84  1C03               	skipc
  5824  1E85  2E69               	goto	l6920
  5825                           
  5826                           ;adc.c: 47:       return value;
  5827  1E86  0831               	movf	ADC_Max_10Bits@value+1,w
  5828  1E87  00AB               	movwf	?_ADC_Max_10Bits+1
  5829  1E88  0830               	movf	ADC_Max_10Bits@value,w
  5830  1E89  00AA               	movwf	?_ADC_Max_10Bits
  5831  1E8A  0008               	return
  5832  1E8B                     __end_of_ADC_Max_10Bits:	
  5833                           
  5834                           	psect	text12
  5835  1CF2                     __ptext12:	
  5836 ;; *************** function _my_delay_ms *****************
  5837 ;; Defined at:
  5838 ;;		line 5 in file "my_delay.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  time            4    0[BANK0 ] long 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  i               4    6[BANK0 ] long 
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      void 
  5845 ;; Registers used:
  5846 ;;		wreg, btemp+1
  5847 ;; Tracked objects:
  5848 ;;		On entry : 300/0
  5849 ;;		On exit  : 300/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5852 ;;      Params:         0       4       0       0       0
  5853 ;;      Locals:         0       4       0       0       0
  5854 ;;      Temps:          0       2       0       0       0
  5855 ;;      Totals:         0      10       0       0       0
  5856 ;;Total ram usage:       10 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; Hardware stack levels required when called:    1
  5859 ;; This function calls:
  5860 ;;		Nothing
  5861 ;; This function is called by:
  5862 ;;		_MediaPlacaVaccum
  5863 ;;		_ADC_Media_10bits
  5864 ;;		_ADC_Max_10Bits
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868                           
  5869                           ;psect for function _my_delay_ms
  5870  1CF2                     _my_delay_ms:	
  5871                           
  5872                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5873                           
  5874                           ;incstack = 0
  5875                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5876  1CF2  3000               	movlw	0
  5877  1CF3  00A9               	movwf	my_delay_ms@i+3
  5878  1CF4  3000               	movlw	0
  5879  1CF5  00A8               	movwf	my_delay_ms@i+2
  5880  1CF6  3000               	movlw	0
  5881  1CF7  00A7               	movwf	my_delay_ms@i+1
  5882  1CF8  3000               	movlw	0
  5883  1CF9  00A6               	movwf	my_delay_ms@i
  5884  1CFA                     l6038:	
  5885  1CFA  0829               	movf	my_delay_ms@i+3,w
  5886  1CFB  3A80               	xorlw	128
  5887  1CFC  00FF               	movwf	127
  5888  1CFD  0823               	movf	my_delay_ms@time+3,w
  5889  1CFE  3A80               	xorlw	128
  5890  1CFF  027F               	subwf	127,w
  5891  1D00  1D03               	skipz
  5892  1D01  2D0C               	goto	u5773
  5893  1D02  0822               	movf	my_delay_ms@time+2,w
  5894  1D03  0228               	subwf	my_delay_ms@i+2,w
  5895  1D04  1D03               	skipz
  5896  1D05  2D0C               	goto	u5773
  5897  1D06  0821               	movf	my_delay_ms@time+1,w
  5898  1D07  0227               	subwf	my_delay_ms@i+1,w
  5899  1D08  1D03               	skipz
  5900  1D09  2D0C               	goto	u5773
  5901  1D0A  0820               	movf	my_delay_ms@time,w
  5902  1D0B  0226               	subwf	my_delay_ms@i,w
  5903  1D0C                     u5773:	
  5904  1D0C  1803               	btfsc	3,0
  5905  1D0D  0008               	return
  5906                           
  5907                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5908  1D0E  3003               	movlw	3
  5909  1D0F  1283               	bcf	3,5	;RP0=0, select bank0
  5910  1D10  1303               	bcf	3,6	;RP1=0, select bank0
  5911  1D11  00A5               	movwf	??_my_delay_ms+1
  5912  1D12  3097               	movlw	151
  5913  1D13  00A4               	movwf	??_my_delay_ms
  5914  1D14                     u7957:	
  5915  1D14  0BA4               	decfsz	??_my_delay_ms,f
  5916  1D15  2D14               	goto	u7957
  5917  1D16  0BA5               	decfsz	??_my_delay_ms+1,f
  5918  1D17  2D14               	goto	u7957
  5919                           
  5920                           ;my_delay.c: 10:             }
  5921  1D18  3001               	movlw	1
  5922  1D19  1283               	bcf	3,5	;RP0=0, select bank0
  5923  1D1A  1303               	bcf	3,6	;RP1=0, select bank0
  5924  1D1B  07A6               	addwf	my_delay_ms@i,f
  5925  1D1C  3000               	movlw	0
  5926  1D1D  1803               	skipnc
  5927  1D1E  3001               	movlw	1
  5928  1D1F  07A7               	addwf	my_delay_ms@i+1,f
  5929  1D20  3000               	movlw	0
  5930  1D21  1803               	skipnc
  5931  1D22  3001               	movlw	1
  5932  1D23  07A8               	addwf	my_delay_ms@i+2,f
  5933  1D24  3000               	movlw	0
  5934  1D25  1803               	skipnc
  5935  1D26  3001               	movlw	1
  5936  1D27  07A9               	addwf	my_delay_ms@i+3,f
  5937  1D28  2CFA               	goto	l6038
  5938  1D29                     __end_of_my_delay_ms:	
  5939                           
  5940                           	psect	text13
  5941  195A                     __ptext13:	
  5942 ;; *************** function _captura *****************
  5943 ;; Defined at:
  5944 ;;		line 123 in file "adc.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;		None
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  2    0[BANK0 ] unsigned int 
  5951 ;; Registers used:
  5952 ;;		wreg
  5953 ;; Tracked objects:
  5954 ;;		On entry : 300/0
  5955 ;;		On exit  : 300/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5958 ;;      Params:         0       2       0       0       0
  5959 ;;      Locals:         0       0       0       0       0
  5960 ;;      Temps:          0       0       0       0       0
  5961 ;;      Totals:         0       2       0       0       0
  5962 ;;Total ram usage:        2 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; Hardware stack levels required when called:    1
  5965 ;; This function calls:
  5966 ;;		Nothing
  5967 ;; This function is called by:
  5968 ;;		_ADC_Media_10bits
  5969 ;;		_ADC_Max_10Bits
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           
  5974                           ;psect for function _captura
  5975  195A                     _captura:	
  5976                           
  5977                           ;adc.c: 124:     ADCON0bits.GO=1;
  5978                           
  5979                           ;incstack = 0
  5980                           ; Regs used in _captura: [wreg]
  5981  195A  149F               	bsf	31,1	;volatile
  5982  195B                     l487:	
  5983                           ;adc.c: 128:           }
  5984                           
  5985                           
  5986                           ;adc.c: 125:     while(ADCON0bits.GO)
  5987  195B  189F               	btfsc	31,1	;volatile
  5988  195C  295B               	goto	l487
  5989                           
  5990                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  5991  195D  081E               	movf	30,w	;volatile
  5992  195E  00A1               	movwf	?_captura+1
  5993  195F  1683               	bsf	3,5	;RP0=1, select bank1
  5994  1960  081E               	movf	30,w	;volatile
  5995  1961  1283               	bcf	3,5	;RP0=0, select bank0
  5996  1962  00A0               	movwf	?_captura
  5997  1963  0008               	return
  5998  1964                     __end_of_captura:	
  5999                           
  6000                           	psect	text14
  6001  1C2A                     __ptext14:	
  6002 ;; *************** function _I2C_Master_Init *****************
  6003 ;; Defined at:
  6004 ;;		line 7 in file "I2C.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  c               4   14[BANK0 ] const unsigned long 
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;		None
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  1    wreg      void 
  6011 ;; Registers used:
  6012 ;;		wreg, status,2, status,0, pclath, cstack
  6013 ;; Tracked objects:
  6014 ;;		On entry : 300/0
  6015 ;;		On exit  : 300/100
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6018 ;;      Params:         0       4       0       0       0
  6019 ;;      Locals:         0       0       0       0       0
  6020 ;;      Temps:          0       4       0       0       0
  6021 ;;      Totals:         0       8       0       0       0
  6022 ;;Total ram usage:        8 bytes
  6023 ;; Hardware stack levels used:    1
  6024 ;; Hardware stack levels required when called:    2
  6025 ;; This function calls:
  6026 ;;		___lldiv
  6027 ;; This function is called by:
  6028 ;;		_main
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           
  6033                           ;psect for function _I2C_Master_Init
  6034  1C2A                     _I2C_Master_Init:	
  6035                           
  6036                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  6037                           
  6038                           ;incstack = 0
  6039                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  6040  1C2A  3028               	movlw	40
  6041  1C2B  0094               	movwf	20	;volatile
  6042                           
  6043                           ;I2C.c: 11:   SSPCON2 = 0;
  6044  1C2C  1683               	bsf	3,5	;RP0=1, select bank1
  6045  1C2D  0191               	clrf	17	;volatile
  6046                           
  6047                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  6048  1C2E  1283               	bcf	3,5	;RP0=0, select bank0
  6049  1C2F  082E               	movf	I2C_Master_Init@c,w
  6050  1C30  00B2               	movwf	??_I2C_Master_Init
  6051  1C31  082F               	movf	I2C_Master_Init@c+1,w
  6052  1C32  00B3               	movwf	??_I2C_Master_Init+1
  6053  1C33  0830               	movf	I2C_Master_Init@c+2,w
  6054  1C34  00B4               	movwf	??_I2C_Master_Init+2
  6055  1C35  0831               	movf	I2C_Master_Init@c+3,w
  6056  1C36  00B5               	movwf	??_I2C_Master_Init+3
  6057  1C37  3002               	movlw	2
  6058  1C38                     u7635:	
  6059  1C38  1003               	clrc
  6060  1C39  0DB2               	rlf	??_I2C_Master_Init,f
  6061  1C3A  0DB3               	rlf	??_I2C_Master_Init+1,f
  6062  1C3B  0DB4               	rlf	??_I2C_Master_Init+2,f
  6063  1C3C  0DB5               	rlf	??_I2C_Master_Init+3,f
  6064  1C3D  3EFF               	addlw	-1
  6065  1C3E  1D03               	skipz
  6066  1C3F  2C38               	goto	u7635
  6067  1C40  0835               	movf	??_I2C_Master_Init+3,w
  6068  1C41  00A3               	movwf	___lldiv@divisor+3
  6069  1C42  0834               	movf	??_I2C_Master_Init+2,w
  6070  1C43  00A2               	movwf	___lldiv@divisor+2
  6071  1C44  0833               	movf	??_I2C_Master_Init+1,w
  6072  1C45  00A1               	movwf	___lldiv@divisor+1
  6073  1C46  0832               	movf	??_I2C_Master_Init,w
  6074  1C47  00A0               	movwf	___lldiv@divisor
  6075  1C48  3000               	movlw	0
  6076  1C49  00A7               	movwf	___lldiv@dividend+3
  6077  1C4A  307A               	movlw	122
  6078  1C4B  00A6               	movwf	___lldiv@dividend+2
  6079  1C4C  3012               	movlw	18
  6080  1C4D  00A5               	movwf	___lldiv@dividend+1
  6081  1C4E  3000               	movlw	0
  6082  1C4F  00A4               	movwf	___lldiv@dividend
  6083  1C50  160A  158A  273E   	fcall	___lldiv
  6084  1C53  0820               	movf	?___lldiv,w
  6085  1C54  3EFF               	addlw	255
  6086  1C55  1683               	bsf	3,5	;RP0=1, select bank1
  6087  1C56  0093               	movwf	19	;volatile
  6088                           
  6089                           ;I2C.c: 13:   SSPSTAT = 0;
  6090  1C57  0194               	clrf	20	;volatile
  6091                           
  6092                           ;I2C.c: 14:   TRISC3 = 1;
  6093  1C58  1587               	bsf	7,3	;volatile
  6094                           
  6095                           ;I2C.c: 15:   TRISC4 = 1;
  6096  1C59  1607               	bsf	7,4	;volatile
  6097  1C5A  0008               	return
  6098  1C5B                     __end_of_I2C_Master_Init:	
  6099                           
  6100                           	psect	text15
  6101  1F3E                     __ptext15:	
  6102 ;; *************** function ___lldiv *****************
  6103 ;; Defined at:
  6104 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  divisor         4    0[BANK0 ] unsigned long 
  6107 ;;  dividend        4    4[BANK0 ] unsigned long 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  quotient        4    9[BANK0 ] unsigned long 
  6110 ;;  counter         1   13[BANK0 ] unsigned char 
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  4    0[BANK0 ] unsigned long 
  6113 ;; Registers used:
  6114 ;;		wreg, status,2, status,0
  6115 ;; Tracked objects:
  6116 ;;		On entry : 300/0
  6117 ;;		On exit  : 300/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6120 ;;      Params:         0       8       0       0       0
  6121 ;;      Locals:         0       5       0       0       0
  6122 ;;      Temps:          0       1       0       0       0
  6123 ;;      Totals:         0      14       0       0       0
  6124 ;;Total ram usage:       14 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:    1
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_I2C_Master_Init
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           
  6135                           ;psect for function ___lldiv
  6136  1F3E                     ___lldiv:	
  6137                           
  6138                           ;incstack = 0
  6139                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6140  1F3E  3000               	movlw	0
  6141  1F3F  00AC               	movwf	___lldiv@quotient+3
  6142  1F40  3000               	movlw	0
  6143  1F41  00AB               	movwf	___lldiv@quotient+2
  6144  1F42  3000               	movlw	0
  6145  1F43  00AA               	movwf	___lldiv@quotient+1
  6146  1F44  3000               	movlw	0
  6147  1F45  00A9               	movwf	___lldiv@quotient
  6148  1F46  0823               	movf	___lldiv@divisor+3,w
  6149  1F47  0422               	iorwf	___lldiv@divisor+2,w
  6150  1F48  0421               	iorwf	___lldiv@divisor+1,w
  6151  1F49  0420               	iorwf	___lldiv@divisor,w
  6152  1F4A  1903               	skipnz
  6153  1F4B  2F93               	goto	l6954
  6154  1F4C  01AD               	clrf	___lldiv@counter
  6155  1F4D  0AAD               	incf	___lldiv@counter,f
  6156  1F4E                     l6940:	
  6157  1F4E  1BA3               	btfsc	___lldiv@divisor+3,7
  6158  1F4F  2F5E               	goto	l6942
  6159  1F50  3001               	movlw	1
  6160  1F51  00A8               	movwf	??___lldiv
  6161  1F52                     u7215:	
  6162  1F52  1003               	clrc
  6163  1F53  0DA0               	rlf	___lldiv@divisor,f
  6164  1F54  0DA1               	rlf	___lldiv@divisor+1,f
  6165  1F55  0DA2               	rlf	___lldiv@divisor+2,f
  6166  1F56  0DA3               	rlf	___lldiv@divisor+3,f
  6167  1F57  0BA8               	decfsz	??___lldiv,f
  6168  1F58  2F52               	goto	u7215
  6169  1F59  3001               	movlw	1
  6170  1F5A  00A8               	movwf	??___lldiv
  6171  1F5B  0828               	movf	??___lldiv,w
  6172  1F5C  07AD               	addwf	___lldiv@counter,f
  6173  1F5D  2F4E               	goto	l6940
  6174  1F5E                     l6942:	
  6175  1F5E  3001               	movlw	1
  6176  1F5F  00A8               	movwf	??___lldiv
  6177  1F60                     u7235:	
  6178  1F60  1003               	clrc
  6179  1F61  0DA9               	rlf	___lldiv@quotient,f
  6180  1F62  0DAA               	rlf	___lldiv@quotient+1,f
  6181  1F63  0DAB               	rlf	___lldiv@quotient+2,f
  6182  1F64  0DAC               	rlf	___lldiv@quotient+3,f
  6183  1F65  0BA8               	decfsz	??___lldiv,f
  6184  1F66  2F60               	goto	u7235
  6185  1F67  0823               	movf	___lldiv@divisor+3,w
  6186  1F68  0227               	subwf	___lldiv@dividend+3,w
  6187  1F69  1D03               	skipz
  6188  1F6A  2F75               	goto	u7245
  6189  1F6B  0822               	movf	___lldiv@divisor+2,w
  6190  1F6C  0226               	subwf	___lldiv@dividend+2,w
  6191  1F6D  1D03               	skipz
  6192  1F6E  2F75               	goto	u7245
  6193  1F6F  0821               	movf	___lldiv@divisor+1,w
  6194  1F70  0225               	subwf	___lldiv@dividend+1,w
  6195  1F71  1D03               	skipz
  6196  1F72  2F75               	goto	u7245
  6197  1F73  0820               	movf	___lldiv@divisor,w
  6198  1F74  0224               	subwf	___lldiv@dividend,w
  6199  1F75                     u7245:	
  6200  1F75  1C03               	skipc
  6201  1F76  2F86               	goto	l6950
  6202  1F77  0820               	movf	___lldiv@divisor,w
  6203  1F78  02A4               	subwf	___lldiv@dividend,f
  6204  1F79  0821               	movf	___lldiv@divisor+1,w
  6205  1F7A  1C03               	skipc
  6206  1F7B  0F21               	incfsz	___lldiv@divisor+1,w
  6207  1F7C  02A5               	subwf	___lldiv@dividend+1,f
  6208  1F7D  0822               	movf	___lldiv@divisor+2,w
  6209  1F7E  1C03               	skipc
  6210  1F7F  0F22               	incfsz	___lldiv@divisor+2,w
  6211  1F80  02A6               	subwf	___lldiv@dividend+2,f
  6212  1F81  0823               	movf	___lldiv@divisor+3,w
  6213  1F82  1C03               	skipc
  6214  1F83  0F23               	incfsz	___lldiv@divisor+3,w
  6215  1F84  02A7               	subwf	___lldiv@dividend+3,f
  6216  1F85  1429               	bsf	___lldiv@quotient,0
  6217  1F86                     l6950:	
  6218  1F86  3001               	movlw	1
  6219  1F87                     u7255:	
  6220  1F87  1003               	clrc
  6221  1F88  0CA3               	rrf	___lldiv@divisor+3,f
  6222  1F89  0CA2               	rrf	___lldiv@divisor+2,f
  6223  1F8A  0CA1               	rrf	___lldiv@divisor+1,f
  6224  1F8B  0CA0               	rrf	___lldiv@divisor,f
  6225  1F8C  3EFF               	addlw	-1
  6226  1F8D  1D03               	skipz
  6227  1F8E  2F87               	goto	u7255
  6228  1F8F  3001               	movlw	1
  6229  1F90  02AD               	subwf	___lldiv@counter,f
  6230  1F91  1D03               	btfss	3,2
  6231  1F92  2F5E               	goto	l6942
  6232  1F93                     l6954:	
  6233  1F93  082C               	movf	___lldiv@quotient+3,w
  6234  1F94  00A3               	movwf	?___lldiv+3
  6235  1F95  082B               	movf	___lldiv@quotient+2,w
  6236  1F96  00A2               	movwf	?___lldiv+2
  6237  1F97  082A               	movf	___lldiv@quotient+1,w
  6238  1F98  00A1               	movwf	?___lldiv+1
  6239  1F99  0829               	movf	___lldiv@quotient,w
  6240  1F9A  00A0               	movwf	?___lldiv
  6241  1F9B  0008               	return
  6242  1F9C                     __end_of___lldiv:	
  6243                           
  6244                           	psect	text16
  6245  0036                     __ptext16:	
  6246 ;; *************** function _Decodify_Command *****************
  6247 ;; Defined at:
  6248 ;;		line 305 in file "SlaveLiofilizadorVer1.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;		None
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  ss             10   20[BANK1 ] unsigned char [10]
  6253 ;;  mm             10   10[BANK1 ] unsigned char [10]
  6254 ;;  hh             10    0[BANK1 ] unsigned char [10]
  6255 ;;  sizedata        1   40[BANK1 ] unsigned char 
  6256 ;;  add             1   32[BANK1 ] unsigned char 
  6257 ;;  add_24LCxxxx    4   41[BANK1 ] unsigned long 
  6258 ;;  OutPut          4   35[BANK1 ] float 
  6259 ;;  tempint         2   33[BANK1 ] int 
  6260 ;;  dados           2   30[BANK1 ] int 
  6261 ;;  tempchar        1   39[BANK1 ] unsigned char 
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  1    wreg      void 
  6264 ;; Registers used:
  6265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6266 ;; Tracked objects:
  6267 ;;		On entry : 300/100
  6268 ;;		On exit  : 200/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6271 ;;      Params:         0       0       0       0       0
  6272 ;;      Locals:         0       0      45       0       0
  6273 ;;      Temps:          0       4       0       0       0
  6274 ;;      Totals:         0       4      45       0       0
  6275 ;;Total ram usage:       49 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:    6
  6278 ;; This function calls:
  6279 ;;		_EEPROM_24C1025_Fill_All
  6280 ;;		_EEPROM_24C1025_Read_Buffer
  6281 ;;		_EEPROM_24C1025_Read_Byte
  6282 ;;		_EEPROM_24C1025_Read_Int
  6283 ;;		_EEPROM_24C1025_Read_Str
  6284 ;;		_EEPROM_24C1025_Write_Buffer
  6285 ;;		_EEPROM_24C1025_Write_Byte
  6286 ;;		_EEPROM_24C1025_Write_Int
  6287 ;;		_EEPROM_24C1025_Write_Str
  6288 ;;		_EEPROM_Read_Byte
  6289 ;;		_EEPROM_Read_Integer
  6290 ;;		_EEPROM_Read_String
  6291 ;;		_EEPROM_Write_Byte
  6292 ;;		_EEPROM_Write_Integer
  6293 ;;		_EEPROM_Write_String
  6294 ;;		_PROCULUS_Buzzer
  6295 ;;		_PROCULUS_Show_Screen
  6296 ;;		_PROCULUS_VP_Write_String
  6297 ;;		_Save_Log
  6298 ;;		_Send_Reply_OK
  6299 ;;		_Send_To_MB
  6300 ;;		_USART_put_buffer
  6301 ;;		_USART_put_int
  6302 ;;		_USART_put_string
  6303 ;;		_USART_putc
  6304 ;;		_USART_to_Protocol
  6305 ;;		___flmul
  6306 ;;		___fltol
  6307 ;;		_itoa
  6308 ;;		_strcat
  6309 ;;		_strcpy
  6310 ;;		_strlen
  6311 ;; This function is called by:
  6312 ;;		_main
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           
  6317                           ;psect for function _Decodify_Command
  6318  0036                     _Decodify_Command:	
  6319                           
  6320                           ;SlaveLiofilizadorVer1.c: 307:     int dados;;SlaveLiofilizadorVer1.c: 308:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 309:     int tempint;;SlaveLiofilizadorVer1.c: 310:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 311:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 323:     USART_to_Protocol(&usart_protocol);
  6321                           
  6322                           ;incstack = 0
  6323                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6324  0036  30CA               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6325  0037  160A  158A  26E1  120A  118A  	fcall	_USART_to_Protocol
  6326                           
  6327                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6328  003C  1683               	bsf	3,5	;RP0=1, select bank3
  6329  003D  1703               	bsf	3,6	;RP1=1, select bank3
  6330  003E  0851               	movf	(_usart_protocol^(0+384)+7),w
  6331  003F  1283               	bcf	3,5	;RP0=0, select bank0
  6332  0040  1303               	bcf	3,6	;RP1=0, select bank0
  6333  0041  00DF               	movwf	??_Decodify_Command
  6334  0042  085F               	movf	??_Decodify_Command,w
  6335  0043  1683               	bsf	3,5	;RP0=1, select bank1
  6336  0044  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6337                           
  6338                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6339  0045  1703               	bsf	3,6	;RP1=1, select bank3
  6340  0046  0852               	movf	(_usart_protocol^(0+384)+8),w
  6341  0047  1283               	bcf	3,5	;RP0=0, select bank0
  6342  0048  1303               	bcf	3,6	;RP1=0, select bank0
  6343  0049  00DF               	movwf	??_Decodify_Command
  6344  004A  085F               	movf	??_Decodify_Command,w
  6345  004B  1683               	bsf	3,5	;RP0=1, select bank1
  6346  004C  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6347                           
  6348                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6349  004D  1703               	bsf	3,6	;RP1=1, select bank3
  6350  004E  0853               	movf	(_usart_protocol^(0+384)+9),w
  6351  004F  1283               	bcf	3,5	;RP0=0, select bank0
  6352  0050  1303               	bcf	3,6	;RP1=0, select bank0
  6353  0051  00DF               	movwf	??_Decodify_Command
  6354  0052  085F               	movf	??_Decodify_Command,w
  6355  0053  1683               	bsf	3,5	;RP0=1, select bank1
  6356  0054  00CA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6357                           
  6358                           ;SlaveLiofilizadorVer1.c: 328:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6359  0055  1703               	bsf	3,6	;RP1=1, select bank3
  6360  0056  0854               	movf	(_usart_protocol^(0+384)+10),w
  6361  0057  1283               	bcf	3,5	;RP0=0, select bank0
  6362  0058  1303               	bcf	3,6	;RP1=0, select bank0
  6363  0059  00DF               	movwf	??_Decodify_Command
  6364  005A  085F               	movf	??_Decodify_Command,w
  6365  005B  1683               	bsf	3,5	;RP0=1, select bank1
  6366  005C  00C9               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6367                           
  6368                           ;SlaveLiofilizadorVer1.c: 335:     switch(usart_protocol.command){
  6369  005D  2C63               	goto	l7486
  6370  005E                     l7284:	
  6371                           
  6372                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  6373  005E  300B               	movlw	11
  6374  005F  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6375                           
  6376                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string("v1.0.7");
  6377  0064  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6378  0065  1283               	bcf	3,5	;RP0=0, select bank0
  6379  0066  00A1               	movwf	USART_put_string@vetor
  6380  0067  3080               	movlw	128
  6381  0068  00A2               	movwf	USART_put_string@vetor+1
  6382  0069  160A  158A  24BF   	fcall	_USART_put_string
  6383                           
  6384                           ;SlaveLiofilizadorVer1.c: 346:              break;
  6385  006C  0008               	return
  6386  006D                     l7288:	
  6387                           
  6388                           ;SlaveLiofilizadorVer1.c: 363:              if(usart_protocol.value[0]==0)
  6389  006D  1683               	bsf	3,5	;RP0=1, select bank3
  6390  006E  1703               	bsf	3,6	;RP1=1, select bank3
  6391  006F  0850               	movf	(_usart_protocol^(0+384)+6),w
  6392  0070  1D03               	btfss	3,2
  6393  0071  287B               	goto	l7292
  6394                           
  6395                           ;SlaveLiofilizadorVer1.c: 364:                 OutPut=Tensao1;
  6396  0072  1303               	bcf	3,6	;RP1=0, select bank1
  6397  0073  0850               	movf	(_Tensao1+3)^(0+128),w
  6398  0074  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6399  0075  084F               	movf	(_Tensao1+2)^(0+128),w
  6400  0076  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6401  0077  084E               	movf	(_Tensao1+1)^(0+128),w
  6402  0078  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6403  0079  084D               	movf	_Tensao1^(0+128),w
  6404  007A  2883               	goto	L6
  6405  007B                     l7292:	
  6406                           
  6407                           ;SlaveLiofilizadorVer1.c: 366:                 OutPut=Vaccum0;
  6408  007B  1303               	bcf	3,6	;RP1=0, select bank1
  6409  007C  0854               	movf	(_Vaccum0+3)^(0+128),w
  6410  007D  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6411  007E  0853               	movf	(_Vaccum0+2)^(0+128),w
  6412  007F  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6413  0080  0852               	movf	(_Vaccum0+1)^(0+128),w
  6414  0081  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6415  0082  0851               	movf	_Vaccum0^(0+128),w
  6416  0083                     L6:	
  6417  0083  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6418                           
  6419                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  6420  0084  3041               	movlw	65
  6421  0085  1283               	bcf	3,5	;RP0=0, select bank0
  6422  0086  00AC               	movwf	___flmul@b+3
  6423  0087  3020               	movlw	32
  6424  0088  00AB               	movwf	___flmul@b+2
  6425  0089  3000               	movlw	0
  6426  008A  00AA               	movwf	___flmul@b+1
  6427  008B  3000               	movlw	0
  6428  008C  00A9               	movwf	___flmul@b
  6429  008D  1683               	bsf	3,5	;RP0=1, select bank1
  6430  008E  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6431  008F  1283               	bcf	3,5	;RP0=0, select bank0
  6432  0090  00B0               	movwf	___flmul@a+3
  6433  0091  1683               	bsf	3,5	;RP0=1, select bank1
  6434  0092  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6435  0093  1283               	bcf	3,5	;RP0=0, select bank0
  6436  0094  00AF               	movwf	___flmul@a+2
  6437  0095  1683               	bsf	3,5	;RP0=1, select bank1
  6438  0096  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6439  0097  1283               	bcf	3,5	;RP0=0, select bank0
  6440  0098  00AE               	movwf	___flmul@a+1
  6441  0099  1683               	bsf	3,5	;RP0=1, select bank1
  6442  009A  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6443  009B  1283               	bcf	3,5	;RP0=0, select bank0
  6444  009C  00AD               	movwf	___flmul@a
  6445  009D  120A  118A  24BC  120A  118A  	fcall	___flmul
  6446  00A2  082C               	movf	?___flmul+3,w
  6447  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  6448  00A4  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6449  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  6450  00A6  082B               	movf	?___flmul+2,w
  6451  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  6452  00A8  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6453  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  6454  00AA  082A               	movf	?___flmul+1,w
  6455  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  6456  00AC  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6457  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  6458  00AE  0829               	movf	?___flmul,w
  6459  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  6460  00B0  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6461                           
  6462                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  6463  00B1  138B               	bcf	11,7	;volatile
  6464                           
  6465                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  6466  00B2  3002               	movlw	2
  6467  00B3  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6468                           
  6469                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  6470  00B8  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6471  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  6472  00BA  00C6               	movwf	___fltol@f1+3
  6473  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  6474  00BC  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6475  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  6476  00BE  00C5               	movwf	___fltol@f1+2
  6477  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  6478  00C0  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6479  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  6480  00C2  00C4               	movwf	___fltol@f1+1
  6481  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  6482  00C4  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6483  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  6484  00C6  00C3               	movwf	___fltol@f1
  6485  00C7  160A  118A  2053  120A  118A  	fcall	___fltol
  6486  00CC  0844               	movf	?___fltol+1,w
  6487  00CD  00CF               	movwf	USART_put_int@value+1
  6488  00CE  0843               	movf	?___fltol,w
  6489  00CF  00CE               	movwf	USART_put_int@value
  6490  00D0  160A  158A  219A   	fcall	_USART_put_int
  6491                           
  6492                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  6493  00D3  178B               	bsf	11,7	;volatile
  6494                           
  6495                           ;SlaveLiofilizadorVer1.c: 375:              break;
  6496  00D4  0008               	return
  6497  00D5                     l7304:	
  6498                           
  6499                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6500  00D5  1683               	bsf	3,5	;RP0=1, select bank3
  6501  00D6  1703               	bsf	3,6	;RP1=1, select bank3
  6502  00D7  0850               	movf	(_usart_protocol^(0+384)+6),w
  6503  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  6504  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  6505  00DA  00DF               	movwf	??_Decodify_Command
  6506  00DB  085F               	movf	??_Decodify_Command,w
  6507  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  6508  00DD  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6509                           
  6510                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6511  00DE  1703               	bsf	3,6	;RP1=1, select bank3
  6512  00DF  0851               	movf	(_usart_protocol^(0+384)+7),w
  6513  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  6514  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  6515  00E2  00DF               	movwf	??_Decodify_Command
  6516  00E3  085F               	movf	??_Decodify_Command,w
  6517  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  6518  00E5  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6519                           
  6520                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6521  00E6  1703               	bsf	3,6	;RP1=1, select bank3
  6522  00E7  0852               	movf	(_usart_protocol^(0+384)+8),w
  6523  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  6524  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  6525  00EA  00DF               	movwf	??_Decodify_Command
  6526  00EB  085F               	movf	??_Decodify_Command,w
  6527  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  6528  00ED  00CA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6529                           
  6530                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6531  00EE  1703               	bsf	3,6	;RP1=1, select bank3
  6532  00EF  0853               	movf	(_usart_protocol^(0+384)+9),w
  6533  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  6534  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  6535  00F2  00DF               	movwf	??_Decodify_Command
  6536  00F3  085F               	movf	??_Decodify_Command,w
  6537  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  6538  00F5  00C9               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6539                           
  6540                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  6541  00F6  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6542  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  6543  00F8  00DB               	movwf	Save_Log@add_datalog+3
  6544  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  6545  00FA  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6546  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  6547  00FC  00DA               	movwf	Save_Log@add_datalog+2
  6548  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  6549  00FE  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6550  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  6551  0100  00D9               	movwf	Save_Log@add_datalog+1
  6552  0101  1683               	bsf	3,5	;RP0=1, select bank1
  6553  0102  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6554  0103  1283               	bcf	3,5	;RP0=0, select bank0
  6555  0104  00D8               	movwf	Save_Log@add_datalog
  6556  0105  160A  118A  20BE   	fcall	_Save_Log
  6557                           
  6558                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  6559  0108  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6560  0109  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6561                           
  6562                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  6563  010A  1683               	bsf	3,5	;RP0=1, select bank1
  6564  010B  1303               	bcf	3,6	;RP1=0, select bank1
  6565  010C  01DD               	clrf	_milisegundo^(0+128)	;volatile
  6566  010D  01DE               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6567                           
  6568                           ;SlaveLiofilizadorVer1.c: 387:              break;
  6569  010E  0008               	return
  6570  010F                     l7312:	
  6571                           
  6572                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  6573  010F  3002               	movlw	2
  6574  0110  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6575                           
  6576                           ;SlaveLiofilizadorVer1.c: 401:              USART_put_int(1);
  6577  0115  3001               	movlw	1
  6578  0116  1283               	bcf	3,5	;RP0=0, select bank0
  6579  0117  00CE               	movwf	USART_put_int@value
  6580  0118  3000               	movlw	0
  6581  0119  00CF               	movwf	USART_put_int@value+1
  6582  011A  160A  158A  219A   	fcall	_USART_put_int
  6583                           
  6584                           ;SlaveLiofilizadorVer1.c: 411:              break;
  6585  011D  0008               	return
  6586  011E                     l7316:	
  6587                           
  6588                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  6589  011E  1683               	bsf	3,5	;RP0=1, select bank3
  6590  011F  1703               	bsf	3,6	;RP1=1, select bank3
  6591  0120  0851               	movf	(_usart_protocol^(0+384)+7),w
  6592  0121  1283               	bcf	3,5	;RP0=0, select bank0
  6593  0122  1303               	bcf	3,6	;RP1=0, select bank0
  6594  0123  00DF               	movwf	??_Decodify_Command
  6595  0124  085F               	movf	??_Decodify_Command,w
  6596  0125  00A0               	movwf	EEPROM_Write_Byte@dado
  6597  0126  1683               	bsf	3,5	;RP0=1, select bank3
  6598  0127  1703               	bsf	3,6	;RP1=1, select bank3
  6599  0128  0850               	movf	(_usart_protocol^(0+384)+6),w
  6600  0129  160A  158A  2599  120A  118A  	fcall	_EEPROM_Write_Byte
  6601  012E                     L7:	
  6602                           
  6603                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  6604  012E  3003               	movlw	3
  6605  012F  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6606                           
  6607                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  6608  0134  160A  158A  2151   	fcall	_Send_Reply_OK
  6609                           
  6610                           ;SlaveLiofilizadorVer1.c: 432:              break;
  6611  0137  0008               	return
  6612  0138                     l7320:	
  6613                           
  6614                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6615  0138  1683               	bsf	3,5	;RP0=1, select bank3
  6616  0139  1703               	bsf	3,6	;RP1=1, select bank3
  6617  013A  0850               	movf	(_usart_protocol^(0+384)+6),w
  6618  013B  160A  158A  22C9  120A  118A  	fcall	_EEPROM_Read_Byte
  6619  0140  1303               	bcf	3,6	;RP1=0, select bank0
  6620  0141  00DF               	movwf	??_Decodify_Command
  6621  0142  085F               	movf	??_Decodify_Command,w
  6622  0143  1683               	bsf	3,5	;RP0=1, select bank1
  6623  0144  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6624                           
  6625                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  6626  0145  3001               	movlw	1
  6627  0146  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6628                           
  6629                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  6630  014B  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6631  014C  160A  118A  2004   	fcall	_USART_putc
  6632                           
  6633                           ;SlaveLiofilizadorVer1.c: 437:              break;
  6634  014F  0008               	return
  6635  0150                     l7326:	
  6636                           
  6637                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  6638  0150  1683               	bsf	3,5	;RP0=1, select bank3
  6639  0151  1703               	bsf	3,6	;RP1=1, select bank3
  6640  0152  0850               	movf	(_usart_protocol^(0+384)+6),w
  6641  0153  1283               	bcf	3,5	;RP0=0, select bank0
  6642  0154  1303               	bcf	3,6	;RP1=0, select bank0
  6643  0155  00DF               	movwf	??_Decodify_Command
  6644  0156  085F               	movf	??_Decodify_Command,w
  6645  0157  1683               	bsf	3,5	;RP0=1, select bank1
  6646  0158  00C0               	movwf	Decodify_Command@add^(0+128)
  6647                           
  6648                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6649  0159  1703               	bsf	3,6	;RP1=1, select bank3
  6650  015A  0852               	movf	(_usart_protocol^(0+384)+8),w
  6651  015B  1283               	bcf	3,5	;RP0=0, select bank0
  6652  015C  1303               	bcf	3,6	;RP1=0, select bank0
  6653  015D  00DF               	movwf	??_Decodify_Command
  6654  015E  01E0               	clrf	??_Decodify_Command+1
  6655  015F  1683               	bsf	3,5	;RP0=1, select bank3
  6656  0160  1703               	bsf	3,6	;RP1=1, select bank3
  6657  0161  0851               	movf	(_usart_protocol^(0+384)+7),w
  6658  0162  1283               	bcf	3,5	;RP0=0, select bank0
  6659  0163  1303               	bcf	3,6	;RP1=0, select bank0
  6660  0164  00E1               	movwf	??_Decodify_Command+2
  6661  0165  01E2               	clrf	??_Decodify_Command+3
  6662  0166  0861               	movf	??_Decodify_Command+2,w
  6663  0167  00E2               	movwf	??_Decodify_Command+3
  6664  0168  01E1               	clrf	??_Decodify_Command+2
  6665  0169  085F               	movf	??_Decodify_Command,w
  6666  016A  0461               	iorwf	??_Decodify_Command+2,w
  6667  016B  1683               	bsf	3,5	;RP0=1, select bank1
  6668  016C  00BE               	movwf	Decodify_Command@dados^(0+128)
  6669  016D  1283               	bcf	3,5	;RP0=0, select bank0
  6670  016E  0860               	movf	??_Decodify_Command+1,w
  6671  016F  0462               	iorwf	??_Decodify_Command+3,w
  6672  0170  1683               	bsf	3,5	;RP0=1, select bank1
  6673  0171  00BF               	movwf	(Decodify_Command@dados+1)^(0+128)
  6674                           
  6675                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  6676  0172  083F               	movf	(Decodify_Command@dados+1)^(0+128),w
  6677  0173  1283               	bcf	3,5	;RP0=0, select bank0
  6678  0174  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6679  0175  1683               	bsf	3,5	;RP0=1, select bank1
  6680  0176  083E               	movf	Decodify_Command@dados^(0+128),w
  6681  0177  1283               	bcf	3,5	;RP0=0, select bank0
  6682  0178  00A5               	movwf	EEPROM_Write_Integer@dado
  6683  0179  1683               	bsf	3,5	;RP0=1, select bank1
  6684  017A  0840               	movf	Decodify_Command@add^(0+128),w
  6685  017B  160A  158A  245B  120A  118A  	fcall	_EEPROM_Write_Integer
  6686  0180  292E               	goto	L7
  6687  0181                     l7336:	
  6688                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  6689                           
  6690                           
  6691                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6692  0181  1683               	bsf	3,5	;RP0=1, select bank3
  6693  0182  1703               	bsf	3,6	;RP1=1, select bank3
  6694  0183  0850               	movf	(_usart_protocol^(0+384)+6),w
  6695  0184  160A  158A  237C  120A  118A  	fcall	_EEPROM_Read_Integer
  6696  0189  0824               	movf	?_EEPROM_Read_Integer+1,w
  6697  018A  1683               	bsf	3,5	;RP0=1, select bank1
  6698  018B  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6699  018C  1283               	bcf	3,5	;RP0=0, select bank0
  6700  018D  0823               	movf	?_EEPROM_Read_Integer,w
  6701  018E                     L8:	
  6702  018E  1683               	bsf	3,5	;RP0=1, select bank1
  6703  018F  00C1               	movwf	Decodify_Command@tempint^(0+128)
  6704                           
  6705                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  6706  0190  3002               	movlw	2
  6707  0191  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6708                           
  6709                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  6710  0196  0842               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6711  0197  1283               	bcf	3,5	;RP0=0, select bank0
  6712  0198  00CF               	movwf	USART_put_int@value+1
  6713  0199  1683               	bsf	3,5	;RP0=1, select bank1
  6714  019A  0841               	movf	Decodify_Command@tempint^(0+128),w
  6715  019B  1283               	bcf	3,5	;RP0=0, select bank0
  6716  019C  00CE               	movwf	USART_put_int@value
  6717  019D  160A  158A  219A   	fcall	_USART_put_int
  6718                           
  6719                           ;SlaveLiofilizadorVer1.c: 452:              break;
  6720  01A0  0008               	return
  6721  01A1                     l7342:	
  6722                           
  6723                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  6724  01A1  30D1               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6725  01A2  00DF               	movwf	??_Decodify_Command
  6726  01A3  085F               	movf	??_Decodify_Command,w
  6727  01A4  00A5               	movwf	EEPROM_Write_String@dado
  6728  01A5  1683               	bsf	3,5	;RP0=1, select bank3
  6729  01A6  1703               	bsf	3,6	;RP1=1, select bank3
  6730  01A7  0850               	movf	(_usart_protocol^(0+384)+6),w
  6731  01A8  160A  158A  23A6  120A  118A  	fcall	_EEPROM_Write_String
  6732  01AD  292E               	goto	L7
  6733  01AE                     l7348:	
  6734                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  6735                           
  6736                           
  6737                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 463:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  6738  01AE  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  6739  01AF  00DF               	movwf	??_Decodify_Command
  6740  01B0  085F               	movf	??_Decodify_Command,w
  6741  01B1  00A3               	movwf	EEPROM_Read_String@dado
  6742  01B2  1683               	bsf	3,5	;RP0=1, select bank3
  6743  01B3  1703               	bsf	3,6	;RP1=1, select bank3
  6744  01B4  0850               	movf	(_usart_protocol^(0+384)+6),w
  6745  01B5  160A  158A  2289  120A  118A  	fcall	_EEPROM_Read_String
  6746                           
  6747                           ;SlaveLiofilizadorVer1.c: 464:              Send_To_MB(sizeof(texto));
  6748  01BA  3010               	movlw	16
  6749  01BB                     L9:	
  6750  01BB  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6751                           
  6752                           ;SlaveLiofilizadorVer1.c: 465:              USART_put_string(texto);
  6753  01C0  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  6754  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  6755  01C2  00A1               	movwf	USART_put_string@vetor
  6756  01C3  3001               	movlw	1
  6757  01C4  00A2               	movwf	USART_put_string@vetor+1
  6758  01C5  160A  158A  24BF   	fcall	_USART_put_string
  6759                           
  6760                           ;SlaveLiofilizadorVer1.c: 466:              break;
  6761  01C8  0008               	return
  6762  01C9                     l7354:	
  6763                           
  6764                           ;SlaveLiofilizadorVer1.c: 471:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6765  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  6766  01CA  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6767  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  6768  01CC  00B2               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6769  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  6770  01CE  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6771  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  6772  01D0  00B1               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6773  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  6774  01D2  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6775  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  6776  01D4  00B0               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6777  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  6778  01D6  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6779  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  6780  01D8  00AF               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6781  01D9  1683               	bsf	3,5	;RP0=1, select bank3
  6782  01DA  1703               	bsf	3,6	;RP1=1, select bank3
  6783  01DB  0855               	movf	(_usart_protocol^(0+384)+11),w
  6784  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  6785  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  6786  01DE  00DF               	movwf	??_Decodify_Command
  6787  01DF  085F               	movf	??_Decodify_Command,w
  6788  01E0  00B3               	movwf	EEPROM_24C1025_Write_Byte@data
  6789  01E1  1683               	bsf	3,5	;RP0=1, select bank3
  6790  01E2  1703               	bsf	3,6	;RP1=1, select bank3
  6791  01E3  0850               	movf	(_usart_protocol^(0+384)+6),w
  6792  01E4  160A  158A  2184  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6793  01E9  292E               	goto	L7
  6794  01EA                     l7360:	
  6795                           ;SlaveLiofilizadorVer1.c: 474:              Send_To_MB(3);
  6796                           
  6797                           
  6798                           ;SlaveLiofilizadorVer1.c: 478:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6799  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  6800  01EB  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6801  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  6802  01ED  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6803  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  6804  01EF  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6805  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  6806  01F1  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6807  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  6808  01F3  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6809  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  6810  01F5  00B5               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6811  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  6812  01F7  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6813  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  6814  01F9  00B4               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6815  01FA  1683               	bsf	3,5	;RP0=1, select bank3
  6816  01FB  1703               	bsf	3,6	;RP1=1, select bank3
  6817  01FC  0850               	movf	(_usart_protocol^(0+384)+6),w
  6818  01FD  160A  158A  21DE  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6819  0202  00DF               	movwf	??_Decodify_Command
  6820  0203  085F               	movf	??_Decodify_Command,w
  6821  0204  1683               	bsf	3,5	;RP0=1, select bank1
  6822  0205  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6823                           
  6824                           ;SlaveLiofilizadorVer1.c: 482:              Send_To_MB(1);
  6825  0206  3001               	movlw	1
  6826  0207  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6827                           
  6828                           ;SlaveLiofilizadorVer1.c: 483:              USART_putc(tempchar);
  6829  020C  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6830  020D  160A  118A  2004   	fcall	_USART_putc
  6831                           
  6832                           ;SlaveLiofilizadorVer1.c: 484:              break;
  6833  0210  0008               	return
  6834  0211                     l7366:	
  6835                           
  6836                           ;SlaveLiofilizadorVer1.c: 486:              {;SlaveLiofilizadorVer1.c: 487:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6837  0211  1683               	bsf	3,5	;RP0=1, select bank1
  6838  0212  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6839  0213  1283               	bcf	3,5	;RP0=0, select bank0
  6840  0214  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6841  0215  1683               	bsf	3,5	;RP0=1, select bank1
  6842  0216  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6843  0217  1283               	bcf	3,5	;RP0=0, select bank0
  6844  0218  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6845  0219  1683               	bsf	3,5	;RP0=1, select bank1
  6846  021A  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6847  021B  1283               	bcf	3,5	;RP0=0, select bank0
  6848  021C  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6849  021D  1683               	bsf	3,5	;RP0=1, select bank1
  6850  021E  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6851  021F  1283               	bcf	3,5	;RP0=0, select bank0
  6852  0220  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6853  0221  1683               	bsf	3,5	;RP0=1, select bank3
  6854  0222  1703               	bsf	3,6	;RP1=1, select bank3
  6855  0223  0856               	movf	(_usart_protocol^(0+384)+12),w
  6856  0224  1283               	bcf	3,5	;RP0=0, select bank0
  6857  0225  1303               	bcf	3,6	;RP1=0, select bank0
  6858  0226  00DF               	movwf	??_Decodify_Command
  6859  0227  01E0               	clrf	??_Decodify_Command+1
  6860  0228  1683               	bsf	3,5	;RP0=1, select bank3
  6861  0229  1703               	bsf	3,6	;RP1=1, select bank3
  6862  022A  0855               	movf	(_usart_protocol^(0+384)+11),w
  6863  022B  1283               	bcf	3,5	;RP0=0, select bank0
  6864  022C  1303               	bcf	3,6	;RP1=0, select bank0
  6865  022D  00E1               	movwf	??_Decodify_Command+2
  6866  022E  01E2               	clrf	??_Decodify_Command+3
  6867  022F  0861               	movf	??_Decodify_Command+2,w
  6868  0230  00E2               	movwf	??_Decodify_Command+3
  6869  0231  01E1               	clrf	??_Decodify_Command+2
  6870  0232  085F               	movf	??_Decodify_Command,w
  6871  0233  0461               	iorwf	??_Decodify_Command+2,w
  6872  0234  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  6873  0235  0860               	movf	??_Decodify_Command+1,w
  6874  0236  0462               	iorwf	??_Decodify_Command+3,w
  6875  0237  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  6876  0238  1683               	bsf	3,5	;RP0=1, select bank3
  6877  0239  1703               	bsf	3,6	;RP1=1, select bank3
  6878  023A  0850               	movf	(_usart_protocol^(0+384)+6),w
  6879  023B  160A  158A  2269  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6880  0240  292E               	goto	L7
  6881  0241                     l7372:	
  6882                           ;SlaveLiofilizadorVer1.c: 492:              Send_To_MB(3);
  6883                           
  6884                           
  6885                           ;SlaveLiofilizadorVer1.c: 497:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6886  0241  1683               	bsf	3,5	;RP0=1, select bank1
  6887  0242  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6888  0243  1283               	bcf	3,5	;RP0=0, select bank0
  6889  0244  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6890  0245  1683               	bsf	3,5	;RP0=1, select bank1
  6891  0246  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6892  0247  1283               	bcf	3,5	;RP0=0, select bank0
  6893  0248  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6894  0249  1683               	bsf	3,5	;RP0=1, select bank1
  6895  024A  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6896  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6897  024C  00B5               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6898  024D  1683               	bsf	3,5	;RP0=1, select bank1
  6899  024E  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6900  024F  1283               	bcf	3,5	;RP0=0, select bank0
  6901  0250  00B4               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6902  0251  1683               	bsf	3,5	;RP0=1, select bank3
  6903  0252  1703               	bsf	3,6	;RP1=1, select bank3
  6904  0253  0850               	movf	(_usart_protocol^(0+384)+6),w
  6905  0254  160A  158A  2354  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6906  0259  0835               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6907  025A  1683               	bsf	3,5	;RP0=1, select bank1
  6908  025B  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6909  025C  1283               	bcf	3,5	;RP0=0, select bank0
  6910  025D  0834               	movf	?_EEPROM_24C1025_Read_Int,w
  6911  025E  298E               	goto	L8
  6912  025F                     l7378:	
  6913                           ;SlaveLiofilizadorVer1.c: 499:              Send_To_MB(2);
  6914                           
  6915                           
  6916                           ;SlaveLiofilizadorVer1.c: 505:              {;SlaveLiofilizadorVer1.c: 506:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 507:              sizedata=usart_protocol.value
      +                          [5];
  6917  025F  1683               	bsf	3,5	;RP0=1, select bank3
  6918  0260  1703               	bsf	3,6	;RP1=1, select bank3
  6919  0261  0855               	movf	(_usart_protocol^(0+384)+11),w
  6920  0262  1283               	bcf	3,5	;RP0=0, select bank0
  6921  0263  1303               	bcf	3,6	;RP1=0, select bank0
  6922  0264  00DF               	movwf	??_Decodify_Command
  6923  0265  085F               	movf	??_Decodify_Command,w
  6924  0266  1683               	bsf	3,5	;RP0=1, select bank1
  6925  0267  00C8               	movwf	Decodify_Command@sizedata^(0+128)
  6926                           
  6927                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  6928  0268  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6929  0269  1283               	bcf	3,5	;RP0=0, select bank0
  6930  026A  00A9               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  6931  026B  1683               	bsf	3,5	;RP0=1, select bank1
  6932  026C  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6933  026D  1283               	bcf	3,5	;RP0=0, select bank0
  6934  026E  00A8               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  6935  026F  1683               	bsf	3,5	;RP0=1, select bank1
  6936  0270  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6937  0271  1283               	bcf	3,5	;RP0=0, select bank0
  6938  0272  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  6939  0273  1683               	bsf	3,5	;RP0=1, select bank1
  6940  0274  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6941  0275  1283               	bcf	3,5	;RP0=0, select bank0
  6942  0276  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  6943  0277  1683               	bsf	3,5	;RP0=1, select bank1
  6944  0278  0848               	movf	Decodify_Command@sizedata^(0+128),w
  6945  0279  1283               	bcf	3,5	;RP0=0, select bank0
  6946  027A  00DF               	movwf	??_Decodify_Command
  6947  027B  085F               	movf	??_Decodify_Command,w
  6948  027C  00AA               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  6949  027D  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
  6950  027E  00AB               	movwf	EEPROM_24C1025_Read_Buffer@data
  6951  027F  3001               	movlw	1
  6952  0280  00AC               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  6953  0281  1683               	bsf	3,5	;RP0=1, select bank3
  6954  0282  1703               	bsf	3,6	;RP1=1, select bank3
  6955  0283  0850               	movf	(_usart_protocol^(0+384)+6),w
  6956  0284  120A  158A  2028  120A  118A  	fcall	_EEPROM_24C1025_Read_Buffer
  6957                           
  6958                           ;SlaveLiofilizadorVer1.c: 515:              Send_To_MB(sizedata);
  6959  0289  1683               	bsf	3,5	;RP0=1, select bank1
  6960  028A  1303               	bcf	3,6	;RP1=0, select bank1
  6961  028B  0848               	movf	Decodify_Command@sizedata^(0+128),w
  6962  028C  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6963                           
  6964                           ;SlaveLiofilizadorVer1.c: 516:              USART_put_buffer(buffer,sizedata);
  6965  0291  0848               	movf	Decodify_Command@sizedata^(0+128),w
  6966  0292  1283               	bcf	3,5	;RP0=0, select bank0
  6967  0293  00DF               	movwf	??_Decodify_Command
  6968  0294  01E0               	clrf	??_Decodify_Command+1
  6969  0295  085F               	movf	??_Decodify_Command,w
  6970  0296  00A1               	movwf	USART_put_buffer@size
  6971  0297  0860               	movf	??_Decodify_Command+1,w
  6972  0298  00A2               	movwf	USART_put_buffer@size+1
  6973  0299  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
  6974  029A  160A  158A  2330   	fcall	_USART_put_buffer
  6975                           
  6976                           ;SlaveLiofilizadorVer1.c: 517:              };SlaveLiofilizadorVer1.c: 518:             
      +                           break;
  6977  029D  0008               	return
  6978  029E                     l7386:	
  6979                           
  6980                           ;SlaveLiofilizadorVer1.c: 521:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6981  029E  1683               	bsf	3,5	;RP0=1, select bank1
  6982  029F  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6983  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  6984  02A1  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6985  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  6986  02A3  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6987  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  6988  02A5  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6989  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  6990  02A7  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6991  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  6992  02A9  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6993  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  6994  02AB  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6995  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  6996  02AD  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6997  02AE  1683               	bsf	3,5	;RP0=1, select bank3
  6998  02AF  1703               	bsf	3,6	;RP1=1, select bank3
  6999  02B0  0855               	movf	(_usart_protocol^(0+384)+11),w
  7000  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  7001  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  7002  02B3  00DF               	movwf	??_Decodify_Command
  7003  02B4  085F               	movf	??_Decodify_Command,w
  7004  02B5  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  7005  02B6  30D6               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  7006  02B7  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
  7007  02B8  3001               	movlw	1
  7008  02B9  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  7009  02BA  1683               	bsf	3,5	;RP0=1, select bank3
  7010  02BB  1703               	bsf	3,6	;RP1=1, select bank3
  7011  02BC  0850               	movf	(_usart_protocol^(0+384)+6),w
  7012  02BD  160A  118A  2531  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  7013  02C2  292E               	goto	L7
  7014  02C3                     l7392:	
  7015                           ;SlaveLiofilizadorVer1.c: 526:              Send_To_MB(3);
  7016                           
  7017                           
  7018                           ;SlaveLiofilizadorVer1.c: 531:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  7019  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  7020  02C4  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7021  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  7022  02C6  00A5               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  7023  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  7024  02C8  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7025  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  7026  02CA  00A4               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  7027  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  7028  02CC  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7029  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  7030  02CE  00A3               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  7031  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  7032  02D0  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7033  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  7034  02D2  00A2               	movwf	EEPROM_24C1025_Write_Str@mem_add
  7035  02D3  30D5               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  7036  02D4  00DF               	movwf	??_Decodify_Command
  7037  02D5  085F               	movf	??_Decodify_Command,w
  7038  02D6  00A6               	movwf	EEPROM_24C1025_Write_Str@data
  7039  02D7  1683               	bsf	3,5	;RP0=1, select bank3
  7040  02D8  1703               	bsf	3,6	;RP1=1, select bank3
  7041  02D9  0850               	movf	(_usart_protocol^(0+384)+6),w
  7042  02DA  160A  118A  226D  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  7043  02DF  292E               	goto	L7
  7044  02E0                     l7398:	
  7045                           ;SlaveLiofilizadorVer1.c: 534:              Send_To_MB(3);
  7046                           
  7047                           
  7048                           ;SlaveLiofilizadorVer1.c: 538:              {;SlaveLiofilizadorVer1.c: 539:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  7049  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  7050  02E1  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7051  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  7052  02E3  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  7053  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  7054  02E5  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7055  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  7056  02E7  00A8               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  7057  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  7058  02E9  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7059  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  7060  02EB  00A7               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  7061  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  7062  02ED  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7063  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  7064  02EF  00A6               	movwf	EEPROM_24C1025_Read_Str@mem_add
  7065  02F0  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7066  02F1  00DF               	movwf	??_Decodify_Command
  7067  02F2  085F               	movf	??_Decodify_Command,w
  7068  02F3  00AA               	movwf	EEPROM_24C1025_Read_Str@texto
  7069  02F4  1683               	bsf	3,5	;RP0=1, select bank3
  7070  02F5  1703               	bsf	3,6	;RP1=1, select bank3
  7071  02F6  0850               	movf	(_usart_protocol^(0+384)+6),w
  7072  02F7  160A  118A  2694  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  7073                           
  7074                           ;SlaveLiofilizadorVer1.c: 543:              Send_To_MB(strlen(texto));
  7075  02FC  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7076  02FD  160A  158A  21F7  120A  118A  	fcall	_strlen
  7077  0302  0820               	movf	?_strlen,w
  7078  0303  29BB               	goto	L9
  7079  0304                     l7402:	
  7080                           
  7081                           ;SlaveLiofilizadorVer1.c: 549:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  7082  0304  1683               	bsf	3,5	;RP0=1, select bank3
  7083  0305  1703               	bsf	3,6	;RP1=1, select bank3
  7084  0306  0851               	movf	(_usart_protocol^(0+384)+7),w
  7085  0307  1283               	bcf	3,5	;RP0=0, select bank0
  7086  0308  1303               	bcf	3,6	;RP1=0, select bank0
  7087  0309  00DF               	movwf	??_Decodify_Command
  7088  030A  01E0               	clrf	??_Decodify_Command+1
  7089  030B  085F               	movf	??_Decodify_Command,w
  7090  030C  00D8               	movwf	EEPROM_24C1025_Fill_All@value
  7091  030D  0860               	movf	??_Decodify_Command+1,w
  7092  030E  00D9               	movwf	EEPROM_24C1025_Fill_All@value+1
  7093  030F  1683               	bsf	3,5	;RP0=1, select bank3
  7094  0310  1703               	bsf	3,6	;RP1=1, select bank3
  7095  0311  0850               	movf	(_usart_protocol^(0+384)+6),w
  7096  0312  160A  118A  2014  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  7097  0317  292E               	goto	L7
  7098  0318                     l7408:	
  7099                           ;SlaveLiofilizadorVer1.c: 551:              Send_To_MB(3);
  7100                           
  7101                           
  7102                           ;SlaveLiofilizadorVer1.c: 556:              {;SlaveLiofilizadorVer1.c: 557:             
      +                           char hh[10];;SlaveLiofilizadorVer1.c: 558:              char mm[10];;SlaveLiofilizadorV
      +                          er1.c: 559:              char ss[10];;SlaveLiofilizadorVer1.c: 561:              itoa(hh
      +                          ,hora,10);
  7103  0318  1683               	bsf	3,5	;RP0=1, select bank1
  7104  0319  0866               	movf	_hora^(0+128),w	;volatile
  7105  031A  1283               	bcf	3,5	;RP0=0, select bank0
  7106  031B  00DF               	movwf	??_Decodify_Command
  7107  031C  01E0               	clrf	??_Decodify_Command+1
  7108  031D  085F               	movf	??_Decodify_Command,w
  7109  031E  00B1               	movwf	itoa@val
  7110  031F  0860               	movf	??_Decodify_Command+1,w
  7111  0320  00B2               	movwf	itoa@val+1
  7112  0321  300A               	movlw	10
  7113  0322  00B3               	movwf	itoa@base
  7114  0323  3000               	movlw	0
  7115  0324  00B4               	movwf	itoa@base+1
  7116  0325  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7117  0326  160A  158A  22A9  120A  118A  	fcall	_itoa
  7118                           
  7119                           ;SlaveLiofilizadorVer1.c: 562:              itoa(mm,minuto,10);
  7120  032B  1683               	bsf	3,5	;RP0=1, select bank1
  7121  032C  0865               	movf	_minuto^(0+128),w	;volatile
  7122  032D  1283               	bcf	3,5	;RP0=0, select bank0
  7123  032E  00DF               	movwf	??_Decodify_Command
  7124  032F  01E0               	clrf	??_Decodify_Command+1
  7125  0330  085F               	movf	??_Decodify_Command,w
  7126  0331  00B1               	movwf	itoa@val
  7127  0332  0860               	movf	??_Decodify_Command+1,w
  7128  0333  00B2               	movwf	itoa@val+1
  7129  0334  300A               	movlw	10
  7130  0335  00B3               	movwf	itoa@base
  7131  0336  3000               	movlw	0
  7132  0337  00B4               	movwf	itoa@base+1
  7133  0338  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7134  0339  160A  158A  22A9  120A  118A  	fcall	_itoa
  7135                           
  7136                           ;SlaveLiofilizadorVer1.c: 563:              itoa(ss,segundo,10);
  7137  033E  1683               	bsf	3,5	;RP0=1, select bank1
  7138  033F  0867               	movf	_segundo^(0+128),w	;volatile
  7139  0340  1283               	bcf	3,5	;RP0=0, select bank0
  7140  0341  00DF               	movwf	??_Decodify_Command
  7141  0342  01E0               	clrf	??_Decodify_Command+1
  7142  0343  085F               	movf	??_Decodify_Command,w
  7143  0344  00B1               	movwf	itoa@val
  7144  0345  0860               	movf	??_Decodify_Command+1,w
  7145  0346  00B2               	movwf	itoa@val+1
  7146  0347  300A               	movlw	10
  7147  0348  00B3               	movwf	itoa@base
  7148  0349  3000               	movlw	0
  7149  034A  00B4               	movwf	itoa@base+1
  7150  034B  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7151  034C  160A  158A  22A9  120A  118A  	fcall	_itoa
  7152                           
  7153                           ;SlaveLiofilizadorVer1.c: 566:              strcpy(texto,"");
  7154  0351  304C               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  7155  0352  00DF               	movwf	??_Decodify_Command
  7156  0353  085F               	movf	??_Decodify_Command,w
  7157  0354  00A0               	movwf	strcpy@from
  7158  0355  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7159  0356  160A  158A  222D  120A  118A  	fcall	_strcpy
  7160                           
  7161                           ;SlaveLiofilizadorVer1.c: 567:              if (hh[1]==0)
  7162  035B  1683               	bsf	3,5	;RP0=1, select bank1
  7163  035C  0821               	movf	(Decodify_Command@hh^(0+128)+1),w
  7164  035D  1D03               	btfss	3,2
  7165  035E  2B6C               	goto	l7416
  7166                           
  7167                           ;SlaveLiofilizadorVer1.c: 568:                 {;SlaveLiofilizadorVer1.c: 569:          
      +                                 strcat(texto,"0");
  7168  035F  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7169  0360  1283               	bcf	3,5	;RP0=0, select bank0
  7170  0361  00A0               	movwf	strcat@from
  7171  0362  3080               	movlw	128
  7172  0363  00A1               	movwf	strcat@from+1
  7173  0364  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7174  0365  160A  158A  23D1  120A  118A  	fcall	_strcat
  7175                           
  7176                           ;SlaveLiofilizadorVer1.c: 570:                 hh[2]=0;
  7177  036A  1683               	bsf	3,5	;RP0=1, select bank1
  7178  036B  01A2               	clrf	(Decodify_Command@hh^(0+128)+2)
  7179  036C                     l7416:	
  7180                           
  7181                           ;SlaveLiofilizadorVer1.c: 572:              strcat(texto,hh);
  7182  036C  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7183  036D  1283               	bcf	3,5	;RP0=0, select bank0
  7184  036E  00A0               	movwf	strcat@from
  7185  036F  3000               	movlw	0
  7186  0370  00A1               	movwf	strcat@from+1
  7187  0371  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7188  0372  160A  158A  23D1  120A  118A  	fcall	_strcat
  7189                           
  7190                           ;SlaveLiofilizadorVer1.c: 573:              strcat(texto,":");
  7191  0377  304D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  7192  0378  00A0               	movwf	strcat@from
  7193  0379  3080               	movlw	128
  7194  037A  00A1               	movwf	strcat@from+1
  7195  037B  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7196  037C  160A  158A  23D1  120A  118A  	fcall	_strcat
  7197                           
  7198                           ;SlaveLiofilizadorVer1.c: 574:              if(mm[1]==0)
  7199  0381  1683               	bsf	3,5	;RP0=1, select bank1
  7200  0382  082B               	movf	(Decodify_Command@mm^(0+128)+1),w
  7201  0383  1D03               	btfss	3,2
  7202  0384  2B92               	goto	l7426
  7203                           
  7204                           ;SlaveLiofilizadorVer1.c: 575:                 {;SlaveLiofilizadorVer1.c: 576:          
      +                                 strcat(texto,"0");
  7205  0385  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7206  0386  1283               	bcf	3,5	;RP0=0, select bank0
  7207  0387  00A0               	movwf	strcat@from
  7208  0388  3080               	movlw	128
  7209  0389  00A1               	movwf	strcat@from+1
  7210  038A  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7211  038B  160A  158A  23D1  120A  118A  	fcall	_strcat
  7212                           
  7213                           ;SlaveLiofilizadorVer1.c: 577:                 mm[2]=0;
  7214  0390  1683               	bsf	3,5	;RP0=1, select bank1
  7215  0391  01AC               	clrf	(Decodify_Command@mm^(0+128)+2)
  7216  0392                     l7426:	
  7217                           
  7218                           ;SlaveLiofilizadorVer1.c: 579:              strcat(texto,mm);
  7219  0392  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7220  0393  1283               	bcf	3,5	;RP0=0, select bank0
  7221  0394  00A0               	movwf	strcat@from
  7222  0395  3000               	movlw	0
  7223  0396  00A1               	movwf	strcat@from+1
  7224  0397  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7225  0398  160A  158A  23D1  120A  118A  	fcall	_strcat
  7226                           
  7227                           ;SlaveLiofilizadorVer1.c: 580:              strcat(texto,":");
  7228  039D  304D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  7229  039E  00A0               	movwf	strcat@from
  7230  039F  3080               	movlw	128
  7231  03A0  00A1               	movwf	strcat@from+1
  7232  03A1  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7233  03A2  160A  158A  23D1  120A  118A  	fcall	_strcat
  7234                           
  7235                           ;SlaveLiofilizadorVer1.c: 581:              if(ss[1]==0)
  7236  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  7237  03A8  0835               	movf	(Decodify_Command@ss^(0+128)+1),w
  7238  03A9  1D03               	btfss	3,2
  7239  03AA  2BB8               	goto	l7436
  7240                           
  7241                           ;SlaveLiofilizadorVer1.c: 582:                 {;SlaveLiofilizadorVer1.c: 583:          
      +                                 strcat(texto,"0");
  7242  03AB  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7243  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  7244  03AD  00A0               	movwf	strcat@from
  7245  03AE  3080               	movlw	128
  7246  03AF  00A1               	movwf	strcat@from+1
  7247  03B0  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7248  03B1  160A  158A  23D1  120A  118A  	fcall	_strcat
  7249                           
  7250                           ;SlaveLiofilizadorVer1.c: 584:                 ss[2]=0;
  7251  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  7252  03B7  01B6               	clrf	(Decodify_Command@ss^(0+128)+2)
  7253  03B8                     l7436:	
  7254                           
  7255                           ;SlaveLiofilizadorVer1.c: 586:              strcat(texto,ss);
  7256  03B8  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7257  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  7258  03BA  00A0               	movwf	strcat@from
  7259  03BB  3000               	movlw	0
  7260  03BC  00A1               	movwf	strcat@from+1
  7261  03BD  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7262  03BE  160A  158A  23D1  120A  118A  	fcall	_strcat
  7263                           
  7264                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(strlen(texto));
  7265  03C3  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7266  03C4  160A  158A  21F7  120A  118A  	fcall	_strlen
  7267  03C9  0820               	movf	?_strlen,w
  7268  03CA  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  7269                           
  7270                           ;SlaveLiofilizadorVer1.c: 588:              USART_put_string(texto);
  7271  03CF  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7272  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  7273  03D1  00A1               	movwf	USART_put_string@vetor
  7274  03D2  3001               	movlw	1
  7275  03D3  00A2               	movwf	USART_put_string@vetor+1
  7276  03D4  160A  158A  24BF  120A  118A  	fcall	_USART_put_string
  7277                           
  7278                           ;SlaveLiofilizadorVer1.c: 589:              USART_putc(0);
  7279  03D9  3000               	movlw	0
  7280  03DA  160A  118A  2004   	fcall	_USART_putc
  7281                           
  7282                           ;SlaveLiofilizadorVer1.c: 590:              };SlaveLiofilizadorVer1.c: 591:             
      +                           break;
  7283  03DD  0008               	return
  7284  03DE                     l7444:	
  7285                           
  7286                           ;SlaveLiofilizadorVer1.c: 594:              hora=usart_protocol.value[0];
  7287  03DE  1683               	bsf	3,5	;RP0=1, select bank3
  7288  03DF  1703               	bsf	3,6	;RP1=1, select bank3
  7289  03E0  0850               	movf	(_usart_protocol^(0+384)+6),w
  7290  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  7291  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  7292  03E3  00DF               	movwf	??_Decodify_Command
  7293  03E4  085F               	movf	??_Decodify_Command,w
  7294  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  7295  03E6  00E6               	movwf	_hora^(0+128)	;volatile
  7296                           
  7297                           ;SlaveLiofilizadorVer1.c: 595:              minuto=usart_protocol.value[1];
  7298  03E7  1703               	bsf	3,6	;RP1=1, select bank3
  7299  03E8  0851               	movf	(_usart_protocol^(0+384)+7),w
  7300  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  7301  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  7302  03EB  00DF               	movwf	??_Decodify_Command
  7303  03EC  085F               	movf	??_Decodify_Command,w
  7304  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  7305  03EE  00E5               	movwf	_minuto^(0+128)	;volatile
  7306                           
  7307                           ;SlaveLiofilizadorVer1.c: 596:              segundo=usart_protocol.value[2];
  7308  03EF  1703               	bsf	3,6	;RP1=1, select bank3
  7309  03F0  0852               	movf	(_usart_protocol^(0+384)+8),w
  7310  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  7311  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  7312  03F3  00DF               	movwf	??_Decodify_Command
  7313  03F4  085F               	movf	??_Decodify_Command,w
  7314  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  7315  03F6  00E7               	movwf	_segundo^(0+128)	;volatile
  7316  03F7  292E               	goto	L7
  7317  03F8                     l7450:	
  7318                           ;SlaveLiofilizadorVer1.c: 597:              Send_To_MB(3);
  7319                           
  7320                           
  7321                           ;SlaveLiofilizadorVer1.c: 602:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7322  03F8  1683               	bsf	3,5	;RP0=1, select bank3
  7323  03F9  1703               	bsf	3,6	;RP1=1, select bank3
  7324  03FA  0850               	movf	(_usart_protocol^(0+384)+6),w
  7325  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  7326  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  7327  03FD  00DF               	movwf	??_Decodify_Command
  7328  03FE  01E0               	clrf	??_Decodify_Command+1
  7329  03FF  085F               	movf	??_Decodify_Command,w
  7330  0400  00D6               	movwf	PROCULUS_Show_Screen@screen
  7331  0401  0860               	movf	??_Decodify_Command+1,w
  7332  0402  00D7               	movwf	PROCULUS_Show_Screen@screen+1
  7333  0403  160A  158A  216F  120A  118A  	fcall	_PROCULUS_Show_Screen
  7334  0408  292E               	goto	L7
  7335  0409                     l7456:	
  7336                           ;SlaveLiofilizadorVer1.c: 603:              Send_To_MB(3);
  7337                           
  7338                           
  7339                           ;SlaveLiofilizadorVer1.c: 608:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7340  0409  1683               	bsf	3,5	;RP0=1, select bank3
  7341  040A  1703               	bsf	3,6	;RP1=1, select bank3
  7342  040B  0850               	movf	(_usart_protocol^(0+384)+6),w
  7343  040C  1283               	bcf	3,5	;RP0=0, select bank0
  7344  040D  1303               	bcf	3,6	;RP1=0, select bank0
  7345  040E  00DF               	movwf	??_Decodify_Command
  7346  040F  01E0               	clrf	??_Decodify_Command+1
  7347  0410  085F               	movf	??_Decodify_Command,w
  7348  0411  00E0               	movwf	??_Decodify_Command+1
  7349  0412  01DF               	clrf	??_Decodify_Command
  7350  0413  1683               	bsf	3,5	;RP0=1, select bank3
  7351  0414  1703               	bsf	3,6	;RP1=1, select bank3
  7352  0415  0851               	movf	(_usart_protocol^(0+384)+7),w
  7353  0416  1283               	bcf	3,5	;RP0=0, select bank0
  7354  0417  1303               	bcf	3,6	;RP1=0, select bank0
  7355  0418  075F               	addwf	??_Decodify_Command,w
  7356  0419  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  7357  041A  3000               	movlw	0
  7358  041B  1803               	skipnc
  7359  041C  3001               	movlw	1
  7360  041D  0760               	addwf	??_Decodify_Command+1,w
  7361  041E  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  7362  041F  160A  158A  22EB  120A  118A  	fcall	_PROCULUS_Buzzer
  7363  0424  292E               	goto	L7
  7364  0425                     l7462:	
  7365                           ;SlaveLiofilizadorVer1.c: 610:              Send_To_MB(3);
  7366                           
  7367                           
  7368                           ;SlaveLiofilizadorVer1.c: 614:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  7369  0425  1683               	bsf	3,5	;RP0=1, select bank3
  7370  0426  1703               	bsf	3,6	;RP1=1, select bank3
  7371  0427  0850               	movf	(_usart_protocol^(0+384)+6),w
  7372  0428  1283               	bcf	3,5	;RP0=0, select bank0
  7373  0429  1303               	bcf	3,6	;RP1=0, select bank0
  7374  042A  00DF               	movwf	??_Decodify_Command
  7375  042B  01E0               	clrf	??_Decodify_Command+1
  7376  042C  085F               	movf	??_Decodify_Command,w
  7377  042D  00E0               	movwf	??_Decodify_Command+1
  7378  042E  01DF               	clrf	??_Decodify_Command
  7379  042F  1683               	bsf	3,5	;RP0=1, select bank3
  7380  0430  1703               	bsf	3,6	;RP1=1, select bank3
  7381  0431  0851               	movf	(_usart_protocol^(0+384)+7),w
  7382  0432  1283               	bcf	3,5	;RP0=0, select bank0
  7383  0433  1303               	bcf	3,6	;RP1=0, select bank0
  7384  0434  075F               	addwf	??_Decodify_Command,w
  7385  0435  00DA               	movwf	PROCULUS_VP_Write_String@vp
  7386  0436  3000               	movlw	0
  7387  0437  1803               	skipnc
  7388  0438  3001               	movlw	1
  7389  0439  0760               	addwf	??_Decodify_Command+1,w
  7390  043A  00DB               	movwf	PROCULUS_VP_Write_String@vp+1
  7391  043B  30D2               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  7392  043C  00E1               	movwf	??_Decodify_Command+2
  7393  043D  0861               	movf	??_Decodify_Command+2,w
  7394  043E  00DC               	movwf	PROCULUS_VP_Write_String@text
  7395  043F  160A  158A  21B0  120A  118A  	fcall	_PROCULUS_VP_Write_String
  7396  0444  292E               	goto	L7
  7397  0445                     l7468:	
  7398                           ;SlaveLiofilizadorVer1.c: 617:              Send_To_MB(3);
  7399                           
  7400                           
  7401                           ;SlaveLiofilizadorVer1.c: 623:              if(usart_protocol.value[0]==0)
  7402  0445  1683               	bsf	3,5	;RP0=1, select bank3
  7403  0446  1703               	bsf	3,6	;RP1=1, select bank3
  7404  0447  0850               	movf	(_usart_protocol^(0+384)+6),w
  7405  0448  1D03               	btfss	3,2
  7406  0449  2C55               	goto	l7474
  7407                           
  7408                           ;SlaveLiofilizadorVer1.c: 624:                 {;SlaveLiofilizadorVer1.c: 625:          
      +                                 if(!usart_protocol.value[1])
  7409  044A  0851               	movf	(_usart_protocol^(0+384)+7),w
  7410  044B  1D03               	btfss	3,2
  7411  044C  2C51               	goto	l419
  7412                           
  7413                           ;SlaveLiofilizadorVer1.c: 626:                    PORTCbits.RC0=0;
  7414  044D  1283               	bcf	3,5	;RP0=0, select bank0
  7415  044E  1303               	bcf	3,6	;RP1=0, select bank0
  7416  044F  1007               	bcf	7,0	;volatile
  7417  0450  292E               	goto	L7
  7418  0451                     l419:	
  7419                           ;SlaveLiofilizadorVer1.c: 627:                 else
  7420                           
  7421                           
  7422                           ;SlaveLiofilizadorVer1.c: 628:                    PORTCbits.RC0=1;
  7423  0451  1283               	bcf	3,5	;RP0=0, select bank0
  7424  0452  1303               	bcf	3,6	;RP1=0, select bank0
  7425  0453  1407               	bsf	7,0	;volatile
  7426  0454  292E               	goto	L7
  7427  0455                     l7474:	
  7428  0455  0350               	decf	(_usart_protocol^(0+384)+6),w
  7429  0456  1D03               	btfss	3,2
  7430  0457  292E               	goto	L7
  7431                           
  7432                           ;SlaveLiofilizadorVer1.c: 631:                      {;SlaveLiofilizadorVer1.c: 632:     
      +                                            if(!usart_protocol.value[1])
  7433  0458  0851               	movf	(_usart_protocol^(0+384)+7),w
  7434  0459  1D03               	btfss	3,2
  7435  045A  2C5F               	goto	l423
  7436                           
  7437                           ;SlaveLiofilizadorVer1.c: 633:                          PORTCbits.RC1=0;
  7438  045B  1283               	bcf	3,5	;RP0=0, select bank0
  7439  045C  1303               	bcf	3,6	;RP1=0, select bank0
  7440  045D  1087               	bcf	7,1	;volatile
  7441  045E  292E               	goto	L7
  7442  045F                     l423:	
  7443                           ;SlaveLiofilizadorVer1.c: 634:                       else
  7444                           
  7445                           
  7446                           ;SlaveLiofilizadorVer1.c: 635:                          PORTCbits.RC1=1;
  7447  045F  1283               	bcf	3,5	;RP0=0, select bank0
  7448  0460  1303               	bcf	3,6	;RP1=0, select bank0
  7449  0461  1487               	bsf	7,1	;volatile
  7450  0462  292E               	goto	L7
  7451  0463                     l7486:	
  7452                           ;SlaveLiofilizadorVer1.c: 637:              Send_To_MB(3);
  7453                           
  7454  0463  1703               	bsf	3,6	;RP1=1, select bank3
  7455  0464  084E               	movf	(_usart_protocol^(0+384)+4),w
  7456  0465  1283               	bcf	3,5	;RP0=0, select bank0
  7457  0466  1303               	bcf	3,6	;RP1=0, select bank0
  7458  0467  00DF               	movwf	??_Decodify_Command
  7459  0468  01E0               	clrf	??_Decodify_Command+1
  7460                           
  7461                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7462                           ; Switch size 1, requested type "simple"
  7463                           ; Number of cases is 1, Range of values is 0 to 0
  7464                           ; switch strategies available:
  7465                           ; Name         Instructions Cycles
  7466                           ; simple_byte            4     3 (average)
  7467                           ; direct_byte           11     8 (fixed)
  7468                           ; jumptable            260     6 (fixed)
  7469                           ;	Chosen strategy is simple_byte
  7470  0469  0860               	movf	??_Decodify_Command+1,w
  7471  046A  3A00               	xorlw	0	; case 0
  7472  046B  1903               	skipnz
  7473  046C  2C6E               	goto	l7644
  7474  046D  2CBB               	goto	l425
  7475  046E                     l7644:	
  7476                           
  7477                           ; Switch size 1, requested type "simple"
  7478                           ; Number of cases is 25, Range of values is 2 to 43
  7479                           ; switch strategies available:
  7480                           ; Name         Instructions Cycles
  7481                           ; simple_byte           76    39 (average)
  7482                           ; direct_byte          137    11 (fixed)
  7483                           ; jumptable            263     9 (fixed)
  7484                           ;	Chosen strategy is simple_byte
  7485  046E  085F               	movf	??_Decodify_Command,w
  7486  046F  3A02               	xorlw	2	; case 2
  7487  0470  1903               	skipnz
  7488  0471  28D5               	goto	l7304
  7489  0472  3A01               	xorlw	1	; case 3
  7490  0473  1903               	skipnz
  7491  0474  290F               	goto	l7312
  7492  0475  3A0B               	xorlw	11	; case 8
  7493  0476  1903               	skipnz
  7494  0477  291E               	goto	l7316
  7495  0478  3A01               	xorlw	1	; case 9
  7496  0479  1903               	skipnz
  7497  047A  2938               	goto	l7320
  7498  047B  3A03               	xorlw	3	; case 10
  7499  047C  1903               	skipnz
  7500  047D  2950               	goto	l7326
  7501  047E  3A01               	xorlw	1	; case 11
  7502  047F  1903               	skipnz
  7503  0480  2981               	goto	l7336
  7504  0481  3A07               	xorlw	7	; case 12
  7505  0482  1903               	skipnz
  7506  0483  29A1               	goto	l7342
  7507  0484  3A01               	xorlw	1	; case 13
  7508  0485  1903               	skipnz
  7509  0486  29AE               	goto	l7348
  7510  0487  3A1C               	xorlw	28	; case 17
  7511  0488  1903               	skipnz
  7512  0489  29C9               	goto	l7354
  7513  048A  3A03               	xorlw	3	; case 18
  7514  048B  1903               	skipnz
  7515  048C  29EA               	goto	l7360
  7516  048D  3A01               	xorlw	1	; case 19
  7517  048E  1903               	skipnz
  7518  048F  2A11               	goto	l7366
  7519  0490  3A07               	xorlw	7	; case 20
  7520  0491  1903               	skipnz
  7521  0492  2A41               	goto	l7372
  7522  0493  3A01               	xorlw	1	; case 21
  7523  0494  1903               	skipnz
  7524  0495  2AC3               	goto	l7392
  7525  0496  3A03               	xorlw	3	; case 22
  7526  0497  1903               	skipnz
  7527  0498  2AE0               	goto	l7398
  7528  0499  3A01               	xorlw	1	; case 23
  7529  049A  1903               	skipnz
  7530  049B  2A9E               	goto	l7386
  7531  049C  3A0F               	xorlw	15	; case 24
  7532  049D  1903               	skipnz
  7533  049E  2A5F               	goto	l7378
  7534  049F  3A01               	xorlw	1	; case 25
  7535  04A0  1903               	skipnz
  7536  04A1  2B04               	goto	l7402
  7537  04A2  3A03               	xorlw	3	; case 26
  7538  04A3  1903               	skipnz
  7539  04A4  286D               	goto	l7288
  7540  04A5  3A04               	xorlw	4	; case 30
  7541  04A6  1903               	skipnz
  7542  04A7  2BDE               	goto	l7444
  7543  04A8  3A01               	xorlw	1	; case 31
  7544  04A9  1903               	skipnz
  7545  04AA  2B18               	goto	l7408
  7546  04AB  3A3F               	xorlw	63	; case 32
  7547  04AC  1903               	skipnz
  7548  04AD  2BF8               	goto	l7450
  7549  04AE  3A01               	xorlw	1	; case 33
  7550  04AF  1903               	skipnz
  7551  04B0  2C09               	goto	l7456
  7552  04B1  3A05               	xorlw	5	; case 36
  7553  04B2  1903               	skipnz
  7554  04B3  2C25               	goto	l7462
  7555  04B4  3A02               	xorlw	2	; case 38
  7556  04B5  1903               	skipnz
  7557  04B6  2C45               	goto	l7468
  7558  04B7  3A0D               	xorlw	13	; case 43
  7559  04B8  1903               	skipnz
  7560  04B9  285E               	goto	l7284
  7561  04BA  2CBB               	goto	l425
  7562  04BB                     l425:	
  7563  04BB  0008               	return
  7564  04BC                     __end_of_Decodify_Command:	
  7565                           
  7566                           	psect	text17
  7567  1A2D                     __ptext17:	
  7568 ;; *************** function _strcpy *****************
  7569 ;; Defined at:
  7570 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  to              1    wreg     PTR unsigned char 
  7573 ;;		 -> texto(16), 
  7574 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  7575 ;;		 -> STR_2(1), 
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;  to              1    2[BANK0 ] PTR unsigned char 
  7578 ;;		 -> texto(16), 
  7579 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7580 ;;		 -> texto(16), 
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  1    wreg      PTR unsigned char 
  7583 ;; Registers used:
  7584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7585 ;; Tracked objects:
  7586 ;;		On entry : B00/0
  7587 ;;		On exit  : B00/800
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7590 ;;      Params:         0       1       0       0       0
  7591 ;;      Locals:         0       2       0       0       0
  7592 ;;      Temps:          0       1       0       0       0
  7593 ;;      Totals:         0       4       0       0       0
  7594 ;;Total ram usage:        4 bytes
  7595 ;; Hardware stack levels used:    2
  7596 ;; Hardware stack levels required when called:    1
  7597 ;; This function calls:
  7598 ;;		Nothing
  7599 ;; This function is called by:
  7600 ;;		_Decodify_Command
  7601 ;; This function uses a non-reentrant model
  7602 ;;
  7603                           
  7604                           
  7605                           ;psect for function _strcpy
  7606  1A2D                     _strcpy:	
  7607                           
  7608                           ;incstack = 0
  7609                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  7610                           ;strcpy@to stored from wreg
  7611  1A2D  00A2               	movwf	strcpy@to
  7612  1A2E  0822               	movf	strcpy@to,w
  7613  1A2F  00A1               	movwf	??_strcpy
  7614  1A30  0821               	movf	??_strcpy,w
  7615  1A31  00A3               	movwf	strcpy@cp
  7616  1A32                     l6840:	
  7617  1A32  0820               	movf	strcpy@from,w
  7618  1A33  0084               	movwf	4
  7619  1A34  160A  158A  200A  160A  158A  	fcall	stringdir
  7620  1A39  00A1               	movwf	??_strcpy
  7621  1A3A  0823               	movf	strcpy@cp,w
  7622  1A3B  0084               	movwf	4
  7623  1A3C  0821               	movf	??_strcpy,w
  7624  1A3D  1783               	bsf	3,7	;select IRP bank2
  7625  1A3E  0080               	movwf	0
  7626  1A3F  0800               	movf	0,w
  7627  1A40  1903               	btfsc	3,2
  7628  1A41  0008               	return
  7629  1A42  3001               	movlw	1
  7630  1A43  00A1               	movwf	??_strcpy
  7631  1A44  0821               	movf	??_strcpy,w
  7632  1A45  07A3               	addwf	strcpy@cp,f
  7633  1A46  3001               	movlw	1
  7634  1A47  00A1               	movwf	??_strcpy
  7635  1A48  0821               	movf	??_strcpy,w
  7636  1A49  07A0               	addwf	strcpy@from,f
  7637  1A4A  2A32               	goto	l6840
  7638  1A4B                     __end_of_strcpy:	
  7639                           
  7640                           	psect	text18
  7641  1BD1                     __ptext18:	
  7642 ;; *************** function _strcat *****************
  7643 ;; Defined at:
  7644 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;  to              1    wreg     PTR unsigned char 
  7647 ;;		 -> texto(16), 
  7648 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  7649 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  7650 ;;		 -> STR_3(2), Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;  to              1    4[BANK0 ] PTR unsigned char 
  7653 ;;		 -> texto(16), 
  7654 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7655 ;;		 -> texto(16), 
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      PTR unsigned char 
  7658 ;; Registers used:
  7659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7660 ;; Tracked objects:
  7661 ;;		On entry : B00/800
  7662 ;;		On exit  : B00/800
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7665 ;;      Params:         0       2       0       0       0
  7666 ;;      Locals:         0       2       0       0       0
  7667 ;;      Temps:          0       1       0       0       0
  7668 ;;      Totals:         0       5       0       0       0
  7669 ;;Total ram usage:        5 bytes
  7670 ;; Hardware stack levels used:    2
  7671 ;; Hardware stack levels required when called:    1
  7672 ;; This function calls:
  7673 ;;		Nothing
  7674 ;; This function is called by:
  7675 ;;		_Decodify_Command
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           
  7680                           ;psect for function _strcat
  7681  1BD1                     _strcat:	
  7682                           
  7683                           ;incstack = 0
  7684                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7685                           ;strcat@to stored from wreg
  7686  1BD1  00A4               	movwf	strcat@to
  7687  1BD2  0824               	movf	strcat@to,w
  7688  1BD3  00A2               	movwf	??_strcat
  7689  1BD4  0822               	movf	??_strcat,w
  7690  1BD5  00A3               	movwf	strcat@cp
  7691  1BD6                     l6846:	
  7692  1BD6  0823               	movf	strcat@cp,w
  7693  1BD7  0084               	movwf	4
  7694  1BD8  0800               	movf	0,w
  7695  1BD9  1903               	btfsc	3,2
  7696  1BDA  2BEA               	goto	l6852
  7697  1BDB  3001               	movlw	1
  7698  1BDC  00A2               	movwf	??_strcat
  7699  1BDD  0822               	movf	??_strcat,w
  7700  1BDE  07A3               	addwf	strcat@cp,f
  7701  1BDF  2BD6               	goto	l6846
  7702  1BE0                     l6848:	
  7703  1BE0  3001               	movlw	1
  7704  1BE1  00A2               	movwf	??_strcat
  7705  1BE2  0822               	movf	??_strcat,w
  7706  1BE3  07A3               	addwf	strcat@cp,f
  7707  1BE4  3001               	movlw	1
  7708  1BE5  07A0               	addwf	strcat@from,f
  7709  1BE6  1803               	skipnc
  7710  1BE7  0AA1               	incf	strcat@from+1,f
  7711  1BE8  3000               	movlw	0
  7712  1BE9  07A1               	addwf	strcat@from+1,f
  7713  1BEA                     l6852:	
  7714  1BEA  0821               	movf	strcat@from+1,w
  7715  1BEB  00FF               	movwf	127
  7716  1BEC  0820               	movf	strcat@from,w
  7717  1BED  0084               	movwf	4
  7718  1BEE  160A  158A  2000  160A  158A  	fcall	stringtab
  7719  1BF3  00A2               	movwf	??_strcat
  7720  1BF4  0823               	movf	strcat@cp,w
  7721  1BF5  0084               	movwf	4
  7722  1BF6  0822               	movf	??_strcat,w
  7723  1BF7  1783               	bsf	3,7	;select IRP bank2
  7724  1BF8  0080               	movwf	0
  7725  1BF9  0800               	movf	0,w
  7726  1BFA  1903               	btfsc	3,2
  7727  1BFB  0008               	return
  7728  1BFC  2BE0               	goto	l6848
  7729  1BFD                     __end_of_strcat:	
  7730                           
  7731                           	psect	text19
  7732  1AA9                     __ptext19:	
  7733 ;; *************** function _itoa *****************
  7734 ;; Defined at:
  7735 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  buf             1    wreg     PTR unsigned char 
  7738 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7739 ;;  val             2   17[BANK0 ] int 
  7740 ;;  base            2   19[BANK0 ] int 
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;  buf             1   23[BANK0 ] PTR unsigned char 
  7743 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7744 ;;  cp              1    0        PTR unsigned char 
  7745 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      PTR unsigned char 
  7748 ;; Registers used:
  7749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7750 ;; Tracked objects:
  7751 ;;		On entry : 300/0
  7752 ;;		On exit  : B00/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7755 ;;      Params:         0       4       0       0       0
  7756 ;;      Locals:         0       2       0       0       0
  7757 ;;      Temps:          0       1       0       0       0
  7758 ;;      Totals:         0       7       0       0       0
  7759 ;;Total ram usage:        7 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:    3
  7762 ;; This function calls:
  7763 ;;		_utoa
  7764 ;; This function is called by:
  7765 ;;		_Decodify_Command
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           
  7770                           ;psect for function _itoa
  7771  1AA9                     _itoa:	
  7772                           
  7773                           ;incstack = 0
  7774                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7775                           ;itoa@buf stored from wreg
  7776  1AA9  00B7               	movwf	itoa@buf
  7777  1AAA  1FB2               	btfss	itoa@val+1,7
  7778  1AAB  2ABC               	goto	l6832
  7779  1AAC  302D               	movlw	45
  7780  1AAD  00B5               	movwf	??_itoa
  7781  1AAE  0837               	movf	itoa@buf,w
  7782  1AAF  0084               	movwf	4
  7783  1AB0  0835               	movf	??_itoa,w
  7784  1AB1  1383               	bcf	3,7	;select IRP bank0
  7785  1AB2  0080               	movwf	0
  7786  1AB3  3001               	movlw	1
  7787  1AB4  00B5               	movwf	??_itoa
  7788  1AB5  0835               	movf	??_itoa,w
  7789  1AB6  07B7               	addwf	itoa@buf,f
  7790  1AB7  09B1               	comf	itoa@val,f
  7791  1AB8  09B2               	comf	itoa@val+1,f
  7792  1AB9  0AB1               	incf	itoa@val,f
  7793  1ABA  1903               	skipnz
  7794  1ABB  0AB2               	incf	itoa@val+1,f
  7795  1ABC                     l6832:	
  7796  1ABC  0832               	movf	itoa@val+1,w
  7797  1ABD  00A9               	movwf	utoa@val+1
  7798  1ABE  0831               	movf	itoa@val,w
  7799  1ABF  00A8               	movwf	utoa@val
  7800  1AC0  0834               	movf	itoa@base+1,w
  7801  1AC1  00AB               	movwf	utoa@base+1
  7802  1AC2  0833               	movf	itoa@base,w
  7803  1AC3  00AA               	movwf	utoa@base
  7804  1AC4  0837               	movf	itoa@buf,w
  7805  1AC5  160A  158A  279C   	fcall	_utoa
  7806  1AC8  0008               	return
  7807  1AC9                     __end_of_itoa:	
  7808                           
  7809                           	psect	text20
  7810  1F9C                     __ptext20:	
  7811 ;; *************** function _utoa *****************
  7812 ;; Defined at:
  7813 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;  buf             1    wreg     PTR unsigned char 
  7816 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7817 ;;  val             2    8[BANK0 ] unsigned int 
  7818 ;;  base            2   10[BANK0 ] int 
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  7821 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7822 ;;  v               2   13[BANK0 ] unsigned int 
  7823 ;;  c               1   15[BANK0 ] unsigned char 
  7824 ;; Return value:  Size  Location     Type
  7825 ;;                  1    wreg      PTR unsigned char 
  7826 ;; Registers used:
  7827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7828 ;; Tracked objects:
  7829 ;;		On entry : 300/0
  7830 ;;		On exit  : B00/0
  7831 ;;		Unchanged: 0/0
  7832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7833 ;;      Params:         0       4       0       0       0
  7834 ;;      Locals:         0       4       0       0       0
  7835 ;;      Temps:          0       1       0       0       0
  7836 ;;      Totals:         0       9       0       0       0
  7837 ;;Total ram usage:        9 bytes
  7838 ;; Hardware stack levels used:    1
  7839 ;; Hardware stack levels required when called:    2
  7840 ;; This function calls:
  7841 ;;		___lwdiv
  7842 ;;		___lwmod
  7843 ;; This function is called by:
  7844 ;;		_itoa
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848                           
  7849                           ;psect for function _utoa
  7850  1F9C                     _utoa:	
  7851                           
  7852                           ;incstack = 0
  7853                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7854                           ;utoa@buf stored from wreg
  7855  1F9C  00B0               	movwf	utoa@buf
  7856  1F9D  0829               	movf	utoa@val+1,w
  7857  1F9E  00AE               	movwf	utoa@v+1
  7858  1F9F  0828               	movf	utoa@val,w
  7859  1FA0  00AD               	movwf	utoa@v
  7860  1FA1                     l6494:	
  7861  1FA1  082B               	movf	utoa@base+1,w
  7862  1FA2  00A1               	movwf	___lwdiv@divisor+1
  7863  1FA3  082A               	movf	utoa@base,w
  7864  1FA4  00A0               	movwf	___lwdiv@divisor
  7865  1FA5  082E               	movf	utoa@v+1,w
  7866  1FA6  00A3               	movwf	___lwdiv@dividend+1
  7867  1FA7  082D               	movf	utoa@v,w
  7868  1FA8  00A2               	movwf	___lwdiv@dividend
  7869  1FA9  160A  158A  25D5  160A  158A  	fcall	___lwdiv
  7870  1FAE  0821               	movf	?___lwdiv+1,w
  7871  1FAF  00AE               	movwf	utoa@v+1
  7872  1FB0  0820               	movf	?___lwdiv,w
  7873  1FB1  00AD               	movwf	utoa@v
  7874  1FB2  3001               	movlw	1
  7875  1FB3  00AC               	movwf	??_utoa
  7876  1FB4  082C               	movf	??_utoa,w
  7877  1FB5  07B0               	addwf	utoa@buf,f
  7878  1FB6  082D               	movf	utoa@v,w
  7879  1FB7  042E               	iorwf	utoa@v+1,w
  7880  1FB8  1D03               	btfss	3,2
  7881  1FB9  2FA1               	goto	l6494
  7882  1FBA  0830               	movf	utoa@buf,w
  7883  1FBB  0084               	movwf	4
  7884  1FBC  1383               	bcf	3,7	;select IRP bank0
  7885  1FBD  0180               	clrf	0
  7886  1FBE  3001               	movlw	1
  7887  1FBF  02B0               	subwf	utoa@buf,f
  7888  1FC0                     l6504:	
  7889  1FC0  082B               	movf	utoa@base+1,w
  7890  1FC1  00A1               	movwf	___lwmod@divisor+1
  7891  1FC2  082A               	movf	utoa@base,w
  7892  1FC3  00A0               	movwf	___lwmod@divisor
  7893  1FC4  0829               	movf	utoa@val+1,w
  7894  1FC5  00A3               	movwf	___lwmod@dividend+1
  7895  1FC6  0828               	movf	utoa@val,w
  7896  1FC7  00A2               	movwf	___lwmod@dividend
  7897  1FC8  160A  158A  248D  160A  158A  	fcall	___lwmod
  7898  1FCD  0820               	movf	?___lwmod,w
  7899  1FCE  00AC               	movwf	??_utoa
  7900  1FCF  082C               	movf	??_utoa,w
  7901  1FD0  00AF               	movwf	utoa@c
  7902  1FD1  082B               	movf	utoa@base+1,w
  7903  1FD2  00A1               	movwf	___lwdiv@divisor+1
  7904  1FD3  082A               	movf	utoa@base,w
  7905  1FD4  00A0               	movwf	___lwdiv@divisor
  7906  1FD5  0829               	movf	utoa@val+1,w
  7907  1FD6  00A3               	movwf	___lwdiv@dividend+1
  7908  1FD7  0828               	movf	utoa@val,w
  7909  1FD8  00A2               	movwf	___lwdiv@dividend
  7910  1FD9  160A  158A  25D5  160A  158A  	fcall	___lwdiv
  7911  1FDE  0821               	movf	?___lwdiv+1,w
  7912  1FDF  00A9               	movwf	utoa@val+1
  7913  1FE0  0820               	movf	?___lwdiv,w
  7914  1FE1  00A8               	movwf	utoa@val
  7915  1FE2  300A               	movlw	10
  7916  1FE3  022F               	subwf	utoa@c,w
  7917  1FE4  1C03               	skipc
  7918  1FE5  2FEA               	goto	l1443
  7919  1FE6  3007               	movlw	7
  7920  1FE7  00AC               	movwf	??_utoa
  7921  1FE8  082C               	movf	??_utoa,w
  7922  1FE9  07AF               	addwf	utoa@c,f
  7923  1FEA                     l1443:	
  7924  1FEA  3030               	movlw	48
  7925  1FEB  00AC               	movwf	??_utoa
  7926  1FEC  082C               	movf	??_utoa,w
  7927  1FED  07AF               	addwf	utoa@c,f
  7928  1FEE  082F               	movf	utoa@c,w
  7929  1FEF  00AC               	movwf	??_utoa
  7930  1FF0  0830               	movf	utoa@buf,w
  7931  1FF1  0084               	movwf	4
  7932  1FF2  082C               	movf	??_utoa,w
  7933  1FF3  1383               	bcf	3,7	;select IRP bank0
  7934  1FF4  0080               	movwf	0
  7935  1FF5  3001               	movlw	1
  7936  1FF6  02B0               	subwf	utoa@buf,f
  7937  1FF7  0828               	movf	utoa@val,w
  7938  1FF8  0429               	iorwf	utoa@val+1,w
  7939  1FF9  1D03               	btfss	3,2
  7940  1FFA  2FC0               	goto	l6504
  7941                           
  7942                           ;	Return value of _utoa is never used
  7943  1FFB  3001               	movlw	1
  7944  1FFC  00AC               	movwf	??_utoa
  7945  1FFD  082C               	movf	??_utoa,w
  7946  1FFE  07B0               	addwf	utoa@buf,f
  7947  1FFF  0008               	return
  7948  2000                     __end_of_utoa:	
  7949                           
  7950                           	psect	text21
  7951  1C8D                     __ptext21:	
  7952 ;; *************** function ___lwmod *****************
  7953 ;; Defined at:
  7954 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;  divisor         2    0[BANK0 ] unsigned int 
  7957 ;;  dividend        2    2[BANK0 ] unsigned int 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;  counter         1    5[BANK0 ] unsigned char 
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  2    0[BANK0 ] unsigned int 
  7962 ;; Registers used:
  7963 ;;		wreg, status,2, status,0
  7964 ;; Tracked objects:
  7965 ;;		On entry : 300/0
  7966 ;;		On exit  : 300/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7969 ;;      Params:         0       4       0       0       0
  7970 ;;      Locals:         0       1       0       0       0
  7971 ;;      Temps:          0       1       0       0       0
  7972 ;;      Totals:         0       6       0       0       0
  7973 ;;Total ram usage:        6 bytes
  7974 ;; Hardware stack levels used:    1
  7975 ;; Hardware stack levels required when called:    1
  7976 ;; This function calls:
  7977 ;;		Nothing
  7978 ;; This function is called by:
  7979 ;;		_utoa
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           
  7984                           ;psect for function ___lwmod
  7985  1C8D                     ___lwmod:	
  7986                           
  7987                           ;incstack = 0
  7988                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7989  1C8D  0820               	movf	___lwmod@divisor,w
  7990  1C8E  0421               	iorwf	___lwmod@divisor+1,w
  7991  1C8F  1903               	btfsc	3,2
  7992  1C90  2CBA               	goto	l5860
  7993  1C91  01A5               	clrf	___lwmod@counter
  7994  1C92  0AA5               	incf	___lwmod@counter,f
  7995  1C93                     l5850:	
  7996  1C93  1BA1               	btfsc	___lwmod@divisor+1,7
  7997  1C94  2CA1               	goto	l5852
  7998  1C95  3001               	movlw	1
  7999  1C96                     u5575:	
  8000  1C96  1003               	clrc
  8001  1C97  0DA0               	rlf	___lwmod@divisor,f
  8002  1C98  0DA1               	rlf	___lwmod@divisor+1,f
  8003  1C99  3EFF               	addlw	-1
  8004  1C9A  1D03               	skipz
  8005  1C9B  2C96               	goto	u5575
  8006  1C9C  3001               	movlw	1
  8007  1C9D  00A4               	movwf	??___lwmod
  8008  1C9E  0824               	movf	??___lwmod,w
  8009  1C9F  07A5               	addwf	___lwmod@counter,f
  8010  1CA0  2C93               	goto	l5850
  8011  1CA1                     l5852:	
  8012  1CA1  0821               	movf	___lwmod@divisor+1,w
  8013  1CA2  0223               	subwf	___lwmod@dividend+1,w
  8014  1CA3  1D03               	skipz
  8015  1CA4  2CA7               	goto	u5595
  8016  1CA5  0820               	movf	___lwmod@divisor,w
  8017  1CA6  0222               	subwf	___lwmod@dividend,w
  8018  1CA7                     u5595:	
  8019  1CA7  1C03               	skipc
  8020  1CA8  2CAF               	goto	l5856
  8021  1CA9  0820               	movf	___lwmod@divisor,w
  8022  1CAA  02A2               	subwf	___lwmod@dividend,f
  8023  1CAB  0821               	movf	___lwmod@divisor+1,w
  8024  1CAC  1C03               	skipc
  8025  1CAD  03A3               	decf	___lwmod@dividend+1,f
  8026  1CAE  02A3               	subwf	___lwmod@dividend+1,f
  8027  1CAF                     l5856:	
  8028  1CAF  3001               	movlw	1
  8029  1CB0                     u5605:	
  8030  1CB0  1003               	clrc
  8031  1CB1  0CA1               	rrf	___lwmod@divisor+1,f
  8032  1CB2  0CA0               	rrf	___lwmod@divisor,f
  8033  1CB3  3EFF               	addlw	-1
  8034  1CB4  1D03               	skipz
  8035  1CB5  2CB0               	goto	u5605
  8036  1CB6  3001               	movlw	1
  8037  1CB7  02A5               	subwf	___lwmod@counter,f
  8038  1CB8  1D03               	btfss	3,2
  8039  1CB9  2CA1               	goto	l5852
  8040  1CBA                     l5860:	
  8041  1CBA  0823               	movf	___lwmod@dividend+1,w
  8042  1CBB  00A1               	movwf	?___lwmod+1
  8043  1CBC  0822               	movf	___lwmod@dividend,w
  8044  1CBD  00A0               	movwf	?___lwmod
  8045  1CBE  0008               	return
  8046  1CBF                     __end_of___lwmod:	
  8047                           
  8048                           	psect	text22
  8049  1EE1                     __ptext22:	
  8050 ;; *************** function _USART_to_Protocol *****************
  8051 ;; Defined at:
  8052 ;;		line 77 in file "usart.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;  usart_protoc    1    wreg     PTR struct .
  8055 ;;		 -> usart_protocol(16), 
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  8058 ;;		 -> usart_protocol(16), 
  8059 ;;  i               2    2[BANK0 ] int 
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  1    wreg      void 
  8062 ;; Registers used:
  8063 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8064 ;; Tracked objects:
  8065 ;;		On entry : 300/100
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8069 ;;      Params:         0       0       0       0       0
  8070 ;;      Locals:         0       3       0       0       0
  8071 ;;      Temps:          0       2       0       0       0
  8072 ;;      Totals:         0       5       0       0       0
  8073 ;;Total ram usage:        5 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; Hardware stack levels required when called:    1
  8076 ;; This function calls:
  8077 ;;		Nothing
  8078 ;; This function is called by:
  8079 ;;		_Decodify_Command
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           
  8084                           ;psect for function _USART_to_Protocol
  8085  1EE1                     _USART_to_Protocol:	
  8086                           
  8087                           ;incstack = 0
  8088                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  8089                           ;USART_to_Protocol@usart_protocol stored from wreg
  8090  1EE1  1283               	bcf	3,5	;RP0=0, select bank0
  8091  1EE2  00A4               	movwf	USART_to_Protocol@usart_protocol
  8092                           
  8093                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  8094  1EE3  0824               	movf	USART_to_Protocol@usart_protocol,w
  8095  1EE4  0084               	movwf	4
  8096  1EE5  1683               	bsf	3,5	;RP0=1, select bank3
  8097  1EE6  1703               	bsf	3,6	;RP1=1, select bank3
  8098  1EE7  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  8099  1EE8  1783               	bsf	3,7	;select IRP bank2
  8100  1EE9  0080               	movwf	0
  8101  1EEA  0A84               	incf	4,f
  8102  1EEB  0810               	movf	_usart_buffer^(0+384),w	;volatile
  8103  1EEC  0080               	movwf	0
  8104                           
  8105                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  8106  1EED  0812               	movf	(_usart_buffer^(0+384)+2),w	;volatile
  8107  1EEE  1283               	bcf	3,5	;RP0=0, select bank0
  8108  1EEF  1303               	bcf	3,6	;RP1=0, select bank0
  8109  1EF0  00A0               	movwf	??_USART_to_Protocol
  8110  1EF1  0824               	movf	USART_to_Protocol@usart_protocol,w
  8111  1EF2  3E02               	addlw	2
  8112  1EF3  0084               	movwf	4
  8113  1EF4  0820               	movf	??_USART_to_Protocol,w
  8114  1EF5  0080               	movwf	0
  8115                           
  8116                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  8117  1EF6  1683               	bsf	3,5	;RP0=1, select bank3
  8118  1EF7  1703               	bsf	3,6	;RP1=1, select bank3
  8119  1EF8  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  8120  1EF9  1283               	bcf	3,5	;RP0=0, select bank0
  8121  1EFA  1303               	bcf	3,6	;RP1=0, select bank0
  8122  1EFB  00A0               	movwf	??_USART_to_Protocol
  8123  1EFC  0824               	movf	USART_to_Protocol@usart_protocol,w
  8124  1EFD  3E03               	addlw	3
  8125  1EFE  0084               	movwf	4
  8126  1EFF  0820               	movf	??_USART_to_Protocol,w
  8127  1F00  0080               	movwf	0
  8128                           
  8129                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  8130  1F01  1683               	bsf	3,5	;RP0=1, select bank3
  8131  1F02  1703               	bsf	3,6	;RP1=1, select bank3
  8132  1F03  0814               	movf	(_usart_buffer^(0+384)+4),w	;volatile
  8133  1F04  1283               	bcf	3,5	;RP0=0, select bank0
  8134  1F05  1303               	bcf	3,6	;RP1=0, select bank0
  8135  1F06  00A0               	movwf	??_USART_to_Protocol
  8136  1F07  0824               	movf	USART_to_Protocol@usart_protocol,w
  8137  1F08  3E04               	addlw	4
  8138  1F09  0084               	movwf	4
  8139  1F0A  0820               	movf	??_USART_to_Protocol,w
  8140  1F0B  0080               	movwf	0
  8141                           
  8142                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  8143  1F0C  1683               	bsf	3,5	;RP0=1, select bank3
  8144  1F0D  1703               	bsf	3,6	;RP1=1, select bank3
  8145  1F0E  0815               	movf	(_usart_buffer^(0+384)+5),w	;volatile
  8146  1F0F  1283               	bcf	3,5	;RP0=0, select bank0
  8147  1F10  1303               	bcf	3,6	;RP1=0, select bank0
  8148  1F11  00A0               	movwf	??_USART_to_Protocol
  8149  1F12  0824               	movf	USART_to_Protocol@usart_protocol,w
  8150  1F13  3E05               	addlw	5
  8151  1F14  0084               	movwf	4
  8152  1F15  0820               	movf	??_USART_to_Protocol,w
  8153  1F16  0080               	movwf	0
  8154                           
  8155                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  8156  1F17  01A2               	clrf	USART_to_Protocol@i
  8157  1F18  01A3               	clrf	USART_to_Protocol@i+1
  8158  1F19                     l6780:	
  8159  1F19  0824               	movf	USART_to_Protocol@usart_protocol,w
  8160  1F1A  3E05               	addlw	5
  8161  1F1B  0084               	movwf	4
  8162  1F1C  0823               	movf	USART_to_Protocol@i+1,w
  8163  1F1D  3A80               	xorlw	128
  8164  1F1E  00A0               	movwf	??_USART_to_Protocol
  8165  1F1F  3080               	movlw	128
  8166  1F20  0220               	subwf	??_USART_to_Protocol,w
  8167  1F21  1D03               	skipz
  8168  1F22  2F25               	goto	u7065
  8169  1F23  0800               	movf	0,w
  8170  1F24  0222               	subwf	USART_to_Protocol@i,w
  8171  1F25                     u7065:	
  8172  1F25  1803               	btfsc	3,0
  8173  1F26  0008               	return
  8174                           
  8175                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  8176  1F27  1283               	bcf	3,5	;RP0=0, select bank0
  8177  1F28  1303               	bcf	3,6	;RP1=0, select bank0
  8178  1F29  0822               	movf	USART_to_Protocol@i,w
  8179  1F2A  3E96               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  8180  1F2B  0084               	movwf	4
  8181  1F2C  1783               	bsf	3,7	;select IRP bank3
  8182  1F2D  0800               	movf	0,w
  8183  1F2E  00A0               	movwf	??_USART_to_Protocol
  8184  1F2F  0822               	movf	USART_to_Protocol@i,w
  8185  1F30  0724               	addwf	USART_to_Protocol@usart_protocol,w
  8186  1F31  00A1               	movwf	??_USART_to_Protocol+1
  8187  1F32  0821               	movf	??_USART_to_Protocol+1,w
  8188  1F33  3E06               	addlw	6
  8189  1F34  0084               	movwf	4
  8190  1F35  0820               	movf	??_USART_to_Protocol,w
  8191  1F36  0080               	movwf	0
  8192  1F37  3001               	movlw	1
  8193  1F38  07A2               	addwf	USART_to_Protocol@i,f
  8194  1F39  1803               	skipnc
  8195  1F3A  0AA3               	incf	USART_to_Protocol@i+1,f
  8196  1F3B  3000               	movlw	0
  8197  1F3C  07A3               	addwf	USART_to_Protocol@i+1,f
  8198  1F3D  2F19               	goto	l6780
  8199  1F3E                     __end_of_USART_to_Protocol:	
  8200                           
  8201                           	psect	text23
  8202  1B30                     __ptext23:	
  8203 ;; *************** function _USART_put_buffer *****************
  8204 ;; Defined at:
  8205 ;;		line 99 in file "usart.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;  vetor           1    wreg     PTR unsigned char 
  8208 ;;		 -> buffer(32), 
  8209 ;;  size            2    1[BANK0 ] unsigned int 
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;  vetor           1    5[BANK0 ] PTR unsigned char 
  8212 ;;		 -> buffer(32), 
  8213 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  8214 ;;		 -> USART_put_buffer@vetor(1), 
  8215 ;;  loop            1    6[BANK0 ] unsigned char 
  8216 ;; Return value:  Size  Location     Type
  8217 ;;                  1    wreg      void 
  8218 ;; Registers used:
  8219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8220 ;; Tracked objects:
  8221 ;;		On entry : 300/0
  8222 ;;		On exit  : 300/0
  8223 ;;		Unchanged: 0/0
  8224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8225 ;;      Params:         0       2       0       0       0
  8226 ;;      Locals:         0       3       0       0       0
  8227 ;;      Temps:          0       2       0       0       0
  8228 ;;      Totals:         0       7       0       0       0
  8229 ;;Total ram usage:        7 bytes
  8230 ;; Hardware stack levels used:    1
  8231 ;; Hardware stack levels required when called:    2
  8232 ;; This function calls:
  8233 ;;		_USART_putc
  8234 ;; This function is called by:
  8235 ;;		_Decodify_Command
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           
  8240                           ;psect for function _USART_put_buffer
  8241  1B30                     _USART_put_buffer:	
  8242                           
  8243                           ;incstack = 0
  8244                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8245                           ;USART_put_buffer@vetor stored from wreg
  8246  1B30  00A5               	movwf	USART_put_buffer@vetor
  8247                           
  8248                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  8249  1B31  01A6               	clrf	USART_put_buffer@loop
  8250                           
  8251                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  8252  1B32  3025               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  8253  1B33  00A3               	movwf	??_USART_put_buffer
  8254  1B34  0823               	movf	??_USART_put_buffer,w
  8255  1B35  00A7               	movwf	USART_put_buffer@ptr
  8256  1B36                     l6820:	
  8257                           ;usart.c: 105:     while(loop<size)
  8258                           
  8259                           
  8260                           ;usart.c: 105:     while(loop<size)
  8261  1B36  0826               	movf	USART_put_buffer@loop,w
  8262  1B37  00A3               	movwf	??_USART_put_buffer
  8263  1B38  01A4               	clrf	??_USART_put_buffer+1
  8264  1B39  0822               	movf	USART_put_buffer@size+1,w
  8265  1B3A  0224               	subwf	??_USART_put_buffer+1,w
  8266  1B3B  1D03               	skipz
  8267  1B3C  2B3F               	goto	u7095
  8268  1B3D  0821               	movf	USART_put_buffer@size,w
  8269  1B3E  0223               	subwf	??_USART_put_buffer,w
  8270  1B3F                     u7095:	
  8271  1B3F  1803               	btfsc	3,0
  8272  1B40  0008               	return
  8273                           
  8274                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  8275  1B41  0827               	movf	USART_put_buffer@ptr,w
  8276  1B42  0084               	movwf	4
  8277  1B43  1383               	bcf	3,7	;select IRP bank0
  8278  1B44  0800               	movf	0,w
  8279  1B45  160A  118A  2004  160A  158A  	fcall	_USART_putc
  8280                           
  8281                           ;usart.c: 108:         ptr++;
  8282  1B4A  3001               	movlw	1
  8283  1B4B  1283               	bcf	3,5	;RP0=0, select bank0
  8284  1B4C  00A3               	movwf	??_USART_put_buffer
  8285  1B4D  0823               	movf	??_USART_put_buffer,w
  8286  1B4E  07A7               	addwf	USART_put_buffer@ptr,f
  8287                           
  8288                           ;usart.c: 109:         loop++;
  8289  1B4F  3001               	movlw	1
  8290  1B50  00A3               	movwf	??_USART_put_buffer
  8291  1B51  0823               	movf	??_USART_put_buffer,w
  8292  1B52  07A6               	addwf	USART_put_buffer@loop,f
  8293  1B53  2B36               	goto	l6820
  8294  1B54                     __end_of_USART_put_buffer:	
  8295                           
  8296                           	psect	text24
  8297  0800                     __ptext24:	
  8298 ;; *************** function _Send_To_MB *****************
  8299 ;; Defined at:
  8300 ;;		line 647 in file "SlaveLiofilizadorVer1.c"
  8301 ;; Parameters:    Size  Location     Type
  8302 ;;  size            1    wreg     unsigned char 
  8303 ;; Auto vars:     Size  Location     Type
  8304 ;;  size            1    1[BANK0 ] unsigned char 
  8305 ;; Return value:  Size  Location     Type
  8306 ;;                  1    wreg      void 
  8307 ;; Registers used:
  8308 ;;		wreg, status,2, status,0, pclath, cstack
  8309 ;; Tracked objects:
  8310 ;;		On entry : 0/0
  8311 ;;		On exit  : 300/100
  8312 ;;		Unchanged: 0/0
  8313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8314 ;;      Params:         0       0       0       0       0
  8315 ;;      Locals:         0       1       0       0       0
  8316 ;;      Temps:          0       0       0       0       0
  8317 ;;      Totals:         0       1       0       0       0
  8318 ;;Total ram usage:        1 bytes
  8319 ;; Hardware stack levels used:    1
  8320 ;; Hardware stack levels required when called:    2
  8321 ;; This function calls:
  8322 ;;		_USART_putc
  8323 ;; This function is called by:
  8324 ;;		_Decodify_Command
  8325 ;; This function uses a non-reentrant model
  8326 ;;
  8327                           
  8328                           
  8329                           ;psect for function _Send_To_MB
  8330  0800                     _Send_To_MB:	
  8331                           
  8332                           ;incstack = 0
  8333                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  8334                           ;Send_To_MB@size stored from wreg
  8335  0800  1283               	bcf	3,5	;RP0=0, select bank0
  8336  0801  1303               	bcf	3,6	;RP1=0, select bank0
  8337  0802  00A1               	movwf	Send_To_MB@size
  8338                           
  8339                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(0xAA);
  8340  0803  30AA               	movlw	170
  8341  0804  160A  118A  2004  120A  158A  	fcall	_USART_putc
  8342                           
  8343                           ;SlaveLiofilizadorVer1.c: 650:      USART_putc(0xBB);
  8344  0809  30BB               	movlw	187
  8345  080A  160A  118A  2004  120A  158A  	fcall	_USART_putc
  8346                           
  8347                           ;SlaveLiofilizadorVer1.c: 651:      USART_putc(Board_Number);
  8348  080F  0863               	movf	_Board_Number^(0+128),w
  8349  0810  160A  118A  2004  120A  158A  	fcall	_USART_putc
  8350                           
  8351                           ;SlaveLiofilizadorVer1.c: 652:      USART_putc(0x00);
  8352  0815  3000               	movlw	0
  8353  0816  160A  118A  2004  120A  158A  	fcall	_USART_putc
  8354                           
  8355                           ;SlaveLiofilizadorVer1.c: 653:      USART_putc(usart_protocol.command);
  8356  081B  1703               	bsf	3,6	;RP1=1, select bank3
  8357  081C  084E               	movf	(_usart_protocol^(0+384)+4),w
  8358  081D  160A  118A  2004  120A  158A  	fcall	_USART_putc
  8359                           
  8360                           ;SlaveLiofilizadorVer1.c: 654:      USART_putc(size);
  8361  0822  1283               	bcf	3,5	;RP0=0, select bank0
  8362  0823  0821               	movf	Send_To_MB@size,w
  8363  0824  160A  118A  2004   	fcall	_USART_putc
  8364  0827  0008               	return
  8365  0828                     __end_of_Send_To_MB:	
  8366                           
  8367                           	psect	text25
  8368  1951                     __ptext25:	
  8369 ;; *************** function _Send_Reply_OK *****************
  8370 ;; Defined at:
  8371 ;;		line 658 in file "SlaveLiofilizadorVer1.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;		None
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;		None
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  1    wreg      void 
  8378 ;; Registers used:
  8379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8380 ;; Tracked objects:
  8381 ;;		On entry : 300/100
  8382 ;;		On exit  : 300/100
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8385 ;;      Params:         0       0       0       0       0
  8386 ;;      Locals:         0       0       0       0       0
  8387 ;;      Temps:          0       0       0       0       0
  8388 ;;      Totals:         0       0       0       0       0
  8389 ;;Total ram usage:        0 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; Hardware stack levels required when called:    3
  8392 ;; This function calls:
  8393 ;;		_USART_put_string
  8394 ;; This function is called by:
  8395 ;;		_Decodify_Command
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           
  8400                           ;psect for function _Send_Reply_OK
  8401  1951                     _Send_Reply_OK:	
  8402                           
  8403                           ;SlaveLiofilizadorVer1.c: 659:      USART_put_string("OK");
  8404                           
  8405                           ;incstack = 0
  8406                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8407  1951  3048               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  8408  1952  1283               	bcf	3,5	;RP0=0, select bank0
  8409  1953  00A1               	movwf	USART_put_string@vetor
  8410  1954  3080               	movlw	128
  8411  1955  00A2               	movwf	USART_put_string@vetor+1
  8412  1956  160A  158A  24BF   	fcall	_USART_put_string
  8413  1959  0008               	return
  8414  195A                     __end_of_Send_Reply_OK:	
  8415                           
  8416                           	psect	text26
  8417  1CBF                     __ptext26:	
  8418 ;; *************** function _USART_put_string *****************
  8419 ;; Defined at:
  8420 ;;		line 168 in file "usart.c"
  8421 ;; Parameters:    Size  Location     Type
  8422 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  8423 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  8426 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  8427 ;; Return value:  Size  Location     Type
  8428 ;;                  1    wreg      void 
  8429 ;; Registers used:
  8430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8431 ;; Tracked objects:
  8432 ;;		On entry : 300/0
  8433 ;;		On exit  : 300/100
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8436 ;;      Params:         0       2       0       0       0
  8437 ;;      Locals:         0       2       0       0       0
  8438 ;;      Temps:          0       0       0       0       0
  8439 ;;      Totals:         0       4       0       0       0
  8440 ;;Total ram usage:        4 bytes
  8441 ;; Hardware stack levels used:    1
  8442 ;; Hardware stack levels required when called:    2
  8443 ;; This function calls:
  8444 ;;		_USART_putc
  8445 ;; This function is called by:
  8446 ;;		_Decodify_Command
  8447 ;;		_Send_Reply_OK
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451                           
  8452                           ;psect for function _USART_put_string
  8453  1CBF                     _USART_put_string:	
  8454                           
  8455                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  8456                           
  8457                           ;incstack = 0
  8458                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8459  1CBF  0821               	movf	USART_put_string@vetor,w
  8460  1CC0  00A3               	movwf	USART_put_string@ptr
  8461  1CC1  0822               	movf	USART_put_string@vetor+1,w
  8462  1CC2  00A4               	movwf	USART_put_string@ptr+1
  8463  1CC3                     l5982:	
  8464                           ;usart.c: 172:     while(*(ptr)){
  8465                           
  8466                           
  8467                           ;usart.c: 172:     while(*(ptr)){
  8468  1CC3  0824               	movf	USART_put_string@ptr+1,w
  8469  1CC4  00FF               	movwf	127
  8470  1CC5  0823               	movf	USART_put_string@ptr,w
  8471  1CC6  0084               	movwf	4
  8472  1CC7  160A  158A  2000  160A  158A  	fcall	stringtab
  8473  1CCC  3A00               	xorlw	0
  8474  1CCD  1903               	btfsc	3,2
  8475  1CCE  2CE5               	goto	l5984
  8476                           
  8477                           ;usart.c: 173:         USART_putc(*(ptr));
  8478  1CCF  0824               	movf	USART_put_string@ptr+1,w
  8479  1CD0  00FF               	movwf	127
  8480  1CD1  0823               	movf	USART_put_string@ptr,w
  8481  1CD2  0084               	movwf	4
  8482  1CD3  160A  158A  2000  160A  158A  	fcall	stringtab
  8483  1CD8  160A  118A  2004  160A  158A  	fcall	_USART_putc
  8484                           
  8485                           ;usart.c: 174:         ptr++;
  8486  1CDD  3001               	movlw	1
  8487  1CDE  1283               	bcf	3,5	;RP0=0, select bank0
  8488  1CDF  07A3               	addwf	USART_put_string@ptr,f
  8489  1CE0  1803               	skipnc
  8490  1CE1  0AA4               	incf	USART_put_string@ptr+1,f
  8491  1CE2  3000               	movlw	0
  8492  1CE3  07A4               	addwf	USART_put_string@ptr+1,f
  8493  1CE4  2CC3               	goto	l5982
  8494  1CE5                     l5984:	
  8495                           
  8496                           ;usart.c: 176:     USART_putc(*(ptr));
  8497  1CE5  0824               	movf	USART_put_string@ptr+1,w
  8498  1CE6  00FF               	movwf	127
  8499  1CE7  0823               	movf	USART_put_string@ptr,w
  8500  1CE8  0084               	movwf	4
  8501  1CE9  160A  158A  2000  160A  158A  	fcall	stringtab
  8502  1CEE  160A  118A  2004   	fcall	_USART_putc
  8503  1CF1  0008               	return
  8504  1CF2                     __end_of_USART_put_string:	
  8505                           
  8506                           	psect	text27
  8507  10BE                     __ptext27:	
  8508 ;; *************** function _Save_Log *****************
  8509 ;; Defined at:
  8510 ;;		line 1017 in file "SlaveLiofilizadorVer1.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  add_datalog     4   56[BANK0 ] unsigned long 
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;		None
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  1    wreg      void 
  8517 ;; Registers used:
  8518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8519 ;; Tracked objects:
  8520 ;;		On entry : 300/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8524 ;;      Params:         0       4       0       0       0
  8525 ;;      Locals:         0       0       0       0       0
  8526 ;;      Temps:          0       0       0       0       0
  8527 ;;      Totals:         0       4       0       0       0
  8528 ;;Total ram usage:        4 bytes
  8529 ;; Hardware stack levels used:    1
  8530 ;; Hardware stack levels required when called:    5
  8531 ;; This function calls:
  8532 ;;		_EEPROM_24C1025_Write_Int
  8533 ;;		___flmul
  8534 ;;		___fltol
  8535 ;; This function is called by:
  8536 ;;		_Decodify_Command
  8537 ;; This function uses a non-reentrant model
  8538 ;;
  8539                           
  8540                           
  8541                           ;psect for function _Save_Log
  8542  10BE                     _Save_Log:	
  8543                           
  8544                           ;SlaveLiofilizadorVer1.c: 1018:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (int) (
      +                          Tensao1*10));
  8545                           
  8546                           ;incstack = 0
  8547                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8548  10BE  085B               	movf	Save_Log@add_datalog+3,w
  8549  10BF  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8550  10C0  085A               	movf	Save_Log@add_datalog+2,w
  8551  10C1  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8552  10C2  0859               	movf	Save_Log@add_datalog+1,w
  8553  10C3  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8554  10C4  0858               	movf	Save_Log@add_datalog,w
  8555  10C5  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8556  10C6  1683               	bsf	3,5	;RP0=1, select bank1
  8557  10C7  0850               	movf	(_Tensao1+3)^(0+128),w
  8558  10C8  1283               	bcf	3,5	;RP0=0, select bank0
  8559  10C9  00B0               	movwf	___flmul@a+3
  8560  10CA  1683               	bsf	3,5	;RP0=1, select bank1
  8561  10CB  084F               	movf	(_Tensao1+2)^(0+128),w
  8562  10CC  1283               	bcf	3,5	;RP0=0, select bank0
  8563  10CD  00AF               	movwf	___flmul@a+2
  8564  10CE  1683               	bsf	3,5	;RP0=1, select bank1
  8565  10CF  084E               	movf	(_Tensao1+1)^(0+128),w
  8566  10D0  1283               	bcf	3,5	;RP0=0, select bank0
  8567  10D1  00AE               	movwf	___flmul@a+1
  8568  10D2  1683               	bsf	3,5	;RP0=1, select bank1
  8569  10D3  084D               	movf	_Tensao1^(0+128),w
  8570  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  8571  10D5  00AD               	movwf	___flmul@a
  8572  10D6  3041               	movlw	65
  8573  10D7  00AC               	movwf	___flmul@b+3
  8574  10D8  3020               	movlw	32
  8575  10D9  00AB               	movwf	___flmul@b+2
  8576  10DA  3000               	movlw	0
  8577  10DB  00AA               	movwf	___flmul@b+1
  8578  10DC  3000               	movlw	0
  8579  10DD  00A9               	movwf	___flmul@b
  8580  10DE  120A  118A  24BC  160A  118A  	fcall	___flmul
  8581  10E3  082C               	movf	?___flmul+3,w
  8582  10E4  00C6               	movwf	___fltol@f1+3
  8583  10E5  082B               	movf	?___flmul+2,w
  8584  10E6  00C5               	movwf	___fltol@f1+2
  8585  10E7  082A               	movf	?___flmul+1,w
  8586  10E8  00C4               	movwf	___fltol@f1+1
  8587  10E9  0829               	movf	?___flmul,w
  8588  10EA  00C3               	movwf	___fltol@f1
  8589  10EB  160A  118A  2053  160A  118A  	fcall	___fltol
  8590  10F0  0844               	movf	?___fltol+1,w
  8591  10F1  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  8592  10F2  0843               	movf	?___fltol,w
  8593  10F3  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  8594  10F4  3000               	movlw	0
  8595  10F5  160A  158A  2269  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  8596                           
  8597                           ;SlaveLiofilizadorVer1.c: 1019:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (int) (
      +                          Vaccum0*10));
  8598  10FA  1283               	bcf	3,5	;RP0=0, select bank0
  8599  10FB  1303               	bcf	3,6	;RP1=0, select bank0
  8600  10FC  085B               	movf	Save_Log@add_datalog+3,w
  8601  10FD  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8602  10FE  085A               	movf	Save_Log@add_datalog+2,w
  8603  10FF  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8604  1100  0859               	movf	Save_Log@add_datalog+1,w
  8605  1101  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8606  1102  0858               	movf	Save_Log@add_datalog,w
  8607  1103  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8608  1104  1683               	bsf	3,5	;RP0=1, select bank1
  8609  1105  0854               	movf	(_Vaccum0+3)^(0+128),w
  8610  1106  1283               	bcf	3,5	;RP0=0, select bank0
  8611  1107  00B0               	movwf	___flmul@a+3
  8612  1108  1683               	bsf	3,5	;RP0=1, select bank1
  8613  1109  0853               	movf	(_Vaccum0+2)^(0+128),w
  8614  110A  1283               	bcf	3,5	;RP0=0, select bank0
  8615  110B  00AF               	movwf	___flmul@a+2
  8616  110C  1683               	bsf	3,5	;RP0=1, select bank1
  8617  110D  0852               	movf	(_Vaccum0+1)^(0+128),w
  8618  110E  1283               	bcf	3,5	;RP0=0, select bank0
  8619  110F  00AE               	movwf	___flmul@a+1
  8620  1110  1683               	bsf	3,5	;RP0=1, select bank1
  8621  1111  0851               	movf	_Vaccum0^(0+128),w
  8622  1112  1283               	bcf	3,5	;RP0=0, select bank0
  8623  1113  00AD               	movwf	___flmul@a
  8624  1114  3041               	movlw	65
  8625  1115  00AC               	movwf	___flmul@b+3
  8626  1116  3020               	movlw	32
  8627  1117  00AB               	movwf	___flmul@b+2
  8628  1118  3000               	movlw	0
  8629  1119  00AA               	movwf	___flmul@b+1
  8630  111A  3000               	movlw	0
  8631  111B  00A9               	movwf	___flmul@b
  8632  111C  120A  118A  24BC  160A  118A  	fcall	___flmul
  8633  1121  082C               	movf	?___flmul+3,w
  8634  1122  00C6               	movwf	___fltol@f1+3
  8635  1123  082B               	movf	?___flmul+2,w
  8636  1124  00C5               	movwf	___fltol@f1+2
  8637  1125  082A               	movf	?___flmul+1,w
  8638  1126  00C4               	movwf	___fltol@f1+1
  8639  1127  0829               	movf	?___flmul,w
  8640  1128  00C3               	movwf	___fltol@f1
  8641  1129  160A  118A  2053  160A  118A  	fcall	___fltol
  8642  112E  0844               	movf	?___fltol+1,w
  8643  112F  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  8644  1130  0843               	movf	?___fltol,w
  8645  1131  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  8646  1132  3001               	movlw	1
  8647  1133  160A  158A  2269   	fcall	_EEPROM_24C1025_Write_Int
  8648  1136  0008               	return
  8649  1137                     __end_of_Save_Log:	
  8650                           
  8651                           	psect	text28
  8652  1053                     __ptext28:	
  8653 ;; *************** function ___fltol *****************
  8654 ;; Defined at:
  8655 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;  f1              4   35[BANK0 ] void 
  8658 ;; Auto vars:     Size  Location     Type
  8659 ;;  exp1            1   45[BANK0 ] unsigned char 
  8660 ;;  sign1           1   44[BANK0 ] unsigned char 
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  4   35[BANK0 ] long 
  8663 ;; Registers used:
  8664 ;;		wreg, status,2, status,0
  8665 ;; Tracked objects:
  8666 ;;		On entry : 300/0
  8667 ;;		On exit  : 300/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8670 ;;      Params:         0       4       0       0       0
  8671 ;;      Locals:         0       2       0       0       0
  8672 ;;      Temps:          0       5       0       0       0
  8673 ;;      Totals:         0      11       0       0       0
  8674 ;;Total ram usage:       11 bytes
  8675 ;; Hardware stack levels used:    1
  8676 ;; Hardware stack levels required when called:    1
  8677 ;; This function calls:
  8678 ;;		Nothing
  8679 ;; This function is called by:
  8680 ;;		_Decodify_Command
  8681 ;;		_Save_Log
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           
  8686                           ;psect for function ___fltol
  8687  1053                     ___fltol:	
  8688                           
  8689                           ;incstack = 0
  8690                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8691  1053  1003               	clrc
  8692  1054  0D45               	rlf	___fltol@f1+2,w
  8693  1055  0D46               	rlf	___fltol@f1+3,w
  8694  1056  00C7               	movwf	??___fltol
  8695  1057  0847               	movf	??___fltol,w
  8696  1058  00CD               	movwf	___fltol@exp1
  8697  1059  084D               	movf	___fltol@exp1,w
  8698  105A  1D03               	btfss	3,2
  8699  105B  2865               	goto	l6084
  8700  105C                     l6080:	
  8701  105C  3000               	movlw	0
  8702  105D  00C6               	movwf	?___fltol+3
  8703  105E  3000               	movlw	0
  8704  105F  00C5               	movwf	?___fltol+2
  8705  1060  3000               	movlw	0
  8706  1061  00C4               	movwf	?___fltol+1
  8707  1062  3000               	movlw	0
  8708  1063  00C3               	movwf	?___fltol
  8709  1064  0008               	return
  8710  1065                     l6084:	
  8711  1065  0843               	movf	___fltol@f1,w
  8712  1066  00C7               	movwf	??___fltol
  8713  1067  0844               	movf	___fltol@f1+1,w
  8714  1068  00C8               	movwf	??___fltol+1
  8715  1069  0845               	movf	___fltol@f1+2,w
  8716  106A  00C9               	movwf	??___fltol+2
  8717  106B  0846               	movf	___fltol@f1+3,w
  8718  106C  00CA               	movwf	??___fltol+3
  8719  106D  301F               	movlw	31
  8720  106E                     u5825:	
  8721  106E  1003               	clrc
  8722  106F  0CCA               	rrf	??___fltol+3,f
  8723  1070  0CC9               	rrf	??___fltol+2,f
  8724  1071  0CC8               	rrf	??___fltol+1,f
  8725  1072  0CC7               	rrf	??___fltol,f
  8726  1073  3EFF               	addlw	-1
  8727  1074  1D03               	skipz
  8728  1075  286E               	goto	u5825
  8729  1076  0847               	movf	??___fltol,w
  8730  1077  00CB               	movwf	??___fltol+4
  8731  1078  084B               	movf	??___fltol+4,w
  8732  1079  00CC               	movwf	___fltol@sign1
  8733  107A  17C5               	bsf	___fltol@f1+2,7
  8734  107B  30FF               	movlw	255
  8735  107C  05C3               	andwf	___fltol@f1,f
  8736  107D  30FF               	movlw	255
  8737  107E  05C4               	andwf	___fltol@f1+1,f
  8738  107F  30FF               	movlw	255
  8739  1080  05C5               	andwf	___fltol@f1+2,f
  8740  1081  3000               	movlw	0
  8741  1082  05C6               	andwf	___fltol@f1+3,f
  8742  1083  3096               	movlw	150
  8743  1084  02CD               	subwf	___fltol@exp1,f
  8744  1085  1FCD               	btfss	___fltol@exp1,7
  8745  1086  289C               	goto	l6102
  8746  1087  084D               	movf	___fltol@exp1,w
  8747  1088  3A80               	xorlw	128
  8748  1089  3E97               	addlw	151
  8749  108A  1C03               	btfss	3,0
  8750  108B  285C               	goto	l6080
  8751  108C                     l6100:	
  8752  108C  3001               	movlw	1
  8753  108D                     u5855:	
  8754  108D  1003               	clrc
  8755  108E  0CC6               	rrf	___fltol@f1+3,f
  8756  108F  0CC5               	rrf	___fltol@f1+2,f
  8757  1090  0CC4               	rrf	___fltol@f1+1,f
  8758  1091  0CC3               	rrf	___fltol@f1,f
  8759  1092  3EFF               	addlw	-1
  8760  1093  1D03               	skipz
  8761  1094  288D               	goto	u5855
  8762  1095  3001               	movlw	1
  8763  1096  00C7               	movwf	??___fltol
  8764  1097  0847               	movf	??___fltol,w
  8765  1098  07CD               	addwf	___fltol@exp1,f
  8766  1099  1903               	btfsc	3,2
  8767  109A  28AF               	goto	l6110
  8768  109B  288C               	goto	l6100
  8769  109C                     l6102:	
  8770  109C  3020               	movlw	32
  8771  109D  024D               	subwf	___fltol@exp1,w
  8772  109E  1803               	btfsc	3,0
  8773  109F  285C               	goto	l6080
  8774  10A0                     l1182:	
  8775  10A0  084D               	movf	___fltol@exp1,w
  8776  10A1  1903               	btfsc	3,2
  8777  10A2  28AF               	goto	l6110
  8778  10A3  3001               	movlw	1
  8779  10A4  00C7               	movwf	??___fltol
  8780  10A5                     u5885:	
  8781  10A5  1003               	clrc
  8782  10A6  0DC3               	rlf	___fltol@f1,f
  8783  10A7  0DC4               	rlf	___fltol@f1+1,f
  8784  10A8  0DC5               	rlf	___fltol@f1+2,f
  8785  10A9  0DC6               	rlf	___fltol@f1+3,f
  8786  10AA  0BC7               	decfsz	??___fltol,f
  8787  10AB  28A5               	goto	u5885
  8788  10AC  3001               	movlw	1
  8789  10AD  02CD               	subwf	___fltol@exp1,f
  8790  10AE  28A0               	goto	l1182
  8791  10AF                     l6110:	
  8792  10AF  084C               	movf	___fltol@sign1,w
  8793  10B0  1903               	btfsc	3,2
  8794  10B1  0008               	return
  8795  10B2  09C3               	comf	___fltol@f1,f
  8796  10B3  09C4               	comf	___fltol@f1+1,f
  8797  10B4  09C5               	comf	___fltol@f1+2,f
  8798  10B5  09C6               	comf	___fltol@f1+3,f
  8799  10B6  0AC3               	incf	___fltol@f1,f
  8800  10B7  1903               	skipnz
  8801  10B8  0AC4               	incf	___fltol@f1+1,f
  8802  10B9  1903               	skipnz
  8803  10BA  0AC5               	incf	___fltol@f1+2,f
  8804  10BB  1903               	skipnz
  8805  10BC  0AC6               	incf	___fltol@f1+3,f
  8806  10BD  0008               	return
  8807  10BE                     __end_of___fltol:	
  8808                           
  8809                           	psect	text29
  8810  04BC                     __ptext29:	
  8811 ;; *************** function ___flmul *****************
  8812 ;; Defined at:
  8813 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  b               4    9[BANK0 ] long 
  8816 ;;  a               4   13[BANK0 ] long 
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;  prod            4   29[BANK0 ] struct .
  8819 ;;  grs             4   25[BANK0 ] unsigned long 
  8820 ;;  temp            2   33[BANK0 ] struct .
  8821 ;;  bexp            1   24[BANK0 ] unsigned char 
  8822 ;;  aexp            1   23[BANK0 ] unsigned char 
  8823 ;;  sign            1   22[BANK0 ] unsigned char 
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  4    9[BANK0 ] unsigned char 
  8826 ;; Registers used:
  8827 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8828 ;; Tracked objects:
  8829 ;;		On entry : 300/0
  8830 ;;		On exit  : 300/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8833 ;;      Params:         0       8       0       0       0
  8834 ;;      Locals:         0      13       0       0       0
  8835 ;;      Temps:          0       5       0       0       0
  8836 ;;      Totals:         0      26       0       0       0
  8837 ;;Total ram usage:       26 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:    2
  8840 ;; This function calls:
  8841 ;;		__Umul8_16
  8842 ;; This function is called by:
  8843 ;;		_Decodify_Command
  8844 ;;		_MediaPlacaVaccum
  8845 ;;		_Save_Log
  8846 ;; This function uses a non-reentrant model
  8847 ;;
  8848                           
  8849                           
  8850                           ;psect for function ___flmul
  8851  04BC                     ___flmul:	
  8852                           
  8853                           ;incstack = 0
  8854                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8855  04BC  082C               	movf	___flmul@b+3,w
  8856  04BD  3980               	andlw	128
  8857  04BE  00B1               	movwf	??___flmul
  8858  04BF  0831               	movf	??___flmul,w
  8859  04C0  00B6               	movwf	___flmul@sign
  8860  04C1  082C               	movf	___flmul@b+3,w
  8861  04C2  00B1               	movwf	??___flmul
  8862  04C3  0731               	addwf	??___flmul,w
  8863  04C4  00B2               	movwf	??___flmul+1
  8864  04C5  0832               	movf	??___flmul+1,w
  8865  04C6  00B8               	movwf	___flmul@bexp
  8866  04C7  1BAB               	btfsc	___flmul@b+2,7
  8867  04C8  1438               	bsf	___flmul@bexp,0
  8868  04C9  0838               	movf	___flmul@bexp,w
  8869  04CA  1903               	btfsc	3,2
  8870  04CB  2CD9               	goto	l6324
  8871  04CC  0A38               	incf	___flmul@bexp,w
  8872  04CD  1D03               	btfss	3,2
  8873  04CE  2CD7               	goto	l6322
  8874  04CF  3000               	movlw	0
  8875  04D0  00AC               	movwf	___flmul@b+3
  8876  04D1  3000               	movlw	0
  8877  04D2  00AB               	movwf	___flmul@b+2
  8878  04D3  3000               	movlw	0
  8879  04D4  00AA               	movwf	___flmul@b+1
  8880  04D5  3000               	movlw	0
  8881  04D6  00A9               	movwf	___flmul@b
  8882  04D7                     l6322:	
  8883  04D7  17AB               	bsf	___flmul@b+2,7
  8884  04D8  2CE1               	goto	l6326
  8885  04D9                     l6324:	
  8886  04D9  3000               	movlw	0
  8887  04DA  00AC               	movwf	___flmul@b+3
  8888  04DB  3000               	movlw	0
  8889  04DC  00AB               	movwf	___flmul@b+2
  8890  04DD  3000               	movlw	0
  8891  04DE  00AA               	movwf	___flmul@b+1
  8892  04DF  3000               	movlw	0
  8893  04E0  00A9               	movwf	___flmul@b
  8894  04E1                     l6326:	
  8895  04E1  0830               	movf	___flmul@a+3,w
  8896  04E2  3980               	andlw	128
  8897  04E3  00B1               	movwf	??___flmul
  8898  04E4  0831               	movf	??___flmul,w
  8899  04E5  06B6               	xorwf	___flmul@sign,f
  8900  04E6  0830               	movf	___flmul@a+3,w
  8901  04E7  00B1               	movwf	??___flmul
  8902  04E8  0731               	addwf	??___flmul,w
  8903  04E9  00B2               	movwf	??___flmul+1
  8904  04EA  0832               	movf	??___flmul+1,w
  8905  04EB  00B7               	movwf	___flmul@aexp
  8906  04EC  1BAF               	btfsc	___flmul@a+2,7
  8907  04ED  1437               	bsf	___flmul@aexp,0
  8908  04EE  0837               	movf	___flmul@aexp,w
  8909  04EF  1903               	btfsc	3,2
  8910  04F0  2CFE               	goto	l6342
  8911  04F1  0A37               	incf	___flmul@aexp,w
  8912  04F2  1D03               	btfss	3,2
  8913  04F3  2CFC               	goto	l6340
  8914  04F4  3000               	movlw	0
  8915  04F5  00B0               	movwf	___flmul@a+3
  8916  04F6  3000               	movlw	0
  8917  04F7  00AF               	movwf	___flmul@a+2
  8918  04F8  3000               	movlw	0
  8919  04F9  00AE               	movwf	___flmul@a+1
  8920  04FA  3000               	movlw	0
  8921  04FB  00AD               	movwf	___flmul@a
  8922  04FC                     l6340:	
  8923  04FC  17AF               	bsf	___flmul@a+2,7
  8924  04FD  2D06               	goto	l6344
  8925  04FE                     l6342:	
  8926  04FE  3000               	movlw	0
  8927  04FF  00B0               	movwf	___flmul@a+3
  8928  0500  3000               	movlw	0
  8929  0501  00AF               	movwf	___flmul@a+2
  8930  0502  3000               	movlw	0
  8931  0503  00AE               	movwf	___flmul@a+1
  8932  0504  3000               	movlw	0
  8933  0505  00AD               	movwf	___flmul@a
  8934  0506                     l6344:	
  8935  0506  0837               	movf	___flmul@aexp,w
  8936  0507  1D03               	btfss	3,2
  8937  0508  0838               	movf	___flmul@bexp,w
  8938  0509  1D03               	btfss	3,2
  8939  050A  2D14               	goto	l6352
  8940  050B  3000               	movlw	0
  8941  050C  00AC               	movwf	?___flmul+3
  8942  050D  3000               	movlw	0
  8943  050E  00AB               	movwf	?___flmul+2
  8944  050F  3000               	movlw	0
  8945  0510  00AA               	movwf	?___flmul+1
  8946  0511  3000               	movlw	0
  8947  0512  00A9               	movwf	?___flmul
  8948  0513  0008               	return
  8949  0514                     l6352:	
  8950  0514  0829               	movf	___flmul@b,w
  8951  0515  00B1               	movwf	??___flmul
  8952  0516  0831               	movf	??___flmul,w
  8953  0517  00A0               	movwf	__Umul8_16@multiplicand
  8954  0518  082F               	movf	___flmul@a+2,w
  8955  0519  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  8956  051E  0821               	movf	?__Umul8_16+1,w
  8957  051F  00C2               	movwf	___flmul@temp+1
  8958  0520  0820               	movf	?__Umul8_16,w
  8959  0521  00C1               	movwf	___flmul@temp
  8960  0522  0841               	movf	___flmul@temp,w
  8961  0523  00B1               	movwf	??___flmul
  8962  0524  01B2               	clrf	??___flmul+1
  8963  0525  01B3               	clrf	??___flmul+2
  8964  0526  01B4               	clrf	??___flmul+3
  8965  0527  0834               	movf	??___flmul+3,w
  8966  0528  00BC               	movwf	___flmul@grs+3
  8967  0529  0833               	movf	??___flmul+2,w
  8968  052A  00BB               	movwf	___flmul@grs+2
  8969  052B  0832               	movf	??___flmul+1,w
  8970  052C  00BA               	movwf	___flmul@grs+1
  8971  052D  0831               	movf	??___flmul,w
  8972  052E  00B9               	movwf	___flmul@grs
  8973  052F  0842               	movf	___flmul@temp+1,w
  8974  0530  00B1               	movwf	??___flmul
  8975  0531  01B2               	clrf	??___flmul+1
  8976  0532  01B3               	clrf	??___flmul+2
  8977  0533  01B4               	clrf	??___flmul+3
  8978  0534  0834               	movf	??___flmul+3,w
  8979  0535  00C0               	movwf	___flmul@prod+3
  8980  0536  0833               	movf	??___flmul+2,w
  8981  0537  00BF               	movwf	___flmul@prod+2
  8982  0538  0832               	movf	??___flmul+1,w
  8983  0539  00BE               	movwf	___flmul@prod+1
  8984  053A  0831               	movf	??___flmul,w
  8985  053B  00BD               	movwf	___flmul@prod
  8986  053C  082A               	movf	___flmul@b+1,w
  8987  053D  00B1               	movwf	??___flmul
  8988  053E  0831               	movf	??___flmul,w
  8989  053F  00A0               	movwf	__Umul8_16@multiplicand
  8990  0540  082E               	movf	___flmul@a+1,w
  8991  0541  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  8992  0546  0821               	movf	?__Umul8_16+1,w
  8993  0547  00C2               	movwf	___flmul@temp+1
  8994  0548  0820               	movf	?__Umul8_16,w
  8995  0549  00C1               	movwf	___flmul@temp
  8996  054A  0841               	movf	___flmul@temp,w
  8997  054B  00B1               	movwf	??___flmul
  8998  054C  01B2               	clrf	??___flmul+1
  8999  054D  01B3               	clrf	??___flmul+2
  9000  054E  01B4               	clrf	??___flmul+3
  9001  054F  0831               	movf	??___flmul,w
  9002  0550  07B9               	addwf	___flmul@grs,f
  9003  0551  0832               	movf	??___flmul+1,w
  9004  0552  1103               	clrz
  9005  0553  1803               	skipnc
  9006  0554  3E01               	addlw	1
  9007  0555  1D03               	btfss	3,2
  9008  0556  07BA               	addwf	___flmul@grs+1,f
  9009  0557  0833               	movf	??___flmul+2,w
  9010  0558  1103               	clrz
  9011  0559  1803               	skipnc
  9012  055A  3E01               	addlw	1
  9013  055B  1D03               	btfss	3,2
  9014  055C  07BB               	addwf	___flmul@grs+2,f
  9015  055D  0834               	movf	??___flmul+3,w
  9016  055E  1103               	clrz
  9017  055F  1803               	skipnc
  9018  0560  3E01               	addlw	1
  9019  0561  1D03               	btfss	3,2
  9020  0562  07BC               	addwf	___flmul@grs+3,f
  9021  0563  0842               	movf	___flmul@temp+1,w
  9022  0564  00B1               	movwf	??___flmul
  9023  0565  01B2               	clrf	??___flmul+1
  9024  0566  01B3               	clrf	??___flmul+2
  9025  0567  01B4               	clrf	??___flmul+3
  9026  0568  0831               	movf	??___flmul,w
  9027  0569  07BD               	addwf	___flmul@prod,f
  9028  056A  0832               	movf	??___flmul+1,w
  9029  056B  1103               	clrz
  9030  056C  1803               	skipnc
  9031  056D  3E01               	addlw	1
  9032  056E  1D03               	btfss	3,2
  9033  056F  07BE               	addwf	___flmul@prod+1,f
  9034  0570  0833               	movf	??___flmul+2,w
  9035  0571  1103               	clrz
  9036  0572  1803               	skipnc
  9037  0573  3E01               	addlw	1
  9038  0574  1D03               	btfss	3,2
  9039  0575  07BF               	addwf	___flmul@prod+2,f
  9040  0576  0834               	movf	??___flmul+3,w
  9041  0577  1103               	clrz
  9042  0578  1803               	skipnc
  9043  0579  3E01               	addlw	1
  9044  057A  1D03               	btfss	3,2
  9045  057B  07C0               	addwf	___flmul@prod+3,f
  9046  057C  082B               	movf	___flmul@b+2,w
  9047  057D  00B1               	movwf	??___flmul
  9048  057E  0831               	movf	??___flmul,w
  9049  057F  00A0               	movwf	__Umul8_16@multiplicand
  9050  0580  082D               	movf	___flmul@a,w
  9051  0581  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  9052  0586  0821               	movf	?__Umul8_16+1,w
  9053  0587  00C2               	movwf	___flmul@temp+1
  9054  0588  0820               	movf	?__Umul8_16,w
  9055  0589  00C1               	movwf	___flmul@temp
  9056  058A  0841               	movf	___flmul@temp,w
  9057  058B  00B1               	movwf	??___flmul
  9058  058C  01B2               	clrf	??___flmul+1
  9059  058D  01B3               	clrf	??___flmul+2
  9060  058E  01B4               	clrf	??___flmul+3
  9061  058F  0831               	movf	??___flmul,w
  9062  0590  07B9               	addwf	___flmul@grs,f
  9063  0591  0832               	movf	??___flmul+1,w
  9064  0592  1103               	clrz
  9065  0593  1803               	skipnc
  9066  0594  3E01               	addlw	1
  9067  0595  1D03               	btfss	3,2
  9068  0596  07BA               	addwf	___flmul@grs+1,f
  9069  0597  0833               	movf	??___flmul+2,w
  9070  0598  1103               	clrz
  9071  0599  1803               	skipnc
  9072  059A  3E01               	addlw	1
  9073  059B  1D03               	btfss	3,2
  9074  059C  07BB               	addwf	___flmul@grs+2,f
  9075  059D  0834               	movf	??___flmul+3,w
  9076  059E  1103               	clrz
  9077  059F  1803               	skipnc
  9078  05A0  3E01               	addlw	1
  9079  05A1  1D03               	btfss	3,2
  9080  05A2  07BC               	addwf	___flmul@grs+3,f
  9081  05A3  0842               	movf	___flmul@temp+1,w
  9082  05A4  00B1               	movwf	??___flmul
  9083  05A5  01B2               	clrf	??___flmul+1
  9084  05A6  01B3               	clrf	??___flmul+2
  9085  05A7  01B4               	clrf	??___flmul+3
  9086  05A8  0831               	movf	??___flmul,w
  9087  05A9  07BD               	addwf	___flmul@prod,f
  9088  05AA  0832               	movf	??___flmul+1,w
  9089  05AB  1103               	clrz
  9090  05AC  1803               	skipnc
  9091  05AD  3E01               	addlw	1
  9092  05AE  1D03               	btfss	3,2
  9093  05AF  07BE               	addwf	___flmul@prod+1,f
  9094  05B0  0833               	movf	??___flmul+2,w
  9095  05B1  1103               	clrz
  9096  05B2  1803               	skipnc
  9097  05B3  3E01               	addlw	1
  9098  05B4  1D03               	btfss	3,2
  9099  05B5  07BF               	addwf	___flmul@prod+2,f
  9100  05B6  0834               	movf	??___flmul+3,w
  9101  05B7  1103               	clrz
  9102  05B8  1803               	skipnc
  9103  05B9  3E01               	addlw	1
  9104  05BA  1D03               	btfss	3,2
  9105  05BB  07C0               	addwf	___flmul@prod+3,f
  9106  05BC  3008               	movlw	8
  9107  05BD  00B1               	movwf	??___flmul
  9108  05BE                     u6495:	
  9109  05BE  1003               	clrc
  9110  05BF  0DB9               	rlf	___flmul@grs,f
  9111  05C0  0DBA               	rlf	___flmul@grs+1,f
  9112  05C1  0DBB               	rlf	___flmul@grs+2,f
  9113  05C2  0DBC               	rlf	___flmul@grs+3,f
  9114  05C3  0BB1               	decfsz	??___flmul,f
  9115  05C4  2DBE               	goto	u6495
  9116  05C5  082A               	movf	___flmul@b+1,w
  9117  05C6  00B1               	movwf	??___flmul
  9118  05C7  0831               	movf	??___flmul,w
  9119  05C8  00A0               	movwf	__Umul8_16@multiplicand
  9120  05C9  082D               	movf	___flmul@a,w
  9121  05CA  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  9122  05CF  0821               	movf	?__Umul8_16+1,w
  9123  05D0  00C2               	movwf	___flmul@temp+1
  9124  05D1  0820               	movf	?__Umul8_16,w
  9125  05D2  00C1               	movwf	___flmul@temp
  9126  05D3  0841               	movf	___flmul@temp,w
  9127  05D4  00B1               	movwf	??___flmul
  9128  05D5  0842               	movf	___flmul@temp+1,w
  9129  05D6  00B2               	movwf	??___flmul+1
  9130  05D7  01B3               	clrf	??___flmul+2
  9131  05D8  01B4               	clrf	??___flmul+3
  9132  05D9  0831               	movf	??___flmul,w
  9133  05DA  07B9               	addwf	___flmul@grs,f
  9134  05DB  0832               	movf	??___flmul+1,w
  9135  05DC  1103               	clrz
  9136  05DD  1803               	skipnc
  9137  05DE  3E01               	addlw	1
  9138  05DF  1D03               	btfss	3,2
  9139  05E0  07BA               	addwf	___flmul@grs+1,f
  9140  05E1  0833               	movf	??___flmul+2,w
  9141  05E2  1103               	clrz
  9142  05E3  1803               	skipnc
  9143  05E4  3E01               	addlw	1
  9144  05E5  1D03               	btfss	3,2
  9145  05E6  07BB               	addwf	___flmul@grs+2,f
  9146  05E7  0834               	movf	??___flmul+3,w
  9147  05E8  1103               	clrz
  9148  05E9  1803               	skipnc
  9149  05EA  3E01               	addlw	1
  9150  05EB  1D03               	btfss	3,2
  9151  05EC  07BC               	addwf	___flmul@grs+3,f
  9152  05ED  0829               	movf	___flmul@b,w
  9153  05EE  00B1               	movwf	??___flmul
  9154  05EF  0831               	movf	??___flmul,w
  9155  05F0  00A0               	movwf	__Umul8_16@multiplicand
  9156  05F1  082E               	movf	___flmul@a+1,w
  9157  05F2  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  9158  05F7  0821               	movf	?__Umul8_16+1,w
  9159  05F8  00C2               	movwf	___flmul@temp+1
  9160  05F9  0820               	movf	?__Umul8_16,w
  9161  05FA  00C1               	movwf	___flmul@temp
  9162  05FB  0841               	movf	___flmul@temp,w
  9163  05FC  00B1               	movwf	??___flmul
  9164  05FD  0842               	movf	___flmul@temp+1,w
  9165  05FE  00B2               	movwf	??___flmul+1
  9166  05FF  01B3               	clrf	??___flmul+2
  9167  0600  01B4               	clrf	??___flmul+3
  9168  0601  0831               	movf	??___flmul,w
  9169  0602  07B9               	addwf	___flmul@grs,f
  9170  0603  0832               	movf	??___flmul+1,w
  9171  0604  1103               	clrz
  9172  0605  1803               	skipnc
  9173  0606  3E01               	addlw	1
  9174  0607  1D03               	btfss	3,2
  9175  0608  07BA               	addwf	___flmul@grs+1,f
  9176  0609  0833               	movf	??___flmul+2,w
  9177  060A  1103               	clrz
  9178  060B  1803               	skipnc
  9179  060C  3E01               	addlw	1
  9180  060D  1D03               	btfss	3,2
  9181  060E  07BB               	addwf	___flmul@grs+2,f
  9182  060F  0834               	movf	??___flmul+3,w
  9183  0610  1103               	clrz
  9184  0611  1803               	skipnc
  9185  0612  3E01               	addlw	1
  9186  0613  1D03               	btfss	3,2
  9187  0614  07BC               	addwf	___flmul@grs+3,f
  9188  0615  3008               	movlw	8
  9189  0616  00B1               	movwf	??___flmul
  9190  0617                     u6525:	
  9191  0617  1003               	clrc
  9192  0618  0DB9               	rlf	___flmul@grs,f
  9193  0619  0DBA               	rlf	___flmul@grs+1,f
  9194  061A  0DBB               	rlf	___flmul@grs+2,f
  9195  061B  0DBC               	rlf	___flmul@grs+3,f
  9196  061C  0BB1               	decfsz	??___flmul,f
  9197  061D  2E17               	goto	u6525
  9198  061E  0829               	movf	___flmul@b,w
  9199  061F  00B1               	movwf	??___flmul
  9200  0620  0831               	movf	??___flmul,w
  9201  0621  00A0               	movwf	__Umul8_16@multiplicand
  9202  0622  082D               	movf	___flmul@a,w
  9203  0623  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  9204  0628  0821               	movf	?__Umul8_16+1,w
  9205  0629  00C2               	movwf	___flmul@temp+1
  9206  062A  0820               	movf	?__Umul8_16,w
  9207  062B  00C1               	movwf	___flmul@temp
  9208  062C  0841               	movf	___flmul@temp,w
  9209  062D  00B1               	movwf	??___flmul
  9210  062E  0842               	movf	___flmul@temp+1,w
  9211  062F  00B2               	movwf	??___flmul+1
  9212  0630  01B3               	clrf	??___flmul+2
  9213  0631  01B4               	clrf	??___flmul+3
  9214  0632  0831               	movf	??___flmul,w
  9215  0633  07B9               	addwf	___flmul@grs,f
  9216  0634  0832               	movf	??___flmul+1,w
  9217  0635  1103               	clrz
  9218  0636  1803               	skipnc
  9219  0637  3E01               	addlw	1
  9220  0638  1D03               	btfss	3,2
  9221  0639  07BA               	addwf	___flmul@grs+1,f
  9222  063A  0833               	movf	??___flmul+2,w
  9223  063B  1103               	clrz
  9224  063C  1803               	skipnc
  9225  063D  3E01               	addlw	1
  9226  063E  1D03               	btfss	3,2
  9227  063F  07BB               	addwf	___flmul@grs+2,f
  9228  0640  0834               	movf	??___flmul+3,w
  9229  0641  1103               	clrz
  9230  0642  1803               	skipnc
  9231  0643  3E01               	addlw	1
  9232  0644  1D03               	btfss	3,2
  9233  0645  07BC               	addwf	___flmul@grs+3,f
  9234  0646  082A               	movf	___flmul@b+1,w
  9235  0647  00B1               	movwf	??___flmul
  9236  0648  0831               	movf	??___flmul,w
  9237  0649  00A0               	movwf	__Umul8_16@multiplicand
  9238  064A  082F               	movf	___flmul@a+2,w
  9239  064B  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  9240  0650  0821               	movf	?__Umul8_16+1,w
  9241  0651  00C2               	movwf	___flmul@temp+1
  9242  0652  0820               	movf	?__Umul8_16,w
  9243  0653  00C1               	movwf	___flmul@temp
  9244  0654  0841               	movf	___flmul@temp,w
  9245  0655  00B1               	movwf	??___flmul
  9246  0656  0842               	movf	___flmul@temp+1,w
  9247  0657  00B2               	movwf	??___flmul+1
  9248  0658  01B3               	clrf	??___flmul+2
  9249  0659  01B4               	clrf	??___flmul+3
  9250  065A  0831               	movf	??___flmul,w
  9251  065B  07BD               	addwf	___flmul@prod,f
  9252  065C  0832               	movf	??___flmul+1,w
  9253  065D  1103               	clrz
  9254  065E  1803               	skipnc
  9255  065F  3E01               	addlw	1
  9256  0660  1D03               	btfss	3,2
  9257  0661  07BE               	addwf	___flmul@prod+1,f
  9258  0662  0833               	movf	??___flmul+2,w
  9259  0663  1103               	clrz
  9260  0664  1803               	skipnc
  9261  0665  3E01               	addlw	1
  9262  0666  1D03               	btfss	3,2
  9263  0667  07BF               	addwf	___flmul@prod+2,f
  9264  0668  0834               	movf	??___flmul+3,w
  9265  0669  1103               	clrz
  9266  066A  1803               	skipnc
  9267  066B  3E01               	addlw	1
  9268  066C  1D03               	btfss	3,2
  9269  066D  07C0               	addwf	___flmul@prod+3,f
  9270  066E  082B               	movf	___flmul@b+2,w
  9271  066F  00B1               	movwf	??___flmul
  9272  0670  0831               	movf	??___flmul,w
  9273  0671  00A0               	movwf	__Umul8_16@multiplicand
  9274  0672  082E               	movf	___flmul@a+1,w
  9275  0673  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  9276  0678  0821               	movf	?__Umul8_16+1,w
  9277  0679  00C2               	movwf	___flmul@temp+1
  9278  067A  0820               	movf	?__Umul8_16,w
  9279  067B  00C1               	movwf	___flmul@temp
  9280  067C  0841               	movf	___flmul@temp,w
  9281  067D  00B1               	movwf	??___flmul
  9282  067E  0842               	movf	___flmul@temp+1,w
  9283  067F  00B2               	movwf	??___flmul+1
  9284  0680  01B3               	clrf	??___flmul+2
  9285  0681  01B4               	clrf	??___flmul+3
  9286  0682  0831               	movf	??___flmul,w
  9287  0683  07BD               	addwf	___flmul@prod,f
  9288  0684  0832               	movf	??___flmul+1,w
  9289  0685  1103               	clrz
  9290  0686  1803               	skipnc
  9291  0687  3E01               	addlw	1
  9292  0688  1D03               	btfss	3,2
  9293  0689  07BE               	addwf	___flmul@prod+1,f
  9294  068A  0833               	movf	??___flmul+2,w
  9295  068B  1103               	clrz
  9296  068C  1803               	skipnc
  9297  068D  3E01               	addlw	1
  9298  068E  1D03               	btfss	3,2
  9299  068F  07BF               	addwf	___flmul@prod+2,f
  9300  0690  0834               	movf	??___flmul+3,w
  9301  0691  1103               	clrz
  9302  0692  1803               	skipnc
  9303  0693  3E01               	addlw	1
  9304  0694  1D03               	btfss	3,2
  9305  0695  07C0               	addwf	___flmul@prod+3,f
  9306  0696  082B               	movf	___flmul@b+2,w
  9307  0697  00B1               	movwf	??___flmul
  9308  0698  0831               	movf	??___flmul,w
  9309  0699  00A0               	movwf	__Umul8_16@multiplicand
  9310  069A  082F               	movf	___flmul@a+2,w
  9311  069B  160A  158A  230D  120A  118A  	fcall	__Umul8_16
  9312  06A0  0821               	movf	?__Umul8_16+1,w
  9313  06A1  00C2               	movwf	___flmul@temp+1
  9314  06A2  0820               	movf	?__Umul8_16,w
  9315  06A3  00C1               	movwf	___flmul@temp
  9316  06A4  0841               	movf	___flmul@temp,w
  9317  06A5  00B1               	movwf	??___flmul
  9318  06A6  0842               	movf	___flmul@temp+1,w
  9319  06A7  00B2               	movwf	??___flmul+1
  9320  06A8  01B3               	clrf	??___flmul+2
  9321  06A9  01B4               	clrf	??___flmul+3
  9322  06AA  3008               	movlw	8
  9323  06AB                     u6565:	
  9324  06AB  1003               	clrc
  9325  06AC  0DB1               	rlf	??___flmul,f
  9326  06AD  0DB2               	rlf	??___flmul+1,f
  9327  06AE  0DB3               	rlf	??___flmul+2,f
  9328  06AF  0DB4               	rlf	??___flmul+3,f
  9329  06B0  3EFF               	addlw	-1
  9330  06B1  1D03               	skipz
  9331  06B2  2EAB               	goto	u6565
  9332  06B3  0831               	movf	??___flmul,w
  9333  06B4  07BD               	addwf	___flmul@prod,f
  9334  06B5  0832               	movf	??___flmul+1,w
  9335  06B6  1103               	clrz
  9336  06B7  1803               	skipnc
  9337  06B8  3E01               	addlw	1
  9338  06B9  1D03               	btfss	3,2
  9339  06BA  07BE               	addwf	___flmul@prod+1,f
  9340  06BB  0833               	movf	??___flmul+2,w
  9341  06BC  1103               	clrz
  9342  06BD  1803               	skipnc
  9343  06BE  3E01               	addlw	1
  9344  06BF  1D03               	btfss	3,2
  9345  06C0  07BF               	addwf	___flmul@prod+2,f
  9346  06C1  0834               	movf	??___flmul+3,w
  9347  06C2  1103               	clrz
  9348  06C3  1803               	skipnc
  9349  06C4  3E01               	addlw	1
  9350  06C5  1D03               	btfss	3,2
  9351  06C6  07C0               	addwf	___flmul@prod+3,f
  9352  06C7  083C               	movf	___flmul@grs+3,w
  9353  06C8  00B1               	movwf	??___flmul
  9354  06C9  01B2               	clrf	??___flmul+1
  9355  06CA  01B3               	clrf	??___flmul+2
  9356  06CB  01B4               	clrf	??___flmul+3
  9357  06CC  0831               	movf	??___flmul,w
  9358  06CD  07BD               	addwf	___flmul@prod,f
  9359  06CE  0832               	movf	??___flmul+1,w
  9360  06CF  1103               	clrz
  9361  06D0  1803               	skipnc
  9362  06D1  3E01               	addlw	1
  9363  06D2  1D03               	btfss	3,2
  9364  06D3  07BE               	addwf	___flmul@prod+1,f
  9365  06D4  0833               	movf	??___flmul+2,w
  9366  06D5  1103               	clrz
  9367  06D6  1803               	skipnc
  9368  06D7  3E01               	addlw	1
  9369  06D8  1D03               	btfss	3,2
  9370  06D9  07BF               	addwf	___flmul@prod+2,f
  9371  06DA  0834               	movf	??___flmul+3,w
  9372  06DB  1103               	clrz
  9373  06DC  1803               	skipnc
  9374  06DD  3E01               	addlw	1
  9375  06DE  1D03               	btfss	3,2
  9376  06DF  07C0               	addwf	___flmul@prod+3,f
  9377  06E0  3008               	movlw	8
  9378  06E1  00B1               	movwf	??___flmul
  9379  06E2                     u6595:	
  9380  06E2  1003               	clrc
  9381  06E3  0DB9               	rlf	___flmul@grs,f
  9382  06E4  0DBA               	rlf	___flmul@grs+1,f
  9383  06E5  0DBB               	rlf	___flmul@grs+2,f
  9384  06E6  0DBC               	rlf	___flmul@grs+3,f
  9385  06E7  0BB1               	decfsz	??___flmul,f
  9386  06E8  2EE2               	goto	u6595
  9387  06E9  0838               	movf	___flmul@bexp,w
  9388  06EA  0737               	addwf	___flmul@aexp,w
  9389  06EB  00B1               	movwf	??___flmul
  9390  06EC  01B2               	clrf	??___flmul+1
  9391  06ED  0DB2               	rlf	??___flmul+1,f
  9392  06EE  0831               	movf	??___flmul,w
  9393  06EF  3E82               	addlw	130
  9394  06F0  00C1               	movwf	___flmul@temp
  9395  06F1  0832               	movf	??___flmul+1,w
  9396  06F2  1803               	skipnc
  9397  06F3  3E01               	addlw	1
  9398  06F4  3EFF               	addlw	255
  9399  06F5  00C2               	movwf	___flmul@temp+1
  9400  06F6                     l6404:	
  9401  06F6  1BBF               	btfsc	___flmul@prod+2,7
  9402  06F7  2F13               	goto	l6406
  9403  06F8  3001               	movlw	1
  9404  06F9  00B1               	movwf	??___flmul
  9405  06FA                     u6605:	
  9406  06FA  1003               	clrc
  9407  06FB  0DBD               	rlf	___flmul@prod,f
  9408  06FC  0DBE               	rlf	___flmul@prod+1,f
  9409  06FD  0DBF               	rlf	___flmul@prod+2,f
  9410  06FE  0DC0               	rlf	___flmul@prod+3,f
  9411  06FF  0BB1               	decfsz	??___flmul,f
  9412  0700  2EFA               	goto	u6605
  9413  0701  1BBC               	btfsc	___flmul@grs+3,7
  9414  0702  143D               	bsf	___flmul@prod,0
  9415  0703  3001               	movlw	1
  9416  0704  00B1               	movwf	??___flmul
  9417  0705                     u6625:	
  9418  0705  1003               	clrc
  9419  0706  0DB9               	rlf	___flmul@grs,f
  9420  0707  0DBA               	rlf	___flmul@grs+1,f
  9421  0708  0DBB               	rlf	___flmul@grs+2,f
  9422  0709  0DBC               	rlf	___flmul@grs+3,f
  9423  070A  0BB1               	decfsz	??___flmul,f
  9424  070B  2F05               	goto	u6625
  9425  070C  30FF               	movlw	255
  9426  070D  07C1               	addwf	___flmul@temp,f
  9427  070E  1803               	skipnc
  9428  070F  0AC2               	incf	___flmul@temp+1,f
  9429  0710  30FF               	movlw	255
  9430  0711  07C2               	addwf	___flmul@temp+1,f
  9431  0712  2EF6               	goto	l6404
  9432  0713                     l6406:	
  9433  0713  01B7               	clrf	___flmul@aexp
  9434  0714  1FBC               	btfss	___flmul@grs+3,7
  9435  0715  2F2C               	goto	l6416
  9436  0716  30FF               	movlw	255
  9437  0717  0539               	andwf	___flmul@grs,w
  9438  0718  00B1               	movwf	??___flmul
  9439  0719  30FF               	movlw	255
  9440  071A  053A               	andwf	___flmul@grs+1,w
  9441  071B  00B2               	movwf	??___flmul+1
  9442  071C  30FF               	movlw	255
  9443  071D  053B               	andwf	___flmul@grs+2,w
  9444  071E  00B3               	movwf	??___flmul+2
  9445  071F  307F               	movlw	127
  9446  0720  053C               	andwf	___flmul@grs+3,w
  9447  0721  00B4               	movwf	??___flmul+3
  9448  0722  0834               	movf	??___flmul+3,w
  9449  0723  0433               	iorwf	??___flmul+2,w
  9450  0724  0432               	iorwf	??___flmul+1,w
  9451  0725  0431               	iorwf	??___flmul,w
  9452  0726  1903               	skipnz
  9453  0727  183D               	btfsc	___flmul@prod,0
  9454  0728  2F2A               	goto	l6412
  9455  0729  2F2C               	goto	l6416
  9456  072A                     l6412:	
  9457  072A  01B7               	clrf	___flmul@aexp
  9458  072B  0AB7               	incf	___flmul@aexp,f
  9459  072C                     l6416:	
  9460  072C  0837               	movf	___flmul@aexp,w
  9461  072D  1903               	btfsc	3,2
  9462  072E  2F5E               	goto	l6426
  9463  072F  3001               	movlw	1
  9464  0730  07BD               	addwf	___flmul@prod,f
  9465  0731  3000               	movlw	0
  9466  0732  1803               	skipnc
  9467  0733  3001               	movlw	1
  9468  0734  07BE               	addwf	___flmul@prod+1,f
  9469  0735  3000               	movlw	0
  9470  0736  1803               	skipnc
  9471  0737  3001               	movlw	1
  9472  0738  07BF               	addwf	___flmul@prod+2,f
  9473  0739  3000               	movlw	0
  9474  073A  1803               	skipnc
  9475  073B  3001               	movlw	1
  9476  073C  07C0               	addwf	___flmul@prod+3,f
  9477  073D  1C40               	btfss	___flmul@prod+3,0
  9478  073E  2F5E               	goto	l6426
  9479  073F  083D               	movf	___flmul@prod,w
  9480  0740  00B1               	movwf	??___flmul
  9481  0741  083E               	movf	___flmul@prod+1,w
  9482  0742  00B2               	movwf	??___flmul+1
  9483  0743  083F               	movf	___flmul@prod+2,w
  9484  0744  00B3               	movwf	??___flmul+2
  9485  0745  0840               	movf	___flmul@prod+3,w
  9486  0746  00B4               	movwf	??___flmul+3
  9487  0747  3001               	movlw	1
  9488  0748  00B5               	movwf	??___flmul+4
  9489  0749                     u6695:	
  9490  0749  0D34               	rlf	??___flmul+3,w
  9491  074A  0CB4               	rrf	??___flmul+3,f
  9492  074B  0CB3               	rrf	??___flmul+2,f
  9493  074C  0CB2               	rrf	??___flmul+1,f
  9494  074D  0CB1               	rrf	??___flmul,f
  9495  074E  0BB5               	decfsz	??___flmul+4,f
  9496  074F  2F49               	goto	u6695
  9497  0750  0834               	movf	??___flmul+3,w
  9498  0751  00C0               	movwf	___flmul@prod+3
  9499  0752  0833               	movf	??___flmul+2,w
  9500  0753  00BF               	movwf	___flmul@prod+2
  9501  0754  0832               	movf	??___flmul+1,w
  9502  0755  00BE               	movwf	___flmul@prod+1
  9503  0756  0831               	movf	??___flmul,w
  9504  0757  00BD               	movwf	___flmul@prod
  9505  0758  3001               	movlw	1
  9506  0759  07C1               	addwf	___flmul@temp,f
  9507  075A  1803               	skipnc
  9508  075B  0AC2               	incf	___flmul@temp+1,f
  9509  075C  3000               	movlw	0
  9510  075D  07C2               	addwf	___flmul@temp+1,f
  9511  075E                     l6426:	
  9512  075E  0842               	movf	___flmul@temp+1,w
  9513  075F  3A80               	xorlw	128
  9514  0760  00FF               	movwf	127
  9515  0761  3080               	movlw	128
  9516  0762  027F               	subwf	127,w
  9517  0763  1D03               	skipz
  9518  0764  2F67               	goto	u6705
  9519  0765  30FF               	movlw	255
  9520  0766  0241               	subwf	___flmul@temp,w
  9521  0767                     u6705:	
  9522  0767  1C03               	skipc
  9523  0768  2F74               	goto	l6430
  9524  0769  307F               	movlw	127
  9525  076A  1283               	bcf	3,5	;RP0=0, select bank0
  9526  076B  1303               	bcf	3,6	;RP1=0, select bank0
  9527  076C  00C0               	movwf	___flmul@prod+3
  9528  076D  3080               	movlw	128
  9529  076E  00BF               	movwf	___flmul@prod+2
  9530  076F  3000               	movlw	0
  9531  0770  00BE               	movwf	___flmul@prod+1
  9532  0771  3000               	movlw	0
  9533  0772  00BD               	movwf	___flmul@prod
  9534  0773  2FA4               	goto	l1390
  9535  0774                     l6430:	
  9536  0774  1283               	bcf	3,5	;RP0=0, select bank0
  9537  0775  1303               	bcf	3,6	;RP1=0, select bank0
  9538  0776  0842               	movf	___flmul@temp+1,w
  9539  0777  3A80               	xorlw	128
  9540  0778  00FF               	movwf	127
  9541  0779  3080               	movlw	128
  9542  077A  027F               	subwf	127,w
  9543  077B  1D03               	skipz
  9544  077C  2F7F               	goto	u6715
  9545  077D  3001               	movlw	1
  9546  077E  0241               	subwf	___flmul@temp,w
  9547  077F                     u6715:	
  9548  077F  1803               	skipnc
  9549  0780  2F8D               	goto	l6436
  9550  0781  3000               	movlw	0
  9551  0782  1283               	bcf	3,5	;RP0=0, select bank0
  9552  0783  1303               	bcf	3,6	;RP1=0, select bank0
  9553  0784  00C0               	movwf	___flmul@prod+3
  9554  0785  3000               	movlw	0
  9555  0786  00BF               	movwf	___flmul@prod+2
  9556  0787  3000               	movlw	0
  9557  0788  00BE               	movwf	___flmul@prod+1
  9558  0789  3000               	movlw	0
  9559  078A  00BD               	movwf	___flmul@prod
  9560  078B  01B6               	clrf	___flmul@sign
  9561  078C  2FA4               	goto	l1390
  9562  078D                     l6436:	
  9563  078D  1283               	bcf	3,5	;RP0=0, select bank0
  9564  078E  1303               	bcf	3,6	;RP1=0, select bank0
  9565  078F  0841               	movf	___flmul@temp,w
  9566  0790  00B1               	movwf	??___flmul
  9567  0791  0831               	movf	??___flmul,w
  9568  0792  00B8               	movwf	___flmul@bexp
  9569  0793  30FF               	movlw	255
  9570  0794  05BD               	andwf	___flmul@prod,f
  9571  0795  30FF               	movlw	255
  9572  0796  05BE               	andwf	___flmul@prod+1,f
  9573  0797  307F               	movlw	127
  9574  0798  05BF               	andwf	___flmul@prod+2,f
  9575  0799  3000               	movlw	0
  9576  079A  05C0               	andwf	___flmul@prod+3,f
  9577  079B  1838               	btfsc	___flmul@bexp,0
  9578  079C  17BF               	bsf	___flmul@prod+2,7
  9579  079D  0838               	movf	___flmul@bexp,w
  9580  079E  00B1               	movwf	??___flmul
  9581  079F  1003               	clrc
  9582  07A0  0C31               	rrf	??___flmul,w
  9583  07A1  00B2               	movwf	??___flmul+1
  9584  07A2  0832               	movf	??___flmul+1,w
  9585  07A3  00C0               	movwf	___flmul@prod+3
  9586  07A4                     l1390:	
  9587  07A4  0836               	movf	___flmul@sign,w
  9588  07A5  00B1               	movwf	??___flmul
  9589  07A6  0831               	movf	??___flmul,w
  9590  07A7  04C0               	iorwf	___flmul@prod+3,f
  9591  07A8  0840               	movf	___flmul@prod+3,w
  9592  07A9  00AC               	movwf	?___flmul+3
  9593  07AA  083F               	movf	___flmul@prod+2,w
  9594  07AB  00AB               	movwf	?___flmul+2
  9595  07AC  083E               	movf	___flmul@prod+1,w
  9596  07AD  00AA               	movwf	?___flmul+1
  9597  07AE  083D               	movf	___flmul@prod,w
  9598  07AF  00A9               	movwf	?___flmul
  9599  07B0  0008               	return
  9600  07B1                     __end_of___flmul:	
  9601                           
  9602                           	psect	text30
  9603  1B0D                     __ptext30:	
  9604 ;; *************** function __Umul8_16 *****************
  9605 ;; Defined at:
  9606 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  9607 ;; Parameters:    Size  Location     Type
  9608 ;;  multiplier      1    wreg     unsigned char 
  9609 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9610 ;; Auto vars:     Size  Location     Type
  9611 ;;  multiplier      1    8[BANK0 ] unsigned char 
  9612 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  9613 ;;  product         2    4[BANK0 ] unsigned int 
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  2    0[BANK0 ] unsigned int 
  9616 ;; Registers used:
  9617 ;;		wreg, status,2, status,0
  9618 ;; Tracked objects:
  9619 ;;		On entry : 300/0
  9620 ;;		On exit  : 300/0
  9621 ;;		Unchanged: 0/0
  9622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9623 ;;      Params:         0       2       0       0       0
  9624 ;;      Locals:         0       5       0       0       0
  9625 ;;      Temps:          0       2       0       0       0
  9626 ;;      Totals:         0       9       0       0       0
  9627 ;;Total ram usage:        9 bytes
  9628 ;; Hardware stack levels used:    1
  9629 ;; Hardware stack levels required when called:    1
  9630 ;; This function calls:
  9631 ;;		Nothing
  9632 ;; This function is called by:
  9633 ;;		___flmul
  9634 ;; This function uses a non-reentrant model
  9635 ;;
  9636                           
  9637                           
  9638                           ;psect for function __Umul8_16
  9639  1B0D                     __Umul8_16:	
  9640                           
  9641                           ;incstack = 0
  9642                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9643                           ;__Umul8_16@multiplier stored from wreg
  9644  1B0D  00A8               	movwf	__Umul8_16@multiplier
  9645  1B0E  01A4               	clrf	__Umul8_16@product
  9646  1B0F  01A5               	clrf	__Umul8_16@product+1
  9647  1B10  0820               	movf	__Umul8_16@multiplicand,w
  9648  1B11  00A2               	movwf	??__Umul8_16
  9649  1B12  01A3               	clrf	??__Umul8_16+1
  9650  1B13  0822               	movf	??__Umul8_16,w
  9651  1B14  00A6               	movwf	__Umul8_16@word_mpld
  9652  1B15  0823               	movf	??__Umul8_16+1,w
  9653  1B16  00A7               	movwf	__Umul8_16@word_mpld+1
  9654  1B17                     l5868:	
  9655  1B17  1C28               	btfss	__Umul8_16@multiplier,0
  9656  1B18  2B1F               	goto	l1486
  9657  1B19  0826               	movf	__Umul8_16@word_mpld,w
  9658  1B1A  07A4               	addwf	__Umul8_16@product,f
  9659  1B1B  1803               	skipnc
  9660  1B1C  0AA5               	incf	__Umul8_16@product+1,f
  9661  1B1D  0827               	movf	__Umul8_16@word_mpld+1,w
  9662  1B1E  07A5               	addwf	__Umul8_16@product+1,f
  9663  1B1F                     l1486:	
  9664  1B1F  3001               	movlw	1
  9665  1B20                     u5635:	
  9666  1B20  1003               	clrc
  9667  1B21  0DA6               	rlf	__Umul8_16@word_mpld,f
  9668  1B22  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  9669  1B23  3EFF               	addlw	-1
  9670  1B24  1D03               	skipz
  9671  1B25  2B20               	goto	u5635
  9672  1B26  1003               	clrc
  9673  1B27  0CA8               	rrf	__Umul8_16@multiplier,f
  9674  1B28  0828               	movf	__Umul8_16@multiplier,w
  9675  1B29  1D03               	btfss	3,2
  9676  1B2A  2B17               	goto	l5868
  9677  1B2B  0825               	movf	__Umul8_16@product+1,w
  9678  1B2C  00A1               	movwf	?__Umul8_16+1
  9679  1B2D  0824               	movf	__Umul8_16@product,w
  9680  1B2E  00A0               	movwf	?__Umul8_16
  9681  1B2F  0008               	return
  9682  1B30                     __end_of__Umul8_16:	
  9683                           
  9684                           	psect	text31
  9685  19B0                     __ptext31:	
  9686 ;; *************** function _PROCULUS_VP_Write_String *****************
  9687 ;; Defined at:
  9688 ;;		line 205 in file "proculus.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;  vp              2   58[BANK0 ] unsigned int 
  9691 ;;  text            1   60[BANK0 ] PTR unsigned char 
  9692 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;		None
  9695 ;; Return value:  Size  Location     Type
  9696 ;;                  1    wreg      void 
  9697 ;; Registers used:
  9698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9699 ;; Tracked objects:
  9700 ;;		On entry : 300/0
  9701 ;;		On exit  : 300/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9704 ;;      Params:         0       3       0       0       0
  9705 ;;      Locals:         0       0       0       0       0
  9706 ;;      Temps:          0       1       0       0       0
  9707 ;;      Totals:         0       4       0       0       0
  9708 ;;Total ram usage:        4 bytes
  9709 ;; Hardware stack levels used:    1
  9710 ;; Hardware stack levels required when called:    4
  9711 ;; This function calls:
  9712 ;;		_PROCULUS_VP_Write
  9713 ;;		_strlen
  9714 ;; This function is called by:
  9715 ;;		_Decodify_Command
  9716 ;; This function uses a non-reentrant model
  9717 ;;
  9718                           
  9719                           
  9720                           ;psect for function _PROCULUS_VP_Write_String
  9721  19B0                     _PROCULUS_VP_Write_String:	
  9722                           
  9723                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  9724                           
  9725                           ;incstack = 0
  9726                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9727  19B0  085B               	movf	PROCULUS_VP_Write_String@vp+1,w
  9728  19B1  00D3               	movwf	PROCULUS_VP_Write@vp+1
  9729  19B2  085A               	movf	PROCULUS_VP_Write_String@vp,w
  9730  19B3  00D2               	movwf	PROCULUS_VP_Write@vp
  9731  19B4  085C               	movf	PROCULUS_VP_Write_String@text,w
  9732  19B5  00D4               	movwf	PROCULUS_VP_Write@vetor
  9733  19B6  3001               	movlw	1
  9734  19B7  00D5               	movwf	PROCULUS_VP_Write@vetor+1
  9735  19B8  085C               	movf	PROCULUS_VP_Write_String@text,w
  9736  19B9  160A  158A  21F7  160A  158A  	fcall	_strlen
  9737  19BE  0820               	movf	?_strlen,w
  9738  19BF  3E01               	addlw	1
  9739  19C0  00DD               	movwf	??_PROCULUS_VP_Write_String
  9740  19C1  085D               	movf	??_PROCULUS_VP_Write_String,w
  9741  19C2  00D6               	movwf	PROCULUS_VP_Write@size
  9742  19C3  120A  118A  27B1   	fcall	_PROCULUS_VP_Write
  9743  19C6  0008               	return
  9744  19C7                     __end_of_PROCULUS_VP_Write_String:	
  9745                           
  9746                           	psect	text32
  9747  19F7                     __ptext32:	
  9748 ;; *************** function _strlen *****************
  9749 ;; Defined at:
  9750 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  9751 ;; Parameters:    Size  Location     Type
  9752 ;;  s               1    wreg     PTR const unsigned char 
  9753 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9754 ;; Auto vars:     Size  Location     Type
  9755 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  9756 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9757 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  9758 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  2    0[BANK0 ] unsigned int 
  9761 ;; Registers used:
  9762 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/300
  9765 ;;		On exit  : B00/800
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9768 ;;      Params:         0       2       0       0       0
  9769 ;;      Locals:         0       2       0       0       0
  9770 ;;      Temps:          0       1       0       0       0
  9771 ;;      Totals:         0       5       0       0       0
  9772 ;;Total ram usage:        5 bytes
  9773 ;; Hardware stack levels used:    1
  9774 ;; Hardware stack levels required when called:    1
  9775 ;; This function calls:
  9776 ;;		Nothing
  9777 ;; This function is called by:
  9778 ;;		_Decodify_Command
  9779 ;;		_PROCULUS_VP_Write_String
  9780 ;; This function uses a non-reentrant model
  9781 ;;
  9782                           
  9783                           
  9784                           ;psect for function _strlen
  9785  19F7                     _strlen:	
  9786                           
  9787                           ;incstack = 0
  9788                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  9789                           ;strlen@s stored from wreg
  9790  19F7  1283               	bcf	3,5	;RP0=0, select bank0
  9791  19F8  1303               	bcf	3,6	;RP1=0, select bank0
  9792  19F9  00A4               	movwf	strlen@s
  9793  19FA  0824               	movf	strlen@s,w
  9794  19FB  00A2               	movwf	??_strlen
  9795  19FC  0822               	movf	??_strlen,w
  9796  19FD  00A3               	movwf	strlen@cp
  9797  19FE                     l6028:	
  9798  19FE  0823               	movf	strlen@cp,w
  9799  19FF  0084               	movwf	4
  9800  1A00  1783               	bsf	3,7	;select IRP bank2
  9801  1A01  0800               	movf	0,w
  9802  1A02  1903               	btfsc	3,2
  9803  1A03  2A09               	goto	l6030
  9804  1A04  3001               	movlw	1
  9805  1A05  00A2               	movwf	??_strlen
  9806  1A06  0822               	movf	??_strlen,w
  9807  1A07  07A3               	addwf	strlen@cp,f
  9808  1A08  29FE               	goto	l6028
  9809  1A09                     l6030:	
  9810  1A09  0824               	movf	strlen@s,w
  9811  1A0A  0223               	subwf	strlen@cp,w
  9812  1A0B  00A0               	movwf	?_strlen
  9813  1A0C  01A1               	clrf	?_strlen+1
  9814  1A0D  1BA0               	btfsc	?_strlen,7
  9815  1A0E  03A1               	decf	?_strlen+1,f
  9816  1A0F  0008               	return
  9817  1A10                     __end_of_strlen:	
  9818                           
  9819                           	psect	text33
  9820  07B1                     __ptext33:	
  9821 ;; *************** function _PROCULUS_VP_Write *****************
  9822 ;; Defined at:
  9823 ;;		line 40 in file "proculus.c"
  9824 ;; Parameters:    Size  Location     Type
  9825 ;;  vp              2   50[BANK0 ] unsigned int 
  9826 ;;  vetor           2   52[BANK0 ] PTR unsigned char 
  9827 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  9828 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  9829 ;;  size            1   54[BANK0 ] unsigned char 
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;  i               1   57[BANK0 ] unsigned char 
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  1    wreg      void 
  9834 ;; Registers used:
  9835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9836 ;; Tracked objects:
  9837 ;;		On entry : B00/800
  9838 ;;		On exit  : 300/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9841 ;;      Params:         0       5       0       0       0
  9842 ;;      Locals:         0       1       0       0       0
  9843 ;;      Temps:          0       2       0       0       0
  9844 ;;      Totals:         0       8       0       0       0
  9845 ;;Total ram usage:        8 bytes
  9846 ;; Hardware stack levels used:    1
  9847 ;; Hardware stack levels required when called:    3
  9848 ;; This function calls:
  9849 ;;		_PROCULUS_Delay
  9850 ;;		_USART_put_int
  9851 ;;		_USART_putc
  9852 ;; This function is called by:
  9853 ;;		_PROCULUS_VP_Write_String
  9854 ;; This function uses a non-reentrant model
  9855 ;;
  9856                           
  9857                           
  9858                           ;psect for function _PROCULUS_VP_Write
  9859  07B1                     _PROCULUS_VP_Write:	
  9860                           
  9861                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  9862                           
  9863                           ;incstack = 0
  9864                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9865  07B1  30A5               	movlw	165
  9866  07B2  00CE               	movwf	USART_put_int@value
  9867  07B3  305A               	movlw	90
  9868  07B4  00CF               	movwf	USART_put_int@value+1
  9869  07B5  160A  158A  219A  120A  118A  	fcall	_USART_put_int
  9870                           
  9871                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  9872  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  9873  07BB  0856               	movf	PROCULUS_VP_Write@size,w
  9874  07BC  3E03               	addlw	3
  9875  07BD  160A  118A  2004  120A  118A  	fcall	_USART_putc
  9876                           
  9877                           ;proculus.c: 43:      USART_putc(0x82);
  9878  07C2  3082               	movlw	130
  9879  07C3  160A  118A  2004  120A  118A  	fcall	_USART_putc
  9880                           
  9881                           ;proculus.c: 44:      USART_put_int(vp);
  9882  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  9883  07C9  0853               	movf	PROCULUS_VP_Write@vp+1,w
  9884  07CA  00CF               	movwf	USART_put_int@value+1
  9885  07CB  0852               	movf	PROCULUS_VP_Write@vp,w
  9886  07CC  00CE               	movwf	USART_put_int@value
  9887  07CD  160A  158A  219A  120A  118A  	fcall	_USART_put_int
  9888                           
  9889                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  9890  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  9891  07D3  01D9               	clrf	PROCULUS_VP_Write@i
  9892  07D4                     l6074:	
  9893  07D4  0856               	movf	PROCULUS_VP_Write@size,w
  9894  07D5  0259               	subwf	PROCULUS_VP_Write@i,w
  9895  07D6  1803               	btfsc	3,0
  9896  07D7  2FF0               	goto	l6076
  9897                           
  9898                           ;proculus.c: 46:          USART_putc(vetor[i]);
  9899  07D8  0859               	movf	PROCULUS_VP_Write@i,w
  9900  07D9  0754               	addwf	PROCULUS_VP_Write@vetor,w
  9901  07DA  00D7               	movwf	??_PROCULUS_VP_Write
  9902  07DB  0855               	movf	PROCULUS_VP_Write@vetor+1,w
  9903  07DC  1803               	skipnc
  9904  07DD  3E01               	addlw	1
  9905  07DE  00D8               	movwf	??_PROCULUS_VP_Write+1
  9906  07DF  0857               	movf	??_PROCULUS_VP_Write,w
  9907  07E0  0084               	movwf	4
  9908  07E1  1783               	bsf	3,7
  9909  07E2  1C58               	btfss	??_PROCULUS_VP_Write+1,0
  9910  07E3  1383               	bcf	3,7
  9911  07E4  0800               	movf	0,w
  9912  07E5  160A  118A  2004  120A  118A  	fcall	_USART_putc
  9913  07EA  3001               	movlw	1
  9914  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  9915  07EC  00D7               	movwf	??_PROCULUS_VP_Write
  9916  07ED  0857               	movf	??_PROCULUS_VP_Write,w
  9917  07EE  07D9               	addwf	PROCULUS_VP_Write@i,f
  9918  07EF  2FD4               	goto	l6074
  9919  07F0                     l6076:	
  9920                           
  9921                           ;proculus.c: 48:      PROCULUS_Delay(1);
  9922  07F0  3001               	movlw	1
  9923  07F1  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9924  07F2  3000               	movlw	0
  9925  07F3  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9926  07F4  160A  158A  2210   	fcall	_PROCULUS_Delay
  9927  07F7  0008               	return
  9928  07F8                     __end_of_PROCULUS_VP_Write:	
  9929                           
  9930                           	psect	text34
  9931  196F                     __ptext34:	
  9932 ;; *************** function _PROCULUS_Show_Screen *****************
  9933 ;; Defined at:
  9934 ;;		line 243 in file "proculus.c"
  9935 ;; Parameters:    Size  Location     Type
  9936 ;;  screen          2   54[BANK0 ] unsigned int 
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;  vetor           3   57[BANK0 ] unsigned char [3]
  9939 ;; Return value:  Size  Location     Type
  9940 ;;                  1    wreg      void 
  9941 ;; Registers used:
  9942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9943 ;; Tracked objects:
  9944 ;;		On entry : 300/0
  9945 ;;		On exit  : 300/0
  9946 ;;		Unchanged: 0/0
  9947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9948 ;;      Params:         0       2       0       0       0
  9949 ;;      Locals:         0       3       0       0       0
  9950 ;;      Temps:          0       1       0       0       0
  9951 ;;      Totals:         0       6       0       0       0
  9952 ;;Total ram usage:        6 bytes
  9953 ;; Hardware stack levels used:    1
  9954 ;; Hardware stack levels required when called:    4
  9955 ;; This function calls:
  9956 ;;		_PROCULUS_Control_Register_Write
  9957 ;; This function is called by:
  9958 ;;		_Decodify_Command
  9959 ;; This function uses a non-reentrant model
  9960 ;;
  9961                           
  9962                           
  9963                           ;psect for function _PROCULUS_Show_Screen
  9964  196F                     _PROCULUS_Show_Screen:	
  9965                           
  9966                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9967                           
  9968                           ;incstack = 0
  9969                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9970  196F  3003               	movlw	3
  9971  1970  00D8               	movwf	??_PROCULUS_Show_Screen
  9972  1971  0858               	movf	??_PROCULUS_Show_Screen,w
  9973  1972  00D9               	movwf	PROCULUS_Show_Screen@vetor
  9974                           
  9975                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9976  1973  0857               	movf	PROCULUS_Show_Screen@screen+1,w
  9977  1974  00D8               	movwf	??_PROCULUS_Show_Screen
  9978  1975  0858               	movf	??_PROCULUS_Show_Screen,w
  9979  1976  00DA               	movwf	PROCULUS_Show_Screen@vetor+1
  9980                           
  9981                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9982  1977  0856               	movf	PROCULUS_Show_Screen@screen,w
  9983  1978  00D8               	movwf	??_PROCULUS_Show_Screen
  9984  1979  0858               	movf	??_PROCULUS_Show_Screen,w
  9985  197A  00DB               	movwf	PROCULUS_Show_Screen@vetor+2
  9986                           
  9987                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9988  197B  3003               	movlw	3
  9989  197C  00D8               	movwf	??_PROCULUS_Show_Screen
  9990  197D  0858               	movf	??_PROCULUS_Show_Screen,w
  9991  197E  00D2               	movwf	PROCULUS_Control_Register_Write@size
  9992  197F  3059               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9993  1980  160A  158A  2529   	fcall	_PROCULUS_Control_Register_Write
  9994  1983  0008               	return
  9995  1984                     __end_of_PROCULUS_Show_Screen:	
  9996                           
  9997                           	psect	text35
  9998  1AEB                     __ptext35:	
  9999 ;; *************** function _PROCULUS_Buzzer *****************
 10000 ;; Defined at:
 10001 ;;		line 223 in file "proculus.c"
 10002 ;; Parameters:    Size  Location     Type
 10003 ;;  time_ms_x_10    2   54[BANK0 ] unsigned int 
 10004 ;; Auto vars:     Size  Location     Type
 10005 ;;  vetor           2   57[BANK0 ] unsigned char [2]
 10006 ;; Return value:  Size  Location     Type
 10007 ;;                  1    wreg      void 
 10008 ;; Registers used:
 10009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10010 ;; Tracked objects:
 10011 ;;		On entry : 300/0
 10012 ;;		On exit  : 300/0
 10013 ;;		Unchanged: 0/0
 10014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10015 ;;      Params:         0       2       0       0       0
 10016 ;;      Locals:         0       2       0       0       0
 10017 ;;      Temps:          0       1       0       0       0
 10018 ;;      Totals:         0       5       0       0       0
 10019 ;;Total ram usage:        5 bytes
 10020 ;; Hardware stack levels used:    1
 10021 ;; Hardware stack levels required when called:    4
 10022 ;; This function calls:
 10023 ;;		_PROCULUS_Control_Register_Write
 10024 ;;		___lwdiv
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
 10025 ;; This function is called by:
 10026 ;;		_Decodify_Command
 10027 ;; This function uses a non-reentrant model
 10028 ;;
 10029                           
 10030                           
<<<<<<< HEAD
 10031                           ;psect for function _itoa
 10032  0F6D                     _itoa:	
 10033                           
 10034                           ;incstack = 0
 10035                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10036                           ;itoa@buf stored from wreg
 10037  0F6D  00B4               	movwf	itoa@buf
 10038  0F6E  1FB0               	btfss	itoa@val+1,7
 10039  0F6F  2F7B               	goto	l6810
 10040  0F70  0834               	movf	itoa@buf,w
 10041  0F71  0084               	movwf	4
 10042  0F72  302D               	movlw	45
 10043  0F73  1383               	bcf	3,7	;select IRP bank0
 10044  0F74  0080               	movwf	0
 10045  0F75  0AB4               	incf	itoa@buf,f
 10046  0F76  09AF               	comf	itoa@val,f
 10047  0F77  09B0               	comf	itoa@val+1,f
 10048  0F78  0AAF               	incf	itoa@val,f
 10049  0F79  1903               	skipnz
 10050  0F7A  0AB0               	incf	itoa@val+1,f
 10051  0F7B                     l6810:	
 10052  0F7B  0830               	movf	itoa@val+1,w
 10053  0F7C  00A8               	movwf	utoa@val+1
 10054  0F7D  082F               	movf	itoa@val,w
 10055  0F7E  00A7               	movwf	utoa@val
 10056  0F7F  0832               	movf	itoa@base+1,w
 10057  0F80  00AA               	movwf	utoa@base+1
 10058  0F81  0831               	movf	itoa@base,w
 10059  0F82  00A9               	movwf	utoa@base
 10060  0F83  0834               	movf	itoa@buf,w
 10061  0F84  160A  158A  2DC0   	ljmp	_utoa
 10062  0F87                     __end_of_itoa:	
 10063  0F87                     __ptext36:	
 10064 ;; *************** function _USART_put_int *****************
 10065 ;; Defined at:
 10066 ;;		line 138 in file "usart.c"
 10067 ;; Parameters:    Size  Location     Type
 10068 ;;  value           2    8[BANK1 ] int 
 10069 ;; Auto vars:     Size  Location     Type
 10070 ;;  dado            1   10[BANK1 ] PTR unsigned char 
 10071 ;;		 -> USART_put_int@value(2), 
 10072 ;; Return value:  Size  Location     Type
 10073 ;;                  1    wreg      void 
 10074 ;; Registers used:
 10075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10076 ;; Tracked objects:
 10077 ;;		On entry : 300/100
 10078 ;;		On exit  : 300/100
 10079 ;;		Unchanged: 0/0
 10080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10081 ;;      Params:         0       0       2       0       0
 10082 ;;      Locals:         0       0       1       0       0
 10083 ;;      Temps:          0       0       0       0       0
 10084 ;;      Totals:         0       0       3       0       0
 10085 ;;Total ram usage:        3 bytes
 10086 ;; Hardware stack levels used:    1
 10087 ;; Hardware stack levels required when called:    2
 10088 ;; This function calls:
 10089 ;;		_USART_putc
 10090 ;; This function is called by:
 10091 ;;		_Decodify_Command
 10092 ;;		_PROCULUS_Control_Register_Write
 10093 ;;		_PROCULUS_VP_Write
 10094 ;; This function uses a non-reentrant model
 10095 ;;
 10096                           
 10097                           
 10098                           ;psect for function _USART_put_int
 10099  0F87                     _USART_put_int:	
 10100  0F87                     l6160:	
 10101                           ;incstack = 0
 10102                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10103                           
 10104                           
 10105                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
 10106  0F87  30A8               	movlw	(low (USART_put_int@value| 0))& (0+255)
 10107  0F88  00AA               	movwf	USART_put_int@dado^(0+128)
 10108                           
 10109                           ;usart.c: 141:      USART_putc(*(dado+1));
 10110  0F89  0A2A               	incf	USART_put_int@dado^(0+128),w
 10111  0F8A  0084               	movwf	4
 10112  0F8B  1383               	bcf	3,7	;select IRP bank0
 10113  0F8C  0800               	movf	0,w
 10114  0F8D  23DD  120A  158A   	fcall	_USART_putc
 10115                           
 10116                           ;usart.c: 142:      USART_putc(*dado);
 10117  0F90  082A               	movf	USART_put_int@dado^(0+128),w
 10118  0F91  0084               	movwf	4
 10119  0F92  1383               	bcf	3,7	;select IRP bank0
 10120  0F93  0800               	movf	0,w
 10121  0F94  2BDD               	ljmp	_USART_putc
 10122  0F95                     __end_of_USART_put_int:	
 10123  0F95                     __ptext30:	
 10124 ;; *************** function _strlen *****************
 10125 ;; Defined at:
 10126 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
 10127 ;; Parameters:    Size  Location     Type
 10128 ;;  s               1    wreg     PTR const unsigned char 
 10129 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
 10130 ;; Auto vars:     Size  Location     Type
 10131 ;;  s               1    4[BANK0 ] PTR const unsigned char 
 10132 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
 10133 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
 10134 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
 10135 ;; Return value:  Size  Location     Type
 10136 ;;                  2    0[BANK0 ] unsigned int 
 10137 ;; Registers used:
 10138 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/300
 10141 ;;		On exit  : B00/800
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10144 ;;      Params:         0       3       0       0       0
 10145 ;;      Locals:         0       2       0       0       0
 10146 ;;      Temps:          0       0       0       0       0
 10147 ;;      Totals:         0       5       0       0       0
 10148 ;;Total ram usage:        5 bytes
 10149 ;; Hardware stack levels used:    1
 10150 ;; Hardware stack levels required when called:    1
 10151 ;; This function calls:
 10152 ;;		Nothing
 10153 ;; This function is called by:
 10154 ;;		_Decodify_Command
 10155 ;;		_PROCULUS_VP_Write_String
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159                           
 10160                           ;psect for function _strlen
 10161  0F95                     _strlen:	
 10162                           
 10163                           ;incstack = 0
 10164                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 10165                           ;strlen@s stored from wreg
 10166  0F95  1283               	bcf	3,5	;RP0=0, select bank0
 10167  0F96  1303               	bcf	3,6	;RP1=0, select bank0
 10168  0F97  00A4               	movwf	strlen@s
 10169  0F98  00A3               	movwf	strlen@cp
 10170  0F99                     l6446:	
 10171  0F99  0823               	movf	strlen@cp,w
 10172  0F9A  0084               	movwf	4
 10173  0F9B  1783               	bsf	3,7	;select IRP bank2
 10174  0F9C  0800               	movf	0,w
 10175  0F9D  1903               	btfsc	3,2
 10176  0F9E  2FA1               	goto	l6448
 10177  0F9F  0AA3               	incf	strlen@cp,f
 10178  0FA0  2F99               	goto	l6446
 10179  0FA1                     l6448:	
 10180  0FA1  0824               	movf	strlen@s,w
 10181  0FA2  0223               	subwf	strlen@cp,w
 10182  0FA3  00A0               	movwf	?_strlen
 10183  0FA4  01A1               	clrf	?_strlen+1
 10184  0FA5  1BA0               	btfsc	?_strlen,7
 10185  0FA6  03A1               	decf	?_strlen+1,f
 10186  0FA7  0008               	return
 10187  0FA8                     __end_of_strlen:	
 10188  0FA8                     PL30:	
 10189  0FA8  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 10190  0FA9  0084               	movwf	4
 10191  0FAA  1783               	bsf	3,7
 10192  0FAB  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 10193  0FAC  1383               	bcf	3,7
 10194  0FAD  0800               	movf	0,w
 10195  0FAE  00A0               	movwf	I2C_Master_Write@d
 10196  0FAF  01A1               	clrf	I2C_Master_Write@d+1
 10197  0FB0  0008               	return
 10198  0FB1                     __end_ofPL30:	
 10199  0FB1                     PL42:	
 10200  0FB1  082C               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10201  0FB2  00AE               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10202  0FB3  30A0               	movlw	160
 10203  0FB4  1003               	clrc
 10204  0FB5  0DAE               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10205  0FB6  04AE               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10206  0FB7  142E               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10207  0FB8  082D               	movf	EEPROM_24C1025_Read_Str@range,w
 10208  0FB9  04AE               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10209  0FBA  0008               	return
 10210  0FBB                     __end_ofPL42:	
 10211  0FBB                     PL44:	
 10212  0FBB  082E               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 10213  0FBC  00B0               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 10214  0FBD  30A0               	movlw	160
 10215  0FBE  1003               	clrc
 10216  0FBF  0DB0               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10217  0FC0  04B0               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10218  0FC1  1430               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 10219  0FC2  082F               	movf	EEPROM_24C1025_Read_Buffer@range,w
 10220  0FC3  04B0               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10221  0FC4  0008               	return
 10222  0FC5                     __end_ofPL44:	
 10223  0FC5                     PL46:	
 10224  0FC5  082C               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 10225  0FC6  00AE               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 10226  0FC7  30A0               	movlw	160
 10227  0FC8  1003               	clrc
 10228  0FC9  0DAE               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 10229  0FCA  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 10230  0FCB  082D               	movf	EEPROM_24C1025_Write_Buffer@range,w
 10231  0FCC  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 10232  0FCD  0008               	return
 10233  0FCE                     __end_ofPL46:	
 10234  0FCE                     PL52:	
 10235  0FCE  3037               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
 10236  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
 10237  0FD0  00A0               	movwf	strcat@from
 10238  0FD1  3080               	movlw	128
 10239  0FD2  00A1               	movwf	strcat@from+1
 10240  0FD3  34BC               	retlw	(low (_texto| (0+256)))& (0+255)
 10241  0FD4                     __end_ofPL52:	
 10242  0FD4                     PL56:	
 10243  0FD4  3014               	movlw	20
 10244  0FD5  1683               	bsf	3,5	;RP0=1, select bank3
 10245  0FD6  1703               	bsf	3,6	;RP1=1, select bank3
 10246  0FD7  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 10247  0FD8  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 10248  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
 10249  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
 10250  0FDB  0008               	return
 10251  0FDC                     __end_ofPL56:	
 10252  0FDC                     PL58:	
 10253  0FDC  0829               	movf	EEPROM_24C1025_Read_Buffer@data,w
 10254  0FDD  0084               	movwf	4
 10255  0FDE  1783               	bsf	3,7
 10256  0FDF  1C2A               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 10257  0FE0  1383               	bcf	3,7
 10258  0FE1  01A0               	clrf	I2C_Master_Read@a
 10259  0FE2  0008               	return
 10260  0FE3                     __end_ofPL58:	
 10261  0FE3                     PL64:	
 10262  0FE3  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 10263  0FE4  0084               	movwf	4
 10264  0FE5  0800               	movf	0,w
 10265  0FE6  00A0               	movwf	I2C_Master_Write@d
 10266  0FE7  01A1               	clrf	I2C_Master_Write@d+1
 10267  0FE8  0008               	return
 10268  0FE9                     __end_ofPL64:	
 10269  0FE9                     PL76:	
 10270  0FE9  3039               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
 10271  0FEA  00A0               	movwf	strcat@from
 10272  0FEB  3080               	movlw	128
 10273  0FEC  00A1               	movwf	strcat@from+1
 10274  0FED  34BC               	retlw	(low (_texto| (0+256)))& (0+255)
 10275  0FEE                     __end_ofPL76:	
 10276  0FEE                     PL78:	
 10277  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
 10278  0FEF  0830               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10279  0FF0  39FE               	andlw	254
 10280  0FF1  00A0               	movwf	I2C_Master_Write@d
 10281  0FF2  01A1               	clrf	I2C_Master_Write@d+1
 10282  0FF3  0008               	return
 10283  0FF4                     __end_ofPL78:	
 10284  0FF4                     PL80:	
 10285  0FF4  30BC               	movlw	(low (_texto| (0+256)))& (0+255)
 10286  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
 10287  0FF6  00A1               	movwf	USART_put_string@vetor
 10288  0FF7  3001               	movlw	1
 10289  0FF8  00A2               	movwf	USART_put_string@vetor+1
 10290  0FF9  0008               	return
 10291  0FFA                     __end_ofPL80:	
 10292  0FFA                     PL82:	
 10293  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
 10294  0FFB  082E               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10295  0FFC  39FE               	andlw	254
 10296  0FFD  00A0               	movwf	I2C_Master_Write@d
 10297  0FFE  01A1               	clrf	I2C_Master_Write@d+1
 10298  0FFF  0008               	return
 10299  1000                     __end_ofPL82:	
 10300                           
 10301                           	psect	text32
 10302  1D4E                     __ptext32:	
 10303 ;; *************** function _PROCULUS_Show_Screen *****************
 10304 ;; Defined at:
 10305 ;;		line 243 in file "proculus.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;  screen          2   15[BANK1 ] unsigned int 
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;  vetor           3   17[BANK1 ] unsigned char [3]
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  1    wreg      void 
 10312 ;; Registers used:
 10313 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10314 ;; Tracked objects:
 10315 ;;		On entry : 300/100
 10316 ;;		On exit  : 300/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10319 ;;      Params:         0       0       2       0       0
 10320 ;;      Locals:         0       0       3       0       0
 10321 ;;      Temps:          0       0       0       0       0
 10322 ;;      Totals:         0       0       5       0       0
 10323 ;;Total ram usage:        5 bytes
 10324 ;; Hardware stack levels used:    1
 10325 ;; Hardware stack levels required when called:    4
 10326 ;; This function calls:
 10327 ;;		_PROCULUS_Control_Register_Write
 10328 ;; This function is called by:
 10329 ;;		_Decodify_Command
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           
 10334                           ;psect for function _PROCULUS_Show_Screen
 10335  1D4E                     _PROCULUS_Show_Screen:	
 10336                           
 10337                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
 10338                           
 10339                           ;incstack = 0
 10340                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10341  1D4E  3003               	movlw	3
 10342  1D4F  00B1               	movwf	PROCULUS_Show_Screen@vetor^(0+128)
 10343                           
 10344                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
 10345  1D50  0830               	movf	(PROCULUS_Show_Screen@screen^(0+128)+1),w
 10346  1D51  00B2               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+1)
 10347                           
 10348                           ;proculus.c: 247:      vetor[2] = (char) screen;
 10349  1D52  082F               	movf	PROCULUS_Show_Screen@screen^(0+128),w
 10350  1D53  00B3               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+2)
 10351                           
 10352                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
 10353  1D54  3003               	movlw	3
 10354  1D55  00AB               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
 10355  1D56  30B1               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
 10356  1D57  2D78               	ljmp	_PROCULUS_Control_Register_Write
 10357  1D58                     __end_of_PROCULUS_Show_Screen:	
 10358  1D58                     __ptext33:	
 10359 ;; *************** function _PROCULUS_Buzzer *****************
 10360 ;; Defined at:
 10361 ;;		line 223 in file "proculus.c"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;  time_ms_x_10    2   15[BANK1 ] unsigned int 
 10364 ;; Auto vars:     Size  Location     Type
 10365 ;;  vetor           2   17[BANK1 ] unsigned char [2]
 10366 ;; Return value:  Size  Location     Type
 10367 ;;                  1    wreg      void 
 10368 ;; Registers used:
 10369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10370 ;; Tracked objects:
 10371 ;;		On entry : 300/100
 10372 ;;		On exit  : 300/0
 10373 ;;		Unchanged: 0/0
 10374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10375 ;;      Params:         0       0       2       0       0
 10376 ;;      Locals:         0       0       2       0       0
 10377 ;;      Temps:          0       0       0       0       0
 10378 ;;      Totals:         0       0       4       0       0
 10379 ;;Total ram usage:        4 bytes
 10380 ;; Hardware stack levels used:    1
 10381 ;; Hardware stack levels required when called:    4
 10382 ;; This function calls:
 10383 ;;		_PROCULUS_Control_Register_Write
 10384 ;;		___lwdiv
 10385 ;; This function is called by:
 10386 ;;		_Decodify_Command
 10387 ;; This function uses a non-reentrant model
 10388 ;;
 10389                           
 10390                           
 10391                           ;psect for function _PROCULUS_Buzzer
 10392  1D58                     _PROCULUS_Buzzer:	
 10393                           
 10394                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
 10395                           
 10396                           ;incstack = 0
 10397                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10398  1D58  300A               	movlw	10
 10399  1D59  1283               	bcf	3,5	;RP0=0, select bank0
 10400  1D5A  00A0               	movwf	___lwdiv@divisor
 10401  1D5B  01A1               	clrf	___lwdiv@divisor+1
 10402  1D5C  1683               	bsf	3,5	;RP0=1, select bank1
 10403  1D5D  0830               	movf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128),w
 10404  1D5E  1283               	bcf	3,5	;RP0=0, select bank0
 10405  1D5F  00A3               	movwf	___lwdiv@dividend+1
 10406  1D60  1683               	bsf	3,5	;RP0=1, select bank1
 10407  1D61  082F               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
 10408  1D62  1283               	bcf	3,5	;RP0=0, select bank0
 10409  1D63  00A2               	movwf	___lwdiv@dividend
 10410  1D64  160A  118A  2654  160A  158A  	fcall	___lwdiv
 10411  1D69  0821               	movf	?___lwdiv+1,w
 10412  1D6A  1683               	bsf	3,5	;RP0=1, select bank1
 10413  1D6B  00B0               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
 10414  1D6C  1283               	bcf	3,5	;RP0=0, select bank0
 10415  1D6D  0820               	movf	?___lwdiv,w
 10416  1D6E  1683               	bsf	3,5	;RP0=1, select bank1
 10417  1D6F  00AF               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
 10418                           
 10419                           ;proculus.c: 226:      vetor[0]=0x02;
 10420  1D70  3002               	movlw	2
 10421  1D71  00B1               	movwf	PROCULUS_Buzzer@vetor^(0+128)
 10422                           
 10423                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
 10424  1D72  082F               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
 10425  1D73  00B2               	movwf	(PROCULUS_Buzzer@vetor^(0+128)+1)
 10426                           
 10427                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
 10428  1D74  3002               	movlw	2
 10429  1D75  00AB               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
 10430  1D76  30B1               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
 10431  1D77  2D78               	ljmp	_PROCULUS_Control_Register_Write
 10432  1D78                     __end_of_PROCULUS_Buzzer:	
 10433  1D78                     __ptext35:	
 10434 ;; *************** function _PROCULUS_Control_Register_Write *****************
 10435 ;; Defined at:
 10436 ;;		line 13 in file "proculus.c"
 10437 ;; Parameters:    Size  Location     Type
 10438 ;;  vetor           1    wreg     PTR unsigned char 
 10439 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10440 ;;  size            1   11[BANK1 ] unsigned char 
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;  vetor           1   13[BANK1 ] PTR unsigned char 
 10443 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10444 ;;  i               1   14[BANK1 ] unsigned char 
 10445 ;; Return value:  Size  Location     Type
 10446 ;;                  1    wreg      void 
 10447 ;; Registers used:
 10448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10449 ;; Tracked objects:
 10450 ;;		On entry : 300/100
 10451 ;;		On exit  : 300/0
 10452 ;;		Unchanged: 0/0
 10453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10454 ;;      Params:         0       0       1       0       0
 10455 ;;      Locals:         0       0       2       0       0
 10456 ;;      Temps:          0       0       1       0       0
 10457 ;;      Totals:         0       0       4       0       0
 10458 ;;Total ram usage:        4 bytes
 10459 ;; Hardware stack levels used:    1
 10460 ;; Hardware stack levels required when called:    3
 10461 ;; This function calls:
 10462 ;;		_PROCULUS_Delay
 10463 ;;		_USART_put_int
 10464 ;;		_USART_putc
 10465 ;; This function is called by:
 10466 ;;		_PROCULUS_Buzzer
 10467 ;;		_PROCULUS_Show_Screen
 10468 ;; This function uses a non-reentrant model
 10469 ;;
 10470                           
 10471                           
 10472                           ;psect for function _PROCULUS_Control_Register_Write
 10473  1D78                     _PROCULUS_Control_Register_Write:	
 10474                           
 10475                           ;incstack = 0
 10476                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
 10477                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
 10478  1D78  00AD               	movwf	PROCULUS_Control_Register_Write@vetor^(0+128)
 10479                           
 10480                           ;proculus.c: 14:      USART_put_int(0x5AA5);
 10481  1D79  30A5               	movlw	165
 10482  1D7A  00A8               	movwf	USART_put_int@value^(0+128)
 10483  1D7B  305A               	movlw	90
 10484  1D7C  00A9               	movwf	(USART_put_int@value^(0+128)+1)
 10485  1D7D  120A  158A  2787  160A  158A  	fcall	_USART_put_int
 10486                           
 10487                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
 10488  1D82  082B               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
 10489  1D83  3E01               	addlw	1
 10490  1D84  120A  158A  23DD  160A  158A  	fcall	_USART_putc
 10491                           
 10492                           ;proculus.c: 16:      USART_putc(0x80);
 10493  1D89  3080               	movlw	128
 10494  1D8A  120A  158A  23DD  160A  158A  	fcall	_USART_putc
 10495                           
 10496                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
 10497  1D8F  01AE               	clrf	PROCULUS_Control_Register_Write@i^(0+128)
 10498  1D90                     l6488:	
 10499  1D90  082B               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
 10500  1D91  022E               	subwf	PROCULUS_Control_Register_Write@i^(0+128),w
 10501  1D92  1803               	btfsc	3,0
 10502  1D93  2DA1               	goto	l6490
 10503                           
 10504                           ;proculus.c: 18:          USART_putc(vetor[i]);
 10505  1D94  082E               	movf	PROCULUS_Control_Register_Write@i^(0+128),w
 10506  1D95  072D               	addwf	PROCULUS_Control_Register_Write@vetor^(0+128),w
 10507  1D96  00AC               	movwf	??_PROCULUS_Control_Register_Write^(0+128)
 10508  1D97  0084               	movwf	4
 10509  1D98  1383               	bcf	3,7	;select IRP bank0
 10510  1D99  0800               	movf	0,w
 10511  1D9A  120A  158A  23DD  160A  158A  	fcall	_USART_putc
 10512  1D9F  0AAE               	incf	PROCULUS_Control_Register_Write@i^(0+128),f
 10513  1DA0  2D90               	goto	l6488
 10514  1DA1                     l6490:	
 10515                           
 10516                           ;proculus.c: 19:      PROCULUS_Delay(1);
 10517  1DA1  1283               	bcf	3,5	;RP0=0, select bank0
 10518  1DA2  01A0               	clrf	PROCULUS_Delay@tempo_ms
 10519  1DA3  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
 10520  1DA4  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
 10521  1DA5  2DA6               	ljmp	l4268
 10522  1DA6                     __end_of_PROCULUS_Control_Register_Write:	
 10523  1DA6                     __ptext38:	
 10524 ;; *************** function _PROCULUS_Delay *****************
 10525 ;; Defined at:
 10526 ;;		line 267 in file "proculus.c"
 10527 ;; Parameters:    Size  Location     Type
 10528 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
 10529 ;; Auto vars:     Size  Location     Type
 10530 ;;  i               2    4[BANK0 ] unsigned int 
 10531 ;; Return value:  Size  Location     Type
 10532 ;;                  1    wreg      void 
 10533 ;; Registers used:
 10534 ;;		wreg, status,2, status,0
 10535 ;; Tracked objects:
 10536 ;;		On entry : 300/800
 10537 ;;		On exit  : 300/0
 10538 ;;		Unchanged: 0/0
 10539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10540 ;;      Params:         0       2       0       0       0
 10541 ;;      Locals:         0       2       0       0       0
 10542 ;;      Temps:          0       2       0       0       0
 10543 ;;      Totals:         0       6       0       0       0
 10544 ;;Total ram usage:        6 bytes
 10545 ;; Hardware stack levels used:    1
 10546 ;; Hardware stack levels required when called:    1
 10547 ;; This function calls:
 10548 ;;		Nothing
 10549 ;; This function is called by:
 10550 ;;		_PROCULUS_Control_Register_Write
 10551 ;;		_PROCULUS_VP_Write
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           
 10555                           
 10556                           ;psect for function _PROCULUS_Delay
 10557  1DA6                     _PROCULUS_Delay:	
 10558  1DA6                     l4268:	
 10559                           ;incstack = 0
 10560                           ; Regs used in _PROCULUS_Delay: [wreg+status,2+status,0]
 10561                           
 10562                           
 10563                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
 10564  1DA6  01A4               	clrf	PROCULUS_Delay@i
 10565  1DA7  01A5               	clrf	PROCULUS_Delay@i+1
 10566  1DA8                     l4274:	
 10567  1DA8  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
 10568  1DA9  0225               	subwf	PROCULUS_Delay@i+1,w
 10569  1DAA  1D03               	skipz
 10570  1DAB  2DAE               	goto	u3395
 10571  1DAC  0820               	movf	PROCULUS_Delay@tempo_ms,w
 10572  1DAD  0224               	subwf	PROCULUS_Delay@i,w
 10573  1DAE                     u3395:	
 10574  1DAE  1803               	btfsc	3,0
 10575  1DAF  0008               	return
 10576                           
 10577                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
 10578  1DB0  3003               	movlw	3
 10579  1DB1  1283               	bcf	3,5	;RP0=0, select bank0
 10580  1DB2  1303               	bcf	3,6	;RP1=0, select bank0
 10581  1DB3  00A3               	movwf	??_PROCULUS_Delay+1
 10582  1DB4  3097               	movlw	151
 10583  1DB5  00A2               	movwf	??_PROCULUS_Delay
 10584  1DB6                     u6567:	
 10585  1DB6  0BA2               	decfsz	??_PROCULUS_Delay,f
 10586  1DB7  2DB6               	goto	u6567
 10587  1DB8  0BA3               	decfsz	??_PROCULUS_Delay+1,f
 10588  1DB9  2DB6               	goto	u6567
 10589                           
 10590                           ;proculus.c: 270:     }
 10591  1DBA  1283               	bcf	3,5	;RP0=0, select bank0
 10592  1DBB  1303               	bcf	3,6	;RP1=0, select bank0
 10593  1DBC  0AA4               	incf	PROCULUS_Delay@i,f
 10594  1DBD  1903               	skipnz
 10595  1DBE  0AA5               	incf	PROCULUS_Delay@i+1,f
 10596  1DBF  2DA8               	goto	l4274
 10597  1DC0                     __end_of_PROCULUS_Delay:	
 10598                           
 10599                           	psect	text43
 10600  1EA8                     __ptext43:	
 10601 ;; *************** function _EEPROM_Write_Integer *****************
 10602 ;; Defined at:
 10603 ;;		line 68 in file "eeprom.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;  addr            1    wreg     unsigned char 
 10606 ;;  dado            2    5[BANK0 ] unsigned int 
 10607 ;; Auto vars:     Size  Location     Type
 10608 ;;  addr            1    9[BANK0 ] unsigned char 
 10609 ;;  i               1   11[BANK0 ] unsigned char 
 10610 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
 10611 ;;		 -> EEPROM_Write_Integer@dado(2), 
 10612 ;;  addr_memo       1    0        unsigned char 
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  1    wreg      void 
 10615 ;; Registers used:
 10616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10617 ;; Tracked objects:
 10618 ;;		On entry : 200/0
 10619 ;;		On exit  : 0/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10622 ;;      Params:         0       2       0       0       0
 10623 ;;      Locals:         0       3       0       0       0
 10624 ;;      Temps:          0       2       0       0       0
 10625 ;;      Totals:         0       7       0       0       0
 10626 ;;Total ram usage:        7 bytes
 10627 ;; Hardware stack levels used:    1
 10628 ;; Hardware stack levels required when called:    2
 10629 ;; This function calls:
 10630 ;;		_EEPROM_Write_Byte
 10631 ;; This function is called by:
 10632 ;;		_main
 10633 ;;		_Decodify_Command
 10634 ;; This function uses a non-reentrant model
 10635 ;;
 10636                           
 10637                           
 10638                           ;psect for function _EEPROM_Write_Integer
 10639  1EA8                     _EEPROM_Write_Integer:	
 10640                           
 10641                           ;incstack = 0
 10642                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10643                           ;EEPROM_Write_Integer@addr stored from wreg
 10644  1EA8  1283               	bcf	3,5	;RP0=0, select bank0
 10645  1EA9  00A9               	movwf	EEPROM_Write_Integer@addr
 10646                           
 10647                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
 10648  1EAA  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
 10649  1EAB  00AA               	movwf	EEPROM_Write_Integer@ptr
 10650                           
 10651                           ;eeprom.c: 75:       for (i=0;i<2;i++)
 10652  1EAC  01AB               	clrf	EEPROM_Write_Integer@i
 10653  1EAD                     l4858:	
 10654                           
 10655                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
 10656  1EAD  082A               	movf	EEPROM_Write_Integer@ptr,w
 10657  1EAE  0084               	movwf	4
 10658  1EAF  1383               	bcf	3,7	;select IRP bank0
 10659  1EB0  0800               	movf	0,w
 10660  1EB1  00A0               	movwf	EEPROM_Write_Byte@dado
 10661  1EB2  0829               	movf	EEPROM_Write_Integer@addr,w
 10662  1EB3  26E3  160A  158A   	fcall	_EEPROM_Write_Byte
 10663  1EB6  1283               	bcf	3,5	;RP0=0, select bank0
 10664  1EB7  1303               	bcf	3,6	;RP1=0, select bank0
 10665  1EB8  3002               	movlw	2
 10666  1EB9  0AAA               	incf	EEPROM_Write_Integer@ptr,f
 10667  1EBA  0AA9               	incf	EEPROM_Write_Integer@addr,f
 10668  1EBB  0AAB               	incf	EEPROM_Write_Integer@i,f
 10669  1EBC  022B               	subwf	EEPROM_Write_Integer@i,w
 10670  1EBD  1C03               	skipc
 10671  1EBE  2EAD               	goto	l4858
 10672                           
 10673                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
 10674  1EBF  304E               	movlw	78
 10675  1EC0  1283               	bcf	3,5	;RP0=0, select bank0
 10676  1EC1  1303               	bcf	3,6	;RP1=0, select bank0
 10677  1EC2  00A8               	movwf	??_EEPROM_Write_Integer+1
 10678  1EC3  30EA               	movlw	234
 10679  1EC4  00A7               	movwf	??_EEPROM_Write_Integer
 10680  1EC5                     u6577:	
 10681  1EC5  0BA7               	decfsz	??_EEPROM_Write_Integer,f
 10682  1EC6  2EC5               	goto	u6577
 10683  1EC7  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
 10684  1EC8  2EC5               	goto	u6577
 10685  1EC9  0000               	nop
 10686  1ECA  0008               	return
 10687  1ECB                     __end_of_EEPROM_Write_Integer:	
 10688  1ECB                     __ptext42:	
 10689 ;; *************** function _EEPROM_Write_String *****************
 10690 ;; Defined at:
 10691 ;;		line 97 in file "eeprom.c"
 10692 ;; Parameters:    Size  Location     Type
 10693 ;;  addr            1    wreg     unsigned char 
 10694 ;;  dado            1    5[BANK0 ] PTR unsigned char 
 10695 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10696 ;; Auto vars:     Size  Location     Type
 10697 ;;  addr            1    6[BANK0 ] unsigned char 
 10698 ;; Return value:  Size  Location     Type
 10699 ;;                  1    wreg      void 
 10700 ;; Registers used:
 10701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10702 ;; Tracked objects:
 10703 ;;		On entry : 300/300
 10704 ;;		On exit  : 0/0
 10705 ;;		Unchanged: 0/0
 10706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10707 ;;      Params:         0       1       0       0       0
 10708 ;;      Locals:         0       1       0       0       0
 10709 ;;      Temps:          0       0       0       0       0
 10710 ;;      Totals:         0       2       0       0       0
 10711 ;;Total ram usage:        2 bytes
 10712 ;; Hardware stack levels used:    1
 10713 ;; Hardware stack levels required when called:    2
 10714 ;; This function calls:
 10715 ;;		_EEPROM_Write_Byte
 10716 ;; This function is called by:
 10717 ;;		_Decodify_Command
 10718 ;; This function uses a non-reentrant model
 10719 ;;
 10720                           
 10721                           
 10722                           ;psect for function _EEPROM_Write_String
 10723  1ECB                     _EEPROM_Write_String:	
 10724                           
 10725                           ;incstack = 0
 10726                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10727                           ;EEPROM_Write_String@addr stored from wreg
 10728  1ECB  1283               	bcf	3,5	;RP0=0, select bank0
 10729  1ECC  1303               	bcf	3,6	;RP1=0, select bank0
 10730  1ECD  00A6               	movwf	EEPROM_Write_String@addr
 10731  1ECE                     l6588:	
 10732                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
 10733                           
 10734                           
 10735                           ;eeprom.c: 99:     while(*dado)
 10736  1ECE  0825               	movf	EEPROM_Write_String@dado,w
 10737  1ECF  0084               	movwf	4
 10738  1ED0  1783               	bsf	3,7	;select IRP bank2
 10739  1ED1  0800               	movf	0,w
 10740  1ED2  1903               	btfsc	3,2
 10741  1ED3  2EDF               	goto	l6590
 10742                           
 10743                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
 10744  1ED4  271E  160A  158A   	fcall	PL70	;call to abstracted procedure
 10745  1ED7  26E3  160A  158A   	fcall	_EEPROM_Write_Byte
 10746                           
 10747                           ;eeprom.c: 102:      addr++;
 10748  1EDA  1283               	bcf	3,5	;RP0=0, select bank0
 10749  1EDB  1303               	bcf	3,6	;RP1=0, select bank0
 10750  1EDC  0AA6               	incf	EEPROM_Write_String@addr,f
 10751                           
 10752                           ;eeprom.c: 103:      dado++;
 10753  1EDD  0AA5               	incf	EEPROM_Write_String@dado,f
 10754  1EDE  2ECE               	goto	l6588
 10755  1EDF                     l6590:	
 10756                           
 10757                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
 10758  1EDF  271E  160A  158A   	fcall	PL70	;call to abstracted procedure
 10759  1EE2  2EE3               	ljmp	_EEPROM_Write_Byte
 10760  1EE3                     __end_of_EEPROM_Write_String:	
 10761  1EE3                     __ptext44:	
 10762 ;; *************** function _EEPROM_Write_Byte *****************
 10763 ;; Defined at:
 10764 ;;		line 21 in file "eeprom.c"
 10765 ;; Parameters:    Size  Location     Type
 10766 ;;  addr            1    wreg     unsigned char 
 10767 ;;  dado            1    0[BANK0 ] unsigned char 
 10768 ;; Auto vars:     Size  Location     Type
 10769 ;;  addr            1    3[BANK0 ] unsigned char 
 10770 ;;  last_GIE        1    4[BANK0 ] unsigned char 
 10771 ;; Return value:  Size  Location     Type
 10772 ;;                  1    wreg      void 
 10773 ;; Registers used:
 10774 ;;		wreg, status,2, status,0
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/300
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10780 ;;      Params:         0       1       0       0       0
 10781 ;;      Locals:         0       2       0       0       0
 10782 ;;      Temps:          0       2       0       0       0
 10783 ;;      Totals:         0       5       0       0       0
 10784 ;;Total ram usage:        5 bytes
 10785 ;; Hardware stack levels used:    1
 10786 ;; Hardware stack levels required when called:    1
 10787 ;; This function calls:
 10788 ;;		Nothing
 10789 ;; This function is called by:
 10790 ;;		_Decodify_Command
 10791 ;;		_EEPROM_Write_Integer
 10792 ;;		_EEPROM_Write_String
 10793 ;; This function uses a non-reentrant model
 10794 ;;
 10795                           
 10796                           
 10797                           ;psect for function _EEPROM_Write_Byte
 10798  1EE3                     _EEPROM_Write_Byte:	
 10799                           
 10800                           ;incstack = 0
 10801                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
 10802                           ;EEPROM_Write_Byte@addr stored from wreg
 10803  1EE3  1283               	bcf	3,5	;RP0=0, select bank0
 10804  1EE4  1303               	bcf	3,6	;RP1=0, select bank0
 10805  1EE5  00A3               	movwf	EEPROM_Write_Byte@addr
 10806                           
 10807                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
 10808  1EE6  3014               	movlw	20
 10809  1EE7  1683               	bsf	3,5	;RP0=1, select bank3
 10810  1EE8  1703               	bsf	3,6	;RP1=1, select bank3
 10811  1EE9  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 10812  1EEA  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 10813  1EEB                     l474:	
 10814                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
 10815                           
 10816  1EEB  188C               	btfsc	12,1	;volsfr
 10817  1EEC  2EEB               	goto	l474
 10818                           
 10819                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
 10820  1EED  1F8B               	btfss	11,7	;volatile
 10821  1EEE  2EF4               	goto	l4450
 10822                           
 10823                           ;eeprom.c: 28:           last_GIE=1;
 10824  1EEF  1283               	bcf	3,5	;RP0=0, select bank0
 10825  1EF0  1303               	bcf	3,6	;RP1=0, select bank0
 10826  1EF1  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10827  1EF2  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
 10828  1EF3  2EF7               	goto	l4452
 10829  1EF4                     l4450:	
 10830                           
 10831                           ;eeprom.c: 30:           last_GIE=0;
 10832  1EF4  1283               	bcf	3,5	;RP0=0, select bank0
 10833  1EF5  1303               	bcf	3,6	;RP1=0, select bank0
 10834  1EF6  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10835  1EF7                     l4452:	
 10836                           
 10837                           ;eeprom.c: 32:        EEADR=addr;
 10838  1EF7  0823               	movf	EEPROM_Write_Byte@addr,w
 10839  1EF8  1703               	bsf	3,6	;RP1=1, select bank2
 10840  1EF9  008D               	movwf	13	;volatile
 10841                           
 10842                           ;eeprom.c: 33:        EEDATA=dado;
 10843  1EFA  1303               	bcf	3,6	;RP1=0, select bank0
 10844  1EFB  0820               	movf	EEPROM_Write_Byte@dado,w
 10845  1EFC  1703               	bsf	3,6	;RP1=1, select bank2
 10846  1EFD  008C               	movwf	12	;volatile
 10847                           
 10848                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
 10849  1EFE  1683               	bsf	3,5	;RP0=1, select bank3
 10850  1EFF  138C               	bcf	12,7	;volsfr
 10851                           
 10852                           ;eeprom.c: 35:        EECON1bits.WREN=1;
 10853  1F00  150C               	bsf	12,2	;volsfr
 10854                           
 10855                           ;eeprom.c: 36:        INTCONbits.GIE=0;
 10856  1F01  138B               	bcf	11,7	;volatile
 10857                           
 10858                           ;eeprom.c: 37:        EECON2=0x55;
 10859  1F02  3055               	movlw	85
 10860  1F03  008D               	movwf	13	;volsfr
 10861                           
 10862                           ;eeprom.c: 38:        EECON2=0xAA;
 10863  1F04  30AA               	movlw	170
 10864  1F05  008D               	movwf	13	;volsfr
 10865                           
 10866                           ;eeprom.c: 39:        EECON1bits.WR=1;
 10867  1F06  148C               	bsf	12,1	;volsfr
 10868                           
 10869                           ;eeprom.c: 41:        if(last_GIE==1)
 10870  1F07  1283               	bcf	3,5	;RP0=0, select bank0
 10871  1F08  1303               	bcf	3,6	;RP1=0, select bank0
 10872  1F09  0324               	decf	EEPROM_Write_Byte@last_GIE,w
 10873  1F0A  1D03               	btfss	3,2
 10874  1F0B  2F0E               	goto	l479
 10875                           
 10876                           ;eeprom.c: 42:           INTCONbits.GIE=1;
 10877  1F0C  178B               	bsf	11,7	;volatile
 10878  1F0D  2F0F               	goto	l480
 10879  1F0E                     l479:	
 10880                           ;eeprom.c: 43:        else
 10881                           
 10882                           
 10883                           ;eeprom.c: 44:           INTCONbits.GIE=0;
 10884  1F0E  138B               	bcf	11,7	;volatile
 10885  1F0F                     l480:	
 10886                           
 10887                           ;eeprom.c: 46:        EECON1bits.WREN=0;
 10888  1F0F  1683               	bsf	3,5	;RP0=1, select bank3
 10889  1F10  1703               	bsf	3,6	;RP1=1, select bank3
 10890  1F11  110C               	bcf	12,2	;volsfr
 10891                           
 10892                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
 10893  1F12  304E               	movlw	78
 10894  1F13  1283               	bcf	3,5	;RP0=0, select bank0
 10895  1F14  1303               	bcf	3,6	;RP1=0, select bank0
 10896  1F15  00A2               	movwf	??_EEPROM_Write_Byte+1
 10897  1F16  30EA               	movlw	234
 10898  1F17  00A1               	movwf	??_EEPROM_Write_Byte
 10899  1F18                     u6587:	
 10900  1F18  0BA1               	decfsz	??_EEPROM_Write_Byte,f
 10901  1F19  2F18               	goto	u6587
 10902  1F1A  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
 10903  1F1B  2F18               	goto	u6587
 10904  1F1C  0000               	nop
 10905  1F1D  0008               	return
 10906  1F1E                     __end_of_EEPROM_Write_Byte:	
 10907  1F1E                     PL70:	
 10908  1F1E  0825               	movf	EEPROM_Write_String@dado,w
 10909  1F1F  0084               	movwf	4
 10910  1F20  0800               	movf	0,w
 10911  1F21  00A0               	movwf	EEPROM_Write_Byte@dado
 10912  1F22  0826               	movf	EEPROM_Write_String@addr,w
 10913  1F23  0008               	return
 10914  1F24                     __end_ofPL70:	
 10915                           
 10916                           	psect	text45
 10917  04F5                     __ptext45:	
 10918 ;; *************** function _EEPROM_Read_String *****************
 10919 ;; Defined at:
 10920 ;;		line 109 in file "eeprom.c"
 10921 ;; Parameters:    Size  Location     Type
 10922 ;;  addr            1    wreg     unsigned char 
 10923 ;;  dado            1    3[BANK0 ] PTR unsigned char 
 10924 ;;		 -> texto(16), 
 10925 ;; Auto vars:     Size  Location     Type
 10926 ;;  addr            1    4[BANK0 ] unsigned char 
 10927 ;;  c               1    5[BANK0 ] unsigned char 
 10928 ;; Return value:  Size  Location     Type
 10929 ;;                  1    wreg      void 
 10930 ;; Registers used:
 10931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10932 ;; Tracked objects:
 10933 ;;		On entry : 300/300
 10934 ;;		On exit  : B00/800
 10935 ;;		Unchanged: 0/0
 10936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10937 ;;      Params:         0       1       0       0       0
 10938 ;;      Locals:         0       2       0       0       0
 10939 ;;      Temps:          0       0       0       0       0
 10940 ;;      Totals:         0       3       0       0       0
 10941 ;;Total ram usage:        3 bytes
 10942 ;; Hardware stack levels used:    1
 10943 ;; Hardware stack levels required when called:    2
 10944 ;; This function calls:
 10945 ;;		_EEPROM_Read_Byte
 10946 ;; This function is called by:
 10947 ;;		_Decodify_Command
 10948 ;; This function uses a non-reentrant model
 10949 ;;
 10950                           
 10951                           
 10952                           ;psect for function _EEPROM_Read_String
 10953  04F5                     _EEPROM_Read_String:	
 10954                           
 10955                           ;incstack = 0
 10956                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10957                           ;EEPROM_Read_String@addr stored from wreg
 10958  04F5  1283               	bcf	3,5	;RP0=0, select bank0
 10959  04F6  1303               	bcf	3,6	;RP1=0, select bank0
 10960  04F7  00A4               	movwf	EEPROM_Read_String@addr
 10961  04F8                     l506:	
 10962                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 10963                           
 10964                           
 10965                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10966  04F8  0824               	movf	EEPROM_Read_String@addr,w
 10967  04F9  25E1  120A  118A   	fcall	_EEPROM_Read_Byte
 10968  04FC  1303               	bcf	3,6	;RP1=0, select bank0
 10969  04FD  00A5               	movwf	EEPROM_Read_String@c
 10970  04FE  0AA4               	incf	EEPROM_Read_String@addr,f
 10971                           
 10972                           ;eeprom.c: 114:         *(dado++)=c;
 10973  04FF  0823               	movf	EEPROM_Read_String@dado,w
 10974  0500  0084               	movwf	4
 10975  0501  0825               	movf	EEPROM_Read_String@c,w
 10976  0502  1783               	bsf	3,7	;select IRP bank2
 10977  0503  0080               	movwf	0
 10978  0504  0AA3               	incf	EEPROM_Read_String@dado,f
 10979                           
 10980                           ;eeprom.c: 116:       }while(c);
 10981  0505  0825               	movf	EEPROM_Read_String@c,w
 10982  0506  1903               	btfsc	3,2
 10983  0507  0008               	return
 10984  0508  2CF8               	goto	l506
 10985  0509                     __end_of_EEPROM_Read_String:	
 10986  0509                     __ptext39:	
 10987 ;; *************** function _Load_Work *****************
 10988 ;; Defined at:
 10989 ;;		line 982 in file "SlaveLiofilizadorVer1.c"
 10990 ;; Parameters:    Size  Location     Type
 10991 ;;		None
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;		None
 10994 ;; Return value:  Size  Location     Type
 10995 ;;                  1    wreg      void 
 10996 ;; Registers used:
 10997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10998 ;; Tracked objects:
 10999 ;;		On entry : 100/300
 11000 ;;		On exit  : 300/200
 11001 ;;		Unchanged: 0/0
 11002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11003 ;;      Params:         0       0       0       0       0
 11004 ;;      Locals:         0       0       0       0       0
 11005 ;;      Temps:          0       0       4       0       0
 11006 ;;      Totals:         0       0       4       0       0
 11007 ;;Total ram usage:        4 bytes
 11008 ;; Hardware stack levels used:    1
 11009 ;; Hardware stack levels required when called:    3
 11010 ;; This function calls:
 11011 ;;		_EEPROM_Read_Byte
 11012 ;;		_EEPROM_Read_Integer
 11013 ;;		___fldiv
 11014 ;;		___xxtofl
 11015 ;; This function is called by:
 11016 ;;		_main
 11017 ;;		_Decodify_Command
 11018 ;; This function uses a non-reentrant model
 11019 ;;
 11020                           
 11021                           
 11022                           ;psect for function _Load_Work
 11023  0509                     _Load_Work:	
 11024  0509                     l6544:	
 11025                           ;incstack = 0
 11026                           ; Regs used in _Load_Work: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11027                           
 11028                           
 11029                           ;SlaveLiofilizadorVer1.c: 985:      SetPoint0 = EEPROM_Read_Integer(0);
 11030  0509  3000               	movlw	0
 11031  050A  2602  120A  118A   	fcall	_EEPROM_Read_Integer
 11032  050D  261D               	fcall	PL16	;call to abstracted procedure
 11033  050E  160A  118A  24A9  120A  118A  	fcall	___xxtofl
 11034  0513  082E               	movf	?___xxtofl+3,w
 11035  0514  00F3               	movwf	_SetPoint0+3	;volatile
 11036  0515  082D               	movf	?___xxtofl+2,w
 11037  0516  00F2               	movwf	_SetPoint0+2	;volatile
 11038  0517  082C               	movf	?___xxtofl+1,w
 11039  0518  00F1               	movwf	_SetPoint0+1	;volatile
 11040  0519  082B               	movf	?___xxtofl,w
 11041  051A  00F0               	movwf	_SetPoint0	;volatile
 11042                           
 11043                           ;SlaveLiofilizadorVer1.c: 986:      SetPoint0/=10;
 11044  051B  3041               	movlw	65
 11045  051C  1683               	bsf	3,5	;RP0=1, select bank1
 11046  051D  00A3               	movwf	(___fldiv@a+3)^(0+128)
 11047  051E  3020               	movlw	32
 11048  051F  00A2               	movwf	(___fldiv@a+2)^(0+128)
 11049  0520  01A1               	clrf	(___fldiv@a+1)^(0+128)
 11050  0521  01A0               	clrf	___fldiv@a^(0+128)
 11051  0522  0873               	movf	_SetPoint0+3,w	;volatile
 11052  0523  00A7               	movwf	(___fldiv@b+3)^(0+128)
 11053  0524  0872               	movf	_SetPoint0+2,w	;volatile
 11054  0525  00A6               	movwf	(___fldiv@b+2)^(0+128)
 11055  0526  0871               	movf	_SetPoint0+1,w	;volatile
 11056  0527  00A5               	movwf	(___fldiv@b+1)^(0+128)
 11057  0528  0870               	movf	_SetPoint0,w	;volatile
 11058  0529  00A4               	movwf	___fldiv@b^(0+128)
 11059  052A  160A  118A  2517  120A  118A  	fcall	___fldiv
 11060  052F  0823               	movf	(?___fldiv+3)^(0+128),w
 11061  0530  00F3               	movwf	_SetPoint0+3	;volatile
 11062  0531  0822               	movf	(?___fldiv+2)^(0+128),w
 11063  0532  00F2               	movwf	_SetPoint0+2	;volatile
 11064  0533  0821               	movf	(?___fldiv+1)^(0+128),w
 11065  0534  00F1               	movwf	_SetPoint0+1	;volatile
 11066  0535  0820               	movf	?___fldiv^(0+128),w
 11067  0536  00F0               	movwf	_SetPoint0	;volatile
 11068                           
 11069                           ;SlaveLiofilizadorVer1.c: 987:      TempoON_0 = EEPROM_Read_Byte(2);
 11070  0537  3002               	movlw	2
 11071  0538  25E1  120A  118A   	fcall	_EEPROM_Read_Byte
 11072  053B  1683               	bsf	3,5	;RP0=1, select bank3
 11073  053C  00BA               	movwf	_TempoON_0^(0+384)
 11074                           
 11075                           ;SlaveLiofilizadorVer1.c: 988:      TempoOFF_0= EEPROM_Read_Byte(3);
 11076  053D  3003               	movlw	3
 11077  053E  25E1  120A  118A   	fcall	_EEPROM_Read_Byte
 11078  0541  1683               	bsf	3,5	;RP0=1, select bank3
 11079  0542  00B9               	movwf	_TempoOFF_0^(0+384)
 11080                           
 11081                           ;SlaveLiofilizadorVer1.c: 989:      Histerese0= EEPROM_Read_Byte(4);
 11082  0543  3004               	movlw	4
 11083  0544  25E1               	fcall	_EEPROM_Read_Byte
 11084  0545  1303               	bcf	3,6	;RP1=0, select bank0
 11085  0546  00AB               	movwf	___xxtofl@val
 11086  0547  3000               	movlw	0
 11087  0548  01AC               	clrf	___xxtofl@val+1
 11088  0549  01AD               	clrf	___xxtofl@val+2
 11089  054A  01AE               	clrf	___xxtofl@val+3
 11090  054B  160A  118A  24A9  120A  118A  	fcall	___xxtofl
 11091  0550  082E               	movf	?___xxtofl+3,w
 11092  0551  1683               	bsf	3,5	;RP0=1, select bank3
 11093  0552  1703               	bsf	3,6	;RP1=1, select bank3
 11094  0553  009F               	movwf	(_Histerese0+3)^(0+384)
 11095  0554  1283               	bcf	3,5	;RP0=0, select bank0
 11096  0555  1303               	bcf	3,6	;RP1=0, select bank0
 11097  0556  082D               	movf	?___xxtofl+2,w
 11098  0557  1683               	bsf	3,5	;RP0=1, select bank3
 11099  0558  1703               	bsf	3,6	;RP1=1, select bank3
 11100  0559  009E               	movwf	(_Histerese0+2)^(0+384)
 11101  055A  1283               	bcf	3,5	;RP0=0, select bank0
 11102  055B  1303               	bcf	3,6	;RP1=0, select bank0
 11103  055C  082C               	movf	?___xxtofl+1,w
 11104  055D  1683               	bsf	3,5	;RP0=1, select bank3
 11105  055E  1703               	bsf	3,6	;RP1=1, select bank3
 11106  055F  009D               	movwf	(_Histerese0+1)^(0+384)
 11107  0560  1283               	bcf	3,5	;RP0=0, select bank0
 11108  0561  1303               	bcf	3,6	;RP1=0, select bank0
 11109  0562  082B               	movf	?___xxtofl,w
 11110  0563  1683               	bsf	3,5	;RP0=1, select bank3
 11111  0564  1703               	bsf	3,6	;RP1=1, select bank3
 11112  0565  009C               	movwf	_Histerese0^(0+384)
 11113                           
 11114                           ;SlaveLiofilizadorVer1.c: 990:      Status0 = EEPROM_Read_Integer(5);
 11115  0566  3005               	movlw	5
 11116  0567  2602  120A  118A   	fcall	_EEPROM_Read_Integer
 11117  056A  0824               	movf	?_EEPROM_Read_Integer+1,w
 11118  056B  1683               	bsf	3,5	;RP0=1, select bank3
 11119  056C  1703               	bsf	3,6	;RP1=1, select bank3
 11120  056D  00A9               	movwf	(_Status0+1)^(0+384)
 11121  056E  1283               	bcf	3,5	;RP0=0, select bank0
 11122  056F  1303               	bcf	3,6	;RP1=0, select bank0
 11123  0570  0823               	movf	?_EEPROM_Read_Integer,w
 11124  0571  1683               	bsf	3,5	;RP0=1, select bank3
 11125  0572  1703               	bsf	3,6	;RP1=1, select bank3
 11126  0573  00A8               	movwf	_Status0^(0+384)
 11127                           
 11128                           ;SlaveLiofilizadorVer1.c: 992:      SetPoint1 = EEPROM_Read_Integer(7);
 11129  0574  3007               	movlw	7
 11130  0575  2602  120A  118A   	fcall	_EEPROM_Read_Integer
 11131  0578  261D               	fcall	PL16	;call to abstracted procedure
 11132  0579  160A  118A  24A9  120A  118A  	fcall	___xxtofl
 11133  057E  082E               	movf	?___xxtofl+3,w
 11134  057F  1683               	bsf	3,5	;RP0=1, select bank3
 11135  0580  1703               	bsf	3,6	;RP1=1, select bank3
 11136  0581  009B               	movwf	(_SetPoint1+3)^(0+384)	;volatile
 11137  0582  1283               	bcf	3,5	;RP0=0, select bank0
 11138  0583  1303               	bcf	3,6	;RP1=0, select bank0
 11139  0584  082D               	movf	?___xxtofl+2,w
 11140  0585  1683               	bsf	3,5	;RP0=1, select bank3
 11141  0586  1703               	bsf	3,6	;RP1=1, select bank3
 11142  0587  009A               	movwf	(_SetPoint1+2)^(0+384)	;volatile
 11143  0588  1283               	bcf	3,5	;RP0=0, select bank0
 11144  0589  1303               	bcf	3,6	;RP1=0, select bank0
 11145  058A  082C               	movf	?___xxtofl+1,w
 11146  058B  1683               	bsf	3,5	;RP0=1, select bank3
 11147  058C  1703               	bsf	3,6	;RP1=1, select bank3
 11148  058D  0099               	movwf	(_SetPoint1+1)^(0+384)	;volatile
 11149  058E  1283               	bcf	3,5	;RP0=0, select bank0
 11150  058F  1303               	bcf	3,6	;RP1=0, select bank0
 11151  0590  082B               	movf	?___xxtofl,w
 11152  0591  1683               	bsf	3,5	;RP0=1, select bank3
 11153  0592  1703               	bsf	3,6	;RP1=1, select bank3
 11154  0593  0098               	movwf	_SetPoint1^(0+384)	;volatile
 11155                           
 11156                           ;SlaveLiofilizadorVer1.c: 993:      SetPoint1/=10;
 11157  0594  3041               	movlw	65
 11158  0595  1303               	bcf	3,6	;RP1=0, select bank1
 11159  0596  00A3               	movwf	(___fldiv@a+3)^(0+128)
 11160  0597  3020               	movlw	32
 11161  0598  00A2               	movwf	(___fldiv@a+2)^(0+128)
 11162  0599  01A1               	clrf	(___fldiv@a+1)^(0+128)
 11163  059A  01A0               	clrf	___fldiv@a^(0+128)
 11164  059B  1703               	bsf	3,6	;RP1=1, select bank3
 11165  059C  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
 11166  059D  1303               	bcf	3,6	;RP1=0, select bank1
 11167  059E  00A7               	movwf	(___fldiv@b+3)^(0+128)
 11168  059F  1703               	bsf	3,6	;RP1=1, select bank3
 11169  05A0  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
 11170  05A1  1303               	bcf	3,6	;RP1=0, select bank1
 11171  05A2  00A6               	movwf	(___fldiv@b+2)^(0+128)
 11172  05A3  1703               	bsf	3,6	;RP1=1, select bank3
 11173  05A4  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
 11174  05A5  1303               	bcf	3,6	;RP1=0, select bank1
 11175  05A6  00A5               	movwf	(___fldiv@b+1)^(0+128)
 11176  05A7  1703               	bsf	3,6	;RP1=1, select bank3
 11177  05A8  0818               	movf	_SetPoint1^(0+384),w	;volatile
 11178  05A9  1303               	bcf	3,6	;RP1=0, select bank1
 11179  05AA  00A4               	movwf	___fldiv@b^(0+128)
 11180  05AB  160A  118A  2517  120A  118A  	fcall	___fldiv
 11181  05B0  0823               	movf	(?___fldiv+3)^(0+128),w
 11182  05B1  1703               	bsf	3,6	;RP1=1, select bank3
 11183  05B2  009B               	movwf	(_SetPoint1+3)^(0+384)	;volatile
 11184  05B3  1303               	bcf	3,6	;RP1=0, select bank1
 11185  05B4  0822               	movf	(?___fldiv+2)^(0+128),w
 11186  05B5  1703               	bsf	3,6	;RP1=1, select bank3
 11187  05B6  009A               	movwf	(_SetPoint1+2)^(0+384)	;volatile
 11188  05B7  1303               	bcf	3,6	;RP1=0, select bank1
 11189  05B8  0821               	movf	(?___fldiv+1)^(0+128),w
 11190  05B9  1703               	bsf	3,6	;RP1=1, select bank3
 11191  05BA  0099               	movwf	(_SetPoint1+1)^(0+384)	;volatile
 11192  05BB  1303               	bcf	3,6	;RP1=0, select bank1
 11193  05BC  0820               	movf	?___fldiv^(0+128),w
 11194  05BD  1703               	bsf	3,6	;RP1=1, select bank3
 11195  05BE  0098               	movwf	_SetPoint1^(0+384)	;volatile
 11196                           
 11197                           ;SlaveLiofilizadorVer1.c: 994:      TempoON_1 = EEPROM_Read_Byte(9);
 11198  05BF  3009               	movlw	9
 11199  05C0  25E1  120A  118A   	fcall	_EEPROM_Read_Byte
 11200  05C3  1683               	bsf	3,5	;RP0=1, select bank3
 11201  05C4  00B7               	movwf	_TempoON_1^(0+384)
 11202                           
 11203                           ;SlaveLiofilizadorVer1.c: 995:      TempoOFF_1= EEPROM_Read_Byte(10);
 11204  05C5  300A               	movlw	10
 11205  05C6  25E1  120A  118A   	fcall	_EEPROM_Read_Byte
 11206  05C9  1683               	bsf	3,5	;RP0=1, select bank3
 11207  05CA  00B6               	movwf	_TempoOFF_1^(0+384)
 11208                           
 11209                           ;SlaveLiofilizadorVer1.c: 996:      Histerese1= EEPROM_Read_Byte(11);
 11210  05CB  300B               	movlw	11
 11211  05CC  25E1  120A  118A   	fcall	_EEPROM_Read_Byte
 11212  05CF  1683               	bsf	3,5	;RP0=1, select bank3
 11213  05D0  00B8               	movwf	_Histerese1^(0+384)
 11214                           
 11215                           ;SlaveLiofilizadorVer1.c: 997:      Status1 = EEPROM_Read_Integer(12);
 11216  05D1  300C               	movlw	12
 11217  05D2  2602  120A  118A   	fcall	_EEPROM_Read_Integer
 11218  05D5  0824               	movf	?_EEPROM_Read_Integer+1,w
 11219  05D6  1683               	bsf	3,5	;RP0=1, select bank3
 11220  05D7  1703               	bsf	3,6	;RP1=1, select bank3
 11221  05D8  00A7               	movwf	(_Status1+1)^(0+384)
 11222  05D9  1283               	bcf	3,5	;RP0=0, select bank0
 11223  05DA  1303               	bcf	3,6	;RP1=0, select bank0
 11224  05DB  0823               	movf	?_EEPROM_Read_Integer,w
 11225  05DC  1683               	bsf	3,5	;RP0=1, select bank3
 11226  05DD  1703               	bsf	3,6	;RP1=1, select bank3
 11227  05DE  00A6               	movwf	_Status1^(0+384)
 11228                           
 11229                           ;SlaveLiofilizadorVer1.c: 999:      statuspower.bits=EEPROM_Read_Byte(14);
 11230  05DF  300E               	movlw	14
 11231  05E0  2DE1               	ljmp	_EEPROM_Read_Byte
 11232  05E1                     __end_of_Load_Work:	
 11233  05E1                     __ptext46:	
 11234 ;; *************** function _EEPROM_Read_Byte *****************
 11235 ;; Defined at:
 11236 ;;		line 52 in file "eeprom.c"
 11237 ;; Parameters:    Size  Location     Type
 11238 ;;  addr            1    wreg     unsigned char 
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;  addr            1    2[BANK0 ] unsigned char 
 11241 ;; Return value:  Size  Location     Type
 11242 ;;                  1    wreg      unsigned char 
 11243 ;; Registers used:
 11244 ;;		wreg
 11245 ;; Tracked objects:
 11246 ;;		On entry : 0/300
 11247 ;;		On exit  : 300/200
 11248 ;;		Unchanged: 0/0
 11249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11250 ;;      Params:         0       0       0       0       0
 11251 ;;      Locals:         0       1       0       0       0
 11252 ;;      Temps:          0       2       0       0       0
 11253 ;;      Totals:         0       3       0       0       0
 11254 ;;Total ram usage:        3 bytes
 11255 ;; Hardware stack levels used:    1
 11256 ;; Hardware stack levels required when called:    1
 11257 ;; This function calls:
 11258 ;;		Nothing
 11259 ;; This function is called by:
 11260 ;;		_Decodify_Command
 11261 ;;		_Load_Work
 11262 ;;		_EEPROM_Read_Integer
 11263 ;;		_EEPROM_Read_String
 11264 ;; This function uses a non-reentrant model
 11265 ;;
 11266                           
 11267                           
 11268                           ;psect for function _EEPROM_Read_Byte
 11269  05E1                     _EEPROM_Read_Byte:	
 11270                           
 11271                           ;incstack = 0
 11272                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 11273                           ;EEPROM_Read_Byte@addr stored from wreg
 11274  05E1  1283               	bcf	3,5	;RP0=0, select bank0
 11275  05E2  1303               	bcf	3,6	;RP1=0, select bank0
 11276  05E3  00A2               	movwf	EEPROM_Read_Byte@addr
 11277                           
 11278                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 11279  05E4  3014               	movlw	20
 11280  05E5  1683               	bsf	3,5	;RP0=1, select bank3
 11281  05E6  1703               	bsf	3,6	;RP1=1, select bank3
 11282  05E7  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 11283  05E8  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 11284  05E9                     l484:	
 11285                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 11286                           
 11287  05E9  188C               	btfsc	12,1	;volsfr
 11288  05EA  2DE9               	goto	l484
 11289                           
 11290                           ;eeprom.c: 57:    EEADR=addr;
 11291  05EB  1283               	bcf	3,5	;RP0=0, select bank0
 11292  05EC  1303               	bcf	3,6	;RP1=0, select bank0
 11293  05ED  0822               	movf	EEPROM_Read_Byte@addr,w
 11294  05EE  1703               	bsf	3,6	;RP1=1, select bank2
 11295  05EF  008D               	movwf	13	;volatile
 11296                           
 11297                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 11298  05F0  1683               	bsf	3,5	;RP0=1, select bank3
 11299  05F1  138C               	bcf	12,7	;volsfr
 11300                           
 11301                           ;eeprom.c: 59:    EECON1bits.RD=1;
 11302  05F2  140C               	bsf	12,0	;volsfr
 11303                           
 11304                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 11305  05F3  304E               	movlw	78
 11306  05F4  1283               	bcf	3,5	;RP0=0, select bank0
 11307  05F5  1303               	bcf	3,6	;RP1=0, select bank0
 11308  05F6  00A1               	movwf	??_EEPROM_Read_Byte+1
 11309  05F7  30EA               	movlw	234
 11310  05F8  00A0               	movwf	??_EEPROM_Read_Byte
 11311  05F9                     u6597:	
 11312  05F9  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 11313  05FA  2DF9               	goto	u6597
 11314  05FB  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 11315  05FC  2DF9               	goto	u6597
 11316  05FD  0000               	nop
 11317                           
 11318                           ;eeprom.c: 61:    return EEDATA;
 11319  05FE  1283               	bcf	3,5	;RP0=0, select bank2
 11320  05FF  1703               	bsf	3,6	;RP1=1, select bank2
 11321  0600  080C               	movf	12,w	;volatile
 11322  0601  0008               	return
 11323  0602                     __end_of_EEPROM_Read_Byte:	
 11324  0602                     __ptext41:	
 11325 ;; *************** function _EEPROM_Read_Integer *****************
 11326 ;; Defined at:
 11327 ;;		line 81 in file "eeprom.c"
 11328 ;; Parameters:    Size  Location     Type
 11329 ;;  addr            1    wreg     unsigned char 
 11330 ;; Auto vars:     Size  Location     Type
 11331 ;;  addr            1    6[BANK0 ] unsigned char 
 11332 ;;  result          2    8[BANK0 ] unsigned int 
 11333 ;;  i               1   10[BANK0 ] unsigned char 
 11334 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 11335 ;;		 -> EEPROM_Read_Integer@result(2), 
 11336 ;; Return value:  Size  Location     Type
 11337 ;;                  2    3[BANK0 ] unsigned int 
 11338 ;; Registers used:
 11339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11340 ;; Tracked objects:
 11341 ;;		On entry : 0/0
 11342 ;;		On exit  : B00/0
 11343 ;;		Unchanged: 0/0
 11344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11345 ;;      Params:         0       3       0       0       0
 11346 ;;      Locals:         0       5       0       0       0
 11347 ;;      Temps:          0       0       0       0       0
 11348 ;;      Totals:         0       8       0       0       0
 11349 ;;Total ram usage:        8 bytes
 11350 ;; Hardware stack levels used:    1
 11351 ;; Hardware stack levels required when called:    2
 11352 ;; This function calls:
 11353 ;;		_EEPROM_Read_Byte
 11354 ;; This function is called by:
 11355 ;;		_main
 11356 ;;		_Decodify_Command
 11357 ;;		_Load_Work
 11358 ;; This function uses a non-reentrant model
 11359 ;;
 11360                           
 11361                           
 11362                           ;psect for function _EEPROM_Read_Integer
 11363  0602                     _EEPROM_Read_Integer:	
 11364                           
 11365                           ;incstack = 0
 11366                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11367                           ;EEPROM_Read_Integer@addr stored from wreg
 11368  0602  1283               	bcf	3,5	;RP0=0, select bank0
 11369  0603  1303               	bcf	3,6	;RP1=0, select bank0
 11370  0604  00A6               	movwf	EEPROM_Read_Integer@addr
 11371                           
 11372                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 11373  0605  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 11374  0606  00A7               	movwf	EEPROM_Read_Integer@ptr
 11375                           
 11376                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 11377  0607  01AA               	clrf	EEPROM_Read_Integer@i
 11378  0608                     l6316:	
 11379                           
 11380                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 11381  0608  0827               	movf	EEPROM_Read_Integer@ptr,w
 11382  0609  0084               	movwf	4
 11383  060A  0826               	movf	EEPROM_Read_Integer@addr,w
 11384  060B  25E1  120A  118A   	fcall	_EEPROM_Read_Byte
 11385  060E  1383               	bcf	3,7	;select IRP bank0
 11386  060F  0080               	movwf	0
 11387  0610  1303               	bcf	3,6	;RP1=0, select bank0
 11388  0611  3002               	movlw	2
 11389  0612  0AA6               	incf	EEPROM_Read_Integer@addr,f
 11390  0613  0AA7               	incf	EEPROM_Read_Integer@ptr,f
 11391  0614  0AAA               	incf	EEPROM_Read_Integer@i,f
 11392  0615  022A               	subwf	EEPROM_Read_Integer@i,w
 11393  0616  1C03               	skipc
 11394  0617  2E08               	goto	l6316
 11395                           
 11396                           ;eeprom.c: 89:       return result;
 11397  0618  0829               	movf	EEPROM_Read_Integer@result+1,w
 11398  0619  00A4               	movwf	?_EEPROM_Read_Integer+1
 11399  061A  0828               	movf	EEPROM_Read_Integer@result,w
 11400  061B  00A3               	movwf	?_EEPROM_Read_Integer
 11401  061C  0008               	return
 11402  061D                     __end_of_EEPROM_Read_Integer:	
 11403  061D                     PL16:	
 11404  061D  0823               	movf	?_EEPROM_Read_Integer,w
 11405  061E  1683               	bsf	3,5	;RP0=1, select bank1
 11406  061F  00B9               	movwf	??_Load_Work^(0+128)
 11407  0620  1283               	bcf	3,5	;RP0=0, select bank0
 11408  0621  0824               	movf	?_EEPROM_Read_Integer+1,w
 11409  0622  1683               	bsf	3,5	;RP0=1, select bank1
 11410  0623  00BA               	movwf	(??_Load_Work^(0+128)+1)
 11411  0624  01BB               	clrf	(??_Load_Work^(0+128)+2)
 11412  0625  01BC               	clrf	(??_Load_Work^(0+128)+3)
 11413  0626  083C               	movf	(??_Load_Work+3)^(0+128),w
 11414  0627  1283               	bcf	3,5	;RP0=0, select bank0
 11415  0628  00AE               	movwf	___xxtofl@val+3
 11416  0629  1683               	bsf	3,5	;RP0=1, select bank1
 11417  062A  083B               	movf	(??_Load_Work+2)^(0+128),w
 11418  062B  1283               	bcf	3,5	;RP0=0, select bank0
 11419  062C  00AD               	movwf	___xxtofl@val+2
 11420  062D  1683               	bsf	3,5	;RP0=1, select bank1
 11421  062E  083A               	movf	(??_Load_Work+1)^(0+128),w
 11422  062F  1283               	bcf	3,5	;RP0=0, select bank0
 11423  0630  00AC               	movwf	___xxtofl@val+1
 11424  0631  1683               	bsf	3,5	;RP0=1, select bank1
 11425  0632  0839               	movf	??_Load_Work^(0+128),w
 11426  0633  1283               	bcf	3,5	;RP0=0, select bank0
 11427  0634  00AB               	movwf	___xxtofl@val
 11428  0635  3400               	retlw	0
 11429  0636                     __end_ofPL16:	
 11430                           
 11431                           	psect	text48
 11432  1C3C                     __ptext48:	
 11433 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 11434 ;; Defined at:
 11435 ;;		line 262 in file "EEPROM_24C1025.c"
 11436 ;; Parameters:    Size  Location     Type
 11437 ;;  chip_add        1    wreg     unsigned char 
 11438 ;;  mem_add         4   15[BANK0 ] unsigned long 
 11439 ;;  data            1   19[BANK0 ] unsigned char 
 11440 ;; Auto vars:     Size  Location     Type
 11441 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11442 ;; Return value:  Size  Location     Type
 11443 ;;                  1    wreg      void 
 11444 ;; Registers used:
 11445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11446 ;; Tracked objects:
 11447 ;;		On entry : 300/300
 11448 ;;		On exit  : 0/0
 11449 ;;		Unchanged: 0/0
 11450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11451 ;;      Params:         0       5       0       0       0
 11452 ;;      Locals:         0       1       0       0       0
 11453 ;;      Temps:          0       0       0       0       0
 11454 ;;      Totals:         0       6       0       0       0
 11455 ;;Total ram usage:        6 bytes
 11456 ;; Hardware stack levels used:    1
 11457 ;; Hardware stack levels required when called:    4
 11458 ;; This function calls:
 11459 ;;		_EEPROM_24C1025_Write_Buffer
 11460 ;; This function is called by:
 11461 ;;		_Decodify_Command
 11462 ;; This function uses a non-reentrant model
 11463 ;;
 11464                           
 11465                           
 11466                           ;psect for function _EEPROM_24C1025_Write_Byte
 11467  1C3C                     _EEPROM_24C1025_Write_Byte:	
 11468                           
 11469                           ;incstack = 0
 11470                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11471                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 11472  1C3C  1283               	bcf	3,5	;RP0=0, select bank0
 11473  1C3D  1303               	bcf	3,6	;RP1=0, select bank0
 11474  1C3E  00B4               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 11475                           
 11476                           ;EEPROM_24C1025.c: 263:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 11477  1C3F  0832               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 11478  1C40  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 11479  1C41  0831               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 11480  1C42  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 11481  1C43  0830               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 11482  1C44  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 11483  1C45  082F               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 11484  1C46  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 11485  1C47  3033               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 11486  1C48  01A6               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 11487  1C49  0AA6               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 11488  1C4A  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 11489  1C4B  01A8               	clrf	EEPROM_24C1025_Write_Buffer@data+1
 11490  1C4C  0834               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 11491  1C4D  120A  158A  2E53   	ljmp	_EEPROM_24C1025_Write_Buffer
 11492  1C50                     __end_of_EEPROM_24C1025_Write_Byte:	
 11493                           
 11494                           	psect	text50
 11495  1C7D                     __ptext50:	
 11496 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 11497 ;; Defined at:
 11498 ;;		line 281 in file "EEPROM_24C1025.c"
 11499 ;; Parameters:    Size  Location     Type
 11500 ;;  chip_add        1    wreg     unsigned char 
 11501 ;;  mem_add         4   17[BANK0 ] unsigned long 
 11502 ;; Auto vars:     Size  Location     Type
 11503 ;;  chip_add        1   21[BANK0 ] unsigned char 
 11504 ;;  data            2   22[BANK0 ] unsigned char [2]
 11505 ;; Return value:  Size  Location     Type
 11506 ;;                  2   17[BANK0 ] unsigned int 
=======
 10031                           ;psect for function _PROCULUS_Buzzer
 10032  1AEB                     _PROCULUS_Buzzer:	
 10033                           
 10034                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
 10035                           
 10036                           ;incstack = 0
 10037                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10038  1AEB  300A               	movlw	10
 10039  1AEC  00A0               	movwf	___lwdiv@divisor
 10040  1AED  3000               	movlw	0
 10041  1AEE  00A1               	movwf	___lwdiv@divisor+1
 10042  1AEF  0857               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
 10043  1AF0  00A3               	movwf	___lwdiv@dividend+1
 10044  1AF1  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
 10045  1AF2  00A2               	movwf	___lwdiv@dividend
 10046  1AF3  160A  158A  25D5  160A  158A  	fcall	___lwdiv
 10047  1AF8  0821               	movf	?___lwdiv+1,w
 10048  1AF9  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
 10049  1AFA  0820               	movf	?___lwdiv,w
 10050  1AFB  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
 10051                           
 10052                           ;proculus.c: 226:      vetor[0]=0x02;
 10053  1AFC  3002               	movlw	2
 10054  1AFD  00D8               	movwf	??_PROCULUS_Buzzer
 10055  1AFE  0858               	movf	??_PROCULUS_Buzzer,w
 10056  1AFF  00D9               	movwf	PROCULUS_Buzzer@vetor
 10057                           
 10058                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
 10059  1B00  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
 10060  1B01  00D8               	movwf	??_PROCULUS_Buzzer
 10061  1B02  0858               	movf	??_PROCULUS_Buzzer,w
 10062  1B03  00DA               	movwf	PROCULUS_Buzzer@vetor+1
 10063                           
 10064                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
 10065  1B04  3002               	movlw	2
 10066  1B05  00D8               	movwf	??_PROCULUS_Buzzer
 10067  1B06  0858               	movf	??_PROCULUS_Buzzer,w
 10068  1B07  00D2               	movwf	PROCULUS_Control_Register_Write@size
 10069  1B08  3059               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
 10070  1B09  160A  158A  2529   	fcall	_PROCULUS_Control_Register_Write
 10071  1B0C  0008               	return
 10072  1B0D                     __end_of_PROCULUS_Buzzer:	
 10073                           
 10074                           	psect	text36
 10075  1DD5                     __ptext36:	
 10076 ;; *************** function ___lwdiv *****************
 10077 ;; Defined at:
 10078 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;  divisor         2    0[BANK0 ] unsigned int 
 10081 ;;  dividend        2    2[BANK0 ] unsigned int 
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;  quotient        2    6[BANK0 ] unsigned int 
 10084 ;;  counter         1    5[BANK0 ] unsigned char 
 10085 ;; Return value:  Size  Location     Type
 10086 ;;                  2    0[BANK0 ] unsigned int 
 10087 ;; Registers used:
 10088 ;;		wreg, status,2, status,0
 10089 ;; Tracked objects:
 10090 ;;		On entry : 300/0
 10091 ;;		On exit  : 300/0
 10092 ;;		Unchanged: 0/0
 10093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10094 ;;      Params:         0       4       0       0       0
 10095 ;;      Locals:         0       3       0       0       0
 10096 ;;      Temps:          0       1       0       0       0
 10097 ;;      Totals:         0       8       0       0       0
 10098 ;;Total ram usage:        8 bytes
 10099 ;; Hardware stack levels used:    1
 10100 ;; Hardware stack levels required when called:    1
 10101 ;; This function calls:
 10102 ;;		Nothing
 10103 ;; This function is called by:
 10104 ;;		_ADC_Media_10bits
 10105 ;;		_PROCULUS_Buzzer
 10106 ;;		_utoa
 10107 ;; This function uses a non-reentrant model
 10108 ;;
 10109                           
 10110                           
 10111                           ;psect for function ___lwdiv
 10112  1DD5                     ___lwdiv:	
 10113                           
 10114                           ;incstack = 0
 10115                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10116  1DD5  01A6               	clrf	___lwdiv@quotient
 10117  1DD6  01A7               	clrf	___lwdiv@quotient+1
 10118  1DD7  0820               	movf	___lwdiv@divisor,w
 10119  1DD8  0421               	iorwf	___lwdiv@divisor+1,w
 10120  1DD9  1903               	btfsc	3,2
 10121  1DDA  2E0C               	goto	l5838
 10122  1DDB  01A5               	clrf	___lwdiv@counter
 10123  1DDC  0AA5               	incf	___lwdiv@counter,f
 10124  1DDD                     l5826:	
 10125  1DDD  1BA1               	btfsc	___lwdiv@divisor+1,7
 10126  1DDE  2DEB               	goto	l5828
 10127  1DDF  3001               	movlw	1
 10128  1DE0                     u5505:	
 10129  1DE0  1003               	clrc
 10130  1DE1  0DA0               	rlf	___lwdiv@divisor,f
 10131  1DE2  0DA1               	rlf	___lwdiv@divisor+1,f
 10132  1DE3  3EFF               	addlw	-1
 10133  1DE4  1D03               	skipz
 10134  1DE5  2DE0               	goto	u5505
 10135  1DE6  3001               	movlw	1
 10136  1DE7  00A4               	movwf	??___lwdiv
 10137  1DE8  0824               	movf	??___lwdiv,w
 10138  1DE9  07A5               	addwf	___lwdiv@counter,f
 10139  1DEA  2DDD               	goto	l5826
 10140  1DEB                     l5828:	
 10141  1DEB  3001               	movlw	1
 10142  1DEC                     u5525:	
 10143  1DEC  1003               	clrc
 10144  1DED  0DA6               	rlf	___lwdiv@quotient,f
 10145  1DEE  0DA7               	rlf	___lwdiv@quotient+1,f
 10146  1DEF  3EFF               	addlw	-1
 10147  1DF0  1D03               	skipz
 10148  1DF1  2DEC               	goto	u5525
 10149  1DF2  0821               	movf	___lwdiv@divisor+1,w
 10150  1DF3  0223               	subwf	___lwdiv@dividend+1,w
 10151  1DF4  1D03               	skipz
 10152  1DF5  2DF8               	goto	u5535
 10153  1DF6  0820               	movf	___lwdiv@divisor,w
 10154  1DF7  0222               	subwf	___lwdiv@dividend,w
 10155  1DF8                     u5535:	
 10156  1DF8  1C03               	skipc
 10157  1DF9  2E01               	goto	l5834
 10158  1DFA  0820               	movf	___lwdiv@divisor,w
 10159  1DFB  02A2               	subwf	___lwdiv@dividend,f
 10160  1DFC  0821               	movf	___lwdiv@divisor+1,w
 10161  1DFD  1C03               	skipc
 10162  1DFE  03A3               	decf	___lwdiv@dividend+1,f
 10163  1DFF  02A3               	subwf	___lwdiv@dividend+1,f
 10164  1E00  1426               	bsf	___lwdiv@quotient,0
 10165  1E01                     l5834:	
 10166  1E01  3001               	movlw	1
 10167  1E02                     u5545:	
 10168  1E02  1003               	clrc
 10169  1E03  0CA1               	rrf	___lwdiv@divisor+1,f
 10170  1E04  0CA0               	rrf	___lwdiv@divisor,f
 10171  1E05  3EFF               	addlw	-1
 10172  1E06  1D03               	skipz
 10173  1E07  2E02               	goto	u5545
 10174  1E08  3001               	movlw	1
 10175  1E09  02A5               	subwf	___lwdiv@counter,f
 10176  1E0A  1D03               	btfss	3,2
 10177  1E0B  2DEB               	goto	l5828
 10178  1E0C                     l5838:	
 10179  1E0C  0827               	movf	___lwdiv@quotient+1,w
 10180  1E0D  00A1               	movwf	?___lwdiv+1
 10181  1E0E  0826               	movf	___lwdiv@quotient,w
 10182  1E0F  00A0               	movwf	?___lwdiv
 10183  1E10  0008               	return
 10184  1E11                     __end_of___lwdiv:	
 10185                           
 10186                           	psect	text37
 10187  1D29                     __ptext37:	
 10188 ;; *************** function _PROCULUS_Control_Register_Write *****************
 10189 ;; Defined at:
 10190 ;;		line 13 in file "proculus.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;  vetor           1    wreg     PTR unsigned char 
 10193 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10194 ;;  size            1   50[BANK0 ] unsigned char 
 10195 ;; Auto vars:     Size  Location     Type
 10196 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
 10197 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10198 ;;  i               1   53[BANK0 ] unsigned char 
 10199 ;; Return value:  Size  Location     Type
 10200 ;;                  1    wreg      void 
 10201 ;; Registers used:
 10202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10203 ;; Tracked objects:
 10204 ;;		On entry : 300/0
 10205 ;;		On exit  : 300/0
 10206 ;;		Unchanged: 0/0
 10207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10208 ;;      Params:         0       1       0       0       0
 10209 ;;      Locals:         0       2       0       0       0
 10210 ;;      Temps:          0       1       0       0       0
 10211 ;;      Totals:         0       4       0       0       0
 10212 ;;Total ram usage:        4 bytes
 10213 ;; Hardware stack levels used:    1
 10214 ;; Hardware stack levels required when called:    3
 10215 ;; This function calls:
 10216 ;;		_PROCULUS_Delay
 10217 ;;		_USART_put_int
 10218 ;;		_USART_putc
 10219 ;; This function is called by:
 10220 ;;		_PROCULUS_Buzzer
 10221 ;;		_PROCULUS_Show_Screen
 10222 ;; This function uses a non-reentrant model
 10223 ;;
 10224                           
 10225                           
 10226                           ;psect for function _PROCULUS_Control_Register_Write
 10227  1D29                     _PROCULUS_Control_Register_Write:	
 10228                           
 10229                           ;incstack = 0
 10230                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
 10231                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
 10232  1D29  00D4               	movwf	PROCULUS_Control_Register_Write@vetor
 10233                           
 10234                           ;proculus.c: 14:      USART_put_int(0x5AA5);
 10235  1D2A  30A5               	movlw	165
 10236  1D2B  00CE               	movwf	USART_put_int@value
 10237  1D2C  305A               	movlw	90
 10238  1D2D  00CF               	movwf	USART_put_int@value+1
 10239  1D2E  160A  158A  219A  160A  158A  	fcall	_USART_put_int
 10240                           
 10241                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
 10242  1D33  1283               	bcf	3,5	;RP0=0, select bank0
 10243  1D34  0852               	movf	PROCULUS_Control_Register_Write@size,w
 10244  1D35  3E01               	addlw	1
 10245  1D36  160A  118A  2004  160A  158A  	fcall	_USART_putc
 10246                           
 10247                           ;proculus.c: 16:      USART_putc(0x80);
 10248  1D3B  3080               	movlw	128
 10249  1D3C  160A  118A  2004  160A  158A  	fcall	_USART_putc
 10250                           
 10251                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
 10252  1D41  1283               	bcf	3,5	;RP0=0, select bank0
 10253  1D42  01D5               	clrf	PROCULUS_Control_Register_Write@i
 10254  1D43                     l6058:	
 10255  1D43  0852               	movf	PROCULUS_Control_Register_Write@size,w
 10256  1D44  0255               	subwf	PROCULUS_Control_Register_Write@i,w
 10257  1D45  1803               	btfsc	3,0
 10258  1D46  2D59               	goto	l6060
 10259                           
 10260                           ;proculus.c: 18:          USART_putc(vetor[i]);
 10261  1D47  0855               	movf	PROCULUS_Control_Register_Write@i,w
 10262  1D48  0754               	addwf	PROCULUS_Control_Register_Write@vetor,w
 10263  1D49  00D3               	movwf	??_PROCULUS_Control_Register_Write
 10264  1D4A  0853               	movf	??_PROCULUS_Control_Register_Write,w
 10265  1D4B  0084               	movwf	4
 10266  1D4C  1383               	bcf	3,7	;select IRP bank0
 10267  1D4D  0800               	movf	0,w
 10268  1D4E  160A  118A  2004  160A  158A  	fcall	_USART_putc
 10269  1D53  3001               	movlw	1
 10270  1D54  1283               	bcf	3,5	;RP0=0, select bank0
 10271  1D55  00D3               	movwf	??_PROCULUS_Control_Register_Write
 10272  1D56  0853               	movf	??_PROCULUS_Control_Register_Write,w
 10273  1D57  07D5               	addwf	PROCULUS_Control_Register_Write@i,f
 10274  1D58  2D43               	goto	l6058
 10275  1D59                     l6060:	
 10276                           
 10277                           ;proculus.c: 19:      PROCULUS_Delay(1);
 10278  1D59  3001               	movlw	1
 10279  1D5A  00A0               	movwf	PROCULUS_Delay@tempo_ms
 10280  1D5B  3000               	movlw	0
 10281  1D5C  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
 10282  1D5D  160A  158A  2210   	fcall	_PROCULUS_Delay
 10283  1D60  0008               	return
 10284  1D61                     __end_of_PROCULUS_Control_Register_Write:	
 10285                           
 10286                           	psect	text38
 10287  199A                     __ptext38:	
 10288 ;; *************** function _USART_put_int *****************
 10289 ;; Defined at:
 10290 ;;		line 138 in file "usart.c"
 10291 ;; Parameters:    Size  Location     Type
 10292 ;;  value           2   46[BANK0 ] int 
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;  dado            1   49[BANK0 ] PTR unsigned char 
 10295 ;;		 -> USART_put_int@value(2), 
 10296 ;; Return value:  Size  Location     Type
 10297 ;;                  1    wreg      void 
 10298 ;; Registers used:
 10299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10300 ;; Tracked objects:
 10301 ;;		On entry : 300/0
 10302 ;;		On exit  : 300/100
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10305 ;;      Params:         0       2       0       0       0
 10306 ;;      Locals:         0       1       0       0       0
 10307 ;;      Temps:          0       1       0       0       0
 10308 ;;      Totals:         0       4       0       0       0
 10309 ;;Total ram usage:        4 bytes
 10310 ;; Hardware stack levels used:    1
 10311 ;; Hardware stack levels required when called:    2
 10312 ;; This function calls:
 10313 ;;		_USART_putc
 10314 ;; This function is called by:
 10315 ;;		_Decodify_Command
 10316 ;;		_PROCULUS_Control_Register_Write
 10317 ;;		_PROCULUS_VP_Write
 10318 ;; This function uses a non-reentrant model
 10319 ;;
 10320                           
 10321                           
 10322                           ;psect for function _USART_put_int
 10323  199A                     _USART_put_int:	
 10324                           
 10325                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
 10326                           
 10327                           ;incstack = 0
 10328                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10329  199A  304E               	movlw	(low (USART_put_int@value| 0))& (0+255)
 10330  199B  00D0               	movwf	??_USART_put_int
 10331  199C  0850               	movf	??_USART_put_int,w
 10332  199D  00D1               	movwf	USART_put_int@dado
 10333                           
 10334                           ;usart.c: 141:      USART_putc(*(dado+1));
 10335  199E  0A51               	incf	USART_put_int@dado,w
 10336  199F  0084               	movwf	4
 10337  19A0  1383               	bcf	3,7	;select IRP bank0
 10338  19A1  0800               	movf	0,w
 10339  19A2  160A  118A  2004  160A  158A  	fcall	_USART_putc
 10340                           
 10341                           ;usart.c: 142:      USART_putc(*dado);
 10342  19A7  1283               	bcf	3,5	;RP0=0, select bank0
 10343  19A8  0851               	movf	USART_put_int@dado,w
 10344  19A9  0084               	movwf	4
 10345  19AA  1383               	bcf	3,7	;select IRP bank0
 10346  19AB  0800               	movf	0,w
 10347  19AC  160A  118A  2004   	fcall	_USART_putc
 10348  19AF  0008               	return
 10349  19B0                     __end_of_USART_put_int:	
 10350                           
 10351                           	psect	text39
 10352  1004                     __ptext39:	
 10353 ;; *************** function _USART_putc *****************
 10354 ;; Defined at:
 10355 ;;		line 89 in file "usart.c"
 10356 ;; Parameters:    Size  Location     Type
 10357 ;;  value           1    wreg     unsigned char 
 10358 ;; Auto vars:     Size  Location     Type
 10359 ;;  value           1    0[BANK0 ] unsigned char 
 10360 ;; Return value:  Size  Location     Type
 10361 ;;                  1    wreg      void 
 10362 ;; Registers used:
 10363 ;;		wreg
 10364 ;; Tracked objects:
 10365 ;;		On entry : 0/100
 10366 ;;		On exit  : 300/100
 10367 ;;		Unchanged: 0/0
 10368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10369 ;;      Params:         0       0       0       0       0
 10370 ;;      Locals:         0       1       0       0       0
 10371 ;;      Temps:          0       0       0       0       0
 10372 ;;      Totals:         0       1       0       0       0
 10373 ;;Total ram usage:        1 bytes
 10374 ;; Hardware stack levels used:    1
 10375 ;; Hardware stack levels required when called:    1
 10376 ;; This function calls:
 10377 ;;		Nothing
 10378 ;; This function is called by:
 10379 ;;		_Decodify_Command
 10380 ;;		_Send_To_MB
 10381 ;;		_PROCULUS_Control_Register_Write
 10382 ;;		_PROCULUS_VP_Write
 10383 ;;		_USART_put_buffer
 10384 ;;		_USART_put_int
 10385 ;;		_USART_put_string
 10386 ;; This function uses a non-reentrant model
 10387 ;;
 10388                           
 10389                           
 10390                           ;psect for function _USART_putc
 10391  1004                     _USART_putc:	
 10392                           
 10393                           ;incstack = 0
 10394                           ; Regs used in _USART_putc: [wreg]
 10395                           ;USART_putc@value stored from wreg
 10396  1004  1283               	bcf	3,5	;RP0=0, select bank0
 10397  1005  1303               	bcf	3,6	;RP1=0, select bank0
 10398  1006  00A0               	movwf	USART_putc@value
 10399                           
 10400                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 10401  1007  3014               	movlw	20
 10402  1008  1683               	bsf	3,5	;RP0=1, select bank1
 10403  1009  00DF               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 10404  100A  3000               	movlw	0
 10405  100B  00E0               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 10406  100C                     l872:	
 10407                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 10408                           
 10409  100C  1C98               	btfss	24,1	;volatile
 10410  100D  280C               	goto	l872
 10411                           
 10412                           ;usart.c: 93:     TXREG=value;
 10413  100E  1283               	bcf	3,5	;RP0=0, select bank0
 10414  100F  0820               	movf	USART_putc@value,w
 10415  1010  0099               	movwf	25	;volatile
 10416                           
 10417                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 10418  1011  1683               	bsf	3,5	;RP0=1, select bank1
 10419  1012  1698               	bsf	24,5	;volatile
 10420  1013  0008               	return
 10421  1014                     __end_of_USART_putc:	
 10422                           
 10423                           	psect	text40
 10424  1A10                     __ptext40:	
 10425 ;; *************** function _PROCULUS_Delay *****************
 10426 ;; Defined at:
 10427 ;;		line 267 in file "proculus.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;  i               2    4[BANK0 ] unsigned int 
 10432 ;; Return value:  Size  Location     Type
 10433 ;;                  1    wreg      void 
 10434 ;; Registers used:
 10435 ;;		wreg, status,2
 10436 ;; Tracked objects:
 10437 ;;		On entry : 300/800
 10438 ;;		On exit  : 300/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10441 ;;      Params:         0       2       0       0       0
 10442 ;;      Locals:         0       2       0       0       0
 10443 ;;      Temps:          0       2       0       0       0
 10444 ;;      Totals:         0       6       0       0       0
 10445 ;;Total ram usage:        6 bytes
 10446 ;; Hardware stack levels used:    1
 10447 ;; Hardware stack levels required when called:    1
 10448 ;; This function calls:
 10449 ;;		Nothing
 10450 ;; This function is called by:
 10451 ;;		_PROCULUS_Control_Register_Write
 10452 ;;		_PROCULUS_VP_Write
 10453 ;; This function uses a non-reentrant model
 10454 ;;
 10455                           
 10456                           
 10457                           ;psect for function _PROCULUS_Delay
 10458  1A10                     _PROCULUS_Delay:	
 10459                           
 10460                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
 10461                           
 10462                           ;incstack = 0
 10463                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
 10464  1A10  01A4               	clrf	PROCULUS_Delay@i
 10465  1A11  01A5               	clrf	PROCULUS_Delay@i+1
 10466  1A12                     l792:	
 10467  1A12  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
 10468  1A13  0225               	subwf	PROCULUS_Delay@i+1,w
 10469  1A14  1D03               	skipz
 10470  1A15  2A18               	goto	u5485
 10471  1A16  0820               	movf	PROCULUS_Delay@tempo_ms,w
 10472  1A17  0224               	subwf	PROCULUS_Delay@i,w
 10473  1A18                     u5485:	
 10474  1A18  1803               	btfsc	3,0
 10475  1A19  0008               	return
 10476                           
 10477                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
 10478  1A1A  3003               	movlw	3
 10479  1A1B  1283               	bcf	3,5	;RP0=0, select bank0
 10480  1A1C  1303               	bcf	3,6	;RP1=0, select bank0
 10481  1A1D  00A3               	movwf	??_PROCULUS_Delay+1
 10482  1A1E  3097               	movlw	151
 10483  1A1F  00A2               	movwf	??_PROCULUS_Delay
 10484  1A20                     u7967:	
 10485  1A20  0BA2               	decfsz	??_PROCULUS_Delay,f
 10486  1A21  2A20               	goto	u7967
 10487  1A22  0BA3               	decfsz	??_PROCULUS_Delay+1,f
 10488  1A23  2A20               	goto	u7967
 10489                           
 10490                           ;proculus.c: 270:     }
 10491  1A24  3001               	movlw	1
 10492  1A25  1283               	bcf	3,5	;RP0=0, select bank0
 10493  1A26  1303               	bcf	3,6	;RP1=0, select bank0
 10494  1A27  07A4               	addwf	PROCULUS_Delay@i,f
 10495  1A28  1803               	skipnc
 10496  1A29  0AA5               	incf	PROCULUS_Delay@i+1,f
 10497  1A2A  3000               	movlw	0
 10498  1A2B  07A5               	addwf	PROCULUS_Delay@i+1,f
 10499  1A2C  2A12               	goto	l792
 10500  1A2D                     __end_of_PROCULUS_Delay:	
 10501                           
 10502                           	psect	text41
 10503  1BA6                     __ptext41:	
 10504 ;; *************** function _EEPROM_Write_String *****************
 10505 ;; Defined at:
 10506 ;;		line 97 in file "eeprom.c"
 10507 ;; Parameters:    Size  Location     Type
 10508 ;;  addr            1    wreg     unsigned char 
 10509 ;;  dado            1    5[BANK0 ] PTR unsigned char 
 10510 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10511 ;; Auto vars:     Size  Location     Type
 10512 ;;  addr            1    7[BANK0 ] unsigned char 
 10513 ;; Return value:  Size  Location     Type
 10514 ;;                  1    wreg      void 
 10515 ;; Registers used:
 10516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10517 ;; Tracked objects:
 10518 ;;		On entry : 300/300
 10519 ;;		On exit  : 0/0
 10520 ;;		Unchanged: 0/0
 10521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10522 ;;      Params:         0       1       0       0       0
 10523 ;;      Locals:         0       1       0       0       0
 10524 ;;      Temps:          0       1       0       0       0
 10525 ;;      Totals:         0       3       0       0       0
 10526 ;;Total ram usage:        3 bytes
 10527 ;; Hardware stack levels used:    1
 10528 ;; Hardware stack levels required when called:    2
 10529 ;; This function calls:
 10530 ;;		_EEPROM_Write_Byte
 10531 ;; This function is called by:
 10532 ;;		_Decodify_Command
 10533 ;; This function uses a non-reentrant model
 10534 ;;
 10535                           
 10536                           
 10537                           ;psect for function _EEPROM_Write_String
 10538  1BA6                     _EEPROM_Write_String:	
 10539                           
 10540                           ;incstack = 0
 10541                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10542                           ;EEPROM_Write_String@addr stored from wreg
 10543  1BA6  1283               	bcf	3,5	;RP0=0, select bank0
 10544  1BA7  1303               	bcf	3,6	;RP1=0, select bank0
 10545  1BA8  00A7               	movwf	EEPROM_Write_String@addr
 10546  1BA9                     l6796:	
 10547                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
 10548                           
 10549                           
 10550                           ;eeprom.c: 99:     while(*dado)
 10551  1BA9  0825               	movf	EEPROM_Write_String@dado,w
 10552  1BAA  0084               	movwf	4
 10553  1BAB  1783               	bsf	3,7	;select IRP bank2
 10554  1BAC  0800               	movf	0,w
 10555  1BAD  1903               	btfsc	3,2
 10556  1BAE  2BC6               	goto	l6798
 10557                           
 10558                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
 10559  1BAF  0825               	movf	EEPROM_Write_String@dado,w
 10560  1BB0  0084               	movwf	4
 10561  1BB1  0800               	movf	0,w
 10562  1BB2  00A6               	movwf	??_EEPROM_Write_String
 10563  1BB3  0826               	movf	??_EEPROM_Write_String,w
 10564  1BB4  00A0               	movwf	EEPROM_Write_Byte@dado
 10565  1BB5  0827               	movf	EEPROM_Write_String@addr,w
 10566  1BB6  160A  158A  2599  160A  158A  	fcall	_EEPROM_Write_Byte
 10567                           
 10568                           ;eeprom.c: 102:      addr++;
 10569  1BBB  3001               	movlw	1
 10570  1BBC  1283               	bcf	3,5	;RP0=0, select bank0
 10571  1BBD  1303               	bcf	3,6	;RP1=0, select bank0
 10572  1BBE  00A6               	movwf	??_EEPROM_Write_String
 10573  1BBF  0826               	movf	??_EEPROM_Write_String,w
 10574  1BC0  07A7               	addwf	EEPROM_Write_String@addr,f
 10575                           
 10576                           ;eeprom.c: 103:      dado++;
 10577  1BC1  3001               	movlw	1
 10578  1BC2  00A6               	movwf	??_EEPROM_Write_String
 10579  1BC3  0826               	movf	??_EEPROM_Write_String,w
 10580  1BC4  07A5               	addwf	EEPROM_Write_String@dado,f
 10581  1BC5  2BA9               	goto	l6796
 10582  1BC6                     l6798:	
 10583                           
 10584                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
 10585  1BC6  0825               	movf	EEPROM_Write_String@dado,w
 10586  1BC7  0084               	movwf	4
 10587  1BC8  0800               	movf	0,w
 10588  1BC9  00A6               	movwf	??_EEPROM_Write_String
 10589  1BCA  0826               	movf	??_EEPROM_Write_String,w
 10590  1BCB  00A0               	movwf	EEPROM_Write_Byte@dado
 10591  1BCC  0827               	movf	EEPROM_Write_String@addr,w
 10592  1BCD  160A  158A  2599   	fcall	_EEPROM_Write_Byte
 10593  1BD0  0008               	return
 10594  1BD1                     __end_of_EEPROM_Write_String:	
 10595                           
 10596                           	psect	text42
 10597  1C5B                     __ptext42:	
 10598 ;; *************** function _EEPROM_Write_Integer *****************
 10599 ;; Defined at:
 10600 ;;		line 68 in file "eeprom.c"
 10601 ;; Parameters:    Size  Location     Type
 10602 ;;  addr            1    wreg     unsigned char 
 10603 ;;  dado            2    5[BANK0 ] unsigned int 
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;  addr            1   11[BANK0 ] unsigned char 
 10606 ;;  i               1   12[BANK0 ] unsigned char 
 10607 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
 10608 ;;		 -> EEPROM_Write_Integer@dado(2), 
 10609 ;;  addr_memo       1    0        unsigned char 
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  1    wreg      void 
 10612 ;; Registers used:
 10613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10614 ;; Tracked objects:
 10615 ;;		On entry : 200/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10619 ;;      Params:         0       2       0       0       0
 10620 ;;      Locals:         0       4       0       0       0
 10621 ;;      Temps:          0       2       0       0       0
 10622 ;;      Totals:         0       8       0       0       0
 10623 ;;Total ram usage:        8 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; Hardware stack levels required when called:    2
 10626 ;; This function calls:
 10627 ;;		_EEPROM_Write_Byte
 10628 ;; This function is called by:
 10629 ;;		_main
 10630 ;;		_Decodify_Command
 10631 ;; This function uses a non-reentrant model
 10632 ;;
 10633                           
 10634                           
 10635                           ;psect for function _EEPROM_Write_Integer
 10636  1C5B                     _EEPROM_Write_Integer:	
 10637                           
 10638                           ;incstack = 0
 10639                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10640                           ;EEPROM_Write_Integer@addr stored from wreg
 10641  1C5B  1283               	bcf	3,5	;RP0=0, select bank0
 10642  1C5C  00AB               	movwf	EEPROM_Write_Integer@addr
 10643                           
 10644                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
 10645  1C5D  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
 10646  1C5E  00A7               	movwf	??_EEPROM_Write_Integer
 10647  1C5F  0827               	movf	??_EEPROM_Write_Integer,w
 10648  1C60  00AA               	movwf	EEPROM_Write_Integer@ptr
 10649                           
 10650                           ;eeprom.c: 75:       for (i=0;i<2;i++)
 10651  1C61  01AC               	clrf	EEPROM_Write_Integer@i
 10652  1C62                     l6752:	
 10653                           
 10654                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
 10655  1C62  082A               	movf	EEPROM_Write_Integer@ptr,w
 10656  1C63  0084               	movwf	4
 10657  1C64  1383               	bcf	3,7	;select IRP bank0
 10658  1C65  0800               	movf	0,w
 10659  1C66  00A7               	movwf	??_EEPROM_Write_Integer
 10660  1C67  0827               	movf	??_EEPROM_Write_Integer,w
 10661  1C68  00A0               	movwf	EEPROM_Write_Byte@dado
 10662  1C69  082B               	movf	EEPROM_Write_Integer@addr,w
 10663  1C6A  160A  158A  2599  160A  158A  	fcall	_EEPROM_Write_Byte
 10664  1C6F  3001               	movlw	1
 10665  1C70  1283               	bcf	3,5	;RP0=0, select bank0
 10666  1C71  1303               	bcf	3,6	;RP1=0, select bank0
 10667  1C72  00A7               	movwf	??_EEPROM_Write_Integer
 10668  1C73  0827               	movf	??_EEPROM_Write_Integer,w
 10669  1C74  07AA               	addwf	EEPROM_Write_Integer@ptr,f
 10670  1C75  3001               	movlw	1
 10671  1C76  00A7               	movwf	??_EEPROM_Write_Integer
 10672  1C77  0827               	movf	??_EEPROM_Write_Integer,w
 10673  1C78  07AB               	addwf	EEPROM_Write_Integer@addr,f
 10674  1C79  3001               	movlw	1
 10675  1C7A  00A7               	movwf	??_EEPROM_Write_Integer
 10676  1C7B  0827               	movf	??_EEPROM_Write_Integer,w
 10677  1C7C  07AC               	addwf	EEPROM_Write_Integer@i,f
 10678  1C7D  3002               	movlw	2
 10679  1C7E  022C               	subwf	EEPROM_Write_Integer@i,w
 10680  1C7F  1C03               	skipc
 10681  1C80  2C62               	goto	l6752
 10682                           
 10683                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
 10684  1C81  304E               	movlw	78
 10685  1C82  1283               	bcf	3,5	;RP0=0, select bank0
 10686  1C83  1303               	bcf	3,6	;RP1=0, select bank0
 10687  1C84  00A8               	movwf	??_EEPROM_Write_Integer+1
 10688  1C85  30EA               	movlw	234
 10689  1C86  00A7               	movwf	??_EEPROM_Write_Integer
 10690  1C87                     u7977:	
 10691  1C87  0BA7               	decfsz	??_EEPROM_Write_Integer,f
 10692  1C88  2C87               	goto	u7977
 10693  1C89  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
 10694  1C8A  2C87               	goto	u7977
 10695  1C8B  0000               	nop
 10696  1C8C  0008               	return
 10697  1C8D                     __end_of_EEPROM_Write_Integer:	
 10698                           
 10699                           	psect	text43
 10700  1D99                     __ptext43:	
 10701 ;; *************** function _EEPROM_Write_Byte *****************
 10702 ;; Defined at:
 10703 ;;		line 21 in file "eeprom.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;  addr            1    wreg     unsigned char 
 10706 ;;  dado            1    0[BANK0 ] unsigned char 
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;  addr            1    3[BANK0 ] unsigned char 
 10709 ;;  last_GIE        1    4[BANK0 ] unsigned char 
 10710 ;; Return value:  Size  Location     Type
 10711 ;;                  1    wreg      void 
 10712 ;; Registers used:
 10713 ;;		wreg, status,2, status,0
 10714 ;; Tracked objects:
 10715 ;;		On entry : 0/300
 10716 ;;		On exit  : 0/0
 10717 ;;		Unchanged: 0/0
 10718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10719 ;;      Params:         0       1       0       0       0
 10720 ;;      Locals:         0       2       0       0       0
 10721 ;;      Temps:          0       2       0       0       0
 10722 ;;      Totals:         0       5       0       0       0
 10723 ;;Total ram usage:        5 bytes
 10724 ;; Hardware stack levels used:    1
 10725 ;; Hardware stack levels required when called:    1
 10726 ;; This function calls:
 10727 ;;		Nothing
 10728 ;; This function is called by:
 10729 ;;		_Decodify_Command
 10730 ;;		_EEPROM_Write_Integer
 10731 ;;		_EEPROM_Write_String
 10732 ;; This function uses a non-reentrant model
 10733 ;;
 10734                           
 10735                           
 10736                           ;psect for function _EEPROM_Write_Byte
 10737  1D99                     _EEPROM_Write_Byte:	
 10738                           
 10739                           ;incstack = 0
 10740                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
 10741                           ;EEPROM_Write_Byte@addr stored from wreg
 10742  1D99  1283               	bcf	3,5	;RP0=0, select bank0
 10743  1D9A  1303               	bcf	3,6	;RP1=0, select bank0
 10744  1D9B  00A3               	movwf	EEPROM_Write_Byte@addr
 10745                           
 10746                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
 10747  1D9C  3014               	movlw	20
 10748  1D9D  00FA               	movwf	_Delay_Led_Memory	;volatile
 10749  1D9E  3000               	movlw	0
 10750  1D9F  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 10751  1DA0                     l511:	
 10752                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
 10753                           
 10754  1DA0  1683               	bsf	3,5	;RP0=1, select bank3
 10755  1DA1  1703               	bsf	3,6	;RP1=1, select bank3
 10756  1DA2  188C               	btfsc	12,1	;volsfr
 10757  1DA3  2DA0               	goto	l511
 10758                           
 10759                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
 10760  1DA4  1F8B               	btfss	11,7	;volatile
 10761  1DA5  2DAB               	goto	l5990
 10762                           
 10763                           ;eeprom.c: 28:           last_GIE=1;
 10764  1DA6  1283               	bcf	3,5	;RP0=0, select bank0
 10765  1DA7  1303               	bcf	3,6	;RP1=0, select bank0
 10766  1DA8  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10767  1DA9  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
 10768  1DAA  2DAE               	goto	l5992
 10769  1DAB                     l5990:	
 10770                           
 10771                           ;eeprom.c: 30:           last_GIE=0;
 10772  1DAB  1283               	bcf	3,5	;RP0=0, select bank0
 10773  1DAC  1303               	bcf	3,6	;RP1=0, select bank0
 10774  1DAD  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10775  1DAE                     l5992:	
 10776                           
 10777                           ;eeprom.c: 32:        EEADR=addr;
 10778  1DAE  0823               	movf	EEPROM_Write_Byte@addr,w
 10779  1DAF  1703               	bsf	3,6	;RP1=1, select bank2
 10780  1DB0  008D               	movwf	13	;volatile
 10781                           
 10782                           ;eeprom.c: 33:        EEDATA=dado;
 10783  1DB1  1303               	bcf	3,6	;RP1=0, select bank0
 10784  1DB2  0820               	movf	EEPROM_Write_Byte@dado,w
 10785  1DB3  1703               	bsf	3,6	;RP1=1, select bank2
 10786  1DB4  008C               	movwf	12	;volatile
 10787                           
 10788                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
 10789  1DB5  1683               	bsf	3,5	;RP0=1, select bank3
 10790  1DB6  138C               	bcf	12,7	;volsfr
 10791                           
 10792                           ;eeprom.c: 35:        EECON1bits.WREN=1;
 10793  1DB7  150C               	bsf	12,2	;volsfr
 10794                           
 10795                           ;eeprom.c: 36:        INTCONbits.GIE=0;
 10796  1DB8  138B               	bcf	11,7	;volatile
 10797                           
 10798                           ;eeprom.c: 37:        EECON2=0x55;
 10799  1DB9  3055               	movlw	85
 10800  1DBA  008D               	movwf	13	;volsfr
 10801                           
 10802                           ;eeprom.c: 38:        EECON2=0xAA;
 10803  1DBB  30AA               	movlw	170
 10804  1DBC  008D               	movwf	13	;volsfr
 10805                           
 10806                           ;eeprom.c: 39:        EECON1bits.WR=1;
 10807  1DBD  148C               	bsf	12,1	;volsfr
 10808                           
 10809                           ;eeprom.c: 41:        if(last_GIE==1)
 10810  1DBE  1283               	bcf	3,5	;RP0=0, select bank0
 10811  1DBF  1303               	bcf	3,6	;RP1=0, select bank0
 10812  1DC0  0324               	decf	EEPROM_Write_Byte@last_GIE,w
 10813  1DC1  1D03               	btfss	3,2
 10814  1DC2  2DC5               	goto	l516
 10815                           
 10816                           ;eeprom.c: 42:           INTCONbits.GIE=1;
 10817  1DC3  178B               	bsf	11,7	;volatile
 10818  1DC4  2DC6               	goto	l517
 10819  1DC5                     l516:	
 10820                           ;eeprom.c: 43:        else
 10821                           
 10822                           
 10823                           ;eeprom.c: 44:           INTCONbits.GIE=0;
 10824  1DC5  138B               	bcf	11,7	;volatile
 10825  1DC6                     l517:	
 10826                           
 10827                           ;eeprom.c: 46:        EECON1bits.WREN=0;
 10828  1DC6  1683               	bsf	3,5	;RP0=1, select bank3
 10829  1DC7  1703               	bsf	3,6	;RP1=1, select bank3
 10830  1DC8  110C               	bcf	12,2	;volsfr
 10831                           
 10832                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
 10833  1DC9  304E               	movlw	78
 10834  1DCA  1283               	bcf	3,5	;RP0=0, select bank0
 10835  1DCB  1303               	bcf	3,6	;RP1=0, select bank0
 10836  1DCC  00A2               	movwf	??_EEPROM_Write_Byte+1
 10837  1DCD  30EA               	movlw	234
 10838  1DCE  00A1               	movwf	??_EEPROM_Write_Byte
 10839  1DCF                     u7987:	
 10840  1DCF  0BA1               	decfsz	??_EEPROM_Write_Byte,f
 10841  1DD0  2DCF               	goto	u7987
 10842  1DD1  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
 10843  1DD2  2DCF               	goto	u7987
 10844  1DD3  0000               	nop
 10845  1DD4  0008               	return
 10846  1DD5                     __end_of_EEPROM_Write_Byte:	
 10847                           
 10848                           	psect	text44
 10849  1A89                     __ptext44:	
 10850 ;; *************** function _EEPROM_Read_String *****************
 10851 ;; Defined at:
 10852 ;;		line 109 in file "eeprom.c"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;  addr            1    wreg     unsigned char 
 10855 ;;  dado            1    3[BANK0 ] PTR unsigned char 
 10856 ;;		 -> texto(16), 
 10857 ;; Auto vars:     Size  Location     Type
 10858 ;;  addr            1    5[BANK0 ] unsigned char 
 10859 ;;  c               1    6[BANK0 ] unsigned char 
 10860 ;; Return value:  Size  Location     Type
 10861 ;;                  1    wreg      void 
 10862 ;; Registers used:
 10863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10864 ;; Tracked objects:
 10865 ;;		On entry : 300/300
 10866 ;;		On exit  : B00/800
 10867 ;;		Unchanged: 0/0
 10868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10869 ;;      Params:         0       1       0       0       0
 10870 ;;      Locals:         0       2       0       0       0
 10871 ;;      Temps:          0       1       0       0       0
 10872 ;;      Totals:         0       4       0       0       0
 10873 ;;Total ram usage:        4 bytes
 10874 ;; Hardware stack levels used:    1
 10875 ;; Hardware stack levels required when called:    2
 10876 ;; This function calls:
 10877 ;;		_EEPROM_Read_Byte
 10878 ;; This function is called by:
 10879 ;;		_Decodify_Command
 10880 ;; This function uses a non-reentrant model
 10881 ;;
 10882                           
 10883                           
 10884                           ;psect for function _EEPROM_Read_String
 10885  1A89                     _EEPROM_Read_String:	
 10886                           
 10887                           ;incstack = 0
 10888                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10889                           ;EEPROM_Read_String@addr stored from wreg
 10890  1A89  1283               	bcf	3,5	;RP0=0, select bank0
 10891  1A8A  1303               	bcf	3,6	;RP1=0, select bank0
 10892  1A8B  00A5               	movwf	EEPROM_Read_String@addr
 10893  1A8C                     l543:	
 10894                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 10895                           
 10896                           
 10897                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10898  1A8C  0825               	movf	EEPROM_Read_String@addr,w
 10899  1A8D  160A  158A  22C9  160A  158A  	fcall	_EEPROM_Read_Byte
 10900  1A92  1303               	bcf	3,6	;RP1=0, select bank0
 10901  1A93  00A4               	movwf	??_EEPROM_Read_String
 10902  1A94  0824               	movf	??_EEPROM_Read_String,w
 10903  1A95  00A6               	movwf	EEPROM_Read_String@c
 10904  1A96  3001               	movlw	1
 10905  1A97  00A4               	movwf	??_EEPROM_Read_String
 10906  1A98  0824               	movf	??_EEPROM_Read_String,w
 10907  1A99  07A5               	addwf	EEPROM_Read_String@addr,f
 10908                           
 10909                           ;eeprom.c: 114:         *(dado++)=c;
 10910  1A9A  0826               	movf	EEPROM_Read_String@c,w
 10911  1A9B  00A4               	movwf	??_EEPROM_Read_String
 10912  1A9C  0823               	movf	EEPROM_Read_String@dado,w
 10913  1A9D  0084               	movwf	4
 10914  1A9E  0824               	movf	??_EEPROM_Read_String,w
 10915  1A9F  1783               	bsf	3,7	;select IRP bank2
 10916  1AA0  0080               	movwf	0
 10917  1AA1  3001               	movlw	1
 10918  1AA2  00A4               	movwf	??_EEPROM_Read_String
 10919  1AA3  0824               	movf	??_EEPROM_Read_String,w
 10920  1AA4  07A3               	addwf	EEPROM_Read_String@dado,f
 10921                           
 10922                           ;eeprom.c: 116:       }while(c);
 10923  1AA5  0826               	movf	EEPROM_Read_String@c,w
 10924  1AA6  1903               	btfsc	3,2
 10925  1AA7  0008               	return
 10926  1AA8  2A8C               	goto	l543
 10927  1AA9                     __end_of_EEPROM_Read_String:	
 10928                           
 10929                           	psect	text45
 10930  1B7C                     __ptext45:	
 10931 ;; *************** function _EEPROM_Read_Integer *****************
 10932 ;; Defined at:
 10933 ;;		line 81 in file "eeprom.c"
 10934 ;; Parameters:    Size  Location     Type
 10935 ;;  addr            1    wreg     unsigned char 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;  addr            1    6[BANK0 ] unsigned char 
 10938 ;;  result          2    8[BANK0 ] unsigned int 
 10939 ;;  i               1   10[BANK0 ] unsigned char 
 10940 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 10941 ;;		 -> EEPROM_Read_Integer@result(2), 
 10942 ;; Return value:  Size  Location     Type
 10943 ;;                  2    3[BANK0 ] unsigned int 
 10944 ;; Registers used:
 10945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10946 ;; Tracked objects:
 10947 ;;		On entry : 0/0
 10948 ;;		On exit  : B00/0
 10949 ;;		Unchanged: 0/0
 10950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10951 ;;      Params:         0       2       0       0       0
 10952 ;;      Locals:         0       5       0       0       0
 10953 ;;      Temps:          0       1       0       0       0
 10954 ;;      Totals:         0       8       0       0       0
 10955 ;;Total ram usage:        8 bytes
 10956 ;; Hardware stack levels used:    1
 10957 ;; Hardware stack levels required when called:    2
 10958 ;; This function calls:
 10959 ;;		_EEPROM_Read_Byte
 10960 ;; This function is called by:
 10961 ;;		_main
 10962 ;;		_Decodify_Command
 10963 ;; This function uses a non-reentrant model
 10964 ;;
 10965                           
 10966                           
 10967                           ;psect for function _EEPROM_Read_Integer
 10968  1B7C                     _EEPROM_Read_Integer:	
 10969                           
 10970                           ;incstack = 0
 10971                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10972                           ;EEPROM_Read_Integer@addr stored from wreg
 10973  1B7C  1283               	bcf	3,5	;RP0=0, select bank0
 10974  1B7D  1303               	bcf	3,6	;RP1=0, select bank0
 10975  1B7E  00A6               	movwf	EEPROM_Read_Integer@addr
 10976                           
 10977                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 10978  1B7F  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 10979  1B80  00A5               	movwf	??_EEPROM_Read_Integer
 10980  1B81  0825               	movf	??_EEPROM_Read_Integer,w
 10981  1B82  00A7               	movwf	EEPROM_Read_Integer@ptr
 10982                           
 10983                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 10984  1B83  01AA               	clrf	EEPROM_Read_Integer@i
 10985  1B84                     l6728:	
 10986                           
 10987                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 10988  1B84  0826               	movf	EEPROM_Read_Integer@addr,w
 10989  1B85  160A  158A  22C9  160A  158A  	fcall	_EEPROM_Read_Byte
 10990  1B8A  1303               	bcf	3,6	;RP1=0, select bank0
 10991  1B8B  00A5               	movwf	??_EEPROM_Read_Integer
 10992  1B8C  0827               	movf	EEPROM_Read_Integer@ptr,w
 10993  1B8D  0084               	movwf	4
 10994  1B8E  0825               	movf	??_EEPROM_Read_Integer,w
 10995  1B8F  1383               	bcf	3,7	;select IRP bank0
 10996  1B90  0080               	movwf	0
 10997  1B91  3001               	movlw	1
 10998  1B92  00A5               	movwf	??_EEPROM_Read_Integer
 10999  1B93  0825               	movf	??_EEPROM_Read_Integer,w
 11000  1B94  07A6               	addwf	EEPROM_Read_Integer@addr,f
 11001  1B95  3001               	movlw	1
 11002  1B96  00A5               	movwf	??_EEPROM_Read_Integer
 11003  1B97  0825               	movf	??_EEPROM_Read_Integer,w
 11004  1B98  07A7               	addwf	EEPROM_Read_Integer@ptr,f
 11005  1B99  3001               	movlw	1
 11006  1B9A  00A5               	movwf	??_EEPROM_Read_Integer
 11007  1B9B  0825               	movf	??_EEPROM_Read_Integer,w
 11008  1B9C  07AA               	addwf	EEPROM_Read_Integer@i,f
 11009  1B9D  3002               	movlw	2
 11010  1B9E  022A               	subwf	EEPROM_Read_Integer@i,w
 11011  1B9F  1C03               	skipc
 11012  1BA0  2B84               	goto	l6728
 11013                           
 11014                           ;eeprom.c: 89:       return result;
 11015  1BA1  0829               	movf	EEPROM_Read_Integer@result+1,w
 11016  1BA2  00A4               	movwf	?_EEPROM_Read_Integer+1
 11017  1BA3  0828               	movf	EEPROM_Read_Integer@result,w
 11018  1BA4  00A3               	movwf	?_EEPROM_Read_Integer
 11019  1BA5  0008               	return
 11020  1BA6                     __end_of_EEPROM_Read_Integer:	
 11021                           
 11022                           	psect	text46
 11023  1AC9                     __ptext46:	
 11024 ;; *************** function _EEPROM_Read_Byte *****************
 11025 ;; Defined at:
 11026 ;;		line 52 in file "eeprom.c"
 11027 ;; Parameters:    Size  Location     Type
 11028 ;;  addr            1    wreg     unsigned char 
 11029 ;; Auto vars:     Size  Location     Type
 11030 ;;  addr            1    2[BANK0 ] unsigned char 
 11031 ;; Return value:  Size  Location     Type
 11032 ;;                  1    wreg      unsigned char 
 11033 ;; Registers used:
 11034 ;;		wreg
 11035 ;; Tracked objects:
 11036 ;;		On entry : 0/300
 11037 ;;		On exit  : 300/200
 11038 ;;		Unchanged: 0/0
 11039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11040 ;;      Params:         0       0       0       0       0
 11041 ;;      Locals:         0       1       0       0       0
 11042 ;;      Temps:          0       2       0       0       0
 11043 ;;      Totals:         0       3       0       0       0
 11044 ;;Total ram usage:        3 bytes
 11045 ;; Hardware stack levels used:    1
 11046 ;; Hardware stack levels required when called:    1
 11047 ;; This function calls:
 11048 ;;		Nothing
 11049 ;; This function is called by:
 11050 ;;		_Decodify_Command
 11051 ;;		_EEPROM_Read_Integer
 11052 ;;		_EEPROM_Read_String
 11053 ;; This function uses a non-reentrant model
 11054 ;;
 11055                           
 11056                           
 11057                           ;psect for function _EEPROM_Read_Byte
 11058  1AC9                     _EEPROM_Read_Byte:	
 11059                           
 11060                           ;incstack = 0
 11061                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 11062                           ;EEPROM_Read_Byte@addr stored from wreg
 11063  1AC9  1283               	bcf	3,5	;RP0=0, select bank0
 11064  1ACA  1303               	bcf	3,6	;RP1=0, select bank0
 11065  1ACB  00A2               	movwf	EEPROM_Read_Byte@addr
 11066                           
 11067                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 11068  1ACC  3014               	movlw	20
 11069  1ACD  00FA               	movwf	_Delay_Led_Memory	;volatile
 11070  1ACE  3000               	movlw	0
 11071  1ACF  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 11072  1AD0                     l521:	
 11073                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 11074                           
 11075  1AD0  1683               	bsf	3,5	;RP0=1, select bank3
 11076  1AD1  1703               	bsf	3,6	;RP1=1, select bank3
 11077  1AD2  188C               	btfsc	12,1	;volsfr
 11078  1AD3  2AD0               	goto	l521
 11079                           
 11080                           ;eeprom.c: 57:    EEADR=addr;
 11081  1AD4  1283               	bcf	3,5	;RP0=0, select bank0
 11082  1AD5  1303               	bcf	3,6	;RP1=0, select bank0
 11083  1AD6  0822               	movf	EEPROM_Read_Byte@addr,w
 11084  1AD7  1703               	bsf	3,6	;RP1=1, select bank2
 11085  1AD8  008D               	movwf	13	;volatile
 11086                           
 11087                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 11088  1AD9  1683               	bsf	3,5	;RP0=1, select bank3
 11089  1ADA  138C               	bcf	12,7	;volsfr
 11090                           
 11091                           ;eeprom.c: 59:    EECON1bits.RD=1;
 11092  1ADB  140C               	bsf	12,0	;volsfr
 11093                           
 11094                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 11095  1ADC  304E               	movlw	78
 11096  1ADD  1283               	bcf	3,5	;RP0=0, select bank0
 11097  1ADE  1303               	bcf	3,6	;RP1=0, select bank0
 11098  1ADF  00A1               	movwf	??_EEPROM_Read_Byte+1
 11099  1AE0  30EA               	movlw	234
 11100  1AE1  00A0               	movwf	??_EEPROM_Read_Byte
 11101  1AE2                     u7997:	
 11102  1AE2  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 11103  1AE3  2AE2               	goto	u7997
 11104  1AE4  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 11105  1AE5  2AE2               	goto	u7997
 11106  1AE6  0000               	nop
 11107                           
 11108                           ;eeprom.c: 61:    return EEDATA;
 11109  1AE7  1283               	bcf	3,5	;RP0=0, select bank2
 11110  1AE8  1703               	bsf	3,6	;RP1=1, select bank2
 11111  1AE9  080C               	movf	12,w	;volatile
 11112  1AEA  0008               	return
 11113  1AEB                     __end_of_EEPROM_Read_Byte:	
 11114                           
 11115                           	psect	text47
 11116  126D                     __ptext47:	
 11117 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 11118 ;; Defined at:
 11119 ;;		line 142 in file "EEPROM_24C1025.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;  chip_add        1    wreg     unsigned char 
 11122 ;;  mem_add         4    2[BANK0 ] unsigned long 
 11123 ;;  data            1    6[BANK0 ] PTR unsigned char 
 11124 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 11125 ;; Auto vars:     Size  Location     Type
 11126 ;;  chip_add        1    9[BANK0 ] unsigned char 
 11127 ;;  ctrl            1   11[BANK0 ] unsigned char 
 11128 ;;  range           1   10[BANK0 ] unsigned char 
 11129 ;; Return value:  Size  Location     Type
 11130 ;;                  1    wreg      void 
 11131 ;; Registers used:
 11132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11133 ;; Tracked objects:
 11134 ;;		On entry : 300/300
 11135 ;;		On exit  : 0/0
 11136 ;;		Unchanged: 0/0
 11137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11138 ;;      Params:         0       5       0       0       0
 11139 ;;      Locals:         0       3       0       0       0
 11140 ;;      Temps:          0       2       0       0       0
 11141 ;;      Totals:         0      10       0       0       0
 11142 ;;Total ram usage:       10 bytes
 11143 ;; Hardware stack levels used:    1
 11144 ;; Hardware stack levels required when called:    3
 11145 ;; This function calls:
 11146 ;;		_I2C_Master_Start
 11147 ;;		_I2C_Master_Stop
 11148 ;;		_I2C_Master_Write
 11149 ;; This function is called by:
 11150 ;;		_Decodify_Command
 11151 ;; This function uses a non-reentrant model
 11152 ;;
 11153                           
 11154                           
 11155                           ;psect for function _EEPROM_24C1025_Write_Str
 11156  126D                     _EEPROM_24C1025_Write_Str:	
 11157                           
 11158                           ;incstack = 0
 11159                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11160                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 11161  126D  1283               	bcf	3,5	;RP0=0, select bank0
 11162  126E  1303               	bcf	3,6	;RP1=0, select bank0
 11163  126F  00A9               	movwf	EEPROM_24C1025_Write_Str@chip_add
 11164                           
 11165                           ;EEPROM_24C1025.c: 144:      unsigned char ctrl;;EEPROM_24C1025.c: 146:      if(mem_add>
      +                          0x1FFFF) return;
 11166  1270  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11167  1271  1D03               	btfss	3,2
 11168  1272  0008               	return
 11169  1273  3002               	movlw	2
 11170  1274  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11171  1275  1D03               	skipz
 11172  1276  2A7F               	goto	u6903
 11173  1277  3000               	movlw	0
 11174  1278  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11175  1279  1D03               	skipz
 11176  127A  2A7F               	goto	u6903
 11177  127B  3000               	movlw	0
 11178  127C  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11179  127D  1D03               	skipz
 11180  127E  2A7F               	goto	u6903
 11181  127F                     u6903:	
 11182  127F  1803               	btfsc	3,0
 11183  1280  0008               	return
 11184  1281                     L10:	
 11185                           
 11186                           ;EEPROM_24C1025.c: 148:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11187  1281  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11188  1282  1D03               	btfss	3,2
 11189  1283  2A92               	goto	l6530
 11190  1284  3001               	movlw	1
 11191  1285  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11192  1286  1D03               	skipz
 11193  1287  2A90               	goto	u6913
 11194  1288  3000               	movlw	0
 11195  1289  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11196  128A  1D03               	skipz
 11197  128B  2A90               	goto	u6913
 11198  128C  3000               	movlw	0
 11199  128D  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11200  128E  1D03               	skipz
 11201  128F  2A90               	goto	u6913
 11202  1290                     u6913:	
 11203  1290  1C03               	btfss	3,0
 11204  1291  2A97               	goto	l6532
 11205  1292                     l6530:	
 11206  1292  3008               	movlw	8
 11207  1293  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11208  1294  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11209  1295  00AA               	movwf	EEPROM_24C1025_Write_Str@range
 11210  1296  2A98               	goto	l6534
 11211  1297                     l6532:	
 11212  1297  01AA               	clrf	EEPROM_24C1025_Write_Str@range
 11213  1298                     l6534:	
 11214                           
 11215                           ;EEPROM_24C1025.c: 149:      ctrl=chip_add;
 11216  1298  0829               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 11217  1299  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11218  129A  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11219  129B  00AB               	movwf	EEPROM_24C1025_Write_Str@ctrl
 11220                           
 11221                           ;EEPROM_24C1025.c: 150:      ctrl<<=1;
 11222  129C  1003               	clrc
 11223  129D  0DAB               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 11224                           
 11225                           ;EEPROM_24C1025.c: 151:      ctrl |= 0xA0;
 11226  129E  30A0               	movlw	160
 11227  129F  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11228  12A0  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11229  12A1  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 11230                           
 11231                           ;EEPROM_24C1025.c: 152:      ctrl |= range;
 11232  12A2  082A               	movf	EEPROM_24C1025_Write_Str@range,w
 11233  12A3  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11234  12A4  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11235  12A5  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 11236                           
 11237                           ;EEPROM_24C1025.c: 154:      I2C_Master_Start();
 11238  12A6  160A  158A  213F  160A  118A  	fcall	_I2C_Master_Start
 11239                           
 11240                           ;EEPROM_24C1025.c: 155:      I2C_Master_Write(ctrl);
 11241  12AB  1283               	bcf	3,5	;RP0=0, select bank0
 11242  12AC  082B               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 11243  12AD  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11244  12AE  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11245  12AF  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11246  12B0  00A0               	movwf	I2C_Master_Write@d
 11247  12B1  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11248  12B2  00A1               	movwf	I2C_Master_Write@d+1
 11249  12B3  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 11250                           
 11251                           ;EEPROM_24C1025.c: 156:      I2C_Master_Write(((char *)&mem_add)[1]);
 11252  12B8  0823               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11253  12B9  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11254  12BA  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11255  12BB  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11256  12BC  00A0               	movwf	I2C_Master_Write@d
 11257  12BD  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11258  12BE  00A1               	movwf	I2C_Master_Write@d+1
 11259  12BF  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 11260                           
 11261                           ;EEPROM_24C1025.c: 157:      I2C_Master_Write(((char *)&mem_add)[0]);
 11262  12C4  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 11263  12C5  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11264  12C6  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11265  12C7  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11266  12C8  00A0               	movwf	I2C_Master_Write@d
 11267  12C9  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11268  12CA  00A1               	movwf	I2C_Master_Write@d+1
 11269  12CB  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 11270  12D0                     l6594:	
 11271                           ;EEPROM_24C1025.c: 158:      while(*data)
 11272                           
 11273                           
 11274                           ;EEPROM_24C1025.c: 158:      while(*data)
 11275  12D0  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11276  12D1  0084               	movwf	4
 11277  12D2  1783               	bsf	3,7	;select IRP bank2
 11278  12D3  0800               	movf	0,w
 11279  12D4  1903               	btfsc	3,2
 11280  12D5  2B3F               	goto	l6596
 11281                           
 11282                           ;EEPROM_24C1025.c: 159:           {;EEPROM_24C1025.c: 160:           if(mem_add>0x1FFFF)
      +                           return;
 11283  12D6  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11284  12D7  1D03               	btfss	3,2
 11285  12D8  0008               	return
 11286  12D9  3002               	movlw	2
 11287  12DA  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11288  12DB  1D03               	skipz
 11289  12DC  2AE5               	goto	u6923
 11290  12DD  3000               	movlw	0
 11291  12DE  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11292  12DF  1D03               	skipz
 11293  12E0  2AE5               	goto	u6923
 11294  12E1  3000               	movlw	0
 11295  12E2  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11296  12E3  1D03               	skipz
 11297  12E4  2AE5               	goto	u6923
 11298  12E5                     u6923:	
 11299  12E5  1803               	btfsc	3,0
 11300  12E6  0008               	return
 11301                           
 11302                           ;EEPROM_24C1025.c: 161:           if((mem_add+1)%128==0)
 11303  12E7  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 11304  12E8  3E01               	addlw	1
 11305  12E9  397F               	andlw	127
 11306  12EA  1D03               	btfss	3,2
 11307  12EB  2B1E               	goto	l6588
 11308                           
 11309                           ;EEPROM_24C1025.c: 162:             {;EEPROM_24C1025.c: 163:             I2C_Master_Writ
      +                          e(*data);
 11310  12EC  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11311  12ED  0084               	movwf	4
 11312  12EE  0800               	movf	0,w
 11313  12EF  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11314  12F0  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11315  12F1  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11316  12F2  00A0               	movwf	I2C_Master_Write@d
 11317  12F3  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11318  12F4  00A1               	movwf	I2C_Master_Write@d+1
 11319  12F5  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 11320                           
 11321                           ;EEPROM_24C1025.c: 164:             I2C_Master_Stop();
 11322  12FA  160A  158A  212D  160A  118A  	fcall	_I2C_Master_Stop
 11323                           
 11324                           ;EEPROM_24C1025.c: 166:             _delay((unsigned long)((5)*(8000000/4000.0)));
 11325  12FF  300D               	movlw	13
 11326  1300  1283               	bcf	3,5	;RP0=0, select bank0
 11327  1301  1303               	bcf	3,6	;RP1=0, select bank0
 11328  1302  00A8               	movwf	??_EEPROM_24C1025_Write_Str+1
 11329  1303  30FB               	movlw	251
 11330  1304  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11331  1305                     u8007:	
 11332  1305  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
 11333  1306  2B05               	goto	u8007
 11334  1307  0BA8               	decfsz	??_EEPROM_24C1025_Write_Str+1,f
 11335  1308  2B05               	goto	u8007
 11336                           
 11337                           ;EEPROM_24C1025.c: 167:             mem_add++;
 11338  1309  3001               	movlw	1
 11339  130A  1283               	bcf	3,5	;RP0=0, select bank0
 11340  130B  1303               	bcf	3,6	;RP1=0, select bank0
 11341  130C  07A2               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 11342  130D  3000               	movlw	0
 11343  130E  1803               	skipnc
 11344  130F  3001               	movlw	1
 11345  1310  07A3               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 11346  1311  3000               	movlw	0
 11347  1312  1803               	skipnc
 11348  1313  3001               	movlw	1
 11349  1314  07A4               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 11350  1315  3000               	movlw	0
 11351  1316  1803               	skipnc
 11352  1317  3001               	movlw	1
 11353  1318  07A5               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 11354                           
 11355                           ;EEPROM_24C1025.c: 168:             data++;
 11356  1319  3001               	movlw	1
 11357  131A  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11358  131B  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11359  131C  07A6               	addwf	EEPROM_24C1025_Write_Str@data,f
 11360  131D  2A81               	goto	L10
 11361  131E                     l6588:	
 11362                           ;EEPROM_24C1025.c: 169:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11363                           
 11364                           
 11365                           ;EEPROM_24C1025.c: 181:             {;EEPROM_24C1025.c: 182:             I2C_Master_Writ
      +                          e(*data);
 11366  131E  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11367  131F  0084               	movwf	4
 11368  1320  0800               	movf	0,w
 11369  1321  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11370  1322  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11371  1323  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11372  1324  00A0               	movwf	I2C_Master_Write@d
 11373  1325  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11374  1326  00A1               	movwf	I2C_Master_Write@d+1
 11375  1327  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 11376                           
 11377                           ;EEPROM_24C1025.c: 183:             data++;
 11378  132C  3001               	movlw	1
 11379  132D  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11380  132E  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11381  132F  07A6               	addwf	EEPROM_24C1025_Write_Str@data,f
 11382                           
 11383                           ;EEPROM_24C1025.c: 184:             mem_add++;
 11384  1330  3001               	movlw	1
 11385  1331  07A2               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 11386  1332  3000               	movlw	0
 11387  1333  1803               	skipnc
 11388  1334  3001               	movlw	1
 11389  1335  07A3               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 11390  1336  3000               	movlw	0
 11391  1337  1803               	skipnc
 11392  1338  3001               	movlw	1
 11393  1339  07A4               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 11394  133A  3000               	movlw	0
 11395  133B  1803               	skipnc
 11396  133C  3001               	movlw	1
 11397  133D  07A5               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 11398  133E  2AD0               	goto	l6594
 11399  133F                     l6596:	
 11400                           
 11401                           ;EEPROM_24C1025.c: 187:      I2C_Master_Write(0);
 11402  133F  3000               	movlw	0
 11403  1340  00A0               	movwf	I2C_Master_Write@d
 11404  1341  00A1               	movwf	I2C_Master_Write@d+1
 11405  1342  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 11406                           
 11407                           ;EEPROM_24C1025.c: 188:      I2C_Master_Stop();
 11408  1347  160A  158A  212D  160A  118A  	fcall	_I2C_Master_Stop
 11409                           
 11410                           ;EEPROM_24C1025.c: 189:      _delay((unsigned long)((5)*(8000000/4000.0)));
 11411  134C  300D               	movlw	13
 11412  134D  1283               	bcf	3,5	;RP0=0, select bank0
 11413  134E  1303               	bcf	3,6	;RP1=0, select bank0
 11414  134F  00A8               	movwf	??_EEPROM_24C1025_Write_Str+1
 11415  1350  30FB               	movlw	251
 11416  1351  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11417  1352                     u8017:	
 11418  1352  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
 11419  1353  2B52               	goto	u8017
 11420  1354  0BA8               	decfsz	??_EEPROM_24C1025_Write_Str+1,f
 11421  1355  2B52               	goto	u8017
 11422  1356  0008               	return
 11423  1357                     __end_of_EEPROM_24C1025_Write_Str:	
 11424                           
 11425                           	psect	text48
 11426  1984                     __ptext48:	
 11427 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 11428 ;; Defined at:
 11429 ;;		line 262 in file "EEPROM_24C1025.c"
 11430 ;; Parameters:    Size  Location     Type
 11431 ;;  chip_add        1    wreg     unsigned char 
 11432 ;;  mem_add         4   15[BANK0 ] unsigned long 
 11433 ;;  data            1   19[BANK0 ] unsigned char 
 11434 ;; Auto vars:     Size  Location     Type
 11435 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11436 ;; Return value:  Size  Location     Type
 11437 ;;                  1    wreg      void 
 11438 ;; Registers used:
 11439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11440 ;; Tracked objects:
 11441 ;;		On entry : 300/300
 11442 ;;		On exit  : 0/0
 11443 ;;		Unchanged: 0/0
 11444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11445 ;;      Params:         0       5       0       0       0
 11446 ;;      Locals:         0       1       0       0       0
 11447 ;;      Temps:          0       0       0       0       0
 11448 ;;      Totals:         0       6       0       0       0
 11449 ;;Total ram usage:        6 bytes
 11450 ;; Hardware stack levels used:    1
 11451 ;; Hardware stack levels required when called:    4
 11452 ;; This function calls:
 11453 ;;		_EEPROM_24C1025_Write_Buffer
 11454 ;; This function is called by:
 11455 ;;		_Decodify_Command
 11456 ;; This function uses a non-reentrant model
 11457 ;;
 11458                           
 11459                           
 11460                           ;psect for function _EEPROM_24C1025_Write_Byte
 11461  1984                     _EEPROM_24C1025_Write_Byte:	
 11462                           
 11463                           ;incstack = 0
 11464                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11465                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 11466  1984  1283               	bcf	3,5	;RP0=0, select bank0
 11467  1985  1303               	bcf	3,6	;RP1=0, select bank0
 11468  1986  00B4               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 11469                           
 11470                           ;EEPROM_24C1025.c: 263:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 11471  1987  0832               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 11472  1988  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 11473  1989  0831               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 11474  198A  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 11475  198B  0830               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 11476  198C  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 11477  198D  082F               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 11478  198E  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 11479  198F  01A6               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 11480  1990  0AA6               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 11481  1991  3033               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 11482  1992  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 11483  1993  3000               	movlw	0
 11484  1994  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 11485  1995  0834               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 11486  1996  160A  118A  2531   	fcall	_EEPROM_24C1025_Write_Buffer
 11487  1999  0008               	return
 11488  199A                     __end_of_EEPROM_24C1025_Write_Byte:	
 11489                           
 11490                           	psect	text49
 11491  1694                     __ptext49:	
 11492 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 11493 ;; Defined at:
 11494 ;;		line 196 in file "EEPROM_24C1025.c"
 11495 ;; Parameters:    Size  Location     Type
 11496 ;;  chip_add        1    wreg     unsigned char 
 11497 ;;  mem_add         4    6[BANK0 ] unsigned long 
 11498 ;;  texto           1   10[BANK0 ] PTR unsigned char 
 11499 ;;		 -> texto(16), 
 11500 ;; Auto vars:     Size  Location     Type
 11501 ;;  chip_add        1   14[BANK0 ] unsigned char 
 11502 ;;  ctrl            1   16[BANK0 ] unsigned char 
 11503 ;;  range           1   15[BANK0 ] unsigned char 
 11504 ;;  cnt             1   13[BANK0 ] unsigned char 
 11505 ;; Return value:  Size  Location     Type
 11506 ;;                  1    wreg      void 
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
 11507 ;; Registers used:
 11508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11509 ;; Tracked objects:
 11510 ;;		On entry : 300/300
<<<<<<< HEAD
 11511 ;;		On exit  : 300/0
 11512 ;;		Unchanged: 0/0
 11513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11514 ;;      Params:         0       4       0       0       0
 11515 ;;      Locals:         0       3       0       0       0
 11516 ;;      Temps:          0       0       0       0       0
 11517 ;;      Totals:         0       7       0       0       0
 11518 ;;Total ram usage:        7 bytes
 11519 ;; Hardware stack levels used:    1
 11520 ;; Hardware stack levels required when called:    4
 11521 ;; This function calls:
 11522 ;;		_EEPROM_24C1025_Read_Buffer
 11523 ;; This function is called by:
 11524 ;;		_Decodify_Command
 11525 ;; This function uses a non-reentrant model
 11526 ;;
 11527                           
 11528                           
 11529                           ;psect for function _EEPROM_24C1025_Read_Int
 11530  1C7D                     _EEPROM_24C1025_Read_Int:	
 11531                           
 11532                           ;incstack = 0
 11533                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11534                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 11535  1C7D  1283               	bcf	3,5	;RP0=0, select bank0
 11536  1C7E  1303               	bcf	3,6	;RP1=0, select bank0
 11537  1C7F  00B5               	movwf	EEPROM_24C1025_Read_Int@chip_add
 11538                           
 11539                           ;EEPROM_24C1025.c: 282:     char data[2];;EEPROM_24C1025.c: 283:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 11540  1C80  0834               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 11541  1C81  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11542  1C82  0833               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 11543  1C83  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11544  1C84  0832               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 11545  1C85  00A5               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11546  1C86  0831               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 11547  1C87  00A4               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11548  1C88  3002               	movlw	2
 11549  1C89  00A8               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 11550  1C8A  3036               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 11551  1C8B  00A9               	movwf	EEPROM_24C1025_Read_Buffer@data
 11552  1C8C  01AA               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 11553  1C8D  0835               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 11554  1C8E  120A  158A  2570   	fcall	_EEPROM_24C1025_Read_Buffer
 11555                           
 11556                           ;EEPROM_24C1025.c: 284:     return (data[0]<<8)+data[1];
 11557  1C91  1283               	bcf	3,5	;RP0=0, select bank0
 11558  1C92  1303               	bcf	3,6	;RP1=0, select bank0
 11559  1C93  0836               	movf	EEPROM_24C1025_Read_Int@data,w
 11560  1C94  00B2               	movwf	?_EEPROM_24C1025_Read_Int+1
 11561  1C95  0837               	movf	EEPROM_24C1025_Read_Int@data+1,w
 11562  1C96  00B1               	movwf	?_EEPROM_24C1025_Read_Int
 11563  1C97  0008               	return
 11564  1C98                     __end_of_EEPROM_24C1025_Read_Int:	
 11565                           
 11566                           	psect	text51
 11567  1C65                     __ptext51:	
 11568 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 11569 ;; Defined at:
 11570 ;;		line 267 in file "EEPROM_24C1025.c"
 11571 ;; Parameters:    Size  Location     Type
 11572 ;;  chip_add        1    wreg     unsigned char 
 11573 ;;  mem_add         4   17[BANK0 ] unsigned long 
 11574 ;; Auto vars:     Size  Location     Type
 11575 ;;  chip_add        1   21[BANK0 ] unsigned char 
 11576 ;;  data            1   22[BANK0 ] unsigned char 
 11577 ;; Return value:  Size  Location     Type
 11578 ;;                  1    wreg      unsigned char 
 11579 ;; Registers used:
 11580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11581 ;; Tracked objects:
 11582 ;;		On entry : 300/300
 11583 ;;		On exit  : 300/0
 11584 ;;		Unchanged: 0/0
 11585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11586 ;;      Params:         0       4       0       0       0
 11587 ;;      Locals:         0       2       0       0       0
 11588 ;;      Temps:          0       0       0       0       0
 11589 ;;      Totals:         0       6       0       0       0
 11590 ;;Total ram usage:        6 bytes
 11591 ;; Hardware stack levels used:    1
 11592 ;; Hardware stack levels required when called:    4
 11593 ;; This function calls:
 11594 ;;		_EEPROM_24C1025_Read_Buffer
 11595 ;; This function is called by:
 11596 ;;		_Decodify_Command
 11597 ;; This function uses a non-reentrant model
 11598 ;;
 11599                           
 11600                           
 11601                           ;psect for function _EEPROM_24C1025_Read_Byte
 11602  1C65                     _EEPROM_24C1025_Read_Byte:	
 11603                           
 11604                           ;incstack = 0
 11605                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11606                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 11607  1C65  1283               	bcf	3,5	;RP0=0, select bank0
 11608  1C66  1303               	bcf	3,6	;RP1=0, select bank0
 11609  1C67  00B5               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 11610                           
 11611                           ;EEPROM_24C1025.c: 268:     char data;;EEPROM_24C1025.c: 269:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 11612  1C68  0834               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 11613  1C69  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11614  1C6A  0833               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 11615  1C6B  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11616  1C6C  0832               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 11617  1C6D  00A5               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11618  1C6E  0831               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 11619  1C6F  00A4               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11620  1C70  3036               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 11621  1C71  01A8               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 11622  1C72  0AA8               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 11623  1C73  00A9               	movwf	EEPROM_24C1025_Read_Buffer@data
 11624  1C74  01AA               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 11625  1C75  0835               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 11626  1C76  120A  158A  2570   	fcall	_EEPROM_24C1025_Read_Buffer
 11627                           
 11628                           ;EEPROM_24C1025.c: 270:     return data;
 11629  1C79  1283               	bcf	3,5	;RP0=0, select bank0
 11630  1C7A  1303               	bcf	3,6	;RP1=0, select bank0
 11631  1C7B  0836               	movf	EEPROM_24C1025_Read_Byte@data,w
 11632  1C7C  0008               	return
 11633  1C7D                     __end_of_EEPROM_24C1025_Read_Byte:	
 11634                           
 11635                           	psect	text55
 11636  0037                     __ptext55:	
 11637 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 11638 ;; Defined at:
 11639 ;;		line 288 in file "EEPROM_24C1025.c"
 11640 ;; Parameters:    Size  Location     Type
 11641 ;;  chip_add        1    wreg     unsigned char 
 11642 ;;  value           2   17[BANK1 ] unsigned int 
 11643 ;; Auto vars:     Size  Location     Type
 11644 ;;  chip_add        1   19[BANK1 ] unsigned char 
 11645 ;;  mem_add         4   20[BANK1 ] unsigned long 
 11646 ;; Return value:  Size  Location     Type
 11647 ;;                  1    wreg      void 
 11648 ;; Registers used:
 11649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11650 ;; Tracked objects:
 11651 ;;		On entry : 300/300
 11652 ;;		On exit  : 300/100
 11653 ;;		Unchanged: 0/0
 11654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11655 ;;      Params:         0       0       2       0       0
 11656 ;;      Locals:         0       0       5       0       0
 11657 ;;      Temps:          0       0       0       0       0
 11658 ;;      Totals:         0       0       7       0       0
 11659 ;;Total ram usage:        7 bytes
 11660 ;; Hardware stack levels used:    1
 11661 ;; Hardware stack levels required when called:    5
 11662 ;; This function calls:
 11663 ;;		_EEPROM_24C1025_Write_Int
 11664 ;; This function is called by:
 11665 ;;		_Decodify_Command
 11666 ;; This function uses a non-reentrant model
 11667 ;;
 11668                           
 11669                           
 11670                           ;psect for function _EEPROM_24C1025_Fill_All
 11671  0037                     _EEPROM_24C1025_Fill_All:	
 11672                           
 11673                           ;incstack = 0
 11674                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11675                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 11676  0037  1303               	bcf	3,6	;RP1=0, select bank1
 11677  0038  00B3               	movwf	EEPROM_24C1025_Fill_All@chip_add^(0+128)
 11678                           
 11679                           ;EEPROM_24C1025.c: 289:      unsigned long mem_add;;EEPROM_24C1025.c: 290:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 11680  0039  01B4               	clrf	EEPROM_24C1025_Fill_All@mem_add^(0+128)
 11681  003A  01B5               	clrf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128)
 11682  003B  01B6               	clrf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128)
 11683  003C  01B7               	clrf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128)
 11684  003D                     l6794:	
 11685                           
 11686                           ;EEPROM_24C1025.c: 291:         {;EEPROM_24C1025.c: 292:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 11687  003D  0837               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 11688  003E  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
 11689  003F  0836               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 11690  0040  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
 11691  0041  0835               	movf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 11692  0042  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
 11693  0043  0834               	movf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 11694  0044  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
 11695  0045  0832               	movf	(EEPROM_24C1025_Fill_All@value+1)^(0+128),w
 11696  0046  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
 11697  0047  0831               	movf	EEPROM_24C1025_Fill_All@value^(0+128),w
 11698  0048  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
 11699  0049  0833               	movf	EEPROM_24C1025_Fill_All@chip_add^(0+128),w
 11700  004A  20CC  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 11701  004D  0064               	clrwdt	;# 
 11702                           
 11703                           ;EEPROM_24C1025.c: 294:         }
 11704  004E  3002               	movlw	2
 11705  004F  1683               	bsf	3,5	;RP0=1, select bank1
 11706  0050  1303               	bcf	3,6	;RP1=0, select bank1
 11707  0051  07B4               	addwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),f
 11708  0052  3001               	movlw	1
 11709  0053  1803               	skipnc
 11710  0054  07B5               	addwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),f
 11711  0055  1803               	skipnc
 11712  0056  07B6               	addwf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),f
 11713  0057  1803               	skipnc
 11714  0058  07B7               	addwf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),f
 11715  0059  0837               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 11716  005A  1D03               	btfss	3,2
 11717  005B  0008               	return
 11718  005C  0836               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 11719  005D  1D03               	btfss	3,2
 11720  005E  0008               	return
 11721  005F  3004               	movlw	4
 11722  0060  0235               	subwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 11723  0061  1D03               	skipz
 11724  0062  2865               	goto	u6003
 11725  0063  3000               	movlw	0
 11726  0064  0234               	subwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 11727  0065                     u6003:	
 11728  0065  1803               	btfsc	3,0
 11729  0066  0008               	return
 11730  0067  283D               	goto	l6794
 11731  0068                     __end_of_EEPROM_24C1025_Fill_All:	
 11732  0068                     __ptext25:	
 11733 ;; *************** function _Save_Log *****************
 11734 ;; Defined at:
 11735 ;;		line 1005 in file "SlaveLiofilizadorVer1.c"
 11736 ;; Parameters:    Size  Location     Type
 11737 ;;  add_datalog     4   17[BANK1 ] unsigned long 
 11738 ;; Auto vars:     Size  Location     Type
 11739 ;;		None
 11740 ;; Return value:  Size  Location     Type
 11741 ;;                  1    wreg      void 
 11742 ;; Registers used:
 11743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11744 ;; Tracked objects:
 11745 ;;		On entry : 300/100
 11746 ;;		On exit  : 0/0
 11747 ;;		Unchanged: 0/0
 11748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11749 ;;      Params:         0       0       4       0       0
 11750 ;;      Locals:         0       0       0       0       0
 11751 ;;      Temps:          0       0       4       0       0
 11752 ;;      Totals:         0       0       8       0       0
 11753 ;;Total ram usage:        8 bytes
 11754 ;; Hardware stack levels used:    1
 11755 ;; Hardware stack levels required when called:    5
 11756 ;; This function calls:
 11757 ;;		_EEPROM_24C1025_Write_Int
 11758 ;;		___flmul
 11759 ;;		___fltol
 11760 ;; This function is called by:
 11761 ;;		_Decodify_Command
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           
 11765                           
 11766                           ;psect for function _Save_Log
 11767  0068                     _Save_Log:	
 11768                           
 11769                           ;SlaveLiofilizadorVer1.c: 1006:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (int) (
      +                          Temperatura0*10.0));
 11770                           
 11771                           ;incstack = 0
 11772                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11773  0068  2340  120A  118A   	fcall	PL40	;call to abstracted procedure
 11774  006B  0817               	movf	(_Temperatura0+3)^(0+384),w
 11775  006C  1283               	bcf	3,5	;RP0=0, select bank0
 11776  006D  1303               	bcf	3,6	;RP1=0, select bank0
 11777  006E  00DC               	movwf	___flmul@a+3
 11778  006F  1683               	bsf	3,5	;RP0=1, select bank3
 11779  0070  1703               	bsf	3,6	;RP1=1, select bank3
 11780  0071  0816               	movf	(_Temperatura0+2)^(0+384),w
 11781  0072  1283               	bcf	3,5	;RP0=0, select bank0
 11782  0073  1303               	bcf	3,6	;RP1=0, select bank0
 11783  0074  00DB               	movwf	___flmul@a+2
 11784  0075  1683               	bsf	3,5	;RP0=1, select bank3
 11785  0076  1703               	bsf	3,6	;RP1=1, select bank3
 11786  0077  0815               	movf	(_Temperatura0+1)^(0+384),w
 11787  0078  1283               	bcf	3,5	;RP0=0, select bank0
 11788  0079  1303               	bcf	3,6	;RP1=0, select bank0
 11789  007A  00DA               	movwf	___flmul@a+1
 11790  007B  1683               	bsf	3,5	;RP0=1, select bank3
 11791  007C  1703               	bsf	3,6	;RP1=1, select bank3
 11792  007D  0814               	movf	_Temperatura0^(0+384),w
 11793  007E  2336  120A  118A   	fcall	PL38	;call to abstracted procedure
 11794  0081  20EB  120A  118A   	fcall	___flmul
 11795  0084  2309  120A  118A   	fcall	PL20	;call to abstracted procedure
 11796  0087  225A  120A  118A   	fcall	___fltol
 11797  008A  1683               	bsf	3,5	;RP0=1, select bank1
 11798  008B  0821               	movf	(?___fltol+1)^(0+128),w
 11799  008C  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
 11800  008D  0820               	movf	?___fltol^(0+128),w
 11801  008E  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
 11802  008F  3000               	movlw	0
 11803  0090  20CC  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 11804                           
 11805                           ;SlaveLiofilizadorVer1.c: 1007:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (int) (
      +                          Temperatura1*10.0));
 11806  0093  1683               	bsf	3,5	;RP0=1, select bank1
 11807  0094  1303               	bcf	3,6	;RP1=0, select bank1
 11808  0095  2340  120A  118A   	fcall	PL40	;call to abstracted procedure
 11809  0098  0813               	movf	(_Temperatura1+3)^(0+384),w
 11810  0099  1283               	bcf	3,5	;RP0=0, select bank0
 11811  009A  1303               	bcf	3,6	;RP1=0, select bank0
 11812  009B  00DC               	movwf	___flmul@a+3
 11813  009C  1683               	bsf	3,5	;RP0=1, select bank3
 11814  009D  1703               	bsf	3,6	;RP1=1, select bank3
 11815  009E  0812               	movf	(_Temperatura1+2)^(0+384),w
 11816  009F  1283               	bcf	3,5	;RP0=0, select bank0
 11817  00A0  1303               	bcf	3,6	;RP1=0, select bank0
 11818  00A1  00DB               	movwf	___flmul@a+2
 11819  00A2  1683               	bsf	3,5	;RP0=1, select bank3
 11820  00A3  1703               	bsf	3,6	;RP1=1, select bank3
 11821  00A4  0811               	movf	(_Temperatura1+1)^(0+384),w
 11822  00A5  1283               	bcf	3,5	;RP0=0, select bank0
 11823  00A6  1303               	bcf	3,6	;RP1=0, select bank0
 11824  00A7  00DA               	movwf	___flmul@a+1
 11825  00A8  1683               	bsf	3,5	;RP0=1, select bank3
 11826  00A9  1703               	bsf	3,6	;RP1=1, select bank3
 11827  00AA  0810               	movf	_Temperatura1^(0+384),w
 11828  00AB  2336  120A  118A   	fcall	PL38	;call to abstracted procedure
 11829  00AE  20EB  120A  118A   	fcall	___flmul
 11830  00B1  2309  120A  118A   	fcall	PL20	;call to abstracted procedure
 11831  00B4  225A  120A  118A   	fcall	___fltol
 11832  00B7  1683               	bsf	3,5	;RP0=1, select bank1
 11833  00B8  0821               	movf	(?___fltol+1)^(0+128),w
 11834  00B9  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
 11835  00BA  0820               	movf	?___fltol^(0+128),w
 11836  00BB  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
 11837  00BC  3001               	movlw	1
 11838  00BD  20CC  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 11839                           
 11840                           ;SlaveLiofilizadorVer1.c: 1009:      EEPROM_24C1025_Write_Int(0x00, add_datalog+2, 0xFFF
      +                          F);
 11841  00C0  22D7  120A  118A   	fcall	PL12	;call to abstracted procedure
 11842  00C3  3000               	movlw	0
 11843  00C4  20CC  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
 11844                           
 11845                           ;SlaveLiofilizadorVer1.c: 1010:      EEPROM_24C1025_Write_Int(0x01, add_datalog+2, 0xFFF
      +                          F);
 11846  00C7  22D7  120A  118A   	fcall	PL12	;call to abstracted procedure
 11847  00CA  3001               	movlw	1
 11848  00CB  28CC               	ljmp	_EEPROM_24C1025_Write_Int
 11849  00CC                     __end_of_Save_Log:	
 11850  00CC                     __ptext56:	
 11851 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 11852 ;; Defined at:
 11853 ;;		line 273 in file "EEPROM_24C1025.c"
 11854 ;; Parameters:    Size  Location     Type
 11855 ;;  chip_add        1    wreg     unsigned char 
 11856 ;;  mem_add         4    8[BANK1 ] unsigned long 
 11857 ;;  data            2   12[BANK1 ] int 
 11858 ;; Auto vars:     Size  Location     Type
 11859 ;;  chip_add        1   14[BANK1 ] unsigned char 
 11860 ;;  local           2   15[BANK1 ] unsigned char [2]
 11861 ;; Return value:  Size  Location     Type
 11862 ;;                  1    wreg      void 
 11863 ;; Registers used:
 11864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11865 ;; Tracked objects:
 11866 ;;		On entry : 100/300
 11867 ;;		On exit  : 0/0
 11868 ;;		Unchanged: 0/0
 11869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11870 ;;      Params:         0       0       6       0       0
 11871 ;;      Locals:         0       0       3       0       0
 11872 ;;      Temps:          0       0       0       0       0
 11873 ;;      Totals:         0       0       9       0       0
 11874 ;;Total ram usage:        9 bytes
 11875 ;; Hardware stack levels used:    1
 11876 ;; Hardware stack levels required when called:    4
 11877 ;; This function calls:
 11878 ;;		_EEPROM_24C1025_Write_Buffer
 11879 ;; This function is called by:
 11880 ;;		_Decodify_Command
 11881 ;;		_Save_Log
 11882 ;;		_EEPROM_24C1025_Fill_All
 11883 ;; This function uses a non-reentrant model
 11884 ;;
 11885                           
 11886                           
 11887                           ;psect for function _EEPROM_24C1025_Write_Int
 11888  00CC                     _EEPROM_24C1025_Write_Int:	
 11889                           
 11890                           ;incstack = 0
 11891                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11892                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 11893  00CC  1303               	bcf	3,6	;RP1=0, select bank1
 11894  00CD  00AE               	movwf	EEPROM_24C1025_Write_Int@chip_add^(0+128)
 11895                           
 11896                           ;EEPROM_24C1025.c: 274:      char local[2];;EEPROM_24C1025.c: 275:      local[0]=((char 
      +                          *)&data)[1];
 11897  00CE  082D               	movf	(EEPROM_24C1025_Write_Int@data^(0+128)+1),w
 11898  00CF  00AF               	movwf	EEPROM_24C1025_Write_Int@local^(0+128)
 11899                           
 11900                           ;EEPROM_24C1025.c: 276:      local[1]=((char *)&data)[0];
 11901  00D0  082C               	movf	EEPROM_24C1025_Write_Int@data^(0+128),w
 11902  00D1  00B0               	movwf	(EEPROM_24C1025_Write_Int@local^(0+128)+1)
 11903                           
 11904                           ;EEPROM_24C1025.c: 277:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 11905  00D2  082B               	movf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128),w
 11906  00D3  1283               	bcf	3,5	;RP0=0, select bank0
 11907  00D4  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 11908  00D5  1683               	bsf	3,5	;RP0=1, select bank1
 11909  00D6  082A               	movf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128),w
 11910  00D7  1283               	bcf	3,5	;RP0=0, select bank0
 11911  00D8  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 11912  00D9  1683               	bsf	3,5	;RP0=1, select bank1
 11913  00DA  0829               	movf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128),w
 11914  00DB  1283               	bcf	3,5	;RP0=0, select bank0
 11915  00DC  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 11916  00DD  1683               	bsf	3,5	;RP0=1, select bank1
 11917  00DE  0828               	movf	EEPROM_24C1025_Write_Int@mem_add^(0+128),w
 11918  00DF  1283               	bcf	3,5	;RP0=0, select bank0
 11919  00E0  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 11920  00E1  3002               	movlw	2
 11921  00E2  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 11922  00E3  30AF               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 11923  00E4  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 11924  00E5  01A8               	clrf	EEPROM_24C1025_Write_Buffer@data+1
 11925  00E6  1683               	bsf	3,5	;RP0=1, select bank1
 11926  00E7  082E               	movf	EEPROM_24C1025_Write_Int@chip_add^(0+128),w
 11927  00E8  120A  158A  2E53   	ljmp	_EEPROM_24C1025_Write_Buffer
 11928  00EB                     __end_of_EEPROM_24C1025_Write_Int:	
 11929  00EB                     __ptext27:	
 11930 ;; *************** function ___flmul *****************
 11931 ;; Defined at:
 11932 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
 11933 ;; Parameters:    Size  Location     Type
 11934 ;;  b               4   53[BANK0 ] long 
 11935 ;;  a               4   57[BANK0 ] long 
 11936 ;; Auto vars:     Size  Location     Type
 11937 ;;  prod            4   72[BANK0 ] struct .
 11938 ;;  grs             4   68[BANK0 ] unsigned long 
 11939 ;;  temp            2   76[BANK0 ] struct .
 11940 ;;  bexp            1   67[BANK0 ] unsigned char 
 11941 ;;  aexp            1   66[BANK0 ] unsigned char 
 11942 ;;  sign            1   65[BANK0 ] unsigned char 
 11943 ;; Return value:  Size  Location     Type
 11944 ;;                  4   53[BANK0 ] unsigned char 
 11945 ;; Registers used:
 11946 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11947 ;; Tracked objects:
 11948 ;;		On entry : 300/0
 11949 ;;		On exit  : 300/0
 11950 ;;		Unchanged: 0/0
 11951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11952 ;;      Params:         0       8       0       0       0
 11953 ;;      Locals:         0      13       0       0       0
 11954 ;;      Temps:          0       4       0       0       0
 11955 ;;      Totals:         0      25       0       0       0
 11956 ;;Total ram usage:       25 bytes
 11957 ;; Hardware stack levels used:    1
 11958 ;; Hardware stack levels required when called:    2
 11959 ;; This function calls:
 11960 ;;		__Umul8_16
 11961 ;; This function is called by:
 11962 ;;		_Decodify_Command
 11963 ;;		_Save_Log
 11964 ;;		_ADC_Read_NTC
 11965 ;;		_log
 11966 ;;		_eval_poly
 11967 ;; This function uses a non-reentrant model
 11968 ;;
 11969                           
 11970                           
 11971                           ;psect for function ___flmul
 11972  00EB                     ___flmul:	
 11973                           
 11974                           ;incstack = 0
 11975                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 11976  00EB  0858               	movf	___flmul@b+3,w
 11977  00EC  00E1               	movwf	___flmul@sign
 11978  00ED  3080               	movlw	128
 11979  00EE  05E1               	andwf	___flmul@sign,f
 11980  00EF  1003               	clrc
 11981  00F0  0D58               	rlf	___flmul@b+3,w
 11982  00F1  00E3               	movwf	___flmul@bexp
 11983  00F2  1BD7               	btfsc	___flmul@b+2,7
 11984  00F3  1463               	bsf	___flmul@bexp,0
 11985  00F4  0863               	movf	___flmul@bexp,w
 11986  00F5  1903               	btfsc	3,2
 11987  00F6  28FF               	goto	l1376
 11988  00F7  0F63               	incfsz	___flmul@bexp,w
 11989  00F8  28FD               	goto	l1377
 11990  00F9  01D5               	clrf	___flmul@b
 11991  00FA  01D6               	clrf	___flmul@b+1
 11992  00FB  01D7               	clrf	___flmul@b+2
 11993  00FC  01D8               	clrf	___flmul@b+3
 11994  00FD                     l1377:	
 11995  00FD  17D7               	bsf	___flmul@b+2,7
 11996  00FE  2903               	goto	l6032
 11997  00FF                     l1376:	
 11998  00FF  01D5               	clrf	___flmul@b
 11999  0100  01D6               	clrf	___flmul@b+1
 12000  0101  01D7               	clrf	___flmul@b+2
 12001  0102  01D8               	clrf	___flmul@b+3
 12002  0103                     l6032:	
 12003  0103  085C               	movf	___flmul@a+3,w
 12004  0104  3980               	andlw	128
 12005  0105  06E1               	xorwf	___flmul@sign,f
 12006  0106  1003               	clrc
 12007  0107  0D5C               	rlf	___flmul@a+3,w
 12008  0108  00E2               	movwf	___flmul@aexp
 12009  0109  1BDB               	btfsc	___flmul@a+2,7
 12010  010A  1462               	bsf	___flmul@aexp,0
 12011  010B  0862               	movf	___flmul@aexp,w
 12012  010C  1903               	btfsc	3,2
 12013  010D  2916               	goto	l1380
 12014  010E  0F62               	incfsz	___flmul@aexp,w
 12015  010F  2914               	goto	l1381
 12016  0110  01D9               	clrf	___flmul@a
 12017  0111  01DA               	clrf	___flmul@a+1
 12018  0112  01DB               	clrf	___flmul@a+2
 12019  0113  01DC               	clrf	___flmul@a+3
 12020  0114                     l1381:	
 12021  0114  17DB               	bsf	___flmul@a+2,7
 12022  0115  291A               	goto	l6044
 12023  0116                     l1380:	
 12024  0116  01D9               	clrf	___flmul@a
 12025  0117  01DA               	clrf	___flmul@a+1
 12026  0118  01DB               	clrf	___flmul@a+2
 12027  0119  01DC               	clrf	___flmul@a+3
 12028  011A                     l6044:	
 12029  011A  0862               	movf	___flmul@aexp,w
 12030  011B  1D03               	btfss	3,2
 12031  011C  0863               	movf	___flmul@bexp,w
 12032  011D  1D03               	btfss	3,2
 12033  011E  2924               	goto	l6048
 12034  011F  01D5               	clrf	?___flmul
 12035  0120  01D6               	clrf	?___flmul+1
 12036  0121  01D7               	clrf	?___flmul+2
 12037  0122  01D8               	clrf	?___flmul+3
 12038  0123  0008               	return
 12039  0124                     l6048:	
 12040  0124  0855               	movf	___flmul@b,w
 12041  0125  00A0               	movwf	__Umul8_16@multiplicand
 12042  0126  085B               	movf	___flmul@a+2,w
 12043  0127  223F  120A  118A   	fcall	__Umul8_16
 12044  012A  0821               	movf	?__Umul8_16+1,w
 12045  012B  00ED               	movwf	___flmul@temp+1
 12046  012C  0820               	movf	?__Umul8_16,w
 12047  012D  00EC               	movwf	___flmul@temp
 12048  012E  00E4               	movwf	___flmul@grs
 12049  012F  01E5               	clrf	___flmul@grs+1
 12050  0130  01E6               	clrf	___flmul@grs+2
 12051  0131  01E7               	clrf	___flmul@grs+3
 12052  0132  086D               	movf	___flmul@temp+1,w
 12053  0133  00E8               	movwf	___flmul@prod
 12054  0134  01E9               	clrf	___flmul@prod+1
 12055  0135  01EA               	clrf	___flmul@prod+2
 12056  0136  01EB               	clrf	___flmul@prod+3
 12057  0137  0856               	movf	___flmul@b+1,w
 12058  0138  00A0               	movwf	__Umul8_16@multiplicand
 12059  0139  085A               	movf	___flmul@a+1,w
 12060  013A  223F  120A  118A   	fcall	__Umul8_16
 12061  013D  2319  120A  118A   	fcall	PL22	;call to abstracted procedure
 12062  0140  1803               	skipnc
 12063  0141  07E9               	addwf	___flmul@prod+1,f
 12064  0142  1803               	skipnc
 12065  0143  07EA               	addwf	___flmul@prod+2,f
 12066  0144  1803               	skipnc
 12067  0145  07EB               	addwf	___flmul@prod+3,f
 12068  0146  0857               	movf	___flmul@b+2,w
 12069  0147  00A0               	movwf	__Umul8_16@multiplicand
 12070  0148  0859               	movf	___flmul@a,w
 12071  0149  223F  120A  118A   	fcall	__Umul8_16
 12072  014C  2319  120A  118A   	fcall	PL22	;call to abstracted procedure
 12073  014F  2328  120A  118A   	fcall	PL26	;call to abstracted procedure
 12074  0152  0856               	movf	___flmul@b+1,w
 12075  0153  00A0               	movwf	__Umul8_16@multiplicand
 12076  0154  0859               	movf	___flmul@a,w
 12077  0155  223F  120A  118A   	fcall	__Umul8_16
 12078  0158  22B4  120A  118A   	fcall	PL4	;call to abstracted procedure
 12079  015B  1803               	skipnc
 12080  015C  3E01               	addlw	1
 12081  015D  1D03               	btfss	3,2
 12082  015E  07E7               	addwf	___flmul@grs+3,f
 12083  015F  0855               	movf	___flmul@b,w
 12084  0160  00A0               	movwf	__Umul8_16@multiplicand
 12085  0161  085A               	movf	___flmul@a+1,w
 12086  0162  223F  120A  118A   	fcall	__Umul8_16
 12087  0165  22B4  120A  118A   	fcall	PL4	;call to abstracted procedure
 12088  0168  1803               	skipnc
 12089  0169  3E01               	addlw	1
 12090  016A  1D03               	btfss	3,2
 12091  016B  07E7               	addwf	___flmul@grs+3,f
 12092  016C  0866               	movf	___flmul@grs+2,w
 12093  016D  00E7               	movwf	___flmul@grs+3
 12094  016E  0865               	movf	___flmul@grs+1,w
 12095  016F  00E6               	movwf	___flmul@grs+2
 12096  0170  0864               	movf	___flmul@grs,w
 12097  0171  00E5               	movwf	___flmul@grs+1
 12098  0172  01E4               	clrf	___flmul@grs
 12099  0173  0855               	movf	___flmul@b,w
 12100  0174  00A0               	movwf	__Umul8_16@multiplicand
 12101  0175  0859               	movf	___flmul@a,w
 12102  0176  223F  120A  118A   	fcall	__Umul8_16
 12103  0179  22B4  120A  118A   	fcall	PL4	;call to abstracted procedure
 12104  017C  1803               	skipnc
 12105  017D  3E01               	addlw	1
 12106  017E  1D03               	btfss	3,2
 12107  017F  07E7               	addwf	___flmul@grs+3,f
 12108  0180  0856               	movf	___flmul@b+1,w
 12109  0181  00A0               	movwf	__Umul8_16@multiplicand
 12110  0182  085B               	movf	___flmul@a+2,w
 12111  0183  223F  120A  118A   	fcall	__Umul8_16
 12112  0186  0821               	movf	?__Umul8_16+1,w
 12113  0187  22CE  120A  118A   	fcall	PL8	;call to abstracted procedure
 12114  018A  22F8  120A  118A   	fcall	PL14	;call to abstracted procedure
 12115  018D  234A  120A  118A   	fcall	PL60	;call to abstracted procedure
 12116  0190  085A               	movf	___flmul@a+1,w
 12117  0191  223F  120A  118A   	fcall	__Umul8_16
 12118  0194  0821               	movf	?__Umul8_16+1,w
 12119  0195  22CE  120A  118A   	fcall	PL8	;call to abstracted procedure
 12120  0198  22F8  120A  118A   	fcall	PL14	;call to abstracted procedure
 12121  019B  234A  120A  118A   	fcall	PL60	;call to abstracted procedure
 12122  019E  085B               	movf	___flmul@a+2,w
 12123  019F  223F  120A  118A   	fcall	__Umul8_16
 12124  01A2  0821               	movf	?__Umul8_16+1,w
 12125  01A3  22CE  120A  118A   	fcall	PL8	;call to abstracted procedure
 12126  01A6  085F               	movf	??___flmul+2,w
 12127  01A7  00E0               	movwf	??___flmul+3
 12128  01A8  085E               	movf	??___flmul+1,w
 12129  01A9  00DF               	movwf	??___flmul+2
 12130  01AA  085D               	movf	??___flmul,w
 12131  01AB  00DE               	movwf	??___flmul+1
 12132  01AC  01DD               	clrf	??___flmul
 12133  01AD  22F8  120A  118A   	fcall	PL14	;call to abstracted procedure
 12134  01B0  1803               	skipnc
 12135  01B1  3E01               	addlw	1
 12136  01B2  1D03               	btfss	3,2
 12137  01B3  07EB               	addwf	___flmul@prod+3,f
 12138  01B4  0867               	movf	___flmul@grs+3,w
 12139  01B5  07E8               	addwf	___flmul@prod,f
 12140  01B6  3001               	movlw	1
 12141  01B7  2328  120A  118A   	fcall	PL26	;call to abstracted procedure
 12142  01BA  0863               	movf	___flmul@bexp,w
 12143  01BB  00EC               	movwf	___flmul@temp
 12144  01BC  01ED               	clrf	___flmul@temp+1
 12145  01BD  0862               	movf	___flmul@aexp,w
 12146  01BE  07EC               	addwf	___flmul@temp,f
 12147  01BF  1803               	skipnc
 12148  01C0  0AED               	incf	___flmul@temp+1,f
 12149  01C1  3082               	movlw	-126
 12150  01C2                     L14:	
 12151  01C2  07EC               	addwf	___flmul@temp,f
 12152  01C3  1C03               	skipc
 12153  01C4  03ED               	decf	___flmul@temp+1,f
 12154  01C5  1BEA               	btfsc	___flmul@prod+2,7
 12155  01C6  29D5               	goto	l6096
 12156  01C7  1003               	clrc
 12157  01C8  0DE8               	rlf	___flmul@prod,f
 12158  01C9  0DE9               	rlf	___flmul@prod+1,f
 12159  01CA  0DEA               	rlf	___flmul@prod+2,f
 12160  01CB  0DEB               	rlf	___flmul@prod+3,f
 12161  01CC  1BE7               	btfsc	___flmul@grs+3,7
 12162  01CD  1468               	bsf	___flmul@prod,0
 12163  01CE  30FF               	movlw	-1
 12164  01CF  1003               	clrc
 12165  01D0  0DE4               	rlf	___flmul@grs,f
 12166  01D1  0DE5               	rlf	___flmul@grs+1,f
 12167  01D2  0DE6               	rlf	___flmul@grs+2,f
 12168  01D3  0DE7               	rlf	___flmul@grs+3,f
 12169  01D4  29C2               	goto	L14
 12170  01D5                     l6096:	
 12171  01D5  01E2               	clrf	___flmul@aexp
 12172  01D6  1FE7               	btfss	___flmul@grs+3,7
 12173  01D7  29EA               	goto	l6106
 12174  01D8  0864               	movf	___flmul@grs,w
 12175  01D9  00DD               	movwf	??___flmul
 12176  01DA  0865               	movf	___flmul@grs+1,w
 12177  01DB  00DE               	movwf	??___flmul+1
 12178  01DC  0866               	movf	___flmul@grs+2,w
 12179  01DD  00DF               	movwf	??___flmul+2
 12180  01DE  307F               	movlw	127
 12181  01DF  0567               	andwf	___flmul@grs+3,w
 12182  01E0  00E0               	movwf	??___flmul+3
 12183  01E1  045F               	iorwf	??___flmul+2,w
 12184  01E2  045E               	iorwf	??___flmul+1,w
 12185  01E3  045D               	iorwf	??___flmul,w
 12186  01E4  1903               	skipnz
 12187  01E5  1868               	btfsc	___flmul@prod,0
 12188  01E6  29E8               	goto	l6102
 12189  01E7  29EA               	goto	l6106
 12190  01E8                     l6102:	
 12191  01E8  01E2               	clrf	___flmul@aexp
 12192  01E9  0AE2               	incf	___flmul@aexp,f
 12193  01EA                     l6106:	
 12194  01EA  0862               	movf	___flmul@aexp,w
 12195  01EB  1903               	btfsc	3,2
 12196  01EC  29FE               	goto	l6116
 12197  01ED  0AE8               	incf	___flmul@prod,f
 12198  01EE  1903               	skipnz
 12199  01EF  0AE9               	incf	___flmul@prod+1,f
 12200  01F0  1903               	skipnz
 12201  01F1  0AEA               	incf	___flmul@prod+2,f
 12202  01F2  1903               	skipnz
 12203  01F3  0AEB               	incf	___flmul@prod+3,f
 12204  01F4  1C6B               	btfss	___flmul@prod+3,0
 12205  01F5  29FE               	goto	l6116
 12206  01F6  0D6B               	rlf	___flmul@prod+3,w
 12207  01F7  0CEB               	rrf	___flmul@prod+3,f
 12208  01F8  0CEA               	rrf	___flmul@prod+2,f
 12209  01F9  0CE9               	rrf	___flmul@prod+1,f
 12210  01FA  0CE8               	rrf	___flmul@prod,f
 12211  01FB  0AEC               	incf	___flmul@temp,f
 12212  01FC  1903               	skipnz
 12213  01FD  0AED               	incf	___flmul@temp+1,f
 12214  01FE                     l6116:	
 12215  01FE  086D               	movf	___flmul@temp+1,w
 12216  01FF  3A80               	xorlw	128
 12217  0200  00FF               	movwf	127
 12218  0201  3080               	movlw	128
 12219  0202  027F               	subwf	127,w
 12220  0203  1D03               	skipz
 12221  0204  2A07               	goto	u5445
 12222  0205  30FF               	movlw	255
 12223  0206  026C               	subwf	___flmul@temp,w
 12224  0207                     u5445:	
 12225  0207  1C03               	skipc
 12226  0208  2A12               	goto	l6120
 12227  0209  307F               	movlw	127
 12228  020A  1283               	bcf	3,5	;RP0=0, select bank0
 12229  020B  1303               	bcf	3,6	;RP1=0, select bank0
 12230  020C  00EB               	movwf	___flmul@prod+3
 12231  020D  3080               	movlw	128
 12232  020E  00EA               	movwf	___flmul@prod+2
 12233  020F  01E9               	clrf	___flmul@prod+1
 12234  0210  01E8               	clrf	___flmul@prod
 12235  0211  2A34               	goto	l1398
 12236  0212                     l6120:	
 12237  0212  1283               	bcf	3,5	;RP0=0, select bank0
 12238  0213  1303               	bcf	3,6	;RP1=0, select bank0
 12239  0214  086D               	movf	___flmul@temp+1,w
 12240  0215  3A80               	xorlw	128
 12241  0216  00FF               	movwf	127
 12242  0217  3080               	movlw	128
 12243  0218  027F               	subwf	127,w
 12244  0219  1D03               	skipz
 12245  021A  2A1D               	goto	u5455
 12246  021B  3001               	movlw	1
 12247  021C  026C               	subwf	___flmul@temp,w
 12248  021D                     u5455:	
 12249  021D  1803               	skipnc
 12250  021E  2A27               	goto	l6126
 12251  021F  1283               	bcf	3,5	;RP0=0, select bank0
 12252  0220  1303               	bcf	3,6	;RP1=0, select bank0
 12253  0221  01E8               	clrf	___flmul@prod
 12254  0222  01E9               	clrf	___flmul@prod+1
 12255  0223  01EA               	clrf	___flmul@prod+2
 12256  0224  01EB               	clrf	___flmul@prod+3
 12257  0225  01E1               	clrf	___flmul@sign
 12258  0226  2A34               	goto	l1398
 12259  0227                     l6126:	
 12260  0227  1283               	bcf	3,5	;RP0=0, select bank0
 12261  0228  1303               	bcf	3,6	;RP1=0, select bank0
 12262  0229  086C               	movf	___flmul@temp,w
 12263  022A  00E3               	movwf	___flmul@bexp
 12264  022B  307F               	movlw	127
 12265  022C  05EA               	andwf	___flmul@prod+2,f
 12266  022D  3000               	movlw	0
 12267  022E  01EB               	clrf	___flmul@prod+3
 12268  022F  1863               	btfsc	___flmul@bexp,0
 12269  0230  17EA               	bsf	___flmul@prod+2,7
 12270  0231  1003               	clrc
 12271  0232  0C63               	rrf	___flmul@bexp,w
 12272  0233  00EB               	movwf	___flmul@prod+3
 12273  0234                     l1398:	
 12274  0234  0861               	movf	___flmul@sign,w
 12275  0235  04EB               	iorwf	___flmul@prod+3,f
 12276  0236  086B               	movf	___flmul@prod+3,w
 12277  0237  00D8               	movwf	?___flmul+3
 12278  0238  086A               	movf	___flmul@prod+2,w
 12279  0239  00D7               	movwf	?___flmul+2
 12280  023A  0869               	movf	___flmul@prod+1,w
 12281  023B  00D6               	movwf	?___flmul+1
 12282  023C  0868               	movf	___flmul@prod,w
 12283  023D  00D5               	movwf	?___flmul
 12284  023E  0008               	return
 12285  023F                     __end_of___flmul:	
 12286  023F                     __ptext28:	
 12287 ;; *************** function __Umul8_16 *****************
 12288 ;; Defined at:
 12289 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
 12290 ;; Parameters:    Size  Location     Type
 12291 ;;  multiplier      1    wreg     unsigned char 
 12292 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 12293 ;; Auto vars:     Size  Location     Type
 12294 ;;  multiplier      1    7[BANK0 ] unsigned char 
 12295 ;;  word_mpld       2    5[BANK0 ] unsigned int 
 12296 ;;  product         2    3[BANK0 ] unsigned int 
 12297 ;; Return value:  Size  Location     Type
 12298 ;;                  2    0[BANK0 ] unsigned int 
 12299 ;; Registers used:
 12300 ;;		wreg, status,2, status,0
 12301 ;; Tracked objects:
 12302 ;;		On entry : 300/0
 12303 ;;		On exit  : 300/0
 12304 ;;		Unchanged: 0/0
 12305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12306 ;;      Params:         0       3       0       0       0
 12307 ;;      Locals:         0       5       0       0       0
 12308 ;;      Temps:          0       0       0       0       0
 12309 ;;      Totals:         0       8       0       0       0
 12310 ;;Total ram usage:        8 bytes
 12311 ;; Hardware stack levels used:    1
 12312 ;; Hardware stack levels required when called:    1
 12313 ;; This function calls:
 12314 ;;		Nothing
 12315 ;; This function is called by:
 12316 ;;		___flmul
 12317 ;; This function uses a non-reentrant model
 12318 ;;
 12319                           
 12320                           
 12321                           ;psect for function __Umul8_16
 12322  023F                     __Umul8_16:	
 12323                           
 12324                           ;incstack = 0
 12325                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 12326                           ;__Umul8_16@multiplier stored from wreg
 12327  023F  00A7               	movwf	__Umul8_16@multiplier
 12328  0240  01A3               	clrf	__Umul8_16@product
 12329  0241  01A4               	clrf	__Umul8_16@product+1
 12330  0242  0820               	movf	__Umul8_16@multiplicand,w
 12331  0243  00A5               	movwf	__Umul8_16@word_mpld
 12332  0244  01A6               	clrf	__Umul8_16@word_mpld+1
 12333  0245                     l5988:	
 12334  0245  1C27               	btfss	__Umul8_16@multiplier,0
 12335  0246  2A4D               	goto	l5992
 12336  0247  0825               	movf	__Umul8_16@word_mpld,w
 12337  0248  07A3               	addwf	__Umul8_16@product,f
 12338  0249  1803               	skipnc
 12339  024A  0AA4               	incf	__Umul8_16@product+1,f
 12340  024B  0826               	movf	__Umul8_16@word_mpld+1,w
 12341  024C  07A4               	addwf	__Umul8_16@product+1,f
 12342  024D                     l5992:	
 12343  024D  1003               	clrc
 12344  024E  0DA5               	rlf	__Umul8_16@word_mpld,f
 12345  024F  0DA6               	rlf	__Umul8_16@word_mpld+1,f
 12346  0250  1003               	clrc
 12347  0251  0CA7               	rrf	__Umul8_16@multiplier,f
 12348  0252  0827               	movf	__Umul8_16@multiplier,w
 12349  0253  1D03               	btfss	3,2
 12350  0254  2A45               	goto	l5988
 12351  0255  0824               	movf	__Umul8_16@product+1,w
 12352  0256  00A1               	movwf	?__Umul8_16+1
 12353  0257  0823               	movf	__Umul8_16@product,w
 12354  0258  00A0               	movwf	?__Umul8_16
 12355  0259  0008               	return
 12356  025A                     __end_of__Umul8_16:	
 12357  025A                     __ptext26:	
 12358 ;; *************** function ___fltol *****************
 12359 ;; Defined at:
 12360 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;  f1              4    0[BANK1 ] void 
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;  exp1            1   79[BANK0 ] unsigned char 
 12365 ;;  sign1           1   78[BANK0 ] unsigned char 
 12366 ;; Return value:  Size  Location     Type
 12367 ;;                  4    0[BANK1 ] long 
 12368 ;; Registers used:
 12369 ;;		wreg, status,2, status,0
 12370 ;; Tracked objects:
 12371 ;;		On entry : 300/100
 12372 ;;		On exit  : 200/0
 12373 ;;		Unchanged: 0/0
 12374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12375 ;;      Params:         0       0       4       0       0
 12376 ;;      Locals:         0       2       0       0       0
 12377 ;;      Temps:          0       0       4       0       0
 12378 ;;      Totals:         0       2       8       0       0
 12379 ;;Total ram usage:       10 bytes
 12380 ;; Hardware stack levels used:    1
 12381 ;; Hardware stack levels required when called:    1
 12382 ;; This function calls:
 12383 ;;		Nothing
 12384 ;; This function is called by:
 12385 ;;		_Decodify_Command
 12386 ;;		_Save_Log
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           
 12391                           ;psect for function ___fltol
 12392  025A                     ___fltol:	
 12393                           
 12394                           ;incstack = 0
 12395                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 12396  025A  1003               	clrc
 12397  025B  0D22               	rlf	(___fltol@f1+2)^(0+128),w
 12398  025C  0D23               	rlf	(___fltol@f1+3)^(0+128),w
 12399  025D  1283               	bcf	3,5	;RP0=0, select bank0
 12400  025E  00EF               	movwf	___fltol@exp1
 12401  025F  086F               	movf	___fltol@exp1,w
 12402  0260  1D03               	btfss	3,2
 12403  0261  2A68               	goto	l4644
 12404  0262                     l4642:	
 12405  0262  1683               	bsf	3,5	;RP0=1, select bank1
 12406  0263  01A0               	clrf	?___fltol^(0+128)
 12407  0264  01A1               	clrf	(?___fltol+1)^(0+128)
 12408  0265  01A2               	clrf	(?___fltol+2)^(0+128)
 12409  0266  01A3               	clrf	(?___fltol+3)^(0+128)
 12410  0267  0008               	return
 12411  0268                     l4644:	
 12412  0268  1683               	bsf	3,5	;RP0=1, select bank1
 12413  0269  0820               	movf	___fltol@f1^(0+128),w
 12414  026A  00A4               	movwf	??___fltol^(0+128)
 12415  026B  0821               	movf	(___fltol@f1+1)^(0+128),w
 12416  026C  00A5               	movwf	(??___fltol^(0+128)+1)
 12417  026D  0822               	movf	(___fltol@f1+2)^(0+128),w
 12418  026E  00A6               	movwf	(??___fltol^(0+128)+2)
 12419  026F  0823               	movf	(___fltol@f1+3)^(0+128),w
 12420  0270  00A7               	movwf	(??___fltol^(0+128)+3)
 12421  0271  301F               	movlw	31
 12422  0272                     u3875:	
 12423  0272  1003               	clrc
 12424  0273  0CA7               	rrf	(??___fltol^(0+128)+3),f
 12425  0274  0CA6               	rrf	(??___fltol^(0+128)+2),f
 12426  0275  0CA5               	rrf	(??___fltol^(0+128)+1),f
 12427  0276  0CA4               	rrf	??___fltol^(0+128),f
 12428  0277  3EFF               	addlw	-1
 12429  0278  1D03               	skipz
 12430  0279  2A72               	goto	u3875
 12431  027A  0824               	movf	??___fltol^(0+128),w
 12432  027B  1283               	bcf	3,5	;RP0=0, select bank0
 12433  027C  00EE               	movwf	___fltol@sign1
 12434  027D  1683               	bsf	3,5	;RP0=1, select bank1
 12435  027E  3096               	movlw	150
 12436  027F  17A2               	bsf	(___fltol@f1^(0+128)+2),7
 12437  0280  01A3               	clrf	(___fltol@f1+3)^(0+128)
 12438  0281  1283               	bcf	3,5	;RP0=0, select bank0
 12439  0282  02EF               	subwf	___fltol@exp1,f
 12440  0283  1FEF               	btfss	___fltol@exp1,7
 12441  0284  2A94               	goto	l4662
 12442  0285  086F               	movf	___fltol@exp1,w
 12443  0286  3A80               	xorlw	128
 12444  0287  3E97               	addlw	151
 12445  0288  1C03               	btfss	3,0
 12446  0289  2A62               	goto	l4642
 12447  028A                     l4658:	
 12448  028A  1003               	clrc
 12449  028B  1683               	bsf	3,5	;RP0=1, select bank1
 12450  028C  0CA3               	rrf	(___fltol@f1+3)^(0+128),f
 12451  028D  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
 12452  028E  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
 12453  028F  0CA0               	rrf	___fltol@f1^(0+128),f
 12454  0290  1283               	bcf	3,5	;RP0=0, select bank0
 12455  0291  0FEF               	incfsz	___fltol@exp1,f
 12456  0292  2A8A               	goto	l4658
 12457  0293  2AA4               	goto	l4670
 12458  0294                     l4662:	
 12459  0294  3020               	movlw	32
 12460  0295  026F               	subwf	___fltol@exp1,w
 12461  0296  1803               	btfsc	3,0
 12462  0297  2A62               	goto	l4642
 12463  0298                     l4668:	
 12464  0298  086F               	movf	___fltol@exp1,w
 12465  0299  1903               	btfsc	3,2
 12466  029A  2AA4               	goto	l4670
 12467  029B  1003               	clrc
 12468  029C  1683               	bsf	3,5	;RP0=1, select bank1
 12469  029D  0DA0               	rlf	___fltol@f1^(0+128),f
 12470  029E  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
 12471  029F  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
 12472  02A0  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
 12473  02A1  1283               	bcf	3,5	;RP0=0, select bank0
 12474  02A2  03EF               	decf	___fltol@exp1,f
 12475  02A3  2A98               	goto	l4668
 12476  02A4                     l4670:	
 12477  02A4  086E               	movf	___fltol@sign1,w
 12478  02A5  1903               	btfsc	3,2
 12479  02A6  0008               	return
 12480  02A7  1683               	bsf	3,5	;RP0=1, select bank1
 12481  02A8  09A0               	comf	___fltol@f1^(0+128),f
 12482  02A9  09A1               	comf	(___fltol@f1+1)^(0+128),f
 12483  02AA  09A2               	comf	(___fltol@f1+2)^(0+128),f
 12484  02AB  09A3               	comf	(___fltol@f1+3)^(0+128),f
 12485  02AC  0AA0               	incf	___fltol@f1^(0+128),f
 12486  02AD  1903               	skipnz
 12487  02AE  0AA1               	incf	(___fltol@f1+1)^(0+128),f
 12488  02AF  1903               	skipnz
 12489  02B0  0AA2               	incf	(___fltol@f1+2)^(0+128),f
 12490  02B1  1903               	skipnz
 12491  02B2  0AA3               	incf	(___fltol@f1+3)^(0+128),f
 12492  02B3  0008               	return
 12493  02B4                     __end_of___fltol:	
 12494  02B4                     PL4:	
 12495  02B4  0821               	movf	?__Umul8_16+1,w
 12496  02B5  00ED               	movwf	___flmul@temp+1
 12497  02B6  0820               	movf	?__Umul8_16,w
 12498  02B7  00EC               	movwf	___flmul@temp
 12499  02B8  00DD               	movwf	??___flmul
 12500  02B9  086D               	movf	___flmul@temp+1,w
 12501  02BA  00DE               	movwf	??___flmul+1
 12502  02BB  01DF               	clrf	??___flmul+2
 12503  02BC  01E0               	clrf	??___flmul+3
 12504  02BD  085D               	movf	??___flmul,w
 12505  02BE  07E4               	addwf	___flmul@grs,f
 12506  02BF  085E               	movf	??___flmul+1,w
 12507  02C0  1103               	clrz
 12508  02C1  1803               	skipnc
 12509  02C2  3E01               	addlw	1
 12510  02C3  1D03               	btfss	3,2
 12511  02C4  07E5               	addwf	___flmul@grs+1,f
 12512  02C5  085F               	movf	??___flmul+2,w
 12513  02C6  1103               	clrz
 12514  02C7  1803               	skipnc
 12515  02C8  3E01               	addlw	1
 12516  02C9  1D03               	btfss	3,2
 12517  02CA  07E6               	addwf	___flmul@grs+2,f
 12518  02CB  0860               	movf	??___flmul+3,w
 12519  02CC  1103               	clrz
 12520  02CD  0008               	return
 12521  02CE                     __end_ofPL4:	
 12522  02CE                     PL8:	
 12523  02CE  00ED               	movwf	___flmul@temp+1
 12524  02CF  0820               	movf	?__Umul8_16,w
 12525  02D0  00EC               	movwf	___flmul@temp
 12526  02D1  00DD               	movwf	??___flmul
 12527  02D2  086D               	movf	___flmul@temp+1,w
 12528  02D3  00DE               	movwf	??___flmul+1
 12529  02D4  01DF               	clrf	??___flmul+2
 12530  02D5  01E0               	clrf	??___flmul+3
 12531  02D6  0008               	return
 12532  02D7                     __end_ofPL8:	
 12533  02D7                     PL12:	
 12534  02D7  3002               	movlw	2
 12535  02D8  1683               	bsf	3,5	;RP0=1, select bank1
 12536  02D9  1303               	bcf	3,6	;RP1=0, select bank1
 12537  02DA  00B5               	movwf	??_Save_Log^(0+128)
 12538  02DB  01B6               	clrf	(??_Save_Log^(0+128)+1)
 12539  02DC  01B7               	clrf	(??_Save_Log^(0+128)+2)
 12540  02DD  01B8               	clrf	(??_Save_Log^(0+128)+3)
 12541  02DE  0831               	movf	Save_Log@add_datalog^(0+128),w
 12542  02DF  07B5               	addwf	??_Save_Log^(0+128),f
 12543  02E0  0832               	movf	(Save_Log@add_datalog+1)^(0+128),w
 12544  02E1  1803               	skipnc
 12545  02E2  0F32               	incfsz	(Save_Log@add_datalog+1)^(0+128),w
 12546  02E3  07B6               	addwf	(??_Save_Log^(0+128)+1),f
 12547  02E4  0833               	movf	(Save_Log@add_datalog+2)^(0+128),w
 12548  02E5  1803               	skipnc
 12549  02E6  0F33               	incfsz	(Save_Log@add_datalog+2)^(0+128),w
 12550  02E7  07B7               	addwf	(??_Save_Log^(0+128)+2),f
 12551  02E8  0834               	movf	(Save_Log@add_datalog+3)^(0+128),w
 12552  02E9  1803               	skipnc
 12553  02EA  0A34               	incf	(Save_Log@add_datalog+3)^(0+128),w
 12554  02EB  07B8               	addwf	(??_Save_Log^(0+128)+3),f
 12555  02EC  0838               	movf	(??_Save_Log+3)^(0+128),w
 12556  02ED  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
 12557  02EE  0837               	movf	(??_Save_Log+2)^(0+128),w
 12558  02EF  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
 12559  02F0  0836               	movf	(??_Save_Log+1)^(0+128),w
 12560  02F1  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
 12561  02F2  0835               	movf	??_Save_Log^(0+128),w
 12562  02F3  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
 12563  02F4  30FF               	movlw	255
 12564  02F5  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
 12565  02F6  00AD               	movwf	(EEPROM_24C1025_Write_Int@data^(0+128)+1)
 12566  02F7  0008               	return
 12567  02F8                     __end_ofPL12:	
 12568  02F8                     PL14:	
 12569  02F8  085D               	movf	??___flmul,w
 12570  02F9  07E8               	addwf	___flmul@prod,f
 12571  02FA  085E               	movf	??___flmul+1,w
 12572  02FB  1103               	clrz
 12573  02FC  1803               	skipnc
 12574  02FD  3E01               	addlw	1
 12575  02FE  1D03               	btfss	3,2
 12576  02FF  07E9               	addwf	___flmul@prod+1,f
 12577  0300  085F               	movf	??___flmul+2,w
 12578  0301  1103               	clrz
 12579  0302  1803               	skipnc
 12580  0303  3E01               	addlw	1
 12581  0304  1D03               	btfss	3,2
 12582  0305  07EA               	addwf	___flmul@prod+2,f
 12583  0306  0860               	movf	??___flmul+3,w
 12584  0307  1103               	clrz
 12585  0308  0008               	return
 12586  0309                     __end_ofPL14:	
 12587  0309                     PL20:	
 12588  0309  0858               	movf	?___flmul+3,w
 12589  030A  1683               	bsf	3,5	;RP0=1, select bank1
 12590  030B  00A3               	movwf	(___fltol@f1+3)^(0+128)
 12591  030C  1283               	bcf	3,5	;RP0=0, select bank0
 12592  030D  0857               	movf	?___flmul+2,w
 12593  030E  1683               	bsf	3,5	;RP0=1, select bank1
 12594  030F  00A2               	movwf	(___fltol@f1+2)^(0+128)
 12595  0310  1283               	bcf	3,5	;RP0=0, select bank0
 12596  0311  0856               	movf	?___flmul+1,w
 12597  0312  1683               	bsf	3,5	;RP0=1, select bank1
 12598  0313  00A1               	movwf	(___fltol@f1+1)^(0+128)
 12599  0314  1283               	bcf	3,5	;RP0=0, select bank0
 12600  0315  0855               	movf	?___flmul,w
 12601  0316  1683               	bsf	3,5	;RP0=1, select bank1
 12602  0317  00A0               	movwf	___fltol@f1^(0+128)
 12603  0318  0008               	return
 12604  0319                     __end_ofPL20:	
 12605  0319                     PL22:	
 12606  0319  0821               	movf	?__Umul8_16+1,w
 12607  031A  00ED               	movwf	___flmul@temp+1
 12608  031B  0820               	movf	?__Umul8_16,w
 12609  031C  00EC               	movwf	___flmul@temp
 12610  031D  07E4               	addwf	___flmul@grs,f
 12611  031E  3001               	movlw	1
 12612  031F  1803               	skipnc
 12613  0320  07E5               	addwf	___flmul@grs+1,f
 12614  0321  1803               	skipnc
 12615  0322  07E6               	addwf	___flmul@grs+2,f
 12616  0323  1803               	skipnc
 12617  0324  07E7               	addwf	___flmul@grs+3,f
 12618  0325  086D               	movf	___flmul@temp+1,w
 12619  0326  07E8               	addwf	___flmul@prod,f
 12620  0327  3401               	retlw	1
 12621  0328                     __end_ofPL22:	
 12622  0328                     PL26:	
 12623  0328  1803               	skipnc
 12624  0329  07E9               	addwf	___flmul@prod+1,f
 12625  032A  1803               	skipnc
 12626  032B  07EA               	addwf	___flmul@prod+2,f
 12627  032C  1803               	skipnc
 12628  032D  07EB               	addwf	___flmul@prod+3,f
 12629  032E  0866               	movf	___flmul@grs+2,w
 12630  032F  00E7               	movwf	___flmul@grs+3
 12631  0330  0865               	movf	___flmul@grs+1,w
 12632  0331  00E6               	movwf	___flmul@grs+2
 12633  0332  0864               	movf	___flmul@grs,w
 12634  0333  00E5               	movwf	___flmul@grs+1
 12635  0334  01E4               	clrf	___flmul@grs
 12636  0335  0008               	return
 12637  0336                     __end_ofPL26:	
 12638  0336                     PL38:	
 12639  0336  1283               	bcf	3,5	;RP0=0, select bank0
 12640  0337  1303               	bcf	3,6	;RP1=0, select bank0
 12641  0338  00D9               	movwf	___flmul@a
 12642  0339  3041               	movlw	65
 12643  033A  00D8               	movwf	___flmul@b+3
 12644  033B  3020               	movlw	32
 12645  033C  00D7               	movwf	___flmul@b+2
 12646  033D  01D6               	clrf	___flmul@b+1
 12647  033E  01D5               	clrf	___flmul@b
 12648  033F  0008               	return
 12649  0340                     __end_ofPL38:	
 12650  0340                     PL40:	
 12651  0340  0834               	movf	(Save_Log@add_datalog+3)^(0+128),w
 12652  0341  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
 12653  0342  0833               	movf	(Save_Log@add_datalog+2)^(0+128),w
 12654  0343  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
 12655  0344  0832               	movf	(Save_Log@add_datalog+1)^(0+128),w
 12656  0345  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
 12657  0346  0831               	movf	Save_Log@add_datalog^(0+128),w
 12658  0347  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
 12659  0348  1703               	bsf	3,6	;RP1=1, select bank3
 12660  0349  0008               	return
 12661  034A                     __end_ofPL40:	
 12662  034A                     PL60:	
 12663  034A  1803               	skipnc
 12664  034B  3E01               	addlw	1
 12665  034C  1D03               	btfss	3,2
 12666  034D  07EB               	addwf	___flmul@prod+3,f
 12667  034E  0857               	movf	___flmul@b+2,w
 12668  034F  00A0               	movwf	__Umul8_16@multiplicand
 12669  0350  0008               	return
 12670  0351                     __end_ofPL60:	
 12671                           
 12672                           	psect	text66
 12673  0351                     __ptext66:	
 12674 ;; *************** function _Auto_Relay0 *****************
 12675 ;; Defined at:
 12676 ;;		line 857 in file "SlaveLiofilizadorVer1.c"
 12677 ;; Parameters:    Size  Location     Type
 12678 ;;		None
 12679 ;; Auto vars:     Size  Location     Type
 12680 ;;		None
 12681 ;; Return value:  Size  Location     Type
 12682 ;;                  1    wreg      void 
 12683 ;; Registers used:
 12684 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12685 ;; Tracked objects:
 12686 ;;		On entry : 100/300
 12687 ;;		On exit  : 200/0
 12688 ;;		Unchanged: 0/0
 12689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12690 ;;      Params:         0       0       0       0       0
 12691 ;;      Locals:         0       0       0       0       0
 12692 ;;      Temps:          0       0       0       0       0
 12693 ;;      Totals:         0       0       0       0       0
 12694 ;;Total ram usage:        0 bytes
 12695 ;; Hardware stack levels used:    1
 12696 ;; Hardware stack levels required when called:    3
 12697 ;; This function calls:
 12698 ;;		_Rele0Desligado
 12699 ;;		_Rele0Ligado
 12700 ;;		___flge
 12701 ;;		___flsub
 12702 ;; This function is called by:
 12703 ;;		_main
 12704 ;; This function uses a non-reentrant model
 12705 ;;
 12706                           
 12707                           
 12708                           ;psect for function _Auto_Relay0
 12709  0351                     _Auto_Relay0:	
 12710                           
 12711                           ;SlaveLiofilizadorVer1.c: 858:              if(Status0==0)
 12712                           
 12713                           ;incstack = 0
 12714                           ; Regs used in _Auto_Relay0: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12715  0351  1703               	bsf	3,6	;RP1=1, select bank3
 12716  0352  0828               	movf	_Status0^(0+384),w
 12717  0353  0429               	iorwf	(_Status0+1)^(0+384),w
 12718  0354  1D03               	btfss	3,2
 12719  0355  2B57               	goto	l7052
 12720  0356                     l7050:	
 12721                           
 12722                           ;SlaveLiofilizadorVer1.c: 859:                  {;SlaveLiofilizadorVer1.c: 860:         
      +                                   Rele0Desligado();
 12723  0356  2C8C               	ljmp	l6892
 12724  0357                     l7052:	
 12725                           ;SlaveLiofilizadorVer1.c: 861:                  }
 12726                           
 12727                           
 12728                           ;SlaveLiofilizadorVer1.c: 863:                  {;SlaveLiofilizadorVer1.c: 865:         
      +                                   if (Temperatura0<=(SetPoint0-Histerese0))
 12729  0357  081F               	movf	(_Histerese0+3)^(0+384),w
 12730  0358  1283               	bcf	3,5	;RP0=0, select bank0
 12731  0359  1303               	bcf	3,6	;RP1=0, select bank0
 12732  035A  00D0               	movwf	___flsub@a+3
 12733  035B  1683               	bsf	3,5	;RP0=1, select bank3
 12734  035C  1703               	bsf	3,6	;RP1=1, select bank3
 12735  035D  081E               	movf	(_Histerese0+2)^(0+384),w
 12736  035E  1283               	bcf	3,5	;RP0=0, select bank0
 12737  035F  1303               	bcf	3,6	;RP1=0, select bank0
 12738  0360  00CF               	movwf	___flsub@a+2
 12739  0361  1683               	bsf	3,5	;RP0=1, select bank3
 12740  0362  1703               	bsf	3,6	;RP1=1, select bank3
 12741  0363  081D               	movf	(_Histerese0+1)^(0+384),w
 12742  0364  1283               	bcf	3,5	;RP0=0, select bank0
 12743  0365  1303               	bcf	3,6	;RP1=0, select bank0
 12744  0366  00CE               	movwf	___flsub@a+1
 12745  0367  1683               	bsf	3,5	;RP0=1, select bank3
 12746  0368  1703               	bsf	3,6	;RP1=1, select bank3
 12747  0369  081C               	movf	_Histerese0^(0+384),w
 12748  036A  1283               	bcf	3,5	;RP0=0, select bank0
 12749  036B  1303               	bcf	3,6	;RP1=0, select bank0
 12750  036C  00CD               	movwf	___flsub@a
 12751  036D  0873               	movf	_SetPoint0+3,w	;volatile
 12752  036E  00D4               	movwf	___flsub@b+3
 12753  036F  0872               	movf	_SetPoint0+2,w	;volatile
 12754  0370  00D3               	movwf	___flsub@b+2
 12755  0371  0871               	movf	_SetPoint0+1,w	;volatile
 12756  0372  00D2               	movwf	___flsub@b+1
 12757  0373  0870               	movf	_SetPoint0,w	;volatile
 12758  0374  00D1               	movwf	___flsub@b
 12759  0375  160A  118A  2638  120A  118A  	fcall	___flsub
 12760  037A  24E7  120A  118A   	fcall	PL36	;call to abstracted procedure
 12761  037D  24C5  120A  118A   	fcall	PL6	;call to abstracted procedure
 12762  0380  241E  120A  118A   	fcall	___flge
 12763  0383  1C03               	btfss	3,0
 12764  0384  2B91               	goto	l7058
 12765                           
 12766                           ;SlaveLiofilizadorVer1.c: 866:                     {;SlaveLiofilizadorVer1.c: 867:      
      +                                         RL0Status=1;
 12767  0385  1683               	bsf	3,5	;RP0=1, select bank3
 12768  0386  1703               	bsf	3,6	;RP1=1, select bank3
 12769  0387  01E0               	clrf	_RL0Status^(0+384)
 12770  0388  0AE0               	incf	_RL0Status^(0+384),f
 12771  0389  2B8E               	goto	l7056
 12772  038A                     l7060:	
 12773                           
 12774                           ;SlaveLiofilizadorVer1.c: 871:                           {;SlaveLiofilizadorVer1.c: 872:
      +                                                     if(RL0Status==1)
 12775  038A  1683               	bsf	3,5	;RP0=1, select bank3
 12776  038B  1703               	bsf	3,6	;RP1=1, select bank3
 12777  038C  0B60               	decfsz	_RL0Status^(0+384),w
 12778  038D  2B56               	goto	l7050
 12779  038E                     l7056:	
 12780                           
 12781                           ;SlaveLiofilizadorVer1.c: 868:                     Rele0Ligado();
 12782  038E  160A  118A  28EF   	ljmp	l6868
 12783  0391                     l7058:	
 12784                           ;SlaveLiofilizadorVer1.c: 869:                     }
 12785                           
 12786  0391  24DF  120A  118A   	fcall	PL10	;call to abstracted procedure
 12787  0394  24C5  120A  118A   	fcall	PL6	;call to abstracted procedure
 12788  0397  241E  120A  118A   	fcall	___flge
 12789  039A  1803               	btfsc	3,0
 12790  039B  2B8A               	goto	l7060
 12791  039C  24DF  120A  118A   	fcall	PL10	;call to abstracted procedure
 12792  039F  24C5  120A  118A   	fcall	PL6	;call to abstracted procedure
 12793  03A2  241E  120A  118A   	fcall	___flge
 12794  03A5  1803               	btfsc	3,0
 12795  03A6  0008               	return
 12796                           
 12797                           ;SlaveLiofilizadorVer1.c: 882:                           {;SlaveLiofilizadorVer1.c: 883:
      +                                                     RL0Status=0;
 12798  03A7  1683               	bsf	3,5	;RP0=1, select bank3
 12799  03A8  1703               	bsf	3,6	;RP1=1, select bank3
 12800  03A9  01E0               	clrf	_RL0Status^(0+384)
 12801  03AA  2B56               	goto	l7050
 12802  03AB                     __end_of_Auto_Relay0:	
 12803  03AB                     __ptext62:	
 12804 ;; *************** function _Auto_Relay1 *****************
 12805 ;; Defined at:
 12806 ;;		line 893 in file "SlaveLiofilizadorVer1.c"
 12807 ;; Parameters:    Size  Location     Type
 12808 ;;		None
 12809 ;; Auto vars:     Size  Location     Type
 12810 ;;		None
 12811 ;; Return value:  Size  Location     Type
 12812 ;;                  1    wreg      void 
 12813 ;; Registers used:
 12814 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12815 ;; Tracked objects:
 12816 ;;		On entry : 200/100
 12817 ;;		On exit  : 200/0
 12818 ;;		Unchanged: 0/0
 12819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12820 ;;      Params:         0       0       0       0       0
 12821 ;;      Locals:         0       0       0       0       0
 12822 ;;      Temps:          0       0       0       0       0
 12823 ;;      Totals:         0       0       0       0       0
 12824 ;;Total ram usage:        0 bytes
 12825 ;; Hardware stack levels used:    1
 12826 ;; Hardware stack levels required when called:    3
 12827 ;; This function calls:
 12828 ;;		_Rele1Desligado
 12829 ;;		_Rele1Ligado
 12830 ;;		___flge
 12831 ;;		___flsub
 12832 ;;		___xxtofl
 12833 ;; This function is called by:
 12834 ;;		_main
 12835 ;; This function uses a non-reentrant model
 12836 ;;
 12837                           
 12838                           
 12839                           ;psect for function _Auto_Relay1
 12840  03AB                     _Auto_Relay1:	
 12841                           
 12842                           ;SlaveLiofilizadorVer1.c: 894:              if(Status1==0)
 12843                           
 12844                           ;incstack = 0
 12845                           ; Regs used in _Auto_Relay1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12846  03AB  1683               	bsf	3,5	;RP0=1, select bank3
 12847  03AC  1703               	bsf	3,6	;RP1=1, select bank3
 12848  03AD  0826               	movf	_Status1^(0+384),w
 12849  03AE  0427               	iorwf	(_Status1+1)^(0+384),w
 12850  03AF  1D03               	btfss	3,2
 12851  03B0  2BB2               	goto	l7076
 12852  03B1                     l7074:	
 12853                           
 12854                           ;SlaveLiofilizadorVer1.c: 895:                  {;SlaveLiofilizadorVer1.c: 896:         
      +                                   Rele1Desligado();
 12855  03B1  2C90               	ljmp	l6894
 12856  03B2                     l7076:	
 12857                           ;SlaveLiofilizadorVer1.c: 897:                  }
 12858                           
 12859                           
 12860                           ;SlaveLiofilizadorVer1.c: 899:                  {;SlaveLiofilizadorVer1.c: 901:         
      +                                   if (Temperatura1<=(SetPoint1-Histerese1))
 12861  03B2  0838               	movf	_Histerese1^(0+384),w
 12862  03B3  1283               	bcf	3,5	;RP0=0, select bank0
 12863  03B4  1303               	bcf	3,6	;RP1=0, select bank0
 12864  03B5  24EF               	fcall	PL72	;call to abstracted procedure
 12865  03B6  160A  118A  24A9  120A  118A  	fcall	___xxtofl
 12866  03BB  160A  118A  2798  120A  118A  	fcall	PL32	;call to abstracted procedure
 12867  03C0  1683               	bsf	3,5	;RP0=1, select bank3
 12868  03C1  1703               	bsf	3,6	;RP1=1, select bank3
 12869  03C2  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
 12870  03C3  1283               	bcf	3,5	;RP0=0, select bank0
 12871  03C4  1303               	bcf	3,6	;RP1=0, select bank0
 12872  03C5  00D4               	movwf	___flsub@b+3
 12873  03C6  1683               	bsf	3,5	;RP0=1, select bank3
 12874  03C7  1703               	bsf	3,6	;RP1=1, select bank3
 12875  03C8  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
 12876  03C9  1283               	bcf	3,5	;RP0=0, select bank0
 12877  03CA  1303               	bcf	3,6	;RP1=0, select bank0
 12878  03CB  00D3               	movwf	___flsub@b+2
 12879  03CC  1683               	bsf	3,5	;RP0=1, select bank3
 12880  03CD  1703               	bsf	3,6	;RP1=1, select bank3
 12881  03CE  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
 12882  03CF  1283               	bcf	3,5	;RP0=0, select bank0
 12883  03D0  1303               	bcf	3,6	;RP1=0, select bank0
 12884  03D1  00D2               	movwf	___flsub@b+1
 12885  03D2  1683               	bsf	3,5	;RP0=1, select bank3
 12886  03D3  1703               	bsf	3,6	;RP1=1, select bank3
 12887  03D4  0818               	movf	_SetPoint1^(0+384),w	;volatile
 12888  03D5  1283               	bcf	3,5	;RP0=0, select bank0
 12889  03D6  1303               	bcf	3,6	;RP1=0, select bank0
 12890  03D7  00D1               	movwf	___flsub@b
 12891  03D8  160A  118A  2638  120A  118A  	fcall	___flsub
 12892  03DD  24E7  120A  118A   	fcall	PL36	;call to abstracted procedure
 12893  03E0  00D5               	movwf	___flge@ff1
 12894  03E1  1683               	bsf	3,5	;RP0=1, select bank3
 12895  03E2  1703               	bsf	3,6	;RP1=1, select bank3
 12896  03E3  0813               	movf	(_Temperatura1+3)^(0+384),w
 12897  03E4  1283               	bcf	3,5	;RP0=0, select bank0
 12898  03E5  1303               	bcf	3,6	;RP1=0, select bank0
 12899  03E6  00DC               	movwf	___flge@ff2+3
 12900  03E7  1683               	bsf	3,5	;RP0=1, select bank3
 12901  03E8  1703               	bsf	3,6	;RP1=1, select bank3
 12902  03E9  0812               	movf	(_Temperatura1+2)^(0+384),w
 12903  03EA  1283               	bcf	3,5	;RP0=0, select bank0
 12904  03EB  1303               	bcf	3,6	;RP1=0, select bank0
 12905  03EC  00DB               	movwf	___flge@ff2+2
 12906  03ED  1683               	bsf	3,5	;RP0=1, select bank3
 12907  03EE  1703               	bsf	3,6	;RP1=1, select bank3
 12908  03EF  0811               	movf	(_Temperatura1+1)^(0+384),w
 12909  03F0  1283               	bcf	3,5	;RP0=0, select bank0
 12910  03F1  1303               	bcf	3,6	;RP1=0, select bank0
 12911  03F2  00DA               	movwf	___flge@ff2+1
 12912  03F3  1683               	bsf	3,5	;RP0=1, select bank3
 12913  03F4  1703               	bsf	3,6	;RP1=1, select bank3
 12914  03F5  0810               	movf	_Temperatura1^(0+384),w
 12915  03F6  1283               	bcf	3,5	;RP0=0, select bank0
 12916  03F7  1303               	bcf	3,6	;RP1=0, select bank0
 12917  03F8  00D9               	movwf	___flge@ff2
 12918  03F9  241E  120A  118A   	fcall	___flge
 12919  03FC  1C03               	btfss	3,0
 12920  03FD  2C0A               	goto	l7082
 12921                           
 12922                           ;SlaveLiofilizadorVer1.c: 902:                     {;SlaveLiofilizadorVer1.c: 903:      
      +                                         RL1Status=1;
 12923  03FE  1683               	bsf	3,5	;RP0=1, select bank3
 12924  03FF  1703               	bsf	3,6	;RP1=1, select bank3
 12925  0400  01DF               	clrf	_RL1Status^(0+384)
 12926  0401  0ADF               	incf	_RL1Status^(0+384),f
 12927  0402  2C07               	goto	l7080
 12928  0403                     l7084:	
 12929                           
 12930                           ;SlaveLiofilizadorVer1.c: 907:                           {;SlaveLiofilizadorVer1.c: 908:
      +                                                     if(RL1Status==1)
 12931  0403  1683               	bsf	3,5	;RP0=1, select bank3
 12932  0404  1703               	bsf	3,6	;RP1=1, select bank3
 12933  0405  0B5F               	decfsz	_RL1Status^(0+384),w
 12934  0406  2BB1               	goto	l7074
 12935  0407                     l7080:	
 12936                           
 12937                           ;SlaveLiofilizadorVer1.c: 904:                     Rele1Ligado();
 12938  0407  160A  118A  2906   	ljmp	l6880
 12939  040A                     l7082:	
 12940                           ;SlaveLiofilizadorVer1.c: 905:                     }
 12941                           
 12942  040A  2494  120A  118A   	fcall	PL2	;call to abstracted procedure
 12943  040D  241E  120A  118A   	fcall	___flge
 12944  0410  1803               	btfsc	3,0
 12945  0411  2C03               	goto	l7084
 12946  0412  2494  120A  118A   	fcall	PL2	;call to abstracted procedure
 12947  0415  241E  120A  118A   	fcall	___flge
 12948  0418  1803               	btfsc	3,0
 12949  0419  0008               	return
 12950                           
 12951                           ;SlaveLiofilizadorVer1.c: 918:                           {;SlaveLiofilizadorVer1.c: 919:
      +                                                     RL1Status=0;
 12952  041A  1683               	bsf	3,5	;RP0=1, select bank3
 12953  041B  1703               	bsf	3,6	;RP1=1, select bank3
 12954  041C  01DF               	clrf	_RL1Status^(0+384)
 12955  041D  2BB1               	goto	l7074
 12956  041E                     __end_of_Auto_Relay1:	
 12957  041E                     __ptext69:	
 12958 ;; *************** function ___flge *****************
 12959 ;; Defined at:
 12960 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
 12961 ;; Parameters:    Size  Location     Type
 12962 ;;  ff1             4   53[BANK0 ] unsigned char 
 12963 ;;  ff2             4   57[BANK0 ] unsigned char 
 12964 ;; Auto vars:     Size  Location     Type
 12965 ;;		None
 12966 ;; Return value:  Size  Location     Type
 12967 ;;		None               void
 12968 ;; Registers used:
 12969 ;;		wreg, status,2, status,0
 12970 ;; Tracked objects:
 12971 ;;		On entry : 300/0
 12972 ;;		On exit  : 300/0
 12973 ;;		Unchanged: 0/0
 12974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12975 ;;      Params:         0       8       0       0       0
 12976 ;;      Locals:         0       0       0       0       0
 12977 ;;      Temps:          0       4       0       0       0
 12978 ;;      Totals:         0      12       0       0       0
 12979 ;;Total ram usage:       12 bytes
 12980 ;; Hardware stack levels used:    1
 12981 ;; Hardware stack levels required when called:    1
 12982 ;; This function calls:
 12983 ;;		Nothing
 12984 ;; This function is called by:
 12985 ;;		_Auto_Relay0
 12986 ;;		_Auto_Relay1
 12987 ;;		_log
 12988 ;; This function uses a non-reentrant model
 12989 ;;
 12990                           
 12991                           
 12992                           ;psect for function ___flge
 12993  041E                     ___flge:	
 12994                           
 12995                           ;incstack = 0
 12996                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12997  041E  3080               	movlw	128
 12998  041F  01DD               	clrf	??___flge
 12999  0420  01DE               	clrf	??___flge+1
 13000  0421  0557               	andwf	___flge@ff1+2,w
 13001  0422  00DF               	movwf	??___flge+2
 13002  0423  307F               	movlw	127
 13003  0424  0558               	andwf	___flge@ff1+3,w
 13004  0425  00E0               	movwf	??___flge+3
 13005  0426  045F               	iorwf	??___flge+2,w
 13006  0427  045E               	iorwf	??___flge+1,w
 13007  0428  045D               	iorwf	??___flge,w
 13008  0429  1D03               	skipz
 13009  042A  2C2F               	goto	l4280
 13010  042B  01D5               	clrf	___flge@ff1
 13011  042C  01D6               	clrf	___flge@ff1+1
 13012  042D  01D7               	clrf	___flge@ff1+2
 13013  042E  01D8               	clrf	___flge@ff1+3
 13014  042F                     l4280:	
 13015  042F  3080               	movlw	128
 13016  0430  01DD               	clrf	??___flge
 13017  0431  01DE               	clrf	??___flge+1
 13018  0432  055B               	andwf	___flge@ff2+2,w
 13019  0433  00DF               	movwf	??___flge+2
 13020  0434  307F               	movlw	127
 13021  0435  055C               	andwf	___flge@ff2+3,w
 13022  0436  00E0               	movwf	??___flge+3
 13023  0437  045F               	iorwf	??___flge+2,w
 13024  0438  045E               	iorwf	??___flge+1,w
 13025  0439  045D               	iorwf	??___flge,w
 13026  043A  1D03               	skipz
 13027  043B  2C40               	goto	l1172
 13028  043C  01D9               	clrf	___flge@ff2
 13029  043D  01DA               	clrf	___flge@ff2+1
 13030  043E  01DB               	clrf	___flge@ff2+2
 13031  043F  01DC               	clrf	___flge@ff2+3
 13032  0440                     l1172:	
 13033  0440  1FD8               	btfss	___flge@ff1+3,7
 13034  0441  2C5D               	goto	l4286
 13035  0442  3080               	movlw	128
 13036  0443  01DD               	clrf	??___flge
 13037  0444  01DE               	clrf	??___flge+1
 13038  0445  01DF               	clrf	??___flge+2
 13039  0446  00E0               	movwf	??___flge+3
 13040  0447  0855               	movf	___flge@ff1,w
 13041  0448  02DD               	subwf	??___flge,f
 13042  0449  0856               	movf	___flge@ff1+1,w
 13043  044A  1C03               	skipc
 13044  044B  0F56               	incfsz	___flge@ff1+1,w
 13045  044C  02DE               	subwf	??___flge+1,f
 13046  044D  0857               	movf	___flge@ff1+2,w
 13047  044E  1C03               	skipc
 13048  044F  0F57               	incfsz	___flge@ff1+2,w
 13049  0450  02DF               	subwf	??___flge+2,f
 13050  0451  0858               	movf	___flge@ff1+3,w
 13051  0452  1C03               	skipc
 13052  0453  0F58               	incfsz	___flge@ff1+3,w
 13053  0454  02E0               	subwf	??___flge+3,f
 13054  0455  0860               	movf	??___flge+3,w
 13055  0456  00D8               	movwf	___flge@ff1+3
 13056  0457  085F               	movf	??___flge+2,w
 13057  0458  00D7               	movwf	___flge@ff1+2
 13058  0459  085E               	movf	??___flge+1,w
 13059  045A  00D6               	movwf	___flge@ff1+1
 13060  045B  085D               	movf	??___flge,w
 13061  045C  00D5               	movwf	___flge@ff1
 13062  045D                     l4286:	
 13063  045D  1FDC               	btfss	___flge@ff2+3,7
 13064  045E  2C7A               	goto	l1174
 13065  045F  3080               	movlw	128
 13066  0460  01DD               	clrf	??___flge
 13067  0461  01DE               	clrf	??___flge+1
 13068  0462  01DF               	clrf	??___flge+2
 13069  0463  00E0               	movwf	??___flge+3
 13070  0464  0859               	movf	___flge@ff2,w
 13071  0465  02DD               	subwf	??___flge,f
 13072  0466  085A               	movf	___flge@ff2+1,w
 13073  0467  1C03               	skipc
 13074  0468  0F5A               	incfsz	___flge@ff2+1,w
 13075  0469  02DE               	subwf	??___flge+1,f
 13076  046A  085B               	movf	___flge@ff2+2,w
 13077  046B  1C03               	skipc
 13078  046C  0F5B               	incfsz	___flge@ff2+2,w
 13079  046D  02DF               	subwf	??___flge+2,f
 13080  046E  085C               	movf	___flge@ff2+3,w
 13081  046F  1C03               	skipc
 13082  0470  0F5C               	incfsz	___flge@ff2+3,w
 13083  0471  02E0               	subwf	??___flge+3,f
 13084  0472  0860               	movf	??___flge+3,w
 13085  0473  00DC               	movwf	___flge@ff2+3
 13086  0474  085F               	movf	??___flge+2,w
 13087  0475  00DB               	movwf	___flge@ff2+2
 13088  0476  085E               	movf	??___flge+1,w
 13089  0477  00DA               	movwf	___flge@ff2+1
 13090  0478  085D               	movf	??___flge,w
 13091  0479  00D9               	movwf	___flge@ff2
 13092  047A                     l1174:	
 13093  047A  3080               	movlw	128
 13094  047B  06D8               	xorwf	___flge@ff1+3,f
 13095  047C  06DC               	xorwf	___flge@ff2+3,f
 13096  047D  085C               	movf	___flge@ff2+3,w
 13097  047E  0258               	subwf	___flge@ff1+3,w
 13098  047F  1D03               	skipz
 13099  0480  0008               	return
 13100  0481  085B               	movf	___flge@ff2+2,w
 13101  0482  0257               	subwf	___flge@ff1+2,w
 13102  0483  1D03               	skipz
 13103  0484  0008               	return
 13104  0485  085A               	movf	___flge@ff2+1,w
 13105  0486  0256               	subwf	___flge@ff1+1,w
 13106  0487  1D03               	skipz
 13107  0488  0008               	return
 13108  0489  0859               	movf	___flge@ff2,w
 13109  048A  0255               	subwf	___flge@ff1,w
 13110  048B  0008               	return
 13111  048C                     __end_of___flge:	
 13112  048C                     __ptext71:	
 13113 ;; *************** function _Rele0Desligado *****************
 13114 ;; Defined at:
 13115 ;;		line 928 in file "SlaveLiofilizadorVer1.c"
 13116 ;; Parameters:    Size  Location     Type
 13117 ;;		None
 13118 ;; Auto vars:     Size  Location     Type
 13119 ;;		None
 13120 ;; Return value:  Size  Location     Type
 13121 ;;                  1    wreg      void 
 13122 ;; Registers used:
 13123 ;;		None
 13124 ;; Tracked objects:
 13125 ;;		On entry : 100/300
 13126 ;;		On exit  : 300/0
 13127 ;;		Unchanged: 0/0
 13128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13129 ;;      Params:         0       0       0       0       0
 13130 ;;      Locals:         0       0       0       0       0
 13131 ;;      Temps:          0       0       0       0       0
 13132 ;;      Totals:         0       0       0       0       0
 13133 ;;Total ram usage:        0 bytes
 13134 ;; Hardware stack levels used:    1
 13135 ;; Hardware stack levels required when called:    1
 13136 ;; This function calls:
 13137 ;;		Nothing
 13138 ;; This function is called by:
 13139 ;;		_Auto_Relay0
 13140 ;; This function uses a non-reentrant model
 13141 ;;
 13142                           
 13143                           
 13144                           ;psect for function _Rele0Desligado
 13145  048C                     _Rele0Desligado:	
 13146  048C                     l6892:	
 13147                           ;incstack = 0
 13148                           ; Regs used in _Rele0Desligado: []
 13149                           
 13150                           
 13151                           ;SlaveLiofilizadorVer1.c: 929:      PORTCbits.RC0=0;
 13152  048C  1283               	bcf	3,5	;RP0=0, select bank0
 13153  048D  1303               	bcf	3,6	;RP1=0, select bank0
 13154  048E  1007               	bcf	7,0	;volatile
 13155  048F  0008               	return
 13156  0490                     __end_of_Rele0Desligado:	
 13157  0490                     __ptext65:	
 13158 ;; *************** function _Rele1Desligado *****************
 13159 ;; Defined at:
 13160 ;;		line 932 in file "SlaveLiofilizadorVer1.c"
 13161 ;; Parameters:    Size  Location     Type
 13162 ;;		None
 13163 ;; Auto vars:     Size  Location     Type
 13164 ;;		None
 13165 ;; Return value:  Size  Location     Type
 13166 ;;                  1    wreg      void 
 13167 ;; Registers used:
 13168 ;;		None
 13169 ;; Tracked objects:
 13170 ;;		On entry : 0/300
 13171 ;;		On exit  : 300/0
 13172 ;;		Unchanged: 0/0
 13173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13174 ;;      Params:         0       0       0       0       0
 13175 ;;      Locals:         0       0       0       0       0
 13176 ;;      Temps:          0       0       0       0       0
 13177 ;;      Totals:         0       0       0       0       0
 13178 ;;Total ram usage:        0 bytes
 13179 ;; Hardware stack levels used:    1
 13180 ;; Hardware stack levels required when called:    1
 13181 ;; This function calls:
 13182 ;;		Nothing
 13183 ;; This function is called by:
 13184 ;;		_Auto_Relay1
 13185 ;; This function uses a non-reentrant model
 13186 ;;
 13187                           
 13188                           
 13189                           ;psect for function _Rele1Desligado
 13190  0490                     _Rele1Desligado:	
 13191  0490                     l6894:	
 13192                           ;incstack = 0
 13193                           ; Regs used in _Rele1Desligado: []
 13194                           
 13195                           
 13196                           ;SlaveLiofilizadorVer1.c: 933:      PORTCbits.RC1=0;
 13197  0490  1283               	bcf	3,5	;RP0=0, select bank0
 13198  0491  1303               	bcf	3,6	;RP1=0, select bank0
 13199  0492  1087               	bcf	7,1	;volatile
 13200  0493  0008               	return
 13201  0494                     __end_of_Rele1Desligado:	
 13202  0494                     PL2:	
 13203  0494  1683               	bsf	3,5	;RP0=1, select bank3
 13204  0495  1703               	bsf	3,6	;RP1=1, select bank3
 13205  0496  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
 13206  0497  1283               	bcf	3,5	;RP0=0, select bank0
 13207  0498  1303               	bcf	3,6	;RP1=0, select bank0
 13208  0499  00D8               	movwf	___flge@ff1+3
 13209  049A  1683               	bsf	3,5	;RP0=1, select bank3
 13210  049B  1703               	bsf	3,6	;RP1=1, select bank3
 13211  049C  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
 13212  049D  1283               	bcf	3,5	;RP0=0, select bank0
 13213  049E  1303               	bcf	3,6	;RP1=0, select bank0
 13214  049F  00D7               	movwf	___flge@ff1+2
 13215  04A0  1683               	bsf	3,5	;RP0=1, select bank3
 13216  04A1  1703               	bsf	3,6	;RP1=1, select bank3
 13217  04A2  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
 13218  04A3  1283               	bcf	3,5	;RP0=0, select bank0
 13219  04A4  1303               	bcf	3,6	;RP1=0, select bank0
 13220  04A5  00D6               	movwf	___flge@ff1+1
 13221  04A6  1683               	bsf	3,5	;RP0=1, select bank3
 13222  04A7  1703               	bsf	3,6	;RP1=1, select bank3
 13223  04A8  0818               	movf	_SetPoint1^(0+384),w	;volatile
 13224  04A9  1283               	bcf	3,5	;RP0=0, select bank0
 13225  04AA  1303               	bcf	3,6	;RP1=0, select bank0
 13226  04AB  00D5               	movwf	___flge@ff1
 13227  04AC  1683               	bsf	3,5	;RP0=1, select bank3
 13228  04AD  1703               	bsf	3,6	;RP1=1, select bank3
 13229  04AE  0813               	movf	(_Temperatura1+3)^(0+384),w
 13230  04AF  1283               	bcf	3,5	;RP0=0, select bank0
 13231  04B0  1303               	bcf	3,6	;RP1=0, select bank0
 13232  04B1  00DC               	movwf	___flge@ff2+3
 13233  04B2  1683               	bsf	3,5	;RP0=1, select bank3
 13234  04B3  1703               	bsf	3,6	;RP1=1, select bank3
 13235  04B4  0812               	movf	(_Temperatura1+2)^(0+384),w
 13236  04B5  1283               	bcf	3,5	;RP0=0, select bank0
 13237  04B6  1303               	bcf	3,6	;RP1=0, select bank0
 13238  04B7  00DB               	movwf	___flge@ff2+2
 13239  04B8  1683               	bsf	3,5	;RP0=1, select bank3
 13240  04B9  1703               	bsf	3,6	;RP1=1, select bank3
 13241  04BA  0811               	movf	(_Temperatura1+1)^(0+384),w
 13242  04BB  1283               	bcf	3,5	;RP0=0, select bank0
 13243  04BC  1303               	bcf	3,6	;RP1=0, select bank0
 13244  04BD  00DA               	movwf	___flge@ff2+1
 13245  04BE  1683               	bsf	3,5	;RP0=1, select bank3
 13246  04BF  1703               	bsf	3,6	;RP1=1, select bank3
 13247  04C0  0810               	movf	_Temperatura1^(0+384),w
 13248  04C1  1283               	bcf	3,5	;RP0=0, select bank0
 13249  04C2  1303               	bcf	3,6	;RP1=0, select bank0
 13250  04C3  00D9               	movwf	___flge@ff2
 13251  04C4  0008               	return
 13252  04C5                     __end_ofPL2:	
 13253  04C5                     PL6:	
 13254  04C5  00D5               	movwf	___flge@ff1
 13255  04C6  1683               	bsf	3,5	;RP0=1, select bank3
 13256  04C7  1703               	bsf	3,6	;RP1=1, select bank3
 13257  04C8  0817               	movf	(_Temperatura0+3)^(0+384),w
 13258  04C9  1283               	bcf	3,5	;RP0=0, select bank0
 13259  04CA  1303               	bcf	3,6	;RP1=0, select bank0
 13260  04CB  00DC               	movwf	___flge@ff2+3
 13261  04CC  1683               	bsf	3,5	;RP0=1, select bank3
 13262  04CD  1703               	bsf	3,6	;RP1=1, select bank3
 13263  04CE  0816               	movf	(_Temperatura0+2)^(0+384),w
 13264  04CF  1283               	bcf	3,5	;RP0=0, select bank0
 13265  04D0  1303               	bcf	3,6	;RP1=0, select bank0
 13266  04D1  00DB               	movwf	___flge@ff2+2
 13267  04D2  1683               	bsf	3,5	;RP0=1, select bank3
 13268  04D3  1703               	bsf	3,6	;RP1=1, select bank3
 13269  04D4  0815               	movf	(_Temperatura0+1)^(0+384),w
 13270  04D5  1283               	bcf	3,5	;RP0=0, select bank0
 13271  04D6  1303               	bcf	3,6	;RP1=0, select bank0
 13272  04D7  00DA               	movwf	___flge@ff2+1
 13273  04D8  1683               	bsf	3,5	;RP0=1, select bank3
 13274  04D9  1703               	bsf	3,6	;RP1=1, select bank3
 13275  04DA  0814               	movf	_Temperatura0^(0+384),w
 13276  04DB  1283               	bcf	3,5	;RP0=0, select bank0
 13277  04DC  1303               	bcf	3,6	;RP1=0, select bank0
 13278  04DD  00D9               	movwf	___flge@ff2
 13279  04DE  0008               	return
 13280  04DF                     __end_ofPL6:	
 13281  04DF                     PL10:	
 13282  04DF  0873               	movf	_SetPoint0+3,w	;volatile
 13283  04E0  00D8               	movwf	___flge@ff1+3
 13284  04E1  0872               	movf	_SetPoint0+2,w	;volatile
 13285  04E2  00D7               	movwf	___flge@ff1+2
 13286  04E3  0871               	movf	_SetPoint0+1,w	;volatile
 13287  04E4  00D6               	movwf	___flge@ff1+1
 13288  04E5  0870               	movf	_SetPoint0,w	;volatile
 13289  04E6  0008               	return
 13290  04E7                     __end_ofPL10:	
 13291  04E7                     PL36:	
 13292  04E7  0850               	movf	?___flsub+3,w
 13293  04E8  00D8               	movwf	___flge@ff1+3
 13294  04E9  084F               	movf	?___flsub+2,w
 13295  04EA  00D7               	movwf	___flge@ff1+2
 13296  04EB  084E               	movf	?___flsub+1,w
 13297  04EC  00D6               	movwf	___flge@ff1+1
 13298  04ED  084D               	movf	?___flsub,w
 13299  04EE  0008               	return
 13300  04EF                     __end_ofPL36:	
 13301  04EF                     PL72:	
 13302  04EF  00AB               	movwf	___xxtofl@val
 13303  04F0  3001               	movlw	1
 13304  04F1  01AC               	clrf	___xxtofl@val+1
 13305  04F2  01AD               	clrf	___xxtofl@val+2
 13306  04F3  01AE               	clrf	___xxtofl@val+3
 13307  04F4  0008               	return
 13308  04F5                     __end_ofPL72:	
 13309                           
 13310                           	psect	text72
 13311  1005                     __ptext72:	
 13312 ;; *************** function _ADC_init *****************
 13313 ;; Defined at:
 13314 ;;		line 10 in file "adc.c"
 13315 ;; Parameters:    Size  Location     Type
 13316 ;;		None
 13317 ;; Auto vars:     Size  Location     Type
 13318 ;;		None
 13319 ;; Return value:  Size  Location     Type
 13320 ;;                  1    wreg      void 
 13321 ;; Registers used:
 13322 ;;		wreg, status,2, status,0
 13323 ;; Tracked objects:
 13324 ;;		On entry : 0/100
 13325 ;;		On exit  : 300/0
 13326 ;;		Unchanged: 0/0
 13327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13328 ;;      Params:         0       0       0       0       0
 13329 ;;      Locals:         0       0       0       0       0
 13330 ;;      Temps:          0       0       0       0       0
 13331 ;;      Totals:         0       0       0       0       0
 13332 ;;Total ram usage:        0 bytes
 13333 ;; Hardware stack levels used:    1
 13334 ;; Hardware stack levels required when called:    1
 13335 ;; This function calls:
 13336 ;;		Nothing
 13337 ;; This function is called by:
 13338 ;;		_main
 13339 ;; This function uses a non-reentrant model
 13340 ;;
 13341                           
 13342                           
 13343                           ;psect for function _ADC_init
 13344  1005                     _ADC_init:	
 13345                           
 13346                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13347                           
 13348                           ;incstack = 0
 13349                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13350  1005  30C0               	movlw	192
 13351  1006  1283               	bcf	3,5	;RP0=0, select bank0
 13352  1007  1303               	bcf	3,6	;RP1=0, select bank0
 13353  1008  049F               	iorwf	31,f	;volatile
 13354                           
 13355                           ;adc.c: 12:      ADCON1=0b10000000;
 13356  1009  3080               	movlw	128
 13357  100A  1683               	bsf	3,5	;RP0=1, select bank1
 13358  100B  009F               	movwf	31	;volatile
 13359                           
 13360                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13361  100C  179F               	bsf	31,7	;volatile
 13362                           
 13363                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13364  100D  1283               	bcf	3,5	;RP0=0, select bank0
 13365  100E  141F               	bsf	31,0	;volatile
 13366  100F  0008               	return
 13367  1010                     __end_of_ADC_init:	
 13368                           
 13369                           	psect	text73
 13370  1F24                     __ptext73:	
 13371 ;; *************** function _isr *****************
 13372 ;; Defined at:
 13373 ;;		line 29 in file "isr.c"
 13374 ;; Parameters:    Size  Location     Type
 13375 ;;		None
 13376 ;; Auto vars:     Size  Location     Type
 13377 ;;  tempo           2    4[COMMON] unsigned int 
 13378 ;; Return value:  Size  Location     Type
 13379 ;;                  1    wreg      void 
 13380 ;; Registers used:
 13381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13382 ;; Tracked objects:
 13383 ;;		On entry : 0/0
 13384 ;;		On exit  : 300/0
 13385 ;;		Unchanged: 0/0
 13386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13387 ;;      Params:         0       0       0       0       0
 13388 ;;      Locals:         2       0       0       0       0
 13389 ;;      Temps:          4       0       0       0       0
 13390 ;;      Totals:         6       0       0       0       0
 13391 ;;Total ram usage:        6 bytes
 13392 ;; Hardware stack levels used:    1
 13393 ;; This function calls:
 13394 ;;		Nothing
 13395 ;; This function is called by:
 13396 ;;		Interrupt level 1
 13397 ;; This function uses a non-reentrant model
 13398 ;;
 13399                           
 13400                           
 13401                           ;psect for function _isr
 13402  1F24                     _isr:	
 13403                           
 13404                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13405  1F24  188B               	btfsc	11,1	;volatile
 13406                           
 13407                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13408  1F25  108B               	bcf	11,1	;volatile
 13409                           
 13410                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13411                           
 13412                           ;isr.c: 37:       }
 13413  1F26  1C0C               	btfss	12,0	;volatile
 13414  1F27  2F9F               	goto	i1l5916
 13415                           
 13416                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13417  1F28  30B1               	movlw	177
 13418  1F29  008F               	movwf	15	;volatile
 13419                           
 13420                           ;isr.c: 42:                 TMR1L=0xF3;
 13421  1F2A  30F3               	movlw	243
 13422  1F2B  008E               	movwf	14	;volatile
 13423                           
 13424                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13425  1F2C  100C               	bcf	12,0	;volatile
 13426                           
 13427                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13428  1F2D  1FF6               	btfss	_generic_status,7
 13429  1F2E  2F31               	goto	i1l5864
 13430                           
 13431                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13432  1F2F  13F6               	bcf	_generic_status,7
 13433  1F30  0064               	clrwdt	;# 
 13434  1F31                     i1l5864:	
 13435                           
 13436                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13437  1F31  300A               	movlw	10
 13438  1F32  1683               	bsf	3,5	;RP0=1, select bank3
 13439  1F33  1703               	bsf	3,6	;RP1=1, select bank3
 13440  1F34  07AE               	addwf	_Delay_Led_Tmr0^(0+384),f	;volatile
 13441  1F35  1803               	skipnc
 13442  1F36  0AAF               	incf	(_Delay_Led_Tmr0+1)^(0+384),f	;volatile
 13443                           
 13444                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13445  1F37  3003               	movlw	3
 13446  1F38  022F               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13447  1F39  30E8               	movlw	232
 13448  1F3A  1903               	skipnz
 13449  1F3B  022E               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13450  1F3C  1C03               	skipc
 13451  1F3D  2F40               	goto	i1l5868
 13452                           
 13453                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13454  1F3E  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
 13455  1F3F  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
 13456  1F40                     i1l5868:	
 13457                           
 13458                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13459  1F40  3001               	movlw	1
 13460  1F41  022F               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13461  1F42  30F4               	movlw	244
 13462  1F43  1903               	skipnz
 13463  1F44  022E               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13464  1F45  1803               	skipnc
 13465  1F46  2F4B               	goto	i1l563
 13466                           
 13467                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13468  1F47  1283               	bcf	3,5	;RP0=0, select bank0
 13469  1F48  1303               	bcf	3,6	;RP1=0, select bank0
 13470  1F49  1786               	bsf	6,7	;volatile
 13471  1F4A  2F4E               	goto	i1l5872
 13472  1F4B                     i1l563:	
 13473                           ;isr.c: 56:                 else
 13474                           
 13475                           
 13476                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13477  1F4B  1283               	bcf	3,5	;RP0=0, select bank0
 13478  1F4C  1303               	bcf	3,6	;RP1=0, select bank0
 13479  1F4D  1386               	bcf	6,7	;volatile
 13480  1F4E                     i1l5872:	
 13481                           
 13482                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13483  1F4E  1683               	bsf	3,5	;RP0=1, select bank3
 13484  1F4F  1703               	bsf	3,6	;RP1=1, select bank3
 13485  1F50  082C               	movf	_Delay_Led_Usart^(0+384),w	;volatile
 13486  1F51  042D               	iorwf	(_Delay_Led_Usart+1)^(0+384),w	;volatile
 13487  1F52  1903               	btfsc	3,2
 13488  1F53  2F5E               	goto	i1l565
 13489                           
 13490                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13491  1F54  300A               	movlw	10
 13492  1F55  02AC               	subwf	_Delay_Led_Usart^(0+384),f	;volatile
 13493  1F56  3000               	movlw	0
 13494  1F57  1C03               	skipc
 13495  1F58  03AD               	decf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13496  1F59  02AD               	subwf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13497                           
 13498                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13499  1F5A  1283               	bcf	3,5	;RP0=0, select bank0
 13500  1F5B  1303               	bcf	3,6	;RP1=0, select bank0
 13501  1F5C  1706               	bsf	6,6	;volatile
 13502                           
 13503                           ;isr.c: 63:                    }
 13504  1F5D  2F61               	goto	i1l5878
 13505  1F5E                     i1l565:	
 13506                           ;isr.c: 64:                 else{
 13507                           
 13508                           
 13509                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13510  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
 13511  1F5F  1303               	bcf	3,6	;RP1=0, select bank0
 13512  1F60  1306               	bcf	6,6	;volatile
 13513  1F61                     i1l5878:	
 13514                           
 13515                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13516  1F61  1683               	bsf	3,5	;RP0=1, select bank3
 13517  1F62  1703               	bsf	3,6	;RP1=1, select bank3
 13518  1F63  0830               	movf	_Delay_Led_Memory^(0+384),w	;volatile
 13519  1F64  0431               	iorwf	(_Delay_Led_Memory+1)^(0+384),w	;volatile
 13520  1F65  1903               	btfsc	3,2
 13521  1F66  2F71               	goto	i1l567
 13522                           
 13523                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13524  1F67  300A               	movlw	10
 13525  1F68  02B0               	subwf	_Delay_Led_Memory^(0+384),f	;volatile
 13526  1F69  3000               	movlw	0
 13527  1F6A  1C03               	skipc
 13528  1F6B  03B1               	decf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13529  1F6C  02B1               	subwf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13530                           
 13531                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13532  1F6D  1283               	bcf	3,5	;RP0=0, select bank0
 13533  1F6E  1303               	bcf	3,6	;RP1=0, select bank0
 13534  1F6F  1686               	bsf	6,5	;volatile
 13535                           
 13536                           ;isr.c: 71:                    }
 13537  1F70  2F74               	goto	i1l5884
 13538  1F71                     i1l567:	
 13539                           ;isr.c: 72:                 else{
 13540                           
 13541                           
 13542                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13543  1F71  1283               	bcf	3,5	;RP0=0, select bank0
 13544  1F72  1303               	bcf	3,6	;RP1=0, select bank0
 13545  1F73  1286               	bcf	6,5	;volatile
 13546  1F74                     i1l5884:	
 13547                           
 13548                           ;isr.c: 77:                 tempodecorrido+=10;
 13549  1F74  300A               	movlw	10
 13550  1F75  1683               	bsf	3,5	;RP0=1, select bank3
 13551  1F76  1703               	bsf	3,6	;RP1=1, select bank3
 13552  1F77  07A0               	addwf	_tempodecorrido^(0+384),f	;volatile
 13553  1F78  1803               	skipnc
 13554  1F79  0AA1               	incf	(_tempodecorrido+1)^(0+384),f	;volatile
 13555                           
 13556                           ;isr.c: 78:                 milisegundo+=10;
 13557  1F7A  07AA               	addwf	_milisegundo^(0+384),f	;volatile
 13558  1F7B  1803               	skipnc
 13559  1F7C  0AAB               	incf	(_milisegundo+1)^(0+384),f	;volatile
 13560                           
 13561                           ;isr.c: 79:                 if(milisegundo==1000){
 13562  1F7D  30E8               	movlw	232
 13563  1F7E  062A               	xorwf	_milisegundo^(0+384),w	;volatile
 13564  1F7F  3003               	movlw	3
 13565  1F80  1903               	skipnz
 13566  1F81  062B               	xorwf	(_milisegundo+1)^(0+384),w	;volatile
 13567  1F82  1D03               	btfss	3,2
 13568  1F83  2F9F               	goto	i1l5916
 13569                           
 13570                           ;isr.c: 80:                    milisegundo=0;
 13571  1F84  01AA               	clrf	_milisegundo^(0+384)	;volatile
 13572  1F85  01AB               	clrf	(_milisegundo+1)^(0+384)	;volatile
 13573                           
 13574                           ;isr.c: 81:                    segundo++;
 13575  1F86  0AF5               	incf	_segundo,f	;volatile
 13576                           
 13577                           ;isr.c: 84:                    if(TempoCNT_0>0) TempoCNT_0--;
 13578  1F87  1303               	bcf	3,6	;RP1=0, select bank1
 13579  1F88  086F               	movf	_TempoCNT_0^(0+128),w	;volatile
 13580  1F89  1D03               	btfss	3,2
 13581  1F8A  03EF               	decf	_TempoCNT_0^(0+128),f	;volatile
 13582                           
 13583                           ;isr.c: 85:                    if(TempoCNT_1>0) TempoCNT_1--;
 13584  1F8B  086E               	movf	_TempoCNT_1^(0+128),w	;volatile
 13585  1F8C  1D03               	btfss	3,2
 13586  1F8D  03EE               	decf	_TempoCNT_1^(0+128),f	;volatile
 13587                           
 13588                           ;isr.c: 88:                    if(segundo==60){
 13589  1F8E  303C               	movlw	60
 13590  1F8F  0675               	xorwf	_segundo,w	;volatile
 13591  1F90  1D03               	btfss	3,2
 13592  1F91  2F9F               	goto	i1l5916
 13593                           
 13594                           ;isr.c: 89:                       segundo=0;
 13595  1F92  01F5               	clrf	_segundo	;volatile
 13596                           
 13597                           ;isr.c: 90:                       minuto++;
 13598  1F93  1703               	bsf	3,6	;RP1=1, select bank3
 13599  1F94  0ABB               	incf	_minuto^(0+384),f	;volatile
 13600                           
 13601                           ;isr.c: 91:                       if(minuto==60){
 13602  1F95  303C               	movlw	60
 13603  1F96  063B               	xorwf	_minuto^(0+384),w	;volatile
 13604  1F97  1D03               	btfss	3,2
 13605  1F98  2F9F               	goto	i1l5916
 13606                           
 13607                           ;isr.c: 92:                          minuto=0;
 13608  1F99  01BB               	clrf	_minuto^(0+384)	;volatile
 13609                           
 13610                           ;isr.c: 93:                          hora++;
 13611  1F9A  0AF4               	incf	_hora,f	;volatile
 13612                           
 13613                           ;isr.c: 94:                          if(hora==24){
 13614  1F9B  3018               	movlw	24
 13615  1F9C  0674               	xorwf	_hora,w	;volatile
 13616  1F9D  1903               	btfsc	3,2
 13617                           
 13618                           ;isr.c: 95:                             hora=0;
 13619  1F9E  01F4               	clrf	_hora	;volatile
 13620  1F9F                     i1l5916:	
 13621                           ;isr.c: 99:                 }
 13622                           
 13623                           
 13624                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13625  1F9F  1283               	bcf	3,5	;RP0=0, select bank0
 13626  1FA0  1303               	bcf	3,6	;RP1=0, select bank0
 13627  1FA1  1E8C               	btfss	12,5	;volatile
 13628  1FA2  2FF4               	goto	i1l583
 13629  1FA3  301E               	movlw	30
 13630                           
 13631                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13632  1FA4  1476               	bsf	_generic_status,0
 13633                           
 13634                           ;isr.c: 109:         tempo=30;
 13635  1FA5  00FB               	movwf	isr@tempo
 13636  1FA6  01FC               	clrf	isr@tempo+1
 13637                           
 13638                           ;isr.c: 110:         count=0;
 13639  1FA7  1683               	bsf	3,5	;RP0=1, select bank3
 13640  1FA8  1703               	bsf	3,6	;RP1=1, select bank3
 13641  1FA9  01A2               	clrf	_count^(0+384)	;volatile
 13642  1FAA  01A3               	clrf	(_count+1)^(0+384)	;volatile
 13643                           
 13644                           ;isr.c: 111:         pointer=usart_buffer;
 13645  1FAB  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13646  1FAC  00B2               	movwf	_pointer^(0+384)
 13647  1FAD                     i1l5936:	
 13648                           ;isr.c: 112:         while(tempo)
 13649                           
 13650                           
 13651                           ;isr.c: 112:         while(tempo)
 13652  1FAD  087B               	movf	isr@tempo,w
 13653  1FAE  047C               	iorwf	isr@tempo+1,w
 13654  1FAF  1903               	btfsc	3,2
 13655  1FB0  2FDC               	goto	i1l5938
 13656                           
 13657                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13658  1FB1  1283               	bcf	3,5	;RP0=0, select bank0
 13659  1FB2  1303               	bcf	3,6	;RP1=0, select bank0
 13660  1FB3  1E8C               	btfss	12,5	;volatile
 13661  1FB4  2FD5               	goto	i1l5934
 13662                           
 13663                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13664  1FB5  1683               	bsf	3,5	;RP0=1, select bank3
 13665  1FB6  1703               	bsf	3,6	;RP1=1, select bank3
 13666  1FB7  0832               	movf	_pointer^(0+384),w
 13667  1FB8  0084               	movwf	4
 13668  1FB9  1283               	bcf	3,5	;RP0=0, select bank0
 13669  1FBA  1303               	bcf	3,6	;RP1=0, select bank0
 13670  1FBB  081A               	movf	26,w	;volatile
 13671  1FBC  1783               	bsf	3,7	;select IRP bank2
 13672  1FBD  0080               	movwf	0
 13673                           
 13674                           ;isr.c: 118:                 if(count<32+10 -1)
 13675  1FBE  1683               	bsf	3,5	;RP0=1, select bank3
 13676  1FBF  1703               	bsf	3,6	;RP1=1, select bank3
 13677  1FC0  0823               	movf	(_count+1)^(0+384),w	;volatile
 13678  1FC1  3A80               	xorlw	128
 13679  1FC2  00FF               	movwf	127
 13680  1FC3  3080               	movlw	128
 13681  1FC4  027F               	subwf	127,w
 13682  1FC5  1D03               	skipz
 13683  1FC6  2FC9               	goto	u516_25
 13684  1FC7  3029               	movlw	41
 13685  1FC8  0222               	subwf	_count^(0+384),w	;volatile
 13686  1FC9                     u516_25:	
 13687  1FC9  1803               	skipnc
 13688  1FCA  2FD1               	goto	i1l5932
 13689                           
 13690                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13691  1FCB  1683               	bsf	3,5	;RP0=1, select bank3
 13692  1FCC  1703               	bsf	3,6	;RP1=1, select bank3
 13693  1FCD  0AA2               	incf	_count^(0+384),f	;volatile
 13694  1FCE  1903               	skipnz
 13695  1FCF  0AA3               	incf	(_count+1)^(0+384),f	;volatile
 13696                           
 13697                           ;isr.c: 121:                    pointer++;
 13698  1FD0  0AB2               	incf	_pointer^(0+384),f
 13699  1FD1                     i1l5932:	
 13700                           
 13701                           ;isr.c: 123:                 tempo=30;
 13702  1FD1  301E               	movlw	30
 13703  1FD2  00FB               	movwf	isr@tempo
 13704  1FD3  01FC               	clrf	isr@tempo+1
 13705                           
 13706                           ;isr.c: 124:             }
 13707  1FD4  2FAD               	goto	i1l5936
 13708  1FD5                     i1l5934:	
 13709                           
 13710                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13711  1FD5  3001               	movlw	1
 13712  1FD6  02FB               	subwf	isr@tempo,f
 13713  1FD7  3000               	movlw	0
 13714  1FD8  1C03               	skipc
 13715  1FD9  03FC               	decf	isr@tempo+1,f
 13716  1FDA  02FC               	subwf	isr@tempo+1,f
 13717  1FDB  2FAD               	goto	i1l5936
 13718  1FDC                     i1l5938:	
 13719                           
 13720                           ;isr.c: 131:         (*pointer)=0;
 13721  1FDC  1683               	bsf	3,5	;RP0=1, select bank3
 13722  1FDD  1703               	bsf	3,6	;RP1=1, select bank3
 13723  1FDE  0832               	movf	_pointer^(0+384),w
 13724  1FDF  0084               	movwf	4
 13725  1FE0  1783               	bsf	3,7	;select IRP bank2
 13726  1FE1  0180               	clrf	0
 13727                           
 13728                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13729  1FE2  1283               	bcf	3,5	;RP0=0, select bank0
 13730  1FE3  1303               	bcf	3,6	;RP1=0, select bank0
 13731  1FE4  1C98               	btfss	24,1	;volatile
 13732  1FE5  2FF4               	goto	i1l583
 13733                           
 13734                           ;isr.c: 134:            CREN=0;
 13735  1FE6  1218               	bcf	24,4	;volatile
 13736                           
 13737                           ;isr.c: 135:            CREN=1;
 13738  1FE7  1618               	bsf	24,4	;volatile
 13739                           
 13740                           ;isr.c: 136:            tempo=RCREG;
 13741  1FE8  081A               	movf	26,w	;volatile
 13742  1FE9  00FB               	movwf	isr@tempo
 13743  1FEA  01FC               	clrf	isr@tempo+1
 13744                           
 13745                           ;isr.c: 137:            tempo=RCREG;
 13746  1FEB  081A               	movf	26,w	;volatile
 13747  1FEC  00FB               	movwf	isr@tempo
 13748  1FED  01FC               	clrf	isr@tempo+1
 13749                           
 13750                           ;isr.c: 138:            tempo=RCREG;
 13751  1FEE  081A               	movf	26,w	;volatile
 13752  1FEF  00FB               	movwf	isr@tempo
 13753  1FF0  01FC               	clrf	isr@tempo+1
 13754                           
 13755                           ;isr.c: 139:            usart_buffer[0]=0;
 13756  1FF1  1703               	bsf	3,6	;RP1=1, select bank2
 13757  1FF2  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13758                           
 13759                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13760  1FF3  14F6               	bsf	_generic_status,1
 13761  1FF4                     i1l583:	
 13762  1FF4  087A               	movf	??_isr+3,w
 13763  1FF5  1303               	bcf	3,6	;RP1=0, select bank0
 13764  1FF6  00FF               	movwf	127
 13765  1FF7  0879               	movf	??_isr+2,w
 13766  1FF8  008A               	movwf	10
 13767  1FF9  0878               	movf	??_isr+1,w
 13768  1FFA  0084               	movwf	4
 13769  1FFB  0E77               	swapf	??_isr^(0+4294967168),w
 13770  1FFC  0083               	movwf	3
 13771  1FFD  0EFE               	swapf	126,f
 13772  1FFE  0E7E               	swapf	126,w
 13773  1FFF  0009               	retfie
 13774  2000                     __end_of_isr:	
 13775  007E                     btemp	set	126	;btemp
 13776  007E                     wtemp0	set	126
 13777                           
 13778                           	psect	intentry
 13779  0004                     __pintentry:	
 13780                           ;incstack = 0
 13781                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13782                           
 13783  0004                     interrupt_function:	
 13784  007E                     saved_w	set	btemp
 13785  0004  00FE               	movwf	btemp
 13786  0005  0E03               	swapf	3,w
 13787  0006  00F7               	movwf	??_isr
 13788  0007  0804               	movf	4,w
 13789  0008  00F8               	movwf	??_isr+1
 13790  0009  080A               	movf	10,w
 13791  000A  00F9               	movwf	??_isr+2
 13792  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13793  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13794  000D  087F               	movf	btemp+1,w
 13795  000E  00FA               	movwf	??_isr+3
 13796  000F  160A  158A  2F24   	ljmp	_isr
=======
 11511 ;;		On exit  : 0/0
 11512 ;;		Unchanged: 0/0
 11513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11514 ;;      Params:         0       5       0       0       0
 11515 ;;      Locals:         0       4       0       0       0
 11516 ;;      Temps:          0       2       0       0       0
 11517 ;;      Totals:         0      11       0       0       0
 11518 ;;Total ram usage:       11 bytes
 11519 ;; Hardware stack levels used:    1
 11520 ;; Hardware stack levels required when called:    3
 11521 ;; This function calls:
 11522 ;;		_I2C_Master_Read
 11523 ;;		_I2C_Master_RepeatedStart
 11524 ;;		_I2C_Master_Start
 11525 ;;		_I2C_Master_Stop
 11526 ;;		_I2C_Master_Write
 11527 ;; This function is called by:
 11528 ;;		_Decodify_Command
 11529 ;; This function uses a non-reentrant model
 11530 ;;
 11531                           
 11532                           
 11533                           ;psect for function _EEPROM_24C1025_Read_Str
 11534  1694                     _EEPROM_24C1025_Read_Str:	
 11535                           
 11536                           ;incstack = 0
 11537                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11538                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 11539  1694  1283               	bcf	3,5	;RP0=0, select bank0
 11540  1695  1303               	bcf	3,6	;RP1=0, select bank0
 11541  1696  00AE               	movwf	EEPROM_24C1025_Read_Str@chip_add
 11542                           
 11543                           ;EEPROM_24C1025.c: 198:      unsigned char range=0;
 11544  1697  01AF               	clrf	EEPROM_24C1025_Read_Str@range
 11545                           
 11546                           ;EEPROM_24C1025.c: 199:      unsigned char ctrl;;EEPROM_24C1025.c: 201:      if(mem_add>
      +                          0x1FFFF) return;
 11547  1698  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11548  1699  1D03               	btfss	3,2
 11549  169A  0008               	return
 11550  169B  3002               	movlw	2
 11551  169C  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11552  169D  1D03               	skipz
 11553  169E  2EA7               	goto	u6963
 11554  169F  3000               	movlw	0
 11555  16A0  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11556  16A1  1D03               	skipz
 11557  16A2  2EA7               	goto	u6963
 11558  16A3  3000               	movlw	0
 11559  16A4  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11560  16A5  1D03               	skipz
 11561  16A6  2EA7               	goto	u6963
 11562  16A7                     u6963:	
 11563  16A7  1803               	btfsc	3,0
 11564  16A8  0008               	return
 11565                           
 11566                           ;EEPROM_24C1025.c: 203:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11567  16A9  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11568  16AA  1D03               	btfss	3,2
 11569  16AB  2EBA               	goto	l6608
 11570  16AC  3001               	movlw	1
 11571  16AD  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11572  16AE  1D03               	skipz
 11573  16AF  2EB8               	goto	u6973
 11574  16B0  3000               	movlw	0
 11575  16B1  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11576  16B2  1D03               	skipz
 11577  16B3  2EB8               	goto	u6973
 11578  16B4  3000               	movlw	0
 11579  16B5  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11580  16B6  1D03               	skipz
 11581  16B7  2EB8               	goto	u6973
 11582  16B8                     u6973:	
 11583  16B8  1C03               	btfss	3,0
 11584  16B9  2EBF               	goto	l6610
 11585  16BA                     l6608:	
 11586  16BA  3008               	movlw	8
 11587  16BB  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11588  16BC  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11589  16BD  00AF               	movwf	EEPROM_24C1025_Read_Str@range
 11590  16BE  2EC0               	goto	l6612
 11591  16BF                     l6610:	
 11592  16BF  01AF               	clrf	EEPROM_24C1025_Read_Str@range
 11593  16C0                     l6612:	
 11594                           
 11595                           ;EEPROM_24C1025.c: 204:      ctrl=chip_add;
 11596  16C0  082E               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 11597  16C1  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11598  16C2  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11599  16C3  00B0               	movwf	EEPROM_24C1025_Read_Str@ctrl
 11600                           
 11601                           ;EEPROM_24C1025.c: 205:      ctrl<<=1;
 11602  16C4  1003               	clrc
 11603  16C5  0DB0               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 11604                           
 11605                           ;EEPROM_24C1025.c: 206:      ctrl |= 0xA0;
 11606  16C6  30A0               	movlw	160
 11607  16C7  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11608  16C8  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11609  16C9  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11610                           
 11611                           ;EEPROM_24C1025.c: 207:      ctrl |= 0b00000001;
 11612  16CA  1430               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 11613                           
 11614                           ;EEPROM_24C1025.c: 208:      ctrl |= range;
 11615  16CB  082F               	movf	EEPROM_24C1025_Read_Str@range,w
 11616  16CC  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11617  16CD  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11618  16CE  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11619                           
 11620                           ;EEPROM_24C1025.c: 210:      I2C_Master_Start();
 11621  16CF  160A  158A  213F  160A  118A  	fcall	_I2C_Master_Start
 11622                           
 11623                           ;EEPROM_24C1025.c: 211:      I2C_Master_Write(ctrl & 0xFE);
 11624  16D4  1283               	bcf	3,5	;RP0=0, select bank0
 11625  16D5  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11626  16D6  39FE               	andlw	254
 11627  16D7  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11628  16D8  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11629  16D9  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11630  16DA  00A0               	movwf	I2C_Master_Write@d
 11631  16DB  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11632  16DC  00A1               	movwf	I2C_Master_Write@d+1
 11633  16DD  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 11634                           
 11635                           ;EEPROM_24C1025.c: 212:      I2C_Master_Write(((char *)&mem_add)[1]);
 11636  16E2  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11637  16E3  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11638  16E4  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11639  16E5  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11640  16E6  00A0               	movwf	I2C_Master_Write@d
 11641  16E7  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11642  16E8  00A1               	movwf	I2C_Master_Write@d+1
 11643  16E9  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 11644                           
 11645                           ;EEPROM_24C1025.c: 213:      I2C_Master_Write(((char *)&mem_add)[0]);
 11646  16EE  0826               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11647  16EF  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11648  16F0  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11649  16F1  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11650  16F2  00A0               	movwf	I2C_Master_Write@d
 11651  16F3  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11652  16F4  00A1               	movwf	I2C_Master_Write@d+1
 11653  16F5  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 11654                           
 11655                           ;EEPROM_24C1025.c: 214:      I2C_Master_RepeatedStart();
 11656  16FA  160A  158A  2132  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11657                           
 11658                           ;EEPROM_24C1025.c: 215:      I2C_Master_Write(ctrl);
 11659  16FF  1283               	bcf	3,5	;RP0=0, select bank0
 11660  1700  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11661  1701  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11662  1702  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11663  1703  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11664  1704  00A0               	movwf	I2C_Master_Write@d
 11665  1705  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11666  1706  00A1               	movwf	I2C_Master_Write@d+1
 11667  1707  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 11668                           
 11669                           ;EEPROM_24C1025.c: 217:      cnt=0;
 11670  170C  01AD               	clrf	EEPROM_24C1025_Read_Str@cnt
 11671  170D                     l6634:	
 11672                           
 11673                           ;EEPROM_24C1025.c: 219:            if(mem_add>0x1FFFF) break;
 11674  170D  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11675  170E  1D03               	btfss	3,2
 11676  170F  2FE9               	goto	l6690
 11677  1710  3002               	movlw	2
 11678  1711  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11679  1712  1D03               	skipz
 11680  1713  2F1C               	goto	u6983
 11681  1714  3000               	movlw	0
 11682  1715  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11683  1716  1D03               	skipz
 11684  1717  2F1C               	goto	u6983
 11685  1718  3000               	movlw	0
 11686  1719  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11687  171A  1D03               	skipz
 11688  171B  2F1C               	goto	u6983
 11689  171C                     u6983:	
 11690  171C  1803               	btfsc	3,0
 11691  171D  2FE9               	goto	l6690
 11692                           
 11693                           ;EEPROM_24C1025.c: 220:            if((mem_add+1)%128==0)
 11694  171E  0826               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11695  171F  3E01               	addlw	1
 11696  1720  397F               	andlw	127
 11697  1721  1D03               	btfss	3,2
 11698  1722  2FB9               	goto	l6678
 11699                           
 11700                           ;EEPROM_24C1025.c: 221:              {;EEPROM_24C1025.c: 222:              (*texto)=I2C_
      +                          Master_Read(0);
 11701  1723  3000               	movlw	0
 11702  1724  00A0               	movwf	I2C_Master_Read@a
 11703  1725  00A1               	movwf	I2C_Master_Read@a+1
 11704  1726  160A  158A  23FD  160A  118A  	fcall	_I2C_Master_Read
 11705  172B  0820               	movf	?_I2C_Master_Read,w
 11706  172C  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11707  172D  082A               	movf	EEPROM_24C1025_Read_Str@texto,w
 11708  172E  0084               	movwf	4
 11709  172F  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11710  1730  1783               	bsf	3,7	;select IRP bank2
 11711  1731  0080               	movwf	0
 11712                           
 11713                           ;EEPROM_24C1025.c: 223:              I2C_Master_Stop();
 11714  1732  160A  158A  212D  160A  118A  	fcall	_I2C_Master_Stop
 11715                           
 11716                           ;EEPROM_24C1025.c: 225:              _delay((unsigned long)((5)*(8000000/4000.0)));
 11717  1737  300D               	movlw	13
 11718  1738  1283               	bcf	3,5	;RP0=0, select bank0
 11719  1739  1303               	bcf	3,6	;RP1=0, select bank0
 11720  173A  00AC               	movwf	??_EEPROM_24C1025_Read_Str+1
 11721  173B  30FB               	movlw	251
 11722  173C  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11723  173D                     u8027:	
 11724  173D  0BAB               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11725  173E  2F3D               	goto	u8027
 11726  173F  0BAC               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 11727  1740  2F3D               	goto	u8027
 11728                           
 11729                           ;EEPROM_24C1025.c: 226:              mem_add++;
 11730  1741  3001               	movlw	1
 11731  1742  1283               	bcf	3,5	;RP0=0, select bank0
 11732  1743  1303               	bcf	3,6	;RP1=0, select bank0
 11733  1744  07A6               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11734  1745  3000               	movlw	0
 11735  1746  1803               	skipnc
 11736  1747  3001               	movlw	1
 11737  1748  07A7               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11738  1749  3000               	movlw	0
 11739  174A  1803               	skipnc
 11740  174B  3001               	movlw	1
 11741  174C  07A8               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11742  174D  3000               	movlw	0
 11743  174E  1803               	skipnc
 11744  174F  3001               	movlw	1
 11745  1750  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11746                           
 11747                           ;EEPROM_24C1025.c: 227:              texto++;
 11748  1751  3001               	movlw	1
 11749  1752  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11750  1753  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11751  1754  07AA               	addwf	EEPROM_24C1025_Read_Str@texto,f
 11752                           
 11753                           ;EEPROM_24C1025.c: 228:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11754  1755  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11755  1756  1D03               	btfss	3,2
 11756  1757  2F66               	goto	l6652
 11757  1758  3001               	movlw	1
 11758  1759  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11759  175A  1D03               	skipz
 11760  175B  2F64               	goto	u7003
 11761  175C  3000               	movlw	0
 11762  175D  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11763  175E  1D03               	skipz
 11764  175F  2F64               	goto	u7003
 11765  1760  3000               	movlw	0
 11766  1761  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11767  1762  1D03               	skipz
 11768  1763  2F64               	goto	u7003
 11769  1764                     u7003:	
 11770  1764  1C03               	btfss	3,0
 11771  1765  2F6B               	goto	l6654
 11772  1766                     l6652:	
 11773  1766  3008               	movlw	8
 11774  1767  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11775  1768  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11776  1769  00AF               	movwf	EEPROM_24C1025_Read_Str@range
 11777  176A  2F6C               	goto	l6656
 11778  176B                     l6654:	
 11779  176B  01AF               	clrf	EEPROM_24C1025_Read_Str@range
 11780  176C                     l6656:	
 11781                           
 11782                           ;EEPROM_24C1025.c: 229:              ctrl=chip_add;
 11783  176C  082E               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 11784  176D  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11785  176E  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11786  176F  00B0               	movwf	EEPROM_24C1025_Read_Str@ctrl
 11787                           
 11788                           ;EEPROM_24C1025.c: 230:              ctrl<<=1;
 11789  1770  1003               	clrc
 11790  1771  0DB0               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 11791                           
 11792                           ;EEPROM_24C1025.c: 231:              ctrl |= 0xA0;
 11793  1772  30A0               	movlw	160
 11794  1773  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11795  1774  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11796  1775  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11797                           
 11798                           ;EEPROM_24C1025.c: 232:              ctrl |= 0b00000001;
 11799  1776  1430               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 11800                           
 11801                           ;EEPROM_24C1025.c: 233:              ctrl |= range;
 11802  1777  082F               	movf	EEPROM_24C1025_Read_Str@range,w
 11803  1778  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11804  1779  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11805  177A  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11806                           
 11807                           ;EEPROM_24C1025.c: 235:              I2C_Master_Start();
 11808  177B  160A  158A  213F  160A  118A  	fcall	_I2C_Master_Start
 11809                           
 11810                           ;EEPROM_24C1025.c: 236:              I2C_Master_Write(ctrl & 0xFE);
 11811  1780  1283               	bcf	3,5	;RP0=0, select bank0
 11812  1781  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11813  1782  39FE               	andlw	254
 11814  1783  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11815  1784  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11816  1785  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11817  1786  00A0               	movwf	I2C_Master_Write@d
 11818  1787  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11819  1788  00A1               	movwf	I2C_Master_Write@d+1
 11820  1789  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 11821                           
 11822                           ;EEPROM_24C1025.c: 237:              I2C_Master_Write(((char *)&mem_add)[1]);
 11823  178E  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11824  178F  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11825  1790  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11826  1791  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11827  1792  00A0               	movwf	I2C_Master_Write@d
 11828  1793  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11829  1794  00A1               	movwf	I2C_Master_Write@d+1
 11830  1795  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 11831                           
 11832                           ;EEPROM_24C1025.c: 238:              I2C_Master_Write(((char *)&mem_add)[0]);
 11833  179A  0826               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11834  179B  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11835  179C  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11836  179D  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11837  179E  00A0               	movwf	I2C_Master_Write@d
 11838  179F  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11839  17A0  00A1               	movwf	I2C_Master_Write@d+1
 11840  17A1  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 11841                           
 11842                           ;EEPROM_24C1025.c: 239:              I2C_Master_RepeatedStart();
 11843  17A6  160A  158A  2132  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11844                           
 11845                           ;EEPROM_24C1025.c: 240:              I2C_Master_Write(ctrl);
 11846  17AB  1283               	bcf	3,5	;RP0=0, select bank0
 11847  17AC  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11848  17AD  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11849  17AE  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11850  17AF  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11851  17B0  00A0               	movwf	I2C_Master_Write@d
 11852  17B1  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11853  17B2  00A1               	movwf	I2C_Master_Write@d+1
 11854  17B3  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 11855                           
 11856                           ;EEPROM_24C1025.c: 241:              }
 11857  17B8  2FE0               	goto	l6688
 11858  17B9                     l6678:	
 11859                           
 11860                           ;EEPROM_24C1025.c: 243:              {;EEPROM_24C1025.c: 244:              (*texto)=I2C_
      +                          Master_Read(1);
 11861  17B9  3001               	movlw	1
 11862  17BA  00A0               	movwf	I2C_Master_Read@a
 11863  17BB  3000               	movlw	0
 11864  17BC  00A1               	movwf	I2C_Master_Read@a+1
 11865  17BD  160A  158A  23FD  160A  118A  	fcall	_I2C_Master_Read
 11866  17C2  0820               	movf	?_I2C_Master_Read,w
 11867  17C3  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11868  17C4  082A               	movf	EEPROM_24C1025_Read_Str@texto,w
 11869  17C5  0084               	movwf	4
 11870  17C6  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11871  17C7  1783               	bsf	3,7	;select IRP bank2
 11872  17C8  0080               	movwf	0
 11873                           
 11874                           ;EEPROM_24C1025.c: 245:              if((*texto)==0)break;
 11875  17C9  082A               	movf	EEPROM_24C1025_Read_Str@texto,w
 11876  17CA  0084               	movwf	4
 11877  17CB  0800               	movf	0,w
 11878  17CC  1903               	btfsc	3,2
 11879  17CD  2FE9               	goto	l6690
 11880                           
 11881                           ;EEPROM_24C1025.c: 246:              texto++;
 11882  17CE  3001               	movlw	1
 11883  17CF  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11884  17D0  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11885  17D1  07AA               	addwf	EEPROM_24C1025_Read_Str@texto,f
 11886                           
 11887                           ;EEPROM_24C1025.c: 247:              mem_add++;
 11888  17D2  3001               	movlw	1
 11889  17D3  07A6               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11890  17D4  3000               	movlw	0
 11891  17D5  1803               	skipnc
 11892  17D6  3001               	movlw	1
 11893  17D7  07A7               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11894  17D8  3000               	movlw	0
 11895  17D9  1803               	skipnc
 11896  17DA  3001               	movlw	1
 11897  17DB  07A8               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11898  17DC  3000               	movlw	0
 11899  17DD  1803               	skipnc
 11900  17DE  3001               	movlw	1
 11901  17DF  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11902  17E0                     l6688:	
 11903                           
 11904                           ;EEPROM_24C1025.c: 249:        }while((cnt++)<64);
 11905  17E0  3001               	movlw	1
 11906  17E1  07AD               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 11907  17E2  30FF               	movlw	-1
 11908  17E3  072D               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 11909  17E4  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11910  17E5  3040               	movlw	64
 11911  17E6  022B               	subwf	??_EEPROM_24C1025_Read_Str,w
 11912  17E7  1C03               	skipc
 11913  17E8  2F0D               	goto	l6634
 11914  17E9                     l6690:	
 11915                           
 11916                           ;EEPROM_24C1025.c: 251:      I2C_Master_Read(0);
 11917  17E9  3000               	movlw	0
 11918  17EA  00A0               	movwf	I2C_Master_Read@a
 11919  17EB  00A1               	movwf	I2C_Master_Read@a+1
 11920  17EC  160A  158A  23FD  160A  118A  	fcall	_I2C_Master_Read
 11921                           
 11922                           ;EEPROM_24C1025.c: 252:      I2C_Master_Stop();
 11923  17F1  160A  158A  212D  160A  118A  	fcall	_I2C_Master_Stop
 11924                           
 11925                           ;EEPROM_24C1025.c: 253:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11926  17F6  30B9               	movlw	185
 11927  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 11928  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 11929  17F9  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11930  17FA                     u8037:	
 11931  17FA  2FFB               	nop2
 11932  17FB  2FFC               	nop2
 11933  17FC  0BAB               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11934  17FD  2FFA               	goto	u8037
 11935  17FE  2FFF               	nop2
 11936  17FF  0008               	return
 11937  1800                     __end_of_EEPROM_24C1025_Read_Str:	
 11938                           
 11939                           	psect	text50
 11940  1B54                     __ptext50:	
 11941 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 11942 ;; Defined at:
 11943 ;;		line 281 in file "EEPROM_24C1025.c"
 11944 ;; Parameters:    Size  Location     Type
 11945 ;;  chip_add        1    wreg     unsigned char 
 11946 ;;  mem_add         4   20[BANK0 ] unsigned long 
 11947 ;; Auto vars:     Size  Location     Type
 11948 ;;  chip_add        1   26[BANK0 ] unsigned char 
 11949 ;;  data            2   27[BANK0 ] unsigned char [2]
 11950 ;; Return value:  Size  Location     Type
 11951 ;;                  2   20[BANK0 ] unsigned int 
 11952 ;; Registers used:
 11953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11954 ;; Tracked objects:
 11955 ;;		On entry : 300/300
 11956 ;;		On exit  : 300/0
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11959 ;;      Params:         0       4       0       0       0
 11960 ;;      Locals:         0       3       0       0       0
 11961 ;;      Temps:          0       2       0       0       0
 11962 ;;      Totals:         0       9       0       0       0
 11963 ;;Total ram usage:        9 bytes
 11964 ;; Hardware stack levels used:    1
 11965 ;; Hardware stack levels required when called:    4
 11966 ;; This function calls:
 11967 ;;		_EEPROM_24C1025_Read_Buffer
 11968 ;; This function is called by:
 11969 ;;		_Decodify_Command
 11970 ;; This function uses a non-reentrant model
 11971 ;;
 11972                           
 11973                           
 11974                           ;psect for function _EEPROM_24C1025_Read_Int
 11975  1B54                     _EEPROM_24C1025_Read_Int:	
 11976                           
 11977                           ;incstack = 0
 11978                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11979                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 11980  1B54  1283               	bcf	3,5	;RP0=0, select bank0
 11981  1B55  1303               	bcf	3,6	;RP1=0, select bank0
 11982  1B56  00BA               	movwf	EEPROM_24C1025_Read_Int@chip_add
 11983                           
 11984                           ;EEPROM_24C1025.c: 282:     char data[2];;EEPROM_24C1025.c: 283:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 11985  1B57  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 11986  1B58  00A9               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11987  1B59  0836               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 11988  1B5A  00A8               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11989  1B5B  0835               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 11990  1B5C  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11991  1B5D  0834               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 11992  1B5E  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11993  1B5F  3002               	movlw	2
 11994  1B60  00B8               	movwf	??_EEPROM_24C1025_Read_Int
 11995  1B61  0838               	movf	??_EEPROM_24C1025_Read_Int,w
 11996  1B62  00AA               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 11997  1B63  303B               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 11998  1B64  00AB               	movwf	EEPROM_24C1025_Read_Buffer@data
 11999  1B65  3000               	movlw	0
 12000  1B66  00AC               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 12001  1B67  083A               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 12002  1B68  120A  158A  2028   	fcall	_EEPROM_24C1025_Read_Buffer
 12003                           
 12004                           ;EEPROM_24C1025.c: 284:     return (data[0]<<8)+data[1];
 12005  1B6B  1283               	bcf	3,5	;RP0=0, select bank0
 12006  1B6C  1303               	bcf	3,6	;RP1=0, select bank0
 12007  1B6D  083B               	movf	EEPROM_24C1025_Read_Int@data,w
 12008  1B6E  00B8               	movwf	??_EEPROM_24C1025_Read_Int
 12009  1B6F  01B9               	clrf	??_EEPROM_24C1025_Read_Int+1
 12010  1B70  0838               	movf	??_EEPROM_24C1025_Read_Int,w
 12011  1B71  00B9               	movwf	??_EEPROM_24C1025_Read_Int+1
 12012  1B72  01B8               	clrf	??_EEPROM_24C1025_Read_Int
 12013  1B73  083C               	movf	EEPROM_24C1025_Read_Int@data+1,w
 12014  1B74  0738               	addwf	??_EEPROM_24C1025_Read_Int,w
 12015  1B75  00B4               	movwf	?_EEPROM_24C1025_Read_Int
 12016  1B76  3000               	movlw	0
 12017  1B77  1803               	skipnc
 12018  1B78  3001               	movlw	1
 12019  1B79  0739               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 12020  1B7A  00B5               	movwf	?_EEPROM_24C1025_Read_Int+1
 12021  1B7B  0008               	return
 12022  1B7C                     __end_of_EEPROM_24C1025_Read_Int:	
 12023                           
 12024                           	psect	text51
 12025  19DE                     __ptext51:	
 12026 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 12027 ;; Defined at:
 12028 ;;		line 267 in file "EEPROM_24C1025.c"
 12029 ;; Parameters:    Size  Location     Type
 12030 ;;  chip_add        1    wreg     unsigned char 
 12031 ;;  mem_add         4   20[BANK0 ] unsigned long 
 12032 ;; Auto vars:     Size  Location     Type
 12033 ;;  chip_add        1   24[BANK0 ] unsigned char 
 12034 ;;  data            1   25[BANK0 ] unsigned char 
 12035 ;; Return value:  Size  Location     Type
 12036 ;;                  1    wreg      unsigned char 
 12037 ;; Registers used:
 12038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12039 ;; Tracked objects:
 12040 ;;		On entry : 300/300
 12041 ;;		On exit  : 300/0
 12042 ;;		Unchanged: 0/0
 12043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12044 ;;      Params:         0       4       0       0       0
 12045 ;;      Locals:         0       2       0       0       0
 12046 ;;      Temps:          0       0       0       0       0
 12047 ;;      Totals:         0       6       0       0       0
 12048 ;;Total ram usage:        6 bytes
 12049 ;; Hardware stack levels used:    1
 12050 ;; Hardware stack levels required when called:    4
 12051 ;; This function calls:
 12052 ;;		_EEPROM_24C1025_Read_Buffer
 12053 ;; This function is called by:
 12054 ;;		_Decodify_Command
 12055 ;; This function uses a non-reentrant model
 12056 ;;
 12057                           
 12058                           
 12059                           ;psect for function _EEPROM_24C1025_Read_Byte
 12060  19DE                     _EEPROM_24C1025_Read_Byte:	
 12061                           
 12062                           ;incstack = 0
 12063                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12064                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 12065  19DE  1283               	bcf	3,5	;RP0=0, select bank0
 12066  19DF  1303               	bcf	3,6	;RP1=0, select bank0
 12067  19E0  00B8               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 12068                           
 12069                           ;EEPROM_24C1025.c: 268:     char data;;EEPROM_24C1025.c: 269:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 12070  19E1  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 12071  19E2  00A9               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 12072  19E3  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 12073  19E4  00A8               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 12074  19E5  0835               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 12075  19E6  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 12076  19E7  0834               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 12077  19E8  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 12078  19E9  01AA               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 12079  19EA  0AAA               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 12080  19EB  3039               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 12081  19EC  00AB               	movwf	EEPROM_24C1025_Read_Buffer@data
 12082  19ED  3000               	movlw	0
 12083  19EE  00AC               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 12084  19EF  0838               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 12085  19F0  120A  158A  2028   	fcall	_EEPROM_24C1025_Read_Buffer
 12086                           
 12087                           ;EEPROM_24C1025.c: 270:     return data;
 12088  19F3  1283               	bcf	3,5	;RP0=0, select bank0
 12089  19F4  1303               	bcf	3,6	;RP1=0, select bank0
 12090  19F5  0839               	movf	EEPROM_24C1025_Read_Byte@data,w
 12091  19F6  0008               	return
 12092  19F7                     __end_of_EEPROM_24C1025_Read_Byte:	
 12093                           
 12094                           	psect	text52
 12095  0828                     __ptext52:	
 12096 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 12097 ;; Defined at:
 12098 ;;		line 74 in file "EEPROM_24C1025.c"
 12099 ;; Parameters:    Size  Location     Type
 12100 ;;  chip_add        1    wreg     unsigned char 
 12101 ;;  mem_add         4    6[BANK0 ] unsigned long 
 12102 ;;  sizedata        1   10[BANK0 ] unsigned char 
 12103 ;;  data            2   11[BANK0 ] PTR unsigned char 
 12104 ;;		 -> buffer(32), EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 12105 ;; Auto vars:     Size  Location     Type
 12106 ;;  chip_add        1   17[BANK0 ] unsigned char 
 12107 ;;  cnt             1   16[BANK0 ] unsigned char 
 12108 ;;  ctrl            1   19[BANK0 ] unsigned char 
 12109 ;;  range           1   18[BANK0 ] unsigned char 
 12110 ;;  cnt             1    0        unsigned char 
 12111 ;; Return value:  Size  Location     Type
 12112 ;;                  1    wreg      void 
 12113 ;; Registers used:
 12114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12115 ;; Tracked objects:
 12116 ;;		On entry : 0/300
 12117 ;;		On exit  : 0/0
 12118 ;;		Unchanged: 0/0
 12119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12120 ;;      Params:         0       7       0       0       0
 12121 ;;      Locals:         0       5       0       0       0
 12122 ;;      Temps:          0       2       0       0       0
 12123 ;;      Totals:         0      14       0       0       0
 12124 ;;Total ram usage:       14 bytes
 12125 ;; Hardware stack levels used:    1
 12126 ;; Hardware stack levels required when called:    3
 12127 ;; This function calls:
 12128 ;;		_I2C_Master_Read
 12129 ;;		_I2C_Master_RepeatedStart
 12130 ;;		_I2C_Master_Start
 12131 ;;		_I2C_Master_Stop
 12132 ;;		_I2C_Master_Write
 12133 ;; This function is called by:
 12134 ;;		_EEPROM_24C1025_Read_Byte
 12135 ;;		_EEPROM_24C1025_Read_Int
 12136 ;;		_Decodify_Command
 12137 ;; This function uses a non-reentrant model
 12138 ;;
 12139                           
 12140                           
 12141                           ;psect for function _EEPROM_24C1025_Read_Buffer
 12142  0828                     _EEPROM_24C1025_Read_Buffer:	
 12143                           
 12144                           ;incstack = 0
 12145                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12146                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 12147  0828  1283               	bcf	3,5	;RP0=0, select bank0
 12148  0829  1303               	bcf	3,6	;RP1=0, select bank0
 12149  082A  00B1               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 12150                           
 12151                           ;EEPROM_24C1025.c: 80:      unsigned char range=0;
 12152  082B  01B2               	clrf	EEPROM_24C1025_Read_Buffer@range
 12153                           
 12154                           ;EEPROM_24C1025.c: 81:      unsigned char ctrl;;EEPROM_24C1025.c: 83:      Delay_Led_Mem
      +                          ory=20;
 12155  082C  3014               	movlw	20
 12156  082D  00FA               	movwf	_Delay_Led_Memory	;volatile
 12157  082E  3000               	movlw	0
 12158  082F  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 12159                           
 12160                           ;EEPROM_24C1025.c: 85:      if(mem_add>0x1FFFF) return;
 12161  0830  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12162  0831  1D03               	btfss	3,2
 12163  0832  0008               	return
 12164  0833  3002               	movlw	2
 12165  0834  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12166  0835  1D03               	skipz
 12167  0836  283F               	goto	u5653
 12168  0837  3000               	movlw	0
 12169  0838  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12170  0839  1D03               	skipz
 12171  083A  283F               	goto	u5653
 12172  083B  3000               	movlw	0
 12173  083C  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12174  083D  1D03               	skipz
 12175  083E  283F               	goto	u5653
 12176  083F                     u5653:	
 12177  083F  1803               	btfsc	3,0
 12178  0840  0008               	return
 12179                           
 12180                           ;EEPROM_24C1025.c: 87:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12181  0841  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12182  0842  1D03               	btfss	3,2
 12183  0843  2852               	goto	l5888
 12184  0844  3001               	movlw	1
 12185  0845  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12186  0846  1D03               	skipz
 12187  0847  2850               	goto	u5663
 12188  0848  3000               	movlw	0
 12189  0849  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12190  084A  1D03               	skipz
 12191  084B  2850               	goto	u5663
 12192  084C  3000               	movlw	0
 12193  084D  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12194  084E  1D03               	skipz
 12195  084F  2850               	goto	u5663
 12196  0850                     u5663:	
 12197  0850  1C03               	btfss	3,0
 12198  0851  2857               	goto	l5890
 12199  0852                     l5888:	
 12200  0852  3008               	movlw	8
 12201  0853  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12202  0854  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12203  0855  00B2               	movwf	EEPROM_24C1025_Read_Buffer@range
 12204  0856  2858               	goto	l5892
 12205  0857                     l5890:	
 12206  0857  01B2               	clrf	EEPROM_24C1025_Read_Buffer@range
 12207  0858                     l5892:	
 12208                           
 12209                           ;EEPROM_24C1025.c: 88:      ctrl=chip_add;
 12210  0858  0831               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 12211  0859  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12212  085A  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12213  085B  00B3               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 12214                           
 12215                           ;EEPROM_24C1025.c: 89:      ctrl<<=1;
 12216  085C  1003               	clrc
 12217  085D  0DB3               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12218                           
 12219                           ;EEPROM_24C1025.c: 90:      ctrl |= 0xA0;
 12220  085E  30A0               	movlw	160
 12221  085F  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12222  0860  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12223  0861  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12224                           
 12225                           ;EEPROM_24C1025.c: 91:      ctrl |= 0b00000001;
 12226  0862  1433               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 12227                           
 12228                           ;EEPROM_24C1025.c: 92:      ctrl |= range;
 12229  0863  0832               	movf	EEPROM_24C1025_Read_Buffer@range,w
 12230  0864  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12231  0865  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12232  0866  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12233                           
 12234                           ;EEPROM_24C1025.c: 94:      I2C_Master_Start();
 12235  0867  160A  158A  213F  120A  158A  	fcall	_I2C_Master_Start
 12236                           
 12237                           ;EEPROM_24C1025.c: 95:      I2C_Master_Write(ctrl & 0xFE);
 12238  086C  1283               	bcf	3,5	;RP0=0, select bank0
 12239  086D  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12240  086E  39FE               	andlw	254
 12241  086F  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12242  0870  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12243  0871  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12244  0872  00A0               	movwf	I2C_Master_Write@d
 12245  0873  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12246  0874  00A1               	movwf	I2C_Master_Write@d+1
 12247  0875  160A  158A  2148  120A  158A  	fcall	_I2C_Master_Write
 12248                           
 12249                           ;EEPROM_24C1025.c: 96:      I2C_Master_Write(((char *)&mem_add)[1]);
 12250  087A  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12251  087B  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12252  087C  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12253  087D  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12254  087E  00A0               	movwf	I2C_Master_Write@d
 12255  087F  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12256  0880  00A1               	movwf	I2C_Master_Write@d+1
 12257  0881  160A  158A  2148  120A  158A  	fcall	_I2C_Master_Write
 12258                           
 12259                           ;EEPROM_24C1025.c: 97:      I2C_Master_Write(((char *)&mem_add)[0]);
 12260  0886  0826               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12261  0887  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12262  0888  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12263  0889  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12264  088A  00A0               	movwf	I2C_Master_Write@d
 12265  088B  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12266  088C  00A1               	movwf	I2C_Master_Write@d+1
 12267  088D  160A  158A  2148  120A  158A  	fcall	_I2C_Master_Write
 12268                           
 12269                           ;EEPROM_24C1025.c: 98:      I2C_Master_RepeatedStart();
 12270  0892  160A  158A  2132  120A  158A  	fcall	_I2C_Master_RepeatedStart
 12271                           
 12272                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(ctrl);
 12273  0897  1283               	bcf	3,5	;RP0=0, select bank0
 12274  0898  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12275  0899  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12276  089A  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12277  089B  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12278  089C  00A0               	movwf	I2C_Master_Write@d
 12279  089D  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12280  089E  00A1               	movwf	I2C_Master_Write@d+1
 12281  089F  160A  158A  2148  120A  158A  	fcall	_I2C_Master_Write
 12282                           
 12283                           ;EEPROM_24C1025.c: 101:      for(char cnt=0;cnt<(sizedata);cnt++)
 12284  08A4  01B0               	clrf	EEPROM_24C1025_Read_Buffer@cnt_98
 12285  08A5                     l5966:	
 12286  08A5  082A               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 12287  08A6  0230               	subwf	EEPROM_24C1025_Read_Buffer@cnt_98,w
 12288  08A7  1803               	btfsc	3,0
 12289  08A8  2984               	goto	l5968
 12290                           
 12291                           ;EEPROM_24C1025.c: 102:         {;EEPROM_24C1025.c: 103:            if(mem_add>0x1FFFF) 
      +                          break;
 12292  08A9  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12293  08AA  1D03               	btfss	3,2
 12294  08AB  2984               	goto	l5968
 12295  08AC  3002               	movlw	2
 12296  08AD  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12297  08AE  1D03               	skipz
 12298  08AF  28B8               	goto	u5673
 12299  08B0  3000               	movlw	0
 12300  08B1  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12301  08B2  1D03               	skipz
 12302  08B3  28B8               	goto	u5673
 12303  08B4  3000               	movlw	0
 12304  08B5  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12305  08B6  1D03               	skipz
 12306  08B7  28B8               	goto	u5673
 12307  08B8                     u5673:	
 12308  08B8  1803               	btfsc	3,0
 12309  08B9  2984               	goto	l5968
 12310                           
 12311                           ;EEPROM_24C1025.c: 104:            if((mem_add+1)%128==0)
 12312  08BA  0826               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12313  08BB  3E01               	addlw	1
 12314  08BC  397F               	andlw	127
 12315  08BD  1D03               	btfss	3,2
 12316  08BE  2959               	goto	l5958
 12317                           
 12318                           ;EEPROM_24C1025.c: 105:              {;EEPROM_24C1025.c: 106:              (*data)=I2C_M
      +                          aster_Read(0);
 12319  08BF  3000               	movlw	0
 12320  08C0  00A0               	movwf	I2C_Master_Read@a
 12321  08C1  00A1               	movwf	I2C_Master_Read@a+1
 12322  08C2  160A  158A  23FD  120A  158A  	fcall	_I2C_Master_Read
 12323  08C7  0820               	movf	?_I2C_Master_Read,w
 12324  08C8  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12325  08C9  082B               	movf	EEPROM_24C1025_Read_Buffer@data,w
 12326  08CA  0084               	movwf	4
 12327  08CB  1783               	bsf	3,7
 12328  08CC  1C2C               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 12329  08CD  1383               	bcf	3,7
 12330  08CE  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12331  08CF  0080               	movwf	0
 12332                           
 12333                           ;EEPROM_24C1025.c: 107:              I2C_Master_Stop();
 12334  08D0  160A  158A  212D  120A  158A  	fcall	_I2C_Master_Stop
 12335                           
 12336                           ;EEPROM_24C1025.c: 109:              _delay((unsigned long)((5)*(8000000/4000.0)));
 12337  08D5  300D               	movlw	13
 12338  08D6  1283               	bcf	3,5	;RP0=0, select bank0
 12339  08D7  1303               	bcf	3,6	;RP1=0, select bank0
 12340  08D8  00AE               	movwf	??_EEPROM_24C1025_Read_Buffer+1
 12341  08D9  30FB               	movlw	251
 12342  08DA  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12343  08DB                     u8047:	
 12344  08DB  0BAD               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 12345  08DC  28DB               	goto	u8047
 12346  08DD  0BAE               	decfsz	??_EEPROM_24C1025_Read_Buffer+1,f
 12347  08DE  28DB               	goto	u8047
 12348                           
 12349                           ;EEPROM_24C1025.c: 110:              mem_add++;
 12350  08DF  3001               	movlw	1
 12351  08E0  1283               	bcf	3,5	;RP0=0, select bank0
 12352  08E1  1303               	bcf	3,6	;RP1=0, select bank0
 12353  08E2  07A6               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 12354  08E3  3000               	movlw	0
 12355  08E4  1803               	skipnc
 12356  08E5  3001               	movlw	1
 12357  08E6  07A7               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 12358  08E7  3000               	movlw	0
 12359  08E8  1803               	skipnc
 12360  08E9  3001               	movlw	1
 12361  08EA  07A8               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 12362  08EB  3000               	movlw	0
 12363  08EC  1803               	skipnc
 12364  08ED  3001               	movlw	1
 12365  08EE  07A9               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 12366                           
 12367                           ;EEPROM_24C1025.c: 111:              data++;
 12368  08EF  3001               	movlw	1
 12369  08F0  07AB               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 12370  08F1  1803               	skipnc
 12371  08F2  0AAC               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 12372  08F3  3000               	movlw	0
 12373  08F4  07AC               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 12374                           
 12375                           ;EEPROM_24C1025.c: 112:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12376  08F5  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12377  08F6  1D03               	btfss	3,2
 12378  08F7  2906               	goto	l5932
 12379  08F8  3001               	movlw	1
 12380  08F9  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12381  08FA  1D03               	skipz
 12382  08FB  2904               	goto	u5693
 12383  08FC  3000               	movlw	0
 12384  08FD  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12385  08FE  1D03               	skipz
 12386  08FF  2904               	goto	u5693
 12387  0900  3000               	movlw	0
 12388  0901  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12389  0902  1D03               	skipz
 12390  0903  2904               	goto	u5693
 12391  0904                     u5693:	
 12392  0904  1C03               	btfss	3,0
 12393  0905  290B               	goto	l5934
 12394  0906                     l5932:	
 12395  0906  3008               	movlw	8
 12396  0907  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12397  0908  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12398  0909  00B2               	movwf	EEPROM_24C1025_Read_Buffer@range
 12399  090A  290C               	goto	l5936
 12400  090B                     l5934:	
 12401  090B  01B2               	clrf	EEPROM_24C1025_Read_Buffer@range
 12402  090C                     l5936:	
 12403                           
 12404                           ;EEPROM_24C1025.c: 113:              ctrl=chip_add;
 12405  090C  0831               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 12406  090D  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12407  090E  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12408  090F  00B3               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 12409                           
 12410                           ;EEPROM_24C1025.c: 114:              ctrl<<=1;
 12411  0910  1003               	clrc
 12412  0911  0DB3               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12413                           
 12414                           ;EEPROM_24C1025.c: 115:              ctrl |= 0xA0;
 12415  0912  30A0               	movlw	160
 12416  0913  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12417  0914  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12418  0915  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12419                           
 12420                           ;EEPROM_24C1025.c: 116:              ctrl |= 0b00000001;
 12421  0916  1433               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 12422                           
 12423                           ;EEPROM_24C1025.c: 117:              ctrl |= range;
 12424  0917  0832               	movf	EEPROM_24C1025_Read_Buffer@range,w
 12425  0918  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12426  0919  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12427  091A  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12428                           
 12429                           ;EEPROM_24C1025.c: 119:              I2C_Master_Start();
 12430  091B  160A  158A  213F  120A  158A  	fcall	_I2C_Master_Start
 12431                           
 12432                           ;EEPROM_24C1025.c: 120:              I2C_Master_Write(ctrl & 0xFE);
 12433  0920  1283               	bcf	3,5	;RP0=0, select bank0
 12434  0921  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12435  0922  39FE               	andlw	254
 12436  0923  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12437  0924  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12438  0925  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12439  0926  00A0               	movwf	I2C_Master_Write@d
 12440  0927  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12441  0928  00A1               	movwf	I2C_Master_Write@d+1
 12442  0929  160A  158A  2148  120A  158A  	fcall	_I2C_Master_Write
 12443                           
 12444                           ;EEPROM_24C1025.c: 121:              I2C_Master_Write(((char *)&mem_add)[1]);
 12445  092E  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12446  092F  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12447  0930  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12448  0931  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12449  0932  00A0               	movwf	I2C_Master_Write@d
 12450  0933  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12451  0934  00A1               	movwf	I2C_Master_Write@d+1
 12452  0935  160A  158A  2148  120A  158A  	fcall	_I2C_Master_Write
 12453                           
 12454                           ;EEPROM_24C1025.c: 122:              I2C_Master_Write(((char *)&mem_add)[0]);
 12455  093A  0826               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12456  093B  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12457  093C  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12458  093D  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12459  093E  00A0               	movwf	I2C_Master_Write@d
 12460  093F  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12461  0940  00A1               	movwf	I2C_Master_Write@d+1
 12462  0941  160A  158A  2148  120A  158A  	fcall	_I2C_Master_Write
 12463                           
 12464                           ;EEPROM_24C1025.c: 123:              I2C_Master_RepeatedStart();
 12465  0946  160A  158A  2132  120A  158A  	fcall	_I2C_Master_RepeatedStart
 12466                           
 12467                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl);
 12468  094B  1283               	bcf	3,5	;RP0=0, select bank0
 12469  094C  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12470  094D  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12471  094E  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12472  094F  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12473  0950  00A0               	movwf	I2C_Master_Write@d
 12474  0951  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12475  0952  00A1               	movwf	I2C_Master_Write@d+1
 12476  0953  160A  158A  2148  120A  158A  	fcall	_I2C_Master_Write
 12477                           
 12478                           ;EEPROM_24C1025.c: 125:              }
 12479  0958  297F               	goto	l5964
 12480  0959                     l5958:	
 12481                           
 12482                           ;EEPROM_24C1025.c: 127:              {;EEPROM_24C1025.c: 128:              (*data)=I2C_M
      +                          aster_Read(1);
 12483  0959  3001               	movlw	1
 12484  095A  00A0               	movwf	I2C_Master_Read@a
 12485  095B  3000               	movlw	0
 12486  095C  00A1               	movwf	I2C_Master_Read@a+1
 12487  095D  160A  158A  23FD  120A  158A  	fcall	_I2C_Master_Read
 12488  0962  0820               	movf	?_I2C_Master_Read,w
 12489  0963  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12490  0964  082B               	movf	EEPROM_24C1025_Read_Buffer@data,w
 12491  0965  0084               	movwf	4
 12492  0966  1783               	bsf	3,7
 12493  0967  1C2C               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 12494  0968  1383               	bcf	3,7
 12495  0969  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12496  096A  0080               	movwf	0
 12497                           
 12498                           ;EEPROM_24C1025.c: 129:              data++;
 12499  096B  3001               	movlw	1
 12500  096C  07AB               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 12501  096D  1803               	skipnc
 12502  096E  0AAC               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 12503  096F  3000               	movlw	0
 12504  0970  07AC               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 12505                           
 12506                           ;EEPROM_24C1025.c: 130:              mem_add++;
 12507  0971  3001               	movlw	1
 12508  0972  07A6               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 12509  0973  3000               	movlw	0
 12510  0974  1803               	skipnc
 12511  0975  3001               	movlw	1
 12512  0976  07A7               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 12513  0977  3000               	movlw	0
 12514  0978  1803               	skipnc
 12515  0979  3001               	movlw	1
 12516  097A  07A8               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 12517  097B  3000               	movlw	0
 12518  097C  1803               	skipnc
 12519  097D  3001               	movlw	1
 12520  097E  07A9               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 12521  097F                     l5964:	
 12522                           
 12523                           ;EEPROM_24C1025.c: 132:         }
 12524  097F  3001               	movlw	1
 12525  0980  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12526  0981  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12527  0982  07B0               	addwf	EEPROM_24C1025_Read_Buffer@cnt_98,f
 12528  0983  28A5               	goto	l5966
 12529  0984                     l5968:	
 12530                           
 12531                           ;EEPROM_24C1025.c: 133:         I2C_Master_Read(0);
 12532  0984  3000               	movlw	0
 12533  0985  00A0               	movwf	I2C_Master_Read@a
 12534  0986  00A1               	movwf	I2C_Master_Read@a+1
 12535  0987  160A  158A  23FD  120A  158A  	fcall	_I2C_Master_Read
 12536                           
 12537                           ;EEPROM_24C1025.c: 134:         I2C_Master_Stop();
 12538  098C  160A  158A  212D  120A  158A  	fcall	_I2C_Master_Stop
 12539                           
 12540                           ;EEPROM_24C1025.c: 135:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 12541  0991  30B9               	movlw	185
 12542  0992  1283               	bcf	3,5	;RP0=0, select bank0
 12543  0993  1303               	bcf	3,6	;RP1=0, select bank0
 12544  0994  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12545  0995                     u8057:	
 12546  0995  2996               	nop2
 12547  0996  2997               	nop2
 12548  0997  0BAD               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 12549  0998  2995               	goto	u8057
 12550  0999  299A               	nop2
 12551  099A  0008               	return
 12552  099B                     __end_of_EEPROM_24C1025_Read_Buffer:	
 12553                           
 12554                           	psect	text53
 12555  1932                     __ptext53:	
 12556 ;; *************** function _I2C_Master_RepeatedStart *****************
 12557 ;; Defined at:
 12558 ;;		line 52 in file "I2C.c"
 12559 ;; Parameters:    Size  Location     Type
 12560 ;;		None
 12561 ;; Auto vars:     Size  Location     Type
 12562 ;;		None
 12563 ;; Return value:  Size  Location     Type
 12564 ;;                  1    wreg      void 
 12565 ;; Registers used:
 12566 ;;		wreg, status,2, status,0, pclath, cstack
 12567 ;; Tracked objects:
 12568 ;;		On entry : 300/0
 12569 ;;		On exit  : 300/100
 12570 ;;		Unchanged: 0/0
 12571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12572 ;;      Params:         0       0       0       0       0
 12573 ;;      Locals:         0       0       0       0       0
 12574 ;;      Temps:          0       0       0       0       0
 12575 ;;      Totals:         0       0       0       0       0
 12576 ;;Total ram usage:        0 bytes
 12577 ;; Hardware stack levels used:    1
 12578 ;; Hardware stack levels required when called:    2
 12579 ;; This function calls:
 12580 ;;		_I2C_Master_Wait
 12581 ;; This function is called by:
 12582 ;;		_EEPROM_24C1025_Read_Buffer
 12583 ;;		_EEPROM_24C1025_Read_Str
 12584 ;; This function uses a non-reentrant model
 12585 ;;
 12586                           
 12587                           
 12588                           ;psect for function _I2C_Master_RepeatedStart
 12589  1932                     _I2C_Master_RepeatedStart:	
 12590                           
 12591                           ;I2C.c: 54:   I2C_Master_Wait();
 12592                           
 12593                           ;incstack = 0
 12594                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 12595  1932  160A  158A  2137   	fcall	_I2C_Master_Wait
 12596                           
 12597                           ;I2C.c: 55:   RSEN = 1;
 12598  1935  1491               	bsf	17,1	;volatile
 12599  1936  0008               	return
 12600  1937                     __end_of_I2C_Master_RepeatedStart:	
 12601                           
 12602                           	psect	text54
 12603  1BFD                     __ptext54:	
 12604 ;; *************** function _I2C_Master_Read *****************
 12605 ;; Defined at:
 12606 ;;		line 71 in file "I2C.c"
 12607 ;; Parameters:    Size  Location     Type
 12608 ;;  a               2    0[BANK0 ] unsigned short 
 12609 ;; Auto vars:     Size  Location     Type
 12610 ;;  temp            2    4[BANK0 ] unsigned short 
 12611 ;; Return value:  Size  Location     Type
 12612 ;;                  2    0[BANK0 ] unsigned short 
 12613 ;; Registers used:
 12614 ;;		wreg, status,2, status,0, pclath, cstack
 12615 ;; Tracked objects:
 12616 ;;		On entry : 300/0
 12617 ;;		On exit  : 300/0
 12618 ;;		Unchanged: 0/0
 12619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12620 ;;      Params:         0       2       0       0       0
 12621 ;;      Locals:         0       2       0       0       0
 12622 ;;      Temps:          0       2       0       0       0
 12623 ;;      Totals:         0       6       0       0       0
 12624 ;;Total ram usage:        6 bytes
 12625 ;; Hardware stack levels used:    1
 12626 ;; Hardware stack levels required when called:    2
 12627 ;; This function calls:
 12628 ;;		_I2C_Master_Wait
 12629 ;; This function is called by:
 12630 ;;		_EEPROM_24C1025_Read_Buffer
 12631 ;;		_EEPROM_24C1025_Read_Str
 12632 ;; This function uses a non-reentrant model
 12633 ;;
 12634                           
 12635                           
 12636                           ;psect for function _I2C_Master_Read
 12637  1BFD                     _I2C_Master_Read:	
 12638                           
 12639                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:   u
      +                          nsigned short temp;;I2C.c: 74:   generic_status.flag_main_loop_WDT=1;
 12640                           
 12641                           ;incstack = 0
 12642                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 12643  1BFD  1683               	bsf	3,5	;RP0=1, select bank1
 12644  1BFE  17E9               	bsf	_generic_status^(0+128),7
 12645                           
 12646                           ;I2C.c: 75:   I2C_Master_Wait();
 12647  1BFF  160A  158A  2137  160A  158A  	fcall	_I2C_Master_Wait
 12648                           
 12649                           ;I2C.c: 76:   RCEN = 1;
 12650  1C04  1591               	bsf	17,3	;volatile
 12651                           
 12652                           ;I2C.c: 77:   I2C_Master_Wait();
 12653  1C05  160A  158A  2137  160A  158A  	fcall	_I2C_Master_Wait
 12654                           
 12655                           ;I2C.c: 78:   temp = SSPBUF;
 12656  1C0A  1283               	bcf	3,5	;RP0=0, select bank0
 12657  1C0B  0813               	movf	19,w	;volatile
 12658  1C0C  00A2               	movwf	??_I2C_Master_Read
 12659  1C0D  01A3               	clrf	??_I2C_Master_Read+1
 12660  1C0E  0822               	movf	??_I2C_Master_Read,w
 12661  1C0F  00A4               	movwf	I2C_Master_Read@temp
 12662  1C10  0823               	movf	??_I2C_Master_Read+1,w
 12663  1C11  00A5               	movwf	I2C_Master_Read@temp+1
 12664                           
 12665                           ;I2C.c: 79:   I2C_Master_Wait();
 12666  1C12  160A  158A  2137  160A  158A  	fcall	_I2C_Master_Wait
 12667                           
 12668                           ;I2C.c: 80:   ACKDT = (a)?0:1;
 12669  1C17  1283               	bcf	3,5	;RP0=0, select bank0
 12670  1C18  0820               	movf	I2C_Master_Read@a,w
 12671  1C19  0421               	iorwf	I2C_Master_Read@a+1,w
 12672  1C1A  1D03               	btfss	3,2
 12673  1C1B  2C20               	goto	u5460
 12674  1C1C  1683               	bsf	3,5	;RP0=1, select bank1
 12675  1C1D  1303               	bcf	3,6	;RP1=0, select bank1
 12676  1C1E  1691               	bsf	17,5	;volatile
 12677  1C1F  2C23               	goto	l5800
 12678  1C20                     u5460:	
 12679  1C20  1683               	bsf	3,5	;RP0=1, select bank1
 12680  1C21  1303               	bcf	3,6	;RP1=0, select bank1
 12681  1C22  1291               	bcf	17,5	;volatile
 12682  1C23                     l5800:	
 12683                           
 12684                           ;I2C.c: 81:   ACKEN = 1;
 12685  1C23  1611               	bsf	17,4	;volatile
 12686                           
 12687                           ;I2C.c: 82:   return temp;
 12688  1C24  1283               	bcf	3,5	;RP0=0, select bank0
 12689  1C25  0825               	movf	I2C_Master_Read@temp+1,w
 12690  1C26  00A1               	movwf	?_I2C_Master_Read+1
 12691  1C27  0824               	movf	I2C_Master_Read@temp,w
 12692  1C28  00A0               	movwf	?_I2C_Master_Read
 12693  1C29  0008               	return
 12694  1C2A                     __end_of_I2C_Master_Read:	
 12695                           
 12696                           	psect	text55
 12697  1014                     __ptext55:	
 12698 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12699 ;; Defined at:
 12700 ;;		line 288 in file "EEPROM_24C1025.c"
 12701 ;; Parameters:    Size  Location     Type
 12702 ;;  chip_add        1    wreg     unsigned char 
 12703 ;;  value           2   56[BANK0 ] unsigned int 
 12704 ;; Auto vars:     Size  Location     Type
 12705 ;;  chip_add        1   58[BANK0 ] unsigned char 
 12706 ;;  mem_add         4   59[BANK0 ] unsigned long 
 12707 ;; Return value:  Size  Location     Type
 12708 ;;                  1    wreg      void 
 12709 ;; Registers used:
 12710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12711 ;; Tracked objects:
 12712 ;;		On entry : 300/300
 12713 ;;		On exit  : 300/0
 12714 ;;		Unchanged: 0/0
 12715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12716 ;;      Params:         0       2       0       0       0
 12717 ;;      Locals:         0       5       0       0       0
 12718 ;;      Temps:          0       0       0       0       0
 12719 ;;      Totals:         0       7       0       0       0
 12720 ;;Total ram usage:        7 bytes
 12721 ;; Hardware stack levels used:    1
 12722 ;; Hardware stack levels required when called:    5
 12723 ;; This function calls:
 12724 ;;		_EEPROM_24C1025_Write_Int
 12725 ;; This function is called by:
 12726 ;;		_Decodify_Command
 12727 ;; This function uses a non-reentrant model
 12728 ;;
 12729                           
 12730                           
 12731                           ;psect for function _EEPROM_24C1025_Fill_All
 12732  1014                     _EEPROM_24C1025_Fill_All:	
 12733                           
 12734                           ;incstack = 0
 12735                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12736                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12737  1014  1283               	bcf	3,5	;RP0=0, select bank0
 12738  1015  1303               	bcf	3,6	;RP1=0, select bank0
 12739  1016  00DA               	movwf	EEPROM_24C1025_Fill_All@chip_add
 12740                           
 12741                           ;EEPROM_24C1025.c: 289:      unsigned long mem_add;;EEPROM_24C1025.c: 290:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 12742  1017  3000               	movlw	0
 12743  1018  00DE               	movwf	EEPROM_24C1025_Fill_All@mem_add+3
 12744  1019  3000               	movlw	0
 12745  101A  00DD               	movwf	EEPROM_24C1025_Fill_All@mem_add+2
 12746  101B  3000               	movlw	0
 12747  101C  00DC               	movwf	EEPROM_24C1025_Fill_All@mem_add+1
 12748  101D  3000               	movlw	0
 12749  101E  00DB               	movwf	EEPROM_24C1025_Fill_All@mem_add
 12750  101F                     l6714:	
 12751                           
 12752                           ;EEPROM_24C1025.c: 291:         {;EEPROM_24C1025.c: 292:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 12753  101F  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12754  1020  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 12755  1021  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12756  1022  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 12757  1023  085C               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12758  1024  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 12759  1025  085B               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 12760  1026  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
 12761  1027  0859               	movf	EEPROM_24C1025_Fill_All@value+1,w
 12762  1028  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
 12763  1029  0858               	movf	EEPROM_24C1025_Fill_All@value,w
 12764  102A  00D2               	movwf	EEPROM_24C1025_Write_Int@data
 12765  102B  085A               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 12766  102C  160A  158A  2269  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
 12767  1031  0064               	clrwdt	;# 
 12768                           
 12769                           ;EEPROM_24C1025.c: 294:         }
 12770  1032  3002               	movlw	2
 12771  1033  1283               	bcf	3,5	;RP0=0, select bank0
 12772  1034  1303               	bcf	3,6	;RP1=0, select bank0
 12773  1035  07DB               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 12774  1036  3000               	movlw	0
 12775  1037  1803               	skipnc
 12776  1038  3001               	movlw	1
 12777  1039  07DC               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 12778  103A  3000               	movlw	0
 12779  103B  1803               	skipnc
 12780  103C  3001               	movlw	1
 12781  103D  07DD               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 12782  103E  3000               	movlw	0
 12783  103F  1803               	skipnc
 12784  1040  3001               	movlw	1
 12785  1041  07DE               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 12786  1042  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12787  1043  1D03               	btfss	3,2
 12788  1044  0008               	return
 12789  1045  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12790  1046  1D03               	btfss	3,2
 12791  1047  0008               	return
 12792  1048  3004               	movlw	4
 12793  1049  025C               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12794  104A  1D03               	skipz
 12795  104B  2850               	goto	u7033
 12796  104C  3000               	movlw	0
 12797  104D  025B               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 12798  104E  1D03               	skipz
 12799  104F  2850               	goto	u7033
 12800  1050                     u7033:	
 12801  1050  1803               	btfsc	3,0
 12802  1051  0008               	return
 12803  1052  281F               	goto	l6714
 12804  1053                     __end_of_EEPROM_24C1025_Fill_All:	
 12805                           
 12806                           	psect	text56
 12807  1A69                     __ptext56:	
 12808 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 12809 ;; Defined at:
 12810 ;;		line 273 in file "EEPROM_24C1025.c"
 12811 ;; Parameters:    Size  Location     Type
 12812 ;;  chip_add        1    wreg     unsigned char 
 12813 ;;  mem_add         4   46[BANK0 ] unsigned long 
 12814 ;;  data            2   50[BANK0 ] int 
 12815 ;; Auto vars:     Size  Location     Type
 12816 ;;  chip_add        1   53[BANK0 ] unsigned char 
 12817 ;;  local           2   54[BANK0 ] unsigned char [2]
 12818 ;; Return value:  Size  Location     Type
 12819 ;;                  1    wreg      void 
 12820 ;; Registers used:
 12821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12822 ;; Tracked objects:
 12823 ;;		On entry : 0/300
 12824 ;;		On exit  : 0/0
 12825 ;;		Unchanged: 0/0
 12826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12827 ;;      Params:         0       6       0       0       0
 12828 ;;      Locals:         0       3       0       0       0
 12829 ;;      Temps:          0       1       0       0       0
 12830 ;;      Totals:         0      10       0       0       0
 12831 ;;Total ram usage:       10 bytes
 12832 ;; Hardware stack levels used:    1
 12833 ;; Hardware stack levels required when called:    4
 12834 ;; This function calls:
 12835 ;;		_EEPROM_24C1025_Write_Buffer
 12836 ;; This function is called by:
 12837 ;;		_EEPROM_24C1025_Fill_All
 12838 ;;		_Decodify_Command
 12839 ;;		_Save_Log
 12840 ;; This function uses a non-reentrant model
 12841 ;;
 12842                           
 12843                           
 12844                           ;psect for function _EEPROM_24C1025_Write_Int
 12845  1A69                     _EEPROM_24C1025_Write_Int:	
 12846                           
 12847                           ;incstack = 0
 12848                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12849                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 12850  1A69  1283               	bcf	3,5	;RP0=0, select bank0
 12851  1A6A  1303               	bcf	3,6	;RP1=0, select bank0
 12852  1A6B  00D5               	movwf	EEPROM_24C1025_Write_Int@chip_add
 12853                           
 12854                           ;EEPROM_24C1025.c: 274:      char local[2];;EEPROM_24C1025.c: 275:      local[0]=((char 
      +                          *)&data)[1];
 12855  1A6C  0853               	movf	EEPROM_24C1025_Write_Int@data+1,w
 12856  1A6D  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12857  1A6E  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12858  1A6F  00D6               	movwf	EEPROM_24C1025_Write_Int@local
 12859                           
 12860                           ;EEPROM_24C1025.c: 276:      local[1]=((char *)&data)[0];
 12861  1A70  0852               	movf	EEPROM_24C1025_Write_Int@data,w
 12862  1A71  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12863  1A72  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12864  1A73  00D7               	movwf	EEPROM_24C1025_Write_Int@local+1
 12865                           
 12866                           ;EEPROM_24C1025.c: 277:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12867  1A74  0851               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 12868  1A75  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12869  1A76  0850               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 12870  1A77  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12871  1A78  084F               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 12872  1A79  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12873  1A7A  084E               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 12874  1A7B  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12875  1A7C  3002               	movlw	2
 12876  1A7D  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12877  1A7E  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12878  1A7F  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12879  1A80  3056               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12880  1A81  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 12881  1A82  3000               	movlw	0
 12882  1A83  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12883  1A84  0855               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 12884  1A85  160A  118A  2531   	fcall	_EEPROM_24C1025_Write_Buffer
 12885  1A88  0008               	return
 12886  1A89                     __end_of_EEPROM_24C1025_Write_Int:	
 12887                           
 12888                           	psect	text57
 12889  1531                     __ptext57:	
 12890 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12891 ;; Defined at:
 12892 ;;		line 13 in file "EEPROM_24C1025.c"
 12893 ;; Parameters:    Size  Location     Type
 12894 ;;  chip_add        1    wreg     unsigned char 
 12895 ;;  mem_add         4    2[BANK0 ] unsigned long 
 12896 ;;  sizedata        1    6[BANK0 ] unsigned char 
 12897 ;;  data            2    7[BANK0 ] PTR unsigned char 
 12898 ;;		 -> usart_protocol.value(10), usart_protocol(16), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 12899 ;; Auto vars:     Size  Location     Type
 12900 ;;  chip_add        1   12[BANK0 ] unsigned char 
 12901 ;;  ctrl            1   14[BANK0 ] unsigned char 
 12902 ;;  range           1   13[BANK0 ] unsigned char 
 12903 ;;  count           1   11[BANK0 ] unsigned char 
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  1    wreg      void 
 12906 ;; Registers used:
 12907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/300
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12913 ;;      Params:         0       7       0       0       0
 12914 ;;      Locals:         0       4       0       0       0
 12915 ;;      Temps:          0       2       0       0       0
 12916 ;;      Totals:         0      13       0       0       0
 12917 ;;Total ram usage:       13 bytes
 12918 ;; Hardware stack levels used:    1
 12919 ;; Hardware stack levels required when called:    3
 12920 ;; This function calls:
 12921 ;;		_I2C_Master_Start
 12922 ;;		_I2C_Master_Stop
 12923 ;;		_I2C_Master_Write
 12924 ;; This function is called by:
 12925 ;;		_EEPROM_24C1025_Write_Byte
 12926 ;;		_EEPROM_24C1025_Write_Int
 12927 ;;		_Decodify_Command
 12928 ;; This function uses a non-reentrant model
 12929 ;;
 12930                           
 12931                           
 12932                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12933  1531                     _EEPROM_24C1025_Write_Buffer:	
 12934                           
 12935                           ;incstack = 0
 12936                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack
      +                          ]
 12937                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12938  1531  1283               	bcf	3,5	;RP0=0, select bank0
 12939  1532  1303               	bcf	3,6	;RP1=0, select bank0
 12940  1533  00AC               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12941                           
 12942                           ;EEPROM_24C1025.c: 19:      unsigned char ctrl;;EEPROM_24C1025.c: 20:      unsigned char
      +                           count;;EEPROM_24C1025.c: 22:      Delay_Led_Memory=20;
 12943  1534  3014               	movlw	20
 12944  1535  00FA               	movwf	_Delay_Led_Memory	;volatile
 12945  1536  3000               	movlw	0
 12946  1537  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 12947                           
 12948                           ;EEPROM_24C1025.c: 24:      if(mem_add>0x1FFFF) return;
 12949  1538  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12950  1539  1D03               	btfss	3,2
 12951  153A  0008               	return
 12952  153B  3002               	movlw	2
 12953  153C  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12954  153D  1D03               	skipz
 12955  153E  2D47               	goto	u5403
 12956  153F  3000               	movlw	0
 12957  1540  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12958  1541  1D03               	skipz
 12959  1542  2D47               	goto	u5403
 12960  1543  3000               	movlw	0
 12961  1544  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12962  1545  1D03               	skipz
 12963  1546  2D47               	goto	u5403
 12964  1547                     u5403:	
 12965  1547  1803               	btfsc	3,0
 12966  1548  0008               	return
 12967                           
 12968                           ;EEPROM_24C1025.c: 26:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12969  1549  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12970  154A  1D03               	btfss	3,2
 12971  154B  2D5A               	goto	l5710
 12972  154C  3001               	movlw	1
 12973  154D  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12974  154E  1D03               	skipz
 12975  154F  2D58               	goto	u5413
 12976  1550  3000               	movlw	0
 12977  1551  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12978  1552  1D03               	skipz
 12979  1553  2D58               	goto	u5413
 12980  1554  3000               	movlw	0
 12981  1555  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12982  1556  1D03               	skipz
 12983  1557  2D58               	goto	u5413
 12984  1558                     u5413:	
 12985  1558  1C03               	btfss	3,0
 12986  1559  2D5F               	goto	l5712
 12987  155A                     l5710:	
 12988  155A  3008               	movlw	8
 12989  155B  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 12990  155C  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12991  155D  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 12992  155E  2D60               	goto	l5714
 12993  155F                     l5712:	
 12994  155F  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 12995  1560                     l5714:	
 12996                           
 12997                           ;EEPROM_24C1025.c: 27:      ctrl=chip_add;
 12998  1560  082C               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12999  1561  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13000  1562  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13001  1563  00AE               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 13002                           
 13003                           ;EEPROM_24C1025.c: 28:      ctrl<<=1;
 13004  1564  1003               	clrc
 13005  1565  0DAE               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13006                           
 13007                           ;EEPROM_24C1025.c: 29:      ctrl |= 0xA0;
 13008  1566  30A0               	movlw	160
 13009  1567  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13010  1568  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13011  1569  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13012                           
 13013                           ;EEPROM_24C1025.c: 30:      ctrl |= range;
 13014  156A  082D               	movf	EEPROM_24C1025_Write_Buffer@range,w
 13015  156B  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13016  156C  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13017  156D  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13018                           
 13019                           ;EEPROM_24C1025.c: 32:      I2C_Master_Start();
 13020  156E  160A  158A  213F  160A  118A  	fcall	_I2C_Master_Start
 13021                           
 13022                           ;EEPROM_24C1025.c: 33:      I2C_Master_Write(ctrl);
 13023  1573  1283               	bcf	3,5	;RP0=0, select bank0
 13024  1574  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 13025  1575  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13026  1576  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13027  1577  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13028  1578  00A0               	movwf	I2C_Master_Write@d
 13029  1579  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13030  157A  00A1               	movwf	I2C_Master_Write@d+1
 13031  157B  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 13032                           
 13033                           ;EEPROM_24C1025.c: 34:      I2C_Master_Write(((char *)&mem_add)[1]);
 13034  1580  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13035  1581  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13036  1582  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13037  1583  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13038  1584  00A0               	movwf	I2C_Master_Write@d
 13039  1585  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13040  1586  00A1               	movwf	I2C_Master_Write@d+1
 13041  1587  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 13042                           
 13043                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(((char *)&mem_add)[0]);
 13044  158C  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13045  158D  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13046  158E  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13047  158F  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13048  1590  00A0               	movwf	I2C_Master_Write@d
 13049  1591  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13050  1592  00A1               	movwf	I2C_Master_Write@d+1
 13051  1593  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 13052                           
 13053                           ;EEPROM_24C1025.c: 36:      for(count=0;count<(sizedata-1);count++)
 13054  1598  01AB               	clrf	EEPROM_24C1025_Write_Buffer@count
 13055  1599                     l5776:	
 13056  1599  0826               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 13057  159A  3EFF               	addlw	255
 13058  159B  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13059  159C  30FF               	movlw	255
 13060  159D  1803               	skipnc
 13061  159E  3000               	movlw	0
 13062  159F  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 13063  15A0  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13064  15A1  3A80               	xorlw	128
 13065  15A2  3C80               	sublw	128
 13066  15A3  1D03               	skipz
 13067  15A4  2DA7               	goto	u5455
 13068  15A5  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13069  15A6  022B               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 13070  15A7                     u5455:	
 13071  15A7  1803               	btfsc	3,0
 13072  15A8  2E71               	goto	l5778
 13073                           
 13074                           ;EEPROM_24C1025.c: 37:           {;EEPROM_24C1025.c: 38:           if(mem_add>0x1FFFF) r
      +                          eturn;
 13075  15A9  1283               	bcf	3,5	;RP0=0, select bank0
 13076  15AA  1303               	bcf	3,6	;RP1=0, select bank0
 13077  15AB  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 13078  15AC  1D03               	btfss	3,2
 13079  15AD  0008               	return
 13080  15AE  3002               	movlw	2
 13081  15AF  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 13082  15B0  1D03               	skipz
 13083  15B1  2DBA               	goto	u5423
 13084  15B2  3000               	movlw	0
 13085  15B3  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13086  15B4  1D03               	skipz
 13087  15B5  2DBA               	goto	u5423
 13088  15B6  3000               	movlw	0
 13089  15B7  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13090  15B8  1D03               	skipz
 13091  15B9  2DBA               	goto	u5423
 13092  15BA                     u5423:	
 13093  15BA  1803               	btfsc	3,0
 13094  15BB  0008               	return
 13095                           
 13096                           ;EEPROM_24C1025.c: 39:           if((mem_add+1)%128==0)
 13097  15BC  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13098  15BD  3E01               	addlw	1
 13099  15BE  397F               	andlw	127
 13100  15BF  1D03               	btfss	3,2
 13101  15C0  2E47               	goto	l5768
 13102                           
 13103                           ;EEPROM_24C1025.c: 40:             {;EEPROM_24C1025.c: 41:             I2C_Master_Write(
      +                          *data);
 13104  15C1  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13105  15C2  0084               	movwf	4
 13106  15C3  1783               	bsf	3,7
 13107  15C4  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13108  15C5  1383               	bcf	3,7
 13109  15C6  0800               	movf	0,w
 13110  15C7  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13111  15C8  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13112  15C9  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13113  15CA  00A0               	movwf	I2C_Master_Write@d
 13114  15CB  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13115  15CC  00A1               	movwf	I2C_Master_Write@d+1
 13116  15CD  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 13117                           
 13118                           ;EEPROM_24C1025.c: 42:             I2C_Master_Stop();
 13119  15D2  160A  158A  212D  160A  118A  	fcall	_I2C_Master_Stop
 13120                           
 13121                           ;EEPROM_24C1025.c: 44:             _delay((unsigned long)((5)*(8000000/4000.0)));
 13122  15D7  300D               	movlw	13
 13123  15D8  1283               	bcf	3,5	;RP0=0, select bank0
 13124  15D9  1303               	bcf	3,6	;RP1=0, select bank0
 13125  15DA  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 13126  15DB  30FB               	movlw	251
 13127  15DC  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13128  15DD                     u8067:	
 13129  15DD  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 13130  15DE  2DDD               	goto	u8067
 13131  15DF  0BAA               	decfsz	??_EEPROM_24C1025_Write_Buffer+1,f
 13132  15E0  2DDD               	goto	u8067
 13133                           
 13134                           ;EEPROM_24C1025.c: 45:             mem_add++;
 13135  15E1  3001               	movlw	1
 13136  15E2  1283               	bcf	3,5	;RP0=0, select bank0
 13137  15E3  1303               	bcf	3,6	;RP1=0, select bank0
 13138  15E4  07A2               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 13139  15E5  3000               	movlw	0
 13140  15E6  1803               	skipnc
 13141  15E7  3001               	movlw	1
 13142  15E8  07A3               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 13143  15E9  3000               	movlw	0
 13144  15EA  1803               	skipnc
 13145  15EB  3001               	movlw	1
 13146  15EC  07A4               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 13147  15ED  3000               	movlw	0
 13148  15EE  1803               	skipnc
 13149  15EF  3001               	movlw	1
 13150  15F0  07A5               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 13151                           
 13152                           ;EEPROM_24C1025.c: 46:             data++;
 13153  15F1  3001               	movlw	1
 13154  15F2  07A7               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 13155  15F3  1803               	skipnc
 13156  15F4  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 13157  15F5  3000               	movlw	0
 13158  15F6  07A8               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 13159                           
 13160                           ;EEPROM_24C1025.c: 47:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 13161  15F7  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 13162  15F8  1D03               	btfss	3,2
 13163  15F9  2E08               	goto	l5748
 13164  15FA  3001               	movlw	1
 13165  15FB  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 13166  15FC  1D03               	skipz
 13167  15FD  2E06               	goto	u5443
 13168  15FE  3000               	movlw	0
 13169  15FF  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13170  1600  1D03               	skipz
 13171  1601  2E06               	goto	u5443
 13172  1602  3000               	movlw	0
 13173  1603  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13174  1604  1D03               	skipz
 13175  1605  2E06               	goto	u5443
 13176  1606                     u5443:	
 13177  1606  1C03               	btfss	3,0
 13178  1607  2E0D               	goto	l5750
 13179  1608                     l5748:	
 13180  1608  3008               	movlw	8
 13181  1609  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13182  160A  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13183  160B  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 13184  160C  2E0E               	goto	l5752
 13185  160D                     l5750:	
 13186  160D  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 13187  160E                     l5752:	
 13188                           
 13189                           ;EEPROM_24C1025.c: 48:             ctrl=chip_add;
 13190  160E  082C               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 13191  160F  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13192  1610  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13193  1611  00AE               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 13194                           
 13195                           ;EEPROM_24C1025.c: 49:             ctrl<<=1;
 13196  1612  1003               	clrc
 13197  1613  0DAE               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13198                           
 13199                           ;EEPROM_24C1025.c: 50:             ctrl |= 0xA0;
 13200  1614  30A0               	movlw	160
 13201  1615  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13202  1616  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13203  1617  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13204                           
 13205                           ;EEPROM_24C1025.c: 51:             ctrl |= range;
 13206  1618  082D               	movf	EEPROM_24C1025_Write_Buffer@range,w
 13207  1619  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13208  161A  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13209  161B  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13210                           
 13211                           ;EEPROM_24C1025.c: 53:             I2C_Master_Start();
 13212  161C  160A  158A  213F  160A  118A  	fcall	_I2C_Master_Start
 13213                           
 13214                           ;EEPROM_24C1025.c: 54:             I2C_Master_Write(ctrl);
 13215  1621  1283               	bcf	3,5	;RP0=0, select bank0
 13216  1622  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 13217  1623  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13218  1624  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13219  1625  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13220  1626  00A0               	movwf	I2C_Master_Write@d
 13221  1627  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13222  1628  00A1               	movwf	I2C_Master_Write@d+1
 13223  1629  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 13224                           
 13225                           ;EEPROM_24C1025.c: 55:             I2C_Master_Write(((char *)&mem_add)[1]);
 13226  162E  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13227  162F  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13228  1630  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13229  1631  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13230  1632  00A0               	movwf	I2C_Master_Write@d
 13231  1633  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13232  1634  00A1               	movwf	I2C_Master_Write@d+1
 13233  1635  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 13234                           
 13235                           ;EEPROM_24C1025.c: 56:             I2C_Master_Write(((char *)&mem_add)[0]);
 13236  163A  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13237  163B  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13238  163C  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13239  163D  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13240  163E  00A0               	movwf	I2C_Master_Write@d
 13241  163F  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13242  1640  00A1               	movwf	I2C_Master_Write@d+1
 13243  1641  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 13244                           
 13245                           ;EEPROM_24C1025.c: 57:             }
 13246  1646  2E6C               	goto	l5774
 13247  1647                     l5768:	
 13248                           
 13249                           ;EEPROM_24C1025.c: 59:             {;EEPROM_24C1025.c: 60:             I2C_Master_Write(
      +                          *data);
 13250  1647  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13251  1648  0084               	movwf	4
 13252  1649  1783               	bsf	3,7
 13253  164A  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13254  164B  1383               	bcf	3,7
 13255  164C  0800               	movf	0,w
 13256  164D  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13257  164E  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13258  164F  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13259  1650  00A0               	movwf	I2C_Master_Write@d
 13260  1651  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13261  1652  00A1               	movwf	I2C_Master_Write@d+1
 13262  1653  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 13263                           
 13264                           ;EEPROM_24C1025.c: 61:             data++;
 13265  1658  3001               	movlw	1
 13266  1659  07A7               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 13267  165A  1803               	skipnc
 13268  165B  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 13269  165C  3000               	movlw	0
 13270  165D  07A8               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 13271                           
 13272                           ;EEPROM_24C1025.c: 62:             mem_add++;
 13273  165E  3001               	movlw	1
 13274  165F  07A2               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 13275  1660  3000               	movlw	0
 13276  1661  1803               	skipnc
 13277  1662  3001               	movlw	1
 13278  1663  07A3               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 13279  1664  3000               	movlw	0
 13280  1665  1803               	skipnc
 13281  1666  3001               	movlw	1
 13282  1667  07A4               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 13283  1668  3000               	movlw	0
 13284  1669  1803               	skipnc
 13285  166A  3001               	movlw	1
 13286  166B  07A5               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 13287  166C                     l5774:	
 13288                           
 13289                           ;EEPROM_24C1025.c: 64:      }
 13290  166C  3001               	movlw	1
 13291  166D  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13292  166E  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13293  166F  07AB               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 13294  1670  2D99               	goto	l5776
 13295  1671                     l5778:	
 13296                           
 13297                           ;EEPROM_24C1025.c: 65:      I2C_Master_Write(*data);
 13298  1671  1283               	bcf	3,5	;RP0=0, select bank0
 13299  1672  1303               	bcf	3,6	;RP1=0, select bank0
 13300  1673  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13301  1674  0084               	movwf	4
 13302  1675  1783               	bsf	3,7
 13303  1676  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13304  1677  1383               	bcf	3,7
 13305  1678  0800               	movf	0,w
 13306  1679  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13307  167A  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13308  167B  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13309  167C  00A0               	movwf	I2C_Master_Write@d
 13310  167D  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13311  167E  00A1               	movwf	I2C_Master_Write@d+1
 13312  167F  160A  158A  2148  160A  118A  	fcall	_I2C_Master_Write
 13313                           
 13314                           ;EEPROM_24C1025.c: 66:      I2C_Master_Stop();
 13315  1684  160A  158A  212D  160A  118A  	fcall	_I2C_Master_Stop
 13316                           
 13317                           ;EEPROM_24C1025.c: 67:      _delay((unsigned long)((5)*(8000000/4000.0)));
 13318  1689  300D               	movlw	13
 13319  168A  1283               	bcf	3,5	;RP0=0, select bank0
 13320  168B  1303               	bcf	3,6	;RP1=0, select bank0
 13321  168C  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 13322  168D  30FB               	movlw	251
 13323  168E  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13324  168F                     u8077:	
 13325  168F  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 13326  1690  2E8F               	goto	u8077
 13327  1691  0BAA               	decfsz	??_EEPROM_24C1025_Write_Buffer+1,f
 13328  1692  2E8F               	goto	u8077
 13329  1693  0008               	return
 13330  1694                     __end_of_EEPROM_24C1025_Write_Buffer:	
 13331                           
 13332                           	psect	text58
 13333  1948                     __ptext58:	
 13334 ;; *************** function _I2C_Master_Write *****************
 13335 ;; Defined at:
 13336 ;;		line 64 in file "I2C.c"
 13337 ;; Parameters:    Size  Location     Type
 13338 ;;  d               2    0[BANK0 ] unsigned int 
 13339 ;; Auto vars:     Size  Location     Type
 13340 ;;		None
 13341 ;; Return value:  Size  Location     Type
 13342 ;;                  1    wreg      void 
 13343 ;; Registers used:
 13344 ;;		wreg, status,2, status,0, pclath, cstack
 13345 ;; Tracked objects:
 13346 ;;		On entry : 300/0
 13347 ;;		On exit  : 300/0
 13348 ;;		Unchanged: 0/0
 13349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13350 ;;      Params:         0       2       0       0       0
 13351 ;;      Locals:         0       0       0       0       0
 13352 ;;      Temps:          0       0       0       0       0
 13353 ;;      Totals:         0       2       0       0       0
 13354 ;;Total ram usage:        2 bytes
 13355 ;; Hardware stack levels used:    1
 13356 ;; Hardware stack levels required when called:    2
 13357 ;; This function calls:
 13358 ;;		_I2C_Master_Wait
 13359 ;; This function is called by:
 13360 ;;		_EEPROM_24C1025_Write_Buffer
 13361 ;;		_EEPROM_24C1025_Read_Buffer
 13362 ;;		_EEPROM_24C1025_Write_Str
 13363 ;;		_EEPROM_24C1025_Read_Str
 13364 ;; This function uses a non-reentrant model
 13365 ;;
 13366                           
 13367                           
 13368                           ;psect for function _I2C_Master_Write
 13369  1948                     _I2C_Master_Write:	
 13370                           
 13371                           ;I2C.c: 64: void I2C_Master_Write(unsigned d);I2C.c: 65: {;I2C.c: 66:   generic_status.f
      +                          lag_main_loop_WDT=1;
 13372                           
 13373                           ;incstack = 0
 13374                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 13375  1948  1683               	bsf	3,5	;RP0=1, select bank1
 13376  1949  17E9               	bsf	_generic_status^(0+128),7
 13377                           
 13378                           ;I2C.c: 67:   I2C_Master_Wait();
 13379  194A  160A  158A  2137   	fcall	_I2C_Master_Wait
 13380                           
 13381                           ;I2C.c: 68:   SSPBUF = d;
 13382  194D  1283               	bcf	3,5	;RP0=0, select bank0
 13383  194E  0820               	movf	I2C_Master_Write@d,w
 13384  194F  0093               	movwf	19	;volatile
 13385  1950  0008               	return
 13386  1951                     __end_of_I2C_Master_Write:	
 13387                           
 13388                           	psect	text59
 13389  192D                     __ptext59:	
 13390 ;; *************** function _I2C_Master_Stop *****************
 13391 ;; Defined at:
 13392 ;;		line 58 in file "I2C.c"
 13393 ;; Parameters:    Size  Location     Type
 13394 ;;		None
 13395 ;; Auto vars:     Size  Location     Type
 13396 ;;		None
 13397 ;; Return value:  Size  Location     Type
 13398 ;;                  1    wreg      void 
 13399 ;; Registers used:
 13400 ;;		wreg, status,2, status,0, pclath, cstack
 13401 ;; Tracked objects:
 13402 ;;		On entry : 300/800
 13403 ;;		On exit  : 300/100
 13404 ;;		Unchanged: 0/0
 13405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13406 ;;      Params:         0       0       0       0       0
 13407 ;;      Locals:         0       0       0       0       0
 13408 ;;      Temps:          0       0       0       0       0
 13409 ;;      Totals:         0       0       0       0       0
 13410 ;;Total ram usage:        0 bytes
 13411 ;; Hardware stack levels used:    1
 13412 ;; Hardware stack levels required when called:    2
 13413 ;; This function calls:
 13414 ;;		_I2C_Master_Wait
 13415 ;; This function is called by:
 13416 ;;		_EEPROM_24C1025_Write_Buffer
 13417 ;;		_EEPROM_24C1025_Read_Buffer
 13418 ;;		_EEPROM_24C1025_Write_Str
 13419 ;;		_EEPROM_24C1025_Read_Str
 13420 ;; This function uses a non-reentrant model
 13421 ;;
 13422                           
 13423                           
 13424                           ;psect for function _I2C_Master_Stop
 13425  192D                     _I2C_Master_Stop:	
 13426                           
 13427                           ;I2C.c: 60:   I2C_Master_Wait();
 13428                           
 13429                           ;incstack = 0
 13430                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 13431  192D  160A  158A  2137   	fcall	_I2C_Master_Wait
 13432                           
 13433                           ;I2C.c: 61:   PEN = 1;
 13434  1930  1511               	bsf	17,2	;volatile
 13435  1931  0008               	return
 13436  1932                     __end_of_I2C_Master_Stop:	
 13437                           
 13438                           	psect	text60
 13439  193F                     __ptext60:	
 13440 ;; *************** function _I2C_Master_Start *****************
 13441 ;; Defined at:
 13442 ;;		line 45 in file "I2C.c"
 13443 ;; Parameters:    Size  Location     Type
 13444 ;;		None
 13445 ;; Auto vars:     Size  Location     Type
 13446 ;;		None
 13447 ;; Return value:  Size  Location     Type
 13448 ;;                  1    wreg      void 
 13449 ;; Registers used:
 13450 ;;		wreg, status,2, status,0, pclath, cstack
 13451 ;; Tracked objects:
 13452 ;;		On entry : 300/0
 13453 ;;		On exit  : 300/100
 13454 ;;		Unchanged: 0/0
 13455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13456 ;;      Params:         0       0       0       0       0
 13457 ;;      Locals:         0       0       0       0       0
 13458 ;;      Temps:          0       0       0       0       0
 13459 ;;      Totals:         0       0       0       0       0
 13460 ;;Total ram usage:        0 bytes
 13461 ;; Hardware stack levels used:    1
 13462 ;; Hardware stack levels required when called:    2
 13463 ;; This function calls:
 13464 ;;		_I2C_Master_Wait
 13465 ;; This function is called by:
 13466 ;;		_EEPROM_24C1025_Write_Buffer
 13467 ;;		_EEPROM_24C1025_Read_Buffer
 13468 ;;		_EEPROM_24C1025_Write_Str
 13469 ;;		_EEPROM_24C1025_Read_Str
 13470 ;; This function uses a non-reentrant model
 13471 ;;
 13472                           
 13473                           
 13474                           ;psect for function _I2C_Master_Start
 13475  193F                     _I2C_Master_Start:	
 13476                           
 13477                           ;I2C.c: 47:   Delay_Led_Memory=20;
 13478                           
 13479                           ;incstack = 0
 13480                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 13481  193F  3014               	movlw	20
 13482  1940  00FA               	movwf	_Delay_Led_Memory	;volatile
 13483  1941  3000               	movlw	0
 13484  1942  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 13485                           
 13486                           ;I2C.c: 48:   I2C_Master_Wait();
 13487  1943  160A  158A  2137   	fcall	_I2C_Master_Wait
 13488                           
 13489                           ;I2C.c: 49:   SEN = 1;
 13490  1946  1411               	bsf	17,0	;volatile
 13491  1947  0008               	return
 13492  1948                     __end_of_I2C_Master_Start:	
 13493                           
 13494                           	psect	text61
 13495  1937                     __ptext61:	
 13496 ;; *************** function _I2C_Master_Wait *****************
 13497 ;; Defined at:
 13498 ;;		line 40 in file "I2C.c"
 13499 ;; Parameters:    Size  Location     Type
 13500 ;;		None
 13501 ;; Auto vars:     Size  Location     Type
 13502 ;;		None
 13503 ;; Return value:  Size  Location     Type
 13504 ;;                  1    wreg      void 
 13505 ;; Registers used:
 13506 ;;		wreg, status,2
 13507 ;; Tracked objects:
 13508 ;;		On entry : 200/0
 13509 ;;		On exit  : 300/100
 13510 ;;		Unchanged: 0/0
 13511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13512 ;;      Params:         0       0       0       0       0
 13513 ;;      Locals:         0       0       0       0       0
 13514 ;;      Temps:          0       0       0       0       0
 13515 ;;      Totals:         0       0       0       0       0
 13516 ;;Total ram usage:        0 bytes
 13517 ;; Hardware stack levels used:    1
 13518 ;; Hardware stack levels required when called:    1
 13519 ;; This function calls:
 13520 ;;		Nothing
 13521 ;; This function is called by:
 13522 ;;		_I2C_Master_Start
 13523 ;;		_I2C_Master_RepeatedStart
 13524 ;;		_I2C_Master_Stop
 13525 ;;		_I2C_Master_Write
 13526 ;;		_I2C_Master_Read
 13527 ;; This function uses a non-reentrant model
 13528 ;;
 13529                           
 13530                           
 13531                           ;psect for function _I2C_Master_Wait
 13532  1937                     _I2C_Master_Wait:	
 13533  1937                     l180:	
 13534                           ;I2C.c: 42:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 13535                           
 13536                           ;incstack = 0
 13537                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 13538                           
 13539  1937  1683               	bsf	3,5	;RP0=1, select bank1
 13540  1938  1914               	btfsc	20,2	;volatile
 13541  1939  2937               	goto	l180
 13542  193A  0811               	movf	17,w	;volatile
 13543  193B  391F               	andlw	31
 13544  193C  1903               	btfsc	3,2
 13545  193D  0008               	return
 13546  193E  2937               	goto	l180
 13547  193F                     __end_of_I2C_Master_Wait:	
 13548                           
 13549                           	psect	text62
 13550  1964                     __ptext62:	
 13551 ;; *************** function _ADC_init *****************
 13552 ;; Defined at:
 13553 ;;		line 10 in file "adc.c"
 13554 ;; Parameters:    Size  Location     Type
 13555 ;;		None
 13556 ;; Auto vars:     Size  Location     Type
 13557 ;;		None
 13558 ;; Return value:  Size  Location     Type
 13559 ;;                  1    wreg      void 
 13560 ;; Registers used:
 13561 ;;		wreg, status,2, status,0
 13562 ;; Tracked objects:
 13563 ;;		On entry : 0/100
 13564 ;;		On exit  : 300/0
 13565 ;;		Unchanged: 0/0
 13566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13567 ;;      Params:         0       0       0       0       0
 13568 ;;      Locals:         0       0       0       0       0
 13569 ;;      Temps:          0       0       0       0       0
 13570 ;;      Totals:         0       0       0       0       0
 13571 ;;Total ram usage:        0 bytes
 13572 ;; Hardware stack levels used:    1
 13573 ;; Hardware stack levels required when called:    1
 13574 ;; This function calls:
 13575 ;;		Nothing
 13576 ;; This function is called by:
 13577 ;;		_main
 13578 ;; This function uses a non-reentrant model
 13579 ;;
 13580                           
 13581                           
 13582                           ;psect for function _ADC_init
 13583  1964                     _ADC_init:	
 13584                           
 13585                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13586                           
 13587                           ;incstack = 0
 13588                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13589  1964  30C0               	movlw	192
 13590  1965  1283               	bcf	3,5	;RP0=0, select bank0
 13591  1966  1303               	bcf	3,6	;RP1=0, select bank0
 13592  1967  049F               	iorwf	31,f	;volatile
 13593                           
 13594                           ;adc.c: 12:      ADCON1=0b10000000;
 13595  1968  3080               	movlw	128
 13596  1969  1683               	bsf	3,5	;RP0=1, select bank1
 13597  196A  009F               	movwf	31	;volatile
 13598                           
 13599                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13600  196B  179F               	bsf	31,7	;volatile
 13601                           
 13602                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13603  196C  1283               	bcf	3,5	;RP0=0, select bank0
 13604  196D  141F               	bsf	31,0	;volatile
 13605  196E  0008               	return
 13606  196F                     __end_of_ADC_init:	
 13607                           
 13608                           	psect	text63
 13609  1357                     __ptext63:	
 13610 ;; *************** function _isr *****************
 13611 ;; Defined at:
 13612 ;;		line 29 in file "isr.c"
 13613 ;; Parameters:    Size  Location     Type
 13614 ;;		None
 13615 ;; Auto vars:     Size  Location     Type
 13616 ;;  tempo           2    6[COMMON] unsigned int 
 13617 ;; Return value:  Size  Location     Type
 13618 ;;                  1    wreg      void 
 13619 ;; Registers used:
 13620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13621 ;; Tracked objects:
 13622 ;;		On entry : 0/0
 13623 ;;		On exit  : 300/0
 13624 ;;		Unchanged: 0/0
 13625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13626 ;;      Params:         0       0       0       0       0
 13627 ;;      Locals:         2       0       0       0       0
 13628 ;;      Temps:          6       0       0       0       0
 13629 ;;      Totals:         8       0       0       0       0
 13630 ;;Total ram usage:        8 bytes
 13631 ;; Hardware stack levels used:    1
 13632 ;; This function calls:
 13633 ;;		Nothing
 13634 ;; This function is called by:
 13635 ;;		Interrupt level 1
 13636 ;; This function uses a non-reentrant model
 13637 ;;
 13638                           
 13639                           
 13640                           ;psect for function _isr
 13641  1357                     _isr:	
 13642                           
 13643                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13644  1357  188B               	btfsc	11,1	;volatile
 13645                           
 13646                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13647  1358  108B               	bcf	11,1	;volatile
 13648                           
 13649                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13650                           
 13651                           ;isr.c: 37:       }
 13652  1359  1C0C               	btfss	12,0	;volatile
 13653  135A  2BCF               	goto	i1l5604
 13654                           
 13655                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13656  135B  30B1               	movlw	177
 13657  135C  008F               	movwf	15	;volatile
 13658                           
 13659                           ;isr.c: 42:                 TMR1L=0xF3;
 13660  135D  30F3               	movlw	243
 13661  135E  008E               	movwf	14	;volatile
 13662                           
 13663                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13664  135F  100C               	bcf	12,0	;volatile
 13665                           
 13666                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13667  1360  1683               	bsf	3,5	;RP0=1, select bank1
 13668  1361  1FE9               	btfss	_generic_status^(0+128),7
 13669  1362  2B65               	goto	i1l5560
 13670                           
 13671                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13672  1363  13E9               	bcf	_generic_status^(0+128),7
 13673  1364  0064               	clrwdt	;# 
 13674  1365                     i1l5560:	
 13675                           
 13676                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13677  1365  300A               	movlw	10
 13678  1366  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 13679  1367  1803               	skipnc
 13680  1368  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 13681  1369  3000               	movlw	0
 13682  136A  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 13683                           
 13684                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13685  136B  3003               	movlw	3
 13686  136C  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13687  136D  30E8               	movlw	232
 13688  136E  1903               	skipnz
 13689  136F  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13690  1370  1C03               	skipc
 13691  1371  2B74               	goto	i1l5564
 13692                           
 13693                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13694  1372  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 13695  1373  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 13696  1374                     i1l5564:	
 13697                           
 13698                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13699  1374  3001               	movlw	1
 13700  1375  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13701  1376  30F4               	movlw	244
 13702  1377  1903               	skipnz
 13703  1378  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13704  1379  1803               	skipnc
 13705  137A  2B7F               	goto	i1l636
 13706                           
 13707                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13708  137B  1283               	bcf	3,5	;RP0=0, select bank0
 13709  137C  1303               	bcf	3,6	;RP1=0, select bank0
 13710  137D  1786               	bsf	6,7	;volatile
 13711  137E  2B82               	goto	i1l5568
 13712  137F                     i1l636:	
 13713                           ;isr.c: 56:                 else
 13714                           
 13715                           
 13716                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13717  137F  1283               	bcf	3,5	;RP0=0, select bank0
 13718  1380  1303               	bcf	3,6	;RP1=0, select bank0
 13719  1381  1386               	bcf	6,7	;volatile
 13720  1382                     i1l5568:	
 13721                           
 13722                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13723  1382  1683               	bsf	3,5	;RP0=1, select bank1
 13724  1383  085F               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 13725  1384  0460               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 13726  1385  1903               	btfsc	3,2
 13727  1386  2B90               	goto	i1l638
 13728                           
 13729                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13730  1387  300A               	movlw	10
 13731  1388  02DF               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 13732  1389  3000               	movlw	0
 13733  138A  1C03               	skipc
 13734  138B  03E0               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13735  138C  02E0               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13736                           
 13737                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13738  138D  1283               	bcf	3,5	;RP0=0, select bank0
 13739  138E  1706               	bsf	6,6	;volatile
 13740                           
 13741                           ;isr.c: 63:                    }
 13742  138F  2B92               	goto	i1l5574
 13743  1390                     i1l638:	
 13744                           ;isr.c: 64:                 else{
 13745                           
 13746                           
 13747                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13748  1390  1283               	bcf	3,5	;RP0=0, select bank0
 13749  1391  1306               	bcf	6,6	;volatile
 13750  1392                     i1l5574:	
 13751                           
 13752                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13753  1392  087A               	movf	_Delay_Led_Memory,w	;volatile
 13754  1393  047B               	iorwf	_Delay_Led_Memory+1,w	;volatile
 13755  1394  1903               	btfsc	3,2
 13756  1395  2B9E               	goto	i1l640
 13757                           
 13758                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13759  1396  300A               	movlw	10
 13760  1397  02FA               	subwf	_Delay_Led_Memory,f	;volatile
 13761  1398  3000               	movlw	0
 13762  1399  1C03               	skipc
 13763  139A  03FB               	decf	_Delay_Led_Memory+1,f	;volatile
 13764  139B  02FB               	subwf	_Delay_Led_Memory+1,f	;volatile
 13765                           
 13766                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13767  139C  1686               	bsf	6,5	;volatile
 13768                           
 13769                           ;isr.c: 71:                    }
 13770  139D  2B9F               	goto	i1l5580
 13771  139E                     i1l640:	
 13772                           ;isr.c: 72:                 else{
 13773                           
 13774                           
 13775                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13776  139E  1286               	bcf	6,5	;volatile
 13777  139F                     i1l5580:	
 13778                           
 13779                           ;isr.c: 77:                 tempodecorrido+=10;
 13780  139F  300A               	movlw	10
 13781  13A0  1683               	bsf	3,5	;RP0=1, select bank1
 13782  13A1  07D7               	addwf	_tempodecorrido^(0+128),f	;volatile
 13783  13A2  1803               	skipnc
 13784  13A3  0AD8               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13785  13A4  3000               	movlw	0
 13786  13A5  07D8               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13787                           
 13788                           ;isr.c: 78:                 milisegundo+=10;
 13789  13A6  300A               	movlw	10
 13790  13A7  07DD               	addwf	_milisegundo^(0+128),f	;volatile
 13791  13A8  1803               	skipnc
 13792  13A9  0ADE               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13793  13AA  3000               	movlw	0
 13794  13AB  07DE               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13795                           
 13796                           ;isr.c: 79:                 if(milisegundo==1000){
 13797  13AC  30E8               	movlw	232
 13798  13AD  065D               	xorwf	_milisegundo^(0+128),w	;volatile
 13799  13AE  3003               	movlw	3
 13800  13AF  1903               	skipnz
 13801  13B0  065E               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13802  13B1  1D03               	btfss	3,2
 13803  13B2  2BCF               	goto	i1l5604
 13804                           
 13805                           ;isr.c: 80:                    milisegundo=0;
 13806  13B3  01DD               	clrf	_milisegundo^(0+128)	;volatile
 13807  13B4  01DE               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13808                           
 13809                           ;isr.c: 81:                    segundo++;
 13810  13B5  3001               	movlw	1
 13811  13B6  00F0               	movwf	??_isr
 13812  13B7  0870               	movf	??_isr,w
 13813  13B8  07E7               	addwf	_segundo^(0+128),f	;volatile
 13814                           
 13815                           ;isr.c: 88:                    if(segundo==60){
 13816  13B9  303C               	movlw	60
 13817  13BA  0667               	xorwf	_segundo^(0+128),w	;volatile
 13818  13BB  1D03               	btfss	3,2
 13819  13BC  2BCF               	goto	i1l5604
 13820                           
 13821                           ;isr.c: 89:                       segundo=0;
 13822  13BD  01E7               	clrf	_segundo^(0+128)	;volatile
 13823                           
 13824                           ;isr.c: 90:                       minuto++;
 13825  13BE  3001               	movlw	1
 13826  13BF  00F0               	movwf	??_isr
 13827  13C0  0870               	movf	??_isr,w
 13828  13C1  07E5               	addwf	_minuto^(0+128),f	;volatile
 13829                           
 13830                           ;isr.c: 91:                       if(minuto==60){
 13831  13C2  303C               	movlw	60
 13832  13C3  0665               	xorwf	_minuto^(0+128),w	;volatile
 13833  13C4  1D03               	btfss	3,2
 13834  13C5  2BCF               	goto	i1l5604
 13835                           
 13836                           ;isr.c: 92:                          minuto=0;
 13837  13C6  01E5               	clrf	_minuto^(0+128)	;volatile
 13838                           
 13839                           ;isr.c: 93:                          hora++;
 13840  13C7  3001               	movlw	1
 13841  13C8  00F0               	movwf	??_isr
 13842  13C9  0870               	movf	??_isr,w
 13843  13CA  07E6               	addwf	_hora^(0+128),f	;volatile
 13844                           
 13845                           ;isr.c: 94:                          if(hora==24){
 13846  13CB  3018               	movlw	24
 13847  13CC  0666               	xorwf	_hora^(0+128),w	;volatile
 13848  13CD  1903               	btfsc	3,2
 13849                           
 13850                           ;isr.c: 95:                             hora=0;
 13851  13CE  01E6               	clrf	_hora^(0+128)	;volatile
 13852  13CF                     i1l5604:	
 13853                           ;isr.c: 99:                 }
 13854                           
 13855                           
 13856                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13857  13CF  1283               	bcf	3,5	;RP0=0, select bank0
 13858  13D0  1E8C               	btfss	12,5	;volatile
 13859  13D1  2C36               	goto	i1l654
 13860                           
 13861                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13862  13D2  1683               	bsf	3,5	;RP0=1, select bank1
 13863  13D3  1469               	bsf	_generic_status^(0+128),0
 13864                           
 13865                           ;isr.c: 109:         tempo=30;
 13866  13D4  301E               	movlw	30
 13867  13D5  00F6               	movwf	isr@tempo
 13868  13D6  3000               	movlw	0
 13869  13D7  00F7               	movwf	isr@tempo+1
 13870                           
 13871                           ;isr.c: 110:         count=0;
 13872  13D8  01D9               	clrf	_count^(0+128)	;volatile
 13873  13D9  01DA               	clrf	(_count+1)^(0+128)	;volatile
 13874                           
 13875                           ;isr.c: 111:         pointer=usart_buffer;
 13876  13DA  3090               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13877  13DB  00F0               	movwf	??_isr
 13878  13DC  0870               	movf	??_isr,w
 13879  13DD  00E1               	movwf	_pointer^(0+128)
 13880  13DE                     i1l5626:	
 13881                           ;isr.c: 112:         while(tempo)
 13882                           
 13883                           
 13884                           ;isr.c: 112:         while(tempo)
 13885  13DE  0876               	movf	isr@tempo,w
 13886  13DF  0477               	iorwf	isr@tempo+1,w
 13887  13E0  1903               	btfsc	3,2
 13888  13E1  2C11               	goto	i1l5628
 13889                           
 13890                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13891  13E2  1283               	bcf	3,5	;RP0=0, select bank0
 13892  13E3  1303               	bcf	3,6	;RP1=0, select bank0
 13893  13E4  1E8C               	btfss	12,5	;volatile
 13894  13E5  2C0A               	goto	i1l5624
 13895                           
 13896                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13897  13E6  081A               	movf	26,w	;volatile
 13898  13E7  00F0               	movwf	??_isr
 13899  13E8  1683               	bsf	3,5	;RP0=1, select bank1
 13900  13E9  0861               	movf	_pointer^(0+128),w
 13901  13EA  0084               	movwf	4
 13902  13EB  0870               	movf	??_isr,w
 13903  13EC  1783               	bsf	3,7	;select IRP bank2
 13904  13ED  0080               	movwf	0
 13905                           
 13906                           ;isr.c: 118:                 if(count<32+10 -1)
 13907  13EE  085A               	movf	(_count+1)^(0+128),w	;volatile
 13908  13EF  3A80               	xorlw	128
 13909  13F0  00FF               	movwf	127
 13910  13F1  3080               	movlw	128
 13911  13F2  027F               	subwf	127,w
 13912  13F3  1D03               	skipz
 13913  13F4  2BF7               	goto	u534_25
 13914  13F5  3029               	movlw	41
 13915  13F6  0259               	subwf	_count^(0+128),w	;volatile
 13916  13F7                     u534_25:	
 13917  13F7  1803               	skipnc
 13918  13F8  2C05               	goto	i1l5622
 13919                           
 13920                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13921  13F9  3001               	movlw	1
 13922  13FA  1683               	bsf	3,5	;RP0=1, select bank1
 13923  13FB  1303               	bcf	3,6	;RP1=0, select bank1
 13924  13FC  07D9               	addwf	_count^(0+128),f	;volatile
 13925  13FD  1803               	skipnc
 13926  13FE  0ADA               	incf	(_count+1)^(0+128),f	;volatile
 13927  13FF  3000               	movlw	0
 13928  1400  07DA               	addwf	(_count+1)^(0+128),f	;volatile
 13929                           
 13930                           ;isr.c: 121:                    pointer++;
 13931  1401  3001               	movlw	1
 13932  1402  00F0               	movwf	??_isr
 13933  1403  0870               	movf	??_isr,w
 13934  1404  07E1               	addwf	_pointer^(0+128),f
 13935  1405                     i1l5622:	
 13936                           
 13937                           ;isr.c: 123:                 tempo=30;
 13938  1405  301E               	movlw	30
 13939  1406  00F6               	movwf	isr@tempo
 13940  1407  3000               	movlw	0
 13941  1408  00F7               	movwf	isr@tempo+1
 13942                           
 13943                           ;isr.c: 124:             }
 13944  1409  2BDE               	goto	i1l5626
 13945  140A                     i1l5624:	
 13946                           
 13947                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13948  140A  3001               	movlw	1
 13949  140B  02F6               	subwf	isr@tempo,f
 13950  140C  3000               	movlw	0
 13951  140D  1C03               	skipc
 13952  140E  03F7               	decf	isr@tempo+1,f
 13953  140F  02F7               	subwf	isr@tempo+1,f
 13954  1410  2BDE               	goto	i1l5626
 13955  1411                     i1l5628:	
 13956                           
 13957                           ;isr.c: 131:         (*pointer)=0;
 13958  1411  1683               	bsf	3,5	;RP0=1, select bank1
 13959  1412  1303               	bcf	3,6	;RP1=0, select bank1
 13960  1413  0861               	movf	_pointer^(0+128),w
 13961  1414  0084               	movwf	4
 13962  1415  1783               	bsf	3,7	;select IRP bank2
 13963  1416  0180               	clrf	0
 13964                           
 13965                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13966  1417  1283               	bcf	3,5	;RP0=0, select bank0
 13967  1418  1C98               	btfss	24,1	;volatile
 13968  1419  2C36               	goto	i1l654
 13969                           
 13970                           ;isr.c: 134:            CREN=0;
 13971  141A  1218               	bcf	24,4	;volatile
 13972                           
 13973                           ;isr.c: 135:            CREN=1;
 13974  141B  1618               	bsf	24,4	;volatile
 13975                           
 13976                           ;isr.c: 136:            tempo=RCREG;
 13977  141C  081A               	movf	26,w	;volatile
 13978  141D  00F0               	movwf	??_isr
 13979  141E  01F1               	clrf	??_isr+1
 13980  141F  0870               	movf	??_isr,w
 13981  1420  00F6               	movwf	isr@tempo
 13982  1421  0871               	movf	??_isr+1,w
 13983  1422  00F7               	movwf	isr@tempo+1
 13984                           
 13985                           ;isr.c: 137:            tempo=RCREG;
 13986  1423  081A               	movf	26,w	;volatile
 13987  1424  00F0               	movwf	??_isr
 13988  1425  01F1               	clrf	??_isr+1
 13989  1426  0870               	movf	??_isr,w
 13990  1427  00F6               	movwf	isr@tempo
 13991  1428  0871               	movf	??_isr+1,w
 13992  1429  00F7               	movwf	isr@tempo+1
 13993                           
 13994                           ;isr.c: 138:            tempo=RCREG;
 13995  142A  081A               	movf	26,w	;volatile
 13996  142B  00F0               	movwf	??_isr
 13997  142C  01F1               	clrf	??_isr+1
 13998  142D  0870               	movf	??_isr,w
 13999  142E  00F6               	movwf	isr@tempo
 14000  142F  0871               	movf	??_isr+1,w
 14001  1430  00F7               	movwf	isr@tempo+1
 14002                           
 14003                           ;isr.c: 139:            usart_buffer[0]=0;
 14004  1431  1683               	bsf	3,5	;RP0=1, select bank3
 14005  1432  1703               	bsf	3,6	;RP1=1, select bank3
 14006  1433  0190               	clrf	_usart_buffer^(0+384)	;volatile
 14007                           
 14008                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 14009  1434  1303               	bcf	3,6	;RP1=0, select bank1
 14010  1435  14E9               	bsf	_generic_status^(0+128),1
 14011  1436                     i1l654:	
 14012  1436  0875               	movf	??_isr+5,w
 14013  1437  1283               	bcf	3,5	;RP0=0, select bank0
 14014  1438  00FF               	movwf	127
 14015  1439  0874               	movf	??_isr+4,w
 14016  143A  008A               	movwf	10
 14017  143B  0873               	movf	??_isr+3,w
 14018  143C  0084               	movwf	4
 14019  143D  0E72               	swapf	(??_isr+2)^(0+4294967168),w
 14020  143E  0083               	movwf	3
 14021  143F  0EFE               	swapf	126,f
 14022  1440  0E7E               	swapf	126,w
 14023  1441  0009               	retfie
 14024  1442                     __end_of_isr:	
 14025  007E                     btemp	set	126	;btemp
 14026  007E                     wtemp0	set	126
 14027                           
 14028                           	psect	intentry
 14029  0004                     __pintentry:	
 14030                           ;incstack = 0
 14031                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 14032                           
 14033  0004                     interrupt_function:	
 14034  007E                     saved_w	set	btemp
 14035  0004  00FE               	movwf	btemp
 14036  0005  0E03               	swapf	3,w
 14037  0006  00F2               	movwf	??_isr+2
 14038  0007  0804               	movf	4,w
 14039  0008  00F3               	movwf	??_isr+3
 14040  0009  080A               	movf	10,w
 14041  000A  00F4               	movwf	??_isr+4
 14042  000B  1283               	bcf	3,5	;RP0=0, select bank0
 14043  000C  1303               	bcf	3,6	;RP1=0, select bank0
 14044  000D  087F               	movf	btemp+1,w
 14045  000E  00F5               	movwf	??_isr+5
 14046  000F  160A  118A  2B57   	ljmp	_isr
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb


Data Sizes:
    Strings     14
    Constant    64
    Data        0
    BSS         140
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
<<<<<<< HEAD
    COMMON           14      6      13
    BANK0            80     80      80
    BANK1            80     78      80
    BANK3            96      3      81
    BANK2            96      0      74
=======
    COMMON           14      8      13
    BANK0            80     79      79
    BANK1            80     45      74
    BANK3            96      0      74
    BANK2            96      0      32
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_2(CODE[1]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

<<<<<<< HEAD
    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 32
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), buffer(BANK2[32]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 16
		 -> EEPROM_24C1025_Write_Int@local(BANK1[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

=======
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK1[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 32
		 -> buffer(BANK2[32]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> USART_put_buffer@vetor(BANK0[1]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 16
		 -> usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK1[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK1[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 42
		 -> NULL(NULL[0]), usart_buffer(BANK3[42]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 32
		 -> buffer(BANK2[32]), EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

<<<<<<< HEAD
    _ADC_Read_NTC->_log
    _log->___flmul
    _frexp->___fleq
    _eval_poly->___flmul
    _I2C_Master_Init->___lldiv
    _Decodify_Command->___fltol
=======
    _main->_MediaPlacaVaccum
    _MediaPlacaVaccum->___flsub
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    ___xxtofl->_ADC_Max_10Bits
    _ADC_Max_10Bits->_my_delay_ms
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_EEPROM_24C1025_Fill_All
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
    _itoa->_utoa
    _utoa->___lwdiv
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
<<<<<<< HEAD
    _Save_Log->___fltol
    ___fltol->___flmul
    ___flmul->___flsub
=======
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_I2C_Master_Write
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_I2C_Master_Read
<<<<<<< HEAD
=======
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_I2C_Master_Write

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command
<<<<<<< HEAD
    _mediatemperaturaNTC->_ADC_Read_NTC
    _ADC_Read_NTC->___fldiv
    _log->_eval_poly
    _Decodify_Command->_Load_Work
    _Save_Log->_EEPROM_24C1025_Write_Int
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _Load_Work->___fldiv
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol
=======
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (0) _main                                                 5     5      0  157322
                                             76 BANK1      2     2      0
                                              0 BANK3      3     3      0
=======
 (0) _main                                                 5     5      0  130768
                                             74 BANK0      5     5      0
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     122
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (1) _mediatemperaturaNTC                                 11    11      0   50861
                                             47 BANK1     11    11      0
                       _ADC_Read_NTC
=======
 (1) _USART_init                                           7     3      4     223
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    15    15      0   24465
                                             70 BANK0      4     4      0
                                              0 BANK1     11    11      0
                     _ADC_Max_10Bits
                   _ADC_Media_10bits
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (2) _my_delay_ms                                         10     6      4     248
                                              0 BANK0     10     6      4
=======
 (2) ___flsub                                              8     0      8    5127
                                             62 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4882
                                             42 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1226
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2463
                                             33 BANK0     26    18      8
                           ___xxtofl (ARG)
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (2) _ADC_Read_NTC                                        23    18      5   42641
                                             25 BANK1     22    17      5
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___lwdiv
                           ___xxtofl
                            _captura
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   23460
                                             78 BANK0      2     2      0
                                             16 BANK1      4     0      4
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     896
                                             12 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     520
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     9      7    9716
                                              0 BANK1     16     9      7
                            ___fladd
                            ___flmul
=======
 (2) _ADC_Media_10bits                                     9     5      4    2496
                                             33 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     906
                                             19 BANK0     14    10      4
                     _ADC_Max_10Bits (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Max_10Bits                                       9     7      2     663
                                             10 BANK0      9     7      2
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     428
                                              0 BANK0     10     6      4
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (1) _Decodify_Command                                    47    47      0   87000
                                             29 BANK1     47    47      0
=======
 (1) _Decodify_Command                                    49    49      0  103858
                                             63 BANK0      4     4      0
                                              0 BANK1     45    45      0
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                               _itoa
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               5     3      2     970
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    2910
                                             17 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    2029
                                              8 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (4) ___lwmod                                              5     1      4     412
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
=======
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     352
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     7     5      2     224
                                              1 BANK0      7     5      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      53
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     602
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     602
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (2) _Save_Log                                             8     4      4   11976
                                             17 BANK1      8     4      4
=======
 (2) _Save_Log                                             4     0      4   13606
                                             56 BANK0      4     0      4
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (2) ___fltol                                             10     6      4     457
                                             78 BANK0      2     2      0
                                              0 BANK1      8     4      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5434
                                             53 BANK0     25    17      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            8     5      3     980
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             3     0      3    3333
                                             19 BANK1      3     0      3
=======
 (2) ___fltol                                             11     7      4     607
                                             35 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    5516
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3415
                                             58 BANK0      4     1      3
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     238
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (3) _PROCULUS_VP_Write                                    8     3      5    2822
                                             11 BANK1      8     3      5
=======
 (3) _PROCULUS_VP_Write                                    8     3      5    2904
                                             50 BANK0      8     3      5
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (2) _PROCULUS_Show_Screen                                 5     3      2    2095
                                             15 BANK1      5     3      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      4     2      2    3050
                                             15 BANK1      4     2      2
=======
 (2) _PROCULUS_Show_Screen                                 6     4      2    2177
                                             54 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    3101
                                             54 BANK0      5     3      2
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     961
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1829
                                             11 BANK1      4     3      1
=======
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1911
                                             50 BANK0      4     3      1
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (2) _USART_put_int                                        3     1      2     964
                                              8 BANK1      3     1      2
=======
 (2) _USART_put_int                                        4     2      2     973
                                             46 BANK0      4     2      2
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (1) _Load_Work                                            4     4      0    3953
                                             25 BANK1      4     4      0
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2544
                                              0 BANK1     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Integer                                  8     5      3     229
                                              3 BANK0      8     5      3
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  2     1      1     623
                                              5 BANK0      2     1      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     727
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     372
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   3     2      1     245
                                              3 BANK0      3     2      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read_Byte                                     3     3      0      22
=======
 (2) _EEPROM_Write_String                                  3     2      1     990
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2    1216
                                              5 BANK0      8     6      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     739
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     254
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     238
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      31
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    5706
                                              2 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    6686
                                             15 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    6766
                                              6 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    7659
                                             20 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    7625
                                             20 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          14     7      7    7399
                                              6 BANK0     14     7      7
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     955
                                              0 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    6122
                                             17 BANK1      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                             9     3      6    5871
                                              8 BANK1      9     3      6
=======
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    7582
                                             56 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    7331
                                             46 BANK0     10     4      6
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    6404
                                              2 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4911
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (1) _Auto_Relay1                                          0     0      0    7379
                     _Rele1Desligado
                        _Rele1Ligado
                             ___flge
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1158
                                             11 BANK0     14    10      4
                   _EEPROM_Read_Byte (ARG)
                _EEPROM_Read_Integer (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele1Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele1Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Auto_Relay0                                          0     0      0    6221
                     _Rele0Desligado
                        _Rele0Ligado
                             ___flge
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4723
                                             45 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    3758
                                             25 BANK0     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    1498
                                             53 BANK0     12     4      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele0Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele0Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
=======
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         ___flmul (ARG)
           __Umul8_16
<<<<<<< HEAD
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___flsub (ARG)
               ___fladd
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
=======
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       ___flmul (ARG)
         __Umul8_16
<<<<<<< HEAD
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
=======
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
<<<<<<< HEAD
               ___fladd (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___flsub (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _EEPROM_Read_Byte (ARG)
                     _EEPROM_Read_Integer (ARG)
                       _EEPROM_Read_Byte
                   _frexp (ARG)
                     ___fleq
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
=======
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
<<<<<<< HEAD
               ___fladd (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___flsub (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _EEPROM_Read_Byte (ARG)
                     _EEPROM_Read_Integer (ARG)
                       _EEPROM_Read_Byte
                   _frexp (ARG)
                     ___fleq
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
=======
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
<<<<<<< HEAD
               ___fladd (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___flsub (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _EEPROM_Read_Byte (ARG)
                     _EEPROM_Read_Integer (ARG)
                       _EEPROM_Read_Byte
                   _frexp (ARG)
                     ___fleq
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
=======
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         ___flmul (ARG)
           __Umul8_16
<<<<<<< HEAD
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___flsub (ARG)
               ___fladd
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
       ___flmul
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
=======
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
       ___flmul
         __Umul8_16
       ___fltol
         ___flmul (ARG)
           __Umul8_16
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
<<<<<<< HEAD
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
=======
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
         __Umul8_16
<<<<<<< HEAD
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
=======
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _strcat
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Max_10Bits
       _captura
       _my_delay_ms
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
           _ADC_Max_10Bits (ARG)
             _captura
             _my_delay_ms
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
     ___flge
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
             _ADC_Max_10Bits (ARG)
               _captura
               _my_delay_ms
           _captura
           _my_delay_ms
     ___xxtofl
       _ADC_Max_10Bits (ARG)
         _captura
         _my_delay_ms
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
<<<<<<< HEAD
BANK3               60      3      51       9       84.4%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      4A      11       77.1%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     4E      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     148      12        0.0%
ABS                  0      0     148       3        0.0%
=======
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     110       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2D      4A       7       92.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      4A       9       77.1%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      20      11       33.3%
DATA                 0      0     110      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
<<<<<<< HEAD
Symbol Table                                                                                   Sat Jan 04 08:04:41 2020

                              _USART_putc 0BDD                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 00B8                              ___fldiv@bexp 00B7  
                                       pc 0002                              ___fldiv@sign 00B0  
                                      PL2 0494                                        PL4 02B4  
                                      PL6 04C5                                        PL8 02CE  
                                      l49 0F61           EEPROM_24C1025_Read_Buffer@range 002F  
        EEPROM_24C1025_Write_Str@chip_add 0029                                        fsr 0004  
                           _USART_put_int 0F87                  Decodify_Command@tempchar 00E6  
                     __Umul8_16@word_mpld 0025                                       PL10 04DF  
                                     PL20 0309                                       PL12 02D7  
                                     PL30 0FA8                                       PL22 0319  
                                     PL14 02F8                                       PL40 0340  
                                     PL32 1798                                       PL24 1785  
                                     PL16 061D                                       PL50 17B3  
                                     PL42 0FB1                                       PL34 17A1  
                                     PL26 0328                                       PL18 1775  
                                     PL60 034A                                       PL52 0FCE  
                                     PL44 0FBB                                       PL36 04E7  
                                     PL28 178F                                       PL70 1F1E  
                                     PL62 17C3                                       PL54 17BC  
                                     PL46 0FC5                                       PL38 0336  
                                     PL80 0FF4                                       PL72 04EF  
                                     PL64 0FE3                                       PL56 0FD4  
                                     PL48 17AA                                       PL82 0FFA  
                                     PL74 07AB                                       PL66 17C9  
                                     PL58 0FDC                                       PL76 0FE9  
                                     PL68 17CF                                       PL78 0FEE  
      EEPROM_24C1025_Read_Buffer@cnt_1518 002D              PROCULUS_VP_Write_String@text 00B5  
                                     l307 08ED                                       l340 0B3F  
                                     l342 0BA0                                       l336 0B32  
                                     l506 04F8                                       l450 1680  
                                     l287 0706                                       l480 1F0F  
                                     l288 070A                                       l474 1EEB  
                                     l484 05E9                                       l479 1F0E  
                                     l738 176B                                       l796 0BE5  
                                     _PEN 048A                              __CFG_CPD$OFF 0000  
                                     _SEN 0488        EEPROM_24C1025_Read_Buffer@chip_add 002E  
                Decodify_Command@sizedata 00E7                                       _log 168C  
                                     _isr 1F24                                       fsr0 0004  
                           ??_Auto_Relay0 0061                             ??_Auto_Relay1 0061  
                                     indf 0000                 __end_of_EEPROM_Write_Byte 1F1E  
                            __CFG_IESO$ON 0000                              ___flmul@aexp 0062  
                            ___flmul@bexp 0063                    PROCULUS_VP_Write@vetor 00AD  
            ?_EEPROM_24C1025_Write_Buffer 0022                              ___flmul@sign 0061  
                            ___flmul@temp 006C                              ___flmul@prod 0068  
 __end_of_PROCULUS_Control_Register_Write 1DA6  __size_of_PROCULUS_Control_Register_Write 002E  
       ??_PROCULUS_Control_Register_Write 00AC          ?_PROCULUS_Control_Register_Write 00AB  
         _PROCULUS_Control_Register_Write 1D78                              __CFG_LVP$OFF 0000  
                   ??_mediatemperaturaNTC 00CF                              ___fltol@exp1 006F  
                                    l1311 12E6                                      l1305 1280  
                                    l1306 1282                                      l1331 1330  
                                    l1172 0440                                      l1316 12FB  
                                    l1340 152C                                      l1341 1529  
                                    l1174 047A                                      l1424 14C6  
                                    l1344 1544                                      l1345 1541  
                                    l1283 11DC                                      l1451 1E01  
                                    l4012 132C                                      l4004 1320  
                                    l1284 11DA                                      l1380 0116  
                                    l1437 14F8                                      l1381 0114  
                                    l1294 125D                                      l4016 1331  
                                    l1296 124B                                      l1288 11F8  
                                    l1376 00FF                                      l1297 1252  
                                    l1289 11F6                                      l1369 1633  
                                    l1377 00FD                                      l1298 1254  
                                    l1398 0234                                      l6102 01E8  
                                    l5206 17D8                                      l4280 042F  
                                    l4360 14E7                                      l4352 14D1  
                                    l6120 0212                                      l6032 0103  
                                    l4450 1EF4                                      l4274 1DA8  
                                    l6106 01EA                                      l4364 14F6  
                                    l4356 14D3                                      l4348 14BE  
                                    l6220 0EEC                                      l4452 1EF7  
                                    l4268 1DA6                                      l6116 01FE  
                                    l6044 011A                                      l5180 0BBF  
                                    l5260 1773                                      l7020 107E  
                                    l7004 102C                                      l4286 045D  
                                    l4366 14EC                                      l4358 14DC  
                                    l6126 0227                                      l5182 0BC6  
                                    l5174 1C52                                      l7110 0861  
                                    l4390 0748                                      l6216 0EE8  
                                    l4712 1548                                      l6160 0F87  
                                    l6048 0124                                      l5184 0BCA  
                                    l6304 11BF                                      l3832 0797  
                                    l5256 1770                                      l7040 10AC  
                                    l7032 1094                                      l5336 1CB8  
                                    l7050 0356                                      l4378 150E  
                                    l6242 0F16                                      l6218 0EEB  
                                    l6154 0F5A                                      l6402 0E04  
                                    l4802 1615                                      l4642 0262  
                                    l7202 09C9                                      l7114 0873  
                                    l7106 0857                                      l3932 1257  
                                    l3916 1222                                      l7060 038A  
                                    l7052 0357                                      l6236 0F06  
                                    l6244 0E95                                      l6180 0E7B  
                                    l6404 0E07                                      l6316 0608  
                                    l4732 1569                                      l4724 1561  
                                    l4644 0268                                      l6340 1D0B  
                                    l6332 1CE8                                      l3836 07A9  
                                    l3828 0786                                      l7028 108D  
                                    l6246 0F18                                      l6406 0E08  
                                    l4814 1634                                      l4750 159D  
                                    l6262 1662                                      l4670 02A4  
                                    l4662 0294                                      l7222 0A33  
                                    l7142 08F7                                      l7134 08E7  
                                    l7126 08C5                                      l7046 10DF  
                                    l3952 1286                                      l7056 038E  
                                    l7080 0407                                      l6176 0E77  
                                    l6360 0D98                                      l4808 162B  
                                    l4760 15BE                                      l6504 0822  
                                    l6096 01D5                                      l4912 07DB  
                                    l7304 0B36                                      l7232 0A68  
                                    l7216 0A13                                      l7208 09E6  
                                    l7152 0913                                      l3962 12D8  
                                    l3938 1263                                      l7058 0391  
                                    l7082 040A                                      l7074 03B1  
                                    l6178 0E7A                                      l6434 0E3F  
                                    l6274 1679                                      l6506 0838  
                                    l4658 028A                                      l6338 1CEC  
                                    l7138 08EF                                      l3980 1300  
                                    l7084 0403                                      l7076 03B2  
                                    l6428 0E2B                                      l6436 0DBB  
                                    l6356 0D94                                      l4756 15BC  
                                    l4668 0298                                      l6516 1DC5  
                                    l7228 0A4B                                      l7172 0955  
                                    l7148 0901                                      l7316 0B43  
                                    l7324 0636                                      ?_log 00B0  
                                    l3982 1302                                      l3886 1204  
                                    l6438 0E41                                      l6358 0D97  
                                    l6702 0CAD                                      l4782 15EB  
                                    l4774 15C4                                      l4758 1585  
                                    l6446 0F99                                      l6286 1E1B  
                                    l6294 1E2E                                      l6526 1DDF  
                                    l7246 0AAA                                      l7238 0A75  
                                    l7190 0992                                      l7166 093E  
                                    l7158 0923                                      l6462 16A7  
                                    l3992 130D                                      l3968 12F0  
                                    l6704 0CB0                                      l6624 0C0F  
                                    l4776 15D7                                      l6544 0509  
                                    l6448 0FA1                                      l7280 0AFE  
                                    l7256 0AC4                                      l7184 0974  
                                    l7424 06EB                                      l6730 0CD4  
                                    l6706 0CB1                                      l6626 0C12  
                                    l4858 1EAD                                      l4786 15ED  
                                    l4698 1530                                      l6490 1DA1  
                                    l4970 1C9C                                      l6810 0F7B  
                                    l7274 0AF6                                      l7266 0ADE  
                                    l7178 0961                                      l6466 16C3  
                                    l3988 130B                                      l6628 0C13  
                                    l4796 1601                                      l6492 080A  
                                    l7292 0B17                                      l7196 09B1  
                                    l7444 0724                                      ?_isr 0077  
                                    l6750 0D1B                                      l6590 1EDF  
                                    l7286 0B09                                      l6752 0D1C  
                                    l6488 1D90                                      l7480 0B4D  
                                    l6690 0C78                                      l6682 0C69  
                                    l6578 1CE1                                      l7298 0B27  
                                    l6906 1E74                                      l7394 06BB  
                                    l6748 0D18                                      l6588 1ECE  
                                    l6782 0D57                                      l6774 0D3F  
                                    l6918 1E9F                                      l6838 133F  
                                    l6880 1106                                      l6784 0D5E  
                                    l6688 0C31                                      l5992 024D  
                                    l6952 1D26                                      l6794 003D  
                                    l6892 048C                                      l6876 10FE  
                                    l6868 10EF                                      l5988 0245  
                                    l6972 1D40                                      l6894 0490  
                                    l6888 1116                                      l6986 1D47  
                                    _BETA 1834                                      STR_1 183C  
                            __CFG_WDTE$ON 0000                                      STR_2 1847  
                                    STR_3 1846                                      STR_4 1848  
                                    STR_5 1846                                      STR_6 1848  
                                    STR_7 1846                                      STR_8 1843  
                                    _CREN 00C4                                      u4045 15AB  
                                    u4215 07E7                                      u4145 160A  
                                    u6003 0065                                      u4155 1620  
                                    u2635 07A5                                      u2740 1242  
                                    u2750 1243                                      u2735 1236  
                                    u4265 1CA5                                      u3395 1DAE  
                                    u6115 1E41                                      u2853 1298  
                                    u4453 17EA                                      u5503 0E75  
                                    u5513 0EB3                                      _RCEN 048B  
                                    u5533 0EE6                                      u5445 0207  
                                    u5470 0F57                                      u5703 0DCC  
                                    u5455 021D                                      u5615 1E21  
                                    u6095 1E87                                      u5545 0EA2  
                                    u4593 1CCA                                      u5723 0E02  
                                    u3875 0272                                      u5493 0E66  
                                    u6607 0C5A                                      u5575 166B  
                                    u6617 0C86                                      u6537 063E  
                                    u5683 0D83                                      u6627 0CFB  
                                    u6547 1CD3                                      u5693 0D92  
                                    u6637 0D6A                                      u5933 0C9C  
                                    u6557 17F2                                      u6647 0DE5  
                                    u5943 0CAB                                      u6567 1DB6  
                                    u6657 0E4D                                      u5953 0CE1  
                                    u5873 0BFE                                      u6577 1EC5  
                                    u6667 0EC9                                      u5883 0C0D  
                                    u6587 1F18                                      u6677 0F29  
                                    u5973 0D16                                      u5893 0C44  
                                    u6597 05F9                                      _RSEN 0489  
                                    _WPUB 0095                      PROCULUS_Buzzer@vetor 00B1  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
        __end_of_I2C_Master_RepeatedStart 0F6D                                      _main 0636  
                                    _hora 0074                                      _itoa 0F6D  
       __size_of_EEPROM_24C1025_Write_Int 001F                                      btemp 007E  
                                    _utoa 1DC0         __size_of_EEPROM_24C1025_Write_Str 009D  
                                    log@x 00B0                 ?_EEPROM_24C1025_Write_Int 00A8  
                           __CFG_BOREN$ON 0000                 ?_EEPROM_24C1025_Write_Str 0022  
             __size_of_EEPROM_Read_String 0014                                      start 0012  
                        __end_of_ADC_init 1010                          _BALANCE_RESISTOR 1838  
                         ___fldiv@new_exp 00B1        EEPROM_24C1025_Read_Buffer@sizedata 0028  
                           ??_Rele0Ligado 0020                             ??_Rele1Ligado 0020  
                                   ??_log 006E                                     ??_isr 0077  
                        ?_I2C_Master_Init 002D                          ?_I2C_Master_Read 0020  
                        ?_I2C_Master_Wait 0077                          ?_I2C_Master_Stop 0077  
                          ?_USART_put_int 00A8                     __size_of_ADC_Read_NTC 0172  
                           ___fltol@sign1 006E                           __end_of___fladd 1337  
                                   ?_main 0077                                     _ACKEN 048C  
                                   _ACKDT 048D                           __end_of___fldiv 1638  
                                   ?_itoa 002F                                     _EEADR 010D  
                         __end_of___flmul 023F                           __end_of___flsub 1654  
                         __end_of___fltol 02B4                                     _ANSEL 0188  
                         __end_of___lldiv 1EA8                                     ?_utoa 0027  
                                   _T1CON 0010                           __end_of___lwdiv 167E  
                         __end_of___lwmod 1E33                                     i1l563 1F4B  
                                   i1l565 1F5E                                     i1l583 1FF4  
                                   i1l567 1F71                                     _RCREG 001A  
                                   _TMR1H 000F                                     _TMR1L 000E  
                                   _SPBRG 0099                                     _PORTA 0005  
                                   _PORTB 0006                                     _PORTC 0007  
                                   _PORTE 0009                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
         EEPROM_24C1025_Read_Int@chip_add 0035                                     _TRISE 0089  
                                   _TXREG 0019                           __end_of_captura 168C  
                           __CFG_PWRTE$ON 0000                              _usart_buffer 0110  
               EEPROM_Read_Integer@result 0028                                     _canal 01B5  
            __size_of_EEPROM_Read_Integer 001B                                     _count 01A2  
                                   _frexp 072E             ??_EEPROM_24C1025_Write_Buffer 0029  
      __size_of_EEPROM_24C1025_Write_Byte 0014                                     _texto 01BC  
              ?_EEPROM_24C1025_Write_Byte 002F                       __end_of_Auto_Relay0 03AB  
                     __end_of_Auto_Relay1 041E                                     pclath 000A  
                                   utoa@c 002D                                     utoa@v 002B  
                                   status 0003                                     wtemp0 007E  
                 ADC_Read_NTC@resistencia 00C4           EEPROM_24C1025_Read_Byte@mem_add 0031  
                            __end_of_BETA 1838                   ADC_Read_NTC@temperatura 00CB  
                 __size_of_PROCULUS_Delay 001A                            __CFG_MCLRE$OFF 0000  
       __size_of_PROCULUS_VP_Write_String 0013                               ?_USART_init 0020  
                         __initialization 0015                 ?_PROCULUS_VP_Write_String 00B3  
                            _ADC_Read_NTC 1337                               ?_USART_putc 0077  
                             log@exponent 006E                              __end_of_main 072E  
                              _Histerese0 019C                                _Histerese1 01B8  
                            __end_of_itoa 0F87                              __end_of_utoa 1E0F  
                          Send_To_MB@size 0021                          _USART_put_buffer 1C98  
                __end_of_EEPROM_Read_Byte 0602                                    ??_main 01DC  
                                  ??_itoa 0033                          __end_of_Save_Log 00CC  
                                  ??_utoa 002B                       __end_of_Rele0Ligado 1106  
                        _USART_put_string 1CE8                       __end_of_Rele1Ligado 111E  
                   EEPROM_Write_Byte@addr 0023                     EEPROM_Write_Byte@dado 0020  
              __size_of_EEPROM_Write_Byte 003B                         ?_I2C_Master_Start 0077  
               EEPROM_Write_Byte@last_GIE 0024                  _mediatemperaturaNTC$2292 00D0  
                       ?_I2C_Master_Write 0020                        ??_I2C_Master_Start 0020  
                                  _ADCON1 009F                        ??_I2C_Master_Write 0022  
               PROCULUS_Show_Screen@vetor 00B1                                    ?_frexp 002C  
                                  _ADRESH 001E                                    _ADRESL 009E  
                                  _EEDATA 010C                                    _EECON2 018D  
                              _Send_To_MB 0BA1                     EEPROM_Write_Integer@i 002B  
                                  _ANSELH 0189              __end_of_PROCULUS_Show_Screen 1D58  
                          _Rele0Desligado 048C                                    i1l5932 1FD1  
                                  i1l5916 1F9F                                    i1l5934 1FD5  
                                  i1l5936 1FAD                                    i1l5872 1F4E  
                                  i1l5864 1F31                                    i1l5938 1FDC  
                                  i1l5884 1F74                                    i1l5868 1F40  
                                  i1l5878 1F61                                    u516_25 1FC9  
       __end_of_EEPROM_24C1025_Write_Byte 1C50                              ?_my_delay_ms 0020  
                                  _TMR1IE 0460                                    _TMR1CS 0081  
                ?_EEPROM_24C1025_Fill_All 00B1                        __size_of_Load_Work 00D8  
                                  _SSPADD 0093                                    _TRISC3 043B  
                                  _TRISC4 043C                                    _TRISC6 043E  
                                  _TRISC7 043F                                    _SSPCON 0014  
                                  _SSPBUF 0013            EEPROM_24C1025_Fill_All@mem_add 00B4  
                        __end_of___xxtofl 1517                            _Rele1Desligado 0490  
                      PROCULUS_VP_Write@i 00B2                  __end_of_Decodify_Command 0BA1  
                              _TempoCNT_0 00EF                                _TempoCNT_1 00EE  
                              _TempoOFF_0 01B9                                _TempoOFF_1 01B6  
                ?_EEPROM_24C1025_Read_Int 0031                  ?_EEPROM_24C1025_Read_Str 0024  
                _I2C_Master_RepeatedStart 0F6A      __size_of_EEPROM_24C1025_Write_Buffer 00DB  
                                  ___flge 041E                                    ___fleq 0775  
                               ??___fladd 0041                                 ??___fldiv 00A8  
                               ??___flmul 005D                                 ??___flsub 0055  
                               ??___fltol 00A4                           ??_USART_put_int 0070  
                               ??___lldiv 0028                                    _header 01A4  
                               ??___lwdiv 0024                                 ??___lwmod 0024  
                                  _buffer 013A                         _USART_to_Protocol 07B1  
                         USART_putc@value 0020                                    _minuto 01BB  
                               ??_captura 0022                        ?_USART_to_Protocol 0077  
            Decodify_Command@add_24LCxxxx 00E8                                    _strcat 0BBD  
                                  _strcpy 1C50                                    _strlen 0F95  
       EEPROM_24C1025_Read_Buffer@mem_add 0024          __end_of_EEPROM_24C1025_Read_Byte 1C7D  
                      __size_of__Umul8_16 001B                               _Auto_Relay0 0351  
                             _Auto_Relay1 03AB                                    saved_w 007E  
       EEPROM_24C1025_Write_Byte@chip_add 0034                                 ?_ADC_init 0077  
                     ??_USART_to_Protocol 0020                       __size_of_USART_init 0039  
                  __end_of_Rele0Desligado 0490                       __size_of_USART_putc 0011  
                              ___flge@ff1 0055                                ___flge@ff2 0059  
                  __end_of_Rele1Desligado 0494                              ___xxtofl@arg 0035  
                            ___xxtofl@exp 0034                              ___xxtofl@val 002B  
                              ___fleq@ff1 0020                                ___fleq@ff2 0024  
                        __end_oflog@coeff 1834                   __end_of__initialization 0033  
     PROCULUS_Control_Register_Write@size 00AB                              eval_poly@res 00AC  
                              ___fltol@f1 00A0                              _Board_Number 01B4  
                          __pcstackCOMMON 0077                  __size_of_PROCULUS_Buzzer 0020  
               __end_of_USART_to_Protocol 07FC                              __pidataBANK3 0000  
                             _Rele0Ligado 10EF                             __end_of_frexp 0775  
                             _Rele1Ligado 1106                     USART_put_string@vetor 0021  
                              __end_ofPL2 04C5                                __end_ofPL4 02CE  
                              __end_ofPL6 04DF                                __end_ofPL8 02D7  
                       __end_of_Load_Work 05E1                       my_delay_ms_WDT@time 0020  
           __size_of_EEPROM_Write_Integer 0023                  __size_of_my_delay_ms_WDT 002D  
                          _OPTION_REGbits 0081                  __end_of_BALANCE_RESISTOR 183C  
        __end_of_EEPROM_24C1025_Write_Int 00EB                        Decodify_Command@hh 00BF  
                      Decodify_Command@mm 00C9          __end_of_EEPROM_24C1025_Write_Str 0C8B  
                      Decodify_Command@ss 00D3                      USART_put_buffer@loop 0025  
                    USART_put_buffer@size 0021                                ??_ADC_init 0020  
             __end_of_EEPROM_Write_String 1EE3           __end_of_EEPROM_24C1025_Fill_All 0068  
                         ?_Rele0Desligado 0077                                   ??_frexp 0031  
                             ?_Send_To_MB 0077                    __size_of_Send_Reply_OK 0007  
                              __pbssBANK1 00EE                                __pbssBANK2 0110  
                              __pbssBANK3 0190                        __size_of_eval_poly 00AA  
                         ?_Rele1Desligado 0077           __end_of_EEPROM_24C1025_Read_Int 1C98  
         __end_of_EEPROM_24C1025_Read_Str 0D70                  ?_Package_Usart_is_for_me 0077  
                               ?_Save_Log 00B1                            _PROCULUS_Delay 1DA6  
                       __end_of__Umul8_16 025A                                __pmaintext 0636  
                                 ?___flge 0055                                   ?___fleq 0020  
                     Save_Log@add_datalog 00B1                       _EEPROM_Read_Integer 0602  
              PROCULUS_Show_Screen@screen 00AF                                __pintentry 0004  
                    mediatemperaturaNTC@i 00D9                      _PROCULUS_Show_Screen 1D4E  
                                 ?_strcat 0020                                   _T1CKPS0 0084  
                                 _T1CKPS1 0085                                   ?_strcpy 0020  
                                 ?_strlen 0020               __end_of_mediatemperaturaNTC 10EF  
                               ?___xxtofl 002B                      ?_EEPROM_Read_Integer 0023  
                   Decodify_Command@dados 00DD               EEPROM_24C1025_Read_Int@data 0036  
                                 _SSPCON2 0091          __end_of_PROCULUS_VP_Write_String 1C3C  
                 EEPROM_Read_Integer@addr 0026                                   _SSPSTAT 0094  
                _EEPROM_24C1025_Read_Byte 1C65                                __stringtab 1800  
                     PROCULUS_VP_Write@vp 00AB               ??_EEPROM_24C1025_Write_Byte 0034  
                __end_of_USART_put_buffer 1CB4                __end_of_EEPROM_Read_String 0509  
                  __end_of_PROCULUS_Delay 1DC0                  __end_of_USART_put_string 1D15  
                    __size_of_my_delay_ms 002C                                ??_Save_Log 00B5  
                         PROCULUS_Delay@i 0024                              ??_USART_init 0024  
             EEPROM_24C1025_Read_Str@ctrl 002E                              ??_USART_putc 0020  
              __size_of_USART_to_Protocol 004B               PROCULUS_Buzzer@time_ms_x_10 00AF  
                                 _Status0 01A8                                   _Status1 01A6  
                         __size_of___flge 006E                           __size_of___fleq 0036  
                                 ___fladd 11C8                                   ___fldiv 1517  
                EEPROM_Write_Integer@addr 0029                                   ___flmul 00EB  
                EEPROM_Write_Integer@dado 0025                                   ___flsub 1638  
                                 ___fltol 025A                                   ___lldiv 1E60  
                                 ___lwdiv 1654                                   ___lwmod 1E0F  
                           _Send_Reply_OK 1CE1                       __size_of_Send_To_MB 001C  
                   ?_PROCULUS_Show_Screen 00AF                         __end_of_eval_poly 11C8  
                                 _captura 167E                                   __ptext1 1CB4  
                                 __ptext2 1010                                   __ptext3 17D4  
                                 __ptext4 175F                                   __ptext5 1337  
                                 __ptext6 168C                                   __ptext7 072E  
                                 __ptext8 0775                                   __ptext9 111E  
                       ??_PROCULUS_Buzzer 0070                                   _destino 01B3  
                       ?_EEPROM_Read_Byte 0077                           __size_of_strcat 0020  
                         __size_of_strcpy 0015                           __size_of_strlen 0013  
                            __size_of_log 00D3                              __size_of_isr 00DC  
                              ??___xxtofl 002F                        ??_EEPROM_Read_Byte 0020  
                                 _segundo 0075                  __size_of_I2C_Master_Init 002D  
                __size_of_I2C_Master_Read 0022                            _usart_protocol 01CC  
                   ??_EEPROM_Read_Integer 0026                  __size_of_I2C_Master_Wait 0009  
                __size_of_I2C_Master_Stop 0003             EEPROM_24C1025_Write_Int@local 00AF  
                                 _pointer 01B2             EEPROM_24C1025_Write_Byte@data 0033  
                                 clrloop0 0803                        __end_of_USART_init 1D4E  
         __end_of_Package_Usart_is_for_me 1775                        __end_of_USART_putc 0BEE  
                    end_of_initialization 0033                  _EEPROM_24C1025_Write_Int 00CC  
                       ??_my_delay_ms_WDT 0024                  _EEPROM_24C1025_Write_Str 0BEE  
              ??_I2C_Master_RepeatedStart 0020                                   itoa@buf 0034  
                                 itoa@val 002F                           ?_PROCULUS_Delay 0020  
                         my_delay_ms@time 0020           EEPROM_24C1025_Write_Buffer@data 0027  
         EEPROM_24C1025_Write_Buffer@ctrl 002E                          ADC_Read_NTC@calc 00BE  
               __size_of_I2C_Master_Start 0008                 __size_of_I2C_Master_Write 0006  
                       ?_Decodify_Command 0077                           ___lldiv@divisor 0020  
                         ___lldiv@counter 002C                                 _RL0Status 01E0  
                               _RL1Status 01DF                        ??_Decodify_Command 00BD  
                               _RCSTAbits 0018                          I2C_Master_Init@c 002D  
                        I2C_Master_Read@a 0020                            ?_Send_Reply_OK 0077  
                                 utoa@buf 002E                 _EEPROM_24C1025_Write_Byte 1C3C  
                                 utoa@val 0027          __size_of_EEPROM_24C1025_Fill_All 0031  
                                 strlen@s 0024                        USART_to_Protocol@i 0022  
                               _PORTAbits 0005                                 _PORTBbits 0006  
                               _PORTCbits 0007                          _Delay_Led_Memory 01B0  
            ??_EEPROM_24C1025_Read_Buffer 002B             EEPROM_24C1025_Write_Str@range 002A  
                mediatemperaturaNTC@canal 00D4                               ___fladd@grs 004C  
        __size_of_EEPROM_24C1025_Read_Int 001B          __size_of_EEPROM_24C1025_Read_Str 00E5  
                            ?_Auto_Relay0 0077                              ?_Auto_Relay1 0077  
                           ___xxtofl@sign 0033       __end_of_EEPROM_24C1025_Write_Buffer 0F2E  
             _EEPROM_24C1025_Write_Buffer 0E53                               ___fldiv@grs 00B3  
                             ___fldiv@rem 00AC      PROCULUS_Control_Register_Write@vetor 00AD  
        EEPROM_24C1025_Write_Buffer@count 002B           EEPROM_24C1025_Write_Int@mem_add 00A8  
        EEPROM_24C1025_Write_Buffer@range 002D                         __size_of_ADC_init 000B  
                 Decodify_Command@tempint 00E0                     PROCULUS_VP_Write@size 00AF  
         EEPROM_24C1025_Read_Str@chip_add 002C                               ___flmul@grs 0064  
                _PROCULUS_VP_Write_String 1C29                                 _TXSTAbits 0098  
     __size_of_EEPROM_24C1025_Read_Buffer 00E3                    PROCULUS_Delay@tempo_ms 0020  
                  ??_PROCULUS_Show_Screen 0070                              ?_Rele0Ligado 0077  
                            ?_Rele1Ligado 0077                            __end_of___flge 048C  
                          __end_of___fleq 07AB                     __end_of_USART_put_int 0F95  
                             _BAUDCTLbits 0187                          ??_Rele0Desligado 0020  
                          __end_of_strcat 0BDD                            __end_of_strcpy 1C65  
                          __end_of_strlen 0FA8                               __end_ofPL10 04E7  
                             __end_ofPL20 0319                               __end_ofPL12 02F8  
                             __end_ofPL30 0FB1                               __end_ofPL22 0328  
                             __end_ofPL14 0309                               __end_ofPL40 034A  
                             __end_ofPL32 17A1                               __end_ofPL24 178F  
                             __end_ofPL16 0636                               __end_ofPL50 17BC  
                             __end_ofPL42 0FBB                               __end_ofPL34 17AA  
                             __end_ofPL26 0336                               __end_ofPL18 1785  
                             __end_ofPL60 0351                               __end_ofPL52 0FD4  
                             __end_ofPL44 0FC5                               __end_ofPL36 04EF  
                             __end_ofPL28 1798                               __end_ofPL70 1F24  
                             __end_ofPL62 17C9                               __end_ofPL54 17C3  
                             __end_ofPL46 0FCE                               __end_ofPL38 0340  
                             __end_ofPL80 0FFA                               __end_ofPL72 04F5  
                             __end_ofPL64 0FE9                               __end_ofPL56 0FDC  
                             __end_ofPL48 17B3                               __end_ofPL82 1000  
                             __end_ofPL74 07B1                               __end_ofPL66 17CF  
                             __end_ofPL58 0FE3                               __end_ofPL76 0FEE  
                             __end_ofPL68 17D4                               __end_ofPL78 0FF4  
                     start_initialization 0015                                eval_poly@d 00A4  
                              eval_poly@n 00A5                                eval_poly@x 00A0  
                        ??_Rele1Desligado 0020                                 _Load_Work 0509  
                             __end_of_log 175F                               __end_of_isr 2000  
                             USART_init@i 0024                              ??_Send_To_MB 0021  
                              frexp@value 002C                         ??_I2C_Master_Init 0031  
                       ??_I2C_Master_Read 0022                         ??_I2C_Master_Wait 0020  
                       ??_I2C_Master_Stop 0020              __end_of_EEPROM_Write_Integer 1ECB  
        EEPROM_24C1025_Write_Int@chip_add 00AE                                 _SetPoint0 0070  
                               _SetPoint1 0198                  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                     Decodify_Command@add 00DF                                 _TempoON_0 01BA  
                               _TempoON_1 01B7                     USART_put_buffer@vetor 0027  
                         ??_Send_Reply_OK 0025                                  ??___flge 005D  
                                ??___fleq 0028                         __size_of_Save_Log 0064  
                               __Umul8_16 023F                               __pdataBANK3 01DF  
                      __end_of_Send_To_MB 0BBD          __size_of_Package_Usart_is_for_me 0016  
=======
Symbol Table                                                                                   Thu Jan 16 04:26:41 2020

                              _USART_putc 1004                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 005A                              ___fldiv@bexp 0059  
                                       pc 0002                              ___fldiv@sign 0052  
                        _MediaPlacaVaccum 0D69           EEPROM_24C1025_Read_Buffer@range 0032  
        EEPROM_24C1025_Write_Str@chip_add 0029                                        fsr 0004  
                           _USART_put_int 199A                  Decodify_Command@tempchar 00C7  
                     __Umul8_16@word_mpld 0026                __end_of_RESISTOR_ROOM_TEMP 181C  
            PROCULUS_VP_Write_String@text 005C                                       l180 1937  
                                     l511 1DA0                                       l423 045F  
                                     l521 1AD0                                       l425 04BB  
                                     l434 0F0F                                       l419 0451  
                                     l516 1DC5                                       l517 1DC6  
                                     l543 1A8C                                       l487 195B  
                                     l809 19D4                                       l792 1A12  
                                     l872 100C                                       _PEN 048A  
                            __CFG_CPD$OFF 0000                                       _SEN 0488  
      EEPROM_24C1025_Read_Buffer@chip_add 0031                  Decodify_Command@sizedata 00C8  
                                     _isr 1357                                       fsr0 0004  
                                     indf 0000                 __end_of_EEPROM_Write_Byte 1DD5  
                        _ADC_Media_10bits 1E8B                              __CFG_IESO$ON 0000  
                            ___flmul@aexp 0037                              ___flmul@bexp 0038  
                  PROCULUS_VP_Write@vetor 0054              ?_EEPROM_24C1025_Write_Buffer 0022  
                            ___flmul@sign 0036                              ___flmul@temp 0041  
                            ___flmul@prod 003D   __end_of_PROCULUS_Control_Register_Write 1D61  
__size_of_PROCULUS_Control_Register_Write 0038         ??_PROCULUS_Control_Register_Write 0053  
        ?_PROCULUS_Control_Register_Write 0052           _PROCULUS_Control_Register_Write 1D29  
                            __CFG_LVP$OFF 0000                              ___fltol@exp1 004D  
                         __end_of_MAX_ADC 1824                                      l1303 0CDE  
                                    l1163 1151                                      l1324 0D5E  
                                    l1316 0D46                                      l1182 10A0  
                                    l1430 1247                                      l1422 1227  
                                    l1166 11B7                                      l1416 11E7  
                                    l1360 0B26                                      l1362 0B34  
                                    l1338 09E7                                      l1282 0B8C  
                                    l1443 1FEA                                      l1429 123D  
                                    l1390 07A4                                      l1286 0C25  
                                    l1288 0C03                                      l1486 1B1F  
                                    l6100 108C                                      l6030 1A09  
                                    l6110 10AF                                      l6102 109C  
                                    l6200 0C0E                                      l7002 09B9  
                                    l6202 0C10                                      l6210 0C1F  
                                    l6060 1D59                                      l6028 19FE  
                                    l7004 09C1                                      l6132 0B5A  
                                    l6038 1CFA                                      l7022 09DF  
                                    l6302 0D5A                                      l6134 0B62  
                                    l6080 105C                                      l7120 0B30  
                                    l7104 0AF3                                      l7032 0A06  
                                    l6152 0B81                                      l6128 0B57  
                                    l6058 1D43                                      l6074 07D4  
                                    l6322 04D7                                      l7018 09DC  
                                    l6226 0C54                                      l6218 0C33  
                                    l6162 0B96                                      l6076 07F0  
                                    l6412 072A                                      l6404 06F6  
                                    l6340 04FC                                      l6324 04D9  
                                    l6084 1065                                      l7108 0B0C  
                                    l6228 0C56                                      l6236 0C66  
                                    l6156 0B84                                      l5710 155A  
                                    l6430 0774                                      l6406 0713  
                                    l6342 04FE                                      l6326 04E1  
                                    l7038 0A12                                      l6262 0CFF  
                                    l6254 0CF0                                      l6246 0CD0  
                                    l6270 0D08                                      l7142 1D69  
                                    l5712 155F                                      l5800 1C23  
                                    l6416 072C                                      l6352 0514  
                                    l6344 0506                                      l6504 1FC0  
                                    l7320 0138                                      l7312 010F  
                                    l7304 00D5                                      l7064 0A80  
                                    l6280 0D13                                      l6192 0BD2  
                                    l5714 1560                                      l6610 16BF  
                                    l6530 1292                                      l6426 075E  
                                    l7402 0304                                      l7090 0ABF  
                                    l7082 0A8B                                      l7058 0A61  
                                    l7066 0A3D                                      l7234 0DF2  
                                    l7226 0DDB                                      l7218 0D93  
                                    l7162 1E22                                      l6612 16C0  
                                    l6532 1297                                      l6436 078D  
                                    l7316 011E                                      l6460 11F6  
                                    l7084 0AA8                                      l7068 0A85  
                                    l6276 0D11                                      l6268 0D06  
                                    l7252 0F35                                      l5750 160D  
                                    l6534 1298                                      l7342 01A1  
                                    l7326 0150                                      l6454 11DF  
                                    l7094 0AC1                                      l7182 1E3C  
                                    l5752 160E                                      l6608 16BA  
                                    l7416 036C                                      l7408 0318  
                                    l7360 01EA                                      l7336 0181  
                                    l6464 11FA                                      l7264 0FA3  
                                    l6714 101F                                      l6634 170D  
                                    l5834 1E01                                      l5826 1DDD  
                                    l5850 1C93                                      l7450 03F8  
                                    l7426 0392                                      l7354 01C9  
                                    l6474 123B                                      l6466 120C  
                                    l6298 0D56                                      l7258 0F8D  
                                    l5748 1608                                      l5932 0906  
                                    l6652 1766                                      l5828 1DEB  
                                    l6820 1B36                                      l5852 1CA1  
                                    l5860 1CBA                                      l7444 03DE  
                                    l7436 03B8                                      l7372 0241  
                                    l7348 01AE                                      l7292 007B  
                                    l7284 005E                                      l6476 122C  
                                    l7196 1E43                                      ?_isr 0070  
                                    l5774 166C                                      l5934 090B  
                                    l6654 176B                                      l5838 1E0C  
                                    l6494 1FA1                                      l7462 0425  
                                    l7366 0211                                      l6902 19DC  
                                    l5768 1647                                      l5776 1599  
                                    l5936 090C                                      l6656 176C  
                                    l6728 1B84                                      l6752 1C62  
                                    l5856 1CAF                                      l6832 1ABC  
                                    l6840 1A32                                      l7456 0409  
                                    l7392 02C3                                      l7288 006D  
                                    l6920 1E69                                      l6488 1264  
                                    l5778 1671                                      l5890 0857  
                                    l6690 17E9                                      l6594 12D0  
                                    l7474 0455                                      l7386 029E  
                                    l7378 025F                                      l5964 097F  
                                    l5892 0858                                      l6596 133F  
                                    l6588 131E                                      l5868 1B17  
                                    l6780 1F19                                      l6852 1BEA  
                                    l7644 046E                                      l7468 0445  
                                    l6940 1F4E                                      l7564 14CA  
                                    l5958 0959                                      l5966 08A5  
                                    l6678 17B9                                      l5990 1DAB  
                                    l5982 1CC3                                      l6846 1BD6  
                                    l7398 02E0                                      l7486 0463  
                                    l6950 1F86                                      l6942 1F5E  
                                    l6926 1E7E                                      l7590 14F4  
                                    l5968 0984                                      l5888 0852  
                                    l6688 17E0                                      l5992 1DAE  
                                    l5984 1CE5                                      l6848 1BE0  
                                    l6880 1EA7                                      l6954 1F93  
                                    l6796 1BA9                                      l6964 116B  
                                    l6798 1BC6                                      l6968 1191  
                                    l6898 19D9                                      _BETA 1848  
                                    l6998 09B6                                      STR_1 1850  
                            __CFG_WDTE$ON 0000                                      STR_2 185B  
                                    STR_3 185A                                      STR_4 185C  
                                    STR_5 185A                                      STR_6 185C  
                                    STR_7 185A                                      STR_8 1857  
                             _statuspower 00E8                           ADC_Max_10Bits@i 0032  
                                    _CREN 00C4                                      u6010 0BF2  
                                    u6020 0BF3                                      u6005 0BE6  
                                    u5403 1547                                      u7003 1764  
                                    u5413 1558                                      u6205 0CF2  
                                    u5423 15BA                                      u6151 0C91  
                                    u6143 0C78                                      u6135 0C5A  
                                    u6055 0C14                                      u6160 0CA5  
                                    u6152 0C92                                      u7033 1050  
                                    u5505 1DE0                                      u6305 0D30  
                                    u6161 0CA6                                      u6153 0C97  
                                    u6162 0CAB                                      u6154 0C98  
                                    u5443 1606                                      u6163 0CAC  
                                    u6155 0C9D                                      u5460 1C20  
                                    u6156 0C9E                                      _RCEN 048B  
                                    u5525 1DEC                                      u5605 1CB0  
                                    u7301 117C                                      u7302 117D  
                                    u5455 15A7                                      u8007 1305  
                                    u5535 1DF8                                      u7215 1F52  
                                    u7303 1182                                      u7304 1183  
                                    u8017 1352                                      u5545 1E02  
                                    u7065 1F25                                      u7321 11A2  
                                    u7305 1188                                      u7322 11A3  
                                    u7306 1189                                      u8027 173D  
                                    u5635 1B20                                      u7235 1F60  
                                    u7323 11A8                                      u7324 11A9  
                                    u5653 083F                                      u8037 17FA  
                                    u5485 1A18                                      u6605 06FA  
                                    u6525 0617                                      u7245 1F75  
                                    u7325 11AE                                      u7326 11AF  
                                    u8047 08DB                                      u5663 0850  
                                    u7095 1B3F                                      u5575 1C96  
                                    u7255 1F87                                      u8057 0995  
                                    u5673 08B8                                      u6705 0767  
                                    u6625 0705                                      u5825 106E  
                                    u7185 1E78                                      u7505 0A8F  
                                    u8067 15DD                                      u6715 077F  
                                    u5595 1CA7                                      u7435 0A46  
                                    u8077 168F                                      u5693 0904  
                                    u6565 06AB                                      u5773 1D0C  
                                    u6805 1234                                      u7605 0AFC  
                                    u7525 0A9A                                      u7445 0A4F  
                                    u6903 127F                                      u6495 05BE  
                                    u5855 108D                                      u7615 0B17  
                                    u6913 1290                                      u7465 0A5A  
                                    u6923 12E5                                      u6595 06E2  
                                    u7635 1C38                                      u7475 0A6F  
                                    u7643 1D7B                                      u5885 10A5  
                                    u6845 124F                                      u6765 1203  
                                    u6695 0749                                      u6785 121F  
                                    u6963 16A7                                      u7595 0ADE  
                                    u6973 16B8                                      u6983 171C  
                                    u7937 144A                                      u7947 1D84  
                                    u7957 1D14                                      u7967 1A20  
                                    u7977 1C87                                      u7987 1DCF  
                                    u7997 1AE2                                      _RSEN 0489  
                                    _WPUB 0095                      PROCULUS_Buzzer@vetor 0059  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
        __end_of_I2C_Master_RepeatedStart 1937                                      _main 1442  
                                    _hora 00E6                                      _itoa 1AA9  
       __size_of_EEPROM_24C1025_Write_Int 0020                                      btemp 007E  
                                    _utoa 1F9C         __size_of_EEPROM_24C1025_Write_Str 00EA  
               ?_EEPROM_24C1025_Write_Int 004E                             __CFG_BOREN$ON 0000  
               ?_EEPROM_24C1025_Write_Str 0022               __size_of_EEPROM_Read_String 0020  
                                    start 0012                          __end_of_ADC_init 196F  
                        _BALANCE_RESISTOR 184C                           ___fldiv@new_exp 0053  
      EEPROM_24C1025_Read_Buffer@sizedata 002A                                     ??_isr 0070  
                        ?_I2C_Master_Init 002E                          ?_I2C_Master_Read 0020  
                        ?_I2C_Master_Wait 0070                          ?_I2C_Master_Stop 0070  
                          ?_USART_put_int 004E                             ___fltol@sign1 004C  
                         __end_of___fladd 0D69                                     ?_main 0070  
                                   _ACKEN 048C                                     _ACKDT 048D  
                         __end_of___fldiv 0B3C                                     ?_itoa 0031  
                                   _EEADR 010D                           __end_of___flmul 07B1  
                         __end_of___flsub 1A69                           __end_of___fltol 10BE  
                                   _ANSEL 0188                           __end_of___lldiv 1F9C  
                                   ?_utoa 0028                                     _T1CON 0010  
                         __end_of___lwdiv 1E11                           __end_of___lwmod 1CBF  
                                   i1l640 139E                                     i1l636 137F  
                                   i1l654 1436                                     i1l638 1390  
                                   _RCREG 001A                                     _TMR1H 000F  
                                   _TMR1L 000E                                     _SPBRG 0099  
                                   _PORTA 0005                                     _PORTB 0006  
                                   _PORTC 0007                                     _PORTE 0009  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087           EEPROM_24C1025_Read_Int@chip_add 003A  
                                   _TRISE 0089                                     _TXREG 0019  
                   ADC_Media_10bits@canal 0046                           __end_of_captura 1964  
                           __CFG_PWRTE$ON 0000                              _usart_buffer 0190  
                   ADC_Media_10bits@value 0047                 EEPROM_Read_Integer@result 0028  
                                   _canal 00E4              __size_of_EEPROM_Read_Integer 002A  
                                   _count 00D9                                     _errno 00D5  
           ??_EEPROM_24C1025_Write_Buffer 0029        __size_of_EEPROM_24C1025_Write_Byte 0016  
                                   _texto 01BA                ?_EEPROM_24C1025_Write_Byte 002F  
                                   pclath 000A                                     utoa@c 002F  
                                   utoa@v 002D                                     status 0003  
                                   wtemp0 007E           EEPROM_24C1025_Read_Byte@mem_add 0034  
                            __end_of_BETA 184C                   __size_of_PROCULUS_Delay 001D  
                          __CFG_MCLRE$OFF 0000         __size_of_PROCULUS_VP_Write_String 0017  
                             ?_USART_init 0020                           __initialization 0015  
               ?_PROCULUS_VP_Write_String 005A                               ?_USART_putc 0070  
                            __end_of_main 1531                              __end_of_itoa 1AC9  
                            __end_of_utoa 2000                            Send_To_MB@size 0021  
                        _USART_put_buffer 1B30                  __end_of_EEPROM_Read_Byte 1AEB  
                                  ??_main 006A                                    ??_itoa 0035  
                        __end_of_Save_Log 1137                                    ??_utoa 002C  
                        _USART_put_string 1CBF                     EEPROM_Write_Byte@addr 0023  
                   EEPROM_Write_Byte@dado 0020                __size_of_EEPROM_Write_Byte 003C  
                       ?_I2C_Master_Start 0070                 EEPROM_Write_Byte@last_GIE 0024  
                       ?_I2C_Master_Write 0020                        ??_I2C_Master_Start 0020  
                                  _ADCON1 009F                        ??_I2C_Master_Write 0022  
               PROCULUS_Show_Screen@vetor 0059                                    _ADRESH 001E  
                                  _ADRESL 009E                                    _EEDATA 010C  
                                  _EECON2 018D                                _Send_To_MB 0800  
                   EEPROM_Write_Integer@i 002C                                    _ANSELH 0189  
            __end_of_PROCULUS_Show_Screen 1984                                    i1l5604 13CF  
                                  i1l5622 1405                                    i1l5624 140A  
                                  i1l5560 1365                                    i1l5626 13DE  
                                  i1l5628 1411                                    i1l5580 139F  
                                  i1l5564 1374                                    i1l5574 1392  
                                  i1l5568 1382         __end_of_EEPROM_24C1025_Write_Byte 199A  
                                  u534_25 13F7                              ?_my_delay_ms 0020  
                                  _TMR1IE 0460                                    _TMR1CS 0081  
                ?_EEPROM_24C1025_Fill_All 0058                                    _SSPADD 0093  
                                  _TRISC3 043B                                    _TRISC4 043C  
                                  _TRISC6 043E                                    _TRISC7 043F  
                                  _SSPCON 0014                                    _SSPBUF 0013  
          EEPROM_24C1025_Fill_All@mem_add 005B                          __end_of___xxtofl 126D  
                      PROCULUS_VP_Write@i 0059                  __end_of_Decodify_Command 04BC  
                ?_EEPROM_24C1025_Read_Int 0034                  ?_EEPROM_24C1025_Read_Str 0026  
                _I2C_Master_RepeatedStart 1932      __size_of_EEPROM_24C1025_Write_Buffer 0163  
                                  ___flge 1137                                 ??___fladd 0052  
                               ??___fldiv 0049                                 ??___flmul 0031  
                               ??___flsub 0066                                 ??___fltol 0047  
                         ??_USART_put_int 0050                                 ??___lldiv 0028  
                                  _header 00DB                         __end_of_ROOM_TEMP 1820  
                               ??___lwdiv 0024                                 ??___lwmod 0024  
                                  _buffer 0110                         _USART_to_Protocol 1EE1  
                         USART_putc@value 0020                                    _minuto 00E5  
                               ??_captura 0022                        ?_USART_to_Protocol 0070  
            Decodify_Command@add_24LCxxxx 00C9                                    _strcat 1BD1  
                                  _strcpy 1A2D                                    _strlen 19F7  
       EEPROM_24C1025_Read_Buffer@mem_add 0026          __end_of_EEPROM_24C1025_Read_Byte 19F7  
                      __size_of__Umul8_16 0023                                    saved_w 007E  
       EEPROM_24C1025_Write_Byte@chip_add 0034                                 ?_ADC_init 0070  
                     ??_USART_to_Protocol 0020                       __size_of_USART_init 003C  
                     __size_of_USART_putc 0010                  __end_of_MediaPlacaVaccum 1000  
                              ___flge@ff1 0020                                ___flge@ff2 0024  
                            ___xxtofl@arg 003D                              ___xxtofl@exp 003C  
                            ___xxtofl@val 0033                          __end_oflog@coeff 1848  
                 __end_of__initialization 0032       PROCULUS_Control_Register_Write@size 0052  
                              ___fltol@f1 0043                              _Board_Number 00E3  
                __end_of_ADC_Media_10bits 1EE1                            __pcstackCOMMON 0070  
                __size_of_PROCULUS_Buzzer 0022                 __end_of_USART_to_Protocol 1F3E  
                   USART_put_string@vetor 0021                       my_delay_ms_WDT@time 0020  
           __size_of_EEPROM_Write_Integer 0032                  __size_of_my_delay_ms_WDT 0038  
                          _OPTION_REGbits 0081                   __size_of_ADC_Max_10Bits 003E  
                __end_of_BALANCE_RESISTOR 1850          __end_of_EEPROM_24C1025_Write_Int 1A89  
                      Decodify_Command@hh 00A0                        Decodify_Command@mm 00AA  
        __end_of_EEPROM_24C1025_Write_Str 1357                        Decodify_Command@ss 00B4  
                    USART_put_buffer@loop 0026                      USART_put_buffer@size 0021  
                              ??_ADC_init 0020               __end_of_EEPROM_Write_String 1BD1  
         __end_of_EEPROM_24C1025_Fill_All 1053                               ?_Send_To_MB 0070  
                  __size_of_Send_Reply_OK 0009                                __pbssBANK1 00CD  
                              __pbssBANK2 0110                                __pbssBANK3 0190  
                      _RESISTOR_ROOM_TEMP 1818           __end_of_EEPROM_24C1025_Read_Int 1B7C  
         __end_of_EEPROM_24C1025_Read_Str 1800                  ?_Package_Usart_is_for_me 0070  
                               ?_Save_Log 0058                            _PROCULUS_Delay 1A10  
                       __end_of__Umul8_16 1B30                                __pmaintext 1442  
                                 ?___flge 0020                       Save_Log@add_datalog 0058  
                     _EEPROM_Read_Integer 1B7C                PROCULUS_Show_Screen@screen 0056  
                              __pintentry 0004                      _PROCULUS_Show_Screen 196F  
                      ADC_Max_10Bits@Temp 002E                                   ?_strcat 0020  
                                 _T1CKPS0 0084                                   _T1CKPS1 0085  
                                 ?_strcpy 0020                                   ?_strlen 0020  
                       MediaPlacaVaccum@i 00A9                                 ?___xxtofl 0033  
                                 _MAX_ADC 1820                      ?_EEPROM_Read_Integer 0023  
                   Decodify_Command@dados 00BE               EEPROM_24C1025_Read_Int@data 003B  
                                 _SSPCON2 0091          __end_of_PROCULUS_VP_Write_String 19C7  
                 EEPROM_Read_Integer@addr 0026                                   _SSPSTAT 0094  
                _EEPROM_24C1025_Read_Byte 19DE                                __stringtab 1800  
                     PROCULUS_VP_Write@vp 0052               ??_EEPROM_24C1025_Write_Byte 0034  
                __end_of_USART_put_buffer 1B54                __end_of_EEPROM_Read_String 1AA9  
                  __end_of_PROCULUS_Delay 1A2D                  __end_of_USART_put_string 1CF2  
                    __size_of_my_delay_ms 0037                                ??_Save_Log 005C  
                         PROCULUS_Delay@i 0024                                   _Vaccum0 00D1  
                            ??_USART_init 0024               EEPROM_24C1025_Read_Str@ctrl 0030  
                                 _Tensao1 00CD                              ??_USART_putc 0020  
              __size_of_USART_to_Protocol 005D               PROCULUS_Buzzer@time_ms_x_10 0056  
                         __size_of___flge 0093                                   ___fladd 0B3C  
                                 ___fldiv 099B                  EEPROM_Write_Integer@addr 002B  
                                 ___flmul 04BC                  EEPROM_Write_Integer@dado 0025  
                                 ___flsub 1A4B                                   ___fltol 1053  
                                 ___lldiv 1F3E                                   ___lwdiv 1DD5  
                                 ___lwmod 1C8D                             _Send_Reply_OK 1951  
                     __size_of_Send_To_MB 0028                     ?_PROCULUS_Show_Screen 0056  
                                 _captura 195A                          _statuspower_memo 007C  
                                 __ptext1 1D61                                   __ptext2 1E11  
                                 __ptext3 0D69                                   __ptext4 1A4B  
                                 __ptext5 0B3C                                   __ptext6 1137  
                                 __ptext7 099B                                   __ptext8 19C7  
                                 __ptext9 1E8B                         ??_PROCULUS_Buzzer 0058  
                                 _destino 00E2                         ?_EEPROM_Read_Byte 0070  
                         __size_of_strcat 002C                           __size_of_strcpy 001E  
                         __size_of_strlen 0019                              __size_of_isr 00EB  
                              ??___xxtofl 0037                        ??_EEPROM_Read_Byte 0020  
                                 _segundo 00E7                  __size_of_I2C_Master_Init 0031  
                __size_of_I2C_Master_Read 002D                            _usart_protocol 01CA  
                   ??_EEPROM_Read_Integer 0025                  __size_of_I2C_Master_Wait 0008  
                __size_of_I2C_Master_Stop 0005             EEPROM_24C1025_Write_Int@local 0056  
                                 _pointer 00E1             EEPROM_24C1025_Write_Byte@data 0033  
                                 clrloop0 07F9                        __end_of_USART_init 1E4D  
         __end_of_Package_Usart_is_for_me 19DE                        __end_of_USART_putc 1014  
                       ADC_Media_10bits@i 0049                      end_of_initialization 0032  
                _EEPROM_24C1025_Write_Int 1A69                         ??_my_delay_ms_WDT 0024  
                _EEPROM_24C1025_Write_Str 126D                ??_I2C_Master_RepeatedStart 0020  
                                 itoa@buf 0037                                   itoa@val 0031  
                         ?_PROCULUS_Delay 0020                           my_delay_ms@time 0020  
         EEPROM_24C1025_Write_Buffer@data 0027           EEPROM_24C1025_Write_Buffer@ctrl 002E  
               __size_of_I2C_Master_Start 0009                 __size_of_I2C_Master_Write 0009  
                       ?_Decodify_Command 0070                           ___lldiv@divisor 0020  
                         ___lldiv@counter 002D                        ??_Decodify_Command 005F  
                               _RCSTAbits 0018                          I2C_Master_Init@c 002E  
                        I2C_Master_Read@a 0020                            ?_Send_Reply_OK 0070  
                                 utoa@buf 0030                 _EEPROM_24C1025_Write_Byte 1984  
                                 utoa@val 0028          __size_of_EEPROM_24C1025_Fill_All 003F  
                                 strlen@s 0024                        USART_to_Protocol@i 0022  
                               _PORTAbits 0005                                 _PORTBbits 0006  
                               _PORTCbits 0007                          _Delay_Led_Memory 007A  
            ??_EEPROM_24C1025_Read_Buffer 002D             EEPROM_24C1025_Write_Str@range 002A  
                               _ROOM_TEMP 181C                            _ADC_Max_10Bits 1E4D  
                             ___fladd@grs 005D          __size_of_EEPROM_24C1025_Read_Int 0028  
        __size_of_EEPROM_24C1025_Read_Str 016C                             ___xxtofl@sign 003B  
     __end_of_EEPROM_24C1025_Write_Buffer 1694               _EEPROM_24C1025_Write_Buffer 1531  
                             ___fldiv@grs 0055                               ___fldiv@rem 004E  
    PROCULUS_Control_Register_Write@vetor 0054          EEPROM_24C1025_Write_Buffer@count 002B  
         EEPROM_24C1025_Write_Int@mem_add 004E          EEPROM_24C1025_Write_Buffer@range 002D  
                       __size_of_ADC_init 000B                   Decodify_Command@tempint 00C1  
                       ?_MediaPlacaVaccum 0070                     PROCULUS_VP_Write@size 0056  
         EEPROM_24C1025_Read_Str@chip_add 002E                               ___flmul@grs 0039  
                      ??_MediaPlacaVaccum 0066                  _PROCULUS_VP_Write_String 19B0  
                               _TXSTAbits 0098       __size_of_EEPROM_24C1025_Read_Buffer 0173  
                       ?_ADC_Media_10bits 0041                    PROCULUS_Delay@tempo_ms 0020  
                  ??_PROCULUS_Show_Screen 0058                        ??_ADC_Media_10bits 0045  
                          __end_of___flge 11CA                     __end_of_USART_put_int 19B0  
                  __end_of_ADC_Max_10Bits 1E8B                               _BAUDCTLbits 0187  
                          __end_of_strcat 1BFD                            __end_of_strcpy 1A4B  
                          __end_of_strlen 1A10                       start_initialization 0015  
                             __end_of_isr 1442                               USART_init@i 0026  
                            ??_Send_To_MB 0021                         ??_I2C_Master_Init 0032  
                       ??_I2C_Master_Read 0022                         ??_I2C_Master_Wait 0020  
                       ??_I2C_Master_Stop 0020              __end_of_EEPROM_Write_Integer 1C8D  
        EEPROM_24C1025_Write_Int@chip_add 0055                  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                     Decodify_Command@add 00C0                     USART_put_buffer@vetor 0025  
                         ??_Send_Reply_OK 0025                                  ??___flge 0028  
                       __size_of_Save_Log 0079          EEPROM_24C1025_Read_Buffer@cnt_98 0030  
                               __Umul8_16 1B0D                        __end_of_Send_To_MB 0828  
        __size_of_Package_Usart_is_for_me 0017                           ?_ADC_Max_10Bits 002A  
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
                                ??_strcat 0022                                  ??_strcpy 0021  
                                ??_strlen 0022                ??_EEPROM_24C1025_Read_Byte 0038  
      EEPROM_24C1025_Write_Buffer@mem_add 0022                                 ___fladd@a 004E  
                               ___fladd@b 004A          EEPROM_24C1025_Write_Byte@mem_add 002F  
                               ___fldiv@a 0041                                 ___fldiv@b 0045  
                               ___flmul@a 002D                                 ___flmul@b 0029  
                             __pbssCOMMON 0078                                 ___flsub@a 005E  
                               ___flsub@b 0062                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
<<<<<<< HEAD
                           __pcstackBANK3 01DC                                ?_Load_Work 0077  
                       _PROCULUS_VP_Write 080A                         __size_of___xxtofl 006E  
                      ?_PROCULUS_VP_Write 00AB                       USART_put_buffer@ptr 0026  
                       ?_USART_put_buffer 0021              __size_of_EEPROM_Write_String 0018  
                        _I2C_Master_Start 0F34                        ??_USART_put_buffer 0023  
                        _I2C_Master_Write 0F2E                       ??_PROCULUS_VP_Write 00B0  
                          _tempodecorrido 01A0                         ?_USART_put_string 0021  
                         _PROCULUS_Buzzer 1D58                          ___lwdiv@dividend 0022  
                           ?_ADC_Read_NTC 00B9            Package_Usart_is_for_me@retorno 0020  
                      ??_USART_put_string 0023                                  ?___fladd 0039  
                                ?___fldiv 00A0                   _EEPROM_24C1025_Fill_All 0037  
                                ?___flmul 0055                                  ?___flsub 004D  
                                ?___fltol 00A0                                  ?___lldiv 0020  
                              ?__Umul8_16 0020                        _EEPROM_Read_String 04F5  
                                ?___lwdiv 0020                                  ?___lwmod 0020  
      __end_of_EEPROM_24C1025_Read_Buffer 0E53                _EEPROM_24C1025_Read_Buffer 0D70  
                                ?_captura 0020                                 __pstrings 1800  
                         _my_delay_ms_WDT 1CB4                   _EEPROM_24C1025_Read_Int 1C7D  
                 _EEPROM_24C1025_Read_Str 0C8B                    EEPROM_Read_Integer@ptr 0027  
              ??_EEPROM_24C1025_Write_Int 0070                ??_EEPROM_24C1025_Write_Str 0027  
                     ?_EEPROM_Read_String 0023                                 _eval_poly 111E  
               __end_of_PROCULUS_VP_Write 083F                EEPROM_24C1025_Read_Str@cnt 002B  
                                _ADC_init 1005                          ___lwdiv@quotient 0025  
                 EEPROM_Write_Integer@ptr 002A                      __size_of_Auto_Relay0 005A  
                    __size_of_Auto_Relay1 0073                          ??_PROCULUS_Delay 0022  
                          __size_of_frexp 0047            EEPROM_24C1025_Read_Buffer@data 0029  
            __size_of_mediatemperaturaNTC 00DF            EEPROM_24C1025_Read_Buffer@ctrl 0030  
                           ??_my_delay_ms 0024                 __size_of_EEPROM_Read_Byte 0021  
                       interrupt_function 0004           EEPROM_24C1025_Write_Str@mem_add 0022  
                    ??_EEPROM_Read_String 0024                                 clear_ram0 0802  
                                _PIE1bits 008C                            ??_ADC_Read_NTC 0070  
                                _PIR1bits 000C          PROCULUS_Control_Register_Write@i 00AE  
                  Decodify_Command@OutPut 00E2                   mediatemperaturaNTC@Temp 00D5  
                         _Delay_Led_Usart 01AC              EEPROM_24C1025_Read_Byte@data 0036  
                    __size_of_Rele0Ligado 0017                      __size_of_Rele1Ligado 0018  
             __end_of_EEPROM_Read_Integer 061D                                _ADCON0bits 001F  
                             __stringbase 180F                                _ADCON1bits 009F  
               __size_of_Decodify_Command 0362                      _EEPROM_Write_Integer 1EA8  
          EEPROM_24C1025_Read_Int@mem_add 0031                                ?_eval_poly 00A0  
                               main@reset 00EC                               ??_Load_Work 00B9  
              ??_PROCULUS_VP_Write_String 0070                       I2C_Master_Read@temp 0022  
                 __end_of_PROCULUS_Buzzer 1D78                            _generic_status 0076  
                               frexp@eptr 0030                                _EECON1bits 018C  
                                _Save_Log 0068                 ??_EEPROM_24C1025_Fill_All 0070  
                     __end_of_my_delay_ms 1800              EEPROM_24C1025_Read_Str@range 002D  
            EEPROM_24C1025_Read_Str@texto 0028                   __end_of_my_delay_ms_WDT 1CE1  
                            my_delay_ms@i 0026                             ADC_Read_NTC@B 00C2  
                           ADC_Read_NTC@i 00C8                               ??__Umul8_16 0023  
       __size_of_I2C_Master_RepeatedStart 0003                          __size_of___fladd 016F  
               ??_EEPROM_24C1025_Read_Int 0035                   _Package_Usart_is_for_me 175F  
                        __size_of___fldiv 0121                 ??_EEPROM_24C1025_Read_Str 0029  
                        __size_of___flmul 0154                 ?_I2C_Master_RepeatedStart 0077  
                        __size_of___flsub 001C                          __size_of___fltol 005A  
                        __size_of___lldiv 0048                          __size_of___lwdiv 002A  
                        __size_of___lwmod 0024                        __end_of__stringtab 1810  
     EEPROM_24C1025_Write_Buffer@chip_add 002C                       USART_put_string@ptr 0023  
                        __size_of_captura 000E                     ?_EEPROM_Write_Integer 0025  
                            _Temperatura0 0194                              _Temperatura1 0190  
                         _I2C_Master_Init 1E33                           _I2C_Master_Read 0F3F  
                                ___xxtofl 14A9                __size_of_PROCULUS_VP_Write 0035  
                         _I2C_Master_Wait 0F61                                strcat@from 0020  
        EEPROM_24C1025_Read_Byte@chip_add 0035                           _I2C_Master_Stop 0F3C  
                         ___lwdiv@divisor 0020                           ___lwdiv@counter 0024  
                                __ptext10 167E                                  __ptext11 1D15  
                                __ptext20 07B1                                  __ptext12 1E33  
                                __ptext21 1C98                                  __ptext13 1E60  
                                __ptext30 0F95                                  __ptext22 0BA1  
                                __ptext14 083F                                  __ptext31 080A  
                                __ptext23 1CE1                                  __ptext15 1C50  
                                __ptext40 1517                                  __ptext32 1D4E  
                                __ptext24 1CE8                                  __ptext16 0BBD  
                                __ptext41 0602                                  __ptext33 1D58  
                                __ptext25 0068                                  __ptext17 0F6D  
                                __ptext50 1C7D                                  __ptext42 1ECB  
                                __ptext34 1654                                  __ptext26 025A  
                                __ptext18 1DC0                                  __ptext51 1C65  
                                __ptext43 1EA8                                  __ptext35 1D78  
                                __ptext27 00EB                                  __ptext19 1E0F  
                                __ptext60 0F34                                  __ptext52 0D70  
                                __ptext44 1EE3                                  __ptext36 0F87  
                                __ptext28 023F                                  __ptext61 0F61  
                                __ptext53 0F6A                                  __ptext45 04F5  
                                __ptext37 0BDD                                  __ptext29 1C29  
                                __ptext70 10EF                                  __ptext62 03AB  
                                __ptext54 0F3F                                  __ptext46 05E1  
                                __ptext38 1DA6                                  __ptext71 048C  
                                __ptext63 14A9                                  __ptext55 0037  
                                __ptext47 0BEE                                  __ptext39 0509  
                                __ptext72 1005                                  __ptext64 1106  
                                __ptext56 00CC                                  __ptext48 1C3C  
                                __ptext73 1F24                                  __ptext65 0490  
                                __ptext57 0E53                                  __ptext49 0C8B  
                                __ptext66 0351                                  __ptext58 0F2E  
                                __ptext67 1638                                  __ptext59 0F3C  
                                __ptext68 11C8                                  __ptext69 041E  
                       __CFG_BOR4V$BOR40V 0000                        USART_put_int@value 00A8  
                              strcpy@from 0020                             __size_of_main 00F8  
                           __size_of_itoa 001A                             __size_of_utoa 004F  
            EEPROM_24C1025_Fill_All@value 00B1                PROCULUS_VP_Write_String@vp 00B3  
     EEPROM_24C1025_Write_Buffer@sizedata 0026                               _milisegundo 01AA  
                          _Delay_Led_Tmr0 01AE             __size_of_PROCULUS_Show_Screen 000A  
                     _EEPROM_Write_String 1ECB                                  log@coeff 1810  
                __end_of_I2C_Master_Start 0F3C                  __end_of_I2C_Master_Write 0F34  
                              _INTCONbits 000B                               ??_eval_poly 00A7  
                    __end_of_ADC_Read_NTC 14A9                                  isr@tempo 007B  
                                itoa@base 0031                      EEPROM_Read_Byte@addr 0022  
                  EEPROM_Read_String@addr 0024                    EEPROM_Read_String@dado 0023  
                        my_delay_ms_WDT@i 0026                                  intlevel1 0000  
                        ?_PROCULUS_Buzzer 00AF                         USART_put_int@dado 00AA  
                        _EEPROM_Read_Byte 05E1                               _my_delay_ms 17D4  
                       ADC_Read_NTC@canal 0077                          ___lwmod@dividend 0022  
                    ?_EEPROM_Write_String 0025                          ___lldiv@dividend 0024  
                  __size_of_USART_put_int 000E              EEPROM_24C1025_Write_Int@data 00AC  
                    EEPROM_Read_Integer@i 002A                   EEPROM_Write_String@addr 0026  
                 EEPROM_Write_String@dado 0025                         ADC_Read_NTC@value 00C9  
                      USART_init@baudrate 0020                                 stringcode 180A  
                              _OSCCONbits 008F                 ??_Package_Usart_is_for_me 0020  
                        ?_my_delay_ms_WDT 0020                     __end_of_Send_Reply_OK 1CE8  
                     _mediatemperaturaNTC 1010                   __end_of_I2C_Master_Init 1E60  
                 __end_of_I2C_Master_Read 0F61                   __end_of_I2C_Master_Wait 0F6A  
                 __end_of_I2C_Master_Stop 0F3F              EEPROM_24C1025_Write_Str@data 0026  
            EEPROM_24C1025_Write_Str@ctrl 002B                 __size_of_USART_put_buffer 001C  
             ?_EEPROM_24C1025_Read_Buffer 0024           EEPROM_24C1025_Fill_All@chip_add 00B3  
                  ??_EEPROM_Write_Integer 0027                                  utoa@base 0029  
                  __Umul8_16@multiplicand 0020           USART_to_Protocol@usart_protocol 0024  
                        _Decodify_Command 083F                                  strcat@cp 0023  
                                strcat@to 0024                 __size_of_USART_put_string 002D  
                        ___lldiv@quotient 0028                         I2C_Master_Write@d 0020  
                         ___lwmod@divisor 0020                                  strcpy@cp 0023  
                                strlen@cp 0023                                  strcpy@to 0022  
                         ___lwmod@counter 0024                                  stringdir 180A  
                                stringtab 1800                         _EEPROM_Write_Byte 1EE3  
          EEPROM_24C1025_Read_Str@mem_add 0024                             ___fladd@signs 0049  
                    ?_mediatemperaturaNTC 0077                        ?_EEPROM_Write_Byte 0020  
                   ??_EEPROM_Write_String 0026                   __size_of_Rele0Desligado 0004  
                            ___fladd@aexp 004A                              ___fladd@bexp 004B  
       __size_of_EEPROM_24C1025_Read_Byte 0018                 ?_EEPROM_24C1025_Read_Byte 0031  
                     EEPROM_Read_String@c 0025                      __Umul8_16@multiplier 0027  
                 __size_of_Rele1Desligado 0004                       ??_EEPROM_Write_Byte 0021  
                       __Umul8_16@product 0023                                _USART_init 1D15  
=======
                       _PROCULUS_VP_Write 07B1                         __size_of___xxtofl 00A3  
                      ?_PROCULUS_VP_Write 0052                       USART_put_buffer@ptr 0027  
                       ?_USART_put_buffer 0021              __size_of_EEPROM_Write_String 002B  
                        _I2C_Master_Start 193F                        ??_USART_put_buffer 0023  
                        _I2C_Master_Write 1948                       ??_PROCULUS_VP_Write 0057  
                          _tempodecorrido 00D7                         ?_USART_put_string 0021  
                         _PROCULUS_Buzzer 1AEB                          ___lwdiv@dividend 0022  
          Package_Usart_is_for_me@retorno 0020                        ??_USART_put_string 0023  
                                ?___fladd 004A                                  ?___fldiv 0041  
                 _EEPROM_24C1025_Fill_All 1014                                  ?___flmul 0029  
                                ?___flsub 005E                                  ?___fltol 0043  
                                ?___lldiv 0020                                ?__Umul8_16 0020  
                      _EEPROM_Read_String 1A89                                  ?___lwdiv 0020  
                                ?___lwmod 0020        __end_of_EEPROM_24C1025_Read_Buffer 099B  
              _EEPROM_24C1025_Read_Buffer 0828                     MediaPlacaVaccum@Valor 00A0  
                                ?_captura 0020                                 __pstrings 1800  
                   MediaPlacaVaccum@canal 00A4                           _my_delay_ms_WDT 1D61  
                 _EEPROM_24C1025_Read_Int 1B54                   _EEPROM_24C1025_Read_Str 1694  
                  EEPROM_Read_Integer@ptr 0027                ??_EEPROM_24C1025_Write_Int 0054  
              ??_EEPROM_24C1025_Write_Str 0027                       ?_EEPROM_Read_String 0023  
               __end_of_PROCULUS_VP_Write 07F8                EEPROM_24C1025_Read_Str@cnt 002D  
                                _ADC_init 1964                          ___lwdiv@quotient 0026  
                 EEPROM_Write_Integer@ptr 002A                          ??_PROCULUS_Delay 0022  
                     ADC_Max_10Bits@canal 002D            EEPROM_24C1025_Read_Buffer@data 002B  
          EEPROM_24C1025_Read_Buffer@ctrl 0033                       ADC_Max_10Bits@value 0030  
                           ??_my_delay_ms 0024                 __size_of_EEPROM_Read_Byte 0022  
                       interrupt_function 0004           EEPROM_24C1025_Write_Str@mem_add 0022  
                    ??_EEPROM_Read_String 0024                                 clear_ram0 07F8  
                                _PIE1bits 008C                                  _PIR1bits 000C  
        PROCULUS_Control_Register_Write@i 0055                    Decodify_Command@OutPut 00C3  
                         _PT100_TRANSLADA 1810                           _Delay_Led_Usart 00DF  
            EEPROM_24C1025_Read_Byte@data 0039               __end_of_EEPROM_Read_Integer 1BA6  
                              _ADCON0bits 001F                               __stringbase 180F  
                              _ADCON1bits 009F                 __size_of_Decodify_Command 0486  
                    _EEPROM_Write_Integer 1C5B            EEPROM_24C1025_Read_Int@mem_add 0034  
                               main@reset 006D                ??_PROCULUS_VP_Write_String 005D  
                     I2C_Master_Read@temp 0024                   __end_of_PROCULUS_Buzzer 1B0D  
                          _generic_status 00E9                                _EECON1bits 018C  
                                _Save_Log 10BE                 ??_EEPROM_24C1025_Fill_All 005A  
                     __end_of_my_delay_ms 1D29              EEPROM_24C1025_Read_Str@range 002F  
            EEPROM_24C1025_Read_Str@texto 002A                   __end_of_my_delay_ms_WDT 1D99  
                            my_delay_ms@i 0026                               ??__Umul8_16 0022  
               __size_of_MediaPlacaVaccum 0297         __size_of_I2C_Master_RepeatedStart 0005  
                        __size_of___fladd 022D                 ??_EEPROM_24C1025_Read_Int 0038  
                 _Package_Usart_is_for_me 19C7                          __size_of___fldiv 01A1  
               ??_EEPROM_24C1025_Read_Str 002B                          __size_of___flmul 02F5  
               ?_I2C_Master_RepeatedStart 0070                          __size_of___flsub 001E  
                        __size_of___fltol 006B                          __size_of___lldiv 005E  
                        __size_of___lwdiv 003C                          __size_of___lwmod 0032  
                      __end_of__stringtab 1810       EEPROM_24C1025_Write_Buffer@chip_add 002C  
                     USART_put_string@ptr 0023                          __size_of_captura 000A  
                   ?_EEPROM_Write_Integer 0025                           _I2C_Master_Init 1C2A  
                         _I2C_Master_Read 1BFD                                  ___xxtofl 11CA  
              __size_of_PROCULUS_VP_Write 0047                           _I2C_Master_Wait 1937  
                              strcat@from 0020          EEPROM_24C1025_Read_Byte@chip_add 0038  
                         _I2C_Master_Stop 192D                 __size_of_ADC_Media_10bits 0056  
                         ___lwdiv@divisor 0020                           ___lwdiv@counter 0025  
                                __ptext10 11CA                                  __ptext11 1E4D  
                                __ptext20 1F9C                                  __ptext12 1CF2  
                                __ptext21 1C8D                                  __ptext13 195A  
                                __ptext30 1B0D                                  __ptext22 1EE1  
                                __ptext14 1C2A                                  __ptext31 19B0  
                                __ptext23 1B30                                  __ptext15 1F3E  
                                __ptext40 1A10                                  __ptext32 19F7  
                                __ptext24 0800                                  __ptext16 0036  
                                __ptext41 1BA6                                  __ptext33 07B1  
                                __ptext25 1951                                  __ptext17 1A2D  
                                __ptext50 1B54                                  __ptext42 1C5B  
                                __ptext34 196F                                  __ptext26 1CBF  
                                __ptext18 1BD1                                  __ptext51 19DE  
                                __ptext43 1D99                                  __ptext35 1AEB  
                                __ptext27 10BE                                  __ptext19 1AA9  
                                __ptext60 193F                                  __ptext52 0828  
                                __ptext44 1A89                                  __ptext36 1DD5  
                                __ptext28 1053                                  __ptext61 1937  
                                __ptext53 1932                                  __ptext45 1B7C  
                                __ptext37 1D29                                  __ptext29 04BC  
                                __ptext62 1964                                  __ptext54 1BFD  
                                __ptext46 1AC9                                  __ptext38 199A  
                                __ptext63 1357                                  __ptext55 1014  
                                __ptext47 126D                                  __ptext39 1004  
                                __ptext56 1A69                                  __ptext48 1984  
                                __ptext57 1531                                  __ptext49 1694  
                                __ptext58 1948                                  __ptext59 192D  
                       __CFG_BOR4V$BOR40V 0000                        USART_put_int@value 004E  
                          _PT100_CONSTANT 1814                      MediaPlacaVaccum@Temp 00A5  
                              strcpy@from 0020                             __size_of_main 00EF  
                           __size_of_itoa 0020                             __size_of_utoa 0064  
            EEPROM_24C1025_Fill_All@value 0058                PROCULUS_VP_Write_String@vp 005A  
                 __end_of_PT100_TRANSLADA 1814       EEPROM_24C1025_Write_Buffer@sizedata 0026  
                             _milisegundo 00DD                          ??_ADC_Max_10Bits 002C  
                          _Delay_Led_Tmr0 0078             __size_of_PROCULUS_Show_Screen 0015  
                     _EEPROM_Write_String 1BA6                                  log@coeff 1824  
                __end_of_I2C_Master_Start 1948                  __end_of_I2C_Master_Write 1951  
                              _INTCONbits 000B                    __end_of_PT100_CONSTANT 1818  
                                isr@tempo 0076                                  itoa@base 0033  
                    EEPROM_Read_Byte@addr 0022                    EEPROM_Read_String@addr 0025  
                  EEPROM_Read_String@dado 0023                          my_delay_ms_WDT@i 0026  
                                intlevel1 0000                          ?_PROCULUS_Buzzer 0056  
                       USART_put_int@dado 0051                          _EEPROM_Read_Byte 1AC9  
                             _my_delay_ms 1CF2                          ___lwmod@dividend 0022  
                    ?_EEPROM_Write_String 0025                          ___lldiv@dividend 0024  
                  __size_of_USART_put_int 0016              EEPROM_24C1025_Write_Int@data 0052  
                    EEPROM_Read_Integer@i 002A                   EEPROM_Write_String@addr 0027  
                 EEPROM_Write_String@dado 0025                        USART_init@baudrate 0020  
                               stringcode 180A                                _OSCCONbits 008F  
               ??_Package_Usart_is_for_me 0020                          ?_my_delay_ms_WDT 0020  
                   __end_of_Send_Reply_OK 195A                   __end_of_I2C_Master_Init 1C5B  
                 __end_of_I2C_Master_Read 1C2A                   __end_of_I2C_Master_Wait 193F  
                 __end_of_I2C_Master_Stop 1932              EEPROM_24C1025_Write_Str@data 0026  
            EEPROM_24C1025_Write_Str@ctrl 002B                 __size_of_USART_put_buffer 0024  
             ?_EEPROM_24C1025_Read_Buffer 0026           EEPROM_24C1025_Fill_All@chip_add 005A  
                  ??_EEPROM_Write_Integer 0027                                  utoa@base 002A  
                  __Umul8_16@multiplicand 0020           USART_to_Protocol@usart_protocol 0024  
                        _Decodify_Command 0036                                  strcat@cp 0023  
                                strcat@to 0024                 __size_of_USART_put_string 0033  
                        ___lldiv@quotient 0029                         I2C_Master_Write@d 0020  
                         ___lwmod@divisor 0020                                  strcpy@cp 0023  
                                strlen@cp 0023                                  strcpy@to 0022  
                         ___lwmod@counter 0025                                  stringdir 180A  
                                stringtab 1800                         _EEPROM_Write_Byte 1D99  
          EEPROM_24C1025_Read_Str@mem_add 0026                             ___fladd@signs 005A  
                      ?_EEPROM_Write_Byte 0020                     ??_EEPROM_Write_String 0026  
                            ___fladd@aexp 005B                              ___fladd@bexp 005C  
       __size_of_EEPROM_24C1025_Read_Byte 0019                 ?_EEPROM_24C1025_Read_Byte 0034  
                     EEPROM_Read_String@c 0026                      __Umul8_16@multiplier 0028  
                     ??_EEPROM_Write_Byte 0021                         __Umul8_16@product 0024  
                              _USART_init 1E11  
>>>>>>> 7841aa4e8ca7bc004c2a57b291c87741ad59dafb
