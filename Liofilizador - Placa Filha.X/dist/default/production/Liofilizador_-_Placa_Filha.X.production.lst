

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jan 02 16:37:54 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,delta=2
    79                           	dabs	1,0x7E,2
    80  0000                     
    81                           ; Version 2.10
    82                           ; Generated 31/07/2019 GMT
    83                           ; 
    84                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC16F886 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0093                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  0105                     	;# 
   177  0107                     	;# 
   178  0108                     	;# 
   179  0109                     	;# 
   180  010C                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  0185                     	;# 
   186  0187                     	;# 
   187  0188                     	;# 
   188  0189                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001B                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001D                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  0081                     	;# 
   226  0085                     	;# 
   227  0086                     	;# 
   228  0087                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  008F                     	;# 
   234  0090                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0093                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  009F                     	;# 
   252  0105                     	;# 
   253  0107                     	;# 
   254  0108                     	;# 
   255  0109                     	;# 
   256  010C                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  0185                     	;# 
   262  0187                     	;# 
   263  0188                     	;# 
   264  0189                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0089                     	;# 
   306  008C                     	;# 
   307  008D                     	;# 
   308  008E                     	;# 
   309  008F                     	;# 
   310  0090                     	;# 
   311  0091                     	;# 
   312  0092                     	;# 
   313  0093                     	;# 
   314  0093                     	;# 
   315  0093                     	;# 
   316  0094                     	;# 
   317  0095                     	;# 
   318  0096                     	;# 
   319  0097                     	;# 
   320  0098                     	;# 
   321  0099                     	;# 
   322  009A                     	;# 
   323  009B                     	;# 
   324  009C                     	;# 
   325  009D                     	;# 
   326  009E                     	;# 
   327  009F                     	;# 
   328  0105                     	;# 
   329  0107                     	;# 
   330  0108                     	;# 
   331  0109                     	;# 
   332  010C                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  010E                     	;# 
   336  010F                     	;# 
   337  0185                     	;# 
   338  0187                     	;# 
   339  0188                     	;# 
   340  0189                     	;# 
   341  018C                     	;# 
   342  018D                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000D                     	;# 
   356  000E                     	;# 
   357  000E                     	;# 
   358  000F                     	;# 
   359  0010                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0014                     	;# 
   364  0015                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  001D                     	;# 
   375  001E                     	;# 
   376  001F                     	;# 
   377  0081                     	;# 
   378  0085                     	;# 
   379  0086                     	;# 
   380  0087                     	;# 
   381  0089                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  008F                     	;# 
   386  0090                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0093                     	;# 
   391  0093                     	;# 
   392  0094                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0097                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009A                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  009F                     	;# 
   404  0105                     	;# 
   405  0107                     	;# 
   406  0108                     	;# 
   407  0109                     	;# 
   408  010C                     	;# 
   409  010C                     	;# 
   410  010D                     	;# 
   411  010E                     	;# 
   412  010F                     	;# 
   413  0185                     	;# 
   414  0187                     	;# 
   415  0188                     	;# 
   416  0189                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0009                     	;# 
   428  000A                     	;# 
   429  000B                     	;# 
   430  000C                     	;# 
   431  000D                     	;# 
   432  000E                     	;# 
   433  000E                     	;# 
   434  000F                     	;# 
   435  0010                     	;# 
   436  0011                     	;# 
   437  0012                     	;# 
   438  0013                     	;# 
   439  0014                     	;# 
   440  0015                     	;# 
   441  0015                     	;# 
   442  0016                     	;# 
   443  0017                     	;# 
   444  0018                     	;# 
   445  0019                     	;# 
   446  001A                     	;# 
   447  001B                     	;# 
   448  001B                     	;# 
   449  001C                     	;# 
   450  001D                     	;# 
   451  001E                     	;# 
   452  001F                     	;# 
   453  0081                     	;# 
   454  0085                     	;# 
   455  0086                     	;# 
   456  0087                     	;# 
   457  0089                     	;# 
   458  008C                     	;# 
   459  008D                     	;# 
   460  008E                     	;# 
   461  008F                     	;# 
   462  0090                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0093                     	;# 
   466  0093                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0095                     	;# 
   470  0096                     	;# 
   471  0097                     	;# 
   472  0098                     	;# 
   473  0099                     	;# 
   474  009A                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  009F                     	;# 
   480  0105                     	;# 
   481  0107                     	;# 
   482  0108                     	;# 
   483  0109                     	;# 
   484  010C                     	;# 
   485  010C                     	;# 
   486  010D                     	;# 
   487  010E                     	;# 
   488  010F                     	;# 
   489  0185                     	;# 
   490  0187                     	;# 
   491  0188                     	;# 
   492  0189                     	;# 
   493  018C                     	;# 
   494  018D                     	;# 
   495  0000                     	;# 
   496  0001                     	;# 
   497  0002                     	;# 
   498  0003                     	;# 
   499  0004                     	;# 
   500  0005                     	;# 
   501  0006                     	;# 
   502  0007                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000E                     	;# 
   510  000F                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  001D                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  0081                     	;# 
   530  0085                     	;# 
   531  0086                     	;# 
   532  0087                     	;# 
   533  0089                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  008E                     	;# 
   537  008F                     	;# 
   538  0090                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0093                     	;# 
   542  0093                     	;# 
   543  0093                     	;# 
   544  0094                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0097                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009A                     	;# 
   551  009B                     	;# 
   552  009C                     	;# 
   553  009D                     	;# 
   554  009E                     	;# 
   555  009F                     	;# 
   556  0105                     	;# 
   557  0107                     	;# 
   558  0108                     	;# 
   559  0109                     	;# 
   560  010C                     	;# 
   561  010C                     	;# 
   562  010D                     	;# 
   563  010E                     	;# 
   564  010F                     	;# 
   565  0185                     	;# 
   566  0187                     	;# 
   567  0188                     	;# 
   568  0189                     	;# 
   569  018C                     	;# 
   570  018D                     	;# 
   571  0000                     	;# 
   572  0001                     	;# 
   573  0002                     	;# 
   574  0003                     	;# 
   575  0004                     	;# 
   576  0005                     	;# 
   577  0006                     	;# 
   578  0007                     	;# 
   579  0009                     	;# 
   580  000A                     	;# 
   581  000B                     	;# 
   582  000C                     	;# 
   583  000D                     	;# 
   584  000E                     	;# 
   585  000E                     	;# 
   586  000F                     	;# 
   587  0010                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0013                     	;# 
   591  0014                     	;# 
   592  0015                     	;# 
   593  0015                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  0019                     	;# 
   598  001A                     	;# 
   599  001B                     	;# 
   600  001B                     	;# 
   601  001C                     	;# 
   602  001D                     	;# 
   603  001E                     	;# 
   604  001F                     	;# 
   605  0081                     	;# 
   606  0085                     	;# 
   607  0086                     	;# 
   608  0087                     	;# 
   609  0089                     	;# 
   610  008C                     	;# 
   611  008D                     	;# 
   612  008E                     	;# 
   613  008F                     	;# 
   614  0090                     	;# 
   615  0091                     	;# 
   616  0092                     	;# 
   617  0093                     	;# 
   618  0093                     	;# 
   619  0093                     	;# 
   620  0094                     	;# 
   621  0095                     	;# 
   622  0096                     	;# 
   623  0097                     	;# 
   624  0098                     	;# 
   625  0099                     	;# 
   626  009A                     	;# 
   627  009B                     	;# 
   628  009C                     	;# 
   629  009D                     	;# 
   630  009E                     	;# 
   631  009F                     	;# 
   632  0105                     	;# 
   633  0107                     	;# 
   634  0108                     	;# 
   635  0109                     	;# 
   636  010C                     	;# 
   637  010C                     	;# 
   638  010D                     	;# 
   639  010E                     	;# 
   640  010F                     	;# 
   641  0185                     	;# 
   642  0187                     	;# 
   643  0188                     	;# 
   644  0189                     	;# 
   645  018C                     	;# 
   646  018D                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0009                     	;# 
   656  000A                     	;# 
   657  000B                     	;# 
   658  000C                     	;# 
   659  000D                     	;# 
   660  000E                     	;# 
   661  000E                     	;# 
   662  000F                     	;# 
   663  0010                     	;# 
   664  0011                     	;# 
   665  0012                     	;# 
   666  0013                     	;# 
   667  0014                     	;# 
   668  0015                     	;# 
   669  0015                     	;# 
   670  0016                     	;# 
   671  0017                     	;# 
   672  0018                     	;# 
   673  0019                     	;# 
   674  001A                     	;# 
   675  001B                     	;# 
   676  001B                     	;# 
   677  001C                     	;# 
   678  001D                     	;# 
   679  001E                     	;# 
   680  001F                     	;# 
   681  0081                     	;# 
   682  0085                     	;# 
   683  0086                     	;# 
   684  0087                     	;# 
   685  0089                     	;# 
   686  008C                     	;# 
   687  008D                     	;# 
   688  008E                     	;# 
   689  008F                     	;# 
   690  0090                     	;# 
   691  0091                     	;# 
   692  0092                     	;# 
   693  0093                     	;# 
   694  0093                     	;# 
   695  0093                     	;# 
   696  0094                     	;# 
   697  0095                     	;# 
   698  0096                     	;# 
   699  0097                     	;# 
   700  0098                     	;# 
   701  0099                     	;# 
   702  009A                     	;# 
   703  009B                     	;# 
   704  009C                     	;# 
   705  009D                     	;# 
   706  009E                     	;# 
   707  009F                     	;# 
   708  0105                     	;# 
   709  0107                     	;# 
   710  0108                     	;# 
   711  0109                     	;# 
   712  010C                     	;# 
   713  010C                     	;# 
   714  010D                     	;# 
   715  010E                     	;# 
   716  010F                     	;# 
   717  0185                     	;# 
   718  0187                     	;# 
   719  0188                     	;# 
   720  0189                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  0000                     	;# 
   724  0001                     	;# 
   725  0002                     	;# 
   726  0003                     	;# 
   727  0004                     	;# 
   728  0005                     	;# 
   729  0006                     	;# 
   730  0007                     	;# 
   731  0009                     	;# 
   732  000A                     	;# 
   733  000B                     	;# 
   734  000C                     	;# 
   735  000D                     	;# 
   736  000E                     	;# 
   737  000E                     	;# 
   738  000F                     	;# 
   739  0010                     	;# 
   740  0011                     	;# 
   741  0012                     	;# 
   742  0013                     	;# 
   743  0014                     	;# 
   744  0015                     	;# 
   745  0015                     	;# 
   746  0016                     	;# 
   747  0017                     	;# 
   748  0018                     	;# 
   749  0019                     	;# 
   750  001A                     	;# 
   751  001B                     	;# 
   752  001B                     	;# 
   753  001C                     	;# 
   754  001D                     	;# 
   755  001E                     	;# 
   756  001F                     	;# 
   757  0081                     	;# 
   758  0085                     	;# 
   759  0086                     	;# 
   760  0087                     	;# 
   761  0089                     	;# 
   762  008C                     	;# 
   763  008D                     	;# 
   764  008E                     	;# 
   765  008F                     	;# 
   766  0090                     	;# 
   767  0091                     	;# 
   768  0092                     	;# 
   769  0093                     	;# 
   770  0093                     	;# 
   771  0093                     	;# 
   772  0094                     	;# 
   773  0095                     	;# 
   774  0096                     	;# 
   775  0097                     	;# 
   776  0098                     	;# 
   777  0099                     	;# 
   778  009A                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  009F                     	;# 
   784  0105                     	;# 
   785  0107                     	;# 
   786  0108                     	;# 
   787  0109                     	;# 
   788  010C                     	;# 
   789  010C                     	;# 
   790  010D                     	;# 
   791  010E                     	;# 
   792  010F                     	;# 
   793  0185                     	;# 
   794  0187                     	;# 
   795  0188                     	;# 
   796  0189                     	;# 
   797  018C                     	;# 
   798  018D                     	;# 
   799  0000                     	;# 
   800  0001                     	;# 
   801  0002                     	;# 
   802  0003                     	;# 
   803  0004                     	;# 
   804  0005                     	;# 
   805  0006                     	;# 
   806  0007                     	;# 
   807  0009                     	;# 
   808  000A                     	;# 
   809  000B                     	;# 
   810  000C                     	;# 
   811  000D                     	;# 
   812  000E                     	;# 
   813  000E                     	;# 
   814  000F                     	;# 
   815  0010                     	;# 
   816  0011                     	;# 
   817  0012                     	;# 
   818  0013                     	;# 
   819  0014                     	;# 
   820  0015                     	;# 
   821  0015                     	;# 
   822  0016                     	;# 
   823  0017                     	;# 
   824  0018                     	;# 
   825  0019                     	;# 
   826  001A                     	;# 
   827  001B                     	;# 
   828  001B                     	;# 
   829  001C                     	;# 
   830  001D                     	;# 
   831  001E                     	;# 
   832  001F                     	;# 
   833  0081                     	;# 
   834  0085                     	;# 
   835  0086                     	;# 
   836  0087                     	;# 
   837  0089                     	;# 
   838  008C                     	;# 
   839  008D                     	;# 
   840  008E                     	;# 
   841  008F                     	;# 
   842  0090                     	;# 
   843  0091                     	;# 
   844  0092                     	;# 
   845  0093                     	;# 
   846  0093                     	;# 
   847  0093                     	;# 
   848  0094                     	;# 
   849  0095                     	;# 
   850  0096                     	;# 
   851  0097                     	;# 
   852  0098                     	;# 
   853  0099                     	;# 
   854  009A                     	;# 
   855  009B                     	;# 
   856  009C                     	;# 
   857  009D                     	;# 
   858  009E                     	;# 
   859  009F                     	;# 
   860  0105                     	;# 
   861  0107                     	;# 
   862  0108                     	;# 
   863  0109                     	;# 
   864  010C                     	;# 
   865  010C                     	;# 
   866  010D                     	;# 
   867  010E                     	;# 
   868  010F                     	;# 
   869  0185                     	;# 
   870  0187                     	;# 
   871  0188                     	;# 
   872  0189                     	;# 
   873  018C                     	;# 
   874  018D                     	;# 
   875  0000                     	;# 
   876  0001                     	;# 
   877  0002                     	;# 
   878  0003                     	;# 
   879  0004                     	;# 
   880  0005                     	;# 
   881  0006                     	;# 
   882  0007                     	;# 
   883  0009                     	;# 
   884  000A                     	;# 
   885  000B                     	;# 
   886  000C                     	;# 
   887  000D                     	;# 
   888  000E                     	;# 
   889  000E                     	;# 
   890  000F                     	;# 
   891  0010                     	;# 
   892  0011                     	;# 
   893  0012                     	;# 
   894  0013                     	;# 
   895  0014                     	;# 
   896  0015                     	;# 
   897  0015                     	;# 
   898  0016                     	;# 
   899  0017                     	;# 
   900  0018                     	;# 
   901  0019                     	;# 
   902  001A                     	;# 
   903  001B                     	;# 
   904  001B                     	;# 
   905  001C                     	;# 
   906  001D                     	;# 
   907  001E                     	;# 
   908  001F                     	;# 
   909  0081                     	;# 
   910  0085                     	;# 
   911  0086                     	;# 
   912  0087                     	;# 
   913  0089                     	;# 
   914  008C                     	;# 
   915  008D                     	;# 
   916  008E                     	;# 
   917  008F                     	;# 
   918  0090                     	;# 
   919  0091                     	;# 
   920  0092                     	;# 
   921  0093                     	;# 
   922  0093                     	;# 
   923  0093                     	;# 
   924  0094                     	;# 
   925  0095                     	;# 
   926  0096                     	;# 
   927  0097                     	;# 
   928  0098                     	;# 
   929  0099                     	;# 
   930  009A                     	;# 
   931  009B                     	;# 
   932  009C                     	;# 
   933  009D                     	;# 
   934  009E                     	;# 
   935  009F                     	;# 
   936  0105                     	;# 
   937  0107                     	;# 
   938  0108                     	;# 
   939  0109                     	;# 
   940  010C                     	;# 
   941  010C                     	;# 
   942  010D                     	;# 
   943  010E                     	;# 
   944  010F                     	;# 
   945  0185                     	;# 
   946  0187                     	;# 
   947  0188                     	;# 
   948  0189                     	;# 
   949  018C                     	;# 
   950  018D                     	;# 
   951  0000                     	;# 
   952  0001                     	;# 
   953  0002                     	;# 
   954  0003                     	;# 
   955  0004                     	;# 
   956  0005                     	;# 
   957  0006                     	;# 
   958  0007                     	;# 
   959  0009                     	;# 
   960  000A                     	;# 
   961  000B                     	;# 
   962  000C                     	;# 
   963  000D                     	;# 
   964  000E                     	;# 
   965  000E                     	;# 
   966  000F                     	;# 
   967  0010                     	;# 
   968  0011                     	;# 
   969  0012                     	;# 
   970  0013                     	;# 
   971  0014                     	;# 
   972  0015                     	;# 
   973  0015                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001B                     	;# 
   980  001B                     	;# 
   981  001C                     	;# 
   982  001D                     	;# 
   983  001E                     	;# 
   984  001F                     	;# 
   985  0081                     	;# 
   986  0085                     	;# 
   987  0086                     	;# 
   988  0087                     	;# 
   989  0089                     	;# 
   990  008C                     	;# 
   991  008D                     	;# 
   992  008E                     	;# 
   993  008F                     	;# 
   994  0090                     	;# 
   995  0091                     	;# 
   996  0092                     	;# 
   997  0093                     	;# 
   998  0093                     	;# 
   999  0093                     	;# 
  1000  0094                     	;# 
  1001  0095                     	;# 
  1002  0096                     	;# 
  1003  0097                     	;# 
  1004  0098                     	;# 
  1005  0099                     	;# 
  1006  009A                     	;# 
  1007  009B                     	;# 
  1008  009C                     	;# 
  1009  009D                     	;# 
  1010  009E                     	;# 
  1011  009F                     	;# 
  1012  0105                     	;# 
  1013  0107                     	;# 
  1014  0108                     	;# 
  1015  0109                     	;# 
  1016  010C                     	;# 
  1017  010C                     	;# 
  1018  010D                     	;# 
  1019  010E                     	;# 
  1020  010F                     	;# 
  1021  0185                     	;# 
  1022  0187                     	;# 
  1023  0188                     	;# 
  1024  0189                     	;# 
  1025  018C                     	;# 
  1026  018D                     	;# 
  1027  0000                     	;# 
  1028  0001                     	;# 
  1029  0002                     	;# 
  1030  0003                     	;# 
  1031  0004                     	;# 
  1032  0005                     	;# 
  1033  0006                     	;# 
  1034  0007                     	;# 
  1035  0009                     	;# 
  1036  000A                     	;# 
  1037  000B                     	;# 
  1038  000C                     	;# 
  1039  000D                     	;# 
  1040  000E                     	;# 
  1041  000E                     	;# 
  1042  000F                     	;# 
  1043  0010                     	;# 
  1044  0011                     	;# 
  1045  0012                     	;# 
  1046  0013                     	;# 
  1047  0014                     	;# 
  1048  0015                     	;# 
  1049  0015                     	;# 
  1050  0016                     	;# 
  1051  0017                     	;# 
  1052  0018                     	;# 
  1053  0019                     	;# 
  1054  001A                     	;# 
  1055  001B                     	;# 
  1056  001B                     	;# 
  1057  001C                     	;# 
  1058  001D                     	;# 
  1059  001E                     	;# 
  1060  001F                     	;# 
  1061  0081                     	;# 
  1062  0085                     	;# 
  1063  0086                     	;# 
  1064  0087                     	;# 
  1065  0089                     	;# 
  1066  008C                     	;# 
  1067  008D                     	;# 
  1068  008E                     	;# 
  1069  008F                     	;# 
  1070  0090                     	;# 
  1071  0091                     	;# 
  1072  0092                     	;# 
  1073  0093                     	;# 
  1074  0093                     	;# 
  1075  0093                     	;# 
  1076  0094                     	;# 
  1077  0095                     	;# 
  1078  0096                     	;# 
  1079  0097                     	;# 
  1080  0098                     	;# 
  1081  0099                     	;# 
  1082  009A                     	;# 
  1083  009B                     	;# 
  1084  009C                     	;# 
  1085  009D                     	;# 
  1086  009E                     	;# 
  1087  009F                     	;# 
  1088  0105                     	;# 
  1089  0107                     	;# 
  1090  0108                     	;# 
  1091  0109                     	;# 
  1092  010C                     	;# 
  1093  010C                     	;# 
  1094  010D                     	;# 
  1095  010E                     	;# 
  1096  010F                     	;# 
  1097  0185                     	;# 
  1098  0187                     	;# 
  1099  0188                     	;# 
  1100  0189                     	;# 
  1101  018C                     	;# 
  1102  018D                     	;# 
  1103                           
  1104                           	psect	strings
  1105  1800                     __pstrings:	
  1106  1800                     stringtab:	
  1107  1800                     __stringtab:	
  1108                           
  1109                           ;	String table - string pointers are 1 byte each
  1110  1800  1BFF               	btfsc	btemp+1,7
  1111  1801  280A               	ljmp	stringcode
  1112  1802  1383               	bcf	3,7
  1113  1803  187F               	btfsc	btemp+1,0
  1114  1804  1783               	bsf	3,7
  1115  1805  0800               	movf	0,w
  1116  1806  0A84               	incf	4,f
  1117  1807  1903               	skipnz
  1118  1808  0AFF               	incf	btemp+1,f
  1119  1809  0008               	return
  1120  180A                     stringcode:	
  1121  180A                     stringdir:	
  1122  180A  3018               	movlw	high stringdir
  1123  180B  008A               	movwf	10
  1124  180C  0804               	movf	4,w
  1125  180D  0A84               	incf	4,f
  1126  180E  0782               	addwf	2,f
  1127  180F                     __stringbase:	
  1128  180F  3400               	retlw	0
  1129  1810                     __end_of__stringtab:	
  1130  1810                     _PT100_TRANSLADA:	
  1131  1810  3466               	retlw	102
  1132  1811  3466               	retlw	102
  1133  1812  34A6               	retlw	166
  1134  1813  34BF               	retlw	191
  1135  1814                     __end_of_PT100_TRANSLADA:	
  1136  1814                     _PT100_CONSTANT:	
  1137  1814  3414               	retlw	20
  1138  1815  34AE               	retlw	174
  1139  1816  342B               	retlw	43
  1140  1817  34C1               	retlw	193
  1141  1818                     __end_of_PT100_CONSTANT:	
  1142  1818                     _RESISTOR_ROOM_TEMP:	
  1143                           
  1144                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1145  1818  3400               	retlw	0
  1146  1819  3440               	retlw	64
  1147  181A  341C               	retlw	28
  1148  181B  3446               	retlw	70
  1149  181C                     __end_of_RESISTOR_ROOM_TEMP:	
  1150  181C                     _ROOM_TEMP:	
  1151                           
  1152                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1153  181C  3466               	retlw	102
  1154  181D  3486               	retlw	134
  1155  181E  3496               	retlw	150
  1156  181F  3443               	retlw	67
  1157  1820                     __end_of_ROOM_TEMP:	
  1158  1820                     _MAX_ADC:	
  1159                           
  1160                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1161  1820  3400               	retlw	0
  1162  1821  34C0               	retlw	192
  1163  1822  347F               	retlw	127
  1164  1823  3444               	retlw	68
  1165  1824                     __end_of_MAX_ADC:	
  1166  1824                     log@coeff:	
  1167  1824  3400               	retlw	0
  1168  1825  3400               	retlw	0
  1169  1826  3400               	retlw	0
  1170  1827  3400               	retlw	0
  1171  1828  34C4               	retlw	196
  1172  1829  34FF               	retlw	255
  1173  182A  347F               	retlw	127
  1174  182B  343F               	retlw	63
  1175  182C  3480               	retlw	128
  1176  182D  34EF               	retlw	239
  1177  182E  34FF               	retlw	255
  1178  182F  34BE               	retlw	190
  1179  1830  3490               	retlw	144
  1180  1831  34E1               	retlw	225
  1181  1832  34A9               	retlw	169
  1182  1833  343E               	retlw	62
  1183  1834  34EC               	retlw	236
  1184  1835  3482               	retlw	130
  1185  1836  3476               	retlw	118
  1186  1837  34BE               	retlw	190
  1187  1838  3482               	retlw	130
  1188  1839  34AD               	retlw	173
  1189  183A  342B               	retlw	43
  1190  183B  343E               	retlw	62
  1191  183C  340E               	retlw	14
  1192  183D  343C               	retlw	60
  1193  183E  34C3               	retlw	195
  1194  183F  34BD               	retlw	189
  1195  1840  3487               	retlw	135
  1196  1841  34D1               	retlw	209
  1197  1842  3413               	retlw	19
  1198  1843  343D               	retlw	61
  1199  1844  3441               	retlw	65
  1200  1845  3478               	retlw	120
  1201  1846  34D3               	retlw	211
  1202  1847  34BB               	retlw	187
  1203  1848                     __end_oflog@coeff:	
  1204  1848                     _BETA:	
  1205                           
  1206                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1207  1848  3400               	retlw	0
  1208  1849  3460               	retlw	96
  1209  184A  3478               	retlw	120
  1210  184B  3445               	retlw	69
  1211  184C                     __end_of_BETA:	
  1212  184C                     _BALANCE_RESISTOR:	
  1213                           
  1214                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1215  184C  3400               	retlw	0
  1216  184D  3440               	retlw	64
  1217  184E  341C               	retlw	28
  1218  184F  3446               	retlw	70
  1219  1850                     __end_of_BALANCE_RESISTOR:	
  1220  0019                     _TXREG	set	25
  1221  0018                     _RCSTAbits	set	24
  1222  001A                     _RCREG	set	26
  1223  000E                     _TMR1L	set	14
  1224  000F                     _TMR1H	set	15
  1225  000C                     _PIR1bits	set	12
  1226  001E                     _ADRESH	set	30
  1227  001F                     _ADCON0bits	set	31
  1228  0005                     _PORTAbits	set	5
  1229  0007                     _PORTCbits	set	7
  1230  0010                     _T1CON	set	16
  1231  000B                     _INTCONbits	set	11
  1232  0006                     _PORTBbits	set	6
  1233  0009                     _PORTE	set	9
  1234  0007                     _PORTC	set	7
  1235  0005                     _PORTA	set	5
  1236  0013                     _SSPBUF	set	19
  1237  0014                     _SSPCON	set	20
  1238  0006                     _PORTB	set	6
  1239  00C4                     _CREN	set	196
  1240  0081                     _TMR1CS	set	129
  1241  0085                     _T1CKPS1	set	133
  1242  0084                     _T1CKPS0	set	132
  1243  008C                     _PIE1bits	set	140
  1244  0099                     _SPBRG	set	153
  1245  0098                     _TXSTAbits	set	152
  1246  009E                     _ADRESL	set	158
  1247  009F                     _ADCON1	set	159
  1248  009F                     _ADCON1bits	set	159
  1249  0095                     _WPUB	set	149
  1250  0081                     _OPTION_REGbits	set	129
  1251  0089                     _TRISE	set	137
  1252  0087                     _TRISC	set	135
  1253  0086                     _TRISB	set	134
  1254  0085                     _TRISA	set	133
  1255  008F                     _OSCCONbits	set	143
  1256  0094                     _SSPSTAT	set	148
  1257  0093                     _SSPADD	set	147
  1258  0091                     _SSPCON2	set	145
  1259  043F                     _TRISC7	set	1087
  1260  043E                     _TRISC6	set	1086
  1261  0460                     _TMR1IE	set	1120
  1262  048C                     _ACKEN	set	1164
  1263  048D                     _ACKDT	set	1165
  1264  048B                     _RCEN	set	1163
  1265  048A                     _PEN	set	1162
  1266  0489                     _RSEN	set	1161
  1267  0488                     _SEN	set	1160
  1268  043C                     _TRISC4	set	1084
  1269  043B                     _TRISC3	set	1083
  1270  010C                     _EEDATA	set	268
  1271  010D                     _EEADR	set	269
  1272  0187                     _BAUDCTLbits	set	391
  1273  018D                     _EECON2	set	397
  1274  018C                     _EECON1bits	set	396
  1275  0189                     _ANSELH	set	393
  1276  0188                     _ANSEL	set	392
  1277  1850                     STR_1:	
  1278  1850  3476               	retlw	118	;'v'
  1279  1851  3431               	retlw	49	;'1'
  1280  1852  342E               	retlw	46	;'.'
  1281  1853  3430               	retlw	48	;'0'
  1282  1854  342E               	retlw	46	;'.'
  1283  1855  3435               	retlw	53	;'5'
  1284  1856  3400               	retlw	0
  1285  1857                     STR_8:	
  1286  1857  344F               	retlw	79	;'O'
  1287  1858  344B               	retlw	75	;'K'
  1288  1859  3400               	retlw	0
  1289  185A                     STR_3:	
  1290  185A  3430               	retlw	48	;'0'
  1291  185B  3400               	retlw	0
  1292  185C                     STR_4:	
  1293  185C  343A               	retlw	58	;':'
  1294  185D  3400               	retlw	0
  1295  185B                     
  1296                           ; #config settings
  1297  0000                     
  1298                           	psect	cinit
  1299  0015                     start_initialization:	
  1300  0015                     __initialization:	
  1301                           
  1302                           ; Clear objects allocated to COMMON
  1303  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1304  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1305  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1306  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1307  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1308                           
  1309                           ; Clear objects allocated to BANK1
  1310  001A  1383               	bcf	3,7	;select IRP bank0
  1311  001B  30CD               	movlw	low __pbssBANK1
  1312  001C  0084               	movwf	4
  1313  001D  30EA               	movlw	low (__pbssBANK1+29)
  1314  001E  120A  118A  27F8  120A  118A  	fcall	clear_ram0
  1315                           
  1316                           ; Clear objects allocated to BANK3
  1317  0023  1783               	bsf	3,7	;select IRP bank2
  1318  0024  3090               	movlw	low __pbssBANK3
  1319  0025  0084               	movwf	4
  1320  0026  30DA               	movlw	low (__pbssBANK3+74)
  1321  0027  120A  118A  27F8  120A  118A  	fcall	clear_ram0
  1322                           
  1323                           ; Clear objects allocated to BANK2
  1324  002C  3010               	movlw	low __pbssBANK2
  1325  002D  0084               	movwf	4
  1326  002E  3050               	movlw	low (__pbssBANK2+64)
  1327  002F  120A  118A  27F8   	fcall	clear_ram0
  1328  0032                     end_of_initialization:	
  1329                           ;End of C runtime variable initialization code
  1330                           
  1331  0032                     __end_of__initialization:	
  1332  0032  0183               	clrf	3
  1333  0033  160A  118A  2C43   	ljmp	_main	;jump to C main() function
  1334                           
  1335                           	psect	bssCOMMON
  1336  0078                     __pbssCOMMON:	
  1337  0078                     _Delay_Led_Tmr0:	
  1338  0078                     	ds	2
  1339  007A                     _Delay_Led_Memory:	
  1340  007A                     	ds	2
  1341  007C                     _statuspower_memo:	
  1342  007C                     	ds	1
  1343                           
  1344                           	psect	bssBANK1
  1345  00CD                     __pbssBANK1:	
  1346  00CD                     _Tensao1:	
  1347  00CD                     	ds	4
  1348  00D1                     _Vaccum0:	
  1349  00D1                     	ds	4
  1350  00D5                     _errno:	
  1351  00D5                     	ds	2
  1352  00D7                     _tempodecorrido:	
  1353  00D7                     	ds	2
  1354  00D9                     _count:	
  1355  00D9                     	ds	2
  1356  00DB                     _header:	
  1357  00DB                     	ds	2
  1358  00DD                     _milisegundo:	
  1359  00DD                     	ds	2
  1360  00DF                     _Delay_Led_Usart:	
  1361  00DF                     	ds	2
  1362  00E1                     _pointer:	
  1363  00E1                     	ds	1
  1364  00E2                     _destino:	
  1365  00E2                     	ds	1
  1366  00E3                     _Board_Number:	
  1367  00E3                     	ds	1
  1368  00E4                     _canal:	
  1369  00E4                     	ds	1
  1370  00E5                     _minuto:	
  1371  00E5                     	ds	1
  1372  00E6                     _hora:	
  1373  00E6                     	ds	1
  1374  00E7                     _segundo:	
  1375  00E7                     	ds	1
  1376  00E8                     _statuspower:	
  1377  00E8                     	ds	1
  1378  00E9                     _generic_status:	
  1379  00E9                     	ds	1
  1380                           
  1381                           	psect	bssBANK3
  1382  0190                     __pbssBANK3:	
  1383  0190                     _usart_buffer:	
  1384  0190                     	ds	42
  1385  01BA                     _texto:	
  1386  01BA                     	ds	16
  1387  01CA                     _usart_protocol:	
  1388  01CA                     	ds	16
  1389                           
  1390                           	psect	bssBANK2
  1391  0110                     __pbssBANK2:	
  1392  0110                     _buffer:	
  1393  0110                     	ds	64
  1394                           
  1395                           	psect	clrtext
  1396  07F8                     clear_ram0:	
  1397                           ;	Called with FSR containing the base address, and
  1398                           ;	W with the last address+1
  1399                           
  1400  07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1401  07F9                     clrloop0:	
  1402  07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1403  07FA  0A84               	incf	4,f	;increment pointer
  1404  07FB  0604               	xorwf	4,w	;XOR with final address
  1405  07FC  1903               	btfsc	3,2	;have we reached the end yet?
  1406  07FD  3400               	retlw	0	;all done for this memory range, return
  1407  07FE  0604               	xorwf	4,w	;XOR again to restore value
  1408  07FF  2FF9               	goto	clrloop0	;do the next byte
  1409                           
  1410                           	psect	cstackBANK1
  1411  00A0                     __pcstackBANK1:	
  1412  00A0                     MediaPlacaVaccum@Valor:	
  1413  00A0                     Decodify_Command@hh:	
  1414                           ; 4 bytes @ 0x0
  1415                           
  1416                           
  1417                           ; 10 bytes @ 0x0
  1418  00A0                     	ds	4
  1419  00A4                     MediaPlacaVaccum@canal:	
  1420                           
  1421                           ; 1 bytes @ 0x4
  1422  00A4                     	ds	1
  1423  00A5                     MediaPlacaVaccum@Temp:	
  1424                           
  1425                           ; 4 bytes @ 0x5
  1426  00A5                     	ds	4
  1427  00A9                     MediaPlacaVaccum@i:	
  1428                           
  1429                           ; 2 bytes @ 0x9
  1430  00A9                     	ds	1
  1431  00AA                     Decodify_Command@mm:	
  1432                           
  1433                           ; 10 bytes @ 0xA
  1434  00AA                     	ds	10
  1435  00B4                     Decodify_Command@ss:	
  1436                           
  1437                           ; 10 bytes @ 0x14
  1438  00B4                     	ds	10
  1439  00BE                     Decodify_Command@dados:	
  1440                           
  1441                           ; 2 bytes @ 0x1E
  1442  00BE                     	ds	2
  1443  00C0                     Decodify_Command@add:	
  1444                           
  1445                           ; 1 bytes @ 0x20
  1446  00C0                     	ds	1
  1447  00C1                     Decodify_Command@tempint:	
  1448                           
  1449                           ; 2 bytes @ 0x21
  1450  00C1                     	ds	2
  1451  00C3                     Decodify_Command@OutPut:	
  1452                           
  1453                           ; 4 bytes @ 0x23
  1454  00C3                     	ds	4
  1455  00C7                     Decodify_Command@tempchar:	
  1456                           
  1457                           ; 1 bytes @ 0x27
  1458  00C7                     	ds	1
  1459  00C8                     Decodify_Command@sizedata:	
  1460                           
  1461                           ; 1 bytes @ 0x28
  1462  00C8                     	ds	1
  1463  00C9                     Decodify_Command@add_24LCxxxx:	
  1464                           
  1465                           ; 4 bytes @ 0x29
  1466  00C9                     	ds	4
  1467                           
  1468                           	psect	cstackCOMMON
  1469  0070                     __pcstackCOMMON:	
  1470  0070                     ?_ADC_init:	
  1471  0070                     ?_MediaPlacaVaccum:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0070                     ?_Decodify_Command:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0070                     ?_USART_to_Protocol:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  0070                     ?_Send_To_MB:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483  0070                     ?_Send_Reply_OK:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0070                     ?_EEPROM_Read_Byte:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0070                     ?_USART_putc:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0070                     ?_Package_Usart_is_for_me:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495  0070                     ?_I2C_Master_Wait:	
  1496                           ; 1 bytes @ 0x0
  1497                           
  1498  0070                     ?_I2C_Master_Start:	
  1499                           ; 1 bytes @ 0x0
  1500                           
  1501  0070                     ?_I2C_Master_RepeatedStart:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504  0070                     ?_I2C_Master_Stop:	
  1505                           ; 1 bytes @ 0x0
  1506                           
  1507  0070                     ?_main:	
  1508                           ; 1 bytes @ 0x0
  1509                           
  1510  0070                     ?_isr:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513  0070                     ??_isr:	
  1514                           ; 1 bytes @ 0x0
  1515                           
  1516                           
  1517                           ; 1 bytes @ 0x0
  1518  0070                     	ds	6
  1519  0076                     isr@tempo:	
  1520                           
  1521                           ; 2 bytes @ 0x6
  1522  0076                     	ds	2
  1523                           
  1524                           	psect	cstackBANK0
  1525  0020                     __pcstackBANK0:	
  1526  0020                     ?___flge:	
  1527  0020                     ?_my_delay_ms_WDT:	
  1528                           ; 1 bit 
  1529                           
  1530  0020                     ??_ADC_init:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0020                     ?_USART_init:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0020                     ??_USART_to_Protocol:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0020                     ?_EEPROM_Write_Byte:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0020                     ??_EEPROM_Read_Byte:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0020                     ??_USART_putc:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0020                     ?_strcpy:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0020                     ?_strcat:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0020                     ?_my_delay_ms:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0020                     ??_Package_Usart_is_for_me:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0020                     ?_PROCULUS_Delay:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0020                     ??_I2C_Master_Wait:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0020                     ??_I2C_Master_Start:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0020                     ??_I2C_Master_RepeatedStart:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0020                     ??_I2C_Master_Stop:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0020                     ?_I2C_Master_Write:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0020                     ?_strlen:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0020                     ?_captura:	
  1582                           ; 2 bytes @ 0x0
  1583                           
  1584  0020                     ?__Umul8_16:	
  1585                           ; 2 bytes @ 0x0
  1586                           
  1587  0020                     ?_I2C_Master_Read:	
  1588                           ; 2 bytes @ 0x0
  1589                           
  1590  0020                     ?___lwdiv:	
  1591                           ; 2 bytes @ 0x0
  1592                           
  1593  0020                     ?___lwmod:	
  1594                           ; 2 bytes @ 0x0
  1595                           
  1596  0020                     ?___lldiv:	
  1597                           ; 2 bytes @ 0x0
  1598                           
  1599  0020                     EEPROM_Write_Byte@dado:	
  1600                           ; 4 bytes @ 0x0
  1601                           
  1602  0020                     Package_Usart_is_for_me@retorno:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0020                     USART_putc@value:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0020                     strcpy@from:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0020                     __Umul8_16@multiplicand:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0020                     I2C_Master_Write@d:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617  0020                     I2C_Master_Read@a:	
  1618                           ; 2 bytes @ 0x0
  1619                           
  1620  0020                     PROCULUS_Delay@tempo_ms:	
  1621                           ; 2 bytes @ 0x0
  1622                           
  1623  0020                     ___lwdiv@divisor:	
  1624                           ; 2 bytes @ 0x0
  1625                           
  1626  0020                     ___lwmod@divisor:	
  1627                           ; 2 bytes @ 0x0
  1628                           
  1629  0020                     strcat@from:	
  1630                           ; 2 bytes @ 0x0
  1631                           
  1632  0020                     my_delay_ms@time:	
  1633                           ; 2 bytes @ 0x0
  1634                           
  1635  0020                     my_delay_ms_WDT@time:	
  1636                           ; 4 bytes @ 0x0
  1637                           
  1638  0020                     USART_init@baudrate:	
  1639                           ; 4 bytes @ 0x0
  1640                           
  1641  0020                     ___lldiv@divisor:	
  1642                           ; 4 bytes @ 0x0
  1643                           
  1644  0020                     ___flge@ff1:	
  1645                           ; 4 bytes @ 0x0
  1646                           
  1647                           
  1648                           ; 4 bytes @ 0x0
  1649  0020                     	ds	1
  1650  0021                     ??_Send_To_MB:	
  1651  0021                     ?_USART_put_string:	
  1652                           ; 1 bytes @ 0x1
  1653                           
  1654  0021                     ??_EEPROM_Write_Byte:	
  1655                           ; 1 bytes @ 0x1
  1656                           
  1657  0021                     ?_USART_put_buffer:	
  1658                           ; 1 bytes @ 0x1
  1659                           
  1660  0021                     ??_strcpy:	
  1661                           ; 1 bytes @ 0x1
  1662                           
  1663  0021                     Send_To_MB@size:	
  1664                           ; 1 bytes @ 0x1
  1665                           
  1666  0021                     USART_put_buffer@size:	
  1667                           ; 1 bytes @ 0x1
  1668                           
  1669  0021                     USART_put_string@vetor:	
  1670                           ; 2 bytes @ 0x1
  1671                           
  1672                           
  1673                           ; 2 bytes @ 0x1
  1674  0021                     	ds	1
  1675  0022                     ?_EEPROM_24C1025_Write_Buffer:	
  1676  0022                     ?_EEPROM_24C1025_Write_Str:	
  1677                           ; 1 bytes @ 0x2
  1678                           
  1679  0022                     ??_strlen:	
  1680                           ; 1 bytes @ 0x2
  1681                           
  1682  0022                     ??_strcat:	
  1683                           ; 1 bytes @ 0x2
  1684                           
  1685  0022                     ??_captura:	
  1686                           ; 1 bytes @ 0x2
  1687                           
  1688  0022                     ??_PROCULUS_Delay:	
  1689                           ; 1 bytes @ 0x2
  1690                           
  1691  0022                     ??__Umul8_16:	
  1692                           ; 1 bytes @ 0x2
  1693                           
  1694  0022                     ??_I2C_Master_Write:	
  1695                           ; 1 bytes @ 0x2
  1696                           
  1697  0022                     ??_I2C_Master_Read:	
  1698                           ; 1 bytes @ 0x2
  1699                           
  1700  0022                     EEPROM_Read_Byte@addr:	
  1701                           ; 1 bytes @ 0x2
  1702                           
  1703  0022                     strcpy@to:	
  1704                           ; 1 bytes @ 0x2
  1705                           
  1706  0022                     USART_to_Protocol@i:	
  1707                           ; 1 bytes @ 0x2
  1708                           
  1709  0022                     ___lwdiv@dividend:	
  1710                           ; 2 bytes @ 0x2
  1711                           
  1712  0022                     ___lwmod@dividend:	
  1713                           ; 2 bytes @ 0x2
  1714                           
  1715  0022                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1716                           ; 2 bytes @ 0x2
  1717                           
  1718  0022                     EEPROM_24C1025_Write_Str@mem_add:	
  1719                           ; 4 bytes @ 0x2
  1720                           
  1721                           
  1722                           ; 4 bytes @ 0x2
  1723  0022                     	ds	1
  1724  0023                     ??_USART_put_string:	
  1725  0023                     ?_EEPROM_Read_String:	
  1726                           ; 1 bytes @ 0x3
  1727                           
  1728  0023                     ??_USART_put_buffer:	
  1729                           ; 1 bytes @ 0x3
  1730                           
  1731  0023                     ?_EEPROM_Read_Integer:	
  1732                           ; 1 bytes @ 0x3
  1733                           
  1734  0023                     EEPROM_Write_Byte@addr:	
  1735                           ; 2 bytes @ 0x3
  1736                           
  1737  0023                     EEPROM_Read_String@dado:	
  1738                           ; 1 bytes @ 0x3
  1739                           
  1740  0023                     strcat@cp:	
  1741                           ; 1 bytes @ 0x3
  1742                           
  1743  0023                     strcpy@cp:	
  1744                           ; 1 bytes @ 0x3
  1745                           
  1746  0023                     strlen@cp:	
  1747                           ; 1 bytes @ 0x3
  1748                           
  1749  0023                     USART_put_string@ptr:	
  1750                           ; 1 bytes @ 0x3
  1751                           
  1752                           
  1753                           ; 2 bytes @ 0x3
  1754  0023                     	ds	1
  1755  0024                     ??_my_delay_ms_WDT:	
  1756  0024                     ??_USART_init:	
  1757                           ; 1 bytes @ 0x4
  1758                           
  1759  0024                     ??_EEPROM_Read_String:	
  1760                           ; 1 bytes @ 0x4
  1761                           
  1762  0024                     ??_my_delay_ms:	
  1763                           ; 1 bytes @ 0x4
  1764                           
  1765  0024                     ??___lwdiv:	
  1766                           ; 1 bytes @ 0x4
  1767                           
  1768  0024                     ??___lwmod:	
  1769                           ; 1 bytes @ 0x4
  1770                           
  1771  0024                     EEPROM_Write_Byte@last_GIE:	
  1772                           ; 1 bytes @ 0x4
  1773                           
  1774  0024                     USART_to_Protocol@usart_protocol:	
  1775                           ; 1 bytes @ 0x4
  1776                           
  1777  0024                     strcat@to:	
  1778                           ; 1 bytes @ 0x4
  1779                           
  1780  0024                     strlen@s:	
  1781                           ; 1 bytes @ 0x4
  1782                           
  1783  0024                     I2C_Master_Read@temp:	
  1784                           ; 1 bytes @ 0x4
  1785                           
  1786  0024                     PROCULUS_Delay@i:	
  1787                           ; 2 bytes @ 0x4
  1788                           
  1789  0024                     __Umul8_16@product:	
  1790                           ; 2 bytes @ 0x4
  1791                           
  1792  0024                     ___lldiv@dividend:	
  1793                           ; 2 bytes @ 0x4
  1794                           
  1795  0024                     ___flge@ff2:	
  1796                           ; 4 bytes @ 0x4
  1797                           
  1798                           
  1799                           ; 4 bytes @ 0x4
  1800  0024                     	ds	1
  1801  0025                     ??_EEPROM_Read_Integer:	
  1802  0025                     ?_EEPROM_Write_Integer:	
  1803                           ; 1 bytes @ 0x5
  1804                           
  1805  0025                     ??_Send_Reply_OK:	
  1806                           ; 1 bytes @ 0x5
  1807                           
  1808  0025                     ?_EEPROM_Write_String:	
  1809                           ; 1 bytes @ 0x5
  1810                           
  1811  0025                     EEPROM_Write_String@dado:	
  1812                           ; 1 bytes @ 0x5
  1813                           
  1814  0025                     EEPROM_Read_String@addr:	
  1815                           ; 1 bytes @ 0x5
  1816                           
  1817  0025                     USART_put_buffer@vetor:	
  1818                           ; 1 bytes @ 0x5
  1819                           
  1820  0025                     ___lwdiv@counter:	
  1821                           ; 1 bytes @ 0x5
  1822                           
  1823  0025                     ___lwmod@counter:	
  1824                           ; 1 bytes @ 0x5
  1825                           
  1826  0025                     EEPROM_Write_Integer@dado:	
  1827                           ; 1 bytes @ 0x5
  1828                           
  1829                           
  1830                           ; 2 bytes @ 0x5
  1831  0025                     	ds	1
  1832  0026                     ??_EEPROM_Write_String:	
  1833  0026                     ?_EEPROM_24C1025_Read_Buffer:	
  1834                           ; 1 bytes @ 0x6
  1835                           
  1836  0026                     ?_EEPROM_24C1025_Read_Str:	
  1837                           ; 1 bytes @ 0x6
  1838                           
  1839  0026                     EEPROM_Read_Integer@addr:	
  1840                           ; 1 bytes @ 0x6
  1841                           
  1842  0026                     EEPROM_Read_String@c:	
  1843                           ; 1 bytes @ 0x6
  1844                           
  1845  0026                     USART_init@i:	
  1846                           ; 1 bytes @ 0x6
  1847                           
  1848  0026                     USART_put_buffer@loop:	
  1849                           ; 1 bytes @ 0x6
  1850                           
  1851  0026                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1852                           ; 1 bytes @ 0x6
  1853                           
  1854  0026                     EEPROM_24C1025_Write_Str@data:	
  1855                           ; 1 bytes @ 0x6
  1856                           
  1857  0026                     ___lwdiv@quotient:	
  1858                           ; 1 bytes @ 0x6
  1859                           
  1860  0026                     __Umul8_16@word_mpld:	
  1861                           ; 2 bytes @ 0x6
  1862                           
  1863  0026                     my_delay_ms@i:	
  1864                           ; 2 bytes @ 0x6
  1865                           
  1866  0026                     my_delay_ms_WDT@i:	
  1867                           ; 4 bytes @ 0x6
  1868                           
  1869  0026                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1870                           ; 4 bytes @ 0x6
  1871                           
  1872  0026                     EEPROM_24C1025_Read_Str@mem_add:	
  1873                           ; 4 bytes @ 0x6
  1874                           
  1875                           
  1876                           ; 4 bytes @ 0x6
  1877  0026                     	ds	1
  1878  0027                     ??_EEPROM_Write_Integer:	
  1879  0027                     ??_EEPROM_24C1025_Write_Str:	
  1880                           ; 1 bytes @ 0x7
  1881                           
  1882  0027                     EEPROM_Read_Integer@ptr:	
  1883                           ; 1 bytes @ 0x7
  1884                           
  1885  0027                     EEPROM_Write_String@addr:	
  1886                           ; 1 bytes @ 0x7
  1887                           
  1888  0027                     USART_put_buffer@ptr:	
  1889                           ; 1 bytes @ 0x7
  1890                           
  1891  0027                     EEPROM_24C1025_Write_Buffer@data:	
  1892                           ; 1 bytes @ 0x7
  1893                           
  1894                           
  1895                           ; 2 bytes @ 0x7
  1896  0027                     	ds	1
  1897  0028                     ?_utoa:	
  1898  0028                     ??___lldiv:	
  1899                           ; 1 bytes @ 0x8
  1900                           
  1901  0028                     ??___flge:	
  1902                           ; 1 bytes @ 0x8
  1903                           
  1904  0028                     __Umul8_16@multiplier:	
  1905                           ; 1 bytes @ 0x8
  1906                           
  1907  0028                     EEPROM_Read_Integer@result:	
  1908                           ; 1 bytes @ 0x8
  1909                           
  1910  0028                     utoa@val:	
  1911                           ; 2 bytes @ 0x8
  1912                           
  1913                           
  1914                           ; 2 bytes @ 0x8
  1915  0028                     	ds	1
  1916  0029                     ??_EEPROM_24C1025_Write_Buffer:	
  1917  0029                     ?___flmul:	
  1918                           ; 1 bytes @ 0x9
  1919                           
  1920  0029                     EEPROM_24C1025_Write_Str@chip_add:	
  1921                           ; 4 bytes @ 0x9
  1922                           
  1923  0029                     ___lldiv@quotient:	
  1924                           ; 1 bytes @ 0x9
  1925                           
  1926  0029                     ___flmul@b:	
  1927                           ; 4 bytes @ 0x9
  1928                           
  1929                           
  1930                           ; 4 bytes @ 0x9
  1931  0029                     	ds	1
  1932  002A                     ?_ADC_Max_10Bits:	
  1933  002A                     EEPROM_Write_Integer@ptr:	
  1934                           ; 2 bytes @ 0xA
  1935                           
  1936  002A                     EEPROM_Read_Integer@i:	
  1937                           ; 1 bytes @ 0xA
  1938                           
  1939  002A                     EEPROM_24C1025_Read_Buffer@sizedata:	
  1940                           ; 1 bytes @ 0xA
  1941                           
  1942  002A                     EEPROM_24C1025_Write_Str@range:	
  1943                           ; 1 bytes @ 0xA
  1944                           
  1945  002A                     EEPROM_24C1025_Read_Str@texto:	
  1946                           ; 1 bytes @ 0xA
  1947                           
  1948  002A                     utoa@base:	
  1949                           ; 1 bytes @ 0xA
  1950                           
  1951                           
  1952                           ; 2 bytes @ 0xA
  1953  002A                     	ds	1
  1954  002B                     ??_EEPROM_24C1025_Read_Str:	
  1955  002B                     EEPROM_Write_Integer@addr:	
  1956                           ; 1 bytes @ 0xB
  1957                           
  1958  002B                     EEPROM_24C1025_Write_Buffer@count:	
  1959                           ; 1 bytes @ 0xB
  1960                           
  1961  002B                     EEPROM_24C1025_Write_Str@ctrl:	
  1962                           ; 1 bytes @ 0xB
  1963                           
  1964  002B                     EEPROM_24C1025_Read_Buffer@data:	
  1965                           ; 1 bytes @ 0xB
  1966                           
  1967                           
  1968                           ; 2 bytes @ 0xB
  1969  002B                     	ds	1
  1970  002C                     ??_ADC_Max_10Bits:	
  1971  002C                     ??_utoa:	
  1972                           ; 1 bytes @ 0xC
  1973                           
  1974  002C                     EEPROM_Write_Integer@i:	
  1975                           ; 1 bytes @ 0xC
  1976                           
  1977  002C                     EEPROM_24C1025_Write_Buffer@chip_add:	
  1978                           ; 1 bytes @ 0xC
  1979                           
  1980                           
  1981                           ; 1 bytes @ 0xC
  1982  002C                     	ds	1
  1983  002D                     ??_EEPROM_24C1025_Read_Buffer:	
  1984  002D                     ADC_Max_10Bits@canal:	
  1985                           ; 1 bytes @ 0xD
  1986                           
  1987  002D                     EEPROM_24C1025_Write_Buffer@range:	
  1988                           ; 1 bytes @ 0xD
  1989                           
  1990  002D                     EEPROM_24C1025_Read_Str@cnt:	
  1991                           ; 1 bytes @ 0xD
  1992                           
  1993  002D                     ___lldiv@counter:	
  1994                           ; 1 bytes @ 0xD
  1995                           
  1996  002D                     utoa@v:	
  1997                           ; 1 bytes @ 0xD
  1998                           
  1999  002D                     ___flmul@a:	
  2000                           ; 2 bytes @ 0xD
  2001                           
  2002                           
  2003                           ; 4 bytes @ 0xD
  2004  002D                     	ds	1
  2005  002E                     ?_I2C_Master_Init:	
  2006  002E                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2007                           ; 1 bytes @ 0xE
  2008                           
  2009  002E                     EEPROM_24C1025_Read_Str@chip_add:	
  2010                           ; 1 bytes @ 0xE
  2011                           
  2012  002E                     ADC_Max_10Bits@Temp:	
  2013                           ; 1 bytes @ 0xE
  2014                           
  2015  002E                     I2C_Master_Init@c:	
  2016                           ; 2 bytes @ 0xE
  2017                           
  2018                           
  2019                           ; 4 bytes @ 0xE
  2020  002E                     	ds	1
  2021  002F                     ?_EEPROM_24C1025_Write_Byte:	
  2022  002F                     EEPROM_24C1025_Read_Str@range:	
  2023                           ; 1 bytes @ 0xF
  2024                           
  2025  002F                     utoa@c:	
  2026                           ; 1 bytes @ 0xF
  2027                           
  2028  002F                     EEPROM_24C1025_Write_Byte@mem_add:	
  2029                           ; 1 bytes @ 0xF
  2030                           
  2031                           
  2032                           ; 4 bytes @ 0xF
  2033  002F                     	ds	1
  2034  0030                     EEPROM_24C1025_Read_Buffer@cnt_1527:	
  2035  0030                     EEPROM_24C1025_Read_Str@ctrl:	
  2036                           ; 1 bytes @ 0x10
  2037                           
  2038  0030                     utoa@buf:	
  2039                           ; 1 bytes @ 0x10
  2040                           
  2041  0030                     ADC_Max_10Bits@value:	
  2042                           ; 1 bytes @ 0x10
  2043                           
  2044                           
  2045                           ; 2 bytes @ 0x10
  2046  0030                     	ds	1
  2047  0031                     ?_itoa:	
  2048  0031                     ??___flmul:	
  2049                           ; 1 bytes @ 0x11
  2050                           
  2051  0031                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2052                           ; 1 bytes @ 0x11
  2053                           
  2054  0031                     itoa@val:	
  2055                           ; 1 bytes @ 0x11
  2056                           
  2057                           
  2058                           ; 2 bytes @ 0x11
  2059  0031                     	ds	1
  2060  0032                     ??_I2C_Master_Init:	
  2061  0032                     ADC_Max_10Bits@i:	
  2062                           ; 1 bytes @ 0x12
  2063                           
  2064  0032                     EEPROM_24C1025_Read_Buffer@range:	
  2065                           ; 1 bytes @ 0x12
  2066                           
  2067                           
  2068                           ; 1 bytes @ 0x12
  2069  0032                     	ds	1
  2070  0033                     ?___xxtofl:	
  2071  0033                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2072                           ; 4 bytes @ 0x13
  2073                           
  2074  0033                     EEPROM_24C1025_Write_Byte@data:	
  2075                           ; 1 bytes @ 0x13
  2076                           
  2077  0033                     itoa@base:	
  2078                           ; 1 bytes @ 0x13
  2079                           
  2080  0033                     ___xxtofl@val:	
  2081                           ; 2 bytes @ 0x13
  2082                           
  2083                           
  2084                           ; 4 bytes @ 0x13
  2085  0033                     	ds	1
  2086  0034                     ??_EEPROM_24C1025_Write_Byte:	
  2087  0034                     ?_EEPROM_24C1025_Read_Byte:	
  2088                           ; 1 bytes @ 0x14
  2089                           
  2090  0034                     ?_EEPROM_24C1025_Read_Int:	
  2091                           ; 1 bytes @ 0x14
  2092                           
  2093  0034                     EEPROM_24C1025_Write_Byte@chip_add:	
  2094                           ; 2 bytes @ 0x14
  2095                           
  2096  0034                     EEPROM_24C1025_Read_Byte@mem_add:	
  2097                           ; 1 bytes @ 0x14
  2098                           
  2099  0034                     EEPROM_24C1025_Read_Int@mem_add:	
  2100                           ; 4 bytes @ 0x14
  2101                           
  2102                           
  2103                           ; 4 bytes @ 0x14
  2104  0034                     	ds	1
  2105  0035                     ??_itoa:	
  2106                           
  2107                           ; 1 bytes @ 0x15
  2108  0035                     	ds	1
  2109  0036                     ___flmul@sign:	
  2110                           
  2111                           ; 1 bytes @ 0x16
  2112  0036                     	ds	1
  2113  0037                     ??___xxtofl:	
  2114  0037                     ___flmul@aexp:	
  2115                           ; 1 bytes @ 0x17
  2116                           
  2117  0037                     itoa@buf:	
  2118                           ; 1 bytes @ 0x17
  2119                           
  2120                           
  2121                           ; 1 bytes @ 0x17
  2122  0037                     	ds	1
  2123  0038                     ??_EEPROM_24C1025_Read_Byte:	
  2124  0038                     ??_EEPROM_24C1025_Read_Int:	
  2125                           ; 1 bytes @ 0x18
  2126                           
  2127  0038                     EEPROM_24C1025_Read_Byte@chip_add:	
  2128                           ; 1 bytes @ 0x18
  2129                           
  2130  0038                     ___flmul@bexp:	
  2131                           ; 1 bytes @ 0x18
  2132                           
  2133                           
  2134                           ; 1 bytes @ 0x18
  2135  0038                     	ds	1
  2136  0039                     EEPROM_24C1025_Read_Byte@data:	
  2137  0039                     ___flmul@grs:	
  2138                           ; 1 bytes @ 0x19
  2139                           
  2140                           
  2141                           ; 4 bytes @ 0x19
  2142  0039                     	ds	1
  2143  003A                     EEPROM_24C1025_Read_Int@chip_add:	
  2144                           
  2145                           ; 1 bytes @ 0x1A
  2146  003A                     	ds	1
  2147  003B                     ___xxtofl@sign:	
  2148  003B                     EEPROM_24C1025_Read_Int@data:	
  2149                           ; 1 bytes @ 0x1B
  2150                           
  2151                           
  2152                           ; 2 bytes @ 0x1B
  2153  003B                     	ds	1
  2154  003C                     ___xxtofl@exp:	
  2155                           
  2156                           ; 1 bytes @ 0x1C
  2157  003C                     	ds	1
  2158  003D                     ___flmul@prod:	
  2159  003D                     ___xxtofl@arg:	
  2160                           ; 4 bytes @ 0x1D
  2161                           
  2162                           
  2163                           ; 4 bytes @ 0x1D
  2164  003D                     	ds	4
  2165  0041                     ?_ADC_Media_10bits:	
  2166  0041                     ?___fldiv:	
  2167                           ; 4 bytes @ 0x21
  2168                           
  2169  0041                     ___flmul@temp:	
  2170                           ; 4 bytes @ 0x21
  2171                           
  2172  0041                     ___fldiv@a:	
  2173                           ; 2 bytes @ 0x21
  2174                           
  2175                           
  2176                           ; 4 bytes @ 0x21
  2177  0041                     	ds	2
  2178  0043                     ?___fltol:	
  2179  0043                     ___fltol@f1:	
  2180                           ; 4 bytes @ 0x23
  2181                           
  2182                           
  2183                           ; 4 bytes @ 0x23
  2184  0043                     	ds	2
  2185  0045                     ??_ADC_Media_10bits:	
  2186  0045                     ___fldiv@b:	
  2187                           ; 1 bytes @ 0x25
  2188                           
  2189                           
  2190                           ; 4 bytes @ 0x25
  2191  0045                     	ds	1
  2192  0046                     ADC_Media_10bits@canal:	
  2193                           
  2194                           ; 1 bytes @ 0x26
  2195  0046                     	ds	1
  2196  0047                     ??___fltol:	
  2197  0047                     ADC_Media_10bits@value:	
  2198                           ; 1 bytes @ 0x27
  2199                           
  2200                           
  2201                           ; 2 bytes @ 0x27
  2202  0047                     	ds	2
  2203  0049                     ??___fldiv:	
  2204  0049                     ADC_Media_10bits@i:	
  2205                           ; 1 bytes @ 0x29
  2206                           
  2207                           
  2208                           ; 1 bytes @ 0x29
  2209  0049                     	ds	1
  2210  004A                     ?___fladd:	
  2211  004A                     ___fladd@b:	
  2212                           ; 4 bytes @ 0x2A
  2213                           
  2214                           
  2215                           ; 4 bytes @ 0x2A
  2216  004A                     	ds	2
  2217  004C                     ___fltol@sign1:	
  2218                           
  2219                           ; 1 bytes @ 0x2C
  2220  004C                     	ds	1
  2221  004D                     ___fltol@exp1:	
  2222                           
  2223                           ; 1 bytes @ 0x2D
  2224  004D                     	ds	1
  2225  004E                     ?_USART_put_int:	
  2226  004E                     ?_EEPROM_24C1025_Write_Int:	
  2227                           ; 1 bytes @ 0x2E
  2228                           
  2229  004E                     USART_put_int@value:	
  2230                           ; 1 bytes @ 0x2E
  2231                           
  2232  004E                     EEPROM_24C1025_Write_Int@mem_add:	
  2233                           ; 2 bytes @ 0x2E
  2234                           
  2235  004E                     ___fladd@a:	
  2236                           ; 4 bytes @ 0x2E
  2237                           
  2238  004E                     ___fldiv@rem:	
  2239                           ; 4 bytes @ 0x2E
  2240                           
  2241                           
  2242                           ; 4 bytes @ 0x2E
  2243  004E                     	ds	2
  2244  0050                     ??_USART_put_int:	
  2245                           
  2246                           ; 1 bytes @ 0x30
  2247  0050                     	ds	1
  2248  0051                     USART_put_int@dado:	
  2249                           
  2250                           ; 1 bytes @ 0x31
  2251  0051                     	ds	1
  2252  0052                     ?_PROCULUS_Control_Register_Write:	
  2253  0052                     ?_PROCULUS_VP_Write:	
  2254                           ; 1 bytes @ 0x32
  2255                           
  2256  0052                     ??___fladd:	
  2257                           ; 1 bytes @ 0x32
  2258                           
  2259  0052                     PROCULUS_Control_Register_Write@size:	
  2260                           ; 1 bytes @ 0x32
  2261                           
  2262  0052                     ___fldiv@sign:	
  2263                           ; 1 bytes @ 0x32
  2264                           
  2265  0052                     PROCULUS_VP_Write@vp:	
  2266                           ; 1 bytes @ 0x32
  2267                           
  2268  0052                     EEPROM_24C1025_Write_Int@data:	
  2269                           ; 2 bytes @ 0x32
  2270                           
  2271                           
  2272                           ; 2 bytes @ 0x32
  2273  0052                     	ds	1
  2274  0053                     ??_PROCULUS_Control_Register_Write:	
  2275  0053                     ___fldiv@new_exp:	
  2276                           ; 1 bytes @ 0x33
  2277                           
  2278                           
  2279                           ; 2 bytes @ 0x33
  2280  0053                     	ds	1
  2281  0054                     ??_EEPROM_24C1025_Write_Int:	
  2282  0054                     PROCULUS_Control_Register_Write@vetor:	
  2283                           ; 1 bytes @ 0x34
  2284                           
  2285  0054                     PROCULUS_VP_Write@vetor:	
  2286                           ; 1 bytes @ 0x34
  2287                           
  2288                           
  2289                           ; 2 bytes @ 0x34
  2290  0054                     	ds	1
  2291  0055                     PROCULUS_Control_Register_Write@i:	
  2292  0055                     EEPROM_24C1025_Write_Int@chip_add:	
  2293                           ; 1 bytes @ 0x35
  2294                           
  2295  0055                     ___fldiv@grs:	
  2296                           ; 1 bytes @ 0x35
  2297                           
  2298                           
  2299                           ; 4 bytes @ 0x35
  2300  0055                     	ds	1
  2301  0056                     ?_PROCULUS_Show_Screen:	
  2302  0056                     ?_PROCULUS_Buzzer:	
  2303                           ; 1 bytes @ 0x36
  2304                           
  2305  0056                     PROCULUS_VP_Write@size:	
  2306                           ; 1 bytes @ 0x36
  2307                           
  2308  0056                     PROCULUS_Buzzer@time_ms_x_10:	
  2309                           ; 1 bytes @ 0x36
  2310                           
  2311  0056                     PROCULUS_Show_Screen@screen:	
  2312                           ; 2 bytes @ 0x36
  2313                           
  2314  0056                     EEPROM_24C1025_Write_Int@local:	
  2315                           ; 2 bytes @ 0x36
  2316                           
  2317                           
  2318                           ; 2 bytes @ 0x36
  2319  0056                     	ds	1
  2320  0057                     ??_PROCULUS_VP_Write:	
  2321                           
  2322                           ; 1 bytes @ 0x37
  2323  0057                     	ds	1
  2324  0058                     ?_Save_Log:	
  2325  0058                     ?_EEPROM_24C1025_Fill_All:	
  2326                           ; 1 bytes @ 0x38
  2327                           
  2328  0058                     ??_PROCULUS_Show_Screen:	
  2329                           ; 1 bytes @ 0x38
  2330                           
  2331  0058                     ??_PROCULUS_Buzzer:	
  2332                           ; 1 bytes @ 0x38
  2333                           
  2334  0058                     EEPROM_24C1025_Fill_All@value:	
  2335                           ; 1 bytes @ 0x38
  2336                           
  2337  0058                     Save_Log@add_datalog:	
  2338                           ; 2 bytes @ 0x38
  2339                           
  2340                           
  2341                           ; 4 bytes @ 0x38
  2342  0058                     	ds	1
  2343  0059                     PROCULUS_VP_Write@i:	
  2344  0059                     ___fldiv@bexp:	
  2345                           ; 1 bytes @ 0x39
  2346                           
  2347  0059                     PROCULUS_Buzzer@vetor:	
  2348                           ; 1 bytes @ 0x39
  2349                           
  2350  0059                     PROCULUS_Show_Screen@vetor:	
  2351                           ; 2 bytes @ 0x39
  2352                           
  2353                           
  2354                           ; 3 bytes @ 0x39
  2355  0059                     	ds	1
  2356  005A                     ??_EEPROM_24C1025_Fill_All:	
  2357  005A                     ?_PROCULUS_VP_Write_String:	
  2358                           ; 1 bytes @ 0x3A
  2359                           
  2360  005A                     EEPROM_24C1025_Fill_All@chip_add:	
  2361                           ; 1 bytes @ 0x3A
  2362                           
  2363  005A                     ___fladd@signs:	
  2364                           ; 1 bytes @ 0x3A
  2365                           
  2366  005A                     ___fldiv@aexp:	
  2367                           ; 1 bytes @ 0x3A
  2368                           
  2369  005A                     PROCULUS_VP_Write_String@vp:	
  2370                           ; 1 bytes @ 0x3A
  2371                           
  2372                           
  2373                           ; 2 bytes @ 0x3A
  2374  005A                     	ds	1
  2375  005B                     ___fladd@aexp:	
  2376  005B                     EEPROM_24C1025_Fill_All@mem_add:	
  2377                           ; 1 bytes @ 0x3B
  2378                           
  2379                           
  2380                           ; 4 bytes @ 0x3B
  2381  005B                     	ds	1
  2382  005C                     ??_Save_Log:	
  2383  005C                     PROCULUS_VP_Write_String@text:	
  2384                           ; 1 bytes @ 0x3C
  2385                           
  2386  005C                     ___fladd@bexp:	
  2387                           ; 1 bytes @ 0x3C
  2388                           
  2389                           
  2390                           ; 1 bytes @ 0x3C
  2391  005C                     	ds	1
  2392  005D                     ??_PROCULUS_VP_Write_String:	
  2393  005D                     ___fladd@grs:	
  2394                           ; 1 bytes @ 0x3D
  2395                           
  2396                           
  2397                           ; 1 bytes @ 0x3D
  2398  005D                     	ds	1
  2399  005E                     ?___flsub:	
  2400  005E                     ___flsub@a:	
  2401                           ; 4 bytes @ 0x3E
  2402                           
  2403                           
  2404                           ; 4 bytes @ 0x3E
  2405  005E                     	ds	2
  2406  0060                     ??_Decodify_Command:	
  2407                           
  2408                           ; 1 bytes @ 0x40
  2409  0060                     	ds	2
  2410  0062                     ___flsub@b:	
  2411                           
  2412                           ; 4 bytes @ 0x42
  2413  0062                     	ds	4
  2414  0066                     ??_MediaPlacaVaccum:	
  2415  0066                     ??___flsub:	
  2416                           ; 1 bytes @ 0x46
  2417                           
  2418                           
  2419                           ; 1 bytes @ 0x46
  2420  0066                     	ds	4
  2421  006A                     ??_main:	
  2422                           
  2423                           ; 1 bytes @ 0x4A
  2424  006A                     	ds	3
  2425  006D                     main@reset:	
  2426                           
  2427                           ; 2 bytes @ 0x4D
  2428  006D                     	ds	2
  2429                           
  2430                           	psect	maintext
  2431  1443                     __pmaintext:	
  2432 ;;
  2433 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2434 ;;
  2435 ;; *************** function _main *****************
  2436 ;; Defined at:
  2437 ;;		line 145 in file "SlaveLiofilizadorVer1.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;  reset           2   77[BANK0 ] unsigned int 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : B00/0
  2448 ;;		On exit  : 300/100
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2451 ;;      Params:         0       0       0       0       0
  2452 ;;      Locals:         0       2       0       0       0
  2453 ;;      Temps:          0       3       0       0       0
  2454 ;;      Totals:         0       5       0       0       0
  2455 ;;Total ram usage:        5 bytes
  2456 ;; Hardware stack levels required when called:    7
  2457 ;; This function calls:
  2458 ;;		_ADC_init
  2459 ;;		_Decodify_Command
  2460 ;;		_EEPROM_Read_Integer
  2461 ;;		_EEPROM_Write_Integer
  2462 ;;		_I2C_Master_Init
  2463 ;;		_MediaPlacaVaccum
  2464 ;;		_USART_init
  2465 ;;		_my_delay_ms_WDT
  2466 ;; This function is called by:
  2467 ;;		Startup code after reset
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           
  2472                           ;psect for function _main
  2473  1443                     _main:	
  2474                           
  2475                           ;SlaveLiofilizadorVer1.c: 146:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2476                           
  2477                           ;incstack = 0
  2478                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2479  1443  3002               	movlw	2
  2480  1444  1283               	bcf	3,5	;RP0=0, select bank0
  2481  1445  1303               	bcf	3,6	;RP1=0, select bank0
  2482  1446  00EC               	movwf	??_main+2
  2483  1447  3004               	movlw	4
  2484  1448  00EB               	movwf	??_main+1
  2485  1449  30B9               	movlw	185
  2486  144A  00EA               	movwf	??_main
  2487  144B                     u7997:	
  2488  144B  0BEA               	decfsz	??_main,f
  2489  144C  2C4B               	goto	u7997
  2490  144D  0BEB               	decfsz	??_main+1,f
  2491  144E  2C4B               	goto	u7997
  2492  144F  0BEC               	decfsz	??_main+2,f
  2493  1450  2C4B               	goto	u7997
  2494  1451  2C52               	nop2
  2495                           
  2496                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF0=1;
  2497  1452  1683               	bsf	3,5	;RP0=1, select bank1
  2498  1453  1303               	bcf	3,6	;RP1=0, select bank1
  2499  1454  160F               	bsf	15,4	;volatile
  2500                           
  2501                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF1=1;
  2502  1455  168F               	bsf	15,5	;volatile
  2503                           
  2504                           ;SlaveLiofilizadorVer1.c: 149:      OSCCONbits.IRCF2=1;
  2505  1456  170F               	bsf	15,6	;volatile
  2506                           
  2507                           ;SlaveLiofilizadorVer1.c: 151:      PORTA=0;
  2508  1457  1283               	bcf	3,5	;RP0=0, select bank0
  2509  1458  0185               	clrf	5	;volatile
  2510                           
  2511                           ;SlaveLiofilizadorVer1.c: 152:      PORTB=0;
  2512  1459  0186               	clrf	6	;volatile
  2513                           
  2514                           ;SlaveLiofilizadorVer1.c: 153:      PORTC=0;
  2515  145A  0187               	clrf	7	;volatile
  2516                           
  2517                           ;SlaveLiofilizadorVer1.c: 154:      PORTE=0;
  2518  145B  0189               	clrf	9	;volatile
  2519                           
  2520                           ;SlaveLiofilizadorVer1.c: 155:      TRISA=0b11101111;
  2521  145C  30EF               	movlw	239
  2522  145D  1683               	bsf	3,5	;RP0=1, select bank1
  2523  145E  0085               	movwf	5	;volatile
  2524                           
  2525                           ;SlaveLiofilizadorVer1.c: 156:      TRISB=0b00001111;
  2526  145F  300F               	movlw	15
  2527  1460  0086               	movwf	6	;volatile
  2528                           
  2529                           ;SlaveLiofilizadorVer1.c: 157:      TRISC=0xF0;
  2530  1461  30F0               	movlw	240
  2531  1462  0087               	movwf	7	;volatile
  2532                           
  2533                           ;SlaveLiofilizadorVer1.c: 158:      TRISE=0xFF;
  2534  1463  30FF               	movlw	255
  2535  1464  0089               	movwf	9	;volatile
  2536                           
  2537                           ;SlaveLiofilizadorVer1.c: 160:      ANSEL=0x00000011;
  2538  1465  3011               	movlw	17
  2539  1466  1703               	bsf	3,6	;RP1=1, select bank3
  2540  1467  0088               	movwf	8	;volatile
  2541                           
  2542                           ;SlaveLiofilizadorVer1.c: 161:      ANSELH=0x00000000;
  2543  1468  0189               	clrf	9	;volatile
  2544                           
  2545                           ;SlaveLiofilizadorVer1.c: 163:      OPTION_REGbits.nRBPU=0;
  2546  1469  1303               	bcf	3,6	;RP1=0, select bank1
  2547  146A  1381               	bcf	1,7	;volatile
  2548                           
  2549                           ;SlaveLiofilizadorVer1.c: 164:      WPUB=0b00001111;
  2550  146B  300F               	movlw	15
  2551  146C  0095               	movwf	21	;volatile
  2552                           
  2553                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB7 =1;
  2554  146D  1283               	bcf	3,5	;RP0=0, select bank0
  2555  146E  1786               	bsf	6,7	;volatile
  2556                           
  2557                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB6 =1;
  2558  146F  1706               	bsf	6,6	;volatile
  2559                           
  2560                           ;SlaveLiofilizadorVer1.c: 169:      PORTBbits.RB5=1;
  2561  1470  1686               	bsf	6,5	;volatile
  2562                           
  2563                           ;SlaveLiofilizadorVer1.c: 170:      my_delay_ms_WDT(1000);
  2564  1471  3000               	movlw	0
  2565  1472  00A3               	movwf	my_delay_ms_WDT@time+3
  2566  1473  3000               	movlw	0
  2567  1474  00A2               	movwf	my_delay_ms_WDT@time+2
  2568  1475  3003               	movlw	3
  2569  1476  00A1               	movwf	my_delay_ms_WDT@time+1
  2570  1477  30E8               	movlw	232
  2571  1478  00A0               	movwf	my_delay_ms_WDT@time
  2572  1479  160A  158A  250D  160A  118A  	fcall	_my_delay_ms_WDT
  2573                           
  2574                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.T0CS=0;
  2575  147E  1683               	bsf	3,5	;RP0=1, select bank1
  2576  147F  1281               	bcf	1,5	;volatile
  2577                           
  2578                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PSA =1;
  2579  1480  1581               	bsf	1,3	;volatile
  2580                           
  2581                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS0 =1;
  2582  1481  1401               	bsf	1,0	;volatile
  2583                           
  2584                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS1 =1;
  2585  1482  1481               	bsf	1,1	;volatile
  2586                           
  2587                           ;SlaveLiofilizadorVer1.c: 176:      OPTION_REGbits.PS2 =1;
  2588  1483  1501               	bsf	1,2	;volatile
  2589                           
  2590                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.T0IE =0;
  2591  1484  128B               	bcf	11,5	;volatile
  2592                           
  2593                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.INTE =0;
  2594  1485  120B               	bcf	11,4	;volatile
  2595                           
  2596                           ;SlaveLiofilizadorVer1.c: 179:      INTCONbits.GIE =1;
  2597  1486  178B               	bsf	11,7	;volatile
  2598                           
  2599                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.PEIE = 1;
  2600  1487  170B               	bsf	11,6	;volatile
  2601                           
  2602                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS0=1;
  2603  1488  1283               	bcf	3,5	;RP0=0, select bank0
  2604  1489  1610               	bsf	16,4	;volatile
  2605                           
  2606                           ;SlaveLiofilizadorVer1.c: 184:      T1CKPS1=1;
  2607  148A  1690               	bsf	16,5	;volatile
  2608                           
  2609                           ;SlaveLiofilizadorVer1.c: 185:      TMR1CS=0;
  2610  148B  1090               	bcf	16,1	;volatile
  2611                           
  2612                           ;SlaveLiofilizadorVer1.c: 186:      TMR1IE=1;
  2613  148C  1683               	bsf	3,5	;RP0=1, select bank1
  2614  148D  140C               	bsf	12,0	;volatile
  2615                           
  2616                           ;SlaveLiofilizadorVer1.c: 187:      T1CON=1;
  2617  148E  3001               	movlw	1
  2618  148F  1283               	bcf	3,5	;RP0=0, select bank0
  2619  1490  0090               	movwf	16	;volatile
  2620  1491  0064               	clrwdt	;# 
  2621                           
  2622                           ;SlaveLiofilizadorVer1.c: 194:      ADC_init();
  2623  1492  160A  158A  2100  160A  118A  	fcall	_ADC_init
  2624                           
  2625                           ;SlaveLiofilizadorVer1.c: 195:      I2C_Master_Init(100000);
  2626  1497  3000               	movlw	0
  2627  1498  00B1               	movwf	I2C_Master_Init@c+3
  2628  1499  3001               	movlw	1
  2629  149A  00B0               	movwf	I2C_Master_Init@c+2
  2630  149B  3086               	movlw	134
  2631  149C  00AF               	movwf	I2C_Master_Init@c+1
  2632  149D  30A0               	movlw	160
  2633  149E  00AE               	movwf	I2C_Master_Init@c
  2634  149F  160A  158A  23D6  160A  118A  	fcall	_I2C_Master_Init
  2635                           
  2636                           ;SlaveLiofilizadorVer1.c: 196:      USART_init(115200);
  2637  14A4  3000               	movlw	0
  2638  14A5  1283               	bcf	3,5	;RP0=0, select bank0
  2639  14A6  00A3               	movwf	USART_init@baudrate+3
  2640  14A7  3001               	movlw	1
  2641  14A8  00A2               	movwf	USART_init@baudrate+2
  2642  14A9  30C2               	movlw	194
  2643  14AA  00A1               	movwf	USART_init@baudrate+1
  2644  14AB  3000               	movlw	0
  2645  14AC  00A0               	movwf	USART_init@baudrate
  2646  14AD  160A  158A  25BD  160A  118A  	fcall	_USART_init
  2647                           
  2648                           ;SlaveLiofilizadorVer1.c: 202:      {;SlaveLiofilizadorVer1.c: 203:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 204:      reset=EEPROM_Read_Integer(0x10);
  2649  14B2  3010               	movlw	16
  2650  14B3  160A  158A  2328  160A  118A  	fcall	_EEPROM_Read_Integer
  2651  14B8  0824               	movf	?_EEPROM_Read_Integer+1,w
  2652  14B9  00EE               	movwf	main@reset+1
  2653  14BA  0823               	movf	?_EEPROM_Read_Integer,w
  2654  14BB  00ED               	movwf	main@reset
  2655                           
  2656                           ;SlaveLiofilizadorVer1.c: 205:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2657  14BC  0A6D               	incf	main@reset,w
  2658  14BD  1D03               	skipz
  2659  14BE  2CCB               	goto	l7542
  2660  14BF  0A6E               	incf	main@reset+1,w
  2661  14C0  1D03               	btfss	3,2
  2662  14C1  2CCB               	goto	l7542
  2663  14C2  3000               	movlw	0
  2664  14C3  00A5               	movwf	EEPROM_Write_Integer@dado
  2665  14C4  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2666  14C5  3010               	movlw	16
  2667  14C6  160A  158A  2407  160A  118A  	fcall	_EEPROM_Write_Integer
  2668  14CB                     l7542:	
  2669                           
  2670                           ;SlaveLiofilizadorVer1.c: 206:      reset++;
  2671  14CB  3001               	movlw	1
  2672  14CC  1283               	bcf	3,5	;RP0=0, select bank0
  2673  14CD  1303               	bcf	3,6	;RP1=0, select bank0
  2674  14CE  07ED               	addwf	main@reset,f
  2675  14CF  1803               	skipnc
  2676  14D0  0AEE               	incf	main@reset+1,f
  2677  14D1  3000               	movlw	0
  2678  14D2  07EE               	addwf	main@reset+1,f
  2679                           
  2680                           ;SlaveLiofilizadorVer1.c: 207:      EEPROM_Write_Integer(0x10,reset);
  2681  14D3  086E               	movf	main@reset+1,w
  2682  14D4  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2683  14D5  086D               	movf	main@reset,w
  2684  14D6  00A5               	movwf	EEPROM_Write_Integer@dado
  2685  14D7  3010               	movlw	16
  2686  14D8  160A  158A  2407  160A  118A  	fcall	_EEPROM_Write_Integer
  2687                           
  2688                           ;SlaveLiofilizadorVer1.c: 208:      };SlaveLiofilizadorVer1.c: 212:      Delay_Led_Tmr0 
      +                          = 0;
  2689  14DD  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2690  14DE  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2691                           
  2692                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Usart = 0;
  2693  14DF  1683               	bsf	3,5	;RP0=1, select bank1
  2694  14E0  1303               	bcf	3,6	;RP1=0, select bank1
  2695  14E1  01DF               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2696  14E2  01E0               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2697                           
  2698                           ;SlaveLiofilizadorVer1.c: 214:      Delay_Led_Memory = 0;
  2699  14E3  01FA               	clrf	_Delay_Led_Memory	;volatile
  2700  14E4  01FB               	clrf	_Delay_Led_Memory+1	;volatile
  2701                           
  2702                           ;SlaveLiofilizadorVer1.c: 216:      segundo=0;
  2703  14E5  01E7               	clrf	_segundo^(0+128)	;volatile
  2704                           
  2705                           ;SlaveLiofilizadorVer1.c: 217:      hora=0;
  2706  14E6  01E6               	clrf	_hora^(0+128)	;volatile
  2707                           
  2708                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC0=0;
  2709  14E7  1283               	bcf	3,5	;RP0=0, select bank0
  2710  14E8  1007               	bcf	7,0	;volatile
  2711                           
  2712                           ;SlaveLiofilizadorVer1.c: 219:      PORTCbits.RC1=0;
  2713  14E9  1087               	bcf	7,1	;volatile
  2714                           
  2715                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA2=0;
  2716  14EA  1105               	bcf	5,2	;volatile
  2717                           
  2718                           ;SlaveLiofilizadorVer1.c: 221:      PORTAbits.RA3=0;
  2719  14EB  1185               	bcf	5,3	;volatile
  2720                           
  2721                           ;SlaveLiofilizadorVer1.c: 224:      Board_Number=(((0x0F)&(~PORTB)));
  2722  14EC  0906               	comf	6,w	;volatile
  2723  14ED  390F               	andlw	15
  2724  14EE  00EA               	movwf	??_main
  2725  14EF  086A               	movf	??_main,w
  2726  14F0  1683               	bsf	3,5	;RP0=1, select bank1
  2727  14F1  00E3               	movwf	_Board_Number^(0+128)
  2728                           
  2729                           ;SlaveLiofilizadorVer1.c: 225:      canal=1;
  2730  14F2  01E4               	clrf	_canal^(0+128)
  2731  14F3  0AE4               	incf	_canal^(0+128),f
  2732                           
  2733                           ;SlaveLiofilizadorVer1.c: 233:      statuspower.flag_global_vacuo=0;
  2734  14F4  1168               	bcf	_statuspower^(0+128),2
  2735  14F5                     l7568:	
  2736                           
  2737                           ;SlaveLiofilizadorVer1.c: 247:           {;SlaveLiofilizadorVer1.c: 249:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2738  14F5  17E9               	bsf	_generic_status^(0+128),7
  2739                           
  2740                           ;SlaveLiofilizadorVer1.c: 275:          if(++canal==2) canal=0;
  2741  14F6  3001               	movlw	1
  2742  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  2743  14F8  00EA               	movwf	??_main
  2744  14F9  086A               	movf	??_main,w
  2745  14FA  1683               	bsf	3,5	;RP0=1, select bank1
  2746  14FB  07E4               	addwf	_canal^(0+128),f
  2747  14FC  3002               	movlw	2
  2748  14FD  0664               	xorwf	_canal^(0+128),w
  2749  14FE  1903               	btfsc	3,2
  2750  14FF  01E4               	clrf	_canal^(0+128)
  2751                           
  2752                           ;SlaveLiofilizadorVer1.c: 276:          MediaPlacaVaccum(canal);
  2753  1500  0864               	movf	_canal^(0+128),w
  2754  1501  120A  158A  2569  160A  118A  	fcall	_MediaPlacaVaccum
  2755                           
  2756                           ;SlaveLiofilizadorVer1.c: 284:          if(generic_status.flag_usart_rx==1)
  2757  1506  1683               	bsf	3,5	;RP0=1, select bank1
  2758  1507  1C69               	btfss	_generic_status^(0+128),0
  2759  1508  2CF5               	goto	l7568
  2760                           
  2761                           ;SlaveLiofilizadorVer1.c: 285:             {;SlaveLiofilizadorVer1.c: 286:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2762  1509  1703               	bsf	3,6	;RP1=1, select bank3
  2763  150A  0810               	movf	_usart_buffer^(0+384),w	;volatile
  2764  150B  1303               	bcf	3,6	;RP1=0, select bank1
  2765  150C  00DC               	movwf	(_header+1)^(0+128)
  2766  150D  1703               	bsf	3,6	;RP1=1, select bank3
  2767  150E  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  2768  150F  1303               	bcf	3,6	;RP1=0, select bank1
  2769  1510  00DB               	movwf	_header^(0+128)
  2770                           
  2771                           ;SlaveLiofilizadorVer1.c: 287:             if(header==0xAABB)
  2772  1511  30BB               	movlw	187
  2773  1512  065B               	xorwf	_header^(0+128),w
  2774  1513  30AA               	movlw	170
  2775  1514  1903               	skipnz
  2776  1515  065C               	xorwf	(_header+1)^(0+128),w
  2777  1516  1D03               	btfss	3,2
  2778  1517  2CF5               	goto	l7568
  2779                           
  2780                           ;SlaveLiofilizadorVer1.c: 288:                {;SlaveLiofilizadorVer1.c: 289:           
      +                               destino =usart_buffer[3];
  2781  1518  1703               	bsf	3,6	;RP1=1, select bank3
  2782  1519  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  2783  151A  1283               	bcf	3,5	;RP0=0, select bank0
  2784  151B  1303               	bcf	3,6	;RP1=0, select bank0
  2785  151C  00EA               	movwf	??_main
  2786  151D  086A               	movf	??_main,w
  2787  151E  1683               	bsf	3,5	;RP0=1, select bank1
  2788  151F  00E2               	movwf	_destino^(0+128)
  2789                           
  2790                           ;SlaveLiofilizadorVer1.c: 290:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2791  1520  0862               	movf	_destino^(0+128),w
  2792  1521  0663               	xorwf	_Board_Number^(0+128),w
  2793  1522  1D03               	btfss	3,2
  2794  1523  0A62               	incf	_destino^(0+128),w
  2795  1524  1D03               	btfss	3,2
  2796  1525  2CF5               	goto	l7568
  2797                           
  2798                           ;SlaveLiofilizadorVer1.c: 291:                       {;SlaveLiofilizadorVer1.c: 292:    
      +                                             Delay_Led_Usart=20;
  2799  1526  3014               	movlw	20
  2800  1527  00DF               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2801  1528  3000               	movlw	0
  2802  1529  00E0               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2803                           
  2804                           ;SlaveLiofilizadorVer1.c: 293:                       Decodify_Command();
  2805  152A  120A  118A  2036  160A  118A  	fcall	_Decodify_Command
  2806                           
  2807                           ;SlaveLiofilizadorVer1.c: 294:                       generic_status.flag_usart_rx=0;
  2808  152F  1683               	bsf	3,5	;RP0=1, select bank1
  2809  1530  1069               	bcf	_generic_status^(0+128),0
  2810                           
  2811                           ;SlaveLiofilizadorVer1.c: 297:             }
  2812  1531  2CF5               	goto	l7568
  2813  1532                     __end_of_main:	
  2814                           
  2815                           	psect	text1
  2816  1D0D                     __ptext1:	
  2817 ;; *************** function _my_delay_ms_WDT *****************
  2818 ;; Defined at:
  2819 ;;		line 13 in file "my_delay.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  time            4    0[BANK0 ] long 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  i               4    6[BANK0 ] long 
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg, btemp+1
  2828 ;; Tracked objects:
  2829 ;;		On entry : 300/0
  2830 ;;		On exit  : 300/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2833 ;;      Params:         0       4       0       0       0
  2834 ;;      Locals:         0       4       0       0       0
  2835 ;;      Temps:          0       2       0       0       0
  2836 ;;      Totals:         0      10       0       0       0
  2837 ;;Total ram usage:       10 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; Hardware stack levels required when called:    1
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_main
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           
  2848                           ;psect for function _my_delay_ms_WDT
  2849  1D0D                     _my_delay_ms_WDT:	
  2850                           
  2851                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
  2852                           
  2853                           ;incstack = 0
  2854                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
  2855  1D0D  3000               	movlw	0
  2856  1D0E  00A9               	movwf	my_delay_ms_WDT@i+3
  2857  1D0F  3000               	movlw	0
  2858  1D10  00A8               	movwf	my_delay_ms_WDT@i+2
  2859  1D11  3000               	movlw	0
  2860  1D12  00A7               	movwf	my_delay_ms_WDT@i+1
  2861  1D13  3000               	movlw	0
  2862  1D14  00A6               	movwf	my_delay_ms_WDT@i
  2863  1D15                     l7120:	
  2864  1D15  0829               	movf	my_delay_ms_WDT@i+3,w
  2865  1D16  3A80               	xorlw	128
  2866  1D17  00FF               	movwf	127
  2867  1D18  0823               	movf	my_delay_ms_WDT@time+3,w
  2868  1D19  3A80               	xorlw	128
  2869  1D1A  027F               	subwf	127,w
  2870  1D1B  1D03               	skipz
  2871  1D1C  2D27               	goto	u7703
  2872  1D1D  0822               	movf	my_delay_ms_WDT@time+2,w
  2873  1D1E  0228               	subwf	my_delay_ms_WDT@i+2,w
  2874  1D1F  1D03               	skipz
  2875  1D20  2D27               	goto	u7703
  2876  1D21  0821               	movf	my_delay_ms_WDT@time+1,w
  2877  1D22  0227               	subwf	my_delay_ms_WDT@i+1,w
  2878  1D23  1D03               	skipz
  2879  1D24  2D27               	goto	u7703
  2880  1D25  0820               	movf	my_delay_ms_WDT@time,w
  2881  1D26  0226               	subwf	my_delay_ms_WDT@i,w
  2882  1D27                     u7703:	
  2883  1D27  1803               	btfsc	3,0
  2884  1D28  0008               	return
  2885  1D29  0064               	clrwdt	;# 
  2886                           
  2887                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
  2888  1D2A  3003               	movlw	3
  2889  1D2B  1283               	bcf	3,5	;RP0=0, select bank0
  2890  1D2C  1303               	bcf	3,6	;RP1=0, select bank0
  2891  1D2D  00A5               	movwf	??_my_delay_ms_WDT+1
  2892  1D2E  3097               	movlw	151
  2893  1D2F  00A4               	movwf	??_my_delay_ms_WDT
  2894  1D30                     u8007:	
  2895  1D30  0BA4               	decfsz	??_my_delay_ms_WDT,f
  2896  1D31  2D30               	goto	u8007
  2897  1D32  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
  2898  1D33  2D30               	goto	u8007
  2899                           
  2900                           ;my_delay.c: 19:             }
  2901  1D34  3001               	movlw	1
  2902  1D35  1283               	bcf	3,5	;RP0=0, select bank0
  2903  1D36  1303               	bcf	3,6	;RP1=0, select bank0
  2904  1D37  07A6               	addwf	my_delay_ms_WDT@i,f
  2905  1D38  3000               	movlw	0
  2906  1D39  1803               	skipnc
  2907  1D3A  3001               	movlw	1
  2908  1D3B  07A7               	addwf	my_delay_ms_WDT@i+1,f
  2909  1D3C  3000               	movlw	0
  2910  1D3D  1803               	skipnc
  2911  1D3E  3001               	movlw	1
  2912  1D3F  07A8               	addwf	my_delay_ms_WDT@i+2,f
  2913  1D40  3000               	movlw	0
  2914  1D41  1803               	skipnc
  2915  1D42  3001               	movlw	1
  2916  1D43  07A9               	addwf	my_delay_ms_WDT@i+3,f
  2917  1D44  2D15               	goto	l7120
  2918  1D45                     __end_of_my_delay_ms_WDT:	
  2919                           
  2920                           	psect	text2
  2921  1DBD                     __ptext2:	
  2922 ;; *************** function _USART_init *****************
  2923 ;; Defined at:
  2924 ;;		line 18 in file "usart.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  baudrate        4    0[BANK0 ] unsigned long 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  i               1    6[BANK0 ] unsigned char 
  2929 ;;  erro            1    0        unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 300/0
  2936 ;;		On exit  : 300/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2939 ;;      Params:         0       4       0       0       0
  2940 ;;      Locals:         0       2       0       0       0
  2941 ;;      Temps:          0       1       0       0       0
  2942 ;;      Totals:         0       7       0       0       0
  2943 ;;Total ram usage:        7 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    1
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_main
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           
  2954                           ;psect for function _USART_init
  2955  1DBD                     _USART_init:	
  2956                           
  2957                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  2958                           
  2959                           ;incstack = 0
  2960                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  2961  1DBD  304B               	movlw	75
  2962  1DBE  0621               	xorwf	USART_init@baudrate+1,w
  2963  1DBF  0420               	iorwf	USART_init@baudrate,w
  2964  1DC0  0422               	iorwf	USART_init@baudrate+2,w
  2965  1DC1  0423               	iorwf	USART_init@baudrate+3,w
  2966  1DC2  1D03               	btfss	3,2
  2967  1DC3  2DCE               	goto	l7140
  2968                           
  2969                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  2970  1DC4  1798               	bsf	24,7	;volatile
  2971                           
  2972                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  2973  1DC5  1618               	bsf	24,4	;volatile
  2974                           
  2975                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  2976  1DC6  1683               	bsf	3,5	;RP0=1, select bank1
  2977  1DC7  1518               	bsf	24,2	;volatile
  2978                           
  2979                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  2980  1DC8  1218               	bcf	24,4	;volatile
  2981                           
  2982                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  2983  1DC9  1318               	bcf	24,6	;volatile
  2984                           
  2985                           ;usart.c: 32:           SPBRG =12;
  2986  1DCA  300C               	movlw	12
  2987  1DCB  0099               	movwf	25	;volatile
  2988                           
  2989                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  2990  1DCC  170B               	bsf	11,6	;volatile
  2991  1DCD  2DE7               	goto	L1
  2992  1DCE                     l7140:	
  2993                           ;usart.c: 35:           }
  2994                           
  2995                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  2996                           
  2997  1DCE  30C2               	movlw	194
  2998  1DCF  0621               	xorwf	USART_init@baudrate+1,w
  2999  1DD0  1D03               	skipz
  3000  1DD1  2DE8               	goto	l7160
  3001  1DD2  0322               	decf	USART_init@baudrate+2,w
  3002  1DD3  0420               	iorwf	USART_init@baudrate,w
  3003  1DD4  0423               	iorwf	USART_init@baudrate+3,w
  3004  1DD5  1D03               	btfss	3,2
  3005  1DD6  2DE8               	goto	l7160
  3006                           
  3007                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  3008  1DD7  3010               	movlw	16
  3009  1DD8  1683               	bsf	3,5	;RP0=1, select bank1
  3010  1DD9  0099               	movwf	25	;volatile
  3011                           
  3012                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  3013  1DDA  1703               	bsf	3,6	;RP1=1, select bank3
  3014  1DDB  1587               	bsf	7,3	;volatile
  3015                           
  3016                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  3017  1DDC  1303               	bcf	3,6	;RP1=0, select bank1
  3018  1DDD  1518               	bsf	24,2	;volatile
  3019                           
  3020                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  3021  1DDE  1283               	bcf	3,5	;RP0=0, select bank0
  3022  1DDF  1798               	bsf	24,7	;volatile
  3023                           
  3024                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  3025  1DE0  1683               	bsf	3,5	;RP0=1, select bank1
  3026  1DE1  1218               	bcf	24,4	;volatile
  3027                           
  3028                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  3029  1DE2  1318               	bcf	24,6	;volatile
  3030                           
  3031                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  3032  1DE3  1283               	bcf	3,5	;RP0=0, select bank0
  3033  1DE4  1618               	bsf	24,4	;volatile
  3034                           
  3035                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  3036  1DE5  170B               	bsf	11,6	;volatile
  3037                           
  3038                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  3039  1DE6  1683               	bsf	3,5	;RP0=1, select bank1
  3040  1DE7                     L1:	
  3041  1DE7  168C               	bsf	12,5	;volatile
  3042  1DE8                     l7160:	
  3043                           
  3044                           ;usart.c: 68:      TRISC6= 1;
  3045  1DE8  1683               	bsf	3,5	;RP0=1, select bank1
  3046  1DE9  1707               	bsf	7,6	;volatile
  3047                           
  3048                           ;usart.c: 69:      TRISC7= 1;
  3049  1DEA  1787               	bsf	7,7	;volatile
  3050                           
  3051                           ;usart.c: 71:      CREN=0;
  3052  1DEB  1283               	bcf	3,5	;RP0=0, select bank0
  3053  1DEC  1218               	bcf	24,4	;volatile
  3054                           
  3055                           ;usart.c: 72:      CREN=1;
  3056  1DED  1618               	bsf	24,4	;volatile
  3057                           
  3058                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  3059  1DEE  01A6               	clrf	USART_init@i
  3060  1DEF                     l7174:	
  3061  1DEF  081A               	movf	26,w	;volatile
  3062  1DF0  3001               	movlw	1
  3063  1DF1  00A4               	movwf	??_USART_init
  3064  1DF2  0824               	movf	??_USART_init,w
  3065  1DF3  07A6               	addwf	USART_init@i,f
  3066  1DF4  300F               	movlw	15
  3067  1DF5  0226               	subwf	USART_init@i,w
  3068  1DF6  1803               	btfsc	3,0
  3069  1DF7  0008               	return
  3070  1DF8  2DEF               	goto	l7174
  3071  1DF9                     __end_of_USART_init:	
  3072                           
  3073                           	psect	text3
  3074  0D69                     __ptext3:	
  3075 ;; *************** function _MediaPlacaVaccum *****************
  3076 ;; Defined at:
  3077 ;;		line 789 in file "SlaveLiofilizadorVer1.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  canal           1    wreg     unsigned char 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  canal           1    4[BANK1 ] unsigned char 
  3082 ;;  Temp            4    5[BANK1 ] float 
  3083 ;;  Valor           4    0[BANK1 ] float 
  3084 ;;  i               2    9[BANK1 ] unsigned int 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 300/100
  3091 ;;		On exit  : 200/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3094 ;;      Params:         0       0       0       0       0
  3095 ;;      Locals:         0       0      11       0       0
  3096 ;;      Temps:          0       4       0       0       0
  3097 ;;      Totals:         0       4      11       0       0
  3098 ;;Total ram usage:       15 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    3
  3101 ;; This function calls:
  3102 ;;		_ADC_Max_10Bits
  3103 ;;		_ADC_Media_10bits
  3104 ;;		_Package_Usart_is_for_me
  3105 ;;		___fladd
  3106 ;;		___fldiv
  3107 ;;		___flge
  3108 ;;		___flmul
  3109 ;;		___flsub
  3110 ;;		___xxtofl
  3111 ;;		_my_delay_ms
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           
  3118                           ;psect for function _MediaPlacaVaccum
  3119  0D69                     _MediaPlacaVaccum:	
  3120                           
  3121                           ;incstack = 0
  3122                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3123                           ;MediaPlacaVaccum@canal stored from wreg
  3124  0D69  00A4               	movwf	MediaPlacaVaccum@canal^(0+128)
  3125                           
  3126                           ;SlaveLiofilizadorVer1.c: 790:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 791:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 795:      if(canal==0)
  3127  0D6A  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3128  0D6B  1D03               	btfss	3,2
  3129  0D6C  2F0F               	goto	l303
  3130                           
  3131                           ;SlaveLiofilizadorVer1.c: 796:        {;SlaveLiofilizadorVer1.c: 797:        ADCON1bits.
      +                          VCFG0=1;
  3132  0D6D  161F               	bsf	31,4	;volatile
  3133                           
  3134                           ;SlaveLiofilizadorVer1.c: 798:        ADCON1bits.VCFG1=1;
  3135  0D6E  169F               	bsf	31,5	;volatile
  3136                           
  3137                           ;SlaveLiofilizadorVer1.c: 799:        ADCON0bits.CHS=canal;
  3138  0D6F  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3139  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0D71  00E6               	movwf	??_MediaPlacaVaccum
  3141  0D72  0DE6               	rlf	??_MediaPlacaVaccum,f
  3142  0D73  0DE6               	rlf	??_MediaPlacaVaccum,f
  3143  0D74  081F               	movf	31,w	;volatile
  3144  0D75  0666               	xorwf	??_MediaPlacaVaccum,w
  3145  0D76  39C3               	andlw	-61
  3146  0D77  0666               	xorwf	??_MediaPlacaVaccum,w
  3147  0D78  009F               	movwf	31	;volatile
  3148                           
  3149                           ;SlaveLiofilizadorVer1.c: 800:        my_delay_ms(10);
  3150  0D79  3000               	movlw	0
  3151  0D7A  00A3               	movwf	my_delay_ms@time+3
  3152  0D7B  3000               	movlw	0
  3153  0D7C  00A2               	movwf	my_delay_ms@time+2
  3154  0D7D  3000               	movlw	0
  3155  0D7E  00A1               	movwf	my_delay_ms@time+1
  3156  0D7F  300A               	movlw	10
  3157  0D80  00A0               	movwf	my_delay_ms@time
  3158  0D81  160A  158A  249E  120A  158A  	fcall	_my_delay_ms
  3159                           
  3160                           ;SlaveLiofilizadorVer1.c: 801:        Temp=0;
  3161  0D86  3000               	movlw	0
  3162  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  3163  0D88  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3164  0D89  3000               	movlw	0
  3165  0D8A  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3166  0D8B  3000               	movlw	0
  3167  0D8C  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3168  0D8D  3000               	movlw	0
  3169  0D8E  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3170                           
  3171                           ;SlaveLiofilizadorVer1.c: 803:        for(i=1;i<15;i++)
  3172  0D8F  3001               	movlw	1
  3173  0D90  00A9               	movwf	MediaPlacaVaccum@i^(0+128)
  3174  0D91  3000               	movlw	0
  3175  0D92  00AA               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3176  0D93                     l7196:	
  3177                           
  3178                           ;SlaveLiofilizadorVer1.c: 804:            {;SlaveLiofilizadorVer1.c: 805:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3179  0D93  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3180  0D94  160A  118A  2004  120A  158A  	fcall	_ADC_Media_10bits
  3181  0D99  0844               	movf	?_ADC_Media_10bits+3,w
  3182  0D9A  00CD               	movwf	___fladd@b+3
  3183  0D9B  0843               	movf	?_ADC_Media_10bits+2,w
  3184  0D9C  00CC               	movwf	___fladd@b+2
  3185  0D9D  0842               	movf	?_ADC_Media_10bits+1,w
  3186  0D9E  00CB               	movwf	___fladd@b+1
  3187  0D9F  0841               	movf	?_ADC_Media_10bits,w
  3188  0DA0  00CA               	movwf	___fladd@b
  3189  0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  3190  0DA2  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3191  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0DA4  00D1               	movwf	___fladd@a+3
  3193  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  3194  0DA6  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3195  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  3196  0DA8  00D0               	movwf	___fladd@a+2
  3197  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  3198  0DAA  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3199  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  3200  0DAC  00CF               	movwf	___fladd@a+1
  3201  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  3202  0DAE  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3203  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0DB0  00CE               	movwf	___fladd@a
  3205  0DB1  120A  158A  233C  120A  158A  	fcall	___fladd
  3206  0DB6  084D               	movf	?___fladd+3,w
  3207  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  3208  0DB8  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3209  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0DBA  084C               	movf	?___fladd+2,w
  3211  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  3212  0DBC  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3213  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3214  0DBE  084B               	movf	?___fladd+1,w
  3215  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  3216  0DC0  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3217  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  3218  0DC2  084A               	movf	?___fladd,w
  3219  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  3220  0DC4  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3221                           
  3222                           ;SlaveLiofilizadorVer1.c: 806:            if(Package_Usart_is_for_me()==1) break;
  3223  0DC5  160A  158A  2173  120A  158A  	fcall	_Package_Usart_is_for_me
  3224  0DCA  3A01               	xorlw	1
  3225  0DCB  1903               	btfsc	3,2
  3226  0DCC  2DDB               	goto	l7204
  3227                           
  3228                           ;SlaveLiofilizadorVer1.c: 807:            }
  3229  0DCD  3001               	movlw	1
  3230  0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  3231  0DCF  07A9               	addwf	MediaPlacaVaccum@i^(0+128),f
  3232  0DD0  1803               	skipnc
  3233  0DD1  0AAA               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3234  0DD2  3000               	movlw	0
  3235  0DD3  07AA               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3236  0DD4  3000               	movlw	0
  3237  0DD5  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3238  0DD6  300F               	movlw	15
  3239  0DD7  1903               	skipnz
  3240  0DD8  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3241  0DD9  1C03               	skipc
  3242  0DDA  2D93               	goto	l7196
  3243  0DDB                     l7204:	
  3244                           
  3245                           ;SlaveLiofilizadorVer1.c: 808:        if(i<10)
  3246  0DDB  3000               	movlw	0
  3247  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  3248  0DDD  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3249  0DDE  300A               	movlw	10
  3250  0DDF  1903               	skipnz
  3251  0DE0  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3252  0DE1  1C03               	btfss	3,0
  3253  0DE2  0008               	return
  3254                           
  3255                           ;SlaveLiofilizadorVer1.c: 814:        if(i==15)
  3256  0DE3  300F               	movlw	15
  3257  0DE4  0629               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3258  0DE5  042A               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3259  0DE6  1D03               	btfss	3,2
  3260  0DE7  2DF2               	goto	l7212
  3261                           
  3262                           ;SlaveLiofilizadorVer1.c: 815:          Temp/=(i-1);
  3263  0DE8  0829               	movf	MediaPlacaVaccum@i^(0+128),w
  3264  0DE9  3EFF               	addlw	255
  3265  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  3266  0DEB  00B3               	movwf	___xxtofl@val
  3267  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  3268  0DED  082A               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3269  0DEE  1803               	skipnc
  3270  0DEF  3E01               	addlw	1
  3271  0DF0  3EFF               	addlw	255
  3272  0DF1  2DF7               	goto	L2
  3273  0DF2                     l7212:	
  3274                           
  3275                           ;SlaveLiofilizadorVer1.c: 817:          Temp/=(i);
  3276  0DF2  0829               	movf	MediaPlacaVaccum@i^(0+128),w
  3277  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0DF4  00B3               	movwf	___xxtofl@val
  3279  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  3280  0DF6  082A               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3281  0DF7                     L2:	
  3282  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  3283  0DF8  00B4               	movwf	___xxtofl@val+1
  3284  0DF9  01B5               	clrf	___xxtofl@val+2
  3285  0DFA  01B6               	clrf	___xxtofl@val+3
  3286  0DFB  3000               	movlw	0
  3287  0DFC  160A  118A  20ED  120A  158A  	fcall	___xxtofl
  3288  0E01  0836               	movf	?___xxtofl+3,w
  3289  0E02  00C4               	movwf	___fldiv@a+3
  3290  0E03  0835               	movf	?___xxtofl+2,w
  3291  0E04  00C3               	movwf	___fldiv@a+2
  3292  0E05  0834               	movf	?___xxtofl+1,w
  3293  0E06  00C2               	movwf	___fldiv@a+1
  3294  0E07  0833               	movf	?___xxtofl,w
  3295  0E08  00C1               	movwf	___fldiv@a
  3296  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  3297  0E0A  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3298  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  3299  0E0C  00C8               	movwf	___fldiv@b+3
  3300  0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  3301  0E0E  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3302  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0E10  00C7               	movwf	___fldiv@b+2
  3304  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  3305  0E12  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3306  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3307  0E14  00C6               	movwf	___fldiv@b+1
  3308  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  3309  0E16  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3310  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  3311  0E18  00C5               	movwf	___fldiv@b
  3312  0E19  120A  158A  219B  120A  158A  	fcall	___fldiv
  3313  0E1E  0844               	movf	?___fldiv+3,w
  3314  0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  3315  0E20  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3316  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  3317  0E22  0843               	movf	?___fldiv+2,w
  3318  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  3319  0E24  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3320  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  3321  0E26  0842               	movf	?___fldiv+1,w
  3322  0E27  1683               	bsf	3,5	;RP0=1, select bank1
  3323  0E28  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3324  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0E2A  0841               	movf	?___fldiv,w
  3326  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  3327  0E2C  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3328                           
  3329                           ;SlaveLiofilizadorVer1.c: 819:        Vaccum0 =1023.0-Temp;
  3330  0E2D  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3331  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  3332  0E2F  00E1               	movwf	___flsub@a+3
  3333  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  3334  0E31  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3335  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0E33  00E0               	movwf	___flsub@a+2
  3337  0E34  1683               	bsf	3,5	;RP0=1, select bank1
  3338  0E35  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3339  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3340  0E37  00DF               	movwf	___flsub@a+1
  3341  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  3342  0E39  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3343  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  3344  0E3B  00DE               	movwf	___flsub@a
  3345  0E3C  3044               	movlw	68
  3346  0E3D  00E5               	movwf	___flsub@b+3
  3347  0E3E  307F               	movlw	127
  3348  0E3F  00E4               	movwf	___flsub@b+2
  3349  0E40  30C0               	movlw	192
  3350  0E41  00E3               	movwf	___flsub@b+1
  3351  0E42  3000               	movlw	0
  3352  0E43  00E2               	movwf	___flsub@b
  3353  0E44  160A  158A  21F7  120A  158A  	fcall	___flsub
  3354  0E49  0861               	movf	?___flsub+3,w
  3355  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  3356  0E4B  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3357  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0E4D  0860               	movf	?___flsub+2,w
  3359  0E4E  1683               	bsf	3,5	;RP0=1, select bank1
  3360  0E4F  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3361  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  3362  0E51  085F               	movf	?___flsub+1,w
  3363  0E52  1683               	bsf	3,5	;RP0=1, select bank1
  3364  0E53  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3365  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3366  0E55  085E               	movf	?___flsub,w
  3367  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  3368  0E57  00D1               	movwf	_Vaccum0^(0+128)
  3369                           
  3370                           ;SlaveLiofilizadorVer1.c: 820:        Vaccum0*=Vaccum0;
  3371  0E58  0854               	movf	(_Vaccum0+3)^(0+128),w
  3372  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3373  0E5A  00AC               	movwf	___flmul@b+3
  3374  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  3375  0E5C  0853               	movf	(_Vaccum0+2)^(0+128),w
  3376  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3377  0E5E  00AB               	movwf	___flmul@b+2
  3378  0E5F  1683               	bsf	3,5	;RP0=1, select bank1
  3379  0E60  0852               	movf	(_Vaccum0+1)^(0+128),w
  3380  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  3381  0E62  00AA               	movwf	___flmul@b+1
  3382  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  3383  0E64  0851               	movf	_Vaccum0^(0+128),w
  3384  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0E66  00A9               	movwf	___flmul@b
  3386  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  3387  0E68  0854               	movf	(_Vaccum0+3)^(0+128),w
  3388  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3389  0E6A  00B0               	movwf	___flmul@a+3
  3390  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  3391  0E6C  0853               	movf	(_Vaccum0+2)^(0+128),w
  3392  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3393  0E6E  00AF               	movwf	___flmul@a+2
  3394  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  3395  0E70  0852               	movf	(_Vaccum0+1)^(0+128),w
  3396  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  3397  0E72  00AE               	movwf	___flmul@a+1
  3398  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  3399  0E74  0851               	movf	_Vaccum0^(0+128),w
  3400  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0E76  00AD               	movwf	___flmul@a
  3402  0E77  120A  118A  24BC  120A  158A  	fcall	___flmul
  3403  0E7C  082C               	movf	?___flmul+3,w
  3404  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  3405  0E7E  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3406  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0E80  082B               	movf	?___flmul+2,w
  3408  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  3409  0E82  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3410  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3411  0E84  082A               	movf	?___flmul+1,w
  3412  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  3413  0E86  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3414  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  3415  0E88  0829               	movf	?___flmul,w
  3416  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  3417  0E8A  00D1               	movwf	_Vaccum0^(0+128)
  3418                           
  3419                           ;SlaveLiofilizadorVer1.c: 821:        Vaccum0*=0.00222;
  3420  0E8B  303B               	movlw	59
  3421  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  3422  0E8D  00AC               	movwf	___flmul@b+3
  3423  0E8E  3011               	movlw	17
  3424  0E8F  00AB               	movwf	___flmul@b+2
  3425  0E90  307D               	movlw	125
  3426  0E91  00AA               	movwf	___flmul@b+1
  3427  0E92  306B               	movlw	107
  3428  0E93  00A9               	movwf	___flmul@b
  3429  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  3430  0E95  0854               	movf	(_Vaccum0+3)^(0+128),w
  3431  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  3432  0E97  00B0               	movwf	___flmul@a+3
  3433  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  3434  0E99  0853               	movf	(_Vaccum0+2)^(0+128),w
  3435  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  3436  0E9B  00AF               	movwf	___flmul@a+2
  3437  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  3438  0E9D  0852               	movf	(_Vaccum0+1)^(0+128),w
  3439  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  3440  0E9F  00AE               	movwf	___flmul@a+1
  3441  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  3442  0EA1  0851               	movf	_Vaccum0^(0+128),w
  3443  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  3444  0EA3  00AD               	movwf	___flmul@a
  3445  0EA4  120A  118A  24BC  120A  158A  	fcall	___flmul
  3446  0EA9  082C               	movf	?___flmul+3,w
  3447  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  3448  0EAB  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3449  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3450  0EAD  082B               	movf	?___flmul+2,w
  3451  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  3452  0EAF  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3453  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  3454  0EB1  082A               	movf	?___flmul+1,w
  3455  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  3456  0EB3  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3457  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  3458  0EB5  0829               	movf	?___flmul,w
  3459  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  3460  0EB7  00D1               	movwf	_Vaccum0^(0+128)
  3461                           
  3462                           ;SlaveLiofilizadorVer1.c: 822:        Vaccum0+=150;
  3463  0EB8  3043               	movlw	67
  3464  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3465  0EBA  00CD               	movwf	___fladd@b+3
  3466  0EBB  3016               	movlw	22
  3467  0EBC  00CC               	movwf	___fladd@b+2
  3468  0EBD  3000               	movlw	0
  3469  0EBE  00CB               	movwf	___fladd@b+1
  3470  0EBF  3000               	movlw	0
  3471  0EC0  00CA               	movwf	___fladd@b
  3472  0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  3473  0EC2  0854               	movf	(_Vaccum0+3)^(0+128),w
  3474  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  3475  0EC4  00D1               	movwf	___fladd@a+3
  3476  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  3477  0EC6  0853               	movf	(_Vaccum0+2)^(0+128),w
  3478  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  3479  0EC8  00D0               	movwf	___fladd@a+2
  3480  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  3481  0ECA  0852               	movf	(_Vaccum0+1)^(0+128),w
  3482  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  3483  0ECC  00CF               	movwf	___fladd@a+1
  3484  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  3485  0ECE  0851               	movf	_Vaccum0^(0+128),w
  3486  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0ED0  00CE               	movwf	___fladd@a
  3488  0ED1  120A  158A  233C  120A  158A  	fcall	___fladd
  3489  0ED6  084D               	movf	?___fladd+3,w
  3490  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  3491  0ED8  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3492  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  3493  0EDA  084C               	movf	?___fladd+2,w
  3494  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  3495  0EDC  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3496  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  3497  0EDE  084B               	movf	?___fladd+1,w
  3498  0EDF  1683               	bsf	3,5	;RP0=1, select bank1
  3499  0EE0  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3500  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3501  0EE2  084A               	movf	?___fladd,w
  3502  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  3503  0EE4  00D1               	movwf	_Vaccum0^(0+128)
  3504                           
  3505                           ;SlaveLiofilizadorVer1.c: 824:        if(Vaccum0>2000)Vaccum0=2000;
  3506  0EE5  3044               	movlw	68
  3507  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3508  0EE7  00A3               	movwf	___flge@ff1+3
  3509  0EE8  30FA               	movlw	250
  3510  0EE9  00A2               	movwf	___flge@ff1+2
  3511  0EEA  3000               	movlw	0
  3512  0EEB  00A1               	movwf	___flge@ff1+1
  3513  0EEC  3000               	movlw	0
  3514  0EED  00A0               	movwf	___flge@ff1
  3515  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  3516  0EEF  0854               	movf	(_Vaccum0+3)^(0+128),w
  3517  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  3518  0EF1  00A7               	movwf	___flge@ff2+3
  3519  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3520  0EF3  0853               	movf	(_Vaccum0+2)^(0+128),w
  3521  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0EF5  00A6               	movwf	___flge@ff2+2
  3523  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  3524  0EF7  0852               	movf	(_Vaccum0+1)^(0+128),w
  3525  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0EF9  00A5               	movwf	___flge@ff2+1
  3527  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  3528  0EFB  0851               	movf	_Vaccum0^(0+128),w
  3529  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  3530  0EFD  00A4               	movwf	___flge@ff2
  3531  0EFE  160A  118A  205A  120A  158A  	fcall	___flge
  3532  0F03  1803               	btfsc	3,0
  3533  0F04  0008               	return
  3534  0F05  3044               	movlw	68
  3535  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  3536  0F07  00D4               	movwf	(_Vaccum0+3)^(0+128)
  3537  0F08  30FA               	movlw	250
  3538  0F09  00D3               	movwf	(_Vaccum0+2)^(0+128)
  3539  0F0A  3000               	movlw	0
  3540  0F0B  00D2               	movwf	(_Vaccum0+1)^(0+128)
  3541  0F0C  3000               	movlw	0
  3542  0F0D  00D1               	movwf	_Vaccum0^(0+128)
  3543  0F0E  0008               	return
  3544  0F0F                     l303:	
  3545                           ;SlaveLiofilizadorVer1.c: 827:      else
  3546                           
  3547                           
  3548                           ;SlaveLiofilizadorVer1.c: 828:        {;SlaveLiofilizadorVer1.c: 829:        ADCON1bits.
      +                          VCFG0=0;
  3549  0F0F  121F               	bcf	31,4	;volatile
  3550                           
  3551                           ;SlaveLiofilizadorVer1.c: 830:        ADCON1bits.VCFG1=0;
  3552  0F10  129F               	bcf	31,5	;volatile
  3553                           
  3554                           ;SlaveLiofilizadorVer1.c: 831:        ADCON0bits.CHS=canal;
  3555  0F11  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3556  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  3557  0F13  00E6               	movwf	??_MediaPlacaVaccum
  3558  0F14  0DE6               	rlf	??_MediaPlacaVaccum,f
  3559  0F15  0DE6               	rlf	??_MediaPlacaVaccum,f
  3560  0F16  081F               	movf	31,w	;volatile
  3561  0F17  0666               	xorwf	??_MediaPlacaVaccum,w
  3562  0F18  39C3               	andlw	-61
  3563  0F19  0666               	xorwf	??_MediaPlacaVaccum,w
  3564  0F1A  009F               	movwf	31	;volatile
  3565                           
  3566                           ;SlaveLiofilizadorVer1.c: 832:        my_delay_ms(10);
  3567  0F1B  3000               	movlw	0
  3568  0F1C  00A3               	movwf	my_delay_ms@time+3
  3569  0F1D  3000               	movlw	0
  3570  0F1E  00A2               	movwf	my_delay_ms@time+2
  3571  0F1F  3000               	movlw	0
  3572  0F20  00A1               	movwf	my_delay_ms@time+1
  3573  0F21  300A               	movlw	10
  3574  0F22  00A0               	movwf	my_delay_ms@time
  3575  0F23  160A  158A  249E  120A  158A  	fcall	_my_delay_ms
  3576                           
  3577                           ;SlaveLiofilizadorVer1.c: 833:        Temp=0;
  3578  0F28  3000               	movlw	0
  3579  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  3580  0F2A  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3581  0F2B  3000               	movlw	0
  3582  0F2C  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3583  0F2D  3000               	movlw	0
  3584  0F2E  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3585  0F2F  3000               	movlw	0
  3586  0F30  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3587                           
  3588                           ;SlaveLiofilizadorVer1.c: 835:        for(i=1;i<15;i++)
  3589  0F31  3001               	movlw	1
  3590  0F32  00A9               	movwf	MediaPlacaVaccum@i^(0+128)
  3591  0F33  3000               	movlw	0
  3592  0F34  00AA               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3593  0F35                     l7230:	
  3594                           
  3595                           ;SlaveLiofilizadorVer1.c: 836:            {;SlaveLiofilizadorVer1.c: 837:            Val
      +                          or=ADC_Max_10Bits(canal);
  3596  0F35  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3597  0F36  160A  158A  25F9  120A  158A  	fcall	_ADC_Max_10Bits
  3598  0F3B  082A               	movf	?_ADC_Max_10Bits,w
  3599  0F3C  00E6               	movwf	??_MediaPlacaVaccum
  3600  0F3D  082B               	movf	?_ADC_Max_10Bits+1,w
  3601  0F3E  00E7               	movwf	??_MediaPlacaVaccum+1
  3602  0F3F  01E8               	clrf	??_MediaPlacaVaccum+2
  3603  0F40  01E9               	clrf	??_MediaPlacaVaccum+3
  3604  0F41  0869               	movf	??_MediaPlacaVaccum+3,w
  3605  0F42  00B6               	movwf	___xxtofl@val+3
  3606  0F43  0868               	movf	??_MediaPlacaVaccum+2,w
  3607  0F44  00B5               	movwf	___xxtofl@val+2
  3608  0F45  0867               	movf	??_MediaPlacaVaccum+1,w
  3609  0F46  00B4               	movwf	___xxtofl@val+1
  3610  0F47  0866               	movf	??_MediaPlacaVaccum,w
  3611  0F48  00B3               	movwf	___xxtofl@val
  3612  0F49  3000               	movlw	0
  3613  0F4A  160A  118A  20ED  120A  158A  	fcall	___xxtofl
  3614  0F4F  0836               	movf	?___xxtofl+3,w
  3615  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  3616  0F51  00A3               	movwf	(MediaPlacaVaccum@Valor+3)^(0+128)
  3617  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3618  0F53  0835               	movf	?___xxtofl+2,w
  3619  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  3620  0F55  00A2               	movwf	(MediaPlacaVaccum@Valor+2)^(0+128)
  3621  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  3622  0F57  0834               	movf	?___xxtofl+1,w
  3623  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3624  0F59  00A1               	movwf	(MediaPlacaVaccum@Valor+1)^(0+128)
  3625  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0F5B  0833               	movf	?___xxtofl,w
  3627  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  3628  0F5D  00A0               	movwf	MediaPlacaVaccum@Valor^(0+128)
  3629                           
  3630                           ;SlaveLiofilizadorVer1.c: 838:            if(Valor>Temp) Temp=Valor;
  3631  0F5E  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3632  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3633  0F60  00A3               	movwf	___flge@ff1+3
  3634  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  3635  0F62  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3636  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3637  0F64  00A2               	movwf	___flge@ff1+2
  3638  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  3639  0F66  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3640  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3641  0F68  00A1               	movwf	___flge@ff1+1
  3642  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  3643  0F6A  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3644  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3645  0F6C  00A0               	movwf	___flge@ff1
  3646  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  3647  0F6E  0823               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3648  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0F70  00A7               	movwf	___flge@ff2+3
  3650  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  3651  0F72  0822               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3652  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  3653  0F74  00A6               	movwf	___flge@ff2+2
  3654  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  3655  0F76  0821               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3656  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  3657  0F78  00A5               	movwf	___flge@ff2+1
  3658  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  3659  0F7A  0820               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3660  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  3661  0F7C  00A4               	movwf	___flge@ff2
  3662  0F7D  160A  118A  205A  120A  158A  	fcall	___flge
  3663  0F82  1803               	btfsc	3,0
  3664  0F83  2F8D               	goto	l7236
  3665  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  3666  0F85  0823               	movf	(MediaPlacaVaccum@Valor+3)^(0+128),w
  3667  0F86  00A8               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3668  0F87  0822               	movf	(MediaPlacaVaccum@Valor+2)^(0+128),w
  3669  0F88  00A7               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3670  0F89  0821               	movf	(MediaPlacaVaccum@Valor+1)^(0+128),w
  3671  0F8A  00A6               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3672  0F8B  0820               	movf	MediaPlacaVaccum@Valor^(0+128),w
  3673  0F8C  00A5               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3674  0F8D                     l7236:	
  3675                           
  3676                           ;SlaveLiofilizadorVer1.c: 839:            if(Package_Usart_is_for_me()==1) break;
  3677  0F8D  160A  158A  2173  120A  158A  	fcall	_Package_Usart_is_for_me
  3678  0F92  3A01               	xorlw	1
  3679  0F93  1903               	btfsc	3,2
  3680  0F94  2FA3               	goto	l7242
  3681                           
  3682                           ;SlaveLiofilizadorVer1.c: 840:            }
  3683  0F95  3001               	movlw	1
  3684  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  3685  0F97  07A9               	addwf	MediaPlacaVaccum@i^(0+128),f
  3686  0F98  1803               	skipnc
  3687  0F99  0AAA               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3688  0F9A  3000               	movlw	0
  3689  0F9B  07AA               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3690  0F9C  3000               	movlw	0
  3691  0F9D  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3692  0F9E  300F               	movlw	15
  3693  0F9F  1903               	skipnz
  3694  0FA0  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3695  0FA1  1C03               	skipc
  3696  0FA2  2F35               	goto	l7230
  3697  0FA3                     l7242:	
  3698                           
  3699                           ;SlaveLiofilizadorVer1.c: 841:         if(i<10)
  3700  0FA3  3000               	movlw	0
  3701  0FA4  1683               	bsf	3,5	;RP0=1, select bank1
  3702  0FA5  022A               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3703  0FA6  300A               	movlw	10
  3704  0FA7  1903               	skipnz
  3705  0FA8  0229               	subwf	MediaPlacaVaccum@i^(0+128),w
  3706  0FA9  1C03               	btfss	3,0
  3707  0FAA  0008               	return
  3708                           
  3709                           ;SlaveLiofilizadorVer1.c: 846:         Tensao1 =Temp*0.318296;
  3710  0FAB  303E               	movlw	62
  3711  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3712  0FAD  00AC               	movwf	___flmul@b+3
  3713  0FAE  30A2               	movlw	162
  3714  0FAF  00AB               	movwf	___flmul@b+2
  3715  0FB0  30F7               	movlw	247
  3716  0FB1  00AA               	movwf	___flmul@b+1
  3717  0FB2  30B1               	movlw	177
  3718  0FB3  00A9               	movwf	___flmul@b
  3719  0FB4  1683               	bsf	3,5	;RP0=1, select bank1
  3720  0FB5  0828               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3721  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3722  0FB7  00B0               	movwf	___flmul@a+3
  3723  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3724  0FB9  0827               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3725  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3726  0FBB  00AF               	movwf	___flmul@a+2
  3727  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  3728  0FBD  0826               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3729  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  3730  0FBF  00AE               	movwf	___flmul@a+1
  3731  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  3732  0FC1  0825               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3733  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3734  0FC3  00AD               	movwf	___flmul@a
  3735  0FC4  120A  118A  24BC  120A  158A  	fcall	___flmul
  3736  0FC9  082C               	movf	?___flmul+3,w
  3737  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  3738  0FCB  00D0               	movwf	(_Tensao1+3)^(0+128)
  3739  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3740  0FCD  082B               	movf	?___flmul+2,w
  3741  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  3742  0FCF  00CF               	movwf	(_Tensao1+2)^(0+128)
  3743  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3744  0FD1  082A               	movf	?___flmul+1,w
  3745  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  3746  0FD3  00CE               	movwf	(_Tensao1+1)^(0+128)
  3747  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3748  0FD5  0829               	movf	?___flmul,w
  3749  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3750  0FD7  00CD               	movwf	_Tensao1^(0+128)
  3751                           
  3752                           ;SlaveLiofilizadorVer1.c: 847:         if(Tensao1<15) Tensao1=0;
  3753  0FD8  0850               	movf	(_Tensao1+3)^(0+128),w
  3754  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  3755  0FDA  00A3               	movwf	___flge@ff1+3
  3756  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3757  0FDC  084F               	movf	(_Tensao1+2)^(0+128),w
  3758  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3759  0FDE  00A2               	movwf	___flge@ff1+2
  3760  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  3761  0FE0  084E               	movf	(_Tensao1+1)^(0+128),w
  3762  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3763  0FE2  00A1               	movwf	___flge@ff1+1
  3764  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  3765  0FE4  084D               	movf	_Tensao1^(0+128),w
  3766  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3767  0FE6  00A0               	movwf	___flge@ff1
  3768  0FE7  3041               	movlw	65
  3769  0FE8  00A7               	movwf	___flge@ff2+3
  3770  0FE9  3070               	movlw	112
  3771  0FEA  00A6               	movwf	___flge@ff2+2
  3772  0FEB  3000               	movlw	0
  3773  0FEC  00A5               	movwf	___flge@ff2+1
  3774  0FED  3000               	movlw	0
  3775  0FEE  00A4               	movwf	___flge@ff2
  3776  0FEF  160A  118A  205A  120A  158A  	fcall	___flge
  3777  0FF4  1803               	btfsc	3,0
  3778  0FF5  0008               	return
  3779  0FF6  3000               	movlw	0
  3780  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  3781  0FF8  00D0               	movwf	(_Tensao1+3)^(0+128)
  3782  0FF9  3000               	movlw	0
  3783  0FFA  00CF               	movwf	(_Tensao1+2)^(0+128)
  3784  0FFB  3000               	movlw	0
  3785  0FFC  00CE               	movwf	(_Tensao1+1)^(0+128)
  3786  0FFD  3000               	movlw	0
  3787  0FFE  00CD               	movwf	_Tensao1^(0+128)
  3788  0FFF  0008               	return
  3789  1000                     __end_of_MediaPlacaVaccum:	
  3790                           
  3791                           	psect	text4
  3792  19F7                     __ptext4:	
  3793 ;; *************** function ___flsub *****************
  3794 ;; Defined at:
  3795 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  a               4   62[BANK0 ] void 
  3798 ;;  b               4   66[BANK0 ] void 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  4   62[BANK0 ] void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 300/0
  3807 ;;		On exit  : 300/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3810 ;;      Params:         0       8       0       0       0
  3811 ;;      Locals:         0       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0
  3813 ;;      Totals:         0       8       0       0       0
  3814 ;;Total ram usage:        8 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    2
  3817 ;; This function calls:
  3818 ;;		___fladd
  3819 ;; This function is called by:
  3820 ;;		_MediaPlacaVaccum
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           
  3825                           ;psect for function ___flsub
  3826  19F7                     ___flsub:	
  3827                           
  3828                           ;incstack = 0
  3829                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3830  19F7  3080               	movlw	128
  3831  19F8  06E1               	xorwf	___flsub@a+3,f
  3832  19F9  0865               	movf	___flsub@b+3,w
  3833  19FA  00CD               	movwf	___fladd@b+3
  3834  19FB  0864               	movf	___flsub@b+2,w
  3835  19FC  00CC               	movwf	___fladd@b+2
  3836  19FD  0863               	movf	___flsub@b+1,w
  3837  19FE  00CB               	movwf	___fladd@b+1
  3838  19FF  0862               	movf	___flsub@b,w
  3839  1A00  00CA               	movwf	___fladd@b
  3840  1A01  0861               	movf	___flsub@a+3,w
  3841  1A02  00D1               	movwf	___fladd@a+3
  3842  1A03  0860               	movf	___flsub@a+2,w
  3843  1A04  00D0               	movwf	___fladd@a+2
  3844  1A05  085F               	movf	___flsub@a+1,w
  3845  1A06  00CF               	movwf	___fladd@a+1
  3846  1A07  085E               	movf	___flsub@a,w
  3847  1A08  00CE               	movwf	___fladd@a
  3848  1A09  120A  158A  233C   	fcall	___fladd
  3849  1A0C  084D               	movf	?___fladd+3,w
  3850  1A0D  00E1               	movwf	?___flsub+3
  3851  1A0E  084C               	movf	?___fladd+2,w
  3852  1A0F  00E0               	movwf	?___flsub+2
  3853  1A10  084B               	movf	?___fladd+1,w
  3854  1A11  00DF               	movwf	?___flsub+1
  3855  1A12  084A               	movf	?___fladd,w
  3856  1A13  00DE               	movwf	?___flsub
  3857  1A14  0008               	return
  3858  1A15                     __end_of___flsub:	
  3859                           
  3860                           	psect	text5
  3861  0B3C                     __ptext5:	
  3862 ;; *************** function ___fladd *****************
  3863 ;; Defined at:
  3864 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  b               4   42[BANK0 ] void 
  3867 ;;  a               4   46[BANK0 ] void 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  grs             1   61[BANK0 ] unsigned char 
  3870 ;;  bexp            1   60[BANK0 ] unsigned char 
  3871 ;;  aexp            1   59[BANK0 ] unsigned char 
  3872 ;;  signs           1   58[BANK0 ] unsigned char 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  4   42[BANK0 ] unsigned char 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0, btemp+1
  3877 ;; Tracked objects:
  3878 ;;		On entry : 300/0
  3879 ;;		On exit  : 300/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3882 ;;      Params:         0       8       0       0       0
  3883 ;;      Locals:         0       4       0       0       0
  3884 ;;      Temps:          0       8       0       0       0
  3885 ;;      Totals:         0      20       0       0       0
  3886 ;;Total ram usage:       20 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    1
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_MediaPlacaVaccum
  3893 ;;		___flsub
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           
  3898                           ;psect for function ___fladd
  3899  0B3C                     ___fladd:	
  3900                           
  3901                           ;incstack = 0
  3902                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3903  0B3C  084D               	movf	___fladd@b+3,w
  3904  0B3D  3980               	andlw	128
  3905  0B3E  00D2               	movwf	??___fladd
  3906  0B3F  0852               	movf	??___fladd,w
  3907  0B40  00DA               	movwf	___fladd@signs
  3908  0B41  084D               	movf	___fladd@b+3,w
  3909  0B42  00D2               	movwf	??___fladd
  3910  0B43  0752               	addwf	??___fladd,w
  3911  0B44  00D3               	movwf	??___fladd+1
  3912  0B45  0853               	movf	??___fladd+1,w
  3913  0B46  00DC               	movwf	___fladd@bexp
  3914  0B47  1BCC               	btfsc	___fladd@b+2,7
  3915  0B48  145C               	bsf	___fladd@bexp,0
  3916  0B49  085C               	movf	___fladd@bexp,w
  3917  0B4A  1903               	btfsc	3,2
  3918  0B4B  2B5A               	goto	l6104
  3919  0B4C  0A5C               	incf	___fladd@bexp,w
  3920  0B4D  1D03               	btfss	3,2
  3921  0B4E  2B57               	goto	l6100
  3922  0B4F  3000               	movlw	0
  3923  0B50  00CD               	movwf	___fladd@b+3
  3924  0B51  3000               	movlw	0
  3925  0B52  00CC               	movwf	___fladd@b+2
  3926  0B53  3000               	movlw	0
  3927  0B54  00CB               	movwf	___fladd@b+1
  3928  0B55  3000               	movlw	0
  3929  0B56  00CA               	movwf	___fladd@b
  3930  0B57                     l6100:	
  3931  0B57  17CC               	bsf	___fladd@b+2,7
  3932  0B58  01CD               	clrf	___fladd@b+3
  3933  0B59  2B62               	goto	l6106
  3934  0B5A                     l6104:	
  3935  0B5A  3000               	movlw	0
  3936  0B5B  00CD               	movwf	___fladd@b+3
  3937  0B5C  3000               	movlw	0
  3938  0B5D  00CC               	movwf	___fladd@b+2
  3939  0B5E  3000               	movlw	0
  3940  0B5F  00CB               	movwf	___fladd@b+1
  3941  0B60  3000               	movlw	0
  3942  0B61  00CA               	movwf	___fladd@b
  3943  0B62                     l6106:	
  3944  0B62  0851               	movf	___fladd@a+3,w
  3945  0B63  3980               	andlw	128
  3946  0B64  00D2               	movwf	??___fladd
  3947  0B65  0852               	movf	??___fladd,w
  3948  0B66  00DB               	movwf	___fladd@aexp
  3949  0B67  085B               	movf	___fladd@aexp,w
  3950  0B68  065A               	xorwf	___fladd@signs,w
  3951  0B69  1D03               	btfss	3,2
  3952  0B6A  175A               	bsf	___fladd@signs,6
  3953  0B6B  0851               	movf	___fladd@a+3,w
  3954  0B6C  00D2               	movwf	??___fladd
  3955  0B6D  0752               	addwf	??___fladd,w
  3956  0B6E  00D3               	movwf	??___fladd+1
  3957  0B6F  0853               	movf	??___fladd+1,w
  3958  0B70  00DB               	movwf	___fladd@aexp
  3959  0B71  1BD0               	btfsc	___fladd@a+2,7
  3960  0B72  145B               	bsf	___fladd@aexp,0
  3961  0B73  085B               	movf	___fladd@aexp,w
  3962  0B74  1903               	btfsc	3,2
  3963  0B75  2B84               	goto	l6128
  3964  0B76  0A5B               	incf	___fladd@aexp,w
  3965  0B77  1D03               	btfss	3,2
  3966  0B78  2B81               	goto	l6124
  3967  0B79  3000               	movlw	0
  3968  0B7A  00D1               	movwf	___fladd@a+3
  3969  0B7B  3000               	movlw	0
  3970  0B7C  00D0               	movwf	___fladd@a+2
  3971  0B7D  3000               	movlw	0
  3972  0B7E  00CF               	movwf	___fladd@a+1
  3973  0B7F  3000               	movlw	0
  3974  0B80  00CE               	movwf	___fladd@a
  3975  0B81                     l6124:	
  3976  0B81  17D0               	bsf	___fladd@a+2,7
  3977  0B82  01D1               	clrf	___fladd@a+3
  3978  0B83  2B8C               	goto	l1242
  3979  0B84                     l6128:	
  3980  0B84  3000               	movlw	0
  3981  0B85  00D1               	movwf	___fladd@a+3
  3982  0B86  3000               	movlw	0
  3983  0B87  00D0               	movwf	___fladd@a+2
  3984  0B88  3000               	movlw	0
  3985  0B89  00CF               	movwf	___fladd@a+1
  3986  0B8A  3000               	movlw	0
  3987  0B8B  00CE               	movwf	___fladd@a
  3988  0B8C                     l1242:	
  3989  0B8C  085C               	movf	___fladd@bexp,w
  3990  0B8D  025B               	subwf	___fladd@aexp,w
  3991  0B8E  1803               	skipnc
  3992  0B8F  2BD2               	goto	l6164
  3993  0B90  1F5A               	btfss	___fladd@signs,6
  3994  0B91  2B96               	goto	l6134
  3995  0B92  3080               	movlw	128
  3996  0B93  00D2               	movwf	??___fladd
  3997  0B94  0852               	movf	??___fladd,w
  3998  0B95  06DA               	xorwf	___fladd@signs,f
  3999  0B96                     l6134:	
  4000  0B96  085C               	movf	___fladd@bexp,w
  4001  0B97  00D2               	movwf	??___fladd
  4002  0B98  0852               	movf	??___fladd,w
  4003  0B99  00DD               	movwf	___fladd@grs
  4004  0B9A  085B               	movf	___fladd@aexp,w
  4005  0B9B  00D2               	movwf	??___fladd
  4006  0B9C  0852               	movf	??___fladd,w
  4007  0B9D  00DC               	movwf	___fladd@bexp
  4008  0B9E  085D               	movf	___fladd@grs,w
  4009  0B9F  00D2               	movwf	??___fladd
  4010  0BA0  0852               	movf	??___fladd,w
  4011  0BA1  00DB               	movwf	___fladd@aexp
  4012  0BA2  084A               	movf	___fladd@b,w
  4013  0BA3  00D2               	movwf	??___fladd
  4014  0BA4  0852               	movf	??___fladd,w
  4015  0BA5  00DD               	movwf	___fladd@grs
  4016  0BA6  084E               	movf	___fladd@a,w
  4017  0BA7  00D2               	movwf	??___fladd
  4018  0BA8  0852               	movf	??___fladd,w
  4019  0BA9  00CA               	movwf	___fladd@b
  4020  0BAA  085D               	movf	___fladd@grs,w
  4021  0BAB  00D2               	movwf	??___fladd
  4022  0BAC  0852               	movf	??___fladd,w
  4023  0BAD  00CE               	movwf	___fladd@a
  4024  0BAE  084B               	movf	___fladd@b+1,w
  4025  0BAF  00D2               	movwf	??___fladd
  4026  0BB0  0852               	movf	??___fladd,w
  4027  0BB1  00DD               	movwf	___fladd@grs
  4028  0BB2  084F               	movf	___fladd@a+1,w
  4029  0BB3  00D2               	movwf	??___fladd
  4030  0BB4  0852               	movf	??___fladd,w
  4031  0BB5  00CB               	movwf	___fladd@b+1
  4032  0BB6  085D               	movf	___fladd@grs,w
  4033  0BB7  00D2               	movwf	??___fladd
  4034  0BB8  0852               	movf	??___fladd,w
  4035  0BB9  00CF               	movwf	___fladd@a+1
  4036  0BBA  084C               	movf	___fladd@b+2,w
  4037  0BBB  00D2               	movwf	??___fladd
  4038  0BBC  0852               	movf	??___fladd,w
  4039  0BBD  00DD               	movwf	___fladd@grs
  4040  0BBE  0850               	movf	___fladd@a+2,w
  4041  0BBF  00D2               	movwf	??___fladd
  4042  0BC0  0852               	movf	??___fladd,w
  4043  0BC1  00CC               	movwf	___fladd@b+2
  4044  0BC2  085D               	movf	___fladd@grs,w
  4045  0BC3  00D2               	movwf	??___fladd
  4046  0BC4  0852               	movf	??___fladd,w
  4047  0BC5  00D0               	movwf	___fladd@a+2
  4048  0BC6  084D               	movf	___fladd@b+3,w
  4049  0BC7  00D2               	movwf	??___fladd
  4050  0BC8  0852               	movf	??___fladd,w
  4051  0BC9  00DD               	movwf	___fladd@grs
  4052  0BCA  0851               	movf	___fladd@a+3,w
  4053  0BCB  00D2               	movwf	??___fladd
  4054  0BCC  0852               	movf	??___fladd,w
  4055  0BCD  00CD               	movwf	___fladd@b+3
  4056  0BCE  085D               	movf	___fladd@grs,w
  4057  0BCF  00D2               	movwf	??___fladd
  4058  0BD0  0852               	movf	??___fladd,w
  4059  0BD1  00D1               	movwf	___fladd@a+3
  4060  0BD2                     l6164:	
  4061  0BD2  01DD               	clrf	___fladd@grs
  4062  0BD3  085B               	movf	___fladd@aexp,w
  4063  0BD4  00D2               	movwf	??___fladd
  4064  0BD5  01D3               	clrf	??___fladd+1
  4065  0BD6  0853               	movf	??___fladd+1,w
  4066  0BD7  00D5               	movwf	??___fladd+3
  4067  0BD8  085C               	movf	___fladd@bexp,w
  4068  0BD9  0252               	subwf	??___fladd,w
  4069  0BDA  00D4               	movwf	??___fladd+2
  4070  0BDB  1C03               	skipc
  4071  0BDC  03D5               	decf	??___fladd+3,f
  4072  0BDD  0855               	movf	??___fladd+3,w
  4073  0BDE  3A80               	xorlw	128
  4074  0BDF  00FF               	movwf	127
  4075  0BE0  3080               	movlw	128
  4076  0BE1  027F               	subwf	127,w
  4077  0BE2  1D03               	skipz
  4078  0BE3  2BE6               	goto	u6045
  4079  0BE4  301A               	movlw	26
  4080  0BE5  0254               	subwf	??___fladd+2,w
  4081  0BE6                     u6045:	
  4082  0BE6  1C03               	skipc
  4083  0BE7  2C1F               	goto	l6182
  4084  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  4085  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  4086  0BEA  084D               	movf	___fladd@b+3,w
  4087  0BEB  044C               	iorwf	___fladd@b+2,w
  4088  0BEC  044B               	iorwf	___fladd@b+1,w
  4089  0BED  044A               	iorwf	___fladd@b,w
  4090  0BEE  1903               	btfsc	3,2
  4091  0BEF  2BF2               	goto	u6050
  4092  0BF0  3001               	movlw	1
  4093  0BF1  2BF3               	goto	u6060
  4094  0BF2                     u6050:	
  4095  0BF2  3000               	movlw	0
  4096  0BF3                     u6060:	
  4097  0BF3  00D2               	movwf	??___fladd
  4098  0BF4  0852               	movf	??___fladd,w
  4099  0BF5  00DD               	movwf	___fladd@grs
  4100  0BF6  3000               	movlw	0
  4101  0BF7  00CD               	movwf	___fladd@b+3
  4102  0BF8  3000               	movlw	0
  4103  0BF9  00CC               	movwf	___fladd@b+2
  4104  0BFA  3000               	movlw	0
  4105  0BFB  00CB               	movwf	___fladd@b+1
  4106  0BFC  3000               	movlw	0
  4107  0BFD  00CA               	movwf	___fladd@b
  4108  0BFE  085B               	movf	___fladd@aexp,w
  4109  0BFF  00D2               	movwf	??___fladd
  4110  0C00  0852               	movf	??___fladd,w
  4111  0C01  00DC               	movwf	___fladd@bexp
  4112  0C02  2C25               	goto	l1246
  4113  0C03                     l1248:	
  4114  0C03  1C5D               	btfss	___fladd@grs,0
  4115  0C04  2C0E               	goto	l6172
  4116  0C05  085D               	movf	___fladd@grs,w
  4117  0C06  00D2               	movwf	??___fladd
  4118  0C07  1003               	clrc
  4119  0C08  0C52               	rrf	??___fladd,w
  4120  0C09  3801               	iorlw	1
  4121  0C0A  00D3               	movwf	??___fladd+1
  4122  0C0B  0853               	movf	??___fladd+1,w
  4123  0C0C  00DD               	movwf	___fladd@grs
  4124  0C0D  2C10               	goto	l6174
  4125  0C0E                     l6172:	
  4126  0C0E  1003               	clrc
  4127  0C0F  0CDD               	rrf	___fladd@grs,f
  4128  0C10                     l6174:	
  4129  0C10  184A               	btfsc	___fladd@b,0
  4130  0C11  17DD               	bsf	___fladd@grs,7
  4131  0C12  3001               	movlw	1
  4132  0C13  00D2               	movwf	??___fladd
  4133  0C14                     u6095:	
  4134  0C14  0D4D               	rlf	___fladd@b+3,w
  4135  0C15  0CCD               	rrf	___fladd@b+3,f
  4136  0C16  0CCC               	rrf	___fladd@b+2,f
  4137  0C17  0CCB               	rrf	___fladd@b+1,f
  4138  0C18  0CCA               	rrf	___fladd@b,f
  4139  0C19  0BD2               	decfsz	??___fladd& (0+127),f
  4140  0C1A  2C14               	goto	u6095
  4141  0C1B  3001               	movlw	1
  4142  0C1C  00D2               	movwf	??___fladd
  4143  0C1D  0852               	movf	??___fladd,w
  4144  0C1E  07DC               	addwf	___fladd@bexp,f
  4145  0C1F                     l6182:	
  4146  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  4147  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  4148  0C21  085B               	movf	___fladd@aexp,w
  4149  0C22  025C               	subwf	___fladd@bexp,w
  4150  0C23  1C03               	skipc
  4151  0C24  2C03               	goto	l1248
  4152  0C25                     l1246:	
  4153  0C25  1B5A               	btfsc	___fladd@signs,6
  4154  0C26  2C66               	goto	l6208
  4155  0C27  085C               	movf	___fladd@bexp,w
  4156  0C28  1D03               	btfss	3,2
  4157  0C29  2C33               	goto	l6190
  4158  0C2A  3000               	movlw	0
  4159  0C2B  00CD               	movwf	?___fladd+3
  4160  0C2C  3000               	movlw	0
  4161  0C2D  00CC               	movwf	?___fladd+2
  4162  0C2E  3000               	movlw	0
  4163  0C2F  00CB               	movwf	?___fladd+1
  4164  0C30  3000               	movlw	0
  4165  0C31  00CA               	movwf	?___fladd
  4166  0C32  0008               	return
  4167  0C33                     l6190:	
  4168  0C33  084E               	movf	___fladd@a,w
  4169  0C34  07CA               	addwf	___fladd@b,f
  4170  0C35  084F               	movf	___fladd@a+1,w
  4171  0C36  1103               	clrz
  4172  0C37  1803               	skipnc
  4173  0C38  3E01               	addlw	1
  4174  0C39  1D03               	btfss	3,2
  4175  0C3A  07CB               	addwf	___fladd@b+1,f
  4176  0C3B  0850               	movf	___fladd@a+2,w
  4177  0C3C  1103               	clrz
  4178  0C3D  1803               	skipnc
  4179  0C3E  3E01               	addlw	1
  4180  0C3F  1D03               	btfss	3,2
  4181  0C40  07CC               	addwf	___fladd@b+2,f
  4182  0C41  0851               	movf	___fladd@a+3,w
  4183  0C42  1103               	clrz
  4184  0C43  1803               	skipnc
  4185  0C44  3E01               	addlw	1
  4186  0C45  1D03               	btfss	3,2
  4187  0C46  07CD               	addwf	___fladd@b+3,f
  4188  0C47  1C4D               	btfss	___fladd@b+3,0
  4189  0C48  2D08               	goto	l6242
  4190  0C49  1C5D               	btfss	___fladd@grs,0
  4191  0C4A  2C54               	goto	l6198
  4192  0C4B  085D               	movf	___fladd@grs,w
  4193  0C4C  00D2               	movwf	??___fladd
  4194  0C4D  1003               	clrc
  4195  0C4E  0C52               	rrf	??___fladd,w
  4196  0C4F  3801               	iorlw	1
  4197  0C50  00D3               	movwf	??___fladd+1
  4198  0C51  0853               	movf	??___fladd+1,w
  4199  0C52  00DD               	movwf	___fladd@grs
  4200  0C53  2C56               	goto	l6200
  4201  0C54                     l6198:	
  4202  0C54  1003               	clrc
  4203  0C55  0CDD               	rrf	___fladd@grs,f
  4204  0C56                     l6200:	
  4205  0C56  184A               	btfsc	___fladd@b,0
  4206  0C57  17DD               	bsf	___fladd@grs,7
  4207  0C58  3001               	movlw	1
  4208  0C59  00D2               	movwf	??___fladd
  4209  0C5A                     u6175:	
  4210  0C5A  0D4D               	rlf	___fladd@b+3,w
  4211  0C5B  0CCD               	rrf	___fladd@b+3,f
  4212  0C5C  0CCC               	rrf	___fladd@b+2,f
  4213  0C5D  0CCB               	rrf	___fladd@b+1,f
  4214  0C5E  0CCA               	rrf	___fladd@b,f
  4215  0C5F  0BD2               	decfsz	??___fladd& (0+127),f
  4216  0C60  2C5A               	goto	u6175
  4217  0C61  3001               	movlw	1
  4218  0C62  00D2               	movwf	??___fladd
  4219  0C63  0852               	movf	??___fladd,w
  4220  0C64  07DC               	addwf	___fladd@bexp,f
  4221  0C65  2D08               	goto	l6242
  4222  0C66                     l6208:	
  4223  0C66  084D               	movf	___fladd@b+3,w
  4224  0C67  3A80               	xorlw	128
  4225  0C68  00FF               	movwf	127
  4226  0C69  0851               	movf	___fladd@a+3,w
  4227  0C6A  3A80               	xorlw	128
  4228  0C6B  027F               	subwf	127,w
  4229  0C6C  1D03               	skipz
  4230  0C6D  2C78               	goto	u6183
  4231  0C6E  0850               	movf	___fladd@a+2,w
  4232  0C6F  024C               	subwf	___fladd@b+2,w
  4233  0C70  1D03               	skipz
  4234  0C71  2C78               	goto	u6183
  4235  0C72  084F               	movf	___fladd@a+1,w
  4236  0C73  024B               	subwf	___fladd@b+1,w
  4237  0C74  1D03               	skipz
  4238  0C75  2C78               	goto	u6183
  4239  0C76  084E               	movf	___fladd@a,w
  4240  0C77  024A               	subwf	___fladd@b,w
  4241  0C78                     u6183:	
  4242  0C78  1803               	skipnc
  4243  0C79  2CD0               	goto	l6218
  4244  0C7A  30FF               	movlw	255
  4245  0C7B  00D2               	movwf	??___fladd
  4246  0C7C  30FF               	movlw	255
  4247  0C7D  00D3               	movwf	??___fladd+1
  4248  0C7E  30FF               	movlw	255
  4249  0C7F  00D4               	movwf	??___fladd+2
  4250  0C80  30FF               	movlw	255
  4251  0C81  00D5               	movwf	??___fladd+3
  4252  0C82  084E               	movf	___fladd@a,w
  4253  0C83  00D6               	movwf	??___fladd+4
  4254  0C84  084F               	movf	___fladd@a+1,w
  4255  0C85  00D7               	movwf	??___fladd+5
  4256  0C86  0850               	movf	___fladd@a+2,w
  4257  0C87  00D8               	movwf	??___fladd+6
  4258  0C88  0851               	movf	___fladd@a+3,w
  4259  0C89  00D9               	movwf	??___fladd+7
  4260  0C8A  084A               	movf	___fladd@b,w
  4261  0C8B  02D6               	subwf	??___fladd+4,f
  4262  0C8C  084B               	movf	___fladd@b+1,w
  4263  0C8D  1C03               	skipc
  4264  0C8E  0F4B               	incfsz	___fladd@b+1,w
  4265  0C8F  2C91               	goto	u6191
  4266  0C90  2C92               	goto	u6192
  4267  0C91                     u6191:	
  4268  0C91  02D7               	subwf	??___fladd+5,f
  4269  0C92                     u6192:	
  4270  0C92  084C               	movf	___fladd@b+2,w
  4271  0C93  1C03               	skipc
  4272  0C94  0F4C               	incfsz	___fladd@b+2,w
  4273  0C95  2C97               	goto	u6193
  4274  0C96  2C98               	goto	u6194
  4275  0C97                     u6193:	
  4276  0C97  02D8               	subwf	??___fladd+6,f
  4277  0C98                     u6194:	
  4278  0C98  084D               	movf	___fladd@b+3,w
  4279  0C99  1C03               	skipc
  4280  0C9A  0F4D               	incfsz	___fladd@b+3,w
  4281  0C9B  2C9D               	goto	u6195
  4282  0C9C  2C9E               	goto	u6196
  4283  0C9D                     u6195:	
  4284  0C9D  02D9               	subwf	??___fladd+7,f
  4285  0C9E                     u6196:	
  4286  0C9E  0856               	movf	??___fladd+4,w
  4287  0C9F  07D2               	addwf	??___fladd,f
  4288  0CA0  0857               	movf	??___fladd+5,w
  4289  0CA1  1803               	skipnc
  4290  0CA2  0F57               	incfsz	??___fladd+5,w
  4291  0CA3  2CA5               	goto	u6200
  4292  0CA4  2CA6               	goto	u6201
  4293  0CA5                     u6200:	
  4294  0CA5  07D3               	addwf	??___fladd+1,f
  4295  0CA6                     u6201:	
  4296  0CA6  0858               	movf	??___fladd+6,w
  4297  0CA7  1803               	skipnc
  4298  0CA8  0F58               	incfsz	??___fladd+6,w
  4299  0CA9  2CAB               	goto	u6202
  4300  0CAA  2CAC               	goto	u6203
  4301  0CAB                     u6202:	
  4302  0CAB  07D4               	addwf	??___fladd+2,f
  4303  0CAC                     u6203:	
  4304  0CAC  0859               	movf	??___fladd+7,w
  4305  0CAD  1803               	skipnc
  4306  0CAE  0A59               	incf	??___fladd+7,w
  4307  0CAF  07D5               	addwf	??___fladd+3,f
  4308  0CB0  0855               	movf	??___fladd+3,w
  4309  0CB1  00CD               	movwf	___fladd@b+3
  4310  0CB2  0854               	movf	??___fladd+2,w
  4311  0CB3  00CC               	movwf	___fladd@b+2
  4312  0CB4  0853               	movf	??___fladd+1,w
  4313  0CB5  00CB               	movwf	___fladd@b+1
  4314  0CB6  0852               	movf	??___fladd,w
  4315  0CB7  00CA               	movwf	___fladd@b
  4316  0CB8  3080               	movlw	128
  4317  0CB9  00D2               	movwf	??___fladd
  4318  0CBA  0852               	movf	??___fladd,w
  4319  0CBB  06DA               	xorwf	___fladd@signs,f
  4320  0CBC  09DD               	comf	___fladd@grs,f
  4321  0CBD  0ADD               	incf	___fladd@grs,f
  4322  0CBE  085D               	movf	___fladd@grs,w
  4323  0CBF  1D03               	btfss	3,2
  4324  0CC0  2CDE               	goto	l1263
  4325  0CC1  3001               	movlw	1
  4326  0CC2  07CA               	addwf	___fladd@b,f
  4327  0CC3  3000               	movlw	0
  4328  0CC4  1803               	skipnc
  4329  0CC5  3001               	movlw	1
  4330  0CC6  07CB               	addwf	___fladd@b+1,f
  4331  0CC7  3000               	movlw	0
  4332  0CC8  1803               	skipnc
  4333  0CC9  3001               	movlw	1
  4334  0CCA  07CC               	addwf	___fladd@b+2,f
  4335  0CCB  3000               	movlw	0
  4336  0CCC  1803               	skipnc
  4337  0CCD  3001               	movlw	1
  4338  0CCE  07CD               	addwf	___fladd@b+3,f
  4339  0CCF  2CDE               	goto	l1263
  4340  0CD0                     l6218:	
  4341  0CD0  084E               	movf	___fladd@a,w
  4342  0CD1  02CA               	subwf	___fladd@b,f
  4343  0CD2  084F               	movf	___fladd@a+1,w
  4344  0CD3  1C03               	skipc
  4345  0CD4  0F4F               	incfsz	___fladd@a+1,w
  4346  0CD5  02CB               	subwf	___fladd@b+1,f
  4347  0CD6  0850               	movf	___fladd@a+2,w
  4348  0CD7  1C03               	skipc
  4349  0CD8  0F50               	incfsz	___fladd@a+2,w
  4350  0CD9  02CC               	subwf	___fladd@b+2,f
  4351  0CDA  0851               	movf	___fladd@a+3,w
  4352  0CDB  1C03               	skipc
  4353  0CDC  0F51               	incfsz	___fladd@a+3,w
  4354  0CDD  02CD               	subwf	___fladd@b+3,f
  4355  0CDE                     l1263:	
  4356  0CDE  084D               	movf	___fladd@b+3,w
  4357  0CDF  044C               	iorwf	___fladd@b+2,w
  4358  0CE0  044B               	iorwf	___fladd@b+1,w
  4359  0CE1  044A               	iorwf	___fladd@b,w
  4360  0CE2  1D03               	skipz
  4361  0CE3  2D06               	goto	l6240
  4362  0CE4  085D               	movf	___fladd@grs,w
  4363  0CE5  1D03               	btfss	3,2
  4364  0CE6  2D06               	goto	l6240
  4365  0CE7  3000               	movlw	0
  4366  0CE8  00CD               	movwf	?___fladd+3
  4367  0CE9  3000               	movlw	0
  4368  0CEA  00CC               	movwf	?___fladd+2
  4369  0CEB  3000               	movlw	0
  4370  0CEC  00CB               	movwf	?___fladd+1
  4371  0CED  3000               	movlw	0
  4372  0CEE  00CA               	movwf	?___fladd
  4373  0CEF  0008               	return
  4374  0CF0                     l6226:	
  4375  0CF0  3001               	movlw	1
  4376  0CF1  00D2               	movwf	??___fladd
  4377  0CF2                     u6245:	
  4378  0CF2  1003               	clrc
  4379  0CF3  0DCA               	rlf	___fladd@b,f
  4380  0CF4  0DCB               	rlf	___fladd@b+1,f
  4381  0CF5  0DCC               	rlf	___fladd@b+2,f
  4382  0CF6  0DCD               	rlf	___fladd@b+3,f
  4383  0CF7  0BD2               	decfsz	??___fladd,f
  4384  0CF8  2CF2               	goto	u6245
  4385  0CF9  1BDD               	btfsc	___fladd@grs,7
  4386  0CFA  144A               	bsf	___fladd@b,0
  4387  0CFB  1C5D               	btfss	___fladd@grs,0
  4388  0CFC  2CFF               	goto	l6234
  4389  0CFD  1403               	setc
  4390  0CFE  2D00               	goto	L3
  4391  0CFF                     l6234:	
  4392  0CFF  1003               	clrc
  4393  0D00                     L3:	
  4394  0D00  0DDD               	rlf	___fladd@grs,f
  4395  0D01  085C               	movf	___fladd@bexp,w
  4396  0D02  1903               	btfsc	3,2
  4397  0D03  2D06               	goto	l6240
  4398  0D04  3001               	movlw	1
  4399  0D05  02DC               	subwf	___fladd@bexp,f
  4400  0D06                     l6240:	
  4401  0D06  1FCC               	btfss	___fladd@b+2,7
  4402  0D07  2CF0               	goto	l6226
  4403  0D08                     l6242:	
  4404  0D08  01DB               	clrf	___fladd@aexp
  4405  0D09  1FDD               	btfss	___fladd@grs,7
  4406  0D0A  2D13               	goto	l6252
  4407  0D0B  085D               	movf	___fladd@grs,w
  4408  0D0C  397F               	andlw	127
  4409  0D0D  1903               	btfsc	3,2
  4410  0D0E  184A               	btfsc	___fladd@b,0
  4411  0D0F  2D11               	goto	l6248
  4412  0D10  2D13               	goto	l6252
  4413  0D11                     l6248:	
  4414  0D11  01DB               	clrf	___fladd@aexp
  4415  0D12  0ADB               	incf	___fladd@aexp,f
  4416  0D13                     l6252:	
  4417  0D13  085B               	movf	___fladd@aexp,w
  4418  0D14  1903               	btfsc	3,2
  4419  0D15  2D46               	goto	l1276
  4420  0D16  3001               	movlw	1
  4421  0D17  07CA               	addwf	___fladd@b,f
  4422  0D18  3000               	movlw	0
  4423  0D19  1803               	skipnc
  4424  0D1A  3001               	movlw	1
  4425  0D1B  07CB               	addwf	___fladd@b+1,f
  4426  0D1C  3000               	movlw	0
  4427  0D1D  1803               	skipnc
  4428  0D1E  3001               	movlw	1
  4429  0D1F  07CC               	addwf	___fladd@b+2,f
  4430  0D20  3000               	movlw	0
  4431  0D21  1803               	skipnc
  4432  0D22  3001               	movlw	1
  4433  0D23  07CD               	addwf	___fladd@b+3,f
  4434  0D24  1C4D               	btfss	___fladd@b+3,0
  4435  0D25  2D46               	goto	l1276
  4436  0D26  084A               	movf	___fladd@b,w
  4437  0D27  00D2               	movwf	??___fladd
  4438  0D28  084B               	movf	___fladd@b+1,w
  4439  0D29  00D3               	movwf	??___fladd+1
  4440  0D2A  084C               	movf	___fladd@b+2,w
  4441  0D2B  00D4               	movwf	??___fladd+2
  4442  0D2C  084D               	movf	___fladd@b+3,w
  4443  0D2D  00D5               	movwf	??___fladd+3
  4444  0D2E  3001               	movlw	1
  4445  0D2F  00D6               	movwf	??___fladd+4
  4446  0D30                     u6345:	
  4447  0D30  0D55               	rlf	??___fladd+3,w
  4448  0D31  0CD5               	rrf	??___fladd+3,f
  4449  0D32  0CD4               	rrf	??___fladd+2,f
  4450  0D33  0CD3               	rrf	??___fladd+1,f
  4451  0D34  0CD2               	rrf	??___fladd,f
  4452  0D35  0BD6               	decfsz	??___fladd+4,f
  4453  0D36  2D30               	goto	u6345
  4454  0D37  0855               	movf	??___fladd+3,w
  4455  0D38  00CD               	movwf	___fladd@b+3
  4456  0D39  0854               	movf	??___fladd+2,w
  4457  0D3A  00CC               	movwf	___fladd@b+2
  4458  0D3B  0853               	movf	??___fladd+1,w
  4459  0D3C  00CB               	movwf	___fladd@b+1
  4460  0D3D  0852               	movf	??___fladd,w
  4461  0D3E  00CA               	movwf	___fladd@b
  4462  0D3F  0A5C               	incf	___fladd@bexp,w
  4463  0D40  1903               	btfsc	3,2
  4464  0D41  2D46               	goto	l1276
  4465  0D42  3001               	movlw	1
  4466  0D43  00D2               	movwf	??___fladd
  4467  0D44  0852               	movf	??___fladd,w
  4468  0D45  07DC               	addwf	___fladd@bexp,f
  4469  0D46                     l1276:	
  4470  0D46  0A5C               	incf	___fladd@bexp,w
  4471  0D47  1D03               	btfss	3,2
  4472  0D48  085C               	movf	___fladd@bexp,w
  4473  0D49  1D03               	btfss	3,2
  4474  0D4A  2D56               	goto	l6270
  4475  0D4B  3000               	movlw	0
  4476  0D4C  00CD               	movwf	___fladd@b+3
  4477  0D4D  3000               	movlw	0
  4478  0D4E  00CC               	movwf	___fladd@b+2
  4479  0D4F  3000               	movlw	0
  4480  0D50  00CB               	movwf	___fladd@b+1
  4481  0D51  3000               	movlw	0
  4482  0D52  00CA               	movwf	___fladd@b
  4483  0D53  085C               	movf	___fladd@bexp,w
  4484  0D54  1903               	btfsc	3,2
  4485  0D55  01DA               	clrf	___fladd@signs
  4486  0D56                     l6270:	
  4487  0D56  1C5C               	btfss	___fladd@bexp,0
  4488  0D57  2D5A               	goto	l6274
  4489  0D58  17CC               	bsf	___fladd@b+2,7
  4490  0D59  2D5E               	goto	l1284
  4491  0D5A                     l6274:	
  4492  0D5A  307F               	movlw	127
  4493  0D5B  00D2               	movwf	??___fladd
  4494  0D5C  0852               	movf	??___fladd,w
  4495  0D5D  05CC               	andwf	___fladd@b+2,f
  4496  0D5E                     l1284:	
  4497  0D5E  085C               	movf	___fladd@bexp,w
  4498  0D5F  00D2               	movwf	??___fladd
  4499  0D60  1003               	clrc
  4500  0D61  0C52               	rrf	??___fladd,w
  4501  0D62  00D3               	movwf	??___fladd+1
  4502  0D63  0853               	movf	??___fladd+1,w
  4503  0D64  00CD               	movwf	___fladd@b+3
  4504  0D65  1FDA               	btfss	___fladd@signs,7
  4505  0D66  0008               	return
  4506  0D67  17CD               	bsf	___fladd@b+3,7
  4507  0D68  0008               	return
  4508  0D69                     __end_of___fladd:	
  4509                           
  4510                           	psect	text6
  4511  105A                     __ptext6:	
  4512 ;; *************** function ___flge *****************
  4513 ;; Defined at:
  4514 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  ff1             4    0[BANK0 ] unsigned char 
  4517 ;;  ff2             4    4[BANK0 ] unsigned char 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;		None
  4520 ;; Return value:  Size  Location     Type
  4521 ;;		None               void
  4522 ;; Registers used:
  4523 ;;		wreg, status,2, status,0
  4524 ;; Tracked objects:
  4525 ;;		On entry : 300/0
  4526 ;;		On exit  : 300/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4529 ;;      Params:         0       8       0       0       0
  4530 ;;      Locals:         0       0       0       0       0
  4531 ;;      Temps:          0       4       0       0       0
  4532 ;;      Totals:         0      12       0       0       0
  4533 ;;Total ram usage:       12 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    1
  4536 ;; This function calls:
  4537 ;;		Nothing
  4538 ;; This function is called by:
  4539 ;;		_MediaPlacaVaccum
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           
  4544                           ;psect for function ___flge
  4545  105A                     ___flge:	
  4546                           
  4547                           ;incstack = 0
  4548                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4549  105A  3000               	movlw	0
  4550  105B  0520               	andwf	___flge@ff1,w
  4551  105C  00A8               	movwf	??___flge
  4552  105D  3000               	movlw	0
  4553  105E  0521               	andwf	___flge@ff1+1,w
  4554  105F  00A9               	movwf	??___flge+1
  4555  1060  3080               	movlw	128
  4556  1061  0522               	andwf	___flge@ff1+2,w
  4557  1062  00AA               	movwf	??___flge+2
  4558  1063  307F               	movlw	127
  4559  1064  0523               	andwf	___flge@ff1+3,w
  4560  1065  00AB               	movwf	??___flge+3
  4561  1066  082B               	movf	??___flge+3,w
  4562  1067  042A               	iorwf	??___flge+2,w
  4563  1068  0429               	iorwf	??___flge+1,w
  4564  1069  0428               	iorwf	??___flge,w
  4565  106A  1D03               	skipz
  4566  106B  2874               	goto	l1123
  4567  106C  3000               	movlw	0
  4568  106D  00A3               	movwf	___flge@ff1+3
  4569  106E  3000               	movlw	0
  4570  106F  00A2               	movwf	___flge@ff1+2
  4571  1070  3000               	movlw	0
  4572  1071  00A1               	movwf	___flge@ff1+1
  4573  1072  3000               	movlw	0
  4574  1073  00A0               	movwf	___flge@ff1
  4575  1074                     l1123:	
  4576  1074  3000               	movlw	0
  4577  1075  0524               	andwf	___flge@ff2,w
  4578  1076  00A8               	movwf	??___flge
  4579  1077  3000               	movlw	0
  4580  1078  0525               	andwf	___flge@ff2+1,w
  4581  1079  00A9               	movwf	??___flge+1
  4582  107A  3080               	movlw	128
  4583  107B  0526               	andwf	___flge@ff2+2,w
  4584  107C  00AA               	movwf	??___flge+2
  4585  107D  307F               	movlw	127
  4586  107E  0527               	andwf	___flge@ff2+3,w
  4587  107F  00AB               	movwf	??___flge+3
  4588  1080  082B               	movf	??___flge+3,w
  4589  1081  042A               	iorwf	??___flge+2,w
  4590  1082  0429               	iorwf	??___flge+1,w
  4591  1083  0428               	iorwf	??___flge,w
  4592  1084  1D03               	skipz
  4593  1085  288E               	goto	l6942
  4594  1086  3000               	movlw	0
  4595  1087  00A7               	movwf	___flge@ff2+3
  4596  1088  3000               	movlw	0
  4597  1089  00A6               	movwf	___flge@ff2+2
  4598  108A  3000               	movlw	0
  4599  108B  00A5               	movwf	___flge@ff2+1
  4600  108C  3000               	movlw	0
  4601  108D  00A4               	movwf	___flge@ff2
  4602  108E                     l6942:	
  4603  108E  1FA3               	btfss	___flge@ff1+3,7
  4604  108F  28B4               	goto	l6946
  4605  1090  3000               	movlw	0
  4606  1091  00A8               	movwf	??___flge
  4607  1092  3000               	movlw	0
  4608  1093  00A9               	movwf	??___flge+1
  4609  1094  3000               	movlw	0
  4610  1095  00AA               	movwf	??___flge+2
  4611  1096  3080               	movlw	128
  4612  1097  00AB               	movwf	??___flge+3
  4613  1098  0820               	movf	___flge@ff1,w
  4614  1099  02A8               	subwf	??___flge,f
  4615  109A  0821               	movf	___flge@ff1+1,w
  4616  109B  1C03               	skipc
  4617  109C  0F21               	incfsz	___flge@ff1+1,w
  4618  109D  289F               	goto	u7361
  4619  109E  28A0               	goto	u7362
  4620  109F                     u7361:	
  4621  109F  02A9               	subwf	??___flge+1,f
  4622  10A0                     u7362:	
  4623  10A0  0822               	movf	___flge@ff1+2,w
  4624  10A1  1C03               	skipc
  4625  10A2  0F22               	incfsz	___flge@ff1+2,w
  4626  10A3  28A5               	goto	u7363
  4627  10A4  28A6               	goto	u7364
  4628  10A5                     u7363:	
  4629  10A5  02AA               	subwf	??___flge+2,f
  4630  10A6                     u7364:	
  4631  10A6  0823               	movf	___flge@ff1+3,w
  4632  10A7  1C03               	skipc
  4633  10A8  0F23               	incfsz	___flge@ff1+3,w
  4634  10A9  28AB               	goto	u7365
  4635  10AA  28AC               	goto	u7366
  4636  10AB                     u7365:	
  4637  10AB  02AB               	subwf	??___flge+3,f
  4638  10AC                     u7366:	
  4639  10AC  082B               	movf	??___flge+3,w
  4640  10AD  00A3               	movwf	___flge@ff1+3
  4641  10AE  082A               	movf	??___flge+2,w
  4642  10AF  00A2               	movwf	___flge@ff1+2
  4643  10B0  0829               	movf	??___flge+1,w
  4644  10B1  00A1               	movwf	___flge@ff1+1
  4645  10B2  0828               	movf	??___flge,w
  4646  10B3  00A0               	movwf	___flge@ff1
  4647  10B4                     l6946:	
  4648  10B4  1FA7               	btfss	___flge@ff2+3,7
  4649  10B5  28DA               	goto	l1126
  4650  10B6  3000               	movlw	0
  4651  10B7  00A8               	movwf	??___flge
  4652  10B8  3000               	movlw	0
  4653  10B9  00A9               	movwf	??___flge+1
  4654  10BA  3000               	movlw	0
  4655  10BB  00AA               	movwf	??___flge+2
  4656  10BC  3080               	movlw	128
  4657  10BD  00AB               	movwf	??___flge+3
  4658  10BE  0824               	movf	___flge@ff2,w
  4659  10BF  02A8               	subwf	??___flge,f
  4660  10C0  0825               	movf	___flge@ff2+1,w
  4661  10C1  1C03               	skipc
  4662  10C2  0F25               	incfsz	___flge@ff2+1,w
  4663  10C3  28C5               	goto	u7381
  4664  10C4  28C6               	goto	u7382
  4665  10C5                     u7381:	
  4666  10C5  02A9               	subwf	??___flge+1,f
  4667  10C6                     u7382:	
  4668  10C6  0826               	movf	___flge@ff2+2,w
  4669  10C7  1C03               	skipc
  4670  10C8  0F26               	incfsz	___flge@ff2+2,w
  4671  10C9  28CB               	goto	u7383
  4672  10CA  28CC               	goto	u7384
  4673  10CB                     u7383:	
  4674  10CB  02AA               	subwf	??___flge+2,f
  4675  10CC                     u7384:	
  4676  10CC  0827               	movf	___flge@ff2+3,w
  4677  10CD  1C03               	skipc
  4678  10CE  0F27               	incfsz	___flge@ff2+3,w
  4679  10CF  28D1               	goto	u7385
  4680  10D0  28D2               	goto	u7386
  4681  10D1                     u7385:	
  4682  10D1  02AB               	subwf	??___flge+3,f
  4683  10D2                     u7386:	
  4684  10D2  082B               	movf	??___flge+3,w
  4685  10D3  00A7               	movwf	___flge@ff2+3
  4686  10D4  082A               	movf	??___flge+2,w
  4687  10D5  00A6               	movwf	___flge@ff2+2
  4688  10D6  0829               	movf	??___flge+1,w
  4689  10D7  00A5               	movwf	___flge@ff2+1
  4690  10D8  0828               	movf	??___flge,w
  4691  10D9  00A4               	movwf	___flge@ff2
  4692  10DA                     l1126:	
  4693  10DA  3080               	movlw	128
  4694  10DB  06A3               	xorwf	___flge@ff1+3,f
  4695  10DC  3080               	movlw	128
  4696  10DD  06A7               	xorwf	___flge@ff2+3,f
  4697  10DE  0827               	movf	___flge@ff2+3,w
  4698  10DF  0223               	subwf	___flge@ff1+3,w
  4699  10E0  1D03               	skipz
  4700  10E1  0008               	return
  4701  10E2  0826               	movf	___flge@ff2+2,w
  4702  10E3  0222               	subwf	___flge@ff1+2,w
  4703  10E4  1D03               	skipz
  4704  10E5  0008               	return
  4705  10E6  0825               	movf	___flge@ff2+1,w
  4706  10E7  0221               	subwf	___flge@ff1+1,w
  4707  10E8  1D03               	skipz
  4708  10E9  0008               	return
  4709  10EA  0824               	movf	___flge@ff2,w
  4710  10EB  0220               	subwf	___flge@ff1,w
  4711  10EC  0008               	return
  4712  10ED                     __end_of___flge:	
  4713                           
  4714                           	psect	text7
  4715  099B                     __ptext7:	
  4716 ;; *************** function ___fldiv *****************
  4717 ;; Defined at:
  4718 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;  a               4   33[BANK0 ] unsigned char 
  4721 ;;  b               4   37[BANK0 ] unsigned char 
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;  grs             4   53[BANK0 ] unsigned long 
  4724 ;;  rem             4   46[BANK0 ] unsigned long 
  4725 ;;  new_exp         2   51[BANK0 ] int 
  4726 ;;  aexp            1   58[BANK0 ] unsigned char 
  4727 ;;  bexp            1   57[BANK0 ] unsigned char 
  4728 ;;  sign            1   50[BANK0 ] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  4   33[BANK0 ] unsigned char 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0, btemp+1
  4733 ;; Tracked objects:
  4734 ;;		On entry : 300/0
  4735 ;;		On exit  : 300/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4738 ;;      Params:         0       8       0       0       0
  4739 ;;      Locals:         0      13       0       0       0
  4740 ;;      Temps:          0       5       0       0       0
  4741 ;;      Totals:         0      26       0       0       0
  4742 ;;Total ram usage:       26 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:    1
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_MediaPlacaVaccum
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           
  4753                           ;psect for function ___fldiv
  4754  099B                     ___fldiv:	
  4755                           
  4756                           ;incstack = 0
  4757                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4758  099B  0848               	movf	___fldiv@b+3,w
  4759  099C  3980               	andlw	128
  4760  099D  00C9               	movwf	??___fldiv
  4761  099E  0849               	movf	??___fldiv,w
  4762  099F  00D2               	movwf	___fldiv@sign
  4763  09A0  0848               	movf	___fldiv@b+3,w
  4764  09A1  00C9               	movwf	??___fldiv
  4765  09A2  0749               	addwf	??___fldiv,w
  4766  09A3  00CA               	movwf	??___fldiv+1
  4767  09A4  084A               	movf	??___fldiv+1,w
  4768  09A5  00D9               	movwf	___fldiv@bexp
  4769  09A6  1BC7               	btfsc	___fldiv@b+2,7
  4770  09A7  1459               	bsf	___fldiv@bexp,0
  4771  09A8  0859               	movf	___fldiv@bexp,w
  4772  09A9  1903               	btfsc	3,2
  4773  09AA  29B9               	goto	l6980
  4774  09AB  0A59               	incf	___fldiv@bexp,w
  4775  09AC  1D03               	btfss	3,2
  4776  09AD  29B6               	goto	l6976
  4777  09AE  3000               	movlw	0
  4778  09AF  00C8               	movwf	___fldiv@b+3
  4779  09B0  3000               	movlw	0
  4780  09B1  00C7               	movwf	___fldiv@b+2
  4781  09B2  3000               	movlw	0
  4782  09B3  00C6               	movwf	___fldiv@b+1
  4783  09B4  3000               	movlw	0
  4784  09B5  00C5               	movwf	___fldiv@b
  4785  09B6                     l6976:	
  4786  09B6  17C7               	bsf	___fldiv@b+2,7
  4787  09B7  01C8               	clrf	___fldiv@b+3
  4788  09B8  29C1               	goto	l6982
  4789  09B9                     l6980:	
  4790  09B9  3000               	movlw	0
  4791  09BA  00C8               	movwf	___fldiv@b+3
  4792  09BB  3000               	movlw	0
  4793  09BC  00C7               	movwf	___fldiv@b+2
  4794  09BD  3000               	movlw	0
  4795  09BE  00C6               	movwf	___fldiv@b+1
  4796  09BF  3000               	movlw	0
  4797  09C0  00C5               	movwf	___fldiv@b
  4798  09C1                     l6982:	
  4799  09C1  0844               	movf	___fldiv@a+3,w
  4800  09C2  3980               	andlw	128
  4801  09C3  00C9               	movwf	??___fldiv
  4802  09C4  0849               	movf	??___fldiv,w
  4803  09C5  06D2               	xorwf	___fldiv@sign,f
  4804  09C6  0844               	movf	___fldiv@a+3,w
  4805  09C7  00C9               	movwf	??___fldiv
  4806  09C8  0749               	addwf	??___fldiv,w
  4807  09C9  00CA               	movwf	??___fldiv+1
  4808  09CA  084A               	movf	??___fldiv+1,w
  4809  09CB  00DA               	movwf	___fldiv@aexp
  4810  09CC  1BC3               	btfsc	___fldiv@a+2,7
  4811  09CD  145A               	bsf	___fldiv@aexp,0
  4812  09CE  085A               	movf	___fldiv@aexp,w
  4813  09CF  1903               	btfsc	3,2
  4814  09D0  29DF               	goto	l7000
  4815  09D1  0A5A               	incf	___fldiv@aexp,w
  4816  09D2  1D03               	btfss	3,2
  4817  09D3  29DC               	goto	l6996
  4818  09D4  3000               	movlw	0
  4819  09D5  00C4               	movwf	___fldiv@a+3
  4820  09D6  3000               	movlw	0
  4821  09D7  00C3               	movwf	___fldiv@a+2
  4822  09D8  3000               	movlw	0
  4823  09D9  00C2               	movwf	___fldiv@a+1
  4824  09DA  3000               	movlw	0
  4825  09DB  00C1               	movwf	___fldiv@a
  4826  09DC                     l6996:	
  4827  09DC  17C3               	bsf	___fldiv@a+2,7
  4828  09DD  01C4               	clrf	___fldiv@a+3
  4829  09DE  29E7               	goto	l1298
  4830  09DF                     l7000:	
  4831  09DF  3000               	movlw	0
  4832  09E0  00C4               	movwf	___fldiv@a+3
  4833  09E1  3000               	movlw	0
  4834  09E2  00C3               	movwf	___fldiv@a+2
  4835  09E3  3000               	movlw	0
  4836  09E4  00C2               	movwf	___fldiv@a+1
  4837  09E5  3000               	movlw	0
  4838  09E6  00C1               	movwf	___fldiv@a
  4839  09E7                     l1298:	
  4840  09E7  0844               	movf	___fldiv@a+3,w
  4841  09E8  0443               	iorwf	___fldiv@a+2,w
  4842  09E9  0442               	iorwf	___fldiv@a+1,w
  4843  09EA  0441               	iorwf	___fldiv@a,w
  4844  09EB  1D03               	skipz
  4845  09EC  2A06               	goto	l7010
  4846  09ED  3000               	movlw	0
  4847  09EE  00C8               	movwf	___fldiv@b+3
  4848  09EF  3000               	movlw	0
  4849  09F0  00C7               	movwf	___fldiv@b+2
  4850  09F1  3000               	movlw	0
  4851  09F2  00C6               	movwf	___fldiv@b+1
  4852  09F3  3000               	movlw	0
  4853  09F4  00C5               	movwf	___fldiv@b
  4854  09F5  3080               	movlw	128
  4855  09F6  04C7               	iorwf	___fldiv@b+2,f
  4856  09F7  307F               	movlw	127
  4857  09F8  04C8               	iorwf	___fldiv@b+3,f
  4858  09F9                     L5:	
  4859  09F9  0852               	movf	___fldiv@sign,w
  4860  09FA  00C9               	movwf	??___fldiv
  4861  09FB  0849               	movf	??___fldiv,w
  4862  09FC  04C8               	iorwf	___fldiv@b+3,f
  4863  09FD  0848               	movf	___fldiv@b+3,w
  4864  09FE  00C4               	movwf	?___fldiv+3
  4865  09FF  0847               	movf	___fldiv@b+2,w
  4866  0A00  00C3               	movwf	?___fldiv+2
  4867  0A01  0846               	movf	___fldiv@b+1,w
  4868  0A02  00C2               	movwf	?___fldiv+1
  4869  0A03  0845               	movf	___fldiv@b,w
  4870  0A04  00C1               	movwf	?___fldiv
  4871  0A05  0008               	return
  4872  0A06                     l7010:	
  4873  0A06  0859               	movf	___fldiv@bexp,w
  4874  0A07  1D03               	btfss	3,2
  4875  0A08  2A12               	goto	l7016
  4876  0A09  3000               	movlw	0
  4877  0A0A  00C4               	movwf	?___fldiv+3
  4878  0A0B  3000               	movlw	0
  4879  0A0C  00C3               	movwf	?___fldiv+2
  4880  0A0D  3000               	movlw	0
  4881  0A0E  00C2               	movwf	?___fldiv+1
  4882  0A0F  3000               	movlw	0
  4883  0A10  00C1               	movwf	?___fldiv
  4884  0A11  0008               	return
  4885  0A12                     l7016:	
  4886  0A12  0859               	movf	___fldiv@bexp,w
  4887  0A13  00C9               	movwf	??___fldiv
  4888  0A14  01CA               	clrf	??___fldiv+1
  4889  0A15  084A               	movf	??___fldiv+1,w
  4890  0A16  00CC               	movwf	??___fldiv+3
  4891  0A17  085A               	movf	___fldiv@aexp,w
  4892  0A18  0249               	subwf	??___fldiv,w
  4893  0A19  00CB               	movwf	??___fldiv+2
  4894  0A1A  1C03               	skipc
  4895  0A1B  03CC               	decf	??___fldiv+3,f
  4896  0A1C  084B               	movf	??___fldiv+2,w
  4897  0A1D  3E7F               	addlw	127
  4898  0A1E  00D3               	movwf	___fldiv@new_exp
  4899  0A1F  084C               	movf	??___fldiv+3,w
  4900  0A20  1803               	skipnc
  4901  0A21  3E01               	addlw	1
  4902  0A22  3E00               	addlw	0
  4903  0A23  00D4               	movwf	___fldiv@new_exp+1
  4904  0A24  0848               	movf	___fldiv@b+3,w
  4905  0A25  00D1               	movwf	___fldiv@rem+3
  4906  0A26  0847               	movf	___fldiv@b+2,w
  4907  0A27  00D0               	movwf	___fldiv@rem+2
  4908  0A28  0846               	movf	___fldiv@b+1,w
  4909  0A29  00CF               	movwf	___fldiv@rem+1
  4910  0A2A  0845               	movf	___fldiv@b,w
  4911  0A2B  00CE               	movwf	___fldiv@rem
  4912  0A2C  3000               	movlw	0
  4913  0A2D  00C8               	movwf	___fldiv@b+3
  4914  0A2E  3000               	movlw	0
  4915  0A2F  00C7               	movwf	___fldiv@b+2
  4916  0A30  3000               	movlw	0
  4917  0A31  00C6               	movwf	___fldiv@b+1
  4918  0A32  3000               	movlw	0
  4919  0A33  00C5               	movwf	___fldiv@b
  4920  0A34  3000               	movlw	0
  4921  0A35  00D8               	movwf	___fldiv@grs+3
  4922  0A36  3000               	movlw	0
  4923  0A37  00D7               	movwf	___fldiv@grs+2
  4924  0A38  3000               	movlw	0
  4925  0A39  00D6               	movwf	___fldiv@grs+1
  4926  0A3A  3000               	movlw	0
  4927  0A3B  00D5               	movwf	___fldiv@grs
  4928  0A3C  01DA               	clrf	___fldiv@aexp
  4929  0A3D                     l7044:	
  4930  0A3D  301A               	movlw	26
  4931  0A3E  025A               	subwf	___fldiv@aexp,w
  4932  0A3F  1803               	btfsc	3,0
  4933  0A40  2A85               	goto	l7046
  4934  0A41  085A               	movf	___fldiv@aexp,w
  4935  0A42  1903               	btfsc	3,2
  4936  0A43  2A61               	goto	l7036
  4937  0A44  3001               	movlw	1
  4938  0A45  00C9               	movwf	??___fldiv
  4939  0A46                     u7495:	
  4940  0A46  1003               	clrc
  4941  0A47  0DCE               	rlf	___fldiv@rem,f
  4942  0A48  0DCF               	rlf	___fldiv@rem+1,f
  4943  0A49  0DD0               	rlf	___fldiv@rem+2,f
  4944  0A4A  0DD1               	rlf	___fldiv@rem+3,f
  4945  0A4B  0BC9               	decfsz	??___fldiv,f
  4946  0A4C  2A46               	goto	u7495
  4947  0A4D  3001               	movlw	1
  4948  0A4E  00C9               	movwf	??___fldiv
  4949  0A4F                     u7505:	
  4950  0A4F  1003               	clrc
  4951  0A50  0DC5               	rlf	___fldiv@b,f
  4952  0A51  0DC6               	rlf	___fldiv@b+1,f
  4953  0A52  0DC7               	rlf	___fldiv@b+2,f
  4954  0A53  0DC8               	rlf	___fldiv@b+3,f
  4955  0A54  0BC9               	decfsz	??___fldiv,f
  4956  0A55  2A4F               	goto	u7505
  4957  0A56  1BD8               	btfsc	___fldiv@grs+3,7
  4958  0A57  1445               	bsf	___fldiv@b,0
  4959  0A58  3001               	movlw	1
  4960  0A59  00C9               	movwf	??___fldiv
  4961  0A5A                     u7525:	
  4962  0A5A  1003               	clrc
  4963  0A5B  0DD5               	rlf	___fldiv@grs,f
  4964  0A5C  0DD6               	rlf	___fldiv@grs+1,f
  4965  0A5D  0DD7               	rlf	___fldiv@grs+2,f
  4966  0A5E  0DD8               	rlf	___fldiv@grs+3,f
  4967  0A5F  0BC9               	decfsz	??___fldiv,f
  4968  0A60  2A5A               	goto	u7525
  4969  0A61                     l7036:	
  4970  0A61  0844               	movf	___fldiv@a+3,w
  4971  0A62  0251               	subwf	___fldiv@rem+3,w
  4972  0A63  1D03               	skipz
  4973  0A64  2A6F               	goto	u7535
  4974  0A65  0843               	movf	___fldiv@a+2,w
  4975  0A66  0250               	subwf	___fldiv@rem+2,w
  4976  0A67  1D03               	skipz
  4977  0A68  2A6F               	goto	u7535
  4978  0A69  0842               	movf	___fldiv@a+1,w
  4979  0A6A  024F               	subwf	___fldiv@rem+1,w
  4980  0A6B  1D03               	skipz
  4981  0A6C  2A6F               	goto	u7535
  4982  0A6D  0841               	movf	___fldiv@a,w
  4983  0A6E  024E               	subwf	___fldiv@rem,w
  4984  0A6F                     u7535:	
  4985  0A6F  1C03               	skipc
  4986  0A70  2A80               	goto	l7042
  4987  0A71  1758               	bsf	___fldiv@grs+3,6
  4988  0A72  0841               	movf	___fldiv@a,w
  4989  0A73  02CE               	subwf	___fldiv@rem,f
  4990  0A74  0842               	movf	___fldiv@a+1,w
  4991  0A75  1C03               	skipc
  4992  0A76  0F42               	incfsz	___fldiv@a+1,w
  4993  0A77  02CF               	subwf	___fldiv@rem+1,f
  4994  0A78  0843               	movf	___fldiv@a+2,w
  4995  0A79  1C03               	skipc
  4996  0A7A  0F43               	incfsz	___fldiv@a+2,w
  4997  0A7B  02D0               	subwf	___fldiv@rem+2,f
  4998  0A7C  0844               	movf	___fldiv@a+3,w
  4999  0A7D  1C03               	skipc
  5000  0A7E  0F44               	incfsz	___fldiv@a+3,w
  5001  0A7F  02D1               	subwf	___fldiv@rem+3,f
  5002  0A80                     l7042:	
  5003  0A80  3001               	movlw	1
  5004  0A81  00C9               	movwf	??___fldiv
  5005  0A82  0849               	movf	??___fldiv,w
  5006  0A83  07DA               	addwf	___fldiv@aexp,f
  5007  0A84  2A3D               	goto	l7044
  5008  0A85                     l7046:	
  5009  0A85  0851               	movf	___fldiv@rem+3,w
  5010  0A86  0450               	iorwf	___fldiv@rem+2,w
  5011  0A87  044F               	iorwf	___fldiv@rem+1,w
  5012  0A88  044E               	iorwf	___fldiv@rem,w
  5013  0A89  1D03               	btfss	3,2
  5014  0A8A  1455               	bsf	___fldiv@grs,0
  5015  0A8B                     l7060:	
  5016  0A8B  1BC7               	btfsc	___fldiv@b+2,7
  5017  0A8C  2AA8               	goto	l7062
  5018  0A8D  3001               	movlw	1
  5019  0A8E  00C9               	movwf	??___fldiv
  5020  0A8F                     u7565:	
  5021  0A8F  1003               	clrc
  5022  0A90  0DC5               	rlf	___fldiv@b,f
  5023  0A91  0DC6               	rlf	___fldiv@b+1,f
  5024  0A92  0DC7               	rlf	___fldiv@b+2,f
  5025  0A93  0DC8               	rlf	___fldiv@b+3,f
  5026  0A94  0BC9               	decfsz	??___fldiv,f
  5027  0A95  2A8F               	goto	u7565
  5028  0A96  1BD8               	btfsc	___fldiv@grs+3,7
  5029  0A97  1445               	bsf	___fldiv@b,0
  5030  0A98  3001               	movlw	1
  5031  0A99  00C9               	movwf	??___fldiv
  5032  0A9A                     u7585:	
  5033  0A9A  1003               	clrc
  5034  0A9B  0DD5               	rlf	___fldiv@grs,f
  5035  0A9C  0DD6               	rlf	___fldiv@grs+1,f
  5036  0A9D  0DD7               	rlf	___fldiv@grs+2,f
  5037  0A9E  0DD8               	rlf	___fldiv@grs+3,f
  5038  0A9F  0BC9               	decfsz	??___fldiv,f
  5039  0AA0  2A9A               	goto	u7585
  5040  0AA1  30FF               	movlw	255
  5041  0AA2  07D3               	addwf	___fldiv@new_exp,f
  5042  0AA3  1803               	skipnc
  5043  0AA4  0AD4               	incf	___fldiv@new_exp+1,f
  5044  0AA5  30FF               	movlw	255
  5045  0AA6  07D4               	addwf	___fldiv@new_exp+1,f
  5046  0AA7  2A8B               	goto	l7060
  5047  0AA8                     l7062:	
  5048  0AA8  01DA               	clrf	___fldiv@aexp
  5049  0AA9  1FD8               	btfss	___fldiv@grs+3,7
  5050  0AAA  2AC1               	goto	l7072
  5051  0AAB  30FF               	movlw	255
  5052  0AAC  0555               	andwf	___fldiv@grs,w
  5053  0AAD  00C9               	movwf	??___fldiv
  5054  0AAE  30FF               	movlw	255
  5055  0AAF  0556               	andwf	___fldiv@grs+1,w
  5056  0AB0  00CA               	movwf	??___fldiv+1
  5057  0AB1  30FF               	movlw	255
  5058  0AB2  0557               	andwf	___fldiv@grs+2,w
  5059  0AB3  00CB               	movwf	??___fldiv+2
  5060  0AB4  307F               	movlw	127
  5061  0AB5  0558               	andwf	___fldiv@grs+3,w
  5062  0AB6  00CC               	movwf	??___fldiv+3
  5063  0AB7  084C               	movf	??___fldiv+3,w
  5064  0AB8  044B               	iorwf	??___fldiv+2,w
  5065  0AB9  044A               	iorwf	??___fldiv+1,w
  5066  0ABA  0449               	iorwf	??___fldiv,w
  5067  0ABB  1903               	skipnz
  5068  0ABC  1845               	btfsc	___fldiv@b,0
  5069  0ABD  2ABF               	goto	l7068
  5070  0ABE  2AC1               	goto	l7072
  5071  0ABF                     l7068:	
  5072  0ABF  01DA               	clrf	___fldiv@aexp
  5073  0AC0  0ADA               	incf	___fldiv@aexp,f
  5074  0AC1                     l7072:	
  5075  0AC1  085A               	movf	___fldiv@aexp,w
  5076  0AC2  1903               	btfsc	3,2
  5077  0AC3  2AF3               	goto	l7082
  5078  0AC4  3001               	movlw	1
  5079  0AC5  07C5               	addwf	___fldiv@b,f
  5080  0AC6  3000               	movlw	0
  5081  0AC7  1803               	skipnc
  5082  0AC8  3001               	movlw	1
  5083  0AC9  07C6               	addwf	___fldiv@b+1,f
  5084  0ACA  3000               	movlw	0
  5085  0ACB  1803               	skipnc
  5086  0ACC  3001               	movlw	1
  5087  0ACD  07C7               	addwf	___fldiv@b+2,f
  5088  0ACE  3000               	movlw	0
  5089  0ACF  1803               	skipnc
  5090  0AD0  3001               	movlw	1
  5091  0AD1  07C8               	addwf	___fldiv@b+3,f
  5092  0AD2  1C48               	btfss	___fldiv@b+3,0
  5093  0AD3  2AF3               	goto	l7082
  5094  0AD4  0845               	movf	___fldiv@b,w
  5095  0AD5  00C9               	movwf	??___fldiv
  5096  0AD6  0846               	movf	___fldiv@b+1,w
  5097  0AD7  00CA               	movwf	??___fldiv+1
  5098  0AD8  0847               	movf	___fldiv@b+2,w
  5099  0AD9  00CB               	movwf	??___fldiv+2
  5100  0ADA  0848               	movf	___fldiv@b+3,w
  5101  0ADB  00CC               	movwf	??___fldiv+3
  5102  0ADC  3001               	movlw	1
  5103  0ADD  00CD               	movwf	??___fldiv+4
  5104  0ADE                     u7655:	
  5105  0ADE  0D4C               	rlf	??___fldiv+3,w
  5106  0ADF  0CCC               	rrf	??___fldiv+3,f
  5107  0AE0  0CCB               	rrf	??___fldiv+2,f
  5108  0AE1  0CCA               	rrf	??___fldiv+1,f
  5109  0AE2  0CC9               	rrf	??___fldiv,f
  5110  0AE3  0BCD               	decfsz	??___fldiv+4,f
  5111  0AE4  2ADE               	goto	u7655
  5112  0AE5  084C               	movf	??___fldiv+3,w
  5113  0AE6  00C8               	movwf	___fldiv@b+3
  5114  0AE7  084B               	movf	??___fldiv+2,w
  5115  0AE8  00C7               	movwf	___fldiv@b+2
  5116  0AE9  084A               	movf	??___fldiv+1,w
  5117  0AEA  00C6               	movwf	___fldiv@b+1
  5118  0AEB  0849               	movf	??___fldiv,w
  5119  0AEC  00C5               	movwf	___fldiv@b
  5120  0AED  3001               	movlw	1
  5121  0AEE  07D3               	addwf	___fldiv@new_exp,f
  5122  0AEF  1803               	skipnc
  5123  0AF0  0AD4               	incf	___fldiv@new_exp+1,f
  5124  0AF1  3000               	movlw	0
  5125  0AF2  07D4               	addwf	___fldiv@new_exp+1,f
  5126  0AF3                     l7082:	
  5127  0AF3  0854               	movf	___fldiv@new_exp+1,w
  5128  0AF4  3A80               	xorlw	128
  5129  0AF5  00FF               	movwf	127
  5130  0AF6  3080               	movlw	128
  5131  0AF7  027F               	subwf	127,w
  5132  0AF8  1D03               	skipz
  5133  0AF9  2AFC               	goto	u7665
  5134  0AFA  30FF               	movlw	255
  5135  0AFB  0253               	subwf	___fldiv@new_exp,w
  5136  0AFC                     u7665:	
  5137  0AFC  1C03               	skipc
  5138  0AFD  2B0C               	goto	l7086
  5139  0AFE  30FF               	movlw	255
  5140  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  5141  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  5142  0B01  00D3               	movwf	___fldiv@new_exp
  5143  0B02  3000               	movlw	0
  5144  0B03  00D4               	movwf	___fldiv@new_exp+1
  5145  0B04  3000               	movlw	0
  5146  0B05  00C8               	movwf	___fldiv@b+3
  5147  0B06  3000               	movlw	0
  5148  0B07  00C7               	movwf	___fldiv@b+2
  5149  0B08  3000               	movlw	0
  5150  0B09  00C6               	movwf	___fldiv@b+1
  5151  0B0A  3000               	movlw	0
  5152  0B0B  00C5               	movwf	___fldiv@b
  5153  0B0C                     l7086:	
  5154  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  5155  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  5156  0B0E  0854               	movf	___fldiv@new_exp+1,w
  5157  0B0F  3A80               	xorlw	128
  5158  0B10  00FF               	movwf	127
  5159  0B11  3080               	movlw	128
  5160  0B12  027F               	subwf	127,w
  5161  0B13  1D03               	skipz
  5162  0B14  2B17               	goto	u7675
  5163  0B15  3001               	movlw	1
  5164  0B16  0253               	subwf	___fldiv@new_exp,w
  5165  0B17                     u7675:	
  5166  0B17  1803               	skipnc
  5167  0B18  2B26               	goto	l1320
  5168  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  5169  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  5170  0B1B  01D3               	clrf	___fldiv@new_exp
  5171  0B1C  01D4               	clrf	___fldiv@new_exp+1
  5172  0B1D  3000               	movlw	0
  5173  0B1E  00C8               	movwf	___fldiv@b+3
  5174  0B1F  3000               	movlw	0
  5175  0B20  00C7               	movwf	___fldiv@b+2
  5176  0B21  3000               	movlw	0
  5177  0B22  00C6               	movwf	___fldiv@b+1
  5178  0B23  3000               	movlw	0
  5179  0B24  00C5               	movwf	___fldiv@b
  5180  0B25  01D2               	clrf	___fldiv@sign
  5181  0B26                     l1320:	
  5182  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  5183  0B27  1303               	bcf	3,6	;RP1=0, select bank0
  5184  0B28  0853               	movf	___fldiv@new_exp,w
  5185  0B29  00C9               	movwf	??___fldiv
  5186  0B2A  0849               	movf	??___fldiv,w
  5187  0B2B  00D9               	movwf	___fldiv@bexp
  5188  0B2C  1C59               	btfss	___fldiv@bexp,0
  5189  0B2D  2B30               	goto	l7098
  5190  0B2E  17C7               	bsf	___fldiv@b+2,7
  5191  0B2F  2B34               	goto	l1322
  5192  0B30                     l7098:	
  5193  0B30  307F               	movlw	127
  5194  0B31  00C9               	movwf	??___fldiv
  5195  0B32  0849               	movf	??___fldiv,w
  5196  0B33  05C7               	andwf	___fldiv@b+2,f
  5197  0B34                     l1322:	
  5198  0B34  0859               	movf	___fldiv@bexp,w
  5199  0B35  00C9               	movwf	??___fldiv
  5200  0B36  1003               	clrc
  5201  0B37  0C49               	rrf	??___fldiv,w
  5202  0B38  00CA               	movwf	??___fldiv+1
  5203  0B39  084A               	movf	??___fldiv+1,w
  5204  0B3A  00C8               	movwf	___fldiv@b+3
  5205  0B3B  29F9               	goto	L5
  5206  0B3C                     __end_of___fldiv:	
  5207                           
  5208                           	psect	text8
  5209  1973                     __ptext8:	
  5210 ;; *************** function _Package_Usart_is_for_me *****************
  5211 ;; Defined at:
  5212 ;;		line 8 in file "protocolo.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;		None
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;  retorno         1    0[BANK0 ] unsigned char 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  1    wreg      unsigned char 
  5219 ;; Registers used:
  5220 ;;		wreg, status,2, status,0
  5221 ;; Tracked objects:
  5222 ;;		On entry : 200/100
  5223 ;;		On exit  : 300/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5226 ;;      Params:         0       0       0       0       0
  5227 ;;      Locals:         0       1       0       0       0
  5228 ;;      Temps:          0       0       0       0       0
  5229 ;;      Totals:         0       1       0       0       0
  5230 ;;Total ram usage:        1 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:    1
  5233 ;; This function calls:
  5234 ;;		Nothing
  5235 ;; This function is called by:
  5236 ;;		_MediaPlacaVaccum
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           
  5241                           ;psect for function _Package_Usart_is_for_me
  5242  1973                     _Package_Usart_is_for_me:	
  5243                           
  5244                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5245                           
  5246                           ;incstack = 0
  5247                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5248  1973  1683               	bsf	3,5	;RP0=1, select bank1
  5249  1974  1C69               	btfss	_generic_status^(0+128),0
  5250  1975  2985               	goto	l6876
  5251                           
  5252                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5253  1976  1703               	bsf	3,6	;RP1=1, select bank3
  5254  1977  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  5255  1978  1303               	bcf	3,6	;RP1=0, select bank1
  5256  1979  0663               	xorwf	_Board_Number^(0+128),w
  5257  197A  1903               	skipnz
  5258  197B  2980               	goto	l678
  5259  197C  1703               	bsf	3,6	;RP1=1, select bank3
  5260  197D  0A13               	incf	(_usart_buffer^(0+384)+3),w	;volatile
  5261  197E  1D03               	btfss	3,2
  5262  197F  2985               	goto	l6876
  5263  1980                     l678:	
  5264                           
  5265                           ;protocolo.c: 13:             retorno=1;
  5266  1980  1283               	bcf	3,5	;RP0=0, select bank0
  5267  1981  1303               	bcf	3,6	;RP1=0, select bank0
  5268  1982  01A0               	clrf	Package_Usart_is_for_me@retorno
  5269  1983  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5270  1984  2988               	goto	l6880
  5271  1985                     l6876:	
  5272                           
  5273                           ;protocolo.c: 15:             retorno=0;
  5274  1985  1283               	bcf	3,5	;RP0=0, select bank0
  5275  1986  1303               	bcf	3,6	;RP1=0, select bank0
  5276  1987  01A0               	clrf	Package_Usart_is_for_me@retorno
  5277  1988                     l6880:	
  5278                           
  5279                           ;protocolo.c: 21:      return retorno;
  5280  1988  0820               	movf	Package_Usart_is_for_me@retorno,w
  5281  1989  0008               	return
  5282  198A                     __end_of_Package_Usart_is_for_me:	
  5283                           
  5284                           	psect	text9
  5285  1004                     __ptext9:	
  5286 ;; *************** function _ADC_Media_10bits *****************
  5287 ;; Defined at:
  5288 ;;		line 20 in file "adc.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;  canal           1    wreg     unsigned char 
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;  canal           1   38[BANK0 ] unsigned char 
  5293 ;;  value           2   39[BANK0 ] unsigned int 
  5294 ;;  i               1   41[BANK0 ] unsigned char 
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  4   33[BANK0 ] float 
  5297 ;; Registers used:
  5298 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5299 ;; Tracked objects:
  5300 ;;		On entry : 300/100
  5301 ;;		On exit  : 300/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5304 ;;      Params:         0       4       0       0       0
  5305 ;;      Locals:         0       4       0       0       0
  5306 ;;      Temps:          0       1       0       0       0
  5307 ;;      Totals:         0       9       0       0       0
  5308 ;;Total ram usage:        9 bytes
  5309 ;; Hardware stack levels used:    1
  5310 ;; Hardware stack levels required when called:    2
  5311 ;; This function calls:
  5312 ;;		___lwdiv
  5313 ;;		___xxtofl
  5314 ;;		_captura
  5315 ;;		_my_delay_ms
  5316 ;; This function is called by:
  5317 ;;		_MediaPlacaVaccum
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           
  5322                           ;psect for function _ADC_Media_10bits
  5323  1004                     _ADC_Media_10bits:	
  5324                           
  5325                           ;incstack = 0
  5326                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5327                           ;ADC_Media_10bits@canal stored from wreg
  5328  1004  1283               	bcf	3,5	;RP0=0, select bank0
  5329  1005  00C6               	movwf	ADC_Media_10bits@canal
  5330                           
  5331                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5332  1006  0846               	movf	ADC_Media_10bits@canal,w
  5333  1007  00C5               	movwf	??_ADC_Media_10bits
  5334  1008  0DC5               	rlf	??_ADC_Media_10bits,f
  5335  1009  0DC5               	rlf	??_ADC_Media_10bits,f
  5336  100A  081F               	movf	31,w	;volatile
  5337  100B  0645               	xorwf	??_ADC_Media_10bits,w
  5338  100C  39C3               	andlw	-61
  5339  100D  0645               	xorwf	??_ADC_Media_10bits,w
  5340  100E  009F               	movwf	31	;volatile
  5341                           
  5342                           ;adc.c: 24:       my_delay_ms(10);
  5343  100F  3000               	movlw	0
  5344  1010  00A3               	movwf	my_delay_ms@time+3
  5345  1011  3000               	movlw	0
  5346  1012  00A2               	movwf	my_delay_ms@time+2
  5347  1013  3000               	movlw	0
  5348  1014  00A1               	movwf	my_delay_ms@time+1
  5349  1015  300A               	movlw	10
  5350  1016  00A0               	movwf	my_delay_ms@time
  5351  1017  160A  158A  249E  160A  118A  	fcall	_my_delay_ms
  5352                           
  5353                           ;adc.c: 26:       value=0;
  5354  101C  01C7               	clrf	ADC_Media_10bits@value
  5355  101D  01C8               	clrf	ADC_Media_10bits@value+1
  5356                           
  5357                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5358  101E  01C9               	clrf	ADC_Media_10bits@i
  5359  101F  0AC9               	incf	ADC_Media_10bits@i,f
  5360  1020                     l6858:	
  5361                           
  5362                           ;adc.c: 28:           value+=captura();
  5363  1020  160A  158A  20F6  160A  118A  	fcall	_captura
  5364  1025  0820               	movf	?_captura,w
  5365  1026  07C7               	addwf	ADC_Media_10bits@value,f
  5366  1027  1803               	skipnc
  5367  1028  0AC8               	incf	ADC_Media_10bits@value+1,f
  5368  1029  0821               	movf	?_captura+1,w
  5369  102A  07C8               	addwf	ADC_Media_10bits@value+1,f
  5370  102B  3001               	movlw	1
  5371  102C  00C5               	movwf	??_ADC_Media_10bits
  5372  102D  0845               	movf	??_ADC_Media_10bits,w
  5373  102E  07C9               	addwf	ADC_Media_10bits@i,f
  5374  102F  3033               	movlw	51
  5375  1030  0249               	subwf	ADC_Media_10bits@i,w
  5376  1031  1C03               	skipc
  5377  1032  2820               	goto	l6858
  5378                           
  5379                           ;adc.c: 29:       value/=(i-1);
  5380  1033  0849               	movf	ADC_Media_10bits@i,w
  5381  1034  3EFF               	addlw	255
  5382  1035  00A0               	movwf	___lwdiv@divisor
  5383  1036  30FF               	movlw	255
  5384  1037  1803               	skipnc
  5385  1038  3000               	movlw	0
  5386  1039  00A1               	movwf	___lwdiv@divisor+1
  5387  103A  0848               	movf	ADC_Media_10bits@value+1,w
  5388  103B  00A3               	movwf	___lwdiv@dividend+1
  5389  103C  0847               	movf	ADC_Media_10bits@value,w
  5390  103D  00A2               	movwf	___lwdiv@dividend
  5391  103E  160A  158A  2581  160A  118A  	fcall	___lwdiv
  5392  1043  0821               	movf	?___lwdiv+1,w
  5393  1044  00C8               	movwf	ADC_Media_10bits@value+1
  5394  1045  0820               	movf	?___lwdiv,w
  5395  1046  00C7               	movwf	ADC_Media_10bits@value
  5396                           
  5397                           ;adc.c: 30:       return value;
  5398  1047  0847               	movf	ADC_Media_10bits@value,w
  5399  1048  00B3               	movwf	___xxtofl@val
  5400  1049  0848               	movf	ADC_Media_10bits@value+1,w
  5401  104A  00B4               	movwf	___xxtofl@val+1
  5402  104B  01B5               	clrf	___xxtofl@val+2
  5403  104C  01B6               	clrf	___xxtofl@val+3
  5404  104D  3000               	movlw	0
  5405  104E  160A  118A  20ED   	fcall	___xxtofl
  5406  1051  0836               	movf	?___xxtofl+3,w
  5407  1052  00C4               	movwf	?_ADC_Media_10bits+3
  5408  1053  0835               	movf	?___xxtofl+2,w
  5409  1054  00C3               	movwf	?_ADC_Media_10bits+2
  5410  1055  0834               	movf	?___xxtofl+1,w
  5411  1056  00C2               	movwf	?_ADC_Media_10bits+1
  5412  1057  0833               	movf	?___xxtofl,w
  5413  1058  00C1               	movwf	?_ADC_Media_10bits
  5414  1059  0008               	return
  5415  105A                     __end_of_ADC_Media_10bits:	
  5416                           
  5417                           	psect	text10
  5418  10ED                     __ptext10:	
  5419 ;; *************** function ___xxtofl *****************
  5420 ;; Defined at:
  5421 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  sign            1    wreg     unsigned char 
  5424 ;;  val             4   19[BANK0 ] long 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;  sign            1   27[BANK0 ] unsigned char 
  5427 ;;  arg             4   29[BANK0 ] unsigned long 
  5428 ;;  exp             1   28[BANK0 ] unsigned char 
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  4   19[BANK0 ] unsigned char 
  5431 ;; Registers used:
  5432 ;;		wreg, status,2, status,0
  5433 ;; Tracked objects:
  5434 ;;		On entry : 300/0
  5435 ;;		On exit  : 300/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5438 ;;      Params:         0       4       0       0       0
  5439 ;;      Locals:         0       6       0       0       0
  5440 ;;      Temps:          0       4       0       0       0
  5441 ;;      Totals:         0      14       0       0       0
  5442 ;;Total ram usage:       14 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; Hardware stack levels required when called:    1
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_MediaPlacaVaccum
  5449 ;;		_ADC_Media_10bits
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           
  5454                           ;psect for function ___xxtofl
  5455  10ED                     ___xxtofl:	
  5456                           
  5457                           ;incstack = 0
  5458                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5459                           ;___xxtofl@sign stored from wreg
  5460  10ED  00BB               	movwf	___xxtofl@sign
  5461  10EE  083B               	movf	___xxtofl@sign,w
  5462  10EF  1D03               	btfss	3,2
  5463  10F0  1FB6               	btfss	___xxtofl@val+3,7
  5464  10F1  2902               	goto	l6426
  5465  10F2  0933               	comf	___xxtofl@val,w
  5466  10F3  00BD               	movwf	___xxtofl@arg
  5467  10F4  0934               	comf	___xxtofl@val+1,w
  5468  10F5  00BE               	movwf	___xxtofl@arg+1
  5469  10F6  0935               	comf	___xxtofl@val+2,w
  5470  10F7  00BF               	movwf	___xxtofl@arg+2
  5471  10F8  0936               	comf	___xxtofl@val+3,w
  5472  10F9  00C0               	movwf	___xxtofl@arg+3
  5473  10FA  0ABD               	incf	___xxtofl@arg,f
  5474  10FB  1903               	skipnz
  5475  10FC  0ABE               	incf	___xxtofl@arg+1,f
  5476  10FD  1903               	skipnz
  5477  10FE  0ABF               	incf	___xxtofl@arg+2,f
  5478  10FF  1903               	skipnz
  5479  1100  0AC0               	incf	___xxtofl@arg+3,f
  5480  1101  290A               	goto	l1376
  5481  1102                     l6426:	
  5482  1102  0836               	movf	___xxtofl@val+3,w
  5483  1103  00C0               	movwf	___xxtofl@arg+3
  5484  1104  0835               	movf	___xxtofl@val+2,w
  5485  1105  00BF               	movwf	___xxtofl@arg+2
  5486  1106  0834               	movf	___xxtofl@val+1,w
  5487  1107  00BE               	movwf	___xxtofl@arg+1
  5488  1108  0833               	movf	___xxtofl@val,w
  5489  1109  00BD               	movwf	___xxtofl@arg
  5490  110A                     l1376:	
  5491  110A  0836               	movf	___xxtofl@val+3,w
  5492  110B  0435               	iorwf	___xxtofl@val+2,w
  5493  110C  0434               	iorwf	___xxtofl@val+1,w
  5494  110D  0433               	iorwf	___xxtofl@val,w
  5495  110E  1D03               	skipz
  5496  110F  2919               	goto	l6432
  5497  1110  3000               	movlw	0
  5498  1111  00B6               	movwf	?___xxtofl+3
  5499  1112  3000               	movlw	0
  5500  1113  00B5               	movwf	?___xxtofl+2
  5501  1114  3000               	movlw	0
  5502  1115  00B4               	movwf	?___xxtofl+1
  5503  1116  3000               	movlw	0
  5504  1117  00B3               	movwf	?___xxtofl
  5505  1118  0008               	return
  5506  1119                     l6432:	
  5507  1119  3096               	movlw	150
  5508  111A  00B7               	movwf	??___xxtofl
  5509  111B  0837               	movf	??___xxtofl,w
  5510  111C  00BC               	movwf	___xxtofl@exp
  5511  111D                     l6436:	
  5512  111D  30FE               	movlw	254
  5513  111E  0540               	andwf	___xxtofl@arg+3,w
  5514  111F  1903               	btfsc	3,2
  5515  1120  294A               	goto	l1382
  5516  1121  3001               	movlw	1
  5517  1122  00B7               	movwf	??___xxtofl
  5518  1123  0837               	movf	??___xxtofl,w
  5519  1124  07BC               	addwf	___xxtofl@exp,f
  5520  1125  3001               	movlw	1
  5521  1126                     u6805:	
  5522  1126  1003               	clrc
  5523  1127  0CC0               	rrf	___xxtofl@arg+3,f
  5524  1128  0CBF               	rrf	___xxtofl@arg+2,f
  5525  1129  0CBE               	rrf	___xxtofl@arg+1,f
  5526  112A  0CBD               	rrf	___xxtofl@arg,f
  5527  112B  3EFF               	addlw	-1
  5528  112C  1D03               	skipz
  5529  112D  2926               	goto	u6805
  5530  112E  291D               	goto	l6436
  5531  112F                     l6438:	
  5532  112F  3001               	movlw	1
  5533  1130  00B7               	movwf	??___xxtofl
  5534  1131  0837               	movf	??___xxtofl,w
  5535  1132  07BC               	addwf	___xxtofl@exp,f
  5536  1133  3001               	movlw	1
  5537  1134  07BD               	addwf	___xxtofl@arg,f
  5538  1135  3000               	movlw	0
  5539  1136  1803               	skipnc
  5540  1137  3001               	movlw	1
  5541  1138  07BE               	addwf	___xxtofl@arg+1,f
  5542  1139  3000               	movlw	0
  5543  113A  1803               	skipnc
  5544  113B  3001               	movlw	1
  5545  113C  07BF               	addwf	___xxtofl@arg+2,f
  5546  113D  3000               	movlw	0
  5547  113E  1803               	skipnc
  5548  113F  3001               	movlw	1
  5549  1140  07C0               	addwf	___xxtofl@arg+3,f
  5550  1141  3001               	movlw	1
  5551  1142                     u6825:	
  5552  1142  1003               	clrc
  5553  1143  0CC0               	rrf	___xxtofl@arg+3,f
  5554  1144  0CBF               	rrf	___xxtofl@arg+2,f
  5555  1145  0CBE               	rrf	___xxtofl@arg+1,f
  5556  1146  0CBD               	rrf	___xxtofl@arg,f
  5557  1147  3EFF               	addlw	-1
  5558  1148  1D03               	skipz
  5559  1149  2942               	goto	u6825
  5560  114A                     l1382:	
  5561  114A  30FF               	movlw	255
  5562  114B  0540               	andwf	___xxtofl@arg+3,w
  5563  114C  1903               	btfsc	3,2
  5564  114D  295E               	goto	l6446
  5565  114E  292F               	goto	l6438
  5566  114F                     l6448:	
  5567  114F  3002               	movlw	2
  5568  1150  023C               	subwf	___xxtofl@exp,w
  5569  1151  1C03               	btfss	3,0
  5570  1152  2960               	goto	l1389
  5571  1153  3001               	movlw	1
  5572  1154  02BC               	subwf	___xxtofl@exp,f
  5573  1155  3001               	movlw	1
  5574  1156  00B7               	movwf	??___xxtofl
  5575  1157                     u6845:	
  5576  1157  1003               	clrc
  5577  1158  0DBD               	rlf	___xxtofl@arg,f
  5578  1159  0DBE               	rlf	___xxtofl@arg+1,f
  5579  115A  0DBF               	rlf	___xxtofl@arg+2,f
  5580  115B  0DC0               	rlf	___xxtofl@arg+3,f
  5581  115C  0BB7               	decfsz	??___xxtofl,f
  5582  115D  2957               	goto	u6845
  5583  115E                     l6446:	
  5584  115E  1FBF               	btfss	___xxtofl@arg+2,7
  5585  115F  294F               	goto	l6448
  5586  1160                     l1389:	
  5587  1160  183C               	btfsc	___xxtofl@exp,0
  5588  1161  296A               	goto	l1390
  5589  1162  30FF               	movlw	255
  5590  1163  05BD               	andwf	___xxtofl@arg,f
  5591  1164  30FF               	movlw	255
  5592  1165  05BE               	andwf	___xxtofl@arg+1,f
  5593  1166  307F               	movlw	127
  5594  1167  05BF               	andwf	___xxtofl@arg+2,f
  5595  1168  30FF               	movlw	255
  5596  1169  05C0               	andwf	___xxtofl@arg+3,f
  5597  116A                     l1390:	
  5598  116A  1003               	clrc
  5599  116B  0CBC               	rrf	___xxtofl@exp,f
  5600  116C  083C               	movf	___xxtofl@exp,w
  5601  116D  00B7               	movwf	??___xxtofl
  5602  116E  01B8               	clrf	??___xxtofl+1
  5603  116F  01B9               	clrf	??___xxtofl+2
  5604  1170  01BA               	clrf	??___xxtofl+3
  5605  1171  3018               	movlw	24
  5606  1172                     u6885:	
  5607  1172  1003               	clrc
  5608  1173  0DB7               	rlf	??___xxtofl,f
  5609  1174  0DB8               	rlf	??___xxtofl+1,f
  5610  1175  0DB9               	rlf	??___xxtofl+2,f
  5611  1176  0DBA               	rlf	??___xxtofl+3,f
  5612  1177  3EFF               	addlw	-1
  5613  1178  1D03               	skipz
  5614  1179  2972               	goto	u6885
  5615  117A  0837               	movf	??___xxtofl,w
  5616  117B  04BD               	iorwf	___xxtofl@arg,f
  5617  117C  0838               	movf	??___xxtofl+1,w
  5618  117D  04BE               	iorwf	___xxtofl@arg+1,f
  5619  117E  0839               	movf	??___xxtofl+2,w
  5620  117F  04BF               	iorwf	___xxtofl@arg+2,f
  5621  1180  083A               	movf	??___xxtofl+3,w
  5622  1181  04C0               	iorwf	___xxtofl@arg+3,f
  5623  1182  083B               	movf	___xxtofl@sign,w
  5624  1183  1D03               	btfss	3,2
  5625  1184  1FB6               	btfss	___xxtofl@val+3,7
  5626  1185  2987               	goto	l6460
  5627  1186  17C0               	bsf	___xxtofl@arg+3,7
  5628  1187                     l6460:	
  5629  1187  0840               	movf	___xxtofl@arg+3,w
  5630  1188  00B6               	movwf	?___xxtofl+3
  5631  1189  083F               	movf	___xxtofl@arg+2,w
  5632  118A  00B5               	movwf	?___xxtofl+2
  5633  118B  083E               	movf	___xxtofl@arg+1,w
  5634  118C  00B4               	movwf	?___xxtofl+1
  5635  118D  083D               	movf	___xxtofl@arg,w
  5636  118E  00B3               	movwf	?___xxtofl
  5637  118F  0008               	return
  5638  1190                     __end_of___xxtofl:	
  5639                           
  5640                           	psect	text11
  5641  1DF9                     __ptext11:	
  5642 ;; *************** function _ADC_Max_10Bits *****************
  5643 ;; Defined at:
  5644 ;;		line 34 in file "adc.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  canal           1    wreg     unsigned char 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  canal           1   13[BANK0 ] unsigned char 
  5649 ;;  value           2   16[BANK0 ] unsigned int 
  5650 ;;  Temp            2   14[BANK0 ] unsigned int 
  5651 ;;  i               1   18[BANK0 ] unsigned char 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  2   10[BANK0 ] unsigned int 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5656 ;; Tracked objects:
  5657 ;;		On entry : 300/100
  5658 ;;		On exit  : 300/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5661 ;;      Params:         0       2       0       0       0
  5662 ;;      Locals:         0       6       0       0       0
  5663 ;;      Temps:          0       1       0       0       0
  5664 ;;      Totals:         0       9       0       0       0
  5665 ;;Total ram usage:        9 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    2
  5668 ;; This function calls:
  5669 ;;		_captura
  5670 ;;		_my_delay_ms
  5671 ;; This function is called by:
  5672 ;;		_MediaPlacaVaccum
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           
  5677                           ;psect for function _ADC_Max_10Bits
  5678  1DF9                     _ADC_Max_10Bits:	
  5679                           
  5680                           ;incstack = 0
  5681                           ; Regs used in _ADC_Max_10Bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5682                           ;ADC_Max_10Bits@canal stored from wreg
  5683  1DF9  1283               	bcf	3,5	;RP0=0, select bank0
  5684  1DFA  00AD               	movwf	ADC_Max_10Bits@canal
  5685                           
  5686                           ;adc.c: 35:       unsigned int Temp;;adc.c: 36:       unsigned int value;;adc.c: 37:    
      +                             unsigned char i;;adc.c: 38:       ADCON0bits.CHS=canal;
  5687  1DFB  082D               	movf	ADC_Max_10Bits@canal,w
  5688  1DFC  00AC               	movwf	??_ADC_Max_10Bits
  5689  1DFD  0DAC               	rlf	??_ADC_Max_10Bits,f
  5690  1DFE  0DAC               	rlf	??_ADC_Max_10Bits,f
  5691  1DFF  081F               	movf	31,w	;volatile
  5692  1E00  062C               	xorwf	??_ADC_Max_10Bits,w
  5693  1E01  39C3               	andlw	-61
  5694  1E02  062C               	xorwf	??_ADC_Max_10Bits,w
  5695  1E03  009F               	movwf	31	;volatile
  5696                           
  5697                           ;adc.c: 39:       my_delay_ms(10);
  5698  1E04  3000               	movlw	0
  5699  1E05  00A3               	movwf	my_delay_ms@time+3
  5700  1E06  3000               	movlw	0
  5701  1E07  00A2               	movwf	my_delay_ms@time+2
  5702  1E08  3000               	movlw	0
  5703  1E09  00A1               	movwf	my_delay_ms@time+1
  5704  1E0A  300A               	movlw	10
  5705  1E0B  00A0               	movwf	my_delay_ms@time
  5706  1E0C  160A  158A  249E  160A  158A  	fcall	_my_delay_ms
  5707                           
  5708                           ;adc.c: 41:       value=0;
  5709  1E11  01B0               	clrf	ADC_Max_10Bits@value
  5710  1E12  01B1               	clrf	ADC_Max_10Bits@value+1
  5711                           
  5712                           ;adc.c: 42:       for(i=1;i<=50;i++)
  5713  1E13  01B2               	clrf	ADC_Max_10Bits@i
  5714  1E14  0AB2               	incf	ADC_Max_10Bits@i,f
  5715  1E15                     l6898:	
  5716                           
  5717                           ;adc.c: 43:           {;adc.c: 44:           Temp=captura();
  5718  1E15  160A  158A  20F6  160A  158A  	fcall	_captura
  5719  1E1A  0821               	movf	?_captura+1,w
  5720  1E1B  00AF               	movwf	ADC_Max_10Bits@Temp+1
  5721  1E1C  0820               	movf	?_captura,w
  5722  1E1D  00AE               	movwf	ADC_Max_10Bits@Temp
  5723                           
  5724                           ;adc.c: 45:           if (Temp>value) value=Temp;
  5725  1E1E  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5726  1E1F  0231               	subwf	ADC_Max_10Bits@value+1,w
  5727  1E20  1D03               	skipz
  5728  1E21  2E24               	goto	u7245
  5729  1E22  082E               	movf	ADC_Max_10Bits@Temp,w
  5730  1E23  0230               	subwf	ADC_Max_10Bits@value,w
  5731  1E24                     u7245:	
  5732  1E24  1803               	skipnc
  5733  1E25  2E2A               	goto	l6904
  5734  1E26  082F               	movf	ADC_Max_10Bits@Temp+1,w
  5735  1E27  00B1               	movwf	ADC_Max_10Bits@value+1
  5736  1E28  082E               	movf	ADC_Max_10Bits@Temp,w
  5737  1E29  00B0               	movwf	ADC_Max_10Bits@value
  5738  1E2A                     l6904:	
  5739                           
  5740                           ;adc.c: 46:           }
  5741  1E2A  3001               	movlw	1
  5742  1E2B  00AC               	movwf	??_ADC_Max_10Bits
  5743  1E2C  082C               	movf	??_ADC_Max_10Bits,w
  5744  1E2D  07B2               	addwf	ADC_Max_10Bits@i,f
  5745  1E2E  3033               	movlw	51
  5746  1E2F  0232               	subwf	ADC_Max_10Bits@i,w
  5747  1E30  1C03               	skipc
  5748  1E31  2E15               	goto	l6898
  5749                           
  5750                           ;adc.c: 47:       return value;
  5751  1E32  0831               	movf	ADC_Max_10Bits@value+1,w
  5752  1E33  00AB               	movwf	?_ADC_Max_10Bits+1
  5753  1E34  0830               	movf	ADC_Max_10Bits@value,w
  5754  1E35  00AA               	movwf	?_ADC_Max_10Bits
  5755  1E36  0008               	return
  5756  1E37                     __end_of_ADC_Max_10Bits:	
  5757                           
  5758                           	psect	text12
  5759  1C9E                     __ptext12:	
  5760 ;; *************** function _my_delay_ms *****************
  5761 ;; Defined at:
  5762 ;;		line 5 in file "my_delay.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  time            4    0[BANK0 ] long 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  i               4    6[BANK0 ] long 
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		wreg, btemp+1
  5771 ;; Tracked objects:
  5772 ;;		On entry : 300/0
  5773 ;;		On exit  : 300/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5776 ;;      Params:         0       4       0       0       0
  5777 ;;      Locals:         0       4       0       0       0
  5778 ;;      Temps:          0       2       0       0       0
  5779 ;;      Totals:         0      10       0       0       0
  5780 ;;Total ram usage:       10 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:    1
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_MediaPlacaVaccum
  5787 ;;		_ADC_Media_10bits
  5788 ;;		_ADC_Max_10Bits
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           
  5793                           ;psect for function _my_delay_ms
  5794  1C9E                     _my_delay_ms:	
  5795                           
  5796                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5797                           
  5798                           ;incstack = 0
  5799                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5800  1C9E  3000               	movlw	0
  5801  1C9F  00A9               	movwf	my_delay_ms@i+3
  5802  1CA0  3000               	movlw	0
  5803  1CA1  00A8               	movwf	my_delay_ms@i+2
  5804  1CA2  3000               	movlw	0
  5805  1CA3  00A7               	movwf	my_delay_ms@i+1
  5806  1CA4  3000               	movlw	0
  5807  1CA5  00A6               	movwf	my_delay_ms@i
  5808  1CA6                     l6010:	
  5809  1CA6  0829               	movf	my_delay_ms@i+3,w
  5810  1CA7  3A80               	xorlw	128
  5811  1CA8  00FF               	movwf	127
  5812  1CA9  0823               	movf	my_delay_ms@time+3,w
  5813  1CAA  3A80               	xorlw	128
  5814  1CAB  027F               	subwf	127,w
  5815  1CAC  1D03               	skipz
  5816  1CAD  2CB8               	goto	u5813
  5817  1CAE  0822               	movf	my_delay_ms@time+2,w
  5818  1CAF  0228               	subwf	my_delay_ms@i+2,w
  5819  1CB0  1D03               	skipz
  5820  1CB1  2CB8               	goto	u5813
  5821  1CB2  0821               	movf	my_delay_ms@time+1,w
  5822  1CB3  0227               	subwf	my_delay_ms@i+1,w
  5823  1CB4  1D03               	skipz
  5824  1CB5  2CB8               	goto	u5813
  5825  1CB6  0820               	movf	my_delay_ms@time,w
  5826  1CB7  0226               	subwf	my_delay_ms@i,w
  5827  1CB8                     u5813:	
  5828  1CB8  1803               	btfsc	3,0
  5829  1CB9  0008               	return
  5830                           
  5831                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5832  1CBA  3003               	movlw	3
  5833  1CBB  1283               	bcf	3,5	;RP0=0, select bank0
  5834  1CBC  1303               	bcf	3,6	;RP1=0, select bank0
  5835  1CBD  00A5               	movwf	??_my_delay_ms+1
  5836  1CBE  3097               	movlw	151
  5837  1CBF  00A4               	movwf	??_my_delay_ms
  5838  1CC0                     u8017:	
  5839  1CC0  0BA4               	decfsz	??_my_delay_ms,f
  5840  1CC1  2CC0               	goto	u8017
  5841  1CC2  0BA5               	decfsz	??_my_delay_ms+1,f
  5842  1CC3  2CC0               	goto	u8017
  5843                           
  5844                           ;my_delay.c: 10:             }
  5845  1CC4  3001               	movlw	1
  5846  1CC5  1283               	bcf	3,5	;RP0=0, select bank0
  5847  1CC6  1303               	bcf	3,6	;RP1=0, select bank0
  5848  1CC7  07A6               	addwf	my_delay_ms@i,f
  5849  1CC8  3000               	movlw	0
  5850  1CC9  1803               	skipnc
  5851  1CCA  3001               	movlw	1
  5852  1CCB  07A7               	addwf	my_delay_ms@i+1,f
  5853  1CCC  3000               	movlw	0
  5854  1CCD  1803               	skipnc
  5855  1CCE  3001               	movlw	1
  5856  1CCF  07A8               	addwf	my_delay_ms@i+2,f
  5857  1CD0  3000               	movlw	0
  5858  1CD1  1803               	skipnc
  5859  1CD2  3001               	movlw	1
  5860  1CD3  07A9               	addwf	my_delay_ms@i+3,f
  5861  1CD4  2CA6               	goto	l6010
  5862  1CD5                     __end_of_my_delay_ms:	
  5863                           
  5864                           	psect	text13
  5865  18F6                     __ptext13:	
  5866 ;; *************** function _captura *****************
  5867 ;; Defined at:
  5868 ;;		line 123 in file "adc.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;		None
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;		None
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  2    0[BANK0 ] unsigned int 
  5875 ;; Registers used:
  5876 ;;		wreg
  5877 ;; Tracked objects:
  5878 ;;		On entry : 300/0
  5879 ;;		On exit  : 300/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5882 ;;      Params:         0       2       0       0       0
  5883 ;;      Locals:         0       0       0       0       0
  5884 ;;      Temps:          0       0       0       0       0
  5885 ;;      Totals:         0       2       0       0       0
  5886 ;;Total ram usage:        2 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    1
  5889 ;; This function calls:
  5890 ;;		Nothing
  5891 ;; This function is called by:
  5892 ;;		_ADC_Media_10bits
  5893 ;;		_ADC_Max_10Bits
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           
  5898                           ;psect for function _captura
  5899  18F6                     _captura:	
  5900                           
  5901                           ;adc.c: 124:     ADCON0bits.GO=1;
  5902                           
  5903                           ;incstack = 0
  5904                           ; Regs used in _captura: [wreg]
  5905  18F6  149F               	bsf	31,1	;volatile
  5906  18F7                     l356:	
  5907                           ;adc.c: 128:           }
  5908                           
  5909                           
  5910                           ;adc.c: 125:     while(ADCON0bits.GO)
  5911  18F7  189F               	btfsc	31,1	;volatile
  5912  18F8  28F7               	goto	l356
  5913                           
  5914                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  5915  18F9  081E               	movf	30,w	;volatile
  5916  18FA  00A1               	movwf	?_captura+1
  5917  18FB  1683               	bsf	3,5	;RP0=1, select bank1
  5918  18FC  081E               	movf	30,w	;volatile
  5919  18FD  1283               	bcf	3,5	;RP0=0, select bank0
  5920  18FE  00A0               	movwf	?_captura
  5921  18FF  0008               	return
  5922  1900                     __end_of_captura:	
  5923                           
  5924                           	psect	text14
  5925  1BD6                     __ptext14:	
  5926 ;; *************** function _I2C_Master_Init *****************
  5927 ;; Defined at:
  5928 ;;		line 7 in file "I2C.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  c               4   14[BANK0 ] const unsigned long 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;		None
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0, pclath, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 300/0
  5939 ;;		On exit  : 300/100
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5942 ;;      Params:         0       4       0       0       0
  5943 ;;      Locals:         0       0       0       0       0
  5944 ;;      Temps:          0       4       0       0       0
  5945 ;;      Totals:         0       8       0       0       0
  5946 ;;Total ram usage:        8 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    2
  5949 ;; This function calls:
  5950 ;;		___lldiv
  5951 ;; This function is called by:
  5952 ;;		_main
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           
  5957                           ;psect for function _I2C_Master_Init
  5958  1BD6                     _I2C_Master_Init:	
  5959                           
  5960                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5961                           
  5962                           ;incstack = 0
  5963                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5964  1BD6  3028               	movlw	40
  5965  1BD7  0094               	movwf	20	;volatile
  5966                           
  5967                           ;I2C.c: 11:   SSPCON2 = 0;
  5968  1BD8  1683               	bsf	3,5	;RP0=1, select bank1
  5969  1BD9  0191               	clrf	17	;volatile
  5970                           
  5971                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5972  1BDA  1283               	bcf	3,5	;RP0=0, select bank0
  5973  1BDB  082E               	movf	I2C_Master_Init@c,w
  5974  1BDC  00B2               	movwf	??_I2C_Master_Init
  5975  1BDD  082F               	movf	I2C_Master_Init@c+1,w
  5976  1BDE  00B3               	movwf	??_I2C_Master_Init+1
  5977  1BDF  0830               	movf	I2C_Master_Init@c+2,w
  5978  1BE0  00B4               	movwf	??_I2C_Master_Init+2
  5979  1BE1  0831               	movf	I2C_Master_Init@c+3,w
  5980  1BE2  00B5               	movwf	??_I2C_Master_Init+3
  5981  1BE3  3002               	movlw	2
  5982  1BE4                     u7695:	
  5983  1BE4  1003               	clrc
  5984  1BE5  0DB2               	rlf	??_I2C_Master_Init,f
  5985  1BE6  0DB3               	rlf	??_I2C_Master_Init+1,f
  5986  1BE7  0DB4               	rlf	??_I2C_Master_Init+2,f
  5987  1BE8  0DB5               	rlf	??_I2C_Master_Init+3,f
  5988  1BE9  3EFF               	addlw	-1
  5989  1BEA  1D03               	skipz
  5990  1BEB  2BE4               	goto	u7695
  5991  1BEC  0835               	movf	??_I2C_Master_Init+3,w
  5992  1BED  00A3               	movwf	___lldiv@divisor+3
  5993  1BEE  0834               	movf	??_I2C_Master_Init+2,w
  5994  1BEF  00A2               	movwf	___lldiv@divisor+2
  5995  1BF0  0833               	movf	??_I2C_Master_Init+1,w
  5996  1BF1  00A1               	movwf	___lldiv@divisor+1
  5997  1BF2  0832               	movf	??_I2C_Master_Init,w
  5998  1BF3  00A0               	movwf	___lldiv@divisor
  5999  1BF4  3000               	movlw	0
  6000  1BF5  00A7               	movwf	___lldiv@dividend+3
  6001  1BF6  307A               	movlw	122
  6002  1BF7  00A6               	movwf	___lldiv@dividend+2
  6003  1BF8  3012               	movlw	18
  6004  1BF9  00A5               	movwf	___lldiv@dividend+1
  6005  1BFA  3000               	movlw	0
  6006  1BFB  00A4               	movwf	___lldiv@dividend
  6007  1BFC  160A  158A  26D3   	fcall	___lldiv
  6008  1BFF  0820               	movf	?___lldiv,w
  6009  1C00  3EFF               	addlw	255
  6010  1C01  1683               	bsf	3,5	;RP0=1, select bank1
  6011  1C02  0093               	movwf	19	;volatile
  6012                           
  6013                           ;I2C.c: 13:   SSPSTAT = 0;
  6014  1C03  0194               	clrf	20	;volatile
  6015                           
  6016                           ;I2C.c: 14:   TRISC3 = 1;
  6017  1C04  1587               	bsf	7,3	;volatile
  6018                           
  6019                           ;I2C.c: 15:   TRISC4 = 1;
  6020  1C05  1607               	bsf	7,4	;volatile
  6021  1C06  0008               	return
  6022  1C07                     __end_of_I2C_Master_Init:	
  6023                           
  6024                           	psect	text15
  6025  1ED3                     __ptext15:	
  6026 ;; *************** function ___lldiv *****************
  6027 ;; Defined at:
  6028 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;  divisor         4    0[BANK0 ] unsigned long 
  6031 ;;  dividend        4    4[BANK0 ] unsigned long 
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;  quotient        4    9[BANK0 ] unsigned long 
  6034 ;;  counter         1   13[BANK0 ] unsigned char 
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  4    0[BANK0 ] unsigned long 
  6037 ;; Registers used:
  6038 ;;		wreg, status,2, status,0
  6039 ;; Tracked objects:
  6040 ;;		On entry : 300/0
  6041 ;;		On exit  : 300/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6044 ;;      Params:         0       8       0       0       0
  6045 ;;      Locals:         0       5       0       0       0
  6046 ;;      Temps:          0       1       0       0       0
  6047 ;;      Totals:         0      14       0       0       0
  6048 ;;Total ram usage:       14 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; Hardware stack levels required when called:    1
  6051 ;; This function calls:
  6052 ;;		Nothing
  6053 ;; This function is called by:
  6054 ;;		_I2C_Master_Init
  6055 ;; This function uses a non-reentrant model
  6056 ;;
  6057                           
  6058                           
  6059                           ;psect for function ___lldiv
  6060  1ED3                     ___lldiv:	
  6061                           
  6062                           ;incstack = 0
  6063                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6064  1ED3  3000               	movlw	0
  6065  1ED4  00AC               	movwf	___lldiv@quotient+3
  6066  1ED5  3000               	movlw	0
  6067  1ED6  00AB               	movwf	___lldiv@quotient+2
  6068  1ED7  3000               	movlw	0
  6069  1ED8  00AA               	movwf	___lldiv@quotient+1
  6070  1ED9  3000               	movlw	0
  6071  1EDA  00A9               	movwf	___lldiv@quotient
  6072  1EDB  0823               	movf	___lldiv@divisor+3,w
  6073  1EDC  0422               	iorwf	___lldiv@divisor+2,w
  6074  1EDD  0421               	iorwf	___lldiv@divisor+1,w
  6075  1EDE  0420               	iorwf	___lldiv@divisor,w
  6076  1EDF  1903               	skipnz
  6077  1EE0  2F28               	goto	l6932
  6078  1EE1  01AD               	clrf	___lldiv@counter
  6079  1EE2  0AAD               	incf	___lldiv@counter,f
  6080  1EE3                     l6918:	
  6081  1EE3  1BA3               	btfsc	___lldiv@divisor+3,7
  6082  1EE4  2EF3               	goto	l6920
  6083  1EE5  3001               	movlw	1
  6084  1EE6  00A8               	movwf	??___lldiv
  6085  1EE7                     u7275:	
  6086  1EE7  1003               	clrc
  6087  1EE8  0DA0               	rlf	___lldiv@divisor,f
  6088  1EE9  0DA1               	rlf	___lldiv@divisor+1,f
  6089  1EEA  0DA2               	rlf	___lldiv@divisor+2,f
  6090  1EEB  0DA3               	rlf	___lldiv@divisor+3,f
  6091  1EEC  0BA8               	decfsz	??___lldiv,f
  6092  1EED  2EE7               	goto	u7275
  6093  1EEE  3001               	movlw	1
  6094  1EEF  00A8               	movwf	??___lldiv
  6095  1EF0  0828               	movf	??___lldiv,w
  6096  1EF1  07AD               	addwf	___lldiv@counter,f
  6097  1EF2  2EE3               	goto	l6918
  6098  1EF3                     l6920:	
  6099  1EF3  3001               	movlw	1
  6100  1EF4  00A8               	movwf	??___lldiv
  6101  1EF5                     u7295:	
  6102  1EF5  1003               	clrc
  6103  1EF6  0DA9               	rlf	___lldiv@quotient,f
  6104  1EF7  0DAA               	rlf	___lldiv@quotient+1,f
  6105  1EF8  0DAB               	rlf	___lldiv@quotient+2,f
  6106  1EF9  0DAC               	rlf	___lldiv@quotient+3,f
  6107  1EFA  0BA8               	decfsz	??___lldiv,f
  6108  1EFB  2EF5               	goto	u7295
  6109  1EFC  0823               	movf	___lldiv@divisor+3,w
  6110  1EFD  0227               	subwf	___lldiv@dividend+3,w
  6111  1EFE  1D03               	skipz
  6112  1EFF  2F0A               	goto	u7305
  6113  1F00  0822               	movf	___lldiv@divisor+2,w
  6114  1F01  0226               	subwf	___lldiv@dividend+2,w
  6115  1F02  1D03               	skipz
  6116  1F03  2F0A               	goto	u7305
  6117  1F04  0821               	movf	___lldiv@divisor+1,w
  6118  1F05  0225               	subwf	___lldiv@dividend+1,w
  6119  1F06  1D03               	skipz
  6120  1F07  2F0A               	goto	u7305
  6121  1F08  0820               	movf	___lldiv@divisor,w
  6122  1F09  0224               	subwf	___lldiv@dividend,w
  6123  1F0A                     u7305:	
  6124  1F0A  1C03               	skipc
  6125  1F0B  2F1B               	goto	l6928
  6126  1F0C  0820               	movf	___lldiv@divisor,w
  6127  1F0D  02A4               	subwf	___lldiv@dividend,f
  6128  1F0E  0821               	movf	___lldiv@divisor+1,w
  6129  1F0F  1C03               	skipc
  6130  1F10  0F21               	incfsz	___lldiv@divisor+1,w
  6131  1F11  02A5               	subwf	___lldiv@dividend+1,f
  6132  1F12  0822               	movf	___lldiv@divisor+2,w
  6133  1F13  1C03               	skipc
  6134  1F14  0F22               	incfsz	___lldiv@divisor+2,w
  6135  1F15  02A6               	subwf	___lldiv@dividend+2,f
  6136  1F16  0823               	movf	___lldiv@divisor+3,w
  6137  1F17  1C03               	skipc
  6138  1F18  0F23               	incfsz	___lldiv@divisor+3,w
  6139  1F19  02A7               	subwf	___lldiv@dividend+3,f
  6140  1F1A  1429               	bsf	___lldiv@quotient,0
  6141  1F1B                     l6928:	
  6142  1F1B  3001               	movlw	1
  6143  1F1C                     u7315:	
  6144  1F1C  1003               	clrc
  6145  1F1D  0CA3               	rrf	___lldiv@divisor+3,f
  6146  1F1E  0CA2               	rrf	___lldiv@divisor+2,f
  6147  1F1F  0CA1               	rrf	___lldiv@divisor+1,f
  6148  1F20  0CA0               	rrf	___lldiv@divisor,f
  6149  1F21  3EFF               	addlw	-1
  6150  1F22  1D03               	skipz
  6151  1F23  2F1C               	goto	u7315
  6152  1F24  3001               	movlw	1
  6153  1F25  02AD               	subwf	___lldiv@counter,f
  6154  1F26  1D03               	btfss	3,2
  6155  1F27  2EF3               	goto	l6920
  6156  1F28                     l6932:	
  6157  1F28  082C               	movf	___lldiv@quotient+3,w
  6158  1F29  00A3               	movwf	?___lldiv+3
  6159  1F2A  082B               	movf	___lldiv@quotient+2,w
  6160  1F2B  00A2               	movwf	?___lldiv+2
  6161  1F2C  082A               	movf	___lldiv@quotient+1,w
  6162  1F2D  00A1               	movwf	?___lldiv+1
  6163  1F2E  0829               	movf	___lldiv@quotient,w
  6164  1F2F  00A0               	movwf	?___lldiv
  6165  1F30  0008               	return
  6166  1F31                     __end_of___lldiv:	
  6167                           
  6168                           	psect	text16
  6169  0036                     __ptext16:	
  6170 ;; *************** function _Decodify_Command *****************
  6171 ;; Defined at:
  6172 ;;		line 305 in file "SlaveLiofilizadorVer1.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;		None
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;  ss             10   20[BANK1 ] unsigned char [10]
  6177 ;;  mm             10   10[BANK1 ] unsigned char [10]
  6178 ;;  hh             10    0[BANK1 ] unsigned char [10]
  6179 ;;  sizedata        1   40[BANK1 ] unsigned char 
  6180 ;;  add             1   32[BANK1 ] unsigned char 
  6181 ;;  add_24LCxxxx    4   41[BANK1 ] unsigned long 
  6182 ;;  OutPut          4   35[BANK1 ] float 
  6183 ;;  tempint         2   33[BANK1 ] int 
  6184 ;;  dados           2   30[BANK1 ] int 
  6185 ;;  tempchar        1   39[BANK1 ] unsigned char 
  6186 ;; Return value:  Size  Location     Type
  6187 ;;                  1    wreg      void 
  6188 ;; Registers used:
  6189 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6190 ;; Tracked objects:
  6191 ;;		On entry : 300/100
  6192 ;;		On exit  : 200/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6195 ;;      Params:         0       0       0       0       0
  6196 ;;      Locals:         0       0      45       0       0
  6197 ;;      Temps:          0       4       0       0       0
  6198 ;;      Totals:         0       4      45       0       0
  6199 ;;Total ram usage:       49 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; Hardware stack levels required when called:    6
  6202 ;; This function calls:
  6203 ;;		_EEPROM_24C1025_Fill_All
  6204 ;;		_EEPROM_24C1025_Read_Buffer
  6205 ;;		_EEPROM_24C1025_Read_Byte
  6206 ;;		_EEPROM_24C1025_Read_Int
  6207 ;;		_EEPROM_24C1025_Read_Str
  6208 ;;		_EEPROM_24C1025_Write_Buffer
  6209 ;;		_EEPROM_24C1025_Write_Byte
  6210 ;;		_EEPROM_24C1025_Write_Int
  6211 ;;		_EEPROM_24C1025_Write_Str
  6212 ;;		_EEPROM_Read_Byte
  6213 ;;		_EEPROM_Read_Integer
  6214 ;;		_EEPROM_Read_String
  6215 ;;		_EEPROM_Write_Byte
  6216 ;;		_EEPROM_Write_Integer
  6217 ;;		_EEPROM_Write_String
  6218 ;;		_PROCULUS_Buzzer
  6219 ;;		_PROCULUS_Show_Screen
  6220 ;;		_PROCULUS_VP_Write_String
  6221 ;;		_Save_Log
  6222 ;;		_Send_Reply_OK
  6223 ;;		_Send_To_MB
  6224 ;;		_USART_put_buffer
  6225 ;;		_USART_put_int
  6226 ;;		_USART_put_string
  6227 ;;		_USART_putc
  6228 ;;		_USART_to_Protocol
  6229 ;;		___flmul
  6230 ;;		___fltol
  6231 ;;		_itoa
  6232 ;;		_strcat
  6233 ;;		_strcpy
  6234 ;;		_strlen
  6235 ;; This function is called by:
  6236 ;;		_main
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           
  6241                           ;psect for function _Decodify_Command
  6242  0036                     _Decodify_Command:	
  6243                           
  6244                           ;SlaveLiofilizadorVer1.c: 307:     int dados;;SlaveLiofilizadorVer1.c: 308:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 309:     int tempint;;SlaveLiofilizadorVer1.c: 310:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 311:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 323:     USART_to_Protocol(&usart_protocol);
  6245                           
  6246                           ;incstack = 0
  6247                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6248  0036  30CA               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6249  0037  160A  158A  2676  120A  118A  	fcall	_USART_to_Protocol
  6250                           
  6251                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6252  003C  1683               	bsf	3,5	;RP0=1, select bank3
  6253  003D  1703               	bsf	3,6	;RP1=1, select bank3
  6254  003E  0851               	movf	(_usart_protocol^(0+384)+7),w
  6255  003F  1283               	bcf	3,5	;RP0=0, select bank0
  6256  0040  1303               	bcf	3,6	;RP1=0, select bank0
  6257  0041  00E0               	movwf	??_Decodify_Command
  6258  0042  0860               	movf	??_Decodify_Command,w
  6259  0043  1683               	bsf	3,5	;RP0=1, select bank1
  6260  0044  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6261                           
  6262                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6263  0045  1703               	bsf	3,6	;RP1=1, select bank3
  6264  0046  0852               	movf	(_usart_protocol^(0+384)+8),w
  6265  0047  1283               	bcf	3,5	;RP0=0, select bank0
  6266  0048  1303               	bcf	3,6	;RP1=0, select bank0
  6267  0049  00E0               	movwf	??_Decodify_Command
  6268  004A  0860               	movf	??_Decodify_Command,w
  6269  004B  1683               	bsf	3,5	;RP0=1, select bank1
  6270  004C  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6271                           
  6272                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6273  004D  1703               	bsf	3,6	;RP1=1, select bank3
  6274  004E  0853               	movf	(_usart_protocol^(0+384)+9),w
  6275  004F  1283               	bcf	3,5	;RP0=0, select bank0
  6276  0050  1303               	bcf	3,6	;RP1=0, select bank0
  6277  0051  00E0               	movwf	??_Decodify_Command
  6278  0052  0860               	movf	??_Decodify_Command,w
  6279  0053  1683               	bsf	3,5	;RP0=1, select bank1
  6280  0054  00CA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6281                           
  6282                           ;SlaveLiofilizadorVer1.c: 328:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6283  0055  1703               	bsf	3,6	;RP1=1, select bank3
  6284  0056  0854               	movf	(_usart_protocol^(0+384)+10),w
  6285  0057  1283               	bcf	3,5	;RP0=0, select bank0
  6286  0058  1303               	bcf	3,6	;RP1=0, select bank0
  6287  0059  00E0               	movwf	??_Decodify_Command
  6288  005A  0860               	movf	??_Decodify_Command,w
  6289  005B  1683               	bsf	3,5	;RP0=1, select bank1
  6290  005C  00C9               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6291                           
  6292                           ;SlaveLiofilizadorVer1.c: 335:     switch(usart_protocol.command){
  6293  005D  2C63               	goto	l7464
  6294  005E                     l7262:	
  6295                           
  6296                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  6297  005E  300B               	movlw	11
  6298  005F  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6299                           
  6300                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string("v1.0.5");
  6301  0064  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6302  0065  1283               	bcf	3,5	;RP0=0, select bank0
  6303  0066  00A1               	movwf	USART_put_string@vetor
  6304  0067  3080               	movlw	128
  6305  0068  00A2               	movwf	USART_put_string@vetor+1
  6306  0069  160A  158A  246B   	fcall	_USART_put_string
  6307                           
  6308                           ;SlaveLiofilizadorVer1.c: 346:              break;
  6309  006C  0008               	return
  6310  006D                     l7266:	
  6311                           
  6312                           ;SlaveLiofilizadorVer1.c: 363:              if(usart_protocol.value[0]==0)
  6313  006D  1683               	bsf	3,5	;RP0=1, select bank3
  6314  006E  1703               	bsf	3,6	;RP1=1, select bank3
  6315  006F  0850               	movf	(_usart_protocol^(0+384)+6),w
  6316  0070  1D03               	btfss	3,2
  6317  0071  287B               	goto	l7270
  6318                           
  6319                           ;SlaveLiofilizadorVer1.c: 364:                 OutPut=Tensao1;
  6320  0072  1303               	bcf	3,6	;RP1=0, select bank1
  6321  0073  0850               	movf	(_Tensao1+3)^(0+128),w
  6322  0074  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6323  0075  084F               	movf	(_Tensao1+2)^(0+128),w
  6324  0076  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6325  0077  084E               	movf	(_Tensao1+1)^(0+128),w
  6326  0078  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6327  0079  084D               	movf	_Tensao1^(0+128),w
  6328  007A  2883               	goto	L6
  6329  007B                     l7270:	
  6330                           
  6331                           ;SlaveLiofilizadorVer1.c: 366:                 OutPut=Vaccum0;
  6332  007B  1303               	bcf	3,6	;RP1=0, select bank1
  6333  007C  0854               	movf	(_Vaccum0+3)^(0+128),w
  6334  007D  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6335  007E  0853               	movf	(_Vaccum0+2)^(0+128),w
  6336  007F  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6337  0080  0852               	movf	(_Vaccum0+1)^(0+128),w
  6338  0081  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6339  0082  0851               	movf	_Vaccum0^(0+128),w
  6340  0083                     L6:	
  6341  0083  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6342                           
  6343                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  6344  0084  3041               	movlw	65
  6345  0085  1283               	bcf	3,5	;RP0=0, select bank0
  6346  0086  00AC               	movwf	___flmul@b+3
  6347  0087  3020               	movlw	32
  6348  0088  00AB               	movwf	___flmul@b+2
  6349  0089  3000               	movlw	0
  6350  008A  00AA               	movwf	___flmul@b+1
  6351  008B  3000               	movlw	0
  6352  008C  00A9               	movwf	___flmul@b
  6353  008D  1683               	bsf	3,5	;RP0=1, select bank1
  6354  008E  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6355  008F  1283               	bcf	3,5	;RP0=0, select bank0
  6356  0090  00B0               	movwf	___flmul@a+3
  6357  0091  1683               	bsf	3,5	;RP0=1, select bank1
  6358  0092  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6359  0093  1283               	bcf	3,5	;RP0=0, select bank0
  6360  0094  00AF               	movwf	___flmul@a+2
  6361  0095  1683               	bsf	3,5	;RP0=1, select bank1
  6362  0096  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6363  0097  1283               	bcf	3,5	;RP0=0, select bank0
  6364  0098  00AE               	movwf	___flmul@a+1
  6365  0099  1683               	bsf	3,5	;RP0=1, select bank1
  6366  009A  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6367  009B  1283               	bcf	3,5	;RP0=0, select bank0
  6368  009C  00AD               	movwf	___flmul@a
  6369  009D  120A  118A  24BC  120A  118A  	fcall	___flmul
  6370  00A2  082C               	movf	?___flmul+3,w
  6371  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  6372  00A4  00C6               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6373  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  6374  00A6  082B               	movf	?___flmul+2,w
  6375  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  6376  00A8  00C5               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6377  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  6378  00AA  082A               	movf	?___flmul+1,w
  6379  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  6380  00AC  00C4               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6381  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  6382  00AE  0829               	movf	?___flmul,w
  6383  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  6384  00B0  00C3               	movwf	Decodify_Command@OutPut^(0+128)
  6385                           
  6386                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  6387  00B1  138B               	bcf	11,7	;volatile
  6388                           
  6389                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  6390  00B2  3002               	movlw	2
  6391  00B3  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6392                           
  6393                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  6394  00B8  0846               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6395  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  6396  00BA  00C6               	movwf	___fltol@f1+3
  6397  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  6398  00BC  0845               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6399  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  6400  00BE  00C5               	movwf	___fltol@f1+2
  6401  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  6402  00C0  0844               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6403  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  6404  00C2  00C4               	movwf	___fltol@f1+1
  6405  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  6406  00C4  0843               	movf	Decodify_Command@OutPut^(0+128),w
  6407  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  6408  00C6  00C3               	movwf	___fltol@f1
  6409  00C7  160A  158A  2795  120A  118A  	fcall	___fltol
  6410  00CC  0844               	movf	?___fltol+1,w
  6411  00CD  00CF               	movwf	USART_put_int@value+1
  6412  00CE  0843               	movf	?___fltol,w
  6413  00CF  00CE               	movwf	USART_put_int@value
  6414  00D0  160A  158A  2146   	fcall	_USART_put_int
  6415                           
  6416                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  6417  00D3  178B               	bsf	11,7	;volatile
  6418                           
  6419                           ;SlaveLiofilizadorVer1.c: 375:              break;
  6420  00D4  0008               	return
  6421  00D5                     l7282:	
  6422                           
  6423                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6424  00D5  1683               	bsf	3,5	;RP0=1, select bank3
  6425  00D6  1703               	bsf	3,6	;RP1=1, select bank3
  6426  00D7  0850               	movf	(_usart_protocol^(0+384)+6),w
  6427  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  6428  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  6429  00DA  00E0               	movwf	??_Decodify_Command
  6430  00DB  0860               	movf	??_Decodify_Command,w
  6431  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  6432  00DD  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6433                           
  6434                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6435  00DE  1703               	bsf	3,6	;RP1=1, select bank3
  6436  00DF  0851               	movf	(_usart_protocol^(0+384)+7),w
  6437  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  6438  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  6439  00E2  00E0               	movwf	??_Decodify_Command
  6440  00E3  0860               	movf	??_Decodify_Command,w
  6441  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  6442  00E5  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6443                           
  6444                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6445  00E6  1703               	bsf	3,6	;RP1=1, select bank3
  6446  00E7  0852               	movf	(_usart_protocol^(0+384)+8),w
  6447  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  6448  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  6449  00EA  00E0               	movwf	??_Decodify_Command
  6450  00EB  0860               	movf	??_Decodify_Command,w
  6451  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  6452  00ED  00CA               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6453                           
  6454                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6455  00EE  1703               	bsf	3,6	;RP1=1, select bank3
  6456  00EF  0853               	movf	(_usart_protocol^(0+384)+9),w
  6457  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  6458  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  6459  00F2  00E0               	movwf	??_Decodify_Command
  6460  00F3  0860               	movf	??_Decodify_Command,w
  6461  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  6462  00F5  00C9               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6463                           
  6464                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  6465  00F6  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6466  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  6467  00F8  00DB               	movwf	Save_Log@add_datalog+3
  6468  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  6469  00FA  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6470  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  6471  00FC  00DA               	movwf	Save_Log@add_datalog+2
  6472  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  6473  00FE  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6474  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  6475  0100  00D9               	movwf	Save_Log@add_datalog+1
  6476  0101  1683               	bsf	3,5	;RP0=1, select bank1
  6477  0102  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6478  0103  1283               	bcf	3,5	;RP0=0, select bank0
  6479  0104  00D8               	movwf	Save_Log@add_datalog
  6480  0105  160A  118A  2190   	fcall	_Save_Log
  6481                           
  6482                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  6483  0108  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6484  0109  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6485                           
  6486                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  6487  010A  1683               	bsf	3,5	;RP0=1, select bank1
  6488  010B  1303               	bcf	3,6	;RP1=0, select bank1
  6489  010C  01DD               	clrf	_milisegundo^(0+128)	;volatile
  6490  010D  01DE               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6491                           
  6492                           ;SlaveLiofilizadorVer1.c: 387:              break;
  6493  010E  0008               	return
  6494  010F                     l7290:	
  6495                           
  6496                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  6497  010F  3002               	movlw	2
  6498  0110  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6499                           
  6500                           ;SlaveLiofilizadorVer1.c: 401:              USART_put_int(1);
  6501  0115  3001               	movlw	1
  6502  0116  1283               	bcf	3,5	;RP0=0, select bank0
  6503  0117  00CE               	movwf	USART_put_int@value
  6504  0118  3000               	movlw	0
  6505  0119  00CF               	movwf	USART_put_int@value+1
  6506  011A  160A  158A  2146   	fcall	_USART_put_int
  6507                           
  6508                           ;SlaveLiofilizadorVer1.c: 411:              break;
  6509  011D  0008               	return
  6510  011E                     l7294:	
  6511                           
  6512                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  6513  011E  1683               	bsf	3,5	;RP0=1, select bank3
  6514  011F  1703               	bsf	3,6	;RP1=1, select bank3
  6515  0120  0851               	movf	(_usart_protocol^(0+384)+7),w
  6516  0121  1283               	bcf	3,5	;RP0=0, select bank0
  6517  0122  1303               	bcf	3,6	;RP1=0, select bank0
  6518  0123  00E0               	movwf	??_Decodify_Command
  6519  0124  0860               	movf	??_Decodify_Command,w
  6520  0125  00A0               	movwf	EEPROM_Write_Byte@dado
  6521  0126  1683               	bsf	3,5	;RP0=1, select bank3
  6522  0127  1703               	bsf	3,6	;RP1=1, select bank3
  6523  0128  0850               	movf	(_usart_protocol^(0+384)+6),w
  6524  0129  160A  158A  2545  120A  118A  	fcall	_EEPROM_Write_Byte
  6525  012E                     L7:	
  6526                           
  6527                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  6528  012E  3003               	movlw	3
  6529  012F  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6530                           
  6531                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  6532  0134  160A  158A  20ED   	fcall	_Send_Reply_OK
  6533                           
  6534                           ;SlaveLiofilizadorVer1.c: 432:              break;
  6535  0137  0008               	return
  6536  0138                     l7298:	
  6537                           
  6538                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6539  0138  1683               	bsf	3,5	;RP0=1, select bank3
  6540  0139  1703               	bsf	3,6	;RP1=1, select bank3
  6541  013A  0850               	movf	(_usart_protocol^(0+384)+6),w
  6542  013B  160A  158A  2275  120A  118A  	fcall	_EEPROM_Read_Byte
  6543  0140  1303               	bcf	3,6	;RP1=0, select bank0
  6544  0141  00E0               	movwf	??_Decodify_Command
  6545  0142  0860               	movf	??_Decodify_Command,w
  6546  0143  1683               	bsf	3,5	;RP0=1, select bank1
  6547  0144  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6548                           
  6549                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  6550  0145  3001               	movlw	1
  6551  0146  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6552                           
  6553                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  6554  014B  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6555  014C  160A  158A  210B   	fcall	_USART_putc
  6556                           
  6557                           ;SlaveLiofilizadorVer1.c: 437:              break;
  6558  014F  0008               	return
  6559  0150                     l7304:	
  6560                           
  6561                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  6562  0150  1683               	bsf	3,5	;RP0=1, select bank3
  6563  0151  1703               	bsf	3,6	;RP1=1, select bank3
  6564  0152  0850               	movf	(_usart_protocol^(0+384)+6),w
  6565  0153  1283               	bcf	3,5	;RP0=0, select bank0
  6566  0154  1303               	bcf	3,6	;RP1=0, select bank0
  6567  0155  00E0               	movwf	??_Decodify_Command
  6568  0156  0860               	movf	??_Decodify_Command,w
  6569  0157  1683               	bsf	3,5	;RP0=1, select bank1
  6570  0158  00C0               	movwf	Decodify_Command@add^(0+128)
  6571                           
  6572                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6573  0159  1703               	bsf	3,6	;RP1=1, select bank3
  6574  015A  0852               	movf	(_usart_protocol^(0+384)+8),w
  6575  015B  1283               	bcf	3,5	;RP0=0, select bank0
  6576  015C  1303               	bcf	3,6	;RP1=0, select bank0
  6577  015D  00E0               	movwf	??_Decodify_Command
  6578  015E  01E1               	clrf	??_Decodify_Command+1
  6579  015F  1683               	bsf	3,5	;RP0=1, select bank3
  6580  0160  1703               	bsf	3,6	;RP1=1, select bank3
  6581  0161  0851               	movf	(_usart_protocol^(0+384)+7),w
  6582  0162  1283               	bcf	3,5	;RP0=0, select bank0
  6583  0163  1303               	bcf	3,6	;RP1=0, select bank0
  6584  0164  00E2               	movwf	??_Decodify_Command+2
  6585  0165  01E3               	clrf	??_Decodify_Command+3
  6586  0166  0862               	movf	??_Decodify_Command+2,w
  6587  0167  00E3               	movwf	??_Decodify_Command+3
  6588  0168  01E2               	clrf	??_Decodify_Command+2
  6589  0169  0860               	movf	??_Decodify_Command,w
  6590  016A  0462               	iorwf	??_Decodify_Command+2,w
  6591  016B  1683               	bsf	3,5	;RP0=1, select bank1
  6592  016C  00BE               	movwf	Decodify_Command@dados^(0+128)
  6593  016D  1283               	bcf	3,5	;RP0=0, select bank0
  6594  016E  0861               	movf	??_Decodify_Command+1,w
  6595  016F  0463               	iorwf	??_Decodify_Command+3,w
  6596  0170  1683               	bsf	3,5	;RP0=1, select bank1
  6597  0171  00BF               	movwf	(Decodify_Command@dados+1)^(0+128)
  6598                           
  6599                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  6600  0172  083F               	movf	(Decodify_Command@dados+1)^(0+128),w
  6601  0173  1283               	bcf	3,5	;RP0=0, select bank0
  6602  0174  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6603  0175  1683               	bsf	3,5	;RP0=1, select bank1
  6604  0176  083E               	movf	Decodify_Command@dados^(0+128),w
  6605  0177  1283               	bcf	3,5	;RP0=0, select bank0
  6606  0178  00A5               	movwf	EEPROM_Write_Integer@dado
  6607  0179  1683               	bsf	3,5	;RP0=1, select bank1
  6608  017A  0840               	movf	Decodify_Command@add^(0+128),w
  6609  017B  160A  158A  2407  120A  118A  	fcall	_EEPROM_Write_Integer
  6610  0180  292E               	goto	L7
  6611  0181                     l7314:	
  6612                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  6613                           
  6614                           
  6615                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6616  0181  1683               	bsf	3,5	;RP0=1, select bank3
  6617  0182  1703               	bsf	3,6	;RP1=1, select bank3
  6618  0183  0850               	movf	(_usart_protocol^(0+384)+6),w
  6619  0184  160A  158A  2328  120A  118A  	fcall	_EEPROM_Read_Integer
  6620  0189  0824               	movf	?_EEPROM_Read_Integer+1,w
  6621  018A  1683               	bsf	3,5	;RP0=1, select bank1
  6622  018B  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6623  018C  1283               	bcf	3,5	;RP0=0, select bank0
  6624  018D  0823               	movf	?_EEPROM_Read_Integer,w
  6625  018E                     L8:	
  6626  018E  1683               	bsf	3,5	;RP0=1, select bank1
  6627  018F  00C1               	movwf	Decodify_Command@tempint^(0+128)
  6628                           
  6629                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  6630  0190  3002               	movlw	2
  6631  0191  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6632                           
  6633                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  6634  0196  0842               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6635  0197  1283               	bcf	3,5	;RP0=0, select bank0
  6636  0198  00CF               	movwf	USART_put_int@value+1
  6637  0199  1683               	bsf	3,5	;RP0=1, select bank1
  6638  019A  0841               	movf	Decodify_Command@tempint^(0+128),w
  6639  019B  1283               	bcf	3,5	;RP0=0, select bank0
  6640  019C  00CE               	movwf	USART_put_int@value
  6641  019D  160A  158A  2146   	fcall	_USART_put_int
  6642                           
  6643                           ;SlaveLiofilizadorVer1.c: 452:              break;
  6644  01A0  0008               	return
  6645  01A1                     l7320:	
  6646                           
  6647                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  6648  01A1  30D1               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6649  01A2  00E0               	movwf	??_Decodify_Command
  6650  01A3  0860               	movf	??_Decodify_Command,w
  6651  01A4  00A5               	movwf	EEPROM_Write_String@dado
  6652  01A5  1683               	bsf	3,5	;RP0=1, select bank3
  6653  01A6  1703               	bsf	3,6	;RP1=1, select bank3
  6654  01A7  0850               	movf	(_usart_protocol^(0+384)+6),w
  6655  01A8  160A  158A  2352  120A  118A  	fcall	_EEPROM_Write_String
  6656  01AD  292E               	goto	L7
  6657  01AE                     l7326:	
  6658                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  6659                           
  6660                           
  6661                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 463:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  6662  01AE  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  6663  01AF  00E0               	movwf	??_Decodify_Command
  6664  01B0  0860               	movf	??_Decodify_Command,w
  6665  01B1  00A3               	movwf	EEPROM_Read_String@dado
  6666  01B2  1683               	bsf	3,5	;RP0=1, select bank3
  6667  01B3  1703               	bsf	3,6	;RP1=1, select bank3
  6668  01B4  0850               	movf	(_usart_protocol^(0+384)+6),w
  6669  01B5  160A  158A  2235  120A  118A  	fcall	_EEPROM_Read_String
  6670                           
  6671                           ;SlaveLiofilizadorVer1.c: 464:              Send_To_MB(sizeof(texto));
  6672  01BA  3010               	movlw	16
  6673  01BB                     L9:	
  6674  01BB  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6675                           
  6676                           ;SlaveLiofilizadorVer1.c: 465:              USART_put_string(texto);
  6677  01C0  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  6678  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  6679  01C2  00A1               	movwf	USART_put_string@vetor
  6680  01C3  3001               	movlw	1
  6681  01C4  00A2               	movwf	USART_put_string@vetor+1
  6682  01C5  160A  158A  246B   	fcall	_USART_put_string
  6683                           
  6684                           ;SlaveLiofilizadorVer1.c: 466:              break;
  6685  01C8  0008               	return
  6686  01C9                     l7332:	
  6687                           
  6688                           ;SlaveLiofilizadorVer1.c: 471:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6689  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  6690  01CA  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6691  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  6692  01CC  00B2               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6693  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  6694  01CE  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6695  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  6696  01D0  00B1               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6697  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  6698  01D2  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6699  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  6700  01D4  00B0               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6701  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  6702  01D6  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6703  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  6704  01D8  00AF               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6705  01D9  1683               	bsf	3,5	;RP0=1, select bank3
  6706  01DA  1703               	bsf	3,6	;RP1=1, select bank3
  6707  01DB  0855               	movf	(_usart_protocol^(0+384)+11),w
  6708  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  6709  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  6710  01DE  00E0               	movwf	??_Decodify_Command
  6711  01DF  0860               	movf	??_Decodify_Command,w
  6712  01E0  00B3               	movwf	EEPROM_24C1025_Write_Byte@data
  6713  01E1  1683               	bsf	3,5	;RP0=1, select bank3
  6714  01E2  1703               	bsf	3,6	;RP1=1, select bank3
  6715  01E3  0850               	movf	(_usart_protocol^(0+384)+6),w
  6716  01E4  160A  158A  2130  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6717  01E9  292E               	goto	L7
  6718  01EA                     l7338:	
  6719                           ;SlaveLiofilizadorVer1.c: 474:              Send_To_MB(3);
  6720                           
  6721                           
  6722                           ;SlaveLiofilizadorVer1.c: 478:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6723  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  6724  01EB  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6725  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  6726  01ED  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6727  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  6728  01EF  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6729  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  6730  01F1  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6731  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  6732  01F3  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6733  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  6734  01F5  00B5               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6735  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  6736  01F7  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6737  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  6738  01F9  00B4               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6739  01FA  1683               	bsf	3,5	;RP0=1, select bank3
  6740  01FB  1703               	bsf	3,6	;RP1=1, select bank3
  6741  01FC  0850               	movf	(_usart_protocol^(0+384)+6),w
  6742  01FD  160A  158A  218A  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6743  0202  00E0               	movwf	??_Decodify_Command
  6744  0203  0860               	movf	??_Decodify_Command,w
  6745  0204  1683               	bsf	3,5	;RP0=1, select bank1
  6746  0205  00C7               	movwf	Decodify_Command@tempchar^(0+128)
  6747                           
  6748                           ;SlaveLiofilizadorVer1.c: 482:              Send_To_MB(1);
  6749  0206  3001               	movlw	1
  6750  0207  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6751                           
  6752                           ;SlaveLiofilizadorVer1.c: 483:              USART_putc(tempchar);
  6753  020C  0847               	movf	Decodify_Command@tempchar^(0+128),w
  6754  020D  160A  158A  210B   	fcall	_USART_putc
  6755                           
  6756                           ;SlaveLiofilizadorVer1.c: 484:              break;
  6757  0210  0008               	return
  6758  0211                     l7344:	
  6759                           
  6760                           ;SlaveLiofilizadorVer1.c: 486:              {;SlaveLiofilizadorVer1.c: 487:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6761  0211  1683               	bsf	3,5	;RP0=1, select bank1
  6762  0212  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6763  0213  1283               	bcf	3,5	;RP0=0, select bank0
  6764  0214  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6765  0215  1683               	bsf	3,5	;RP0=1, select bank1
  6766  0216  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6767  0217  1283               	bcf	3,5	;RP0=0, select bank0
  6768  0218  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6769  0219  1683               	bsf	3,5	;RP0=1, select bank1
  6770  021A  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6771  021B  1283               	bcf	3,5	;RP0=0, select bank0
  6772  021C  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6773  021D  1683               	bsf	3,5	;RP0=1, select bank1
  6774  021E  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6775  021F  1283               	bcf	3,5	;RP0=0, select bank0
  6776  0220  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6777  0221  1683               	bsf	3,5	;RP0=1, select bank3
  6778  0222  1703               	bsf	3,6	;RP1=1, select bank3
  6779  0223  0856               	movf	(_usart_protocol^(0+384)+12),w
  6780  0224  1283               	bcf	3,5	;RP0=0, select bank0
  6781  0225  1303               	bcf	3,6	;RP1=0, select bank0
  6782  0226  00E0               	movwf	??_Decodify_Command
  6783  0227  01E1               	clrf	??_Decodify_Command+1
  6784  0228  1683               	bsf	3,5	;RP0=1, select bank3
  6785  0229  1703               	bsf	3,6	;RP1=1, select bank3
  6786  022A  0855               	movf	(_usart_protocol^(0+384)+11),w
  6787  022B  1283               	bcf	3,5	;RP0=0, select bank0
  6788  022C  1303               	bcf	3,6	;RP1=0, select bank0
  6789  022D  00E2               	movwf	??_Decodify_Command+2
  6790  022E  01E3               	clrf	??_Decodify_Command+3
  6791  022F  0862               	movf	??_Decodify_Command+2,w
  6792  0230  00E3               	movwf	??_Decodify_Command+3
  6793  0231  01E2               	clrf	??_Decodify_Command+2
  6794  0232  0860               	movf	??_Decodify_Command,w
  6795  0233  0462               	iorwf	??_Decodify_Command+2,w
  6796  0234  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  6797  0235  0861               	movf	??_Decodify_Command+1,w
  6798  0236  0463               	iorwf	??_Decodify_Command+3,w
  6799  0237  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  6800  0238  1683               	bsf	3,5	;RP0=1, select bank3
  6801  0239  1703               	bsf	3,6	;RP1=1, select bank3
  6802  023A  0850               	movf	(_usart_protocol^(0+384)+6),w
  6803  023B  160A  158A  2215  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6804  0240  292E               	goto	L7
  6805  0241                     l7350:	
  6806                           ;SlaveLiofilizadorVer1.c: 492:              Send_To_MB(3);
  6807                           
  6808                           
  6809                           ;SlaveLiofilizadorVer1.c: 497:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6810  0241  1683               	bsf	3,5	;RP0=1, select bank1
  6811  0242  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6812  0243  1283               	bcf	3,5	;RP0=0, select bank0
  6813  0244  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6814  0245  1683               	bsf	3,5	;RP0=1, select bank1
  6815  0246  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6816  0247  1283               	bcf	3,5	;RP0=0, select bank0
  6817  0248  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6818  0249  1683               	bsf	3,5	;RP0=1, select bank1
  6819  024A  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6820  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6821  024C  00B5               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6822  024D  1683               	bsf	3,5	;RP0=1, select bank1
  6823  024E  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6824  024F  1283               	bcf	3,5	;RP0=0, select bank0
  6825  0250  00B4               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6826  0251  1683               	bsf	3,5	;RP0=1, select bank3
  6827  0252  1703               	bsf	3,6	;RP1=1, select bank3
  6828  0253  0850               	movf	(_usart_protocol^(0+384)+6),w
  6829  0254  160A  158A  2300  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6830  0259  0835               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6831  025A  1683               	bsf	3,5	;RP0=1, select bank1
  6832  025B  00C2               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6833  025C  1283               	bcf	3,5	;RP0=0, select bank0
  6834  025D  0834               	movf	?_EEPROM_24C1025_Read_Int,w
  6835  025E  298E               	goto	L8
  6836  025F                     l7356:	
  6837                           ;SlaveLiofilizadorVer1.c: 499:              Send_To_MB(2);
  6838                           
  6839                           
  6840                           ;SlaveLiofilizadorVer1.c: 505:              {;SlaveLiofilizadorVer1.c: 506:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 507:              sizedata=usart_protocol.value
      +                          [5];
  6841  025F  1683               	bsf	3,5	;RP0=1, select bank3
  6842  0260  1703               	bsf	3,6	;RP1=1, select bank3
  6843  0261  0855               	movf	(_usart_protocol^(0+384)+11),w
  6844  0262  1283               	bcf	3,5	;RP0=0, select bank0
  6845  0263  1303               	bcf	3,6	;RP1=0, select bank0
  6846  0264  00E0               	movwf	??_Decodify_Command
  6847  0265  0860               	movf	??_Decodify_Command,w
  6848  0266  1683               	bsf	3,5	;RP0=1, select bank1
  6849  0267  00C8               	movwf	Decodify_Command@sizedata^(0+128)
  6850                           
  6851                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  6852  0268  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6853  0269  1283               	bcf	3,5	;RP0=0, select bank0
  6854  026A  00A9               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  6855  026B  1683               	bsf	3,5	;RP0=1, select bank1
  6856  026C  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6857  026D  1283               	bcf	3,5	;RP0=0, select bank0
  6858  026E  00A8               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  6859  026F  1683               	bsf	3,5	;RP0=1, select bank1
  6860  0270  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6861  0271  1283               	bcf	3,5	;RP0=0, select bank0
  6862  0272  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  6863  0273  1683               	bsf	3,5	;RP0=1, select bank1
  6864  0274  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6865  0275  1283               	bcf	3,5	;RP0=0, select bank0
  6866  0276  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  6867  0277  1683               	bsf	3,5	;RP0=1, select bank1
  6868  0278  0848               	movf	Decodify_Command@sizedata^(0+128),w
  6869  0279  1283               	bcf	3,5	;RP0=0, select bank0
  6870  027A  00E0               	movwf	??_Decodify_Command
  6871  027B  0860               	movf	??_Decodify_Command,w
  6872  027C  00AA               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  6873  027D  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
  6874  027E  00AB               	movwf	EEPROM_24C1025_Read_Buffer@data
  6875  027F  3001               	movlw	1
  6876  0280  00AC               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  6877  0281  1683               	bsf	3,5	;RP0=1, select bank3
  6878  0282  1703               	bsf	3,6	;RP1=1, select bank3
  6879  0283  0850               	movf	(_usart_protocol^(0+384)+6),w
  6880  0284  120A  158A  2028  120A  118A  	fcall	_EEPROM_24C1025_Read_Buffer
  6881                           
  6882                           ;SlaveLiofilizadorVer1.c: 515:              Send_To_MB(sizedata);
  6883  0289  1683               	bsf	3,5	;RP0=1, select bank1
  6884  028A  1303               	bcf	3,6	;RP1=0, select bank1
  6885  028B  0848               	movf	Decodify_Command@sizedata^(0+128),w
  6886  028C  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  6887                           
  6888                           ;SlaveLiofilizadorVer1.c: 516:              USART_put_buffer(buffer,sizedata);
  6889  0291  0848               	movf	Decodify_Command@sizedata^(0+128),w
  6890  0292  1283               	bcf	3,5	;RP0=0, select bank0
  6891  0293  00E0               	movwf	??_Decodify_Command
  6892  0294  01E1               	clrf	??_Decodify_Command+1
  6893  0295  0860               	movf	??_Decodify_Command,w
  6894  0296  00A1               	movwf	USART_put_buffer@size
  6895  0297  0861               	movf	??_Decodify_Command+1,w
  6896  0298  00A2               	movwf	USART_put_buffer@size+1
  6897  0299  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
  6898  029A  160A  158A  22DC   	fcall	_USART_put_buffer
  6899                           
  6900                           ;SlaveLiofilizadorVer1.c: 517:              };SlaveLiofilizadorVer1.c: 518:             
      +                           break;
  6901  029D  0008               	return
  6902  029E                     l7364:	
  6903                           
  6904                           ;SlaveLiofilizadorVer1.c: 521:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6905  029E  1683               	bsf	3,5	;RP0=1, select bank1
  6906  029F  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6907  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  6908  02A1  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6909  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  6910  02A3  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6911  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  6912  02A5  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6913  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  6914  02A7  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6915  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  6916  02A9  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6917  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  6918  02AB  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6919  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  6920  02AD  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6921  02AE  1683               	bsf	3,5	;RP0=1, select bank3
  6922  02AF  1703               	bsf	3,6	;RP1=1, select bank3
  6923  02B0  0855               	movf	(_usart_protocol^(0+384)+11),w
  6924  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  6925  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  6926  02B3  00E0               	movwf	??_Decodify_Command
  6927  02B4  0860               	movf	??_Decodify_Command,w
  6928  02B5  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6929  02B6  30D6               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6930  02B7  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
  6931  02B8  3001               	movlw	1
  6932  02B9  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6933  02BA  1683               	bsf	3,5	;RP0=1, select bank3
  6934  02BB  1703               	bsf	3,6	;RP1=1, select bank3
  6935  02BC  0850               	movf	(_usart_protocol^(0+384)+6),w
  6936  02BD  160A  118A  2532  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6937  02C2  292E               	goto	L7
  6938  02C3                     l7370:	
  6939                           ;SlaveLiofilizadorVer1.c: 526:              Send_To_MB(3);
  6940                           
  6941                           
  6942                           ;SlaveLiofilizadorVer1.c: 531:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6943  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  6944  02C4  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6945  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  6946  02C6  00A5               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6947  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  6948  02C8  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6949  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  6950  02CA  00A4               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6951  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  6952  02CC  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6953  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  6954  02CE  00A3               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6955  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  6956  02D0  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6957  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  6958  02D2  00A2               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6959  02D3  30D5               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6960  02D4  00E0               	movwf	??_Decodify_Command
  6961  02D5  0860               	movf	??_Decodify_Command,w
  6962  02D6  00A6               	movwf	EEPROM_24C1025_Write_Str@data
  6963  02D7  1683               	bsf	3,5	;RP0=1, select bank3
  6964  02D8  1703               	bsf	3,6	;RP1=1, select bank3
  6965  02D9  0850               	movf	(_usart_protocol^(0+384)+6),w
  6966  02DA  160A  118A  226F  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6967  02DF  292E               	goto	L7
  6968  02E0                     l7376:	
  6969                           ;SlaveLiofilizadorVer1.c: 534:              Send_To_MB(3);
  6970                           
  6971                           
  6972                           ;SlaveLiofilizadorVer1.c: 538:              {;SlaveLiofilizadorVer1.c: 539:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6973  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  6974  02E1  084C               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6975  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  6976  02E3  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6977  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  6978  02E5  084B               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6979  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  6980  02E7  00A8               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6981  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  6982  02E9  084A               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6983  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  6984  02EB  00A7               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6985  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  6986  02ED  0849               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6987  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  6988  02EF  00A6               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6989  02F0  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  6990  02F1  00E0               	movwf	??_Decodify_Command
  6991  02F2  0860               	movf	??_Decodify_Command,w
  6992  02F3  00AA               	movwf	EEPROM_24C1025_Read_Str@texto
  6993  02F4  1683               	bsf	3,5	;RP0=1, select bank3
  6994  02F5  1703               	bsf	3,6	;RP1=1, select bank3
  6995  02F6  0850               	movf	(_usart_protocol^(0+384)+6),w
  6996  02F7  160A  118A  2694  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6997                           
  6998                           ;SlaveLiofilizadorVer1.c: 543:              Send_To_MB(strlen(texto));
  6999  02FC  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7000  02FD  160A  158A  21A3  120A  118A  	fcall	_strlen
  7001  0302  0820               	movf	?_strlen,w
  7002  0303  29BB               	goto	L9
  7003  0304                     l7380:	
  7004                           
  7005                           ;SlaveLiofilizadorVer1.c: 549:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  7006  0304  1683               	bsf	3,5	;RP0=1, select bank3
  7007  0305  1703               	bsf	3,6	;RP1=1, select bank3
  7008  0306  0851               	movf	(_usart_protocol^(0+384)+7),w
  7009  0307  1283               	bcf	3,5	;RP0=0, select bank0
  7010  0308  1303               	bcf	3,6	;RP1=0, select bank0
  7011  0309  00E0               	movwf	??_Decodify_Command
  7012  030A  01E1               	clrf	??_Decodify_Command+1
  7013  030B  0860               	movf	??_Decodify_Command,w
  7014  030C  00D8               	movwf	EEPROM_24C1025_Fill_All@value
  7015  030D  0861               	movf	??_Decodify_Command+1,w
  7016  030E  00D9               	movwf	EEPROM_24C1025_Fill_All@value+1
  7017  030F  1683               	bsf	3,5	;RP0=1, select bank3
  7018  0310  1703               	bsf	3,6	;RP1=1, select bank3
  7019  0311  0850               	movf	(_usart_protocol^(0+384)+6),w
  7020  0312  160A  158A  2637  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  7021  0317  292E               	goto	L7
  7022  0318                     l7386:	
  7023                           ;SlaveLiofilizadorVer1.c: 551:              Send_To_MB(3);
  7024                           
  7025                           
  7026                           ;SlaveLiofilizadorVer1.c: 556:              {;SlaveLiofilizadorVer1.c: 557:             
      +                           char hh[10];;SlaveLiofilizadorVer1.c: 558:              char mm[10];;SlaveLiofilizadorV
      +                          er1.c: 559:              char ss[10];;SlaveLiofilizadorVer1.c: 561:              itoa(hh
      +                          ,hora,10);
  7027  0318  1683               	bsf	3,5	;RP0=1, select bank1
  7028  0319  0866               	movf	_hora^(0+128),w	;volatile
  7029  031A  1283               	bcf	3,5	;RP0=0, select bank0
  7030  031B  00E0               	movwf	??_Decodify_Command
  7031  031C  01E1               	clrf	??_Decodify_Command+1
  7032  031D  0860               	movf	??_Decodify_Command,w
  7033  031E  00B1               	movwf	itoa@val
  7034  031F  0861               	movf	??_Decodify_Command+1,w
  7035  0320  00B2               	movwf	itoa@val+1
  7036  0321  300A               	movlw	10
  7037  0322  00B3               	movwf	itoa@base
  7038  0323  3000               	movlw	0
  7039  0324  00B4               	movwf	itoa@base+1
  7040  0325  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7041  0326  160A  158A  2255  120A  118A  	fcall	_itoa
  7042                           
  7043                           ;SlaveLiofilizadorVer1.c: 562:              itoa(mm,minuto,10);
  7044  032B  1683               	bsf	3,5	;RP0=1, select bank1
  7045  032C  0865               	movf	_minuto^(0+128),w	;volatile
  7046  032D  1283               	bcf	3,5	;RP0=0, select bank0
  7047  032E  00E0               	movwf	??_Decodify_Command
  7048  032F  01E1               	clrf	??_Decodify_Command+1
  7049  0330  0860               	movf	??_Decodify_Command,w
  7050  0331  00B1               	movwf	itoa@val
  7051  0332  0861               	movf	??_Decodify_Command+1,w
  7052  0333  00B2               	movwf	itoa@val+1
  7053  0334  300A               	movlw	10
  7054  0335  00B3               	movwf	itoa@base
  7055  0336  3000               	movlw	0
  7056  0337  00B4               	movwf	itoa@base+1
  7057  0338  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7058  0339  160A  158A  2255  120A  118A  	fcall	_itoa
  7059                           
  7060                           ;SlaveLiofilizadorVer1.c: 563:              itoa(ss,segundo,10);
  7061  033E  1683               	bsf	3,5	;RP0=1, select bank1
  7062  033F  0867               	movf	_segundo^(0+128),w	;volatile
  7063  0340  1283               	bcf	3,5	;RP0=0, select bank0
  7064  0341  00E0               	movwf	??_Decodify_Command
  7065  0342  01E1               	clrf	??_Decodify_Command+1
  7066  0343  0860               	movf	??_Decodify_Command,w
  7067  0344  00B1               	movwf	itoa@val
  7068  0345  0861               	movf	??_Decodify_Command+1,w
  7069  0346  00B2               	movwf	itoa@val+1
  7070  0347  300A               	movlw	10
  7071  0348  00B3               	movwf	itoa@base
  7072  0349  3000               	movlw	0
  7073  034A  00B4               	movwf	itoa@base+1
  7074  034B  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7075  034C  160A  158A  2255  120A  118A  	fcall	_itoa
  7076                           
  7077                           ;SlaveLiofilizadorVer1.c: 566:              strcpy(texto,"");
  7078  0351  304C               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  7079  0352  00E0               	movwf	??_Decodify_Command
  7080  0353  0860               	movf	??_Decodify_Command,w
  7081  0354  00A0               	movwf	strcpy@from
  7082  0355  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7083  0356  160A  158A  21D9  120A  118A  	fcall	_strcpy
  7084                           
  7085                           ;SlaveLiofilizadorVer1.c: 567:              if (hh[1]==0)
  7086  035B  1683               	bsf	3,5	;RP0=1, select bank1
  7087  035C  0821               	movf	(Decodify_Command@hh^(0+128)+1),w
  7088  035D  1D03               	btfss	3,2
  7089  035E  2B6C               	goto	l7394
  7090                           
  7091                           ;SlaveLiofilizadorVer1.c: 568:                 {;SlaveLiofilizadorVer1.c: 569:          
      +                                 strcat(texto,"0");
  7092  035F  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7093  0360  1283               	bcf	3,5	;RP0=0, select bank0
  7094  0361  00A0               	movwf	strcat@from
  7095  0362  3080               	movlw	128
  7096  0363  00A1               	movwf	strcat@from+1
  7097  0364  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7098  0365  160A  158A  237D  120A  118A  	fcall	_strcat
  7099                           
  7100                           ;SlaveLiofilizadorVer1.c: 570:                 hh[2]=0;
  7101  036A  1683               	bsf	3,5	;RP0=1, select bank1
  7102  036B  01A2               	clrf	(Decodify_Command@hh^(0+128)+2)
  7103  036C                     l7394:	
  7104                           
  7105                           ;SlaveLiofilizadorVer1.c: 572:              strcat(texto,hh);
  7106  036C  30A0               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  7107  036D  1283               	bcf	3,5	;RP0=0, select bank0
  7108  036E  00A0               	movwf	strcat@from
  7109  036F  3000               	movlw	0
  7110  0370  00A1               	movwf	strcat@from+1
  7111  0371  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7112  0372  160A  158A  237D  120A  118A  	fcall	_strcat
  7113                           
  7114                           ;SlaveLiofilizadorVer1.c: 573:              strcat(texto,":");
  7115  0377  304D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  7116  0378  00A0               	movwf	strcat@from
  7117  0379  3080               	movlw	128
  7118  037A  00A1               	movwf	strcat@from+1
  7119  037B  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7120  037C  160A  158A  237D  120A  118A  	fcall	_strcat
  7121                           
  7122                           ;SlaveLiofilizadorVer1.c: 574:              if(mm[1]==0)
  7123  0381  1683               	bsf	3,5	;RP0=1, select bank1
  7124  0382  082B               	movf	(Decodify_Command@mm^(0+128)+1),w
  7125  0383  1D03               	btfss	3,2
  7126  0384  2B92               	goto	l7404
  7127                           
  7128                           ;SlaveLiofilizadorVer1.c: 575:                 {;SlaveLiofilizadorVer1.c: 576:          
      +                                 strcat(texto,"0");
  7129  0385  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7130  0386  1283               	bcf	3,5	;RP0=0, select bank0
  7131  0387  00A0               	movwf	strcat@from
  7132  0388  3080               	movlw	128
  7133  0389  00A1               	movwf	strcat@from+1
  7134  038A  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7135  038B  160A  158A  237D  120A  118A  	fcall	_strcat
  7136                           
  7137                           ;SlaveLiofilizadorVer1.c: 577:                 mm[2]=0;
  7138  0390  1683               	bsf	3,5	;RP0=1, select bank1
  7139  0391  01AC               	clrf	(Decodify_Command@mm^(0+128)+2)
  7140  0392                     l7404:	
  7141                           
  7142                           ;SlaveLiofilizadorVer1.c: 579:              strcat(texto,mm);
  7143  0392  30AA               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  7144  0393  1283               	bcf	3,5	;RP0=0, select bank0
  7145  0394  00A0               	movwf	strcat@from
  7146  0395  3000               	movlw	0
  7147  0396  00A1               	movwf	strcat@from+1
  7148  0397  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7149  0398  160A  158A  237D  120A  118A  	fcall	_strcat
  7150                           
  7151                           ;SlaveLiofilizadorVer1.c: 580:              strcat(texto,":");
  7152  039D  304D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  7153  039E  00A0               	movwf	strcat@from
  7154  039F  3080               	movlw	128
  7155  03A0  00A1               	movwf	strcat@from+1
  7156  03A1  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7157  03A2  160A  158A  237D  120A  118A  	fcall	_strcat
  7158                           
  7159                           ;SlaveLiofilizadorVer1.c: 581:              if(ss[1]==0)
  7160  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  7161  03A8  0835               	movf	(Decodify_Command@ss^(0+128)+1),w
  7162  03A9  1D03               	btfss	3,2
  7163  03AA  2BB8               	goto	l7414
  7164                           
  7165                           ;SlaveLiofilizadorVer1.c: 582:                 {;SlaveLiofilizadorVer1.c: 583:          
      +                                 strcat(texto,"0");
  7166  03AB  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  7167  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  7168  03AD  00A0               	movwf	strcat@from
  7169  03AE  3080               	movlw	128
  7170  03AF  00A1               	movwf	strcat@from+1
  7171  03B0  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7172  03B1  160A  158A  237D  120A  118A  	fcall	_strcat
  7173                           
  7174                           ;SlaveLiofilizadorVer1.c: 584:                 ss[2]=0;
  7175  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  7176  03B7  01B6               	clrf	(Decodify_Command@ss^(0+128)+2)
  7177  03B8                     l7414:	
  7178                           
  7179                           ;SlaveLiofilizadorVer1.c: 586:              strcat(texto,ss);
  7180  03B8  30B4               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  7181  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  7182  03BA  00A0               	movwf	strcat@from
  7183  03BB  3000               	movlw	0
  7184  03BC  00A1               	movwf	strcat@from+1
  7185  03BD  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7186  03BE  160A  158A  237D  120A  118A  	fcall	_strcat
  7187                           
  7188                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(strlen(texto));
  7189  03C3  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7190  03C4  160A  158A  21A3  120A  118A  	fcall	_strlen
  7191  03C9  0820               	movf	?_strlen,w
  7192  03CA  120A  158A  2000  120A  118A  	fcall	_Send_To_MB
  7193                           
  7194                           ;SlaveLiofilizadorVer1.c: 588:              USART_put_string(texto);
  7195  03CF  30BA               	movlw	(low (_texto| (0+256)))& (0+255)
  7196  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  7197  03D1  00A1               	movwf	USART_put_string@vetor
  7198  03D2  3001               	movlw	1
  7199  03D3  00A2               	movwf	USART_put_string@vetor+1
  7200  03D4  160A  158A  246B  120A  118A  	fcall	_USART_put_string
  7201                           
  7202                           ;SlaveLiofilizadorVer1.c: 589:              USART_putc(0);
  7203  03D9  3000               	movlw	0
  7204  03DA  160A  158A  210B   	fcall	_USART_putc
  7205                           
  7206                           ;SlaveLiofilizadorVer1.c: 590:              };SlaveLiofilizadorVer1.c: 591:             
      +                           break;
  7207  03DD  0008               	return
  7208  03DE                     l7422:	
  7209                           
  7210                           ;SlaveLiofilizadorVer1.c: 594:              hora=usart_protocol.value[0];
  7211  03DE  1683               	bsf	3,5	;RP0=1, select bank3
  7212  03DF  1703               	bsf	3,6	;RP1=1, select bank3
  7213  03E0  0850               	movf	(_usart_protocol^(0+384)+6),w
  7214  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  7215  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  7216  03E3  00E0               	movwf	??_Decodify_Command
  7217  03E4  0860               	movf	??_Decodify_Command,w
  7218  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  7219  03E6  00E6               	movwf	_hora^(0+128)	;volatile
  7220                           
  7221                           ;SlaveLiofilizadorVer1.c: 595:              minuto=usart_protocol.value[1];
  7222  03E7  1703               	bsf	3,6	;RP1=1, select bank3
  7223  03E8  0851               	movf	(_usart_protocol^(0+384)+7),w
  7224  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  7225  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  7226  03EB  00E0               	movwf	??_Decodify_Command
  7227  03EC  0860               	movf	??_Decodify_Command,w
  7228  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  7229  03EE  00E5               	movwf	_minuto^(0+128)	;volatile
  7230                           
  7231                           ;SlaveLiofilizadorVer1.c: 596:              segundo=usart_protocol.value[2];
  7232  03EF  1703               	bsf	3,6	;RP1=1, select bank3
  7233  03F0  0852               	movf	(_usart_protocol^(0+384)+8),w
  7234  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  7235  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  7236  03F3  00E0               	movwf	??_Decodify_Command
  7237  03F4  0860               	movf	??_Decodify_Command,w
  7238  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  7239  03F6  00E7               	movwf	_segundo^(0+128)	;volatile
  7240  03F7  292E               	goto	L7
  7241  03F8                     l7428:	
  7242                           ;SlaveLiofilizadorVer1.c: 597:              Send_To_MB(3);
  7243                           
  7244                           
  7245                           ;SlaveLiofilizadorVer1.c: 602:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7246  03F8  1683               	bsf	3,5	;RP0=1, select bank3
  7247  03F9  1703               	bsf	3,6	;RP1=1, select bank3
  7248  03FA  0850               	movf	(_usart_protocol^(0+384)+6),w
  7249  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  7250  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  7251  03FD  00E0               	movwf	??_Decodify_Command
  7252  03FE  01E1               	clrf	??_Decodify_Command+1
  7253  03FF  0860               	movf	??_Decodify_Command,w
  7254  0400  00D6               	movwf	PROCULUS_Show_Screen@screen
  7255  0401  0861               	movf	??_Decodify_Command+1,w
  7256  0402  00D7               	movwf	PROCULUS_Show_Screen@screen+1
  7257  0403  160A  158A  211B  120A  118A  	fcall	_PROCULUS_Show_Screen
  7258  0408  292E               	goto	L7
  7259  0409                     l7434:	
  7260                           ;SlaveLiofilizadorVer1.c: 603:              Send_To_MB(3);
  7261                           
  7262                           
  7263                           ;SlaveLiofilizadorVer1.c: 608:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7264  0409  1683               	bsf	3,5	;RP0=1, select bank3
  7265  040A  1703               	bsf	3,6	;RP1=1, select bank3
  7266  040B  0850               	movf	(_usart_protocol^(0+384)+6),w
  7267  040C  1283               	bcf	3,5	;RP0=0, select bank0
  7268  040D  1303               	bcf	3,6	;RP1=0, select bank0
  7269  040E  00E0               	movwf	??_Decodify_Command
  7270  040F  01E1               	clrf	??_Decodify_Command+1
  7271  0410  0860               	movf	??_Decodify_Command,w
  7272  0411  00E1               	movwf	??_Decodify_Command+1
  7273  0412  01E0               	clrf	??_Decodify_Command
  7274  0413  1683               	bsf	3,5	;RP0=1, select bank3
  7275  0414  1703               	bsf	3,6	;RP1=1, select bank3
  7276  0415  0851               	movf	(_usart_protocol^(0+384)+7),w
  7277  0416  1283               	bcf	3,5	;RP0=0, select bank0
  7278  0417  1303               	bcf	3,6	;RP1=0, select bank0
  7279  0418  0760               	addwf	??_Decodify_Command,w
  7280  0419  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  7281  041A  3000               	movlw	0
  7282  041B  1803               	skipnc
  7283  041C  3001               	movlw	1
  7284  041D  0761               	addwf	??_Decodify_Command+1,w
  7285  041E  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  7286  041F  160A  158A  2297  120A  118A  	fcall	_PROCULUS_Buzzer
  7287  0424  292E               	goto	L7
  7288  0425                     l7440:	
  7289                           ;SlaveLiofilizadorVer1.c: 610:              Send_To_MB(3);
  7290                           
  7291                           
  7292                           ;SlaveLiofilizadorVer1.c: 614:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  7293  0425  1683               	bsf	3,5	;RP0=1, select bank3
  7294  0426  1703               	bsf	3,6	;RP1=1, select bank3
  7295  0427  0850               	movf	(_usart_protocol^(0+384)+6),w
  7296  0428  1283               	bcf	3,5	;RP0=0, select bank0
  7297  0429  1303               	bcf	3,6	;RP1=0, select bank0
  7298  042A  00E0               	movwf	??_Decodify_Command
  7299  042B  01E1               	clrf	??_Decodify_Command+1
  7300  042C  0860               	movf	??_Decodify_Command,w
  7301  042D  00E1               	movwf	??_Decodify_Command+1
  7302  042E  01E0               	clrf	??_Decodify_Command
  7303  042F  1683               	bsf	3,5	;RP0=1, select bank3
  7304  0430  1703               	bsf	3,6	;RP1=1, select bank3
  7305  0431  0851               	movf	(_usart_protocol^(0+384)+7),w
  7306  0432  1283               	bcf	3,5	;RP0=0, select bank0
  7307  0433  1303               	bcf	3,6	;RP1=0, select bank0
  7308  0434  0760               	addwf	??_Decodify_Command,w
  7309  0435  00DA               	movwf	PROCULUS_VP_Write_String@vp
  7310  0436  3000               	movlw	0
  7311  0437  1803               	skipnc
  7312  0438  3001               	movlw	1
  7313  0439  0761               	addwf	??_Decodify_Command+1,w
  7314  043A  00DB               	movwf	PROCULUS_VP_Write_String@vp+1
  7315  043B  30D2               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  7316  043C  00E2               	movwf	??_Decodify_Command+2
  7317  043D  0862               	movf	??_Decodify_Command+2,w
  7318  043E  00DC               	movwf	PROCULUS_VP_Write_String@text
  7319  043F  160A  158A  215C  120A  118A  	fcall	_PROCULUS_VP_Write_String
  7320  0444  292E               	goto	L7
  7321  0445                     l7446:	
  7322                           ;SlaveLiofilizadorVer1.c: 617:              Send_To_MB(3);
  7323                           
  7324                           
  7325                           ;SlaveLiofilizadorVer1.c: 623:              if(usart_protocol.value[0]==0)
  7326  0445  1683               	bsf	3,5	;RP0=1, select bank3
  7327  0446  1703               	bsf	3,6	;RP1=1, select bank3
  7328  0447  0850               	movf	(_usart_protocol^(0+384)+6),w
  7329  0448  1D03               	btfss	3,2
  7330  0449  2C55               	goto	l7452
  7331                           
  7332                           ;SlaveLiofilizadorVer1.c: 624:                 {;SlaveLiofilizadorVer1.c: 625:          
      +                                 if(!usart_protocol.value[1])
  7333  044A  0851               	movf	(_usart_protocol^(0+384)+7),w
  7334  044B  1D03               	btfss	3,2
  7335  044C  2C51               	goto	l288
  7336                           
  7337                           ;SlaveLiofilizadorVer1.c: 626:                    PORTCbits.RC0=0;
  7338  044D  1283               	bcf	3,5	;RP0=0, select bank0
  7339  044E  1303               	bcf	3,6	;RP1=0, select bank0
  7340  044F  1007               	bcf	7,0	;volatile
  7341  0450  292E               	goto	L7
  7342  0451                     l288:	
  7343                           ;SlaveLiofilizadorVer1.c: 627:                 else
  7344                           
  7345                           
  7346                           ;SlaveLiofilizadorVer1.c: 628:                    PORTCbits.RC0=1;
  7347  0451  1283               	bcf	3,5	;RP0=0, select bank0
  7348  0452  1303               	bcf	3,6	;RP1=0, select bank0
  7349  0453  1407               	bsf	7,0	;volatile
  7350  0454  292E               	goto	L7
  7351  0455                     l7452:	
  7352  0455  0350               	decf	(_usart_protocol^(0+384)+6),w
  7353  0456  1D03               	btfss	3,2
  7354  0457  292E               	goto	L7
  7355                           
  7356                           ;SlaveLiofilizadorVer1.c: 631:                      {;SlaveLiofilizadorVer1.c: 632:     
      +                                            if(!usart_protocol.value[1])
  7357  0458  0851               	movf	(_usart_protocol^(0+384)+7),w
  7358  0459  1D03               	btfss	3,2
  7359  045A  2C5F               	goto	l292
  7360                           
  7361                           ;SlaveLiofilizadorVer1.c: 633:                          PORTCbits.RC1=0;
  7362  045B  1283               	bcf	3,5	;RP0=0, select bank0
  7363  045C  1303               	bcf	3,6	;RP1=0, select bank0
  7364  045D  1087               	bcf	7,1	;volatile
  7365  045E  292E               	goto	L7
  7366  045F                     l292:	
  7367                           ;SlaveLiofilizadorVer1.c: 634:                       else
  7368                           
  7369                           
  7370                           ;SlaveLiofilizadorVer1.c: 635:                          PORTCbits.RC1=1;
  7371  045F  1283               	bcf	3,5	;RP0=0, select bank0
  7372  0460  1303               	bcf	3,6	;RP1=0, select bank0
  7373  0461  1487               	bsf	7,1	;volatile
  7374  0462  292E               	goto	L7
  7375  0463                     l7464:	
  7376                           ;SlaveLiofilizadorVer1.c: 637:              Send_To_MB(3);
  7377                           
  7378  0463  1703               	bsf	3,6	;RP1=1, select bank3
  7379  0464  084E               	movf	(_usart_protocol^(0+384)+4),w
  7380  0465  1283               	bcf	3,5	;RP0=0, select bank0
  7381  0466  1303               	bcf	3,6	;RP1=0, select bank0
  7382  0467  00E0               	movwf	??_Decodify_Command
  7383  0468  01E1               	clrf	??_Decodify_Command+1
  7384                           
  7385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7386                           ; Switch size 1, requested type "simple"
  7387                           ; Number of cases is 1, Range of values is 0 to 0
  7388                           ; switch strategies available:
  7389                           ; Name         Instructions Cycles
  7390                           ; simple_byte            4     3 (average)
  7391                           ; direct_byte           11     8 (fixed)
  7392                           ; jumptable            260     6 (fixed)
  7393                           ;	Chosen strategy is simple_byte
  7394  0469  0861               	movf	??_Decodify_Command+1,w
  7395  046A  3A00               	xorlw	0	; case 0
  7396  046B  1903               	skipnz
  7397  046C  2C6E               	goto	l7622
  7398  046D  2CBB               	goto	l294
  7399  046E                     l7622:	
  7400                           
  7401                           ; Switch size 1, requested type "simple"
  7402                           ; Number of cases is 25, Range of values is 2 to 43
  7403                           ; switch strategies available:
  7404                           ; Name         Instructions Cycles
  7405                           ; simple_byte           76    39 (average)
  7406                           ; direct_byte          137    11 (fixed)
  7407                           ; jumptable            263     9 (fixed)
  7408                           ;	Chosen strategy is simple_byte
  7409  046E  0860               	movf	??_Decodify_Command,w
  7410  046F  3A02               	xorlw	2	; case 2
  7411  0470  1903               	skipnz
  7412  0471  28D5               	goto	l7282
  7413  0472  3A01               	xorlw	1	; case 3
  7414  0473  1903               	skipnz
  7415  0474  290F               	goto	l7290
  7416  0475  3A0B               	xorlw	11	; case 8
  7417  0476  1903               	skipnz
  7418  0477  291E               	goto	l7294
  7419  0478  3A01               	xorlw	1	; case 9
  7420  0479  1903               	skipnz
  7421  047A  2938               	goto	l7298
  7422  047B  3A03               	xorlw	3	; case 10
  7423  047C  1903               	skipnz
  7424  047D  2950               	goto	l7304
  7425  047E  3A01               	xorlw	1	; case 11
  7426  047F  1903               	skipnz
  7427  0480  2981               	goto	l7314
  7428  0481  3A07               	xorlw	7	; case 12
  7429  0482  1903               	skipnz
  7430  0483  29A1               	goto	l7320
  7431  0484  3A01               	xorlw	1	; case 13
  7432  0485  1903               	skipnz
  7433  0486  29AE               	goto	l7326
  7434  0487  3A1C               	xorlw	28	; case 17
  7435  0488  1903               	skipnz
  7436  0489  29C9               	goto	l7332
  7437  048A  3A03               	xorlw	3	; case 18
  7438  048B  1903               	skipnz
  7439  048C  29EA               	goto	l7338
  7440  048D  3A01               	xorlw	1	; case 19
  7441  048E  1903               	skipnz
  7442  048F  2A11               	goto	l7344
  7443  0490  3A07               	xorlw	7	; case 20
  7444  0491  1903               	skipnz
  7445  0492  2A41               	goto	l7350
  7446  0493  3A01               	xorlw	1	; case 21
  7447  0494  1903               	skipnz
  7448  0495  2AC3               	goto	l7370
  7449  0496  3A03               	xorlw	3	; case 22
  7450  0497  1903               	skipnz
  7451  0498  2AE0               	goto	l7376
  7452  0499  3A01               	xorlw	1	; case 23
  7453  049A  1903               	skipnz
  7454  049B  2A9E               	goto	l7364
  7455  049C  3A0F               	xorlw	15	; case 24
  7456  049D  1903               	skipnz
  7457  049E  2A5F               	goto	l7356
  7458  049F  3A01               	xorlw	1	; case 25
  7459  04A0  1903               	skipnz
  7460  04A1  2B04               	goto	l7380
  7461  04A2  3A03               	xorlw	3	; case 26
  7462  04A3  1903               	skipnz
  7463  04A4  286D               	goto	l7266
  7464  04A5  3A04               	xorlw	4	; case 30
  7465  04A6  1903               	skipnz
  7466  04A7  2BDE               	goto	l7422
  7467  04A8  3A01               	xorlw	1	; case 31
  7468  04A9  1903               	skipnz
  7469  04AA  2B18               	goto	l7386
  7470  04AB  3A3F               	xorlw	63	; case 32
  7471  04AC  1903               	skipnz
  7472  04AD  2BF8               	goto	l7428
  7473  04AE  3A01               	xorlw	1	; case 33
  7474  04AF  1903               	skipnz
  7475  04B0  2C09               	goto	l7434
  7476  04B1  3A05               	xorlw	5	; case 36
  7477  04B2  1903               	skipnz
  7478  04B3  2C25               	goto	l7440
  7479  04B4  3A02               	xorlw	2	; case 38
  7480  04B5  1903               	skipnz
  7481  04B6  2C45               	goto	l7446
  7482  04B7  3A0D               	xorlw	13	; case 43
  7483  04B8  1903               	skipnz
  7484  04B9  285E               	goto	l7262
  7485  04BA  2CBB               	goto	l294
  7486  04BB                     l294:	
  7487  04BB  0008               	return
  7488  04BC                     __end_of_Decodify_Command:	
  7489                           
  7490                           	psect	text17
  7491  19D9                     __ptext17:	
  7492 ;; *************** function _strcpy *****************
  7493 ;; Defined at:
  7494 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;  to              1    wreg     PTR unsigned char 
  7497 ;;		 -> texto(16), 
  7498 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  7499 ;;		 -> STR_2(1), 
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;  to              1    2[BANK0 ] PTR unsigned char 
  7502 ;;		 -> texto(16), 
  7503 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7504 ;;		 -> texto(16), 
  7505 ;; Return value:  Size  Location     Type
  7506 ;;                  1    wreg      PTR unsigned char 
  7507 ;; Registers used:
  7508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7509 ;; Tracked objects:
  7510 ;;		On entry : B00/0
  7511 ;;		On exit  : B00/800
  7512 ;;		Unchanged: 0/0
  7513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7514 ;;      Params:         0       1       0       0       0
  7515 ;;      Locals:         0       2       0       0       0
  7516 ;;      Temps:          0       1       0       0       0
  7517 ;;      Totals:         0       4       0       0       0
  7518 ;;Total ram usage:        4 bytes
  7519 ;; Hardware stack levels used:    2
  7520 ;; Hardware stack levels required when called:    1
  7521 ;; This function calls:
  7522 ;;		Nothing
  7523 ;; This function is called by:
  7524 ;;		_Decodify_Command
  7525 ;; This function uses a non-reentrant model
  7526 ;;
  7527                           
  7528                           
  7529                           ;psect for function _strcpy
  7530  19D9                     _strcpy:	
  7531                           
  7532                           ;incstack = 0
  7533                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  7534                           ;strcpy@to stored from wreg
  7535  19D9  00A2               	movwf	strcpy@to
  7536  19DA  0822               	movf	strcpy@to,w
  7537  19DB  00A1               	movwf	??_strcpy
  7538  19DC  0821               	movf	??_strcpy,w
  7539  19DD  00A3               	movwf	strcpy@cp
  7540  19DE                     l6818:	
  7541  19DE  0820               	movf	strcpy@from,w
  7542  19DF  0084               	movwf	4
  7543  19E0  160A  158A  200A  160A  158A  	fcall	stringdir
  7544  19E5  00A1               	movwf	??_strcpy
  7545  19E6  0823               	movf	strcpy@cp,w
  7546  19E7  0084               	movwf	4
  7547  19E8  0821               	movf	??_strcpy,w
  7548  19E9  1783               	bsf	3,7	;select IRP bank2
  7549  19EA  0080               	movwf	0
  7550  19EB  0800               	movf	0,w
  7551  19EC  1903               	btfsc	3,2
  7552  19ED  0008               	return
  7553  19EE  3001               	movlw	1
  7554  19EF  00A1               	movwf	??_strcpy
  7555  19F0  0821               	movf	??_strcpy,w
  7556  19F1  07A3               	addwf	strcpy@cp,f
  7557  19F2  3001               	movlw	1
  7558  19F3  00A1               	movwf	??_strcpy
  7559  19F4  0821               	movf	??_strcpy,w
  7560  19F5  07A0               	addwf	strcpy@from,f
  7561  19F6  29DE               	goto	l6818
  7562  19F7                     __end_of_strcpy:	
  7563                           
  7564                           	psect	text18
  7565  1B7D                     __ptext18:	
  7566 ;; *************** function _strcat *****************
  7567 ;; Defined at:
  7568 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;  to              1    wreg     PTR unsigned char 
  7571 ;;		 -> texto(16), 
  7572 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  7573 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  7574 ;;		 -> STR_3(2), Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;  to              1    4[BANK0 ] PTR unsigned char 
  7577 ;;		 -> texto(16), 
  7578 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7579 ;;		 -> texto(16), 
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  1    wreg      PTR unsigned char 
  7582 ;; Registers used:
  7583 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7584 ;; Tracked objects:
  7585 ;;		On entry : B00/800
  7586 ;;		On exit  : B00/800
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7589 ;;      Params:         0       2       0       0       0
  7590 ;;      Locals:         0       2       0       0       0
  7591 ;;      Temps:          0       1       0       0       0
  7592 ;;      Totals:         0       5       0       0       0
  7593 ;;Total ram usage:        5 bytes
  7594 ;; Hardware stack levels used:    2
  7595 ;; Hardware stack levels required when called:    1
  7596 ;; This function calls:
  7597 ;;		Nothing
  7598 ;; This function is called by:
  7599 ;;		_Decodify_Command
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           
  7604                           ;psect for function _strcat
  7605  1B7D                     _strcat:	
  7606                           
  7607                           ;incstack = 0
  7608                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7609                           ;strcat@to stored from wreg
  7610  1B7D  00A4               	movwf	strcat@to
  7611  1B7E  0824               	movf	strcat@to,w
  7612  1B7F  00A2               	movwf	??_strcat
  7613  1B80  0822               	movf	??_strcat,w
  7614  1B81  00A3               	movwf	strcat@cp
  7615  1B82                     l6824:	
  7616  1B82  0823               	movf	strcat@cp,w
  7617  1B83  0084               	movwf	4
  7618  1B84  0800               	movf	0,w
  7619  1B85  1903               	btfsc	3,2
  7620  1B86  2B96               	goto	l6830
  7621  1B87  3001               	movlw	1
  7622  1B88  00A2               	movwf	??_strcat
  7623  1B89  0822               	movf	??_strcat,w
  7624  1B8A  07A3               	addwf	strcat@cp,f
  7625  1B8B  2B82               	goto	l6824
  7626  1B8C                     l6826:	
  7627  1B8C  3001               	movlw	1
  7628  1B8D  00A2               	movwf	??_strcat
  7629  1B8E  0822               	movf	??_strcat,w
  7630  1B8F  07A3               	addwf	strcat@cp,f
  7631  1B90  3001               	movlw	1
  7632  1B91  07A0               	addwf	strcat@from,f
  7633  1B92  1803               	skipnc
  7634  1B93  0AA1               	incf	strcat@from+1,f
  7635  1B94  3000               	movlw	0
  7636  1B95  07A1               	addwf	strcat@from+1,f
  7637  1B96                     l6830:	
  7638  1B96  0821               	movf	strcat@from+1,w
  7639  1B97  00FF               	movwf	127
  7640  1B98  0820               	movf	strcat@from,w
  7641  1B99  0084               	movwf	4
  7642  1B9A  160A  158A  2000  160A  158A  	fcall	stringtab
  7643  1B9F  00A2               	movwf	??_strcat
  7644  1BA0  0823               	movf	strcat@cp,w
  7645  1BA1  0084               	movwf	4
  7646  1BA2  0822               	movf	??_strcat,w
  7647  1BA3  1783               	bsf	3,7	;select IRP bank2
  7648  1BA4  0080               	movwf	0
  7649  1BA5  0800               	movf	0,w
  7650  1BA6  1903               	btfsc	3,2
  7651  1BA7  0008               	return
  7652  1BA8  2B8C               	goto	l6826
  7653  1BA9                     __end_of_strcat:	
  7654                           
  7655                           	psect	text19
  7656  1A55                     __ptext19:	
  7657 ;; *************** function _itoa *****************
  7658 ;; Defined at:
  7659 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;  buf             1    wreg     PTR unsigned char 
  7662 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7663 ;;  val             2   17[BANK0 ] int 
  7664 ;;  base            2   19[BANK0 ] int 
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;  buf             1   23[BANK0 ] PTR unsigned char 
  7667 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7668 ;;  cp              1    0        PTR unsigned char 
  7669 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  1    wreg      PTR unsigned char 
  7672 ;; Registers used:
  7673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7674 ;; Tracked objects:
  7675 ;;		On entry : 300/0
  7676 ;;		On exit  : B00/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7679 ;;      Params:         0       4       0       0       0
  7680 ;;      Locals:         0       2       0       0       0
  7681 ;;      Temps:          0       1       0       0       0
  7682 ;;      Totals:         0       7       0       0       0
  7683 ;;Total ram usage:        7 bytes
  7684 ;; Hardware stack levels used:    1
  7685 ;; Hardware stack levels required when called:    3
  7686 ;; This function calls:
  7687 ;;		_utoa
  7688 ;; This function is called by:
  7689 ;;		_Decodify_Command
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           
  7694                           ;psect for function _itoa
  7695  1A55                     _itoa:	
  7696                           
  7697                           ;incstack = 0
  7698                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7699                           ;itoa@buf stored from wreg
  7700  1A55  00B7               	movwf	itoa@buf
  7701  1A56  1FB2               	btfss	itoa@val+1,7
  7702  1A57  2A68               	goto	l6810
  7703  1A58  302D               	movlw	45
  7704  1A59  00B5               	movwf	??_itoa
  7705  1A5A  0837               	movf	itoa@buf,w
  7706  1A5B  0084               	movwf	4
  7707  1A5C  0835               	movf	??_itoa,w
  7708  1A5D  1383               	bcf	3,7	;select IRP bank0
  7709  1A5E  0080               	movwf	0
  7710  1A5F  3001               	movlw	1
  7711  1A60  00B5               	movwf	??_itoa
  7712  1A61  0835               	movf	??_itoa,w
  7713  1A62  07B7               	addwf	itoa@buf,f
  7714  1A63  09B1               	comf	itoa@val,f
  7715  1A64  09B2               	comf	itoa@val+1,f
  7716  1A65  0AB1               	incf	itoa@val,f
  7717  1A66  1903               	skipnz
  7718  1A67  0AB2               	incf	itoa@val+1,f
  7719  1A68                     l6810:	
  7720  1A68  0832               	movf	itoa@val+1,w
  7721  1A69  00A9               	movwf	utoa@val+1
  7722  1A6A  0831               	movf	itoa@val,w
  7723  1A6B  00A8               	movwf	utoa@val
  7724  1A6C  0834               	movf	itoa@base+1,w
  7725  1A6D  00AB               	movwf	utoa@base+1
  7726  1A6E  0833               	movf	itoa@base,w
  7727  1A6F  00AA               	movwf	utoa@base
  7728  1A70  0837               	movf	itoa@buf,w
  7729  1A71  160A  158A  2731   	fcall	_utoa
  7730  1A74  0008               	return
  7731  1A75                     __end_of_itoa:	
  7732                           
  7733                           	psect	text20
  7734  1F31                     __ptext20:	
  7735 ;; *************** function _utoa *****************
  7736 ;; Defined at:
  7737 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;  buf             1    wreg     PTR unsigned char 
  7740 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7741 ;;  val             2    8[BANK0 ] unsigned int 
  7742 ;;  base            2   10[BANK0 ] int 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  7745 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  7746 ;;  v               2   13[BANK0 ] unsigned int 
  7747 ;;  c               1   15[BANK0 ] unsigned char 
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  1    wreg      PTR unsigned char 
  7750 ;; Registers used:
  7751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7752 ;; Tracked objects:
  7753 ;;		On entry : 300/0
  7754 ;;		On exit  : B00/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7757 ;;      Params:         0       4       0       0       0
  7758 ;;      Locals:         0       4       0       0       0
  7759 ;;      Temps:          0       1       0       0       0
  7760 ;;      Totals:         0       9       0       0       0
  7761 ;;Total ram usage:        9 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; Hardware stack levels required when called:    2
  7764 ;; This function calls:
  7765 ;;		___lwdiv
  7766 ;;		___lwmod
  7767 ;; This function is called by:
  7768 ;;		_itoa
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772                           
  7773                           ;psect for function _utoa
  7774  1F31                     _utoa:	
  7775                           
  7776                           ;incstack = 0
  7777                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7778                           ;utoa@buf stored from wreg
  7779  1F31  00B0               	movwf	utoa@buf
  7780  1F32  0829               	movf	utoa@val+1,w
  7781  1F33  00AE               	movwf	utoa@v+1
  7782  1F34  0828               	movf	utoa@val,w
  7783  1F35  00AD               	movwf	utoa@v
  7784  1F36                     l6466:	
  7785  1F36  082B               	movf	utoa@base+1,w
  7786  1F37  00A1               	movwf	___lwdiv@divisor+1
  7787  1F38  082A               	movf	utoa@base,w
  7788  1F39  00A0               	movwf	___lwdiv@divisor
  7789  1F3A  082E               	movf	utoa@v+1,w
  7790  1F3B  00A3               	movwf	___lwdiv@dividend+1
  7791  1F3C  082D               	movf	utoa@v,w
  7792  1F3D  00A2               	movwf	___lwdiv@dividend
  7793  1F3E  160A  158A  2581  160A  158A  	fcall	___lwdiv
  7794  1F43  0821               	movf	?___lwdiv+1,w
  7795  1F44  00AE               	movwf	utoa@v+1
  7796  1F45  0820               	movf	?___lwdiv,w
  7797  1F46  00AD               	movwf	utoa@v
  7798  1F47  3001               	movlw	1
  7799  1F48  00AC               	movwf	??_utoa
  7800  1F49  082C               	movf	??_utoa,w
  7801  1F4A  07B0               	addwf	utoa@buf,f
  7802  1F4B  082D               	movf	utoa@v,w
  7803  1F4C  042E               	iorwf	utoa@v+1,w
  7804  1F4D  1D03               	btfss	3,2
  7805  1F4E  2F36               	goto	l6466
  7806  1F4F  0830               	movf	utoa@buf,w
  7807  1F50  0084               	movwf	4
  7808  1F51  1383               	bcf	3,7	;select IRP bank0
  7809  1F52  0180               	clrf	0
  7810  1F53  3001               	movlw	1
  7811  1F54  02B0               	subwf	utoa@buf,f
  7812  1F55                     l6476:	
  7813  1F55  082B               	movf	utoa@base+1,w
  7814  1F56  00A1               	movwf	___lwmod@divisor+1
  7815  1F57  082A               	movf	utoa@base,w
  7816  1F58  00A0               	movwf	___lwmod@divisor
  7817  1F59  0829               	movf	utoa@val+1,w
  7818  1F5A  00A3               	movwf	___lwmod@dividend+1
  7819  1F5B  0828               	movf	utoa@val,w
  7820  1F5C  00A2               	movwf	___lwmod@dividend
  7821  1F5D  160A  158A  2439  160A  158A  	fcall	___lwmod
  7822  1F62  0820               	movf	?___lwmod,w
  7823  1F63  00AC               	movwf	??_utoa
  7824  1F64  082C               	movf	??_utoa,w
  7825  1F65  00AF               	movwf	utoa@c
  7826  1F66  082B               	movf	utoa@base+1,w
  7827  1F67  00A1               	movwf	___lwdiv@divisor+1
  7828  1F68  082A               	movf	utoa@base,w
  7829  1F69  00A0               	movwf	___lwdiv@divisor
  7830  1F6A  0829               	movf	utoa@val+1,w
  7831  1F6B  00A3               	movwf	___lwdiv@dividend+1
  7832  1F6C  0828               	movf	utoa@val,w
  7833  1F6D  00A2               	movwf	___lwdiv@dividend
  7834  1F6E  160A  158A  2581  160A  158A  	fcall	___lwdiv
  7835  1F73  0821               	movf	?___lwdiv+1,w
  7836  1F74  00A9               	movwf	utoa@val+1
  7837  1F75  0820               	movf	?___lwdiv,w
  7838  1F76  00A8               	movwf	utoa@val
  7839  1F77  300A               	movlw	10
  7840  1F78  022F               	subwf	utoa@c,w
  7841  1F79  1C03               	skipc
  7842  1F7A  2F7F               	goto	l1403
  7843  1F7B  3007               	movlw	7
  7844  1F7C  00AC               	movwf	??_utoa
  7845  1F7D  082C               	movf	??_utoa,w
  7846  1F7E  07AF               	addwf	utoa@c,f
  7847  1F7F                     l1403:	
  7848  1F7F  3030               	movlw	48
  7849  1F80  00AC               	movwf	??_utoa
  7850  1F81  082C               	movf	??_utoa,w
  7851  1F82  07AF               	addwf	utoa@c,f
  7852  1F83  082F               	movf	utoa@c,w
  7853  1F84  00AC               	movwf	??_utoa
  7854  1F85  0830               	movf	utoa@buf,w
  7855  1F86  0084               	movwf	4
  7856  1F87  082C               	movf	??_utoa,w
  7857  1F88  1383               	bcf	3,7	;select IRP bank0
  7858  1F89  0080               	movwf	0
  7859  1F8A  3001               	movlw	1
  7860  1F8B  02B0               	subwf	utoa@buf,f
  7861  1F8C  0828               	movf	utoa@val,w
  7862  1F8D  0429               	iorwf	utoa@val+1,w
  7863  1F8E  1D03               	btfss	3,2
  7864  1F8F  2F55               	goto	l6476
  7865                           
  7866                           ;	Return value of _utoa is never used
  7867  1F90  3001               	movlw	1
  7868  1F91  00AC               	movwf	??_utoa
  7869  1F92  082C               	movf	??_utoa,w
  7870  1F93  07B0               	addwf	utoa@buf,f
  7871  1F94  0008               	return
  7872  1F95                     __end_of_utoa:	
  7873                           
  7874                           	psect	text21
  7875  1C39                     __ptext21:	
  7876 ;; *************** function ___lwmod *****************
  7877 ;; Defined at:
  7878 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;  divisor         2    0[BANK0 ] unsigned int 
  7881 ;;  dividend        2    2[BANK0 ] unsigned int 
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;  counter         1    5[BANK0 ] unsigned char 
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  2    0[BANK0 ] unsigned int 
  7886 ;; Registers used:
  7887 ;;		wreg, status,2, status,0
  7888 ;; Tracked objects:
  7889 ;;		On entry : 300/0
  7890 ;;		On exit  : 300/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7893 ;;      Params:         0       4       0       0       0
  7894 ;;      Locals:         0       1       0       0       0
  7895 ;;      Temps:          0       1       0       0       0
  7896 ;;      Totals:         0       6       0       0       0
  7897 ;;Total ram usage:        6 bytes
  7898 ;; Hardware stack levels used:    1
  7899 ;; Hardware stack levels required when called:    1
  7900 ;; This function calls:
  7901 ;;		Nothing
  7902 ;; This function is called by:
  7903 ;;		_utoa
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907                           
  7908                           ;psect for function ___lwmod
  7909  1C39                     ___lwmod:	
  7910                           
  7911                           ;incstack = 0
  7912                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7913  1C39  0820               	movf	___lwmod@divisor,w
  7914  1C3A  0421               	iorwf	___lwmod@divisor+1,w
  7915  1C3B  1903               	btfsc	3,2
  7916  1C3C  2C66               	goto	l5832
  7917  1C3D  01A5               	clrf	___lwmod@counter
  7918  1C3E  0AA5               	incf	___lwmod@counter,f
  7919  1C3F                     l5822:	
  7920  1C3F  1BA1               	btfsc	___lwmod@divisor+1,7
  7921  1C40  2C4D               	goto	l5824
  7922  1C41  3001               	movlw	1
  7923  1C42                     u5615:	
  7924  1C42  1003               	clrc
  7925  1C43  0DA0               	rlf	___lwmod@divisor,f
  7926  1C44  0DA1               	rlf	___lwmod@divisor+1,f
  7927  1C45  3EFF               	addlw	-1
  7928  1C46  1D03               	skipz
  7929  1C47  2C42               	goto	u5615
  7930  1C48  3001               	movlw	1
  7931  1C49  00A4               	movwf	??___lwmod
  7932  1C4A  0824               	movf	??___lwmod,w
  7933  1C4B  07A5               	addwf	___lwmod@counter,f
  7934  1C4C  2C3F               	goto	l5822
  7935  1C4D                     l5824:	
  7936  1C4D  0821               	movf	___lwmod@divisor+1,w
  7937  1C4E  0223               	subwf	___lwmod@dividend+1,w
  7938  1C4F  1D03               	skipz
  7939  1C50  2C53               	goto	u5635
  7940  1C51  0820               	movf	___lwmod@divisor,w
  7941  1C52  0222               	subwf	___lwmod@dividend,w
  7942  1C53                     u5635:	
  7943  1C53  1C03               	skipc
  7944  1C54  2C5B               	goto	l5828
  7945  1C55  0820               	movf	___lwmod@divisor,w
  7946  1C56  02A2               	subwf	___lwmod@dividend,f
  7947  1C57  0821               	movf	___lwmod@divisor+1,w
  7948  1C58  1C03               	skipc
  7949  1C59  03A3               	decf	___lwmod@dividend+1,f
  7950  1C5A  02A3               	subwf	___lwmod@dividend+1,f
  7951  1C5B                     l5828:	
  7952  1C5B  3001               	movlw	1
  7953  1C5C                     u5645:	
  7954  1C5C  1003               	clrc
  7955  1C5D  0CA1               	rrf	___lwmod@divisor+1,f
  7956  1C5E  0CA0               	rrf	___lwmod@divisor,f
  7957  1C5F  3EFF               	addlw	-1
  7958  1C60  1D03               	skipz
  7959  1C61  2C5C               	goto	u5645
  7960  1C62  3001               	movlw	1
  7961  1C63  02A5               	subwf	___lwmod@counter,f
  7962  1C64  1D03               	btfss	3,2
  7963  1C65  2C4D               	goto	l5824
  7964  1C66                     l5832:	
  7965  1C66  0823               	movf	___lwmod@dividend+1,w
  7966  1C67  00A1               	movwf	?___lwmod+1
  7967  1C68  0822               	movf	___lwmod@dividend,w
  7968  1C69  00A0               	movwf	?___lwmod
  7969  1C6A  0008               	return
  7970  1C6B                     __end_of___lwmod:	
  7971                           
  7972                           	psect	text22
  7973  1E76                     __ptext22:	
  7974 ;; *************** function _USART_to_Protocol *****************
  7975 ;; Defined at:
  7976 ;;		line 77 in file "usart.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;  usart_protoc    1    wreg     PTR struct .
  7979 ;;		 -> usart_protocol(16), 
  7980 ;; Auto vars:     Size  Location     Type
  7981 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  7982 ;;		 -> usart_protocol(16), 
  7983 ;;  i               2    2[BANK0 ] int 
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  1    wreg      void 
  7986 ;; Registers used:
  7987 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7988 ;; Tracked objects:
  7989 ;;		On entry : 300/100
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7993 ;;      Params:         0       0       0       0       0
  7994 ;;      Locals:         0       3       0       0       0
  7995 ;;      Temps:          0       2       0       0       0
  7996 ;;      Totals:         0       5       0       0       0
  7997 ;;Total ram usage:        5 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; Hardware stack levels required when called:    1
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_Decodify_Command
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           
  8008                           ;psect for function _USART_to_Protocol
  8009  1E76                     _USART_to_Protocol:	
  8010                           
  8011                           ;incstack = 0
  8012                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  8013                           ;USART_to_Protocol@usart_protocol stored from wreg
  8014  1E76  1283               	bcf	3,5	;RP0=0, select bank0
  8015  1E77  00A4               	movwf	USART_to_Protocol@usart_protocol
  8016                           
  8017                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  8018  1E78  0824               	movf	USART_to_Protocol@usart_protocol,w
  8019  1E79  0084               	movwf	4
  8020  1E7A  1683               	bsf	3,5	;RP0=1, select bank3
  8021  1E7B  1703               	bsf	3,6	;RP1=1, select bank3
  8022  1E7C  0811               	movf	(_usart_buffer^(0+384)+1),w	;volatile
  8023  1E7D  1783               	bsf	3,7	;select IRP bank2
  8024  1E7E  0080               	movwf	0
  8025  1E7F  0A84               	incf	4,f
  8026  1E80  0810               	movf	_usart_buffer^(0+384),w	;volatile
  8027  1E81  0080               	movwf	0
  8028                           
  8029                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  8030  1E82  0812               	movf	(_usart_buffer^(0+384)+2),w	;volatile
  8031  1E83  1283               	bcf	3,5	;RP0=0, select bank0
  8032  1E84  1303               	bcf	3,6	;RP1=0, select bank0
  8033  1E85  00A0               	movwf	??_USART_to_Protocol
  8034  1E86  0824               	movf	USART_to_Protocol@usart_protocol,w
  8035  1E87  3E02               	addlw	2
  8036  1E88  0084               	movwf	4
  8037  1E89  0820               	movf	??_USART_to_Protocol,w
  8038  1E8A  0080               	movwf	0
  8039                           
  8040                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  8041  1E8B  1683               	bsf	3,5	;RP0=1, select bank3
  8042  1E8C  1703               	bsf	3,6	;RP1=1, select bank3
  8043  1E8D  0813               	movf	(_usart_buffer^(0+384)+3),w	;volatile
  8044  1E8E  1283               	bcf	3,5	;RP0=0, select bank0
  8045  1E8F  1303               	bcf	3,6	;RP1=0, select bank0
  8046  1E90  00A0               	movwf	??_USART_to_Protocol
  8047  1E91  0824               	movf	USART_to_Protocol@usart_protocol,w
  8048  1E92  3E03               	addlw	3
  8049  1E93  0084               	movwf	4
  8050  1E94  0820               	movf	??_USART_to_Protocol,w
  8051  1E95  0080               	movwf	0
  8052                           
  8053                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  8054  1E96  1683               	bsf	3,5	;RP0=1, select bank3
  8055  1E97  1703               	bsf	3,6	;RP1=1, select bank3
  8056  1E98  0814               	movf	(_usart_buffer^(0+384)+4),w	;volatile
  8057  1E99  1283               	bcf	3,5	;RP0=0, select bank0
  8058  1E9A  1303               	bcf	3,6	;RP1=0, select bank0
  8059  1E9B  00A0               	movwf	??_USART_to_Protocol
  8060  1E9C  0824               	movf	USART_to_Protocol@usart_protocol,w
  8061  1E9D  3E04               	addlw	4
  8062  1E9E  0084               	movwf	4
  8063  1E9F  0820               	movf	??_USART_to_Protocol,w
  8064  1EA0  0080               	movwf	0
  8065                           
  8066                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  8067  1EA1  1683               	bsf	3,5	;RP0=1, select bank3
  8068  1EA2  1703               	bsf	3,6	;RP1=1, select bank3
  8069  1EA3  0815               	movf	(_usart_buffer^(0+384)+5),w	;volatile
  8070  1EA4  1283               	bcf	3,5	;RP0=0, select bank0
  8071  1EA5  1303               	bcf	3,6	;RP1=0, select bank0
  8072  1EA6  00A0               	movwf	??_USART_to_Protocol
  8073  1EA7  0824               	movf	USART_to_Protocol@usart_protocol,w
  8074  1EA8  3E05               	addlw	5
  8075  1EA9  0084               	movwf	4
  8076  1EAA  0820               	movf	??_USART_to_Protocol,w
  8077  1EAB  0080               	movwf	0
  8078                           
  8079                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  8080  1EAC  01A2               	clrf	USART_to_Protocol@i
  8081  1EAD  01A3               	clrf	USART_to_Protocol@i+1
  8082  1EAE                     l6554:	
  8083  1EAE  0824               	movf	USART_to_Protocol@usart_protocol,w
  8084  1EAF  3E05               	addlw	5
  8085  1EB0  0084               	movwf	4
  8086  1EB1  0823               	movf	USART_to_Protocol@i+1,w
  8087  1EB2  3A80               	xorlw	128
  8088  1EB3  00A0               	movwf	??_USART_to_Protocol
  8089  1EB4  3080               	movlw	128
  8090  1EB5  0220               	subwf	??_USART_to_Protocol,w
  8091  1EB6  1D03               	skipz
  8092  1EB7  2EBA               	goto	u6965
  8093  1EB8  0800               	movf	0,w
  8094  1EB9  0222               	subwf	USART_to_Protocol@i,w
  8095  1EBA                     u6965:	
  8096  1EBA  1803               	btfsc	3,0
  8097  1EBB  0008               	return
  8098                           
  8099                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  8100  1EBC  1283               	bcf	3,5	;RP0=0, select bank0
  8101  1EBD  1303               	bcf	3,6	;RP1=0, select bank0
  8102  1EBE  0822               	movf	USART_to_Protocol@i,w
  8103  1EBF  3E96               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  8104  1EC0  0084               	movwf	4
  8105  1EC1  1783               	bsf	3,7	;select IRP bank3
  8106  1EC2  0800               	movf	0,w
  8107  1EC3  00A0               	movwf	??_USART_to_Protocol
  8108  1EC4  0822               	movf	USART_to_Protocol@i,w
  8109  1EC5  0724               	addwf	USART_to_Protocol@usart_protocol,w
  8110  1EC6  00A1               	movwf	??_USART_to_Protocol+1
  8111  1EC7  0821               	movf	??_USART_to_Protocol+1,w
  8112  1EC8  3E06               	addlw	6
  8113  1EC9  0084               	movwf	4
  8114  1ECA  0820               	movf	??_USART_to_Protocol,w
  8115  1ECB  0080               	movwf	0
  8116  1ECC  3001               	movlw	1
  8117  1ECD  07A2               	addwf	USART_to_Protocol@i,f
  8118  1ECE  1803               	skipnc
  8119  1ECF  0AA3               	incf	USART_to_Protocol@i+1,f
  8120  1ED0  3000               	movlw	0
  8121  1ED1  07A3               	addwf	USART_to_Protocol@i+1,f
  8122  1ED2  2EAE               	goto	l6554
  8123  1ED3                     __end_of_USART_to_Protocol:	
  8124                           
  8125                           	psect	text23
  8126  1ADC                     __ptext23:	
  8127 ;; *************** function _USART_put_buffer *****************
  8128 ;; Defined at:
  8129 ;;		line 99 in file "usart.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;  vetor           1    wreg     PTR unsigned char 
  8132 ;;		 -> buffer(64), 
  8133 ;;  size            2    1[BANK0 ] unsigned int 
  8134 ;; Auto vars:     Size  Location     Type
  8135 ;;  vetor           1    5[BANK0 ] PTR unsigned char 
  8136 ;;		 -> buffer(64), 
  8137 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  8138 ;;		 -> USART_put_buffer@vetor(1), 
  8139 ;;  loop            1    6[BANK0 ] unsigned char 
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8144 ;; Tracked objects:
  8145 ;;		On entry : 300/0
  8146 ;;		On exit  : 300/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8149 ;;      Params:         0       2       0       0       0
  8150 ;;      Locals:         0       3       0       0       0
  8151 ;;      Temps:          0       2       0       0       0
  8152 ;;      Totals:         0       7       0       0       0
  8153 ;;Total ram usage:        7 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; Hardware stack levels required when called:    2
  8156 ;; This function calls:
  8157 ;;		_USART_putc
  8158 ;; This function is called by:
  8159 ;;		_Decodify_Command
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           
  8164                           ;psect for function _USART_put_buffer
  8165  1ADC                     _USART_put_buffer:	
  8166                           
  8167                           ;incstack = 0
  8168                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8169                           ;USART_put_buffer@vetor stored from wreg
  8170  1ADC  00A5               	movwf	USART_put_buffer@vetor
  8171                           
  8172                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  8173  1ADD  01A6               	clrf	USART_put_buffer@loop
  8174                           
  8175                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  8176  1ADE  3025               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  8177  1ADF  00A3               	movwf	??_USART_put_buffer
  8178  1AE0  0823               	movf	??_USART_put_buffer,w
  8179  1AE1  00A7               	movwf	USART_put_buffer@ptr
  8180  1AE2                     l6614:	
  8181                           ;usart.c: 105:     while(loop<size)
  8182                           
  8183                           
  8184                           ;usart.c: 105:     while(loop<size)
  8185  1AE2  0826               	movf	USART_put_buffer@loop,w
  8186  1AE3  00A3               	movwf	??_USART_put_buffer
  8187  1AE4  01A4               	clrf	??_USART_put_buffer+1
  8188  1AE5  0822               	movf	USART_put_buffer@size+1,w
  8189  1AE6  0224               	subwf	??_USART_put_buffer+1,w
  8190  1AE7  1D03               	skipz
  8191  1AE8  2AEB               	goto	u7015
  8192  1AE9  0821               	movf	USART_put_buffer@size,w
  8193  1AEA  0223               	subwf	??_USART_put_buffer,w
  8194  1AEB                     u7015:	
  8195  1AEB  1803               	btfsc	3,0
  8196  1AEC  0008               	return
  8197                           
  8198                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  8199  1AED  0827               	movf	USART_put_buffer@ptr,w
  8200  1AEE  0084               	movwf	4
  8201  1AEF  1383               	bcf	3,7	;select IRP bank0
  8202  1AF0  0800               	movf	0,w
  8203  1AF1  160A  158A  210B  160A  158A  	fcall	_USART_putc
  8204                           
  8205                           ;usart.c: 108:         ptr++;
  8206  1AF6  3001               	movlw	1
  8207  1AF7  1283               	bcf	3,5	;RP0=0, select bank0
  8208  1AF8  00A3               	movwf	??_USART_put_buffer
  8209  1AF9  0823               	movf	??_USART_put_buffer,w
  8210  1AFA  07A7               	addwf	USART_put_buffer@ptr,f
  8211                           
  8212                           ;usart.c: 109:         loop++;
  8213  1AFB  3001               	movlw	1
  8214  1AFC  00A3               	movwf	??_USART_put_buffer
  8215  1AFD  0823               	movf	??_USART_put_buffer,w
  8216  1AFE  07A6               	addwf	USART_put_buffer@loop,f
  8217  1AFF  2AE2               	goto	l6614
  8218  1B00                     __end_of_USART_put_buffer:	
  8219                           
  8220                           	psect	text24
  8221  0800                     __ptext24:	
  8222 ;; *************** function _Send_To_MB *****************
  8223 ;; Defined at:
  8224 ;;		line 647 in file "SlaveLiofilizadorVer1.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;  size            1    wreg     unsigned char 
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;  size            1    1[BANK0 ] unsigned char 
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  1    wreg      void 
  8231 ;; Registers used:
  8232 ;;		wreg, status,2, status,0, pclath, cstack
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 300/100
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8238 ;;      Params:         0       0       0       0       0
  8239 ;;      Locals:         0       1       0       0       0
  8240 ;;      Temps:          0       0       0       0       0
  8241 ;;      Totals:         0       1       0       0       0
  8242 ;;Total ram usage:        1 bytes
  8243 ;; Hardware stack levels used:    1
  8244 ;; Hardware stack levels required when called:    2
  8245 ;; This function calls:
  8246 ;;		_USART_putc
  8247 ;; This function is called by:
  8248 ;;		_Decodify_Command
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252                           
  8253                           ;psect for function _Send_To_MB
  8254  0800                     _Send_To_MB:	
  8255                           
  8256                           ;incstack = 0
  8257                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  8258                           ;Send_To_MB@size stored from wreg
  8259  0800  1283               	bcf	3,5	;RP0=0, select bank0
  8260  0801  1303               	bcf	3,6	;RP1=0, select bank0
  8261  0802  00A1               	movwf	Send_To_MB@size
  8262                           
  8263                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(0xAA);
  8264  0803  30AA               	movlw	170
  8265  0804  160A  158A  210B  120A  158A  	fcall	_USART_putc
  8266                           
  8267                           ;SlaveLiofilizadorVer1.c: 650:      USART_putc(0xBB);
  8268  0809  30BB               	movlw	187
  8269  080A  160A  158A  210B  120A  158A  	fcall	_USART_putc
  8270                           
  8271                           ;SlaveLiofilizadorVer1.c: 651:      USART_putc(Board_Number);
  8272  080F  0863               	movf	_Board_Number^(0+128),w
  8273  0810  160A  158A  210B  120A  158A  	fcall	_USART_putc
  8274                           
  8275                           ;SlaveLiofilizadorVer1.c: 652:      USART_putc(0x00);
  8276  0815  3000               	movlw	0
  8277  0816  160A  158A  210B  120A  158A  	fcall	_USART_putc
  8278                           
  8279                           ;SlaveLiofilizadorVer1.c: 653:      USART_putc(usart_protocol.command);
  8280  081B  1703               	bsf	3,6	;RP1=1, select bank3
  8281  081C  084E               	movf	(_usart_protocol^(0+384)+4),w
  8282  081D  160A  158A  210B  120A  158A  	fcall	_USART_putc
  8283                           
  8284                           ;SlaveLiofilizadorVer1.c: 654:      USART_putc(size);
  8285  0822  1283               	bcf	3,5	;RP0=0, select bank0
  8286  0823  0821               	movf	Send_To_MB@size,w
  8287  0824  160A  158A  210B   	fcall	_USART_putc
  8288  0827  0008               	return
  8289  0828                     __end_of_Send_To_MB:	
  8290                           
  8291                           	psect	text25
  8292  18ED                     __ptext25:	
  8293 ;; *************** function _Send_Reply_OK *****************
  8294 ;; Defined at:
  8295 ;;		line 658 in file "SlaveLiofilizadorVer1.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;		None
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;		None
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  1    wreg      void 
  8302 ;; Registers used:
  8303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8304 ;; Tracked objects:
  8305 ;;		On entry : 300/100
  8306 ;;		On exit  : 300/100
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8309 ;;      Params:         0       0       0       0       0
  8310 ;;      Locals:         0       0       0       0       0
  8311 ;;      Temps:          0       0       0       0       0
  8312 ;;      Totals:         0       0       0       0       0
  8313 ;;Total ram usage:        0 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; Hardware stack levels required when called:    3
  8316 ;; This function calls:
  8317 ;;		_USART_put_string
  8318 ;; This function is called by:
  8319 ;;		_Decodify_Command
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           
  8324                           ;psect for function _Send_Reply_OK
  8325  18ED                     _Send_Reply_OK:	
  8326                           
  8327                           ;SlaveLiofilizadorVer1.c: 659:      USART_put_string("OK");
  8328                           
  8329                           ;incstack = 0
  8330                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8331  18ED  3048               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  8332  18EE  1283               	bcf	3,5	;RP0=0, select bank0
  8333  18EF  00A1               	movwf	USART_put_string@vetor
  8334  18F0  3080               	movlw	128
  8335  18F1  00A2               	movwf	USART_put_string@vetor+1
  8336  18F2  160A  158A  246B   	fcall	_USART_put_string
  8337  18F5  0008               	return
  8338  18F6                     __end_of_Send_Reply_OK:	
  8339                           
  8340                           	psect	text26
  8341  1C6B                     __ptext26:	
  8342 ;; *************** function _USART_put_string *****************
  8343 ;; Defined at:
  8344 ;;		line 168 in file "usart.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  8347 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  8350 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      void 
  8353 ;; Registers used:
  8354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8355 ;; Tracked objects:
  8356 ;;		On entry : 300/0
  8357 ;;		On exit  : 300/100
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8360 ;;      Params:         0       2       0       0       0
  8361 ;;      Locals:         0       2       0       0       0
  8362 ;;      Temps:          0       0       0       0       0
  8363 ;;      Totals:         0       4       0       0       0
  8364 ;;Total ram usage:        4 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; Hardware stack levels required when called:    2
  8367 ;; This function calls:
  8368 ;;		_USART_putc
  8369 ;; This function is called by:
  8370 ;;		_Decodify_Command
  8371 ;;		_Send_Reply_OK
  8372 ;; This function uses a non-reentrant model
  8373 ;;
  8374                           
  8375                           
  8376                           ;psect for function _USART_put_string
  8377  1C6B                     _USART_put_string:	
  8378                           
  8379                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  8380                           
  8381                           ;incstack = 0
  8382                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8383  1C6B  0821               	movf	USART_put_string@vetor,w
  8384  1C6C  00A3               	movwf	USART_put_string@ptr
  8385  1C6D  0822               	movf	USART_put_string@vetor+1,w
  8386  1C6E  00A4               	movwf	USART_put_string@ptr+1
  8387  1C6F                     l5856:	
  8388                           ;usart.c: 172:     while(*(ptr)){
  8389                           
  8390                           
  8391                           ;usart.c: 172:     while(*(ptr)){
  8392  1C6F  0824               	movf	USART_put_string@ptr+1,w
  8393  1C70  00FF               	movwf	127
  8394  1C71  0823               	movf	USART_put_string@ptr,w
  8395  1C72  0084               	movwf	4
  8396  1C73  160A  158A  2000  160A  158A  	fcall	stringtab
  8397  1C78  3A00               	xorlw	0
  8398  1C79  1903               	btfsc	3,2
  8399  1C7A  2C91               	goto	l5858
  8400                           
  8401                           ;usart.c: 173:         USART_putc(*(ptr));
  8402  1C7B  0824               	movf	USART_put_string@ptr+1,w
  8403  1C7C  00FF               	movwf	127
  8404  1C7D  0823               	movf	USART_put_string@ptr,w
  8405  1C7E  0084               	movwf	4
  8406  1C7F  160A  158A  2000  160A  158A  	fcall	stringtab
  8407  1C84  160A  158A  210B  160A  158A  	fcall	_USART_putc
  8408                           
  8409                           ;usart.c: 174:         ptr++;
  8410  1C89  3001               	movlw	1
  8411  1C8A  1283               	bcf	3,5	;RP0=0, select bank0
  8412  1C8B  07A3               	addwf	USART_put_string@ptr,f
  8413  1C8C  1803               	skipnc
  8414  1C8D  0AA4               	incf	USART_put_string@ptr+1,f
  8415  1C8E  3000               	movlw	0
  8416  1C8F  07A4               	addwf	USART_put_string@ptr+1,f
  8417  1C90  2C6F               	goto	l5856
  8418  1C91                     l5858:	
  8419                           
  8420                           ;usart.c: 176:     USART_putc(*(ptr));
  8421  1C91  0824               	movf	USART_put_string@ptr+1,w
  8422  1C92  00FF               	movwf	127
  8423  1C93  0823               	movf	USART_put_string@ptr,w
  8424  1C94  0084               	movwf	4
  8425  1C95  160A  158A  2000  160A  158A  	fcall	stringtab
  8426  1C9A  160A  158A  210B   	fcall	_USART_putc
  8427  1C9D  0008               	return
  8428  1C9E                     __end_of_USART_put_string:	
  8429                           
  8430                           	psect	text27
  8431  1190                     __ptext27:	
  8432 ;; *************** function _Save_Log *****************
  8433 ;; Defined at:
  8434 ;;		line 1014 in file "SlaveLiofilizadorVer1.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;  add_datalog     4   56[BANK0 ] unsigned long 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;		None
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  1    wreg      void 
  8441 ;; Registers used:
  8442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8443 ;; Tracked objects:
  8444 ;;		On entry : 300/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8448 ;;      Params:         0       4       0       0       0
  8449 ;;      Locals:         0       0       0       0       0
  8450 ;;      Temps:          0       4       0       0       0
  8451 ;;      Totals:         0       8       0       0       0
  8452 ;;Total ram usage:        8 bytes
  8453 ;; Hardware stack levels used:    1
  8454 ;; Hardware stack levels required when called:    5
  8455 ;; This function calls:
  8456 ;;		_EEPROM_24C1025_Write_Int
  8457 ;;		___flmul
  8458 ;;		___fltol
  8459 ;; This function is called by:
  8460 ;;		_Decodify_Command
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464                           
  8465                           ;psect for function _Save_Log
  8466  1190                     _Save_Log:	
  8467                           
  8468                           ;SlaveLiofilizadorVer1.c: 1015:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (int) (
      +                          Tensao1*10));
  8469                           
  8470                           ;incstack = 0
  8471                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8472  1190  085B               	movf	Save_Log@add_datalog+3,w
  8473  1191  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8474  1192  085A               	movf	Save_Log@add_datalog+2,w
  8475  1193  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8476  1194  0859               	movf	Save_Log@add_datalog+1,w
  8477  1195  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8478  1196  0858               	movf	Save_Log@add_datalog,w
  8479  1197  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8480  1198  1683               	bsf	3,5	;RP0=1, select bank1
  8481  1199  0850               	movf	(_Tensao1+3)^(0+128),w
  8482  119A  1283               	bcf	3,5	;RP0=0, select bank0
  8483  119B  00B0               	movwf	___flmul@a+3
  8484  119C  1683               	bsf	3,5	;RP0=1, select bank1
  8485  119D  084F               	movf	(_Tensao1+2)^(0+128),w
  8486  119E  1283               	bcf	3,5	;RP0=0, select bank0
  8487  119F  00AF               	movwf	___flmul@a+2
  8488  11A0  1683               	bsf	3,5	;RP0=1, select bank1
  8489  11A1  084E               	movf	(_Tensao1+1)^(0+128),w
  8490  11A2  1283               	bcf	3,5	;RP0=0, select bank0
  8491  11A3  00AE               	movwf	___flmul@a+1
  8492  11A4  1683               	bsf	3,5	;RP0=1, select bank1
  8493  11A5  084D               	movf	_Tensao1^(0+128),w
  8494  11A6  1283               	bcf	3,5	;RP0=0, select bank0
  8495  11A7  00AD               	movwf	___flmul@a
  8496  11A8  3041               	movlw	65
  8497  11A9  00AC               	movwf	___flmul@b+3
  8498  11AA  3020               	movlw	32
  8499  11AB  00AB               	movwf	___flmul@b+2
  8500  11AC  3000               	movlw	0
  8501  11AD  00AA               	movwf	___flmul@b+1
  8502  11AE  3000               	movlw	0
  8503  11AF  00A9               	movwf	___flmul@b
  8504  11B0  120A  118A  24BC  160A  118A  	fcall	___flmul
  8505  11B5  082C               	movf	?___flmul+3,w
  8506  11B6  00C6               	movwf	___fltol@f1+3
  8507  11B7  082B               	movf	?___flmul+2,w
  8508  11B8  00C5               	movwf	___fltol@f1+2
  8509  11B9  082A               	movf	?___flmul+1,w
  8510  11BA  00C4               	movwf	___fltol@f1+1
  8511  11BB  0829               	movf	?___flmul,w
  8512  11BC  00C3               	movwf	___fltol@f1
  8513  11BD  160A  158A  2795  160A  118A  	fcall	___fltol
  8514  11C2  0844               	movf	?___fltol+1,w
  8515  11C3  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  8516  11C4  0843               	movf	?___fltol,w
  8517  11C5  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  8518  11C6  3000               	movlw	0
  8519  11C7  160A  158A  2215  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  8520                           
  8521                           ;SlaveLiofilizadorVer1.c: 1016:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (int) (
      +                          Vaccum0*10));
  8522  11CC  1283               	bcf	3,5	;RP0=0, select bank0
  8523  11CD  1303               	bcf	3,6	;RP1=0, select bank0
  8524  11CE  085B               	movf	Save_Log@add_datalog+3,w
  8525  11CF  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8526  11D0  085A               	movf	Save_Log@add_datalog+2,w
  8527  11D1  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8528  11D2  0859               	movf	Save_Log@add_datalog+1,w
  8529  11D3  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8530  11D4  0858               	movf	Save_Log@add_datalog,w
  8531  11D5  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8532  11D6  1683               	bsf	3,5	;RP0=1, select bank1
  8533  11D7  0854               	movf	(_Vaccum0+3)^(0+128),w
  8534  11D8  1283               	bcf	3,5	;RP0=0, select bank0
  8535  11D9  00B0               	movwf	___flmul@a+3
  8536  11DA  1683               	bsf	3,5	;RP0=1, select bank1
  8537  11DB  0853               	movf	(_Vaccum0+2)^(0+128),w
  8538  11DC  1283               	bcf	3,5	;RP0=0, select bank0
  8539  11DD  00AF               	movwf	___flmul@a+2
  8540  11DE  1683               	bsf	3,5	;RP0=1, select bank1
  8541  11DF  0852               	movf	(_Vaccum0+1)^(0+128),w
  8542  11E0  1283               	bcf	3,5	;RP0=0, select bank0
  8543  11E1  00AE               	movwf	___flmul@a+1
  8544  11E2  1683               	bsf	3,5	;RP0=1, select bank1
  8545  11E3  0851               	movf	_Vaccum0^(0+128),w
  8546  11E4  1283               	bcf	3,5	;RP0=0, select bank0
  8547  11E5  00AD               	movwf	___flmul@a
  8548  11E6  3041               	movlw	65
  8549  11E7  00AC               	movwf	___flmul@b+3
  8550  11E8  3020               	movlw	32
  8551  11E9  00AB               	movwf	___flmul@b+2
  8552  11EA  3000               	movlw	0
  8553  11EB  00AA               	movwf	___flmul@b+1
  8554  11EC  3000               	movlw	0
  8555  11ED  00A9               	movwf	___flmul@b
  8556  11EE  120A  118A  24BC  160A  118A  	fcall	___flmul
  8557  11F3  082C               	movf	?___flmul+3,w
  8558  11F4  00C6               	movwf	___fltol@f1+3
  8559  11F5  082B               	movf	?___flmul+2,w
  8560  11F6  00C5               	movwf	___fltol@f1+2
  8561  11F7  082A               	movf	?___flmul+1,w
  8562  11F8  00C4               	movwf	___fltol@f1+1
  8563  11F9  0829               	movf	?___flmul,w
  8564  11FA  00C3               	movwf	___fltol@f1
  8565  11FB  160A  158A  2795  160A  118A  	fcall	___fltol
  8566  1200  0844               	movf	?___fltol+1,w
  8567  1201  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  8568  1202  0843               	movf	?___fltol,w
  8569  1203  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  8570  1204  3001               	movlw	1
  8571  1205  160A  158A  2215  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  8572                           
  8573                           ;SlaveLiofilizadorVer1.c: 1017:      _delay((unsigned long)((5)*(8000000/4000.0)));
  8574  120A  300D               	movlw	13
  8575  120B  1283               	bcf	3,5	;RP0=0, select bank0
  8576  120C  1303               	bcf	3,6	;RP1=0, select bank0
  8577  120D  00DD               	movwf	??_Save_Log+1
  8578  120E  30FB               	movlw	251
  8579  120F  00DC               	movwf	??_Save_Log
  8580  1210                     u8027:	
  8581  1210  0BDC               	decfsz	??_Save_Log,f
  8582  1211  2A10               	goto	u8027
  8583  1212  0BDD               	decfsz	??_Save_Log+1,f
  8584  1213  2A10               	goto	u8027
  8585                           
  8586                           ;SlaveLiofilizadorVer1.c: 1018:      EEPROM_24C1025_Write_Int(0x00, add_datalog+2, 0xFFF
      +                          F);
  8587  1214  3002               	movlw	2
  8588  1215  1283               	bcf	3,5	;RP0=0, select bank0
  8589  1216  1303               	bcf	3,6	;RP1=0, select bank0
  8590  1217  00DC               	movwf	??_Save_Log
  8591  1218  3000               	movlw	0
  8592  1219  00DD               	movwf	??_Save_Log+1
  8593  121A  3000               	movlw	0
  8594  121B  00DE               	movwf	??_Save_Log+2
  8595  121C  3000               	movlw	0
  8596  121D  00DF               	movwf	??_Save_Log+3
  8597  121E  0858               	movf	Save_Log@add_datalog,w
  8598  121F  07DC               	addwf	??_Save_Log,f
  8599  1220  0859               	movf	Save_Log@add_datalog+1,w
  8600  1221  1803               	skipnc
  8601  1222  0F59               	incfsz	Save_Log@add_datalog+1,w
  8602  1223  2A25               	goto	u6970
  8603  1224  2A26               	goto	u6971
  8604  1225                     u6970:	
  8605  1225  07DD               	addwf	??_Save_Log+1,f
  8606  1226                     u6971:	
  8607  1226  085A               	movf	Save_Log@add_datalog+2,w
  8608  1227  1803               	skipnc
  8609  1228  0F5A               	incfsz	Save_Log@add_datalog+2,w
  8610  1229  2A2B               	goto	u6972
  8611  122A  2A2C               	goto	u6973
  8612  122B                     u6972:	
  8613  122B  07DE               	addwf	??_Save_Log+2,f
  8614  122C                     u6973:	
  8615  122C  085B               	movf	Save_Log@add_datalog+3,w
  8616  122D  1803               	skipnc
  8617  122E  0A5B               	incf	Save_Log@add_datalog+3,w
  8618  122F  07DF               	addwf	??_Save_Log+3,f
  8619  1230  085F               	movf	??_Save_Log+3,w
  8620  1231  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8621  1232  085E               	movf	??_Save_Log+2,w
  8622  1233  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8623  1234  085D               	movf	??_Save_Log+1,w
  8624  1235  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8625  1236  085C               	movf	??_Save_Log,w
  8626  1237  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8627  1238  30FF               	movlw	255
  8628  1239  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  8629  123A  30FF               	movlw	255
  8630  123B  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  8631  123C  3000               	movlw	0
  8632  123D  160A  158A  2215  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  8633                           
  8634                           ;SlaveLiofilizadorVer1.c: 1019:      EEPROM_24C1025_Write_Int(0x01, add_datalog+2, 0xFFF
      +                          F);
  8635  1242  3002               	movlw	2
  8636  1243  1283               	bcf	3,5	;RP0=0, select bank0
  8637  1244  1303               	bcf	3,6	;RP1=0, select bank0
  8638  1245  00DC               	movwf	??_Save_Log
  8639  1246  3000               	movlw	0
  8640  1247  00DD               	movwf	??_Save_Log+1
  8641  1248  3000               	movlw	0
  8642  1249  00DE               	movwf	??_Save_Log+2
  8643  124A  3000               	movlw	0
  8644  124B  00DF               	movwf	??_Save_Log+3
  8645  124C  0858               	movf	Save_Log@add_datalog,w
  8646  124D  07DC               	addwf	??_Save_Log,f
  8647  124E  0859               	movf	Save_Log@add_datalog+1,w
  8648  124F  1803               	skipnc
  8649  1250  0F59               	incfsz	Save_Log@add_datalog+1,w
  8650  1251  2A53               	goto	u6980
  8651  1252  2A54               	goto	u6981
  8652  1253                     u6980:	
  8653  1253  07DD               	addwf	??_Save_Log+1,f
  8654  1254                     u6981:	
  8655  1254  085A               	movf	Save_Log@add_datalog+2,w
  8656  1255  1803               	skipnc
  8657  1256  0F5A               	incfsz	Save_Log@add_datalog+2,w
  8658  1257  2A59               	goto	u6982
  8659  1258  2A5A               	goto	u6983
  8660  1259                     u6982:	
  8661  1259  07DE               	addwf	??_Save_Log+2,f
  8662  125A                     u6983:	
  8663  125A  085B               	movf	Save_Log@add_datalog+3,w
  8664  125B  1803               	skipnc
  8665  125C  0A5B               	incf	Save_Log@add_datalog+3,w
  8666  125D  07DF               	addwf	??_Save_Log+3,f
  8667  125E  085F               	movf	??_Save_Log+3,w
  8668  125F  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  8669  1260  085E               	movf	??_Save_Log+2,w
  8670  1261  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  8671  1262  085D               	movf	??_Save_Log+1,w
  8672  1263  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  8673  1264  085C               	movf	??_Save_Log,w
  8674  1265  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  8675  1266  30FF               	movlw	255
  8676  1267  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  8677  1268  30FF               	movlw	255
  8678  1269  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  8679  126A  3001               	movlw	1
  8680  126B  160A  158A  2215   	fcall	_EEPROM_24C1025_Write_Int
  8681  126E  0008               	return
  8682  126F                     __end_of_Save_Log:	
  8683                           
  8684                           	psect	text28
  8685  1F95                     __ptext28:	
  8686 ;; *************** function ___fltol *****************
  8687 ;; Defined at:
  8688 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  8689 ;; Parameters:    Size  Location     Type
  8690 ;;  f1              4   35[BANK0 ] void 
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;  exp1            1   45[BANK0 ] unsigned char 
  8693 ;;  sign1           1   44[BANK0 ] unsigned char 
  8694 ;; Return value:  Size  Location     Type
  8695 ;;                  4   35[BANK0 ] long 
  8696 ;; Registers used:
  8697 ;;		wreg, status,2, status,0
  8698 ;; Tracked objects:
  8699 ;;		On entry : 300/0
  8700 ;;		On exit  : 300/0
  8701 ;;		Unchanged: 0/0
  8702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8703 ;;      Params:         0       4       0       0       0
  8704 ;;      Locals:         0       2       0       0       0
  8705 ;;      Temps:          0       5       0       0       0
  8706 ;;      Totals:         0      11       0       0       0
  8707 ;;Total ram usage:       11 bytes
  8708 ;; Hardware stack levels used:    1
  8709 ;; Hardware stack levels required when called:    1
  8710 ;; This function calls:
  8711 ;;		Nothing
  8712 ;; This function is called by:
  8713 ;;		_Decodify_Command
  8714 ;;		_Save_Log
  8715 ;; This function uses a non-reentrant model
  8716 ;;
  8717                           
  8718                           
  8719                           ;psect for function ___fltol
  8720  1F95                     ___fltol:	
  8721                           
  8722                           ;incstack = 0
  8723                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8724  1F95  1003               	clrc
  8725  1F96  0D45               	rlf	___fltol@f1+2,w
  8726  1F97  0D46               	rlf	___fltol@f1+3,w
  8727  1F98  00C7               	movwf	??___fltol
  8728  1F99  0847               	movf	??___fltol,w
  8729  1F9A  00CD               	movwf	___fltol@exp1
  8730  1F9B  084D               	movf	___fltol@exp1,w
  8731  1F9C  1D03               	btfss	3,2
  8732  1F9D  2FA7               	goto	l6056
  8733  1F9E                     l6052:	
  8734  1F9E  3000               	movlw	0
  8735  1F9F  00C6               	movwf	?___fltol+3
  8736  1FA0  3000               	movlw	0
  8737  1FA1  00C5               	movwf	?___fltol+2
  8738  1FA2  3000               	movlw	0
  8739  1FA3  00C4               	movwf	?___fltol+1
  8740  1FA4  3000               	movlw	0
  8741  1FA5  00C3               	movwf	?___fltol
  8742  1FA6  0008               	return
  8743  1FA7                     l6056:	
  8744  1FA7  0843               	movf	___fltol@f1,w
  8745  1FA8  00C7               	movwf	??___fltol
  8746  1FA9  0844               	movf	___fltol@f1+1,w
  8747  1FAA  00C8               	movwf	??___fltol+1
  8748  1FAB  0845               	movf	___fltol@f1+2,w
  8749  1FAC  00C9               	movwf	??___fltol+2
  8750  1FAD  0846               	movf	___fltol@f1+3,w
  8751  1FAE  00CA               	movwf	??___fltol+3
  8752  1FAF  301F               	movlw	31
  8753  1FB0                     u5865:	
  8754  1FB0  1003               	clrc
  8755  1FB1  0CCA               	rrf	??___fltol+3,f
  8756  1FB2  0CC9               	rrf	??___fltol+2,f
  8757  1FB3  0CC8               	rrf	??___fltol+1,f
  8758  1FB4  0CC7               	rrf	??___fltol,f
  8759  1FB5  3EFF               	addlw	-1
  8760  1FB6  1D03               	skipz
  8761  1FB7  2FB0               	goto	u5865
  8762  1FB8  0847               	movf	??___fltol,w
  8763  1FB9  00CB               	movwf	??___fltol+4
  8764  1FBA  084B               	movf	??___fltol+4,w
  8765  1FBB  00CC               	movwf	___fltol@sign1
  8766  1FBC  17C5               	bsf	___fltol@f1+2,7
  8767  1FBD  30FF               	movlw	255
  8768  1FBE  05C3               	andwf	___fltol@f1,f
  8769  1FBF  30FF               	movlw	255
  8770  1FC0  05C4               	andwf	___fltol@f1+1,f
  8771  1FC1  30FF               	movlw	255
  8772  1FC2  05C5               	andwf	___fltol@f1+2,f
  8773  1FC3  3000               	movlw	0
  8774  1FC4  05C6               	andwf	___fltol@f1+3,f
  8775  1FC5  3096               	movlw	150
  8776  1FC6  02CD               	subwf	___fltol@exp1,f
  8777  1FC7  1FCD               	btfss	___fltol@exp1,7
  8778  1FC8  2FDE               	goto	l6074
  8779  1FC9  084D               	movf	___fltol@exp1,w
  8780  1FCA  3A80               	xorlw	128
  8781  1FCB  3E97               	addlw	151
  8782  1FCC  1C03               	btfss	3,0
  8783  1FCD  2F9E               	goto	l6052
  8784  1FCE                     l6072:	
  8785  1FCE  3001               	movlw	1
  8786  1FCF                     u5895:	
  8787  1FCF  1003               	clrc
  8788  1FD0  0CC6               	rrf	___fltol@f1+3,f
  8789  1FD1  0CC5               	rrf	___fltol@f1+2,f
  8790  1FD2  0CC4               	rrf	___fltol@f1+1,f
  8791  1FD3  0CC3               	rrf	___fltol@f1,f
  8792  1FD4  3EFF               	addlw	-1
  8793  1FD5  1D03               	skipz
  8794  1FD6  2FCF               	goto	u5895
  8795  1FD7  3001               	movlw	1
  8796  1FD8  00C7               	movwf	??___fltol
  8797  1FD9  0847               	movf	??___fltol,w
  8798  1FDA  07CD               	addwf	___fltol@exp1,f
  8799  1FDB  1903               	btfsc	3,2
  8800  1FDC  2FF1               	goto	l6082
  8801  1FDD  2FCE               	goto	l6072
  8802  1FDE                     l6074:	
  8803  1FDE  3020               	movlw	32
  8804  1FDF  024D               	subwf	___fltol@exp1,w
  8805  1FE0  1803               	btfsc	3,0
  8806  1FE1  2F9E               	goto	l6052
  8807  1FE2                     l1142:	
  8808  1FE2  084D               	movf	___fltol@exp1,w
  8809  1FE3  1903               	btfsc	3,2
  8810  1FE4  2FF1               	goto	l6082
  8811  1FE5  3001               	movlw	1
  8812  1FE6  00C7               	movwf	??___fltol
  8813  1FE7                     u5925:	
  8814  1FE7  1003               	clrc
  8815  1FE8  0DC3               	rlf	___fltol@f1,f
  8816  1FE9  0DC4               	rlf	___fltol@f1+1,f
  8817  1FEA  0DC5               	rlf	___fltol@f1+2,f
  8818  1FEB  0DC6               	rlf	___fltol@f1+3,f
  8819  1FEC  0BC7               	decfsz	??___fltol,f
  8820  1FED  2FE7               	goto	u5925
  8821  1FEE  3001               	movlw	1
  8822  1FEF  02CD               	subwf	___fltol@exp1,f
  8823  1FF0  2FE2               	goto	l1142
  8824  1FF1                     l6082:	
  8825  1FF1  084C               	movf	___fltol@sign1,w
  8826  1FF2  1903               	btfsc	3,2
  8827  1FF3  0008               	return
  8828  1FF4  09C3               	comf	___fltol@f1,f
  8829  1FF5  09C4               	comf	___fltol@f1+1,f
  8830  1FF6  09C5               	comf	___fltol@f1+2,f
  8831  1FF7  09C6               	comf	___fltol@f1+3,f
  8832  1FF8  0AC3               	incf	___fltol@f1,f
  8833  1FF9  1903               	skipnz
  8834  1FFA  0AC4               	incf	___fltol@f1+1,f
  8835  1FFB  1903               	skipnz
  8836  1FFC  0AC5               	incf	___fltol@f1+2,f
  8837  1FFD  1903               	skipnz
  8838  1FFE  0AC6               	incf	___fltol@f1+3,f
  8839  1FFF  0008               	return
  8840  2000                     __end_of___fltol:	
  8841                           
  8842                           	psect	text29
  8843  04BC                     __ptext29:	
  8844 ;; *************** function ___flmul *****************
  8845 ;; Defined at:
  8846 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  b               4    9[BANK0 ] long 
  8849 ;;  a               4   13[BANK0 ] long 
  8850 ;; Auto vars:     Size  Location     Type
  8851 ;;  prod            4   29[BANK0 ] struct .
  8852 ;;  grs             4   25[BANK0 ] unsigned long 
  8853 ;;  temp            2   33[BANK0 ] struct .
  8854 ;;  bexp            1   24[BANK0 ] unsigned char 
  8855 ;;  aexp            1   23[BANK0 ] unsigned char 
  8856 ;;  sign            1   22[BANK0 ] unsigned char 
  8857 ;; Return value:  Size  Location     Type
  8858 ;;                  4    9[BANK0 ] unsigned char 
  8859 ;; Registers used:
  8860 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8861 ;; Tracked objects:
  8862 ;;		On entry : 300/0
  8863 ;;		On exit  : 300/0
  8864 ;;		Unchanged: 0/0
  8865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8866 ;;      Params:         0       8       0       0       0
  8867 ;;      Locals:         0      13       0       0       0
  8868 ;;      Temps:          0       5       0       0       0
  8869 ;;      Totals:         0      26       0       0       0
  8870 ;;Total ram usage:       26 bytes
  8871 ;; Hardware stack levels used:    1
  8872 ;; Hardware stack levels required when called:    2
  8873 ;; This function calls:
  8874 ;;		__Umul8_16
  8875 ;; This function is called by:
  8876 ;;		_Decodify_Command
  8877 ;;		_MediaPlacaVaccum
  8878 ;;		_Save_Log
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881                           
  8882                           
  8883                           ;psect for function ___flmul
  8884  04BC                     ___flmul:	
  8885                           
  8886                           ;incstack = 0
  8887                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8888  04BC  082C               	movf	___flmul@b+3,w
  8889  04BD  3980               	andlw	128
  8890  04BE  00B1               	movwf	??___flmul
  8891  04BF  0831               	movf	??___flmul,w
  8892  04C0  00B6               	movwf	___flmul@sign
  8893  04C1  082C               	movf	___flmul@b+3,w
  8894  04C2  00B1               	movwf	??___flmul
  8895  04C3  0731               	addwf	??___flmul,w
  8896  04C4  00B2               	movwf	??___flmul+1
  8897  04C5  0832               	movf	??___flmul+1,w
  8898  04C6  00B8               	movwf	___flmul@bexp
  8899  04C7  1BAB               	btfsc	___flmul@b+2,7
  8900  04C8  1438               	bsf	___flmul@bexp,0
  8901  04C9  0838               	movf	___flmul@bexp,w
  8902  04CA  1903               	btfsc	3,2
  8903  04CB  2CD9               	goto	l6296
  8904  04CC  0A38               	incf	___flmul@bexp,w
  8905  04CD  1D03               	btfss	3,2
  8906  04CE  2CD7               	goto	l6294
  8907  04CF  3000               	movlw	0
  8908  04D0  00AC               	movwf	___flmul@b+3
  8909  04D1  3000               	movlw	0
  8910  04D2  00AB               	movwf	___flmul@b+2
  8911  04D3  3000               	movlw	0
  8912  04D4  00AA               	movwf	___flmul@b+1
  8913  04D5  3000               	movlw	0
  8914  04D6  00A9               	movwf	___flmul@b
  8915  04D7                     l6294:	
  8916  04D7  17AB               	bsf	___flmul@b+2,7
  8917  04D8  2CE1               	goto	l6298
  8918  04D9                     l6296:	
  8919  04D9  3000               	movlw	0
  8920  04DA  00AC               	movwf	___flmul@b+3
  8921  04DB  3000               	movlw	0
  8922  04DC  00AB               	movwf	___flmul@b+2
  8923  04DD  3000               	movlw	0
  8924  04DE  00AA               	movwf	___flmul@b+1
  8925  04DF  3000               	movlw	0
  8926  04E0  00A9               	movwf	___flmul@b
  8927  04E1                     l6298:	
  8928  04E1  0830               	movf	___flmul@a+3,w
  8929  04E2  3980               	andlw	128
  8930  04E3  00B1               	movwf	??___flmul
  8931  04E4  0831               	movf	??___flmul,w
  8932  04E5  06B6               	xorwf	___flmul@sign,f
  8933  04E6  0830               	movf	___flmul@a+3,w
  8934  04E7  00B1               	movwf	??___flmul
  8935  04E8  0731               	addwf	??___flmul,w
  8936  04E9  00B2               	movwf	??___flmul+1
  8937  04EA  0832               	movf	??___flmul+1,w
  8938  04EB  00B7               	movwf	___flmul@aexp
  8939  04EC  1BAF               	btfsc	___flmul@a+2,7
  8940  04ED  1437               	bsf	___flmul@aexp,0
  8941  04EE  0837               	movf	___flmul@aexp,w
  8942  04EF  1903               	btfsc	3,2
  8943  04F0  2CFE               	goto	l6314
  8944  04F1  0A37               	incf	___flmul@aexp,w
  8945  04F2  1D03               	btfss	3,2
  8946  04F3  2CFC               	goto	l6312
  8947  04F4  3000               	movlw	0
  8948  04F5  00B0               	movwf	___flmul@a+3
  8949  04F6  3000               	movlw	0
  8950  04F7  00AF               	movwf	___flmul@a+2
  8951  04F8  3000               	movlw	0
  8952  04F9  00AE               	movwf	___flmul@a+1
  8953  04FA  3000               	movlw	0
  8954  04FB  00AD               	movwf	___flmul@a
  8955  04FC                     l6312:	
  8956  04FC  17AF               	bsf	___flmul@a+2,7
  8957  04FD  2D06               	goto	l6316
  8958  04FE                     l6314:	
  8959  04FE  3000               	movlw	0
  8960  04FF  00B0               	movwf	___flmul@a+3
  8961  0500  3000               	movlw	0
  8962  0501  00AF               	movwf	___flmul@a+2
  8963  0502  3000               	movlw	0
  8964  0503  00AE               	movwf	___flmul@a+1
  8965  0504  3000               	movlw	0
  8966  0505  00AD               	movwf	___flmul@a
  8967  0506                     l6316:	
  8968  0506  0837               	movf	___flmul@aexp,w
  8969  0507  1D03               	btfss	3,2
  8970  0508  0838               	movf	___flmul@bexp,w
  8971  0509  1D03               	btfss	3,2
  8972  050A  2D14               	goto	l6324
  8973  050B  3000               	movlw	0
  8974  050C  00AC               	movwf	?___flmul+3
  8975  050D  3000               	movlw	0
  8976  050E  00AB               	movwf	?___flmul+2
  8977  050F  3000               	movlw	0
  8978  0510  00AA               	movwf	?___flmul+1
  8979  0511  3000               	movlw	0
  8980  0512  00A9               	movwf	?___flmul
  8981  0513  0008               	return
  8982  0514                     l6324:	
  8983  0514  0829               	movf	___flmul@b,w
  8984  0515  00B1               	movwf	??___flmul
  8985  0516  0831               	movf	??___flmul,w
  8986  0517  00A0               	movwf	__Umul8_16@multiplicand
  8987  0518  082F               	movf	___flmul@a+2,w
  8988  0519  160A  158A  22B9  120A  118A  	fcall	__Umul8_16
  8989  051E  0821               	movf	?__Umul8_16+1,w
  8990  051F  00C2               	movwf	___flmul@temp+1
  8991  0520  0820               	movf	?__Umul8_16,w
  8992  0521  00C1               	movwf	___flmul@temp
  8993  0522  0841               	movf	___flmul@temp,w
  8994  0523  00B1               	movwf	??___flmul
  8995  0524  01B2               	clrf	??___flmul+1
  8996  0525  01B3               	clrf	??___flmul+2
  8997  0526  01B4               	clrf	??___flmul+3
  8998  0527  0834               	movf	??___flmul+3,w
  8999  0528  00BC               	movwf	___flmul@grs+3
  9000  0529  0833               	movf	??___flmul+2,w
  9001  052A  00BB               	movwf	___flmul@grs+2
  9002  052B  0832               	movf	??___flmul+1,w
  9003  052C  00BA               	movwf	___flmul@grs+1
  9004  052D  0831               	movf	??___flmul,w
  9005  052E  00B9               	movwf	___flmul@grs
  9006  052F  0842               	movf	___flmul@temp+1,w
  9007  0530  00B1               	movwf	??___flmul
  9008  0531  01B2               	clrf	??___flmul+1
  9009  0532  01B3               	clrf	??___flmul+2
  9010  0533  01B4               	clrf	??___flmul+3
  9011  0534  0834               	movf	??___flmul+3,w
  9012  0535  00C0               	movwf	___flmul@prod+3
  9013  0536  0833               	movf	??___flmul+2,w
  9014  0537  00BF               	movwf	___flmul@prod+2
  9015  0538  0832               	movf	??___flmul+1,w
  9016  0539  00BE               	movwf	___flmul@prod+1
  9017  053A  0831               	movf	??___flmul,w
  9018  053B  00BD               	movwf	___flmul@prod
  9019  053C  082A               	movf	___flmul@b+1,w
  9020  053D  00B1               	movwf	??___flmul
  9021  053E  0831               	movf	??___flmul,w
  9022  053F  00A0               	movwf	__Umul8_16@multiplicand
  9023  0540  082E               	movf	___flmul@a+1,w
  9024  0541  160A  158A  22B9  120A  118A  	fcall	__Umul8_16
  9025  0546  0821               	movf	?__Umul8_16+1,w
  9026  0547  00C2               	movwf	___flmul@temp+1
  9027  0548  0820               	movf	?__Umul8_16,w
  9028  0549  00C1               	movwf	___flmul@temp
  9029  054A  0841               	movf	___flmul@temp,w
  9030  054B  00B1               	movwf	??___flmul
  9031  054C  01B2               	clrf	??___flmul+1
  9032  054D  01B3               	clrf	??___flmul+2
  9033  054E  01B4               	clrf	??___flmul+3
  9034  054F  0831               	movf	??___flmul,w
  9035  0550  07B9               	addwf	___flmul@grs,f
  9036  0551  0832               	movf	??___flmul+1,w
  9037  0552  1103               	clrz
  9038  0553  1803               	skipnc
  9039  0554  3E01               	addlw	1
  9040  0555  1D03               	btfss	3,2
  9041  0556  07BA               	addwf	___flmul@grs+1,f
  9042  0557  0833               	movf	??___flmul+2,w
  9043  0558  1103               	clrz
  9044  0559  1803               	skipnc
  9045  055A  3E01               	addlw	1
  9046  055B  1D03               	btfss	3,2
  9047  055C  07BB               	addwf	___flmul@grs+2,f
  9048  055D  0834               	movf	??___flmul+3,w
  9049  055E  1103               	clrz
  9050  055F  1803               	skipnc
  9051  0560  3E01               	addlw	1
  9052  0561  1D03               	btfss	3,2
  9053  0562  07BC               	addwf	___flmul@grs+3,f
  9054  0563  0842               	movf	___flmul@temp+1,w
  9055  0564  00B1               	movwf	??___flmul
  9056  0565  01B2               	clrf	??___flmul+1
  9057  0566  01B3               	clrf	??___flmul+2
  9058  0567  01B4               	clrf	??___flmul+3
  9059  0568  0831               	movf	??___flmul,w
  9060  0569  07BD               	addwf	___flmul@prod,f
  9061  056A  0832               	movf	??___flmul+1,w
  9062  056B  1103               	clrz
  9063  056C  1803               	skipnc
  9064  056D  3E01               	addlw	1
  9065  056E  1D03               	btfss	3,2
  9066  056F  07BE               	addwf	___flmul@prod+1,f
  9067  0570  0833               	movf	??___flmul+2,w
  9068  0571  1103               	clrz
  9069  0572  1803               	skipnc
  9070  0573  3E01               	addlw	1
  9071  0574  1D03               	btfss	3,2
  9072  0575  07BF               	addwf	___flmul@prod+2,f
  9073  0576  0834               	movf	??___flmul+3,w
  9074  0577  1103               	clrz
  9075  0578  1803               	skipnc
  9076  0579  3E01               	addlw	1
  9077  057A  1D03               	btfss	3,2
  9078  057B  07C0               	addwf	___flmul@prod+3,f
  9079  057C  082B               	movf	___flmul@b+2,w
  9080  057D  00B1               	movwf	??___flmul
  9081  057E  0831               	movf	??___flmul,w
  9082  057F  00A0               	movwf	__Umul8_16@multiplicand
  9083  0580  082D               	movf	___flmul@a,w
  9084  0581  160A  158A  22B9  120A  118A  	fcall	__Umul8_16
  9085  0586  0821               	movf	?__Umul8_16+1,w
  9086  0587  00C2               	movwf	___flmul@temp+1
  9087  0588  0820               	movf	?__Umul8_16,w
  9088  0589  00C1               	movwf	___flmul@temp
  9089  058A  0841               	movf	___flmul@temp,w
  9090  058B  00B1               	movwf	??___flmul
  9091  058C  01B2               	clrf	??___flmul+1
  9092  058D  01B3               	clrf	??___flmul+2
  9093  058E  01B4               	clrf	??___flmul+3
  9094  058F  0831               	movf	??___flmul,w
  9095  0590  07B9               	addwf	___flmul@grs,f
  9096  0591  0832               	movf	??___flmul+1,w
  9097  0592  1103               	clrz
  9098  0593  1803               	skipnc
  9099  0594  3E01               	addlw	1
  9100  0595  1D03               	btfss	3,2
  9101  0596  07BA               	addwf	___flmul@grs+1,f
  9102  0597  0833               	movf	??___flmul+2,w
  9103  0598  1103               	clrz
  9104  0599  1803               	skipnc
  9105  059A  3E01               	addlw	1
  9106  059B  1D03               	btfss	3,2
  9107  059C  07BB               	addwf	___flmul@grs+2,f
  9108  059D  0834               	movf	??___flmul+3,w
  9109  059E  1103               	clrz
  9110  059F  1803               	skipnc
  9111  05A0  3E01               	addlw	1
  9112  05A1  1D03               	btfss	3,2
  9113  05A2  07BC               	addwf	___flmul@grs+3,f
  9114  05A3  0842               	movf	___flmul@temp+1,w
  9115  05A4  00B1               	movwf	??___flmul
  9116  05A5  01B2               	clrf	??___flmul+1
  9117  05A6  01B3               	clrf	??___flmul+2
  9118  05A7  01B4               	clrf	??___flmul+3
  9119  05A8  0831               	movf	??___flmul,w
  9120  05A9  07BD               	addwf	___flmul@prod,f
  9121  05AA  0832               	movf	??___flmul+1,w
  9122  05AB  1103               	clrz
  9123  05AC  1803               	skipnc
  9124  05AD  3E01               	addlw	1
  9125  05AE  1D03               	btfss	3,2
  9126  05AF  07BE               	addwf	___flmul@prod+1,f
  9127  05B0  0833               	movf	??___flmul+2,w
  9128  05B1  1103               	clrz
  9129  05B2  1803               	skipnc
  9130  05B3  3E01               	addlw	1
  9131  05B4  1D03               	btfss	3,2
  9132  05B5  07BF               	addwf	___flmul@prod+2,f
  9133  05B6  0834               	movf	??___flmul+3,w
  9134  05B7  1103               	clrz
  9135  05B8  1803               	skipnc
  9136  05B9  3E01               	addlw	1
  9137  05BA  1D03               	btfss	3,2
  9138  05BB  07C0               	addwf	___flmul@prod+3,f
  9139  05BC  3008               	movlw	8
  9140  05BD  00B1               	movwf	??___flmul
  9141  05BE                     u6535:	
  9142  05BE  1003               	clrc
  9143  05BF  0DB9               	rlf	___flmul@grs,f
  9144  05C0  0DBA               	rlf	___flmul@grs+1,f
  9145  05C1  0DBB               	rlf	___flmul@grs+2,f
  9146  05C2  0DBC               	rlf	___flmul@grs+3,f
  9147  05C3  0BB1               	decfsz	??___flmul,f
  9148  05C4  2DBE               	goto	u6535
  9149  05C5  082A               	movf	___flmul@b+1,w
  9150  05C6  00B1               	movwf	??___flmul
  9151  05C7  0831               	movf	??___flmul,w
  9152  05C8  00A0               	movwf	__Umul8_16@multiplicand
  9153  05C9  082D               	movf	___flmul@a,w
  9154  05CA  160A  158A  22B9  120A  118A  	fcall	__Umul8_16
  9155  05CF  0821               	movf	?__Umul8_16+1,w
  9156  05D0  00C2               	movwf	___flmul@temp+1
  9157  05D1  0820               	movf	?__Umul8_16,w
  9158  05D2  00C1               	movwf	___flmul@temp
  9159  05D3  0841               	movf	___flmul@temp,w
  9160  05D4  00B1               	movwf	??___flmul
  9161  05D5  0842               	movf	___flmul@temp+1,w
  9162  05D6  00B2               	movwf	??___flmul+1
  9163  05D7  01B3               	clrf	??___flmul+2
  9164  05D8  01B4               	clrf	??___flmul+3
  9165  05D9  0831               	movf	??___flmul,w
  9166  05DA  07B9               	addwf	___flmul@grs,f
  9167  05DB  0832               	movf	??___flmul+1,w
  9168  05DC  1103               	clrz
  9169  05DD  1803               	skipnc
  9170  05DE  3E01               	addlw	1
  9171  05DF  1D03               	btfss	3,2
  9172  05E0  07BA               	addwf	___flmul@grs+1,f
  9173  05E1  0833               	movf	??___flmul+2,w
  9174  05E2  1103               	clrz
  9175  05E3  1803               	skipnc
  9176  05E4  3E01               	addlw	1
  9177  05E5  1D03               	btfss	3,2
  9178  05E6  07BB               	addwf	___flmul@grs+2,f
  9179  05E7  0834               	movf	??___flmul+3,w
  9180  05E8  1103               	clrz
  9181  05E9  1803               	skipnc
  9182  05EA  3E01               	addlw	1
  9183  05EB  1D03               	btfss	3,2
  9184  05EC  07BC               	addwf	___flmul@grs+3,f
  9185  05ED  0829               	movf	___flmul@b,w
  9186  05EE  00B1               	movwf	??___flmul
  9187  05EF  0831               	movf	??___flmul,w
  9188  05F0  00A0               	movwf	__Umul8_16@multiplicand
  9189  05F1  082E               	movf	___flmul@a+1,w
  9190  05F2  160A  158A  22B9  120A  118A  	fcall	__Umul8_16
  9191  05F7  0821               	movf	?__Umul8_16+1,w
  9192  05F8  00C2               	movwf	___flmul@temp+1
  9193  05F9  0820               	movf	?__Umul8_16,w
  9194  05FA  00C1               	movwf	___flmul@temp
  9195  05FB  0841               	movf	___flmul@temp,w
  9196  05FC  00B1               	movwf	??___flmul
  9197  05FD  0842               	movf	___flmul@temp+1,w
  9198  05FE  00B2               	movwf	??___flmul+1
  9199  05FF  01B3               	clrf	??___flmul+2
  9200  0600  01B4               	clrf	??___flmul+3
  9201  0601  0831               	movf	??___flmul,w
  9202  0602  07B9               	addwf	___flmul@grs,f
  9203  0603  0832               	movf	??___flmul+1,w
  9204  0604  1103               	clrz
  9205  0605  1803               	skipnc
  9206  0606  3E01               	addlw	1
  9207  0607  1D03               	btfss	3,2
  9208  0608  07BA               	addwf	___flmul@grs+1,f
  9209  0609  0833               	movf	??___flmul+2,w
  9210  060A  1103               	clrz
  9211  060B  1803               	skipnc
  9212  060C  3E01               	addlw	1
  9213  060D  1D03               	btfss	3,2
  9214  060E  07BB               	addwf	___flmul@grs+2,f
  9215  060F  0834               	movf	??___flmul+3,w
  9216  0610  1103               	clrz
  9217  0611  1803               	skipnc
  9218  0612  3E01               	addlw	1
  9219  0613  1D03               	btfss	3,2
  9220  0614  07BC               	addwf	___flmul@grs+3,f
  9221  0615  3008               	movlw	8
  9222  0616  00B1               	movwf	??___flmul
  9223  0617                     u6565:	
  9224  0617  1003               	clrc
  9225  0618  0DB9               	rlf	___flmul@grs,f
  9226  0619  0DBA               	rlf	___flmul@grs+1,f
  9227  061A  0DBB               	rlf	___flmul@grs+2,f
  9228  061B  0DBC               	rlf	___flmul@grs+3,f
  9229  061C  0BB1               	decfsz	??___flmul,f
  9230  061D  2E17               	goto	u6565
  9231  061E  0829               	movf	___flmul@b,w
  9232  061F  00B1               	movwf	??___flmul
  9233  0620  0831               	movf	??___flmul,w
  9234  0621  00A0               	movwf	__Umul8_16@multiplicand
  9235  0622  082D               	movf	___flmul@a,w
  9236  0623  160A  158A  22B9  120A  118A  	fcall	__Umul8_16
  9237  0628  0821               	movf	?__Umul8_16+1,w
  9238  0629  00C2               	movwf	___flmul@temp+1
  9239  062A  0820               	movf	?__Umul8_16,w
  9240  062B  00C1               	movwf	___flmul@temp
  9241  062C  0841               	movf	___flmul@temp,w
  9242  062D  00B1               	movwf	??___flmul
  9243  062E  0842               	movf	___flmul@temp+1,w
  9244  062F  00B2               	movwf	??___flmul+1
  9245  0630  01B3               	clrf	??___flmul+2
  9246  0631  01B4               	clrf	??___flmul+3
  9247  0632  0831               	movf	??___flmul,w
  9248  0633  07B9               	addwf	___flmul@grs,f
  9249  0634  0832               	movf	??___flmul+1,w
  9250  0635  1103               	clrz
  9251  0636  1803               	skipnc
  9252  0637  3E01               	addlw	1
  9253  0638  1D03               	btfss	3,2
  9254  0639  07BA               	addwf	___flmul@grs+1,f
  9255  063A  0833               	movf	??___flmul+2,w
  9256  063B  1103               	clrz
  9257  063C  1803               	skipnc
  9258  063D  3E01               	addlw	1
  9259  063E  1D03               	btfss	3,2
  9260  063F  07BB               	addwf	___flmul@grs+2,f
  9261  0640  0834               	movf	??___flmul+3,w
  9262  0641  1103               	clrz
  9263  0642  1803               	skipnc
  9264  0643  3E01               	addlw	1
  9265  0644  1D03               	btfss	3,2
  9266  0645  07BC               	addwf	___flmul@grs+3,f
  9267  0646  082A               	movf	___flmul@b+1,w
  9268  0647  00B1               	movwf	??___flmul
  9269  0648  0831               	movf	??___flmul,w
  9270  0649  00A0               	movwf	__Umul8_16@multiplicand
  9271  064A  082F               	movf	___flmul@a+2,w
  9272  064B  160A  158A  22B9  120A  118A  	fcall	__Umul8_16
  9273  0650  0821               	movf	?__Umul8_16+1,w
  9274  0651  00C2               	movwf	___flmul@temp+1
  9275  0652  0820               	movf	?__Umul8_16,w
  9276  0653  00C1               	movwf	___flmul@temp
  9277  0654  0841               	movf	___flmul@temp,w
  9278  0655  00B1               	movwf	??___flmul
  9279  0656  0842               	movf	___flmul@temp+1,w
  9280  0657  00B2               	movwf	??___flmul+1
  9281  0658  01B3               	clrf	??___flmul+2
  9282  0659  01B4               	clrf	??___flmul+3
  9283  065A  0831               	movf	??___flmul,w
  9284  065B  07BD               	addwf	___flmul@prod,f
  9285  065C  0832               	movf	??___flmul+1,w
  9286  065D  1103               	clrz
  9287  065E  1803               	skipnc
  9288  065F  3E01               	addlw	1
  9289  0660  1D03               	btfss	3,2
  9290  0661  07BE               	addwf	___flmul@prod+1,f
  9291  0662  0833               	movf	??___flmul+2,w
  9292  0663  1103               	clrz
  9293  0664  1803               	skipnc
  9294  0665  3E01               	addlw	1
  9295  0666  1D03               	btfss	3,2
  9296  0667  07BF               	addwf	___flmul@prod+2,f
  9297  0668  0834               	movf	??___flmul+3,w
  9298  0669  1103               	clrz
  9299  066A  1803               	skipnc
  9300  066B  3E01               	addlw	1
  9301  066C  1D03               	btfss	3,2
  9302  066D  07C0               	addwf	___flmul@prod+3,f
  9303  066E  082B               	movf	___flmul@b+2,w
  9304  066F  00B1               	movwf	??___flmul
  9305  0670  0831               	movf	??___flmul,w
  9306  0671  00A0               	movwf	__Umul8_16@multiplicand
  9307  0672  082E               	movf	___flmul@a+1,w
  9308  0673  160A  158A  22B9  120A  118A  	fcall	__Umul8_16
  9309  0678  0821               	movf	?__Umul8_16+1,w
  9310  0679  00C2               	movwf	___flmul@temp+1
  9311  067A  0820               	movf	?__Umul8_16,w
  9312  067B  00C1               	movwf	___flmul@temp
  9313  067C  0841               	movf	___flmul@temp,w
  9314  067D  00B1               	movwf	??___flmul
  9315  067E  0842               	movf	___flmul@temp+1,w
  9316  067F  00B2               	movwf	??___flmul+1
  9317  0680  01B3               	clrf	??___flmul+2
  9318  0681  01B4               	clrf	??___flmul+3
  9319  0682  0831               	movf	??___flmul,w
  9320  0683  07BD               	addwf	___flmul@prod,f
  9321  0684  0832               	movf	??___flmul+1,w
  9322  0685  1103               	clrz
  9323  0686  1803               	skipnc
  9324  0687  3E01               	addlw	1
  9325  0688  1D03               	btfss	3,2
  9326  0689  07BE               	addwf	___flmul@prod+1,f
  9327  068A  0833               	movf	??___flmul+2,w
  9328  068B  1103               	clrz
  9329  068C  1803               	skipnc
  9330  068D  3E01               	addlw	1
  9331  068E  1D03               	btfss	3,2
  9332  068F  07BF               	addwf	___flmul@prod+2,f
  9333  0690  0834               	movf	??___flmul+3,w
  9334  0691  1103               	clrz
  9335  0692  1803               	skipnc
  9336  0693  3E01               	addlw	1
  9337  0694  1D03               	btfss	3,2
  9338  0695  07C0               	addwf	___flmul@prod+3,f
  9339  0696  082B               	movf	___flmul@b+2,w
  9340  0697  00B1               	movwf	??___flmul
  9341  0698  0831               	movf	??___flmul,w
  9342  0699  00A0               	movwf	__Umul8_16@multiplicand
  9343  069A  082F               	movf	___flmul@a+2,w
  9344  069B  160A  158A  22B9  120A  118A  	fcall	__Umul8_16
  9345  06A0  0821               	movf	?__Umul8_16+1,w
  9346  06A1  00C2               	movwf	___flmul@temp+1
  9347  06A2  0820               	movf	?__Umul8_16,w
  9348  06A3  00C1               	movwf	___flmul@temp
  9349  06A4  0841               	movf	___flmul@temp,w
  9350  06A5  00B1               	movwf	??___flmul
  9351  06A6  0842               	movf	___flmul@temp+1,w
  9352  06A7  00B2               	movwf	??___flmul+1
  9353  06A8  01B3               	clrf	??___flmul+2
  9354  06A9  01B4               	clrf	??___flmul+3
  9355  06AA  3008               	movlw	8
  9356  06AB                     u6605:	
  9357  06AB  1003               	clrc
  9358  06AC  0DB1               	rlf	??___flmul,f
  9359  06AD  0DB2               	rlf	??___flmul+1,f
  9360  06AE  0DB3               	rlf	??___flmul+2,f
  9361  06AF  0DB4               	rlf	??___flmul+3,f
  9362  06B0  3EFF               	addlw	-1
  9363  06B1  1D03               	skipz
  9364  06B2  2EAB               	goto	u6605
  9365  06B3  0831               	movf	??___flmul,w
  9366  06B4  07BD               	addwf	___flmul@prod,f
  9367  06B5  0832               	movf	??___flmul+1,w
  9368  06B6  1103               	clrz
  9369  06B7  1803               	skipnc
  9370  06B8  3E01               	addlw	1
  9371  06B9  1D03               	btfss	3,2
  9372  06BA  07BE               	addwf	___flmul@prod+1,f
  9373  06BB  0833               	movf	??___flmul+2,w
  9374  06BC  1103               	clrz
  9375  06BD  1803               	skipnc
  9376  06BE  3E01               	addlw	1
  9377  06BF  1D03               	btfss	3,2
  9378  06C0  07BF               	addwf	___flmul@prod+2,f
  9379  06C1  0834               	movf	??___flmul+3,w
  9380  06C2  1103               	clrz
  9381  06C3  1803               	skipnc
  9382  06C4  3E01               	addlw	1
  9383  06C5  1D03               	btfss	3,2
  9384  06C6  07C0               	addwf	___flmul@prod+3,f
  9385  06C7  083C               	movf	___flmul@grs+3,w
  9386  06C8  00B1               	movwf	??___flmul
  9387  06C9  01B2               	clrf	??___flmul+1
  9388  06CA  01B3               	clrf	??___flmul+2
  9389  06CB  01B4               	clrf	??___flmul+3
  9390  06CC  0831               	movf	??___flmul,w
  9391  06CD  07BD               	addwf	___flmul@prod,f
  9392  06CE  0832               	movf	??___flmul+1,w
  9393  06CF  1103               	clrz
  9394  06D0  1803               	skipnc
  9395  06D1  3E01               	addlw	1
  9396  06D2  1D03               	btfss	3,2
  9397  06D3  07BE               	addwf	___flmul@prod+1,f
  9398  06D4  0833               	movf	??___flmul+2,w
  9399  06D5  1103               	clrz
  9400  06D6  1803               	skipnc
  9401  06D7  3E01               	addlw	1
  9402  06D8  1D03               	btfss	3,2
  9403  06D9  07BF               	addwf	___flmul@prod+2,f
  9404  06DA  0834               	movf	??___flmul+3,w
  9405  06DB  1103               	clrz
  9406  06DC  1803               	skipnc
  9407  06DD  3E01               	addlw	1
  9408  06DE  1D03               	btfss	3,2
  9409  06DF  07C0               	addwf	___flmul@prod+3,f
  9410  06E0  3008               	movlw	8
  9411  06E1  00B1               	movwf	??___flmul
  9412  06E2                     u6635:	
  9413  06E2  1003               	clrc
  9414  06E3  0DB9               	rlf	___flmul@grs,f
  9415  06E4  0DBA               	rlf	___flmul@grs+1,f
  9416  06E5  0DBB               	rlf	___flmul@grs+2,f
  9417  06E6  0DBC               	rlf	___flmul@grs+3,f
  9418  06E7  0BB1               	decfsz	??___flmul,f
  9419  06E8  2EE2               	goto	u6635
  9420  06E9  0838               	movf	___flmul@bexp,w
  9421  06EA  0737               	addwf	___flmul@aexp,w
  9422  06EB  00B1               	movwf	??___flmul
  9423  06EC  01B2               	clrf	??___flmul+1
  9424  06ED  0DB2               	rlf	??___flmul+1,f
  9425  06EE  0831               	movf	??___flmul,w
  9426  06EF  3E82               	addlw	130
  9427  06F0  00C1               	movwf	___flmul@temp
  9428  06F1  0832               	movf	??___flmul+1,w
  9429  06F2  1803               	skipnc
  9430  06F3  3E01               	addlw	1
  9431  06F4  3EFF               	addlw	255
  9432  06F5  00C2               	movwf	___flmul@temp+1
  9433  06F6                     l6376:	
  9434  06F6  1BBF               	btfsc	___flmul@prod+2,7
  9435  06F7  2F13               	goto	l6378
  9436  06F8  3001               	movlw	1
  9437  06F9  00B1               	movwf	??___flmul
  9438  06FA                     u6645:	
  9439  06FA  1003               	clrc
  9440  06FB  0DBD               	rlf	___flmul@prod,f
  9441  06FC  0DBE               	rlf	___flmul@prod+1,f
  9442  06FD  0DBF               	rlf	___flmul@prod+2,f
  9443  06FE  0DC0               	rlf	___flmul@prod+3,f
  9444  06FF  0BB1               	decfsz	??___flmul,f
  9445  0700  2EFA               	goto	u6645
  9446  0701  1BBC               	btfsc	___flmul@grs+3,7
  9447  0702  143D               	bsf	___flmul@prod,0
  9448  0703  3001               	movlw	1
  9449  0704  00B1               	movwf	??___flmul
  9450  0705                     u6665:	
  9451  0705  1003               	clrc
  9452  0706  0DB9               	rlf	___flmul@grs,f
  9453  0707  0DBA               	rlf	___flmul@grs+1,f
  9454  0708  0DBB               	rlf	___flmul@grs+2,f
  9455  0709  0DBC               	rlf	___flmul@grs+3,f
  9456  070A  0BB1               	decfsz	??___flmul,f
  9457  070B  2F05               	goto	u6665
  9458  070C  30FF               	movlw	255
  9459  070D  07C1               	addwf	___flmul@temp,f
  9460  070E  1803               	skipnc
  9461  070F  0AC2               	incf	___flmul@temp+1,f
  9462  0710  30FF               	movlw	255
  9463  0711  07C2               	addwf	___flmul@temp+1,f
  9464  0712  2EF6               	goto	l6376
  9465  0713                     l6378:	
  9466  0713  01B7               	clrf	___flmul@aexp
  9467  0714  1FBC               	btfss	___flmul@grs+3,7
  9468  0715  2F2C               	goto	l6388
  9469  0716  30FF               	movlw	255
  9470  0717  0539               	andwf	___flmul@grs,w
  9471  0718  00B1               	movwf	??___flmul
  9472  0719  30FF               	movlw	255
  9473  071A  053A               	andwf	___flmul@grs+1,w
  9474  071B  00B2               	movwf	??___flmul+1
  9475  071C  30FF               	movlw	255
  9476  071D  053B               	andwf	___flmul@grs+2,w
  9477  071E  00B3               	movwf	??___flmul+2
  9478  071F  307F               	movlw	127
  9479  0720  053C               	andwf	___flmul@grs+3,w
  9480  0721  00B4               	movwf	??___flmul+3
  9481  0722  0834               	movf	??___flmul+3,w
  9482  0723  0433               	iorwf	??___flmul+2,w
  9483  0724  0432               	iorwf	??___flmul+1,w
  9484  0725  0431               	iorwf	??___flmul,w
  9485  0726  1903               	skipnz
  9486  0727  183D               	btfsc	___flmul@prod,0
  9487  0728  2F2A               	goto	l6384
  9488  0729  2F2C               	goto	l6388
  9489  072A                     l6384:	
  9490  072A  01B7               	clrf	___flmul@aexp
  9491  072B  0AB7               	incf	___flmul@aexp,f
  9492  072C                     l6388:	
  9493  072C  0837               	movf	___flmul@aexp,w
  9494  072D  1903               	btfsc	3,2
  9495  072E  2F5E               	goto	l6398
  9496  072F  3001               	movlw	1
  9497  0730  07BD               	addwf	___flmul@prod,f
  9498  0731  3000               	movlw	0
  9499  0732  1803               	skipnc
  9500  0733  3001               	movlw	1
  9501  0734  07BE               	addwf	___flmul@prod+1,f
  9502  0735  3000               	movlw	0
  9503  0736  1803               	skipnc
  9504  0737  3001               	movlw	1
  9505  0738  07BF               	addwf	___flmul@prod+2,f
  9506  0739  3000               	movlw	0
  9507  073A  1803               	skipnc
  9508  073B  3001               	movlw	1
  9509  073C  07C0               	addwf	___flmul@prod+3,f
  9510  073D  1C40               	btfss	___flmul@prod+3,0
  9511  073E  2F5E               	goto	l6398
  9512  073F  083D               	movf	___flmul@prod,w
  9513  0740  00B1               	movwf	??___flmul
  9514  0741  083E               	movf	___flmul@prod+1,w
  9515  0742  00B2               	movwf	??___flmul+1
  9516  0743  083F               	movf	___flmul@prod+2,w
  9517  0744  00B3               	movwf	??___flmul+2
  9518  0745  0840               	movf	___flmul@prod+3,w
  9519  0746  00B4               	movwf	??___flmul+3
  9520  0747  3001               	movlw	1
  9521  0748  00B5               	movwf	??___flmul+4
  9522  0749                     u6735:	
  9523  0749  0D34               	rlf	??___flmul+3,w
  9524  074A  0CB4               	rrf	??___flmul+3,f
  9525  074B  0CB3               	rrf	??___flmul+2,f
  9526  074C  0CB2               	rrf	??___flmul+1,f
  9527  074D  0CB1               	rrf	??___flmul,f
  9528  074E  0BB5               	decfsz	??___flmul+4,f
  9529  074F  2F49               	goto	u6735
  9530  0750  0834               	movf	??___flmul+3,w
  9531  0751  00C0               	movwf	___flmul@prod+3
  9532  0752  0833               	movf	??___flmul+2,w
  9533  0753  00BF               	movwf	___flmul@prod+2
  9534  0754  0832               	movf	??___flmul+1,w
  9535  0755  00BE               	movwf	___flmul@prod+1
  9536  0756  0831               	movf	??___flmul,w
  9537  0757  00BD               	movwf	___flmul@prod
  9538  0758  3001               	movlw	1
  9539  0759  07C1               	addwf	___flmul@temp,f
  9540  075A  1803               	skipnc
  9541  075B  0AC2               	incf	___flmul@temp+1,f
  9542  075C  3000               	movlw	0
  9543  075D  07C2               	addwf	___flmul@temp+1,f
  9544  075E                     l6398:	
  9545  075E  0842               	movf	___flmul@temp+1,w
  9546  075F  3A80               	xorlw	128
  9547  0760  00FF               	movwf	127
  9548  0761  3080               	movlw	128
  9549  0762  027F               	subwf	127,w
  9550  0763  1D03               	skipz
  9551  0764  2F67               	goto	u6745
  9552  0765  30FF               	movlw	255
  9553  0766  0241               	subwf	___flmul@temp,w
  9554  0767                     u6745:	
  9555  0767  1C03               	skipc
  9556  0768  2F74               	goto	l6402
  9557  0769  307F               	movlw	127
  9558  076A  1283               	bcf	3,5	;RP0=0, select bank0
  9559  076B  1303               	bcf	3,6	;RP1=0, select bank0
  9560  076C  00C0               	movwf	___flmul@prod+3
  9561  076D  3080               	movlw	128
  9562  076E  00BF               	movwf	___flmul@prod+2
  9563  076F  3000               	movlw	0
  9564  0770  00BE               	movwf	___flmul@prod+1
  9565  0771  3000               	movlw	0
  9566  0772  00BD               	movwf	___flmul@prod
  9567  0773  2FA4               	goto	l1350
  9568  0774                     l6402:	
  9569  0774  1283               	bcf	3,5	;RP0=0, select bank0
  9570  0775  1303               	bcf	3,6	;RP1=0, select bank0
  9571  0776  0842               	movf	___flmul@temp+1,w
  9572  0777  3A80               	xorlw	128
  9573  0778  00FF               	movwf	127
  9574  0779  3080               	movlw	128
  9575  077A  027F               	subwf	127,w
  9576  077B  1D03               	skipz
  9577  077C  2F7F               	goto	u6755
  9578  077D  3001               	movlw	1
  9579  077E  0241               	subwf	___flmul@temp,w
  9580  077F                     u6755:	
  9581  077F  1803               	skipnc
  9582  0780  2F8D               	goto	l6408
  9583  0781  3000               	movlw	0
  9584  0782  1283               	bcf	3,5	;RP0=0, select bank0
  9585  0783  1303               	bcf	3,6	;RP1=0, select bank0
  9586  0784  00C0               	movwf	___flmul@prod+3
  9587  0785  3000               	movlw	0
  9588  0786  00BF               	movwf	___flmul@prod+2
  9589  0787  3000               	movlw	0
  9590  0788  00BE               	movwf	___flmul@prod+1
  9591  0789  3000               	movlw	0
  9592  078A  00BD               	movwf	___flmul@prod
  9593  078B  01B6               	clrf	___flmul@sign
  9594  078C  2FA4               	goto	l1350
  9595  078D                     l6408:	
  9596  078D  1283               	bcf	3,5	;RP0=0, select bank0
  9597  078E  1303               	bcf	3,6	;RP1=0, select bank0
  9598  078F  0841               	movf	___flmul@temp,w
  9599  0790  00B1               	movwf	??___flmul
  9600  0791  0831               	movf	??___flmul,w
  9601  0792  00B8               	movwf	___flmul@bexp
  9602  0793  30FF               	movlw	255
  9603  0794  05BD               	andwf	___flmul@prod,f
  9604  0795  30FF               	movlw	255
  9605  0796  05BE               	andwf	___flmul@prod+1,f
  9606  0797  307F               	movlw	127
  9607  0798  05BF               	andwf	___flmul@prod+2,f
  9608  0799  3000               	movlw	0
  9609  079A  05C0               	andwf	___flmul@prod+3,f
  9610  079B  1838               	btfsc	___flmul@bexp,0
  9611  079C  17BF               	bsf	___flmul@prod+2,7
  9612  079D  0838               	movf	___flmul@bexp,w
  9613  079E  00B1               	movwf	??___flmul
  9614  079F  1003               	clrc
  9615  07A0  0C31               	rrf	??___flmul,w
  9616  07A1  00B2               	movwf	??___flmul+1
  9617  07A2  0832               	movf	??___flmul+1,w
  9618  07A3  00C0               	movwf	___flmul@prod+3
  9619  07A4                     l1350:	
  9620  07A4  0836               	movf	___flmul@sign,w
  9621  07A5  00B1               	movwf	??___flmul
  9622  07A6  0831               	movf	??___flmul,w
  9623  07A7  04C0               	iorwf	___flmul@prod+3,f
  9624  07A8  0840               	movf	___flmul@prod+3,w
  9625  07A9  00AC               	movwf	?___flmul+3
  9626  07AA  083F               	movf	___flmul@prod+2,w
  9627  07AB  00AB               	movwf	?___flmul+2
  9628  07AC  083E               	movf	___flmul@prod+1,w
  9629  07AD  00AA               	movwf	?___flmul+1
  9630  07AE  083D               	movf	___flmul@prod,w
  9631  07AF  00A9               	movwf	?___flmul
  9632  07B0  0008               	return
  9633  07B1                     __end_of___flmul:	
  9634                           
  9635                           	psect	text30
  9636  1AB9                     __ptext30:	
  9637 ;; *************** function __Umul8_16 *****************
  9638 ;; Defined at:
  9639 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;  multiplier      1    wreg     unsigned char 
  9642 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;  multiplier      1    8[BANK0 ] unsigned char 
  9645 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  9646 ;;  product         2    4[BANK0 ] unsigned int 
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  2    0[BANK0 ] unsigned int 
  9649 ;; Registers used:
  9650 ;;		wreg, status,2, status,0
  9651 ;; Tracked objects:
  9652 ;;		On entry : 300/0
  9653 ;;		On exit  : 300/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9656 ;;      Params:         0       2       0       0       0
  9657 ;;      Locals:         0       5       0       0       0
  9658 ;;      Temps:          0       2       0       0       0
  9659 ;;      Totals:         0       9       0       0       0
  9660 ;;Total ram usage:        9 bytes
  9661 ;; Hardware stack levels used:    1
  9662 ;; Hardware stack levels required when called:    1
  9663 ;; This function calls:
  9664 ;;		Nothing
  9665 ;; This function is called by:
  9666 ;;		___flmul
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670                           
  9671                           ;psect for function __Umul8_16
  9672  1AB9                     __Umul8_16:	
  9673                           
  9674                           ;incstack = 0
  9675                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9676                           ;__Umul8_16@multiplier stored from wreg
  9677  1AB9  00A8               	movwf	__Umul8_16@multiplier
  9678  1ABA  01A4               	clrf	__Umul8_16@product
  9679  1ABB  01A5               	clrf	__Umul8_16@product+1
  9680  1ABC  0820               	movf	__Umul8_16@multiplicand,w
  9681  1ABD  00A2               	movwf	??__Umul8_16
  9682  1ABE  01A3               	clrf	??__Umul8_16+1
  9683  1ABF  0822               	movf	??__Umul8_16,w
  9684  1AC0  00A6               	movwf	__Umul8_16@word_mpld
  9685  1AC1  0823               	movf	??__Umul8_16+1,w
  9686  1AC2  00A7               	movwf	__Umul8_16@word_mpld+1
  9687  1AC3                     l5840:	
  9688  1AC3  1C28               	btfss	__Umul8_16@multiplier,0
  9689  1AC4  2ACB               	goto	l1446
  9690  1AC5  0826               	movf	__Umul8_16@word_mpld,w
  9691  1AC6  07A4               	addwf	__Umul8_16@product,f
  9692  1AC7  1803               	skipnc
  9693  1AC8  0AA5               	incf	__Umul8_16@product+1,f
  9694  1AC9  0827               	movf	__Umul8_16@word_mpld+1,w
  9695  1ACA  07A5               	addwf	__Umul8_16@product+1,f
  9696  1ACB                     l1446:	
  9697  1ACB  3001               	movlw	1
  9698  1ACC                     u5675:	
  9699  1ACC  1003               	clrc
  9700  1ACD  0DA6               	rlf	__Umul8_16@word_mpld,f
  9701  1ACE  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  9702  1ACF  3EFF               	addlw	-1
  9703  1AD0  1D03               	skipz
  9704  1AD1  2ACC               	goto	u5675
  9705  1AD2  1003               	clrc
  9706  1AD3  0CA8               	rrf	__Umul8_16@multiplier,f
  9707  1AD4  0828               	movf	__Umul8_16@multiplier,w
  9708  1AD5  1D03               	btfss	3,2
  9709  1AD6  2AC3               	goto	l5840
  9710  1AD7  0825               	movf	__Umul8_16@product+1,w
  9711  1AD8  00A1               	movwf	?__Umul8_16+1
  9712  1AD9  0824               	movf	__Umul8_16@product,w
  9713  1ADA  00A0               	movwf	?__Umul8_16
  9714  1ADB  0008               	return
  9715  1ADC                     __end_of__Umul8_16:	
  9716                           
  9717                           	psect	text31
  9718  195C                     __ptext31:	
  9719 ;; *************** function _PROCULUS_VP_Write_String *****************
  9720 ;; Defined at:
  9721 ;;		line 205 in file "proculus.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;  vp              2   58[BANK0 ] unsigned int 
  9724 ;;  text            1   60[BANK0 ] PTR unsigned char 
  9725 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  9726 ;; Auto vars:     Size  Location     Type
  9727 ;;		None
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  1    wreg      void 
  9730 ;; Registers used:
  9731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9732 ;; Tracked objects:
  9733 ;;		On entry : 300/0
  9734 ;;		On exit  : 300/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9737 ;;      Params:         0       3       0       0       0
  9738 ;;      Locals:         0       0       0       0       0
  9739 ;;      Temps:          0       1       0       0       0
  9740 ;;      Totals:         0       4       0       0       0
  9741 ;;Total ram usage:        4 bytes
  9742 ;; Hardware stack levels used:    1
  9743 ;; Hardware stack levels required when called:    4
  9744 ;; This function calls:
  9745 ;;		_PROCULUS_VP_Write
  9746 ;;		_strlen
  9747 ;; This function is called by:
  9748 ;;		_Decodify_Command
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           
  9753                           ;psect for function _PROCULUS_VP_Write_String
  9754  195C                     _PROCULUS_VP_Write_String:	
  9755                           
  9756                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  9757                           
  9758                           ;incstack = 0
  9759                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9760  195C  085B               	movf	PROCULUS_VP_Write_String@vp+1,w
  9761  195D  00D3               	movwf	PROCULUS_VP_Write@vp+1
  9762  195E  085A               	movf	PROCULUS_VP_Write_String@vp,w
  9763  195F  00D2               	movwf	PROCULUS_VP_Write@vp
  9764  1960  085C               	movf	PROCULUS_VP_Write_String@text,w
  9765  1961  00D4               	movwf	PROCULUS_VP_Write@vetor
  9766  1962  3001               	movlw	1
  9767  1963  00D5               	movwf	PROCULUS_VP_Write@vetor+1
  9768  1964  085C               	movf	PROCULUS_VP_Write_String@text,w
  9769  1965  160A  158A  21A3  160A  158A  	fcall	_strlen
  9770  196A  0820               	movf	?_strlen,w
  9771  196B  3E01               	addlw	1
  9772  196C  00DD               	movwf	??_PROCULUS_VP_Write_String
  9773  196D  085D               	movf	??_PROCULUS_VP_Write_String,w
  9774  196E  00D6               	movwf	PROCULUS_VP_Write@size
  9775  196F  120A  118A  27B1   	fcall	_PROCULUS_VP_Write
  9776  1972  0008               	return
  9777  1973                     __end_of_PROCULUS_VP_Write_String:	
  9778                           
  9779                           	psect	text32
  9780  19A3                     __ptext32:	
  9781 ;; *************** function _strlen *****************
  9782 ;; Defined at:
  9783 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;  s               1    wreg     PTR const unsigned char 
  9786 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  9789 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9790 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  9791 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  2    0[BANK0 ] unsigned int 
  9794 ;; Registers used:
  9795 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/300
  9798 ;;		On exit  : B00/800
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9801 ;;      Params:         0       2       0       0       0
  9802 ;;      Locals:         0       2       0       0       0
  9803 ;;      Temps:          0       1       0       0       0
  9804 ;;      Totals:         0       5       0       0       0
  9805 ;;Total ram usage:        5 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:    1
  9808 ;; This function calls:
  9809 ;;		Nothing
  9810 ;; This function is called by:
  9811 ;;		_Decodify_Command
  9812 ;;		_PROCULUS_VP_Write_String
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           
  9817                           ;psect for function _strlen
  9818  19A3                     _strlen:	
  9819                           
  9820                           ;incstack = 0
  9821                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  9822                           ;strlen@s stored from wreg
  9823  19A3  1283               	bcf	3,5	;RP0=0, select bank0
  9824  19A4  1303               	bcf	3,6	;RP1=0, select bank0
  9825  19A5  00A4               	movwf	strlen@s
  9826  19A6  0824               	movf	strlen@s,w
  9827  19A7  00A2               	movwf	??_strlen
  9828  19A8  0822               	movf	??_strlen,w
  9829  19A9  00A3               	movwf	strlen@cp
  9830  19AA                     l6000:	
  9831  19AA  0823               	movf	strlen@cp,w
  9832  19AB  0084               	movwf	4
  9833  19AC  1783               	bsf	3,7	;select IRP bank2
  9834  19AD  0800               	movf	0,w
  9835  19AE  1903               	btfsc	3,2
  9836  19AF  29B5               	goto	l6002
  9837  19B0  3001               	movlw	1
  9838  19B1  00A2               	movwf	??_strlen
  9839  19B2  0822               	movf	??_strlen,w
  9840  19B3  07A3               	addwf	strlen@cp,f
  9841  19B4  29AA               	goto	l6000
  9842  19B5                     l6002:	
  9843  19B5  0824               	movf	strlen@s,w
  9844  19B6  0223               	subwf	strlen@cp,w
  9845  19B7  00A0               	movwf	?_strlen
  9846  19B8  01A1               	clrf	?_strlen+1
  9847  19B9  1BA0               	btfsc	?_strlen,7
  9848  19BA  03A1               	decf	?_strlen+1,f
  9849  19BB  0008               	return
  9850  19BC                     __end_of_strlen:	
  9851                           
  9852                           	psect	text33
  9853  07B1                     __ptext33:	
  9854 ;; *************** function _PROCULUS_VP_Write *****************
  9855 ;; Defined at:
  9856 ;;		line 40 in file "proculus.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;  vp              2   50[BANK0 ] unsigned int 
  9859 ;;  vetor           2   52[BANK0 ] PTR unsigned char 
  9860 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  9861 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  9862 ;;  size            1   54[BANK0 ] unsigned char 
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;  i               1   57[BANK0 ] unsigned char 
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  1    wreg      void 
  9867 ;; Registers used:
  9868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9869 ;; Tracked objects:
  9870 ;;		On entry : B00/800
  9871 ;;		On exit  : 300/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9874 ;;      Params:         0       5       0       0       0
  9875 ;;      Locals:         0       1       0       0       0
  9876 ;;      Temps:          0       2       0       0       0
  9877 ;;      Totals:         0       8       0       0       0
  9878 ;;Total ram usage:        8 bytes
  9879 ;; Hardware stack levels used:    1
  9880 ;; Hardware stack levels required when called:    3
  9881 ;; This function calls:
  9882 ;;		_PROCULUS_Delay
  9883 ;;		_USART_put_int
  9884 ;;		_USART_putc
  9885 ;; This function is called by:
  9886 ;;		_PROCULUS_VP_Write_String
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           
  9891                           ;psect for function _PROCULUS_VP_Write
  9892  07B1                     _PROCULUS_VP_Write:	
  9893                           
  9894                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  9895                           
  9896                           ;incstack = 0
  9897                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9898  07B1  30A5               	movlw	165
  9899  07B2  00CE               	movwf	USART_put_int@value
  9900  07B3  305A               	movlw	90
  9901  07B4  00CF               	movwf	USART_put_int@value+1
  9902  07B5  160A  158A  2146  120A  118A  	fcall	_USART_put_int
  9903                           
  9904                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  9905  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  9906  07BB  0856               	movf	PROCULUS_VP_Write@size,w
  9907  07BC  3E03               	addlw	3
  9908  07BD  160A  158A  210B  120A  118A  	fcall	_USART_putc
  9909                           
  9910                           ;proculus.c: 43:      USART_putc(0x82);
  9911  07C2  3082               	movlw	130
  9912  07C3  160A  158A  210B  120A  118A  	fcall	_USART_putc
  9913                           
  9914                           ;proculus.c: 44:      USART_put_int(vp);
  9915  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  9916  07C9  0853               	movf	PROCULUS_VP_Write@vp+1,w
  9917  07CA  00CF               	movwf	USART_put_int@value+1
  9918  07CB  0852               	movf	PROCULUS_VP_Write@vp,w
  9919  07CC  00CE               	movwf	USART_put_int@value
  9920  07CD  160A  158A  2146  120A  118A  	fcall	_USART_put_int
  9921                           
  9922                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  9923  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  9924  07D3  01D9               	clrf	PROCULUS_VP_Write@i
  9925  07D4                     l6046:	
  9926  07D4  0856               	movf	PROCULUS_VP_Write@size,w
  9927  07D5  0259               	subwf	PROCULUS_VP_Write@i,w
  9928  07D6  1803               	btfsc	3,0
  9929  07D7  2FF0               	goto	l6048
  9930                           
  9931                           ;proculus.c: 46:          USART_putc(vetor[i]);
  9932  07D8  0859               	movf	PROCULUS_VP_Write@i,w
  9933  07D9  0754               	addwf	PROCULUS_VP_Write@vetor,w
  9934  07DA  00D7               	movwf	??_PROCULUS_VP_Write
  9935  07DB  0855               	movf	PROCULUS_VP_Write@vetor+1,w
  9936  07DC  1803               	skipnc
  9937  07DD  3E01               	addlw	1
  9938  07DE  00D8               	movwf	??_PROCULUS_VP_Write+1
  9939  07DF  0857               	movf	??_PROCULUS_VP_Write,w
  9940  07E0  0084               	movwf	4
  9941  07E1  1783               	bsf	3,7
  9942  07E2  1C58               	btfss	??_PROCULUS_VP_Write+1,0
  9943  07E3  1383               	bcf	3,7
  9944  07E4  0800               	movf	0,w
  9945  07E5  160A  158A  210B  120A  118A  	fcall	_USART_putc
  9946  07EA  3001               	movlw	1
  9947  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  9948  07EC  00D7               	movwf	??_PROCULUS_VP_Write
  9949  07ED  0857               	movf	??_PROCULUS_VP_Write,w
  9950  07EE  07D9               	addwf	PROCULUS_VP_Write@i,f
  9951  07EF  2FD4               	goto	l6046
  9952  07F0                     l6048:	
  9953                           
  9954                           ;proculus.c: 48:      PROCULUS_Delay(1);
  9955  07F0  3001               	movlw	1
  9956  07F1  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9957  07F2  3000               	movlw	0
  9958  07F3  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9959  07F4  160A  158A  21BC   	fcall	_PROCULUS_Delay
  9960  07F7  0008               	return
  9961  07F8                     __end_of_PROCULUS_VP_Write:	
  9962                           
  9963                           	psect	text34
  9964  191B                     __ptext34:	
  9965 ;; *************** function _PROCULUS_Show_Screen *****************
  9966 ;; Defined at:
  9967 ;;		line 243 in file "proculus.c"
  9968 ;; Parameters:    Size  Location     Type
  9969 ;;  screen          2   54[BANK0 ] unsigned int 
  9970 ;; Auto vars:     Size  Location     Type
  9971 ;;  vetor           3   57[BANK0 ] unsigned char [3]
  9972 ;; Return value:  Size  Location     Type
  9973 ;;                  1    wreg      void 
  9974 ;; Registers used:
  9975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9976 ;; Tracked objects:
  9977 ;;		On entry : 300/0
  9978 ;;		On exit  : 300/0
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9981 ;;      Params:         0       2       0       0       0
  9982 ;;      Locals:         0       3       0       0       0
  9983 ;;      Temps:          0       1       0       0       0
  9984 ;;      Totals:         0       6       0       0       0
  9985 ;;Total ram usage:        6 bytes
  9986 ;; Hardware stack levels used:    1
  9987 ;; Hardware stack levels required when called:    4
  9988 ;; This function calls:
  9989 ;;		_PROCULUS_Control_Register_Write
  9990 ;; This function is called by:
  9991 ;;		_Decodify_Command
  9992 ;; This function uses a non-reentrant model
  9993 ;;
  9994                           
  9995                           
  9996                           ;psect for function _PROCULUS_Show_Screen
  9997  191B                     _PROCULUS_Show_Screen:	
  9998                           
  9999                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
 10000                           
 10001                           ;incstack = 0
 10002                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10003  191B  3003               	movlw	3
 10004  191C  00D8               	movwf	??_PROCULUS_Show_Screen
 10005  191D  0858               	movf	??_PROCULUS_Show_Screen,w
 10006  191E  00D9               	movwf	PROCULUS_Show_Screen@vetor
 10007                           
 10008                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
 10009  191F  0857               	movf	PROCULUS_Show_Screen@screen+1,w
 10010  1920  00D8               	movwf	??_PROCULUS_Show_Screen
 10011  1921  0858               	movf	??_PROCULUS_Show_Screen,w
 10012  1922  00DA               	movwf	PROCULUS_Show_Screen@vetor+1
 10013                           
 10014                           ;proculus.c: 247:      vetor[2] = (char) screen;
 10015  1923  0856               	movf	PROCULUS_Show_Screen@screen,w
 10016  1924  00D8               	movwf	??_PROCULUS_Show_Screen
 10017  1925  0858               	movf	??_PROCULUS_Show_Screen,w
 10018  1926  00DB               	movwf	PROCULUS_Show_Screen@vetor+2
 10019                           
 10020                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
 10021  1927  3003               	movlw	3
 10022  1928  00D8               	movwf	??_PROCULUS_Show_Screen
 10023  1929  0858               	movf	??_PROCULUS_Show_Screen,w
 10024  192A  00D2               	movwf	PROCULUS_Control_Register_Write@size
 10025  192B  3059               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
 10026  192C  160A  158A  24D5   	fcall	_PROCULUS_Control_Register_Write
 10027  192F  0008               	return
 10028  1930                     __end_of_PROCULUS_Show_Screen:	
 10029                           
 10030                           	psect	text35
 10031  1A97                     __ptext35:	
 10032 ;; *************** function _PROCULUS_Buzzer *****************
 10033 ;; Defined at:
 10034 ;;		line 223 in file "proculus.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;  time_ms_x_10    2   54[BANK0 ] unsigned int 
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;  vetor           2   57[BANK0 ] unsigned char [2]
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  1    wreg      void 
 10041 ;; Registers used:
 10042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10043 ;; Tracked objects:
 10044 ;;		On entry : 300/0
 10045 ;;		On exit  : 300/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10048 ;;      Params:         0       2       0       0       0
 10049 ;;      Locals:         0       2       0       0       0
 10050 ;;      Temps:          0       1       0       0       0
 10051 ;;      Totals:         0       5       0       0       0
 10052 ;;Total ram usage:        5 bytes
 10053 ;; Hardware stack levels used:    1
 10054 ;; Hardware stack levels required when called:    4
 10055 ;; This function calls:
 10056 ;;		_PROCULUS_Control_Register_Write
 10057 ;;		___lwdiv
 10058 ;; This function is called by:
 10059 ;;		_Decodify_Command
 10060 ;; This function uses a non-reentrant model
 10061 ;;
 10062                           
 10063                           
 10064                           ;psect for function _PROCULUS_Buzzer
 10065  1A97                     _PROCULUS_Buzzer:	
 10066                           
 10067                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
 10068                           
 10069                           ;incstack = 0
 10070                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10071  1A97  300A               	movlw	10
 10072  1A98  00A0               	movwf	___lwdiv@divisor
 10073  1A99  3000               	movlw	0
 10074  1A9A  00A1               	movwf	___lwdiv@divisor+1
 10075  1A9B  0857               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
 10076  1A9C  00A3               	movwf	___lwdiv@dividend+1
 10077  1A9D  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
 10078  1A9E  00A2               	movwf	___lwdiv@dividend
 10079  1A9F  160A  158A  2581  160A  158A  	fcall	___lwdiv
 10080  1AA4  0821               	movf	?___lwdiv+1,w
 10081  1AA5  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
 10082  1AA6  0820               	movf	?___lwdiv,w
 10083  1AA7  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
 10084                           
 10085                           ;proculus.c: 226:      vetor[0]=0x02;
 10086  1AA8  3002               	movlw	2
 10087  1AA9  00D8               	movwf	??_PROCULUS_Buzzer
 10088  1AAA  0858               	movf	??_PROCULUS_Buzzer,w
 10089  1AAB  00D9               	movwf	PROCULUS_Buzzer@vetor
 10090                           
 10091                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
 10092  1AAC  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
 10093  1AAD  00D8               	movwf	??_PROCULUS_Buzzer
 10094  1AAE  0858               	movf	??_PROCULUS_Buzzer,w
 10095  1AAF  00DA               	movwf	PROCULUS_Buzzer@vetor+1
 10096                           
 10097                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
 10098  1AB0  3002               	movlw	2
 10099  1AB1  00D8               	movwf	??_PROCULUS_Buzzer
 10100  1AB2  0858               	movf	??_PROCULUS_Buzzer,w
 10101  1AB3  00D2               	movwf	PROCULUS_Control_Register_Write@size
 10102  1AB4  3059               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
 10103  1AB5  160A  158A  24D5   	fcall	_PROCULUS_Control_Register_Write
 10104  1AB8  0008               	return
 10105  1AB9                     __end_of_PROCULUS_Buzzer:	
 10106                           
 10107                           	psect	text36
 10108  1D81                     __ptext36:	
 10109 ;; *************** function ___lwdiv *****************
 10110 ;; Defined at:
 10111 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
 10112 ;; Parameters:    Size  Location     Type
 10113 ;;  divisor         2    0[BANK0 ] unsigned int 
 10114 ;;  dividend        2    2[BANK0 ] unsigned int 
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;  quotient        2    6[BANK0 ] unsigned int 
 10117 ;;  counter         1    5[BANK0 ] unsigned char 
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  2    0[BANK0 ] unsigned int 
 10120 ;; Registers used:
 10121 ;;		wreg, status,2, status,0
 10122 ;; Tracked objects:
 10123 ;;		On entry : 300/0
 10124 ;;		On exit  : 300/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10127 ;;      Params:         0       4       0       0       0
 10128 ;;      Locals:         0       3       0       0       0
 10129 ;;      Temps:          0       1       0       0       0
 10130 ;;      Totals:         0       8       0       0       0
 10131 ;;Total ram usage:        8 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; Hardware stack levels required when called:    1
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_ADC_Media_10bits
 10138 ;;		_PROCULUS_Buzzer
 10139 ;;		_utoa
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143                           
 10144                           ;psect for function ___lwdiv
 10145  1D81                     ___lwdiv:	
 10146                           
 10147                           ;incstack = 0
 10148                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10149  1D81  01A6               	clrf	___lwdiv@quotient
 10150  1D82  01A7               	clrf	___lwdiv@quotient+1
 10151  1D83  0820               	movf	___lwdiv@divisor,w
 10152  1D84  0421               	iorwf	___lwdiv@divisor+1,w
 10153  1D85  1903               	btfsc	3,2
 10154  1D86  2DB8               	goto	l5810
 10155  1D87  01A5               	clrf	___lwdiv@counter
 10156  1D88  0AA5               	incf	___lwdiv@counter,f
 10157  1D89                     l5798:	
 10158  1D89  1BA1               	btfsc	___lwdiv@divisor+1,7
 10159  1D8A  2D97               	goto	l5800
 10160  1D8B  3001               	movlw	1
 10161  1D8C                     u5545:	
 10162  1D8C  1003               	clrc
 10163  1D8D  0DA0               	rlf	___lwdiv@divisor,f
 10164  1D8E  0DA1               	rlf	___lwdiv@divisor+1,f
 10165  1D8F  3EFF               	addlw	-1
 10166  1D90  1D03               	skipz
 10167  1D91  2D8C               	goto	u5545
 10168  1D92  3001               	movlw	1
 10169  1D93  00A4               	movwf	??___lwdiv
 10170  1D94  0824               	movf	??___lwdiv,w
 10171  1D95  07A5               	addwf	___lwdiv@counter,f
 10172  1D96  2D89               	goto	l5798
 10173  1D97                     l5800:	
 10174  1D97  3001               	movlw	1
 10175  1D98                     u5565:	
 10176  1D98  1003               	clrc
 10177  1D99  0DA6               	rlf	___lwdiv@quotient,f
 10178  1D9A  0DA7               	rlf	___lwdiv@quotient+1,f
 10179  1D9B  3EFF               	addlw	-1
 10180  1D9C  1D03               	skipz
 10181  1D9D  2D98               	goto	u5565
 10182  1D9E  0821               	movf	___lwdiv@divisor+1,w
 10183  1D9F  0223               	subwf	___lwdiv@dividend+1,w
 10184  1DA0  1D03               	skipz
 10185  1DA1  2DA4               	goto	u5575
 10186  1DA2  0820               	movf	___lwdiv@divisor,w
 10187  1DA3  0222               	subwf	___lwdiv@dividend,w
 10188  1DA4                     u5575:	
 10189  1DA4  1C03               	skipc
 10190  1DA5  2DAD               	goto	l5806
 10191  1DA6  0820               	movf	___lwdiv@divisor,w
 10192  1DA7  02A2               	subwf	___lwdiv@dividend,f
 10193  1DA8  0821               	movf	___lwdiv@divisor+1,w
 10194  1DA9  1C03               	skipc
 10195  1DAA  03A3               	decf	___lwdiv@dividend+1,f
 10196  1DAB  02A3               	subwf	___lwdiv@dividend+1,f
 10197  1DAC  1426               	bsf	___lwdiv@quotient,0
 10198  1DAD                     l5806:	
 10199  1DAD  3001               	movlw	1
 10200  1DAE                     u5585:	
 10201  1DAE  1003               	clrc
 10202  1DAF  0CA1               	rrf	___lwdiv@divisor+1,f
 10203  1DB0  0CA0               	rrf	___lwdiv@divisor,f
 10204  1DB1  3EFF               	addlw	-1
 10205  1DB2  1D03               	skipz
 10206  1DB3  2DAE               	goto	u5585
 10207  1DB4  3001               	movlw	1
 10208  1DB5  02A5               	subwf	___lwdiv@counter,f
 10209  1DB6  1D03               	btfss	3,2
 10210  1DB7  2D97               	goto	l5800
 10211  1DB8                     l5810:	
 10212  1DB8  0827               	movf	___lwdiv@quotient+1,w
 10213  1DB9  00A1               	movwf	?___lwdiv+1
 10214  1DBA  0826               	movf	___lwdiv@quotient,w
 10215  1DBB  00A0               	movwf	?___lwdiv
 10216  1DBC  0008               	return
 10217  1DBD                     __end_of___lwdiv:	
 10218                           
 10219                           	psect	text37
 10220  1CD5                     __ptext37:	
 10221 ;; *************** function _PROCULUS_Control_Register_Write *****************
 10222 ;; Defined at:
 10223 ;;		line 13 in file "proculus.c"
 10224 ;; Parameters:    Size  Location     Type
 10225 ;;  vetor           1    wreg     PTR unsigned char 
 10226 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10227 ;;  size            1   50[BANK0 ] unsigned char 
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
 10230 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 10231 ;;  i               1   53[BANK0 ] unsigned char 
 10232 ;; Return value:  Size  Location     Type
 10233 ;;                  1    wreg      void 
 10234 ;; Registers used:
 10235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10236 ;; Tracked objects:
 10237 ;;		On entry : 300/0
 10238 ;;		On exit  : 300/0
 10239 ;;		Unchanged: 0/0
 10240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10241 ;;      Params:         0       1       0       0       0
 10242 ;;      Locals:         0       2       0       0       0
 10243 ;;      Temps:          0       1       0       0       0
 10244 ;;      Totals:         0       4       0       0       0
 10245 ;;Total ram usage:        4 bytes
 10246 ;; Hardware stack levels used:    1
 10247 ;; Hardware stack levels required when called:    3
 10248 ;; This function calls:
 10249 ;;		_PROCULUS_Delay
 10250 ;;		_USART_put_int
 10251 ;;		_USART_putc
 10252 ;; This function is called by:
 10253 ;;		_PROCULUS_Buzzer
 10254 ;;		_PROCULUS_Show_Screen
 10255 ;; This function uses a non-reentrant model
 10256 ;;
 10257                           
 10258                           
 10259                           ;psect for function _PROCULUS_Control_Register_Write
 10260  1CD5                     _PROCULUS_Control_Register_Write:	
 10261                           
 10262                           ;incstack = 0
 10263                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
 10264                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
 10265  1CD5  00D4               	movwf	PROCULUS_Control_Register_Write@vetor
 10266                           
 10267                           ;proculus.c: 14:      USART_put_int(0x5AA5);
 10268  1CD6  30A5               	movlw	165
 10269  1CD7  00CE               	movwf	USART_put_int@value
 10270  1CD8  305A               	movlw	90
 10271  1CD9  00CF               	movwf	USART_put_int@value+1
 10272  1CDA  160A  158A  2146  160A  158A  	fcall	_USART_put_int
 10273                           
 10274                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
 10275  1CDF  1283               	bcf	3,5	;RP0=0, select bank0
 10276  1CE0  0852               	movf	PROCULUS_Control_Register_Write@size,w
 10277  1CE1  3E01               	addlw	1
 10278  1CE2  160A  158A  210B  160A  158A  	fcall	_USART_putc
 10279                           
 10280                           ;proculus.c: 16:      USART_putc(0x80);
 10281  1CE7  3080               	movlw	128
 10282  1CE8  160A  158A  210B  160A  158A  	fcall	_USART_putc
 10283                           
 10284                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
 10285  1CED  1283               	bcf	3,5	;RP0=0, select bank0
 10286  1CEE  01D5               	clrf	PROCULUS_Control_Register_Write@i
 10287  1CEF                     l6030:	
 10288  1CEF  0852               	movf	PROCULUS_Control_Register_Write@size,w
 10289  1CF0  0255               	subwf	PROCULUS_Control_Register_Write@i,w
 10290  1CF1  1803               	btfsc	3,0
 10291  1CF2  2D05               	goto	l6032
 10292                           
 10293                           ;proculus.c: 18:          USART_putc(vetor[i]);
 10294  1CF3  0855               	movf	PROCULUS_Control_Register_Write@i,w
 10295  1CF4  0754               	addwf	PROCULUS_Control_Register_Write@vetor,w
 10296  1CF5  00D3               	movwf	??_PROCULUS_Control_Register_Write
 10297  1CF6  0853               	movf	??_PROCULUS_Control_Register_Write,w
 10298  1CF7  0084               	movwf	4
 10299  1CF8  1383               	bcf	3,7	;select IRP bank0
 10300  1CF9  0800               	movf	0,w
 10301  1CFA  160A  158A  210B  160A  158A  	fcall	_USART_putc
 10302  1CFF  3001               	movlw	1
 10303  1D00  1283               	bcf	3,5	;RP0=0, select bank0
 10304  1D01  00D3               	movwf	??_PROCULUS_Control_Register_Write
 10305  1D02  0853               	movf	??_PROCULUS_Control_Register_Write,w
 10306  1D03  07D5               	addwf	PROCULUS_Control_Register_Write@i,f
 10307  1D04  2CEF               	goto	l6030
 10308  1D05                     l6032:	
 10309                           
 10310                           ;proculus.c: 19:      PROCULUS_Delay(1);
 10311  1D05  3001               	movlw	1
 10312  1D06  00A0               	movwf	PROCULUS_Delay@tempo_ms
 10313  1D07  3000               	movlw	0
 10314  1D08  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
 10315  1D09  160A  158A  21BC   	fcall	_PROCULUS_Delay
 10316  1D0C  0008               	return
 10317  1D0D                     __end_of_PROCULUS_Control_Register_Write:	
 10318                           
 10319                           	psect	text38
 10320  1946                     __ptext38:	
 10321 ;; *************** function _USART_put_int *****************
 10322 ;; Defined at:
 10323 ;;		line 138 in file "usart.c"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;  value           2   46[BANK0 ] int 
 10326 ;; Auto vars:     Size  Location     Type
 10327 ;;  dado            1   49[BANK0 ] PTR unsigned char 
 10328 ;;		 -> USART_put_int@value(2), 
 10329 ;; Return value:  Size  Location     Type
 10330 ;;                  1    wreg      void 
 10331 ;; Registers used:
 10332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10333 ;; Tracked objects:
 10334 ;;		On entry : 300/0
 10335 ;;		On exit  : 300/100
 10336 ;;		Unchanged: 0/0
 10337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10338 ;;      Params:         0       2       0       0       0
 10339 ;;      Locals:         0       1       0       0       0
 10340 ;;      Temps:          0       1       0       0       0
 10341 ;;      Totals:         0       4       0       0       0
 10342 ;;Total ram usage:        4 bytes
 10343 ;; Hardware stack levels used:    1
 10344 ;; Hardware stack levels required when called:    2
 10345 ;; This function calls:
 10346 ;;		_USART_putc
 10347 ;; This function is called by:
 10348 ;;		_Decodify_Command
 10349 ;;		_PROCULUS_Control_Register_Write
 10350 ;;		_PROCULUS_VP_Write
 10351 ;; This function uses a non-reentrant model
 10352 ;;
 10353                           
 10354                           
 10355                           ;psect for function _USART_put_int
 10356  1946                     _USART_put_int:	
 10357                           
 10358                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
 10359                           
 10360                           ;incstack = 0
 10361                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10362  1946  304E               	movlw	(low (USART_put_int@value| 0))& (0+255)
 10363  1947  00D0               	movwf	??_USART_put_int
 10364  1948  0850               	movf	??_USART_put_int,w
 10365  1949  00D1               	movwf	USART_put_int@dado
 10366                           
 10367                           ;usart.c: 141:      USART_putc(*(dado+1));
 10368  194A  0A51               	incf	USART_put_int@dado,w
 10369  194B  0084               	movwf	4
 10370  194C  1383               	bcf	3,7	;select IRP bank0
 10371  194D  0800               	movf	0,w
 10372  194E  160A  158A  210B  160A  158A  	fcall	_USART_putc
 10373                           
 10374                           ;usart.c: 142:      USART_putc(*dado);
 10375  1953  1283               	bcf	3,5	;RP0=0, select bank0
 10376  1954  0851               	movf	USART_put_int@dado,w
 10377  1955  0084               	movwf	4
 10378  1956  1383               	bcf	3,7	;select IRP bank0
 10379  1957  0800               	movf	0,w
 10380  1958  160A  158A  210B   	fcall	_USART_putc
 10381  195B  0008               	return
 10382  195C                     __end_of_USART_put_int:	
 10383                           
 10384                           	psect	text39
 10385  190B                     __ptext39:	
 10386 ;; *************** function _USART_putc *****************
 10387 ;; Defined at:
 10388 ;;		line 89 in file "usart.c"
 10389 ;; Parameters:    Size  Location     Type
 10390 ;;  value           1    wreg     unsigned char 
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;  value           1    0[BANK0 ] unsigned char 
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  1    wreg      void 
 10395 ;; Registers used:
 10396 ;;		wreg
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/100
 10399 ;;		On exit  : 300/100
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10402 ;;      Params:         0       0       0       0       0
 10403 ;;      Locals:         0       1       0       0       0
 10404 ;;      Temps:          0       0       0       0       0
 10405 ;;      Totals:         0       1       0       0       0
 10406 ;;Total ram usage:        1 bytes
 10407 ;; Hardware stack levels used:    1
 10408 ;; Hardware stack levels required when called:    1
 10409 ;; This function calls:
 10410 ;;		Nothing
 10411 ;; This function is called by:
 10412 ;;		_Decodify_Command
 10413 ;;		_Send_To_MB
 10414 ;;		_PROCULUS_Control_Register_Write
 10415 ;;		_PROCULUS_VP_Write
 10416 ;;		_USART_put_buffer
 10417 ;;		_USART_put_int
 10418 ;;		_USART_put_string
 10419 ;; This function uses a non-reentrant model
 10420 ;;
 10421                           
 10422                           
 10423                           ;psect for function _USART_putc
 10424  190B                     _USART_putc:	
 10425                           
 10426                           ;incstack = 0
 10427                           ; Regs used in _USART_putc: [wreg]
 10428                           ;USART_putc@value stored from wreg
 10429  190B  1283               	bcf	3,5	;RP0=0, select bank0
 10430  190C  1303               	bcf	3,6	;RP1=0, select bank0
 10431  190D  00A0               	movwf	USART_putc@value
 10432                           
 10433                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 10434  190E  3014               	movlw	20
 10435  190F  1683               	bsf	3,5	;RP0=1, select bank1
 10436  1910  00DF               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 10437  1911  3000               	movlw	0
 10438  1912  00E0               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 10439  1913                     l741:	
 10440                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 10441                           
 10442  1913  1C98               	btfss	24,1	;volatile
 10443  1914  2913               	goto	l741
 10444                           
 10445                           ;usart.c: 93:     TXREG=value;
 10446  1915  1283               	bcf	3,5	;RP0=0, select bank0
 10447  1916  0820               	movf	USART_putc@value,w
 10448  1917  0099               	movwf	25	;volatile
 10449                           
 10450                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 10451  1918  1683               	bsf	3,5	;RP0=1, select bank1
 10452  1919  1698               	bsf	24,5	;volatile
 10453  191A  0008               	return
 10454  191B                     __end_of_USART_putc:	
 10455                           
 10456                           	psect	text40
 10457  19BC                     __ptext40:	
 10458 ;; *************** function _PROCULUS_Delay *****************
 10459 ;; Defined at:
 10460 ;;		line 267 in file "proculus.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;  i               2    4[BANK0 ] unsigned int 
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  1    wreg      void 
 10467 ;; Registers used:
 10468 ;;		wreg, status,2
 10469 ;; Tracked objects:
 10470 ;;		On entry : 300/800
 10471 ;;		On exit  : 300/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10474 ;;      Params:         0       2       0       0       0
 10475 ;;      Locals:         0       2       0       0       0
 10476 ;;      Temps:          0       2       0       0       0
 10477 ;;      Totals:         0       6       0       0       0
 10478 ;;Total ram usage:        6 bytes
 10479 ;; Hardware stack levels used:    1
 10480 ;; Hardware stack levels required when called:    1
 10481 ;; This function calls:
 10482 ;;		Nothing
 10483 ;; This function is called by:
 10484 ;;		_PROCULUS_Control_Register_Write
 10485 ;;		_PROCULUS_VP_Write
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           
 10490                           ;psect for function _PROCULUS_Delay
 10491  19BC                     _PROCULUS_Delay:	
 10492                           
 10493                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
 10494                           
 10495                           ;incstack = 0
 10496                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
 10497  19BC  01A4               	clrf	PROCULUS_Delay@i
 10498  19BD  01A5               	clrf	PROCULUS_Delay@i+1
 10499  19BE                     l661:	
 10500  19BE  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
 10501  19BF  0225               	subwf	PROCULUS_Delay@i+1,w
 10502  19C0  1D03               	skipz
 10503  19C1  29C4               	goto	u5525
 10504  19C2  0820               	movf	PROCULUS_Delay@tempo_ms,w
 10505  19C3  0224               	subwf	PROCULUS_Delay@i,w
 10506  19C4                     u5525:	
 10507  19C4  1803               	btfsc	3,0
 10508  19C5  0008               	return
 10509                           
 10510                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
 10511  19C6  3003               	movlw	3
 10512  19C7  1283               	bcf	3,5	;RP0=0, select bank0
 10513  19C8  1303               	bcf	3,6	;RP1=0, select bank0
 10514  19C9  00A3               	movwf	??_PROCULUS_Delay+1
 10515  19CA  3097               	movlw	151
 10516  19CB  00A2               	movwf	??_PROCULUS_Delay
 10517  19CC                     u8037:	
 10518  19CC  0BA2               	decfsz	??_PROCULUS_Delay,f
 10519  19CD  29CC               	goto	u8037
 10520  19CE  0BA3               	decfsz	??_PROCULUS_Delay+1,f
 10521  19CF  29CC               	goto	u8037
 10522                           
 10523                           ;proculus.c: 270:     }
 10524  19D0  3001               	movlw	1
 10525  19D1  1283               	bcf	3,5	;RP0=0, select bank0
 10526  19D2  1303               	bcf	3,6	;RP1=0, select bank0
 10527  19D3  07A4               	addwf	PROCULUS_Delay@i,f
 10528  19D4  1803               	skipnc
 10529  19D5  0AA5               	incf	PROCULUS_Delay@i+1,f
 10530  19D6  3000               	movlw	0
 10531  19D7  07A5               	addwf	PROCULUS_Delay@i+1,f
 10532  19D8  29BE               	goto	l661
 10533  19D9                     __end_of_PROCULUS_Delay:	
 10534                           
 10535                           	psect	text41
 10536  1B52                     __ptext41:	
 10537 ;; *************** function _EEPROM_Write_String *****************
 10538 ;; Defined at:
 10539 ;;		line 97 in file "eeprom.c"
 10540 ;; Parameters:    Size  Location     Type
 10541 ;;  addr            1    wreg     unsigned char 
 10542 ;;  dado            1    5[BANK0 ] PTR unsigned char 
 10543 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;  addr            1    7[BANK0 ] unsigned char 
 10546 ;; Return value:  Size  Location     Type
 10547 ;;                  1    wreg      void 
 10548 ;; Registers used:
 10549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10550 ;; Tracked objects:
 10551 ;;		On entry : 300/300
 10552 ;;		On exit  : 0/0
 10553 ;;		Unchanged: 0/0
 10554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10555 ;;      Params:         0       1       0       0       0
 10556 ;;      Locals:         0       1       0       0       0
 10557 ;;      Temps:          0       1       0       0       0
 10558 ;;      Totals:         0       3       0       0       0
 10559 ;;Total ram usage:        3 bytes
 10560 ;; Hardware stack levels used:    1
 10561 ;; Hardware stack levels required when called:    2
 10562 ;; This function calls:
 10563 ;;		_EEPROM_Write_Byte
 10564 ;; This function is called by:
 10565 ;;		_Decodify_Command
 10566 ;; This function uses a non-reentrant model
 10567 ;;
 10568                           
 10569                           
 10570                           ;psect for function _EEPROM_Write_String
 10571  1B52                     _EEPROM_Write_String:	
 10572                           
 10573                           ;incstack = 0
 10574                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10575                           ;EEPROM_Write_String@addr stored from wreg
 10576  1B52  1283               	bcf	3,5	;RP0=0, select bank0
 10577  1B53  1303               	bcf	3,6	;RP1=0, select bank0
 10578  1B54  00A7               	movwf	EEPROM_Write_String@addr
 10579  1B55                     l6576:	
 10580                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
 10581                           
 10582                           
 10583                           ;eeprom.c: 99:     while(*dado)
 10584  1B55  0825               	movf	EEPROM_Write_String@dado,w
 10585  1B56  0084               	movwf	4
 10586  1B57  1783               	bsf	3,7	;select IRP bank2
 10587  1B58  0800               	movf	0,w
 10588  1B59  1903               	btfsc	3,2
 10589  1B5A  2B72               	goto	l6578
 10590                           
 10591                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
 10592  1B5B  0825               	movf	EEPROM_Write_String@dado,w
 10593  1B5C  0084               	movwf	4
 10594  1B5D  0800               	movf	0,w
 10595  1B5E  00A6               	movwf	??_EEPROM_Write_String
 10596  1B5F  0826               	movf	??_EEPROM_Write_String,w
 10597  1B60  00A0               	movwf	EEPROM_Write_Byte@dado
 10598  1B61  0827               	movf	EEPROM_Write_String@addr,w
 10599  1B62  160A  158A  2545  160A  158A  	fcall	_EEPROM_Write_Byte
 10600                           
 10601                           ;eeprom.c: 102:      addr++;
 10602  1B67  3001               	movlw	1
 10603  1B68  1283               	bcf	3,5	;RP0=0, select bank0
 10604  1B69  1303               	bcf	3,6	;RP1=0, select bank0
 10605  1B6A  00A6               	movwf	??_EEPROM_Write_String
 10606  1B6B  0826               	movf	??_EEPROM_Write_String,w
 10607  1B6C  07A7               	addwf	EEPROM_Write_String@addr,f
 10608                           
 10609                           ;eeprom.c: 103:      dado++;
 10610  1B6D  3001               	movlw	1
 10611  1B6E  00A6               	movwf	??_EEPROM_Write_String
 10612  1B6F  0826               	movf	??_EEPROM_Write_String,w
 10613  1B70  07A5               	addwf	EEPROM_Write_String@dado,f
 10614  1B71  2B55               	goto	l6576
 10615  1B72                     l6578:	
 10616                           
 10617                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
 10618  1B72  0825               	movf	EEPROM_Write_String@dado,w
 10619  1B73  0084               	movwf	4
 10620  1B74  0800               	movf	0,w
 10621  1B75  00A6               	movwf	??_EEPROM_Write_String
 10622  1B76  0826               	movf	??_EEPROM_Write_String,w
 10623  1B77  00A0               	movwf	EEPROM_Write_Byte@dado
 10624  1B78  0827               	movf	EEPROM_Write_String@addr,w
 10625  1B79  160A  158A  2545   	fcall	_EEPROM_Write_Byte
 10626  1B7C  0008               	return
 10627  1B7D                     __end_of_EEPROM_Write_String:	
 10628                           
 10629                           	psect	text42
 10630  1C07                     __ptext42:	
 10631 ;; *************** function _EEPROM_Write_Integer *****************
 10632 ;; Defined at:
 10633 ;;		line 68 in file "eeprom.c"
 10634 ;; Parameters:    Size  Location     Type
 10635 ;;  addr            1    wreg     unsigned char 
 10636 ;;  dado            2    5[BANK0 ] unsigned int 
 10637 ;; Auto vars:     Size  Location     Type
 10638 ;;  addr            1   11[BANK0 ] unsigned char 
 10639 ;;  i               1   12[BANK0 ] unsigned char 
 10640 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
 10641 ;;		 -> EEPROM_Write_Integer@dado(2), 
 10642 ;;  addr_memo       1    0        unsigned char 
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  1    wreg      void 
 10645 ;; Registers used:
 10646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10647 ;; Tracked objects:
 10648 ;;		On entry : 200/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10652 ;;      Params:         0       2       0       0       0
 10653 ;;      Locals:         0       4       0       0       0
 10654 ;;      Temps:          0       2       0       0       0
 10655 ;;      Totals:         0       8       0       0       0
 10656 ;;Total ram usage:        8 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; Hardware stack levels required when called:    2
 10659 ;; This function calls:
 10660 ;;		_EEPROM_Write_Byte
 10661 ;; This function is called by:
 10662 ;;		_main
 10663 ;;		_Decodify_Command
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666                           
 10667                           
 10668                           ;psect for function _EEPROM_Write_Integer
 10669  1C07                     _EEPROM_Write_Integer:	
 10670                           
 10671                           ;incstack = 0
 10672                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10673                           ;EEPROM_Write_Integer@addr stored from wreg
 10674  1C07  1283               	bcf	3,5	;RP0=0, select bank0
 10675  1C08  00AB               	movwf	EEPROM_Write_Integer@addr
 10676                           
 10677                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
 10678  1C09  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
 10679  1C0A  00A7               	movwf	??_EEPROM_Write_Integer
 10680  1C0B  0827               	movf	??_EEPROM_Write_Integer,w
 10681  1C0C  00AA               	movwf	EEPROM_Write_Integer@ptr
 10682                           
 10683                           ;eeprom.c: 75:       for (i=0;i<2;i++)
 10684  1C0D  01AC               	clrf	EEPROM_Write_Integer@i
 10685  1C0E                     l6526:	
 10686                           
 10687                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
 10688  1C0E  082A               	movf	EEPROM_Write_Integer@ptr,w
 10689  1C0F  0084               	movwf	4
 10690  1C10  1383               	bcf	3,7	;select IRP bank0
 10691  1C11  0800               	movf	0,w
 10692  1C12  00A7               	movwf	??_EEPROM_Write_Integer
 10693  1C13  0827               	movf	??_EEPROM_Write_Integer,w
 10694  1C14  00A0               	movwf	EEPROM_Write_Byte@dado
 10695  1C15  082B               	movf	EEPROM_Write_Integer@addr,w
 10696  1C16  160A  158A  2545  160A  158A  	fcall	_EEPROM_Write_Byte
 10697  1C1B  3001               	movlw	1
 10698  1C1C  1283               	bcf	3,5	;RP0=0, select bank0
 10699  1C1D  1303               	bcf	3,6	;RP1=0, select bank0
 10700  1C1E  00A7               	movwf	??_EEPROM_Write_Integer
 10701  1C1F  0827               	movf	??_EEPROM_Write_Integer,w
 10702  1C20  07AA               	addwf	EEPROM_Write_Integer@ptr,f
 10703  1C21  3001               	movlw	1
 10704  1C22  00A7               	movwf	??_EEPROM_Write_Integer
 10705  1C23  0827               	movf	??_EEPROM_Write_Integer,w
 10706  1C24  07AB               	addwf	EEPROM_Write_Integer@addr,f
 10707  1C25  3001               	movlw	1
 10708  1C26  00A7               	movwf	??_EEPROM_Write_Integer
 10709  1C27  0827               	movf	??_EEPROM_Write_Integer,w
 10710  1C28  07AC               	addwf	EEPROM_Write_Integer@i,f
 10711  1C29  3002               	movlw	2
 10712  1C2A  022C               	subwf	EEPROM_Write_Integer@i,w
 10713  1C2B  1C03               	skipc
 10714  1C2C  2C0E               	goto	l6526
 10715                           
 10716                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
 10717  1C2D  304E               	movlw	78
 10718  1C2E  1283               	bcf	3,5	;RP0=0, select bank0
 10719  1C2F  1303               	bcf	3,6	;RP1=0, select bank0
 10720  1C30  00A8               	movwf	??_EEPROM_Write_Integer+1
 10721  1C31  30EA               	movlw	234
 10722  1C32  00A7               	movwf	??_EEPROM_Write_Integer
 10723  1C33                     u8047:	
 10724  1C33  0BA7               	decfsz	??_EEPROM_Write_Integer,f
 10725  1C34  2C33               	goto	u8047
 10726  1C35  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
 10727  1C36  2C33               	goto	u8047
 10728  1C37  0000               	nop
 10729  1C38  0008               	return
 10730  1C39                     __end_of_EEPROM_Write_Integer:	
 10731                           
 10732                           	psect	text43
 10733  1D45                     __ptext43:	
 10734 ;; *************** function _EEPROM_Write_Byte *****************
 10735 ;; Defined at:
 10736 ;;		line 21 in file "eeprom.c"
 10737 ;; Parameters:    Size  Location     Type
 10738 ;;  addr            1    wreg     unsigned char 
 10739 ;;  dado            1    0[BANK0 ] unsigned char 
 10740 ;; Auto vars:     Size  Location     Type
 10741 ;;  addr            1    3[BANK0 ] unsigned char 
 10742 ;;  last_GIE        1    4[BANK0 ] unsigned char 
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  1    wreg      void 
 10745 ;; Registers used:
 10746 ;;		wreg, status,2, status,0
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/300
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10752 ;;      Params:         0       1       0       0       0
 10753 ;;      Locals:         0       2       0       0       0
 10754 ;;      Temps:          0       2       0       0       0
 10755 ;;      Totals:         0       5       0       0       0
 10756 ;;Total ram usage:        5 bytes
 10757 ;; Hardware stack levels used:    1
 10758 ;; Hardware stack levels required when called:    1
 10759 ;; This function calls:
 10760 ;;		Nothing
 10761 ;; This function is called by:
 10762 ;;		_Decodify_Command
 10763 ;;		_EEPROM_Write_Integer
 10764 ;;		_EEPROM_Write_String
 10765 ;; This function uses a non-reentrant model
 10766 ;;
 10767                           
 10768                           
 10769                           ;psect for function _EEPROM_Write_Byte
 10770  1D45                     _EEPROM_Write_Byte:	
 10771                           
 10772                           ;incstack = 0
 10773                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
 10774                           ;EEPROM_Write_Byte@addr stored from wreg
 10775  1D45  1283               	bcf	3,5	;RP0=0, select bank0
 10776  1D46  1303               	bcf	3,6	;RP1=0, select bank0
 10777  1D47  00A3               	movwf	EEPROM_Write_Byte@addr
 10778                           
 10779                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
 10780  1D48  3014               	movlw	20
 10781  1D49  00FA               	movwf	_Delay_Led_Memory	;volatile
 10782  1D4A  3000               	movlw	0
 10783  1D4B  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 10784  1D4C                     l380:	
 10785                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
 10786                           
 10787  1D4C  1683               	bsf	3,5	;RP0=1, select bank3
 10788  1D4D  1703               	bsf	3,6	;RP1=1, select bank3
 10789  1D4E  188C               	btfsc	12,1	;volsfr
 10790  1D4F  2D4C               	goto	l380
 10791                           
 10792                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
 10793  1D50  1F8B               	btfss	11,7	;volatile
 10794  1D51  2D57               	goto	l5864
 10795                           
 10796                           ;eeprom.c: 28:           last_GIE=1;
 10797  1D52  1283               	bcf	3,5	;RP0=0, select bank0
 10798  1D53  1303               	bcf	3,6	;RP1=0, select bank0
 10799  1D54  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10800  1D55  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
 10801  1D56  2D5A               	goto	l5866
 10802  1D57                     l5864:	
 10803                           
 10804                           ;eeprom.c: 30:           last_GIE=0;
 10805  1D57  1283               	bcf	3,5	;RP0=0, select bank0
 10806  1D58  1303               	bcf	3,6	;RP1=0, select bank0
 10807  1D59  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 10808  1D5A                     l5866:	
 10809                           
 10810                           ;eeprom.c: 32:        EEADR=addr;
 10811  1D5A  0823               	movf	EEPROM_Write_Byte@addr,w
 10812  1D5B  1703               	bsf	3,6	;RP1=1, select bank2
 10813  1D5C  008D               	movwf	13	;volatile
 10814                           
 10815                           ;eeprom.c: 33:        EEDATA=dado;
 10816  1D5D  1303               	bcf	3,6	;RP1=0, select bank0
 10817  1D5E  0820               	movf	EEPROM_Write_Byte@dado,w
 10818  1D5F  1703               	bsf	3,6	;RP1=1, select bank2
 10819  1D60  008C               	movwf	12	;volatile
 10820                           
 10821                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
 10822  1D61  1683               	bsf	3,5	;RP0=1, select bank3
 10823  1D62  138C               	bcf	12,7	;volsfr
 10824                           
 10825                           ;eeprom.c: 35:        EECON1bits.WREN=1;
 10826  1D63  150C               	bsf	12,2	;volsfr
 10827                           
 10828                           ;eeprom.c: 36:        INTCONbits.GIE=0;
 10829  1D64  138B               	bcf	11,7	;volatile
 10830                           
 10831                           ;eeprom.c: 37:        EECON2=0x55;
 10832  1D65  3055               	movlw	85
 10833  1D66  008D               	movwf	13	;volsfr
 10834                           
 10835                           ;eeprom.c: 38:        EECON2=0xAA;
 10836  1D67  30AA               	movlw	170
 10837  1D68  008D               	movwf	13	;volsfr
 10838                           
 10839                           ;eeprom.c: 39:        EECON1bits.WR=1;
 10840  1D69  148C               	bsf	12,1	;volsfr
 10841                           
 10842                           ;eeprom.c: 41:        if(last_GIE==1)
 10843  1D6A  1283               	bcf	3,5	;RP0=0, select bank0
 10844  1D6B  1303               	bcf	3,6	;RP1=0, select bank0
 10845  1D6C  0324               	decf	EEPROM_Write_Byte@last_GIE,w
 10846  1D6D  1D03               	btfss	3,2
 10847  1D6E  2D71               	goto	l385
 10848                           
 10849                           ;eeprom.c: 42:           INTCONbits.GIE=1;
 10850  1D6F  178B               	bsf	11,7	;volatile
 10851  1D70  2D72               	goto	l386
 10852  1D71                     l385:	
 10853                           ;eeprom.c: 43:        else
 10854                           
 10855                           
 10856                           ;eeprom.c: 44:           INTCONbits.GIE=0;
 10857  1D71  138B               	bcf	11,7	;volatile
 10858  1D72                     l386:	
 10859                           
 10860                           ;eeprom.c: 46:        EECON1bits.WREN=0;
 10861  1D72  1683               	bsf	3,5	;RP0=1, select bank3
 10862  1D73  1703               	bsf	3,6	;RP1=1, select bank3
 10863  1D74  110C               	bcf	12,2	;volsfr
 10864                           
 10865                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
 10866  1D75  304E               	movlw	78
 10867  1D76  1283               	bcf	3,5	;RP0=0, select bank0
 10868  1D77  1303               	bcf	3,6	;RP1=0, select bank0
 10869  1D78  00A2               	movwf	??_EEPROM_Write_Byte+1
 10870  1D79  30EA               	movlw	234
 10871  1D7A  00A1               	movwf	??_EEPROM_Write_Byte
 10872  1D7B                     u8057:	
 10873  1D7B  0BA1               	decfsz	??_EEPROM_Write_Byte,f
 10874  1D7C  2D7B               	goto	u8057
 10875  1D7D  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
 10876  1D7E  2D7B               	goto	u8057
 10877  1D7F  0000               	nop
 10878  1D80  0008               	return
 10879  1D81                     __end_of_EEPROM_Write_Byte:	
 10880                           
 10881                           	psect	text44
 10882  1A35                     __ptext44:	
 10883 ;; *************** function _EEPROM_Read_String *****************
 10884 ;; Defined at:
 10885 ;;		line 109 in file "eeprom.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;  addr            1    wreg     unsigned char 
 10888 ;;  dado            1    3[BANK0 ] PTR unsigned char 
 10889 ;;		 -> texto(16), 
 10890 ;; Auto vars:     Size  Location     Type
 10891 ;;  addr            1    5[BANK0 ] unsigned char 
 10892 ;;  c               1    6[BANK0 ] unsigned char 
 10893 ;; Return value:  Size  Location     Type
 10894 ;;                  1    wreg      void 
 10895 ;; Registers used:
 10896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10897 ;; Tracked objects:
 10898 ;;		On entry : 300/300
 10899 ;;		On exit  : B00/800
 10900 ;;		Unchanged: 0/0
 10901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10902 ;;      Params:         0       1       0       0       0
 10903 ;;      Locals:         0       2       0       0       0
 10904 ;;      Temps:          0       1       0       0       0
 10905 ;;      Totals:         0       4       0       0       0
 10906 ;;Total ram usage:        4 bytes
 10907 ;; Hardware stack levels used:    1
 10908 ;; Hardware stack levels required when called:    2
 10909 ;; This function calls:
 10910 ;;		_EEPROM_Read_Byte
 10911 ;; This function is called by:
 10912 ;;		_Decodify_Command
 10913 ;; This function uses a non-reentrant model
 10914 ;;
 10915                           
 10916                           
 10917                           ;psect for function _EEPROM_Read_String
 10918  1A35                     _EEPROM_Read_String:	
 10919                           
 10920                           ;incstack = 0
 10921                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10922                           ;EEPROM_Read_String@addr stored from wreg
 10923  1A35  1283               	bcf	3,5	;RP0=0, select bank0
 10924  1A36  1303               	bcf	3,6	;RP1=0, select bank0
 10925  1A37  00A5               	movwf	EEPROM_Read_String@addr
 10926  1A38                     l412:	
 10927                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 10928                           
 10929                           
 10930                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 10931  1A38  0825               	movf	EEPROM_Read_String@addr,w
 10932  1A39  160A  158A  2275  160A  158A  	fcall	_EEPROM_Read_Byte
 10933  1A3E  1303               	bcf	3,6	;RP1=0, select bank0
 10934  1A3F  00A4               	movwf	??_EEPROM_Read_String
 10935  1A40  0824               	movf	??_EEPROM_Read_String,w
 10936  1A41  00A6               	movwf	EEPROM_Read_String@c
 10937  1A42  3001               	movlw	1
 10938  1A43  00A4               	movwf	??_EEPROM_Read_String
 10939  1A44  0824               	movf	??_EEPROM_Read_String,w
 10940  1A45  07A5               	addwf	EEPROM_Read_String@addr,f
 10941                           
 10942                           ;eeprom.c: 114:         *(dado++)=c;
 10943  1A46  0826               	movf	EEPROM_Read_String@c,w
 10944  1A47  00A4               	movwf	??_EEPROM_Read_String
 10945  1A48  0823               	movf	EEPROM_Read_String@dado,w
 10946  1A49  0084               	movwf	4
 10947  1A4A  0824               	movf	??_EEPROM_Read_String,w
 10948  1A4B  1783               	bsf	3,7	;select IRP bank2
 10949  1A4C  0080               	movwf	0
 10950  1A4D  3001               	movlw	1
 10951  1A4E  00A4               	movwf	??_EEPROM_Read_String
 10952  1A4F  0824               	movf	??_EEPROM_Read_String,w
 10953  1A50  07A3               	addwf	EEPROM_Read_String@dado,f
 10954                           
 10955                           ;eeprom.c: 116:       }while(c);
 10956  1A51  0826               	movf	EEPROM_Read_String@c,w
 10957  1A52  1903               	btfsc	3,2
 10958  1A53  0008               	return
 10959  1A54  2A38               	goto	l412
 10960  1A55                     __end_of_EEPROM_Read_String:	
 10961                           
 10962                           	psect	text45
 10963  1B28                     __ptext45:	
 10964 ;; *************** function _EEPROM_Read_Integer *****************
 10965 ;; Defined at:
 10966 ;;		line 81 in file "eeprom.c"
 10967 ;; Parameters:    Size  Location     Type
 10968 ;;  addr            1    wreg     unsigned char 
 10969 ;; Auto vars:     Size  Location     Type
 10970 ;;  addr            1    6[BANK0 ] unsigned char 
 10971 ;;  result          2    8[BANK0 ] unsigned int 
 10972 ;;  i               1   10[BANK0 ] unsigned char 
 10973 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 10974 ;;		 -> EEPROM_Read_Integer@result(2), 
 10975 ;; Return value:  Size  Location     Type
 10976 ;;                  2    3[BANK0 ] unsigned int 
 10977 ;; Registers used:
 10978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10979 ;; Tracked objects:
 10980 ;;		On entry : 0/0
 10981 ;;		On exit  : B00/0
 10982 ;;		Unchanged: 0/0
 10983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10984 ;;      Params:         0       2       0       0       0
 10985 ;;      Locals:         0       5       0       0       0
 10986 ;;      Temps:          0       1       0       0       0
 10987 ;;      Totals:         0       8       0       0       0
 10988 ;;Total ram usage:        8 bytes
 10989 ;; Hardware stack levels used:    1
 10990 ;; Hardware stack levels required when called:    2
 10991 ;; This function calls:
 10992 ;;		_EEPROM_Read_Byte
 10993 ;; This function is called by:
 10994 ;;		_main
 10995 ;;		_Decodify_Command
 10996 ;; This function uses a non-reentrant model
 10997 ;;
 10998                           
 10999                           
 11000                           ;psect for function _EEPROM_Read_Integer
 11001  1B28                     _EEPROM_Read_Integer:	
 11002                           
 11003                           ;incstack = 0
 11004                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11005                           ;EEPROM_Read_Integer@addr stored from wreg
 11006  1B28  1283               	bcf	3,5	;RP0=0, select bank0
 11007  1B29  1303               	bcf	3,6	;RP1=0, select bank0
 11008  1B2A  00A6               	movwf	EEPROM_Read_Integer@addr
 11009                           
 11010                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 11011  1B2B  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 11012  1B2C  00A5               	movwf	??_EEPROM_Read_Integer
 11013  1B2D  0825               	movf	??_EEPROM_Read_Integer,w
 11014  1B2E  00A7               	movwf	EEPROM_Read_Integer@ptr
 11015                           
 11016                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 11017  1B2F  01AA               	clrf	EEPROM_Read_Integer@i
 11018  1B30                     l6502:	
 11019                           
 11020                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 11021  1B30  0826               	movf	EEPROM_Read_Integer@addr,w
 11022  1B31  160A  158A  2275  160A  158A  	fcall	_EEPROM_Read_Byte
 11023  1B36  1303               	bcf	3,6	;RP1=0, select bank0
 11024  1B37  00A5               	movwf	??_EEPROM_Read_Integer
 11025  1B38  0827               	movf	EEPROM_Read_Integer@ptr,w
 11026  1B39  0084               	movwf	4
 11027  1B3A  0825               	movf	??_EEPROM_Read_Integer,w
 11028  1B3B  1383               	bcf	3,7	;select IRP bank0
 11029  1B3C  0080               	movwf	0
 11030  1B3D  3001               	movlw	1
 11031  1B3E  00A5               	movwf	??_EEPROM_Read_Integer
 11032  1B3F  0825               	movf	??_EEPROM_Read_Integer,w
 11033  1B40  07A6               	addwf	EEPROM_Read_Integer@addr,f
 11034  1B41  3001               	movlw	1
 11035  1B42  00A5               	movwf	??_EEPROM_Read_Integer
 11036  1B43  0825               	movf	??_EEPROM_Read_Integer,w
 11037  1B44  07A7               	addwf	EEPROM_Read_Integer@ptr,f
 11038  1B45  3001               	movlw	1
 11039  1B46  00A5               	movwf	??_EEPROM_Read_Integer
 11040  1B47  0825               	movf	??_EEPROM_Read_Integer,w
 11041  1B48  07AA               	addwf	EEPROM_Read_Integer@i,f
 11042  1B49  3002               	movlw	2
 11043  1B4A  022A               	subwf	EEPROM_Read_Integer@i,w
 11044  1B4B  1C03               	skipc
 11045  1B4C  2B30               	goto	l6502
 11046                           
 11047                           ;eeprom.c: 89:       return result;
 11048  1B4D  0829               	movf	EEPROM_Read_Integer@result+1,w
 11049  1B4E  00A4               	movwf	?_EEPROM_Read_Integer+1
 11050  1B4F  0828               	movf	EEPROM_Read_Integer@result,w
 11051  1B50  00A3               	movwf	?_EEPROM_Read_Integer
 11052  1B51  0008               	return
 11053  1B52                     __end_of_EEPROM_Read_Integer:	
 11054                           
 11055                           	psect	text46
 11056  1A75                     __ptext46:	
 11057 ;; *************** function _EEPROM_Read_Byte *****************
 11058 ;; Defined at:
 11059 ;;		line 52 in file "eeprom.c"
 11060 ;; Parameters:    Size  Location     Type
 11061 ;;  addr            1    wreg     unsigned char 
 11062 ;; Auto vars:     Size  Location     Type
 11063 ;;  addr            1    2[BANK0 ] unsigned char 
 11064 ;; Return value:  Size  Location     Type
 11065 ;;                  1    wreg      unsigned char 
 11066 ;; Registers used:
 11067 ;;		wreg
 11068 ;; Tracked objects:
 11069 ;;		On entry : 0/300
 11070 ;;		On exit  : 300/200
 11071 ;;		Unchanged: 0/0
 11072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11073 ;;      Params:         0       0       0       0       0
 11074 ;;      Locals:         0       1       0       0       0
 11075 ;;      Temps:          0       2       0       0       0
 11076 ;;      Totals:         0       3       0       0       0
 11077 ;;Total ram usage:        3 bytes
 11078 ;; Hardware stack levels used:    1
 11079 ;; Hardware stack levels required when called:    1
 11080 ;; This function calls:
 11081 ;;		Nothing
 11082 ;; This function is called by:
 11083 ;;		_Decodify_Command
 11084 ;;		_EEPROM_Read_Integer
 11085 ;;		_EEPROM_Read_String
 11086 ;; This function uses a non-reentrant model
 11087 ;;
 11088                           
 11089                           
 11090                           ;psect for function _EEPROM_Read_Byte
 11091  1A75                     _EEPROM_Read_Byte:	
 11092                           
 11093                           ;incstack = 0
 11094                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 11095                           ;EEPROM_Read_Byte@addr stored from wreg
 11096  1A75  1283               	bcf	3,5	;RP0=0, select bank0
 11097  1A76  1303               	bcf	3,6	;RP1=0, select bank0
 11098  1A77  00A2               	movwf	EEPROM_Read_Byte@addr
 11099                           
 11100                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 11101  1A78  3014               	movlw	20
 11102  1A79  00FA               	movwf	_Delay_Led_Memory	;volatile
 11103  1A7A  3000               	movlw	0
 11104  1A7B  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 11105  1A7C                     l390:	
 11106                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 11107                           
 11108  1A7C  1683               	bsf	3,5	;RP0=1, select bank3
 11109  1A7D  1703               	bsf	3,6	;RP1=1, select bank3
 11110  1A7E  188C               	btfsc	12,1	;volsfr
 11111  1A7F  2A7C               	goto	l390
 11112                           
 11113                           ;eeprom.c: 57:    EEADR=addr;
 11114  1A80  1283               	bcf	3,5	;RP0=0, select bank0
 11115  1A81  1303               	bcf	3,6	;RP1=0, select bank0
 11116  1A82  0822               	movf	EEPROM_Read_Byte@addr,w
 11117  1A83  1703               	bsf	3,6	;RP1=1, select bank2
 11118  1A84  008D               	movwf	13	;volatile
 11119                           
 11120                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 11121  1A85  1683               	bsf	3,5	;RP0=1, select bank3
 11122  1A86  138C               	bcf	12,7	;volsfr
 11123                           
 11124                           ;eeprom.c: 59:    EECON1bits.RD=1;
 11125  1A87  140C               	bsf	12,0	;volsfr
 11126                           
 11127                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 11128  1A88  304E               	movlw	78
 11129  1A89  1283               	bcf	3,5	;RP0=0, select bank0
 11130  1A8A  1303               	bcf	3,6	;RP1=0, select bank0
 11131  1A8B  00A1               	movwf	??_EEPROM_Read_Byte+1
 11132  1A8C  30EA               	movlw	234
 11133  1A8D  00A0               	movwf	??_EEPROM_Read_Byte
 11134  1A8E                     u8067:	
 11135  1A8E  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 11136  1A8F  2A8E               	goto	u8067
 11137  1A90  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 11138  1A91  2A8E               	goto	u8067
 11139  1A92  0000               	nop
 11140                           
 11141                           ;eeprom.c: 61:    return EEDATA;
 11142  1A93  1283               	bcf	3,5	;RP0=0, select bank2
 11143  1A94  1703               	bsf	3,6	;RP1=1, select bank2
 11144  1A95  080C               	movf	12,w	;volatile
 11145  1A96  0008               	return
 11146  1A97                     __end_of_EEPROM_Read_Byte:	
 11147                           
 11148                           	psect	text47
 11149  126F                     __ptext47:	
 11150 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 11151 ;; Defined at:
 11152 ;;		line 142 in file "EEPROM_24C1025.c"
 11153 ;; Parameters:    Size  Location     Type
 11154 ;;  chip_add        1    wreg     unsigned char 
 11155 ;;  mem_add         4    2[BANK0 ] unsigned long 
 11156 ;;  data            1    6[BANK0 ] PTR unsigned char 
 11157 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 11158 ;; Auto vars:     Size  Location     Type
 11159 ;;  chip_add        1    9[BANK0 ] unsigned char 
 11160 ;;  ctrl            1   11[BANK0 ] unsigned char 
 11161 ;;  range           1   10[BANK0 ] unsigned char 
 11162 ;; Return value:  Size  Location     Type
 11163 ;;                  1    wreg      void 
 11164 ;; Registers used:
 11165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11166 ;; Tracked objects:
 11167 ;;		On entry : 300/300
 11168 ;;		On exit  : 0/0
 11169 ;;		Unchanged: 0/0
 11170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11171 ;;      Params:         0       5       0       0       0
 11172 ;;      Locals:         0       3       0       0       0
 11173 ;;      Temps:          0       2       0       0       0
 11174 ;;      Totals:         0      10       0       0       0
 11175 ;;Total ram usage:       10 bytes
 11176 ;; Hardware stack levels used:    1
 11177 ;; Hardware stack levels required when called:    3
 11178 ;; This function calls:
 11179 ;;		_I2C_Master_Start
 11180 ;;		_I2C_Master_Stop
 11181 ;;		_I2C_Master_Write
 11182 ;; This function is called by:
 11183 ;;		_Decodify_Command
 11184 ;; This function uses a non-reentrant model
 11185 ;;
 11186                           
 11187                           
 11188                           ;psect for function _EEPROM_24C1025_Write_Str
 11189  126F                     _EEPROM_24C1025_Write_Str:	
 11190                           
 11191                           ;incstack = 0
 11192                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11193                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 11194  126F  1283               	bcf	3,5	;RP0=0, select bank0
 11195  1270  1303               	bcf	3,6	;RP1=0, select bank0
 11196  1271  00A9               	movwf	EEPROM_24C1025_Write_Str@chip_add
 11197                           
 11198                           ;EEPROM_24C1025.c: 144:      unsigned char ctrl;;EEPROM_24C1025.c: 146:      if(mem_add>
      +                          0x1FFFF) return;
 11199  1272  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11200  1273  1D03               	btfss	3,2
 11201  1274  0008               	return
 11202  1275  3002               	movlw	2
 11203  1276  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11204  1277  1D03               	skipz
 11205  1278  2A81               	goto	u7023
 11206  1279  3000               	movlw	0
 11207  127A  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11208  127B  1D03               	skipz
 11209  127C  2A81               	goto	u7023
 11210  127D  3000               	movlw	0
 11211  127E  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11212  127F  1D03               	skipz
 11213  1280  2A81               	goto	u7023
 11214  1281                     u7023:	
 11215  1281  1803               	btfsc	3,0
 11216  1282  0008               	return
 11217  1283                     L10:	
 11218                           
 11219                           ;EEPROM_24C1025.c: 148:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11220  1283  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11221  1284  1D03               	btfss	3,2
 11222  1285  2A94               	goto	l6624
 11223  1286  3001               	movlw	1
 11224  1287  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11225  1288  1D03               	skipz
 11226  1289  2A92               	goto	u7033
 11227  128A  3000               	movlw	0
 11228  128B  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11229  128C  1D03               	skipz
 11230  128D  2A92               	goto	u7033
 11231  128E  3000               	movlw	0
 11232  128F  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11233  1290  1D03               	skipz
 11234  1291  2A92               	goto	u7033
 11235  1292                     u7033:	
 11236  1292  1C03               	btfss	3,0
 11237  1293  2A99               	goto	l6626
 11238  1294                     l6624:	
 11239  1294  3008               	movlw	8
 11240  1295  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11241  1296  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11242  1297  00AA               	movwf	EEPROM_24C1025_Write_Str@range
 11243  1298  2A9A               	goto	l6628
 11244  1299                     l6626:	
 11245  1299  01AA               	clrf	EEPROM_24C1025_Write_Str@range
 11246  129A                     l6628:	
 11247                           
 11248                           ;EEPROM_24C1025.c: 149:      ctrl=chip_add;
 11249  129A  0829               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 11250  129B  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11251  129C  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11252  129D  00AB               	movwf	EEPROM_24C1025_Write_Str@ctrl
 11253                           
 11254                           ;EEPROM_24C1025.c: 150:      ctrl<<=1;
 11255  129E  1003               	clrc
 11256  129F  0DAB               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 11257                           
 11258                           ;EEPROM_24C1025.c: 151:      ctrl |= 0xA0;
 11259  12A0  30A0               	movlw	160
 11260  12A1  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11261  12A2  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11262  12A3  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 11263                           
 11264                           ;EEPROM_24C1025.c: 152:      ctrl |= range;
 11265  12A4  082A               	movf	EEPROM_24C1025_Write_Str@range,w
 11266  12A5  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11267  12A6  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11268  12A7  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 11269                           
 11270                           ;EEPROM_24C1025.c: 154:      I2C_Master_Start();
 11271  12A8  160A  158A  20DB  160A  118A  	fcall	_I2C_Master_Start
 11272                           
 11273                           ;EEPROM_24C1025.c: 155:      I2C_Master_Write(ctrl);
 11274  12AD  1283               	bcf	3,5	;RP0=0, select bank0
 11275  12AE  082B               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 11276  12AF  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11277  12B0  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11278  12B1  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11279  12B2  00A0               	movwf	I2C_Master_Write@d
 11280  12B3  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11281  12B4  00A1               	movwf	I2C_Master_Write@d+1
 11282  12B5  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 11283                           
 11284                           ;EEPROM_24C1025.c: 156:      I2C_Master_Write(((char *)&mem_add)[1]);
 11285  12BA  0823               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11286  12BB  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11287  12BC  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11288  12BD  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11289  12BE  00A0               	movwf	I2C_Master_Write@d
 11290  12BF  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11291  12C0  00A1               	movwf	I2C_Master_Write@d+1
 11292  12C1  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 11293                           
 11294                           ;EEPROM_24C1025.c: 157:      I2C_Master_Write(((char *)&mem_add)[0]);
 11295  12C6  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 11296  12C7  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11297  12C8  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11298  12C9  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11299  12CA  00A0               	movwf	I2C_Master_Write@d
 11300  12CB  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11301  12CC  00A1               	movwf	I2C_Master_Write@d+1
 11302  12CD  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 11303  12D2                     l6688:	
 11304                           ;EEPROM_24C1025.c: 158:      while(*data)
 11305                           
 11306                           
 11307                           ;EEPROM_24C1025.c: 158:      while(*data)
 11308  12D2  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11309  12D3  0084               	movwf	4
 11310  12D4  1783               	bsf	3,7	;select IRP bank2
 11311  12D5  0800               	movf	0,w
 11312  12D6  1903               	btfsc	3,2
 11313  12D7  2B41               	goto	l6690
 11314                           
 11315                           ;EEPROM_24C1025.c: 159:           {;EEPROM_24C1025.c: 160:           if(mem_add>0x1FFFF)
      +                           return;
 11316  12D8  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 11317  12D9  1D03               	btfss	3,2
 11318  12DA  0008               	return
 11319  12DB  3002               	movlw	2
 11320  12DC  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 11321  12DD  1D03               	skipz
 11322  12DE  2AE7               	goto	u7043
 11323  12DF  3000               	movlw	0
 11324  12E0  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 11325  12E1  1D03               	skipz
 11326  12E2  2AE7               	goto	u7043
 11327  12E3  3000               	movlw	0
 11328  12E4  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 11329  12E5  1D03               	skipz
 11330  12E6  2AE7               	goto	u7043
 11331  12E7                     u7043:	
 11332  12E7  1803               	btfsc	3,0
 11333  12E8  0008               	return
 11334                           
 11335                           ;EEPROM_24C1025.c: 161:           if((mem_add+1)%128==0)
 11336  12E9  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 11337  12EA  3E01               	addlw	1
 11338  12EB  397F               	andlw	127
 11339  12EC  1D03               	btfss	3,2
 11340  12ED  2B20               	goto	l6682
 11341                           
 11342                           ;EEPROM_24C1025.c: 162:             {;EEPROM_24C1025.c: 163:             I2C_Master_Writ
      +                          e(*data);
 11343  12EE  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11344  12EF  0084               	movwf	4
 11345  12F0  0800               	movf	0,w
 11346  12F1  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11347  12F2  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11348  12F3  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11349  12F4  00A0               	movwf	I2C_Master_Write@d
 11350  12F5  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11351  12F6  00A1               	movwf	I2C_Master_Write@d+1
 11352  12F7  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 11353                           
 11354                           ;EEPROM_24C1025.c: 164:             I2C_Master_Stop();
 11355  12FC  160A  158A  20C9  160A  118A  	fcall	_I2C_Master_Stop
 11356                           
 11357                           ;EEPROM_24C1025.c: 166:             _delay((unsigned long)((5)*(8000000/4000.0)));
 11358  1301  300D               	movlw	13
 11359  1302  1283               	bcf	3,5	;RP0=0, select bank0
 11360  1303  1303               	bcf	3,6	;RP1=0, select bank0
 11361  1304  00A8               	movwf	??_EEPROM_24C1025_Write_Str+1
 11362  1305  30FB               	movlw	251
 11363  1306  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11364  1307                     u8077:	
 11365  1307  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
 11366  1308  2B07               	goto	u8077
 11367  1309  0BA8               	decfsz	??_EEPROM_24C1025_Write_Str+1,f
 11368  130A  2B07               	goto	u8077
 11369                           
 11370                           ;EEPROM_24C1025.c: 167:             mem_add++;
 11371  130B  3001               	movlw	1
 11372  130C  1283               	bcf	3,5	;RP0=0, select bank0
 11373  130D  1303               	bcf	3,6	;RP1=0, select bank0
 11374  130E  07A2               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 11375  130F  3000               	movlw	0
 11376  1310  1803               	skipnc
 11377  1311  3001               	movlw	1
 11378  1312  07A3               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 11379  1313  3000               	movlw	0
 11380  1314  1803               	skipnc
 11381  1315  3001               	movlw	1
 11382  1316  07A4               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 11383  1317  3000               	movlw	0
 11384  1318  1803               	skipnc
 11385  1319  3001               	movlw	1
 11386  131A  07A5               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 11387                           
 11388                           ;EEPROM_24C1025.c: 168:             data++;
 11389  131B  3001               	movlw	1
 11390  131C  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11391  131D  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11392  131E  07A6               	addwf	EEPROM_24C1025_Write_Str@data,f
 11393  131F  2A83               	goto	L10
 11394  1320                     l6682:	
 11395                           ;EEPROM_24C1025.c: 169:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11396                           
 11397                           
 11398                           ;EEPROM_24C1025.c: 181:             {;EEPROM_24C1025.c: 182:             I2C_Master_Writ
      +                          e(*data);
 11399  1320  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11400  1321  0084               	movwf	4
 11401  1322  0800               	movf	0,w
 11402  1323  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11403  1324  01A8               	clrf	??_EEPROM_24C1025_Write_Str+1
 11404  1325  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11405  1326  00A0               	movwf	I2C_Master_Write@d
 11406  1327  0828               	movf	??_EEPROM_24C1025_Write_Str+1,w
 11407  1328  00A1               	movwf	I2C_Master_Write@d+1
 11408  1329  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 11409                           
 11410                           ;EEPROM_24C1025.c: 183:             data++;
 11411  132E  3001               	movlw	1
 11412  132F  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11413  1330  0827               	movf	??_EEPROM_24C1025_Write_Str,w
 11414  1331  07A6               	addwf	EEPROM_24C1025_Write_Str@data,f
 11415                           
 11416                           ;EEPROM_24C1025.c: 184:             mem_add++;
 11417  1332  3001               	movlw	1
 11418  1333  07A2               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 11419  1334  3000               	movlw	0
 11420  1335  1803               	skipnc
 11421  1336  3001               	movlw	1
 11422  1337  07A3               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 11423  1338  3000               	movlw	0
 11424  1339  1803               	skipnc
 11425  133A  3001               	movlw	1
 11426  133B  07A4               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 11427  133C  3000               	movlw	0
 11428  133D  1803               	skipnc
 11429  133E  3001               	movlw	1
 11430  133F  07A5               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 11431  1340  2AD2               	goto	l6688
 11432  1341                     l6690:	
 11433                           
 11434                           ;EEPROM_24C1025.c: 187:      I2C_Master_Write(0);
 11435  1341  3000               	movlw	0
 11436  1342  00A0               	movwf	I2C_Master_Write@d
 11437  1343  00A1               	movwf	I2C_Master_Write@d+1
 11438  1344  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 11439                           
 11440                           ;EEPROM_24C1025.c: 188:      I2C_Master_Stop();
 11441  1349  160A  158A  20C9  160A  118A  	fcall	_I2C_Master_Stop
 11442                           
 11443                           ;EEPROM_24C1025.c: 189:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11444  134E  30B9               	movlw	185
 11445  134F  1283               	bcf	3,5	;RP0=0, select bank0
 11446  1350  1303               	bcf	3,6	;RP1=0, select bank0
 11447  1351  00A7               	movwf	??_EEPROM_24C1025_Write_Str
 11448  1352                     u8087:	
 11449  1352  2B53               	nop2
 11450  1353  2B54               	nop2
 11451  1354  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
 11452  1355  2B52               	goto	u8087
 11453  1356  2B57               	nop2
 11454  1357  0008               	return
 11455  1358                     __end_of_EEPROM_24C1025_Write_Str:	
 11456                           
 11457                           	psect	text48
 11458  1930                     __ptext48:	
 11459 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 11460 ;; Defined at:
 11461 ;;		line 262 in file "EEPROM_24C1025.c"
 11462 ;; Parameters:    Size  Location     Type
 11463 ;;  chip_add        1    wreg     unsigned char 
 11464 ;;  mem_add         4   15[BANK0 ] unsigned long 
 11465 ;;  data            1   19[BANK0 ] unsigned char 
 11466 ;; Auto vars:     Size  Location     Type
 11467 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11468 ;; Return value:  Size  Location     Type
 11469 ;;                  1    wreg      void 
 11470 ;; Registers used:
 11471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11472 ;; Tracked objects:
 11473 ;;		On entry : 300/300
 11474 ;;		On exit  : 0/0
 11475 ;;		Unchanged: 0/0
 11476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11477 ;;      Params:         0       5       0       0       0
 11478 ;;      Locals:         0       1       0       0       0
 11479 ;;      Temps:          0       0       0       0       0
 11480 ;;      Totals:         0       6       0       0       0
 11481 ;;Total ram usage:        6 bytes
 11482 ;; Hardware stack levels used:    1
 11483 ;; Hardware stack levels required when called:    4
 11484 ;; This function calls:
 11485 ;;		_EEPROM_24C1025_Write_Buffer
 11486 ;; This function is called by:
 11487 ;;		_Decodify_Command
 11488 ;; This function uses a non-reentrant model
 11489 ;;
 11490                           
 11491                           
 11492                           ;psect for function _EEPROM_24C1025_Write_Byte
 11493  1930                     _EEPROM_24C1025_Write_Byte:	
 11494                           
 11495                           ;incstack = 0
 11496                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11497                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 11498  1930  1283               	bcf	3,5	;RP0=0, select bank0
 11499  1931  1303               	bcf	3,6	;RP1=0, select bank0
 11500  1932  00B4               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 11501                           
 11502                           ;EEPROM_24C1025.c: 263:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 11503  1933  0832               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 11504  1934  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 11505  1935  0831               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 11506  1936  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 11507  1937  0830               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 11508  1938  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 11509  1939  082F               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 11510  193A  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 11511  193B  01A6               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 11512  193C  0AA6               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 11513  193D  3033               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 11514  193E  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 11515  193F  3000               	movlw	0
 11516  1940  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 11517  1941  0834               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 11518  1942  160A  118A  2532   	fcall	_EEPROM_24C1025_Write_Buffer
 11519  1945  0008               	return
 11520  1946                     __end_of_EEPROM_24C1025_Write_Byte:	
 11521                           
 11522                           	psect	text49
 11523  1694                     __ptext49:	
 11524 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 11525 ;; Defined at:
 11526 ;;		line 196 in file "EEPROM_24C1025.c"
 11527 ;; Parameters:    Size  Location     Type
 11528 ;;  chip_add        1    wreg     unsigned char 
 11529 ;;  mem_add         4    6[BANK0 ] unsigned long 
 11530 ;;  texto           1   10[BANK0 ] PTR unsigned char 
 11531 ;;		 -> texto(16), 
 11532 ;; Auto vars:     Size  Location     Type
 11533 ;;  chip_add        1   14[BANK0 ] unsigned char 
 11534 ;;  ctrl            1   16[BANK0 ] unsigned char 
 11535 ;;  range           1   15[BANK0 ] unsigned char 
 11536 ;;  cnt             1   13[BANK0 ] unsigned char 
 11537 ;; Return value:  Size  Location     Type
 11538 ;;                  1    wreg      void 
 11539 ;; Registers used:
 11540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11541 ;; Tracked objects:
 11542 ;;		On entry : 300/300
 11543 ;;		On exit  : 0/0
 11544 ;;		Unchanged: 0/0
 11545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11546 ;;      Params:         0       5       0       0       0
 11547 ;;      Locals:         0       4       0       0       0
 11548 ;;      Temps:          0       2       0       0       0
 11549 ;;      Totals:         0      11       0       0       0
 11550 ;;Total ram usage:       11 bytes
 11551 ;; Hardware stack levels used:    1
 11552 ;; Hardware stack levels required when called:    3
 11553 ;; This function calls:
 11554 ;;		_I2C_Master_Read
 11555 ;;		_I2C_Master_RepeatedStart
 11556 ;;		_I2C_Master_Start
 11557 ;;		_I2C_Master_Stop
 11558 ;;		_I2C_Master_Write
 11559 ;; This function is called by:
 11560 ;;		_Decodify_Command
 11561 ;; This function uses a non-reentrant model
 11562 ;;
 11563                           
 11564                           
 11565                           ;psect for function _EEPROM_24C1025_Read_Str
 11566  1694                     _EEPROM_24C1025_Read_Str:	
 11567                           
 11568                           ;incstack = 0
 11569                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11570                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 11571  1694  1283               	bcf	3,5	;RP0=0, select bank0
 11572  1695  1303               	bcf	3,6	;RP1=0, select bank0
 11573  1696  00AE               	movwf	EEPROM_24C1025_Read_Str@chip_add
 11574                           
 11575                           ;EEPROM_24C1025.c: 198:      unsigned char range=0;
 11576  1697  01AF               	clrf	EEPROM_24C1025_Read_Str@range
 11577                           
 11578                           ;EEPROM_24C1025.c: 199:      unsigned char ctrl;;EEPROM_24C1025.c: 201:      if(mem_add>
      +                          0x1FFFF) return;
 11579  1698  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11580  1699  1D03               	btfss	3,2
 11581  169A  0008               	return
 11582  169B  3002               	movlw	2
 11583  169C  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11584  169D  1D03               	skipz
 11585  169E  2EA7               	goto	u7083
 11586  169F  3000               	movlw	0
 11587  16A0  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11588  16A1  1D03               	skipz
 11589  16A2  2EA7               	goto	u7083
 11590  16A3  3000               	movlw	0
 11591  16A4  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11592  16A5  1D03               	skipz
 11593  16A6  2EA7               	goto	u7083
 11594  16A7                     u7083:	
 11595  16A7  1803               	btfsc	3,0
 11596  16A8  0008               	return
 11597                           
 11598                           ;EEPROM_24C1025.c: 203:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11599  16A9  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11600  16AA  1D03               	btfss	3,2
 11601  16AB  2EBA               	goto	l6702
 11602  16AC  3001               	movlw	1
 11603  16AD  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11604  16AE  1D03               	skipz
 11605  16AF  2EB8               	goto	u7093
 11606  16B0  3000               	movlw	0
 11607  16B1  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11608  16B2  1D03               	skipz
 11609  16B3  2EB8               	goto	u7093
 11610  16B4  3000               	movlw	0
 11611  16B5  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11612  16B6  1D03               	skipz
 11613  16B7  2EB8               	goto	u7093
 11614  16B8                     u7093:	
 11615  16B8  1C03               	btfss	3,0
 11616  16B9  2EBF               	goto	l6704
 11617  16BA                     l6702:	
 11618  16BA  3008               	movlw	8
 11619  16BB  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11620  16BC  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11621  16BD  00AF               	movwf	EEPROM_24C1025_Read_Str@range
 11622  16BE  2EC0               	goto	l6706
 11623  16BF                     l6704:	
 11624  16BF  01AF               	clrf	EEPROM_24C1025_Read_Str@range
 11625  16C0                     l6706:	
 11626                           
 11627                           ;EEPROM_24C1025.c: 204:      ctrl=chip_add;
 11628  16C0  082E               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 11629  16C1  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11630  16C2  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11631  16C3  00B0               	movwf	EEPROM_24C1025_Read_Str@ctrl
 11632                           
 11633                           ;EEPROM_24C1025.c: 205:      ctrl<<=1;
 11634  16C4  1003               	clrc
 11635  16C5  0DB0               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 11636                           
 11637                           ;EEPROM_24C1025.c: 206:      ctrl |= 0xA0;
 11638  16C6  30A0               	movlw	160
 11639  16C7  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11640  16C8  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11641  16C9  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11642                           
 11643                           ;EEPROM_24C1025.c: 207:      ctrl |= 0b00000001;
 11644  16CA  1430               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 11645                           
 11646                           ;EEPROM_24C1025.c: 208:      ctrl |= range;
 11647  16CB  082F               	movf	EEPROM_24C1025_Read_Str@range,w
 11648  16CC  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11649  16CD  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11650  16CE  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11651                           
 11652                           ;EEPROM_24C1025.c: 210:      I2C_Master_Start();
 11653  16CF  160A  158A  20DB  160A  118A  	fcall	_I2C_Master_Start
 11654                           
 11655                           ;EEPROM_24C1025.c: 211:      I2C_Master_Write(ctrl & 0xFE);
 11656  16D4  1283               	bcf	3,5	;RP0=0, select bank0
 11657  16D5  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11658  16D6  39FE               	andlw	254
 11659  16D7  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11660  16D8  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11661  16D9  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11662  16DA  00A0               	movwf	I2C_Master_Write@d
 11663  16DB  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11664  16DC  00A1               	movwf	I2C_Master_Write@d+1
 11665  16DD  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 11666                           
 11667                           ;EEPROM_24C1025.c: 212:      I2C_Master_Write(((char *)&mem_add)[1]);
 11668  16E2  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11669  16E3  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11670  16E4  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11671  16E5  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11672  16E6  00A0               	movwf	I2C_Master_Write@d
 11673  16E7  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11674  16E8  00A1               	movwf	I2C_Master_Write@d+1
 11675  16E9  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 11676                           
 11677                           ;EEPROM_24C1025.c: 213:      I2C_Master_Write(((char *)&mem_add)[0]);
 11678  16EE  0826               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11679  16EF  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11680  16F0  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11681  16F1  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11682  16F2  00A0               	movwf	I2C_Master_Write@d
 11683  16F3  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11684  16F4  00A1               	movwf	I2C_Master_Write@d+1
 11685  16F5  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 11686                           
 11687                           ;EEPROM_24C1025.c: 214:      I2C_Master_RepeatedStart();
 11688  16FA  160A  158A  20CE  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11689                           
 11690                           ;EEPROM_24C1025.c: 215:      I2C_Master_Write(ctrl);
 11691  16FF  1283               	bcf	3,5	;RP0=0, select bank0
 11692  1700  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11693  1701  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11694  1702  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11695  1703  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11696  1704  00A0               	movwf	I2C_Master_Write@d
 11697  1705  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11698  1706  00A1               	movwf	I2C_Master_Write@d+1
 11699  1707  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 11700                           
 11701                           ;EEPROM_24C1025.c: 217:      cnt=0;
 11702  170C  01AD               	clrf	EEPROM_24C1025_Read_Str@cnt
 11703  170D                     l6728:	
 11704                           
 11705                           ;EEPROM_24C1025.c: 219:            if(mem_add>0x1FFFF) break;
 11706  170D  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11707  170E  1D03               	btfss	3,2
 11708  170F  2FE9               	goto	l6784
 11709  1710  3002               	movlw	2
 11710  1711  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11711  1712  1D03               	skipz
 11712  1713  2F1C               	goto	u7103
 11713  1714  3000               	movlw	0
 11714  1715  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11715  1716  1D03               	skipz
 11716  1717  2F1C               	goto	u7103
 11717  1718  3000               	movlw	0
 11718  1719  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11719  171A  1D03               	skipz
 11720  171B  2F1C               	goto	u7103
 11721  171C                     u7103:	
 11722  171C  1803               	btfsc	3,0
 11723  171D  2FE9               	goto	l6784
 11724                           
 11725                           ;EEPROM_24C1025.c: 220:            if((mem_add+1)%128==0)
 11726  171E  0826               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11727  171F  3E01               	addlw	1
 11728  1720  397F               	andlw	127
 11729  1721  1D03               	btfss	3,2
 11730  1722  2FB9               	goto	l6772
 11731                           
 11732                           ;EEPROM_24C1025.c: 221:              {;EEPROM_24C1025.c: 222:              (*texto)=I2C_
      +                          Master_Read(0);
 11733  1723  3000               	movlw	0
 11734  1724  00A0               	movwf	I2C_Master_Read@a
 11735  1725  00A1               	movwf	I2C_Master_Read@a+1
 11736  1726  160A  158A  23A9  160A  118A  	fcall	_I2C_Master_Read
 11737  172B  0820               	movf	?_I2C_Master_Read,w
 11738  172C  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11739  172D  082A               	movf	EEPROM_24C1025_Read_Str@texto,w
 11740  172E  0084               	movwf	4
 11741  172F  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11742  1730  1783               	bsf	3,7	;select IRP bank2
 11743  1731  0080               	movwf	0
 11744                           
 11745                           ;EEPROM_24C1025.c: 223:              I2C_Master_Stop();
 11746  1732  160A  158A  20C9  160A  118A  	fcall	_I2C_Master_Stop
 11747                           
 11748                           ;EEPROM_24C1025.c: 225:              _delay((unsigned long)((5)*(8000000/4000.0)));
 11749  1737  300D               	movlw	13
 11750  1738  1283               	bcf	3,5	;RP0=0, select bank0
 11751  1739  1303               	bcf	3,6	;RP1=0, select bank0
 11752  173A  00AC               	movwf	??_EEPROM_24C1025_Read_Str+1
 11753  173B  30FB               	movlw	251
 11754  173C  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11755  173D                     u8097:	
 11756  173D  0BAB               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11757  173E  2F3D               	goto	u8097
 11758  173F  0BAC               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 11759  1740  2F3D               	goto	u8097
 11760                           
 11761                           ;EEPROM_24C1025.c: 226:              mem_add++;
 11762  1741  3001               	movlw	1
 11763  1742  1283               	bcf	3,5	;RP0=0, select bank0
 11764  1743  1303               	bcf	3,6	;RP1=0, select bank0
 11765  1744  07A6               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11766  1745  3000               	movlw	0
 11767  1746  1803               	skipnc
 11768  1747  3001               	movlw	1
 11769  1748  07A7               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11770  1749  3000               	movlw	0
 11771  174A  1803               	skipnc
 11772  174B  3001               	movlw	1
 11773  174C  07A8               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11774  174D  3000               	movlw	0
 11775  174E  1803               	skipnc
 11776  174F  3001               	movlw	1
 11777  1750  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11778                           
 11779                           ;EEPROM_24C1025.c: 227:              texto++;
 11780  1751  3001               	movlw	1
 11781  1752  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11782  1753  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11783  1754  07AA               	addwf	EEPROM_24C1025_Read_Str@texto,f
 11784                           
 11785                           ;EEPROM_24C1025.c: 228:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11786  1755  0829               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 11787  1756  1D03               	btfss	3,2
 11788  1757  2F66               	goto	l6746
 11789  1758  3001               	movlw	1
 11790  1759  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 11791  175A  1D03               	skipz
 11792  175B  2F64               	goto	u7123
 11793  175C  3000               	movlw	0
 11794  175D  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11795  175E  1D03               	skipz
 11796  175F  2F64               	goto	u7123
 11797  1760  3000               	movlw	0
 11798  1761  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 11799  1762  1D03               	skipz
 11800  1763  2F64               	goto	u7123
 11801  1764                     u7123:	
 11802  1764  1C03               	btfss	3,0
 11803  1765  2F6B               	goto	l6748
 11804  1766                     l6746:	
 11805  1766  3008               	movlw	8
 11806  1767  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11807  1768  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11808  1769  00AF               	movwf	EEPROM_24C1025_Read_Str@range
 11809  176A  2F6C               	goto	l6750
 11810  176B                     l6748:	
 11811  176B  01AF               	clrf	EEPROM_24C1025_Read_Str@range
 11812  176C                     l6750:	
 11813                           
 11814                           ;EEPROM_24C1025.c: 229:              ctrl=chip_add;
 11815  176C  082E               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 11816  176D  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11817  176E  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11818  176F  00B0               	movwf	EEPROM_24C1025_Read_Str@ctrl
 11819                           
 11820                           ;EEPROM_24C1025.c: 230:              ctrl<<=1;
 11821  1770  1003               	clrc
 11822  1771  0DB0               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 11823                           
 11824                           ;EEPROM_24C1025.c: 231:              ctrl |= 0xA0;
 11825  1772  30A0               	movlw	160
 11826  1773  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11827  1774  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11828  1775  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11829                           
 11830                           ;EEPROM_24C1025.c: 232:              ctrl |= 0b00000001;
 11831  1776  1430               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 11832                           
 11833                           ;EEPROM_24C1025.c: 233:              ctrl |= range;
 11834  1777  082F               	movf	EEPROM_24C1025_Read_Str@range,w
 11835  1778  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11836  1779  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11837  177A  04B0               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11838                           
 11839                           ;EEPROM_24C1025.c: 235:              I2C_Master_Start();
 11840  177B  160A  158A  20DB  160A  118A  	fcall	_I2C_Master_Start
 11841                           
 11842                           ;EEPROM_24C1025.c: 236:              I2C_Master_Write(ctrl & 0xFE);
 11843  1780  1283               	bcf	3,5	;RP0=0, select bank0
 11844  1781  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11845  1782  39FE               	andlw	254
 11846  1783  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11847  1784  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11848  1785  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11849  1786  00A0               	movwf	I2C_Master_Write@d
 11850  1787  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11851  1788  00A1               	movwf	I2C_Master_Write@d+1
 11852  1789  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 11853                           
 11854                           ;EEPROM_24C1025.c: 237:              I2C_Master_Write(((char *)&mem_add)[1]);
 11855  178E  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 11856  178F  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11857  1790  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11858  1791  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11859  1792  00A0               	movwf	I2C_Master_Write@d
 11860  1793  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11861  1794  00A1               	movwf	I2C_Master_Write@d+1
 11862  1795  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 11863                           
 11864                           ;EEPROM_24C1025.c: 238:              I2C_Master_Write(((char *)&mem_add)[0]);
 11865  179A  0826               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 11866  179B  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11867  179C  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11868  179D  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11869  179E  00A0               	movwf	I2C_Master_Write@d
 11870  179F  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11871  17A0  00A1               	movwf	I2C_Master_Write@d+1
 11872  17A1  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 11873                           
 11874                           ;EEPROM_24C1025.c: 239:              I2C_Master_RepeatedStart();
 11875  17A6  160A  158A  20CE  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11876                           
 11877                           ;EEPROM_24C1025.c: 240:              I2C_Master_Write(ctrl);
 11878  17AB  1283               	bcf	3,5	;RP0=0, select bank0
 11879  17AC  0830               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11880  17AD  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11881  17AE  01AC               	clrf	??_EEPROM_24C1025_Read_Str+1
 11882  17AF  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11883  17B0  00A0               	movwf	I2C_Master_Write@d
 11884  17B1  082C               	movf	??_EEPROM_24C1025_Read_Str+1,w
 11885  17B2  00A1               	movwf	I2C_Master_Write@d+1
 11886  17B3  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 11887                           
 11888                           ;EEPROM_24C1025.c: 241:              }
 11889  17B8  2FE0               	goto	l6782
 11890  17B9                     l6772:	
 11891                           
 11892                           ;EEPROM_24C1025.c: 243:              {;EEPROM_24C1025.c: 244:              (*texto)=I2C_
      +                          Master_Read(1);
 11893  17B9  3001               	movlw	1
 11894  17BA  00A0               	movwf	I2C_Master_Read@a
 11895  17BB  3000               	movlw	0
 11896  17BC  00A1               	movwf	I2C_Master_Read@a+1
 11897  17BD  160A  158A  23A9  160A  118A  	fcall	_I2C_Master_Read
 11898  17C2  0820               	movf	?_I2C_Master_Read,w
 11899  17C3  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11900  17C4  082A               	movf	EEPROM_24C1025_Read_Str@texto,w
 11901  17C5  0084               	movwf	4
 11902  17C6  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11903  17C7  1783               	bsf	3,7	;select IRP bank2
 11904  17C8  0080               	movwf	0
 11905                           
 11906                           ;EEPROM_24C1025.c: 245:              if((*texto)==0)break;
 11907  17C9  082A               	movf	EEPROM_24C1025_Read_Str@texto,w
 11908  17CA  0084               	movwf	4
 11909  17CB  0800               	movf	0,w
 11910  17CC  1903               	btfsc	3,2
 11911  17CD  2FE9               	goto	l6784
 11912                           
 11913                           ;EEPROM_24C1025.c: 246:              texto++;
 11914  17CE  3001               	movlw	1
 11915  17CF  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11916  17D0  082B               	movf	??_EEPROM_24C1025_Read_Str,w
 11917  17D1  07AA               	addwf	EEPROM_24C1025_Read_Str@texto,f
 11918                           
 11919                           ;EEPROM_24C1025.c: 247:              mem_add++;
 11920  17D2  3001               	movlw	1
 11921  17D3  07A6               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 11922  17D4  3000               	movlw	0
 11923  17D5  1803               	skipnc
 11924  17D6  3001               	movlw	1
 11925  17D7  07A7               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 11926  17D8  3000               	movlw	0
 11927  17D9  1803               	skipnc
 11928  17DA  3001               	movlw	1
 11929  17DB  07A8               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 11930  17DC  3000               	movlw	0
 11931  17DD  1803               	skipnc
 11932  17DE  3001               	movlw	1
 11933  17DF  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11934  17E0                     l6782:	
 11935                           
 11936                           ;EEPROM_24C1025.c: 249:        }while((cnt++)<64);
 11937  17E0  3001               	movlw	1
 11938  17E1  07AD               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 11939  17E2  30FF               	movlw	-1
 11940  17E3  072D               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 11941  17E4  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11942  17E5  3040               	movlw	64
 11943  17E6  022B               	subwf	??_EEPROM_24C1025_Read_Str,w
 11944  17E7  1C03               	skipc
 11945  17E8  2F0D               	goto	l6728
 11946  17E9                     l6784:	
 11947                           
 11948                           ;EEPROM_24C1025.c: 251:      I2C_Master_Read(0);
 11949  17E9  3000               	movlw	0
 11950  17EA  00A0               	movwf	I2C_Master_Read@a
 11951  17EB  00A1               	movwf	I2C_Master_Read@a+1
 11952  17EC  160A  158A  23A9  160A  118A  	fcall	_I2C_Master_Read
 11953                           
 11954                           ;EEPROM_24C1025.c: 252:      I2C_Master_Stop();
 11955  17F1  160A  158A  20C9  160A  118A  	fcall	_I2C_Master_Stop
 11956                           
 11957                           ;EEPROM_24C1025.c: 253:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11958  17F6  30B9               	movlw	185
 11959  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 11960  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 11961  17F9  00AB               	movwf	??_EEPROM_24C1025_Read_Str
 11962  17FA                     u8107:	
 11963  17FA  2FFB               	nop2
 11964  17FB  2FFC               	nop2
 11965  17FC  0BAB               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11966  17FD  2FFA               	goto	u8107
 11967  17FE  2FFF               	nop2
 11968  17FF  0008               	return
 11969  1800                     __end_of_EEPROM_24C1025_Read_Str:	
 11970                           
 11971                           	psect	text50
 11972  1B00                     __ptext50:	
 11973 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 11974 ;; Defined at:
 11975 ;;		line 281 in file "EEPROM_24C1025.c"
 11976 ;; Parameters:    Size  Location     Type
 11977 ;;  chip_add        1    wreg     unsigned char 
 11978 ;;  mem_add         4   20[BANK0 ] unsigned long 
 11979 ;; Auto vars:     Size  Location     Type
 11980 ;;  chip_add        1   26[BANK0 ] unsigned char 
 11981 ;;  data            2   27[BANK0 ] unsigned char [2]
 11982 ;; Return value:  Size  Location     Type
 11983 ;;                  2   20[BANK0 ] unsigned int 
 11984 ;; Registers used:
 11985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11986 ;; Tracked objects:
 11987 ;;		On entry : 300/300
 11988 ;;		On exit  : 300/0
 11989 ;;		Unchanged: 0/0
 11990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11991 ;;      Params:         0       4       0       0       0
 11992 ;;      Locals:         0       3       0       0       0
 11993 ;;      Temps:          0       2       0       0       0
 11994 ;;      Totals:         0       9       0       0       0
 11995 ;;Total ram usage:        9 bytes
 11996 ;; Hardware stack levels used:    1
 11997 ;; Hardware stack levels required when called:    4
 11998 ;; This function calls:
 11999 ;;		_EEPROM_24C1025_Read_Buffer
 12000 ;; This function is called by:
 12001 ;;		_Decodify_Command
 12002 ;; This function uses a non-reentrant model
 12003 ;;
 12004                           
 12005                           
 12006                           ;psect for function _EEPROM_24C1025_Read_Int
 12007  1B00                     _EEPROM_24C1025_Read_Int:	
 12008                           
 12009                           ;incstack = 0
 12010                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 12011                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 12012  1B00  1283               	bcf	3,5	;RP0=0, select bank0
 12013  1B01  1303               	bcf	3,6	;RP1=0, select bank0
 12014  1B02  00BA               	movwf	EEPROM_24C1025_Read_Int@chip_add
 12015                           
 12016                           ;EEPROM_24C1025.c: 282:     char data[2];;EEPROM_24C1025.c: 283:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 12017  1B03  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 12018  1B04  00A9               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 12019  1B05  0836               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 12020  1B06  00A8               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 12021  1B07  0835               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 12022  1B08  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 12023  1B09  0834               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 12024  1B0A  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 12025  1B0B  3002               	movlw	2
 12026  1B0C  00B8               	movwf	??_EEPROM_24C1025_Read_Int
 12027  1B0D  0838               	movf	??_EEPROM_24C1025_Read_Int,w
 12028  1B0E  00AA               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 12029  1B0F  303B               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 12030  1B10  00AB               	movwf	EEPROM_24C1025_Read_Buffer@data
 12031  1B11  3000               	movlw	0
 12032  1B12  00AC               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 12033  1B13  083A               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 12034  1B14  120A  158A  2028   	fcall	_EEPROM_24C1025_Read_Buffer
 12035                           
 12036                           ;EEPROM_24C1025.c: 284:     return (data[0]<<8)+data[1];
 12037  1B17  1283               	bcf	3,5	;RP0=0, select bank0
 12038  1B18  1303               	bcf	3,6	;RP1=0, select bank0
 12039  1B19  083B               	movf	EEPROM_24C1025_Read_Int@data,w
 12040  1B1A  00B8               	movwf	??_EEPROM_24C1025_Read_Int
 12041  1B1B  01B9               	clrf	??_EEPROM_24C1025_Read_Int+1
 12042  1B1C  0838               	movf	??_EEPROM_24C1025_Read_Int,w
 12043  1B1D  00B9               	movwf	??_EEPROM_24C1025_Read_Int+1
 12044  1B1E  01B8               	clrf	??_EEPROM_24C1025_Read_Int
 12045  1B1F  083C               	movf	EEPROM_24C1025_Read_Int@data+1,w
 12046  1B20  0738               	addwf	??_EEPROM_24C1025_Read_Int,w
 12047  1B21  00B4               	movwf	?_EEPROM_24C1025_Read_Int
 12048  1B22  3000               	movlw	0
 12049  1B23  1803               	skipnc
 12050  1B24  3001               	movlw	1
 12051  1B25  0739               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 12052  1B26  00B5               	movwf	?_EEPROM_24C1025_Read_Int+1
 12053  1B27  0008               	return
 12054  1B28                     __end_of_EEPROM_24C1025_Read_Int:	
 12055                           
 12056                           	psect	text51
 12057  198A                     __ptext51:	
 12058 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 12059 ;; Defined at:
 12060 ;;		line 267 in file "EEPROM_24C1025.c"
 12061 ;; Parameters:    Size  Location     Type
 12062 ;;  chip_add        1    wreg     unsigned char 
 12063 ;;  mem_add         4   20[BANK0 ] unsigned long 
 12064 ;; Auto vars:     Size  Location     Type
 12065 ;;  chip_add        1   24[BANK0 ] unsigned char 
 12066 ;;  data            1   25[BANK0 ] unsigned char 
 12067 ;; Return value:  Size  Location     Type
 12068 ;;                  1    wreg      unsigned char 
 12069 ;; Registers used:
 12070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12071 ;; Tracked objects:
 12072 ;;		On entry : 300/300
 12073 ;;		On exit  : 300/0
 12074 ;;		Unchanged: 0/0
 12075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12076 ;;      Params:         0       4       0       0       0
 12077 ;;      Locals:         0       2       0       0       0
 12078 ;;      Temps:          0       0       0       0       0
 12079 ;;      Totals:         0       6       0       0       0
 12080 ;;Total ram usage:        6 bytes
 12081 ;; Hardware stack levels used:    1
 12082 ;; Hardware stack levels required when called:    4
 12083 ;; This function calls:
 12084 ;;		_EEPROM_24C1025_Read_Buffer
 12085 ;; This function is called by:
 12086 ;;		_Decodify_Command
 12087 ;; This function uses a non-reentrant model
 12088 ;;
 12089                           
 12090                           
 12091                           ;psect for function _EEPROM_24C1025_Read_Byte
 12092  198A                     _EEPROM_24C1025_Read_Byte:	
 12093                           
 12094                           ;incstack = 0
 12095                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12096                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 12097  198A  1283               	bcf	3,5	;RP0=0, select bank0
 12098  198B  1303               	bcf	3,6	;RP1=0, select bank0
 12099  198C  00B8               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 12100                           
 12101                           ;EEPROM_24C1025.c: 268:     char data;;EEPROM_24C1025.c: 269:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 12102  198D  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 12103  198E  00A9               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 12104  198F  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 12105  1990  00A8               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 12106  1991  0835               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 12107  1992  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 12108  1993  0834               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 12109  1994  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 12110  1995  01AA               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 12111  1996  0AAA               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 12112  1997  3039               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 12113  1998  00AB               	movwf	EEPROM_24C1025_Read_Buffer@data
 12114  1999  3000               	movlw	0
 12115  199A  00AC               	movwf	EEPROM_24C1025_Read_Buffer@data+1
 12116  199B  0838               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 12117  199C  120A  158A  2028   	fcall	_EEPROM_24C1025_Read_Buffer
 12118                           
 12119                           ;EEPROM_24C1025.c: 270:     return data;
 12120  199F  1283               	bcf	3,5	;RP0=0, select bank0
 12121  19A0  1303               	bcf	3,6	;RP1=0, select bank0
 12122  19A1  0839               	movf	EEPROM_24C1025_Read_Byte@data,w
 12123  19A2  0008               	return
 12124  19A3                     __end_of_EEPROM_24C1025_Read_Byte:	
 12125                           
 12126                           	psect	text52
 12127  0828                     __ptext52:	
 12128 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 12129 ;; Defined at:
 12130 ;;		line 74 in file "EEPROM_24C1025.c"
 12131 ;; Parameters:    Size  Location     Type
 12132 ;;  chip_add        1    wreg     unsigned char 
 12133 ;;  mem_add         4    6[BANK0 ] unsigned long 
 12134 ;;  sizedata        1   10[BANK0 ] unsigned char 
 12135 ;;  data            2   11[BANK0 ] PTR unsigned char 
 12136 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), buffer(64), 
 12137 ;; Auto vars:     Size  Location     Type
 12138 ;;  chip_add        1   17[BANK0 ] unsigned char 
 12139 ;;  cnt             1   16[BANK0 ] unsigned char 
 12140 ;;  ctrl            1   19[BANK0 ] unsigned char 
 12141 ;;  range           1   18[BANK0 ] unsigned char 
 12142 ;;  cnt             1    0        unsigned char 
 12143 ;; Return value:  Size  Location     Type
 12144 ;;                  1    wreg      void 
 12145 ;; Registers used:
 12146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12147 ;; Tracked objects:
 12148 ;;		On entry : 0/300
 12149 ;;		On exit  : 0/0
 12150 ;;		Unchanged: 0/0
 12151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12152 ;;      Params:         0       7       0       0       0
 12153 ;;      Locals:         0       5       0       0       0
 12154 ;;      Temps:          0       2       0       0       0
 12155 ;;      Totals:         0      14       0       0       0
 12156 ;;Total ram usage:       14 bytes
 12157 ;; Hardware stack levels used:    1
 12158 ;; Hardware stack levels required when called:    3
 12159 ;; This function calls:
 12160 ;;		_I2C_Master_Read
 12161 ;;		_I2C_Master_RepeatedStart
 12162 ;;		_I2C_Master_Start
 12163 ;;		_I2C_Master_Stop
 12164 ;;		_I2C_Master_Write
 12165 ;; This function is called by:
 12166 ;;		_Decodify_Command
 12167 ;;		_EEPROM_24C1025_Read_Byte
 12168 ;;		_EEPROM_24C1025_Read_Int
 12169 ;; This function uses a non-reentrant model
 12170 ;;
 12171                           
 12172                           
 12173                           ;psect for function _EEPROM_24C1025_Read_Buffer
 12174  0828                     _EEPROM_24C1025_Read_Buffer:	
 12175                           
 12176                           ;incstack = 0
 12177                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12178                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 12179  0828  1283               	bcf	3,5	;RP0=0, select bank0
 12180  0829  1303               	bcf	3,6	;RP1=0, select bank0
 12181  082A  00B1               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 12182                           
 12183                           ;EEPROM_24C1025.c: 80:      unsigned char range=0;
 12184  082B  01B2               	clrf	EEPROM_24C1025_Read_Buffer@range
 12185                           
 12186                           ;EEPROM_24C1025.c: 81:      unsigned char ctrl;;EEPROM_24C1025.c: 83:      Delay_Led_Mem
      +                          ory=20;
 12187  082C  3014               	movlw	20
 12188  082D  00FA               	movwf	_Delay_Led_Memory	;volatile
 12189  082E  3000               	movlw	0
 12190  082F  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 12191                           
 12192                           ;EEPROM_24C1025.c: 85:      if(mem_add>0x1FFFF) return;
 12193  0830  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12194  0831  1D03               	btfss	3,2
 12195  0832  0008               	return
 12196  0833  3002               	movlw	2
 12197  0834  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12198  0835  1D03               	skipz
 12199  0836  283F               	goto	u5743
 12200  0837  3000               	movlw	0
 12201  0838  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12202  0839  1D03               	skipz
 12203  083A  283F               	goto	u5743
 12204  083B  3000               	movlw	0
 12205  083C  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12206  083D  1D03               	skipz
 12207  083E  283F               	goto	u5743
 12208  083F                     u5743:	
 12209  083F  1803               	btfsc	3,0
 12210  0840  0008               	return
 12211                           
 12212                           ;EEPROM_24C1025.c: 87:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12213  0841  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12214  0842  1D03               	btfss	3,2
 12215  0843  2852               	goto	l5912
 12216  0844  3001               	movlw	1
 12217  0845  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12218  0846  1D03               	skipz
 12219  0847  2850               	goto	u5753
 12220  0848  3000               	movlw	0
 12221  0849  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12222  084A  1D03               	skipz
 12223  084B  2850               	goto	u5753
 12224  084C  3000               	movlw	0
 12225  084D  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12226  084E  1D03               	skipz
 12227  084F  2850               	goto	u5753
 12228  0850                     u5753:	
 12229  0850  1C03               	btfss	3,0
 12230  0851  2857               	goto	l5914
 12231  0852                     l5912:	
 12232  0852  3008               	movlw	8
 12233  0853  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12234  0854  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12235  0855  00B2               	movwf	EEPROM_24C1025_Read_Buffer@range
 12236  0856  2858               	goto	l5916
 12237  0857                     l5914:	
 12238  0857  01B2               	clrf	EEPROM_24C1025_Read_Buffer@range
 12239  0858                     l5916:	
 12240                           
 12241                           ;EEPROM_24C1025.c: 88:      ctrl=chip_add;
 12242  0858  0831               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 12243  0859  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12244  085A  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12245  085B  00B3               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 12246                           
 12247                           ;EEPROM_24C1025.c: 89:      ctrl<<=1;
 12248  085C  1003               	clrc
 12249  085D  0DB3               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12250                           
 12251                           ;EEPROM_24C1025.c: 90:      ctrl |= 0xA0;
 12252  085E  30A0               	movlw	160
 12253  085F  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12254  0860  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12255  0861  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12256                           
 12257                           ;EEPROM_24C1025.c: 91:      ctrl |= 0b00000001;
 12258  0862  1433               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 12259                           
 12260                           ;EEPROM_24C1025.c: 92:      ctrl |= range;
 12261  0863  0832               	movf	EEPROM_24C1025_Read_Buffer@range,w
 12262  0864  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12263  0865  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12264  0866  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12265                           
 12266                           ;EEPROM_24C1025.c: 94:      I2C_Master_Start();
 12267  0867  160A  158A  20DB  120A  158A  	fcall	_I2C_Master_Start
 12268                           
 12269                           ;EEPROM_24C1025.c: 95:      I2C_Master_Write(ctrl & 0xFE);
 12270  086C  1283               	bcf	3,5	;RP0=0, select bank0
 12271  086D  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12272  086E  39FE               	andlw	254
 12273  086F  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12274  0870  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12275  0871  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12276  0872  00A0               	movwf	I2C_Master_Write@d
 12277  0873  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12278  0874  00A1               	movwf	I2C_Master_Write@d+1
 12279  0875  160A  158A  20E4  120A  158A  	fcall	_I2C_Master_Write
 12280                           
 12281                           ;EEPROM_24C1025.c: 96:      I2C_Master_Write(((char *)&mem_add)[1]);
 12282  087A  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12283  087B  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12284  087C  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12285  087D  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12286  087E  00A0               	movwf	I2C_Master_Write@d
 12287  087F  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12288  0880  00A1               	movwf	I2C_Master_Write@d+1
 12289  0881  160A  158A  20E4  120A  158A  	fcall	_I2C_Master_Write
 12290                           
 12291                           ;EEPROM_24C1025.c: 97:      I2C_Master_Write(((char *)&mem_add)[0]);
 12292  0886  0826               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12293  0887  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12294  0888  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12295  0889  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12296  088A  00A0               	movwf	I2C_Master_Write@d
 12297  088B  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12298  088C  00A1               	movwf	I2C_Master_Write@d+1
 12299  088D  160A  158A  20E4  120A  158A  	fcall	_I2C_Master_Write
 12300                           
 12301                           ;EEPROM_24C1025.c: 98:      I2C_Master_RepeatedStart();
 12302  0892  160A  158A  20CE  120A  158A  	fcall	_I2C_Master_RepeatedStart
 12303                           
 12304                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(ctrl);
 12305  0897  1283               	bcf	3,5	;RP0=0, select bank0
 12306  0898  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12307  0899  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12308  089A  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12309  089B  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12310  089C  00A0               	movwf	I2C_Master_Write@d
 12311  089D  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12312  089E  00A1               	movwf	I2C_Master_Write@d+1
 12313  089F  160A  158A  20E4  120A  158A  	fcall	_I2C_Master_Write
 12314                           
 12315                           ;EEPROM_24C1025.c: 101:      for(char cnt=0;cnt<(sizedata);cnt++)
 12316  08A4  01B0               	clrf	EEPROM_24C1025_Read_Buffer@cnt_1527
 12317  08A5                     l5990:	
 12318  08A5  082A               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 12319  08A6  0230               	subwf	EEPROM_24C1025_Read_Buffer@cnt_1527,w
 12320  08A7  1803               	btfsc	3,0
 12321  08A8  2984               	goto	l5992
 12322                           
 12323                           ;EEPROM_24C1025.c: 102:         {;EEPROM_24C1025.c: 103:            if(mem_add>0x1FFFF) 
      +                          break;
 12324  08A9  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12325  08AA  1D03               	btfss	3,2
 12326  08AB  2984               	goto	l5992
 12327  08AC  3002               	movlw	2
 12328  08AD  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12329  08AE  1D03               	skipz
 12330  08AF  28B8               	goto	u5763
 12331  08B0  3000               	movlw	0
 12332  08B1  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12333  08B2  1D03               	skipz
 12334  08B3  28B8               	goto	u5763
 12335  08B4  3000               	movlw	0
 12336  08B5  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12337  08B6  1D03               	skipz
 12338  08B7  28B8               	goto	u5763
 12339  08B8                     u5763:	
 12340  08B8  1803               	btfsc	3,0
 12341  08B9  2984               	goto	l5992
 12342                           
 12343                           ;EEPROM_24C1025.c: 104:            if((mem_add+1)%128==0)
 12344  08BA  0826               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12345  08BB  3E01               	addlw	1
 12346  08BC  397F               	andlw	127
 12347  08BD  1D03               	btfss	3,2
 12348  08BE  2959               	goto	l5982
 12349                           
 12350                           ;EEPROM_24C1025.c: 105:              {;EEPROM_24C1025.c: 106:              (*data)=I2C_M
      +                          aster_Read(0);
 12351  08BF  3000               	movlw	0
 12352  08C0  00A0               	movwf	I2C_Master_Read@a
 12353  08C1  00A1               	movwf	I2C_Master_Read@a+1
 12354  08C2  160A  158A  23A9  120A  158A  	fcall	_I2C_Master_Read
 12355  08C7  0820               	movf	?_I2C_Master_Read,w
 12356  08C8  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12357  08C9  082B               	movf	EEPROM_24C1025_Read_Buffer@data,w
 12358  08CA  0084               	movwf	4
 12359  08CB  1783               	bsf	3,7
 12360  08CC  1C2C               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 12361  08CD  1383               	bcf	3,7
 12362  08CE  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12363  08CF  0080               	movwf	0
 12364                           
 12365                           ;EEPROM_24C1025.c: 107:              I2C_Master_Stop();
 12366  08D0  160A  158A  20C9  120A  158A  	fcall	_I2C_Master_Stop
 12367                           
 12368                           ;EEPROM_24C1025.c: 109:              _delay((unsigned long)((5)*(8000000/4000.0)));
 12369  08D5  300D               	movlw	13
 12370  08D6  1283               	bcf	3,5	;RP0=0, select bank0
 12371  08D7  1303               	bcf	3,6	;RP1=0, select bank0
 12372  08D8  00AE               	movwf	??_EEPROM_24C1025_Read_Buffer+1
 12373  08D9  30FB               	movlw	251
 12374  08DA  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12375  08DB                     u8117:	
 12376  08DB  0BAD               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 12377  08DC  28DB               	goto	u8117
 12378  08DD  0BAE               	decfsz	??_EEPROM_24C1025_Read_Buffer+1,f
 12379  08DE  28DB               	goto	u8117
 12380                           
 12381                           ;EEPROM_24C1025.c: 110:              mem_add++;
 12382  08DF  3001               	movlw	1
 12383  08E0  1283               	bcf	3,5	;RP0=0, select bank0
 12384  08E1  1303               	bcf	3,6	;RP1=0, select bank0
 12385  08E2  07A6               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 12386  08E3  3000               	movlw	0
 12387  08E4  1803               	skipnc
 12388  08E5  3001               	movlw	1
 12389  08E6  07A7               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 12390  08E7  3000               	movlw	0
 12391  08E8  1803               	skipnc
 12392  08E9  3001               	movlw	1
 12393  08EA  07A8               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 12394  08EB  3000               	movlw	0
 12395  08EC  1803               	skipnc
 12396  08ED  3001               	movlw	1
 12397  08EE  07A9               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 12398                           
 12399                           ;EEPROM_24C1025.c: 111:              data++;
 12400  08EF  3001               	movlw	1
 12401  08F0  07AB               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 12402  08F1  1803               	skipnc
 12403  08F2  0AAC               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 12404  08F3  3000               	movlw	0
 12405  08F4  07AC               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 12406                           
 12407                           ;EEPROM_24C1025.c: 112:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12408  08F5  0829               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 12409  08F6  1D03               	btfss	3,2
 12410  08F7  2906               	goto	l5956
 12411  08F8  3001               	movlw	1
 12412  08F9  0228               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 12413  08FA  1D03               	skipz
 12414  08FB  2904               	goto	u5783
 12415  08FC  3000               	movlw	0
 12416  08FD  0227               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12417  08FE  1D03               	skipz
 12418  08FF  2904               	goto	u5783
 12419  0900  3000               	movlw	0
 12420  0901  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12421  0902  1D03               	skipz
 12422  0903  2904               	goto	u5783
 12423  0904                     u5783:	
 12424  0904  1C03               	btfss	3,0
 12425  0905  290B               	goto	l5958
 12426  0906                     l5956:	
 12427  0906  3008               	movlw	8
 12428  0907  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12429  0908  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12430  0909  00B2               	movwf	EEPROM_24C1025_Read_Buffer@range
 12431  090A  290C               	goto	l5960
 12432  090B                     l5958:	
 12433  090B  01B2               	clrf	EEPROM_24C1025_Read_Buffer@range
 12434  090C                     l5960:	
 12435                           
 12436                           ;EEPROM_24C1025.c: 113:              ctrl=chip_add;
 12437  090C  0831               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 12438  090D  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12439  090E  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12440  090F  00B3               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 12441                           
 12442                           ;EEPROM_24C1025.c: 114:              ctrl<<=1;
 12443  0910  1003               	clrc
 12444  0911  0DB3               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12445                           
 12446                           ;EEPROM_24C1025.c: 115:              ctrl |= 0xA0;
 12447  0912  30A0               	movlw	160
 12448  0913  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12449  0914  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12450  0915  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12451                           
 12452                           ;EEPROM_24C1025.c: 116:              ctrl |= 0b00000001;
 12453  0916  1433               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 12454                           
 12455                           ;EEPROM_24C1025.c: 117:              ctrl |= range;
 12456  0917  0832               	movf	EEPROM_24C1025_Read_Buffer@range,w
 12457  0918  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12458  0919  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12459  091A  04B3               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 12460                           
 12461                           ;EEPROM_24C1025.c: 119:              I2C_Master_Start();
 12462  091B  160A  158A  20DB  120A  158A  	fcall	_I2C_Master_Start
 12463                           
 12464                           ;EEPROM_24C1025.c: 120:              I2C_Master_Write(ctrl & 0xFE);
 12465  0920  1283               	bcf	3,5	;RP0=0, select bank0
 12466  0921  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12467  0922  39FE               	andlw	254
 12468  0923  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12469  0924  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12470  0925  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12471  0926  00A0               	movwf	I2C_Master_Write@d
 12472  0927  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12473  0928  00A1               	movwf	I2C_Master_Write@d+1
 12474  0929  160A  158A  20E4  120A  158A  	fcall	_I2C_Master_Write
 12475                           
 12476                           ;EEPROM_24C1025.c: 121:              I2C_Master_Write(((char *)&mem_add)[1]);
 12477  092E  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 12478  092F  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12479  0930  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12480  0931  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12481  0932  00A0               	movwf	I2C_Master_Write@d
 12482  0933  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12483  0934  00A1               	movwf	I2C_Master_Write@d+1
 12484  0935  160A  158A  20E4  120A  158A  	fcall	_I2C_Master_Write
 12485                           
 12486                           ;EEPROM_24C1025.c: 122:              I2C_Master_Write(((char *)&mem_add)[0]);
 12487  093A  0826               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 12488  093B  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12489  093C  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12490  093D  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12491  093E  00A0               	movwf	I2C_Master_Write@d
 12492  093F  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12493  0940  00A1               	movwf	I2C_Master_Write@d+1
 12494  0941  160A  158A  20E4  120A  158A  	fcall	_I2C_Master_Write
 12495                           
 12496                           ;EEPROM_24C1025.c: 123:              I2C_Master_RepeatedStart();
 12497  0946  160A  158A  20CE  120A  158A  	fcall	_I2C_Master_RepeatedStart
 12498                           
 12499                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl);
 12500  094B  1283               	bcf	3,5	;RP0=0, select bank0
 12501  094C  0833               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12502  094D  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12503  094E  01AE               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 12504  094F  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12505  0950  00A0               	movwf	I2C_Master_Write@d
 12506  0951  082E               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 12507  0952  00A1               	movwf	I2C_Master_Write@d+1
 12508  0953  160A  158A  20E4  120A  158A  	fcall	_I2C_Master_Write
 12509                           
 12510                           ;EEPROM_24C1025.c: 125:              }
 12511  0958  297F               	goto	l5988
 12512  0959                     l5982:	
 12513                           
 12514                           ;EEPROM_24C1025.c: 127:              {;EEPROM_24C1025.c: 128:              (*data)=I2C_M
      +                          aster_Read(1);
 12515  0959  3001               	movlw	1
 12516  095A  00A0               	movwf	I2C_Master_Read@a
 12517  095B  3000               	movlw	0
 12518  095C  00A1               	movwf	I2C_Master_Read@a+1
 12519  095D  160A  158A  23A9  120A  158A  	fcall	_I2C_Master_Read
 12520  0962  0820               	movf	?_I2C_Master_Read,w
 12521  0963  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12522  0964  082B               	movf	EEPROM_24C1025_Read_Buffer@data,w
 12523  0965  0084               	movwf	4
 12524  0966  1783               	bsf	3,7
 12525  0967  1C2C               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 12526  0968  1383               	bcf	3,7
 12527  0969  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12528  096A  0080               	movwf	0
 12529                           
 12530                           ;EEPROM_24C1025.c: 129:              data++;
 12531  096B  3001               	movlw	1
 12532  096C  07AB               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 12533  096D  1803               	skipnc
 12534  096E  0AAC               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 12535  096F  3000               	movlw	0
 12536  0970  07AC               	addwf	EEPROM_24C1025_Read_Buffer@data+1,f
 12537                           
 12538                           ;EEPROM_24C1025.c: 130:              mem_add++;
 12539  0971  3001               	movlw	1
 12540  0972  07A6               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 12541  0973  3000               	movlw	0
 12542  0974  1803               	skipnc
 12543  0975  3001               	movlw	1
 12544  0976  07A7               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 12545  0977  3000               	movlw	0
 12546  0978  1803               	skipnc
 12547  0979  3001               	movlw	1
 12548  097A  07A8               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 12549  097B  3000               	movlw	0
 12550  097C  1803               	skipnc
 12551  097D  3001               	movlw	1
 12552  097E  07A9               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 12553  097F                     l5988:	
 12554                           
 12555                           ;EEPROM_24C1025.c: 132:         }
 12556  097F  3001               	movlw	1
 12557  0980  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12558  0981  082D               	movf	??_EEPROM_24C1025_Read_Buffer,w
 12559  0982  07B0               	addwf	EEPROM_24C1025_Read_Buffer@cnt_1527,f
 12560  0983  28A5               	goto	l5990
 12561  0984                     l5992:	
 12562                           
 12563                           ;EEPROM_24C1025.c: 133:         I2C_Master_Read(0);
 12564  0984  3000               	movlw	0
 12565  0985  00A0               	movwf	I2C_Master_Read@a
 12566  0986  00A1               	movwf	I2C_Master_Read@a+1
 12567  0987  160A  158A  23A9  120A  158A  	fcall	_I2C_Master_Read
 12568                           
 12569                           ;EEPROM_24C1025.c: 134:         I2C_Master_Stop();
 12570  098C  160A  158A  20C9  120A  158A  	fcall	_I2C_Master_Stop
 12571                           
 12572                           ;EEPROM_24C1025.c: 135:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 12573  0991  30B9               	movlw	185
 12574  0992  1283               	bcf	3,5	;RP0=0, select bank0
 12575  0993  1303               	bcf	3,6	;RP1=0, select bank0
 12576  0994  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer
 12577  0995                     u8127:	
 12578  0995  2996               	nop2
 12579  0996  2997               	nop2
 12580  0997  0BAD               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 12581  0998  2995               	goto	u8127
 12582  0999  299A               	nop2
 12583  099A  0008               	return
 12584  099B                     __end_of_EEPROM_24C1025_Read_Buffer:	
 12585                           
 12586                           	psect	text53
 12587  18CE                     __ptext53:	
 12588 ;; *************** function _I2C_Master_RepeatedStart *****************
 12589 ;; Defined at:
 12590 ;;		line 52 in file "I2C.c"
 12591 ;; Parameters:    Size  Location     Type
 12592 ;;		None
 12593 ;; Auto vars:     Size  Location     Type
 12594 ;;		None
 12595 ;; Return value:  Size  Location     Type
 12596 ;;                  1    wreg      void 
 12597 ;; Registers used:
 12598 ;;		wreg, status,2, status,0, pclath, cstack
 12599 ;; Tracked objects:
 12600 ;;		On entry : 300/0
 12601 ;;		On exit  : 300/100
 12602 ;;		Unchanged: 0/0
 12603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12604 ;;      Params:         0       0       0       0       0
 12605 ;;      Locals:         0       0       0       0       0
 12606 ;;      Temps:          0       0       0       0       0
 12607 ;;      Totals:         0       0       0       0       0
 12608 ;;Total ram usage:        0 bytes
 12609 ;; Hardware stack levels used:    1
 12610 ;; Hardware stack levels required when called:    2
 12611 ;; This function calls:
 12612 ;;		_I2C_Master_Wait
 12613 ;; This function is called by:
 12614 ;;		_EEPROM_24C1025_Read_Buffer
 12615 ;;		_EEPROM_24C1025_Read_Str
 12616 ;; This function uses a non-reentrant model
 12617 ;;
 12618                           
 12619                           
 12620                           ;psect for function _I2C_Master_RepeatedStart
 12621  18CE                     _I2C_Master_RepeatedStart:	
 12622                           
 12623                           ;I2C.c: 54:   I2C_Master_Wait();
 12624                           
 12625                           ;incstack = 0
 12626                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 12627  18CE  160A  158A  20D3   	fcall	_I2C_Master_Wait
 12628                           
 12629                           ;I2C.c: 55:   RSEN = 1;
 12630  18D1  1491               	bsf	17,1	;volatile
 12631  18D2  0008               	return
 12632  18D3                     __end_of_I2C_Master_RepeatedStart:	
 12633                           
 12634                           	psect	text54
 12635  1BA9                     __ptext54:	
 12636 ;; *************** function _I2C_Master_Read *****************
 12637 ;; Defined at:
 12638 ;;		line 71 in file "I2C.c"
 12639 ;; Parameters:    Size  Location     Type
 12640 ;;  a               2    0[BANK0 ] unsigned short 
 12641 ;; Auto vars:     Size  Location     Type
 12642 ;;  temp            2    4[BANK0 ] unsigned short 
 12643 ;; Return value:  Size  Location     Type
 12644 ;;                  2    0[BANK0 ] unsigned short 
 12645 ;; Registers used:
 12646 ;;		wreg, status,2, status,0, pclath, cstack
 12647 ;; Tracked objects:
 12648 ;;		On entry : 300/0
 12649 ;;		On exit  : 300/0
 12650 ;;		Unchanged: 0/0
 12651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12652 ;;      Params:         0       2       0       0       0
 12653 ;;      Locals:         0       2       0       0       0
 12654 ;;      Temps:          0       2       0       0       0
 12655 ;;      Totals:         0       6       0       0       0
 12656 ;;Total ram usage:        6 bytes
 12657 ;; Hardware stack levels used:    1
 12658 ;; Hardware stack levels required when called:    2
 12659 ;; This function calls:
 12660 ;;		_I2C_Master_Wait
 12661 ;; This function is called by:
 12662 ;;		_EEPROM_24C1025_Read_Buffer
 12663 ;;		_EEPROM_24C1025_Read_Str
 12664 ;; This function uses a non-reentrant model
 12665 ;;
 12666                           
 12667                           
 12668                           ;psect for function _I2C_Master_Read
 12669  1BA9                     _I2C_Master_Read:	
 12670                           
 12671                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:   u
      +                          nsigned short temp;;I2C.c: 74:   generic_status.flag_main_loop_WDT=1;
 12672                           
 12673                           ;incstack = 0
 12674                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 12675  1BA9  1683               	bsf	3,5	;RP0=1, select bank1
 12676  1BAA  17E9               	bsf	_generic_status^(0+128),7
 12677                           
 12678                           ;I2C.c: 75:   I2C_Master_Wait();
 12679  1BAB  160A  158A  20D3  160A  158A  	fcall	_I2C_Master_Wait
 12680                           
 12681                           ;I2C.c: 76:   RCEN = 1;
 12682  1BB0  1591               	bsf	17,3	;volatile
 12683                           
 12684                           ;I2C.c: 77:   I2C_Master_Wait();
 12685  1BB1  160A  158A  20D3  160A  158A  	fcall	_I2C_Master_Wait
 12686                           
 12687                           ;I2C.c: 78:   temp = SSPBUF;
 12688  1BB6  1283               	bcf	3,5	;RP0=0, select bank0
 12689  1BB7  0813               	movf	19,w	;volatile
 12690  1BB8  00A2               	movwf	??_I2C_Master_Read
 12691  1BB9  01A3               	clrf	??_I2C_Master_Read+1
 12692  1BBA  0822               	movf	??_I2C_Master_Read,w
 12693  1BBB  00A4               	movwf	I2C_Master_Read@temp
 12694  1BBC  0823               	movf	??_I2C_Master_Read+1,w
 12695  1BBD  00A5               	movwf	I2C_Master_Read@temp+1
 12696                           
 12697                           ;I2C.c: 79:   I2C_Master_Wait();
 12698  1BBE  160A  158A  20D3  160A  158A  	fcall	_I2C_Master_Wait
 12699                           
 12700                           ;I2C.c: 80:   ACKDT = (a)?0:1;
 12701  1BC3  1283               	bcf	3,5	;RP0=0, select bank0
 12702  1BC4  0820               	movf	I2C_Master_Read@a,w
 12703  1BC5  0421               	iorwf	I2C_Master_Read@a+1,w
 12704  1BC6  1D03               	btfss	3,2
 12705  1BC7  2BCC               	goto	u5440
 12706  1BC8  1683               	bsf	3,5	;RP0=1, select bank1
 12707  1BC9  1303               	bcf	3,6	;RP1=0, select bank1
 12708  1BCA  1691               	bsf	17,5	;volatile
 12709  1BCB  2BCF               	goto	l5688
 12710  1BCC                     u5440:	
 12711  1BCC  1683               	bsf	3,5	;RP0=1, select bank1
 12712  1BCD  1303               	bcf	3,6	;RP1=0, select bank1
 12713  1BCE  1291               	bcf	17,5	;volatile
 12714  1BCF                     l5688:	
 12715                           
 12716                           ;I2C.c: 81:   ACKEN = 1;
 12717  1BCF  1611               	bsf	17,4	;volatile
 12718                           
 12719                           ;I2C.c: 82:   return temp;
 12720  1BD0  1283               	bcf	3,5	;RP0=0, select bank0
 12721  1BD1  0825               	movf	I2C_Master_Read@temp+1,w
 12722  1BD2  00A1               	movwf	?_I2C_Master_Read+1
 12723  1BD3  0824               	movf	I2C_Master_Read@temp,w
 12724  1BD4  00A0               	movwf	?_I2C_Master_Read
 12725  1BD5  0008               	return
 12726  1BD6                     __end_of_I2C_Master_Read:	
 12727                           
 12728                           	psect	text55
 12729  1E37                     __ptext55:	
 12730 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12731 ;; Defined at:
 12732 ;;		line 288 in file "EEPROM_24C1025.c"
 12733 ;; Parameters:    Size  Location     Type
 12734 ;;  chip_add        1    wreg     unsigned char 
 12735 ;;  value           2   56[BANK0 ] unsigned int 
 12736 ;; Auto vars:     Size  Location     Type
 12737 ;;  chip_add        1   58[BANK0 ] unsigned char 
 12738 ;;  mem_add         4   59[BANK0 ] unsigned long 
 12739 ;; Return value:  Size  Location     Type
 12740 ;;                  1    wreg      void 
 12741 ;; Registers used:
 12742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12743 ;; Tracked objects:
 12744 ;;		On entry : 300/300
 12745 ;;		On exit  : 300/0
 12746 ;;		Unchanged: 0/0
 12747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12748 ;;      Params:         0       2       0       0       0
 12749 ;;      Locals:         0       5       0       0       0
 12750 ;;      Temps:          0       0       0       0       0
 12751 ;;      Totals:         0       7       0       0       0
 12752 ;;Total ram usage:        7 bytes
 12753 ;; Hardware stack levels used:    1
 12754 ;; Hardware stack levels required when called:    5
 12755 ;; This function calls:
 12756 ;;		_EEPROM_24C1025_Write_Int
 12757 ;; This function is called by:
 12758 ;;		_Decodify_Command
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762                           
 12763                           ;psect for function _EEPROM_24C1025_Fill_All
 12764  1E37                     _EEPROM_24C1025_Fill_All:	
 12765                           
 12766                           ;incstack = 0
 12767                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12768                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12769  1E37  1283               	bcf	3,5	;RP0=0, select bank0
 12770  1E38  1303               	bcf	3,6	;RP1=0, select bank0
 12771  1E39  00DA               	movwf	EEPROM_24C1025_Fill_All@chip_add
 12772                           
 12773                           ;EEPROM_24C1025.c: 289:      unsigned long mem_add;;EEPROM_24C1025.c: 290:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 12774  1E3A  3000               	movlw	0
 12775  1E3B  00DE               	movwf	EEPROM_24C1025_Fill_All@mem_add+3
 12776  1E3C  3000               	movlw	0
 12777  1E3D  00DD               	movwf	EEPROM_24C1025_Fill_All@mem_add+2
 12778  1E3E  3000               	movlw	0
 12779  1E3F  00DC               	movwf	EEPROM_24C1025_Fill_All@mem_add+1
 12780  1E40  3000               	movlw	0
 12781  1E41  00DB               	movwf	EEPROM_24C1025_Fill_All@mem_add
 12782  1E42                     l6794:	
 12783                           
 12784                           ;EEPROM_24C1025.c: 291:         {;EEPROM_24C1025.c: 292:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 12785  1E42  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12786  1E43  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 12787  1E44  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12788  1E45  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 12789  1E46  085C               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12790  1E47  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 12791  1E48  085B               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 12792  1E49  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
 12793  1E4A  0859               	movf	EEPROM_24C1025_Fill_All@value+1,w
 12794  1E4B  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
 12795  1E4C  0858               	movf	EEPROM_24C1025_Fill_All@value,w
 12796  1E4D  00D2               	movwf	EEPROM_24C1025_Write_Int@data
 12797  1E4E  085A               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 12798  1E4F  160A  158A  2215  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
 12799  1E54  0064               	clrwdt	;# 
 12800                           
 12801                           ;EEPROM_24C1025.c: 294:         }
 12802  1E55  3002               	movlw	2
 12803  1E56  1283               	bcf	3,5	;RP0=0, select bank0
 12804  1E57  1303               	bcf	3,6	;RP1=0, select bank0
 12805  1E58  07DB               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 12806  1E59  3000               	movlw	0
 12807  1E5A  1803               	skipnc
 12808  1E5B  3001               	movlw	1
 12809  1E5C  07DC               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 12810  1E5D  3000               	movlw	0
 12811  1E5E  1803               	skipnc
 12812  1E5F  3001               	movlw	1
 12813  1E60  07DD               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 12814  1E61  3000               	movlw	0
 12815  1E62  1803               	skipnc
 12816  1E63  3001               	movlw	1
 12817  1E64  07DE               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 12818  1E65  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 12819  1E66  1D03               	btfss	3,2
 12820  1E67  0008               	return
 12821  1E68  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 12822  1E69  1D03               	btfss	3,2
 12823  1E6A  0008               	return
 12824  1E6B  3004               	movlw	4
 12825  1E6C  025C               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 12826  1E6D  1D03               	skipz
 12827  1E6E  2E73               	goto	u7153
 12828  1E6F  3000               	movlw	0
 12829  1E70  025B               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 12830  1E71  1D03               	skipz
 12831  1E72  2E73               	goto	u7153
 12832  1E73                     u7153:	
 12833  1E73  1803               	btfsc	3,0
 12834  1E74  0008               	return
 12835  1E75  2E42               	goto	l6794
 12836  1E76                     __end_of_EEPROM_24C1025_Fill_All:	
 12837                           
 12838                           	psect	text56
 12839  1A15                     __ptext56:	
 12840 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 12841 ;; Defined at:
 12842 ;;		line 273 in file "EEPROM_24C1025.c"
 12843 ;; Parameters:    Size  Location     Type
 12844 ;;  chip_add        1    wreg     unsigned char 
 12845 ;;  mem_add         4   46[BANK0 ] unsigned long 
 12846 ;;  data            2   50[BANK0 ] int 
 12847 ;; Auto vars:     Size  Location     Type
 12848 ;;  chip_add        1   53[BANK0 ] unsigned char 
 12849 ;;  local           2   54[BANK0 ] unsigned char [2]
 12850 ;; Return value:  Size  Location     Type
 12851 ;;                  1    wreg      void 
 12852 ;; Registers used:
 12853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12854 ;; Tracked objects:
 12855 ;;		On entry : 0/300
 12856 ;;		On exit  : 0/0
 12857 ;;		Unchanged: 0/0
 12858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12859 ;;      Params:         0       6       0       0       0
 12860 ;;      Locals:         0       3       0       0       0
 12861 ;;      Temps:          0       1       0       0       0
 12862 ;;      Totals:         0      10       0       0       0
 12863 ;;Total ram usage:       10 bytes
 12864 ;; Hardware stack levels used:    1
 12865 ;; Hardware stack levels required when called:    4
 12866 ;; This function calls:
 12867 ;;		_EEPROM_24C1025_Write_Buffer
 12868 ;; This function is called by:
 12869 ;;		_Decodify_Command
 12870 ;;		_Save_Log
 12871 ;;		_EEPROM_24C1025_Fill_All
 12872 ;; This function uses a non-reentrant model
 12873 ;;
 12874                           
 12875                           
 12876                           ;psect for function _EEPROM_24C1025_Write_Int
 12877  1A15                     _EEPROM_24C1025_Write_Int:	
 12878                           
 12879                           ;incstack = 0
 12880                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12881                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 12882  1A15  1283               	bcf	3,5	;RP0=0, select bank0
 12883  1A16  1303               	bcf	3,6	;RP1=0, select bank0
 12884  1A17  00D5               	movwf	EEPROM_24C1025_Write_Int@chip_add
 12885                           
 12886                           ;EEPROM_24C1025.c: 274:      char local[2];;EEPROM_24C1025.c: 275:      local[0]=((char 
      +                          *)&data)[1];
 12887  1A18  0853               	movf	EEPROM_24C1025_Write_Int@data+1,w
 12888  1A19  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12889  1A1A  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12890  1A1B  00D6               	movwf	EEPROM_24C1025_Write_Int@local
 12891                           
 12892                           ;EEPROM_24C1025.c: 276:      local[1]=((char *)&data)[0];
 12893  1A1C  0852               	movf	EEPROM_24C1025_Write_Int@data,w
 12894  1A1D  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12895  1A1E  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12896  1A1F  00D7               	movwf	EEPROM_24C1025_Write_Int@local+1
 12897                           
 12898                           ;EEPROM_24C1025.c: 277:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12899  1A20  0851               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 12900  1A21  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12901  1A22  0850               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 12902  1A23  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12903  1A24  084F               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 12904  1A25  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12905  1A26  084E               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 12906  1A27  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12907  1A28  3002               	movlw	2
 12908  1A29  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 12909  1A2A  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 12910  1A2B  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12911  1A2C  3056               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12912  1A2D  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 12913  1A2E  3000               	movlw	0
 12914  1A2F  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12915  1A30  0855               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 12916  1A31  160A  118A  2532   	fcall	_EEPROM_24C1025_Write_Buffer
 12917  1A34  0008               	return
 12918  1A35                     __end_of_EEPROM_24C1025_Write_Int:	
 12919                           
 12920                           	psect	text57
 12921  1532                     __ptext57:	
 12922 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12923 ;; Defined at:
 12924 ;;		line 13 in file "EEPROM_24C1025.c"
 12925 ;; Parameters:    Size  Location     Type
 12926 ;;  chip_add        1    wreg     unsigned char 
 12927 ;;  mem_add         4    2[BANK0 ] unsigned long 
 12928 ;;  sizedata        1    6[BANK0 ] unsigned char 
 12929 ;;  data            2    7[BANK0 ] PTR unsigned char 
 12930 ;;		 -> EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(1), usart_protocol.value(10), usart_protocol(1
      +6), 
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;  chip_add        1   12[BANK0 ] unsigned char 
 12933 ;;  ctrl            1   14[BANK0 ] unsigned char 
 12934 ;;  range           1   13[BANK0 ] unsigned char 
 12935 ;;  count           1   11[BANK0 ] unsigned char 
 12936 ;; Return value:  Size  Location     Type
 12937 ;;                  1    wreg      void 
 12938 ;; Registers used:
 12939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12940 ;; Tracked objects:
 12941 ;;		On entry : 0/300
 12942 ;;		On exit  : 0/0
 12943 ;;		Unchanged: 0/0
 12944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12945 ;;      Params:         0       7       0       0       0
 12946 ;;      Locals:         0       4       0       0       0
 12947 ;;      Temps:          0       2       0       0       0
 12948 ;;      Totals:         0      13       0       0       0
 12949 ;;Total ram usage:       13 bytes
 12950 ;; Hardware stack levels used:    1
 12951 ;; Hardware stack levels required when called:    3
 12952 ;; This function calls:
 12953 ;;		_I2C_Master_Start
 12954 ;;		_I2C_Master_Stop
 12955 ;;		_I2C_Master_Write
 12956 ;; This function is called by:
 12957 ;;		_Decodify_Command
 12958 ;;		_EEPROM_24C1025_Write_Byte
 12959 ;;		_EEPROM_24C1025_Write_Int
 12960 ;; This function uses a non-reentrant model
 12961 ;;
 12962                           
 12963                           
 12964                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12965  1532                     _EEPROM_24C1025_Write_Buffer:	
 12966                           
 12967                           ;incstack = 0
 12968                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack
      +                          ]
 12969                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12970  1532  1283               	bcf	3,5	;RP0=0, select bank0
 12971  1533  1303               	bcf	3,6	;RP1=0, select bank0
 12972  1534  00AC               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12973                           
 12974                           ;EEPROM_24C1025.c: 19:      unsigned char ctrl;;EEPROM_24C1025.c: 20:      unsigned char
      +                           count;;EEPROM_24C1025.c: 22:      Delay_Led_Memory=20;
 12975  1535  3014               	movlw	20
 12976  1536  00FA               	movwf	_Delay_Led_Memory	;volatile
 12977  1537  3000               	movlw	0
 12978  1538  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 12979                           
 12980                           ;EEPROM_24C1025.c: 24:      if(mem_add>0x1FFFF) return;
 12981  1539  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12982  153A  1D03               	btfss	3,2
 12983  153B  0008               	return
 12984  153C  3002               	movlw	2
 12985  153D  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12986  153E  1D03               	skipz
 12987  153F  2D48               	goto	u5463
 12988  1540  3000               	movlw	0
 12989  1541  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12990  1542  1D03               	skipz
 12991  1543  2D48               	goto	u5463
 12992  1544  3000               	movlw	0
 12993  1545  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12994  1546  1D03               	skipz
 12995  1547  2D48               	goto	u5463
 12996  1548                     u5463:	
 12997  1548  1803               	btfsc	3,0
 12998  1549  0008               	return
 12999                           
 13000                           ;EEPROM_24C1025.c: 26:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 13001  154A  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 13002  154B  1D03               	btfss	3,2
 13003  154C  2D5B               	goto	l5710
 13004  154D  3001               	movlw	1
 13005  154E  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 13006  154F  1D03               	skipz
 13007  1550  2D59               	goto	u5473
 13008  1551  3000               	movlw	0
 13009  1552  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13010  1553  1D03               	skipz
 13011  1554  2D59               	goto	u5473
 13012  1555  3000               	movlw	0
 13013  1556  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13014  1557  1D03               	skipz
 13015  1558  2D59               	goto	u5473
 13016  1559                     u5473:	
 13017  1559  1C03               	btfss	3,0
 13018  155A  2D60               	goto	l5712
 13019  155B                     l5710:	
 13020  155B  3008               	movlw	8
 13021  155C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13022  155D  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13023  155E  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 13024  155F  2D61               	goto	l5714
 13025  1560                     l5712:	
 13026  1560  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 13027  1561                     l5714:	
 13028                           
 13029                           ;EEPROM_24C1025.c: 27:      ctrl=chip_add;
 13030  1561  082C               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 13031  1562  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13032  1563  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13033  1564  00AE               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 13034                           
 13035                           ;EEPROM_24C1025.c: 28:      ctrl<<=1;
 13036  1565  1003               	clrc
 13037  1566  0DAE               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13038                           
 13039                           ;EEPROM_24C1025.c: 29:      ctrl |= 0xA0;
 13040  1567  30A0               	movlw	160
 13041  1568  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13042  1569  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13043  156A  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13044                           
 13045                           ;EEPROM_24C1025.c: 30:      ctrl |= range;
 13046  156B  082D               	movf	EEPROM_24C1025_Write_Buffer@range,w
 13047  156C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13048  156D  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13049  156E  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13050                           
 13051                           ;EEPROM_24C1025.c: 32:      I2C_Master_Start();
 13052  156F  160A  158A  20DB  160A  118A  	fcall	_I2C_Master_Start
 13053                           
 13054                           ;EEPROM_24C1025.c: 33:      I2C_Master_Write(ctrl);
 13055  1574  1283               	bcf	3,5	;RP0=0, select bank0
 13056  1575  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 13057  1576  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13058  1577  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13059  1578  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13060  1579  00A0               	movwf	I2C_Master_Write@d
 13061  157A  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13062  157B  00A1               	movwf	I2C_Master_Write@d+1
 13063  157C  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 13064                           
 13065                           ;EEPROM_24C1025.c: 34:      I2C_Master_Write(((char *)&mem_add)[1]);
 13066  1581  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13067  1582  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13068  1583  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13069  1584  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13070  1585  00A0               	movwf	I2C_Master_Write@d
 13071  1586  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13072  1587  00A1               	movwf	I2C_Master_Write@d+1
 13073  1588  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 13074                           
 13075                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(((char *)&mem_add)[0]);
 13076  158D  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13077  158E  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13078  158F  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13079  1590  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13080  1591  00A0               	movwf	I2C_Master_Write@d
 13081  1592  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13082  1593  00A1               	movwf	I2C_Master_Write@d+1
 13083  1594  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 13084                           
 13085                           ;EEPROM_24C1025.c: 36:      for(count=0;count<(sizedata-1);count++)
 13086  1599  01AB               	clrf	EEPROM_24C1025_Write_Buffer@count
 13087  159A                     l5776:	
 13088  159A  0826               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 13089  159B  3EFF               	addlw	255
 13090  159C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13091  159D  30FF               	movlw	255
 13092  159E  1803               	skipnc
 13093  159F  3000               	movlw	0
 13094  15A0  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 13095  15A1  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13096  15A2  3A80               	xorlw	128
 13097  15A3  3C80               	sublw	128
 13098  15A4  1D03               	skipz
 13099  15A5  2DA8               	goto	u5515
 13100  15A6  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13101  15A7  022B               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 13102  15A8                     u5515:	
 13103  15A8  1803               	btfsc	3,0
 13104  15A9  2E72               	goto	l5778
 13105                           
 13106                           ;EEPROM_24C1025.c: 37:           {;EEPROM_24C1025.c: 38:           if(mem_add>0x1FFFF) r
      +                          eturn;
 13107  15AA  1283               	bcf	3,5	;RP0=0, select bank0
 13108  15AB  1303               	bcf	3,6	;RP1=0, select bank0
 13109  15AC  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 13110  15AD  1D03               	btfss	3,2
 13111  15AE  0008               	return
 13112  15AF  3002               	movlw	2
 13113  15B0  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 13114  15B1  1D03               	skipz
 13115  15B2  2DBB               	goto	u5483
 13116  15B3  3000               	movlw	0
 13117  15B4  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13118  15B5  1D03               	skipz
 13119  15B6  2DBB               	goto	u5483
 13120  15B7  3000               	movlw	0
 13121  15B8  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13122  15B9  1D03               	skipz
 13123  15BA  2DBB               	goto	u5483
 13124  15BB                     u5483:	
 13125  15BB  1803               	btfsc	3,0
 13126  15BC  0008               	return
 13127                           
 13128                           ;EEPROM_24C1025.c: 39:           if((mem_add+1)%128==0)
 13129  15BD  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13130  15BE  3E01               	addlw	1
 13131  15BF  397F               	andlw	127
 13132  15C0  1D03               	btfss	3,2
 13133  15C1  2E48               	goto	l5768
 13134                           
 13135                           ;EEPROM_24C1025.c: 40:             {;EEPROM_24C1025.c: 41:             I2C_Master_Write(
      +                          *data);
 13136  15C2  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13137  15C3  0084               	movwf	4
 13138  15C4  1783               	bsf	3,7
 13139  15C5  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13140  15C6  1383               	bcf	3,7
 13141  15C7  0800               	movf	0,w
 13142  15C8  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13143  15C9  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13144  15CA  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13145  15CB  00A0               	movwf	I2C_Master_Write@d
 13146  15CC  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13147  15CD  00A1               	movwf	I2C_Master_Write@d+1
 13148  15CE  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 13149                           
 13150                           ;EEPROM_24C1025.c: 42:             I2C_Master_Stop();
 13151  15D3  160A  158A  20C9  160A  118A  	fcall	_I2C_Master_Stop
 13152                           
 13153                           ;EEPROM_24C1025.c: 44:             _delay((unsigned long)((5)*(8000000/4000.0)));
 13154  15D8  300D               	movlw	13
 13155  15D9  1283               	bcf	3,5	;RP0=0, select bank0
 13156  15DA  1303               	bcf	3,6	;RP1=0, select bank0
 13157  15DB  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 13158  15DC  30FB               	movlw	251
 13159  15DD  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13160  15DE                     u8137:	
 13161  15DE  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 13162  15DF  2DDE               	goto	u8137
 13163  15E0  0BAA               	decfsz	??_EEPROM_24C1025_Write_Buffer+1,f
 13164  15E1  2DDE               	goto	u8137
 13165                           
 13166                           ;EEPROM_24C1025.c: 45:             mem_add++;
 13167  15E2  3001               	movlw	1
 13168  15E3  1283               	bcf	3,5	;RP0=0, select bank0
 13169  15E4  1303               	bcf	3,6	;RP1=0, select bank0
 13170  15E5  07A2               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 13171  15E6  3000               	movlw	0
 13172  15E7  1803               	skipnc
 13173  15E8  3001               	movlw	1
 13174  15E9  07A3               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 13175  15EA  3000               	movlw	0
 13176  15EB  1803               	skipnc
 13177  15EC  3001               	movlw	1
 13178  15ED  07A4               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 13179  15EE  3000               	movlw	0
 13180  15EF  1803               	skipnc
 13181  15F0  3001               	movlw	1
 13182  15F1  07A5               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 13183                           
 13184                           ;EEPROM_24C1025.c: 46:             data++;
 13185  15F2  3001               	movlw	1
 13186  15F3  07A7               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 13187  15F4  1803               	skipnc
 13188  15F5  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 13189  15F6  3000               	movlw	0
 13190  15F7  07A8               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 13191                           
 13192                           ;EEPROM_24C1025.c: 47:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 13193  15F8  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 13194  15F9  1D03               	btfss	3,2
 13195  15FA  2E09               	goto	l5748
 13196  15FB  3001               	movlw	1
 13197  15FC  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 13198  15FD  1D03               	skipz
 13199  15FE  2E07               	goto	u5503
 13200  15FF  3000               	movlw	0
 13201  1600  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13202  1601  1D03               	skipz
 13203  1602  2E07               	goto	u5503
 13204  1603  3000               	movlw	0
 13205  1604  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13206  1605  1D03               	skipz
 13207  1606  2E07               	goto	u5503
 13208  1607                     u5503:	
 13209  1607  1C03               	btfss	3,0
 13210  1608  2E0E               	goto	l5750
 13211  1609                     l5748:	
 13212  1609  3008               	movlw	8
 13213  160A  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13214  160B  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13215  160C  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 13216  160D  2E0F               	goto	l5752
 13217  160E                     l5750:	
 13218  160E  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 13219  160F                     l5752:	
 13220                           
 13221                           ;EEPROM_24C1025.c: 48:             ctrl=chip_add;
 13222  160F  082C               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 13223  1610  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13224  1611  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13225  1612  00AE               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 13226                           
 13227                           ;EEPROM_24C1025.c: 49:             ctrl<<=1;
 13228  1613  1003               	clrc
 13229  1614  0DAE               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13230                           
 13231                           ;EEPROM_24C1025.c: 50:             ctrl |= 0xA0;
 13232  1615  30A0               	movlw	160
 13233  1616  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13234  1617  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13235  1618  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13236                           
 13237                           ;EEPROM_24C1025.c: 51:             ctrl |= range;
 13238  1619  082D               	movf	EEPROM_24C1025_Write_Buffer@range,w
 13239  161A  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13240  161B  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13241  161C  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 13242                           
 13243                           ;EEPROM_24C1025.c: 53:             I2C_Master_Start();
 13244  161D  160A  158A  20DB  160A  118A  	fcall	_I2C_Master_Start
 13245                           
 13246                           ;EEPROM_24C1025.c: 54:             I2C_Master_Write(ctrl);
 13247  1622  1283               	bcf	3,5	;RP0=0, select bank0
 13248  1623  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 13249  1624  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13250  1625  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13251  1626  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13252  1627  00A0               	movwf	I2C_Master_Write@d
 13253  1628  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13254  1629  00A1               	movwf	I2C_Master_Write@d+1
 13255  162A  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 13256                           
 13257                           ;EEPROM_24C1025.c: 55:             I2C_Master_Write(((char *)&mem_add)[1]);
 13258  162F  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 13259  1630  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13260  1631  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13261  1632  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13262  1633  00A0               	movwf	I2C_Master_Write@d
 13263  1634  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13264  1635  00A1               	movwf	I2C_Master_Write@d+1
 13265  1636  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 13266                           
 13267                           ;EEPROM_24C1025.c: 56:             I2C_Master_Write(((char *)&mem_add)[0]);
 13268  163B  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 13269  163C  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13270  163D  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13271  163E  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13272  163F  00A0               	movwf	I2C_Master_Write@d
 13273  1640  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13274  1641  00A1               	movwf	I2C_Master_Write@d+1
 13275  1642  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 13276                           
 13277                           ;EEPROM_24C1025.c: 57:             }
 13278  1647  2E6D               	goto	l5774
 13279  1648                     l5768:	
 13280                           
 13281                           ;EEPROM_24C1025.c: 59:             {;EEPROM_24C1025.c: 60:             I2C_Master_Write(
      +                          *data);
 13282  1648  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13283  1649  0084               	movwf	4
 13284  164A  1783               	bsf	3,7
 13285  164B  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13286  164C  1383               	bcf	3,7
 13287  164D  0800               	movf	0,w
 13288  164E  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13289  164F  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13290  1650  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13291  1651  00A0               	movwf	I2C_Master_Write@d
 13292  1652  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13293  1653  00A1               	movwf	I2C_Master_Write@d+1
 13294  1654  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 13295                           
 13296                           ;EEPROM_24C1025.c: 61:             data++;
 13297  1659  3001               	movlw	1
 13298  165A  07A7               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 13299  165B  1803               	skipnc
 13300  165C  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 13301  165D  3000               	movlw	0
 13302  165E  07A8               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 13303                           
 13304                           ;EEPROM_24C1025.c: 62:             mem_add++;
 13305  165F  3001               	movlw	1
 13306  1660  07A2               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 13307  1661  3000               	movlw	0
 13308  1662  1803               	skipnc
 13309  1663  3001               	movlw	1
 13310  1664  07A3               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 13311  1665  3000               	movlw	0
 13312  1666  1803               	skipnc
 13313  1667  3001               	movlw	1
 13314  1668  07A4               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 13315  1669  3000               	movlw	0
 13316  166A  1803               	skipnc
 13317  166B  3001               	movlw	1
 13318  166C  07A5               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 13319  166D                     l5774:	
 13320                           
 13321                           ;EEPROM_24C1025.c: 64:      }
 13322  166D  3001               	movlw	1
 13323  166E  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13324  166F  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13325  1670  07AB               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 13326  1671  2D9A               	goto	l5776
 13327  1672                     l5778:	
 13328                           
 13329                           ;EEPROM_24C1025.c: 65:      I2C_Master_Write(*data);
 13330  1672  1283               	bcf	3,5	;RP0=0, select bank0
 13331  1673  1303               	bcf	3,6	;RP1=0, select bank0
 13332  1674  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 13333  1675  0084               	movwf	4
 13334  1676  1783               	bsf	3,7
 13335  1677  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 13336  1678  1383               	bcf	3,7
 13337  1679  0800               	movf	0,w
 13338  167A  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13339  167B  01AA               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 13340  167C  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 13341  167D  00A0               	movwf	I2C_Master_Write@d
 13342  167E  082A               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 13343  167F  00A1               	movwf	I2C_Master_Write@d+1
 13344  1680  160A  158A  20E4  160A  118A  	fcall	_I2C_Master_Write
 13345                           
 13346                           ;EEPROM_24C1025.c: 66:      I2C_Master_Stop();
 13347  1685  160A  158A  20C9  160A  118A  	fcall	_I2C_Master_Stop
 13348                           
 13349                           ;EEPROM_24C1025.c: 67:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 13350  168A  30B9               	movlw	185
 13351  168B  1283               	bcf	3,5	;RP0=0, select bank0
 13352  168C  1303               	bcf	3,6	;RP1=0, select bank0
 13353  168D  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 13354  168E                     u8147:	
 13355  168E  2E8F               	nop2
 13356  168F  2E90               	nop2
 13357  1690  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 13358  1691  2E8E               	goto	u8147
 13359  1692  2E93               	nop2
 13360  1693  0008               	return
 13361  1694                     __end_of_EEPROM_24C1025_Write_Buffer:	
 13362                           
 13363                           	psect	text58
 13364  18E4                     __ptext58:	
 13365 ;; *************** function _I2C_Master_Write *****************
 13366 ;; Defined at:
 13367 ;;		line 64 in file "I2C.c"
 13368 ;; Parameters:    Size  Location     Type
 13369 ;;  d               2    0[BANK0 ] unsigned int 
 13370 ;; Auto vars:     Size  Location     Type
 13371 ;;		None
 13372 ;; Return value:  Size  Location     Type
 13373 ;;                  1    wreg      void 
 13374 ;; Registers used:
 13375 ;;		wreg, status,2, status,0, pclath, cstack
 13376 ;; Tracked objects:
 13377 ;;		On entry : 300/0
 13378 ;;		On exit  : 300/0
 13379 ;;		Unchanged: 0/0
 13380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13381 ;;      Params:         0       2       0       0       0
 13382 ;;      Locals:         0       0       0       0       0
 13383 ;;      Temps:          0       0       0       0       0
 13384 ;;      Totals:         0       2       0       0       0
 13385 ;;Total ram usage:        2 bytes
 13386 ;; Hardware stack levels used:    1
 13387 ;; Hardware stack levels required when called:    2
 13388 ;; This function calls:
 13389 ;;		_I2C_Master_Wait
 13390 ;; This function is called by:
 13391 ;;		_EEPROM_24C1025_Write_Buffer
 13392 ;;		_EEPROM_24C1025_Read_Buffer
 13393 ;;		_EEPROM_24C1025_Write_Str
 13394 ;;		_EEPROM_24C1025_Read_Str
 13395 ;; This function uses a non-reentrant model
 13396 ;;
 13397                           
 13398                           
 13399                           ;psect for function _I2C_Master_Write
 13400  18E4                     _I2C_Master_Write:	
 13401                           
 13402                           ;I2C.c: 64: void I2C_Master_Write(unsigned d);I2C.c: 65: {;I2C.c: 66:   generic_status.f
      +                          lag_main_loop_WDT=1;
 13403                           
 13404                           ;incstack = 0
 13405                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 13406  18E4  1683               	bsf	3,5	;RP0=1, select bank1
 13407  18E5  17E9               	bsf	_generic_status^(0+128),7
 13408                           
 13409                           ;I2C.c: 67:   I2C_Master_Wait();
 13410  18E6  160A  158A  20D3   	fcall	_I2C_Master_Wait
 13411                           
 13412                           ;I2C.c: 68:   SSPBUF = d;
 13413  18E9  1283               	bcf	3,5	;RP0=0, select bank0
 13414  18EA  0820               	movf	I2C_Master_Write@d,w
 13415  18EB  0093               	movwf	19	;volatile
 13416  18EC  0008               	return
 13417  18ED                     __end_of_I2C_Master_Write:	
 13418                           
 13419                           	psect	text59
 13420  18C9                     __ptext59:	
 13421 ;; *************** function _I2C_Master_Stop *****************
 13422 ;; Defined at:
 13423 ;;		line 58 in file "I2C.c"
 13424 ;; Parameters:    Size  Location     Type
 13425 ;;		None
 13426 ;; Auto vars:     Size  Location     Type
 13427 ;;		None
 13428 ;; Return value:  Size  Location     Type
 13429 ;;                  1    wreg      void 
 13430 ;; Registers used:
 13431 ;;		wreg, status,2, status,0, pclath, cstack
 13432 ;; Tracked objects:
 13433 ;;		On entry : 300/800
 13434 ;;		On exit  : 300/100
 13435 ;;		Unchanged: 0/0
 13436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13437 ;;      Params:         0       0       0       0       0
 13438 ;;      Locals:         0       0       0       0       0
 13439 ;;      Temps:          0       0       0       0       0
 13440 ;;      Totals:         0       0       0       0       0
 13441 ;;Total ram usage:        0 bytes
 13442 ;; Hardware stack levels used:    1
 13443 ;; Hardware stack levels required when called:    2
 13444 ;; This function calls:
 13445 ;;		_I2C_Master_Wait
 13446 ;; This function is called by:
 13447 ;;		_EEPROM_24C1025_Write_Buffer
 13448 ;;		_EEPROM_24C1025_Read_Buffer
 13449 ;;		_EEPROM_24C1025_Write_Str
 13450 ;;		_EEPROM_24C1025_Read_Str
 13451 ;; This function uses a non-reentrant model
 13452 ;;
 13453                           
 13454                           
 13455                           ;psect for function _I2C_Master_Stop
 13456  18C9                     _I2C_Master_Stop:	
 13457                           
 13458                           ;I2C.c: 60:   I2C_Master_Wait();
 13459                           
 13460                           ;incstack = 0
 13461                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 13462  18C9  160A  158A  20D3   	fcall	_I2C_Master_Wait
 13463                           
 13464                           ;I2C.c: 61:   PEN = 1;
 13465  18CC  1511               	bsf	17,2	;volatile
 13466  18CD  0008               	return
 13467  18CE                     __end_of_I2C_Master_Stop:	
 13468                           
 13469                           	psect	text60
 13470  18DB                     __ptext60:	
 13471 ;; *************** function _I2C_Master_Start *****************
 13472 ;; Defined at:
 13473 ;;		line 45 in file "I2C.c"
 13474 ;; Parameters:    Size  Location     Type
 13475 ;;		None
 13476 ;; Auto vars:     Size  Location     Type
 13477 ;;		None
 13478 ;; Return value:  Size  Location     Type
 13479 ;;                  1    wreg      void 
 13480 ;; Registers used:
 13481 ;;		wreg, status,2, status,0, pclath, cstack
 13482 ;; Tracked objects:
 13483 ;;		On entry : 300/0
 13484 ;;		On exit  : 300/100
 13485 ;;		Unchanged: 0/0
 13486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13487 ;;      Params:         0       0       0       0       0
 13488 ;;      Locals:         0       0       0       0       0
 13489 ;;      Temps:          0       0       0       0       0
 13490 ;;      Totals:         0       0       0       0       0
 13491 ;;Total ram usage:        0 bytes
 13492 ;; Hardware stack levels used:    1
 13493 ;; Hardware stack levels required when called:    2
 13494 ;; This function calls:
 13495 ;;		_I2C_Master_Wait
 13496 ;; This function is called by:
 13497 ;;		_EEPROM_24C1025_Write_Buffer
 13498 ;;		_EEPROM_24C1025_Read_Buffer
 13499 ;;		_EEPROM_24C1025_Write_Str
 13500 ;;		_EEPROM_24C1025_Read_Str
 13501 ;; This function uses a non-reentrant model
 13502 ;;
 13503                           
 13504                           
 13505                           ;psect for function _I2C_Master_Start
 13506  18DB                     _I2C_Master_Start:	
 13507                           
 13508                           ;I2C.c: 47:   Delay_Led_Memory=20;
 13509                           
 13510                           ;incstack = 0
 13511                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 13512  18DB  3014               	movlw	20
 13513  18DC  00FA               	movwf	_Delay_Led_Memory	;volatile
 13514  18DD  3000               	movlw	0
 13515  18DE  00FB               	movwf	_Delay_Led_Memory+1	;volatile
 13516                           
 13517                           ;I2C.c: 48:   I2C_Master_Wait();
 13518  18DF  160A  158A  20D3   	fcall	_I2C_Master_Wait
 13519                           
 13520                           ;I2C.c: 49:   SEN = 1;
 13521  18E2  1411               	bsf	17,0	;volatile
 13522  18E3  0008               	return
 13523  18E4                     __end_of_I2C_Master_Start:	
 13524                           
 13525                           	psect	text61
 13526  18D3                     __ptext61:	
 13527 ;; *************** function _I2C_Master_Wait *****************
 13528 ;; Defined at:
 13529 ;;		line 40 in file "I2C.c"
 13530 ;; Parameters:    Size  Location     Type
 13531 ;;		None
 13532 ;; Auto vars:     Size  Location     Type
 13533 ;;		None
 13534 ;; Return value:  Size  Location     Type
 13535 ;;                  1    wreg      void 
 13536 ;; Registers used:
 13537 ;;		wreg, status,2
 13538 ;; Tracked objects:
 13539 ;;		On entry : 200/0
 13540 ;;		On exit  : 300/100
 13541 ;;		Unchanged: 0/0
 13542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13543 ;;      Params:         0       0       0       0       0
 13544 ;;      Locals:         0       0       0       0       0
 13545 ;;      Temps:          0       0       0       0       0
 13546 ;;      Totals:         0       0       0       0       0
 13547 ;;Total ram usage:        0 bytes
 13548 ;; Hardware stack levels used:    1
 13549 ;; Hardware stack levels required when called:    1
 13550 ;; This function calls:
 13551 ;;		Nothing
 13552 ;; This function is called by:
 13553 ;;		_I2C_Master_Start
 13554 ;;		_I2C_Master_RepeatedStart
 13555 ;;		_I2C_Master_Stop
 13556 ;;		_I2C_Master_Write
 13557 ;;		_I2C_Master_Read
 13558 ;; This function uses a non-reentrant model
 13559 ;;
 13560                           
 13561                           
 13562                           ;psect for function _I2C_Master_Wait
 13563  18D3                     _I2C_Master_Wait:	
 13564  18D3                     l49:	
 13565                           ;I2C.c: 42:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 13566                           
 13567                           ;incstack = 0
 13568                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 13569                           
 13570  18D3  1683               	bsf	3,5	;RP0=1, select bank1
 13571  18D4  1914               	btfsc	20,2	;volatile
 13572  18D5  28D3               	goto	l49
 13573  18D6  0811               	movf	17,w	;volatile
 13574  18D7  391F               	andlw	31
 13575  18D8  1903               	btfsc	3,2
 13576  18D9  0008               	return
 13577  18DA  28D3               	goto	l49
 13578  18DB                     __end_of_I2C_Master_Wait:	
 13579                           
 13580                           	psect	text62
 13581  1900                     __ptext62:	
 13582 ;; *************** function _ADC_init *****************
 13583 ;; Defined at:
 13584 ;;		line 10 in file "adc.c"
 13585 ;; Parameters:    Size  Location     Type
 13586 ;;		None
 13587 ;; Auto vars:     Size  Location     Type
 13588 ;;		None
 13589 ;; Return value:  Size  Location     Type
 13590 ;;                  1    wreg      void 
 13591 ;; Registers used:
 13592 ;;		wreg, status,2, status,0
 13593 ;; Tracked objects:
 13594 ;;		On entry : 0/100
 13595 ;;		On exit  : 300/0
 13596 ;;		Unchanged: 0/0
 13597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13598 ;;      Params:         0       0       0       0       0
 13599 ;;      Locals:         0       0       0       0       0
 13600 ;;      Temps:          0       0       0       0       0
 13601 ;;      Totals:         0       0       0       0       0
 13602 ;;Total ram usage:        0 bytes
 13603 ;; Hardware stack levels used:    1
 13604 ;; Hardware stack levels required when called:    1
 13605 ;; This function calls:
 13606 ;;		Nothing
 13607 ;; This function is called by:
 13608 ;;		_main
 13609 ;; This function uses a non-reentrant model
 13610 ;;
 13611                           
 13612                           
 13613                           ;psect for function _ADC_init
 13614  1900                     _ADC_init:	
 13615                           
 13616                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13617                           
 13618                           ;incstack = 0
 13619                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13620  1900  30C0               	movlw	192
 13621  1901  1283               	bcf	3,5	;RP0=0, select bank0
 13622  1902  1303               	bcf	3,6	;RP1=0, select bank0
 13623  1903  049F               	iorwf	31,f	;volatile
 13624                           
 13625                           ;adc.c: 12:      ADCON1=0b10000000;
 13626  1904  3080               	movlw	128
 13627  1905  1683               	bsf	3,5	;RP0=1, select bank1
 13628  1906  009F               	movwf	31	;volatile
 13629                           
 13630                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13631  1907  179F               	bsf	31,7	;volatile
 13632                           
 13633                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13634  1908  1283               	bcf	3,5	;RP0=0, select bank0
 13635  1909  141F               	bsf	31,0	;volatile
 13636  190A  0008               	return
 13637  190B                     __end_of_ADC_init:	
 13638                           
 13639                           	psect	text63
 13640  1358                     __ptext63:	
 13641 ;; *************** function _isr *****************
 13642 ;; Defined at:
 13643 ;;		line 29 in file "isr.c"
 13644 ;; Parameters:    Size  Location     Type
 13645 ;;		None
 13646 ;; Auto vars:     Size  Location     Type
 13647 ;;  tempo           2    6[COMMON] unsigned int 
 13648 ;; Return value:  Size  Location     Type
 13649 ;;                  1    wreg      void 
 13650 ;; Registers used:
 13651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13652 ;; Tracked objects:
 13653 ;;		On entry : 0/0
 13654 ;;		On exit  : 300/0
 13655 ;;		Unchanged: 0/0
 13656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13657 ;;      Params:         0       0       0       0       0
 13658 ;;      Locals:         2       0       0       0       0
 13659 ;;      Temps:          6       0       0       0       0
 13660 ;;      Totals:         8       0       0       0       0
 13661 ;;Total ram usage:        8 bytes
 13662 ;; Hardware stack levels used:    1
 13663 ;; This function calls:
 13664 ;;		Nothing
 13665 ;; This function is called by:
 13666 ;;		Interrupt level 1
 13667 ;; This function uses a non-reentrant model
 13668 ;;
 13669                           
 13670                           
 13671                           ;psect for function _isr
 13672  1358                     _isr:	
 13673                           
 13674                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13675  1358  188B               	btfsc	11,1	;volatile
 13676                           
 13677                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13678  1359  108B               	bcf	11,1	;volatile
 13679                           
 13680                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13681                           
 13682                           ;isr.c: 37:       }
 13683  135A  1C0C               	btfss	12,0	;volatile
 13684  135B  2BD0               	goto	i1l5576
 13685                           
 13686                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13687  135C  30B1               	movlw	177
 13688  135D  008F               	movwf	15	;volatile
 13689                           
 13690                           ;isr.c: 42:                 TMR1L=0xF3;
 13691  135E  30F3               	movlw	243
 13692  135F  008E               	movwf	14	;volatile
 13693                           
 13694                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13695  1360  100C               	bcf	12,0	;volatile
 13696                           
 13697                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13698  1361  1683               	bsf	3,5	;RP0=1, select bank1
 13699  1362  1FE9               	btfss	_generic_status^(0+128),7
 13700  1363  2B66               	goto	i1l5532
 13701                           
 13702                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13703  1364  13E9               	bcf	_generic_status^(0+128),7
 13704  1365  0064               	clrwdt	;# 
 13705  1366                     i1l5532:	
 13706                           
 13707                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13708  1366  300A               	movlw	10
 13709  1367  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 13710  1368  1803               	skipnc
 13711  1369  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 13712  136A  3000               	movlw	0
 13713  136B  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 13714                           
 13715                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13716  136C  3003               	movlw	3
 13717  136D  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13718  136E  30E8               	movlw	232
 13719  136F  1903               	skipnz
 13720  1370  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13721  1371  1C03               	skipc
 13722  1372  2B75               	goto	i1l5536
 13723                           
 13724                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13725  1373  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 13726  1374  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 13727  1375                     i1l5536:	
 13728                           
 13729                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13730  1375  3001               	movlw	1
 13731  1376  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13732  1377  30F4               	movlw	244
 13733  1378  1903               	skipnz
 13734  1379  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13735  137A  1803               	skipnc
 13736  137B  2B80               	goto	i1l505
 13737                           
 13738                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13739  137C  1283               	bcf	3,5	;RP0=0, select bank0
 13740  137D  1303               	bcf	3,6	;RP1=0, select bank0
 13741  137E  1786               	bsf	6,7	;volatile
 13742  137F  2B83               	goto	i1l5540
 13743  1380                     i1l505:	
 13744                           ;isr.c: 56:                 else
 13745                           
 13746                           
 13747                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13748  1380  1283               	bcf	3,5	;RP0=0, select bank0
 13749  1381  1303               	bcf	3,6	;RP1=0, select bank0
 13750  1382  1386               	bcf	6,7	;volatile
 13751  1383                     i1l5540:	
 13752                           
 13753                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13754  1383  1683               	bsf	3,5	;RP0=1, select bank1
 13755  1384  085F               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 13756  1385  0460               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 13757  1386  1903               	btfsc	3,2
 13758  1387  2B91               	goto	i1l507
 13759                           
 13760                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13761  1388  300A               	movlw	10
 13762  1389  02DF               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 13763  138A  3000               	movlw	0
 13764  138B  1C03               	skipc
 13765  138C  03E0               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13766  138D  02E0               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13767                           
 13768                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13769  138E  1283               	bcf	3,5	;RP0=0, select bank0
 13770  138F  1706               	bsf	6,6	;volatile
 13771                           
 13772                           ;isr.c: 63:                    }
 13773  1390  2B93               	goto	i1l5546
 13774  1391                     i1l507:	
 13775                           ;isr.c: 64:                 else{
 13776                           
 13777                           
 13778                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13779  1391  1283               	bcf	3,5	;RP0=0, select bank0
 13780  1392  1306               	bcf	6,6	;volatile
 13781  1393                     i1l5546:	
 13782                           
 13783                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13784  1393  087A               	movf	_Delay_Led_Memory,w	;volatile
 13785  1394  047B               	iorwf	_Delay_Led_Memory+1,w	;volatile
 13786  1395  1903               	btfsc	3,2
 13787  1396  2B9F               	goto	i1l509
 13788                           
 13789                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13790  1397  300A               	movlw	10
 13791  1398  02FA               	subwf	_Delay_Led_Memory,f	;volatile
 13792  1399  3000               	movlw	0
 13793  139A  1C03               	skipc
 13794  139B  03FB               	decf	_Delay_Led_Memory+1,f	;volatile
 13795  139C  02FB               	subwf	_Delay_Led_Memory+1,f	;volatile
 13796                           
 13797                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13798  139D  1686               	bsf	6,5	;volatile
 13799                           
 13800                           ;isr.c: 71:                    }
 13801  139E  2BA0               	goto	i1l5552
 13802  139F                     i1l509:	
 13803                           ;isr.c: 72:                 else{
 13804                           
 13805                           
 13806                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13807  139F  1286               	bcf	6,5	;volatile
 13808  13A0                     i1l5552:	
 13809                           
 13810                           ;isr.c: 77:                 tempodecorrido+=10;
 13811  13A0  300A               	movlw	10
 13812  13A1  1683               	bsf	3,5	;RP0=1, select bank1
 13813  13A2  07D7               	addwf	_tempodecorrido^(0+128),f	;volatile
 13814  13A3  1803               	skipnc
 13815  13A4  0AD8               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13816  13A5  3000               	movlw	0
 13817  13A6  07D8               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13818                           
 13819                           ;isr.c: 78:                 milisegundo+=10;
 13820  13A7  300A               	movlw	10
 13821  13A8  07DD               	addwf	_milisegundo^(0+128),f	;volatile
 13822  13A9  1803               	skipnc
 13823  13AA  0ADE               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13824  13AB  3000               	movlw	0
 13825  13AC  07DE               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13826                           
 13827                           ;isr.c: 79:                 if(milisegundo==1000){
 13828  13AD  30E8               	movlw	232
 13829  13AE  065D               	xorwf	_milisegundo^(0+128),w	;volatile
 13830  13AF  3003               	movlw	3
 13831  13B0  1903               	skipnz
 13832  13B1  065E               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13833  13B2  1D03               	btfss	3,2
 13834  13B3  2BD0               	goto	i1l5576
 13835                           
 13836                           ;isr.c: 80:                    milisegundo=0;
 13837  13B4  01DD               	clrf	_milisegundo^(0+128)	;volatile
 13838  13B5  01DE               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13839                           
 13840                           ;isr.c: 81:                    segundo++;
 13841  13B6  3001               	movlw	1
 13842  13B7  00F0               	movwf	??_isr
 13843  13B8  0870               	movf	??_isr,w
 13844  13B9  07E7               	addwf	_segundo^(0+128),f	;volatile
 13845                           
 13846                           ;isr.c: 88:                    if(segundo==60){
 13847  13BA  303C               	movlw	60
 13848  13BB  0667               	xorwf	_segundo^(0+128),w	;volatile
 13849  13BC  1D03               	btfss	3,2
 13850  13BD  2BD0               	goto	i1l5576
 13851                           
 13852                           ;isr.c: 89:                       segundo=0;
 13853  13BE  01E7               	clrf	_segundo^(0+128)	;volatile
 13854                           
 13855                           ;isr.c: 90:                       minuto++;
 13856  13BF  3001               	movlw	1
 13857  13C0  00F0               	movwf	??_isr
 13858  13C1  0870               	movf	??_isr,w
 13859  13C2  07E5               	addwf	_minuto^(0+128),f	;volatile
 13860                           
 13861                           ;isr.c: 91:                       if(minuto==60){
 13862  13C3  303C               	movlw	60
 13863  13C4  0665               	xorwf	_minuto^(0+128),w	;volatile
 13864  13C5  1D03               	btfss	3,2
 13865  13C6  2BD0               	goto	i1l5576
 13866                           
 13867                           ;isr.c: 92:                          minuto=0;
 13868  13C7  01E5               	clrf	_minuto^(0+128)	;volatile
 13869                           
 13870                           ;isr.c: 93:                          hora++;
 13871  13C8  3001               	movlw	1
 13872  13C9  00F0               	movwf	??_isr
 13873  13CA  0870               	movf	??_isr,w
 13874  13CB  07E6               	addwf	_hora^(0+128),f	;volatile
 13875                           
 13876                           ;isr.c: 94:                          if(hora==24){
 13877  13CC  3018               	movlw	24
 13878  13CD  0666               	xorwf	_hora^(0+128),w	;volatile
 13879  13CE  1903               	btfsc	3,2
 13880                           
 13881                           ;isr.c: 95:                             hora=0;
 13882  13CF  01E6               	clrf	_hora^(0+128)	;volatile
 13883  13D0                     i1l5576:	
 13884                           ;isr.c: 99:                 }
 13885                           
 13886                           
 13887                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13888  13D0  1283               	bcf	3,5	;RP0=0, select bank0
 13889  13D1  1E8C               	btfss	12,5	;volatile
 13890  13D2  2C37               	goto	i1l523
 13891                           
 13892                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13893  13D3  1683               	bsf	3,5	;RP0=1, select bank1
 13894  13D4  1469               	bsf	_generic_status^(0+128),0
 13895                           
 13896                           ;isr.c: 109:         tempo=30;
 13897  13D5  301E               	movlw	30
 13898  13D6  00F6               	movwf	isr@tempo
 13899  13D7  3000               	movlw	0
 13900  13D8  00F7               	movwf	isr@tempo+1
 13901                           
 13902                           ;isr.c: 110:         count=0;
 13903  13D9  01D9               	clrf	_count^(0+128)	;volatile
 13904  13DA  01DA               	clrf	(_count+1)^(0+128)	;volatile
 13905                           
 13906                           ;isr.c: 111:         pointer=usart_buffer;
 13907  13DB  3090               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13908  13DC  00F0               	movwf	??_isr
 13909  13DD  0870               	movf	??_isr,w
 13910  13DE  00E1               	movwf	_pointer^(0+128)
 13911  13DF                     i1l5598:	
 13912                           ;isr.c: 112:         while(tempo)
 13913                           
 13914                           
 13915                           ;isr.c: 112:         while(tempo)
 13916  13DF  0876               	movf	isr@tempo,w
 13917  13E0  0477               	iorwf	isr@tempo+1,w
 13918  13E1  1903               	btfsc	3,2
 13919  13E2  2C12               	goto	i1l5600
 13920                           
 13921                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13922  13E3  1283               	bcf	3,5	;RP0=0, select bank0
 13923  13E4  1303               	bcf	3,6	;RP1=0, select bank0
 13924  13E5  1E8C               	btfss	12,5	;volatile
 13925  13E6  2C0B               	goto	i1l5596
 13926                           
 13927                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13928  13E7  081A               	movf	26,w	;volatile
 13929  13E8  00F0               	movwf	??_isr
 13930  13E9  1683               	bsf	3,5	;RP0=1, select bank1
 13931  13EA  0861               	movf	_pointer^(0+128),w
 13932  13EB  0084               	movwf	4
 13933  13EC  0870               	movf	??_isr,w
 13934  13ED  1783               	bsf	3,7	;select IRP bank2
 13935  13EE  0080               	movwf	0
 13936                           
 13937                           ;isr.c: 118:                 if(count<32+10 -1)
 13938  13EF  085A               	movf	(_count+1)^(0+128),w	;volatile
 13939  13F0  3A80               	xorlw	128
 13940  13F1  00FF               	movwf	127
 13941  13F2  3080               	movlw	128
 13942  13F3  027F               	subwf	127,w
 13943  13F4  1D03               	skipz
 13944  13F5  2BF8               	goto	u538_25
 13945  13F6  3029               	movlw	41
 13946  13F7  0259               	subwf	_count^(0+128),w	;volatile
 13947  13F8                     u538_25:	
 13948  13F8  1803               	skipnc
 13949  13F9  2C06               	goto	i1l5594
 13950                           
 13951                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13952  13FA  3001               	movlw	1
 13953  13FB  1683               	bsf	3,5	;RP0=1, select bank1
 13954  13FC  1303               	bcf	3,6	;RP1=0, select bank1
 13955  13FD  07D9               	addwf	_count^(0+128),f	;volatile
 13956  13FE  1803               	skipnc
 13957  13FF  0ADA               	incf	(_count+1)^(0+128),f	;volatile
 13958  1400  3000               	movlw	0
 13959  1401  07DA               	addwf	(_count+1)^(0+128),f	;volatile
 13960                           
 13961                           ;isr.c: 121:                    pointer++;
 13962  1402  3001               	movlw	1
 13963  1403  00F0               	movwf	??_isr
 13964  1404  0870               	movf	??_isr,w
 13965  1405  07E1               	addwf	_pointer^(0+128),f
 13966  1406                     i1l5594:	
 13967                           
 13968                           ;isr.c: 123:                 tempo=30;
 13969  1406  301E               	movlw	30
 13970  1407  00F6               	movwf	isr@tempo
 13971  1408  3000               	movlw	0
 13972  1409  00F7               	movwf	isr@tempo+1
 13973                           
 13974                           ;isr.c: 124:             }
 13975  140A  2BDF               	goto	i1l5598
 13976  140B                     i1l5596:	
 13977                           
 13978                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13979  140B  3001               	movlw	1
 13980  140C  02F6               	subwf	isr@tempo,f
 13981  140D  3000               	movlw	0
 13982  140E  1C03               	skipc
 13983  140F  03F7               	decf	isr@tempo+1,f
 13984  1410  02F7               	subwf	isr@tempo+1,f
 13985  1411  2BDF               	goto	i1l5598
 13986  1412                     i1l5600:	
 13987                           
 13988                           ;isr.c: 131:         (*pointer)=0;
 13989  1412  1683               	bsf	3,5	;RP0=1, select bank1
 13990  1413  1303               	bcf	3,6	;RP1=0, select bank1
 13991  1414  0861               	movf	_pointer^(0+128),w
 13992  1415  0084               	movwf	4
 13993  1416  1783               	bsf	3,7	;select IRP bank2
 13994  1417  0180               	clrf	0
 13995                           
 13996                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13997  1418  1283               	bcf	3,5	;RP0=0, select bank0
 13998  1419  1C98               	btfss	24,1	;volatile
 13999  141A  2C37               	goto	i1l523
 14000                           
 14001                           ;isr.c: 134:            CREN=0;
 14002  141B  1218               	bcf	24,4	;volatile
 14003                           
 14004                           ;isr.c: 135:            CREN=1;
 14005  141C  1618               	bsf	24,4	;volatile
 14006                           
 14007                           ;isr.c: 136:            tempo=RCREG;
 14008  141D  081A               	movf	26,w	;volatile
 14009  141E  00F0               	movwf	??_isr
 14010  141F  01F1               	clrf	??_isr+1
 14011  1420  0870               	movf	??_isr,w
 14012  1421  00F6               	movwf	isr@tempo
 14013  1422  0871               	movf	??_isr+1,w
 14014  1423  00F7               	movwf	isr@tempo+1
 14015                           
 14016                           ;isr.c: 137:            tempo=RCREG;
 14017  1424  081A               	movf	26,w	;volatile
 14018  1425  00F0               	movwf	??_isr
 14019  1426  01F1               	clrf	??_isr+1
 14020  1427  0870               	movf	??_isr,w
 14021  1428  00F6               	movwf	isr@tempo
 14022  1429  0871               	movf	??_isr+1,w
 14023  142A  00F7               	movwf	isr@tempo+1
 14024                           
 14025                           ;isr.c: 138:            tempo=RCREG;
 14026  142B  081A               	movf	26,w	;volatile
 14027  142C  00F0               	movwf	??_isr
 14028  142D  01F1               	clrf	??_isr+1
 14029  142E  0870               	movf	??_isr,w
 14030  142F  00F6               	movwf	isr@tempo
 14031  1430  0871               	movf	??_isr+1,w
 14032  1431  00F7               	movwf	isr@tempo+1
 14033                           
 14034                           ;isr.c: 139:            usart_buffer[0]=0;
 14035  1432  1683               	bsf	3,5	;RP0=1, select bank3
 14036  1433  1703               	bsf	3,6	;RP1=1, select bank3
 14037  1434  0190               	clrf	_usart_buffer^(0+384)	;volatile
 14038                           
 14039                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 14040  1435  1303               	bcf	3,6	;RP1=0, select bank1
 14041  1436  14E9               	bsf	_generic_status^(0+128),1
 14042  1437                     i1l523:	
 14043  1437  0875               	movf	??_isr+5,w
 14044  1438  1283               	bcf	3,5	;RP0=0, select bank0
 14045  1439  00FF               	movwf	127
 14046  143A  0874               	movf	??_isr+4,w
 14047  143B  008A               	movwf	10
 14048  143C  0873               	movf	??_isr+3,w
 14049  143D  0084               	movwf	4
 14050  143E  0E72               	swapf	(??_isr+2)^(0+4294967168),w
 14051  143F  0083               	movwf	3
 14052  1440  0EFE               	swapf	126,f
 14053  1441  0E7E               	swapf	126,w
 14054  1442  0009               	retfie
 14055  1443                     __end_of_isr:	
 14056  007E                     btemp	set	126	;btemp
 14057  007E                     wtemp0	set	126
 14058                           
 14059                           	psect	intentry
 14060  0004                     __pintentry:	
 14061                           ;incstack = 0
 14062                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 14063                           
 14064  0004                     interrupt_function:	
 14065  007E                     saved_w	set	btemp
 14066  0004  00FE               	movwf	btemp
 14067  0005  0E03               	swapf	3,w
 14068  0006  00F2               	movwf	??_isr+2
 14069  0007  0804               	movf	4,w
 14070  0008  00F3               	movwf	??_isr+3
 14071  0009  080A               	movf	10,w
 14072  000A  00F4               	movwf	??_isr+4
 14073  000B  1283               	bcf	3,5	;RP0=0, select bank0
 14074  000C  1303               	bcf	3,6	;RP1=0, select bank0
 14075  000D  087F               	movf	btemp+1,w
 14076  000E  00F5               	movwf	??_isr+5
 14077  000F  160A  118A  2B58   	ljmp	_isr


Data Sizes:
    Strings     14
    Constant    64
    Data        0
    BSS         172
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     79      79
    BANK1            80     45      74
    BANK3            96      0      74
    BANK2            96      0      64

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_2(CODE[1]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), buffer(BANK2[64]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 16
		 -> EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 64
		 -> buffer(BANK2[64]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> USART_put_buffer@vetor(BANK0[1]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 16
		 -> usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 42
		 -> NULL(NULL[0]), usart_buffer(BANK3[42]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MediaPlacaVaccum
    _MediaPlacaVaccum->___flsub
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    ___xxtofl->_ADC_Max_10Bits
    _ADC_Max_10Bits->_my_delay_ms
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_Save_Log
    _itoa->_utoa
    _utoa->___lwdiv
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_I2C_Master_Write
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_I2C_Master_Read
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_I2C_Master_Write

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  112310
                                             74 BANK0      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     158
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     223
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    15    15      0   24465
                                             70 BANK0      4     4      0
                                              0 BANK1     11    11      0
                     _ADC_Max_10Bits
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5127
                                             62 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4882
                                             42 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1226
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2463
                                             33 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    2496
                                             33 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     906
                                             19 BANK0     14    10      4
                     _ADC_Max_10Bits (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Max_10Bits                                       9     7      2     663
                                             10 BANK0      9     7      2
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     428
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    49    49      0   85400
                                             64 BANK0      4     4      0
                                              0 BANK1     45    45      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                               _itoa
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     235
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               5     3      2    1151
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    2910
                                             17 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    2029
                                              8 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     352
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     7     5      2     296
                                              1 BANK0      7     5      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      62
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     611
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     611
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             8     4      4   12208
                                             56 BANK0      8     4      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                             35 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    5516
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3415
                                             58 BANK0      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     238
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2904
                                             50 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    2177
                                             54 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    3101
                                             54 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     961
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1911
                                             50 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     973
                                             46 BANK0      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     388
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     990
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2    1216
                                              5 BANK0      8     6      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     739
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     254
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     238
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    3886
                                              2 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    4866
                                             15 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    4596
                                              6 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    5489
                                             20 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    5455
                                             20 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          14     7      7    5229
                                              6 BANK0     14     7      7
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     605
                                              0 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    6122
                                             56 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    5871
                                             46 BANK0     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    4584
                                              2 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    3091
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       ___flmul (ARG)
         __Umul8_16
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
       ___flmul
         __Umul8_16
       ___fltol
         ___flmul (ARG)
           __Umul8_16
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
         __Umul8_16
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _strcat
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Max_10Bits
       _captura
       _my_delay_ms
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
           _ADC_Max_10Bits (ARG)
             _captura
             _my_delay_ms
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
         _ADC_Max_10Bits (ARG)
           _captura
           _my_delay_ms
     ___flge
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
             _ADC_Max_10Bits (ARG)
               _captura
               _my_delay_ms
           _captura
           _my_delay_ms
     ___xxtofl
       _ADC_Max_10Bits (ARG)
         _captura
         _my_delay_ms
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     130       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2D      4A       7       92.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      4A       9       77.1%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      40      11       66.7%
DATA                 0      0     130      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jan 02 16:37:54 2020

                              _USART_putc 190B                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 005A                              ___fldiv@bexp 0059  
                                       pc 0002                              ___fldiv@sign 0052  
                        _MediaPlacaVaccum 0D69                                        l49 18D3  
         EEPROM_24C1025_Read_Buffer@range 0032          EEPROM_24C1025_Write_Str@chip_add 0029  
                                      fsr 0004                             _USART_put_int 1946  
                Decodify_Command@tempchar 00C7                       __Umul8_16@word_mpld 0026  
              __end_of_RESISTOR_ROOM_TEMP 181C              PROCULUS_VP_Write_String@text 005C  
      EEPROM_24C1025_Read_Buffer@cnt_1527 0030                                       l303 0F0F  
                                     l412 1A38                                       l380 1D4C  
                                     l292 045F                                       l356 18F7  
                                     l390 1A7C                                       l294 04BB  
                                     l288 0451                                       l385 1D71  
                                     l386 1D72                                       l661 19BE  
                                     l741 1913                                       l678 1980  
                                     _PEN 048A                              __CFG_CPD$OFF 0000  
                                     _SEN 0488        EEPROM_24C1025_Read_Buffer@chip_add 0031  
                Decodify_Command@sizedata 00C8                                       _isr 1358  
                                     fsr0 0004                                       indf 0000  
               __end_of_EEPROM_Write_Byte 1D81                          _ADC_Media_10bits 1004  
                            __CFG_IESO$ON 0000                              ___flmul@aexp 0037  
                            ___flmul@bexp 0038                    PROCULUS_VP_Write@vetor 0054  
            ?_EEPROM_24C1025_Write_Buffer 0022                              ___flmul@sign 0036  
                            ___flmul@temp 0041                              ___flmul@prod 003D  
 __end_of_PROCULUS_Control_Register_Write 1D0D  __size_of_PROCULUS_Control_Register_Write 0038  
       ??_PROCULUS_Control_Register_Write 0053          ?_PROCULUS_Control_Register_Write 0052  
         _PROCULUS_Control_Register_Write 1CD5                              __CFG_LVP$OFF 0000  
                            ___fltol@exp1 004D                           __end_of_MAX_ADC 1824  
                                    l1123 1074                                      l1142 1FE2  
                                    l1126 10DA                                      l1320 0B26  
                                    l1322 0B34                                      l1242 0B8C  
                                    l1403 1F7F                                      l1350 07A4  
                                    l1246 0C25                                      l1263 0CDE  
                                    l1248 0C03                                      l1284 0D5E  
                                    l1276 0D46                                      l1446 1ACB  
                                    l1390 116A                                      l1382 114A  
                                    l1376 110A                                      l1298 09E7  
                                    l1389 1160                                      l6000 19AA  
                                    l6002 19B5                                      l6010 1CA6  
                                    l6100 0B57                                      l6030 1CEF  
                                    l6032 1D05                                      l7000 09DF  
                                    l6200 0C56                                      l6104 0B5A  
                                    l7010 0A06                                      l6106 0B62  
                                    l6052 1F9E                                      l6124 0B81  
                                    l6046 07D4                                      l6134 0B96  
                                    l6048 07F0                                      l6312 04FC  
                                    l6072 1FCE                                      l6056 1FA7  
                                    l7016 0A12                                      l6240 0D06  
                                    l6208 0C66                                      l6128 0B84  
                                    l7120 1D15                                      l6402 0774  
                                    l6314 04FE                                      l6082 1FF1  
                                    l6074 1FDE                                      l7042 0A80  
                                    l6234 0CFF                                      l6226 0CF0  
                                    l6218 0CD0                                      l6242 0D08  
                                    l6324 0514                                      l6316 0506  
                                    l7060 0A8B                                      l7036 0A61  
                                    l7044 0A3D                                      l6252 0D13  
                                    l6172 0C0E                                      l6164 0BD2  
                                    l7212 0DF2                                      l7204 0DDB  
                                    l7140 1DCE                                      l5710 155B  
                                    l6502 1B30                                      l7062 0AA8  
                                    l7046 0A85                                      l6270 0D56  
                                    l6190 0C33                                      l6174 0C10  
                                    l6182 0C1F                                      l7230 0F35  
                                    l5712 1560                                      l5800 1D97  
                                    l6408 078D                                      l7320 01A1  
                                    l7304 0150                                      l6432 1119  
                                    l7072 0AC1                                      l6248 0D11  
                                    l7160 1DE8                                      l5714 1561  
                                    l5810 1DB8                                      l7314 0181  
                                    l6426 1102                                      l7082 0AF3  
                                    l6274 0D5A                                      l7242 0FA3  
                                    l7404 0392                                      l7332 01C9  
                                    l6460 1187                                      l6436 111D  
                                    l7068 0ABF                                      l7236 0F8D  
                                    l5750 160E                                      l6702 16BA  
                                    l6526 1C0E                                      l5806 1DAD  
                                    l6294 04D7                                      l6614 1AE2  
                                    l5822 1C3F                                      l7422 03DE  
                                    l7414 03B8                                      l7350 0241  
                                    l7326 01AE                                      l7270 007B  
                                    l7262 005E                                      l6446 115E  
                                    l6438 112F                                      l7086 0B0C  
                                    l6198 0C54                                      l7174 1DEF  
                                    l5752 160F                                      l5912 0852  
                                    l6704 16BF                                      l6624 1294  
                                    l5840 1AC3                                      l6384 072A  
                                    l6376 06F6                                      l6296 04D9  
                                    l5824 1C4D                                      l5832 1C66  
                                    l7440 0425                                      l7344 0211  
                                    l6448 114F                                      l5914 0857  
                                    l6706 16C0                                      l6626 1299  
                                    l6378 0713                                      l6298 04E1  
                                    l6554 1EAE                                      l6466 1F36  
                                    l6810 1A68                                      l7434 0409  
                                    l7370 02C3                                      l7338 01EA  
                                    l7290 010F                                      l7282 00D5  
                                    l7266 006D                                      l7098 0B30  
                                    l5748 1609                                      l5916 0858  
                                    l6628 129A                                      l6388 072C  
                                    l5828 1C5B                                      l6476 1F55  
                                    l7452 0455                                      l7428 03F8  
                                    l7380 0304                                      l7364 029E  
                                    l7356 025F                                      l7196 0D93  
                                    ?_isr 0070                                      l5774 166D  
                                    l6750 176C                                      l6398 075E  
                                    l6830 1B96                                      l7622 046E  
                                    l7446 0445                                      l7294 011E  
                                    l7542 14CB                                      l5768 1648  
                                    l5776 159A                                      l5688 1BCF  
                                    l5960 090C                                      l6728 170D  
                                    l5864 1D57                                      l6576 1B55  
                                    l5856 1C6F                                      l6824 1B82  
                                    l7376 02E0                                      l7464 0463  
                                    l6920 1EF3                                      l6904 1E2A  
                                    l5778 1672                                      l6746 1766  
                                    l6690 1341                                      l6682 1320  
                                    l5866 1D5A                                      l6578 1B72  
                                    l5858 1C91                                      l6826 1B8C  
                                    l6818 19DE                                      l7394 036C  
                                    l7386 0318                                      l7298 0138  
                                    l5956 0906                                      l6748 176B  
                                    l6772 17B9                                      l6932 1F28  
                                    l5958 090B                                      l5982 0959  
                                    l5990 08A5                                      l6782 17E0  
                                    l5798 1D89                                      l6918 1EE3  
                                    l6942 108E                                      l5992 0984  
                                    l6784 17E9                                      l6688 12D2  
                                    l6928 1F1B                                      l6880 1988  
                                    l7568 14F5                                      l6794 1E42  
                                    l6858 1020                                      l6946 10B4  
                                    l5988 097F                                      l6876 1985  
                                    l6980 09B9                                      l6982 09C1  
                                    l6976 09B6                                      l6898 1E15  
                                    l6996 09DC                                      _BETA 1848  
                                    STR_1 1850                              __CFG_WDTE$ON 0000  
                                    STR_2 185B                                      STR_3 185A  
                                    STR_4 185C                                      STR_5 185A  
                                    STR_6 185C                                      STR_7 185A  
                                    STR_8 1857                               _statuspower 00E8  
                         ADC_Max_10Bits@i 0032                                      _CREN 00C4  
                                    u6200 0CA5                                      u6201 0CA6  
                                    u6202 0CAB                                      u6050 0BF2  
                                    u6203 0CAC                                      u6060 0BF3  
                                    u6045 0BE6                                      u5503 1607  
                                    u7103 171C                                      u7023 1281  
                                    u7015 1AEB                                      u5440 1BCC  
                                    u7033 1292                                      u5515 15A8  
                                    u7123 1764                                      u7043 12E7  
                                    _RCEN 048B                                      u5525 19C4  
                                    u6245 0CF2                                      u5463 1548  
                                    u5615 1C42                                      u6191 0C91  
                                    u6183 0C78                                      u6175 0C5A  
                                    u6095 0C14                                      u8007 1D30  
                                    u6192 0C92                                      u5473 1559  
                                    u7153 1E73                                      u5545 1D8C  
                                    u7305 1F0A                                      u8017 1CC0  
                                    u6345 0D30                                      u6193 0C97  
                                    u6194 0C98                                      u5483 15BB  
                                    u8107 17FA                                      u7083 16A7  
                                    u8027 1210                                      u5635 1C53  
                                    u7315 1F1C                                      u6195 0C9D  
                                    u6196 0C9E                                      u8117 08DB  
                                    u7093 16B8                                      u8037 19CC  
                                    u5565 1D98                                      u6605 06AB  
                                    u5645 1C5C                                      u5813 1CB8  
                                    u7245 1E24                                      u8127 0995  
                                    u5743 083F                                      u8047 1C33  
                                    u5575 1DA4                                      u6535 05BE  
                                    u8137 15DE                                      u5753 0850  
                                    u8057 1D7B                                      u5585 1DAE  
                                    u7505 0A4F                                      u7361 109F  
                                    u7362 10A0                                      u8147 168E  
                                    u5763 08B8                                      u8067 1A8E  
                                    u5675 1ACC                                      u6635 06E2  
                                    u7275 1EE7                                      u7363 10A5  
                                    u7364 10A6                                      u8077 1307  
                                    u6645 06FA                                      u6565 0617  
                                    u5925 1FE7                                      u6805 1126  
                                    u7525 0A5A                                      u7381 10C5  
                                    u7365 10AB                                      u7382 10C6  
                                    u7366 10AC                                      u5783 0904  
                                    u8087 1352                                      u6735 0749  
                                    u7295 1EF5                                      u7535 0A6F  
                                    u7383 10CB                                      u7703 1D27  
                                    u7384 10CC                                      u8097 173D  
                                    u6745 0767                                      u6665 0705  
                                    u5865 1FB0                                      u6825 1142  
                                    u7385 10D1                                      u7386 10D2  
                                    u6755 077F                                      u6845 1157  
                                    u7565 0A8F                                      u5895 1FCF  
                                    u7655 0ADE                                      u7495 0A46  
                                    u7665 0AFC                                      u7585 0A9A  
                                    u6970 1225                                      u6971 1226  
                                    u7675 0B17                                      u6980 1253  
                                    u6972 122B                                      u6981 1254  
                                    u6973 122C                                      u6965 1EBA  
                                    u6885 1172                                      u6982 1259  
                                    u6983 125A                                      u7695 1BE4  
                                    u7997 144B                                      _RSEN 0489  
                                    _WPUB 0095                      PROCULUS_Buzzer@vetor 0059  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
        __end_of_I2C_Master_RepeatedStart 18D3                                      _main 1443  
                                    _hora 00E6                                      _itoa 1A55  
       __size_of_EEPROM_24C1025_Write_Int 0020                                      btemp 007E  
                                    _utoa 1F31         __size_of_EEPROM_24C1025_Write_Str 00E9  
               ?_EEPROM_24C1025_Write_Int 004E                             __CFG_BOREN$ON 0000  
               ?_EEPROM_24C1025_Write_Str 0022               __size_of_EEPROM_Read_String 0020  
                                    start 0012                          __end_of_ADC_init 190B  
                        _BALANCE_RESISTOR 184C                           ___fldiv@new_exp 0053  
      EEPROM_24C1025_Read_Buffer@sizedata 002A                                     ??_isr 0070  
                        ?_I2C_Master_Init 002E                          ?_I2C_Master_Read 0020  
                        ?_I2C_Master_Wait 0070                          ?_I2C_Master_Stop 0070  
                          ?_USART_put_int 004E                             ___fltol@sign1 004C  
                         __end_of___fladd 0D69                                     ?_main 0070  
                                   _ACKEN 048C                                     _ACKDT 048D  
                         __end_of___fldiv 0B3C                                     ?_itoa 0031  
                                   _EEADR 010D                           __end_of___flmul 07B1  
                         __end_of___flsub 1A15                           __end_of___fltol 2000  
                                   _ANSEL 0188                           __end_of___lldiv 1F31  
                                   ?_utoa 0028                                     _T1CON 0010  
                         __end_of___lwdiv 1DBD                                     i1l505 1380  
                         __end_of___lwmod 1C6B                                     i1l523 1437  
                                   i1l507 1391                                     i1l509 139F  
                                   _RCREG 001A                                     _TMR1H 000F  
                                   _TMR1L 000E                                     _SPBRG 0099  
                                   _PORTA 0005                                     _PORTB 0006  
                                   _PORTC 0007                                     _PORTE 0009  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087           EEPROM_24C1025_Read_Int@chip_add 003A  
                                   _TRISE 0089                                     _TXREG 0019  
                   ADC_Media_10bits@canal 0046                           __end_of_captura 1900  
                           __CFG_PWRTE$ON 0000                              _usart_buffer 0190  
                   ADC_Media_10bits@value 0047                 EEPROM_Read_Integer@result 0028  
                                   _canal 00E4              __size_of_EEPROM_Read_Integer 002A  
                                   _count 00D9                                     _errno 00D5  
           ??_EEPROM_24C1025_Write_Buffer 0029        __size_of_EEPROM_24C1025_Write_Byte 0016  
                                   _texto 01BA                ?_EEPROM_24C1025_Write_Byte 002F  
                                   pclath 000A                                     utoa@c 002F  
                                   utoa@v 002D                                     status 0003  
                                   wtemp0 007E           EEPROM_24C1025_Read_Byte@mem_add 0034  
                            __end_of_BETA 184C                   __size_of_PROCULUS_Delay 001D  
                          __CFG_MCLRE$OFF 0000         __size_of_PROCULUS_VP_Write_String 0017  
                             ?_USART_init 0020                           __initialization 0015  
               ?_PROCULUS_VP_Write_String 005A                               ?_USART_putc 0070  
                            __end_of_main 1532                              __end_of_itoa 1A75  
                            __end_of_utoa 1F95                            Send_To_MB@size 0021  
                        _USART_put_buffer 1ADC                  __end_of_EEPROM_Read_Byte 1A97  
                                  ??_main 006A                                    ??_itoa 0035  
                        __end_of_Save_Log 126F                                    ??_utoa 002C  
                        _USART_put_string 1C6B                     EEPROM_Write_Byte@addr 0023  
                   EEPROM_Write_Byte@dado 0020                __size_of_EEPROM_Write_Byte 003C  
                       ?_I2C_Master_Start 0070                 EEPROM_Write_Byte@last_GIE 0024  
                       ?_I2C_Master_Write 0020                        ??_I2C_Master_Start 0020  
                                  _ADCON1 009F                        ??_I2C_Master_Write 0022  
               PROCULUS_Show_Screen@vetor 0059                                    _ADRESH 001E  
                                  _ADRESL 009E                                    _EEDATA 010C  
                                  _EECON2 018D                                _Send_To_MB 0800  
                   EEPROM_Write_Integer@i 002C                                    _ANSELH 0189  
            __end_of_PROCULUS_Show_Screen 1930                                    i1l5600 1412  
                                  i1l5540 1383                                    i1l5532 1366  
                                  i1l5552 13A0                                    i1l5536 1375  
                                  i1l5546 1393                                    i1l5576 13D0  
                                  i1l5594 1406                                    i1l5596 140B  
                                  i1l5598 13DF         __end_of_EEPROM_24C1025_Write_Byte 1946  
                                  u538_25 13F8                              ?_my_delay_ms 0020  
                                  _TMR1IE 0460                                    _TMR1CS 0081  
                ?_EEPROM_24C1025_Fill_All 0058                                    _SSPADD 0093  
                                  _TRISC3 043B                                    _TRISC4 043C  
                                  _TRISC6 043E                                    _TRISC7 043F  
                                  _SSPCON 0014                                    _SSPBUF 0013  
          EEPROM_24C1025_Fill_All@mem_add 005B                          __end_of___xxtofl 1190  
                      PROCULUS_VP_Write@i 0059                  __end_of_Decodify_Command 04BC  
                ?_EEPROM_24C1025_Read_Int 0034                  ?_EEPROM_24C1025_Read_Str 0026  
                _I2C_Master_RepeatedStart 18CE      __size_of_EEPROM_24C1025_Write_Buffer 0162  
                                  ___flge 105A                                 ??___fladd 0052  
                               ??___fldiv 0049                                 ??___flmul 0031  
                               ??___flsub 0066                                 ??___fltol 0047  
                         ??_USART_put_int 0050                                 ??___lldiv 0028  
                                  _header 00DB                         __end_of_ROOM_TEMP 1820  
                               ??___lwdiv 0024                                 ??___lwmod 0024  
                                  _buffer 0110                         _USART_to_Protocol 1E76  
                         USART_putc@value 0020                                    _minuto 00E5  
                               ??_captura 0022                        ?_USART_to_Protocol 0070  
            Decodify_Command@add_24LCxxxx 00C9                                    _strcat 1B7D  
                                  _strcpy 19D9                                    _strlen 19A3  
       EEPROM_24C1025_Read_Buffer@mem_add 0026          __end_of_EEPROM_24C1025_Read_Byte 19A3  
                      __size_of__Umul8_16 0023                                    saved_w 007E  
       EEPROM_24C1025_Write_Byte@chip_add 0034                                 ?_ADC_init 0070  
                     ??_USART_to_Protocol 0020                       __size_of_USART_init 003C  
                     __size_of_USART_putc 0010                  __end_of_MediaPlacaVaccum 1000  
                              ___flge@ff1 0020                                ___flge@ff2 0024  
                            ___xxtofl@arg 003D                              ___xxtofl@exp 003C  
                            ___xxtofl@val 0033                          __end_oflog@coeff 1848  
                 __end_of__initialization 0032       PROCULUS_Control_Register_Write@size 0052  
                              ___fltol@f1 0043                              _Board_Number 00E3  
                __end_of_ADC_Media_10bits 105A                            __pcstackCOMMON 0070  
                __size_of_PROCULUS_Buzzer 0022                 __end_of_USART_to_Protocol 1ED3  
                   USART_put_string@vetor 0021                       my_delay_ms_WDT@time 0020  
           __size_of_EEPROM_Write_Integer 0032                  __size_of_my_delay_ms_WDT 0038  
                          _OPTION_REGbits 0081                   __size_of_ADC_Max_10Bits 003E  
                __end_of_BALANCE_RESISTOR 1850          __end_of_EEPROM_24C1025_Write_Int 1A35  
                      Decodify_Command@hh 00A0                        Decodify_Command@mm 00AA  
        __end_of_EEPROM_24C1025_Write_Str 1358                        Decodify_Command@ss 00B4  
                    USART_put_buffer@loop 0026                      USART_put_buffer@size 0021  
                              ??_ADC_init 0020               __end_of_EEPROM_Write_String 1B7D  
         __end_of_EEPROM_24C1025_Fill_All 1E76                               ?_Send_To_MB 0070  
                  __size_of_Send_Reply_OK 0009                                __pbssBANK1 00CD  
                              __pbssBANK2 0110                                __pbssBANK3 0190  
                      _RESISTOR_ROOM_TEMP 1818           __end_of_EEPROM_24C1025_Read_Int 1B28  
         __end_of_EEPROM_24C1025_Read_Str 1800                  ?_Package_Usart_is_for_me 0070  
                               ?_Save_Log 0058                            _PROCULUS_Delay 19BC  
                       __end_of__Umul8_16 1ADC                                __pmaintext 1443  
                                 ?___flge 0020                       Save_Log@add_datalog 0058  
                     _EEPROM_Read_Integer 1B28                PROCULUS_Show_Screen@screen 0056  
                              __pintentry 0004                      _PROCULUS_Show_Screen 191B  
                      ADC_Max_10Bits@Temp 002E                                   ?_strcat 0020  
                                 _T1CKPS0 0084                                   _T1CKPS1 0085  
                                 ?_strcpy 0020                                   ?_strlen 0020  
                       MediaPlacaVaccum@i 00A9                                 ?___xxtofl 0033  
                                 _MAX_ADC 1820                      ?_EEPROM_Read_Integer 0023  
                   Decodify_Command@dados 00BE               EEPROM_24C1025_Read_Int@data 003B  
                                 _SSPCON2 0091          __end_of_PROCULUS_VP_Write_String 1973  
                 EEPROM_Read_Integer@addr 0026                                   _SSPSTAT 0094  
                _EEPROM_24C1025_Read_Byte 198A                                __stringtab 1800  
                     PROCULUS_VP_Write@vp 0052               ??_EEPROM_24C1025_Write_Byte 0034  
                __end_of_USART_put_buffer 1B00                __end_of_EEPROM_Read_String 1A55  
                  __end_of_PROCULUS_Delay 19D9                  __end_of_USART_put_string 1C9E  
                    __size_of_my_delay_ms 0037                                ??_Save_Log 005C  
                         PROCULUS_Delay@i 0024                                   _Vaccum0 00D1  
                            ??_USART_init 0024               EEPROM_24C1025_Read_Str@ctrl 0030  
                                 _Tensao1 00CD                              ??_USART_putc 0020  
              __size_of_USART_to_Protocol 005D               PROCULUS_Buzzer@time_ms_x_10 0056  
                         __size_of___flge 0093                                   ___fladd 0B3C  
                                 ___fldiv 099B                  EEPROM_Write_Integer@addr 002B  
                                 ___flmul 04BC                  EEPROM_Write_Integer@dado 0025  
                                 ___flsub 19F7                                   ___fltol 1F95  
                                 ___lldiv 1ED3                                   ___lwdiv 1D81  
                                 ___lwmod 1C39                             _Send_Reply_OK 18ED  
                     __size_of_Send_To_MB 0028                     ?_PROCULUS_Show_Screen 0056  
                                 _captura 18F6                          _statuspower_memo 007C  
                                 __ptext1 1D0D                                   __ptext2 1DBD  
                                 __ptext3 0D69                                   __ptext4 19F7  
                                 __ptext5 0B3C                                   __ptext6 105A  
                                 __ptext7 099B                                   __ptext8 1973  
                                 __ptext9 1004                         ??_PROCULUS_Buzzer 0058  
                                 _destino 00E2                         ?_EEPROM_Read_Byte 0070  
                         __size_of_strcat 002C                           __size_of_strcpy 001E  
                         __size_of_strlen 0019                              __size_of_isr 00EB  
                              ??___xxtofl 0037                        ??_EEPROM_Read_Byte 0020  
                                 _segundo 00E7                  __size_of_I2C_Master_Init 0031  
                __size_of_I2C_Master_Read 002D                            _usart_protocol 01CA  
                   ??_EEPROM_Read_Integer 0025                  __size_of_I2C_Master_Wait 0008  
                __size_of_I2C_Master_Stop 0005             EEPROM_24C1025_Write_Int@local 0056  
                                 _pointer 00E1             EEPROM_24C1025_Write_Byte@data 0033  
                                 clrloop0 07F9                        __end_of_USART_init 1DF9  
         __end_of_Package_Usart_is_for_me 198A                        __end_of_USART_putc 191B  
                       ADC_Media_10bits@i 0049                      end_of_initialization 0032  
                _EEPROM_24C1025_Write_Int 1A15                         ??_my_delay_ms_WDT 0024  
                _EEPROM_24C1025_Write_Str 126F                ??_I2C_Master_RepeatedStart 0020  
                                 itoa@buf 0037                                   itoa@val 0031  
                         ?_PROCULUS_Delay 0020                           my_delay_ms@time 0020  
         EEPROM_24C1025_Write_Buffer@data 0027           EEPROM_24C1025_Write_Buffer@ctrl 002E  
               __size_of_I2C_Master_Start 0009                 __size_of_I2C_Master_Write 0009  
                       ?_Decodify_Command 0070                           ___lldiv@divisor 0020  
                         ___lldiv@counter 002D                        ??_Decodify_Command 0060  
                               _RCSTAbits 0018                          I2C_Master_Init@c 002E  
                        I2C_Master_Read@a 0020                            ?_Send_Reply_OK 0070  
                                 utoa@buf 0030                 _EEPROM_24C1025_Write_Byte 1930  
                                 utoa@val 0028          __size_of_EEPROM_24C1025_Fill_All 003F  
                                 strlen@s 0024                        USART_to_Protocol@i 0022  
                               _PORTAbits 0005                                 _PORTBbits 0006  
                               _PORTCbits 0007                          _Delay_Led_Memory 007A  
            ??_EEPROM_24C1025_Read_Buffer 002D             EEPROM_24C1025_Write_Str@range 002A  
                               _ROOM_TEMP 181C                            _ADC_Max_10Bits 1DF9  
                             ___fladd@grs 005D          __size_of_EEPROM_24C1025_Read_Int 0028  
        __size_of_EEPROM_24C1025_Read_Str 016C                             ___xxtofl@sign 003B  
     __end_of_EEPROM_24C1025_Write_Buffer 1694               _EEPROM_24C1025_Write_Buffer 1532  
                             ___fldiv@grs 0055                               ___fldiv@rem 004E  
    PROCULUS_Control_Register_Write@vetor 0054          EEPROM_24C1025_Write_Buffer@count 002B  
         EEPROM_24C1025_Write_Int@mem_add 004E          EEPROM_24C1025_Write_Buffer@range 002D  
                       __size_of_ADC_init 000B                   Decodify_Command@tempint 00C1  
                       ?_MediaPlacaVaccum 0070                     PROCULUS_VP_Write@size 0056  
         EEPROM_24C1025_Read_Str@chip_add 002E                               ___flmul@grs 0039  
                      ??_MediaPlacaVaccum 0066                  _PROCULUS_VP_Write_String 195C  
                               _TXSTAbits 0098       __size_of_EEPROM_24C1025_Read_Buffer 0173  
                       ?_ADC_Media_10bits 0041                    PROCULUS_Delay@tempo_ms 0020  
                  ??_PROCULUS_Show_Screen 0058                        ??_ADC_Media_10bits 0045  
                          __end_of___flge 10ED                     __end_of_USART_put_int 195C  
                  __end_of_ADC_Max_10Bits 1E37                               _BAUDCTLbits 0187  
                          __end_of_strcat 1BA9                            __end_of_strcpy 19F7  
                          __end_of_strlen 19BC                       start_initialization 0015  
                             __end_of_isr 1443                               USART_init@i 0026  
                            ??_Send_To_MB 0021                         ??_I2C_Master_Init 0032  
                       ??_I2C_Master_Read 0022                         ??_I2C_Master_Wait 0020  
                       ??_I2C_Master_Stop 0020              __end_of_EEPROM_Write_Integer 1C39  
        EEPROM_24C1025_Write_Int@chip_add 0055                  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                     Decodify_Command@add 00C0                     USART_put_buffer@vetor 0025  
                         ??_Send_Reply_OK 0025                                  ??___flge 0028  
                       __size_of_Save_Log 00DF                                 __Umul8_16 1AB9  
                      __end_of_Send_To_MB 0828          __size_of_Package_Usart_is_for_me 0017  
                         ?_ADC_Max_10Bits 002A                                  ??_strcat 0022  
                                ??_strcpy 0021                                  ??_strlen 0022  
              ??_EEPROM_24C1025_Read_Byte 0038        EEPROM_24C1025_Write_Buffer@mem_add 0022  
                               ___fladd@a 004E                                 ___fladd@b 004A  
        EEPROM_24C1025_Write_Byte@mem_add 002F                                 ___fldiv@a 0041  
                               ___fldiv@b 0045                                 ___flmul@a 002D  
                               ___flmul@b 0029                               __pbssCOMMON 0078  
                               ___flsub@a 005E                                 ___flsub@b 0062  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                         _PROCULUS_VP_Write 07B1  
                       __size_of___xxtofl 00A3                        ?_PROCULUS_VP_Write 0052  
                     USART_put_buffer@ptr 0027                         ?_USART_put_buffer 0021  
            __size_of_EEPROM_Write_String 002B                          _I2C_Master_Start 18DB  
                      ??_USART_put_buffer 0023                          _I2C_Master_Write 18E4  
                     ??_PROCULUS_VP_Write 0057                            _tempodecorrido 00D7  
                       ?_USART_put_string 0021                           _PROCULUS_Buzzer 1A97  
                        ___lwdiv@dividend 0022            Package_Usart_is_for_me@retorno 0020  
                      ??_USART_put_string 0023                                  ?___fladd 004A  
                                ?___fldiv 0041                   _EEPROM_24C1025_Fill_All 1E37  
                                ?___flmul 0029                                  ?___flsub 005E  
                                ?___fltol 0043                                  ?___lldiv 0020  
                              ?__Umul8_16 0020                        _EEPROM_Read_String 1A35  
                                ?___lwdiv 0020                                  ?___lwmod 0020  
      __end_of_EEPROM_24C1025_Read_Buffer 099B                _EEPROM_24C1025_Read_Buffer 0828  
                   MediaPlacaVaccum@Valor 00A0                                  ?_captura 0020  
                               __pstrings 1800                     MediaPlacaVaccum@canal 00A4  
                         _my_delay_ms_WDT 1D0D                   _EEPROM_24C1025_Read_Int 1B00  
                 _EEPROM_24C1025_Read_Str 1694                    EEPROM_Read_Integer@ptr 0027  
              ??_EEPROM_24C1025_Write_Int 0054                ??_EEPROM_24C1025_Write_Str 0027  
                     ?_EEPROM_Read_String 0023                 __end_of_PROCULUS_VP_Write 07F8  
              EEPROM_24C1025_Read_Str@cnt 002D                                  _ADC_init 1900  
                        ___lwdiv@quotient 0026                   EEPROM_Write_Integer@ptr 002A  
                        ??_PROCULUS_Delay 0022                       ADC_Max_10Bits@canal 002D  
          EEPROM_24C1025_Read_Buffer@data 002B            EEPROM_24C1025_Read_Buffer@ctrl 0033  
                     ADC_Max_10Bits@value 0030                             ??_my_delay_ms 0024  
               __size_of_EEPROM_Read_Byte 0022                         interrupt_function 0004  
         EEPROM_24C1025_Write_Str@mem_add 0022                      ??_EEPROM_Read_String 0024  
                               clear_ram0 07F8                                  _PIE1bits 008C  
                                _PIR1bits 000C          PROCULUS_Control_Register_Write@i 0055  
                  Decodify_Command@OutPut 00C3                           _PT100_TRANSLADA 1810  
                         _Delay_Led_Usart 00DF              EEPROM_24C1025_Read_Byte@data 0039  
             __end_of_EEPROM_Read_Integer 1B52                                _ADCON0bits 001F  
                             __stringbase 180F                                _ADCON1bits 009F  
               __size_of_Decodify_Command 0486                      _EEPROM_Write_Integer 1C07  
          EEPROM_24C1025_Read_Int@mem_add 0034                                 main@reset 006D  
              ??_PROCULUS_VP_Write_String 005D                       I2C_Master_Read@temp 0024  
                 __end_of_PROCULUS_Buzzer 1AB9                            _generic_status 00E9  
                              _EECON1bits 018C                                  _Save_Log 1190  
               ??_EEPROM_24C1025_Fill_All 005A                       __end_of_my_delay_ms 1CD5  
            EEPROM_24C1025_Read_Str@range 002F              EEPROM_24C1025_Read_Str@texto 002A  
                 __end_of_my_delay_ms_WDT 1D45                              my_delay_ms@i 0026  
                             ??__Umul8_16 0022                 __size_of_MediaPlacaVaccum 0297  
       __size_of_I2C_Master_RepeatedStart 0005                          __size_of___fladd 022D  
               ??_EEPROM_24C1025_Read_Int 0038                   _Package_Usart_is_for_me 1973  
                        __size_of___fldiv 01A1                 ??_EEPROM_24C1025_Read_Str 002B  
                        __size_of___flmul 02F5                 ?_I2C_Master_RepeatedStart 0070  
                        __size_of___flsub 001E                          __size_of___fltol 006B  
                        __size_of___lldiv 005E                          __size_of___lwdiv 003C  
                        __size_of___lwmod 0032                        __end_of__stringtab 1810  
     EEPROM_24C1025_Write_Buffer@chip_add 002C                       USART_put_string@ptr 0023  
                        __size_of_captura 000A                     ?_EEPROM_Write_Integer 0025  
                         _I2C_Master_Init 1BD6                           _I2C_Master_Read 1BA9  
                                ___xxtofl 10ED                __size_of_PROCULUS_VP_Write 0047  
                         _I2C_Master_Wait 18D3                                strcat@from 0020  
        EEPROM_24C1025_Read_Byte@chip_add 0038                           _I2C_Master_Stop 18C9  
               __size_of_ADC_Media_10bits 0056                           ___lwdiv@divisor 0020  
                         ___lwdiv@counter 0025                                  __ptext10 10ED  
                                __ptext11 1DF9                                  __ptext20 1F31  
                                __ptext12 1C9E                                  __ptext21 1C39  
                                __ptext13 18F6                                  __ptext30 1AB9  
                                __ptext22 1E76                                  __ptext14 1BD6  
                                __ptext31 195C                                  __ptext23 1ADC  
                                __ptext15 1ED3                                  __ptext40 19BC  
                                __ptext32 19A3                                  __ptext24 0800  
                                __ptext16 0036                                  __ptext41 1B52  
                                __ptext33 07B1                                  __ptext25 18ED  
                                __ptext17 19D9                                  __ptext50 1B00  
                                __ptext42 1C07                                  __ptext34 191B  
                                __ptext26 1C6B                                  __ptext18 1B7D  
                                __ptext51 198A                                  __ptext43 1D45  
                                __ptext35 1A97                                  __ptext27 1190  
                                __ptext19 1A55                                  __ptext60 18DB  
                                __ptext52 0828                                  __ptext44 1A35  
                                __ptext36 1D81                                  __ptext28 1F95  
                                __ptext61 18D3                                  __ptext53 18CE  
                                __ptext45 1B28                                  __ptext37 1CD5  
                                __ptext29 04BC                                  __ptext62 1900  
                                __ptext54 1BA9                                  __ptext46 1A75  
                                __ptext38 1946                                  __ptext63 1358  
                                __ptext55 1E37                                  __ptext47 126F  
                                __ptext39 190B                                  __ptext56 1A15  
                                __ptext48 1930                                  __ptext57 1532  
                                __ptext49 1694                                  __ptext58 18E4  
                                __ptext59 18C9                         __CFG_BOR4V$BOR40V 0000  
                      USART_put_int@value 004E                            _PT100_CONSTANT 1814  
                    MediaPlacaVaccum@Temp 00A5                                strcpy@from 0020  
                           __size_of_main 00EF                             __size_of_itoa 0020  
                           __size_of_utoa 0064              EEPROM_24C1025_Fill_All@value 0058  
              PROCULUS_VP_Write_String@vp 005A                   __end_of_PT100_TRANSLADA 1814  
     EEPROM_24C1025_Write_Buffer@sizedata 0026                               _milisegundo 00DD  
                        ??_ADC_Max_10Bits 002C                            _Delay_Led_Tmr0 0078  
           __size_of_PROCULUS_Show_Screen 0015                       _EEPROM_Write_String 1B52  
                                log@coeff 1824                  __end_of_I2C_Master_Start 18E4  
                __end_of_I2C_Master_Write 18ED                                _INTCONbits 000B  
                  __end_of_PT100_CONSTANT 1818                                  isr@tempo 0076  
                                itoa@base 0033                      EEPROM_Read_Byte@addr 0022  
                  EEPROM_Read_String@addr 0025                    EEPROM_Read_String@dado 0023  
                        my_delay_ms_WDT@i 0026                                  intlevel1 0000  
                        ?_PROCULUS_Buzzer 0056                         USART_put_int@dado 0051  
                        _EEPROM_Read_Byte 1A75                               _my_delay_ms 1C9E  
                        ___lwmod@dividend 0022                      ?_EEPROM_Write_String 0025  
                        ___lldiv@dividend 0024                    __size_of_USART_put_int 0016  
            EEPROM_24C1025_Write_Int@data 0052                      EEPROM_Read_Integer@i 002A  
                 EEPROM_Write_String@addr 0027                   EEPROM_Write_String@dado 0025  
                      USART_init@baudrate 0020                                 stringcode 180A  
                              _OSCCONbits 008F                 ??_Package_Usart_is_for_me 0020  
                        ?_my_delay_ms_WDT 0020                     __end_of_Send_Reply_OK 18F6  
                 __end_of_I2C_Master_Init 1C07                   __end_of_I2C_Master_Read 1BD6  
                 __end_of_I2C_Master_Wait 18DB                   __end_of_I2C_Master_Stop 18CE  
            EEPROM_24C1025_Write_Str@data 0026              EEPROM_24C1025_Write_Str@ctrl 002B  
               __size_of_USART_put_buffer 0024               ?_EEPROM_24C1025_Read_Buffer 0026  
         EEPROM_24C1025_Fill_All@chip_add 005A                    ??_EEPROM_Write_Integer 0027  
                                utoa@base 002A                    __Umul8_16@multiplicand 0020  
         USART_to_Protocol@usart_protocol 0024                          _Decodify_Command 0036  
                                strcat@cp 0023                                  strcat@to 0024  
               __size_of_USART_put_string 0033                          ___lldiv@quotient 0029  
                       I2C_Master_Write@d 0020                           ___lwmod@divisor 0020  
                                strcpy@cp 0023                                  strlen@cp 0023  
                                strcpy@to 0022                           ___lwmod@counter 0025  
                                stringdir 180A                                  stringtab 1800  
                       _EEPROM_Write_Byte 1D45            EEPROM_24C1025_Read_Str@mem_add 0026  
                           ___fladd@signs 005A                        ?_EEPROM_Write_Byte 0020  
                   ??_EEPROM_Write_String 0026                              ___fladd@aexp 005B  
                            ___fladd@bexp 005C         __size_of_EEPROM_24C1025_Read_Byte 0019  
               ?_EEPROM_24C1025_Read_Byte 0034                       EEPROM_Read_String@c 0026  
                    __Umul8_16@multiplier 0028                       ??_EEPROM_Write_Byte 0021  
                       __Umul8_16@product 0024                                _USART_init 1DBD  
