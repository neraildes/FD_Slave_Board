

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Oct 06 15:49:55 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og9 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 2.20
    78                           ; Generated 09/04/2020 GMT
    79                           ; 
    80                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F886 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0093                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0095                     	;# 
   162  0096                     	;# 
   163  0097                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  0105                     	;# 
   173  0107                     	;# 
   174  0108                     	;# 
   175  0109                     	;# 
   176  010C                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  0185                     	;# 
   182  0187                     	;# 
   183  0188                     	;# 
   184  0189                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0009                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  000D                     	;# 
   200  000E                     	;# 
   201  000E                     	;# 
   202  000F                     	;# 
   203  0010                     	;# 
   204  0011                     	;# 
   205  0012                     	;# 
   206  0013                     	;# 
   207  0014                     	;# 
   208  0015                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001B                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  001D                     	;# 
   219  001E                     	;# 
   220  001F                     	;# 
   221  0081                     	;# 
   222  0085                     	;# 
   223  0086                     	;# 
   224  0087                     	;# 
   225  0089                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  008F                     	;# 
   230  0090                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0095                     	;# 
   238  0096                     	;# 
   239  0097                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  0105                     	;# 
   249  0107                     	;# 
   250  0108                     	;# 
   251  0109                     	;# 
   252  010C                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  0185                     	;# 
   258  0187                     	;# 
   259  0188                     	;# 
   260  0189                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0009                     	;# 
   272  000A                     	;# 
   273  000B                     	;# 
   274  000C                     	;# 
   275  000D                     	;# 
   276  000E                     	;# 
   277  000E                     	;# 
   278  000F                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0013                     	;# 
   283  0014                     	;# 
   284  0015                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0017                     	;# 
   288  0018                     	;# 
   289  0019                     	;# 
   290  001A                     	;# 
   291  001B                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  001D                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  0081                     	;# 
   298  0085                     	;# 
   299  0086                     	;# 
   300  0087                     	;# 
   301  0089                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  008E                     	;# 
   305  008F                     	;# 
   306  0090                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0093                     	;# 
   312  0094                     	;# 
   313  0095                     	;# 
   314  0096                     	;# 
   315  0097                     	;# 
   316  0098                     	;# 
   317  0099                     	;# 
   318  009A                     	;# 
   319  009B                     	;# 
   320  009C                     	;# 
   321  009D                     	;# 
   322  009E                     	;# 
   323  009F                     	;# 
   324  0105                     	;# 
   325  0107                     	;# 
   326  0108                     	;# 
   327  0109                     	;# 
   328  010C                     	;# 
   329  010C                     	;# 
   330  010D                     	;# 
   331  010E                     	;# 
   332  010F                     	;# 
   333  0185                     	;# 
   334  0187                     	;# 
   335  0188                     	;# 
   336  0189                     	;# 
   337  018C                     	;# 
   338  018D                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0009                     	;# 
   348  000A                     	;# 
   349  000B                     	;# 
   350  000C                     	;# 
   351  000D                     	;# 
   352  000E                     	;# 
   353  000E                     	;# 
   354  000F                     	;# 
   355  0010                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0013                     	;# 
   359  0014                     	;# 
   360  0015                     	;# 
   361  0015                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001B                     	;# 
   369  001C                     	;# 
   370  001D                     	;# 
   371  001E                     	;# 
   372  001F                     	;# 
   373  0081                     	;# 
   374  0085                     	;# 
   375  0086                     	;# 
   376  0087                     	;# 
   377  0089                     	;# 
   378  008C                     	;# 
   379  008D                     	;# 
   380  008E                     	;# 
   381  008F                     	;# 
   382  0090                     	;# 
   383  0091                     	;# 
   384  0092                     	;# 
   385  0093                     	;# 
   386  0093                     	;# 
   387  0093                     	;# 
   388  0094                     	;# 
   389  0095                     	;# 
   390  0096                     	;# 
   391  0097                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  009F                     	;# 
   400  0105                     	;# 
   401  0107                     	;# 
   402  0108                     	;# 
   403  0109                     	;# 
   404  010C                     	;# 
   405  010C                     	;# 
   406  010D                     	;# 
   407  010E                     	;# 
   408  010F                     	;# 
   409  0185                     	;# 
   410  0187                     	;# 
   411  0188                     	;# 
   412  0189                     	;# 
   413  018C                     	;# 
   414  018D                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  000E                     	;# 
   429  000E                     	;# 
   430  000F                     	;# 
   431  0010                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0013                     	;# 
   435  0014                     	;# 
   436  0015                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  001D                     	;# 
   447  001E                     	;# 
   448  001F                     	;# 
   449  0081                     	;# 
   450  0085                     	;# 
   451  0086                     	;# 
   452  0087                     	;# 
   453  0089                     	;# 
   454  008C                     	;# 
   455  008D                     	;# 
   456  008E                     	;# 
   457  008F                     	;# 
   458  0090                     	;# 
   459  0091                     	;# 
   460  0092                     	;# 
   461  0093                     	;# 
   462  0093                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0095                     	;# 
   466  0096                     	;# 
   467  0097                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009A                     	;# 
   471  009B                     	;# 
   472  009C                     	;# 
   473  009D                     	;# 
   474  009E                     	;# 
   475  009F                     	;# 
   476  0105                     	;# 
   477  0107                     	;# 
   478  0108                     	;# 
   479  0109                     	;# 
   480  010C                     	;# 
   481  010C                     	;# 
   482  010D                     	;# 
   483  010E                     	;# 
   484  010F                     	;# 
   485  0185                     	;# 
   486  0187                     	;# 
   487  0188                     	;# 
   488  0189                     	;# 
   489  018C                     	;# 
   490  018D                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0009                     	;# 
   500  000A                     	;# 
   501  000B                     	;# 
   502  000C                     	;# 
   503  000D                     	;# 
   504  000E                     	;# 
   505  000E                     	;# 
   506  000F                     	;# 
   507  0010                     	;# 
   508  0011                     	;# 
   509  0012                     	;# 
   510  0013                     	;# 
   511  0014                     	;# 
   512  0015                     	;# 
   513  0015                     	;# 
   514  0016                     	;# 
   515  0017                     	;# 
   516  0018                     	;# 
   517  0019                     	;# 
   518  001A                     	;# 
   519  001B                     	;# 
   520  001B                     	;# 
   521  001C                     	;# 
   522  001D                     	;# 
   523  001E                     	;# 
   524  001F                     	;# 
   525  0081                     	;# 
   526  0085                     	;# 
   527  0086                     	;# 
   528  0087                     	;# 
   529  0089                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  008F                     	;# 
   534  0090                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0093                     	;# 
   538  0093                     	;# 
   539  0093                     	;# 
   540  0094                     	;# 
   541  0095                     	;# 
   542  0096                     	;# 
   543  0097                     	;# 
   544  0098                     	;# 
   545  0099                     	;# 
   546  009A                     	;# 
   547  009B                     	;# 
   548  009C                     	;# 
   549  009D                     	;# 
   550  009E                     	;# 
   551  009F                     	;# 
   552  0105                     	;# 
   553  0107                     	;# 
   554  0108                     	;# 
   555  0109                     	;# 
   556  010C                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  0185                     	;# 
   562  0187                     	;# 
   563  0188                     	;# 
   564  0189                     	;# 
   565  018C                     	;# 
   566  018D                     	;# 
   567  0000                     	;# 
   568  0001                     	;# 
   569  0002                     	;# 
   570  0003                     	;# 
   571  0004                     	;# 
   572  0005                     	;# 
   573  0006                     	;# 
   574  0007                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  000D                     	;# 
   580  000E                     	;# 
   581  000E                     	;# 
   582  000F                     	;# 
   583  0010                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0014                     	;# 
   588  0015                     	;# 
   589  0015                     	;# 
   590  0016                     	;# 
   591  0017                     	;# 
   592  0018                     	;# 
   593  0019                     	;# 
   594  001A                     	;# 
   595  001B                     	;# 
   596  001B                     	;# 
   597  001C                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  0081                     	;# 
   602  0085                     	;# 
   603  0086                     	;# 
   604  0087                     	;# 
   605  0089                     	;# 
   606  008C                     	;# 
   607  008D                     	;# 
   608  008E                     	;# 
   609  008F                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0092                     	;# 
   613  0093                     	;# 
   614  0093                     	;# 
   615  0093                     	;# 
   616  0094                     	;# 
   617  0095                     	;# 
   618  0096                     	;# 
   619  0097                     	;# 
   620  0098                     	;# 
   621  0099                     	;# 
   622  009A                     	;# 
   623  009B                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  009F                     	;# 
   628  0105                     	;# 
   629  0107                     	;# 
   630  0108                     	;# 
   631  0109                     	;# 
   632  010C                     	;# 
   633  010C                     	;# 
   634  010D                     	;# 
   635  010E                     	;# 
   636  010F                     	;# 
   637  0185                     	;# 
   638  0187                     	;# 
   639  0188                     	;# 
   640  0189                     	;# 
   641  018C                     	;# 
   642  018D                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  000E                     	;# 
   658  000F                     	;# 
   659  0010                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  001D                     	;# 
   675  001E                     	;# 
   676  001F                     	;# 
   677  0081                     	;# 
   678  0085                     	;# 
   679  0086                     	;# 
   680  0087                     	;# 
   681  0089                     	;# 
   682  008C                     	;# 
   683  008D                     	;# 
   684  008E                     	;# 
   685  008F                     	;# 
   686  0090                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0093                     	;# 
   690  0093                     	;# 
   691  0093                     	;# 
   692  0094                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0097                     	;# 
   696  0098                     	;# 
   697  0099                     	;# 
   698  009A                     	;# 
   699  009B                     	;# 
   700  009C                     	;# 
   701  009D                     	;# 
   702  009E                     	;# 
   703  009F                     	;# 
   704  0105                     	;# 
   705  0107                     	;# 
   706  0108                     	;# 
   707  0109                     	;# 
   708  010C                     	;# 
   709  010C                     	;# 
   710  010D                     	;# 
   711  010E                     	;# 
   712  010F                     	;# 
   713  0185                     	;# 
   714  0187                     	;# 
   715  0188                     	;# 
   716  0189                     	;# 
   717  018C                     	;# 
   718  018D                     	;# 
   719  0000                     	;# 
   720  0001                     	;# 
   721  0002                     	;# 
   722  0003                     	;# 
   723  0004                     	;# 
   724  0005                     	;# 
   725  0006                     	;# 
   726  0007                     	;# 
   727  0009                     	;# 
   728  000A                     	;# 
   729  000B                     	;# 
   730  000C                     	;# 
   731  000D                     	;# 
   732  000E                     	;# 
   733  000E                     	;# 
   734  000F                     	;# 
   735  0010                     	;# 
   736  0011                     	;# 
   737  0012                     	;# 
   738  0013                     	;# 
   739  0014                     	;# 
   740  0015                     	;# 
   741  0015                     	;# 
   742  0016                     	;# 
   743  0017                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  001B                     	;# 
   748  001B                     	;# 
   749  001C                     	;# 
   750  001D                     	;# 
   751  001E                     	;# 
   752  001F                     	;# 
   753  0081                     	;# 
   754  0085                     	;# 
   755  0086                     	;# 
   756  0087                     	;# 
   757  0089                     	;# 
   758  008C                     	;# 
   759  008D                     	;# 
   760  008E                     	;# 
   761  008F                     	;# 
   762  0090                     	;# 
   763  0091                     	;# 
   764  0092                     	;# 
   765  0093                     	;# 
   766  0093                     	;# 
   767  0093                     	;# 
   768  0094                     	;# 
   769  0095                     	;# 
   770  0096                     	;# 
   771  0097                     	;# 
   772  0098                     	;# 
   773  0099                     	;# 
   774  009A                     	;# 
   775  009B                     	;# 
   776  009C                     	;# 
   777  009D                     	;# 
   778  009E                     	;# 
   779  009F                     	;# 
   780  0105                     	;# 
   781  0107                     	;# 
   782  0108                     	;# 
   783  0109                     	;# 
   784  010C                     	;# 
   785  010C                     	;# 
   786  010D                     	;# 
   787  010E                     	;# 
   788  010F                     	;# 
   789  0185                     	;# 
   790  0187                     	;# 
   791  0188                     	;# 
   792  0189                     	;# 
   793  018C                     	;# 
   794  018D                     	;# 
   795  0000                     	;# 
   796  0001                     	;# 
   797  0002                     	;# 
   798  0003                     	;# 
   799  0004                     	;# 
   800  0005                     	;# 
   801  0006                     	;# 
   802  0007                     	;# 
   803  0009                     	;# 
   804  000A                     	;# 
   805  000B                     	;# 
   806  000C                     	;# 
   807  000D                     	;# 
   808  000E                     	;# 
   809  000E                     	;# 
   810  000F                     	;# 
   811  0010                     	;# 
   812  0011                     	;# 
   813  0012                     	;# 
   814  0013                     	;# 
   815  0014                     	;# 
   816  0015                     	;# 
   817  0015                     	;# 
   818  0016                     	;# 
   819  0017                     	;# 
   820  0018                     	;# 
   821  0019                     	;# 
   822  001A                     	;# 
   823  001B                     	;# 
   824  001B                     	;# 
   825  001C                     	;# 
   826  001D                     	;# 
   827  001E                     	;# 
   828  001F                     	;# 
   829  0081                     	;# 
   830  0085                     	;# 
   831  0086                     	;# 
   832  0087                     	;# 
   833  0089                     	;# 
   834  008C                     	;# 
   835  008D                     	;# 
   836  008E                     	;# 
   837  008F                     	;# 
   838  0090                     	;# 
   839  0091                     	;# 
   840  0092                     	;# 
   841  0093                     	;# 
   842  0093                     	;# 
   843  0093                     	;# 
   844  0094                     	;# 
   845  0095                     	;# 
   846  0096                     	;# 
   847  0097                     	;# 
   848  0098                     	;# 
   849  0099                     	;# 
   850  009A                     	;# 
   851  009B                     	;# 
   852  009C                     	;# 
   853  009D                     	;# 
   854  009E                     	;# 
   855  009F                     	;# 
   856  0105                     	;# 
   857  0107                     	;# 
   858  0108                     	;# 
   859  0109                     	;# 
   860  010C                     	;# 
   861  010C                     	;# 
   862  010D                     	;# 
   863  010E                     	;# 
   864  010F                     	;# 
   865  0185                     	;# 
   866  0187                     	;# 
   867  0188                     	;# 
   868  0189                     	;# 
   869  018C                     	;# 
   870  018D                     	;# 
   871  0000                     	;# 
   872  0001                     	;# 
   873  0002                     	;# 
   874  0003                     	;# 
   875  0004                     	;# 
   876  0005                     	;# 
   877  0006                     	;# 
   878  0007                     	;# 
   879  0009                     	;# 
   880  000A                     	;# 
   881  000B                     	;# 
   882  000C                     	;# 
   883  000D                     	;# 
   884  000E                     	;# 
   885  000E                     	;# 
   886  000F                     	;# 
   887  0010                     	;# 
   888  0011                     	;# 
   889  0012                     	;# 
   890  0013                     	;# 
   891  0014                     	;# 
   892  0015                     	;# 
   893  0015                     	;# 
   894  0016                     	;# 
   895  0017                     	;# 
   896  0018                     	;# 
   897  0019                     	;# 
   898  001A                     	;# 
   899  001B                     	;# 
   900  001B                     	;# 
   901  001C                     	;# 
   902  001D                     	;# 
   903  001E                     	;# 
   904  001F                     	;# 
   905  0081                     	;# 
   906  0085                     	;# 
   907  0086                     	;# 
   908  0087                     	;# 
   909  0089                     	;# 
   910  008C                     	;# 
   911  008D                     	;# 
   912  008E                     	;# 
   913  008F                     	;# 
   914  0090                     	;# 
   915  0091                     	;# 
   916  0092                     	;# 
   917  0093                     	;# 
   918  0093                     	;# 
   919  0093                     	;# 
   920  0094                     	;# 
   921  0095                     	;# 
   922  0096                     	;# 
   923  0097                     	;# 
   924  0098                     	;# 
   925  0099                     	;# 
   926  009A                     	;# 
   927  009B                     	;# 
   928  009C                     	;# 
   929  009D                     	;# 
   930  009E                     	;# 
   931  009F                     	;# 
   932  0105                     	;# 
   933  0107                     	;# 
   934  0108                     	;# 
   935  0109                     	;# 
   936  010C                     	;# 
   937  010C                     	;# 
   938  010D                     	;# 
   939  010E                     	;# 
   940  010F                     	;# 
   941  0185                     	;# 
   942  0187                     	;# 
   943  0188                     	;# 
   944  0189                     	;# 
   945  018C                     	;# 
   946  018D                     	;# 
   947  0000                     	;# 
   948  0001                     	;# 
   949  0002                     	;# 
   950  0003                     	;# 
   951  0004                     	;# 
   952  0005                     	;# 
   953  0006                     	;# 
   954  0007                     	;# 
   955  0009                     	;# 
   956  000A                     	;# 
   957  000B                     	;# 
   958  000C                     	;# 
   959  000D                     	;# 
   960  000E                     	;# 
   961  000E                     	;# 
   962  000F                     	;# 
   963  0010                     	;# 
   964  0011                     	;# 
   965  0012                     	;# 
   966  0013                     	;# 
   967  0014                     	;# 
   968  0015                     	;# 
   969  0015                     	;# 
   970  0016                     	;# 
   971  0017                     	;# 
   972  0018                     	;# 
   973  0019                     	;# 
   974  001A                     	;# 
   975  001B                     	;# 
   976  001B                     	;# 
   977  001C                     	;# 
   978  001D                     	;# 
   979  001E                     	;# 
   980  001F                     	;# 
   981  0081                     	;# 
   982  0085                     	;# 
   983  0086                     	;# 
   984  0087                     	;# 
   985  0089                     	;# 
   986  008C                     	;# 
   987  008D                     	;# 
   988  008E                     	;# 
   989  008F                     	;# 
   990  0090                     	;# 
   991  0091                     	;# 
   992  0092                     	;# 
   993  0093                     	;# 
   994  0093                     	;# 
   995  0093                     	;# 
   996  0094                     	;# 
   997  0095                     	;# 
   998  0096                     	;# 
   999  0097                     	;# 
  1000  0098                     	;# 
  1001  0099                     	;# 
  1002  009A                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  009F                     	;# 
  1008  0105                     	;# 
  1009  0107                     	;# 
  1010  0108                     	;# 
  1011  0109                     	;# 
  1012  010C                     	;# 
  1013  010C                     	;# 
  1014  010D                     	;# 
  1015  010E                     	;# 
  1016  010F                     	;# 
  1017  0185                     	;# 
  1018  0187                     	;# 
  1019  0188                     	;# 
  1020  0189                     	;# 
  1021  018C                     	;# 
  1022  018D                     	;# 
  1023  0000                     	;# 
  1024  0001                     	;# 
  1025  0002                     	;# 
  1026  0003                     	;# 
  1027  0004                     	;# 
  1028  0005                     	;# 
  1029  0006                     	;# 
  1030  0007                     	;# 
  1031  0009                     	;# 
  1032  000A                     	;# 
  1033  000B                     	;# 
  1034  000C                     	;# 
  1035  000D                     	;# 
  1036  000E                     	;# 
  1037  000E                     	;# 
  1038  000F                     	;# 
  1039  0010                     	;# 
  1040  0011                     	;# 
  1041  0012                     	;# 
  1042  0013                     	;# 
  1043  0014                     	;# 
  1044  0015                     	;# 
  1045  0015                     	;# 
  1046  0016                     	;# 
  1047  0017                     	;# 
  1048  0018                     	;# 
  1049  0019                     	;# 
  1050  001A                     	;# 
  1051  001B                     	;# 
  1052  001B                     	;# 
  1053  001C                     	;# 
  1054  001D                     	;# 
  1055  001E                     	;# 
  1056  001F                     	;# 
  1057  0081                     	;# 
  1058  0085                     	;# 
  1059  0086                     	;# 
  1060  0087                     	;# 
  1061  0089                     	;# 
  1062  008C                     	;# 
  1063  008D                     	;# 
  1064  008E                     	;# 
  1065  008F                     	;# 
  1066  0090                     	;# 
  1067  0091                     	;# 
  1068  0092                     	;# 
  1069  0093                     	;# 
  1070  0093                     	;# 
  1071  0093                     	;# 
  1072  0094                     	;# 
  1073  0095                     	;# 
  1074  0096                     	;# 
  1075  0097                     	;# 
  1076  0098                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009C                     	;# 
  1081  009D                     	;# 
  1082  009E                     	;# 
  1083  009F                     	;# 
  1084  0105                     	;# 
  1085  0107                     	;# 
  1086  0108                     	;# 
  1087  0109                     	;# 
  1088  010C                     	;# 
  1089  010C                     	;# 
  1090  010D                     	;# 
  1091  010E                     	;# 
  1092  010F                     	;# 
  1093  0185                     	;# 
  1094  0187                     	;# 
  1095  0188                     	;# 
  1096  0189                     	;# 
  1097  018C                     	;# 
  1098  018D                     	;# 
  1099  0000                     	;# 
  1100  0001                     	;# 
  1101  0002                     	;# 
  1102  0003                     	;# 
  1103  0004                     	;# 
  1104  0005                     	;# 
  1105  0006                     	;# 
  1106  0007                     	;# 
  1107  0009                     	;# 
  1108  000A                     	;# 
  1109  000B                     	;# 
  1110  000C                     	;# 
  1111  000D                     	;# 
  1112  000E                     	;# 
  1113  000E                     	;# 
  1114  000F                     	;# 
  1115  0010                     	;# 
  1116  0011                     	;# 
  1117  0012                     	;# 
  1118  0013                     	;# 
  1119  0014                     	;# 
  1120  0015                     	;# 
  1121  0015                     	;# 
  1122  0016                     	;# 
  1123  0017                     	;# 
  1124  0018                     	;# 
  1125  0019                     	;# 
  1126  001A                     	;# 
  1127  001B                     	;# 
  1128  001B                     	;# 
  1129  001C                     	;# 
  1130  001D                     	;# 
  1131  001E                     	;# 
  1132  001F                     	;# 
  1133  0081                     	;# 
  1134  0085                     	;# 
  1135  0086                     	;# 
  1136  0087                     	;# 
  1137  0089                     	;# 
  1138  008C                     	;# 
  1139  008D                     	;# 
  1140  008E                     	;# 
  1141  008F                     	;# 
  1142  0090                     	;# 
  1143  0091                     	;# 
  1144  0092                     	;# 
  1145  0093                     	;# 
  1146  0093                     	;# 
  1147  0093                     	;# 
  1148  0094                     	;# 
  1149  0095                     	;# 
  1150  0096                     	;# 
  1151  0097                     	;# 
  1152  0098                     	;# 
  1153  0099                     	;# 
  1154  009A                     	;# 
  1155  009B                     	;# 
  1156  009C                     	;# 
  1157  009D                     	;# 
  1158  009E                     	;# 
  1159  009F                     	;# 
  1160  0105                     	;# 
  1161  0107                     	;# 
  1162  0108                     	;# 
  1163  0109                     	;# 
  1164  010C                     	;# 
  1165  010C                     	;# 
  1166  010D                     	;# 
  1167  010E                     	;# 
  1168  010F                     	;# 
  1169  0185                     	;# 
  1170  0187                     	;# 
  1171  0188                     	;# 
  1172  0189                     	;# 
  1173  018C                     	;# 
  1174  018D                     	;# 
  1175                           
  1176                           	psect	strings
  1177  1800                     __pstrings:
  1178  1800                     stringtab:
  1179  1800                     __stringtab:
  1180                           
  1181                           ;	String table - string pointers are 1 byte each
  1182  1800  1BFF               	btfsc	btemp+1,7
  1183  1801  280A               	ljmp	stringcode
  1184  1802  1383               	bcf	3,7
  1185  1803  187F               	btfsc	btemp+1,0
  1186  1804  1783               	bsf	3,7
  1187  1805  0800               	movf	0,w
  1188  1806  0A84               	incf	4,f
  1189  1807  1903               	skipnz
  1190  1808  0AFF               	incf	btemp+1,f
  1191  1809  0008               	return
  1192  180A                     stringcode:
  1193  180A                     stringdir:
  1194  180A  3018               	movlw	high stringdir
  1195  180B  008A               	movwf	10
  1196  180C  0804               	movf	4,w
  1197  180D  0A84               	incf	4,f
  1198  180E  0782               	addwf	2,f
  1199  180F                     __stringbase:
  1200  180F  3400               	retlw	0
  1201  1810                     __end_of__stringtab:
  1202  1810                     _PT100_TRANSLADA:
  1203  1810  3466               	retlw	102
  1204  1811  3466               	retlw	102
  1205  1812  34A6               	retlw	166
  1206  1813  34BF               	retlw	191
  1207  1814                     __end_of_PT100_TRANSLADA:
  1208  1814                     _PT100_CONSTANT:
  1209  1814  3414               	retlw	20
  1210  1815  34AE               	retlw	174
  1211  1816  342B               	retlw	43
  1212  1817  34C1               	retlw	193
  1213  1818                     __end_of_PT100_CONSTANT:
  1214  1818                     _RESISTOR_ROOM_TEMP:
  1215                           
  1216                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1217  1818  3400               	retlw	0
  1218  1819  3440               	retlw	64
  1219  181A  341C               	retlw	28
  1220  181B  3446               	retlw	70
  1221  181C                     __end_of_RESISTOR_ROOM_TEMP:
  1222  181C                     _ROOM_TEMP:
  1223                           
  1224                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1225  181C  3466               	retlw	102
  1226  181D  3486               	retlw	134
  1227  181E  3496               	retlw	150
  1228  181F  3443               	retlw	67
  1229  1820                     __end_of_ROOM_TEMP:
  1230  1820                     _MAX_ADC:
  1231                           
  1232                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1233  1820  3400               	retlw	0
  1234  1821  34C0               	retlw	192
  1235  1822  347F               	retlw	127
  1236  1823  3444               	retlw	68
  1237  1824                     __end_of_MAX_ADC:
  1238  1824                     log@coeff:
  1239  1824  3400               	retlw	0
  1240  1825  3400               	retlw	0
  1241  1826  3400               	retlw	0
  1242  1827  3400               	retlw	0
  1243  1828  34C4               	retlw	196
  1244  1829  34FF               	retlw	255
  1245  182A  347F               	retlw	127
  1246  182B  343F               	retlw	63
  1247  182C  3480               	retlw	128
  1248  182D  34EF               	retlw	239
  1249  182E  34FF               	retlw	255
  1250  182F  34BE               	retlw	190
  1251  1830  3490               	retlw	144
  1252  1831  34E1               	retlw	225
  1253  1832  34A9               	retlw	169
  1254  1833  343E               	retlw	62
  1255  1834  34EC               	retlw	236
  1256  1835  3482               	retlw	130
  1257  1836  3476               	retlw	118
  1258  1837  34BE               	retlw	190
  1259  1838  3482               	retlw	130
  1260  1839  34AD               	retlw	173
  1261  183A  342B               	retlw	43
  1262  183B  343E               	retlw	62
  1263  183C  340E               	retlw	14
  1264  183D  343C               	retlw	60
  1265  183E  34C3               	retlw	195
  1266  183F  34BD               	retlw	189
  1267  1840  3487               	retlw	135
  1268  1841  34D1               	retlw	209
  1269  1842  3413               	retlw	19
  1270  1843  343D               	retlw	61
  1271  1844  3441               	retlw	65
  1272  1845  3478               	retlw	120
  1273  1846  34D3               	retlw	211
  1274  1847  34BB               	retlw	187
  1275  1848                     __end_oflog@coeff:
  1276  1848                     _BETA:
  1277                           
  1278                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1279  1848  3400               	retlw	0
  1280  1849  3460               	retlw	96
  1281  184A  3478               	retlw	120
  1282  184B  3445               	retlw	69
  1283  184C                     __end_of_BETA:
  1284  184C                     _BALANCE_RESISTOR:
  1285                           
  1286                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1287  184C  3400               	retlw	0
  1288  184D  3440               	retlw	64
  1289  184E  341C               	retlw	28
  1290  184F  3446               	retlw	70
  1291  1850                     __end_of_BALANCE_RESISTOR:
  1292  0019                     _TXREG	set	25
  1293  0018                     _RCSTAbits	set	24
  1294  001A                     _RCREG	set	26
  1295  000E                     _TMR1L	set	14
  1296  000F                     _TMR1H	set	15
  1297  000C                     _PIR1bits	set	12
  1298  001E                     _ADRESH	set	30
  1299  001F                     _ADCON0bits	set	31
  1300  0005                     _PORTAbits	set	5
  1301  0007                     _PORTCbits	set	7
  1302  0010                     _T1CON	set	16
  1303  0006                     _PORTBbits	set	6
  1304  0009                     _PORTE	set	9
  1305  0007                     _PORTC	set	7
  1306  0005                     _PORTA	set	5
  1307  0013                     _SSPBUF	set	19
  1308  000B                     _INTCONbits	set	11
  1309  0014                     _SSPCON	set	20
  1310  0006                     _PORTB	set	6
  1311  00C4                     _CREN	set	196
  1312  0081                     _TMR1CS	set	129
  1313  0085                     _T1CKPS1	set	133
  1314  0084                     _T1CKPS0	set	132
  1315  008C                     _PIE1bits	set	140
  1316  0099                     _SPBRG	set	153
  1317  0098                     _TXSTAbits	set	152
  1318  009E                     _ADRESL	set	158
  1319  009F                     _ADCON1	set	159
  1320  009F                     _ADCON1bits	set	159
  1321  0095                     _WPUB	set	149
  1322  0081                     _OPTION_REGbits	set	129
  1323  0089                     _TRISE	set	137
  1324  0087                     _TRISC	set	135
  1325  0086                     _TRISB	set	134
  1326  0085                     _TRISA	set	133
  1327  008F                     _OSCCONbits	set	143
  1328  0091                     _SSPCON2bits	set	145
  1329  0094                     _SSPSTAT	set	148
  1330  0093                     _SSPADD	set	147
  1331  0091                     _SSPCON2	set	145
  1332  043F                     _TRISC7	set	1087
  1333  043E                     _TRISC6	set	1086
  1334  0460                     _TMR1IE	set	1120
  1335  043C                     _TRISC4	set	1084
  1336  043B                     _TRISC3	set	1083
  1337  010C                     _EEDATA	set	268
  1338  010D                     _EEADR	set	269
  1339  0187                     _BAUDCTLbits	set	391
  1340  018D                     _EECON2	set	397
  1341  018C                     _EECON1bits	set	396
  1342  0189                     _ANSELH	set	393
  1343  0188                     _ANSEL	set	392
  1344  1850                     STR_1:
  1345  1850  3476               	retlw	118	;'v'
  1346  1851  3431               	retlw	49	;'1'
  1347  1852  342E               	retlw	46	;'.'
  1348  1853  3430               	retlw	48	;'0'
  1349  1854  342E               	retlw	46	;'.'
  1350  1855  3432               	retlw	50	;'2'
  1351  1856  3430               	retlw	48	;'0'
  1352  1857  3400               	retlw	0
  1353  1858                     STR_2:
  1354  1858  344F               	retlw	79	;'O'
  1355  1859  344B               	retlw	75	;'K'
  1356  185A  3400               	retlw	0
  1357                           
  1358                           	psect	cinit
  1359  0015                     start_initialization:	
  1360                           ; #config settings
  1361                           
  1362  0015                     __initialization:
  1363                           
  1364                           ; Clear objects allocated to COMMON
  1365  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1366  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1367  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1368  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1369  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1370  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1371                           
  1372                           ; Clear objects allocated to BANK1
  1373  001B  1383               	bcf	3,7	;select IRP bank0
  1374  001C  30C8               	movlw	low __pbssBANK1
  1375  001D  0084               	movwf	4
  1376  001E  30E4               	movlw	low (__pbssBANK1+28)
  1377  001F  160A  158A  20AF  120A  118A  	fcall	clear_ram0
  1378                           
  1379                           ; Clear objects allocated to BANK3
  1380  0024  1783               	bsf	3,7	;select IRP bank2
  1381  0025  3090               	movlw	low __pbssBANK3
  1382  0026  0084               	movwf	4
  1383  0027  30EB               	movlw	low (__pbssBANK3+91)
  1384  0028  160A  158A  20AF  120A  118A  	fcall	clear_ram0
  1385                           
  1386                           ; Clear objects allocated to BANK2
  1387  002D  3010               	movlw	low __pbssBANK2
  1388  002E  0084               	movwf	4
  1389  002F  3044               	movlw	low (__pbssBANK2+52)
  1390  0030  160A  158A  20AF   	fcall	clear_ram0
  1391  0033                     end_of_initialization:	
  1392                           ;End of C runtime variable initialization code
  1393                           
  1394  0033                     __end_of__initialization:
  1395  0033  0183               	clrf	3
  1396  0034  120A  158A  2844   	ljmp	_main	;jump to C main() function
  1397                           
  1398                           	psect	bssCOMMON
  1399  0078                     __pbssCOMMON:
  1400  0078                     _Delay_Led_Tmr0:
  1401  0078                     	ds	2
  1402  007A                     _minuto:
  1403  007A                     	ds	1
  1404  007B                     _statuspower_memo:
  1405  007B                     	ds	1
  1406  007C                     _hora:
  1407  007C                     	ds	1
  1408  007D                     _segundo:
  1409  007D                     	ds	1
  1410                           
  1411                           	psect	bssBANK1
  1412  00C8                     __pbssBANK1:
  1413  00C8                     _Tensao1:
  1414  00C8                     	ds	4
  1415  00CC                     _Vaccum0:
  1416  00CC                     	ds	4
  1417  00D0                     _errno:
  1418  00D0                     	ds	2
  1419  00D2                     _tempodecorrido:
  1420  00D2                     	ds	2
  1421  00D4                     _count:
  1422  00D4                     	ds	2
  1423  00D6                     _header:
  1424  00D6                     	ds	2
  1425  00D8                     _milisegundo:
  1426  00D8                     	ds	2
  1427  00DA                     _Delay_Led_Usart:
  1428  00DA                     	ds	2
  1429  00DC                     _Delay_Led_Memory:
  1430  00DC                     	ds	2
  1431  00DE                     _pointer:
  1432  00DE                     	ds	1
  1433  00DF                     _destino:
  1434  00DF                     	ds	1
  1435  00E0                     _Board_Number:
  1436  00E0                     	ds	1
  1437  00E1                     _canal:
  1438  00E1                     	ds	1
  1439  00E2                     _statuspower:
  1440  00E2                     	ds	1
  1441  00E3                     _generic_status:
  1442  00E3                     	ds	1
  1443                           
  1444                           	psect	bssBANK3
  1445  0190                     __pbssBANK3:
  1446  0190                     _usart_protocol:
  1447  0190                     	ds	58
  1448  01CA                     _buffer:
  1449  01CA                     	ds	33
  1450                           
  1451                           	psect	bssBANK2
  1452  0110                     __pbssBANK2:
  1453  0110                     _usart_buffer:
  1454  0110                     	ds	52
  1455                           
  1456                           	psect	clrtext
  1457  18AF                     clear_ram0:	
  1458                           ;	Called with FSR containing the base address, and
  1459                           ;	W with the last address+1
  1460                           
  1461  18AF  0064               	clrwdt	;clear the watchdog before getting into this loop
  1462  18B0                     clrloop0:
  1463  18B0  0180               	clrf	0	;clear RAM location pointed to by FSR
  1464  18B1  0A84               	incf	4,f	;increment pointer
  1465  18B2  0604               	xorwf	4,w	;XOR with final address
  1466  18B3  1903               	btfsc	3,2	;have we reached the end yet?
  1467  18B4  3400               	retlw	0	;all done for this memory range, return
  1468  18B5  0604               	xorwf	4,w	;XOR again to restore value
  1469  18B6  28B0               	goto	clrloop0	;do the next byte
  1470                           
  1471                           	psect	cstackBANK1
  1472  00A0                     __pcstackBANK1:
  1473  00A0                     ?_USART_put_int:
  1474  00A0                     ?_EEPROM_24C1025_Write_Int:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  00A0                     USART_put_int@value:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  00A0                     EEPROM_24C1025_Write_Int@mem_add:	
  1481                           ; 2 bytes @ 0x0
  1482                           
  1483  00A0                     _MediaPlacaVaccum$2372:	
  1484                           ; 4 bytes @ 0x0
  1485                           
  1486                           
  1487                           ; 4 bytes @ 0x0
  1488  00A0                     	ds	2
  1489  00A2                     ?_PROCULUS_Control_Register_Write:
  1490  00A2                     ?_PROCULUS_VP_Write:	
  1491                           ; 1 bytes @ 0x2
  1492                           
  1493  00A2                     PROCULUS_Control_Register_Write@size:	
  1494                           ; 1 bytes @ 0x2
  1495                           
  1496  00A2                     PROCULUS_VP_Write@vp:	
  1497                           ; 1 bytes @ 0x2
  1498                           
  1499                           
  1500                           ; 2 bytes @ 0x2
  1501  00A2                     	ds	1
  1502  00A3                     ??_PROCULUS_Control_Register_Write:
  1503                           
  1504                           ; 1 bytes @ 0x3
  1505  00A3                     	ds	1
  1506  00A4                     MediaPlacaVaccum@canal:
  1507  00A4                     PROCULUS_Control_Register_Write@vetor:	
  1508                           ; 1 bytes @ 0x4
  1509                           
  1510  00A4                     EEPROM_24C1025_Write_Int@data:	
  1511                           ; 1 bytes @ 0x4
  1512                           
  1513  00A4                     PROCULUS_VP_Write@vetor:	
  1514                           ; 2 bytes @ 0x4
  1515                           
  1516                           
  1517                           ; 2 bytes @ 0x4
  1518  00A4                     	ds	1
  1519  00A5                     PROCULUS_Control_Register_Write@i:
  1520  00A5                     MediaPlacaVaccum@i:	
  1521                           ; 1 bytes @ 0x5
  1522                           
  1523                           
  1524                           ; 2 bytes @ 0x5
  1525  00A5                     	ds	1
  1526  00A6                     ?_PROCULUS_Show_Screen:
  1527  00A6                     ?_PROCULUS_Buzzer:	
  1528                           ; 1 bytes @ 0x6
  1529                           
  1530  00A6                     EEPROM_24C1025_Write_Int@chip_add:	
  1531                           ; 1 bytes @ 0x6
  1532                           
  1533  00A6                     PROCULUS_VP_Write@size:	
  1534                           ; 1 bytes @ 0x6
  1535                           
  1536  00A6                     PROCULUS_Buzzer@time_ms_x_10:	
  1537                           ; 1 bytes @ 0x6
  1538                           
  1539  00A6                     PROCULUS_Show_Screen@screen:	
  1540                           ; 2 bytes @ 0x6
  1541                           
  1542                           
  1543                           ; 2 bytes @ 0x6
  1544  00A6                     	ds	1
  1545  00A7                     ??_PROCULUS_VP_Write:
  1546  00A7                     EEPROM_24C1025_Write_Int@local:	
  1547                           ; 1 bytes @ 0x7
  1548                           
  1549  00A7                     MediaPlacaVaccum@Temp:	
  1550                           ; 2 bytes @ 0x7
  1551                           
  1552                           
  1553                           ; 4 bytes @ 0x7
  1554  00A7                     	ds	1
  1555  00A8                     PROCULUS_Buzzer@vetor:
  1556  00A8                     PROCULUS_Show_Screen@vetor:	
  1557                           ; 2 bytes @ 0x8
  1558                           
  1559                           
  1560                           ; 3 bytes @ 0x8
  1561  00A8                     	ds	1
  1562  00A9                     ?_Save_Log:
  1563  00A9                     ?_EEPROM_24C1025_Fill_All:	
  1564                           ; 1 bytes @ 0x9
  1565                           
  1566  00A9                     PROCULUS_VP_Write@i:	
  1567                           ; 1 bytes @ 0x9
  1568                           
  1569  00A9                     EEPROM_24C1025_Fill_All@value:	
  1570                           ; 1 bytes @ 0x9
  1571                           
  1572  00A9                     Save_Log@add_datalog:	
  1573                           ; 2 bytes @ 0x9
  1574                           
  1575                           
  1576                           ; 4 bytes @ 0x9
  1577  00A9                     	ds	1
  1578  00AA                     ?_PROCULUS_VP_Write_String:
  1579  00AA                     PROCULUS_VP_Write_String@vp:	
  1580                           ; 1 bytes @ 0xA
  1581                           
  1582                           
  1583                           ; 2 bytes @ 0xA
  1584  00AA                     	ds	1
  1585  00AB                     EEPROM_24C1025_Fill_All@chip_add:
  1586                           
  1587                           ; 1 bytes @ 0xB
  1588  00AB                     	ds	1
  1589  00AC                     PROCULUS_VP_Write_String@text:
  1590  00AC                     EEPROM_24C1025_Fill_All@mem_add:	
  1591                           ; 1 bytes @ 0xC
  1592                           
  1593                           
  1594                           ; 4 bytes @ 0xC
  1595  00AC                     	ds	4
  1596  00B0                     ??_Decodify_Command:
  1597                           
  1598                           ; 1 bytes @ 0x10
  1599  00B0                     	ds	4
  1600  00B4                     Decodify_Command@dados:
  1601                           
  1602                           ; 2 bytes @ 0x14
  1603  00B4                     	ds	2
  1604  00B6                     Decodify_Command@add:
  1605                           
  1606                           ; 1 bytes @ 0x16
  1607  00B6                     	ds	1
  1608  00B7                     Decodify_Command@sizedata:
  1609                           
  1610                           ; 1 bytes @ 0x17
  1611  00B7                     	ds	1
  1612  00B8                     Decodify_Command@tempint:
  1613                           
  1614                           ; 2 bytes @ 0x18
  1615  00B8                     	ds	2
  1616  00BA                     Decodify_Command@OutPut:
  1617                           
  1618                           ; 4 bytes @ 0x1A
  1619  00BA                     	ds	4
  1620  00BE                     Decodify_Command@tempchar:
  1621                           
  1622                           ; 1 bytes @ 0x1E
  1623  00BE                     	ds	1
  1624  00BF                     Decodify_Command@add_24LCxxxx:
  1625                           
  1626                           ; 4 bytes @ 0x1F
  1627  00BF                     	ds	4
  1628  00C3                     ??_main:
  1629                           
  1630                           ; 1 bytes @ 0x23
  1631  00C3                     	ds	3
  1632  00C6                     main@reset:
  1633                           
  1634                           ; 2 bytes @ 0x26
  1635  00C6                     	ds	2
  1636                           
  1637                           	psect	cstackCOMMON
  1638  0070                     __pcstackCOMMON:
  1639  0070                     ?_I2C_Master_Start:
  1640  0070                     ?_I2C_Master_Stop:	
  1641                           ; 1 bytes @ 0x0
  1642                           
  1643  0070                     ?_I2C_Master_RepeatedStart:	
  1644                           ; 1 bytes @ 0x0
  1645                           
  1646  0070                     ?_USART_putc:	
  1647                           ; 1 bytes @ 0x0
  1648                           
  1649  0070                     ?_ADC_init:	
  1650                           ; 1 bytes @ 0x0
  1651                           
  1652  0070                     ?_MediaPlacaVaccum:	
  1653                           ; 1 bytes @ 0x0
  1654                           
  1655  0070                     ?_Decodify_Command:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658  0070                     ?_USART_to_Protocol:	
  1659                           ; 1 bytes @ 0x0
  1660                           
  1661  0070                     ?_Send_To_MB:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664  0070                     ?_Send_Reply_OK:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667  0070                     ?_EEPROM_Read_Byte:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670  0070                     ?_Package_Usart_is_for_me:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673  0070                     ?_I2C_Master_Wait:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676  0070                     ?_main:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679  0070                     ?_isr:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0070                     ??_isr:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685                           
  1686                           ; 1 bytes @ 0x0
  1687  0070                     	ds	6
  1688  0076                     isr@tempo:
  1689                           
  1690                           ; 2 bytes @ 0x6
  1691  0076                     	ds	2
  1692                           
  1693                           	psect	cstackBANK0
  1694  0020                     __pcstackBANK0:
  1695  0020                     ?___flge:
  1696  0020                     ?_my_delay_ms_WDT:	
  1697                           ; 1 bit 
  1698                           
  1699  0020                     ??_USART_putc:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702  0020                     ??_ADC_init:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  0020                     ?_USART_init:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0020                     ??_USART_to_Protocol:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0020                     ?_strcpy:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0020                     ?_EEPROM_Write_Byte:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0020                     ??_EEPROM_Read_Byte:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0020                     ?_my_delay_ms:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0020                     ??_Package_Usart_is_for_me:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0020                     ?_PROCULUS_Delay:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0020                     ??_I2C_Master_Wait:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  0020                     ?_strlen:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  0020                     ?_captura:	
  1736                           ; 2 bytes @ 0x0
  1737                           
  1738  0020                     ?__Umul8_16:	
  1739                           ; 2 bytes @ 0x0
  1740                           
  1741  0020                     ?___lwdiv:	
  1742                           ; 2 bytes @ 0x0
  1743                           
  1744  0020                     ?___lldiv:	
  1745                           ; 2 bytes @ 0x0
  1746                           
  1747  0020                     ?___xxtofl:	
  1748                           ; 4 bytes @ 0x0
  1749                           
  1750  0020                     EEPROM_Write_Byte@dado:	
  1751                           ; 4 bytes @ 0x0
  1752                           
  1753  0020                     Package_Usart_is_for_me@retorno:	
  1754                           ; 1 bytes @ 0x0
  1755                           
  1756  0020                     USART_putc@value:	
  1757                           ; 1 bytes @ 0x0
  1758                           
  1759  0020                     __Umul8_16@multiplicand:	
  1760                           ; 1 bytes @ 0x0
  1761                           
  1762  0020                     strcpy@from:	
  1763                           ; 1 bytes @ 0x0
  1764                           
  1765  0020                     PROCULUS_Delay@tempo_ms:	
  1766                           ; 1 bytes @ 0x0
  1767                           
  1768  0020                     ___lwdiv@divisor:	
  1769                           ; 2 bytes @ 0x0
  1770                           
  1771  0020                     my_delay_ms@time:	
  1772                           ; 2 bytes @ 0x0
  1773                           
  1774  0020                     my_delay_ms_WDT@time:	
  1775                           ; 4 bytes @ 0x0
  1776                           
  1777  0020                     USART_init@baudrate:	
  1778                           ; 4 bytes @ 0x0
  1779                           
  1780  0020                     ___lldiv@divisor:	
  1781                           ; 4 bytes @ 0x0
  1782                           
  1783  0020                     ___flge@ff1:	
  1784                           ; 4 bytes @ 0x0
  1785                           
  1786  0020                     ___xxtofl@val:	
  1787                           ; 4 bytes @ 0x0
  1788                           
  1789                           
  1790                           ; 4 bytes @ 0x0
  1791  0020                     	ds	1
  1792  0021                     ??_strcpy:
  1793  0021                     ??_Send_To_MB:	
  1794                           ; 1 bytes @ 0x1
  1795                           
  1796  0021                     ?_USART_put_string:	
  1797                           ; 1 bytes @ 0x1
  1798                           
  1799  0021                     ??_EEPROM_Write_Byte:	
  1800                           ; 1 bytes @ 0x1
  1801                           
  1802  0021                     Send_To_MB@size:	
  1803                           ; 1 bytes @ 0x1
  1804                           
  1805  0021                     strcpy@to:	
  1806                           ; 1 bytes @ 0x1
  1807                           
  1808  0021                     USART_to_Protocol@i:	
  1809                           ; 1 bytes @ 0x1
  1810                           
  1811  0021                     USART_put_string@vetor:	
  1812                           ; 2 bytes @ 0x1
  1813                           
  1814                           
  1815                           ; 2 bytes @ 0x1
  1816  0021                     	ds	1
  1817  0022                     ??_captura:
  1818  0022                     ??_PROCULUS_Delay:	
  1819                           ; 1 bytes @ 0x2
  1820                           
  1821  0022                     ??__Umul8_16:	
  1822                           ; 1 bytes @ 0x2
  1823                           
  1824  0022                     I2C_Master_Wait@tempo:	
  1825                           ; 1 bytes @ 0x2
  1826                           
  1827  0022                     EEPROM_Read_Byte@addr:	
  1828                           ; 1 bytes @ 0x2
  1829                           
  1830  0022                     strcpy@cp:	
  1831                           ; 1 bytes @ 0x2
  1832                           
  1833  0022                     ___lwdiv@dividend:	
  1834                           ; 1 bytes @ 0x2
  1835                           
  1836                           
  1837                           ; 2 bytes @ 0x2
  1838  0022                     	ds	1
  1839  0023                     ??_I2C_Master_Start:
  1840  0023                     ?_I2C_Master_Write:	
  1841                           ; 1 bytes @ 0x3
  1842                           
  1843  0023                     ??_I2C_Master_Stop:	
  1844                           ; 1 bytes @ 0x3
  1845                           
  1846  0023                     ??_I2C_Master_RepeatedStart:	
  1847                           ; 1 bytes @ 0x3
  1848                           
  1849  0023                     ??_USART_put_string:	
  1850                           ; 1 bytes @ 0x3
  1851                           
  1852  0023                     ?_EEPROM_Read_String:	
  1853                           ; 1 bytes @ 0x3
  1854                           
  1855  0023                     ??_strlen:	
  1856                           ; 1 bytes @ 0x3
  1857                           
  1858  0023                     ?_I2C_Master_Read:	
  1859                           ; 1 bytes @ 0x3
  1860                           
  1861  0023                     ?_EEPROM_Read_Integer:	
  1862                           ; 2 bytes @ 0x3
  1863                           
  1864  0023                     EEPROM_Write_Byte@addr:	
  1865                           ; 2 bytes @ 0x3
  1866                           
  1867  0023                     EEPROM_Read_String@dado:	
  1868                           ; 1 bytes @ 0x3
  1869                           
  1870  0023                     USART_to_Protocol@usart_protocol:	
  1871                           ; 1 bytes @ 0x3
  1872                           
  1873  0023                     strlen@cp:	
  1874                           ; 1 bytes @ 0x3
  1875                           
  1876  0023                     I2C_Master_Write@d:	
  1877                           ; 1 bytes @ 0x3
  1878                           
  1879  0023                     I2C_Master_Read@a:	
  1880                           ; 2 bytes @ 0x3
  1881                           
  1882  0023                     USART_put_string@ptr:	
  1883                           ; 2 bytes @ 0x3
  1884                           
  1885                           
  1886                           ; 2 bytes @ 0x3
  1887  0023                     	ds	1
  1888  0024                     ??_my_delay_ms_WDT:
  1889  0024                     ??_USART_init:	
  1890                           ; 1 bytes @ 0x4
  1891                           
  1892  0024                     ??_EEPROM_Read_String:	
  1893                           ; 1 bytes @ 0x4
  1894                           
  1895  0024                     ??_my_delay_ms:	
  1896                           ; 1 bytes @ 0x4
  1897                           
  1898  0024                     ??___lwdiv:	
  1899                           ; 1 bytes @ 0x4
  1900                           
  1901  0024                     ??___xxtofl:	
  1902                           ; 1 bytes @ 0x4
  1903                           
  1904  0024                     EEPROM_Write_Byte@last_GIE:	
  1905                           ; 1 bytes @ 0x4
  1906                           
  1907  0024                     EEPROM_Read_String@addr:	
  1908                           ; 1 bytes @ 0x4
  1909                           
  1910  0024                     strlen@s:	
  1911                           ; 1 bytes @ 0x4
  1912                           
  1913  0024                     PROCULUS_Delay@i:	
  1914                           ; 1 bytes @ 0x4
  1915                           
  1916  0024                     ___lwdiv@quotient:	
  1917                           ; 2 bytes @ 0x4
  1918                           
  1919  0024                     __Umul8_16@product:	
  1920                           ; 2 bytes @ 0x4
  1921                           
  1922  0024                     ___lldiv@dividend:	
  1923                           ; 2 bytes @ 0x4
  1924                           
  1925  0024                     ___flge@ff2:	
  1926                           ; 4 bytes @ 0x4
  1927                           
  1928                           
  1929                           ; 4 bytes @ 0x4
  1930  0024                     	ds	1
  1931  0025                     ??_I2C_Master_Write:
  1932  0025                     ??_I2C_Master_Read:	
  1933                           ; 1 bytes @ 0x5
  1934                           
  1935  0025                     ?_EEPROM_Write_Integer:	
  1936                           ; 1 bytes @ 0x5
  1937                           
  1938  0025                     ??_Send_Reply_OK:	
  1939                           ; 1 bytes @ 0x5
  1940                           
  1941  0025                     ?_EEPROM_Write_String:	
  1942                           ; 1 bytes @ 0x5
  1943                           
  1944  0025                     EEPROM_Write_String@dado:	
  1945                           ; 1 bytes @ 0x5
  1946                           
  1947  0025                     EEPROM_Read_String@c:	
  1948                           ; 1 bytes @ 0x5
  1949                           
  1950  0025                     USART_init@i:	
  1951                           ; 1 bytes @ 0x5
  1952                           
  1953  0025                     EEPROM_Write_Integer@dado:	
  1954                           ; 1 bytes @ 0x5
  1955                           
  1956                           
  1957                           ; 2 bytes @ 0x5
  1958  0025                     	ds	1
  1959  0026                     ??_EEPROM_Read_Integer:
  1960  0026                     ??_EEPROM_Write_String:	
  1961                           ; 1 bytes @ 0x6
  1962                           
  1963  0026                     EEPROM_Read_Integer@addr:	
  1964                           ; 1 bytes @ 0x6
  1965                           
  1966  0026                     EEPROM_Write_String@addr:	
  1967                           ; 1 bytes @ 0x6
  1968                           
  1969  0026                     ___lwdiv@counter:	
  1970                           ; 1 bytes @ 0x6
  1971                           
  1972  0026                     __Umul8_16@word_mpld:	
  1973                           ; 1 bytes @ 0x6
  1974                           
  1975  0026                     my_delay_ms@i:	
  1976                           ; 2 bytes @ 0x6
  1977                           
  1978  0026                     my_delay_ms_WDT@i:	
  1979                           ; 4 bytes @ 0x6
  1980                           
  1981                           
  1982                           ; 4 bytes @ 0x6
  1983  0026                     	ds	1
  1984  0027                     ??_EEPROM_Write_Integer:
  1985  0027                     EEPROM_Read_Integer@ptr:	
  1986                           ; 1 bytes @ 0x7
  1987                           
  1988  0027                     I2C_Master_Read@temp:	
  1989                           ; 1 bytes @ 0x7
  1990                           
  1991                           
  1992                           ; 2 bytes @ 0x7
  1993  0027                     	ds	1
  1994  0028                     ??___lldiv:
  1995  0028                     ??___flge:	
  1996                           ; 1 bytes @ 0x8
  1997                           
  1998  0028                     __Umul8_16@multiplier:	
  1999                           ; 1 bytes @ 0x8
  2000                           
  2001  0028                     ___xxtofl@sign:	
  2002                           ; 1 bytes @ 0x8
  2003                           
  2004  0028                     EEPROM_Read_Integer@result:	
  2005                           ; 1 bytes @ 0x8
  2006                           
  2007                           
  2008                           ; 2 bytes @ 0x8
  2009  0028                     	ds	1
  2010  0029                     ?_EEPROM_24C1025_Read_Buffer_USART:
  2011  0029                     ?_EEPROM_24C1025_Read_Str:	
  2012                           ; 1 bytes @ 0x9
  2013                           
  2014  0029                     ___xxtofl@exp:	
  2015                           ; 1 bytes @ 0x9
  2016                           
  2017  0029                     EEPROM_24C1025_Read_Buffer_USART@mem_add:	
  2018                           ; 1 bytes @ 0x9
  2019                           
  2020  0029                     EEPROM_24C1025_Read_Str@mem_add:	
  2021                           ; 4 bytes @ 0x9
  2022                           
  2023  0029                     ___lldiv@quotient:	
  2024                           ; 4 bytes @ 0x9
  2025                           
  2026                           
  2027                           ; 4 bytes @ 0x9
  2028  0029                     	ds	1
  2029  002A                     ?_EEPROM_24C1025_Write_Buffer:
  2030  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  2031                           ; 1 bytes @ 0xA
  2032                           
  2033  002A                     ?_EEPROM_24C1025_Write_Str:	
  2034                           ; 1 bytes @ 0xA
  2035                           
  2036  002A                     EEPROM_Write_Integer@ptr:	
  2037                           ; 1 bytes @ 0xA
  2038                           
  2039  002A                     EEPROM_Read_Integer@i:	
  2040                           ; 1 bytes @ 0xA
  2041                           
  2042  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  2043                           ; 1 bytes @ 0xA
  2044                           
  2045  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  2046                           ; 4 bytes @ 0xA
  2047                           
  2048  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  2049                           ; 4 bytes @ 0xA
  2050                           
  2051  002A                     ___xxtofl@arg:	
  2052                           ; 4 bytes @ 0xA
  2053                           
  2054                           
  2055                           ; 4 bytes @ 0xA
  2056  002A                     	ds	1
  2057  002B                     EEPROM_Write_Integer@addr:
  2058                           
  2059                           ; 1 bytes @ 0xB
  2060  002B                     	ds	1
  2061  002C                     EEPROM_Write_Integer@i:
  2062                           
  2063                           ; 1 bytes @ 0xC
  2064  002C                     	ds	1
  2065  002D                     EEPROM_24C1025_Read_Buffer_USART@sizedata:
  2066  002D                     EEPROM_24C1025_Read_Str@buffer:	
  2067                           ; 1 bytes @ 0xD
  2068                           
  2069  002D                     ___lldiv@counter:	
  2070                           ; 1 bytes @ 0xD
  2071                           
  2072                           
  2073                           ; 1 bytes @ 0xD
  2074  002D                     	ds	1
  2075  002E                     ??_EEPROM_24C1025_Read_Str:
  2076  002E                     ?_I2C_Master_Init:	
  2077                           ; 1 bytes @ 0xE
  2078                           
  2079  002E                     ?_ADC_Media_10bits:	
  2080                           ; 1 bytes @ 0xE
  2081                           
  2082  002E                     ?___fldiv:	
  2083                           ; 4 bytes @ 0xE
  2084                           
  2085  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  2086                           ; 4 bytes @ 0xE
  2087                           
  2088  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2089                           ; 1 bytes @ 0xE
  2090                           
  2091  002E                     EEPROM_24C1025_Read_Buffer_USART@data:	
  2092                           ; 1 bytes @ 0xE
  2093                           
  2094  002E                     EEPROM_24C1025_Write_Str@data:	
  2095                           ; 1 bytes @ 0xE
  2096                           
  2097  002E                     I2C_Master_Init@c:	
  2098                           ; 1 bytes @ 0xE
  2099                           
  2100  002E                     ___fldiv@a:	
  2101                           ; 4 bytes @ 0xE
  2102                           
  2103                           
  2104                           ; 4 bytes @ 0xE
  2105  002E                     	ds	1
  2106  002F                     ??_EEPROM_24C1025_Read_Buffer_USART:
  2107  002F                     ??_EEPROM_24C1025_Write_Str:	
  2108                           ; 1 bytes @ 0xF
  2109                           
  2110  002F                     EEPROM_24C1025_Read_Buffer@data:	
  2111                           ; 1 bytes @ 0xF
  2112                           
  2113  002F                     EEPROM_24C1025_Write_Buffer@data:	
  2114                           ; 1 bytes @ 0xF
  2115                           
  2116                           
  2117                           ; 2 bytes @ 0xF
  2118  002F                     	ds	1
  2119  0030                     ??_EEPROM_24C1025_Read_Buffer:
  2120  0030                     EEPROM_24C1025_Read_Str@cnt:	
  2121                           ; 1 bytes @ 0x10
  2122                           
  2123                           
  2124                           ; 1 bytes @ 0x10
  2125  0030                     	ds	1
  2126  0031                     ??_EEPROM_24C1025_Write_Buffer:
  2127  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  2128                           ; 1 bytes @ 0x11
  2129                           
  2130  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  2131                           ; 1 bytes @ 0x11
  2132                           
  2133                           
  2134                           ; 1 bytes @ 0x11
  2135  0031                     	ds	1
  2136  0032                     ??_ADC_Media_10bits:
  2137  0032                     ??_I2C_Master_Init:	
  2138                           ; 1 bytes @ 0x12
  2139                           
  2140  0032                     EEPROM_24C1025_Read_Buffer_USART@cnt_117:	
  2141                           ; 1 bytes @ 0x12
  2142                           
  2143  0032                     EEPROM_24C1025_Write_Str@range:	
  2144                           ; 1 bytes @ 0x12
  2145                           
  2146  0032                     EEPROM_24C1025_Read_Str@range:	
  2147                           ; 1 bytes @ 0x12
  2148                           
  2149  0032                     ___fldiv@b:	
  2150                           ; 1 bytes @ 0x12
  2151                           
  2152                           
  2153                           ; 4 bytes @ 0x12
  2154  0032                     	ds	1
  2155  0033                     EEPROM_24C1025_Write_Buffer@count:
  2156  0033                     EEPROM_24C1025_Read_Buffer@cnt_108:	
  2157                           ; 1 bytes @ 0x13
  2158                           
  2159  0033                     EEPROM_24C1025_Read_Buffer_USART@chip_add:	
  2160                           ; 1 bytes @ 0x13
  2161                           
  2162  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2163                           ; 1 bytes @ 0x13
  2164                           
  2165  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2166                           ; 1 bytes @ 0x13
  2167                           
  2168  0033                     ADC_Media_10bits@canal:	
  2169                           ; 1 bytes @ 0x13
  2170                           
  2171                           
  2172                           ; 1 bytes @ 0x13
  2173  0033                     	ds	1
  2174  0034                     EEPROM_24C1025_Write_Buffer@chip_add:
  2175  0034                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2176                           ; 1 bytes @ 0x14
  2177                           
  2178  0034                     EEPROM_24C1025_Read_Buffer_USART@range:	
  2179                           ; 1 bytes @ 0x14
  2180                           
  2181  0034                     ADC_Media_10bits@value:	
  2182                           ; 1 bytes @ 0x14
  2183                           
  2184                           
  2185                           ; 2 bytes @ 0x14
  2186  0034                     	ds	1
  2187  0035                     EEPROM_24C1025_Write_Buffer@range:
  2188  0035                     EEPROM_24C1025_Read_Buffer@range:	
  2189                           ; 1 bytes @ 0x15
  2190                           
  2191  0035                     EEPROM_24C1025_Read_Buffer_USART@ctrl:	
  2192                           ; 1 bytes @ 0x15
  2193                           
  2194                           
  2195                           ; 1 bytes @ 0x15
  2196  0035                     	ds	1
  2197  0036                     ??___fldiv:
  2198  0036                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2199                           ; 1 bytes @ 0x16
  2200                           
  2201  0036                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2202                           ; 1 bytes @ 0x16
  2203                           
  2204  0036                     ADC_Media_10bits@i:	
  2205                           ; 1 bytes @ 0x16
  2206                           
  2207                           
  2208                           ; 1 bytes @ 0x16
  2209  0036                     	ds	1
  2210  0037                     ?_EEPROM_24C1025_Write_Byte:
  2211  0037                     ?_EEPROM_24C1025_Read_Byte:	
  2212                           ; 1 bytes @ 0x17
  2213                           
  2214  0037                     ?_EEPROM_24C1025_Read_Int:	
  2215                           ; 1 bytes @ 0x17
  2216                           
  2217  0037                     ?___fladd:	
  2218                           ; 2 bytes @ 0x17
  2219                           
  2220  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2221                           ; 4 bytes @ 0x17
  2222                           
  2223  0037                     EEPROM_24C1025_Read_Byte@mem_add:	
  2224                           ; 4 bytes @ 0x17
  2225                           
  2226  0037                     EEPROM_24C1025_Read_Int@mem_add:	
  2227                           ; 4 bytes @ 0x17
  2228                           
  2229  0037                     ___fladd@b:	
  2230                           ; 4 bytes @ 0x17
  2231                           
  2232                           
  2233                           ; 4 bytes @ 0x17
  2234  0037                     	ds	4
  2235  003B                     ??_EEPROM_24C1025_Read_Byte:
  2236  003B                     ??_EEPROM_24C1025_Read_Int:	
  2237                           ; 1 bytes @ 0x1B
  2238                           
  2239  003B                     EEPROM_24C1025_Write_Byte@data:	
  2240                           ; 1 bytes @ 0x1B
  2241                           
  2242  003B                     EEPROM_24C1025_Read_Byte@chip_add:	
  2243                           ; 1 bytes @ 0x1B
  2244                           
  2245  003B                     ___fladd@a:	
  2246                           ; 1 bytes @ 0x1B
  2247                           
  2248  003B                     ___fldiv@rem:	
  2249                           ; 4 bytes @ 0x1B
  2250                           
  2251                           
  2252                           ; 4 bytes @ 0x1B
  2253  003B                     	ds	1
  2254  003C                     ??_EEPROM_24C1025_Write_Byte:
  2255  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2256                           ; 1 bytes @ 0x1C
  2257                           
  2258  003C                     EEPROM_24C1025_Read_Byte@data:	
  2259                           ; 1 bytes @ 0x1C
  2260                           
  2261                           
  2262                           ; 1 bytes @ 0x1C
  2263  003C                     	ds	1
  2264  003D                     EEPROM_24C1025_Read_Int@chip_add:
  2265                           
  2266                           ; 1 bytes @ 0x1D
  2267  003D                     	ds	1
  2268  003E                     EEPROM_24C1025_Read_Int@data:
  2269                           
  2270                           ; 2 bytes @ 0x1E
  2271  003E                     	ds	1
  2272  003F                     ??___fladd:
  2273  003F                     ___fldiv@sign:	
  2274                           ; 1 bytes @ 0x1F
  2275                           
  2276                           
  2277                           ; 1 bytes @ 0x1F
  2278  003F                     	ds	1
  2279  0040                     ___fldiv@new_exp:
  2280                           
  2281                           ; 2 bytes @ 0x20
  2282  0040                     	ds	2
  2283  0042                     ___fldiv@grs:
  2284                           
  2285                           ; 4 bytes @ 0x22
  2286  0042                     	ds	4
  2287  0046                     ___fldiv@bexp:
  2288                           
  2289                           ; 1 bytes @ 0x26
  2290  0046                     	ds	1
  2291  0047                     ___fladd@signs:
  2292  0047                     ___fldiv@aexp:	
  2293                           ; 1 bytes @ 0x27
  2294                           
  2295                           
  2296                           ; 1 bytes @ 0x27
  2297  0047                     	ds	1
  2298  0048                     ___fladd@aexp:
  2299                           
  2300                           ; 1 bytes @ 0x28
  2301  0048                     	ds	1
  2302  0049                     ___fladd@bexp:
  2303                           
  2304                           ; 1 bytes @ 0x29
  2305  0049                     	ds	1
  2306  004A                     ___fladd@grs:
  2307                           
  2308                           ; 1 bytes @ 0x2A
  2309  004A                     	ds	1
  2310  004B                     ?___flsub:
  2311  004B                     ?___flmul:	
  2312                           ; 4 bytes @ 0x2B
  2313                           
  2314  004B                     ___flsub@a:	
  2315                           ; 4 bytes @ 0x2B
  2316                           
  2317  004B                     ___flmul@b:	
  2318                           ; 4 bytes @ 0x2B
  2319                           
  2320                           
  2321                           ; 4 bytes @ 0x2B
  2322  004B                     	ds	4
  2323  004F                     ___flsub@b:
  2324  004F                     ___flmul@a:	
  2325                           ; 4 bytes @ 0x2F
  2326                           
  2327                           
  2328                           ; 4 bytes @ 0x2F
  2329  004F                     	ds	4
  2330  0053                     ??___flsub:
  2331  0053                     ??___flmul:	
  2332                           ; 1 bytes @ 0x33
  2333                           
  2334                           
  2335                           ; 1 bytes @ 0x33
  2336  0053                     	ds	5
  2337  0058                     ___flmul@sign:
  2338                           
  2339                           ; 1 bytes @ 0x38
  2340  0058                     	ds	1
  2341  0059                     ___flmul@aexp:
  2342                           
  2343                           ; 1 bytes @ 0x39
  2344  0059                     	ds	1
  2345  005A                     ___flmul@grs:
  2346                           
  2347                           ; 4 bytes @ 0x3A
  2348  005A                     	ds	4
  2349  005E                     ___flmul@bexp:
  2350                           
  2351                           ; 1 bytes @ 0x3E
  2352  005E                     	ds	1
  2353  005F                     ___flmul@prod:
  2354                           
  2355                           ; 4 bytes @ 0x3F
  2356  005F                     	ds	4
  2357  0063                     ___flmul@temp:
  2358                           
  2359                           ; 2 bytes @ 0x43
  2360  0063                     	ds	2
  2361  0065                     ??_MediaPlacaVaccum:
  2362  0065                     ?___fltol:	
  2363                           ; 1 bytes @ 0x45
  2364                           
  2365  0065                     ___fltol@f1:	
  2366                           ; 4 bytes @ 0x45
  2367                           
  2368                           
  2369                           ; 4 bytes @ 0x45
  2370  0065                     	ds	4
  2371  0069                     ??___fltol:
  2372                           
  2373                           ; 1 bytes @ 0x49
  2374  0069                     	ds	4
  2375  006D                     ___fltol@sign1:
  2376                           
  2377                           ; 1 bytes @ 0x4D
  2378  006D                     	ds	1
  2379  006E                     ___fltol@exp1:
  2380                           
  2381                           ; 1 bytes @ 0x4E
  2382  006E                     	ds	1
  2383  006F                     ??_USART_put_int:
  2384  006F                     ??_Save_Log:	
  2385                           ; 1 bytes @ 0x4F
  2386                           
  2387  006F                     ??_EEPROM_24C1025_Write_Int:	
  2388                           ; 1 bytes @ 0x4F
  2389                           
  2390  006F                     ??_EEPROM_24C1025_Fill_All:	
  2391                           ; 1 bytes @ 0x4F
  2392                           
  2393  006F                     USART_put_int@dado:	
  2394                           ; 1 bytes @ 0x4F
  2395                           
  2396                           
  2397                           ; 1 bytes @ 0x4F
  2398  006F                     	ds	1
  2399  0070                     ??_PROCULUS_Show_Screen:
  2400  0070                     ??_PROCULUS_Buzzer:	
  2401                           ; 1 bytes @ 0x50
  2402                           
  2403  0070                     ??_PROCULUS_VP_Write_String:	
  2404                           ; 1 bytes @ 0x50
  2405                           
  2406                           
  2407                           	psect	maintext
  2408  0844                     __pmaintext:	
  2409                           ; 1 bytes @ 0x50
  2410 ;;
  2411 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2412 ;;
  2413 ;; *************** function _main *****************
  2414 ;; Defined at:
  2415 ;;		line 144 in file "SlaveLiofilizadorVer1.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;		None
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  reset           2   38[BANK1 ] unsigned int 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : B00/0
  2426 ;;		On exit  : 300/100
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2429 ;;      Params:         0       0       0       0       0
  2430 ;;      Locals:         0       0       2       0       0
  2431 ;;      Temps:          0       0       3       0       0
  2432 ;;      Totals:         0       0       5       0       0
  2433 ;;Total ram usage:        5 bytes
  2434 ;; Hardware stack levels required when called:    7
  2435 ;; This function calls:
  2436 ;;		_ADC_init
  2437 ;;		_Decodify_Command
  2438 ;;		_EEPROM_Read_Integer
  2439 ;;		_EEPROM_Write_Integer
  2440 ;;		_I2C_Master_Init
  2441 ;;		_MediaPlacaVaccum
  2442 ;;		_USART_init
  2443 ;;		_my_delay_ms_WDT
  2444 ;; This function is called by:
  2445 ;;		Startup code after reset
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function _main
  2451  0844                     _main:
  2452                           
  2453                           ;SlaveLiofilizadorVer1.c: 145:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2454                           
  2455                           ;incstack = 0
  2456                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2457  0844  3002               	movlw	2
  2458  0845  1683               	bsf	3,5	;RP0=1, select bank1
  2459  0846  1303               	bcf	3,6	;RP1=0, select bank1
  2460  0847  00C5               	movwf	(??_main^(0+128)+2)
  2461  0848  3004               	movlw	4
  2462  0849  00C4               	movwf	(??_main^(0+128)+1)
  2463  084A  30B9               	movlw	185
  2464  084B  00C3               	movwf	??_main^(0+128)
  2465  084C                     u5517:
  2466  084C  0BC3               	decfsz	??_main^(0+128),f
  2467  084D  284C               	goto	u5517
  2468  084E  0BC4               	decfsz	(??_main^(0+128)+1),f
  2469  084F  284C               	goto	u5517
  2470  0850  0BC5               	decfsz	(??_main^(0+128)+2),f
  2471  0851  284C               	goto	u5517
  2472  0852  2853               	nop2
  2473                           
  2474                           ;SlaveLiofilizadorVer1.c: 146:      OSCCONbits.IRCF0=1;
  2475  0853  1683               	bsf	3,5	;RP0=1, select bank1
  2476  0854  1303               	bcf	3,6	;RP1=0, select bank1
  2477  0855  160F               	bsf	15,4	;volatile
  2478                           
  2479                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF1=1;
  2480  0856  168F               	bsf	15,5	;volatile
  2481                           
  2482                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF2=1;
  2483  0857  170F               	bsf	15,6	;volatile
  2484                           
  2485                           ;SlaveLiofilizadorVer1.c: 150:      PORTA=0;
  2486  0858  1283               	bcf	3,5	;RP0=0, select bank0
  2487  0859  0185               	clrf	5	;volatile
  2488                           
  2489                           ;SlaveLiofilizadorVer1.c: 151:      PORTB=0;
  2490  085A  0186               	clrf	6	;volatile
  2491                           
  2492                           ;SlaveLiofilizadorVer1.c: 152:      PORTC=0;
  2493  085B  0187               	clrf	7	;volatile
  2494                           
  2495                           ;SlaveLiofilizadorVer1.c: 153:      PORTE=0;
  2496  085C  0189               	clrf	9	;volatile
  2497                           
  2498                           ;SlaveLiofilizadorVer1.c: 154:      TRISA=0b11101111;
  2499  085D  30EF               	movlw	239
  2500  085E  1683               	bsf	3,5	;RP0=1, select bank1
  2501  085F  0085               	movwf	5	;volatile
  2502                           
  2503                           ;SlaveLiofilizadorVer1.c: 155:      TRISB=0b00001111;
  2504  0860  300F               	movlw	15
  2505  0861  0086               	movwf	6	;volatile
  2506                           
  2507                           ;SlaveLiofilizadorVer1.c: 156:      TRISC=0xF0;
  2508  0862  30F0               	movlw	240
  2509  0863  0087               	movwf	7	;volatile
  2510                           
  2511                           ;SlaveLiofilizadorVer1.c: 157:      TRISE=0xFF;
  2512  0864  30FF               	movlw	255
  2513  0865  0089               	movwf	9	;volatile
  2514                           
  2515                           ;SlaveLiofilizadorVer1.c: 159:      ANSEL=0x00000011;
  2516  0866  3011               	movlw	17
  2517  0867  1703               	bsf	3,6	;RP1=1, select bank3
  2518  0868  0088               	movwf	8	;volatile
  2519                           
  2520                           ;SlaveLiofilizadorVer1.c: 160:      ANSELH=0x00000000;
  2521  0869  0189               	clrf	9	;volatile
  2522                           
  2523                           ;SlaveLiofilizadorVer1.c: 162:      OPTION_REGbits.nRBPU=0;
  2524  086A  1303               	bcf	3,6	;RP1=0, select bank1
  2525  086B  1381               	bcf	1,7	;volatile
  2526                           
  2527                           ;SlaveLiofilizadorVer1.c: 163:      WPUB=0b00001111;
  2528  086C  300F               	movlw	15
  2529  086D  0095               	movwf	21	;volatile
  2530                           
  2531                           ;SlaveLiofilizadorVer1.c: 166:      PORTBbits.RB7 =1;
  2532  086E  1283               	bcf	3,5	;RP0=0, select bank0
  2533  086F  1786               	bsf	6,7	;volatile
  2534                           
  2535                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB6 =1;
  2536  0870  1706               	bsf	6,6	;volatile
  2537                           
  2538                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB5=1;
  2539  0871  1686               	bsf	6,5	;volatile
  2540                           
  2541                           ;SlaveLiofilizadorVer1.c: 169:      my_delay_ms_WDT(1000);
  2542  0872  3000               	movlw	0
  2543  0873  00A3               	movwf	my_delay_ms_WDT@time+3
  2544  0874  3000               	movlw	0
  2545  0875  00A2               	movwf	my_delay_ms_WDT@time+2
  2546  0876  3003               	movlw	3
  2547  0877  00A1               	movwf	my_delay_ms_WDT@time+1
  2548  0878  30E8               	movlw	232
  2549  0879  00A0               	movwf	my_delay_ms_WDT@time
  2550  087A  160A  158A  24B1  120A  158A  	fcall	_my_delay_ms_WDT
  2551                           
  2552                           ;SlaveLiofilizadorVer1.c: 171:      OPTION_REGbits.T0CS=0;
  2553  087F  1683               	bsf	3,5	;RP0=1, select bank1
  2554  0880  1281               	bcf	1,5	;volatile
  2555                           
  2556                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.PSA =1;
  2557  0881  1581               	bsf	1,3	;volatile
  2558                           
  2559                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PS0 =1;
  2560  0882  1401               	bsf	1,0	;volatile
  2561                           
  2562                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS1 =1;
  2563  0883  1481               	bsf	1,1	;volatile
  2564                           
  2565                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS2 =1;
  2566  0884  1501               	bsf	1,2	;volatile
  2567                           
  2568                           ;SlaveLiofilizadorVer1.c: 176:      INTCONbits.T0IE =0;
  2569  0885  128B               	bcf	11,5	;volatile
  2570                           
  2571                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.INTE =0;
  2572  0886  120B               	bcf	11,4	;volatile
  2573                           
  2574                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.GIE =1;
  2575  0887  178B               	bsf	11,7	;volatile
  2576                           
  2577                           ;SlaveLiofilizadorVer1.c: 181:      INTCONbits.PEIE = 1;
  2578  0888  170B               	bsf	11,6	;volatile
  2579                           
  2580                           ;SlaveLiofilizadorVer1.c: 182:      T1CKPS0=1;
  2581  0889  1283               	bcf	3,5	;RP0=0, select bank0
  2582  088A  1610               	bsf	16,4	;volatile
  2583                           
  2584                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS1=1;
  2585  088B  1690               	bsf	16,5	;volatile
  2586                           
  2587                           ;SlaveLiofilizadorVer1.c: 184:      TMR1CS=0;
  2588  088C  1090               	bcf	16,1	;volatile
  2589                           
  2590                           ;SlaveLiofilizadorVer1.c: 185:      TMR1IE=1;
  2591  088D  1683               	bsf	3,5	;RP0=1, select bank1
  2592  088E  140C               	bsf	12,0	;volatile
  2593                           
  2594                           ;SlaveLiofilizadorVer1.c: 186:      T1CON=1;
  2595  088F  3001               	movlw	1
  2596  0890  1283               	bcf	3,5	;RP0=0, select bank0
  2597  0891  0090               	movwf	16	;volatile
  2598  0892  0064               	clrwdt	;# 
  2599                           
  2600                           ;SlaveLiofilizadorVer1.c: 193:      ADC_init();
  2601  0893  160A  158A  20D3  120A  158A  	fcall	_ADC_init
  2602                           
  2603                           ;SlaveLiofilizadorVer1.c: 194:      I2C_Master_Init(100000);
  2604  0898  3000               	movlw	0
  2605  0899  00B1               	movwf	I2C_Master_Init@c+3
  2606  089A  3001               	movlw	1
  2607  089B  00B0               	movwf	I2C_Master_Init@c+2
  2608  089C  3086               	movlw	134
  2609  089D  00AF               	movwf	I2C_Master_Init@c+1
  2610  089E  30A0               	movlw	160
  2611  089F  00AE               	movwf	I2C_Master_Init@c
  2612  08A0  160A  158A  2379  120A  158A  	fcall	_I2C_Master_Init
  2613                           
  2614                           ;SlaveLiofilizadorVer1.c: 195:      USART_init(115200);
  2615  08A5  3000               	movlw	0
  2616  08A6  1283               	bcf	3,5	;RP0=0, select bank0
  2617  08A7  00A3               	movwf	USART_init@baudrate+3
  2618  08A8  3001               	movlw	1
  2619  08A9  00A2               	movwf	USART_init@baudrate+2
  2620  08AA  30C2               	movlw	194
  2621  08AB  00A1               	movwf	USART_init@baudrate+1
  2622  08AC  3000               	movlw	0
  2623  08AD  00A0               	movwf	USART_init@baudrate
  2624  08AE  160A  158A  2561  120A  158A  	fcall	_USART_init
  2625                           
  2626                           ;SlaveLiofilizadorVer1.c: 201:      {;SlaveLiofilizadorVer1.c: 202:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 203:      reset=EEPROM_Read_Integer(0x10);
  2627  08B3  3010               	movlw	16
  2628  08B4  160A  158A  22FA  120A  158A  	fcall	_EEPROM_Read_Integer
  2629  08B9  0824               	movf	?_EEPROM_Read_Integer+1,w
  2630  08BA  1683               	bsf	3,5	;RP0=1, select bank1
  2631  08BB  00C7               	movwf	(main@reset+1)^(0+128)
  2632  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  2633  08BD  0823               	movf	?_EEPROM_Read_Integer,w
  2634  08BE  1683               	bsf	3,5	;RP0=1, select bank1
  2635  08BF  00C6               	movwf	main@reset^(0+128)
  2636                           
  2637                           ;SlaveLiofilizadorVer1.c: 204:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2638  08C0  0A46               	incf	main@reset^(0+128),w
  2639  08C1  1D03               	skipz
  2640  08C2  28D0               	goto	l5983
  2641  08C3  0A47               	incf	(main@reset+1)^(0+128),w
  2642  08C4  1D03               	btfss	3,2
  2643  08C5  28D0               	goto	l5983
  2644  08C6  3000               	movlw	0
  2645  08C7  1283               	bcf	3,5	;RP0=0, select bank0
  2646  08C8  00A5               	movwf	EEPROM_Write_Integer@dado
  2647  08C9  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2648  08CA  3010               	movlw	16
  2649  08CB  160A  158A  23AA  120A  158A  	fcall	_EEPROM_Write_Integer
  2650  08D0                     l5983:
  2651                           
  2652                           ;SlaveLiofilizadorVer1.c: 205:      reset++;
  2653  08D0  3001               	movlw	1
  2654  08D1  1683               	bsf	3,5	;RP0=1, select bank1
  2655  08D2  1303               	bcf	3,6	;RP1=0, select bank1
  2656  08D3  07C6               	addwf	main@reset^(0+128),f
  2657  08D4  1803               	skipnc
  2658  08D5  0AC7               	incf	(main@reset+1)^(0+128),f
  2659  08D6  3000               	movlw	0
  2660  08D7  07C7               	addwf	(main@reset+1)^(0+128),f
  2661                           
  2662                           ;SlaveLiofilizadorVer1.c: 206:      EEPROM_Write_Integer(0x10,reset);
  2663  08D8  0847               	movf	(main@reset+1)^(0+128),w
  2664  08D9  1283               	bcf	3,5	;RP0=0, select bank0
  2665  08DA  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2666  08DB  1683               	bsf	3,5	;RP0=1, select bank1
  2667  08DC  0846               	movf	main@reset^(0+128),w
  2668  08DD  1283               	bcf	3,5	;RP0=0, select bank0
  2669  08DE  00A5               	movwf	EEPROM_Write_Integer@dado
  2670  08DF  3010               	movlw	16
  2671  08E0  160A  158A  23AA  120A  158A  	fcall	_EEPROM_Write_Integer
  2672                           
  2673                           ;SlaveLiofilizadorVer1.c: 207:      };SlaveLiofilizadorVer1.c: 211:      Delay_Led_Tmr0 
      +                          = 0;
  2674  08E5  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2675  08E6  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2676                           
  2677                           ;SlaveLiofilizadorVer1.c: 212:      Delay_Led_Usart = 0;
  2678  08E7  1683               	bsf	3,5	;RP0=1, select bank1
  2679  08E8  1303               	bcf	3,6	;RP1=0, select bank1
  2680  08E9  01DA               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2681  08EA  01DB               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2682                           
  2683                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Memory = 0;
  2684  08EB  01DC               	clrf	_Delay_Led_Memory^(0+128)	;volatile
  2685  08EC  01DD               	clrf	(_Delay_Led_Memory+1)^(0+128)	;volatile
  2686                           
  2687                           ;SlaveLiofilizadorVer1.c: 215:      segundo=0;
  2688  08ED  01FD               	clrf	_segundo	;volatile
  2689                           
  2690                           ;SlaveLiofilizadorVer1.c: 216:      hora=0;
  2691  08EE  01FC               	clrf	_hora	;volatile
  2692                           
  2693                           ;SlaveLiofilizadorVer1.c: 217:      PORTCbits.RC0=0;
  2694  08EF  1283               	bcf	3,5	;RP0=0, select bank0
  2695  08F0  1007               	bcf	7,0	;volatile
  2696                           
  2697                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC1=0;
  2698  08F1  1087               	bcf	7,1	;volatile
  2699                           
  2700                           ;SlaveLiofilizadorVer1.c: 219:      PORTAbits.RA2=0;
  2701  08F2  1105               	bcf	5,2	;volatile
  2702                           
  2703                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA3=0;
  2704  08F3  1185               	bcf	5,3	;volatile
  2705                           
  2706                           ;SlaveLiofilizadorVer1.c: 223:      Board_Number=(((0x0F)&(~PORTB)));
  2707  08F4  0906               	comf	6,w	;volatile
  2708  08F5  390F               	andlw	15
  2709  08F6  00FF               	movwf	127
  2710  08F7  087F               	movf	127,w
  2711  08F8  1683               	bsf	3,5	;RP0=1, select bank1
  2712  08F9  00E0               	movwf	_Board_Number^(0+128)
  2713                           
  2714                           ;SlaveLiofilizadorVer1.c: 224:      canal=1;
  2715  08FA  01E1               	clrf	_canal^(0+128)
  2716  08FB  0AE1               	incf	_canal^(0+128),f
  2717                           
  2718                           ;SlaveLiofilizadorVer1.c: 232:      statuspower.flag_global_vacuo=0;
  2719  08FC  1162               	bcf	_statuspower^(0+128),2
  2720  08FD                     l6011:
  2721                           
  2722                           ;SlaveLiofilizadorVer1.c: 246:           {;SlaveLiofilizadorVer1.c: 248:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2723  08FD  17E3               	bsf	_generic_status^(0+128),7
  2724                           
  2725                           ;SlaveLiofilizadorVer1.c: 274:          if(++canal==2) canal=0;
  2726  08FE  3001               	movlw	1
  2727  08FF  00FF               	movwf	127
  2728  0900  087F               	movf	127,w
  2729  0901  07E1               	addwf	_canal^(0+128),f
  2730  0902  3002               	movlw	2
  2731  0903  0661               	xorwf	_canal^(0+128),w
  2732  0904  1903               	btfsc	3,2
  2733  0905  01E1               	clrf	_canal^(0+128)
  2734                           
  2735                           ;SlaveLiofilizadorVer1.c: 275:          MediaPlacaVaccum(canal);
  2736  0906  0861               	movf	_canal^(0+128),w
  2737  0907  120A  118A  2037  120A  158A  	fcall	_MediaPlacaVaccum
  2738                           
  2739                           ;SlaveLiofilizadorVer1.c: 283:          if(generic_status.flag_usart_rx==1)
  2740  090C  1683               	bsf	3,5	;RP0=1, select bank1
  2741  090D  1C63               	btfss	_generic_status^(0+128),0
  2742  090E  28FD               	goto	l6011
  2743                           
  2744                           ;SlaveLiofilizadorVer1.c: 284:             {;SlaveLiofilizadorVer1.c: 285:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2745  090F  1283               	bcf	3,5	;RP0=0, select bank2
  2746  0910  1703               	bsf	3,6	;RP1=1, select bank2
  2747  0911  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2748  0912  1683               	bsf	3,5	;RP0=1, select bank1
  2749  0913  1303               	bcf	3,6	;RP1=0, select bank1
  2750  0914  00D7               	movwf	(_header+1)^(0+128)
  2751  0915  1283               	bcf	3,5	;RP0=0, select bank2
  2752  0916  1703               	bsf	3,6	;RP1=1, select bank2
  2753  0917  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2754  0918  1683               	bsf	3,5	;RP0=1, select bank1
  2755  0919  1303               	bcf	3,6	;RP1=0, select bank1
  2756  091A  00D6               	movwf	_header^(0+128)
  2757                           
  2758                           ;SlaveLiofilizadorVer1.c: 286:             if(header==0xAABB)
  2759  091B  30BB               	movlw	187
  2760  091C  0656               	xorwf	_header^(0+128),w
  2761  091D  30AA               	movlw	170
  2762  091E  1903               	skipnz
  2763  091F  0657               	xorwf	(_header+1)^(0+128),w
  2764  0920  1D03               	btfss	3,2
  2765  0921  28FD               	goto	l6011
  2766                           
  2767                           ;SlaveLiofilizadorVer1.c: 287:                {;SlaveLiofilizadorVer1.c: 288:           
      +                               destino =usart_buffer[3];
  2768  0922  1283               	bcf	3,5	;RP0=0, select bank2
  2769  0923  1703               	bsf	3,6	;RP1=1, select bank2
  2770  0924  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2771  0925  00FF               	movwf	127
  2772  0926  087F               	movf	127,w
  2773  0927  1683               	bsf	3,5	;RP0=1, select bank1
  2774  0928  1303               	bcf	3,6	;RP1=0, select bank1
  2775  0929  00DF               	movwf	_destino^(0+128)
  2776                           
  2777                           ;SlaveLiofilizadorVer1.c: 289:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2778  092A  085F               	movf	_destino^(0+128),w
  2779  092B  0660               	xorwf	_Board_Number^(0+128),w
  2780  092C  1D03               	btfss	3,2
  2781  092D  0A5F               	incf	_destino^(0+128),w
  2782  092E  1D03               	btfss	3,2
  2783  092F  28FD               	goto	l6011
  2784                           
  2785                           ;SlaveLiofilizadorVer1.c: 290:                       {;SlaveLiofilizadorVer1.c: 291:    
      +                                             Delay_Led_Usart=20;
  2786  0930  3014               	movlw	20
  2787  0931  00DA               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2788  0932  3000               	movlw	0
  2789  0933  00DB               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2790                           
  2791                           ;SlaveLiofilizadorVer1.c: 292:                       Decodify_Command();
  2792  0934  120A  118A  23FF  120A  158A  	fcall	_Decodify_Command
  2793                           
  2794                           ;SlaveLiofilizadorVer1.c: 293:                       generic_status.flag_usart_rx=0;
  2795  0939  1683               	bsf	3,5	;RP0=1, select bank1
  2796  093A  1303               	bcf	3,6	;RP1=0, select bank1
  2797  093B  1063               	bcf	_generic_status^(0+128),0
  2798                           
  2799                           ;SlaveLiofilizadorVer1.c: 296:             }
  2800  093C  28FD               	goto	l6011
  2801  093D                     __end_of_main:
  2802                           
  2803                           	psect	text1
  2804  1D61                     __ptext1:	
  2805 ;; *************** function _USART_init *****************
  2806 ;; Defined at:
  2807 ;;		line 18 in file "usart.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  baudrate        4    0[BANK0 ] unsigned long 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  i               1    5[BANK0 ] unsigned char 
  2812 ;;  erro            1    0        unsigned char 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0, btemp+1
  2817 ;; Tracked objects:
  2818 ;;		On entry : 300/0
  2819 ;;		On exit  : 300/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2822 ;;      Params:         0       4       0       0       0
  2823 ;;      Locals:         0       2       0       0       0
  2824 ;;      Temps:          0       0       0       0       0
  2825 ;;      Totals:         0       6       0       0       0
  2826 ;;Total ram usage:        6 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    1
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_main
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           
  2837                           ;psect for function _USART_init
  2838  1D61                     _USART_init:
  2839                           
  2840                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  2841                           
  2842                           ;incstack = 0
  2843                           ; Regs used in _USART_init: [wreg+status,2+status,0+btemp+1]
  2844  1D61  304B               	movlw	75
  2845  1D62  0621               	xorwf	USART_init@baudrate+1,w
  2846  1D63  0420               	iorwf	USART_init@baudrate,w
  2847  1D64  0422               	iorwf	USART_init@baudrate+2,w
  2848  1D65  0423               	iorwf	USART_init@baudrate+3,w
  2849  1D66  1D03               	btfss	3,2
  2850  1D67  2D72               	goto	l5085
  2851                           
  2852                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  2853  1D68  1798               	bsf	24,7	;volatile
  2854                           
  2855                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  2856  1D69  1618               	bsf	24,4	;volatile
  2857                           
  2858                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  2859  1D6A  1683               	bsf	3,5	;RP0=1, select bank1
  2860  1D6B  1518               	bsf	24,2	;volatile
  2861                           
  2862                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  2863  1D6C  1218               	bcf	24,4	;volatile
  2864                           
  2865                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  2866  1D6D  1318               	bcf	24,6	;volatile
  2867                           
  2868                           ;usart.c: 32:           SPBRG =12;
  2869  1D6E  300C               	movlw	12
  2870  1D6F  0099               	movwf	25	;volatile
  2871                           
  2872                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  2873  1D70  170B               	bsf	11,6	;volatile
  2874  1D71  2D8B               	goto	L1
  2875  1D72                     l5085:	
  2876                           ;usart.c: 35:           }
  2877                           
  2878                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  2879                           
  2880  1D72  30C2               	movlw	194
  2881  1D73  0621               	xorwf	USART_init@baudrate+1,w
  2882  1D74  1D03               	skipz
  2883  1D75  2D8C               	goto	l5105
  2884  1D76  0322               	decf	USART_init@baudrate+2,w
  2885  1D77  0420               	iorwf	USART_init@baudrate,w
  2886  1D78  0423               	iorwf	USART_init@baudrate+3,w
  2887  1D79  1D03               	btfss	3,2
  2888  1D7A  2D8C               	goto	l5105
  2889                           
  2890                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  2891  1D7B  3010               	movlw	16
  2892  1D7C  1683               	bsf	3,5	;RP0=1, select bank1
  2893  1D7D  0099               	movwf	25	;volatile
  2894                           
  2895                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  2896  1D7E  1703               	bsf	3,6	;RP1=1, select bank3
  2897  1D7F  1587               	bsf	7,3	;volatile
  2898                           
  2899                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  2900  1D80  1303               	bcf	3,6	;RP1=0, select bank1
  2901  1D81  1518               	bsf	24,2	;volatile
  2902                           
  2903                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  2904  1D82  1283               	bcf	3,5	;RP0=0, select bank0
  2905  1D83  1798               	bsf	24,7	;volatile
  2906                           
  2907                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  2908  1D84  1683               	bsf	3,5	;RP0=1, select bank1
  2909  1D85  1218               	bcf	24,4	;volatile
  2910                           
  2911                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  2912  1D86  1318               	bcf	24,6	;volatile
  2913                           
  2914                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  2915  1D87  1283               	bcf	3,5	;RP0=0, select bank0
  2916  1D88  1618               	bsf	24,4	;volatile
  2917                           
  2918                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  2919  1D89  170B               	bsf	11,6	;volatile
  2920                           
  2921                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  2922  1D8A  1683               	bsf	3,5	;RP0=1, select bank1
  2923  1D8B                     L1:
  2924  1D8B  168C               	bsf	12,5	;volatile
  2925  1D8C                     l5105:
  2926                           
  2927                           ;usart.c: 68:      TRISC6= 1;
  2928  1D8C  1683               	bsf	3,5	;RP0=1, select bank1
  2929  1D8D  1707               	bsf	7,6	;volatile
  2930                           
  2931                           ;usart.c: 69:      TRISC7= 1;
  2932  1D8E  1787               	bsf	7,7	;volatile
  2933                           
  2934                           ;usart.c: 71:      CREN=0;
  2935  1D8F  1283               	bcf	3,5	;RP0=0, select bank0
  2936  1D90  1218               	bcf	24,4	;volatile
  2937                           
  2938                           ;usart.c: 72:      CREN=1;
  2939  1D91  1618               	bsf	24,4	;volatile
  2940                           
  2941                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  2942  1D92  01A5               	clrf	USART_init@i
  2943  1D93                     l5119:
  2944  1D93  081A               	movf	26,w	;volatile
  2945  1D94  3001               	movlw	1
  2946  1D95  00FF               	movwf	127
  2947  1D96  087F               	movf	127,w
  2948  1D97  07A5               	addwf	USART_init@i,f
  2949  1D98  300F               	movlw	15
  2950  1D99  0225               	subwf	USART_init@i,w
  2951  1D9A  1803               	btfsc	3,0
  2952  1D9B  0008               	return
  2953  1D9C  2D93               	goto	l5119
  2954  1D9D                     __end_of_USART_init:
  2955                           
  2956                           	psect	text2
  2957  0037                     __ptext2:	
  2958 ;; *************** function _MediaPlacaVaccum *****************
  2959 ;; Defined at:
  2960 ;;		line 740 in file "SlaveLiofilizadorVer1.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  canal           1    wreg     unsigned char 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  canal           1    4[BANK1 ] unsigned char 
  2965 ;;  Temp            4    7[BANK1 ] float 
  2966 ;;  Valor           4    0        float 
  2967 ;;  i               2    5[BANK1 ] unsigned int 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 300/100
  2974 ;;		On exit  : 200/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2977 ;;      Params:         0       0       0       0       0
  2978 ;;      Locals:         0       0      11       0       0
  2979 ;;      Temps:          0       1       0       0       0
  2980 ;;      Totals:         0       1      11       0       0
  2981 ;;Total ram usage:       12 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    3
  2984 ;; This function calls:
  2985 ;;		_ADC_Media_10bits
  2986 ;;		_Package_Usart_is_for_me
  2987 ;;		___fladd
  2988 ;;		___fldiv
  2989 ;;		___flge
  2990 ;;		___flmul
  2991 ;;		___flsub
  2992 ;;		___xxtofl
  2993 ;;		_my_delay_ms
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           
  3000                           ;psect for function _MediaPlacaVaccum
  3001  0037                     _MediaPlacaVaccum:
  3002                           
  3003                           ;incstack = 0
  3004                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3005                           ;MediaPlacaVaccum@canal stored from wreg
  3006  0037  00A4               	movwf	MediaPlacaVaccum@canal^(0+128)
  3007                           
  3008                           ;SlaveLiofilizadorVer1.c: 741:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 742:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 746:      if(canal==0)
  3009  0038  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3010  0039  1D03               	btfss	3,2
  3011  003A  2AEA               	goto	l439
  3012                           
  3013                           ;SlaveLiofilizadorVer1.c: 747:        {;SlaveLiofilizadorVer1.c: 748:        ADCON1bits.
      +                          VCFG0=1;
  3014  003B  161F               	bsf	31,4	;volatile
  3015                           
  3016                           ;SlaveLiofilizadorVer1.c: 749:        ADCON1bits.VCFG1=1;
  3017  003C  169F               	bsf	31,5	;volatile
  3018                           
  3019                           ;SlaveLiofilizadorVer1.c: 750:        ADCON0bits.CHS=canal;
  3020  003D  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3021  003E  1283               	bcf	3,5	;RP0=0, select bank0
  3022  003F  00E5               	movwf	??_MediaPlacaVaccum
  3023  0040  0DE5               	rlf	??_MediaPlacaVaccum,f
  3024  0041  0DE5               	rlf	??_MediaPlacaVaccum,f
  3025  0042  081F               	movf	31,w	;volatile
  3026  0043  0665               	xorwf	??_MediaPlacaVaccum,w
  3027  0044  39C3               	andlw	-61
  3028  0045  0665               	xorwf	??_MediaPlacaVaccum,w
  3029  0046  009F               	movwf	31	;volatile
  3030                           
  3031                           ;SlaveLiofilizadorVer1.c: 751:        my_delay_ms(1);
  3032  0047  3000               	movlw	0
  3033  0048  00A3               	movwf	my_delay_ms@time+3
  3034  0049  3000               	movlw	0
  3035  004A  00A2               	movwf	my_delay_ms@time+2
  3036  004B  3000               	movlw	0
  3037  004C  00A1               	movwf	my_delay_ms@time+1
  3038  004D  3001               	movlw	1
  3039  004E  00A0               	movwf	my_delay_ms@time
  3040  004F  160A  158A  247A  120A  118A  	fcall	_my_delay_ms
  3041                           
  3042                           ;SlaveLiofilizadorVer1.c: 752:        Temp=0;
  3043  0054  3000               	movlw	0
  3044  0055  1683               	bsf	3,5	;RP0=1, select bank1
  3045  0056  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3046  0057  3000               	movlw	0
  3047  0058  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3048  0059  3000               	movlw	0
  3049  005A  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3050  005B  3000               	movlw	0
  3051  005C  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3052                           
  3053                           ;SlaveLiofilizadorVer1.c: 754:        for(i=1;i<15;i++)
  3054  005D  3001               	movlw	1
  3055  005E  00A5               	movwf	MediaPlacaVaccum@i^(0+128)
  3056  005F  3000               	movlw	0
  3057  0060  00A6               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3058  0061                     l5141:
  3059                           
  3060                           ;SlaveLiofilizadorVer1.c: 755:            {;SlaveLiofilizadorVer1.c: 756:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3061  0061  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3062  0062  160A  158A  2630  120A  118A  	fcall	_ADC_Media_10bits
  3063  0067  0831               	movf	?_ADC_Media_10bits+3,w
  3064  0068  00BA               	movwf	___fladd@b+3
  3065  0069  0830               	movf	?_ADC_Media_10bits+2,w
  3066  006A  00B9               	movwf	___fladd@b+2
  3067  006B  082F               	movf	?_ADC_Media_10bits+1,w
  3068  006C  00B8               	movwf	___fladd@b+1
  3069  006D  082E               	movf	?_ADC_Media_10bits,w
  3070  006E  00B7               	movwf	___fladd@b
  3071  006F  1683               	bsf	3,5	;RP0=1, select bank1
  3072  0070  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3073  0071  1283               	bcf	3,5	;RP0=0, select bank0
  3074  0072  00BE               	movwf	___fladd@a+3
  3075  0073  1683               	bsf	3,5	;RP0=1, select bank1
  3076  0074  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3077  0075  1283               	bcf	3,5	;RP0=0, select bank0
  3078  0076  00BD               	movwf	___fladd@a+2
  3079  0077  1683               	bsf	3,5	;RP0=1, select bank1
  3080  0078  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3081  0079  1283               	bcf	3,5	;RP0=0, select bank0
  3082  007A  00BC               	movwf	___fladd@a+1
  3083  007B  1683               	bsf	3,5	;RP0=1, select bank1
  3084  007C  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3085  007D  1283               	bcf	3,5	;RP0=0, select bank0
  3086  007E  00BB               	movwf	___fladd@a
  3087  007F  120A  158A  22DE  120A  118A  	fcall	___fladd
  3088  0084  083A               	movf	?___fladd+3,w
  3089  0085  1683               	bsf	3,5	;RP0=1, select bank1
  3090  0086  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3091  0087  1283               	bcf	3,5	;RP0=0, select bank0
  3092  0088  0839               	movf	?___fladd+2,w
  3093  0089  1683               	bsf	3,5	;RP0=1, select bank1
  3094  008A  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3095  008B  1283               	bcf	3,5	;RP0=0, select bank0
  3096  008C  0838               	movf	?___fladd+1,w
  3097  008D  1683               	bsf	3,5	;RP0=1, select bank1
  3098  008E  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3099  008F  1283               	bcf	3,5	;RP0=0, select bank0
  3100  0090  0837               	movf	?___fladd,w
  3101  0091  1683               	bsf	3,5	;RP0=1, select bank1
  3102  0092  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3103                           
  3104                           ;SlaveLiofilizadorVer1.c: 757:            if(Package_Usart_is_for_me()==1) break;
  3105  0093  160A  158A  218B  120A  118A  	fcall	_Package_Usart_is_for_me
  3106  0098  3A01               	xorlw	1
  3107  0099  1903               	btfsc	3,2
  3108  009A  28A9               	goto	l5149
  3109                           
  3110                           ;SlaveLiofilizadorVer1.c: 758:            }
  3111  009B  3001               	movlw	1
  3112  009C  1683               	bsf	3,5	;RP0=1, select bank1
  3113  009D  07A5               	addwf	MediaPlacaVaccum@i^(0+128),f
  3114  009E  1803               	skipnc
  3115  009F  0AA6               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3116  00A0  3000               	movlw	0
  3117  00A1  07A6               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3118  00A2  3000               	movlw	0
  3119  00A3  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3120  00A4  300F               	movlw	15
  3121  00A5  1903               	skipnz
  3122  00A6  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3123  00A7  1C03               	skipc
  3124  00A8  2861               	goto	l5141
  3125  00A9                     l5149:
  3126                           
  3127                           ;SlaveLiofilizadorVer1.c: 759:        if(i<10)
  3128  00A9  3000               	movlw	0
  3129  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  3130  00AB  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3131  00AC  300A               	movlw	10
  3132  00AD  1903               	skipnz
  3133  00AE  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3134  00AF  1C03               	btfss	3,0
  3135  00B0  0008               	return
  3136                           
  3137                           ;SlaveLiofilizadorVer1.c: 765:        if(i==15)
  3138  00B1  300F               	movlw	15
  3139  00B2  0625               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3140  00B3  0426               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3141  00B4  1D03               	btfss	3,2
  3142  00B5  28C0               	goto	l5157
  3143                           
  3144                           ;SlaveLiofilizadorVer1.c: 766:          Temp/=(i-1);
  3145  00B6  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3146  00B7  3EFF               	addlw	255
  3147  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  3148  00B9  00A0               	movwf	___xxtofl@val
  3149  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  3150  00BB  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3151  00BC  1803               	skipnc
  3152  00BD  3E01               	addlw	1
  3153  00BE  3EFF               	addlw	255
  3154  00BF  28C5               	goto	L2
  3155  00C0                     l5157:
  3156                           
  3157                           ;SlaveLiofilizadorVer1.c: 768:          Temp/=(i);
  3158  00C0  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3159  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  3160  00C2  00A0               	movwf	___xxtofl@val
  3161  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  3162  00C4  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3163  00C5                     L2:
  3164  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  3165  00C6  00A1               	movwf	___xxtofl@val+1
  3166  00C7  01A2               	clrf	___xxtofl@val+2
  3167  00C8  01A3               	clrf	___xxtofl@val+3
  3168  00C9  3000               	movlw	0
  3169  00CA  120A  118A  2751  120A  118A  	fcall	___xxtofl
  3170  00CF  0823               	movf	?___xxtofl+3,w
  3171  00D0  00B1               	movwf	___fldiv@a+3
  3172  00D1  0822               	movf	?___xxtofl+2,w
  3173  00D2  00B0               	movwf	___fldiv@a+2
  3174  00D3  0821               	movf	?___xxtofl+1,w
  3175  00D4  00AF               	movwf	___fldiv@a+1
  3176  00D5  0820               	movf	?___xxtofl,w
  3177  00D6  00AE               	movwf	___fldiv@a
  3178  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  3179  00D8  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3180  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  3181  00DA  00B5               	movwf	___fldiv@b+3
  3182  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  3183  00DC  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3184  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  3185  00DE  00B4               	movwf	___fldiv@b+2
  3186  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  3187  00E0  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3188  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  3189  00E2  00B3               	movwf	___fldiv@b+1
  3190  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  3191  00E4  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3192  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  3193  00E6  00B2               	movwf	___fldiv@b
  3194  00E7  120A  158A  213D  120A  118A  	fcall	___fldiv
  3195  00EC  0831               	movf	?___fldiv+3,w
  3196  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  3197  00EE  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3198  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  3199  00F0  0830               	movf	?___fldiv+2,w
  3200  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  3201  00F2  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3202  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  3203  00F4  082F               	movf	?___fldiv+1,w
  3204  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  3205  00F6  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3206  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  3207  00F8  082E               	movf	?___fldiv,w
  3208  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  3209  00FA  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3210                           
  3211                           ;SlaveLiofilizadorVer1.c: 770:        if(Temp<615)
  3212  00FB  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3213  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  3214  00FD  00A3               	movwf	___flge@ff1+3
  3215  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  3216  00FF  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3217  0100  1283               	bcf	3,5	;RP0=0, select bank0
  3218  0101  00A2               	movwf	___flge@ff1+2
  3219  0102  1683               	bsf	3,5	;RP0=1, select bank1
  3220  0103  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3221  0104  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0105  00A1               	movwf	___flge@ff1+1
  3223  0106  1683               	bsf	3,5	;RP0=1, select bank1
  3224  0107  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3225  0108  1283               	bcf	3,5	;RP0=0, select bank0
  3226  0109  00A0               	movwf	___flge@ff1
  3227  010A  3044               	movlw	68
  3228  010B  00A7               	movwf	___flge@ff2+3
  3229  010C  3019               	movlw	25
  3230  010D  00A6               	movwf	___flge@ff2+2
  3231  010E  30C0               	movlw	192
  3232  010F  00A5               	movwf	___flge@ff2+1
  3233  0110  3000               	movlw	0
  3234  0111  00A4               	movwf	___flge@ff2
  3235  0112  160A  158A  276D  120A  118A  	fcall	___flge
  3236  0117  1803               	btfsc	3,0
  3237  0118  29C9               	goto	l5163
  3238                           
  3239                           ;SlaveLiofilizadorVer1.c: 771:           {;SlaveLiofilizadorVer1.c: 772:           Vaccu
      +                          m0 =1023.0-(Temp-454.0);
  3240  0119  30C3               	movlw	195
  3241  011A  00BA               	movwf	___fladd@b+3
  3242  011B  30E3               	movlw	227
  3243  011C  00B9               	movwf	___fladd@b+2
  3244  011D  3000               	movlw	0
  3245  011E  00B8               	movwf	___fladd@b+1
  3246  011F  3000               	movlw	0
  3247  0120  00B7               	movwf	___fladd@b
  3248  0121  1683               	bsf	3,5	;RP0=1, select bank1
  3249  0122  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3250  0123  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0124  00BE               	movwf	___fladd@a+3
  3252  0125  1683               	bsf	3,5	;RP0=1, select bank1
  3253  0126  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3254  0127  1283               	bcf	3,5	;RP0=0, select bank0
  3255  0128  00BD               	movwf	___fladd@a+2
  3256  0129  1683               	bsf	3,5	;RP0=1, select bank1
  3257  012A  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3258  012B  1283               	bcf	3,5	;RP0=0, select bank0
  3259  012C  00BC               	movwf	___fladd@a+1
  3260  012D  1683               	bsf	3,5	;RP0=1, select bank1
  3261  012E  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3262  012F  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0130  00BB               	movwf	___fladd@a
  3264  0131  120A  158A  22DE  120A  118A  	fcall	___fladd
  3265  0136  083A               	movf	?___fladd+3,w
  3266  0137  1683               	bsf	3,5	;RP0=1, select bank1
  3267  0138  00A3               	movwf	(_MediaPlacaVaccum$2372+3)^(0+128)
  3268  0139  1283               	bcf	3,5	;RP0=0, select bank0
  3269  013A  0839               	movf	?___fladd+2,w
  3270  013B  1683               	bsf	3,5	;RP0=1, select bank1
  3271  013C  00A2               	movwf	(_MediaPlacaVaccum$2372+2)^(0+128)
  3272  013D  1283               	bcf	3,5	;RP0=0, select bank0
  3273  013E  0838               	movf	?___fladd+1,w
  3274  013F  1683               	bsf	3,5	;RP0=1, select bank1
  3275  0140  00A1               	movwf	(_MediaPlacaVaccum$2372+1)^(0+128)
  3276  0141  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0142  0837               	movf	?___fladd,w
  3278  0143  1683               	bsf	3,5	;RP0=1, select bank1
  3279  0144  00A0               	movwf	_MediaPlacaVaccum$2372^(0+128)
  3280                           
  3281                           ;SlaveLiofilizadorVer1.c: 771:           {;SlaveLiofilizadorVer1.c: 772:           Vaccu
      +                          m0 =1023.0-(Temp-454.0);
  3282  0145  0823               	movf	(_MediaPlacaVaccum$2372+3)^(0+128),w
  3283  0146  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0147  00CE               	movwf	___flsub@a+3
  3285  0148  1683               	bsf	3,5	;RP0=1, select bank1
  3286  0149  0822               	movf	(_MediaPlacaVaccum$2372+2)^(0+128),w
  3287  014A  1283               	bcf	3,5	;RP0=0, select bank0
  3288  014B  00CD               	movwf	___flsub@a+2
  3289  014C  1683               	bsf	3,5	;RP0=1, select bank1
  3290  014D  0821               	movf	(_MediaPlacaVaccum$2372+1)^(0+128),w
  3291  014E  1283               	bcf	3,5	;RP0=0, select bank0
  3292  014F  00CC               	movwf	___flsub@a+1
  3293  0150  1683               	bsf	3,5	;RP0=1, select bank1
  3294  0151  0820               	movf	_MediaPlacaVaccum$2372^(0+128),w
  3295  0152  1283               	bcf	3,5	;RP0=0, select bank0
  3296  0153  00CB               	movwf	___flsub@a
  3297  0154  3044               	movlw	68
  3298  0155  00D2               	movwf	___flsub@b+3
  3299  0156  307F               	movlw	127
  3300  0157  00D1               	movwf	___flsub@b+2
  3301  0158  30C0               	movlw	192
  3302  0159  00D0               	movwf	___flsub@b+1
  3303  015A  3000               	movlw	0
  3304  015B  00CF               	movwf	___flsub@b
  3305  015C  160A  158A  21DF  120A  118A  	fcall	___flsub
  3306  0161  084E               	movf	?___flsub+3,w
  3307  0162  1683               	bsf	3,5	;RP0=1, select bank1
  3308  0163  00CF               	movwf	(_Vaccum0+3)^(0+128)
  3309  0164  1283               	bcf	3,5	;RP0=0, select bank0
  3310  0165  084D               	movf	?___flsub+2,w
  3311  0166  1683               	bsf	3,5	;RP0=1, select bank1
  3312  0167  00CE               	movwf	(_Vaccum0+2)^(0+128)
  3313  0168  1283               	bcf	3,5	;RP0=0, select bank0
  3314  0169  084C               	movf	?___flsub+1,w
  3315  016A  1683               	bsf	3,5	;RP0=1, select bank1
  3316  016B  00CD               	movwf	(_Vaccum0+1)^(0+128)
  3317  016C  1283               	bcf	3,5	;RP0=0, select bank0
  3318  016D  084B               	movf	?___flsub,w
  3319  016E  1683               	bsf	3,5	;RP0=1, select bank1
  3320  016F  00CC               	movwf	_Vaccum0^(0+128)
  3321                           
  3322                           ;SlaveLiofilizadorVer1.c: 773:           Vaccum0*=1.9550342131;
  3323  0170  303F               	movlw	63
  3324  0171  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0172  00CE               	movwf	___flmul@b+3
  3326  0173  30FA               	movlw	250
  3327  0174  00CD               	movwf	___flmul@b+2
  3328  0175  303E               	movlw	62
  3329  0176  00CC               	movwf	___flmul@b+1
  3330  0177  3090               	movlw	144
  3331  0178  00CB               	movwf	___flmul@b
  3332  0179  1683               	bsf	3,5	;RP0=1, select bank1
  3333  017A  084F               	movf	(_Vaccum0+3)^(0+128),w
  3334  017B  1283               	bcf	3,5	;RP0=0, select bank0
  3335  017C  00D2               	movwf	___flmul@a+3
  3336  017D  1683               	bsf	3,5	;RP0=1, select bank1
  3337  017E  084E               	movf	(_Vaccum0+2)^(0+128),w
  3338  017F  1283               	bcf	3,5	;RP0=0, select bank0
  3339  0180  00D1               	movwf	___flmul@a+2
  3340  0181  1683               	bsf	3,5	;RP0=1, select bank1
  3341  0182  084D               	movf	(_Vaccum0+1)^(0+128),w
  3342  0183  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0184  00D0               	movwf	___flmul@a+1
  3344  0185  1683               	bsf	3,5	;RP0=1, select bank1
  3345  0186  084C               	movf	_Vaccum0^(0+128),w
  3346  0187  1283               	bcf	3,5	;RP0=0, select bank0
  3347  0188  00CF               	movwf	___flmul@a
  3348  0189  120A  158A  250B  120A  118A  	fcall	___flmul
  3349  018E  084E               	movf	?___flmul+3,w
  3350  018F  1683               	bsf	3,5	;RP0=1, select bank1
  3351  0190  00CF               	movwf	(_Vaccum0+3)^(0+128)
  3352  0191  1283               	bcf	3,5	;RP0=0, select bank0
  3353  0192  084D               	movf	?___flmul+2,w
  3354  0193  1683               	bsf	3,5	;RP0=1, select bank1
  3355  0194  00CE               	movwf	(_Vaccum0+2)^(0+128)
  3356  0195  1283               	bcf	3,5	;RP0=0, select bank0
  3357  0196  084C               	movf	?___flmul+1,w
  3358  0197  1683               	bsf	3,5	;RP0=1, select bank1
  3359  0198  00CD               	movwf	(_Vaccum0+1)^(0+128)
  3360  0199  1283               	bcf	3,5	;RP0=0, select bank0
  3361  019A  084B               	movf	?___flmul,w
  3362  019B  1683               	bsf	3,5	;RP0=1, select bank1
  3363  019C  00CC               	movwf	_Vaccum0^(0+128)
  3364                           
  3365                           ;SlaveLiofilizadorVer1.c: 774:           Vaccum0-=((Temp-454.0)*5.2);
  3366  019D  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3367  019E  1283               	bcf	3,5	;RP0=0, select bank0
  3368  019F  00BE               	movwf	___fladd@a+3
  3369  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  3370  01A1  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3371  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  3372  01A3  00BD               	movwf	___fladd@a+2
  3373  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  3374  01A5  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3375  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  3376  01A7  00BC               	movwf	___fladd@a+1
  3377  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  3378  01A9  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3379  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  3380  01AB  00BB               	movwf	___fladd@a
  3381  01AC  30C3               	movlw	195
  3382  01AD  00BA               	movwf	___fladd@b+3
  3383  01AE  30E3               	movlw	227
  3384  01AF  00B9               	movwf	___fladd@b+2
  3385  01B0  3000               	movlw	0
  3386  01B1  00B8               	movwf	___fladd@b+1
  3387  01B2  3000               	movlw	0
  3388  01B3  00B7               	movwf	___fladd@b
  3389  01B4  120A  158A  22DE  120A  118A  	fcall	___fladd
  3390  01B9  083A               	movf	?___fladd+3,w
  3391  01BA  00D2               	movwf	___flmul@a+3
  3392  01BB  0839               	movf	?___fladd+2,w
  3393  01BC  00D1               	movwf	___flmul@a+2
  3394  01BD  0838               	movf	?___fladd+1,w
  3395  01BE  00D0               	movwf	___flmul@a+1
  3396  01BF  0837               	movf	?___fladd,w
  3397  01C0  00CF               	movwf	___flmul@a
  3398  01C1  3040               	movlw	64
  3399  01C2  00CE               	movwf	___flmul@b+3
  3400  01C3  30A6               	movlw	166
  3401  01C4  00CD               	movwf	___flmul@b+2
  3402  01C5  3066               	movlw	102
  3403  01C6  00CC               	movwf	___flmul@b+1
  3404  01C7  3066               	movlw	102
  3405  01C8  2A78               	goto	L3
  3406  01C9                     l5163:	
  3407                           ;SlaveLiofilizadorVer1.c: 775:           }
  3408                           
  3409                           ;SlaveLiofilizadorVer1.c: 774:           Vaccum0-=((Temp-454.0)*5.2);
  3410                           
  3411                           
  3412                           ;SlaveLiofilizadorVer1.c: 777:           {;SlaveLiofilizadorVer1.c: 778:           Vaccu
      +                          m0 =1023.0-(Temp-616.0);
  3413  01C9  30C4               	movlw	196
  3414  01CA  00BA               	movwf	___fladd@b+3
  3415  01CB  301A               	movlw	26
  3416  01CC  00B9               	movwf	___fladd@b+2
  3417  01CD  3000               	movlw	0
  3418  01CE  00B8               	movwf	___fladd@b+1
  3419  01CF  3000               	movlw	0
  3420  01D0  00B7               	movwf	___fladd@b
  3421  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  3422  01D2  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3423  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  3424  01D4  00BE               	movwf	___fladd@a+3
  3425  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  3426  01D6  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3427  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  3428  01D8  00BD               	movwf	___fladd@a+2
  3429  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  3430  01DA  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3431  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  3432  01DC  00BC               	movwf	___fladd@a+1
  3433  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  3434  01DE  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3435  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  3436  01E0  00BB               	movwf	___fladd@a
  3437  01E1  120A  158A  22DE  120A  118A  	fcall	___fladd
  3438  01E6  083A               	movf	?___fladd+3,w
  3439  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  3440  01E8  00A3               	movwf	(_MediaPlacaVaccum$2372+3)^(0+128)
  3441  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  3442  01EA  0839               	movf	?___fladd+2,w
  3443  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  3444  01EC  00A2               	movwf	(_MediaPlacaVaccum$2372+2)^(0+128)
  3445  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  3446  01EE  0838               	movf	?___fladd+1,w
  3447  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  3448  01F0  00A1               	movwf	(_MediaPlacaVaccum$2372+1)^(0+128)
  3449  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  3450  01F2  0837               	movf	?___fladd,w
  3451  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  3452  01F4  00A0               	movwf	_MediaPlacaVaccum$2372^(0+128)
  3453                           
  3454                           ;SlaveLiofilizadorVer1.c: 777:           {;SlaveLiofilizadorVer1.c: 778:           Vaccu
      +                          m0 =1023.0-(Temp-616.0);
  3455  01F5  0823               	movf	(_MediaPlacaVaccum$2372+3)^(0+128),w
  3456  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  3457  01F7  00CE               	movwf	___flsub@a+3
  3458  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  3459  01F9  0822               	movf	(_MediaPlacaVaccum$2372+2)^(0+128),w
  3460  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  3461  01FB  00CD               	movwf	___flsub@a+2
  3462  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  3463  01FD  0821               	movf	(_MediaPlacaVaccum$2372+1)^(0+128),w
  3464  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  3465  01FF  00CC               	movwf	___flsub@a+1
  3466  0200  1683               	bsf	3,5	;RP0=1, select bank1
  3467  0201  0820               	movf	_MediaPlacaVaccum$2372^(0+128),w
  3468  0202  1283               	bcf	3,5	;RP0=0, select bank0
  3469  0203  00CB               	movwf	___flsub@a
  3470  0204  3044               	movlw	68
  3471  0205  00D2               	movwf	___flsub@b+3
  3472  0206  307F               	movlw	127
  3473  0207  00D1               	movwf	___flsub@b+2
  3474  0208  30C0               	movlw	192
  3475  0209  00D0               	movwf	___flsub@b+1
  3476  020A  3000               	movlw	0
  3477  020B  00CF               	movwf	___flsub@b
  3478  020C  160A  158A  21DF  120A  118A  	fcall	___flsub
  3479  0211  084E               	movf	?___flsub+3,w
  3480  0212  1683               	bsf	3,5	;RP0=1, select bank1
  3481  0213  00CF               	movwf	(_Vaccum0+3)^(0+128)
  3482  0214  1283               	bcf	3,5	;RP0=0, select bank0
  3483  0215  084D               	movf	?___flsub+2,w
  3484  0216  1683               	bsf	3,5	;RP0=1, select bank1
  3485  0217  00CE               	movwf	(_Vaccum0+2)^(0+128)
  3486  0218  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0219  084C               	movf	?___flsub+1,w
  3488  021A  1683               	bsf	3,5	;RP0=1, select bank1
  3489  021B  00CD               	movwf	(_Vaccum0+1)^(0+128)
  3490  021C  1283               	bcf	3,5	;RP0=0, select bank0
  3491  021D  084B               	movf	?___flsub,w
  3492  021E  1683               	bsf	3,5	;RP0=1, select bank1
  3493  021F  00CC               	movwf	_Vaccum0^(0+128)
  3494                           
  3495                           ;SlaveLiofilizadorVer1.c: 779:           Vaccum0*=0.828934506;
  3496  0220  303F               	movlw	63
  3497  0221  1283               	bcf	3,5	;RP0=0, select bank0
  3498  0222  00CE               	movwf	___flmul@b+3
  3499  0223  3054               	movlw	84
  3500  0224  00CD               	movwf	___flmul@b+2
  3501  0225  3035               	movlw	53
  3502  0226  00CC               	movwf	___flmul@b+1
  3503  0227  300D               	movlw	13
  3504  0228  00CB               	movwf	___flmul@b
  3505  0229  1683               	bsf	3,5	;RP0=1, select bank1
  3506  022A  084F               	movf	(_Vaccum0+3)^(0+128),w
  3507  022B  1283               	bcf	3,5	;RP0=0, select bank0
  3508  022C  00D2               	movwf	___flmul@a+3
  3509  022D  1683               	bsf	3,5	;RP0=1, select bank1
  3510  022E  084E               	movf	(_Vaccum0+2)^(0+128),w
  3511  022F  1283               	bcf	3,5	;RP0=0, select bank0
  3512  0230  00D1               	movwf	___flmul@a+2
  3513  0231  1683               	bsf	3,5	;RP0=1, select bank1
  3514  0232  084D               	movf	(_Vaccum0+1)^(0+128),w
  3515  0233  1283               	bcf	3,5	;RP0=0, select bank0
  3516  0234  00D0               	movwf	___flmul@a+1
  3517  0235  1683               	bsf	3,5	;RP0=1, select bank1
  3518  0236  084C               	movf	_Vaccum0^(0+128),w
  3519  0237  1283               	bcf	3,5	;RP0=0, select bank0
  3520  0238  00CF               	movwf	___flmul@a
  3521  0239  120A  158A  250B  120A  118A  	fcall	___flmul
  3522  023E  084E               	movf	?___flmul+3,w
  3523  023F  1683               	bsf	3,5	;RP0=1, select bank1
  3524  0240  00CF               	movwf	(_Vaccum0+3)^(0+128)
  3525  0241  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0242  084D               	movf	?___flmul+2,w
  3527  0243  1683               	bsf	3,5	;RP0=1, select bank1
  3528  0244  00CE               	movwf	(_Vaccum0+2)^(0+128)
  3529  0245  1283               	bcf	3,5	;RP0=0, select bank0
  3530  0246  084C               	movf	?___flmul+1,w
  3531  0247  1683               	bsf	3,5	;RP0=1, select bank1
  3532  0248  00CD               	movwf	(_Vaccum0+1)^(0+128)
  3533  0249  1283               	bcf	3,5	;RP0=0, select bank0
  3534  024A  084B               	movf	?___flmul,w
  3535  024B  1683               	bsf	3,5	;RP0=1, select bank1
  3536  024C  00CC               	movwf	_Vaccum0^(0+128)
  3537                           
  3538                           ;SlaveLiofilizadorVer1.c: 780:           Vaccum0-=((Temp-616.0)*2.34);
  3539  024D  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3540  024E  1283               	bcf	3,5	;RP0=0, select bank0
  3541  024F  00BE               	movwf	___fladd@a+3
  3542  0250  1683               	bsf	3,5	;RP0=1, select bank1
  3543  0251  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3544  0252  1283               	bcf	3,5	;RP0=0, select bank0
  3545  0253  00BD               	movwf	___fladd@a+2
  3546  0254  1683               	bsf	3,5	;RP0=1, select bank1
  3547  0255  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3548  0256  1283               	bcf	3,5	;RP0=0, select bank0
  3549  0257  00BC               	movwf	___fladd@a+1
  3550  0258  1683               	bsf	3,5	;RP0=1, select bank1
  3551  0259  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3552  025A  1283               	bcf	3,5	;RP0=0, select bank0
  3553  025B  00BB               	movwf	___fladd@a
  3554  025C  30C4               	movlw	196
  3555  025D  00BA               	movwf	___fladd@b+3
  3556  025E  301A               	movlw	26
  3557  025F  00B9               	movwf	___fladd@b+2
  3558  0260  3000               	movlw	0
  3559  0261  00B8               	movwf	___fladd@b+1
  3560  0262  3000               	movlw	0
  3561  0263  00B7               	movwf	___fladd@b
  3562  0264  120A  158A  22DE  120A  118A  	fcall	___fladd
  3563  0269  083A               	movf	?___fladd+3,w
  3564  026A  00D2               	movwf	___flmul@a+3
  3565  026B  0839               	movf	?___fladd+2,w
  3566  026C  00D1               	movwf	___flmul@a+2
  3567  026D  0838               	movf	?___fladd+1,w
  3568  026E  00D0               	movwf	___flmul@a+1
  3569  026F  0837               	movf	?___fladd,w
  3570  0270  00CF               	movwf	___flmul@a
  3571  0271  3040               	movlw	64
  3572  0272  00CE               	movwf	___flmul@b+3
  3573  0273  3015               	movlw	21
  3574  0274  00CD               	movwf	___flmul@b+2
  3575  0275  30C2               	movlw	194
  3576  0276  00CC               	movwf	___flmul@b+1
  3577  0277  308F               	movlw	143
  3578  0278                     L3:
  3579  0278  00CB               	movwf	___flmul@b
  3580  0279  120A  158A  250B  120A  118A  	fcall	___flmul
  3581  027E  084E               	movf	?___flmul+3,w
  3582  027F  1683               	bsf	3,5	;RP0=1, select bank1
  3583  0280  00A3               	movwf	(_MediaPlacaVaccum$2372+3)^(0+128)
  3584  0281  1283               	bcf	3,5	;RP0=0, select bank0
  3585  0282  084D               	movf	?___flmul+2,w
  3586  0283  1683               	bsf	3,5	;RP0=1, select bank1
  3587  0284  00A2               	movwf	(_MediaPlacaVaccum$2372+2)^(0+128)
  3588  0285  1283               	bcf	3,5	;RP0=0, select bank0
  3589  0286  084C               	movf	?___flmul+1,w
  3590  0287  1683               	bsf	3,5	;RP0=1, select bank1
  3591  0288  00A1               	movwf	(_MediaPlacaVaccum$2372+1)^(0+128)
  3592  0289  1283               	bcf	3,5	;RP0=0, select bank0
  3593  028A  084B               	movf	?___flmul,w
  3594  028B  1683               	bsf	3,5	;RP0=1, select bank1
  3595  028C  00A0               	movwf	_MediaPlacaVaccum$2372^(0+128)
  3596                           
  3597                           ;SlaveLiofilizadorVer1.c: 780:           Vaccum0-=((Temp-616.0)*2.34);
  3598  028D  0823               	movf	(_MediaPlacaVaccum$2372+3)^(0+128),w
  3599  028E  1283               	bcf	3,5	;RP0=0, select bank0
  3600  028F  00CE               	movwf	___flsub@a+3
  3601  0290  1683               	bsf	3,5	;RP0=1, select bank1
  3602  0291  0822               	movf	(_MediaPlacaVaccum$2372+2)^(0+128),w
  3603  0292  1283               	bcf	3,5	;RP0=0, select bank0
  3604  0293  00CD               	movwf	___flsub@a+2
  3605  0294  1683               	bsf	3,5	;RP0=1, select bank1
  3606  0295  0821               	movf	(_MediaPlacaVaccum$2372+1)^(0+128),w
  3607  0296  1283               	bcf	3,5	;RP0=0, select bank0
  3608  0297  00CC               	movwf	___flsub@a+1
  3609  0298  1683               	bsf	3,5	;RP0=1, select bank1
  3610  0299  0820               	movf	_MediaPlacaVaccum$2372^(0+128),w
  3611  029A  1283               	bcf	3,5	;RP0=0, select bank0
  3612  029B  00CB               	movwf	___flsub@a
  3613  029C  1683               	bsf	3,5	;RP0=1, select bank1
  3614  029D  084F               	movf	(_Vaccum0+3)^(0+128),w
  3615  029E  1283               	bcf	3,5	;RP0=0, select bank0
  3616  029F  00D2               	movwf	___flsub@b+3
  3617  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  3618  02A1  084E               	movf	(_Vaccum0+2)^(0+128),w
  3619  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  3620  02A3  00D1               	movwf	___flsub@b+2
  3621  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  3622  02A5  084D               	movf	(_Vaccum0+1)^(0+128),w
  3623  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  3624  02A7  00D0               	movwf	___flsub@b+1
  3625  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  3626  02A9  084C               	movf	_Vaccum0^(0+128),w
  3627  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  3628  02AB  00CF               	movwf	___flsub@b
  3629  02AC  160A  158A  21DF  120A  118A  	fcall	___flsub
  3630  02B1  084E               	movf	?___flsub+3,w
  3631  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  3632  02B3  00CF               	movwf	(_Vaccum0+3)^(0+128)
  3633  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  3634  02B5  084D               	movf	?___flsub+2,w
  3635  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  3636  02B7  00CE               	movwf	(_Vaccum0+2)^(0+128)
  3637  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  3638  02B9  084C               	movf	?___flsub+1,w
  3639  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  3640  02BB  00CD               	movwf	(_Vaccum0+1)^(0+128)
  3641  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  3642  02BD  084B               	movf	?___flsub,w
  3643  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  3644  02BF  00CC               	movwf	_Vaccum0^(0+128)
  3645                           
  3646                           ;SlaveLiofilizadorVer1.c: 784:        if(Vaccum0>2000)Vaccum0=2000;
  3647  02C0  3044               	movlw	68
  3648  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  3649  02C2  00A3               	movwf	___flge@ff1+3
  3650  02C3  30FA               	movlw	250
  3651  02C4  00A2               	movwf	___flge@ff1+2
  3652  02C5  3000               	movlw	0
  3653  02C6  00A1               	movwf	___flge@ff1+1
  3654  02C7  3000               	movlw	0
  3655  02C8  00A0               	movwf	___flge@ff1
  3656  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  3657  02CA  084F               	movf	(_Vaccum0+3)^(0+128),w
  3658  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  3659  02CC  00A7               	movwf	___flge@ff2+3
  3660  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  3661  02CE  084E               	movf	(_Vaccum0+2)^(0+128),w
  3662  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  3663  02D0  00A6               	movwf	___flge@ff2+2
  3664  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  3665  02D2  084D               	movf	(_Vaccum0+1)^(0+128),w
  3666  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  3667  02D4  00A5               	movwf	___flge@ff2+1
  3668  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  3669  02D6  084C               	movf	_Vaccum0^(0+128),w
  3670  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  3671  02D8  00A4               	movwf	___flge@ff2
  3672  02D9  160A  158A  276D  120A  118A  	fcall	___flge
  3673  02DE  1803               	btfsc	3,0
  3674  02DF  0008               	return
  3675  02E0  3044               	movlw	68
  3676  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  3677  02E2  00CF               	movwf	(_Vaccum0+3)^(0+128)
  3678  02E3  30FA               	movlw	250
  3679  02E4  00CE               	movwf	(_Vaccum0+2)^(0+128)
  3680  02E5  3000               	movlw	0
  3681  02E6  00CD               	movwf	(_Vaccum0+1)^(0+128)
  3682  02E7  3000               	movlw	0
  3683  02E8  00CC               	movwf	_Vaccum0^(0+128)
  3684  02E9  0008               	return
  3685  02EA                     l439:	
  3686                           ;SlaveLiofilizadorVer1.c: 795:      else
  3687                           
  3688                           
  3689                           ;SlaveLiofilizadorVer1.c: 796:        {;SlaveLiofilizadorVer1.c: 797:        ADCON1bits.
      +                          VCFG0=0;
  3690  02EA  121F               	bcf	31,4	;volatile
  3691                           
  3692                           ;SlaveLiofilizadorVer1.c: 798:        ADCON1bits.VCFG1=0;
  3693  02EB  129F               	bcf	31,5	;volatile
  3694                           
  3695                           ;SlaveLiofilizadorVer1.c: 799:        ADCON0bits.CHS=canal;
  3696  02EC  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3697  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  3698  02EE  00E5               	movwf	??_MediaPlacaVaccum
  3699  02EF  0DE5               	rlf	??_MediaPlacaVaccum,f
  3700  02F0  0DE5               	rlf	??_MediaPlacaVaccum,f
  3701  02F1  081F               	movf	31,w	;volatile
  3702  02F2  0665               	xorwf	??_MediaPlacaVaccum,w
  3703  02F3  39C3               	andlw	-61
  3704  02F4  0665               	xorwf	??_MediaPlacaVaccum,w
  3705  02F5  009F               	movwf	31	;volatile
  3706                           
  3707                           ;SlaveLiofilizadorVer1.c: 800:        my_delay_ms(1);
  3708  02F6  3000               	movlw	0
  3709  02F7  00A3               	movwf	my_delay_ms@time+3
  3710  02F8  3000               	movlw	0
  3711  02F9  00A2               	movwf	my_delay_ms@time+2
  3712  02FA  3000               	movlw	0
  3713  02FB  00A1               	movwf	my_delay_ms@time+1
  3714  02FC  3001               	movlw	1
  3715  02FD  00A0               	movwf	my_delay_ms@time
  3716  02FE  160A  158A  247A  120A  118A  	fcall	_my_delay_ms
  3717                           
  3718                           ;SlaveLiofilizadorVer1.c: 801:        Temp=0;
  3719  0303  3000               	movlw	0
  3720  0304  1683               	bsf	3,5	;RP0=1, select bank1
  3721  0305  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3722  0306  3000               	movlw	0
  3723  0307  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3724  0308  3000               	movlw	0
  3725  0309  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3726  030A  3000               	movlw	0
  3727  030B  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3728                           
  3729                           ;SlaveLiofilizadorVer1.c: 803:        for(i=1;i<15;i++)
  3730  030C  3001               	movlw	1
  3731  030D  00A5               	movwf	MediaPlacaVaccum@i^(0+128)
  3732  030E  3000               	movlw	0
  3733  030F  00A6               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3734  0310                     l5181:
  3735                           
  3736                           ;SlaveLiofilizadorVer1.c: 804:            {;SlaveLiofilizadorVer1.c: 807:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3737  0310  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3738  0311  160A  158A  2630  120A  118A  	fcall	_ADC_Media_10bits
  3739  0316  0831               	movf	?_ADC_Media_10bits+3,w
  3740  0317  00BA               	movwf	___fladd@b+3
  3741  0318  0830               	movf	?_ADC_Media_10bits+2,w
  3742  0319  00B9               	movwf	___fladd@b+2
  3743  031A  082F               	movf	?_ADC_Media_10bits+1,w
  3744  031B  00B8               	movwf	___fladd@b+1
  3745  031C  082E               	movf	?_ADC_Media_10bits,w
  3746  031D  00B7               	movwf	___fladd@b
  3747  031E  1683               	bsf	3,5	;RP0=1, select bank1
  3748  031F  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3749  0320  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0321  00BE               	movwf	___fladd@a+3
  3751  0322  1683               	bsf	3,5	;RP0=1, select bank1
  3752  0323  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3753  0324  1283               	bcf	3,5	;RP0=0, select bank0
  3754  0325  00BD               	movwf	___fladd@a+2
  3755  0326  1683               	bsf	3,5	;RP0=1, select bank1
  3756  0327  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3757  0328  1283               	bcf	3,5	;RP0=0, select bank0
  3758  0329  00BC               	movwf	___fladd@a+1
  3759  032A  1683               	bsf	3,5	;RP0=1, select bank1
  3760  032B  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3761  032C  1283               	bcf	3,5	;RP0=0, select bank0
  3762  032D  00BB               	movwf	___fladd@a
  3763  032E  120A  158A  22DE  120A  118A  	fcall	___fladd
  3764  0333  083A               	movf	?___fladd+3,w
  3765  0334  1683               	bsf	3,5	;RP0=1, select bank1
  3766  0335  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3767  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3768  0337  0839               	movf	?___fladd+2,w
  3769  0338  1683               	bsf	3,5	;RP0=1, select bank1
  3770  0339  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3771  033A  1283               	bcf	3,5	;RP0=0, select bank0
  3772  033B  0838               	movf	?___fladd+1,w
  3773  033C  1683               	bsf	3,5	;RP0=1, select bank1
  3774  033D  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3775  033E  1283               	bcf	3,5	;RP0=0, select bank0
  3776  033F  0837               	movf	?___fladd,w
  3777  0340  1683               	bsf	3,5	;RP0=1, select bank1
  3778  0341  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3779                           
  3780                           ;SlaveLiofilizadorVer1.c: 808:            if(Package_Usart_is_for_me()==1) break;
  3781  0342  160A  158A  218B  120A  118A  	fcall	_Package_Usart_is_for_me
  3782  0347  3A01               	xorlw	1
  3783  0348  1903               	btfsc	3,2
  3784  0349  2B58               	goto	l5189
  3785                           
  3786                           ;SlaveLiofilizadorVer1.c: 809:            }
  3787  034A  3001               	movlw	1
  3788  034B  1683               	bsf	3,5	;RP0=1, select bank1
  3789  034C  07A5               	addwf	MediaPlacaVaccum@i^(0+128),f
  3790  034D  1803               	skipnc
  3791  034E  0AA6               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3792  034F  3000               	movlw	0
  3793  0350  07A6               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3794  0351  3000               	movlw	0
  3795  0352  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3796  0353  300F               	movlw	15
  3797  0354  1903               	skipnz
  3798  0355  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3799  0356  1C03               	skipc
  3800  0357  2B10               	goto	l5181
  3801  0358                     l5189:
  3802                           
  3803                           ;SlaveLiofilizadorVer1.c: 810:         if(i<10)
  3804  0358  3000               	movlw	0
  3805  0359  1683               	bsf	3,5	;RP0=1, select bank1
  3806  035A  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3807  035B  300A               	movlw	10
  3808  035C  1903               	skipnz
  3809  035D  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3810  035E  1C03               	btfss	3,0
  3811  035F  0008               	return
  3812                           
  3813                           ;SlaveLiofilizadorVer1.c: 816:        if(i==15)
  3814  0360  300F               	movlw	15
  3815  0361  0625               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3816  0362  0426               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3817  0363  1D03               	btfss	3,2
  3818  0364  2B6F               	goto	l5197
  3819                           
  3820                           ;SlaveLiofilizadorVer1.c: 817:          Temp/=(i-1);
  3821  0365  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3822  0366  3EFF               	addlw	255
  3823  0367  1283               	bcf	3,5	;RP0=0, select bank0
  3824  0368  00A0               	movwf	___xxtofl@val
  3825  0369  1683               	bsf	3,5	;RP0=1, select bank1
  3826  036A  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3827  036B  1803               	skipnc
  3828  036C  3E01               	addlw	1
  3829  036D  3EFF               	addlw	255
  3830  036E  2B74               	goto	L4
  3831  036F                     l5197:
  3832                           
  3833                           ;SlaveLiofilizadorVer1.c: 819:          Temp/=(i);
  3834  036F  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3835  0370  1283               	bcf	3,5	;RP0=0, select bank0
  3836  0371  00A0               	movwf	___xxtofl@val
  3837  0372  1683               	bsf	3,5	;RP0=1, select bank1
  3838  0373  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3839  0374                     L4:
  3840  0374  1283               	bcf	3,5	;RP0=0, select bank0
  3841  0375  00A1               	movwf	___xxtofl@val+1
  3842  0376  01A2               	clrf	___xxtofl@val+2
  3843  0377  01A3               	clrf	___xxtofl@val+3
  3844  0378  3000               	movlw	0
  3845  0379  120A  118A  2751  120A  118A  	fcall	___xxtofl
  3846  037E  0823               	movf	?___xxtofl+3,w
  3847  037F  00B1               	movwf	___fldiv@a+3
  3848  0380  0822               	movf	?___xxtofl+2,w
  3849  0381  00B0               	movwf	___fldiv@a+2
  3850  0382  0821               	movf	?___xxtofl+1,w
  3851  0383  00AF               	movwf	___fldiv@a+1
  3852  0384  0820               	movf	?___xxtofl,w
  3853  0385  00AE               	movwf	___fldiv@a
  3854  0386  1683               	bsf	3,5	;RP0=1, select bank1
  3855  0387  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3856  0388  1283               	bcf	3,5	;RP0=0, select bank0
  3857  0389  00B5               	movwf	___fldiv@b+3
  3858  038A  1683               	bsf	3,5	;RP0=1, select bank1
  3859  038B  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3860  038C  1283               	bcf	3,5	;RP0=0, select bank0
  3861  038D  00B4               	movwf	___fldiv@b+2
  3862  038E  1683               	bsf	3,5	;RP0=1, select bank1
  3863  038F  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3864  0390  1283               	bcf	3,5	;RP0=0, select bank0
  3865  0391  00B3               	movwf	___fldiv@b+1
  3866  0392  1683               	bsf	3,5	;RP0=1, select bank1
  3867  0393  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3868  0394  1283               	bcf	3,5	;RP0=0, select bank0
  3869  0395  00B2               	movwf	___fldiv@b
  3870  0396  120A  158A  213D  120A  118A  	fcall	___fldiv
  3871  039B  0831               	movf	?___fldiv+3,w
  3872  039C  1683               	bsf	3,5	;RP0=1, select bank1
  3873  039D  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3874  039E  1283               	bcf	3,5	;RP0=0, select bank0
  3875  039F  0830               	movf	?___fldiv+2,w
  3876  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  3877  03A1  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3878  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3879  03A3  082F               	movf	?___fldiv+1,w
  3880  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  3881  03A5  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3882  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  3883  03A7  082E               	movf	?___fldiv,w
  3884  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  3885  03A9  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3886                           
  3887                           ;SlaveLiofilizadorVer1.c: 821:         Tensao1 =Temp*0.558296;
  3888  03AA  303F               	movlw	63
  3889  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  3890  03AC  00CE               	movwf	___flmul@b+3
  3891  03AD  300E               	movlw	14
  3892  03AE  00CD               	movwf	___flmul@b+2
  3893  03AF  30EC               	movlw	236
  3894  03B0  00CC               	movwf	___flmul@b+1
  3895  03B1  307D               	movlw	125
  3896  03B2  00CB               	movwf	___flmul@b
  3897  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  3898  03B4  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3899  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  3900  03B6  00D2               	movwf	___flmul@a+3
  3901  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  3902  03B8  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3903  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  3904  03BA  00D1               	movwf	___flmul@a+2
  3905  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  3906  03BC  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3907  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  3908  03BE  00D0               	movwf	___flmul@a+1
  3909  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  3910  03C0  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3911  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  3912  03C2  00CF               	movwf	___flmul@a
  3913  03C3  120A  158A  250B  120A  118A  	fcall	___flmul
  3914  03C8  084E               	movf	?___flmul+3,w
  3915  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  3916  03CA  00CB               	movwf	(_Tensao1+3)^(0+128)
  3917  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  3918  03CC  084D               	movf	?___flmul+2,w
  3919  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  3920  03CE  00CA               	movwf	(_Tensao1+2)^(0+128)
  3921  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3922  03D0  084C               	movf	?___flmul+1,w
  3923  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  3924  03D2  00C9               	movwf	(_Tensao1+1)^(0+128)
  3925  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  3926  03D4  084B               	movf	?___flmul,w
  3927  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  3928  03D6  00C8               	movwf	_Tensao1^(0+128)
  3929                           
  3930                           ;SlaveLiofilizadorVer1.c: 822:         if(Tensao1<15) Tensao1=0;
  3931  03D7  084B               	movf	(_Tensao1+3)^(0+128),w
  3932  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  3933  03D9  00A3               	movwf	___flge@ff1+3
  3934  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  3935  03DB  084A               	movf	(_Tensao1+2)^(0+128),w
  3936  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  3937  03DD  00A2               	movwf	___flge@ff1+2
  3938  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  3939  03DF  0849               	movf	(_Tensao1+1)^(0+128),w
  3940  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  3941  03E1  00A1               	movwf	___flge@ff1+1
  3942  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  3943  03E3  0848               	movf	_Tensao1^(0+128),w
  3944  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  3945  03E5  00A0               	movwf	___flge@ff1
  3946  03E6  3041               	movlw	65
  3947  03E7  00A7               	movwf	___flge@ff2+3
  3948  03E8  3070               	movlw	112
  3949  03E9  00A6               	movwf	___flge@ff2+2
  3950  03EA  3000               	movlw	0
  3951  03EB  00A5               	movwf	___flge@ff2+1
  3952  03EC  3000               	movlw	0
  3953  03ED  00A4               	movwf	___flge@ff2
  3954  03EE  160A  158A  276D  120A  118A  	fcall	___flge
  3955  03F3  1803               	btfsc	3,0
  3956  03F4  0008               	return
  3957  03F5  3000               	movlw	0
  3958  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  3959  03F7  00CB               	movwf	(_Tensao1+3)^(0+128)
  3960  03F8  3000               	movlw	0
  3961  03F9  00CA               	movwf	(_Tensao1+2)^(0+128)
  3962  03FA  3000               	movlw	0
  3963  03FB  00C9               	movwf	(_Tensao1+1)^(0+128)
  3964  03FC  3000               	movlw	0
  3965  03FD  00C8               	movwf	_Tensao1^(0+128)
  3966  03FE  0008               	return
  3967  03FF                     __end_of_MediaPlacaVaccum:
  3968                           
  3969                           	psect	text3
  3970  19DF                     __ptext3:	
  3971 ;; *************** function ___flsub *****************
  3972 ;; Defined at:
  3973 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;  a               4   43[BANK0 ] void 
  3976 ;;  b               4   47[BANK0 ] void 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  4   43[BANK0 ] void 
  3981 ;; Registers used:
  3982 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 300/0
  3985 ;;		On exit  : 300/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3988 ;;      Params:         0       8       0       0       0
  3989 ;;      Locals:         0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0
  3991 ;;      Totals:         0       8       0       0       0
  3992 ;;Total ram usage:        8 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    2
  3995 ;; This function calls:
  3996 ;;		___fladd
  3997 ;; This function is called by:
  3998 ;;		_MediaPlacaVaccum
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           
  4003                           ;psect for function ___flsub
  4004  19DF                     ___flsub:
  4005                           
  4006                           ;incstack = 0
  4007                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4008  19DF  3080               	movlw	128
  4009  19E0  06CE               	xorwf	___flsub@a+3,f
  4010  19E1  0852               	movf	___flsub@b+3,w
  4011  19E2  00BA               	movwf	___fladd@b+3
  4012  19E3  0851               	movf	___flsub@b+2,w
  4013  19E4  00B9               	movwf	___fladd@b+2
  4014  19E5  0850               	movf	___flsub@b+1,w
  4015  19E6  00B8               	movwf	___fladd@b+1
  4016  19E7  084F               	movf	___flsub@b,w
  4017  19E8  00B7               	movwf	___fladd@b
  4018  19E9  084E               	movf	___flsub@a+3,w
  4019  19EA  00BE               	movwf	___fladd@a+3
  4020  19EB  084D               	movf	___flsub@a+2,w
  4021  19EC  00BD               	movwf	___fladd@a+2
  4022  19ED  084C               	movf	___flsub@a+1,w
  4023  19EE  00BC               	movwf	___fladd@a+1
  4024  19EF  084B               	movf	___flsub@a,w
  4025  19F0  00BB               	movwf	___fladd@a
  4026  19F1  120A  158A  22DE   	fcall	___fladd
  4027  19F4  083A               	movf	?___fladd+3,w
  4028  19F5  00CE               	movwf	?___flsub+3
  4029  19F6  0839               	movf	?___fladd+2,w
  4030  19F7  00CD               	movwf	?___flsub+2
  4031  19F8  0838               	movf	?___fladd+1,w
  4032  19F9  00CC               	movwf	?___flsub+1
  4033  19FA  0837               	movf	?___fladd,w
  4034  19FB  00CB               	movwf	?___flsub
  4035  19FC  0008               	return
  4036  19FD                     __end_of___flsub:
  4037                           
  4038                           	psect	text4
  4039  0ADE                     __ptext4:	
  4040 ;; *************** function ___fladd *****************
  4041 ;; Defined at:
  4042 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  b               4   23[BANK0 ] void 
  4045 ;;  a               4   27[BANK0 ] void 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  grs             1   42[BANK0 ] unsigned char 
  4048 ;;  bexp            1   41[BANK0 ] unsigned char 
  4049 ;;  aexp            1   40[BANK0 ] unsigned char 
  4050 ;;  signs           1   39[BANK0 ] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  4   23[BANK0 ] unsigned char 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0, btemp+1
  4055 ;; Tracked objects:
  4056 ;;		On entry : 300/0
  4057 ;;		On exit  : 300/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4060 ;;      Params:         0       8       0       0       0
  4061 ;;      Locals:         0       4       0       0       0
  4062 ;;      Temps:          0       8       0       0       0
  4063 ;;      Totals:         0      20       0       0       0
  4064 ;;Total ram usage:       20 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    1
  4067 ;; This function calls:
  4068 ;;		Nothing
  4069 ;; This function is called by:
  4070 ;;		_MediaPlacaVaccum
  4071 ;;		___flsub
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           
  4076                           ;psect for function ___fladd
  4077  0ADE                     ___fladd:
  4078                           
  4079                           ;incstack = 0
  4080                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4081  0ADE  083A               	movf	___fladd@b+3,w
  4082  0ADF  3980               	andlw	128
  4083  0AE0  00FF               	movwf	127
  4084  0AE1  087F               	movf	127,w
  4085  0AE2  00C7               	movwf	___fladd@signs
  4086  0AE3  083A               	movf	___fladd@b+3,w
  4087  0AE4  00BF               	movwf	??___fladd
  4088  0AE5  073F               	addwf	??___fladd,w
  4089  0AE6  00FF               	movwf	127
  4090  0AE7  087F               	movf	127,w
  4091  0AE8  00C9               	movwf	___fladd@bexp
  4092  0AE9  1BB9               	btfsc	___fladd@b+2,7
  4093  0AEA  1449               	bsf	___fladd@bexp,0
  4094  0AEB  0849               	movf	___fladd@bexp,w
  4095  0AEC  1903               	btfsc	3,2
  4096  0AED  2AFC               	goto	l4043
  4097  0AEE  0A49               	incf	___fladd@bexp,w
  4098  0AEF  1D03               	btfss	3,2
  4099  0AF0  2AF9               	goto	l4039
  4100  0AF1  3000               	movlw	0
  4101  0AF2  00BA               	movwf	___fladd@b+3
  4102  0AF3  3000               	movlw	0
  4103  0AF4  00B9               	movwf	___fladd@b+2
  4104  0AF5  3000               	movlw	0
  4105  0AF6  00B8               	movwf	___fladd@b+1
  4106  0AF7  3000               	movlw	0
  4107  0AF8  00B7               	movwf	___fladd@b
  4108  0AF9                     l4039:
  4109  0AF9  17B9               	bsf	___fladd@b+2,7
  4110  0AFA  01BA               	clrf	___fladd@b+3
  4111  0AFB  2B04               	goto	l4045
  4112  0AFC                     l4043:
  4113  0AFC  3000               	movlw	0
  4114  0AFD  00BA               	movwf	___fladd@b+3
  4115  0AFE  3000               	movlw	0
  4116  0AFF  00B9               	movwf	___fladd@b+2
  4117  0B00  3000               	movlw	0
  4118  0B01  00B8               	movwf	___fladd@b+1
  4119  0B02  3000               	movlw	0
  4120  0B03  00B7               	movwf	___fladd@b
  4121  0B04                     l4045:
  4122  0B04  083E               	movf	___fladd@a+3,w
  4123  0B05  3980               	andlw	128
  4124  0B06  00FF               	movwf	127
  4125  0B07  087F               	movf	127,w
  4126  0B08  00C8               	movwf	___fladd@aexp
  4127  0B09  0848               	movf	___fladd@aexp,w
  4128  0B0A  0647               	xorwf	___fladd@signs,w
  4129  0B0B  1D03               	btfss	3,2
  4130  0B0C  1747               	bsf	___fladd@signs,6
  4131  0B0D  083E               	movf	___fladd@a+3,w
  4132  0B0E  00BF               	movwf	??___fladd
  4133  0B0F  073F               	addwf	??___fladd,w
  4134  0B10  00FF               	movwf	127
  4135  0B11  087F               	movf	127,w
  4136  0B12  00C8               	movwf	___fladd@aexp
  4137  0B13  1BBD               	btfsc	___fladd@a+2,7
  4138  0B14  1448               	bsf	___fladd@aexp,0
  4139  0B15  0848               	movf	___fladd@aexp,w
  4140  0B16  1903               	btfsc	3,2
  4141  0B17  2B26               	goto	l4067
  4142  0B18  0A48               	incf	___fladd@aexp,w
  4143  0B19  1D03               	btfss	3,2
  4144  0B1A  2B23               	goto	l4063
  4145  0B1B  3000               	movlw	0
  4146  0B1C  00BE               	movwf	___fladd@a+3
  4147  0B1D  3000               	movlw	0
  4148  0B1E  00BD               	movwf	___fladd@a+2
  4149  0B1F  3000               	movlw	0
  4150  0B20  00BC               	movwf	___fladd@a+1
  4151  0B21  3000               	movlw	0
  4152  0B22  00BB               	movwf	___fladd@a
  4153  0B23                     l4063:
  4154  0B23  17BD               	bsf	___fladd@a+2,7
  4155  0B24  01BE               	clrf	___fladd@a+3
  4156  0B25  2B2E               	goto	l1290
  4157  0B26                     l4067:
  4158  0B26  3000               	movlw	0
  4159  0B27  00BE               	movwf	___fladd@a+3
  4160  0B28  3000               	movlw	0
  4161  0B29  00BD               	movwf	___fladd@a+2
  4162  0B2A  3000               	movlw	0
  4163  0B2B  00BC               	movwf	___fladd@a+1
  4164  0B2C  3000               	movlw	0
  4165  0B2D  00BB               	movwf	___fladd@a
  4166  0B2E                     l1290:
  4167  0B2E  0849               	movf	___fladd@bexp,w
  4168  0B2F  0248               	subwf	___fladd@aexp,w
  4169  0B30  1803               	skipnc
  4170  0B31  2B74               	goto	l4103
  4171  0B32  1F47               	btfss	___fladd@signs,6
  4172  0B33  2B38               	goto	l4073
  4173  0B34  3080               	movlw	128
  4174  0B35  00FF               	movwf	127
  4175  0B36  087F               	movf	127,w
  4176  0B37  06C7               	xorwf	___fladd@signs,f
  4177  0B38                     l4073:
  4178  0B38  0849               	movf	___fladd@bexp,w
  4179  0B39  00FF               	movwf	127
  4180  0B3A  087F               	movf	127,w
  4181  0B3B  00CA               	movwf	___fladd@grs
  4182  0B3C  0848               	movf	___fladd@aexp,w
  4183  0B3D  00FF               	movwf	127
  4184  0B3E  087F               	movf	127,w
  4185  0B3F  00C9               	movwf	___fladd@bexp
  4186  0B40  084A               	movf	___fladd@grs,w
  4187  0B41  00FF               	movwf	127
  4188  0B42  087F               	movf	127,w
  4189  0B43  00C8               	movwf	___fladd@aexp
  4190  0B44  0837               	movf	___fladd@b,w
  4191  0B45  00FF               	movwf	127
  4192  0B46  087F               	movf	127,w
  4193  0B47  00CA               	movwf	___fladd@grs
  4194  0B48  083B               	movf	___fladd@a,w
  4195  0B49  00FF               	movwf	127
  4196  0B4A  087F               	movf	127,w
  4197  0B4B  00B7               	movwf	___fladd@b
  4198  0B4C  084A               	movf	___fladd@grs,w
  4199  0B4D  00FF               	movwf	127
  4200  0B4E  087F               	movf	127,w
  4201  0B4F  00BB               	movwf	___fladd@a
  4202  0B50  0838               	movf	___fladd@b+1,w
  4203  0B51  00FF               	movwf	127
  4204  0B52  087F               	movf	127,w
  4205  0B53  00CA               	movwf	___fladd@grs
  4206  0B54  083C               	movf	___fladd@a+1,w
  4207  0B55  00FF               	movwf	127
  4208  0B56  087F               	movf	127,w
  4209  0B57  00B8               	movwf	___fladd@b+1
  4210  0B58  084A               	movf	___fladd@grs,w
  4211  0B59  00FF               	movwf	127
  4212  0B5A  087F               	movf	127,w
  4213  0B5B  00BC               	movwf	___fladd@a+1
  4214  0B5C  0839               	movf	___fladd@b+2,w
  4215  0B5D  00FF               	movwf	127
  4216  0B5E  087F               	movf	127,w
  4217  0B5F  00CA               	movwf	___fladd@grs
  4218  0B60  083D               	movf	___fladd@a+2,w
  4219  0B61  00FF               	movwf	127
  4220  0B62  087F               	movf	127,w
  4221  0B63  00B9               	movwf	___fladd@b+2
  4222  0B64  084A               	movf	___fladd@grs,w
  4223  0B65  00FF               	movwf	127
  4224  0B66  087F               	movf	127,w
  4225  0B67  00BD               	movwf	___fladd@a+2
  4226  0B68  083A               	movf	___fladd@b+3,w
  4227  0B69  00FF               	movwf	127
  4228  0B6A  087F               	movf	127,w
  4229  0B6B  00CA               	movwf	___fladd@grs
  4230  0B6C  083E               	movf	___fladd@a+3,w
  4231  0B6D  00FF               	movwf	127
  4232  0B6E  087F               	movf	127,w
  4233  0B6F  00BA               	movwf	___fladd@b+3
  4234  0B70  084A               	movf	___fladd@grs,w
  4235  0B71  00FF               	movwf	127
  4236  0B72  087F               	movf	127,w
  4237  0B73  00BE               	movwf	___fladd@a+3
  4238  0B74                     l4103:
  4239  0B74  01CA               	clrf	___fladd@grs
  4240  0B75  0848               	movf	___fladd@aexp,w
  4241  0B76  00BF               	movwf	??___fladd
  4242  0B77  01C0               	clrf	??___fladd+1
  4243  0B78  0840               	movf	??___fladd+1,w
  4244  0B79  00C2               	movwf	??___fladd+3
  4245  0B7A  0849               	movf	___fladd@bexp,w
  4246  0B7B  023F               	subwf	??___fladd,w
  4247  0B7C  00C1               	movwf	??___fladd+2
  4248  0B7D  1C03               	skipc
  4249  0B7E  03C2               	decf	??___fladd+3,f
  4250  0B7F  0842               	movf	??___fladd+3,w
  4251  0B80  3A80               	xorlw	128
  4252  0B81  00FF               	movwf	127
  4253  0B82  3080               	movlw	128
  4254  0B83  027F               	subwf	127,w
  4255  0B84  1D03               	skipz
  4256  0B85  2B88               	goto	u3295
  4257  0B86  301A               	movlw	26
  4258  0B87  0241               	subwf	??___fladd+2,w
  4259  0B88                     u3295:
  4260  0B88  1C03               	skipc
  4261  0B89  2BC1               	goto	l4125
  4262  0B8A  1283               	bcf	3,5	;RP0=0, select bank0
  4263  0B8B  1303               	bcf	3,6	;RP1=0, select bank0
  4264  0B8C  083A               	movf	___fladd@b+3,w
  4265  0B8D  0439               	iorwf	___fladd@b+2,w
  4266  0B8E  0438               	iorwf	___fladd@b+1,w
  4267  0B8F  0437               	iorwf	___fladd@b,w
  4268  0B90  1903               	btfsc	3,2
  4269  0B91  2B94               	goto	u3300
  4270  0B92  3001               	movlw	1
  4271  0B93  2B95               	goto	u3310
  4272  0B94                     u3300:
  4273  0B94  3000               	movlw	0
  4274  0B95                     u3310:
  4275  0B95  00FF               	movwf	127
  4276  0B96  087F               	movf	127,w
  4277  0B97  00CA               	movwf	___fladd@grs
  4278  0B98  3000               	movlw	0
  4279  0B99  00BA               	movwf	___fladd@b+3
  4280  0B9A  3000               	movlw	0
  4281  0B9B  00B9               	movwf	___fladd@b+2
  4282  0B9C  3000               	movlw	0
  4283  0B9D  00B8               	movwf	___fladd@b+1
  4284  0B9E  3000               	movlw	0
  4285  0B9F  00B7               	movwf	___fladd@b
  4286  0BA0  0848               	movf	___fladd@aexp,w
  4287  0BA1  00FF               	movwf	127
  4288  0BA2  087F               	movf	127,w
  4289  0BA3  00C9               	movwf	___fladd@bexp
  4290  0BA4  2BC7               	goto	l1294
  4291  0BA5                     l1296:
  4292  0BA5  1C4A               	btfss	___fladd@grs,0
  4293  0BA6  2BB0               	goto	l4115
  4294  0BA7  084A               	movf	___fladd@grs,w
  4295  0BA8  00BF               	movwf	??___fladd
  4296  0BA9  1003               	clrc
  4297  0BAA  0C3F               	rrf	??___fladd,w
  4298  0BAB  3801               	iorlw	1
  4299  0BAC  00FF               	movwf	127
  4300  0BAD  087F               	movf	127,w
  4301  0BAE  00CA               	movwf	___fladd@grs
  4302  0BAF  2BB2               	goto	l4117
  4303  0BB0                     l4115:
  4304  0BB0  1003               	clrc
  4305  0BB1  0CCA               	rrf	___fladd@grs,f
  4306  0BB2                     l4117:
  4307  0BB2  1837               	btfsc	___fladd@b,0
  4308  0BB3  17CA               	bsf	___fladd@grs,7
  4309  0BB4  3001               	movlw	1
  4310  0BB5  00BF               	movwf	??___fladd
  4311  0BB6                     u3345:
  4312  0BB6  0D3A               	rlf	___fladd@b+3,w
  4313  0BB7  0CBA               	rrf	___fladd@b+3,f
  4314  0BB8  0CB9               	rrf	___fladd@b+2,f
  4315  0BB9  0CB8               	rrf	___fladd@b+1,f
  4316  0BBA  0CB7               	rrf	___fladd@b,f
  4317  0BBB  0BBF               	decfsz	??___fladd& (0+127),f
  4318  0BBC  2BB6               	goto	u3345
  4319  0BBD  3001               	movlw	1
  4320  0BBE  00FF               	movwf	127
  4321  0BBF  087F               	movf	127,w
  4322  0BC0  07C9               	addwf	___fladd@bexp,f
  4323  0BC1                     l4125:
  4324  0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  4325  0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  4326  0BC3  0848               	movf	___fladd@aexp,w
  4327  0BC4  0249               	subwf	___fladd@bexp,w
  4328  0BC5  1C03               	skipc
  4329  0BC6  2BA5               	goto	l1296
  4330  0BC7                     l1294:
  4331  0BC7  1B47               	btfsc	___fladd@signs,6
  4332  0BC8  2C08               	goto	l4151
  4333  0BC9  0849               	movf	___fladd@bexp,w
  4334  0BCA  1D03               	btfss	3,2
  4335  0BCB  2BD5               	goto	l4133
  4336  0BCC  3000               	movlw	0
  4337  0BCD  00BA               	movwf	?___fladd+3
  4338  0BCE  3000               	movlw	0
  4339  0BCF  00B9               	movwf	?___fladd+2
  4340  0BD0  3000               	movlw	0
  4341  0BD1  00B8               	movwf	?___fladd+1
  4342  0BD2  3000               	movlw	0
  4343  0BD3  00B7               	movwf	?___fladd
  4344  0BD4  0008               	return
  4345  0BD5                     l4133:
  4346  0BD5  083B               	movf	___fladd@a,w
  4347  0BD6  07B7               	addwf	___fladd@b,f
  4348  0BD7  083C               	movf	___fladd@a+1,w
  4349  0BD8  1103               	clrz
  4350  0BD9  1803               	skipnc
  4351  0BDA  3E01               	addlw	1
  4352  0BDB  1D03               	btfss	3,2
  4353  0BDC  07B8               	addwf	___fladd@b+1,f
  4354  0BDD  083D               	movf	___fladd@a+2,w
  4355  0BDE  1103               	clrz
  4356  0BDF  1803               	skipnc
  4357  0BE0  3E01               	addlw	1
  4358  0BE1  1D03               	btfss	3,2
  4359  0BE2  07B9               	addwf	___fladd@b+2,f
  4360  0BE3  083E               	movf	___fladd@a+3,w
  4361  0BE4  1103               	clrz
  4362  0BE5  1803               	skipnc
  4363  0BE6  3E01               	addlw	1
  4364  0BE7  1D03               	btfss	3,2
  4365  0BE8  07BA               	addwf	___fladd@b+3,f
  4366  0BE9  1C3A               	btfss	___fladd@b+3,0
  4367  0BEA  2CAA               	goto	l4187
  4368  0BEB  1C4A               	btfss	___fladd@grs,0
  4369  0BEC  2BF6               	goto	l4141
  4370  0BED  084A               	movf	___fladd@grs,w
  4371  0BEE  00BF               	movwf	??___fladd
  4372  0BEF  1003               	clrc
  4373  0BF0  0C3F               	rrf	??___fladd,w
  4374  0BF1  3801               	iorlw	1
  4375  0BF2  00FF               	movwf	127
  4376  0BF3  087F               	movf	127,w
  4377  0BF4  00CA               	movwf	___fladd@grs
  4378  0BF5  2BF8               	goto	l4143
  4379  0BF6                     l4141:
  4380  0BF6  1003               	clrc
  4381  0BF7  0CCA               	rrf	___fladd@grs,f
  4382  0BF8                     l4143:
  4383  0BF8  1837               	btfsc	___fladd@b,0
  4384  0BF9  17CA               	bsf	___fladd@grs,7
  4385  0BFA  3001               	movlw	1
  4386  0BFB  00BF               	movwf	??___fladd
  4387  0BFC                     u3425:
  4388  0BFC  0D3A               	rlf	___fladd@b+3,w
  4389  0BFD  0CBA               	rrf	___fladd@b+3,f
  4390  0BFE  0CB9               	rrf	___fladd@b+2,f
  4391  0BFF  0CB8               	rrf	___fladd@b+1,f
  4392  0C00  0CB7               	rrf	___fladd@b,f
  4393  0C01  0BBF               	decfsz	??___fladd& (0+127),f
  4394  0C02  2BFC               	goto	u3425
  4395  0C03  3001               	movlw	1
  4396  0C04  00FF               	movwf	127
  4397  0C05  087F               	movf	127,w
  4398  0C06  07C9               	addwf	___fladd@bexp,f
  4399  0C07  2CAA               	goto	l4187
  4400  0C08                     l4151:
  4401  0C08  083A               	movf	___fladd@b+3,w
  4402  0C09  3A80               	xorlw	128
  4403  0C0A  00FF               	movwf	127
  4404  0C0B  083E               	movf	___fladd@a+3,w
  4405  0C0C  3A80               	xorlw	128
  4406  0C0D  027F               	subwf	127,w
  4407  0C0E  1D03               	skipz
  4408  0C0F  2C1A               	goto	u3433
  4409  0C10  083D               	movf	___fladd@a+2,w
  4410  0C11  0239               	subwf	___fladd@b+2,w
  4411  0C12  1D03               	skipz
  4412  0C13  2C1A               	goto	u3433
  4413  0C14  083C               	movf	___fladd@a+1,w
  4414  0C15  0238               	subwf	___fladd@b+1,w
  4415  0C16  1D03               	skipz
  4416  0C17  2C1A               	goto	u3433
  4417  0C18  083B               	movf	___fladd@a,w
  4418  0C19  0237               	subwf	___fladd@b,w
  4419  0C1A                     u3433:
  4420  0C1A  1803               	skipnc
  4421  0C1B  2C72               	goto	l4163
  4422  0C1C  30FF               	movlw	255
  4423  0C1D  00BF               	movwf	??___fladd
  4424  0C1E  30FF               	movlw	255
  4425  0C1F  00C0               	movwf	??___fladd+1
  4426  0C20  30FF               	movlw	255
  4427  0C21  00C1               	movwf	??___fladd+2
  4428  0C22  30FF               	movlw	255
  4429  0C23  00C2               	movwf	??___fladd+3
  4430  0C24  083B               	movf	___fladd@a,w
  4431  0C25  00C3               	movwf	??___fladd+4
  4432  0C26  083C               	movf	___fladd@a+1,w
  4433  0C27  00C4               	movwf	??___fladd+5
  4434  0C28  083D               	movf	___fladd@a+2,w
  4435  0C29  00C5               	movwf	??___fladd+6
  4436  0C2A  083E               	movf	___fladd@a+3,w
  4437  0C2B  00C6               	movwf	??___fladd+7
  4438  0C2C  0837               	movf	___fladd@b,w
  4439  0C2D  02C3               	subwf	??___fladd+4,f
  4440  0C2E  0838               	movf	___fladd@b+1,w
  4441  0C2F  1C03               	skipc
  4442  0C30  0F38               	incfsz	___fladd@b+1,w
  4443  0C31  2C33               	goto	u3441
  4444  0C32  2C34               	goto	u3442
  4445  0C33                     u3441:
  4446  0C33  02C4               	subwf	??___fladd+5,f
  4447  0C34                     u3442:
  4448  0C34  0839               	movf	___fladd@b+2,w
  4449  0C35  1C03               	skipc
  4450  0C36  0F39               	incfsz	___fladd@b+2,w
  4451  0C37  2C39               	goto	u3443
  4452  0C38  2C3A               	goto	u3444
  4453  0C39                     u3443:
  4454  0C39  02C5               	subwf	??___fladd+6,f
  4455  0C3A                     u3444:
  4456  0C3A  083A               	movf	___fladd@b+3,w
  4457  0C3B  1C03               	skipc
  4458  0C3C  0F3A               	incfsz	___fladd@b+3,w
  4459  0C3D  2C3F               	goto	u3445
  4460  0C3E  2C40               	goto	u3446
  4461  0C3F                     u3445:
  4462  0C3F  02C6               	subwf	??___fladd+7,f
  4463  0C40                     u3446:
  4464  0C40  0843               	movf	??___fladd+4,w
  4465  0C41  07BF               	addwf	??___fladd,f
  4466  0C42  0844               	movf	??___fladd+5,w
  4467  0C43  1803               	skipnc
  4468  0C44  0F44               	incfsz	??___fladd+5,w
  4469  0C45  2C47               	goto	u3450
  4470  0C46  2C48               	goto	u3451
  4471  0C47                     u3450:
  4472  0C47  07C0               	addwf	??___fladd+1,f
  4473  0C48                     u3451:
  4474  0C48  0845               	movf	??___fladd+6,w
  4475  0C49  1803               	skipnc
  4476  0C4A  0F45               	incfsz	??___fladd+6,w
  4477  0C4B  2C4D               	goto	u3452
  4478  0C4C  2C4E               	goto	u3453
  4479  0C4D                     u3452:
  4480  0C4D  07C1               	addwf	??___fladd+2,f
  4481  0C4E                     u3453:
  4482  0C4E  0846               	movf	??___fladd+7,w
  4483  0C4F  1803               	skipnc
  4484  0C50  0A46               	incf	??___fladd+7,w
  4485  0C51  07C2               	addwf	??___fladd+3,f
  4486  0C52  0842               	movf	??___fladd+3,w
  4487  0C53  00BA               	movwf	___fladd@b+3
  4488  0C54  0841               	movf	??___fladd+2,w
  4489  0C55  00B9               	movwf	___fladd@b+2
  4490  0C56  0840               	movf	??___fladd+1,w
  4491  0C57  00B8               	movwf	___fladd@b+1
  4492  0C58  083F               	movf	??___fladd,w
  4493  0C59  00B7               	movwf	___fladd@b
  4494  0C5A  3080               	movlw	128
  4495  0C5B  00FF               	movwf	127
  4496  0C5C  087F               	movf	127,w
  4497  0C5D  06C7               	xorwf	___fladd@signs,f
  4498  0C5E  09CA               	comf	___fladd@grs,f
  4499  0C5F  0ACA               	incf	___fladd@grs,f
  4500  0C60  084A               	movf	___fladd@grs,w
  4501  0C61  1D03               	btfss	3,2
  4502  0C62  2C80               	goto	l1311
  4503  0C63  3001               	movlw	1
  4504  0C64  07B7               	addwf	___fladd@b,f
  4505  0C65  3000               	movlw	0
  4506  0C66  1803               	skipnc
  4507  0C67  3001               	movlw	1
  4508  0C68  07B8               	addwf	___fladd@b+1,f
  4509  0C69  3000               	movlw	0
  4510  0C6A  1803               	skipnc
  4511  0C6B  3001               	movlw	1
  4512  0C6C  07B9               	addwf	___fladd@b+2,f
  4513  0C6D  3000               	movlw	0
  4514  0C6E  1803               	skipnc
  4515  0C6F  3001               	movlw	1
  4516  0C70  07BA               	addwf	___fladd@b+3,f
  4517  0C71  2C80               	goto	l1311
  4518  0C72                     l4163:
  4519  0C72  083B               	movf	___fladd@a,w
  4520  0C73  02B7               	subwf	___fladd@b,f
  4521  0C74  083C               	movf	___fladd@a+1,w
  4522  0C75  1C03               	skipc
  4523  0C76  0F3C               	incfsz	___fladd@a+1,w
  4524  0C77  02B8               	subwf	___fladd@b+1,f
  4525  0C78  083D               	movf	___fladd@a+2,w
  4526  0C79  1C03               	skipc
  4527  0C7A  0F3D               	incfsz	___fladd@a+2,w
  4528  0C7B  02B9               	subwf	___fladd@b+2,f
  4529  0C7C  083E               	movf	___fladd@a+3,w
  4530  0C7D  1C03               	skipc
  4531  0C7E  0F3E               	incfsz	___fladd@a+3,w
  4532  0C7F  02BA               	subwf	___fladd@b+3,f
  4533  0C80                     l1311:
  4534  0C80  083A               	movf	___fladd@b+3,w
  4535  0C81  0439               	iorwf	___fladd@b+2,w
  4536  0C82  0438               	iorwf	___fladd@b+1,w
  4537  0C83  0437               	iorwf	___fladd@b,w
  4538  0C84  1D03               	skipz
  4539  0C85  2CA8               	goto	l4185
  4540  0C86  084A               	movf	___fladd@grs,w
  4541  0C87  1D03               	btfss	3,2
  4542  0C88  2CA8               	goto	l4185
  4543  0C89  3000               	movlw	0
  4544  0C8A  00BA               	movwf	?___fladd+3
  4545  0C8B  3000               	movlw	0
  4546  0C8C  00B9               	movwf	?___fladd+2
  4547  0C8D  3000               	movlw	0
  4548  0C8E  00B8               	movwf	?___fladd+1
  4549  0C8F  3000               	movlw	0
  4550  0C90  00B7               	movwf	?___fladd
  4551  0C91  0008               	return
  4552  0C92                     l4171:
  4553  0C92  3001               	movlw	1
  4554  0C93  00BF               	movwf	??___fladd
  4555  0C94                     u3495:
  4556  0C94  1003               	clrc
  4557  0C95  0DB7               	rlf	___fladd@b,f
  4558  0C96  0DB8               	rlf	___fladd@b+1,f
  4559  0C97  0DB9               	rlf	___fladd@b+2,f
  4560  0C98  0DBA               	rlf	___fladd@b+3,f
  4561  0C99  0BBF               	decfsz	??___fladd,f
  4562  0C9A  2C94               	goto	u3495
  4563  0C9B  1BCA               	btfsc	___fladd@grs,7
  4564  0C9C  1437               	bsf	___fladd@b,0
  4565  0C9D  1C4A               	btfss	___fladd@grs,0
  4566  0C9E  2CA1               	goto	l4179
  4567  0C9F  1403               	setc
  4568  0CA0  2CA2               	goto	L5
  4569  0CA1                     l4179:
  4570  0CA1  1003               	clrc
  4571  0CA2                     L5:
  4572  0CA2  0DCA               	rlf	___fladd@grs,f
  4573  0CA3  0849               	movf	___fladd@bexp,w
  4574  0CA4  1903               	btfsc	3,2
  4575  0CA5  2CA8               	goto	l4185
  4576  0CA6  3001               	movlw	1
  4577  0CA7  02C9               	subwf	___fladd@bexp,f
  4578  0CA8                     l4185:
  4579  0CA8  1FB9               	btfss	___fladd@b+2,7
  4580  0CA9  2C92               	goto	l4171
  4581  0CAA                     l4187:
  4582  0CAA  01C8               	clrf	___fladd@aexp
  4583  0CAB  1FCA               	btfss	___fladd@grs,7
  4584  0CAC  2CB5               	goto	l4197
  4585  0CAD  084A               	movf	___fladd@grs,w
  4586  0CAE  397F               	andlw	127
  4587  0CAF  1903               	btfsc	3,2
  4588  0CB0  1837               	btfsc	___fladd@b,0
  4589  0CB1  2CB3               	goto	l4193
  4590  0CB2  2CB5               	goto	l4197
  4591  0CB3                     l4193:
  4592  0CB3  01C8               	clrf	___fladd@aexp
  4593  0CB4  0AC8               	incf	___fladd@aexp,f
  4594  0CB5                     l4197:
  4595  0CB5  0848               	movf	___fladd@aexp,w
  4596  0CB6  1903               	btfsc	3,2
  4597  0CB7  2CE8               	goto	l4207
  4598  0CB8  3001               	movlw	1
  4599  0CB9  07B7               	addwf	___fladd@b,f
  4600  0CBA  3000               	movlw	0
  4601  0CBB  1803               	skipnc
  4602  0CBC  3001               	movlw	1
  4603  0CBD  07B8               	addwf	___fladd@b+1,f
  4604  0CBE  3000               	movlw	0
  4605  0CBF  1803               	skipnc
  4606  0CC0  3001               	movlw	1
  4607  0CC1  07B9               	addwf	___fladd@b+2,f
  4608  0CC2  3000               	movlw	0
  4609  0CC3  1803               	skipnc
  4610  0CC4  3001               	movlw	1
  4611  0CC5  07BA               	addwf	___fladd@b+3,f
  4612  0CC6  1C3A               	btfss	___fladd@b+3,0
  4613  0CC7  2CE8               	goto	l4207
  4614  0CC8  0837               	movf	___fladd@b,w
  4615  0CC9  00BF               	movwf	??___fladd
  4616  0CCA  0838               	movf	___fladd@b+1,w
  4617  0CCB  00C0               	movwf	??___fladd+1
  4618  0CCC  0839               	movf	___fladd@b+2,w
  4619  0CCD  00C1               	movwf	??___fladd+2
  4620  0CCE  083A               	movf	___fladd@b+3,w
  4621  0CCF  00C2               	movwf	??___fladd+3
  4622  0CD0  3001               	movlw	1
  4623  0CD1  00C3               	movwf	??___fladd+4
  4624  0CD2                     u3595:
  4625  0CD2  0D42               	rlf	??___fladd+3,w
  4626  0CD3  0CC2               	rrf	??___fladd+3,f
  4627  0CD4  0CC1               	rrf	??___fladd+2,f
  4628  0CD5  0CC0               	rrf	??___fladd+1,f
  4629  0CD6  0CBF               	rrf	??___fladd,f
  4630  0CD7  0BC3               	decfsz	??___fladd+4,f
  4631  0CD8  2CD2               	goto	u3595
  4632  0CD9  0842               	movf	??___fladd+3,w
  4633  0CDA  00BA               	movwf	___fladd@b+3
  4634  0CDB  0841               	movf	??___fladd+2,w
  4635  0CDC  00B9               	movwf	___fladd@b+2
  4636  0CDD  0840               	movf	??___fladd+1,w
  4637  0CDE  00B8               	movwf	___fladd@b+1
  4638  0CDF  083F               	movf	??___fladd,w
  4639  0CE0  00B7               	movwf	___fladd@b
  4640  0CE1  0A49               	incf	___fladd@bexp,w
  4641  0CE2  1903               	btfsc	3,2
  4642  0CE3  2CE8               	goto	l4207
  4643  0CE4  3001               	movlw	1
  4644  0CE5  00FF               	movwf	127
  4645  0CE6  087F               	movf	127,w
  4646  0CE7  07C9               	addwf	___fladd@bexp,f
  4647  0CE8                     l4207:
  4648  0CE8  0A49               	incf	___fladd@bexp,w
  4649  0CE9  1D03               	btfss	3,2
  4650  0CEA  0849               	movf	___fladd@bexp,w
  4651  0CEB  1D03               	btfss	3,2
  4652  0CEC  2CF8               	goto	l4217
  4653  0CED  3000               	movlw	0
  4654  0CEE  00BA               	movwf	___fladd@b+3
  4655  0CEF  3000               	movlw	0
  4656  0CF0  00B9               	movwf	___fladd@b+2
  4657  0CF1  3000               	movlw	0
  4658  0CF2  00B8               	movwf	___fladd@b+1
  4659  0CF3  3000               	movlw	0
  4660  0CF4  00B7               	movwf	___fladd@b
  4661  0CF5  0849               	movf	___fladd@bexp,w
  4662  0CF6  1903               	btfsc	3,2
  4663  0CF7  01C7               	clrf	___fladd@signs
  4664  0CF8                     l4217:
  4665  0CF8  1C49               	btfss	___fladd@bexp,0
  4666  0CF9  2CFC               	goto	l4221
  4667  0CFA  17B9               	bsf	___fladd@b+2,7
  4668  0CFB  2D00               	goto	l1332
  4669  0CFC                     l4221:
  4670  0CFC  307F               	movlw	127
  4671  0CFD  00FF               	movwf	127
  4672  0CFE  087F               	movf	127,w
  4673  0CFF  05B9               	andwf	___fladd@b+2,f
  4674  0D00                     l1332:
  4675  0D00  0849               	movf	___fladd@bexp,w
  4676  0D01  00BF               	movwf	??___fladd
  4677  0D02  1003               	clrc
  4678  0D03  0C3F               	rrf	??___fladd,w
  4679  0D04  00FF               	movwf	127
  4680  0D05  087F               	movf	127,w
  4681  0D06  00BA               	movwf	___fladd@b+3
  4682  0D07  1FC7               	btfss	___fladd@signs,7
  4683  0D08  0008               	return
  4684  0D09  17BA               	bsf	___fladd@b+3,7
  4685  0D0A  0008               	return
  4686  0D0B                     __end_of___fladd:
  4687                           
  4688                           	psect	text5
  4689  1F6D                     __ptext5:	
  4690 ;; *************** function ___flge *****************
  4691 ;; Defined at:
  4692 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\flge.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  ff1             4    0[BANK0 ] unsigned char 
  4695 ;;  ff2             4    4[BANK0 ] unsigned char 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;		None               void
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0
  4702 ;; Tracked objects:
  4703 ;;		On entry : 300/0
  4704 ;;		On exit  : 300/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4707 ;;      Params:         0       8       0       0       0
  4708 ;;      Locals:         0       0       0       0       0
  4709 ;;      Temps:          0       4       0       0       0
  4710 ;;      Totals:         0      12       0       0       0
  4711 ;;Total ram usage:       12 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    1
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_MediaPlacaVaccum
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           
  4722                           ;psect for function ___flge
  4723  1F6D                     ___flge:
  4724                           
  4725                           ;incstack = 0
  4726                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4727  1F6D  3000               	movlw	0
  4728  1F6E  0520               	andwf	___flge@ff1,w
  4729  1F6F  00A8               	movwf	??___flge
  4730  1F70  3000               	movlw	0
  4731  1F71  0521               	andwf	___flge@ff1+1,w
  4732  1F72  00A9               	movwf	??___flge+1
  4733  1F73  3080               	movlw	128
  4734  1F74  0522               	andwf	___flge@ff1+2,w
  4735  1F75  00AA               	movwf	??___flge+2
  4736  1F76  307F               	movlw	127
  4737  1F77  0523               	andwf	___flge@ff1+3,w
  4738  1F78  00AB               	movwf	??___flge+3
  4739  1F79  082B               	movf	??___flge+3,w
  4740  1F7A  042A               	iorwf	??___flge+2,w
  4741  1F7B  0429               	iorwf	??___flge+1,w
  4742  1F7C  0428               	iorwf	??___flge,w
  4743  1F7D  1D03               	skipz
  4744  1F7E  2F87               	goto	l1171
  4745  1F7F  3000               	movlw	0
  4746  1F80  00A3               	movwf	___flge@ff1+3
  4747  1F81  3000               	movlw	0
  4748  1F82  00A2               	movwf	___flge@ff1+2
  4749  1F83  3000               	movlw	0
  4750  1F84  00A1               	movwf	___flge@ff1+1
  4751  1F85  3000               	movlw	0
  4752  1F86  00A0               	movwf	___flge@ff1
  4753  1F87                     l1171:
  4754  1F87  3000               	movlw	0
  4755  1F88  0524               	andwf	___flge@ff2,w
  4756  1F89  00A8               	movwf	??___flge
  4757  1F8A  3000               	movlw	0
  4758  1F8B  0525               	andwf	___flge@ff2+1,w
  4759  1F8C  00A9               	movwf	??___flge+1
  4760  1F8D  3080               	movlw	128
  4761  1F8E  0526               	andwf	___flge@ff2+2,w
  4762  1F8F  00AA               	movwf	??___flge+2
  4763  1F90  307F               	movlw	127
  4764  1F91  0527               	andwf	___flge@ff2+3,w
  4765  1F92  00AB               	movwf	??___flge+3
  4766  1F93  082B               	movf	??___flge+3,w
  4767  1F94  042A               	iorwf	??___flge+2,w
  4768  1F95  0429               	iorwf	??___flge+1,w
  4769  1F96  0428               	iorwf	??___flge,w
  4770  1F97  1D03               	skipz
  4771  1F98  2FA1               	goto	l4891
  4772  1F99  3000               	movlw	0
  4773  1F9A  00A7               	movwf	___flge@ff2+3
  4774  1F9B  3000               	movlw	0
  4775  1F9C  00A6               	movwf	___flge@ff2+2
  4776  1F9D  3000               	movlw	0
  4777  1F9E  00A5               	movwf	___flge@ff2+1
  4778  1F9F  3000               	movlw	0
  4779  1FA0  00A4               	movwf	___flge@ff2
  4780  1FA1                     l4891:
  4781  1FA1  1FA3               	btfss	___flge@ff1+3,7
  4782  1FA2  2FC7               	goto	l4895
  4783  1FA3  3000               	movlw	0
  4784  1FA4  00A8               	movwf	??___flge
  4785  1FA5  3000               	movlw	0
  4786  1FA6  00A9               	movwf	??___flge+1
  4787  1FA7  3000               	movlw	0
  4788  1FA8  00AA               	movwf	??___flge+2
  4789  1FA9  3080               	movlw	128
  4790  1FAA  00AB               	movwf	??___flge+3
  4791  1FAB  0820               	movf	___flge@ff1,w
  4792  1FAC  02A8               	subwf	??___flge,f
  4793  1FAD  0821               	movf	___flge@ff1+1,w
  4794  1FAE  1C03               	skipc
  4795  1FAF  0F21               	incfsz	___flge@ff1+1,w
  4796  1FB0  2FB2               	goto	u4561
  4797  1FB1  2FB3               	goto	u4562
  4798  1FB2                     u4561:
  4799  1FB2  02A9               	subwf	??___flge+1,f
  4800  1FB3                     u4562:
  4801  1FB3  0822               	movf	___flge@ff1+2,w
  4802  1FB4  1C03               	skipc
  4803  1FB5  0F22               	incfsz	___flge@ff1+2,w
  4804  1FB6  2FB8               	goto	u4563
  4805  1FB7  2FB9               	goto	u4564
  4806  1FB8                     u4563:
  4807  1FB8  02AA               	subwf	??___flge+2,f
  4808  1FB9                     u4564:
  4809  1FB9  0823               	movf	___flge@ff1+3,w
  4810  1FBA  1C03               	skipc
  4811  1FBB  0F23               	incfsz	___flge@ff1+3,w
  4812  1FBC  2FBE               	goto	u4565
  4813  1FBD  2FBF               	goto	u4566
  4814  1FBE                     u4565:
  4815  1FBE  02AB               	subwf	??___flge+3,f
  4816  1FBF                     u4566:
  4817  1FBF  082B               	movf	??___flge+3,w
  4818  1FC0  00A3               	movwf	___flge@ff1+3
  4819  1FC1  082A               	movf	??___flge+2,w
  4820  1FC2  00A2               	movwf	___flge@ff1+2
  4821  1FC3  0829               	movf	??___flge+1,w
  4822  1FC4  00A1               	movwf	___flge@ff1+1
  4823  1FC5  0828               	movf	??___flge,w
  4824  1FC6  00A0               	movwf	___flge@ff1
  4825  1FC7                     l4895:
  4826  1FC7  1FA7               	btfss	___flge@ff2+3,7
  4827  1FC8  2FED               	goto	l1174
  4828  1FC9  3000               	movlw	0
  4829  1FCA  00A8               	movwf	??___flge
  4830  1FCB  3000               	movlw	0
  4831  1FCC  00A9               	movwf	??___flge+1
  4832  1FCD  3000               	movlw	0
  4833  1FCE  00AA               	movwf	??___flge+2
  4834  1FCF  3080               	movlw	128
  4835  1FD0  00AB               	movwf	??___flge+3
  4836  1FD1  0824               	movf	___flge@ff2,w
  4837  1FD2  02A8               	subwf	??___flge,f
  4838  1FD3  0825               	movf	___flge@ff2+1,w
  4839  1FD4  1C03               	skipc
  4840  1FD5  0F25               	incfsz	___flge@ff2+1,w
  4841  1FD6  2FD8               	goto	u4581
  4842  1FD7  2FD9               	goto	u4582
  4843  1FD8                     u4581:
  4844  1FD8  02A9               	subwf	??___flge+1,f
  4845  1FD9                     u4582:
  4846  1FD9  0826               	movf	___flge@ff2+2,w
  4847  1FDA  1C03               	skipc
  4848  1FDB  0F26               	incfsz	___flge@ff2+2,w
  4849  1FDC  2FDE               	goto	u4583
  4850  1FDD  2FDF               	goto	u4584
  4851  1FDE                     u4583:
  4852  1FDE  02AA               	subwf	??___flge+2,f
  4853  1FDF                     u4584:
  4854  1FDF  0827               	movf	___flge@ff2+3,w
  4855  1FE0  1C03               	skipc
  4856  1FE1  0F27               	incfsz	___flge@ff2+3,w
  4857  1FE2  2FE4               	goto	u4585
  4858  1FE3  2FE5               	goto	u4586
  4859  1FE4                     u4585:
  4860  1FE4  02AB               	subwf	??___flge+3,f
  4861  1FE5                     u4586:
  4862  1FE5  082B               	movf	??___flge+3,w
  4863  1FE6  00A7               	movwf	___flge@ff2+3
  4864  1FE7  082A               	movf	??___flge+2,w
  4865  1FE8  00A6               	movwf	___flge@ff2+2
  4866  1FE9  0829               	movf	??___flge+1,w
  4867  1FEA  00A5               	movwf	___flge@ff2+1
  4868  1FEB  0828               	movf	??___flge,w
  4869  1FEC  00A4               	movwf	___flge@ff2
  4870  1FED                     l1174:
  4871  1FED  3080               	movlw	128
  4872  1FEE  06A3               	xorwf	___flge@ff1+3,f
  4873  1FEF  3080               	movlw	128
  4874  1FF0  06A7               	xorwf	___flge@ff2+3,f
  4875  1FF1  0827               	movf	___flge@ff2+3,w
  4876  1FF2  0223               	subwf	___flge@ff1+3,w
  4877  1FF3  1D03               	skipz
  4878  1FF4  0008               	return
  4879  1FF5  0826               	movf	___flge@ff2+2,w
  4880  1FF6  0222               	subwf	___flge@ff1+2,w
  4881  1FF7  1D03               	skipz
  4882  1FF8  0008               	return
  4883  1FF9  0825               	movf	___flge@ff2+1,w
  4884  1FFA  0221               	subwf	___flge@ff1+1,w
  4885  1FFB  1D03               	skipz
  4886  1FFC  0008               	return
  4887  1FFD  0824               	movf	___flge@ff2,w
  4888  1FFE  0220               	subwf	___flge@ff1,w
  4889  1FFF  0008               	return
  4890  2000                     __end_of___flge:
  4891                           
  4892                           	psect	text6
  4893  093D                     __ptext6:	
  4894 ;; *************** function ___fldiv *****************
  4895 ;; Defined at:
  4896 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcdiv.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  a               4   14[BANK0 ] unsigned char 
  4899 ;;  b               4   18[BANK0 ] unsigned char 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  grs             4   34[BANK0 ] unsigned long 
  4902 ;;  rem             4   27[BANK0 ] unsigned long 
  4903 ;;  new_exp         2   32[BANK0 ] int 
  4904 ;;  aexp            1   39[BANK0 ] unsigned char 
  4905 ;;  bexp            1   38[BANK0 ] unsigned char 
  4906 ;;  sign            1   31[BANK0 ] unsigned char 
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  4   14[BANK0 ] unsigned char 
  4909 ;; Registers used:
  4910 ;;		wreg, status,2, status,0, btemp+1
  4911 ;; Tracked objects:
  4912 ;;		On entry : 300/0
  4913 ;;		On exit  : 300/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4916 ;;      Params:         0       8       0       0       0
  4917 ;;      Locals:         0      13       0       0       0
  4918 ;;      Temps:          0       5       0       0       0
  4919 ;;      Totals:         0      26       0       0       0
  4920 ;;Total ram usage:       26 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    1
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_MediaPlacaVaccum
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           
  4931                           ;psect for function ___fldiv
  4932  093D                     ___fldiv:
  4933                           
  4934                           ;incstack = 0
  4935                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4936  093D  0835               	movf	___fldiv@b+3,w
  4937  093E  3980               	andlw	128
  4938  093F  00FF               	movwf	127
  4939  0940  087F               	movf	127,w
  4940  0941  00BF               	movwf	___fldiv@sign
  4941  0942  0835               	movf	___fldiv@b+3,w
  4942  0943  00B6               	movwf	??___fldiv
  4943  0944  0736               	addwf	??___fldiv,w
  4944  0945  00FF               	movwf	127
  4945  0946  087F               	movf	127,w
  4946  0947  00C6               	movwf	___fldiv@bexp
  4947  0948  1BB4               	btfsc	___fldiv@b+2,7
  4948  0949  1446               	bsf	___fldiv@bexp,0
  4949  094A  0846               	movf	___fldiv@bexp,w
  4950  094B  1903               	btfsc	3,2
  4951  094C  295B               	goto	l4929
  4952  094D  0A46               	incf	___fldiv@bexp,w
  4953  094E  1D03               	btfss	3,2
  4954  094F  2958               	goto	l4925
  4955  0950  3000               	movlw	0
  4956  0951  00B5               	movwf	___fldiv@b+3
  4957  0952  3000               	movlw	0
  4958  0953  00B4               	movwf	___fldiv@b+2
  4959  0954  3000               	movlw	0
  4960  0955  00B3               	movwf	___fldiv@b+1
  4961  0956  3000               	movlw	0
  4962  0957  00B2               	movwf	___fldiv@b
  4963  0958                     l4925:
  4964  0958  17B4               	bsf	___fldiv@b+2,7
  4965  0959  01B5               	clrf	___fldiv@b+3
  4966  095A  2963               	goto	l4931
  4967  095B                     l4929:
  4968  095B  3000               	movlw	0
  4969  095C  00B5               	movwf	___fldiv@b+3
  4970  095D  3000               	movlw	0
  4971  095E  00B4               	movwf	___fldiv@b+2
  4972  095F  3000               	movlw	0
  4973  0960  00B3               	movwf	___fldiv@b+1
  4974  0961  3000               	movlw	0
  4975  0962  00B2               	movwf	___fldiv@b
  4976  0963                     l4931:
  4977  0963  0831               	movf	___fldiv@a+3,w
  4978  0964  3980               	andlw	128
  4979  0965  00FF               	movwf	127
  4980  0966  087F               	movf	127,w
  4981  0967  06BF               	xorwf	___fldiv@sign,f
  4982  0968  0831               	movf	___fldiv@a+3,w
  4983  0969  00B6               	movwf	??___fldiv
  4984  096A  0736               	addwf	??___fldiv,w
  4985  096B  00FF               	movwf	127
  4986  096C  087F               	movf	127,w
  4987  096D  00C7               	movwf	___fldiv@aexp
  4988  096E  1BB0               	btfsc	___fldiv@a+2,7
  4989  096F  1447               	bsf	___fldiv@aexp,0
  4990  0970  0847               	movf	___fldiv@aexp,w
  4991  0971  1903               	btfsc	3,2
  4992  0972  2981               	goto	l4949
  4993  0973  0A47               	incf	___fldiv@aexp,w
  4994  0974  1D03               	btfss	3,2
  4995  0975  297E               	goto	l4945
  4996  0976  3000               	movlw	0
  4997  0977  00B1               	movwf	___fldiv@a+3
  4998  0978  3000               	movlw	0
  4999  0979  00B0               	movwf	___fldiv@a+2
  5000  097A  3000               	movlw	0
  5001  097B  00AF               	movwf	___fldiv@a+1
  5002  097C  3000               	movlw	0
  5003  097D  00AE               	movwf	___fldiv@a
  5004  097E                     l4945:
  5005  097E  17B0               	bsf	___fldiv@a+2,7
  5006  097F  01B1               	clrf	___fldiv@a+3
  5007  0980  2989               	goto	l1346
  5008  0981                     l4949:
  5009  0981  3000               	movlw	0
  5010  0982  00B1               	movwf	___fldiv@a+3
  5011  0983  3000               	movlw	0
  5012  0984  00B0               	movwf	___fldiv@a+2
  5013  0985  3000               	movlw	0
  5014  0986  00AF               	movwf	___fldiv@a+1
  5015  0987  3000               	movlw	0
  5016  0988  00AE               	movwf	___fldiv@a
  5017  0989                     l1346:
  5018  0989  0831               	movf	___fldiv@a+3,w
  5019  098A  0430               	iorwf	___fldiv@a+2,w
  5020  098B  042F               	iorwf	___fldiv@a+1,w
  5021  098C  042E               	iorwf	___fldiv@a,w
  5022  098D  1D03               	skipz
  5023  098E  29A8               	goto	l4959
  5024  098F  3000               	movlw	0
  5025  0990  00B5               	movwf	___fldiv@b+3
  5026  0991  3000               	movlw	0
  5027  0992  00B4               	movwf	___fldiv@b+2
  5028  0993  3000               	movlw	0
  5029  0994  00B3               	movwf	___fldiv@b+1
  5030  0995  3000               	movlw	0
  5031  0996  00B2               	movwf	___fldiv@b
  5032  0997  3080               	movlw	128
  5033  0998  04B4               	iorwf	___fldiv@b+2,f
  5034  0999  307F               	movlw	127
  5035  099A  04B5               	iorwf	___fldiv@b+3,f
  5036  099B                     L7:
  5037  099B  083F               	movf	___fldiv@sign,w
  5038  099C  00FF               	movwf	127
  5039  099D  087F               	movf	127,w
  5040  099E  04B5               	iorwf	___fldiv@b+3,f
  5041  099F  0835               	movf	___fldiv@b+3,w
  5042  09A0  00B1               	movwf	?___fldiv+3
  5043  09A1  0834               	movf	___fldiv@b+2,w
  5044  09A2  00B0               	movwf	?___fldiv+2
  5045  09A3  0833               	movf	___fldiv@b+1,w
  5046  09A4  00AF               	movwf	?___fldiv+1
  5047  09A5  0832               	movf	___fldiv@b,w
  5048  09A6  00AE               	movwf	?___fldiv
  5049  09A7  0008               	return
  5050  09A8                     l4959:
  5051  09A8  0846               	movf	___fldiv@bexp,w
  5052  09A9  1D03               	btfss	3,2
  5053  09AA  29B4               	goto	l4965
  5054  09AB  3000               	movlw	0
  5055  09AC  00B1               	movwf	?___fldiv+3
  5056  09AD  3000               	movlw	0
  5057  09AE  00B0               	movwf	?___fldiv+2
  5058  09AF  3000               	movlw	0
  5059  09B0  00AF               	movwf	?___fldiv+1
  5060  09B1  3000               	movlw	0
  5061  09B2  00AE               	movwf	?___fldiv
  5062  09B3  0008               	return
  5063  09B4                     l4965:
  5064  09B4  0846               	movf	___fldiv@bexp,w
  5065  09B5  00B6               	movwf	??___fldiv
  5066  09B6  01B7               	clrf	??___fldiv+1
  5067  09B7  0837               	movf	??___fldiv+1,w
  5068  09B8  00B9               	movwf	??___fldiv+3
  5069  09B9  0847               	movf	___fldiv@aexp,w
  5070  09BA  0236               	subwf	??___fldiv,w
  5071  09BB  00B8               	movwf	??___fldiv+2
  5072  09BC  1C03               	skipc
  5073  09BD  03B9               	decf	??___fldiv+3,f
  5074  09BE  0838               	movf	??___fldiv+2,w
  5075  09BF  3E7F               	addlw	127
  5076  09C0  00C0               	movwf	___fldiv@new_exp
  5077  09C1  0839               	movf	??___fldiv+3,w
  5078  09C2  1803               	skipnc
  5079  09C3  3E01               	addlw	1
  5080  09C4  3E00               	addlw	0
  5081  09C5  00C1               	movwf	___fldiv@new_exp+1
  5082  09C6  0835               	movf	___fldiv@b+3,w
  5083  09C7  00BE               	movwf	___fldiv@rem+3
  5084  09C8  0834               	movf	___fldiv@b+2,w
  5085  09C9  00BD               	movwf	___fldiv@rem+2
  5086  09CA  0833               	movf	___fldiv@b+1,w
  5087  09CB  00BC               	movwf	___fldiv@rem+1
  5088  09CC  0832               	movf	___fldiv@b,w
  5089  09CD  00BB               	movwf	___fldiv@rem
  5090  09CE  3000               	movlw	0
  5091  09CF  00B5               	movwf	___fldiv@b+3
  5092  09D0  3000               	movlw	0
  5093  09D1  00B4               	movwf	___fldiv@b+2
  5094  09D2  3000               	movlw	0
  5095  09D3  00B3               	movwf	___fldiv@b+1
  5096  09D4  3000               	movlw	0
  5097  09D5  00B2               	movwf	___fldiv@b
  5098  09D6  3000               	movlw	0
  5099  09D7  00C5               	movwf	___fldiv@grs+3
  5100  09D8  3000               	movlw	0
  5101  09D9  00C4               	movwf	___fldiv@grs+2
  5102  09DA  3000               	movlw	0
  5103  09DB  00C3               	movwf	___fldiv@grs+1
  5104  09DC  3000               	movlw	0
  5105  09DD  00C2               	movwf	___fldiv@grs
  5106  09DE  01C7               	clrf	___fldiv@aexp
  5107  09DF                     l4993:
  5108  09DF  301A               	movlw	26
  5109  09E0  0247               	subwf	___fldiv@aexp,w
  5110  09E1  1803               	btfsc	3,0
  5111  09E2  2A27               	goto	l4995
  5112  09E3  0847               	movf	___fldiv@aexp,w
  5113  09E4  1903               	btfsc	3,2
  5114  09E5  2A03               	goto	l4985
  5115  09E6  3001               	movlw	1
  5116  09E7  00B6               	movwf	??___fldiv
  5117  09E8                     u4695:
  5118  09E8  1003               	clrc
  5119  09E9  0DBB               	rlf	___fldiv@rem,f
  5120  09EA  0DBC               	rlf	___fldiv@rem+1,f
  5121  09EB  0DBD               	rlf	___fldiv@rem+2,f
  5122  09EC  0DBE               	rlf	___fldiv@rem+3,f
  5123  09ED  0BB6               	decfsz	??___fldiv,f
  5124  09EE  29E8               	goto	u4695
  5125  09EF  3001               	movlw	1
  5126  09F0  00B6               	movwf	??___fldiv
  5127  09F1                     u4705:
  5128  09F1  1003               	clrc
  5129  09F2  0DB2               	rlf	___fldiv@b,f
  5130  09F3  0DB3               	rlf	___fldiv@b+1,f
  5131  09F4  0DB4               	rlf	___fldiv@b+2,f
  5132  09F5  0DB5               	rlf	___fldiv@b+3,f
  5133  09F6  0BB6               	decfsz	??___fldiv,f
  5134  09F7  29F1               	goto	u4705
  5135  09F8  1BC5               	btfsc	___fldiv@grs+3,7
  5136  09F9  1432               	bsf	___fldiv@b,0
  5137  09FA  3001               	movlw	1
  5138  09FB  00B6               	movwf	??___fldiv
  5139  09FC                     u4725:
  5140  09FC  1003               	clrc
  5141  09FD  0DC2               	rlf	___fldiv@grs,f
  5142  09FE  0DC3               	rlf	___fldiv@grs+1,f
  5143  09FF  0DC4               	rlf	___fldiv@grs+2,f
  5144  0A00  0DC5               	rlf	___fldiv@grs+3,f
  5145  0A01  0BB6               	decfsz	??___fldiv,f
  5146  0A02  29FC               	goto	u4725
  5147  0A03                     l4985:
  5148  0A03  0831               	movf	___fldiv@a+3,w
  5149  0A04  023E               	subwf	___fldiv@rem+3,w
  5150  0A05  1D03               	skipz
  5151  0A06  2A11               	goto	u4735
  5152  0A07  0830               	movf	___fldiv@a+2,w
  5153  0A08  023D               	subwf	___fldiv@rem+2,w
  5154  0A09  1D03               	skipz
  5155  0A0A  2A11               	goto	u4735
  5156  0A0B  082F               	movf	___fldiv@a+1,w
  5157  0A0C  023C               	subwf	___fldiv@rem+1,w
  5158  0A0D  1D03               	skipz
  5159  0A0E  2A11               	goto	u4735
  5160  0A0F  082E               	movf	___fldiv@a,w
  5161  0A10  023B               	subwf	___fldiv@rem,w
  5162  0A11                     u4735:
  5163  0A11  1C03               	skipc
  5164  0A12  2A22               	goto	l4991
  5165  0A13  1745               	bsf	___fldiv@grs+3,6
  5166  0A14  082E               	movf	___fldiv@a,w
  5167  0A15  02BB               	subwf	___fldiv@rem,f
  5168  0A16  082F               	movf	___fldiv@a+1,w
  5169  0A17  1C03               	skipc
  5170  0A18  0F2F               	incfsz	___fldiv@a+1,w
  5171  0A19  02BC               	subwf	___fldiv@rem+1,f
  5172  0A1A  0830               	movf	___fldiv@a+2,w
  5173  0A1B  1C03               	skipc
  5174  0A1C  0F30               	incfsz	___fldiv@a+2,w
  5175  0A1D  02BD               	subwf	___fldiv@rem+2,f
  5176  0A1E  0831               	movf	___fldiv@a+3,w
  5177  0A1F  1C03               	skipc
  5178  0A20  0F31               	incfsz	___fldiv@a+3,w
  5179  0A21  02BE               	subwf	___fldiv@rem+3,f
  5180  0A22                     l4991:
  5181  0A22  3001               	movlw	1
  5182  0A23  00FF               	movwf	127
  5183  0A24  087F               	movf	127,w
  5184  0A25  07C7               	addwf	___fldiv@aexp,f
  5185  0A26  29DF               	goto	l4993
  5186  0A27                     l4995:
  5187  0A27  083E               	movf	___fldiv@rem+3,w
  5188  0A28  043D               	iorwf	___fldiv@rem+2,w
  5189  0A29  043C               	iorwf	___fldiv@rem+1,w
  5190  0A2A  043B               	iorwf	___fldiv@rem,w
  5191  0A2B  1D03               	btfss	3,2
  5192  0A2C  1442               	bsf	___fldiv@grs,0
  5193  0A2D                     l5009:
  5194  0A2D  1BB4               	btfsc	___fldiv@b+2,7
  5195  0A2E  2A4A               	goto	l5011
  5196  0A2F  3001               	movlw	1
  5197  0A30  00B6               	movwf	??___fldiv
  5198  0A31                     u4765:
  5199  0A31  1003               	clrc
  5200  0A32  0DB2               	rlf	___fldiv@b,f
  5201  0A33  0DB3               	rlf	___fldiv@b+1,f
  5202  0A34  0DB4               	rlf	___fldiv@b+2,f
  5203  0A35  0DB5               	rlf	___fldiv@b+3,f
  5204  0A36  0BB6               	decfsz	??___fldiv,f
  5205  0A37  2A31               	goto	u4765
  5206  0A38  1BC5               	btfsc	___fldiv@grs+3,7
  5207  0A39  1432               	bsf	___fldiv@b,0
  5208  0A3A  3001               	movlw	1
  5209  0A3B  00B6               	movwf	??___fldiv
  5210  0A3C                     u4785:
  5211  0A3C  1003               	clrc
  5212  0A3D  0DC2               	rlf	___fldiv@grs,f
  5213  0A3E  0DC3               	rlf	___fldiv@grs+1,f
  5214  0A3F  0DC4               	rlf	___fldiv@grs+2,f
  5215  0A40  0DC5               	rlf	___fldiv@grs+3,f
  5216  0A41  0BB6               	decfsz	??___fldiv,f
  5217  0A42  2A3C               	goto	u4785
  5218  0A43  30FF               	movlw	255
  5219  0A44  07C0               	addwf	___fldiv@new_exp,f
  5220  0A45  1803               	skipnc
  5221  0A46  0AC1               	incf	___fldiv@new_exp+1,f
  5222  0A47  30FF               	movlw	255
  5223  0A48  07C1               	addwf	___fldiv@new_exp+1,f
  5224  0A49  2A2D               	goto	l5009
  5225  0A4A                     l5011:
  5226  0A4A  01C7               	clrf	___fldiv@aexp
  5227  0A4B  1FC5               	btfss	___fldiv@grs+3,7
  5228  0A4C  2A63               	goto	l5021
  5229  0A4D  30FF               	movlw	255
  5230  0A4E  0542               	andwf	___fldiv@grs,w
  5231  0A4F  00B6               	movwf	??___fldiv
  5232  0A50  30FF               	movlw	255
  5233  0A51  0543               	andwf	___fldiv@grs+1,w
  5234  0A52  00B7               	movwf	??___fldiv+1
  5235  0A53  30FF               	movlw	255
  5236  0A54  0544               	andwf	___fldiv@grs+2,w
  5237  0A55  00B8               	movwf	??___fldiv+2
  5238  0A56  307F               	movlw	127
  5239  0A57  0545               	andwf	___fldiv@grs+3,w
  5240  0A58  00B9               	movwf	??___fldiv+3
  5241  0A59  0839               	movf	??___fldiv+3,w
  5242  0A5A  0438               	iorwf	??___fldiv+2,w
  5243  0A5B  0437               	iorwf	??___fldiv+1,w
  5244  0A5C  0436               	iorwf	??___fldiv,w
  5245  0A5D  1903               	skipnz
  5246  0A5E  1832               	btfsc	___fldiv@b,0
  5247  0A5F  2A61               	goto	l5017
  5248  0A60  2A63               	goto	l5021
  5249  0A61                     l5017:
  5250  0A61  01C7               	clrf	___fldiv@aexp
  5251  0A62  0AC7               	incf	___fldiv@aexp,f
  5252  0A63                     l5021:
  5253  0A63  0847               	movf	___fldiv@aexp,w
  5254  0A64  1903               	btfsc	3,2
  5255  0A65  2A95               	goto	l5031
  5256  0A66  3001               	movlw	1
  5257  0A67  07B2               	addwf	___fldiv@b,f
  5258  0A68  3000               	movlw	0
  5259  0A69  1803               	skipnc
  5260  0A6A  3001               	movlw	1
  5261  0A6B  07B3               	addwf	___fldiv@b+1,f
  5262  0A6C  3000               	movlw	0
  5263  0A6D  1803               	skipnc
  5264  0A6E  3001               	movlw	1
  5265  0A6F  07B4               	addwf	___fldiv@b+2,f
  5266  0A70  3000               	movlw	0
  5267  0A71  1803               	skipnc
  5268  0A72  3001               	movlw	1
  5269  0A73  07B5               	addwf	___fldiv@b+3,f
  5270  0A74  1C35               	btfss	___fldiv@b+3,0
  5271  0A75  2A95               	goto	l5031
  5272  0A76  0832               	movf	___fldiv@b,w
  5273  0A77  00B6               	movwf	??___fldiv
  5274  0A78  0833               	movf	___fldiv@b+1,w
  5275  0A79  00B7               	movwf	??___fldiv+1
  5276  0A7A  0834               	movf	___fldiv@b+2,w
  5277  0A7B  00B8               	movwf	??___fldiv+2
  5278  0A7C  0835               	movf	___fldiv@b+3,w
  5279  0A7D  00B9               	movwf	??___fldiv+3
  5280  0A7E  3001               	movlw	1
  5281  0A7F  00BA               	movwf	??___fldiv+4
  5282  0A80                     u4855:
  5283  0A80  0D39               	rlf	??___fldiv+3,w
  5284  0A81  0CB9               	rrf	??___fldiv+3,f
  5285  0A82  0CB8               	rrf	??___fldiv+2,f
  5286  0A83  0CB7               	rrf	??___fldiv+1,f
  5287  0A84  0CB6               	rrf	??___fldiv,f
  5288  0A85  0BBA               	decfsz	??___fldiv+4,f
  5289  0A86  2A80               	goto	u4855
  5290  0A87  0839               	movf	??___fldiv+3,w
  5291  0A88  00B5               	movwf	___fldiv@b+3
  5292  0A89  0838               	movf	??___fldiv+2,w
  5293  0A8A  00B4               	movwf	___fldiv@b+2
  5294  0A8B  0837               	movf	??___fldiv+1,w
  5295  0A8C  00B3               	movwf	___fldiv@b+1
  5296  0A8D  0836               	movf	??___fldiv,w
  5297  0A8E  00B2               	movwf	___fldiv@b
  5298  0A8F  3001               	movlw	1
  5299  0A90  07C0               	addwf	___fldiv@new_exp,f
  5300  0A91  1803               	skipnc
  5301  0A92  0AC1               	incf	___fldiv@new_exp+1,f
  5302  0A93  3000               	movlw	0
  5303  0A94  07C1               	addwf	___fldiv@new_exp+1,f
  5304  0A95                     l5031:
  5305  0A95  0841               	movf	___fldiv@new_exp+1,w
  5306  0A96  3A80               	xorlw	128
  5307  0A97  00FF               	movwf	127
  5308  0A98  3080               	movlw	128
  5309  0A99  027F               	subwf	127,w
  5310  0A9A  1D03               	skipz
  5311  0A9B  2A9E               	goto	u4865
  5312  0A9C  30FF               	movlw	255
  5313  0A9D  0240               	subwf	___fldiv@new_exp,w
  5314  0A9E                     u4865:
  5315  0A9E  1C03               	skipc
  5316  0A9F  2AAE               	goto	l5035
  5317  0AA0  30FF               	movlw	255
  5318  0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  5319  0AA2  1303               	bcf	3,6	;RP1=0, select bank0
  5320  0AA3  00C0               	movwf	___fldiv@new_exp
  5321  0AA4  3000               	movlw	0
  5322  0AA5  00C1               	movwf	___fldiv@new_exp+1
  5323  0AA6  3000               	movlw	0
  5324  0AA7  00B5               	movwf	___fldiv@b+3
  5325  0AA8  3000               	movlw	0
  5326  0AA9  00B4               	movwf	___fldiv@b+2
  5327  0AAA  3000               	movlw	0
  5328  0AAB  00B3               	movwf	___fldiv@b+1
  5329  0AAC  3000               	movlw	0
  5330  0AAD  00B2               	movwf	___fldiv@b
  5331  0AAE                     l5035:
  5332  0AAE  1283               	bcf	3,5	;RP0=0, select bank0
  5333  0AAF  1303               	bcf	3,6	;RP1=0, select bank0
  5334  0AB0  0841               	movf	___fldiv@new_exp+1,w
  5335  0AB1  3A80               	xorlw	128
  5336  0AB2  00FF               	movwf	127
  5337  0AB3  3080               	movlw	128
  5338  0AB4  027F               	subwf	127,w
  5339  0AB5  1D03               	skipz
  5340  0AB6  2AB9               	goto	u4875
  5341  0AB7  3001               	movlw	1
  5342  0AB8  0240               	subwf	___fldiv@new_exp,w
  5343  0AB9                     u4875:
  5344  0AB9  1803               	skipnc
  5345  0ABA  2AC8               	goto	l5043
  5346  0ABB  1283               	bcf	3,5	;RP0=0, select bank0
  5347  0ABC  1303               	bcf	3,6	;RP1=0, select bank0
  5348  0ABD  01C0               	clrf	___fldiv@new_exp
  5349  0ABE  01C1               	clrf	___fldiv@new_exp+1
  5350  0ABF  3000               	movlw	0
  5351  0AC0  00B5               	movwf	___fldiv@b+3
  5352  0AC1  3000               	movlw	0
  5353  0AC2  00B4               	movwf	___fldiv@b+2
  5354  0AC3  3000               	movlw	0
  5355  0AC4  00B3               	movwf	___fldiv@b+1
  5356  0AC5  3000               	movlw	0
  5357  0AC6  00B2               	movwf	___fldiv@b
  5358  0AC7  01BF               	clrf	___fldiv@sign
  5359  0AC8                     l5043:
  5360  0AC8  1283               	bcf	3,5	;RP0=0, select bank0
  5361  0AC9  1303               	bcf	3,6	;RP1=0, select bank0
  5362  0ACA  0840               	movf	___fldiv@new_exp,w
  5363  0ACB  00FF               	movwf	127
  5364  0ACC  087F               	movf	127,w
  5365  0ACD  00C6               	movwf	___fldiv@bexp
  5366  0ACE  1C46               	btfss	___fldiv@bexp,0
  5367  0ACF  2AD2               	goto	l5049
  5368  0AD0  17B4               	bsf	___fldiv@b+2,7
  5369  0AD1  2AD6               	goto	l1370
  5370  0AD2                     l5049:
  5371  0AD2  307F               	movlw	127
  5372  0AD3  00FF               	movwf	127
  5373  0AD4  087F               	movf	127,w
  5374  0AD5  05B4               	andwf	___fldiv@b+2,f
  5375  0AD6                     l1370:
  5376  0AD6  0846               	movf	___fldiv@bexp,w
  5377  0AD7  00B6               	movwf	??___fldiv
  5378  0AD8  1003               	clrc
  5379  0AD9  0C36               	rrf	??___fldiv,w
  5380  0ADA  00FF               	movwf	127
  5381  0ADB  087F               	movf	127,w
  5382  0ADC  00B5               	movwf	___fldiv@b+3
  5383  0ADD  299B               	goto	L7
  5384  0ADE                     __end_of___fldiv:
  5385                           
  5386                           	psect	text7
  5387  198B                     __ptext7:	
  5388 ;; *************** function _Package_Usart_is_for_me *****************
  5389 ;; Defined at:
  5390 ;;		line 8 in file "protocolo.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;		None
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  retorno         1    0[BANK0 ] unsigned char 
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  1    wreg      unsigned char 
  5397 ;; Registers used:
  5398 ;;		wreg, status,2, status,0
  5399 ;; Tracked objects:
  5400 ;;		On entry : 300/100
  5401 ;;		On exit  : 300/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5404 ;;      Params:         0       0       0       0       0
  5405 ;;      Locals:         0       1       0       0       0
  5406 ;;      Temps:          0       0       0       0       0
  5407 ;;      Totals:         0       1       0       0       0
  5408 ;;Total ram usage:        1 bytes
  5409 ;; Hardware stack levels used:    1
  5410 ;; Hardware stack levels required when called:    1
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_MediaPlacaVaccum
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           
  5419                           ;psect for function _Package_Usart_is_for_me
  5420  198B                     _Package_Usart_is_for_me:
  5421                           
  5422                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5423                           
  5424                           ;incstack = 0
  5425                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5426  198B  1C63               	btfss	_generic_status^(0+128),0
  5427  198C  299F               	goto	l4851
  5428                           
  5429                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5430  198D  1283               	bcf	3,5	;RP0=0, select bank2
  5431  198E  1703               	bsf	3,6	;RP1=1, select bank2
  5432  198F  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5433  1990  1683               	bsf	3,5	;RP0=1, select bank1
  5434  1991  1303               	bcf	3,6	;RP1=0, select bank1
  5435  1992  0660               	xorwf	_Board_Number^(0+128),w
  5436  1993  1903               	skipnz
  5437  1994  299A               	goto	l817
  5438  1995  1283               	bcf	3,5	;RP0=0, select bank2
  5439  1996  1703               	bsf	3,6	;RP1=1, select bank2
  5440  1997  0A13               	incf	(_usart_buffer^(0+256)+3),w	;volatile
  5441  1998  1D03               	btfss	3,2
  5442  1999  299F               	goto	l4851
  5443  199A                     l817:
  5444                           
  5445                           ;protocolo.c: 13:             retorno=1;
  5446  199A  1283               	bcf	3,5	;RP0=0, select bank0
  5447  199B  1303               	bcf	3,6	;RP1=0, select bank0
  5448  199C  01A0               	clrf	Package_Usart_is_for_me@retorno
  5449  199D  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5450  199E  29A2               	goto	l4855
  5451  199F                     l4851:
  5452                           
  5453                           ;protocolo.c: 15:             retorno=0;
  5454  199F  1283               	bcf	3,5	;RP0=0, select bank0
  5455  19A0  1303               	bcf	3,6	;RP1=0, select bank0
  5456  19A1  01A0               	clrf	Package_Usart_is_for_me@retorno
  5457  19A2                     l4855:
  5458                           
  5459                           ;protocolo.c: 21:      return retorno;
  5460  19A2  0820               	movf	Package_Usart_is_for_me@retorno,w
  5461  19A3  0008               	return
  5462  19A4                     __end_of_Package_Usart_is_for_me:
  5463                           
  5464                           	psect	text8
  5465  1E30                     __ptext8:	
  5466 ;; *************** function _ADC_Media_10bits *****************
  5467 ;; Defined at:
  5468 ;;		line 20 in file "adc.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;  canal           1    wreg     unsigned char 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;  canal           1   19[BANK0 ] unsigned char 
  5473 ;;  value           2   20[BANK0 ] unsigned int 
  5474 ;;  i               1   22[BANK0 ] unsigned char 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  4   14[BANK0 ] float 
  5477 ;; Registers used:
  5478 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 300/100
  5481 ;;		On exit  : 300/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5484 ;;      Params:         0       4       0       0       0
  5485 ;;      Locals:         0       4       0       0       0
  5486 ;;      Temps:          0       1       0       0       0
  5487 ;;      Totals:         0       9       0       0       0
  5488 ;;Total ram usage:        9 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    2
  5491 ;; This function calls:
  5492 ;;		___lwdiv
  5493 ;;		___xxtofl
  5494 ;;		_captura
  5495 ;;		_my_delay_ms
  5496 ;; This function is called by:
  5497 ;;		_MediaPlacaVaccum
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           
  5502                           ;psect for function _ADC_Media_10bits
  5503  1E30                     _ADC_Media_10bits:
  5504                           
  5505                           ;incstack = 0
  5506                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5507                           ;ADC_Media_10bits@canal stored from wreg
  5508  1E30  1283               	bcf	3,5	;RP0=0, select bank0
  5509  1E31  00B3               	movwf	ADC_Media_10bits@canal
  5510                           
  5511                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5512  1E32  0833               	movf	ADC_Media_10bits@canal,w
  5513  1E33  00B2               	movwf	??_ADC_Media_10bits
  5514  1E34  0DB2               	rlf	??_ADC_Media_10bits,f
  5515  1E35  0DB2               	rlf	??_ADC_Media_10bits,f
  5516  1E36  081F               	movf	31,w	;volatile
  5517  1E37  0632               	xorwf	??_ADC_Media_10bits,w
  5518  1E38  39C3               	andlw	-61
  5519  1E39  0632               	xorwf	??_ADC_Media_10bits,w
  5520  1E3A  009F               	movwf	31	;volatile
  5521                           
  5522                           ;adc.c: 24:       my_delay_ms(1);
  5523  1E3B  3000               	movlw	0
  5524  1E3C  00A3               	movwf	my_delay_ms@time+3
  5525  1E3D  3000               	movlw	0
  5526  1E3E  00A2               	movwf	my_delay_ms@time+2
  5527  1E3F  3000               	movlw	0
  5528  1E40  00A1               	movwf	my_delay_ms@time+1
  5529  1E41  3001               	movlw	1
  5530  1E42  00A0               	movwf	my_delay_ms@time
  5531  1E43  160A  158A  247A  160A  158A  	fcall	_my_delay_ms
  5532                           
  5533                           ;adc.c: 26:       value=0;
  5534  1E48  01B4               	clrf	ADC_Media_10bits@value
  5535  1E49  01B5               	clrf	ADC_Media_10bits@value+1
  5536                           
  5537                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5538  1E4A  01B6               	clrf	ADC_Media_10bits@i
  5539  1E4B  0AB6               	incf	ADC_Media_10bits@i,f
  5540  1E4C                     l4833:
  5541                           
  5542                           ;adc.c: 28:           value+=captura();
  5543  1E4C  160A  158A  20C9  160A  158A  	fcall	_captura
  5544  1E51  0820               	movf	?_captura,w
  5545  1E52  07B4               	addwf	ADC_Media_10bits@value,f
  5546  1E53  1803               	skipnc
  5547  1E54  0AB5               	incf	ADC_Media_10bits@value+1,f
  5548  1E55  0821               	movf	?_captura+1,w
  5549  1E56  07B5               	addwf	ADC_Media_10bits@value+1,f
  5550  1E57  3001               	movlw	1
  5551  1E58  00FF               	movwf	127
  5552  1E59  087F               	movf	127,w
  5553  1E5A  07B6               	addwf	ADC_Media_10bits@i,f
  5554  1E5B  3033               	movlw	51
  5555  1E5C  0236               	subwf	ADC_Media_10bits@i,w
  5556  1E5D  1C03               	skipc
  5557  1E5E  2E4C               	goto	l4833
  5558                           
  5559                           ;adc.c: 29:       value/=(i-1);
  5560  1E5F  0836               	movf	ADC_Media_10bits@i,w
  5561  1E60  3EFF               	addlw	255
  5562  1E61  00A0               	movwf	___lwdiv@divisor
  5563  1E62  30FF               	movlw	255
  5564  1E63  1803               	skipnc
  5565  1E64  3000               	movlw	0
  5566  1E65  00A1               	movwf	___lwdiv@divisor+1
  5567  1E66  0835               	movf	ADC_Media_10bits@value+1,w
  5568  1E67  00A3               	movwf	___lwdiv@dividend+1
  5569  1E68  0834               	movf	ADC_Media_10bits@value,w
  5570  1E69  00A2               	movwf	___lwdiv@dividend
  5571  1E6A  160A  158A  2525  160A  158A  	fcall	___lwdiv
  5572  1E6F  0821               	movf	?___lwdiv+1,w
  5573  1E70  00B5               	movwf	ADC_Media_10bits@value+1
  5574  1E71  0820               	movf	?___lwdiv,w
  5575  1E72  00B4               	movwf	ADC_Media_10bits@value
  5576                           
  5577                           ;adc.c: 30:       return value;
  5578  1E73  0834               	movf	ADC_Media_10bits@value,w
  5579  1E74  00A0               	movwf	___xxtofl@val
  5580  1E75  0835               	movf	ADC_Media_10bits@value+1,w
  5581  1E76  00A1               	movwf	___xxtofl@val+1
  5582  1E77  01A2               	clrf	___xxtofl@val+2
  5583  1E78  01A3               	clrf	___xxtofl@val+3
  5584  1E79  3000               	movlw	0
  5585  1E7A  120A  118A  2751   	fcall	___xxtofl
  5586  1E7D  0823               	movf	?___xxtofl+3,w
  5587  1E7E  00B1               	movwf	?_ADC_Media_10bits+3
  5588  1E7F  0822               	movf	?___xxtofl+2,w
  5589  1E80  00B0               	movwf	?_ADC_Media_10bits+2
  5590  1E81  0821               	movf	?___xxtofl+1,w
  5591  1E82  00AF               	movwf	?_ADC_Media_10bits+1
  5592  1E83  0820               	movf	?___xxtofl,w
  5593  1E84  00AE               	movwf	?_ADC_Media_10bits
  5594  1E85  0008               	return
  5595  1E86                     __end_of_ADC_Media_10bits:
  5596                           
  5597                           	psect	text9
  5598  1C7A                     __ptext9:	
  5599 ;; *************** function _my_delay_ms *****************
  5600 ;; Defined at:
  5601 ;;		line 5 in file "my_delay.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  time            4    0[BANK0 ] long 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  i               4    6[BANK0 ] long 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  1    wreg      void 
  5608 ;; Registers used:
  5609 ;;		wreg, btemp+1
  5610 ;; Tracked objects:
  5611 ;;		On entry : 300/0
  5612 ;;		On exit  : 300/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5615 ;;      Params:         0       4       0       0       0
  5616 ;;      Locals:         0       4       0       0       0
  5617 ;;      Temps:          0       2       0       0       0
  5618 ;;      Totals:         0      10       0       0       0
  5619 ;;Total ram usage:       10 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_MediaPlacaVaccum
  5626 ;;		_ADC_Media_10bits
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           
  5631                           ;psect for function _my_delay_ms
  5632  1C7A                     _my_delay_ms:
  5633                           
  5634                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5635                           
  5636                           ;incstack = 0
  5637                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5638  1C7A  3000               	movlw	0
  5639  1C7B  00A9               	movwf	my_delay_ms@i+3
  5640  1C7C  3000               	movlw	0
  5641  1C7D  00A8               	movwf	my_delay_ms@i+2
  5642  1C7E  3000               	movlw	0
  5643  1C7F  00A7               	movwf	my_delay_ms@i+1
  5644  1C80  3000               	movlw	0
  5645  1C81  00A6               	movwf	my_delay_ms@i
  5646  1C82                     l3921:
  5647  1C82  0829               	movf	my_delay_ms@i+3,w
  5648  1C83  3A80               	xorlw	128
  5649  1C84  00FF               	movwf	127
  5650  1C85  0823               	movf	my_delay_ms@time+3,w
  5651  1C86  3A80               	xorlw	128
  5652  1C87  027F               	subwf	127,w
  5653  1C88  1D03               	skipz
  5654  1C89  2C94               	goto	u2993
  5655  1C8A  0822               	movf	my_delay_ms@time+2,w
  5656  1C8B  0228               	subwf	my_delay_ms@i+2,w
  5657  1C8C  1D03               	skipz
  5658  1C8D  2C94               	goto	u2993
  5659  1C8E  0821               	movf	my_delay_ms@time+1,w
  5660  1C8F  0227               	subwf	my_delay_ms@i+1,w
  5661  1C90  1D03               	skipz
  5662  1C91  2C94               	goto	u2993
  5663  1C92  0820               	movf	my_delay_ms@time,w
  5664  1C93  0226               	subwf	my_delay_ms@i,w
  5665  1C94                     u2993:
  5666  1C94  1803               	btfsc	3,0
  5667  1C95  0008               	return
  5668                           
  5669                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5670  1C96  3003               	movlw	3
  5671  1C97  1283               	bcf	3,5	;RP0=0, select bank0
  5672  1C98  1303               	bcf	3,6	;RP1=0, select bank0
  5673  1C99  00A5               	movwf	??_my_delay_ms+1
  5674  1C9A  3097               	movlw	151
  5675  1C9B  00A4               	movwf	??_my_delay_ms
  5676  1C9C                     u5527:
  5677  1C9C  0BA4               	decfsz	??_my_delay_ms,f
  5678  1C9D  2C9C               	goto	u5527
  5679  1C9E  0BA5               	decfsz	??_my_delay_ms+1,f
  5680  1C9F  2C9C               	goto	u5527
  5681                           
  5682                           ;my_delay.c: 10:             }
  5683  1CA0  3001               	movlw	1
  5684  1CA1  1283               	bcf	3,5	;RP0=0, select bank0
  5685  1CA2  1303               	bcf	3,6	;RP1=0, select bank0
  5686  1CA3  07A6               	addwf	my_delay_ms@i,f
  5687  1CA4  3000               	movlw	0
  5688  1CA5  1803               	skipnc
  5689  1CA6  3001               	movlw	1
  5690  1CA7  07A7               	addwf	my_delay_ms@i+1,f
  5691  1CA8  3000               	movlw	0
  5692  1CA9  1803               	skipnc
  5693  1CAA  3001               	movlw	1
  5694  1CAB  07A8               	addwf	my_delay_ms@i+2,f
  5695  1CAC  3000               	movlw	0
  5696  1CAD  1803               	skipnc
  5697  1CAE  3001               	movlw	1
  5698  1CAF  07A9               	addwf	my_delay_ms@i+3,f
  5699  1CB0  2C82               	goto	l3921
  5700  1CB1                     __end_of_my_delay_ms:
  5701                           
  5702                           	psect	text10
  5703  18C9                     __ptext10:	
  5704 ;; *************** function _captura *****************
  5705 ;; Defined at:
  5706 ;;		line 140 in file "adc.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;		None
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;		None
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  2    0[BANK0 ] unsigned int 
  5713 ;; Registers used:
  5714 ;;		wreg
  5715 ;; Tracked objects:
  5716 ;;		On entry : 300/0
  5717 ;;		On exit  : 300/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5720 ;;      Params:         0       2       0       0       0
  5721 ;;      Locals:         0       0       0       0       0
  5722 ;;      Temps:          0       0       0       0       0
  5723 ;;      Totals:         0       2       0       0       0
  5724 ;;Total ram usage:        2 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; Hardware stack levels required when called:    1
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_ADC_Media_10bits
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           
  5735                           ;psect for function _captura
  5736  18C9                     _captura:
  5737                           
  5738                           ;adc.c: 141:     ADCON0bits.GO=1;
  5739                           
  5740                           ;incstack = 0
  5741                           ; Regs used in _captura: [wreg]
  5742  18C9  149F               	bsf	31,1	;volatile
  5743  18CA                     l495:	
  5744                           ;adc.c: 145:           }
  5745                           
  5746                           
  5747                           ;adc.c: 142:     while(ADCON0bits.GO)
  5748  18CA  189F               	btfsc	31,1	;volatile
  5749  18CB  28CA               	goto	l495
  5750                           
  5751                           ;adc.c: 146:     return ((ADRESH<<8)+ADRESL);
  5752  18CC  081E               	movf	30,w	;volatile
  5753  18CD  00A1               	movwf	?_captura+1
  5754  18CE  1683               	bsf	3,5	;RP0=1, select bank1
  5755  18CF  081E               	movf	30,w	;volatile
  5756  18D0  1283               	bcf	3,5	;RP0=0, select bank0
  5757  18D1  00A0               	movwf	?_captura
  5758  18D2  0008               	return
  5759  18D3                     __end_of_captura:
  5760                           
  5761                           	psect	text11
  5762  0751                     __ptext11:	
  5763 ;; *************** function ___xxtofl *****************
  5764 ;; Defined at:
  5765 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  sign            1    wreg     unsigned char 
  5768 ;;  val             4    0[BANK0 ] long 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;  sign            1    8[BANK0 ] unsigned char 
  5771 ;;  arg             4   10[BANK0 ] unsigned long 
  5772 ;;  exp             1    9[BANK0 ] unsigned char 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  4    0[BANK0 ] unsigned char 
  5775 ;; Registers used:
  5776 ;;		wreg, status,2, status,0, btemp+1
  5777 ;; Tracked objects:
  5778 ;;		On entry : 300/0
  5779 ;;		On exit  : 300/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5782 ;;      Params:         0       4       0       0       0
  5783 ;;      Locals:         0       6       0       0       0
  5784 ;;      Temps:          0       4       0       0       0
  5785 ;;      Totals:         0      14       0       0       0
  5786 ;;Total ram usage:       14 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    1
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_MediaPlacaVaccum
  5793 ;;		_ADC_Media_10bits
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           
  5798                           ;psect for function ___xxtofl
  5799  0751                     ___xxtofl:
  5800                           
  5801                           ;incstack = 0
  5802                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  5803                           ;___xxtofl@sign stored from wreg
  5804  0751  00A8               	movwf	___xxtofl@sign
  5805  0752  0828               	movf	___xxtofl@sign,w
  5806  0753  1D03               	btfss	3,2
  5807  0754  1FA3               	btfss	___xxtofl@val+3,7
  5808  0755  2F66               	goto	l4375
  5809  0756  0920               	comf	___xxtofl@val,w
  5810  0757  00AA               	movwf	___xxtofl@arg
  5811  0758  0921               	comf	___xxtofl@val+1,w
  5812  0759  00AB               	movwf	___xxtofl@arg+1
  5813  075A  0922               	comf	___xxtofl@val+2,w
  5814  075B  00AC               	movwf	___xxtofl@arg+2
  5815  075C  0923               	comf	___xxtofl@val+3,w
  5816  075D  00AD               	movwf	___xxtofl@arg+3
  5817  075E  0AAA               	incf	___xxtofl@arg,f
  5818  075F  1903               	skipnz
  5819  0760  0AAB               	incf	___xxtofl@arg+1,f
  5820  0761  1903               	skipnz
  5821  0762  0AAC               	incf	___xxtofl@arg+2,f
  5822  0763  1903               	skipnz
  5823  0764  0AAD               	incf	___xxtofl@arg+3,f
  5824  0765  2F6E               	goto	l1430
  5825  0766                     l4375:
  5826  0766  0823               	movf	___xxtofl@val+3,w
  5827  0767  00AD               	movwf	___xxtofl@arg+3
  5828  0768  0822               	movf	___xxtofl@val+2,w
  5829  0769  00AC               	movwf	___xxtofl@arg+2
  5830  076A  0821               	movf	___xxtofl@val+1,w
  5831  076B  00AB               	movwf	___xxtofl@arg+1
  5832  076C  0820               	movf	___xxtofl@val,w
  5833  076D  00AA               	movwf	___xxtofl@arg
  5834  076E                     l1430:
  5835  076E  0823               	movf	___xxtofl@val+3,w
  5836  076F  0422               	iorwf	___xxtofl@val+2,w
  5837  0770  0421               	iorwf	___xxtofl@val+1,w
  5838  0771  0420               	iorwf	___xxtofl@val,w
  5839  0772  1D03               	skipz
  5840  0773  2F7D               	goto	l4381
  5841  0774  3000               	movlw	0
  5842  0775  00A3               	movwf	?___xxtofl+3
  5843  0776  3000               	movlw	0
  5844  0777  00A2               	movwf	?___xxtofl+2
  5845  0778  3000               	movlw	0
  5846  0779  00A1               	movwf	?___xxtofl+1
  5847  077A  3000               	movlw	0
  5848  077B  00A0               	movwf	?___xxtofl
  5849  077C  0008               	return
  5850  077D                     l4381:
  5851  077D  3096               	movlw	150
  5852  077E  00FF               	movwf	127
  5853  077F  087F               	movf	127,w
  5854  0780  00A9               	movwf	___xxtofl@exp
  5855  0781                     l4387:
  5856  0781  30FE               	movlw	254
  5857  0782  052D               	andwf	___xxtofl@arg+3,w
  5858  0783  1903               	btfsc	3,2
  5859  0784  2FAE               	goto	l4395
  5860  0785  3001               	movlw	1
  5861  0786  00FF               	movwf	127
  5862  0787  087F               	movf	127,w
  5863  0788  07A9               	addwf	___xxtofl@exp,f
  5864  0789  3001               	movlw	1
  5865  078A                     u4055:
  5866  078A  1003               	clrc
  5867  078B  0CAD               	rrf	___xxtofl@arg+3,f
  5868  078C  0CAC               	rrf	___xxtofl@arg+2,f
  5869  078D  0CAB               	rrf	___xxtofl@arg+1,f
  5870  078E  0CAA               	rrf	___xxtofl@arg,f
  5871  078F  3EFF               	addlw	-1
  5872  0790  1D03               	skipz
  5873  0791  2F8A               	goto	u4055
  5874  0792  2F81               	goto	l4387
  5875  0793                     l4389:
  5876  0793  3001               	movlw	1
  5877  0794  00FF               	movwf	127
  5878  0795  087F               	movf	127,w
  5879  0796  07A9               	addwf	___xxtofl@exp,f
  5880  0797  3001               	movlw	1
  5881  0798  07AA               	addwf	___xxtofl@arg,f
  5882  0799  3000               	movlw	0
  5883  079A  1803               	skipnc
  5884  079B  3001               	movlw	1
  5885  079C  07AB               	addwf	___xxtofl@arg+1,f
  5886  079D  3000               	movlw	0
  5887  079E  1803               	skipnc
  5888  079F  3001               	movlw	1
  5889  07A0  07AC               	addwf	___xxtofl@arg+2,f
  5890  07A1  3000               	movlw	0
  5891  07A2  1803               	skipnc
  5892  07A3  3001               	movlw	1
  5893  07A4  07AD               	addwf	___xxtofl@arg+3,f
  5894  07A5  3001               	movlw	1
  5895  07A6                     u4075:
  5896  07A6  1003               	clrc
  5897  07A7  0CAD               	rrf	___xxtofl@arg+3,f
  5898  07A8  0CAC               	rrf	___xxtofl@arg+2,f
  5899  07A9  0CAB               	rrf	___xxtofl@arg+1,f
  5900  07AA  0CAA               	rrf	___xxtofl@arg,f
  5901  07AB  3EFF               	addlw	-1
  5902  07AC  1D03               	skipz
  5903  07AD  2FA6               	goto	u4075
  5904  07AE                     l4395:
  5905  07AE  30FF               	movlw	255
  5906  07AF  052D               	andwf	___xxtofl@arg+3,w
  5907  07B0  1903               	btfsc	3,2
  5908  07B1  2FC2               	goto	l4399
  5909  07B2  2F93               	goto	l4389
  5910  07B3                     l4401:
  5911  07B3  3002               	movlw	2
  5912  07B4  0229               	subwf	___xxtofl@exp,w
  5913  07B5  1C03               	btfss	3,0
  5914  07B6  2FC4               	goto	l1443
  5915  07B7  3001               	movlw	1
  5916  07B8  02A9               	subwf	___xxtofl@exp,f
  5917  07B9  3001               	movlw	1
  5918  07BA  00A4               	movwf	??___xxtofl
  5919  07BB                     u4095:
  5920  07BB  1003               	clrc
  5921  07BC  0DAA               	rlf	___xxtofl@arg,f
  5922  07BD  0DAB               	rlf	___xxtofl@arg+1,f
  5923  07BE  0DAC               	rlf	___xxtofl@arg+2,f
  5924  07BF  0DAD               	rlf	___xxtofl@arg+3,f
  5925  07C0  0BA4               	decfsz	??___xxtofl,f
  5926  07C1  2FBB               	goto	u4095
  5927  07C2                     l4399:
  5928  07C2  1FAC               	btfss	___xxtofl@arg+2,7
  5929  07C3  2FB3               	goto	l4401
  5930  07C4                     l1443:
  5931  07C4  1829               	btfsc	___xxtofl@exp,0
  5932  07C5  2FCE               	goto	l1444
  5933  07C6  30FF               	movlw	255
  5934  07C7  05AA               	andwf	___xxtofl@arg,f
  5935  07C8  30FF               	movlw	255
  5936  07C9  05AB               	andwf	___xxtofl@arg+1,f
  5937  07CA  307F               	movlw	127
  5938  07CB  05AC               	andwf	___xxtofl@arg+2,f
  5939  07CC  30FF               	movlw	255
  5940  07CD  05AD               	andwf	___xxtofl@arg+3,f
  5941  07CE                     l1444:
  5942  07CE  1003               	clrc
  5943  07CF  0CA9               	rrf	___xxtofl@exp,f
  5944  07D0  0829               	movf	___xxtofl@exp,w
  5945  07D1  00A4               	movwf	??___xxtofl
  5946  07D2  01A5               	clrf	??___xxtofl+1
  5947  07D3  01A6               	clrf	??___xxtofl+2
  5948  07D4  01A7               	clrf	??___xxtofl+3
  5949  07D5  3018               	movlw	24
  5950  07D6                     u4135:
  5951  07D6  1003               	clrc
  5952  07D7  0DA4               	rlf	??___xxtofl,f
  5953  07D8  0DA5               	rlf	??___xxtofl+1,f
  5954  07D9  0DA6               	rlf	??___xxtofl+2,f
  5955  07DA  0DA7               	rlf	??___xxtofl+3,f
  5956  07DB  3EFF               	addlw	-1
  5957  07DC  1D03               	skipz
  5958  07DD  2FD6               	goto	u4135
  5959  07DE  0824               	movf	??___xxtofl,w
  5960  07DF  04AA               	iorwf	___xxtofl@arg,f
  5961  07E0  0825               	movf	??___xxtofl+1,w
  5962  07E1  04AB               	iorwf	___xxtofl@arg+1,f
  5963  07E2  0826               	movf	??___xxtofl+2,w
  5964  07E3  04AC               	iorwf	___xxtofl@arg+2,f
  5965  07E4  0827               	movf	??___xxtofl+3,w
  5966  07E5  04AD               	iorwf	___xxtofl@arg+3,f
  5967  07E6  0828               	movf	___xxtofl@sign,w
  5968  07E7  1D03               	btfss	3,2
  5969  07E8  1FA3               	btfss	___xxtofl@val+3,7
  5970  07E9  2FEB               	goto	l4413
  5971  07EA  17AD               	bsf	___xxtofl@arg+3,7
  5972  07EB                     l4413:
  5973  07EB  082D               	movf	___xxtofl@arg+3,w
  5974  07EC  00A3               	movwf	?___xxtofl+3
  5975  07ED  082C               	movf	___xxtofl@arg+2,w
  5976  07EE  00A2               	movwf	?___xxtofl+2
  5977  07EF  082B               	movf	___xxtofl@arg+1,w
  5978  07F0  00A1               	movwf	?___xxtofl+1
  5979  07F1  082A               	movf	___xxtofl@arg,w
  5980  07F2  00A0               	movwf	?___xxtofl
  5981  07F3  0008               	return
  5982  07F4                     __end_of___xxtofl:
  5983                           
  5984                           	psect	text12
  5985  1B79                     __ptext12:	
  5986 ;; *************** function _I2C_Master_Init *****************
  5987 ;; Defined at:
  5988 ;;		line 7 in file "I2C.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;  c               4   14[BANK0 ] const unsigned long 
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;		None
  5993 ;; Return value:  Size  Location     Type
  5994 ;;                  1    wreg      void 
  5995 ;; Registers used:
  5996 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5997 ;; Tracked objects:
  5998 ;;		On entry : 300/0
  5999 ;;		On exit  : 300/100
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6002 ;;      Params:         0       4       0       0       0
  6003 ;;      Locals:         0       0       0       0       0
  6004 ;;      Temps:          0       4       0       0       0
  6005 ;;      Totals:         0       8       0       0       0
  6006 ;;Total ram usage:        8 bytes
  6007 ;; Hardware stack levels used:    1
  6008 ;; Hardware stack levels required when called:    2
  6009 ;; This function calls:
  6010 ;;		___lldiv
  6011 ;; This function is called by:
  6012 ;;		_main
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           
  6017                           ;psect for function _I2C_Master_Init
  6018  1B79                     _I2C_Master_Init:
  6019                           
  6020                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  6021                           
  6022                           ;incstack = 0
  6023                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6024  1B79  3028               	movlw	40
  6025  1B7A  0094               	movwf	20	;volatile
  6026                           
  6027                           ;I2C.c: 11:   SSPCON2 = 0;
  6028  1B7B  1683               	bsf	3,5	;RP0=1, select bank1
  6029  1B7C  0191               	clrf	17	;volatile
  6030                           
  6031                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  6032  1B7D  1283               	bcf	3,5	;RP0=0, select bank0
  6033  1B7E  082E               	movf	I2C_Master_Init@c,w
  6034  1B7F  00B2               	movwf	??_I2C_Master_Init
  6035  1B80  082F               	movf	I2C_Master_Init@c+1,w
  6036  1B81  00B3               	movwf	??_I2C_Master_Init+1
  6037  1B82  0830               	movf	I2C_Master_Init@c+2,w
  6038  1B83  00B4               	movwf	??_I2C_Master_Init+2
  6039  1B84  0831               	movf	I2C_Master_Init@c+3,w
  6040  1B85  00B5               	movwf	??_I2C_Master_Init+3
  6041  1B86  3002               	movlw	2
  6042  1B87                     u4895:
  6043  1B87  1003               	clrc
  6044  1B88  0DB2               	rlf	??_I2C_Master_Init,f
  6045  1B89  0DB3               	rlf	??_I2C_Master_Init+1,f
  6046  1B8A  0DB4               	rlf	??_I2C_Master_Init+2,f
  6047  1B8B  0DB5               	rlf	??_I2C_Master_Init+3,f
  6048  1B8C  3EFF               	addlw	-1
  6049  1B8D  1D03               	skipz
  6050  1B8E  2B87               	goto	u4895
  6051  1B8F  0835               	movf	??_I2C_Master_Init+3,w
  6052  1B90  00A3               	movwf	___lldiv@divisor+3
  6053  1B91  0834               	movf	??_I2C_Master_Init+2,w
  6054  1B92  00A2               	movwf	___lldiv@divisor+2
  6055  1B93  0833               	movf	??_I2C_Master_Init+1,w
  6056  1B94  00A1               	movwf	___lldiv@divisor+1
  6057  1B95  0832               	movf	??_I2C_Master_Init,w
  6058  1B96  00A0               	movwf	___lldiv@divisor
  6059  1B97  3000               	movlw	0
  6060  1B98  00A7               	movwf	___lldiv@dividend+3
  6061  1B99  307A               	movlw	122
  6062  1B9A  00A6               	movwf	___lldiv@dividend+2
  6063  1B9B  3012               	movlw	18
  6064  1B9C  00A5               	movwf	___lldiv@dividend+1
  6065  1B9D  3000               	movlw	0
  6066  1B9E  00A4               	movwf	___lldiv@dividend
  6067  1B9F  160A  118A  200B   	fcall	___lldiv
  6068  1BA2  0820               	movf	?___lldiv,w
  6069  1BA3  3EFF               	addlw	255
  6070  1BA4  1683               	bsf	3,5	;RP0=1, select bank1
  6071  1BA5  0093               	movwf	19	;volatile
  6072                           
  6073                           ;I2C.c: 13:   SSPSTAT = 0;
  6074  1BA6  0194               	clrf	20	;volatile
  6075                           
  6076                           ;I2C.c: 14:   TRISC3 = 1;
  6077  1BA7  1587               	bsf	7,3	;volatile
  6078                           
  6079                           ;I2C.c: 15:   TRISC4 = 1;
  6080  1BA8  1607               	bsf	7,4	;volatile
  6081  1BA9  0008               	return
  6082  1BAA                     __end_of_I2C_Master_Init:
  6083                           
  6084                           	psect	text13
  6085  100B                     __ptext13:	
  6086 ;; *************** function ___lldiv *****************
  6087 ;; Defined at:
  6088 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;  divisor         4    0[BANK0 ] unsigned long 
  6091 ;;  dividend        4    4[BANK0 ] unsigned long 
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;  quotient        4    9[BANK0 ] unsigned long 
  6094 ;;  counter         1   13[BANK0 ] unsigned char 
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  4    0[BANK0 ] unsigned long 
  6097 ;; Registers used:
  6098 ;;		wreg, status,2, status,0, btemp+1
  6099 ;; Tracked objects:
  6100 ;;		On entry : 300/0
  6101 ;;		On exit  : 300/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6104 ;;      Params:         0       8       0       0       0
  6105 ;;      Locals:         0       5       0       0       0
  6106 ;;      Temps:          0       1       0       0       0
  6107 ;;      Totals:         0      14       0       0       0
  6108 ;;Total ram usage:       14 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:    1
  6111 ;; This function calls:
  6112 ;;		Nothing
  6113 ;; This function is called by:
  6114 ;;		_I2C_Master_Init
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           
  6119                           ;psect for function ___lldiv
  6120  100B                     ___lldiv:
  6121                           
  6122                           ;incstack = 0
  6123                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  6124  100B  3000               	movlw	0
  6125  100C  00AC               	movwf	___lldiv@quotient+3
  6126  100D  3000               	movlw	0
  6127  100E  00AB               	movwf	___lldiv@quotient+2
  6128  100F  3000               	movlw	0
  6129  1010  00AA               	movwf	___lldiv@quotient+1
  6130  1011  3000               	movlw	0
  6131  1012  00A9               	movwf	___lldiv@quotient
  6132  1013  0823               	movf	___lldiv@divisor+3,w
  6133  1014  0422               	iorwf	___lldiv@divisor+2,w
  6134  1015  0421               	iorwf	___lldiv@divisor+1,w
  6135  1016  0420               	iorwf	___lldiv@divisor,w
  6136  1017  1903               	skipnz
  6137  1018  2860               	goto	l4881
  6138  1019  01AD               	clrf	___lldiv@counter
  6139  101A  0AAD               	incf	___lldiv@counter,f
  6140  101B                     l4867:
  6141  101B  1BA3               	btfsc	___lldiv@divisor+3,7
  6142  101C  282B               	goto	l4869
  6143  101D  3001               	movlw	1
  6144  101E  00A8               	movwf	??___lldiv
  6145  101F                     u4475:
  6146  101F  1003               	clrc
  6147  1020  0DA0               	rlf	___lldiv@divisor,f
  6148  1021  0DA1               	rlf	___lldiv@divisor+1,f
  6149  1022  0DA2               	rlf	___lldiv@divisor+2,f
  6150  1023  0DA3               	rlf	___lldiv@divisor+3,f
  6151  1024  0BA8               	decfsz	??___lldiv,f
  6152  1025  281F               	goto	u4475
  6153  1026  3001               	movlw	1
  6154  1027  00FF               	movwf	127
  6155  1028  087F               	movf	127,w
  6156  1029  07AD               	addwf	___lldiv@counter,f
  6157  102A  281B               	goto	l4867
  6158  102B                     l4869:
  6159  102B  3001               	movlw	1
  6160  102C  00A8               	movwf	??___lldiv
  6161  102D                     u4495:
  6162  102D  1003               	clrc
  6163  102E  0DA9               	rlf	___lldiv@quotient,f
  6164  102F  0DAA               	rlf	___lldiv@quotient+1,f
  6165  1030  0DAB               	rlf	___lldiv@quotient+2,f
  6166  1031  0DAC               	rlf	___lldiv@quotient+3,f
  6167  1032  0BA8               	decfsz	??___lldiv,f
  6168  1033  282D               	goto	u4495
  6169  1034  0823               	movf	___lldiv@divisor+3,w
  6170  1035  0227               	subwf	___lldiv@dividend+3,w
  6171  1036  1D03               	skipz
  6172  1037  2842               	goto	u4505
  6173  1038  0822               	movf	___lldiv@divisor+2,w
  6174  1039  0226               	subwf	___lldiv@dividend+2,w
  6175  103A  1D03               	skipz
  6176  103B  2842               	goto	u4505
  6177  103C  0821               	movf	___lldiv@divisor+1,w
  6178  103D  0225               	subwf	___lldiv@dividend+1,w
  6179  103E  1D03               	skipz
  6180  103F  2842               	goto	u4505
  6181  1040  0820               	movf	___lldiv@divisor,w
  6182  1041  0224               	subwf	___lldiv@dividend,w
  6183  1042                     u4505:
  6184  1042  1C03               	skipc
  6185  1043  2853               	goto	l4877
  6186  1044  0820               	movf	___lldiv@divisor,w
  6187  1045  02A4               	subwf	___lldiv@dividend,f
  6188  1046  0821               	movf	___lldiv@divisor+1,w
  6189  1047  1C03               	skipc
  6190  1048  0F21               	incfsz	___lldiv@divisor+1,w
  6191  1049  02A5               	subwf	___lldiv@dividend+1,f
  6192  104A  0822               	movf	___lldiv@divisor+2,w
  6193  104B  1C03               	skipc
  6194  104C  0F22               	incfsz	___lldiv@divisor+2,w
  6195  104D  02A6               	subwf	___lldiv@dividend+2,f
  6196  104E  0823               	movf	___lldiv@divisor+3,w
  6197  104F  1C03               	skipc
  6198  1050  0F23               	incfsz	___lldiv@divisor+3,w
  6199  1051  02A7               	subwf	___lldiv@dividend+3,f
  6200  1052  1429               	bsf	___lldiv@quotient,0
  6201  1053                     l4877:
  6202  1053  3001               	movlw	1
  6203  1054                     u4515:
  6204  1054  1003               	clrc
  6205  1055  0CA3               	rrf	___lldiv@divisor+3,f
  6206  1056  0CA2               	rrf	___lldiv@divisor+2,f
  6207  1057  0CA1               	rrf	___lldiv@divisor+1,f
  6208  1058  0CA0               	rrf	___lldiv@divisor,f
  6209  1059  3EFF               	addlw	-1
  6210  105A  1D03               	skipz
  6211  105B  2854               	goto	u4515
  6212  105C  3001               	movlw	1
  6213  105D  02AD               	subwf	___lldiv@counter,f
  6214  105E  1D03               	btfss	3,2
  6215  105F  282B               	goto	l4869
  6216  1060                     l4881:
  6217  1060  082C               	movf	___lldiv@quotient+3,w
  6218  1061  00A3               	movwf	?___lldiv+3
  6219  1062  082B               	movf	___lldiv@quotient+2,w
  6220  1063  00A2               	movwf	?___lldiv+2
  6221  1064  082A               	movf	___lldiv@quotient+1,w
  6222  1065  00A1               	movwf	?___lldiv+1
  6223  1066  0829               	movf	___lldiv@quotient,w
  6224  1067  00A0               	movwf	?___lldiv
  6225  1068  0008               	return
  6226  1069                     __end_of___lldiv:
  6227                           
  6228                           	psect	text14
  6229  03FF                     __ptext14:	
  6230 ;; *************** function _Decodify_Command *****************
  6231 ;; Defined at:
  6232 ;;		line 304 in file "SlaveLiofilizadorVer1.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;		None
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;  sizedata        1   23[BANK1 ] unsigned char 
  6237 ;;  add             1   22[BANK1 ] unsigned char 
  6238 ;;  add_24LCxxxx    4   31[BANK1 ] unsigned long 
  6239 ;;  OutPut          4   26[BANK1 ] float 
  6240 ;;  tempint         2   24[BANK1 ] int 
  6241 ;;  dados           2   20[BANK1 ] int 
  6242 ;;  tempchar        1   30[BANK1 ] unsigned char 
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  1    wreg      void 
  6245 ;; Registers used:
  6246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6247 ;; Tracked objects:
  6248 ;;		On entry : 300/100
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6252 ;;      Params:         0       0       0       0       0
  6253 ;;      Locals:         0       0      15       0       0
  6254 ;;      Temps:          0       0       4       0       0
  6255 ;;      Totals:         0       0      19       0       0
  6256 ;;Total ram usage:       19 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; Hardware stack levels required when called:    6
  6259 ;; This function calls:
  6260 ;;		_EEPROM_24C1025_Fill_All
  6261 ;;		_EEPROM_24C1025_Read_Buffer_USART
  6262 ;;		_EEPROM_24C1025_Read_Byte
  6263 ;;		_EEPROM_24C1025_Read_Int
  6264 ;;		_EEPROM_24C1025_Read_Str
  6265 ;;		_EEPROM_24C1025_Write_Buffer
  6266 ;;		_EEPROM_24C1025_Write_Byte
  6267 ;;		_EEPROM_24C1025_Write_Int
  6268 ;;		_EEPROM_24C1025_Write_Str
  6269 ;;		_EEPROM_Read_Byte
  6270 ;;		_EEPROM_Read_Integer
  6271 ;;		_EEPROM_Read_String
  6272 ;;		_EEPROM_Write_Byte
  6273 ;;		_EEPROM_Write_Integer
  6274 ;;		_EEPROM_Write_String
  6275 ;;		_PROCULUS_Buzzer
  6276 ;;		_PROCULUS_Show_Screen
  6277 ;;		_PROCULUS_VP_Write_String
  6278 ;;		_Save_Log
  6279 ;;		_Send_Reply_OK
  6280 ;;		_Send_To_MB
  6281 ;;		_USART_put_int
  6282 ;;		_USART_put_string
  6283 ;;		_USART_putc
  6284 ;;		_USART_to_Protocol
  6285 ;;		___flmul
  6286 ;;		___fltol
  6287 ;;		_strcpy
  6288 ;;		_strlen
  6289 ;; This function is called by:
  6290 ;;		_main
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293                           
  6294                           
  6295                           ;psect for function _Decodify_Command
  6296  03FF                     _Decodify_Command:
  6297                           
  6298                           ;SlaveLiofilizadorVer1.c: 306:     int dados;;SlaveLiofilizadorVer1.c: 307:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 308:     int tempint;;SlaveLiofilizadorVer1.c: 309:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 310:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 322:     USART_to_Protocol(&usart_protocol);
  6299                           
  6300                           ;incstack = 0
  6301                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6302  03FF  3090               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6303  0400  160A  158A  25DB  120A  118A  	fcall	_USART_to_Protocol
  6304                           
  6305                           ;SlaveLiofilizadorVer1.c: 324:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6306  0405  1683               	bsf	3,5	;RP0=1, select bank3
  6307  0406  1703               	bsf	3,6	;RP1=1, select bank3
  6308  0407  0817               	movf	(_usart_protocol^(0+384)+7),w
  6309  0408  00FF               	movwf	127
  6310  0409  087F               	movf	127,w
  6311  040A  1303               	bcf	3,6	;RP1=0, select bank1
  6312  040B  00C2               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6313                           
  6314                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6315  040C  1703               	bsf	3,6	;RP1=1, select bank3
  6316  040D  0818               	movf	(_usart_protocol^(0+384)+8),w
  6317  040E  00FF               	movwf	127
  6318  040F  087F               	movf	127,w
  6319  0410  1303               	bcf	3,6	;RP1=0, select bank1
  6320  0411  00C1               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6321                           
  6322                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6323  0412  1703               	bsf	3,6	;RP1=1, select bank3
  6324  0413  0819               	movf	(_usart_protocol^(0+384)+9),w
  6325  0414  00FF               	movwf	127
  6326  0415  087F               	movf	127,w
  6327  0416  1303               	bcf	3,6	;RP1=0, select bank1
  6328  0417  00C0               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6329                           
  6330                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6331  0418  1703               	bsf	3,6	;RP1=1, select bank3
  6332  0419  081A               	movf	(_usart_protocol^(0+384)+10),w
  6333  041A  00FF               	movwf	127
  6334  041B  087F               	movf	127,w
  6335  041C  1303               	bcf	3,6	;RP1=0, select bank1
  6336  041D  00BF               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6337                           
  6338                           ;SlaveLiofilizadorVer1.c: 334:     switch(usart_protocol.command){
  6339  041E  2EFF               	goto	l5907
  6340  041F                     l5749:
  6341                           
  6342                           ;SlaveLiofilizadorVer1.c: 343:              strcpy(buffer,"v1.0.20");
  6343  041F  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6344  0420  00FF               	movwf	127
  6345  0421  087F               	movf	127,w
  6346  0422  1283               	bcf	3,5	;RP0=0, select bank0
  6347  0423  00A0               	movwf	strcpy@from
  6348  0424  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6349  0425  160A  158A  21C1  120A  118A  	fcall	_strcpy
  6350                           
  6351                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  6352  042A  300B               	movlw	11
  6353  042B                     L10:
  6354  042B  160A  158A  22D2  120A  118A  	fcall	_Send_To_MB
  6355                           
  6356                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string(buffer);
  6357  0430  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6358  0431  1283               	bcf	3,5	;RP0=0, select bank0
  6359  0432  00A1               	movwf	USART_put_string@vetor
  6360  0433  3001               	movlw	1
  6361  0434  00A2               	movwf	USART_put_string@vetor+1
  6362  0435  160A  158A  23DC   	fcall	_USART_put_string
  6363                           
  6364                           ;SlaveLiofilizadorVer1.c: 346:              break;
  6365  0438  0008               	return
  6366  0439                     l5755:
  6367                           
  6368                           ;SlaveLiofilizadorVer1.c: 363:              if(usart_protocol.value[0]==0)
  6369  0439  1703               	bsf	3,6	;RP1=1, select bank3
  6370  043A  0816               	movf	(_usart_protocol^(0+384)+6),w
  6371  043B  1D03               	btfss	3,2
  6372  043C  2C46               	goto	l5759
  6373                           
  6374                           ;SlaveLiofilizadorVer1.c: 364:                 OutPut=Tensao1;
  6375  043D  1303               	bcf	3,6	;RP1=0, select bank1
  6376  043E  084B               	movf	(_Tensao1+3)^(0+128),w
  6377  043F  00BD               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6378  0440  084A               	movf	(_Tensao1+2)^(0+128),w
  6379  0441  00BC               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6380  0442  0849               	movf	(_Tensao1+1)^(0+128),w
  6381  0443  00BB               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6382  0444  0848               	movf	_Tensao1^(0+128),w
  6383  0445  2C4E               	goto	L8
  6384  0446                     l5759:
  6385                           
  6386                           ;SlaveLiofilizadorVer1.c: 366:                 OutPut=Vaccum0;
  6387  0446  1303               	bcf	3,6	;RP1=0, select bank1
  6388  0447  084F               	movf	(_Vaccum0+3)^(0+128),w
  6389  0448  00BD               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6390  0449  084E               	movf	(_Vaccum0+2)^(0+128),w
  6391  044A  00BC               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6392  044B  084D               	movf	(_Vaccum0+1)^(0+128),w
  6393  044C  00BB               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6394  044D  084C               	movf	_Vaccum0^(0+128),w
  6395  044E                     L8:
  6396  044E  00BA               	movwf	Decodify_Command@OutPut^(0+128)
  6397                           
  6398                           ;SlaveLiofilizadorVer1.c: 369:              OutPut*=10.0;
  6399  044F  3041               	movlw	65
  6400  0450  1283               	bcf	3,5	;RP0=0, select bank0
  6401  0451  00CE               	movwf	___flmul@b+3
  6402  0452  3020               	movlw	32
  6403  0453  00CD               	movwf	___flmul@b+2
  6404  0454  3000               	movlw	0
  6405  0455  00CC               	movwf	___flmul@b+1
  6406  0456  3000               	movlw	0
  6407  0457  00CB               	movwf	___flmul@b
  6408  0458  1683               	bsf	3,5	;RP0=1, select bank1
  6409  0459  083D               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6410  045A  1283               	bcf	3,5	;RP0=0, select bank0
  6411  045B  00D2               	movwf	___flmul@a+3
  6412  045C  1683               	bsf	3,5	;RP0=1, select bank1
  6413  045D  083C               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6414  045E  1283               	bcf	3,5	;RP0=0, select bank0
  6415  045F  00D1               	movwf	___flmul@a+2
  6416  0460  1683               	bsf	3,5	;RP0=1, select bank1
  6417  0461  083B               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6418  0462  1283               	bcf	3,5	;RP0=0, select bank0
  6419  0463  00D0               	movwf	___flmul@a+1
  6420  0464  1683               	bsf	3,5	;RP0=1, select bank1
  6421  0465  083A               	movf	Decodify_Command@OutPut^(0+128),w
  6422  0466  1283               	bcf	3,5	;RP0=0, select bank0
  6423  0467  00CF               	movwf	___flmul@a
  6424  0468  120A  158A  250B  120A  118A  	fcall	___flmul
  6425  046D  084E               	movf	?___flmul+3,w
  6426  046E  1683               	bsf	3,5	;RP0=1, select bank1
  6427  046F  00BD               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6428  0470  1283               	bcf	3,5	;RP0=0, select bank0
  6429  0471  084D               	movf	?___flmul+2,w
  6430  0472  1683               	bsf	3,5	;RP0=1, select bank1
  6431  0473  00BC               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6432  0474  1283               	bcf	3,5	;RP0=0, select bank0
  6433  0475  084C               	movf	?___flmul+1,w
  6434  0476  1683               	bsf	3,5	;RP0=1, select bank1
  6435  0477  00BB               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6436  0478  1283               	bcf	3,5	;RP0=0, select bank0
  6437  0479  084B               	movf	?___flmul,w
  6438  047A  1683               	bsf	3,5	;RP0=1, select bank1
  6439  047B  00BA               	movwf	Decodify_Command@OutPut^(0+128)
  6440                           
  6441                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=0;
  6442  047C  138B               	bcf	11,7	;volatile
  6443                           
  6444                           ;SlaveLiofilizadorVer1.c: 372:              Send_To_MB(2);
  6445  047D  3002               	movlw	2
  6446  047E  160A  158A  22D2  120A  118A  	fcall	_Send_To_MB
  6447                           
  6448                           ;SlaveLiofilizadorVer1.c: 373:              USART_put_int(OutPut);
  6449  0483  083D               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6450  0484  1283               	bcf	3,5	;RP0=0, select bank0
  6451  0485  00E8               	movwf	___fltol@f1+3
  6452  0486  1683               	bsf	3,5	;RP0=1, select bank1
  6453  0487  083C               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6454  0488  1283               	bcf	3,5	;RP0=0, select bank0
  6455  0489  00E7               	movwf	___fltol@f1+2
  6456  048A  1683               	bsf	3,5	;RP0=1, select bank1
  6457  048B  083B               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6458  048C  1283               	bcf	3,5	;RP0=0, select bank0
  6459  048D  00E6               	movwf	___fltol@f1+1
  6460  048E  1683               	bsf	3,5	;RP0=1, select bank1
  6461  048F  083A               	movf	Decodify_Command@OutPut^(0+128),w
  6462  0490  1283               	bcf	3,5	;RP0=0, select bank0
  6463  0491  00E5               	movwf	___fltol@f1
  6464  0492  160A  158A  2686  120A  118A  	fcall	___fltol
  6465  0497  0866               	movf	?___fltol+1,w
  6466  0498  1683               	bsf	3,5	;RP0=1, select bank1
  6467  0499  00A1               	movwf	(USART_put_int@value+1)^(0+128)
  6468  049A  1283               	bcf	3,5	;RP0=0, select bank0
  6469  049B  0865               	movf	?___fltol,w
  6470  049C  1683               	bsf	3,5	;RP0=1, select bank1
  6471  049D  00A0               	movwf	USART_put_int@value^(0+128)
  6472  049E  160A  158A  212A   	fcall	_USART_put_int
  6473                           
  6474                           ;SlaveLiofilizadorVer1.c: 374:              INTCONbits.GIE=1;
  6475  04A1  178B               	bsf	11,7	;volatile
  6476                           
  6477                           ;SlaveLiofilizadorVer1.c: 375:              break;
  6478  04A2  0008               	return
  6479  04A3                     l5771:
  6480                           
  6481                           ;SlaveLiofilizadorVer1.c: 380:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6482  04A3  1703               	bsf	3,6	;RP1=1, select bank3
  6483  04A4  0816               	movf	(_usart_protocol^(0+384)+6),w
  6484  04A5  00FF               	movwf	127
  6485  04A6  087F               	movf	127,w
  6486  04A7  1303               	bcf	3,6	;RP1=0, select bank1
  6487  04A8  00C2               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6488                           
  6489                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6490  04A9  1703               	bsf	3,6	;RP1=1, select bank3
  6491  04AA  0817               	movf	(_usart_protocol^(0+384)+7),w
  6492  04AB  00FF               	movwf	127
  6493  04AC  087F               	movf	127,w
  6494  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  6495  04AE  00C1               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6496                           
  6497                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6498  04AF  1703               	bsf	3,6	;RP1=1, select bank3
  6499  04B0  0818               	movf	(_usart_protocol^(0+384)+8),w
  6500  04B1  00FF               	movwf	127
  6501  04B2  087F               	movf	127,w
  6502  04B3  1303               	bcf	3,6	;RP1=0, select bank1
  6503  04B4  00C0               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6504                           
  6505                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6506  04B5  1703               	bsf	3,6	;RP1=1, select bank3
  6507  04B6  0819               	movf	(_usart_protocol^(0+384)+9),w
  6508  04B7  00FF               	movwf	127
  6509  04B8  087F               	movf	127,w
  6510  04B9  1303               	bcf	3,6	;RP1=0, select bank1
  6511  04BA  00BF               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6512                           
  6513                           ;SlaveLiofilizadorVer1.c: 384:              Save_Log(add_24LCxxxx);
  6514  04BB  0842               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6515  04BC  00AC               	movwf	(Save_Log@add_datalog+3)^(0+128)
  6516  04BD  0841               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6517  04BE  00AB               	movwf	(Save_Log@add_datalog+2)^(0+128)
  6518  04BF  0840               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6519  04C0  00AA               	movwf	(Save_Log@add_datalog+1)^(0+128)
  6520  04C1  083F               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6521  04C2  00A9               	movwf	Save_Log@add_datalog^(0+128)
  6522  04C3  160A  158A  26F1   	fcall	_Save_Log
  6523                           
  6524                           ;SlaveLiofilizadorVer1.c: 385:              Delay_Led_Tmr0=0;
  6525  04C6  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6526  04C7  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6527                           
  6528                           ;SlaveLiofilizadorVer1.c: 386:              milisegundo=0;
  6529  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  6530  04C9  01D8               	clrf	_milisegundo^(0+128)	;volatile
  6531  04CA  01D9               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6532                           
  6533                           ;SlaveLiofilizadorVer1.c: 387:              break;
  6534  04CB  0008               	return
  6535  04CC                     l5779:
  6536                           
  6537                           ;SlaveLiofilizadorVer1.c: 399:              Send_To_MB(2);
  6538  04CC  3002               	movlw	2
  6539  04CD  160A  158A  22D2  120A  118A  	fcall	_Send_To_MB
  6540                           
  6541                           ;SlaveLiofilizadorVer1.c: 401:              USART_put_int(1);
  6542  04D2  3001               	movlw	1
  6543  04D3  00A0               	movwf	USART_put_int@value^(0+128)
  6544  04D4  3000               	movlw	0
  6545  04D5  00A1               	movwf	(USART_put_int@value^(0+128)+1)
  6546  04D6  160A  158A  212A   	fcall	_USART_put_int
  6547                           
  6548                           ;SlaveLiofilizadorVer1.c: 411:              break;
  6549  04D9  0008               	return
  6550  04DA                     l5783:
  6551                           
  6552                           ;SlaveLiofilizadorVer1.c: 428:              EEPROM_Write_Byte(usart_protocol.value[0],
  6553  04DA  1703               	bsf	3,6	;RP1=1, select bank3
  6554  04DB  0817               	movf	(_usart_protocol^(0+384)+7),w
  6555  04DC  00FF               	movwf	127
  6556  04DD  087F               	movf	127,w
  6557  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  6558  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  6559  04E0  00A0               	movwf	EEPROM_Write_Byte@dado
  6560  04E1  1683               	bsf	3,5	;RP0=1, select bank3
  6561  04E2  1703               	bsf	3,6	;RP1=1, select bank3
  6562  04E3  0816               	movf	(_usart_protocol^(0+384)+6),w
  6563  04E4  160A  158A  24E9  120A  118A  	fcall	_EEPROM_Write_Byte
  6564  04E9                     L9:
  6565                           
  6566                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  6567  04E9  3003               	movlw	3
  6568  04EA  160A  158A  22D2  120A  118A  	fcall	_Send_To_MB
  6569                           
  6570                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  6571  04EF  160A  158A  20C0   	fcall	_Send_Reply_OK
  6572                           
  6573                           ;SlaveLiofilizadorVer1.c: 432:              break;
  6574  04F2  0008               	return
  6575  04F3                     l5789:
  6576                           
  6577                           ;SlaveLiofilizadorVer1.c: 434:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6578  04F3  1703               	bsf	3,6	;RP1=1, select bank3
  6579  04F4  0816               	movf	(_usart_protocol^(0+384)+6),w
  6580  04F5  160A  158A  223E  120A  118A  	fcall	_EEPROM_Read_Byte
  6581  04FA  00FF               	movwf	127
  6582  04FB  087F               	movf	127,w
  6583  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  6584  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  6585  04FE  00BE               	movwf	Decodify_Command@tempchar^(0+128)
  6586                           
  6587                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(1);;
  6588  04FF  3001               	movlw	1
  6589  0500  160A  158A  22D2  120A  118A  	fcall	_Send_To_MB
  6590                           
  6591                           ;SlaveLiofilizadorVer1.c: 436:              USART_putc(tempchar);
  6592  0505  083E               	movf	Decodify_Command@tempchar^(0+128),w
  6593  0506  160A  158A  20DE   	fcall	_USART_putc
  6594                           
  6595                           ;SlaveLiofilizadorVer1.c: 437:              break;
  6596  0509  0008               	return
  6597  050A                     l5795:
  6598                           
  6599                           ;SlaveLiofilizadorVer1.c: 439:              {;SlaveLiofilizadorVer1.c: 440:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 441:              add=usart_protocol.value[
      +                          0];
  6600  050A  1703               	bsf	3,6	;RP1=1, select bank3
  6601  050B  0816               	movf	(_usart_protocol^(0+384)+6),w
  6602  050C  00FF               	movwf	127
  6603  050D  087F               	movf	127,w
  6604  050E  1303               	bcf	3,6	;RP1=0, select bank1
  6605  050F  00B6               	movwf	Decodify_Command@add^(0+128)
  6606                           
  6607                           ;SlaveLiofilizadorVer1.c: 442:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6608  0510  1703               	bsf	3,6	;RP1=1, select bank3
  6609  0511  0818               	movf	(_usart_protocol^(0+384)+8),w
  6610  0512  1303               	bcf	3,6	;RP1=0, select bank1
  6611  0513  00B0               	movwf	??_Decodify_Command^(0+128)
  6612  0514  01B1               	clrf	(??_Decodify_Command^(0+128)+1)
  6613  0515  1703               	bsf	3,6	;RP1=1, select bank3
  6614  0516  0817               	movf	(_usart_protocol^(0+384)+7),w
  6615  0517  1303               	bcf	3,6	;RP1=0, select bank1
  6616  0518  00B2               	movwf	(??_Decodify_Command+2)^(0+128)
  6617  0519  01B3               	clrf	((??_Decodify_Command+2)^(0+128)+1)
  6618  051A  0832               	movf	(??_Decodify_Command+2)^(0+128),w
  6619  051B  00B3               	movwf	((??_Decodify_Command+2)^(0+128)+1)
  6620  051C  01B2               	clrf	(??_Decodify_Command+2)^(0+128)
  6621  051D  0830               	movf	??_Decodify_Command^(0+128),w
  6622  051E  0432               	iorwf	(??_Decodify_Command+2)^(0+128),w
  6623  051F  00B4               	movwf	Decodify_Command@dados^(0+128)
  6624  0520  0831               	movf	(??_Decodify_Command+1)^(0+128),w
  6625  0521  0433               	iorwf	(??_Decodify_Command+3)^(0+128),w
  6626  0522  00B5               	movwf	(Decodify_Command@dados+1)^(0+128)
  6627                           
  6628                           ;SlaveLiofilizadorVer1.c: 443:              EEPROM_Write_Integer(add,dados);
  6629  0523  0835               	movf	(Decodify_Command@dados+1)^(0+128),w
  6630  0524  1283               	bcf	3,5	;RP0=0, select bank0
  6631  0525  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6632  0526  1683               	bsf	3,5	;RP0=1, select bank1
  6633  0527  0834               	movf	Decodify_Command@dados^(0+128),w
  6634  0528  1283               	bcf	3,5	;RP0=0, select bank0
  6635  0529  00A5               	movwf	EEPROM_Write_Integer@dado
  6636  052A  1683               	bsf	3,5	;RP0=1, select bank1
  6637  052B  0836               	movf	Decodify_Command@add^(0+128),w
  6638  052C  160A  158A  23AA  120A  118A  	fcall	_EEPROM_Write_Integer
  6639  0531  2CE9               	goto	L9
  6640  0532                     l5803:	
  6641                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(3);
  6642                           
  6643                           
  6644                           ;SlaveLiofilizadorVer1.c: 449:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6645  0532  1703               	bsf	3,6	;RP1=1, select bank3
  6646  0533  0816               	movf	(_usart_protocol^(0+384)+6),w
  6647  0534  160A  158A  22FA  120A  118A  	fcall	_EEPROM_Read_Integer
  6648  0539  0824               	movf	?_EEPROM_Read_Integer+1,w
  6649  053A  1683               	bsf	3,5	;RP0=1, select bank1
  6650  053B  00B9               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6651  053C  1283               	bcf	3,5	;RP0=0, select bank0
  6652  053D  0823               	movf	?_EEPROM_Read_Integer,w
  6653  053E                     L11:
  6654  053E  1683               	bsf	3,5	;RP0=1, select bank1
  6655  053F  00B8               	movwf	Decodify_Command@tempint^(0+128)
  6656                           
  6657                           ;SlaveLiofilizadorVer1.c: 450:              Send_To_MB(2);
  6658  0540  3002               	movlw	2
  6659  0541  160A  158A  22D2  120A  118A  	fcall	_Send_To_MB
  6660                           
  6661                           ;SlaveLiofilizadorVer1.c: 451:              USART_put_int(tempint);
  6662  0546  0839               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6663  0547  00A1               	movwf	(USART_put_int@value+1)^(0+128)
  6664  0548  0838               	movf	Decodify_Command@tempint^(0+128),w
  6665  0549  00A0               	movwf	USART_put_int@value^(0+128)
  6666  054A  160A  158A  212A   	fcall	_USART_put_int
  6667                           
  6668                           ;SlaveLiofilizadorVer1.c: 452:              break;
  6669  054D  0008               	return
  6670  054E                     l5809:
  6671                           
  6672                           ;SlaveLiofilizadorVer1.c: 455:              EEPROM_Write_String(usart_protocol.value[0],
  6673  054E  3097               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6674  054F  00FF               	movwf	127
  6675  0550  087F               	movf	127,w
  6676  0551  1283               	bcf	3,5	;RP0=0, select bank0
  6677  0552  00A5               	movwf	EEPROM_Write_String@dado
  6678  0553  1683               	bsf	3,5	;RP0=1, select bank3
  6679  0554  1703               	bsf	3,6	;RP1=1, select bank3
  6680  0555  0816               	movf	(_usart_protocol^(0+384)+6),w
  6681  0556  160A  158A  234E  120A  118A  	fcall	_EEPROM_Write_String
  6682  055B  2CE9               	goto	L9
  6683  055C                     l5815:	
  6684                           ;SlaveLiofilizadorVer1.c: 457:              Send_To_MB(3);
  6685                           
  6686                           
  6687                           ;SlaveLiofilizadorVer1.c: 461:              {;SlaveLiofilizadorVer1.c: 462:             
      +                           EEPROM_Read_String(usart_protocol.value[0],buffer);
  6688  055C  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6689  055D  00FF               	movwf	127
  6690  055E  087F               	movf	127,w
  6691  055F  1283               	bcf	3,5	;RP0=0, select bank0
  6692  0560  00A3               	movwf	EEPROM_Read_String@dado
  6693  0561  1683               	bsf	3,5	;RP0=1, select bank3
  6694  0562  1703               	bsf	3,6	;RP1=1, select bank3
  6695  0563  0816               	movf	(_usart_protocol^(0+384)+6),w
  6696  0564  160A  158A  21FD  120A  118A  	fcall	_EEPROM_Read_String
  6697                           
  6698                           ;SlaveLiofilizadorVer1.c: 463:              Send_To_MB(sizeof(buffer));
  6699  0569  3021               	movlw	33
  6700  056A  2C2B               	goto	L10
  6701  056B                     l5821:
  6702                           
  6703                           ;SlaveLiofilizadorVer1.c: 470:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6704  056B  0842               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6705  056C  1283               	bcf	3,5	;RP0=0, select bank0
  6706  056D  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6707  056E  1683               	bsf	3,5	;RP0=1, select bank1
  6708  056F  0841               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6709  0570  1283               	bcf	3,5	;RP0=0, select bank0
  6710  0571  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6711  0572  1683               	bsf	3,5	;RP0=1, select bank1
  6712  0573  0840               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6713  0574  1283               	bcf	3,5	;RP0=0, select bank0
  6714  0575  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6715  0576  1683               	bsf	3,5	;RP0=1, select bank1
  6716  0577  083F               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6717  0578  1283               	bcf	3,5	;RP0=0, select bank0
  6718  0579  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6719  057A  1683               	bsf	3,5	;RP0=1, select bank3
  6720  057B  1703               	bsf	3,6	;RP1=1, select bank3
  6721  057C  081B               	movf	(_usart_protocol^(0+384)+11),w
  6722  057D  00FF               	movwf	127
  6723  057E  087F               	movf	127,w
  6724  057F  1283               	bcf	3,5	;RP0=0, select bank0
  6725  0580  1303               	bcf	3,6	;RP1=0, select bank0
  6726  0581  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  6727  0582  1683               	bsf	3,5	;RP0=1, select bank3
  6728  0583  1703               	bsf	3,6	;RP1=1, select bank3
  6729  0584  0816               	movf	(_usart_protocol^(0+384)+6),w
  6730  0585  160A  158A  2114  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6731  058A  2CE9               	goto	L9
  6732  058B                     l5827:	
  6733                           ;SlaveLiofilizadorVer1.c: 473:              Send_To_MB(3);
  6734                           
  6735                           
  6736                           ;SlaveLiofilizadorVer1.c: 477:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6737  058B  0842               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6738  058C  1283               	bcf	3,5	;RP0=0, select bank0
  6739  058D  00BA               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6740  058E  1683               	bsf	3,5	;RP0=1, select bank1
  6741  058F  0841               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6742  0590  1283               	bcf	3,5	;RP0=0, select bank0
  6743  0591  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6744  0592  1683               	bsf	3,5	;RP0=1, select bank1
  6745  0593  0840               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6746  0594  1283               	bcf	3,5	;RP0=0, select bank0
  6747  0595  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6748  0596  1683               	bsf	3,5	;RP0=1, select bank1
  6749  0597  083F               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6750  0598  1283               	bcf	3,5	;RP0=0, select bank0
  6751  0599  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6752  059A  1683               	bsf	3,5	;RP0=1, select bank3
  6753  059B  1703               	bsf	3,6	;RP1=1, select bank3
  6754  059C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6755  059D  160A  158A  2159  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6756  05A2  00FF               	movwf	127
  6757  05A3  087F               	movf	127,w
  6758  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  6759  05A5  00BE               	movwf	Decodify_Command@tempchar^(0+128)
  6760                           
  6761                           ;SlaveLiofilizadorVer1.c: 481:              Send_To_MB(1);
  6762  05A6  3001               	movlw	1
  6763  05A7  160A  158A  22D2  120A  118A  	fcall	_Send_To_MB
  6764                           
  6765                           ;SlaveLiofilizadorVer1.c: 482:              USART_putc(tempchar);
  6766  05AC  083E               	movf	Decodify_Command@tempchar^(0+128),w
  6767  05AD  160A  158A  20DE   	fcall	_USART_putc
  6768                           
  6769                           ;SlaveLiofilizadorVer1.c: 483:              break;
  6770  05B0  0008               	return
  6771  05B1                     l5833:
  6772                           
  6773                           ;SlaveLiofilizadorVer1.c: 485:              {;SlaveLiofilizadorVer1.c: 486:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6774  05B1  0842               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6775  05B2  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  6776  05B3  0841               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6777  05B4  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  6778  05B5  0840               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6779  05B6  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  6780  05B7  083F               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6781  05B8  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  6782  05B9  1703               	bsf	3,6	;RP1=1, select bank3
  6783  05BA  081C               	movf	(_usart_protocol^(0+384)+12),w
  6784  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  6785  05BC  00B0               	movwf	??_Decodify_Command^(0+128)
  6786  05BD  01B1               	clrf	(??_Decodify_Command^(0+128)+1)
  6787  05BE  1703               	bsf	3,6	;RP1=1, select bank3
  6788  05BF  081B               	movf	(_usart_protocol^(0+384)+11),w
  6789  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  6790  05C1  00B2               	movwf	(??_Decodify_Command+2)^(0+128)
  6791  05C2  01B3               	clrf	((??_Decodify_Command+2)^(0+128)+1)
  6792  05C3  0832               	movf	(??_Decodify_Command+2)^(0+128),w
  6793  05C4  00B3               	movwf	((??_Decodify_Command+2)^(0+128)+1)
  6794  05C5  01B2               	clrf	(??_Decodify_Command+2)^(0+128)
  6795  05C6  0830               	movf	??_Decodify_Command^(0+128),w
  6796  05C7  0432               	iorwf	(??_Decodify_Command+2)^(0+128),w
  6797  05C8  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  6798  05C9  0831               	movf	(??_Decodify_Command+1)^(0+128),w
  6799  05CA  0433               	iorwf	(??_Decodify_Command+3)^(0+128),w
  6800  05CB  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  6801  05CC  1703               	bsf	3,6	;RP1=1, select bank3
  6802  05CD  0816               	movf	(_usart_protocol^(0+384)+6),w
  6803  05CE  160A  158A  2283  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6804  05D3  2CE9               	goto	L9
  6805  05D4                     l5839:	
  6806                           ;SlaveLiofilizadorVer1.c: 491:              Send_To_MB(3);
  6807                           
  6808                           
  6809                           ;SlaveLiofilizadorVer1.c: 496:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6810  05D4  0842               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6811  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  6812  05D6  00BA               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6813  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  6814  05D8  0841               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6815  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  6816  05DA  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6817  05DB  1683               	bsf	3,5	;RP0=1, select bank1
  6818  05DC  0840               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6819  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  6820  05DE  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6821  05DF  1683               	bsf	3,5	;RP0=1, select bank1
  6822  05E0  083F               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6823  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  6824  05E2  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6825  05E3  1683               	bsf	3,5	;RP0=1, select bank3
  6826  05E4  1703               	bsf	3,6	;RP1=1, select bank3
  6827  05E5  0816               	movf	(_usart_protocol^(0+384)+6),w
  6828  05E6  160A  158A  22AA  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6829  05EB  0838               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6830  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  6831  05ED  00B9               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6832  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  6833  05EF  0837               	movf	?_EEPROM_24C1025_Read_Int,w
  6834  05F0  2D3E               	goto	L11
  6835  05F1                     l5845:	
  6836                           ;SlaveLiofilizadorVer1.c: 498:              Send_To_MB(2);
  6837                           
  6838                           
  6839                           ;SlaveLiofilizadorVer1.c: 504:              {;SlaveLiofilizadorVer1.c: 505:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 506:              sizedata=usart_protocol.value
      +                          [5];
  6840  05F1  1703               	bsf	3,6	;RP1=1, select bank3
  6841  05F2  081B               	movf	(_usart_protocol^(0+384)+11),w
  6842  05F3  00FF               	movwf	127
  6843  05F4  087F               	movf	127,w
  6844  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  6845  05F6  00B7               	movwf	Decodify_Command@sizedata^(0+128)
  6846                           
  6847                           ;SlaveLiofilizadorVer1.c: 507:              Send_To_MB(sizedata);
  6848  05F7  0837               	movf	Decodify_Command@sizedata^(0+128),w
  6849  05F8  160A  158A  22D2  120A  118A  	fcall	_Send_To_MB
  6850                           
  6851                           ;SlaveLiofilizadorVer1.c: 508:              EEPROM_24C1025_Read_Buffer_USART(usart_proto
      +                          col.value[0],
  6852  05FD  0842               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6853  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  6854  05FF  00AC               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3
  6855  0600  1683               	bsf	3,5	;RP0=1, select bank1
  6856  0601  0841               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6857  0602  1283               	bcf	3,5	;RP0=0, select bank0
  6858  0603  00AB               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2
  6859  0604  1683               	bsf	3,5	;RP0=1, select bank1
  6860  0605  0840               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6861  0606  1283               	bcf	3,5	;RP0=0, select bank0
  6862  0607  00AA               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1
  6863  0608  1683               	bsf	3,5	;RP0=1, select bank1
  6864  0609  083F               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6865  060A  1283               	bcf	3,5	;RP0=0, select bank0
  6866  060B  00A9               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add
  6867  060C  1683               	bsf	3,5	;RP0=1, select bank1
  6868  060D  0837               	movf	Decodify_Command@sizedata^(0+128),w
  6869  060E  00FF               	movwf	127
  6870  060F  087F               	movf	127,w
  6871  0610  1283               	bcf	3,5	;RP0=0, select bank0
  6872  0611  00AD               	movwf	EEPROM_24C1025_Read_Buffer_USART@sizedata
  6873  0612  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6874  0613  00FF               	movwf	127
  6875  0614  087F               	movf	127,w
  6876  0615  00AE               	movwf	EEPROM_24C1025_Read_Buffer_USART@data
  6877  0616  1683               	bsf	3,5	;RP0=1, select bank3
  6878  0617  1703               	bsf	3,6	;RP1=1, select bank3
  6879  0618  0816               	movf	(_usart_protocol^(0+384)+6),w
  6880  0619  160A  118A  2520   	fcall	_EEPROM_24C1025_Read_Buffer_USART
  6881                           
  6882                           ;SlaveLiofilizadorVer1.c: 513:              };SlaveLiofilizadorVer1.c: 514:             
      +                           break;
  6883  061C  0008               	return
  6884  061D                     l5851:
  6885                           
  6886                           ;SlaveLiofilizadorVer1.c: 517:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6887  061D  0842               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6888  061E  1283               	bcf	3,5	;RP0=0, select bank0
  6889  061F  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6890  0620  1683               	bsf	3,5	;RP0=1, select bank1
  6891  0621  0841               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6892  0622  1283               	bcf	3,5	;RP0=0, select bank0
  6893  0623  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6894  0624  1683               	bsf	3,5	;RP0=1, select bank1
  6895  0625  0840               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6896  0626  1283               	bcf	3,5	;RP0=0, select bank0
  6897  0627  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6898  0628  1683               	bsf	3,5	;RP0=1, select bank1
  6899  0629  083F               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6900  062A  1283               	bcf	3,5	;RP0=0, select bank0
  6901  062B  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6902  062C  1683               	bsf	3,5	;RP0=1, select bank3
  6903  062D  1703               	bsf	3,6	;RP1=1, select bank3
  6904  062E  081B               	movf	(_usart_protocol^(0+384)+11),w
  6905  062F  00FF               	movwf	127
  6906  0630  087F               	movf	127,w
  6907  0631  1283               	bcf	3,5	;RP0=0, select bank0
  6908  0632  1303               	bcf	3,6	;RP1=0, select bank0
  6909  0633  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6910  0634  309C               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6911  0635  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6912  0636  3001               	movlw	1
  6913  0637  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6914  0638  1683               	bsf	3,5	;RP0=1, select bank3
  6915  0639  1703               	bsf	3,6	;RP1=1, select bank3
  6916  063A  0816               	movf	(_usart_protocol^(0+384)+6),w
  6917  063B  160A  118A  224A  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6918  0640  2CE9               	goto	L9
  6919  0641                     l5857:	
  6920                           ;SlaveLiofilizadorVer1.c: 522:              Send_To_MB(3);
  6921                           
  6922                           
  6923                           ;SlaveLiofilizadorVer1.c: 527:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6924  0641  0842               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6925  0642  1283               	bcf	3,5	;RP0=0, select bank0
  6926  0643  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6927  0644  1683               	bsf	3,5	;RP0=1, select bank1
  6928  0645  0841               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6929  0646  1283               	bcf	3,5	;RP0=0, select bank0
  6930  0647  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6931  0648  1683               	bsf	3,5	;RP0=1, select bank1
  6932  0649  0840               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6933  064A  1283               	bcf	3,5	;RP0=0, select bank0
  6934  064B  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6935  064C  1683               	bsf	3,5	;RP0=1, select bank1
  6936  064D  083F               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6937  064E  1283               	bcf	3,5	;RP0=0, select bank0
  6938  064F  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6939  0650  309B               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6940  0651  00FF               	movwf	127
  6941  0652  087F               	movf	127,w
  6942  0653  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6943  0654  1683               	bsf	3,5	;RP0=1, select bank3
  6944  0655  1703               	bsf	3,6	;RP1=1, select bank3
  6945  0656  0816               	movf	(_usart_protocol^(0+384)+6),w
  6946  0657  160A  118A  2157  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6947  065C  2CE9               	goto	L9
  6948  065D                     l5863:	
  6949                           ;SlaveLiofilizadorVer1.c: 530:              Send_To_MB(3);
  6950                           
  6951                           
  6952                           ;SlaveLiofilizadorVer1.c: 534:              {;SlaveLiofilizadorVer1.c: 535:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6953  065D  0842               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6954  065E  1283               	bcf	3,5	;RP0=0, select bank0
  6955  065F  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6956  0660  1683               	bsf	3,5	;RP0=1, select bank1
  6957  0661  0841               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6958  0662  1283               	bcf	3,5	;RP0=0, select bank0
  6959  0663  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6960  0664  1683               	bsf	3,5	;RP0=1, select bank1
  6961  0665  0840               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6962  0666  1283               	bcf	3,5	;RP0=0, select bank0
  6963  0667  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6964  0668  1683               	bsf	3,5	;RP0=1, select bank1
  6965  0669  083F               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6966  066A  1283               	bcf	3,5	;RP0=0, select bank0
  6967  066B  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6968  066C  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6969  066D  00FF               	movwf	127
  6970  066E  087F               	movf	127,w
  6971  066F  00AD               	movwf	EEPROM_24C1025_Read_Str@buffer
  6972  0670  1683               	bsf	3,5	;RP0=1, select bank3
  6973  0671  1703               	bsf	3,6	;RP1=1, select bank3
  6974  0672  0816               	movf	(_usart_protocol^(0+384)+6),w
  6975  0673  160A  118A  23B4  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6976                           
  6977                           ;SlaveLiofilizadorVer1.c: 539:              Send_To_MB(strlen(buffer)+1);
  6978  0678  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6979  0679  160A  158A  2172  120A  118A  	fcall	_strlen
  6980  067E  0820               	movf	?_strlen,w
  6981  067F  3E01               	addlw	1
  6982  0680  160A  158A  22D2  120A  118A  	fcall	_Send_To_MB
  6983                           
  6984                           ;SlaveLiofilizadorVer1.c: 540:              USART_put_string(buffer);
  6985  0685  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6986  0686  1283               	bcf	3,5	;RP0=0, select bank0
  6987  0687  00A1               	movwf	USART_put_string@vetor
  6988  0688  3001               	movlw	1
  6989  0689  00A2               	movwf	USART_put_string@vetor+1
  6990  068A  160A  158A  23DC   	fcall	_USART_put_string
  6991                           
  6992                           ;SlaveLiofilizadorVer1.c: 541:              break;
  6993  068D  0008               	return
  6994  068E                     l5865:
  6995                           
  6996                           ;SlaveLiofilizadorVer1.c: 545:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  6997  068E  1703               	bsf	3,6	;RP1=1, select bank3
  6998  068F  0817               	movf	(_usart_protocol^(0+384)+7),w
  6999  0690  1303               	bcf	3,6	;RP1=0, select bank1
  7000  0691  00B0               	movwf	??_Decodify_Command^(0+128)
  7001  0692  01B1               	clrf	(??_Decodify_Command^(0+128)+1)
  7002  0693  0830               	movf	??_Decodify_Command^(0+128),w
  7003  0694  00A9               	movwf	EEPROM_24C1025_Fill_All@value^(0+128)
  7004  0695  0831               	movf	(??_Decodify_Command+1)^(0+128),w
  7005  0696  00AA               	movwf	(EEPROM_24C1025_Fill_All@value+1)^(0+128)
  7006  0697  1703               	bsf	3,6	;RP1=1, select bank3
  7007  0698  0816               	movf	(_usart_protocol^(0+384)+6),w
  7008  0699  160A  158A  259D  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  7009  069E  2CE9               	goto	L9
  7010  069F                     l5871:	
  7011                           ;SlaveLiofilizadorVer1.c: 547:              Send_To_MB(3);
  7012                           
  7013                           
  7014                           ;SlaveLiofilizadorVer1.c: 552:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7015  069F  1703               	bsf	3,6	;RP1=1, select bank3
  7016  06A0  0816               	movf	(_usart_protocol^(0+384)+6),w
  7017  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  7018  06A2  00B0               	movwf	??_Decodify_Command^(0+128)
  7019  06A3  01B1               	clrf	(??_Decodify_Command^(0+128)+1)
  7020  06A4  0830               	movf	??_Decodify_Command^(0+128),w
  7021  06A5  00A6               	movwf	PROCULUS_Show_Screen@screen^(0+128)
  7022  06A6  0831               	movf	(??_Decodify_Command+1)^(0+128),w
  7023  06A7  00A7               	movwf	(PROCULUS_Show_Screen@screen+1)^(0+128)
  7024  06A8  160A  158A  20FF  120A  118A  	fcall	_PROCULUS_Show_Screen
  7025  06AD  2CE9               	goto	L9
  7026  06AE                     l5877:	
  7027                           ;SlaveLiofilizadorVer1.c: 553:              Send_To_MB(3);
  7028                           
  7029                           
  7030                           ;SlaveLiofilizadorVer1.c: 558:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7031  06AE  1703               	bsf	3,6	;RP1=1, select bank3
  7032  06AF  0816               	movf	(_usart_protocol^(0+384)+6),w
  7033  06B0  1303               	bcf	3,6	;RP1=0, select bank1
  7034  06B1  00B0               	movwf	??_Decodify_Command^(0+128)
  7035  06B2  01B1               	clrf	(??_Decodify_Command^(0+128)+1)
  7036  06B3  0830               	movf	??_Decodify_Command^(0+128),w
  7037  06B4  00B1               	movwf	(??_Decodify_Command^(0+128)+1)
  7038  06B5  01B0               	clrf	??_Decodify_Command^(0+128)
  7039  06B6  1703               	bsf	3,6	;RP1=1, select bank3
  7040  06B7  0817               	movf	(_usart_protocol^(0+384)+7),w
  7041  06B8  1303               	bcf	3,6	;RP1=0, select bank1
  7042  06B9  0730               	addwf	??_Decodify_Command^(0+128),w
  7043  06BA  00A6               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  7044  06BB  3000               	movlw	0
  7045  06BC  1803               	skipnc
  7046  06BD  3001               	movlw	1
  7047  06BE  0731               	addwf	(??_Decodify_Command+1)^(0+128),w
  7048  06BF  00A7               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  7049  06C0  160A  158A  2324  120A  118A  	fcall	_PROCULUS_Buzzer
  7050  06C5  2CE9               	goto	L9
  7051  06C6                     l5883:	
  7052                           ;SlaveLiofilizadorVer1.c: 560:              Send_To_MB(3);
  7053                           
  7054                           
  7055                           ;SlaveLiofilizadorVer1.c: 564:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  7056  06C6  1703               	bsf	3,6	;RP1=1, select bank3
  7057  06C7  0816               	movf	(_usart_protocol^(0+384)+6),w
  7058  06C8  1303               	bcf	3,6	;RP1=0, select bank1
  7059  06C9  00B0               	movwf	??_Decodify_Command^(0+128)
  7060  06CA  01B1               	clrf	(??_Decodify_Command^(0+128)+1)
  7061  06CB  0830               	movf	??_Decodify_Command^(0+128),w
  7062  06CC  00B1               	movwf	(??_Decodify_Command^(0+128)+1)
  7063  06CD  01B0               	clrf	??_Decodify_Command^(0+128)
  7064  06CE  1703               	bsf	3,6	;RP1=1, select bank3
  7065  06CF  0817               	movf	(_usart_protocol^(0+384)+7),w
  7066  06D0  1303               	bcf	3,6	;RP1=0, select bank1
  7067  06D1  0730               	addwf	??_Decodify_Command^(0+128),w
  7068  06D2  00AA               	movwf	PROCULUS_VP_Write_String@vp^(0+128)
  7069  06D3  3000               	movlw	0
  7070  06D4  1803               	skipnc
  7071  06D5  3001               	movlw	1
  7072  06D6  0731               	addwf	(??_Decodify_Command+1)^(0+128),w
  7073  06D7  00AB               	movwf	(PROCULUS_VP_Write_String@vp+1)^(0+128)
  7074  06D8  3098               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  7075  06D9  00FF               	movwf	127
  7076  06DA  087F               	movf	127,w
  7077  06DB  00AC               	movwf	PROCULUS_VP_Write_String@text^(0+128)
  7078  06DC  160A  158A  2141  120A  118A  	fcall	_PROCULUS_VP_Write_String
  7079  06E1  2CE9               	goto	L9
  7080  06E2                     l5889:	
  7081                           ;SlaveLiofilizadorVer1.c: 567:              Send_To_MB(3);
  7082                           
  7083                           
  7084                           ;SlaveLiofilizadorVer1.c: 573:              if(usart_protocol.value[0]==0)
  7085  06E2  1703               	bsf	3,6	;RP1=1, select bank3
  7086  06E3  0816               	movf	(_usart_protocol^(0+384)+6),w
  7087  06E4  1D03               	btfss	3,2
  7088  06E5  2EF1               	goto	l5895
  7089                           
  7090                           ;SlaveLiofilizadorVer1.c: 574:                 {;SlaveLiofilizadorVer1.c: 575:          
      +                                 if(!usart_protocol.value[1])
  7091  06E6  0817               	movf	(_usart_protocol^(0+384)+7),w
  7092  06E7  1D03               	btfss	3,2
  7093  06E8  2EED               	goto	l424
  7094                           
  7095                           ;SlaveLiofilizadorVer1.c: 576:                    PORTCbits.RC0=0;
  7096  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  7097  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  7098  06EB  1007               	bcf	7,0	;volatile
  7099  06EC  2CE9               	goto	L9
  7100  06ED                     l424:	
  7101                           ;SlaveLiofilizadorVer1.c: 577:                 else
  7102                           
  7103                           
  7104                           ;SlaveLiofilizadorVer1.c: 578:                    PORTCbits.RC0=1;
  7105  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  7106  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  7107  06EF  1407               	bsf	7,0	;volatile
  7108  06F0  2CE9               	goto	L9
  7109  06F1                     l5895:
  7110  06F1  0316               	decf	(_usart_protocol^(0+384)+6),w
  7111  06F2  1D03               	btfss	3,2
  7112  06F3  2CE9               	goto	L9
  7113                           
  7114                           ;SlaveLiofilizadorVer1.c: 581:                      {;SlaveLiofilizadorVer1.c: 582:     
      +                                            if(!usart_protocol.value[1])
  7115  06F4  0817               	movf	(_usart_protocol^(0+384)+7),w
  7116  06F5  1D03               	btfss	3,2
  7117  06F6  2EFB               	goto	l428
  7118                           
  7119                           ;SlaveLiofilizadorVer1.c: 583:                          PORTCbits.RC1=0;
  7120  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  7121  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  7122  06F9  1087               	bcf	7,1	;volatile
  7123  06FA  2CE9               	goto	L9
  7124  06FB                     l428:	
  7125                           ;SlaveLiofilizadorVer1.c: 584:                       else
  7126                           
  7127                           
  7128                           ;SlaveLiofilizadorVer1.c: 585:                          PORTCbits.RC1=1;
  7129  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  7130  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  7131  06FD  1487               	bsf	7,1	;volatile
  7132  06FE  2CE9               	goto	L9
  7133  06FF                     l5907:	
  7134                           ;SlaveLiofilizadorVer1.c: 587:              Send_To_MB(3);
  7135                           
  7136  06FF  1703               	bsf	3,6	;RP1=1, select bank3
  7137  0700  0814               	movf	(_usart_protocol^(0+384)+4),w
  7138  0701  1303               	bcf	3,6	;RP1=0, select bank1
  7139  0702  00B0               	movwf	??_Decodify_Command^(0+128)
  7140  0703  01B1               	clrf	(??_Decodify_Command^(0+128)+1)
  7141                           
  7142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7143                           ; Switch size 1, requested type "simple"
  7144                           ; Number of cases is 1, Range of values is 0 to 0
  7145                           ; switch strategies available:
  7146                           ; Name         Instructions Cycles
  7147                           ; simple_byte            4     3 (average)
  7148                           ; direct_byte           11     8 (fixed)
  7149                           ; jumptable            260     6 (fixed)
  7150                           ;	Chosen strategy is simple_byte
  7151  0704  0831               	movf	(??_Decodify_Command+1)^(0+128),w
  7152  0705  3A00               	xorlw	0	; case 0
  7153  0706  1903               	skipnz
  7154  0707  2F09               	goto	l6057
  7155  0708  2F50               	goto	l430
  7156  0709                     l6057:
  7157                           
  7158                           ; Switch size 1, requested type "simple"
  7159                           ; Number of cases is 23, Range of values is 2 to 65
  7160                           ; switch strategies available:
  7161                           ; Name         Instructions Cycles
  7162                           ; simple_byte           70    36 (average)
  7163                           ; direct_byte          203    11 (fixed)
  7164                           ; jumptable            263     9 (fixed)
  7165                           ;	Chosen strategy is simple_byte
  7166  0709  0830               	movf	??_Decodify_Command^(0+128),w
  7167  070A  3A02               	xorlw	2	; case 2
  7168  070B  1903               	skipnz
  7169  070C  2CA3               	goto	l5771
  7170  070D  3A01               	xorlw	1	; case 3
  7171  070E  1903               	skipnz
  7172  070F  2CCC               	goto	l5779
  7173  0710  3A0B               	xorlw	11	; case 8
  7174  0711  1903               	skipnz
  7175  0712  2CDA               	goto	l5783
  7176  0713  3A01               	xorlw	1	; case 9
  7177  0714  1903               	skipnz
  7178  0715  2CF3               	goto	l5789
  7179  0716  3A03               	xorlw	3	; case 10
  7180  0717  1903               	skipnz
  7181  0718  2D0A               	goto	l5795
  7182  0719  3A01               	xorlw	1	; case 11
  7183  071A  1903               	skipnz
  7184  071B  2D32               	goto	l5803
  7185  071C  3A07               	xorlw	7	; case 12
  7186  071D  1903               	skipnz
  7187  071E  2D4E               	goto	l5809
  7188  071F  3A01               	xorlw	1	; case 13
  7189  0720  1903               	skipnz
  7190  0721  2D5C               	goto	l5815
  7191  0722  3A1C               	xorlw	28	; case 17
  7192  0723  1903               	skipnz
  7193  0724  2D6B               	goto	l5821
  7194  0725  3A03               	xorlw	3	; case 18
  7195  0726  1903               	skipnz
  7196  0727  2D8B               	goto	l5827
  7197  0728  3A01               	xorlw	1	; case 19
  7198  0729  1903               	skipnz
  7199  072A  2DB1               	goto	l5833
  7200  072B  3A07               	xorlw	7	; case 20
  7201  072C  1903               	skipnz
  7202  072D  2DD4               	goto	l5839
  7203  072E  3A01               	xorlw	1	; case 21
  7204  072F  1903               	skipnz
  7205  0730  2E41               	goto	l5857
  7206  0731  3A03               	xorlw	3	; case 22
  7207  0732  1903               	skipnz
  7208  0733  2E5D               	goto	l5863
  7209  0734  3A01               	xorlw	1	; case 23
  7210  0735  1903               	skipnz
  7211  0736  2E1D               	goto	l5851
  7212  0737  3A0F               	xorlw	15	; case 24
  7213  0738  1903               	skipnz
  7214  0739  2DF1               	goto	l5845
  7215  073A  3A01               	xorlw	1	; case 25
  7216  073B  1903               	skipnz
  7217  073C  2E8E               	goto	l5865
  7218  073D  3A03               	xorlw	3	; case 26
  7219  073E  1903               	skipnz
  7220  073F  2C39               	goto	l5755
  7221  0740  3A38               	xorlw	56	; case 34
  7222  0741  1903               	skipnz
  7223  0742  2EC6               	goto	l5883
  7224  0743  3A06               	xorlw	6	; case 36
  7225  0744  1903               	skipnz
  7226  0745  2EAE               	goto	l5877
  7227  0746  3A01               	xorlw	1	; case 37
  7228  0747  1903               	skipnz
  7229  0748  2E9F               	goto	l5871
  7230  0749  3A15               	xorlw	21	; case 48
  7231  074A  1903               	skipnz
  7232  074B  2EE2               	goto	l5889
  7233  074C  3A71               	xorlw	113	; case 65
  7234  074D  1903               	skipnz
  7235  074E  2C1F               	goto	l5749
  7236  074F  2F50               	goto	l430
  7237  0750                     l430:
  7238  0750  0008               	return
  7239  0751                     __end_of_Decodify_Command:
  7240                           
  7241                           	psect	text15
  7242  19C1                     __ptext15:	
  7243 ;; *************** function _strcpy *****************
  7244 ;; Defined at:
  7245 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strcpy.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;  to              1    wreg     PTR unsigned char 
  7248 ;;		 -> buffer(33), 
  7249 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  7250 ;;		 -> STR_1(8), 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;  to              1    1[BANK0 ] PTR unsigned char 
  7253 ;;		 -> buffer(33), 
  7254 ;;  cp              1    2[BANK0 ] PTR unsigned char 
  7255 ;;		 -> buffer(33), 
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  1    wreg      PTR unsigned char 
  7258 ;; Registers used:
  7259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  7260 ;; Tracked objects:
  7261 ;;		On entry : 300/0
  7262 ;;		On exit  : B00/800
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7265 ;;      Params:         0       1       0       0       0
  7266 ;;      Locals:         0       2       0       0       0
  7267 ;;      Temps:          0       0       0       0       0
  7268 ;;      Totals:         0       3       0       0       0
  7269 ;;Total ram usage:        3 bytes
  7270 ;; Hardware stack levels used:    2
  7271 ;; Hardware stack levels required when called:    1
  7272 ;; This function calls:
  7273 ;;		Nothing
  7274 ;; This function is called by:
  7275 ;;		_Decodify_Command
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           
  7280                           ;psect for function _strcpy
  7281  19C1                     _strcpy:
  7282                           
  7283                           ;incstack = 0
  7284                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  7285                           ;strcpy@to stored from wreg
  7286  19C1  00A1               	movwf	strcpy@to
  7287  19C2  0821               	movf	strcpy@to,w
  7288  19C3  00FF               	movwf	127
  7289  19C4  087F               	movf	127,w
  7290  19C5  00A2               	movwf	strcpy@cp
  7291  19C6                     l4777:
  7292  19C6  0820               	movf	strcpy@from,w
  7293  19C7  0084               	movwf	4
  7294  19C8  160A  158A  200A  160A  158A  	fcall	stringdir
  7295  19CD  00FF               	movwf	127
  7296  19CE  0822               	movf	strcpy@cp,w
  7297  19CF  0084               	movwf	4
  7298  19D0  087F               	movf	127,w
  7299  19D1  1783               	bsf	3,7	;select IRP bank2
  7300  19D2  0080               	movwf	0
  7301  19D3  0800               	movf	0,w
  7302  19D4  1903               	btfsc	3,2
  7303  19D5  0008               	return
  7304  19D6  3001               	movlw	1
  7305  19D7  00FF               	movwf	127
  7306  19D8  087F               	movf	127,w
  7307  19D9  07A2               	addwf	strcpy@cp,f
  7308  19DA  3001               	movlw	1
  7309  19DB  00FF               	movwf	127
  7310  19DC  087F               	movf	127,w
  7311  19DD  07A0               	addwf	strcpy@from,f
  7312  19DE  29C6               	goto	l4777
  7313  19DF                     __end_of_strcpy:
  7314                           
  7315                           	psect	text16
  7316  1DDB                     __ptext16:	
  7317 ;; *************** function _USART_to_Protocol *****************
  7318 ;; Defined at:
  7319 ;;		line 77 in file "usart.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  usart_protoc    1    wreg     PTR struct .
  7322 ;;		 -> usart_protocol(58), 
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;  usart_protoc    1    3[BANK0 ] PTR struct .
  7325 ;;		 -> usart_protocol(58), 
  7326 ;;  i               2    1[BANK0 ] int 
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  1    wreg      void 
  7329 ;; Registers used:
  7330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7331 ;; Tracked objects:
  7332 ;;		On entry : 300/100
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7336 ;;      Params:         0       0       0       0       0
  7337 ;;      Locals:         0       3       0       0       0
  7338 ;;      Temps:          0       1       0       0       0
  7339 ;;      Totals:         0       4       0       0       0
  7340 ;;Total ram usage:        4 bytes
  7341 ;; Hardware stack levels used:    1
  7342 ;; Hardware stack levels required when called:    1
  7343 ;; This function calls:
  7344 ;;		Nothing
  7345 ;; This function is called by:
  7346 ;;		_Decodify_Command
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           
  7351                           ;psect for function _USART_to_Protocol
  7352  1DDB                     _USART_to_Protocol:
  7353                           
  7354                           ;incstack = 0
  7355                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0+btemp+1]
  7356                           ;USART_to_Protocol@usart_protocol stored from wreg
  7357  1DDB  1283               	bcf	3,5	;RP0=0, select bank0
  7358  1DDC  00A3               	movwf	USART_to_Protocol@usart_protocol
  7359                           
  7360                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  7361  1DDD  0823               	movf	USART_to_Protocol@usart_protocol,w
  7362  1DDE  0084               	movwf	4
  7363  1DDF  1703               	bsf	3,6	;RP1=1, select bank2
  7364  1DE0  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  7365  1DE1  1783               	bsf	3,7	;select IRP bank2
  7366  1DE2  0080               	movwf	0
  7367  1DE3  0A84               	incf	4,f
  7368  1DE4  0810               	movf	_usart_buffer^(0+256),w	;volatile
  7369  1DE5  0080               	movwf	0
  7370                           
  7371                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  7372  1DE6  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  7373  1DE7  00FF               	movwf	127
  7374  1DE8  1303               	bcf	3,6	;RP1=0, select bank0
  7375  1DE9  0823               	movf	USART_to_Protocol@usart_protocol,w
  7376  1DEA  3E02               	addlw	2
  7377  1DEB  0084               	movwf	4
  7378  1DEC  087F               	movf	127,w
  7379  1DED  0080               	movwf	0
  7380                           
  7381                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  7382  1DEE  1703               	bsf	3,6	;RP1=1, select bank2
  7383  1DEF  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  7384  1DF0  00FF               	movwf	127
  7385  1DF1  1303               	bcf	3,6	;RP1=0, select bank0
  7386  1DF2  0823               	movf	USART_to_Protocol@usart_protocol,w
  7387  1DF3  3E03               	addlw	3
  7388  1DF4  0084               	movwf	4
  7389  1DF5  087F               	movf	127,w
  7390  1DF6  0080               	movwf	0
  7391                           
  7392                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  7393  1DF7  1703               	bsf	3,6	;RP1=1, select bank2
  7394  1DF8  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  7395  1DF9  00FF               	movwf	127
  7396  1DFA  1303               	bcf	3,6	;RP1=0, select bank0
  7397  1DFB  0823               	movf	USART_to_Protocol@usart_protocol,w
  7398  1DFC  3E04               	addlw	4
  7399  1DFD  0084               	movwf	4
  7400  1DFE  087F               	movf	127,w
  7401  1DFF  0080               	movwf	0
  7402                           
  7403                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  7404  1E00  1703               	bsf	3,6	;RP1=1, select bank2
  7405  1E01  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  7406  1E02  00FF               	movwf	127
  7407  1E03  1303               	bcf	3,6	;RP1=0, select bank0
  7408  1E04  0823               	movf	USART_to_Protocol@usart_protocol,w
  7409  1E05  3E05               	addlw	5
  7410  1E06  0084               	movwf	4
  7411  1E07  087F               	movf	127,w
  7412  1E08  0080               	movwf	0
  7413                           
  7414                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  7415  1E09  01A1               	clrf	USART_to_Protocol@i
  7416  1E0A  01A2               	clrf	USART_to_Protocol@i+1
  7417  1E0B                     l4771:
  7418  1E0B  0823               	movf	USART_to_Protocol@usart_protocol,w
  7419  1E0C  3E05               	addlw	5
  7420  1E0D  0084               	movwf	4
  7421  1E0E  0822               	movf	USART_to_Protocol@i+1,w
  7422  1E0F  3A80               	xorlw	128
  7423  1E10  00A0               	movwf	??_USART_to_Protocol
  7424  1E11  3080               	movlw	128
  7425  1E12  0220               	subwf	??_USART_to_Protocol,w
  7426  1E13  1D03               	skipz
  7427  1E14  2E17               	goto	u4385
  7428  1E15  0800               	movf	0,w
  7429  1E16  0221               	subwf	USART_to_Protocol@i,w
  7430  1E17                     u4385:
  7431  1E17  1803               	btfsc	3,0
  7432  1E18  0008               	return
  7433                           
  7434                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  7435  1E19  1283               	bcf	3,5	;RP0=0, select bank0
  7436  1E1A  1303               	bcf	3,6	;RP1=0, select bank0
  7437  1E1B  0821               	movf	USART_to_Protocol@i,w
  7438  1E1C  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  7439  1E1D  0084               	movwf	4
  7440  1E1E  1783               	bsf	3,7	;select IRP bank2
  7441  1E1F  0800               	movf	0,w
  7442  1E20  00FF               	movwf	127
  7443  1E21  0821               	movf	USART_to_Protocol@i,w
  7444  1E22  0723               	addwf	USART_to_Protocol@usart_protocol,w
  7445  1E23  00A0               	movwf	??_USART_to_Protocol
  7446  1E24  0820               	movf	??_USART_to_Protocol,w
  7447  1E25  3E06               	addlw	6
  7448  1E26  0084               	movwf	4
  7449  1E27  087F               	movf	127,w
  7450  1E28  0080               	movwf	0
  7451  1E29  3001               	movlw	1
  7452  1E2A  07A1               	addwf	USART_to_Protocol@i,f
  7453  1E2B  1803               	skipnc
  7454  1E2C  0AA2               	incf	USART_to_Protocol@i+1,f
  7455  1E2D  3000               	movlw	0
  7456  1E2E  07A2               	addwf	USART_to_Protocol@i+1,f
  7457  1E2F  2E0B               	goto	l4771
  7458  1E30                     __end_of_USART_to_Protocol:
  7459                           
  7460                           	psect	text17
  7461  1AD2                     __ptext17:	
  7462 ;; *************** function _Send_To_MB *****************
  7463 ;; Defined at:
  7464 ;;		line 597 in file "SlaveLiofilizadorVer1.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  size            1    wreg     unsigned char 
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;  size            1    1[BANK0 ] unsigned char 
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1    wreg      void 
  7471 ;; Registers used:
  7472 ;;		wreg, status,2, status,0, pclath, cstack
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/800
  7475 ;;		On exit  : 300/100
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7478 ;;      Params:         0       0       0       0       0
  7479 ;;      Locals:         0       1       0       0       0
  7480 ;;      Temps:          0       0       0       0       0
  7481 ;;      Totals:         0       1       0       0       0
  7482 ;;Total ram usage:        1 bytes
  7483 ;; Hardware stack levels used:    1
  7484 ;; Hardware stack levels required when called:    2
  7485 ;; This function calls:
  7486 ;;		_USART_putc
  7487 ;; This function is called by:
  7488 ;;		_Decodify_Command
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           
  7493                           ;psect for function _Send_To_MB
  7494  1AD2                     _Send_To_MB:
  7495                           
  7496                           ;incstack = 0
  7497                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  7498                           ;Send_To_MB@size stored from wreg
  7499  1AD2  1283               	bcf	3,5	;RP0=0, select bank0
  7500  1AD3  1303               	bcf	3,6	;RP1=0, select bank0
  7501  1AD4  00A1               	movwf	Send_To_MB@size
  7502                           
  7503                           ;SlaveLiofilizadorVer1.c: 599:      USART_putc(0xAA);
  7504  1AD5  30AA               	movlw	170
  7505  1AD6  160A  158A  20DE  160A  158A  	fcall	_USART_putc
  7506                           
  7507                           ;SlaveLiofilizadorVer1.c: 600:      USART_putc(0xBB);
  7508  1ADB  30BB               	movlw	187
  7509  1ADC  160A  158A  20DE  160A  158A  	fcall	_USART_putc
  7510                           
  7511                           ;SlaveLiofilizadorVer1.c: 601:      USART_putc(Board_Number);
  7512  1AE1  0860               	movf	_Board_Number^(0+128),w
  7513  1AE2  160A  158A  20DE  160A  158A  	fcall	_USART_putc
  7514                           
  7515                           ;SlaveLiofilizadorVer1.c: 602:      USART_putc(0x00);
  7516  1AE7  3000               	movlw	0
  7517  1AE8  160A  158A  20DE  160A  158A  	fcall	_USART_putc
  7518                           
  7519                           ;SlaveLiofilizadorVer1.c: 603:      USART_putc(usart_protocol.command);
  7520  1AED  1703               	bsf	3,6	;RP1=1, select bank3
  7521  1AEE  0814               	movf	(_usart_protocol^(0+384)+4),w
  7522  1AEF  160A  158A  20DE  160A  158A  	fcall	_USART_putc
  7523                           
  7524                           ;SlaveLiofilizadorVer1.c: 604:      USART_putc(size);
  7525  1AF4  1283               	bcf	3,5	;RP0=0, select bank0
  7526  1AF5  0821               	movf	Send_To_MB@size,w
  7527  1AF6  160A  158A  20DE   	fcall	_USART_putc
  7528  1AF9  0008               	return
  7529  1AFA                     __end_of_Send_To_MB:
  7530                           
  7531                           	psect	text18
  7532  18C0                     __ptext18:	
  7533 ;; *************** function _Send_Reply_OK *****************
  7534 ;; Defined at:
  7535 ;;		line 608 in file "SlaveLiofilizadorVer1.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;		None
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;		None
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      void 
  7542 ;; Registers used:
  7543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 300/100
  7546 ;;		On exit  : 300/100
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7549 ;;      Params:         0       0       0       0       0
  7550 ;;      Locals:         0       0       0       0       0
  7551 ;;      Temps:          0       0       0       0       0
  7552 ;;      Totals:         0       0       0       0       0
  7553 ;;Total ram usage:        0 bytes
  7554 ;; Hardware stack levels used:    1
  7555 ;; Hardware stack levels required when called:    3
  7556 ;; This function calls:
  7557 ;;		_USART_put_string
  7558 ;; This function is called by:
  7559 ;;		_Decodify_Command
  7560 ;; This function uses a non-reentrant model
  7561 ;;
  7562                           
  7563                           
  7564                           ;psect for function _Send_Reply_OK
  7565  18C0                     _Send_Reply_OK:
  7566                           
  7567                           ;SlaveLiofilizadorVer1.c: 609:      USART_put_string("OK");
  7568                           
  7569                           ;incstack = 0
  7570                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7571  18C0  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7572  18C1  1283               	bcf	3,5	;RP0=0, select bank0
  7573  18C2  00A1               	movwf	USART_put_string@vetor
  7574  18C3  3080               	movlw	128
  7575  18C4  00A2               	movwf	USART_put_string@vetor+1
  7576  18C5  160A  158A  23DC   	fcall	_USART_put_string
  7577  18C8  0008               	return
  7578  18C9                     __end_of_Send_Reply_OK:
  7579                           
  7580                           	psect	text19
  7581  1BDC                     __ptext19:	
  7582 ;; *************** function _USART_put_string *****************
  7583 ;; Defined at:
  7584 ;;		line 167 in file "usart.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  7587 ;;		 -> STR_2(3), buffer(33), 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  7590 ;;		 -> STR_2(3), buffer(33), 
  7591 ;; Return value:  Size  Location     Type
  7592 ;;                  1    wreg      void 
  7593 ;; Registers used:
  7594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7595 ;; Tracked objects:
  7596 ;;		On entry : 300/800
  7597 ;;		On exit  : 300/100
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7600 ;;      Params:         0       2       0       0       0
  7601 ;;      Locals:         0       2       0       0       0
  7602 ;;      Temps:          0       0       0       0       0
  7603 ;;      Totals:         0       4       0       0       0
  7604 ;;Total ram usage:        4 bytes
  7605 ;; Hardware stack levels used:    1
  7606 ;; Hardware stack levels required when called:    2
  7607 ;; This function calls:
  7608 ;;		_USART_putc
  7609 ;; This function is called by:
  7610 ;;		_Decodify_Command
  7611 ;;		_Send_Reply_OK
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           
  7616                           ;psect for function _USART_put_string
  7617  1BDC                     _USART_put_string:
  7618                           
  7619                           ;usart.c: 167: void USART_put_string(char *vetor);usart.c: 168: {;usart.c: 169:     char
      +                           *ptr;;usart.c: 170:     ptr=vetor;
  7620                           
  7621                           ;incstack = 0
  7622                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7623  1BDC  0821               	movf	USART_put_string@vetor,w
  7624  1BDD  00A3               	movwf	USART_put_string@ptr
  7625  1BDE  0822               	movf	USART_put_string@vetor+1,w
  7626  1BDF  00A4               	movwf	USART_put_string@ptr+1
  7627  1BE0                     l3865:	
  7628                           ;usart.c: 171:     while(*ptr){
  7629                           
  7630                           
  7631                           ;usart.c: 171:     while(*ptr){
  7632  1BE0  0824               	movf	USART_put_string@ptr+1,w
  7633  1BE1  00FF               	movwf	127
  7634  1BE2  0823               	movf	USART_put_string@ptr,w
  7635  1BE3  0084               	movwf	4
  7636  1BE4  160A  158A  2000  160A  158A  	fcall	stringtab
  7637  1BE9  3A00               	xorlw	0
  7638  1BEA  1903               	btfsc	3,2
  7639  1BEB  2C02               	goto	l3867
  7640                           
  7641                           ;usart.c: 172:         USART_putc(*ptr);
  7642  1BEC  0824               	movf	USART_put_string@ptr+1,w
  7643  1BED  00FF               	movwf	127
  7644  1BEE  0823               	movf	USART_put_string@ptr,w
  7645  1BEF  0084               	movwf	4
  7646  1BF0  160A  158A  2000  160A  158A  	fcall	stringtab
  7647  1BF5  160A  158A  20DE  160A  158A  	fcall	_USART_putc
  7648                           
  7649                           ;usart.c: 173:         ptr++;
  7650  1BFA  3001               	movlw	1
  7651  1BFB  1283               	bcf	3,5	;RP0=0, select bank0
  7652  1BFC  07A3               	addwf	USART_put_string@ptr,f
  7653  1BFD  1803               	skipnc
  7654  1BFE  0AA4               	incf	USART_put_string@ptr+1,f
  7655  1BFF  3000               	movlw	0
  7656  1C00  07A4               	addwf	USART_put_string@ptr+1,f
  7657  1C01  2BE0               	goto	l3865
  7658  1C02                     l3867:
  7659                           
  7660                           ;usart.c: 175:     USART_putc(*ptr);
  7661  1C02  0824               	movf	USART_put_string@ptr+1,w
  7662  1C03  00FF               	movwf	127
  7663  1C04  0823               	movf	USART_put_string@ptr,w
  7664  1C05  0084               	movwf	4
  7665  1C06  160A  158A  2000  160A  158A  	fcall	stringtab
  7666  1C0B  160A  158A  20DE   	fcall	_USART_putc
  7667  1C0E  0008               	return
  7668  1C0F                     __end_of_USART_put_string:
  7669                           
  7670                           	psect	text20
  7671  1EF1                     __ptext20:	
  7672 ;; *************** function _Save_Log *****************
  7673 ;; Defined at:
  7674 ;;		line 992 in file "SlaveLiofilizadorVer1.c"
  7675 ;; Parameters:    Size  Location     Type
  7676 ;;  add_datalog     4    9[BANK1 ] unsigned long 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;		None
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  1    wreg      void 
  7681 ;; Registers used:
  7682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7683 ;; Tracked objects:
  7684 ;;		On entry : 300/100
  7685 ;;		On exit  : 300/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7688 ;;      Params:         0       0       4       0       0
  7689 ;;      Locals:         0       0       0       0       0
  7690 ;;      Temps:          0       0       0       0       0
  7691 ;;      Totals:         0       0       4       0       0
  7692 ;;Total ram usage:        4 bytes
  7693 ;; Hardware stack levels used:    1
  7694 ;; Hardware stack levels required when called:    5
  7695 ;; This function calls:
  7696 ;;		_EEPROM_24C1025_Write_Int
  7697 ;;		___flmul
  7698 ;;		___fltol
  7699 ;; This function is called by:
  7700 ;;		_Decodify_Command
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           
  7705                           ;psect for function _Save_Log
  7706  1EF1                     _Save_Log:
  7707                           
  7708                           ;SlaveLiofilizadorVer1.c: 993:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (Tensao1
      +                          *10.0));
  7709                           
  7710                           ;incstack = 0
  7711                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7712  1EF1  082C               	movf	(Save_Log@add_datalog+3)^(0+128),w
  7713  1EF2  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  7714  1EF3  082B               	movf	(Save_Log@add_datalog+2)^(0+128),w
  7715  1EF4  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  7716  1EF5  082A               	movf	(Save_Log@add_datalog+1)^(0+128),w
  7717  1EF6  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  7718  1EF7  0829               	movf	Save_Log@add_datalog^(0+128),w
  7719  1EF8  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  7720  1EF9  084B               	movf	(_Tensao1+3)^(0+128),w
  7721  1EFA  1283               	bcf	3,5	;RP0=0, select bank0
  7722  1EFB  00D2               	movwf	___flmul@a+3
  7723  1EFC  1683               	bsf	3,5	;RP0=1, select bank1
  7724  1EFD  084A               	movf	(_Tensao1+2)^(0+128),w
  7725  1EFE  1283               	bcf	3,5	;RP0=0, select bank0
  7726  1EFF  00D1               	movwf	___flmul@a+2
  7727  1F00  1683               	bsf	3,5	;RP0=1, select bank1
  7728  1F01  0849               	movf	(_Tensao1+1)^(0+128),w
  7729  1F02  1283               	bcf	3,5	;RP0=0, select bank0
  7730  1F03  00D0               	movwf	___flmul@a+1
  7731  1F04  1683               	bsf	3,5	;RP0=1, select bank1
  7732  1F05  0848               	movf	_Tensao1^(0+128),w
  7733  1F06  1283               	bcf	3,5	;RP0=0, select bank0
  7734  1F07  00CF               	movwf	___flmul@a
  7735  1F08  3041               	movlw	65
  7736  1F09  00CE               	movwf	___flmul@b+3
  7737  1F0A  3020               	movlw	32
  7738  1F0B  00CD               	movwf	___flmul@b+2
  7739  1F0C  3000               	movlw	0
  7740  1F0D  00CC               	movwf	___flmul@b+1
  7741  1F0E  3000               	movlw	0
  7742  1F0F  00CB               	movwf	___flmul@b
  7743  1F10  120A  158A  250B  160A  158A  	fcall	___flmul
  7744  1F15  084E               	movf	?___flmul+3,w
  7745  1F16  00E8               	movwf	___fltol@f1+3
  7746  1F17  084D               	movf	?___flmul+2,w
  7747  1F18  00E7               	movwf	___fltol@f1+2
  7748  1F19  084C               	movf	?___flmul+1,w
  7749  1F1A  00E6               	movwf	___fltol@f1+1
  7750  1F1B  084B               	movf	?___flmul,w
  7751  1F1C  00E5               	movwf	___fltol@f1
  7752  1F1D  160A  158A  2686  160A  158A  	fcall	___fltol
  7753  1F22  0866               	movf	?___fltol+1,w
  7754  1F23  1683               	bsf	3,5	;RP0=1, select bank1
  7755  1F24  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  7756  1F25  1283               	bcf	3,5	;RP0=0, select bank0
  7757  1F26  0865               	movf	?___fltol,w
  7758  1F27  1683               	bsf	3,5	;RP0=1, select bank1
  7759  1F28  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  7760  1F29  3000               	movlw	0
  7761  1F2A  160A  158A  2283  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
  7762                           
  7763                           ;SlaveLiofilizadorVer1.c: 994:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (Vaccum0
      +                          *10.0));
  7764  1F2F  1683               	bsf	3,5	;RP0=1, select bank1
  7765  1F30  082C               	movf	(Save_Log@add_datalog+3)^(0+128),w
  7766  1F31  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  7767  1F32  082B               	movf	(Save_Log@add_datalog+2)^(0+128),w
  7768  1F33  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  7769  1F34  082A               	movf	(Save_Log@add_datalog+1)^(0+128),w
  7770  1F35  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  7771  1F36  0829               	movf	Save_Log@add_datalog^(0+128),w
  7772  1F37  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  7773  1F38  084F               	movf	(_Vaccum0+3)^(0+128),w
  7774  1F39  1283               	bcf	3,5	;RP0=0, select bank0
  7775  1F3A  00D2               	movwf	___flmul@a+3
  7776  1F3B  1683               	bsf	3,5	;RP0=1, select bank1
  7777  1F3C  084E               	movf	(_Vaccum0+2)^(0+128),w
  7778  1F3D  1283               	bcf	3,5	;RP0=0, select bank0
  7779  1F3E  00D1               	movwf	___flmul@a+2
  7780  1F3F  1683               	bsf	3,5	;RP0=1, select bank1
  7781  1F40  084D               	movf	(_Vaccum0+1)^(0+128),w
  7782  1F41  1283               	bcf	3,5	;RP0=0, select bank0
  7783  1F42  00D0               	movwf	___flmul@a+1
  7784  1F43  1683               	bsf	3,5	;RP0=1, select bank1
  7785  1F44  084C               	movf	_Vaccum0^(0+128),w
  7786  1F45  1283               	bcf	3,5	;RP0=0, select bank0
  7787  1F46  00CF               	movwf	___flmul@a
  7788  1F47  3041               	movlw	65
  7789  1F48  00CE               	movwf	___flmul@b+3
  7790  1F49  3020               	movlw	32
  7791  1F4A  00CD               	movwf	___flmul@b+2
  7792  1F4B  3000               	movlw	0
  7793  1F4C  00CC               	movwf	___flmul@b+1
  7794  1F4D  3000               	movlw	0
  7795  1F4E  00CB               	movwf	___flmul@b
  7796  1F4F  120A  158A  250B  160A  158A  	fcall	___flmul
  7797  1F54  084E               	movf	?___flmul+3,w
  7798  1F55  00E8               	movwf	___fltol@f1+3
  7799  1F56  084D               	movf	?___flmul+2,w
  7800  1F57  00E7               	movwf	___fltol@f1+2
  7801  1F58  084C               	movf	?___flmul+1,w
  7802  1F59  00E6               	movwf	___fltol@f1+1
  7803  1F5A  084B               	movf	?___flmul,w
  7804  1F5B  00E5               	movwf	___fltol@f1
  7805  1F5C  160A  158A  2686  160A  158A  	fcall	___fltol
  7806  1F61  0866               	movf	?___fltol+1,w
  7807  1F62  1683               	bsf	3,5	;RP0=1, select bank1
  7808  1F63  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  7809  1F64  1283               	bcf	3,5	;RP0=0, select bank0
  7810  1F65  0865               	movf	?___fltol,w
  7811  1F66  1683               	bsf	3,5	;RP0=1, select bank1
  7812  1F67  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  7813  1F68  3001               	movlw	1
  7814  1F69  160A  158A  2283   	fcall	_EEPROM_24C1025_Write_Int
  7815  1F6C  0008               	return
  7816  1F6D                     __end_of_Save_Log:
  7817                           
  7818                           	psect	text21
  7819  1E86                     __ptext21:	
  7820 ;; *************** function ___fltol *****************
  7821 ;; Defined at:
  7822 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;  f1              4   69[BANK0 ] void 
  7825 ;; Auto vars:     Size  Location     Type
  7826 ;;  exp1            1   78[BANK0 ] unsigned char 
  7827 ;;  sign1           1   77[BANK0 ] unsigned char 
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  4   69[BANK0 ] long 
  7830 ;; Registers used:
  7831 ;;		wreg, status,2, status,0, btemp+1
  7832 ;; Tracked objects:
  7833 ;;		On entry : 300/0
  7834 ;;		On exit  : 300/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7837 ;;      Params:         0       4       0       0       0
  7838 ;;      Locals:         0       2       0       0       0
  7839 ;;      Temps:          0       4       0       0       0
  7840 ;;      Totals:         0      10       0       0       0
  7841 ;;Total ram usage:       10 bytes
  7842 ;; Hardware stack levels used:    1
  7843 ;; Hardware stack levels required when called:    1
  7844 ;; This function calls:
  7845 ;;		Nothing
  7846 ;; This function is called by:
  7847 ;;		_Decodify_Command
  7848 ;;		_Save_Log
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           
  7853                           ;psect for function ___fltol
  7854  1E86                     ___fltol:
  7855                           
  7856                           ;incstack = 0
  7857                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  7858  1E86  1003               	clrc
  7859  1E87  0D67               	rlf	___fltol@f1+2,w
  7860  1E88  0D68               	rlf	___fltol@f1+3,w
  7861  1E89  00FF               	movwf	127
  7862  1E8A  087F               	movf	127,w
  7863  1E8B  00EE               	movwf	___fltol@exp1
  7864  1E8C  086E               	movf	___fltol@exp1,w
  7865  1E8D  1D03               	btfss	3,2
  7866  1E8E  2E98               	goto	l3967
  7867  1E8F                     l3963:
  7868  1E8F  3000               	movlw	0
  7869  1E90  00E8               	movwf	?___fltol+3
  7870  1E91  3000               	movlw	0
  7871  1E92  00E7               	movwf	?___fltol+2
  7872  1E93  3000               	movlw	0
  7873  1E94  00E6               	movwf	?___fltol+1
  7874  1E95  3000               	movlw	0
  7875  1E96  00E5               	movwf	?___fltol
  7876  1E97  0008               	return
  7877  1E98                     l3967:
  7878  1E98  0865               	movf	___fltol@f1,w
  7879  1E99  00E9               	movwf	??___fltol
  7880  1E9A  0866               	movf	___fltol@f1+1,w
  7881  1E9B  00EA               	movwf	??___fltol+1
  7882  1E9C  0867               	movf	___fltol@f1+2,w
  7883  1E9D  00EB               	movwf	??___fltol+2
  7884  1E9E  0868               	movf	___fltol@f1+3,w
  7885  1E9F  00EC               	movwf	??___fltol+3
  7886  1EA0  301F               	movlw	31
  7887  1EA1                     u3045:
  7888  1EA1  1003               	clrc
  7889  1EA2  0CEC               	rrf	??___fltol+3,f
  7890  1EA3  0CEB               	rrf	??___fltol+2,f
  7891  1EA4  0CEA               	rrf	??___fltol+1,f
  7892  1EA5  0CE9               	rrf	??___fltol,f
  7893  1EA6  3EFF               	addlw	-1
  7894  1EA7  1D03               	skipz
  7895  1EA8  2EA1               	goto	u3045
  7896  1EA9  0869               	movf	??___fltol,w
  7897  1EAA  00FF               	movwf	127
  7898  1EAB  087F               	movf	127,w
  7899  1EAC  00ED               	movwf	___fltol@sign1
  7900  1EAD  17E7               	bsf	___fltol@f1+2,7
  7901  1EAE  30FF               	movlw	255
  7902  1EAF  05E5               	andwf	___fltol@f1,f
  7903  1EB0  30FF               	movlw	255
  7904  1EB1  05E6               	andwf	___fltol@f1+1,f
  7905  1EB2  30FF               	movlw	255
  7906  1EB3  05E7               	andwf	___fltol@f1+2,f
  7907  1EB4  3000               	movlw	0
  7908  1EB5  05E8               	andwf	___fltol@f1+3,f
  7909  1EB6  3096               	movlw	150
  7910  1EB7  02EE               	subwf	___fltol@exp1,f
  7911  1EB8  1FEE               	btfss	___fltol@exp1,7
  7912  1EB9  2ECF               	goto	l3987
  7913  1EBA  086E               	movf	___fltol@exp1,w
  7914  1EBB  3A80               	xorlw	128
  7915  1EBC  3E97               	addlw	151
  7916  1EBD  1C03               	btfss	3,0
  7917  1EBE  2E8F               	goto	l3963
  7918  1EBF                     l3983:
  7919  1EBF  3001               	movlw	1
  7920  1EC0                     u3075:
  7921  1EC0  1003               	clrc
  7922  1EC1  0CE8               	rrf	___fltol@f1+3,f
  7923  1EC2  0CE7               	rrf	___fltol@f1+2,f
  7924  1EC3  0CE6               	rrf	___fltol@f1+1,f
  7925  1EC4  0CE5               	rrf	___fltol@f1,f
  7926  1EC5  3EFF               	addlw	-1
  7927  1EC6  1D03               	skipz
  7928  1EC7  2EC0               	goto	u3075
  7929  1EC8  3001               	movlw	1
  7930  1EC9  00FF               	movwf	127
  7931  1ECA  087F               	movf	127,w
  7932  1ECB  07EE               	addwf	___fltol@exp1,f
  7933  1ECC  1903               	btfsc	3,2
  7934  1ECD  2EE2               	goto	l3995
  7935  1ECE  2EBF               	goto	l3983
  7936  1ECF                     l3987:
  7937  1ECF  3020               	movlw	32
  7938  1ED0  026E               	subwf	___fltol@exp1,w
  7939  1ED1  1803               	btfsc	3,0
  7940  1ED2  2E8F               	goto	l3963
  7941  1ED3                     l1190:
  7942  1ED3  086E               	movf	___fltol@exp1,w
  7943  1ED4  1903               	btfsc	3,2
  7944  1ED5  2EE2               	goto	l3995
  7945  1ED6  3001               	movlw	1
  7946  1ED7  00E9               	movwf	??___fltol
  7947  1ED8                     u3105:
  7948  1ED8  1003               	clrc
  7949  1ED9  0DE5               	rlf	___fltol@f1,f
  7950  1EDA  0DE6               	rlf	___fltol@f1+1,f
  7951  1EDB  0DE7               	rlf	___fltol@f1+2,f
  7952  1EDC  0DE8               	rlf	___fltol@f1+3,f
  7953  1EDD  0BE9               	decfsz	??___fltol,f
  7954  1EDE  2ED8               	goto	u3105
  7955  1EDF  3001               	movlw	1
  7956  1EE0  02EE               	subwf	___fltol@exp1,f
  7957  1EE1  2ED3               	goto	l1190
  7958  1EE2                     l3995:
  7959  1EE2  086D               	movf	___fltol@sign1,w
  7960  1EE3  1903               	btfsc	3,2
  7961  1EE4  0008               	return
  7962  1EE5  09E5               	comf	___fltol@f1,f
  7963  1EE6  09E6               	comf	___fltol@f1+1,f
  7964  1EE7  09E7               	comf	___fltol@f1+2,f
  7965  1EE8  09E8               	comf	___fltol@f1+3,f
  7966  1EE9  0AE5               	incf	___fltol@f1,f
  7967  1EEA  1903               	skipnz
  7968  1EEB  0AE6               	incf	___fltol@f1+1,f
  7969  1EEC  1903               	skipnz
  7970  1EED  0AE7               	incf	___fltol@f1+2,f
  7971  1EEE  1903               	skipnz
  7972  1EEF  0AE8               	incf	___fltol@f1+3,f
  7973  1EF0  0008               	return
  7974  1EF1                     __end_of___fltol:
  7975                           
  7976                           	psect	text22
  7977  0D0B                     __ptext22:	
  7978 ;; *************** function ___flmul *****************
  7979 ;; Defined at:
  7980 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;  b               4   43[BANK0 ] long 
  7983 ;;  a               4   47[BANK0 ] long 
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;  prod            4   63[BANK0 ] struct .
  7986 ;;  grs             4   58[BANK0 ] unsigned long 
  7987 ;;  temp            2   67[BANK0 ] struct .
  7988 ;;  bexp            1   62[BANK0 ] unsigned char 
  7989 ;;  aexp            1   57[BANK0 ] unsigned char 
  7990 ;;  sign            1   56[BANK0 ] unsigned char 
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  4   43[BANK0 ] unsigned char 
  7993 ;; Registers used:
  7994 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7995 ;; Tracked objects:
  7996 ;;		On entry : 300/0
  7997 ;;		On exit  : 300/0
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8000 ;;      Params:         0       8       0       0       0
  8001 ;;      Locals:         0      13       0       0       0
  8002 ;;      Temps:          0       5       0       0       0
  8003 ;;      Totals:         0      26       0       0       0
  8004 ;;Total ram usage:       26 bytes
  8005 ;; Hardware stack levels used:    1
  8006 ;; Hardware stack levels required when called:    2
  8007 ;; This function calls:
  8008 ;;		__Umul8_16
  8009 ;; This function is called by:
  8010 ;;		_Decodify_Command
  8011 ;;		_MediaPlacaVaccum
  8012 ;;		_Save_Log
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           
  8017                           ;psect for function ___flmul
  8018  0D0B                     ___flmul:
  8019                           
  8020                           ;incstack = 0
  8021                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8022  0D0B  084E               	movf	___flmul@b+3,w
  8023  0D0C  3980               	andlw	128
  8024  0D0D  00FF               	movwf	127
  8025  0D0E  087F               	movf	127,w
  8026  0D0F  00D8               	movwf	___flmul@sign
  8027  0D10  084E               	movf	___flmul@b+3,w
  8028  0D11  00D3               	movwf	??___flmul
  8029  0D12  0753               	addwf	??___flmul,w
  8030  0D13  00FF               	movwf	127
  8031  0D14  087F               	movf	127,w
  8032  0D15  00DE               	movwf	___flmul@bexp
  8033  0D16  1BCD               	btfsc	___flmul@b+2,7
  8034  0D17  145E               	bsf	___flmul@bexp,0
  8035  0D18  085E               	movf	___flmul@bexp,w
  8036  0D19  1903               	btfsc	3,2
  8037  0D1A  2D28               	goto	l4243
  8038  0D1B  0A5E               	incf	___flmul@bexp,w
  8039  0D1C  1D03               	btfss	3,2
  8040  0D1D  2D26               	goto	l4241
  8041  0D1E  3000               	movlw	0
  8042  0D1F  00CE               	movwf	___flmul@b+3
  8043  0D20  3000               	movlw	0
  8044  0D21  00CD               	movwf	___flmul@b+2
  8045  0D22  3000               	movlw	0
  8046  0D23  00CC               	movwf	___flmul@b+1
  8047  0D24  3000               	movlw	0
  8048  0D25  00CB               	movwf	___flmul@b
  8049  0D26                     l4241:
  8050  0D26  17CD               	bsf	___flmul@b+2,7
  8051  0D27  2D30               	goto	l4245
  8052  0D28                     l4243:
  8053  0D28  3000               	movlw	0
  8054  0D29  00CE               	movwf	___flmul@b+3
  8055  0D2A  3000               	movlw	0
  8056  0D2B  00CD               	movwf	___flmul@b+2
  8057  0D2C  3000               	movlw	0
  8058  0D2D  00CC               	movwf	___flmul@b+1
  8059  0D2E  3000               	movlw	0
  8060  0D2F  00CB               	movwf	___flmul@b
  8061  0D30                     l4245:
  8062  0D30  0852               	movf	___flmul@a+3,w
  8063  0D31  3980               	andlw	128
  8064  0D32  00FF               	movwf	127
  8065  0D33  087F               	movf	127,w
  8066  0D34  06D8               	xorwf	___flmul@sign,f
  8067  0D35  0852               	movf	___flmul@a+3,w
  8068  0D36  00D3               	movwf	??___flmul
  8069  0D37  0753               	addwf	??___flmul,w
  8070  0D38  00FF               	movwf	127
  8071  0D39  087F               	movf	127,w
  8072  0D3A  00D9               	movwf	___flmul@aexp
  8073  0D3B  1BD1               	btfsc	___flmul@a+2,7
  8074  0D3C  1459               	bsf	___flmul@aexp,0
  8075  0D3D  0859               	movf	___flmul@aexp,w
  8076  0D3E  1903               	btfsc	3,2
  8077  0D3F  2D4D               	goto	l4261
  8078  0D40  0A59               	incf	___flmul@aexp,w
  8079  0D41  1D03               	btfss	3,2
  8080  0D42  2D4B               	goto	l4259
  8081  0D43  3000               	movlw	0
  8082  0D44  00D2               	movwf	___flmul@a+3
  8083  0D45  3000               	movlw	0
  8084  0D46  00D1               	movwf	___flmul@a+2
  8085  0D47  3000               	movlw	0
  8086  0D48  00D0               	movwf	___flmul@a+1
  8087  0D49  3000               	movlw	0
  8088  0D4A  00CF               	movwf	___flmul@a
  8089  0D4B                     l4259:
  8090  0D4B  17D1               	bsf	___flmul@a+2,7
  8091  0D4C  2D55               	goto	l4263
  8092  0D4D                     l4261:
  8093  0D4D  3000               	movlw	0
  8094  0D4E  00D2               	movwf	___flmul@a+3
  8095  0D4F  3000               	movlw	0
  8096  0D50  00D1               	movwf	___flmul@a+2
  8097  0D51  3000               	movlw	0
  8098  0D52  00D0               	movwf	___flmul@a+1
  8099  0D53  3000               	movlw	0
  8100  0D54  00CF               	movwf	___flmul@a
  8101  0D55                     l4263:
  8102  0D55  0859               	movf	___flmul@aexp,w
  8103  0D56  1D03               	btfss	3,2
  8104  0D57  085E               	movf	___flmul@bexp,w
  8105  0D58  1D03               	btfss	3,2
  8106  0D59  2D63               	goto	l4271
  8107  0D5A  3000               	movlw	0
  8108  0D5B  00CE               	movwf	?___flmul+3
  8109  0D5C  3000               	movlw	0
  8110  0D5D  00CD               	movwf	?___flmul+2
  8111  0D5E  3000               	movlw	0
  8112  0D5F  00CC               	movwf	?___flmul+1
  8113  0D60  3000               	movlw	0
  8114  0D61  00CB               	movwf	?___flmul
  8115  0D62  0008               	return
  8116  0D63                     l4271:
  8117  0D63  084B               	movf	___flmul@b,w
  8118  0D64  00FF               	movwf	127
  8119  0D65  087F               	movf	127,w
  8120  0D66  00A0               	movwf	__Umul8_16@multiplicand
  8121  0D67  0851               	movf	___flmul@a+2,w
  8122  0D68  160A  158A  2260  120A  158A  	fcall	__Umul8_16
  8123  0D6D  0821               	movf	?__Umul8_16+1,w
  8124  0D6E  00E4               	movwf	___flmul@temp+1
  8125  0D6F  0820               	movf	?__Umul8_16,w
  8126  0D70  00E3               	movwf	___flmul@temp
  8127  0D71  0863               	movf	___flmul@temp,w
  8128  0D72  00D3               	movwf	??___flmul
  8129  0D73  01D4               	clrf	??___flmul+1
  8130  0D74  01D5               	clrf	??___flmul+2
  8131  0D75  01D6               	clrf	??___flmul+3
  8132  0D76  0856               	movf	??___flmul+3,w
  8133  0D77  00DD               	movwf	___flmul@grs+3
  8134  0D78  0855               	movf	??___flmul+2,w
  8135  0D79  00DC               	movwf	___flmul@grs+2
  8136  0D7A  0854               	movf	??___flmul+1,w
  8137  0D7B  00DB               	movwf	___flmul@grs+1
  8138  0D7C  0853               	movf	??___flmul,w
  8139  0D7D  00DA               	movwf	___flmul@grs
  8140  0D7E  0864               	movf	___flmul@temp+1,w
  8141  0D7F  00D3               	movwf	??___flmul
  8142  0D80  01D4               	clrf	??___flmul+1
  8143  0D81  01D5               	clrf	??___flmul+2
  8144  0D82  01D6               	clrf	??___flmul+3
  8145  0D83  0856               	movf	??___flmul+3,w
  8146  0D84  00E2               	movwf	___flmul@prod+3
  8147  0D85  0855               	movf	??___flmul+2,w
  8148  0D86  00E1               	movwf	___flmul@prod+2
  8149  0D87  0854               	movf	??___flmul+1,w
  8150  0D88  00E0               	movwf	___flmul@prod+1
  8151  0D89  0853               	movf	??___flmul,w
  8152  0D8A  00DF               	movwf	___flmul@prod
  8153  0D8B  084C               	movf	___flmul@b+1,w
  8154  0D8C  00FF               	movwf	127
  8155  0D8D  087F               	movf	127,w
  8156  0D8E  00A0               	movwf	__Umul8_16@multiplicand
  8157  0D8F  0850               	movf	___flmul@a+1,w
  8158  0D90  160A  158A  2260  120A  158A  	fcall	__Umul8_16
  8159  0D95  0821               	movf	?__Umul8_16+1,w
  8160  0D96  00E4               	movwf	___flmul@temp+1
  8161  0D97  0820               	movf	?__Umul8_16,w
  8162  0D98  00E3               	movwf	___flmul@temp
  8163  0D99  0863               	movf	___flmul@temp,w
  8164  0D9A  00D3               	movwf	??___flmul
  8165  0D9B  01D4               	clrf	??___flmul+1
  8166  0D9C  01D5               	clrf	??___flmul+2
  8167  0D9D  01D6               	clrf	??___flmul+3
  8168  0D9E  0853               	movf	??___flmul,w
  8169  0D9F  07DA               	addwf	___flmul@grs,f
  8170  0DA0  0854               	movf	??___flmul+1,w
  8171  0DA1  1103               	clrz
  8172  0DA2  1803               	skipnc
  8173  0DA3  3E01               	addlw	1
  8174  0DA4  1D03               	btfss	3,2
  8175  0DA5  07DB               	addwf	___flmul@grs+1,f
  8176  0DA6  0855               	movf	??___flmul+2,w
  8177  0DA7  1103               	clrz
  8178  0DA8  1803               	skipnc
  8179  0DA9  3E01               	addlw	1
  8180  0DAA  1D03               	btfss	3,2
  8181  0DAB  07DC               	addwf	___flmul@grs+2,f
  8182  0DAC  0856               	movf	??___flmul+3,w
  8183  0DAD  1103               	clrz
  8184  0DAE  1803               	skipnc
  8185  0DAF  3E01               	addlw	1
  8186  0DB0  1D03               	btfss	3,2
  8187  0DB1  07DD               	addwf	___flmul@grs+3,f
  8188  0DB2  0864               	movf	___flmul@temp+1,w
  8189  0DB3  00D3               	movwf	??___flmul
  8190  0DB4  01D4               	clrf	??___flmul+1
  8191  0DB5  01D5               	clrf	??___flmul+2
  8192  0DB6  01D6               	clrf	??___flmul+3
  8193  0DB7  0853               	movf	??___flmul,w
  8194  0DB8  07DF               	addwf	___flmul@prod,f
  8195  0DB9  0854               	movf	??___flmul+1,w
  8196  0DBA  1103               	clrz
  8197  0DBB  1803               	skipnc
  8198  0DBC  3E01               	addlw	1
  8199  0DBD  1D03               	btfss	3,2
  8200  0DBE  07E0               	addwf	___flmul@prod+1,f
  8201  0DBF  0855               	movf	??___flmul+2,w
  8202  0DC0  1103               	clrz
  8203  0DC1  1803               	skipnc
  8204  0DC2  3E01               	addlw	1
  8205  0DC3  1D03               	btfss	3,2
  8206  0DC4  07E1               	addwf	___flmul@prod+2,f
  8207  0DC5  0856               	movf	??___flmul+3,w
  8208  0DC6  1103               	clrz
  8209  0DC7  1803               	skipnc
  8210  0DC8  3E01               	addlw	1
  8211  0DC9  1D03               	btfss	3,2
  8212  0DCA  07E2               	addwf	___flmul@prod+3,f
  8213  0DCB  084D               	movf	___flmul@b+2,w
  8214  0DCC  00FF               	movwf	127
  8215  0DCD  087F               	movf	127,w
  8216  0DCE  00A0               	movwf	__Umul8_16@multiplicand
  8217  0DCF  084F               	movf	___flmul@a,w
  8218  0DD0  160A  158A  2260  120A  158A  	fcall	__Umul8_16
  8219  0DD5  0821               	movf	?__Umul8_16+1,w
  8220  0DD6  00E4               	movwf	___flmul@temp+1
  8221  0DD7  0820               	movf	?__Umul8_16,w
  8222  0DD8  00E3               	movwf	___flmul@temp
  8223  0DD9  0863               	movf	___flmul@temp,w
  8224  0DDA  00D3               	movwf	??___flmul
  8225  0DDB  01D4               	clrf	??___flmul+1
  8226  0DDC  01D5               	clrf	??___flmul+2
  8227  0DDD  01D6               	clrf	??___flmul+3
  8228  0DDE  0853               	movf	??___flmul,w
  8229  0DDF  07DA               	addwf	___flmul@grs,f
  8230  0DE0  0854               	movf	??___flmul+1,w
  8231  0DE1  1103               	clrz
  8232  0DE2  1803               	skipnc
  8233  0DE3  3E01               	addlw	1
  8234  0DE4  1D03               	btfss	3,2
  8235  0DE5  07DB               	addwf	___flmul@grs+1,f
  8236  0DE6  0855               	movf	??___flmul+2,w
  8237  0DE7  1103               	clrz
  8238  0DE8  1803               	skipnc
  8239  0DE9  3E01               	addlw	1
  8240  0DEA  1D03               	btfss	3,2
  8241  0DEB  07DC               	addwf	___flmul@grs+2,f
  8242  0DEC  0856               	movf	??___flmul+3,w
  8243  0DED  1103               	clrz
  8244  0DEE  1803               	skipnc
  8245  0DEF  3E01               	addlw	1
  8246  0DF0  1D03               	btfss	3,2
  8247  0DF1  07DD               	addwf	___flmul@grs+3,f
  8248  0DF2  0864               	movf	___flmul@temp+1,w
  8249  0DF3  00D3               	movwf	??___flmul
  8250  0DF4  01D4               	clrf	??___flmul+1
  8251  0DF5  01D5               	clrf	??___flmul+2
  8252  0DF6  01D6               	clrf	??___flmul+3
  8253  0DF7  0853               	movf	??___flmul,w
  8254  0DF8  07DF               	addwf	___flmul@prod,f
  8255  0DF9  0854               	movf	??___flmul+1,w
  8256  0DFA  1103               	clrz
  8257  0DFB  1803               	skipnc
  8258  0DFC  3E01               	addlw	1
  8259  0DFD  1D03               	btfss	3,2
  8260  0DFE  07E0               	addwf	___flmul@prod+1,f
  8261  0DFF  0855               	movf	??___flmul+2,w
  8262  0E00  1103               	clrz
  8263  0E01  1803               	skipnc
  8264  0E02  3E01               	addlw	1
  8265  0E03  1D03               	btfss	3,2
  8266  0E04  07E1               	addwf	___flmul@prod+2,f
  8267  0E05  0856               	movf	??___flmul+3,w
  8268  0E06  1103               	clrz
  8269  0E07  1803               	skipnc
  8270  0E08  3E01               	addlw	1
  8271  0E09  1D03               	btfss	3,2
  8272  0E0A  07E2               	addwf	___flmul@prod+3,f
  8273  0E0B  3008               	movlw	8
  8274  0E0C  00D3               	movwf	??___flmul
  8275  0E0D                     u3785:
  8276  0E0D  1003               	clrc
  8277  0E0E  0DDA               	rlf	___flmul@grs,f
  8278  0E0F  0DDB               	rlf	___flmul@grs+1,f
  8279  0E10  0DDC               	rlf	___flmul@grs+2,f
  8280  0E11  0DDD               	rlf	___flmul@grs+3,f
  8281  0E12  0BD3               	decfsz	??___flmul,f
  8282  0E13  2E0D               	goto	u3785
  8283  0E14  084C               	movf	___flmul@b+1,w
  8284  0E15  00FF               	movwf	127
  8285  0E16  087F               	movf	127,w
  8286  0E17  00A0               	movwf	__Umul8_16@multiplicand
  8287  0E18  084F               	movf	___flmul@a,w
  8288  0E19  160A  158A  2260  120A  158A  	fcall	__Umul8_16
  8289  0E1E  0821               	movf	?__Umul8_16+1,w
  8290  0E1F  00E4               	movwf	___flmul@temp+1
  8291  0E20  0820               	movf	?__Umul8_16,w
  8292  0E21  00E3               	movwf	___flmul@temp
  8293  0E22  0863               	movf	___flmul@temp,w
  8294  0E23  00D3               	movwf	??___flmul
  8295  0E24  0864               	movf	___flmul@temp+1,w
  8296  0E25  00D4               	movwf	??___flmul+1
  8297  0E26  01D5               	clrf	??___flmul+2
  8298  0E27  01D6               	clrf	??___flmul+3
  8299  0E28  0853               	movf	??___flmul,w
  8300  0E29  07DA               	addwf	___flmul@grs,f
  8301  0E2A  0854               	movf	??___flmul+1,w
  8302  0E2B  1103               	clrz
  8303  0E2C  1803               	skipnc
  8304  0E2D  3E01               	addlw	1
  8305  0E2E  1D03               	btfss	3,2
  8306  0E2F  07DB               	addwf	___flmul@grs+1,f
  8307  0E30  0855               	movf	??___flmul+2,w
  8308  0E31  1103               	clrz
  8309  0E32  1803               	skipnc
  8310  0E33  3E01               	addlw	1
  8311  0E34  1D03               	btfss	3,2
  8312  0E35  07DC               	addwf	___flmul@grs+2,f
  8313  0E36  0856               	movf	??___flmul+3,w
  8314  0E37  1103               	clrz
  8315  0E38  1803               	skipnc
  8316  0E39  3E01               	addlw	1
  8317  0E3A  1D03               	btfss	3,2
  8318  0E3B  07DD               	addwf	___flmul@grs+3,f
  8319  0E3C  084B               	movf	___flmul@b,w
  8320  0E3D  00FF               	movwf	127
  8321  0E3E  087F               	movf	127,w
  8322  0E3F  00A0               	movwf	__Umul8_16@multiplicand
  8323  0E40  0850               	movf	___flmul@a+1,w
  8324  0E41  160A  158A  2260  120A  158A  	fcall	__Umul8_16
  8325  0E46  0821               	movf	?__Umul8_16+1,w
  8326  0E47  00E4               	movwf	___flmul@temp+1
  8327  0E48  0820               	movf	?__Umul8_16,w
  8328  0E49  00E3               	movwf	___flmul@temp
  8329  0E4A  0863               	movf	___flmul@temp,w
  8330  0E4B  00D3               	movwf	??___flmul
  8331  0E4C  0864               	movf	___flmul@temp+1,w
  8332  0E4D  00D4               	movwf	??___flmul+1
  8333  0E4E  01D5               	clrf	??___flmul+2
  8334  0E4F  01D6               	clrf	??___flmul+3
  8335  0E50  0853               	movf	??___flmul,w
  8336  0E51  07DA               	addwf	___flmul@grs,f
  8337  0E52  0854               	movf	??___flmul+1,w
  8338  0E53  1103               	clrz
  8339  0E54  1803               	skipnc
  8340  0E55  3E01               	addlw	1
  8341  0E56  1D03               	btfss	3,2
  8342  0E57  07DB               	addwf	___flmul@grs+1,f
  8343  0E58  0855               	movf	??___flmul+2,w
  8344  0E59  1103               	clrz
  8345  0E5A  1803               	skipnc
  8346  0E5B  3E01               	addlw	1
  8347  0E5C  1D03               	btfss	3,2
  8348  0E5D  07DC               	addwf	___flmul@grs+2,f
  8349  0E5E  0856               	movf	??___flmul+3,w
  8350  0E5F  1103               	clrz
  8351  0E60  1803               	skipnc
  8352  0E61  3E01               	addlw	1
  8353  0E62  1D03               	btfss	3,2
  8354  0E63  07DD               	addwf	___flmul@grs+3,f
  8355  0E64  3008               	movlw	8
  8356  0E65  00D3               	movwf	??___flmul
  8357  0E66                     u3815:
  8358  0E66  1003               	clrc
  8359  0E67  0DDA               	rlf	___flmul@grs,f
  8360  0E68  0DDB               	rlf	___flmul@grs+1,f
  8361  0E69  0DDC               	rlf	___flmul@grs+2,f
  8362  0E6A  0DDD               	rlf	___flmul@grs+3,f
  8363  0E6B  0BD3               	decfsz	??___flmul,f
  8364  0E6C  2E66               	goto	u3815
  8365  0E6D  084B               	movf	___flmul@b,w
  8366  0E6E  00FF               	movwf	127
  8367  0E6F  087F               	movf	127,w
  8368  0E70  00A0               	movwf	__Umul8_16@multiplicand
  8369  0E71  084F               	movf	___flmul@a,w
  8370  0E72  160A  158A  2260  120A  158A  	fcall	__Umul8_16
  8371  0E77  0821               	movf	?__Umul8_16+1,w
  8372  0E78  00E4               	movwf	___flmul@temp+1
  8373  0E79  0820               	movf	?__Umul8_16,w
  8374  0E7A  00E3               	movwf	___flmul@temp
  8375  0E7B  0863               	movf	___flmul@temp,w
  8376  0E7C  00D3               	movwf	??___flmul
  8377  0E7D  0864               	movf	___flmul@temp+1,w
  8378  0E7E  00D4               	movwf	??___flmul+1
  8379  0E7F  01D5               	clrf	??___flmul+2
  8380  0E80  01D6               	clrf	??___flmul+3
  8381  0E81  0853               	movf	??___flmul,w
  8382  0E82  07DA               	addwf	___flmul@grs,f
  8383  0E83  0854               	movf	??___flmul+1,w
  8384  0E84  1103               	clrz
  8385  0E85  1803               	skipnc
  8386  0E86  3E01               	addlw	1
  8387  0E87  1D03               	btfss	3,2
  8388  0E88  07DB               	addwf	___flmul@grs+1,f
  8389  0E89  0855               	movf	??___flmul+2,w
  8390  0E8A  1103               	clrz
  8391  0E8B  1803               	skipnc
  8392  0E8C  3E01               	addlw	1
  8393  0E8D  1D03               	btfss	3,2
  8394  0E8E  07DC               	addwf	___flmul@grs+2,f
  8395  0E8F  0856               	movf	??___flmul+3,w
  8396  0E90  1103               	clrz
  8397  0E91  1803               	skipnc
  8398  0E92  3E01               	addlw	1
  8399  0E93  1D03               	btfss	3,2
  8400  0E94  07DD               	addwf	___flmul@grs+3,f
  8401  0E95  084C               	movf	___flmul@b+1,w
  8402  0E96  00FF               	movwf	127
  8403  0E97  087F               	movf	127,w
  8404  0E98  00A0               	movwf	__Umul8_16@multiplicand
  8405  0E99  0851               	movf	___flmul@a+2,w
  8406  0E9A  160A  158A  2260  120A  158A  	fcall	__Umul8_16
  8407  0E9F  0821               	movf	?__Umul8_16+1,w
  8408  0EA0  00E4               	movwf	___flmul@temp+1
  8409  0EA1  0820               	movf	?__Umul8_16,w
  8410  0EA2  00E3               	movwf	___flmul@temp
  8411  0EA3  0863               	movf	___flmul@temp,w
  8412  0EA4  00D3               	movwf	??___flmul
  8413  0EA5  0864               	movf	___flmul@temp+1,w
  8414  0EA6  00D4               	movwf	??___flmul+1
  8415  0EA7  01D5               	clrf	??___flmul+2
  8416  0EA8  01D6               	clrf	??___flmul+3
  8417  0EA9  0853               	movf	??___flmul,w
  8418  0EAA  07DF               	addwf	___flmul@prod,f
  8419  0EAB  0854               	movf	??___flmul+1,w
  8420  0EAC  1103               	clrz
  8421  0EAD  1803               	skipnc
  8422  0EAE  3E01               	addlw	1
  8423  0EAF  1D03               	btfss	3,2
  8424  0EB0  07E0               	addwf	___flmul@prod+1,f
  8425  0EB1  0855               	movf	??___flmul+2,w
  8426  0EB2  1103               	clrz
  8427  0EB3  1803               	skipnc
  8428  0EB4  3E01               	addlw	1
  8429  0EB5  1D03               	btfss	3,2
  8430  0EB6  07E1               	addwf	___flmul@prod+2,f
  8431  0EB7  0856               	movf	??___flmul+3,w
  8432  0EB8  1103               	clrz
  8433  0EB9  1803               	skipnc
  8434  0EBA  3E01               	addlw	1
  8435  0EBB  1D03               	btfss	3,2
  8436  0EBC  07E2               	addwf	___flmul@prod+3,f
  8437  0EBD  084D               	movf	___flmul@b+2,w
  8438  0EBE  00FF               	movwf	127
  8439  0EBF  087F               	movf	127,w
  8440  0EC0  00A0               	movwf	__Umul8_16@multiplicand
  8441  0EC1  0850               	movf	___flmul@a+1,w
  8442  0EC2  160A  158A  2260  120A  158A  	fcall	__Umul8_16
  8443  0EC7  0821               	movf	?__Umul8_16+1,w
  8444  0EC8  00E4               	movwf	___flmul@temp+1
  8445  0EC9  0820               	movf	?__Umul8_16,w
  8446  0ECA  00E3               	movwf	___flmul@temp
  8447  0ECB  0863               	movf	___flmul@temp,w
  8448  0ECC  00D3               	movwf	??___flmul
  8449  0ECD  0864               	movf	___flmul@temp+1,w
  8450  0ECE  00D4               	movwf	??___flmul+1
  8451  0ECF  01D5               	clrf	??___flmul+2
  8452  0ED0  01D6               	clrf	??___flmul+3
  8453  0ED1  0853               	movf	??___flmul,w
  8454  0ED2  07DF               	addwf	___flmul@prod,f
  8455  0ED3  0854               	movf	??___flmul+1,w
  8456  0ED4  1103               	clrz
  8457  0ED5  1803               	skipnc
  8458  0ED6  3E01               	addlw	1
  8459  0ED7  1D03               	btfss	3,2
  8460  0ED8  07E0               	addwf	___flmul@prod+1,f
  8461  0ED9  0855               	movf	??___flmul+2,w
  8462  0EDA  1103               	clrz
  8463  0EDB  1803               	skipnc
  8464  0EDC  3E01               	addlw	1
  8465  0EDD  1D03               	btfss	3,2
  8466  0EDE  07E1               	addwf	___flmul@prod+2,f
  8467  0EDF  0856               	movf	??___flmul+3,w
  8468  0EE0  1103               	clrz
  8469  0EE1  1803               	skipnc
  8470  0EE2  3E01               	addlw	1
  8471  0EE3  1D03               	btfss	3,2
  8472  0EE4  07E2               	addwf	___flmul@prod+3,f
  8473  0EE5  084D               	movf	___flmul@b+2,w
  8474  0EE6  00FF               	movwf	127
  8475  0EE7  087F               	movf	127,w
  8476  0EE8  00A0               	movwf	__Umul8_16@multiplicand
  8477  0EE9  0851               	movf	___flmul@a+2,w
  8478  0EEA  160A  158A  2260  120A  158A  	fcall	__Umul8_16
  8479  0EEF  0821               	movf	?__Umul8_16+1,w
  8480  0EF0  00E4               	movwf	___flmul@temp+1
  8481  0EF1  0820               	movf	?__Umul8_16,w
  8482  0EF2  00E3               	movwf	___flmul@temp
  8483  0EF3  0863               	movf	___flmul@temp,w
  8484  0EF4  00D3               	movwf	??___flmul
  8485  0EF5  0864               	movf	___flmul@temp+1,w
  8486  0EF6  00D4               	movwf	??___flmul+1
  8487  0EF7  01D5               	clrf	??___flmul+2
  8488  0EF8  01D6               	clrf	??___flmul+3
  8489  0EF9  3008               	movlw	8
  8490  0EFA                     u3855:
  8491  0EFA  1003               	clrc
  8492  0EFB  0DD3               	rlf	??___flmul,f
  8493  0EFC  0DD4               	rlf	??___flmul+1,f
  8494  0EFD  0DD5               	rlf	??___flmul+2,f
  8495  0EFE  0DD6               	rlf	??___flmul+3,f
  8496  0EFF  3EFF               	addlw	-1
  8497  0F00  1D03               	skipz
  8498  0F01  2EFA               	goto	u3855
  8499  0F02  0853               	movf	??___flmul,w
  8500  0F03  07DF               	addwf	___flmul@prod,f
  8501  0F04  0854               	movf	??___flmul+1,w
  8502  0F05  1103               	clrz
  8503  0F06  1803               	skipnc
  8504  0F07  3E01               	addlw	1
  8505  0F08  1D03               	btfss	3,2
  8506  0F09  07E0               	addwf	___flmul@prod+1,f
  8507  0F0A  0855               	movf	??___flmul+2,w
  8508  0F0B  1103               	clrz
  8509  0F0C  1803               	skipnc
  8510  0F0D  3E01               	addlw	1
  8511  0F0E  1D03               	btfss	3,2
  8512  0F0F  07E1               	addwf	___flmul@prod+2,f
  8513  0F10  0856               	movf	??___flmul+3,w
  8514  0F11  1103               	clrz
  8515  0F12  1803               	skipnc
  8516  0F13  3E01               	addlw	1
  8517  0F14  1D03               	btfss	3,2
  8518  0F15  07E2               	addwf	___flmul@prod+3,f
  8519  0F16  085D               	movf	___flmul@grs+3,w
  8520  0F17  00D3               	movwf	??___flmul
  8521  0F18  01D4               	clrf	??___flmul+1
  8522  0F19  01D5               	clrf	??___flmul+2
  8523  0F1A  01D6               	clrf	??___flmul+3
  8524  0F1B  0853               	movf	??___flmul,w
  8525  0F1C  07DF               	addwf	___flmul@prod,f
  8526  0F1D  0854               	movf	??___flmul+1,w
  8527  0F1E  1103               	clrz
  8528  0F1F  1803               	skipnc
  8529  0F20  3E01               	addlw	1
  8530  0F21  1D03               	btfss	3,2
  8531  0F22  07E0               	addwf	___flmul@prod+1,f
  8532  0F23  0855               	movf	??___flmul+2,w
  8533  0F24  1103               	clrz
  8534  0F25  1803               	skipnc
  8535  0F26  3E01               	addlw	1
  8536  0F27  1D03               	btfss	3,2
  8537  0F28  07E1               	addwf	___flmul@prod+2,f
  8538  0F29  0856               	movf	??___flmul+3,w
  8539  0F2A  1103               	clrz
  8540  0F2B  1803               	skipnc
  8541  0F2C  3E01               	addlw	1
  8542  0F2D  1D03               	btfss	3,2
  8543  0F2E  07E2               	addwf	___flmul@prod+3,f
  8544  0F2F  3008               	movlw	8
  8545  0F30  00D3               	movwf	??___flmul
  8546  0F31                     u3885:
  8547  0F31  1003               	clrc
  8548  0F32  0DDA               	rlf	___flmul@grs,f
  8549  0F33  0DDB               	rlf	___flmul@grs+1,f
  8550  0F34  0DDC               	rlf	___flmul@grs+2,f
  8551  0F35  0DDD               	rlf	___flmul@grs+3,f
  8552  0F36  0BD3               	decfsz	??___flmul,f
  8553  0F37  2F31               	goto	u3885
  8554  0F38  085E               	movf	___flmul@bexp,w
  8555  0F39  0759               	addwf	___flmul@aexp,w
  8556  0F3A  00D3               	movwf	??___flmul
  8557  0F3B  01D4               	clrf	??___flmul+1
  8558  0F3C  0DD4               	rlf	??___flmul+1,f
  8559  0F3D  0853               	movf	??___flmul,w
  8560  0F3E  3E82               	addlw	130
  8561  0F3F  00E3               	movwf	___flmul@temp
  8562  0F40  0854               	movf	??___flmul+1,w
  8563  0F41  1803               	skipnc
  8564  0F42  3E01               	addlw	1
  8565  0F43  3EFF               	addlw	255
  8566  0F44  00E4               	movwf	___flmul@temp+1
  8567  0F45                     l4323:
  8568  0F45  1BE1               	btfsc	___flmul@prod+2,7
  8569  0F46  2F62               	goto	l4325
  8570  0F47  3001               	movlw	1
  8571  0F48  00D3               	movwf	??___flmul
  8572  0F49                     u3895:
  8573  0F49  1003               	clrc
  8574  0F4A  0DDF               	rlf	___flmul@prod,f
  8575  0F4B  0DE0               	rlf	___flmul@prod+1,f
  8576  0F4C  0DE1               	rlf	___flmul@prod+2,f
  8577  0F4D  0DE2               	rlf	___flmul@prod+3,f
  8578  0F4E  0BD3               	decfsz	??___flmul,f
  8579  0F4F  2F49               	goto	u3895
  8580  0F50  1BDD               	btfsc	___flmul@grs+3,7
  8581  0F51  145F               	bsf	___flmul@prod,0
  8582  0F52  3001               	movlw	1
  8583  0F53  00D3               	movwf	??___flmul
  8584  0F54                     u3915:
  8585  0F54  1003               	clrc
  8586  0F55  0DDA               	rlf	___flmul@grs,f
  8587  0F56  0DDB               	rlf	___flmul@grs+1,f
  8588  0F57  0DDC               	rlf	___flmul@grs+2,f
  8589  0F58  0DDD               	rlf	___flmul@grs+3,f
  8590  0F59  0BD3               	decfsz	??___flmul,f
  8591  0F5A  2F54               	goto	u3915
  8592  0F5B  30FF               	movlw	255
  8593  0F5C  07E3               	addwf	___flmul@temp,f
  8594  0F5D  1803               	skipnc
  8595  0F5E  0AE4               	incf	___flmul@temp+1,f
  8596  0F5F  30FF               	movlw	255
  8597  0F60  07E4               	addwf	___flmul@temp+1,f
  8598  0F61  2F45               	goto	l4323
  8599  0F62                     l4325:
  8600  0F62  01D9               	clrf	___flmul@aexp
  8601  0F63  1FDD               	btfss	___flmul@grs+3,7
  8602  0F64  2F7B               	goto	l4335
  8603  0F65  30FF               	movlw	255
  8604  0F66  055A               	andwf	___flmul@grs,w
  8605  0F67  00D3               	movwf	??___flmul
  8606  0F68  30FF               	movlw	255
  8607  0F69  055B               	andwf	___flmul@grs+1,w
  8608  0F6A  00D4               	movwf	??___flmul+1
  8609  0F6B  30FF               	movlw	255
  8610  0F6C  055C               	andwf	___flmul@grs+2,w
  8611  0F6D  00D5               	movwf	??___flmul+2
  8612  0F6E  307F               	movlw	127
  8613  0F6F  055D               	andwf	___flmul@grs+3,w
  8614  0F70  00D6               	movwf	??___flmul+3
  8615  0F71  0856               	movf	??___flmul+3,w
  8616  0F72  0455               	iorwf	??___flmul+2,w
  8617  0F73  0454               	iorwf	??___flmul+1,w
  8618  0F74  0453               	iorwf	??___flmul,w
  8619  0F75  1903               	skipnz
  8620  0F76  185F               	btfsc	___flmul@prod,0
  8621  0F77  2F79               	goto	l4331
  8622  0F78  2F7B               	goto	l4335
  8623  0F79                     l4331:
  8624  0F79  01D9               	clrf	___flmul@aexp
  8625  0F7A  0AD9               	incf	___flmul@aexp,f
  8626  0F7B                     l4335:
  8627  0F7B  0859               	movf	___flmul@aexp,w
  8628  0F7C  1903               	btfsc	3,2
  8629  0F7D  2FAD               	goto	l4345
  8630  0F7E  3001               	movlw	1
  8631  0F7F  07DF               	addwf	___flmul@prod,f
  8632  0F80  3000               	movlw	0
  8633  0F81  1803               	skipnc
  8634  0F82  3001               	movlw	1
  8635  0F83  07E0               	addwf	___flmul@prod+1,f
  8636  0F84  3000               	movlw	0
  8637  0F85  1803               	skipnc
  8638  0F86  3001               	movlw	1
  8639  0F87  07E1               	addwf	___flmul@prod+2,f
  8640  0F88  3000               	movlw	0
  8641  0F89  1803               	skipnc
  8642  0F8A  3001               	movlw	1
  8643  0F8B  07E2               	addwf	___flmul@prod+3,f
  8644  0F8C  1C62               	btfss	___flmul@prod+3,0
  8645  0F8D  2FAD               	goto	l4345
  8646  0F8E  085F               	movf	___flmul@prod,w
  8647  0F8F  00D3               	movwf	??___flmul
  8648  0F90  0860               	movf	___flmul@prod+1,w
  8649  0F91  00D4               	movwf	??___flmul+1
  8650  0F92  0861               	movf	___flmul@prod+2,w
  8651  0F93  00D5               	movwf	??___flmul+2
  8652  0F94  0862               	movf	___flmul@prod+3,w
  8653  0F95  00D6               	movwf	??___flmul+3
  8654  0F96  3001               	movlw	1
  8655  0F97  00D7               	movwf	??___flmul+4
  8656  0F98                     u3985:
  8657  0F98  0D56               	rlf	??___flmul+3,w
  8658  0F99  0CD6               	rrf	??___flmul+3,f
  8659  0F9A  0CD5               	rrf	??___flmul+2,f
  8660  0F9B  0CD4               	rrf	??___flmul+1,f
  8661  0F9C  0CD3               	rrf	??___flmul,f
  8662  0F9D  0BD7               	decfsz	??___flmul+4,f
  8663  0F9E  2F98               	goto	u3985
  8664  0F9F  0856               	movf	??___flmul+3,w
  8665  0FA0  00E2               	movwf	___flmul@prod+3
  8666  0FA1  0855               	movf	??___flmul+2,w
  8667  0FA2  00E1               	movwf	___flmul@prod+2
  8668  0FA3  0854               	movf	??___flmul+1,w
  8669  0FA4  00E0               	movwf	___flmul@prod+1
  8670  0FA5  0853               	movf	??___flmul,w
  8671  0FA6  00DF               	movwf	___flmul@prod
  8672  0FA7  3001               	movlw	1
  8673  0FA8  07E3               	addwf	___flmul@temp,f
  8674  0FA9  1803               	skipnc
  8675  0FAA  0AE4               	incf	___flmul@temp+1,f
  8676  0FAB  3000               	movlw	0
  8677  0FAC  07E4               	addwf	___flmul@temp+1,f
  8678  0FAD                     l4345:
  8679  0FAD  0864               	movf	___flmul@temp+1,w
  8680  0FAE  3A80               	xorlw	128
  8681  0FAF  00FF               	movwf	127
  8682  0FB0  3080               	movlw	128
  8683  0FB1  027F               	subwf	127,w
  8684  0FB2  1D03               	skipz
  8685  0FB3  2FB6               	goto	u3995
  8686  0FB4  30FF               	movlw	255
  8687  0FB5  0263               	subwf	___flmul@temp,w
  8688  0FB6                     u3995:
  8689  0FB6  1C03               	skipc
  8690  0FB7  2FC3               	goto	l4349
  8691  0FB8  307F               	movlw	127
  8692  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  8693  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  8694  0FBB  00E2               	movwf	___flmul@prod+3
  8695  0FBC  3080               	movlw	128
  8696  0FBD  00E1               	movwf	___flmul@prod+2
  8697  0FBE  3000               	movlw	0
  8698  0FBF  00E0               	movwf	___flmul@prod+1
  8699  0FC0  3000               	movlw	0
  8700  0FC1  00DF               	movwf	___flmul@prod
  8701  0FC2  2FF3               	goto	l1398
  8702  0FC3                     l4349:
  8703  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  8704  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  8705  0FC5  0864               	movf	___flmul@temp+1,w
  8706  0FC6  3A80               	xorlw	128
  8707  0FC7  00FF               	movwf	127
  8708  0FC8  3080               	movlw	128
  8709  0FC9  027F               	subwf	127,w
  8710  0FCA  1D03               	skipz
  8711  0FCB  2FCE               	goto	u4005
  8712  0FCC  3001               	movlw	1
  8713  0FCD  0263               	subwf	___flmul@temp,w
  8714  0FCE                     u4005:
  8715  0FCE  1803               	skipnc
  8716  0FCF  2FDC               	goto	l4355
  8717  0FD0  3000               	movlw	0
  8718  0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  8719  0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  8720  0FD3  00E2               	movwf	___flmul@prod+3
  8721  0FD4  3000               	movlw	0
  8722  0FD5  00E1               	movwf	___flmul@prod+2
  8723  0FD6  3000               	movlw	0
  8724  0FD7  00E0               	movwf	___flmul@prod+1
  8725  0FD8  3000               	movlw	0
  8726  0FD9  00DF               	movwf	___flmul@prod
  8727  0FDA  01D8               	clrf	___flmul@sign
  8728  0FDB  2FF3               	goto	l1398
  8729  0FDC                     l4355:
  8730  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  8731  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  8732  0FDE  0863               	movf	___flmul@temp,w
  8733  0FDF  00FF               	movwf	127
  8734  0FE0  087F               	movf	127,w
  8735  0FE1  00DE               	movwf	___flmul@bexp
  8736  0FE2  30FF               	movlw	255
  8737  0FE3  05DF               	andwf	___flmul@prod,f
  8738  0FE4  30FF               	movlw	255
  8739  0FE5  05E0               	andwf	___flmul@prod+1,f
  8740  0FE6  307F               	movlw	127
  8741  0FE7  05E1               	andwf	___flmul@prod+2,f
  8742  0FE8  3000               	movlw	0
  8743  0FE9  05E2               	andwf	___flmul@prod+3,f
  8744  0FEA  185E               	btfsc	___flmul@bexp,0
  8745  0FEB  17E1               	bsf	___flmul@prod+2,7
  8746  0FEC  085E               	movf	___flmul@bexp,w
  8747  0FED  00D3               	movwf	??___flmul
  8748  0FEE  1003               	clrc
  8749  0FEF  0C53               	rrf	??___flmul,w
  8750  0FF0  00FF               	movwf	127
  8751  0FF1  087F               	movf	127,w
  8752  0FF2  00E2               	movwf	___flmul@prod+3
  8753  0FF3                     l1398:
  8754  0FF3  0858               	movf	___flmul@sign,w
  8755  0FF4  00FF               	movwf	127
  8756  0FF5  087F               	movf	127,w
  8757  0FF6  04E2               	iorwf	___flmul@prod+3,f
  8758  0FF7  0862               	movf	___flmul@prod+3,w
  8759  0FF8  00CE               	movwf	?___flmul+3
  8760  0FF9  0861               	movf	___flmul@prod+2,w
  8761  0FFA  00CD               	movwf	?___flmul+2
  8762  0FFB  0860               	movf	___flmul@prod+1,w
  8763  0FFC  00CC               	movwf	?___flmul+1
  8764  0FFD  085F               	movf	___flmul@prod,w
  8765  0FFE  00CB               	movwf	?___flmul
  8766  0FFF  0008               	return
  8767  1000                     __end_of___flmul:
  8768                           
  8769                           	psect	text23
  8770  1A60                     __ptext23:	
  8771 ;; *************** function __Umul8_16 *****************
  8772 ;; Defined at:
  8773 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  multiplier      1    wreg     unsigned char 
  8776 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8777 ;; Auto vars:     Size  Location     Type
  8778 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8779 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8780 ;;  product         2    4[BANK0 ] unsigned int 
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  2    0[BANK0 ] unsigned int 
  8783 ;; Registers used:
  8784 ;;		wreg, status,2, status,0
  8785 ;; Tracked objects:
  8786 ;;		On entry : 300/0
  8787 ;;		On exit  : 300/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8790 ;;      Params:         0       2       0       0       0
  8791 ;;      Locals:         0       5       0       0       0
  8792 ;;      Temps:          0       2       0       0       0
  8793 ;;      Totals:         0       9       0       0       0
  8794 ;;Total ram usage:        9 bytes
  8795 ;; Hardware stack levels used:    1
  8796 ;; Hardware stack levels required when called:    1
  8797 ;; This function calls:
  8798 ;;		Nothing
  8799 ;; This function is called by:
  8800 ;;		___flmul
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804                           
  8805                           ;psect for function __Umul8_16
  8806  1A60                     __Umul8_16:
  8807                           
  8808                           ;incstack = 0
  8809                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8810                           ;__Umul8_16@multiplier stored from wreg
  8811  1A60  00A8               	movwf	__Umul8_16@multiplier
  8812  1A61  01A4               	clrf	__Umul8_16@product
  8813  1A62  01A5               	clrf	__Umul8_16@product+1
  8814  1A63  0820               	movf	__Umul8_16@multiplicand,w
  8815  1A64  00A2               	movwf	??__Umul8_16
  8816  1A65  01A3               	clrf	??__Umul8_16+1
  8817  1A66  0822               	movf	??__Umul8_16,w
  8818  1A67  00A6               	movwf	__Umul8_16@word_mpld
  8819  1A68  0823               	movf	??__Umul8_16+1,w
  8820  1A69  00A7               	movwf	__Umul8_16@word_mpld+1
  8821  1A6A                     l3749:
  8822  1A6A  1C28               	btfss	__Umul8_16@multiplier,0
  8823  1A6B  2A72               	goto	l1405
  8824  1A6C  0826               	movf	__Umul8_16@word_mpld,w
  8825  1A6D  07A4               	addwf	__Umul8_16@product,f
  8826  1A6E  1803               	skipnc
  8827  1A6F  0AA5               	incf	__Umul8_16@product+1,f
  8828  1A70  0827               	movf	__Umul8_16@word_mpld+1,w
  8829  1A71  07A5               	addwf	__Umul8_16@product+1,f
  8830  1A72                     l1405:
  8831  1A72  3001               	movlw	1
  8832  1A73                     u2855:
  8833  1A73  1003               	clrc
  8834  1A74  0DA6               	rlf	__Umul8_16@word_mpld,f
  8835  1A75  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8836  1A76  3EFF               	addlw	-1
  8837  1A77  1D03               	skipz
  8838  1A78  2A73               	goto	u2855
  8839  1A79  1003               	clrc
  8840  1A7A  0CA8               	rrf	__Umul8_16@multiplier,f
  8841  1A7B  0828               	movf	__Umul8_16@multiplier,w
  8842  1A7C  1D03               	btfss	3,2
  8843  1A7D  2A6A               	goto	l3749
  8844  1A7E  0825               	movf	__Umul8_16@product+1,w
  8845  1A7F  00A1               	movwf	?__Umul8_16+1
  8846  1A80  0824               	movf	__Umul8_16@product,w
  8847  1A81  00A0               	movwf	?__Umul8_16
  8848  1A82  0008               	return
  8849  1A83                     __end_of__Umul8_16:
  8850                           
  8851                           	psect	text24
  8852  1941                     __ptext24:	
  8853 ;; *************** function _PROCULUS_VP_Write_String *****************
  8854 ;; Defined at:
  8855 ;;		line 205 in file "proculus.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;  vp              2   10[BANK1 ] unsigned int 
  8858 ;;  text            1   12[BANK1 ] PTR unsigned char 
  8859 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8860 ;; Auto vars:     Size  Location     Type
  8861 ;;		None
  8862 ;; Return value:  Size  Location     Type
  8863 ;;                  1    wreg      void 
  8864 ;; Registers used:
  8865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8866 ;; Tracked objects:
  8867 ;;		On entry : 300/100
  8868 ;;		On exit  : 300/0
  8869 ;;		Unchanged: 0/0
  8870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8871 ;;      Params:         0       0       3       0       0
  8872 ;;      Locals:         0       0       0       0       0
  8873 ;;      Temps:          0       0       0       0       0
  8874 ;;      Totals:         0       0       3       0       0
  8875 ;;Total ram usage:        3 bytes
  8876 ;; Hardware stack levels used:    1
  8877 ;; Hardware stack levels required when called:    4
  8878 ;; This function calls:
  8879 ;;		_PROCULUS_VP_Write
  8880 ;;		_strlen
  8881 ;; This function is called by:
  8882 ;;		_Decodify_Command
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886                           
  8887                           ;psect for function _PROCULUS_VP_Write_String
  8888  1941                     _PROCULUS_VP_Write_String:
  8889                           
  8890                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  8891                           
  8892                           ;incstack = 0
  8893                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  8894  1941  082B               	movf	(PROCULUS_VP_Write_String@vp+1)^(0+128),w
  8895  1942  00A3               	movwf	(PROCULUS_VP_Write@vp+1)^(0+128)
  8896  1943  082A               	movf	PROCULUS_VP_Write_String@vp^(0+128),w
  8897  1944  00A2               	movwf	PROCULUS_VP_Write@vp^(0+128)
  8898  1945  082C               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  8899  1946  00A4               	movwf	PROCULUS_VP_Write@vetor^(0+128)
  8900  1947  3001               	movlw	1
  8901  1948  00A5               	movwf	(PROCULUS_VP_Write@vetor+1)^(0+128)
  8902  1949  082C               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  8903  194A  160A  158A  2172  160A  158A  	fcall	_strlen
  8904  194F  0820               	movf	?_strlen,w
  8905  1950  3E01               	addlw	1
  8906  1951  00FF               	movwf	127
  8907  1952  087F               	movf	127,w
  8908  1953  1683               	bsf	3,5	;RP0=1, select bank1
  8909  1954  00A6               	movwf	PROCULUS_VP_Write@size^(0+128)
  8910  1955  120A  158A  2000   	fcall	_PROCULUS_VP_Write
  8911  1958  0008               	return
  8912  1959                     __end_of_PROCULUS_VP_Write_String:
  8913                           
  8914                           	psect	text25
  8915  1972                     __ptext25:	
  8916 ;; *************** function _strlen *****************
  8917 ;; Defined at:
  8918 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\strlen.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;  s               1    wreg     PTR const unsigned char 
  8921 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  8924 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8925 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  8926 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8927 ;; Return value:  Size  Location     Type
  8928 ;;                  2    0[BANK0 ] unsigned int 
  8929 ;; Registers used:
  8930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  8931 ;; Tracked objects:
  8932 ;;		On entry : 0/300
  8933 ;;		On exit  : B00/800
  8934 ;;		Unchanged: 0/0
  8935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8936 ;;      Params:         0       3       0       0       0
  8937 ;;      Locals:         0       2       0       0       0
  8938 ;;      Temps:          0       0       0       0       0
  8939 ;;      Totals:         0       5       0       0       0
  8940 ;;Total ram usage:        5 bytes
  8941 ;; Hardware stack levels used:    1
  8942 ;; Hardware stack levels required when called:    1
  8943 ;; This function calls:
  8944 ;;		Nothing
  8945 ;; This function is called by:
  8946 ;;		_Decodify_Command
  8947 ;;		_PROCULUS_VP_Write_String
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           
  8952                           ;psect for function _strlen
  8953  1972                     _strlen:
  8954                           
  8955                           ;incstack = 0
  8956                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1]
  8957                           ;strlen@s stored from wreg
  8958  1972  1283               	bcf	3,5	;RP0=0, select bank0
  8959  1973  1303               	bcf	3,6	;RP1=0, select bank0
  8960  1974  00A4               	movwf	strlen@s
  8961  1975  0824               	movf	strlen@s,w
  8962  1976  00FF               	movwf	127
  8963  1977  087F               	movf	127,w
  8964  1978  00A3               	movwf	strlen@cp
  8965  1979                     l3911:
  8966  1979  0823               	movf	strlen@cp,w
  8967  197A  0084               	movwf	4
  8968  197B  1783               	bsf	3,7	;select IRP bank2
  8969  197C  0800               	movf	0,w
  8970  197D  1903               	btfsc	3,2
  8971  197E  2984               	goto	l3913
  8972  197F  3001               	movlw	1
  8973  1980  00FF               	movwf	127
  8974  1981  087F               	movf	127,w
  8975  1982  07A3               	addwf	strlen@cp,f
  8976  1983  2979               	goto	l3911
  8977  1984                     l3913:
  8978  1984  0824               	movf	strlen@s,w
  8979  1985  0223               	subwf	strlen@cp,w
  8980  1986  00A0               	movwf	?_strlen
  8981  1987  01A1               	clrf	?_strlen+1
  8982  1988  1BA0               	btfsc	?_strlen,7
  8983  1989  03A1               	decf	?_strlen+1,f
  8984  198A  0008               	return
  8985  198B                     __end_of_strlen:
  8986                           
  8987                           	psect	text26
  8988  0800                     __ptext26:	
  8989 ;; *************** function _PROCULUS_VP_Write *****************
  8990 ;; Defined at:
  8991 ;;		line 40 in file "proculus.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;  vp              2    2[BANK1 ] unsigned int 
  8994 ;;  vetor           2    4[BANK1 ] PTR unsigned char 
  8995 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  8996 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(52), usart_protocol(58), 
  8997 ;;  size            1    6[BANK1 ] unsigned char 
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;  i               1    9[BANK1 ] unsigned char 
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  1    wreg      void 
  9002 ;; Registers used:
  9003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9004 ;; Tracked objects:
  9005 ;;		On entry : B00/900
  9006 ;;		On exit  : 300/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9009 ;;      Params:         0       0       5       0       0
  9010 ;;      Locals:         0       0       1       0       0
  9011 ;;      Temps:          0       0       2       0       0
  9012 ;;      Totals:         0       0       8       0       0
  9013 ;;Total ram usage:        8 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; Hardware stack levels required when called:    3
  9016 ;; This function calls:
  9017 ;;		_PROCULUS_Delay
  9018 ;;		_USART_put_int
  9019 ;;		_USART_putc
  9020 ;; This function is called by:
  9021 ;;		_PROCULUS_VP_Write_String
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           
  9026                           ;psect for function _PROCULUS_VP_Write
  9027  0800                     _PROCULUS_VP_Write:
  9028                           
  9029                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  9030                           
  9031                           ;incstack = 0
  9032                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9033  0800  30A5               	movlw	165
  9034  0801  00A0               	movwf	USART_put_int@value^(0+128)
  9035  0802  305A               	movlw	90
  9036  0803  00A1               	movwf	(USART_put_int@value^(0+128)+1)
  9037  0804  160A  158A  212A  120A  158A  	fcall	_USART_put_int
  9038                           
  9039                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  9040  0809  0826               	movf	PROCULUS_VP_Write@size^(0+128),w
  9041  080A  3E03               	addlw	3
  9042  080B  160A  158A  20DE  120A  158A  	fcall	_USART_putc
  9043                           
  9044                           ;proculus.c: 43:      USART_putc(0x82);
  9045  0810  3082               	movlw	130
  9046  0811  160A  158A  20DE  120A  158A  	fcall	_USART_putc
  9047                           
  9048                           ;proculus.c: 44:      USART_put_int(vp);
  9049  0816  0823               	movf	(PROCULUS_VP_Write@vp+1)^(0+128),w
  9050  0817  00A1               	movwf	(USART_put_int@value+1)^(0+128)
  9051  0818  0822               	movf	PROCULUS_VP_Write@vp^(0+128),w
  9052  0819  00A0               	movwf	USART_put_int@value^(0+128)
  9053  081A  160A  158A  212A  120A  158A  	fcall	_USART_put_int
  9054                           
  9055                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  9056  081F  01A9               	clrf	PROCULUS_VP_Write@i^(0+128)
  9057  0820                     l5717:
  9058  0820  0826               	movf	PROCULUS_VP_Write@size^(0+128),w
  9059  0821  0229               	subwf	PROCULUS_VP_Write@i^(0+128),w
  9060  0822  1803               	btfsc	3,0
  9061  0823  283B               	goto	l5719
  9062                           
  9063                           ;proculus.c: 46:          USART_putc(vetor[i]);
  9064  0824  0829               	movf	PROCULUS_VP_Write@i^(0+128),w
  9065  0825  0724               	addwf	PROCULUS_VP_Write@vetor^(0+128),w
  9066  0826  00A7               	movwf	??_PROCULUS_VP_Write^(0+128)
  9067  0827  0825               	movf	(PROCULUS_VP_Write@vetor+1)^(0+128),w
  9068  0828  1803               	skipnc
  9069  0829  3E01               	addlw	1
  9070  082A  00A8               	movwf	(??_PROCULUS_VP_Write^(0+128)+1)
  9071  082B  0827               	movf	??_PROCULUS_VP_Write^(0+128),w
  9072  082C  0084               	movwf	4
  9073  082D  1783               	bsf	3,7
  9074  082E  1C28               	btfss	(??_PROCULUS_VP_Write+1)^(0+128),0
  9075  082F  1383               	bcf	3,7
  9076  0830  0800               	movf	0,w
  9077  0831  160A  158A  20DE  120A  158A  	fcall	_USART_putc
  9078  0836  3001               	movlw	1
  9079  0837  00FF               	movwf	127
  9080  0838  087F               	movf	127,w
  9081  0839  07A9               	addwf	PROCULUS_VP_Write@i^(0+128),f
  9082  083A  2820               	goto	l5717
  9083  083B                     l5719:
  9084                           
  9085                           ;proculus.c: 48:      PROCULUS_Delay(1);
  9086  083B  3001               	movlw	1
  9087  083C  1283               	bcf	3,5	;RP0=0, select bank0
  9088  083D  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9089  083E  3000               	movlw	0
  9090  083F  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9091  0840  160A  158A  21A4   	fcall	_PROCULUS_Delay
  9092  0843  0008               	return
  9093  0844                     __end_of_PROCULUS_VP_Write:
  9094                           
  9095                           	psect	text27
  9096  18FF                     __ptext27:	
  9097 ;; *************** function _PROCULUS_Show_Screen *****************
  9098 ;; Defined at:
  9099 ;;		line 243 in file "proculus.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;  screen          2    6[BANK1 ] unsigned int 
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;  vetor           3    8[BANK1 ] unsigned char [3]
  9104 ;; Return value:  Size  Location     Type
  9105 ;;                  1    wreg      void 
  9106 ;; Registers used:
  9107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9108 ;; Tracked objects:
  9109 ;;		On entry : 300/100
  9110 ;;		On exit  : 300/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9113 ;;      Params:         0       0       2       0       0
  9114 ;;      Locals:         0       0       3       0       0
  9115 ;;      Temps:          0       0       0       0       0
  9116 ;;      Totals:         0       0       5       0       0
  9117 ;;Total ram usage:        5 bytes
  9118 ;; Hardware stack levels used:    1
  9119 ;; Hardware stack levels required when called:    4
  9120 ;; This function calls:
  9121 ;;		_PROCULUS_Control_Register_Write
  9122 ;; This function is called by:
  9123 ;;		_Decodify_Command
  9124 ;; This function uses a non-reentrant model
  9125 ;;
  9126                           
  9127                           
  9128                           ;psect for function _PROCULUS_Show_Screen
  9129  18FF                     _PROCULUS_Show_Screen:
  9130                           
  9131                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9132                           
  9133                           ;incstack = 0
  9134                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  9135  18FF  3003               	movlw	3
  9136  1900  00FF               	movwf	127
  9137  1901  087F               	movf	127,w
  9138  1902  00A8               	movwf	PROCULUS_Show_Screen@vetor^(0+128)
  9139                           
  9140                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9141  1903  0827               	movf	(PROCULUS_Show_Screen@screen^(0+128)+1),w
  9142  1904  00FF               	movwf	127
  9143  1905  087F               	movf	127,w
  9144  1906  00A9               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+1)
  9145                           
  9146                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9147  1907  0826               	movf	PROCULUS_Show_Screen@screen^(0+128),w
  9148  1908  00FF               	movwf	127
  9149  1909  087F               	movf	127,w
  9150  190A  00AA               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+2)
  9151                           
  9152                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9153  190B  3003               	movlw	3
  9154  190C  00FF               	movwf	127
  9155  190D  087F               	movf	127,w
  9156  190E  00A2               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
  9157  190F  30A8               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9158  1910  160A  158A  2444   	fcall	_PROCULUS_Control_Register_Write
  9159  1913  0008               	return
  9160  1914                     __end_of_PROCULUS_Show_Screen:
  9161                           
  9162                           	psect	text28
  9163  1B24                     __ptext28:	
  9164 ;; *************** function _PROCULUS_Buzzer *****************
  9165 ;; Defined at:
  9166 ;;		line 223 in file "proculus.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;  time_ms_x_10    2    6[BANK1 ] unsigned int 
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;  vetor           2    8[BANK1 ] unsigned char [2]
  9171 ;; Return value:  Size  Location     Type
  9172 ;;                  1    wreg      void 
  9173 ;; Registers used:
  9174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9175 ;; Tracked objects:
  9176 ;;		On entry : 300/100
  9177 ;;		On exit  : 300/0
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9180 ;;      Params:         0       0       2       0       0
  9181 ;;      Locals:         0       0       2       0       0
  9182 ;;      Temps:          0       0       0       0       0
  9183 ;;      Totals:         0       0       4       0       0
  9184 ;;Total ram usage:        4 bytes
  9185 ;; Hardware stack levels used:    1
  9186 ;; Hardware stack levels required when called:    4
  9187 ;; This function calls:
  9188 ;;		_PROCULUS_Control_Register_Write
  9189 ;;		___lwdiv
  9190 ;; This function is called by:
  9191 ;;		_Decodify_Command
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           
  9196                           ;psect for function _PROCULUS_Buzzer
  9197  1B24                     _PROCULUS_Buzzer:
  9198                           
  9199                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  9200                           
  9201                           ;incstack = 0
  9202                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9203  1B24  300A               	movlw	10
  9204  1B25  1283               	bcf	3,5	;RP0=0, select bank0
  9205  1B26  00A0               	movwf	___lwdiv@divisor
  9206  1B27  3000               	movlw	0
  9207  1B28  00A1               	movwf	___lwdiv@divisor+1
  9208  1B29  1683               	bsf	3,5	;RP0=1, select bank1
  9209  1B2A  0827               	movf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128),w
  9210  1B2B  1283               	bcf	3,5	;RP0=0, select bank0
  9211  1B2C  00A3               	movwf	___lwdiv@dividend+1
  9212  1B2D  1683               	bsf	3,5	;RP0=1, select bank1
  9213  1B2E  0826               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
  9214  1B2F  1283               	bcf	3,5	;RP0=0, select bank0
  9215  1B30  00A2               	movwf	___lwdiv@dividend
  9216  1B31  160A  158A  2525  160A  158A  	fcall	___lwdiv
  9217  1B36  0821               	movf	?___lwdiv+1,w
  9218  1B37  1683               	bsf	3,5	;RP0=1, select bank1
  9219  1B38  00A7               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  9220  1B39  1283               	bcf	3,5	;RP0=0, select bank0
  9221  1B3A  0820               	movf	?___lwdiv,w
  9222  1B3B  1683               	bsf	3,5	;RP0=1, select bank1
  9223  1B3C  00A6               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  9224                           
  9225                           ;proculus.c: 226:      vetor[0]=0x02;
  9226  1B3D  3002               	movlw	2
  9227  1B3E  00FF               	movwf	127
  9228  1B3F  087F               	movf	127,w
  9229  1B40  00A8               	movwf	PROCULUS_Buzzer@vetor^(0+128)
  9230                           
  9231                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  9232  1B41  0826               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
  9233  1B42  00FF               	movwf	127
  9234  1B43  087F               	movf	127,w
  9235  1B44  00A9               	movwf	(PROCULUS_Buzzer@vetor^(0+128)+1)
  9236                           
  9237                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9238  1B45  3002               	movlw	2
  9239  1B46  00FF               	movwf	127
  9240  1B47  087F               	movf	127,w
  9241  1B48  00A2               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
  9242  1B49  30A8               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9243  1B4A  160A  158A  2444   	fcall	_PROCULUS_Control_Register_Write
  9244  1B4D  0008               	return
  9245  1B4E                     __end_of_PROCULUS_Buzzer:
  9246                           
  9247                           	psect	text29
  9248  1D25                     __ptext29:	
  9249 ;; *************** function ___lwdiv *****************
  9250 ;; Defined at:
  9251 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;  divisor         2    0[BANK0 ] unsigned int 
  9254 ;;  dividend        2    2[BANK0 ] unsigned int 
  9255 ;; Auto vars:     Size  Location     Type
  9256 ;;  quotient        2    4[BANK0 ] unsigned int 
  9257 ;;  counter         1    6[BANK0 ] unsigned char 
  9258 ;; Return value:  Size  Location     Type
  9259 ;;                  2    0[BANK0 ] unsigned int 
  9260 ;; Registers used:
  9261 ;;		wreg, status,2, status,0, btemp+1
  9262 ;; Tracked objects:
  9263 ;;		On entry : 300/0
  9264 ;;		On exit  : 300/0
  9265 ;;		Unchanged: 0/0
  9266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9267 ;;      Params:         0       4       0       0       0
  9268 ;;      Locals:         0       3       0       0       0
  9269 ;;      Temps:          0       0       0       0       0
  9270 ;;      Totals:         0       7       0       0       0
  9271 ;;Total ram usage:        7 bytes
  9272 ;; Hardware stack levels used:    1
  9273 ;; Hardware stack levels required when called:    1
  9274 ;; This function calls:
  9275 ;;		Nothing
  9276 ;; This function is called by:
  9277 ;;		_ADC_Media_10bits
  9278 ;;		_PROCULUS_Buzzer
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           
  9283                           ;psect for function ___lwdiv
  9284  1D25                     ___lwdiv:
  9285                           
  9286                           ;incstack = 0
  9287                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  9288  1D25  01A4               	clrf	___lwdiv@quotient
  9289  1D26  01A5               	clrf	___lwdiv@quotient+1
  9290  1D27  0820               	movf	___lwdiv@divisor,w
  9291  1D28  0421               	iorwf	___lwdiv@divisor+1,w
  9292  1D29  1903               	btfsc	3,2
  9293  1D2A  2D5C               	goto	l4021
  9294  1D2B  01A6               	clrf	___lwdiv@counter
  9295  1D2C  0AA6               	incf	___lwdiv@counter,f
  9296  1D2D                     l4009:
  9297  1D2D  1BA1               	btfsc	___lwdiv@divisor+1,7
  9298  1D2E  2D3B               	goto	l4011
  9299  1D2F  3001               	movlw	1
  9300  1D30                     u3145:
  9301  1D30  1003               	clrc
  9302  1D31  0DA0               	rlf	___lwdiv@divisor,f
  9303  1D32  0DA1               	rlf	___lwdiv@divisor+1,f
  9304  1D33  3EFF               	addlw	-1
  9305  1D34  1D03               	skipz
  9306  1D35  2D30               	goto	u3145
  9307  1D36  3001               	movlw	1
  9308  1D37  00FF               	movwf	127
  9309  1D38  087F               	movf	127,w
  9310  1D39  07A6               	addwf	___lwdiv@counter,f
  9311  1D3A  2D2D               	goto	l4009
  9312  1D3B                     l4011:
  9313  1D3B  3001               	movlw	1
  9314  1D3C                     u3165:
  9315  1D3C  1003               	clrc
  9316  1D3D  0DA4               	rlf	___lwdiv@quotient,f
  9317  1D3E  0DA5               	rlf	___lwdiv@quotient+1,f
  9318  1D3F  3EFF               	addlw	-1
  9319  1D40  1D03               	skipz
  9320  1D41  2D3C               	goto	u3165
  9321  1D42  0821               	movf	___lwdiv@divisor+1,w
  9322  1D43  0223               	subwf	___lwdiv@dividend+1,w
  9323  1D44  1D03               	skipz
  9324  1D45  2D48               	goto	u3175
  9325  1D46  0820               	movf	___lwdiv@divisor,w
  9326  1D47  0222               	subwf	___lwdiv@dividend,w
  9327  1D48                     u3175:
  9328  1D48  1C03               	skipc
  9329  1D49  2D51               	goto	l4017
  9330  1D4A  0820               	movf	___lwdiv@divisor,w
  9331  1D4B  02A2               	subwf	___lwdiv@dividend,f
  9332  1D4C  0821               	movf	___lwdiv@divisor+1,w
  9333  1D4D  1C03               	skipc
  9334  1D4E  03A3               	decf	___lwdiv@dividend+1,f
  9335  1D4F  02A3               	subwf	___lwdiv@dividend+1,f
  9336  1D50  1424               	bsf	___lwdiv@quotient,0
  9337  1D51                     l4017:
  9338  1D51  3001               	movlw	1
  9339  1D52                     u3185:
  9340  1D52  1003               	clrc
  9341  1D53  0CA1               	rrf	___lwdiv@divisor+1,f
  9342  1D54  0CA0               	rrf	___lwdiv@divisor,f
  9343  1D55  3EFF               	addlw	-1
  9344  1D56  1D03               	skipz
  9345  1D57  2D52               	goto	u3185
  9346  1D58  3001               	movlw	1
  9347  1D59  02A6               	subwf	___lwdiv@counter,f
  9348  1D5A  1D03               	btfss	3,2
  9349  1D5B  2D3B               	goto	l4011
  9350  1D5C                     l4021:
  9351  1D5C  0825               	movf	___lwdiv@quotient+1,w
  9352  1D5D  00A1               	movwf	?___lwdiv+1
  9353  1D5E  0824               	movf	___lwdiv@quotient,w
  9354  1D5F  00A0               	movwf	?___lwdiv
  9355  1D60  0008               	return
  9356  1D61                     __end_of___lwdiv:
  9357                           
  9358                           	psect	text30
  9359  1C44                     __ptext30:	
  9360 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9361 ;; Defined at:
  9362 ;;		line 13 in file "proculus.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;  vetor           1    wreg     PTR unsigned char 
  9365 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9366 ;;  size            1    2[BANK1 ] unsigned char 
  9367 ;; Auto vars:     Size  Location     Type
  9368 ;;  vetor           1    4[BANK1 ] PTR unsigned char 
  9369 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9370 ;;  i               1    5[BANK1 ] unsigned char 
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  1    wreg      void 
  9373 ;; Registers used:
  9374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9375 ;; Tracked objects:
  9376 ;;		On entry : 300/100
  9377 ;;		On exit  : 300/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9380 ;;      Params:         0       0       1       0       0
  9381 ;;      Locals:         0       0       2       0       0
  9382 ;;      Temps:          0       0       1       0       0
  9383 ;;      Totals:         0       0       4       0       0
  9384 ;;Total ram usage:        4 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; Hardware stack levels required when called:    3
  9387 ;; This function calls:
  9388 ;;		_PROCULUS_Delay
  9389 ;;		_USART_put_int
  9390 ;;		_USART_putc
  9391 ;; This function is called by:
  9392 ;;		_PROCULUS_Buzzer
  9393 ;;		_PROCULUS_Show_Screen
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           
  9398                           ;psect for function _PROCULUS_Control_Register_Write
  9399  1C44                     _PROCULUS_Control_Register_Write:
  9400                           
  9401                           ;incstack = 0
  9402                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+btemp+1+p
      +                          clath+cstack]
  9403                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9404  1C44  00A4               	movwf	PROCULUS_Control_Register_Write@vetor^(0+128)
  9405                           
  9406                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9407  1C45  30A5               	movlw	165
  9408  1C46  00A0               	movwf	USART_put_int@value^(0+128)
  9409  1C47  305A               	movlw	90
  9410  1C48  00A1               	movwf	(USART_put_int@value^(0+128)+1)
  9411  1C49  160A  158A  212A  160A  158A  	fcall	_USART_put_int
  9412                           
  9413                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9414  1C4E  0822               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
  9415  1C4F  3E01               	addlw	1
  9416  1C50  160A  158A  20DE  160A  158A  	fcall	_USART_putc
  9417                           
  9418                           ;proculus.c: 16:      USART_putc(0x80);
  9419  1C55  3080               	movlw	128
  9420  1C56  160A  158A  20DE  160A  158A  	fcall	_USART_putc
  9421                           
  9422                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9423  1C5B  01A5               	clrf	PROCULUS_Control_Register_Write@i^(0+128)
  9424  1C5C                     l3941:
  9425  1C5C  0822               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
  9426  1C5D  0225               	subwf	PROCULUS_Control_Register_Write@i^(0+128),w
  9427  1C5E  1803               	btfsc	3,0
  9428  1C5F  2C71               	goto	l3943
  9429                           
  9430                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9431  1C60  0825               	movf	PROCULUS_Control_Register_Write@i^(0+128),w
  9432  1C61  0724               	addwf	PROCULUS_Control_Register_Write@vetor^(0+128),w
  9433  1C62  00A3               	movwf	??_PROCULUS_Control_Register_Write^(0+128)
  9434  1C63  0823               	movf	??_PROCULUS_Control_Register_Write^(0+128),w
  9435  1C64  0084               	movwf	4
  9436  1C65  1383               	bcf	3,7	;select IRP bank0
  9437  1C66  0800               	movf	0,w
  9438  1C67  160A  158A  20DE  160A  158A  	fcall	_USART_putc
  9439  1C6C  3001               	movlw	1
  9440  1C6D  00FF               	movwf	127
  9441  1C6E  087F               	movf	127,w
  9442  1C6F  07A5               	addwf	PROCULUS_Control_Register_Write@i^(0+128),f
  9443  1C70  2C5C               	goto	l3941
  9444  1C71                     l3943:
  9445                           
  9446                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9447  1C71  3001               	movlw	1
  9448  1C72  1283               	bcf	3,5	;RP0=0, select bank0
  9449  1C73  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9450  1C74  3000               	movlw	0
  9451  1C75  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9452  1C76  160A  158A  21A4   	fcall	_PROCULUS_Delay
  9453  1C79  0008               	return
  9454  1C7A                     __end_of_PROCULUS_Control_Register_Write:
  9455                           
  9456                           	psect	text31
  9457  192A                     __ptext31:	
  9458 ;; *************** function _USART_put_int *****************
  9459 ;; Defined at:
  9460 ;;		line 137 in file "usart.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;  value           2    0[BANK1 ] int 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;  dado            1   79[BANK0 ] PTR unsigned char 
  9465 ;;		 -> USART_put_int@value(2), 
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  1    wreg      void 
  9468 ;; Registers used:
  9469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9470 ;; Tracked objects:
  9471 ;;		On entry : 300/100
  9472 ;;		On exit  : 300/100
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9475 ;;      Params:         0       0       2       0       0
  9476 ;;      Locals:         0       1       0       0       0
  9477 ;;      Temps:          0       0       0       0       0
  9478 ;;      Totals:         0       1       2       0       0
  9479 ;;Total ram usage:        3 bytes
  9480 ;; Hardware stack levels used:    1
  9481 ;; Hardware stack levels required when called:    2
  9482 ;; This function calls:
  9483 ;;		_USART_putc
  9484 ;; This function is called by:
  9485 ;;		_Decodify_Command
  9486 ;;		_PROCULUS_Control_Register_Write
  9487 ;;		_PROCULUS_VP_Write
  9488 ;; This function uses a non-reentrant model
  9489 ;;
  9490                           
  9491                           
  9492                           ;psect for function _USART_put_int
  9493  192A                     _USART_put_int:
  9494                           
  9495                           ;usart.c: 138:      char *dado;;usart.c: 139:      dado=(char*)&value;
  9496                           
  9497                           ;incstack = 0
  9498                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9499  192A  30A0               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9500  192B  00FF               	movwf	127
  9501  192C  087F               	movf	127,w
  9502  192D  1283               	bcf	3,5	;RP0=0, select bank0
  9503  192E  00EF               	movwf	USART_put_int@dado
  9504                           
  9505                           ;usart.c: 140:      USART_putc(*(dado+1));
  9506  192F  0A6F               	incf	USART_put_int@dado,w
  9507  1930  0084               	movwf	4
  9508  1931  1383               	bcf	3,7	;select IRP bank0
  9509  1932  0800               	movf	0,w
  9510  1933  160A  158A  20DE  160A  158A  	fcall	_USART_putc
  9511                           
  9512                           ;usart.c: 141:      USART_putc(*dado);
  9513  1938  1283               	bcf	3,5	;RP0=0, select bank0
  9514  1939  086F               	movf	USART_put_int@dado,w
  9515  193A  0084               	movwf	4
  9516  193B  1383               	bcf	3,7	;select IRP bank0
  9517  193C  0800               	movf	0,w
  9518  193D  160A  158A  20DE   	fcall	_USART_putc
  9519  1940  0008               	return
  9520  1941                     __end_of_USART_put_int:
  9521                           
  9522                           	psect	text32
  9523  19A4                     __ptext32:	
  9524 ;; *************** function _PROCULUS_Delay *****************
  9525 ;; Defined at:
  9526 ;;		line 267 in file "proculus.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;  i               2    4[BANK0 ] unsigned int 
  9531 ;; Return value:  Size  Location     Type
  9532 ;;                  1    wreg      void 
  9533 ;; Registers used:
  9534 ;;		wreg, status,2
  9535 ;; Tracked objects:
  9536 ;;		On entry : 300/800
  9537 ;;		On exit  : 300/0
  9538 ;;		Unchanged: 0/0
  9539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9540 ;;      Params:         0       2       0       0       0
  9541 ;;      Locals:         0       2       0       0       0
  9542 ;;      Temps:          0       2       0       0       0
  9543 ;;      Totals:         0       6       0       0       0
  9544 ;;Total ram usage:        6 bytes
  9545 ;; Hardware stack levels used:    1
  9546 ;; Hardware stack levels required when called:    1
  9547 ;; This function calls:
  9548 ;;		Nothing
  9549 ;; This function is called by:
  9550 ;;		_PROCULUS_Control_Register_Write
  9551 ;;		_PROCULUS_VP_Write
  9552 ;; This function uses a non-reentrant model
  9553 ;;
  9554                           
  9555                           
  9556                           ;psect for function _PROCULUS_Delay
  9557  19A4                     _PROCULUS_Delay:
  9558                           
  9559                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9560                           
  9561                           ;incstack = 0
  9562                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
  9563  19A4  01A4               	clrf	PROCULUS_Delay@i
  9564  19A5  01A5               	clrf	PROCULUS_Delay@i+1
  9565  19A6                     l800:
  9566  19A6  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9567  19A7  0225               	subwf	PROCULUS_Delay@i+1,w
  9568  19A8  1D03               	skipz
  9569  19A9  29AC               	goto	u2835
  9570  19AA  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9571  19AB  0224               	subwf	PROCULUS_Delay@i,w
  9572  19AC                     u2835:
  9573  19AC  1803               	btfsc	3,0
  9574  19AD  0008               	return
  9575                           
  9576                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9577  19AE  3003               	movlw	3
  9578  19AF  1283               	bcf	3,5	;RP0=0, select bank0
  9579  19B0  1303               	bcf	3,6	;RP1=0, select bank0
  9580  19B1  00A3               	movwf	??_PROCULUS_Delay+1
  9581  19B2  3097               	movlw	151
  9582  19B3  00A2               	movwf	??_PROCULUS_Delay
  9583  19B4                     u5537:
  9584  19B4  0BA2               	decfsz	??_PROCULUS_Delay,f
  9585  19B5  29B4               	goto	u5537
  9586  19B6  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9587  19B7  29B4               	goto	u5537
  9588                           
  9589                           ;proculus.c: 270:     }
  9590  19B8  3001               	movlw	1
  9591  19B9  1283               	bcf	3,5	;RP0=0, select bank0
  9592  19BA  1303               	bcf	3,6	;RP1=0, select bank0
  9593  19BB  07A4               	addwf	PROCULUS_Delay@i,f
  9594  19BC  1803               	skipnc
  9595  19BD  0AA5               	incf	PROCULUS_Delay@i+1,f
  9596  19BE  3000               	movlw	0
  9597  19BF  07A5               	addwf	PROCULUS_Delay@i+1,f
  9598  19C0  29A6               	goto	l800
  9599  19C1                     __end_of_PROCULUS_Delay:
  9600                           
  9601                           	psect	text33
  9602  1B4E                     __ptext33:	
  9603 ;; *************** function _EEPROM_Write_String *****************
  9604 ;; Defined at:
  9605 ;;		line 97 in file "eeprom.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;  addr            1    wreg     unsigned char 
  9608 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9609 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9610 ;; Auto vars:     Size  Location     Type
  9611 ;;  addr            1    6[BANK0 ] unsigned char 
  9612 ;; Return value:  Size  Location     Type
  9613 ;;                  1    wreg      void 
  9614 ;; Registers used:
  9615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9616 ;; Tracked objects:
  9617 ;;		On entry : 300/300
  9618 ;;		On exit  : 0/0
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9621 ;;      Params:         0       1       0       0       0
  9622 ;;      Locals:         0       1       0       0       0
  9623 ;;      Temps:          0       0       0       0       0
  9624 ;;      Totals:         0       2       0       0       0
  9625 ;;Total ram usage:        2 bytes
  9626 ;; Hardware stack levels used:    1
  9627 ;; Hardware stack levels required when called:    2
  9628 ;; This function calls:
  9629 ;;		_EEPROM_Write_Byte
  9630 ;; This function is called by:
  9631 ;;		_Decodify_Command
  9632 ;; This function uses a non-reentrant model
  9633 ;;
  9634                           
  9635                           
  9636                           ;psect for function _EEPROM_Write_String
  9637  1B4E                     _EEPROM_Write_String:
  9638                           
  9639                           ;incstack = 0
  9640                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  9641                           ;EEPROM_Write_String@addr stored from wreg
  9642  1B4E  1283               	bcf	3,5	;RP0=0, select bank0
  9643  1B4F  1303               	bcf	3,6	;RP1=0, select bank0
  9644  1B50  00A6               	movwf	EEPROM_Write_String@addr
  9645  1B51                     l4793:	
  9646                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9647                           
  9648                           
  9649                           ;eeprom.c: 99:     while(*dado)
  9650  1B51  0825               	movf	EEPROM_Write_String@dado,w
  9651  1B52  0084               	movwf	4
  9652  1B53  1783               	bsf	3,7	;select IRP bank2
  9653  1B54  0800               	movf	0,w
  9654  1B55  1903               	btfsc	3,2
  9655  1B56  2B6E               	goto	l4795
  9656                           
  9657                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9658  1B57  0825               	movf	EEPROM_Write_String@dado,w
  9659  1B58  0084               	movwf	4
  9660  1B59  0800               	movf	0,w
  9661  1B5A  00FF               	movwf	127
  9662  1B5B  087F               	movf	127,w
  9663  1B5C  00A0               	movwf	EEPROM_Write_Byte@dado
  9664  1B5D  0826               	movf	EEPROM_Write_String@addr,w
  9665  1B5E  160A  158A  24E9  160A  158A  	fcall	_EEPROM_Write_Byte
  9666                           
  9667                           ;eeprom.c: 102:      addr++;
  9668  1B63  3001               	movlw	1
  9669  1B64  00FF               	movwf	127
  9670  1B65  087F               	movf	127,w
  9671  1B66  1283               	bcf	3,5	;RP0=0, select bank0
  9672  1B67  1303               	bcf	3,6	;RP1=0, select bank0
  9673  1B68  07A6               	addwf	EEPROM_Write_String@addr,f
  9674                           
  9675                           ;eeprom.c: 103:      dado++;
  9676  1B69  3001               	movlw	1
  9677  1B6A  00FF               	movwf	127
  9678  1B6B  087F               	movf	127,w
  9679  1B6C  07A5               	addwf	EEPROM_Write_String@dado,f
  9680  1B6D  2B51               	goto	l4793
  9681  1B6E                     l4795:
  9682                           
  9683                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9684  1B6E  0825               	movf	EEPROM_Write_String@dado,w
  9685  1B6F  0084               	movwf	4
  9686  1B70  0800               	movf	0,w
  9687  1B71  00FF               	movwf	127
  9688  1B72  087F               	movf	127,w
  9689  1B73  00A0               	movwf	EEPROM_Write_Byte@dado
  9690  1B74  0826               	movf	EEPROM_Write_String@addr,w
  9691  1B75  160A  158A  24E9   	fcall	_EEPROM_Write_Byte
  9692  1B78  0008               	return
  9693  1B79                     __end_of_EEPROM_Write_String:
  9694                           
  9695                           	psect	text34
  9696  1BAA                     __ptext34:	
  9697 ;; *************** function _EEPROM_Write_Integer *****************
  9698 ;; Defined at:
  9699 ;;		line 68 in file "eeprom.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;  addr            1    wreg     unsigned char 
  9702 ;;  dado            2    5[BANK0 ] unsigned int 
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  addr            1   11[BANK0 ] unsigned char 
  9705 ;;  i               1   12[BANK0 ] unsigned char 
  9706 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
  9707 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9708 ;;  addr_memo       1    0        unsigned char 
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  1    wreg      void 
  9711 ;; Registers used:
  9712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9713 ;; Tracked objects:
  9714 ;;		On entry : 200/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9718 ;;      Params:         0       2       0       0       0
  9719 ;;      Locals:         0       4       0       0       0
  9720 ;;      Temps:          0       2       0       0       0
  9721 ;;      Totals:         0       8       0       0       0
  9722 ;;Total ram usage:        8 bytes
  9723 ;; Hardware stack levels used:    1
  9724 ;; Hardware stack levels required when called:    2
  9725 ;; This function calls:
  9726 ;;		_EEPROM_Write_Byte
  9727 ;; This function is called by:
  9728 ;;		_main
  9729 ;;		_Decodify_Command
  9730 ;; This function uses a non-reentrant model
  9731 ;;
  9732                           
  9733                           
  9734                           ;psect for function _EEPROM_Write_Integer
  9735  1BAA                     _EEPROM_Write_Integer:
  9736                           
  9737                           ;incstack = 0
  9738                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  9739                           ;EEPROM_Write_Integer@addr stored from wreg
  9740  1BAA  1283               	bcf	3,5	;RP0=0, select bank0
  9741  1BAB  00AB               	movwf	EEPROM_Write_Integer@addr
  9742                           
  9743                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9744  1BAC  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9745  1BAD  00FF               	movwf	127
  9746  1BAE  087F               	movf	127,w
  9747  1BAF  00AA               	movwf	EEPROM_Write_Integer@ptr
  9748                           
  9749                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9750  1BB0  01AC               	clrf	EEPROM_Write_Integer@i
  9751  1BB1                     l4743:
  9752                           
  9753                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9754  1BB1  082A               	movf	EEPROM_Write_Integer@ptr,w
  9755  1BB2  0084               	movwf	4
  9756  1BB3  1383               	bcf	3,7	;select IRP bank0
  9757  1BB4  0800               	movf	0,w
  9758  1BB5  00FF               	movwf	127
  9759  1BB6  087F               	movf	127,w
  9760  1BB7  00A0               	movwf	EEPROM_Write_Byte@dado
  9761  1BB8  082B               	movf	EEPROM_Write_Integer@addr,w
  9762  1BB9  160A  158A  24E9  160A  158A  	fcall	_EEPROM_Write_Byte
  9763  1BBE  3001               	movlw	1
  9764  1BBF  00FF               	movwf	127
  9765  1BC0  087F               	movf	127,w
  9766  1BC1  1283               	bcf	3,5	;RP0=0, select bank0
  9767  1BC2  1303               	bcf	3,6	;RP1=0, select bank0
  9768  1BC3  07AA               	addwf	EEPROM_Write_Integer@ptr,f
  9769  1BC4  3001               	movlw	1
  9770  1BC5  00FF               	movwf	127
  9771  1BC6  087F               	movf	127,w
  9772  1BC7  07AB               	addwf	EEPROM_Write_Integer@addr,f
  9773  1BC8  3001               	movlw	1
  9774  1BC9  00FF               	movwf	127
  9775  1BCA  087F               	movf	127,w
  9776  1BCB  07AC               	addwf	EEPROM_Write_Integer@i,f
  9777  1BCC  3002               	movlw	2
  9778  1BCD  022C               	subwf	EEPROM_Write_Integer@i,w
  9779  1BCE  1C03               	skipc
  9780  1BCF  2BB1               	goto	l4743
  9781                           
  9782                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9783  1BD0  304E               	movlw	78
  9784  1BD1  1283               	bcf	3,5	;RP0=0, select bank0
  9785  1BD2  1303               	bcf	3,6	;RP1=0, select bank0
  9786  1BD3  00A8               	movwf	??_EEPROM_Write_Integer+1
  9787  1BD4  30EA               	movlw	234
  9788  1BD5  00A7               	movwf	??_EEPROM_Write_Integer
  9789  1BD6                     u5547:
  9790  1BD6  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9791  1BD7  2BD6               	goto	u5547
  9792  1BD8  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9793  1BD9  2BD6               	goto	u5547
  9794  1BDA  0000               	nop
  9795  1BDB  0008               	return
  9796  1BDC                     __end_of_EEPROM_Write_Integer:
  9797                           
  9798                           	psect	text35
  9799  1CE9                     __ptext35:	
  9800 ;; *************** function _EEPROM_Write_Byte *****************
  9801 ;; Defined at:
  9802 ;;		line 21 in file "eeprom.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;  addr            1    wreg     unsigned char 
  9805 ;;  dado            1    0[BANK0 ] unsigned char 
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;  addr            1    3[BANK0 ] unsigned char 
  9808 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1    wreg      void 
  9811 ;; Registers used:
  9812 ;;		wreg, status,2, status,0
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/300
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9818 ;;      Params:         0       1       0       0       0
  9819 ;;      Locals:         0       2       0       0       0
  9820 ;;      Temps:          0       2       0       0       0
  9821 ;;      Totals:         0       5       0       0       0
  9822 ;;Total ram usage:        5 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; Hardware stack levels required when called:    1
  9825 ;; This function calls:
  9826 ;;		Nothing
  9827 ;; This function is called by:
  9828 ;;		_Decodify_Command
  9829 ;;		_EEPROM_Write_Integer
  9830 ;;		_EEPROM_Write_String
  9831 ;; This function uses a non-reentrant model
  9832 ;;
  9833                           
  9834                           
  9835                           ;psect for function _EEPROM_Write_Byte
  9836  1CE9                     _EEPROM_Write_Byte:
  9837                           
  9838                           ;incstack = 0
  9839                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9840                           ;EEPROM_Write_Byte@addr stored from wreg
  9841  1CE9  1283               	bcf	3,5	;RP0=0, select bank0
  9842  1CEA  1303               	bcf	3,6	;RP1=0, select bank0
  9843  1CEB  00A3               	movwf	EEPROM_Write_Byte@addr
  9844                           
  9845                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9846  1CEC  3014               	movlw	20
  9847  1CED  1683               	bsf	3,5	;RP0=1, select bank1
  9848  1CEE  00DC               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9849  1CEF  3000               	movlw	0
  9850  1CF0  00DD               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9851  1CF1                     l519:	
  9852                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9853                           
  9854  1CF1  1703               	bsf	3,6	;RP1=1, select bank3
  9855  1CF2  188C               	btfsc	12,1	;volsfr
  9856  1CF3  2CF1               	goto	l519
  9857                           
  9858                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9859  1CF4  1F8B               	btfss	11,7	;volatile
  9860  1CF5  2CFB               	goto	l3873
  9861                           
  9862                           ;eeprom.c: 28:           last_GIE=1;
  9863  1CF6  1283               	bcf	3,5	;RP0=0, select bank0
  9864  1CF7  1303               	bcf	3,6	;RP1=0, select bank0
  9865  1CF8  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9866  1CF9  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9867  1CFA  2CFE               	goto	l3875
  9868  1CFB                     l3873:
  9869                           
  9870                           ;eeprom.c: 30:           last_GIE=0;
  9871  1CFB  1283               	bcf	3,5	;RP0=0, select bank0
  9872  1CFC  1303               	bcf	3,6	;RP1=0, select bank0
  9873  1CFD  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9874  1CFE                     l3875:
  9875                           
  9876                           ;eeprom.c: 32:        EEADR=addr;
  9877  1CFE  0823               	movf	EEPROM_Write_Byte@addr,w
  9878  1CFF  1703               	bsf	3,6	;RP1=1, select bank2
  9879  1D00  008D               	movwf	13	;volatile
  9880                           
  9881                           ;eeprom.c: 33:        EEDATA=dado;
  9882  1D01  1303               	bcf	3,6	;RP1=0, select bank0
  9883  1D02  0820               	movf	EEPROM_Write_Byte@dado,w
  9884  1D03  1703               	bsf	3,6	;RP1=1, select bank2
  9885  1D04  008C               	movwf	12	;volatile
  9886                           
  9887                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9888  1D05  1683               	bsf	3,5	;RP0=1, select bank3
  9889  1D06  138C               	bcf	12,7	;volsfr
  9890                           
  9891                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9892  1D07  150C               	bsf	12,2	;volsfr
  9893                           
  9894                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9895  1D08  138B               	bcf	11,7	;volatile
  9896                           
  9897                           ;eeprom.c: 37:        EECON2=0x55;
  9898  1D09  3055               	movlw	85
  9899  1D0A  008D               	movwf	13	;volsfr
  9900                           
  9901                           ;eeprom.c: 38:        EECON2=0xAA;
  9902  1D0B  30AA               	movlw	170
  9903  1D0C  008D               	movwf	13	;volsfr
  9904                           
  9905                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9906  1D0D  148C               	bsf	12,1	;volsfr
  9907                           
  9908                           ;eeprom.c: 41:        if(last_GIE==1)
  9909  1D0E  1283               	bcf	3,5	;RP0=0, select bank0
  9910  1D0F  1303               	bcf	3,6	;RP1=0, select bank0
  9911  1D10  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9912  1D11  1D03               	btfss	3,2
  9913  1D12  2D15               	goto	l524
  9914                           
  9915                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9916  1D13  178B               	bsf	11,7	;volatile
  9917  1D14  2D16               	goto	l525
  9918  1D15                     l524:	
  9919                           ;eeprom.c: 43:        else
  9920                           
  9921                           
  9922                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9923  1D15  138B               	bcf	11,7	;volatile
  9924  1D16                     l525:
  9925                           
  9926                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9927  1D16  1683               	bsf	3,5	;RP0=1, select bank3
  9928  1D17  1703               	bsf	3,6	;RP1=1, select bank3
  9929  1D18  110C               	bcf	12,2	;volsfr
  9930                           
  9931                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9932  1D19  304E               	movlw	78
  9933  1D1A  1283               	bcf	3,5	;RP0=0, select bank0
  9934  1D1B  1303               	bcf	3,6	;RP1=0, select bank0
  9935  1D1C  00A2               	movwf	??_EEPROM_Write_Byte+1
  9936  1D1D  30EA               	movlw	234
  9937  1D1E  00A1               	movwf	??_EEPROM_Write_Byte
  9938  1D1F                     u5557:
  9939  1D1F  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9940  1D20  2D1F               	goto	u5557
  9941  1D21  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9942  1D22  2D1F               	goto	u5557
  9943  1D23  0000               	nop
  9944  1D24  0008               	return
  9945  1D25                     __end_of_EEPROM_Write_Byte:
  9946                           
  9947                           	psect	text36
  9948  19FD                     __ptext36:	
  9949 ;; *************** function _EEPROM_Read_String *****************
  9950 ;; Defined at:
  9951 ;;		line 109 in file "eeprom.c"
  9952 ;; Parameters:    Size  Location     Type
  9953 ;;  addr            1    wreg     unsigned char 
  9954 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  9955 ;;		 -> buffer(33), 
  9956 ;; Auto vars:     Size  Location     Type
  9957 ;;  addr            1    4[BANK0 ] unsigned char 
  9958 ;;  c               1    5[BANK0 ] unsigned char 
  9959 ;; Return value:  Size  Location     Type
  9960 ;;                  1    wreg      void 
  9961 ;; Registers used:
  9962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9963 ;; Tracked objects:
  9964 ;;		On entry : 300/300
  9965 ;;		On exit  : B00/800
  9966 ;;		Unchanged: 0/0
  9967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9968 ;;      Params:         0       1       0       0       0
  9969 ;;      Locals:         0       2       0       0       0
  9970 ;;      Temps:          0       0       0       0       0
  9971 ;;      Totals:         0       3       0       0       0
  9972 ;;Total ram usage:        3 bytes
  9973 ;; Hardware stack levels used:    1
  9974 ;; Hardware stack levels required when called:    2
  9975 ;; This function calls:
  9976 ;;		_EEPROM_Read_Byte
  9977 ;; This function is called by:
  9978 ;;		_Decodify_Command
  9979 ;; This function uses a non-reentrant model
  9980 ;;
  9981                           
  9982                           
  9983                           ;psect for function _EEPROM_Read_String
  9984  19FD                     _EEPROM_Read_String:
  9985                           
  9986                           ;incstack = 0
  9987                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9988                           ;EEPROM_Read_String@addr stored from wreg
  9989  19FD  1283               	bcf	3,5	;RP0=0, select bank0
  9990  19FE  1303               	bcf	3,6	;RP1=0, select bank0
  9991  19FF  00A4               	movwf	EEPROM_Read_String@addr
  9992  1A00                     l551:	
  9993                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
  9994                           
  9995                           
  9996                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
  9997  1A00  0824               	movf	EEPROM_Read_String@addr,w
  9998  1A01  160A  158A  223E  160A  158A  	fcall	_EEPROM_Read_Byte
  9999  1A06  00FF               	movwf	127
 10000  1A07  087F               	movf	127,w
 10001  1A08  1303               	bcf	3,6	;RP1=0, select bank0
 10002  1A09  00A5               	movwf	EEPROM_Read_String@c
 10003  1A0A  3001               	movlw	1
 10004  1A0B  00FF               	movwf	127
 10005  1A0C  087F               	movf	127,w
 10006  1A0D  07A4               	addwf	EEPROM_Read_String@addr,f
 10007                           
 10008                           ;eeprom.c: 114:         *(dado++)=c;
 10009  1A0E  0825               	movf	EEPROM_Read_String@c,w
 10010  1A0F  00FF               	movwf	127
 10011  1A10  0823               	movf	EEPROM_Read_String@dado,w
 10012  1A11  0084               	movwf	4
 10013  1A12  087F               	movf	127,w
 10014  1A13  1783               	bsf	3,7	;select IRP bank2
 10015  1A14  0080               	movwf	0
 10016  1A15  3001               	movlw	1
 10017  1A16  00FF               	movwf	127
 10018  1A17  087F               	movf	127,w
 10019  1A18  07A3               	addwf	EEPROM_Read_String@dado,f
 10020                           
 10021                           ;eeprom.c: 116:       }while(c);
 10022  1A19  0825               	movf	EEPROM_Read_String@c,w
 10023  1A1A  1903               	btfsc	3,2
 10024  1A1B  0008               	return
 10025  1A1C  2A00               	goto	l551
 10026  1A1D                     __end_of_EEPROM_Read_String:
 10027                           
 10028                           	psect	text37
 10029  1AFA                     __ptext37:	
 10030 ;; *************** function _EEPROM_Read_Integer *****************
 10031 ;; Defined at:
 10032 ;;		line 81 in file "eeprom.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;  addr            1    wreg     unsigned char 
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;  addr            1    6[BANK0 ] unsigned char 
 10037 ;;  result          2    8[BANK0 ] unsigned int 
 10038 ;;  i               1   10[BANK0 ] unsigned char 
 10039 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 10040 ;;		 -> EEPROM_Read_Integer@result(2), 
 10041 ;; Return value:  Size  Location     Type
 10042 ;;                  2    3[BANK0 ] unsigned int 
 10043 ;; Registers used:
 10044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10045 ;; Tracked objects:
 10046 ;;		On entry : 0/0
 10047 ;;		On exit  : B00/0
 10048 ;;		Unchanged: 0/0
 10049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10050 ;;      Params:         0       3       0       0       0
 10051 ;;      Locals:         0       5       0       0       0
 10052 ;;      Temps:          0       0       0       0       0
 10053 ;;      Totals:         0       8       0       0       0
 10054 ;;Total ram usage:        8 bytes
 10055 ;; Hardware stack levels used:    1
 10056 ;; Hardware stack levels required when called:    2
 10057 ;; This function calls:
 10058 ;;		_EEPROM_Read_Byte
 10059 ;; This function is called by:
 10060 ;;		_main
 10061 ;;		_Decodify_Command
 10062 ;; This function uses a non-reentrant model
 10063 ;;
 10064                           
 10065                           
 10066                           ;psect for function _EEPROM_Read_Integer
 10067  1AFA                     _EEPROM_Read_Integer:
 10068                           
 10069                           ;incstack = 0
 10070                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
 10071                           ;EEPROM_Read_Integer@addr stored from wreg
 10072  1AFA  1283               	bcf	3,5	;RP0=0, select bank0
 10073  1AFB  1303               	bcf	3,6	;RP1=0, select bank0
 10074  1AFC  00A6               	movwf	EEPROM_Read_Integer@addr
 10075                           
 10076                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 10077  1AFD  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 10078  1AFE  00FF               	movwf	127
 10079  1AFF  087F               	movf	127,w
 10080  1B00  00A7               	movwf	EEPROM_Read_Integer@ptr
 10081                           
 10082                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 10083  1B01  01AA               	clrf	EEPROM_Read_Integer@i
 10084  1B02                     l4717:
 10085                           
 10086                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 10087  1B02  0826               	movf	EEPROM_Read_Integer@addr,w
 10088  1B03  160A  158A  223E  160A  158A  	fcall	_EEPROM_Read_Byte
 10089  1B08  00FF               	movwf	127
 10090  1B09  1303               	bcf	3,6	;RP1=0, select bank0
 10091  1B0A  0827               	movf	EEPROM_Read_Integer@ptr,w
 10092  1B0B  0084               	movwf	4
 10093  1B0C  087F               	movf	127,w
 10094  1B0D  1383               	bcf	3,7	;select IRP bank0
 10095  1B0E  0080               	movwf	0
 10096  1B0F  3001               	movlw	1
 10097  1B10  00FF               	movwf	127
 10098  1B11  087F               	movf	127,w
 10099  1B12  07A6               	addwf	EEPROM_Read_Integer@addr,f
 10100  1B13  3001               	movlw	1
 10101  1B14  00FF               	movwf	127
 10102  1B15  087F               	movf	127,w
 10103  1B16  07A7               	addwf	EEPROM_Read_Integer@ptr,f
 10104  1B17  3001               	movlw	1
 10105  1B18  00FF               	movwf	127
 10106  1B19  087F               	movf	127,w
 10107  1B1A  07AA               	addwf	EEPROM_Read_Integer@i,f
 10108  1B1B  3002               	movlw	2
 10109  1B1C  022A               	subwf	EEPROM_Read_Integer@i,w
 10110  1B1D  1C03               	skipc
 10111  1B1E  2B02               	goto	l4717
 10112                           
 10113                           ;eeprom.c: 89:       return result;
 10114  1B1F  0829               	movf	EEPROM_Read_Integer@result+1,w
 10115  1B20  00A4               	movwf	?_EEPROM_Read_Integer+1
 10116  1B21  0828               	movf	EEPROM_Read_Integer@result,w
 10117  1B22  00A3               	movwf	?_EEPROM_Read_Integer
 10118  1B23  0008               	return
 10119  1B24                     __end_of_EEPROM_Read_Integer:
 10120                           
 10121                           	psect	text38
 10122  1A3E                     __ptext38:	
 10123 ;; *************** function _EEPROM_Read_Byte *****************
 10124 ;; Defined at:
 10125 ;;		line 52 in file "eeprom.c"
 10126 ;; Parameters:    Size  Location     Type
 10127 ;;  addr            1    wreg     unsigned char 
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;  addr            1    2[BANK0 ] unsigned char 
 10130 ;; Return value:  Size  Location     Type
 10131 ;;                  1    wreg      unsigned char 
 10132 ;; Registers used:
 10133 ;;		wreg
 10134 ;; Tracked objects:
 10135 ;;		On entry : 0/300
 10136 ;;		On exit  : 300/200
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10139 ;;      Params:         0       0       0       0       0
 10140 ;;      Locals:         0       1       0       0       0
 10141 ;;      Temps:          0       2       0       0       0
 10142 ;;      Totals:         0       3       0       0       0
 10143 ;;Total ram usage:        3 bytes
 10144 ;; Hardware stack levels used:    1
 10145 ;; Hardware stack levels required when called:    1
 10146 ;; This function calls:
 10147 ;;		Nothing
 10148 ;; This function is called by:
 10149 ;;		_Decodify_Command
 10150 ;;		_EEPROM_Read_Integer
 10151 ;;		_EEPROM_Read_String
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155                           
 10156                           ;psect for function _EEPROM_Read_Byte
 10157  1A3E                     _EEPROM_Read_Byte:
 10158                           
 10159                           ;incstack = 0
 10160                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 10161                           ;EEPROM_Read_Byte@addr stored from wreg
 10162  1A3E  1283               	bcf	3,5	;RP0=0, select bank0
 10163  1A3F  1303               	bcf	3,6	;RP1=0, select bank0
 10164  1A40  00A2               	movwf	EEPROM_Read_Byte@addr
 10165                           
 10166                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 10167  1A41  3014               	movlw	20
 10168  1A42  1683               	bsf	3,5	;RP0=1, select bank1
 10169  1A43  00DC               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 10170  1A44  3000               	movlw	0
 10171  1A45  00DD               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 10172  1A46                     l529:	
 10173                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 10174                           
 10175  1A46  1703               	bsf	3,6	;RP1=1, select bank3
 10176  1A47  188C               	btfsc	12,1	;volsfr
 10177  1A48  2A46               	goto	l529
 10178                           
 10179                           ;eeprom.c: 57:    EEADR=addr;
 10180  1A49  1283               	bcf	3,5	;RP0=0, select bank0
 10181  1A4A  1303               	bcf	3,6	;RP1=0, select bank0
 10182  1A4B  0822               	movf	EEPROM_Read_Byte@addr,w
 10183  1A4C  1703               	bsf	3,6	;RP1=1, select bank2
 10184  1A4D  008D               	movwf	13	;volatile
 10185                           
 10186                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 10187  1A4E  1683               	bsf	3,5	;RP0=1, select bank3
 10188  1A4F  138C               	bcf	12,7	;volsfr
 10189                           
 10190                           ;eeprom.c: 59:    EECON1bits.RD=1;
 10191  1A50  140C               	bsf	12,0	;volsfr
 10192                           
 10193                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 10194  1A51  304E               	movlw	78
 10195  1A52  1283               	bcf	3,5	;RP0=0, select bank0
 10196  1A53  1303               	bcf	3,6	;RP1=0, select bank0
 10197  1A54  00A1               	movwf	??_EEPROM_Read_Byte+1
 10198  1A55  30EA               	movlw	234
 10199  1A56  00A0               	movwf	??_EEPROM_Read_Byte
 10200  1A57                     u5567:
 10201  1A57  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 10202  1A58  2A57               	goto	u5567
 10203  1A59  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 10204  1A5A  2A57               	goto	u5567
 10205  1A5B  0000               	nop
 10206                           
 10207                           ;eeprom.c: 61:    return EEDATA;
 10208  1A5C  1283               	bcf	3,5	;RP0=0, select bank2
 10209  1A5D  1703               	bsf	3,6	;RP1=1, select bank2
 10210  1A5E  080C               	movf	12,w	;volatile
 10211  1A5F  0008               	return
 10212  1A60                     __end_of_EEPROM_Read_Byte:
 10213                           
 10214                           	psect	text39
 10215  1157                     __ptext39:	
 10216 ;; *************** function _EEPROM_24C1025_Write_Str *****************
 10217 ;; Defined at:
 10218 ;;		line 220 in file "EEPROM_24C1025.c"
 10219 ;; Parameters:    Size  Location     Type
 10220 ;;  chip_add        1    wreg     unsigned char 
 10221 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10222 ;;  data            1   14[BANK0 ] PTR unsigned char 
 10223 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
 10224 ;; Auto vars:     Size  Location     Type
 10225 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10226 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10227 ;;  range           1   18[BANK0 ] unsigned char 
 10228 ;; Return value:  Size  Location     Type
 10229 ;;                  1    wreg      void 
 10230 ;; Registers used:
 10231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10232 ;; Tracked objects:
 10233 ;;		On entry : 300/300
 10234 ;;		On exit  : 300/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10237 ;;      Params:         0       5       0       0       0
 10238 ;;      Locals:         0       3       0       0       0
 10239 ;;      Temps:          0       2       0       0       0
 10240 ;;      Totals:         0      10       0       0       0
 10241 ;;Total ram usage:       10 bytes
 10242 ;; Hardware stack levels used:    1
 10243 ;; Hardware stack levels required when called:    3
 10244 ;; This function calls:
 10245 ;;		_I2C_Master_Start
 10246 ;;		_I2C_Master_Stop
 10247 ;;		_I2C_Master_Write
 10248 ;;		_my_delay_ms_WDT
 10249 ;; This function is called by:
 10250 ;;		_Decodify_Command
 10251 ;; This function uses a non-reentrant model
 10252 ;;
 10253                           
 10254                           
 10255                           ;psect for function _EEPROM_24C1025_Write_Str
 10256  1157                     _EEPROM_24C1025_Write_Str:
 10257                           
 10258                           ;incstack = 0
 10259                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10260                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 10261  1157  1283               	bcf	3,5	;RP0=0, select bank0
 10262  1158  1303               	bcf	3,6	;RP1=0, select bank0
 10263  1159  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
 10264                           
 10265                           ;EEPROM_24C1025.c: 222:      unsigned char ctrl;;EEPROM_24C1025.c: 224:      if(mem_add>
      +                          0x1FFFF) return;
 10266  115A  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10267  115B  1D03               	btfss	3,2
 10268  115C  0008               	return
 10269  115D  3002               	movlw	2
 10270  115E  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10271  115F  1D03               	skipz
 10272  1160  2969               	goto	u4223
 10273  1161  3000               	movlw	0
 10274  1162  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10275  1163  1D03               	skipz
 10276  1164  2969               	goto	u4223
 10277  1165  3000               	movlw	0
 10278  1166  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10279  1167  1D03               	skipz
 10280  1168  2969               	goto	u4223
 10281  1169                     u4223:
 10282  1169  1803               	btfsc	3,0
 10283  116A  0008               	return
 10284  116B                     L12:
 10285                           
 10286                           ;EEPROM_24C1025.c: 226:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10287  116B  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10288  116C  1D03               	btfss	3,2
 10289  116D  297C               	goto	l4519
 10290  116E  3001               	movlw	1
 10291  116F  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10292  1170  1D03               	skipz
 10293  1171  297A               	goto	u4233
 10294  1172  3000               	movlw	0
 10295  1173  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10296  1174  1D03               	skipz
 10297  1175  297A               	goto	u4233
 10298  1176  3000               	movlw	0
 10299  1177  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10300  1178  1D03               	skipz
 10301  1179  297A               	goto	u4233
 10302  117A                     u4233:
 10303  117A  1C03               	btfss	3,0
 10304  117B  2981               	goto	l4521
 10305  117C                     l4519:
 10306  117C  3008               	movlw	8
 10307  117D  00FF               	movwf	127
 10308  117E  087F               	movf	127,w
 10309  117F  00B2               	movwf	EEPROM_24C1025_Write_Str@range
 10310  1180  2982               	goto	l4523
 10311  1181                     l4521:
 10312  1181  01B2               	clrf	EEPROM_24C1025_Write_Str@range
 10313  1182                     l4523:
 10314                           
 10315                           ;EEPROM_24C1025.c: 227:      ctrl=chip_add;
 10316  1182  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 10317  1183  00FF               	movwf	127
 10318  1184  087F               	movf	127,w
 10319  1185  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
 10320                           
 10321                           ;EEPROM_24C1025.c: 228:      ctrl<<=1;
 10322  1186  1003               	clrc
 10323  1187  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 10324                           
 10325                           ;EEPROM_24C1025.c: 229:      ctrl |= 0xA0;
 10326  1188  30A0               	movlw	160
 10327  1189  00FF               	movwf	127
 10328  118A  087F               	movf	127,w
 10329  118B  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10330                           
 10331                           ;EEPROM_24C1025.c: 230:      ctrl |= range;
 10332  118C  0832               	movf	EEPROM_24C1025_Write_Str@range,w
 10333  118D  00FF               	movwf	127
 10334  118E  087F               	movf	127,w
 10335  118F  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10336                           
 10337                           ;EEPROM_24C1025.c: 232:      I2C_Master_Start();
 10338  1190  160A  158A  20EE  160A  118A  	fcall	_I2C_Master_Start
 10339                           
 10340                           ;EEPROM_24C1025.c: 233:      I2C_Master_Write(ctrl);
 10341  1195  1283               	bcf	3,5	;RP0=0, select bank0
 10342  1196  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 10343  1197  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10344  1198  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10345  1199  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10346  119A  00A3               	movwf	I2C_Master_Write@d
 10347  119B  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10348  119C  00A4               	movwf	I2C_Master_Write@d+1
 10349  119D  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 10350                           
 10351                           ;EEPROM_24C1025.c: 234:      I2C_Master_Write(((char *)&mem_add)[1]);
 10352  11A2  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10353  11A3  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10354  11A4  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10355  11A5  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10356  11A6  00A3               	movwf	I2C_Master_Write@d
 10357  11A7  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10358  11A8  00A4               	movwf	I2C_Master_Write@d+1
 10359  11A9  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 10360                           
 10361                           ;EEPROM_24C1025.c: 235:      I2C_Master_Write(((char *)&mem_add)[0]);
 10362  11AE  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10363  11AF  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10364  11B0  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10365  11B1  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10366  11B2  00A3               	movwf	I2C_Master_Write@d
 10367  11B3  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10368  11B4  00A4               	movwf	I2C_Master_Write@d+1
 10369  11B5  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 10370  11BA                     l4583:	
 10371                           ;EEPROM_24C1025.c: 236:      while(*data)
 10372                           
 10373                           
 10374                           ;EEPROM_24C1025.c: 236:      while(*data)
 10375  11BA  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10376  11BB  0084               	movwf	4
 10377  11BC  1783               	bsf	3,7	;select IRP bank2
 10378  11BD  0800               	movf	0,w
 10379  11BE  1903               	btfsc	3,2
 10380  11BF  2A30               	goto	l4585
 10381  11C0  0064               	clrwdt	;# 
 10382                           
 10383                           ;EEPROM_24C1025.c: 239:           if(mem_add>0x1FFFF) return;
 10384  11C1  1283               	bcf	3,5	;RP0=0, select bank0
 10385  11C2  1303               	bcf	3,6	;RP1=0, select bank0
 10386  11C3  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10387  11C4  1D03               	btfss	3,2
 10388  11C5  0008               	return
 10389  11C6  3002               	movlw	2
 10390  11C7  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10391  11C8  1D03               	skipz
 10392  11C9  29D2               	goto	u4243
 10393  11CA  3000               	movlw	0
 10394  11CB  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10395  11CC  1D03               	skipz
 10396  11CD  29D2               	goto	u4243
 10397  11CE  3000               	movlw	0
 10398  11CF  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10399  11D0  1D03               	skipz
 10400  11D1  29D2               	goto	u4243
 10401  11D2                     u4243:
 10402  11D2  1803               	btfsc	3,0
 10403  11D3  0008               	return
 10404                           
 10405                           ;EEPROM_24C1025.c: 240:           if((mem_add+1)%128==0)
 10406  11D4  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10407  11D5  3E01               	addlw	1
 10408  11D6  397F               	andlw	127
 10409  11D7  1D03               	btfss	3,2
 10410  11D8  2A0E               	goto	l4577
 10411                           
 10412                           ;EEPROM_24C1025.c: 241:             {;EEPROM_24C1025.c: 242:             I2C_Master_Writ
      +                          e(*data);
 10413  11D9  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10414  11DA  0084               	movwf	4
 10415  11DB  1783               	bsf	3,7	;select IRP bank2
 10416  11DC  0800               	movf	0,w
 10417  11DD  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10418  11DE  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10419  11DF  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10420  11E0  00A3               	movwf	I2C_Master_Write@d
 10421  11E1  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10422  11E2  00A4               	movwf	I2C_Master_Write@d+1
 10423  11E3  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 10424                           
 10425                           ;EEPROM_24C1025.c: 243:             I2C_Master_Stop();
 10426  11E8  160A  158A  20B7  160A  118A  	fcall	_I2C_Master_Stop
 10427                           
 10428                           ;EEPROM_24C1025.c: 245:             my_delay_ms_WDT(5);
 10429  11ED  3000               	movlw	0
 10430  11EE  1283               	bcf	3,5	;RP0=0, select bank0
 10431  11EF  00A3               	movwf	my_delay_ms_WDT@time+3
 10432  11F0  3000               	movlw	0
 10433  11F1  00A2               	movwf	my_delay_ms_WDT@time+2
 10434  11F2  3000               	movlw	0
 10435  11F3  00A1               	movwf	my_delay_ms_WDT@time+1
 10436  11F4  3005               	movlw	5
 10437  11F5  00A0               	movwf	my_delay_ms_WDT@time
 10438  11F6  160A  158A  24B1  160A  118A  	fcall	_my_delay_ms_WDT
 10439                           
 10440                           ;EEPROM_24C1025.c: 246:             mem_add++;
 10441  11FB  3001               	movlw	1
 10442  11FC  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10443  11FD  3000               	movlw	0
 10444  11FE  1803               	skipnc
 10445  11FF  3001               	movlw	1
 10446  1200  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10447  1201  3000               	movlw	0
 10448  1202  1803               	skipnc
 10449  1203  3001               	movlw	1
 10450  1204  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10451  1205  3000               	movlw	0
 10452  1206  1803               	skipnc
 10453  1207  3001               	movlw	1
 10454  1208  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10455                           
 10456                           ;EEPROM_24C1025.c: 247:             data++;
 10457  1209  3001               	movlw	1
 10458  120A  00FF               	movwf	127
 10459  120B  087F               	movf	127,w
 10460  120C  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10461  120D  296B               	goto	L12
 10462  120E                     l4577:	
 10463                           ;EEPROM_24C1025.c: 248:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10464                           
 10465                           
 10466                           ;EEPROM_24C1025.c: 260:             {;EEPROM_24C1025.c: 261:             I2C_Master_Writ
      +                          e(*data);
 10467  120E  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10468  120F  0084               	movwf	4
 10469  1210  1783               	bsf	3,7	;select IRP bank2
 10470  1211  0800               	movf	0,w
 10471  1212  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10472  1213  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10473  1214  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10474  1215  00A3               	movwf	I2C_Master_Write@d
 10475  1216  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10476  1217  00A4               	movwf	I2C_Master_Write@d+1
 10477  1218  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 10478                           
 10479                           ;EEPROM_24C1025.c: 262:             data++;
 10480  121D  3001               	movlw	1
 10481  121E  00FF               	movwf	127
 10482  121F  087F               	movf	127,w
 10483  1220  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10484                           
 10485                           ;EEPROM_24C1025.c: 263:             mem_add++;
 10486  1221  3001               	movlw	1
 10487  1222  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10488  1223  3000               	movlw	0
 10489  1224  1803               	skipnc
 10490  1225  3001               	movlw	1
 10491  1226  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10492  1227  3000               	movlw	0
 10493  1228  1803               	skipnc
 10494  1229  3001               	movlw	1
 10495  122A  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10496  122B  3000               	movlw	0
 10497  122C  1803               	skipnc
 10498  122D  3001               	movlw	1
 10499  122E  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10500  122F  29BA               	goto	l4583
 10501  1230                     l4585:
 10502                           
 10503                           ;EEPROM_24C1025.c: 266:      I2C_Master_Write(0);
 10504  1230  3000               	movlw	0
 10505  1231  00A3               	movwf	I2C_Master_Write@d
 10506  1232  00A4               	movwf	I2C_Master_Write@d+1
 10507  1233  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 10508                           
 10509                           ;EEPROM_24C1025.c: 267:      I2C_Master_Stop();
 10510  1238  160A  158A  20B7  160A  118A  	fcall	_I2C_Master_Stop
 10511                           
 10512                           ;EEPROM_24C1025.c: 268:      my_delay_ms_WDT(5);
 10513  123D  3000               	movlw	0
 10514  123E  1283               	bcf	3,5	;RP0=0, select bank0
 10515  123F  00A3               	movwf	my_delay_ms_WDT@time+3
 10516  1240  3000               	movlw	0
 10517  1241  00A2               	movwf	my_delay_ms_WDT@time+2
 10518  1242  3000               	movlw	0
 10519  1243  00A1               	movwf	my_delay_ms_WDT@time+1
 10520  1244  3005               	movlw	5
 10521  1245  00A0               	movwf	my_delay_ms_WDT@time
 10522  1246  160A  158A  24B1   	fcall	_my_delay_ms_WDT
 10523  1249  0008               	return
 10524  124A                     __end_of_EEPROM_24C1025_Write_Str:
 10525                           
 10526                           	psect	text40
 10527  1914                     __ptext40:	
 10528 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 10529 ;; Defined at:
 10530 ;;		line 341 in file "EEPROM_24C1025.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;  chip_add        1    wreg     unsigned char 
 10533 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10534 ;;  data            1   27[BANK0 ] unsigned char 
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  1    wreg      void 
 10539 ;; Registers used:
 10540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10541 ;; Tracked objects:
 10542 ;;		On entry : 300/300
 10543 ;;		On exit  : 300/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10546 ;;      Params:         0       5       0       0       0
 10547 ;;      Locals:         0       1       0       0       0
 10548 ;;      Temps:          0       0       0       0       0
 10549 ;;      Totals:         0       6       0       0       0
 10550 ;;Total ram usage:        6 bytes
 10551 ;; Hardware stack levels used:    1
 10552 ;; Hardware stack levels required when called:    4
 10553 ;; This function calls:
 10554 ;;		_EEPROM_24C1025_Write_Buffer
 10555 ;; This function is called by:
 10556 ;;		_Decodify_Command
 10557 ;; This function uses a non-reentrant model
 10558 ;;
 10559                           
 10560                           
 10561                           ;psect for function _EEPROM_24C1025_Write_Byte
 10562  1914                     _EEPROM_24C1025_Write_Byte:
 10563                           
 10564                           ;incstack = 0
 10565                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
 10566                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 10567  1914  1283               	bcf	3,5	;RP0=0, select bank0
 10568  1915  1303               	bcf	3,6	;RP1=0, select bank0
 10569  1916  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 10570                           
 10571                           ;EEPROM_24C1025.c: 342:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 10572  1917  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 10573  1918  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10574  1919  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 10575  191A  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10576  191B  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 10577  191C  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10578  191D  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 10579  191E  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10580  191F  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 10581  1920  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 10582  1921  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 10583  1922  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 10584  1923  3000               	movlw	0
 10585  1924  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 10586  1925  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 10587  1926  160A  118A  224A   	fcall	_EEPROM_24C1025_Write_Buffer
 10588  1929  0008               	return
 10589  192A                     __end_of_EEPROM_24C1025_Write_Byte:
 10590                           
 10591                           	psect	text41
 10592  13B4                     __ptext41:	
 10593 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10594 ;; Defined at:
 10595 ;;		line 275 in file "EEPROM_24C1025.c"
 10596 ;; Parameters:    Size  Location     Type
 10597 ;;  chip_add        1    wreg     unsigned char 
 10598 ;;  mem_add         4    9[BANK0 ] unsigned long 
 10599 ;;  buffer          1   13[BANK0 ] PTR unsigned char 
 10600 ;;		 -> buffer(33), 
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10603 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10604 ;;  range           1   18[BANK0 ] unsigned char 
 10605 ;;  cnt             1   16[BANK0 ] unsigned char 
 10606 ;; Return value:  Size  Location     Type
 10607 ;;                  1    wreg      void 
 10608 ;; Registers used:
 10609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10610 ;; Tracked objects:
 10611 ;;		On entry : 300/300
 10612 ;;		On exit  : 0/0
 10613 ;;		Unchanged: 0/0
 10614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10615 ;;      Params:         0       5       0       0       0
 10616 ;;      Locals:         0       4       0       0       0
 10617 ;;      Temps:          0       2       0       0       0
 10618 ;;      Totals:         0      11       0       0       0
 10619 ;;Total ram usage:       11 bytes
 10620 ;; Hardware stack levels used:    1
 10621 ;; Hardware stack levels required when called:    3
 10622 ;; This function calls:
 10623 ;;		_I2C_Master_Read
 10624 ;;		_I2C_Master_RepeatedStart
 10625 ;;		_I2C_Master_Start
 10626 ;;		_I2C_Master_Stop
 10627 ;;		_I2C_Master_Write
 10628 ;; This function is called by:
 10629 ;;		_Decodify_Command
 10630 ;; This function uses a non-reentrant model
 10631 ;;
 10632                           
 10633                           
 10634                           ;psect for function _EEPROM_24C1025_Read_Str
 10635  13B4                     _EEPROM_24C1025_Read_Str:
 10636                           
 10637                           ;incstack = 0
 10638                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10639                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10640  13B4  1283               	bcf	3,5	;RP0=0, select bank0
 10641  13B5  1303               	bcf	3,6	;RP1=0, select bank0
 10642  13B6  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10643                           
 10644                           ;EEPROM_24C1025.c: 277:      unsigned char range=0;
 10645  13B7  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10646                           
 10647                           ;EEPROM_24C1025.c: 278:      unsigned char ctrl;;EEPROM_24C1025.c: 280:      if(mem_add>
      +                          0x1FFFF) return;
 10648  13B8  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10649  13B9  1D03               	btfss	3,2
 10650  13BA  0008               	return
 10651  13BB  3002               	movlw	2
 10652  13BC  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10653  13BD  1D03               	skipz
 10654  13BE  2BC7               	goto	u4283
 10655  13BF  3000               	movlw	0
 10656  13C0  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10657  13C1  1D03               	skipz
 10658  13C2  2BC7               	goto	u4283
 10659  13C3  3000               	movlw	0
 10660  13C4  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10661  13C5  1D03               	skipz
 10662  13C6  2BC7               	goto	u4283
 10663  13C7                     u4283:
 10664  13C7  1803               	btfsc	3,0
 10665  13C8  0008               	return
 10666                           
 10667                           ;EEPROM_24C1025.c: 282:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10668  13C9  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10669  13CA  1D03               	btfss	3,2
 10670  13CB  2BDA               	goto	l4595
 10671  13CC  3001               	movlw	1
 10672  13CD  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10673  13CE  1D03               	skipz
 10674  13CF  2BD8               	goto	u4293
 10675  13D0  3000               	movlw	0
 10676  13D1  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10677  13D2  1D03               	skipz
 10678  13D3  2BD8               	goto	u4293
 10679  13D4  3000               	movlw	0
 10680  13D5  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10681  13D6  1D03               	skipz
 10682  13D7  2BD8               	goto	u4293
 10683  13D8                     u4293:
 10684  13D8  1C03               	btfss	3,0
 10685  13D9  2BDF               	goto	l4597
 10686  13DA                     l4595:
 10687  13DA  3008               	movlw	8
 10688  13DB  00FF               	movwf	127
 10689  13DC  087F               	movf	127,w
 10690  13DD  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10691  13DE  2BE0               	goto	l4599
 10692  13DF                     l4597:
 10693  13DF  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10694  13E0                     l4599:
 10695                           
 10696                           ;EEPROM_24C1025.c: 283:      ctrl=chip_add;
 10697  13E0  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10698  13E1  00FF               	movwf	127
 10699  13E2  087F               	movf	127,w
 10700  13E3  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10701                           
 10702                           ;EEPROM_24C1025.c: 284:      ctrl<<=1;
 10703  13E4  1003               	clrc
 10704  13E5  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10705                           
 10706                           ;EEPROM_24C1025.c: 285:      ctrl |= 0xA0;
 10707  13E6  30A0               	movlw	160
 10708  13E7  00FF               	movwf	127
 10709  13E8  087F               	movf	127,w
 10710  13E9  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10711                           
 10712                           ;EEPROM_24C1025.c: 286:      ctrl |= 0b00000001;
 10713  13EA  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10714                           
 10715                           ;EEPROM_24C1025.c: 287:      ctrl |= range;
 10716  13EB  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10717  13EC  00FF               	movwf	127
 10718  13ED  087F               	movf	127,w
 10719  13EE  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10720                           
 10721                           ;EEPROM_24C1025.c: 289:      I2C_Master_Start();
 10722  13EF  160A  158A  20EE  160A  118A  	fcall	_I2C_Master_Start
 10723                           
 10724                           ;EEPROM_24C1025.c: 290:      I2C_Master_Write(ctrl & 0xFE);
 10725  13F4  1283               	bcf	3,5	;RP0=0, select bank0
 10726  13F5  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10727  13F6  39FE               	andlw	254
 10728  13F7  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10729  13F8  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10730  13F9  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10731  13FA  00A3               	movwf	I2C_Master_Write@d
 10732  13FB  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10733  13FC  00A4               	movwf	I2C_Master_Write@d+1
 10734  13FD  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 10735                           
 10736                           ;EEPROM_24C1025.c: 291:      I2C_Master_Write(((char *)&mem_add)[1]);
 10737  1402  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10738  1403  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10739  1404  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10740  1405  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10741  1406  00A3               	movwf	I2C_Master_Write@d
 10742  1407  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10743  1408  00A4               	movwf	I2C_Master_Write@d+1
 10744  1409  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 10745                           
 10746                           ;EEPROM_24C1025.c: 292:      I2C_Master_Write(((char *)&mem_add)[0]);
 10747  140E  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10748  140F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10749  1410  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10750  1411  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10751  1412  00A3               	movwf	I2C_Master_Write@d
 10752  1413  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10753  1414  00A4               	movwf	I2C_Master_Write@d+1
 10754  1415  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 10755                           
 10756                           ;EEPROM_24C1025.c: 293:      I2C_Master_RepeatedStart();
 10757  141A  120A  118A  27F4  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10758                           
 10759                           ;EEPROM_24C1025.c: 294:      I2C_Master_Write(ctrl);
 10760  141F  1283               	bcf	3,5	;RP0=0, select bank0
 10761  1420  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10762  1421  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10763  1422  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10764  1423  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10765  1424  00A3               	movwf	I2C_Master_Write@d
 10766  1425  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10767  1426  00A4               	movwf	I2C_Master_Write@d+1
 10768  1427  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 10769                           
 10770                           ;EEPROM_24C1025.c: 296:      cnt=0;
 10771  142C  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
 10772  142D                     l4623:
 10773                           
 10774                           ;EEPROM_24C1025.c: 298:            if(mem_add>0x1FFFF) break;
 10775  142D  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10776  142E  1D03               	btfss	3,2
 10777  142F  2D09               	goto	l4679
 10778  1430  3002               	movlw	2
 10779  1431  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10780  1432  1D03               	skipz
 10781  1433  2C3C               	goto	u4303
 10782  1434  3000               	movlw	0
 10783  1435  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10784  1436  1D03               	skipz
 10785  1437  2C3C               	goto	u4303
 10786  1438  3000               	movlw	0
 10787  1439  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10788  143A  1D03               	skipz
 10789  143B  2C3C               	goto	u4303
 10790  143C                     u4303:
 10791  143C  1803               	btfsc	3,0
 10792  143D  2D09               	goto	l4679
 10793                           
 10794                           ;EEPROM_24C1025.c: 299:            if((mem_add+1)%128==0)
 10795  143E  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10796  143F  3E01               	addlw	1
 10797  1440  397F               	andlw	127
 10798  1441  1D03               	btfss	3,2
 10799  1442  2CD9               	goto	l4667
 10800                           
 10801                           ;EEPROM_24C1025.c: 300:              {;EEPROM_24C1025.c: 301:              (*buffer)=I2C
      +                          _Master_Read(0);
 10802  1443  3000               	movlw	0
 10803  1444  00A3               	movwf	I2C_Master_Read@a
 10804  1445  00A4               	movwf	I2C_Master_Read@a+1
 10805  1446  160A  158A  240F  160A  118A  	fcall	_I2C_Master_Read
 10806  144B  0823               	movf	?_I2C_Master_Read,w
 10807  144C  00FF               	movwf	127
 10808  144D  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10809  144E  0084               	movwf	4
 10810  144F  087F               	movf	127,w
 10811  1450  1783               	bsf	3,7	;select IRP bank2
 10812  1451  0080               	movwf	0
 10813                           
 10814                           ;EEPROM_24C1025.c: 302:              I2C_Master_Stop();
 10815  1452  160A  158A  20B7  160A  118A  	fcall	_I2C_Master_Stop
 10816                           
 10817                           ;EEPROM_24C1025.c: 304:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10818  1457  300D               	movlw	13
 10819  1458  1283               	bcf	3,5	;RP0=0, select bank0
 10820  1459  1303               	bcf	3,6	;RP1=0, select bank0
 10821  145A  00AF               	movwf	??_EEPROM_24C1025_Read_Str+1
 10822  145B  30FB               	movlw	251
 10823  145C  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10824  145D                     u5577:
 10825  145D  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10826  145E  2C5D               	goto	u5577
 10827  145F  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10828  1460  2C5D               	goto	u5577
 10829                           
 10830                           ;EEPROM_24C1025.c: 305:              mem_add++;
 10831  1461  3001               	movlw	1
 10832  1462  1283               	bcf	3,5	;RP0=0, select bank0
 10833  1463  1303               	bcf	3,6	;RP1=0, select bank0
 10834  1464  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10835  1465  3000               	movlw	0
 10836  1466  1803               	skipnc
 10837  1467  3001               	movlw	1
 10838  1468  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10839  1469  3000               	movlw	0
 10840  146A  1803               	skipnc
 10841  146B  3001               	movlw	1
 10842  146C  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10843  146D  3000               	movlw	0
 10844  146E  1803               	skipnc
 10845  146F  3001               	movlw	1
 10846  1470  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10847                           
 10848                           ;EEPROM_24C1025.c: 306:              buffer++;
 10849  1471  3001               	movlw	1
 10850  1472  00FF               	movwf	127
 10851  1473  087F               	movf	127,w
 10852  1474  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10853                           
 10854                           ;EEPROM_24C1025.c: 307:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10855  1475  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10856  1476  1D03               	btfss	3,2
 10857  1477  2C86               	goto	l4641
 10858  1478  3001               	movlw	1
 10859  1479  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10860  147A  1D03               	skipz
 10861  147B  2C84               	goto	u4323
 10862  147C  3000               	movlw	0
 10863  147D  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10864  147E  1D03               	skipz
 10865  147F  2C84               	goto	u4323
 10866  1480  3000               	movlw	0
 10867  1481  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10868  1482  1D03               	skipz
 10869  1483  2C84               	goto	u4323
 10870  1484                     u4323:
 10871  1484  1C03               	btfss	3,0
 10872  1485  2C8B               	goto	l4643
 10873  1486                     l4641:
 10874  1486  3008               	movlw	8
 10875  1487  00FF               	movwf	127
 10876  1488  087F               	movf	127,w
 10877  1489  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10878  148A  2C8C               	goto	l4645
 10879  148B                     l4643:
 10880  148B  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10881  148C                     l4645:
 10882                           
 10883                           ;EEPROM_24C1025.c: 308:              ctrl=chip_add;
 10884  148C  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10885  148D  00FF               	movwf	127
 10886  148E  087F               	movf	127,w
 10887  148F  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10888                           
 10889                           ;EEPROM_24C1025.c: 309:              ctrl<<=1;
 10890  1490  1003               	clrc
 10891  1491  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10892                           
 10893                           ;EEPROM_24C1025.c: 310:              ctrl |= 0xA0;
 10894  1492  30A0               	movlw	160
 10895  1493  00FF               	movwf	127
 10896  1494  087F               	movf	127,w
 10897  1495  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10898                           
 10899                           ;EEPROM_24C1025.c: 311:              ctrl |= 0b00000001;
 10900  1496  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10901                           
 10902                           ;EEPROM_24C1025.c: 312:              ctrl |= range;
 10903  1497  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10904  1498  00FF               	movwf	127
 10905  1499  087F               	movf	127,w
 10906  149A  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10907                           
 10908                           ;EEPROM_24C1025.c: 314:              I2C_Master_Start();
 10909  149B  160A  158A  20EE  160A  118A  	fcall	_I2C_Master_Start
 10910                           
 10911                           ;EEPROM_24C1025.c: 315:              I2C_Master_Write(ctrl & 0xFE);
 10912  14A0  1283               	bcf	3,5	;RP0=0, select bank0
 10913  14A1  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10914  14A2  39FE               	andlw	254
 10915  14A3  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10916  14A4  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10917  14A5  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10918  14A6  00A3               	movwf	I2C_Master_Write@d
 10919  14A7  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10920  14A8  00A4               	movwf	I2C_Master_Write@d+1
 10921  14A9  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 10922                           
 10923                           ;EEPROM_24C1025.c: 316:              I2C_Master_Write(((char *)&mem_add)[1]);
 10924  14AE  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10925  14AF  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10926  14B0  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10927  14B1  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10928  14B2  00A3               	movwf	I2C_Master_Write@d
 10929  14B3  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10930  14B4  00A4               	movwf	I2C_Master_Write@d+1
 10931  14B5  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 10932                           
 10933                           ;EEPROM_24C1025.c: 317:              I2C_Master_Write(((char *)&mem_add)[0]);
 10934  14BA  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10935  14BB  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10936  14BC  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10937  14BD  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10938  14BE  00A3               	movwf	I2C_Master_Write@d
 10939  14BF  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10940  14C0  00A4               	movwf	I2C_Master_Write@d+1
 10941  14C1  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 10942                           
 10943                           ;EEPROM_24C1025.c: 318:              I2C_Master_RepeatedStart();
 10944  14C6  120A  118A  27F4  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10945                           
 10946                           ;EEPROM_24C1025.c: 319:              I2C_Master_Write(ctrl);
 10947  14CB  1283               	bcf	3,5	;RP0=0, select bank0
 10948  14CC  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10949  14CD  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10950  14CE  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10951  14CF  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10952  14D0  00A3               	movwf	I2C_Master_Write@d
 10953  14D1  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10954  14D2  00A4               	movwf	I2C_Master_Write@d+1
 10955  14D3  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 10956                           
 10957                           ;EEPROM_24C1025.c: 320:              }
 10958  14D8  2D00               	goto	l4677
 10959  14D9                     l4667:
 10960                           
 10961                           ;EEPROM_24C1025.c: 322:              {;EEPROM_24C1025.c: 323:              (*buffer)=I2C
      +                          _Master_Read(1);
 10962  14D9  3001               	movlw	1
 10963  14DA  00A3               	movwf	I2C_Master_Read@a
 10964  14DB  3000               	movlw	0
 10965  14DC  00A4               	movwf	I2C_Master_Read@a+1
 10966  14DD  160A  158A  240F  160A  118A  	fcall	_I2C_Master_Read
 10967  14E2  0823               	movf	?_I2C_Master_Read,w
 10968  14E3  00FF               	movwf	127
 10969  14E4  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10970  14E5  0084               	movwf	4
 10971  14E6  087F               	movf	127,w
 10972  14E7  1783               	bsf	3,7	;select IRP bank2
 10973  14E8  0080               	movwf	0
 10974                           
 10975                           ;EEPROM_24C1025.c: 324:              if((*buffer)==0)break;
 10976  14E9  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10977  14EA  0084               	movwf	4
 10978  14EB  0800               	movf	0,w
 10979  14EC  1903               	btfsc	3,2
 10980  14ED  2D09               	goto	l4679
 10981                           
 10982                           ;EEPROM_24C1025.c: 325:              buffer++;
 10983  14EE  3001               	movlw	1
 10984  14EF  00FF               	movwf	127
 10985  14F0  087F               	movf	127,w
 10986  14F1  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10987                           
 10988                           ;EEPROM_24C1025.c: 326:              mem_add++;
 10989  14F2  3001               	movlw	1
 10990  14F3  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10991  14F4  3000               	movlw	0
 10992  14F5  1803               	skipnc
 10993  14F6  3001               	movlw	1
 10994  14F7  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10995  14F8  3000               	movlw	0
 10996  14F9  1803               	skipnc
 10997  14FA  3001               	movlw	1
 10998  14FB  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10999  14FC  3000               	movlw	0
 11000  14FD  1803               	skipnc
 11001  14FE  3001               	movlw	1
 11002  14FF  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 11003  1500                     l4677:
 11004                           
 11005                           ;EEPROM_24C1025.c: 328:        }while((cnt++)<64);
 11006  1500  3001               	movlw	1
 11007  1501  07B0               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 11008  1502  30FF               	movlw	-1
 11009  1503  0730               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 11010  1504  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 11011  1505  3040               	movlw	64
 11012  1506  022E               	subwf	??_EEPROM_24C1025_Read_Str,w
 11013  1507  1C03               	skipc
 11014  1508  2C2D               	goto	l4623
 11015  1509                     l4679:
 11016                           
 11017                           ;EEPROM_24C1025.c: 330:      I2C_Master_Read(0);
 11018  1509  3000               	movlw	0
 11019  150A  00A3               	movwf	I2C_Master_Read@a
 11020  150B  00A4               	movwf	I2C_Master_Read@a+1
 11021  150C  160A  158A  240F  160A  118A  	fcall	_I2C_Master_Read
 11022                           
 11023                           ;EEPROM_24C1025.c: 331:      I2C_Master_Stop();
 11024  1511  160A  158A  20B7  160A  118A  	fcall	_I2C_Master_Stop
 11025                           
 11026                           ;EEPROM_24C1025.c: 332:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 11027  1516  30B9               	movlw	185
 11028  1517  1283               	bcf	3,5	;RP0=0, select bank0
 11029  1518  1303               	bcf	3,6	;RP1=0, select bank0
 11030  1519  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 11031  151A                     u5587:
 11032  151A  2D1B               	nop2
 11033  151B  2D1C               	nop2
 11034  151C  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 11035  151D  2D1A               	goto	u5587
 11036  151E  2D1F               	nop2
 11037  151F  0008               	return
 11038  1520                     __end_of_EEPROM_24C1025_Read_Str:
 11039                           
 11040                           	psect	text42
 11041  1AAA                     __ptext42:	
 11042 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 11043 ;; Defined at:
 11044 ;;		line 360 in file "EEPROM_24C1025.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;  chip_add        1    wreg     unsigned char 
 11047 ;;  mem_add         4   23[BANK0 ] unsigned long 
 11048 ;; Auto vars:     Size  Location     Type
 11049 ;;  chip_add        1   29[BANK0 ] unsigned char 
 11050 ;;  data            2   30[BANK0 ] unsigned char [2]
 11051 ;; Return value:  Size  Location     Type
 11052 ;;                  2   23[BANK0 ] unsigned int 
 11053 ;; Registers used:
 11054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11055 ;; Tracked objects:
 11056 ;;		On entry : 300/300
 11057 ;;		On exit  : 300/0
 11058 ;;		Unchanged: 0/0
 11059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11060 ;;      Params:         0       4       0       0       0
 11061 ;;      Locals:         0       3       0       0       0
 11062 ;;      Temps:          0       2       0       0       0
 11063 ;;      Totals:         0       9       0       0       0
 11064 ;;Total ram usage:        9 bytes
 11065 ;; Hardware stack levels used:    1
 11066 ;; Hardware stack levels required when called:    4
 11067 ;; This function calls:
 11068 ;;		_EEPROM_24C1025_Read_Buffer
 11069 ;; This function is called by:
 11070 ;;		_Decodify_Command
 11071 ;; This function uses a non-reentrant model
 11072 ;;
 11073                           
 11074                           
 11075                           ;psect for function _EEPROM_24C1025_Read_Int
 11076  1AAA                     _EEPROM_24C1025_Read_Int:
 11077                           
 11078                           ;incstack = 0
 11079                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11080                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 11081  1AAA  1283               	bcf	3,5	;RP0=0, select bank0
 11082  1AAB  1303               	bcf	3,6	;RP1=0, select bank0
 11083  1AAC  00BD               	movwf	EEPROM_24C1025_Read_Int@chip_add
 11084                           
 11085                           ;EEPROM_24C1025.c: 361:     char data[2];;EEPROM_24C1025.c: 362:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 11086  1AAD  083A               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 11087  1AAE  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11088  1AAF  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 11089  1AB0  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11090  1AB1  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 11091  1AB2  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11092  1AB3  0837               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 11093  1AB4  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11094  1AB5  3002               	movlw	2
 11095  1AB6  00FF               	movwf	127
 11096  1AB7  087F               	movf	127,w
 11097  1AB8  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 11098  1AB9  303E               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 11099  1ABA  00FF               	movwf	127
 11100  1ABB  087F               	movf	127,w
 11101  1ABC  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11102  1ABD  083D               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 11103  1ABE  160A  118A  2690   	fcall	_EEPROM_24C1025_Read_Buffer
 11104                           
 11105                           ;EEPROM_24C1025.c: 363:     return (data[0]<<8)+data[1];
 11106  1AC1  1283               	bcf	3,5	;RP0=0, select bank0
 11107  1AC2  1303               	bcf	3,6	;RP1=0, select bank0
 11108  1AC3  083E               	movf	EEPROM_24C1025_Read_Int@data,w
 11109  1AC4  00BB               	movwf	??_EEPROM_24C1025_Read_Int
 11110  1AC5  01BC               	clrf	??_EEPROM_24C1025_Read_Int+1
 11111  1AC6  083B               	movf	??_EEPROM_24C1025_Read_Int,w
 11112  1AC7  00BC               	movwf	??_EEPROM_24C1025_Read_Int+1
 11113  1AC8  01BB               	clrf	??_EEPROM_24C1025_Read_Int
 11114  1AC9  083F               	movf	EEPROM_24C1025_Read_Int@data+1,w
 11115  1ACA  073B               	addwf	??_EEPROM_24C1025_Read_Int,w
 11116  1ACB  00B7               	movwf	?_EEPROM_24C1025_Read_Int
 11117  1ACC  3000               	movlw	0
 11118  1ACD  1803               	skipnc
 11119  1ACE  3001               	movlw	1
 11120  1ACF  073C               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 11121  1AD0  00B8               	movwf	?_EEPROM_24C1025_Read_Int+1
 11122  1AD1  0008               	return
 11123  1AD2                     __end_of_EEPROM_24C1025_Read_Int:
 11124                           
 11125                           	psect	text43
 11126  1959                     __ptext43:	
 11127 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 11128 ;; Defined at:
 11129 ;;		line 346 in file "EEPROM_24C1025.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;  chip_add        1    wreg     unsigned char 
 11132 ;;  mem_add         4   23[BANK0 ] unsigned long 
 11133 ;; Auto vars:     Size  Location     Type
 11134 ;;  chip_add        1   27[BANK0 ] unsigned char 
 11135 ;;  data            1   28[BANK0 ] unsigned char 
 11136 ;; Return value:  Size  Location     Type
 11137 ;;                  1    wreg      unsigned char 
 11138 ;; Registers used:
 11139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11140 ;; Tracked objects:
 11141 ;;		On entry : 300/300
 11142 ;;		On exit  : 300/0
 11143 ;;		Unchanged: 0/0
 11144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11145 ;;      Params:         0       4       0       0       0
 11146 ;;      Locals:         0       2       0       0       0
 11147 ;;      Temps:          0       0       0       0       0
 11148 ;;      Totals:         0       6       0       0       0
 11149 ;;Total ram usage:        6 bytes
 11150 ;; Hardware stack levels used:    1
 11151 ;; Hardware stack levels required when called:    4
 11152 ;; This function calls:
 11153 ;;		_EEPROM_24C1025_Read_Buffer
 11154 ;; This function is called by:
 11155 ;;		_Decodify_Command
 11156 ;; This function uses a non-reentrant model
 11157 ;;
 11158                           
 11159                           
 11160                           ;psect for function _EEPROM_24C1025_Read_Byte
 11161  1959                     _EEPROM_24C1025_Read_Byte:
 11162                           
 11163                           ;incstack = 0
 11164                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11165                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 11166  1959  1283               	bcf	3,5	;RP0=0, select bank0
 11167  195A  1303               	bcf	3,6	;RP1=0, select bank0
 11168  195B  00BB               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 11169                           
 11170                           ;EEPROM_24C1025.c: 347:     char data;;EEPROM_24C1025.c: 348:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 11171  195C  083A               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 11172  195D  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 11173  195E  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 11174  195F  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 11175  1960  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 11176  1961  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 11177  1962  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 11178  1963  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 11179  1964  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 11180  1965  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 11181  1966  303C               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 11182  1967  00FF               	movwf	127
 11183  1968  087F               	movf	127,w
 11184  1969  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 11185  196A  083B               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 11186  196B  160A  118A  2690   	fcall	_EEPROM_24C1025_Read_Buffer
 11187                           
 11188                           ;EEPROM_24C1025.c: 349:     return data;
 11189  196E  1283               	bcf	3,5	;RP0=0, select bank0
 11190  196F  1303               	bcf	3,6	;RP1=0, select bank0
 11191  1970  083C               	movf	EEPROM_24C1025_Read_Byte@data,w
 11192  1971  0008               	return
 11193  1972                     __end_of_EEPROM_24C1025_Read_Byte:
 11194                           
 11195                           	psect	text44
 11196  1690                     __ptext44:	
 11197 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 11198 ;; Defined at:
 11199 ;;		line 77 in file "EEPROM_24C1025.c"
 11200 ;; Parameters:    Size  Location     Type
 11201 ;;  chip_add        1    wreg     unsigned char 
 11202 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11203 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11204 ;;  data            1   15[BANK0 ] PTR unsigned char 
 11205 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 11206 ;; Auto vars:     Size  Location     Type
 11207 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11208 ;;  cnt             1   19[BANK0 ] unsigned char 
 11209 ;;  ctrl            1   22[BANK0 ] unsigned char 
 11210 ;;  range           1   21[BANK0 ] unsigned char 
 11211 ;;  cnt             1    0        unsigned char 
 11212 ;; Return value:  Size  Location     Type
 11213 ;;                  1    wreg      void 
 11214 ;; Registers used:
 11215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11216 ;; Tracked objects:
 11217 ;;		On entry : 300/0
 11218 ;;		On exit  : 0/0
 11219 ;;		Unchanged: 0/0
 11220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11221 ;;      Params:         0       6       0       0       0
 11222 ;;      Locals:         0       5       0       0       0
 11223 ;;      Temps:          0       2       0       0       0
 11224 ;;      Totals:         0      13       0       0       0
 11225 ;;Total ram usage:       13 bytes
 11226 ;; Hardware stack levels used:    1
 11227 ;; Hardware stack levels required when called:    3
 11228 ;; This function calls:
 11229 ;;		_I2C_Master_Read
 11230 ;;		_I2C_Master_RepeatedStart
 11231 ;;		_I2C_Master_Start
 11232 ;;		_I2C_Master_Stop
 11233 ;;		_I2C_Master_Write
 11234 ;;		_my_delay_ms_WDT
 11235 ;; This function is called by:
 11236 ;;		_EEPROM_24C1025_Read_Byte
 11237 ;;		_EEPROM_24C1025_Read_Int
 11238 ;; This function uses a non-reentrant model
 11239 ;;
 11240                           
 11241                           
 11242                           ;psect for function _EEPROM_24C1025_Read_Buffer
 11243  1690                     _EEPROM_24C1025_Read_Buffer:
 11244                           
 11245                           ;incstack = 0
 11246                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 11247                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 11248  1690  00B4               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 11249                           
 11250                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 11251  1691  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11252                           
 11253                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 11254  1692  3014               	movlw	20
 11255  1693  1683               	bsf	3,5	;RP0=1, select bank1
 11256  1694  00DC               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11257  1695  3000               	movlw	0
 11258  1696  00DD               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11259                           
 11260                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 11261  1697  1283               	bcf	3,5	;RP0=0, select bank0
 11262  1698  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11263  1699  1D03               	btfss	3,2
 11264  169A  0008               	return
 11265  169B  3002               	movlw	2
 11266  169C  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11267  169D  1D03               	skipz
 11268  169E  2EA7               	goto	u2873
 11269  169F  3000               	movlw	0
 11270  16A0  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11271  16A1  1D03               	skipz
 11272  16A2  2EA7               	goto	u2873
 11273  16A3  3000               	movlw	0
 11274  16A4  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11275  16A5  1D03               	skipz
 11276  16A6  2EA7               	goto	u2873
 11277  16A7                     u2873:
 11278  16A7  1803               	btfsc	3,0
 11279  16A8  0008               	return
 11280                           
 11281                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11282  16A9  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11283  16AA  1D03               	btfss	3,2
 11284  16AB  2EBA               	goto	l3769
 11285  16AC  3001               	movlw	1
 11286  16AD  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11287  16AE  1D03               	skipz
 11288  16AF  2EB8               	goto	u2883
 11289  16B0  3000               	movlw	0
 11290  16B1  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11291  16B2  1D03               	skipz
 11292  16B3  2EB8               	goto	u2883
 11293  16B4  3000               	movlw	0
 11294  16B5  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11295  16B6  1D03               	skipz
 11296  16B7  2EB8               	goto	u2883
 11297  16B8                     u2883:
 11298  16B8  1C03               	btfss	3,0
 11299  16B9  2EBF               	goto	l3771
 11300  16BA                     l3769:
 11301  16BA  3008               	movlw	8
 11302  16BB  00FF               	movwf	127
 11303  16BC  087F               	movf	127,w
 11304  16BD  00B5               	movwf	EEPROM_24C1025_Read_Buffer@range
 11305  16BE  2EC0               	goto	l3773
 11306  16BF                     l3771:
 11307  16BF  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11308  16C0                     l3773:
 11309                           
 11310                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 11311  16C0  0834               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11312  16C1  00FF               	movwf	127
 11313  16C2  087F               	movf	127,w
 11314  16C3  00B6               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11315                           
 11316                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 11317  16C4  1003               	clrc
 11318  16C5  0DB6               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11319                           
 11320                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 11321  16C6  30A0               	movlw	160
 11322  16C7  00FF               	movwf	127
 11323  16C8  087F               	movf	127,w
 11324  16C9  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11325                           
 11326                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 11327  16CA  1436               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11328                           
 11329                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 11330  16CB  0835               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11331  16CC  00FF               	movwf	127
 11332  16CD  087F               	movf	127,w
 11333  16CE  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11334                           
 11335                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 11336  16CF  160A  158A  20EE  160A  118A  	fcall	_I2C_Master_Start
 11337                           
 11338                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 11339  16D4  1283               	bcf	3,5	;RP0=0, select bank0
 11340  16D5  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11341  16D6  39FE               	andlw	254
 11342  16D7  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11343  16D8  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11344  16D9  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11345  16DA  00A3               	movwf	I2C_Master_Write@d
 11346  16DB  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11347  16DC  00A4               	movwf	I2C_Master_Write@d+1
 11348  16DD  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 11349                           
 11350                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 11351  16E2  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11352  16E3  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11353  16E4  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11354  16E5  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11355  16E6  00A3               	movwf	I2C_Master_Write@d
 11356  16E7  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11357  16E8  00A4               	movwf	I2C_Master_Write@d+1
 11358  16E9  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 11359                           
 11360                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 11361  16EE  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11362  16EF  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11363  16F0  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11364  16F1  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11365  16F2  00A3               	movwf	I2C_Master_Write@d
 11366  16F3  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11367  16F4  00A4               	movwf	I2C_Master_Write@d+1
 11368  16F5  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 11369                           
 11370                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 11371  16FA  120A  118A  27F4  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11372                           
 11373                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 11374  16FF  1283               	bcf	3,5	;RP0=0, select bank0
 11375  1700  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11376  1701  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11377  1702  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11378  1703  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11379  1704  00A3               	movwf	I2C_Master_Write@d
 11380  1705  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11381  1706  00A4               	movwf	I2C_Master_Write@d+1
 11382  1707  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 11383                           
 11384                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 11385  170C  01B3               	clrf	EEPROM_24C1025_Read_Buffer@cnt_108
 11386  170D                     l3849:
 11387  170D  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 11388  170E  0233               	subwf	EEPROM_24C1025_Read_Buffer@cnt_108,w
 11389  170F  1803               	btfsc	3,0
 11390  1710  2FE9               	goto	l3851
 11391  1711  0064               	clrwdt	;# 
 11392                           
 11393                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 11394  1712  1283               	bcf	3,5	;RP0=0, select bank0
 11395  1713  1303               	bcf	3,6	;RP1=0, select bank0
 11396  1714  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11397  1715  1D03               	btfss	3,2
 11398  1716  2FE9               	goto	l3851
 11399  1717  3002               	movlw	2
 11400  1718  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11401  1719  1D03               	skipz
 11402  171A  2F23               	goto	u2893
 11403  171B  3000               	movlw	0
 11404  171C  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11405  171D  1D03               	skipz
 11406  171E  2F23               	goto	u2893
 11407  171F  3000               	movlw	0
 11408  1720  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11409  1721  1D03               	skipz
 11410  1722  2F23               	goto	u2893
 11411  1723                     u2893:
 11412  1723  1803               	btfsc	3,0
 11413  1724  2FE9               	goto	l3851
 11414                           
 11415                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 11416  1725  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11417  1726  3E01               	addlw	1
 11418  1727  397F               	andlw	127
 11419  1728  1D03               	btfss	3,2
 11420  1729  2FC2               	goto	l3841
 11421                           
 11422                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 11423  172A  3000               	movlw	0
 11424  172B  00A3               	movwf	I2C_Master_Read@a
 11425  172C  00A4               	movwf	I2C_Master_Read@a+1
 11426  172D  160A  158A  240F  160A  118A  	fcall	_I2C_Master_Read
 11427  1732  0823               	movf	?_I2C_Master_Read,w
 11428  1733  00FF               	movwf	127
 11429  1734  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11430  1735  0084               	movwf	4
 11431  1736  087F               	movf	127,w
 11432  1737  1383               	bcf	3,7	;select IRP bank0
 11433  1738  0080               	movwf	0
 11434                           
 11435                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 11436  1739  160A  158A  20B7  160A  118A  	fcall	_I2C_Master_Stop
 11437                           
 11438                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 11439  173E  3000               	movlw	0
 11440  173F  1283               	bcf	3,5	;RP0=0, select bank0
 11441  1740  00A3               	movwf	my_delay_ms_WDT@time+3
 11442  1741  3000               	movlw	0
 11443  1742  00A2               	movwf	my_delay_ms_WDT@time+2
 11444  1743  3000               	movlw	0
 11445  1744  00A1               	movwf	my_delay_ms_WDT@time+1
 11446  1745  3005               	movlw	5
 11447  1746  00A0               	movwf	my_delay_ms_WDT@time
 11448  1747  160A  158A  24B1  160A  118A  	fcall	_my_delay_ms_WDT
 11449                           
 11450                           ;EEPROM_24C1025.c: 114:              mem_add++;
 11451  174C  3001               	movlw	1
 11452  174D  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11453  174E  3000               	movlw	0
 11454  174F  1803               	skipnc
 11455  1750  3001               	movlw	1
 11456  1751  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11457  1752  3000               	movlw	0
 11458  1753  1803               	skipnc
 11459  1754  3001               	movlw	1
 11460  1755  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11461  1756  3000               	movlw	0
 11462  1757  1803               	skipnc
 11463  1758  3001               	movlw	1
 11464  1759  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11465                           
 11466                           ;EEPROM_24C1025.c: 115:              data++;
 11467  175A  3001               	movlw	1
 11468  175B  00FF               	movwf	127
 11469  175C  087F               	movf	127,w
 11470  175D  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11471                           
 11472                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11473  175E  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11474  175F  1D03               	btfss	3,2
 11475  1760  2F6F               	goto	l3815
 11476  1761  3001               	movlw	1
 11477  1762  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11478  1763  1D03               	skipz
 11479  1764  2F6D               	goto	u2913
 11480  1765  3000               	movlw	0
 11481  1766  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11482  1767  1D03               	skipz
 11483  1768  2F6D               	goto	u2913
 11484  1769  3000               	movlw	0
 11485  176A  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11486  176B  1D03               	skipz
 11487  176C  2F6D               	goto	u2913
 11488  176D                     u2913:
 11489  176D  1C03               	btfss	3,0
 11490  176E  2F74               	goto	l3817
 11491  176F                     l3815:
 11492  176F  3008               	movlw	8
 11493  1770  00FF               	movwf	127
 11494  1771  087F               	movf	127,w
 11495  1772  00B5               	movwf	EEPROM_24C1025_Read_Buffer@range
 11496  1773  2F75               	goto	l3819
 11497  1774                     l3817:
 11498  1774  01B5               	clrf	EEPROM_24C1025_Read_Buffer@range
 11499  1775                     l3819:
 11500                           
 11501                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 11502  1775  0834               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11503  1776  00FF               	movwf	127
 11504  1777  087F               	movf	127,w
 11505  1778  00B6               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11506                           
 11507                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 11508  1779  1003               	clrc
 11509  177A  0DB6               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11510                           
 11511                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 11512  177B  30A0               	movlw	160
 11513  177C  00FF               	movwf	127
 11514  177D  087F               	movf	127,w
 11515  177E  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11516                           
 11517                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 11518  177F  1436               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11519                           
 11520                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 11521  1780  0835               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11522  1781  00FF               	movwf	127
 11523  1782  087F               	movf	127,w
 11524  1783  04B6               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11525                           
 11526                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 11527  1784  160A  158A  20EE  160A  118A  	fcall	_I2C_Master_Start
 11528                           
 11529                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 11530  1789  1283               	bcf	3,5	;RP0=0, select bank0
 11531  178A  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11532  178B  39FE               	andlw	254
 11533  178C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11534  178D  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11535  178E  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11536  178F  00A3               	movwf	I2C_Master_Write@d
 11537  1790  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11538  1791  00A4               	movwf	I2C_Master_Write@d+1
 11539  1792  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 11540                           
 11541                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 11542  1797  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11543  1798  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11544  1799  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11545  179A  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11546  179B  00A3               	movwf	I2C_Master_Write@d
 11547  179C  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11548  179D  00A4               	movwf	I2C_Master_Write@d+1
 11549  179E  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 11550                           
 11551                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 11552  17A3  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11553  17A4  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11554  17A5  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11555  17A6  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11556  17A7  00A3               	movwf	I2C_Master_Write@d
 11557  17A8  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11558  17A9  00A4               	movwf	I2C_Master_Write@d+1
 11559  17AA  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 11560                           
 11561                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 11562  17AF  120A  118A  27F4  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11563                           
 11564                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 11565  17B4  1283               	bcf	3,5	;RP0=0, select bank0
 11566  17B5  0836               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11567  17B6  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11568  17B7  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11569  17B8  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11570  17B9  00A3               	movwf	I2C_Master_Write@d
 11571  17BA  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11572  17BB  00A4               	movwf	I2C_Master_Write@d+1
 11573  17BC  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 11574                           
 11575                           ;EEPROM_24C1025.c: 129:              }
 11576  17C1  2FE4               	goto	l3847
 11577  17C2                     l3841:
 11578                           
 11579                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 11580  17C2  3001               	movlw	1
 11581  17C3  00A3               	movwf	I2C_Master_Read@a
 11582  17C4  3000               	movlw	0
 11583  17C5  00A4               	movwf	I2C_Master_Read@a+1
 11584  17C6  160A  158A  240F  160A  118A  	fcall	_I2C_Master_Read
 11585  17CB  0823               	movf	?_I2C_Master_Read,w
 11586  17CC  00FF               	movwf	127
 11587  17CD  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11588  17CE  0084               	movwf	4
 11589  17CF  087F               	movf	127,w
 11590  17D0  1383               	bcf	3,7	;select IRP bank0
 11591  17D1  0080               	movwf	0
 11592                           
 11593                           ;EEPROM_24C1025.c: 133:              data++;
 11594  17D2  3001               	movlw	1
 11595  17D3  00FF               	movwf	127
 11596  17D4  087F               	movf	127,w
 11597  17D5  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11598                           
 11599                           ;EEPROM_24C1025.c: 134:              mem_add++;
 11600  17D6  3001               	movlw	1
 11601  17D7  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11602  17D8  3000               	movlw	0
 11603  17D9  1803               	skipnc
 11604  17DA  3001               	movlw	1
 11605  17DB  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11606  17DC  3000               	movlw	0
 11607  17DD  1803               	skipnc
 11608  17DE  3001               	movlw	1
 11609  17DF  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11610  17E0  3000               	movlw	0
 11611  17E1  1803               	skipnc
 11612  17E2  3001               	movlw	1
 11613  17E3  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11614  17E4                     l3847:
 11615                           
 11616                           ;EEPROM_24C1025.c: 136:         }
 11617  17E4  3001               	movlw	1
 11618  17E5  00FF               	movwf	127
 11619  17E6  087F               	movf	127,w
 11620  17E7  07B3               	addwf	EEPROM_24C1025_Read_Buffer@cnt_108,f
 11621  17E8  2F0D               	goto	l3849
 11622  17E9                     l3851:
 11623                           
 11624                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 11625  17E9  3000               	movlw	0
 11626  17EA  00A3               	movwf	I2C_Master_Read@a
 11627  17EB  00A4               	movwf	I2C_Master_Read@a+1
 11628  17EC  160A  158A  240F  160A  118A  	fcall	_I2C_Master_Read
 11629                           
 11630                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 11631  17F1  160A  158A  20B7  160A  118A  	fcall	_I2C_Master_Stop
 11632                           
 11633                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11634  17F6  30B9               	movlw	185
 11635  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 11636  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 11637  17F9  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11638  17FA                     u5597:
 11639  17FA  2FFB               	nop2
 11640  17FB  2FFC               	nop2
 11641  17FC  0BB0               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11642  17FD  2FFA               	goto	u5597
 11643  17FE  2FFF               	nop2
 11644  17FF  0008               	return
 11645  1800                     __end_of_EEPROM_24C1025_Read_Buffer:
 11646                           
 11647                           	psect	text45
 11648  1520                     __ptext45:	
 11649 ;; *************** function _EEPROM_24C1025_Read_Buffer_USART *****************
 11650 ;; Defined at:
 11651 ;;		line 148 in file "EEPROM_24C1025.c"
 11652 ;; Parameters:    Size  Location     Type
 11653 ;;  chip_add        1    wreg     unsigned char 
 11654 ;;  mem_add         4    9[BANK0 ] unsigned long 
 11655 ;;  sizedata        1   13[BANK0 ] unsigned char 
 11656 ;;  data            1   14[BANK0 ] PTR unsigned char 
 11657 ;;		 -> buffer(33), 
 11658 ;; Auto vars:     Size  Location     Type
 11659 ;;  chip_add        1   19[BANK0 ] unsigned char 
 11660 ;;  cnt             1   18[BANK0 ] unsigned char 
 11661 ;;  ctrl            1   21[BANK0 ] unsigned char 
 11662 ;;  range           1   20[BANK0 ] unsigned char 
 11663 ;;  cnt             1    0        unsigned char 
 11664 ;; Return value:  Size  Location     Type
 11665 ;;                  1    wreg      void 
 11666 ;; Registers used:
 11667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11668 ;; Tracked objects:
 11669 ;;		On entry : 300/300
 11670 ;;		On exit  : 0/0
 11671 ;;		Unchanged: 0/0
 11672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11673 ;;      Params:         0       6       0       0       0
 11674 ;;      Locals:         0       5       0       0       0
 11675 ;;      Temps:          0       2       0       0       0
 11676 ;;      Totals:         0      13       0       0       0
 11677 ;;Total ram usage:       13 bytes
 11678 ;; Hardware stack levels used:    1
 11679 ;; Hardware stack levels required when called:    3
 11680 ;; This function calls:
 11681 ;;		_I2C_Master_Read
 11682 ;;		_I2C_Master_RepeatedStart
 11683 ;;		_I2C_Master_Start
 11684 ;;		_I2C_Master_Stop
 11685 ;;		_I2C_Master_Write
 11686 ;;		_USART_putc
 11687 ;; This function is called by:
 11688 ;;		_Decodify_Command
 11689 ;; This function uses a non-reentrant model
 11690 ;;
 11691                           
 11692                           
 11693                           ;psect for function _EEPROM_24C1025_Read_Buffer_USART
 11694  1520                     _EEPROM_24C1025_Read_Buffer_USART:
 11695                           
 11696                           ;incstack = 0
 11697                           ; Regs used in _EEPROM_24C1025_Read_Buffer_USART: [wreg-fsr0h+status,2+status,0+btemp+1+
      +                          pclath+cstack]
 11698                           ;EEPROM_24C1025_Read_Buffer_USART@chip_add stored from wreg
 11699  1520  1283               	bcf	3,5	;RP0=0, select bank0
 11700  1521  1303               	bcf	3,6	;RP1=0, select bank0
 11701  1522  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@chip_add
 11702                           
 11703                           ;EEPROM_24C1025.c: 154:      unsigned char range=0;
 11704  1523  01B4               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11705                           
 11706                           ;EEPROM_24C1025.c: 155:      unsigned char ctrl;;EEPROM_24C1025.c: 157:      Delay_Led_M
      +                          emory=20;
 11707  1524  3014               	movlw	20
 11708  1525  1683               	bsf	3,5	;RP0=1, select bank1
 11709  1526  00DC               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11710  1527  3000               	movlw	0
 11711  1528  00DD               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11712                           
 11713                           ;EEPROM_24C1025.c: 159:      if(mem_add>0x1FFFF) return;
 11714  1529  1283               	bcf	3,5	;RP0=0, select bank0
 11715  152A  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11716  152B  1D03               	btfss	3,2
 11717  152C  0008               	return
 11718  152D  3002               	movlw	2
 11719  152E  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11720  152F  1D03               	skipz
 11721  1530  2D39               	goto	u4163
 11722  1531  3000               	movlw	0
 11723  1532  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11724  1533  1D03               	skipz
 11725  1534  2D39               	goto	u4163
 11726  1535  3000               	movlw	0
 11727  1536  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11728  1537  1D03               	skipz
 11729  1538  2D39               	goto	u4163
 11730  1539                     u4163:
 11731  1539  1803               	btfsc	3,0
 11732  153A  0008               	return
 11733                           
 11734                           ;EEPROM_24C1025.c: 161:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11735  153B  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11736  153C  1D03               	btfss	3,2
 11737  153D  2D4C               	goto	l4427
 11738  153E  3001               	movlw	1
 11739  153F  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11740  1540  1D03               	skipz
 11741  1541  2D4A               	goto	u4173
 11742  1542  3000               	movlw	0
 11743  1543  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11744  1544  1D03               	skipz
 11745  1545  2D4A               	goto	u4173
 11746  1546  3000               	movlw	0
 11747  1547  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11748  1548  1D03               	skipz
 11749  1549  2D4A               	goto	u4173
 11750  154A                     u4173:
 11751  154A  1C03               	btfss	3,0
 11752  154B  2D51               	goto	l4429
 11753  154C                     l4427:
 11754  154C  3008               	movlw	8
 11755  154D  00FF               	movwf	127
 11756  154E  087F               	movf	127,w
 11757  154F  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11758  1550  2D52               	goto	l4431
 11759  1551                     l4429:
 11760  1551  01B4               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11761  1552                     l4431:
 11762                           
 11763                           ;EEPROM_24C1025.c: 162:      ctrl=chip_add;
 11764  1552  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11765  1553  00FF               	movwf	127
 11766  1554  087F               	movf	127,w
 11767  1555  00B5               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11768                           
 11769                           ;EEPROM_24C1025.c: 163:      ctrl<<=1;
 11770  1556  1003               	clrc
 11771  1557  0DB5               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11772                           
 11773                           ;EEPROM_24C1025.c: 164:      ctrl |= 0xA0;
 11774  1558  30A0               	movlw	160
 11775  1559  00FF               	movwf	127
 11776  155A  087F               	movf	127,w
 11777  155B  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11778                           
 11779                           ;EEPROM_24C1025.c: 165:      ctrl |= 0b00000001;
 11780  155C  1435               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11781                           
 11782                           ;EEPROM_24C1025.c: 166:      ctrl |= range;
 11783  155D  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11784  155E  00FF               	movwf	127
 11785  155F  087F               	movf	127,w
 11786  1560  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11787                           
 11788                           ;EEPROM_24C1025.c: 168:      I2C_Master_Start();
 11789  1561  160A  158A  20EE  160A  118A  	fcall	_I2C_Master_Start
 11790                           
 11791                           ;EEPROM_24C1025.c: 169:      I2C_Master_Write(ctrl & 0xFE);
 11792  1566  1283               	bcf	3,5	;RP0=0, select bank0
 11793  1567  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11794  1568  39FE               	andlw	254
 11795  1569  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11796  156A  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11797  156B  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11798  156C  00A3               	movwf	I2C_Master_Write@d
 11799  156D  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11800  156E  00A4               	movwf	I2C_Master_Write@d+1
 11801  156F  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 11802                           
 11803                           ;EEPROM_24C1025.c: 170:      I2C_Master_Write(((char *)&mem_add)[1]);
 11804  1574  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11805  1575  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11806  1576  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11807  1577  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11808  1578  00A3               	movwf	I2C_Master_Write@d
 11809  1579  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11810  157A  00A4               	movwf	I2C_Master_Write@d+1
 11811  157B  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 11812                           
 11813                           ;EEPROM_24C1025.c: 171:      I2C_Master_Write(((char *)&mem_add)[0]);
 11814  1580  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11815  1581  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11816  1582  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11817  1583  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11818  1584  00A3               	movwf	I2C_Master_Write@d
 11819  1585  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11820  1586  00A4               	movwf	I2C_Master_Write@d+1
 11821  1587  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 11822                           
 11823                           ;EEPROM_24C1025.c: 172:      I2C_Master_RepeatedStart();
 11824  158C  120A  118A  27F4  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11825                           
 11826                           ;EEPROM_24C1025.c: 173:      I2C_Master_Write(ctrl);
 11827  1591  1283               	bcf	3,5	;RP0=0, select bank0
 11828  1592  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11829  1593  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11830  1594  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11831  1595  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11832  1596  00A3               	movwf	I2C_Master_Write@d
 11833  1597  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11834  1598  00A4               	movwf	I2C_Master_Write@d+1
 11835  1599  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 11836                           
 11837                           ;EEPROM_24C1025.c: 175:      for(char cnt=0;cnt<(sizedata);cnt++)
 11838  159E  01B2               	clrf	EEPROM_24C1025_Read_Buffer_USART@cnt_117
 11839  159F                     l4505:
 11840  159F  082D               	movf	EEPROM_24C1025_Read_Buffer_USART@sizedata,w
 11841  15A0  0232               	subwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,w
 11842  15A1  1803               	btfsc	3,0
 11843  15A2  2E79               	goto	l4507
 11844  15A3  0064               	clrwdt	;# 
 11845                           
 11846                           ;EEPROM_24C1025.c: 178:            if(mem_add>0x1FFFF) break;
 11847  15A4  1283               	bcf	3,5	;RP0=0, select bank0
 11848  15A5  1303               	bcf	3,6	;RP1=0, select bank0
 11849  15A6  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11850  15A7  1D03               	btfss	3,2
 11851  15A8  2E79               	goto	l4507
 11852  15A9  3002               	movlw	2
 11853  15AA  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11854  15AB  1D03               	skipz
 11855  15AC  2DB5               	goto	u4183
 11856  15AD  3000               	movlw	0
 11857  15AE  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11858  15AF  1D03               	skipz
 11859  15B0  2DB5               	goto	u4183
 11860  15B1  3000               	movlw	0
 11861  15B2  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11862  15B3  1D03               	skipz
 11863  15B4  2DB5               	goto	u4183
 11864  15B5                     u4183:
 11865  15B5  1803               	btfsc	3,0
 11866  15B6  2E79               	goto	l4507
 11867                           
 11868                           ;EEPROM_24C1025.c: 179:            if((mem_add+1)%128==0)
 11869  15B7  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11870  15B8  3E01               	addlw	1
 11871  15B9  397F               	andlw	127
 11872  15BA  1D03               	btfss	3,2
 11873  15BB  2E4D               	goto	l4497
 11874                           
 11875                           ;EEPROM_24C1025.c: 180:              {;EEPROM_24C1025.c: 181:              (*data)=I2C_M
      +                          aster_Read(0);
 11876  15BC  3000               	movlw	0
 11877  15BD  00A3               	movwf	I2C_Master_Read@a
 11878  15BE  00A4               	movwf	I2C_Master_Read@a+1
 11879  15BF  160A  158A  240F  160A  118A  	fcall	_I2C_Master_Read
 11880  15C4  0823               	movf	?_I2C_Master_Read,w
 11881  15C5  00FF               	movwf	127
 11882  15C6  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11883  15C7  0084               	movwf	4
 11884  15C8  087F               	movf	127,w
 11885  15C9  1783               	bsf	3,7	;select IRP bank2
 11886  15CA  0080               	movwf	0
 11887                           
 11888                           ;EEPROM_24C1025.c: 182:              I2C_Master_Stop();
 11889  15CB  160A  158A  20B7  160A  118A  	fcall	_I2C_Master_Stop
 11890                           
 11891                           ;EEPROM_24C1025.c: 183:              USART_putc(*data);
 11892  15D0  1283               	bcf	3,5	;RP0=0, select bank0
 11893  15D1  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11894  15D2  0084               	movwf	4
 11895  15D3  1783               	bsf	3,7	;select IRP bank2
 11896  15D4  0800               	movf	0,w
 11897  15D5  160A  158A  20DE  160A  118A  	fcall	_USART_putc
 11898                           
 11899                           ;EEPROM_24C1025.c: 186:              mem_add++;
 11900  15DA  3001               	movlw	1
 11901  15DB  1283               	bcf	3,5	;RP0=0, select bank0
 11902  15DC  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11903  15DD  3000               	movlw	0
 11904  15DE  1803               	skipnc
 11905  15DF  3001               	movlw	1
 11906  15E0  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11907  15E1  3000               	movlw	0
 11908  15E2  1803               	skipnc
 11909  15E3  3001               	movlw	1
 11910  15E4  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11911  15E5  3000               	movlw	0
 11912  15E6  1803               	skipnc
 11913  15E7  3001               	movlw	1
 11914  15E8  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11915                           
 11916                           ;EEPROM_24C1025.c: 188:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11917  15E9  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11918  15EA  1D03               	btfss	3,2
 11919  15EB  2DFA               	goto	l4471
 11920  15EC  3001               	movlw	1
 11921  15ED  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11922  15EE  1D03               	skipz
 11923  15EF  2DF8               	goto	u4203
 11924  15F0  3000               	movlw	0
 11925  15F1  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11926  15F2  1D03               	skipz
 11927  15F3  2DF8               	goto	u4203
 11928  15F4  3000               	movlw	0
 11929  15F5  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11930  15F6  1D03               	skipz
 11931  15F7  2DF8               	goto	u4203
 11932  15F8                     u4203:
 11933  15F8  1C03               	btfss	3,0
 11934  15F9  2DFF               	goto	l4473
 11935  15FA                     l4471:
 11936  15FA  3008               	movlw	8
 11937  15FB  00FF               	movwf	127
 11938  15FC  087F               	movf	127,w
 11939  15FD  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11940  15FE  2E00               	goto	l4475
 11941  15FF                     l4473:
 11942  15FF  01B4               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11943  1600                     l4475:
 11944                           
 11945                           ;EEPROM_24C1025.c: 189:              ctrl=chip_add;
 11946  1600  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11947  1601  00FF               	movwf	127
 11948  1602  087F               	movf	127,w
 11949  1603  00B5               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11950                           
 11951                           ;EEPROM_24C1025.c: 190:              ctrl<<=1;
 11952  1604  1003               	clrc
 11953  1605  0DB5               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11954                           
 11955                           ;EEPROM_24C1025.c: 191:              ctrl |= 0xA0;
 11956  1606  30A0               	movlw	160
 11957  1607  00FF               	movwf	127
 11958  1608  087F               	movf	127,w
 11959  1609  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11960                           
 11961                           ;EEPROM_24C1025.c: 192:              ctrl |= 0b00000001;
 11962  160A  1435               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11963                           
 11964                           ;EEPROM_24C1025.c: 193:              ctrl |= range;
 11965  160B  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11966  160C  00FF               	movwf	127
 11967  160D  087F               	movf	127,w
 11968  160E  04B5               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11969                           
 11970                           ;EEPROM_24C1025.c: 195:              I2C_Master_Start();
 11971  160F  160A  158A  20EE  160A  118A  	fcall	_I2C_Master_Start
 11972                           
 11973                           ;EEPROM_24C1025.c: 196:              I2C_Master_Write(ctrl & 0xFE);
 11974  1614  1283               	bcf	3,5	;RP0=0, select bank0
 11975  1615  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11976  1616  39FE               	andlw	254
 11977  1617  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11978  1618  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11979  1619  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11980  161A  00A3               	movwf	I2C_Master_Write@d
 11981  161B  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11982  161C  00A4               	movwf	I2C_Master_Write@d+1
 11983  161D  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 11984                           
 11985                           ;EEPROM_24C1025.c: 197:              I2C_Master_Write(((char *)&mem_add)[1]);
 11986  1622  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11987  1623  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11988  1624  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11989  1625  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11990  1626  00A3               	movwf	I2C_Master_Write@d
 11991  1627  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11992  1628  00A4               	movwf	I2C_Master_Write@d+1
 11993  1629  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 11994                           
 11995                           ;EEPROM_24C1025.c: 198:              I2C_Master_Write(((char *)&mem_add)[0]);
 11996  162E  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11997  162F  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11998  1630  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11999  1631  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12000  1632  00A3               	movwf	I2C_Master_Write@d
 12001  1633  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 12002  1634  00A4               	movwf	I2C_Master_Write@d+1
 12003  1635  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 12004                           
 12005                           ;EEPROM_24C1025.c: 199:              I2C_Master_RepeatedStart();
 12006  163A  120A  118A  27F4  160A  118A  	fcall	_I2C_Master_RepeatedStart
 12007                           
 12008                           ;EEPROM_24C1025.c: 200:              I2C_Master_Write(ctrl);
 12009  163F  1283               	bcf	3,5	;RP0=0, select bank0
 12010  1640  0835               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 12011  1641  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12012  1642  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 12013  1643  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 12014  1644  00A3               	movwf	I2C_Master_Write@d
 12015  1645  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 12016  1646  00A4               	movwf	I2C_Master_Write@d+1
 12017  1647  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 12018                           
 12019                           ;EEPROM_24C1025.c: 201:              }
 12020  164C  2E74               	goto	l4503
 12021  164D                     l4497:
 12022                           
 12023                           ;EEPROM_24C1025.c: 203:              {;EEPROM_24C1025.c: 204:              (*data)=I2C_M
      +                          aster_Read(1);
 12024  164D  3001               	movlw	1
 12025  164E  00A3               	movwf	I2C_Master_Read@a
 12026  164F  3000               	movlw	0
 12027  1650  00A4               	movwf	I2C_Master_Read@a+1
 12028  1651  160A  158A  240F  160A  118A  	fcall	_I2C_Master_Read
 12029  1656  0823               	movf	?_I2C_Master_Read,w
 12030  1657  00FF               	movwf	127
 12031  1658  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 12032  1659  0084               	movwf	4
 12033  165A  087F               	movf	127,w
 12034  165B  1783               	bsf	3,7	;select IRP bank2
 12035  165C  0080               	movwf	0
 12036                           
 12037                           ;EEPROM_24C1025.c: 205:              USART_putc(*data);
 12038  165D  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 12039  165E  0084               	movwf	4
 12040  165F  0800               	movf	0,w
 12041  1660  160A  158A  20DE  160A  118A  	fcall	_USART_putc
 12042                           
 12043                           ;EEPROM_24C1025.c: 207:              mem_add++;
 12044  1665  3001               	movlw	1
 12045  1666  1283               	bcf	3,5	;RP0=0, select bank0
 12046  1667  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 12047  1668  3000               	movlw	0
 12048  1669  1803               	skipnc
 12049  166A  3001               	movlw	1
 12050  166B  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 12051  166C  3000               	movlw	0
 12052  166D  1803               	skipnc
 12053  166E  3001               	movlw	1
 12054  166F  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 12055  1670  3000               	movlw	0
 12056  1671  1803               	skipnc
 12057  1672  3001               	movlw	1
 12058  1673  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 12059  1674                     l4503:
 12060                           
 12061                           ;EEPROM_24C1025.c: 209:         }
 12062  1674  3001               	movlw	1
 12063  1675  00FF               	movwf	127
 12064  1676  087F               	movf	127,w
 12065  1677  07B2               	addwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,f
 12066  1678  2D9F               	goto	l4505
 12067  1679                     l4507:
 12068                           
 12069                           ;EEPROM_24C1025.c: 210:         I2C_Master_Read(0);
 12070  1679  3000               	movlw	0
 12071  167A  00A3               	movwf	I2C_Master_Read@a
 12072  167B  00A4               	movwf	I2C_Master_Read@a+1
 12073  167C  160A  158A  240F  160A  118A  	fcall	_I2C_Master_Read
 12074                           
 12075                           ;EEPROM_24C1025.c: 211:         I2C_Master_Stop();
 12076  1681  160A  158A  20B7  160A  118A  	fcall	_I2C_Master_Stop
 12077                           
 12078                           ;EEPROM_24C1025.c: 212:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 12079  1686  30B9               	movlw	185
 12080  1687  1283               	bcf	3,5	;RP0=0, select bank0
 12081  1688  1303               	bcf	3,6	;RP1=0, select bank0
 12082  1689  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 12083  168A                     u5607:
 12084  168A  2E8B               	nop2
 12085  168B  2E8C               	nop2
 12086  168C  0BAF               	decfsz	??_EEPROM_24C1025_Read_Buffer_USART,f
 12087  168D  2E8A               	goto	u5607
 12088  168E  2E8F               	nop2
 12089  168F  0008               	return
 12090  1690                     __end_of_EEPROM_24C1025_Read_Buffer_USART:
 12091                           
 12092                           	psect	text46
 12093  18DE                     __ptext46:	
 12094 ;; *************** function _USART_putc *****************
 12095 ;; Defined at:
 12096 ;;		line 89 in file "usart.c"
 12097 ;; Parameters:    Size  Location     Type
 12098 ;;  value           1    wreg     unsigned char 
 12099 ;; Auto vars:     Size  Location     Type
 12100 ;;  value           1    0[BANK0 ] unsigned char 
 12101 ;; Return value:  Size  Location     Type
 12102 ;;                  1    wreg      void 
 12103 ;; Registers used:
 12104 ;;		wreg
 12105 ;; Tracked objects:
 12106 ;;		On entry : 0/100
 12107 ;;		On exit  : 300/100
 12108 ;;		Unchanged: 0/0
 12109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12110 ;;      Params:         0       0       0       0       0
 12111 ;;      Locals:         0       1       0       0       0
 12112 ;;      Temps:          0       0       0       0       0
 12113 ;;      Totals:         0       1       0       0       0
 12114 ;;Total ram usage:        1 bytes
 12115 ;; Hardware stack levels used:    1
 12116 ;; Hardware stack levels required when called:    1
 12117 ;; This function calls:
 12118 ;;		Nothing
 12119 ;; This function is called by:
 12120 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12121 ;;		_Decodify_Command
 12122 ;;		_Send_To_MB
 12123 ;;		_PROCULUS_Control_Register_Write
 12124 ;;		_PROCULUS_VP_Write
 12125 ;;		_USART_put_int
 12126 ;;		_USART_put_string
 12127 ;; This function uses a non-reentrant model
 12128 ;;
 12129                           
 12130                           
 12131                           ;psect for function _USART_putc
 12132  18DE                     _USART_putc:
 12133                           
 12134                           ;incstack = 0
 12135                           ; Regs used in _USART_putc: [wreg]
 12136                           ;USART_putc@value stored from wreg
 12137  18DE  1283               	bcf	3,5	;RP0=0, select bank0
 12138  18DF  1303               	bcf	3,6	;RP1=0, select bank0
 12139  18E0  00A0               	movwf	USART_putc@value
 12140                           
 12141                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 12142  18E1  3014               	movlw	20
 12143  18E2  1683               	bsf	3,5	;RP0=1, select bank1
 12144  18E3  00DA               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 12145  18E4  3000               	movlw	0
 12146  18E5  00DB               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 12147  18E6                     l880:	
 12148                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 12149                           
 12150  18E6  1C98               	btfss	24,1	;volatile
 12151  18E7  28E6               	goto	l880
 12152                           
 12153                           ;usart.c: 93:     TXREG=value;
 12154  18E8  1283               	bcf	3,5	;RP0=0, select bank0
 12155  18E9  0820               	movf	USART_putc@value,w
 12156  18EA  0099               	movwf	25	;volatile
 12157                           
 12158                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 12159  18EB  1683               	bsf	3,5	;RP0=1, select bank1
 12160  18EC  1698               	bsf	24,5	;volatile
 12161  18ED  0008               	return
 12162  18EE                     __end_of_USART_putc:
 12163                           
 12164                           	psect	text47
 12165  07F4                     __ptext47:	
 12166 ;; *************** function _I2C_Master_RepeatedStart *****************
 12167 ;; Defined at:
 12168 ;;		line 62 in file "I2C.c"
 12169 ;; Parameters:    Size  Location     Type
 12170 ;;		None
 12171 ;; Auto vars:     Size  Location     Type
 12172 ;;		None
 12173 ;; Return value:  Size  Location     Type
 12174 ;;                  1    wreg      void 
 12175 ;; Registers used:
 12176 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12177 ;; Tracked objects:
 12178 ;;		On entry : 300/0
 12179 ;;		On exit  : 200/0
 12180 ;;		Unchanged: 0/0
 12181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12182 ;;      Params:         0       0       0       0       0
 12183 ;;      Locals:         0       0       0       0       0
 12184 ;;      Temps:          0       0       0       0       0
 12185 ;;      Totals:         0       0       0       0       0
 12186 ;;Total ram usage:        0 bytes
 12187 ;; Hardware stack levels used:    1
 12188 ;; Hardware stack levels required when called:    2
 12189 ;; This function calls:
 12190 ;;		_I2C_Master_Wait
 12191 ;; This function is called by:
 12192 ;;		_EEPROM_24C1025_Read_Buffer
 12193 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12194 ;;		_EEPROM_24C1025_Read_Str
 12195 ;; This function uses a non-reentrant model
 12196 ;;
 12197                           
 12198                           
 12199                           ;psect for function _I2C_Master_RepeatedStart
 12200  07F4                     _I2C_Master_RepeatedStart:
 12201                           
 12202                           ;I2C.c: 64:   if(I2C_Master_Wait())
 12203                           
 12204                           ;incstack = 0
 12205                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12206  07F4  160A  158A  221D  120A  118A  	fcall	_I2C_Master_Wait
 12207  07F9  3A00               	xorlw	0
 12208  07FA  1903               	skipnz
 12209  07FB  0008               	return
 12210                           
 12211                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 12212  07FC  1683               	bsf	3,5	;RP0=1, select bank1
 12213  07FD  1491               	bsf	17,1	;volatile
 12214  07FE  0008               	return
 12215  07FF                     __end_of_I2C_Master_RepeatedStart:
 12216                           
 12217                           	psect	text48
 12218  1C0F                     __ptext48:	
 12219 ;; *************** function _I2C_Master_Read *****************
 12220 ;; Defined at:
 12221 ;;		line 87 in file "I2C.c"
 12222 ;; Parameters:    Size  Location     Type
 12223 ;;  a               2    3[BANK0 ] unsigned short 
 12224 ;; Auto vars:     Size  Location     Type
 12225 ;;  temp            2    7[BANK0 ] unsigned short 
 12226 ;; Return value:  Size  Location     Type
 12227 ;;                  2    3[BANK0 ] unsigned short 
 12228 ;; Registers used:
 12229 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12230 ;; Tracked objects:
 12231 ;;		On entry : 300/0
 12232 ;;		On exit  : 300/0
 12233 ;;		Unchanged: 0/0
 12234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12235 ;;      Params:         0       2       0       0       0
 12236 ;;      Locals:         0       2       0       0       0
 12237 ;;      Temps:          0       2       0       0       0
 12238 ;;      Totals:         0       6       0       0       0
 12239 ;;Total ram usage:        6 bytes
 12240 ;; Hardware stack levels used:    1
 12241 ;; Hardware stack levels required when called:    2
 12242 ;; This function calls:
 12243 ;;		_I2C_Master_Wait
 12244 ;; This function is called by:
 12245 ;;		_EEPROM_24C1025_Read_Buffer
 12246 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12247 ;;		_EEPROM_24C1025_Read_Str
 12248 ;; This function uses a non-reentrant model
 12249 ;;
 12250                           
 12251                           
 12252                           ;psect for function _I2C_Master_Read
 12253  1C0F                     _I2C_Master_Read:
 12254                           
 12255                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 12256                           
 12257                           ;incstack = 0
 12258                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12259  1C0F  160A  158A  221D  160A  158A  	fcall	_I2C_Master_Wait
 12260  1C14  3A00               	xorlw	0
 12261  1C15  1683               	bsf	3,5	;RP0=1, select bank1
 12262  1C16  1D03               	btfss	3,2
 12263  1C17  1591               	bsf	17,3	;volatile
 12264                           
 12265                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 12266  1C18  160A  158A  221D  160A  158A  	fcall	_I2C_Master_Wait
 12267  1C1D  3A00               	xorlw	0
 12268  1C1E  1903               	skipnz
 12269  1C1F  2C27               	goto	l3719
 12270  1C20  0813               	movf	19,w	;volatile
 12271  1C21  00A5               	movwf	??_I2C_Master_Read
 12272  1C22  01A6               	clrf	??_I2C_Master_Read+1
 12273  1C23  0825               	movf	??_I2C_Master_Read,w
 12274  1C24  00A7               	movwf	I2C_Master_Read@temp
 12275  1C25  0826               	movf	??_I2C_Master_Read+1,w
 12276  1C26  00A8               	movwf	I2C_Master_Read@temp+1
 12277  1C27                     l3719:
 12278                           
 12279                           ;I2C.c: 92:   if(I2C_Master_Wait())
 12280  1C27  160A  158A  221D  160A  158A  	fcall	_I2C_Master_Wait
 12281  1C2C  3A00               	xorlw	0
 12282  1C2D  1903               	skipnz
 12283  1C2E  2C41               	goto	l3731
 12284                           
 12285                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 12286  1C2F  0823               	movf	I2C_Master_Read@a,w
 12287  1C30  0424               	iorwf	I2C_Master_Read@a+1,w
 12288  1C31  1D03               	btfss	3,2
 12289  1C32  2C37               	goto	u2810
 12290  1C33  1683               	bsf	3,5	;RP0=1, select bank1
 12291  1C34  1303               	bcf	3,6	;RP1=0, select bank1
 12292  1C35  1691               	bsf	17,5	;volatile
 12293  1C36  2C3A               	goto	l3723
 12294  1C37                     u2810:
 12295  1C37  1683               	bsf	3,5	;RP0=1, select bank1
 12296  1C38  1303               	bcf	3,6	;RP1=0, select bank1
 12297  1C39  1291               	bcf	17,5	;volatile
 12298  1C3A                     l3723:
 12299                           
 12300                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 12301  1C3A  1611               	bsf	17,4	;volatile
 12302                           
 12303                           ;I2C.c: 96:     return temp;
 12304  1C3B  1283               	bcf	3,5	;RP0=0, select bank0
 12305  1C3C  0828               	movf	I2C_Master_Read@temp+1,w
 12306  1C3D  00A4               	movwf	?_I2C_Master_Read+1
 12307  1C3E  0827               	movf	I2C_Master_Read@temp,w
 12308  1C3F  00A3               	movwf	?_I2C_Master_Read
 12309  1C40  0008               	return
 12310  1C41                     l3731:
 12311                           
 12312                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 12313  1C41  01A3               	clrf	?_I2C_Master_Read
 12314  1C42  01A4               	clrf	?_I2C_Master_Read+1
 12315  1C43  0008               	return
 12316  1C44                     __end_of_I2C_Master_Read:
 12317                           
 12318                           	psect	text49
 12319  1D9D                     __ptext49:	
 12320 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12321 ;; Defined at:
 12322 ;;		line 367 in file "EEPROM_24C1025.c"
 12323 ;; Parameters:    Size  Location     Type
 12324 ;;  chip_add        1    wreg     unsigned char 
 12325 ;;  value           2    9[BANK1 ] unsigned int 
 12326 ;; Auto vars:     Size  Location     Type
 12327 ;;  chip_add        1   11[BANK1 ] unsigned char 
 12328 ;;  mem_add         4   12[BANK1 ] unsigned long 
 12329 ;; Return value:  Size  Location     Type
 12330 ;;                  1    wreg      void 
 12331 ;; Registers used:
 12332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12333 ;; Tracked objects:
 12334 ;;		On entry : 300/300
 12335 ;;		On exit  : 300/100
 12336 ;;		Unchanged: 0/0
 12337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12338 ;;      Params:         0       0       2       0       0
 12339 ;;      Locals:         0       0       5       0       0
 12340 ;;      Temps:          0       0       0       0       0
 12341 ;;      Totals:         0       0       7       0       0
 12342 ;;Total ram usage:        7 bytes
 12343 ;; Hardware stack levels used:    1
 12344 ;; Hardware stack levels required when called:    5
 12345 ;; This function calls:
 12346 ;;		_EEPROM_24C1025_Write_Int
 12347 ;; This function is called by:
 12348 ;;		_Decodify_Command
 12349 ;; This function uses a non-reentrant model
 12350 ;;
 12351                           
 12352                           
 12353                           ;psect for function _EEPROM_24C1025_Fill_All
 12354  1D9D                     _EEPROM_24C1025_Fill_All:
 12355                           
 12356                           ;incstack = 0
 12357                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 12358                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12359  1D9D  1303               	bcf	3,6	;RP1=0, select bank1
 12360  1D9E  00AB               	movwf	EEPROM_24C1025_Fill_All@chip_add^(0+128)
 12361                           
 12362                           ;EEPROM_24C1025.c: 368:      unsigned long mem_add;;EEPROM_24C1025.c: 369:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 12363  1D9F  3000               	movlw	0
 12364  1DA0  00AF               	movwf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128)
 12365  1DA1  3000               	movlw	0
 12366  1DA2  00AE               	movwf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128)
 12367  1DA3  3000               	movlw	0
 12368  1DA4  00AD               	movwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128)
 12369  1DA5  3000               	movlw	0
 12370  1DA6  00AC               	movwf	EEPROM_24C1025_Fill_All@mem_add^(0+128)
 12371  1DA7                     l5729:
 12372                           
 12373                           ;EEPROM_24C1025.c: 370:         {;EEPROM_24C1025.c: 371:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 12374  1DA7  082F               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 12375  1DA8  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
 12376  1DA9  082E               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 12377  1DAA  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
 12378  1DAB  082D               	movf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 12379  1DAC  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
 12380  1DAD  082C               	movf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 12381  1DAE  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
 12382  1DAF  082A               	movf	(EEPROM_24C1025_Fill_All@value+1)^(0+128),w
 12383  1DB0  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
 12384  1DB1  0829               	movf	EEPROM_24C1025_Fill_All@value^(0+128),w
 12385  1DB2  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
 12386  1DB3  082B               	movf	EEPROM_24C1025_Fill_All@chip_add^(0+128),w
 12387  1DB4  160A  158A  2283  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
 12388  1DB9  0064               	clrwdt	;# 
 12389                           
 12390                           ;EEPROM_24C1025.c: 373:         }
 12391  1DBA  3002               	movlw	2
 12392  1DBB  1683               	bsf	3,5	;RP0=1, select bank1
 12393  1DBC  1303               	bcf	3,6	;RP1=0, select bank1
 12394  1DBD  07AC               	addwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),f
 12395  1DBE  3000               	movlw	0
 12396  1DBF  1803               	skipnc
 12397  1DC0  3001               	movlw	1
 12398  1DC1  07AD               	addwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),f
 12399  1DC2  3000               	movlw	0
 12400  1DC3  1803               	skipnc
 12401  1DC4  3001               	movlw	1
 12402  1DC5  07AE               	addwf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),f
 12403  1DC6  3000               	movlw	0
 12404  1DC7  1803               	skipnc
 12405  1DC8  3001               	movlw	1
 12406  1DC9  07AF               	addwf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),f
 12407  1DCA  082F               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 12408  1DCB  1D03               	btfss	3,2
 12409  1DCC  0008               	return
 12410  1DCD  082E               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 12411  1DCE  1D03               	btfss	3,2
 12412  1DCF  0008               	return
 12413  1DD0  3004               	movlw	4
 12414  1DD1  022D               	subwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 12415  1DD2  1D03               	skipz
 12416  1DD3  2DD8               	goto	u5393
 12417  1DD4  3000               	movlw	0
 12418  1DD5  022C               	subwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 12419  1DD6  1D03               	skipz
 12420  1DD7  2DD8               	goto	u5393
 12421  1DD8                     u5393:
 12422  1DD8  1803               	btfsc	3,0
 12423  1DD9  0008               	return
 12424  1DDA  2DA7               	goto	l5729
 12425  1DDB                     __end_of_EEPROM_24C1025_Fill_All:
 12426                           
 12427                           	psect	text50
 12428  1A83                     __ptext50:	
 12429 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 12430 ;; Defined at:
 12431 ;;		line 352 in file "EEPROM_24C1025.c"
 12432 ;; Parameters:    Size  Location     Type
 12433 ;;  chip_add        1    wreg     unsigned char 
 12434 ;;  mem_add         4    0[BANK1 ] unsigned long 
 12435 ;;  data            2    4[BANK1 ] int 
 12436 ;; Auto vars:     Size  Location     Type
 12437 ;;  chip_add        1    6[BANK1 ] unsigned char 
 12438 ;;  local           2    7[BANK1 ] unsigned char [2]
 12439 ;; Return value:  Size  Location     Type
 12440 ;;                  1    wreg      void 
 12441 ;; Registers used:
 12442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12443 ;; Tracked objects:
 12444 ;;		On entry : 100/300
 12445 ;;		On exit  : 300/0
 12446 ;;		Unchanged: 0/0
 12447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12448 ;;      Params:         0       0       6       0       0
 12449 ;;      Locals:         0       0       3       0       0
 12450 ;;      Temps:          0       0       0       0       0
 12451 ;;      Totals:         0       0       9       0       0
 12452 ;;Total ram usage:        9 bytes
 12453 ;; Hardware stack levels used:    1
 12454 ;; Hardware stack levels required when called:    4
 12455 ;; This function calls:
 12456 ;;		_EEPROM_24C1025_Write_Buffer
 12457 ;; This function is called by:
 12458 ;;		_EEPROM_24C1025_Fill_All
 12459 ;;		_Decodify_Command
 12460 ;;		_Save_Log
 12461 ;; This function uses a non-reentrant model
 12462 ;;
 12463                           
 12464                           
 12465                           ;psect for function _EEPROM_24C1025_Write_Int
 12466  1A83                     _EEPROM_24C1025_Write_Int:
 12467                           
 12468                           ;incstack = 0
 12469                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 12470                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 12471  1A83  1303               	bcf	3,6	;RP1=0, select bank1
 12472  1A84  00A6               	movwf	EEPROM_24C1025_Write_Int@chip_add^(0+128)
 12473                           
 12474                           ;EEPROM_24C1025.c: 353:      char local[2];;EEPROM_24C1025.c: 354:      local[0]=((char 
      +                          *)&data)[1];
 12475  1A85  0825               	movf	(EEPROM_24C1025_Write_Int@data^(0+128)+1),w
 12476  1A86  00FF               	movwf	127
 12477  1A87  087F               	movf	127,w
 12478  1A88  00A7               	movwf	EEPROM_24C1025_Write_Int@local^(0+128)
 12479                           
 12480                           ;EEPROM_24C1025.c: 355:      local[1]=((char *)&data)[0];
 12481  1A89  0824               	movf	EEPROM_24C1025_Write_Int@data^(0+128),w
 12482  1A8A  00FF               	movwf	127
 12483  1A8B  087F               	movf	127,w
 12484  1A8C  00A8               	movwf	(EEPROM_24C1025_Write_Int@local^(0+128)+1)
 12485                           
 12486                           ;EEPROM_24C1025.c: 356:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12487  1A8D  0823               	movf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128),w
 12488  1A8E  1283               	bcf	3,5	;RP0=0, select bank0
 12489  1A8F  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12490  1A90  1683               	bsf	3,5	;RP0=1, select bank1
 12491  1A91  0822               	movf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128),w
 12492  1A92  1283               	bcf	3,5	;RP0=0, select bank0
 12493  1A93  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12494  1A94  1683               	bsf	3,5	;RP0=1, select bank1
 12495  1A95  0821               	movf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128),w
 12496  1A96  1283               	bcf	3,5	;RP0=0, select bank0
 12497  1A97  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12498  1A98  1683               	bsf	3,5	;RP0=1, select bank1
 12499  1A99  0820               	movf	EEPROM_24C1025_Write_Int@mem_add^(0+128),w
 12500  1A9A  1283               	bcf	3,5	;RP0=0, select bank0
 12501  1A9B  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12502  1A9C  3002               	movlw	2
 12503  1A9D  00FF               	movwf	127
 12504  1A9E  087F               	movf	127,w
 12505  1A9F  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12506  1AA0  30A7               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12507  1AA1  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 12508  1AA2  3000               	movlw	0
 12509  1AA3  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12510  1AA4  1683               	bsf	3,5	;RP0=1, select bank1
 12511  1AA5  0826               	movf	EEPROM_24C1025_Write_Int@chip_add^(0+128),w
 12512  1AA6  160A  118A  224A   	fcall	_EEPROM_24C1025_Write_Buffer
 12513  1AA9  0008               	return
 12514  1AAA                     __end_of_EEPROM_24C1025_Write_Int:
 12515                           
 12516                           	psect	text51
 12517  124A                     __ptext51:	
 12518 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12519 ;; Defined at:
 12520 ;;		line 15 in file "EEPROM_24C1025.c"
 12521 ;; Parameters:    Size  Location     Type
 12522 ;;  chip_add        1    wreg     unsigned char 
 12523 ;;  mem_add         4   10[BANK0 ] unsigned long 
 12524 ;;  sizedata        1   14[BANK0 ] unsigned char 
 12525 ;;  data            2   15[BANK0 ] PTR unsigned char 
 12526 ;;		 -> usart_protocol.value(52), usart_protocol(58), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 12527 ;; Auto vars:     Size  Location     Type
 12528 ;;  chip_add        1   20[BANK0 ] unsigned char 
 12529 ;;  ctrl            1   22[BANK0 ] unsigned char 
 12530 ;;  range           1   21[BANK0 ] unsigned char 
 12531 ;;  count           1   19[BANK0 ] unsigned char 
 12532 ;; Return value:  Size  Location     Type
 12533 ;;                  1    wreg      void 
 12534 ;; Registers used:
 12535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12536 ;; Tracked objects:
 12537 ;;		On entry : 0/300
 12538 ;;		On exit  : 300/0
 12539 ;;		Unchanged: 0/0
 12540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12541 ;;      Params:         0       7       0       0       0
 12542 ;;      Locals:         0       4       0       0       0
 12543 ;;      Temps:          0       2       0       0       0
 12544 ;;      Totals:         0      13       0       0       0
 12545 ;;Total ram usage:       13 bytes
 12546 ;; Hardware stack levels used:    1
 12547 ;; Hardware stack levels required when called:    3
 12548 ;; This function calls:
 12549 ;;		_I2C_Master_Start
 12550 ;;		_I2C_Master_Stop
 12551 ;;		_I2C_Master_Write
 12552 ;;		_my_delay_ms_WDT
 12553 ;; This function is called by:
 12554 ;;		_EEPROM_24C1025_Write_Byte
 12555 ;;		_EEPROM_24C1025_Write_Int
 12556 ;;		_Decodify_Command
 12557 ;; This function uses a non-reentrant model
 12558 ;;
 12559                           
 12560                           
 12561                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12562  124A                     _EEPROM_24C1025_Write_Buffer:
 12563                           
 12564                           ;incstack = 0
 12565                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 12566                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12567  124A  1283               	bcf	3,5	;RP0=0, select bank0
 12568  124B  1303               	bcf	3,6	;RP1=0, select bank0
 12569  124C  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12570                           
 12571                           ;EEPROM_24C1025.c: 21:      unsigned char ctrl;;EEPROM_24C1025.c: 22:      unsigned char
      +                           count;;EEPROM_24C1025.c: 24:      Delay_Led_Memory=20;
 12572  124D  3014               	movlw	20
 12573  124E  1683               	bsf	3,5	;RP0=1, select bank1
 12574  124F  00DC               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12575  1250  3000               	movlw	0
 12576  1251  00DD               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12577                           
 12578                           ;EEPROM_24C1025.c: 26:      if(mem_add>0x1FFFF) return;
 12579  1252  1283               	bcf	3,5	;RP0=0, select bank0
 12580  1253  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12581  1254  1D03               	btfss	3,2
 12582  1255  0008               	return
 12583  1256  3002               	movlw	2
 12584  1257  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12585  1258  1D03               	skipz
 12586  1259  2A62               	goto	u5323
 12587  125A  3000               	movlw	0
 12588  125B  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12589  125C  1D03               	skipz
 12590  125D  2A62               	goto	u5323
 12591  125E  3000               	movlw	0
 12592  125F  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12593  1260  1D03               	skipz
 12594  1261  2A62               	goto	u5323
 12595  1262                     u5323:
 12596  1262  1803               	btfsc	3,0
 12597  1263  0008               	return
 12598                           
 12599                           ;EEPROM_24C1025.c: 28:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12600  1264  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12601  1265  1D03               	btfss	3,2
 12602  1266  2A75               	goto	l5625
 12603  1267  3001               	movlw	1
 12604  1268  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12605  1269  1D03               	skipz
 12606  126A  2A73               	goto	u5333
 12607  126B  3000               	movlw	0
 12608  126C  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12609  126D  1D03               	skipz
 12610  126E  2A73               	goto	u5333
 12611  126F  3000               	movlw	0
 12612  1270  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12613  1271  1D03               	skipz
 12614  1272  2A73               	goto	u5333
 12615  1273                     u5333:
 12616  1273  1C03               	btfss	3,0
 12617  1274  2A7A               	goto	l5627
 12618  1275                     l5625:
 12619  1275  3008               	movlw	8
 12620  1276  00FF               	movwf	127
 12621  1277  087F               	movf	127,w
 12622  1278  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12623  1279  2A7B               	goto	l5629
 12624  127A                     l5627:
 12625  127A  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12626  127B                     l5629:
 12627                           
 12628                           ;EEPROM_24C1025.c: 29:      ctrl=chip_add;
 12629  127B  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12630  127C  00FF               	movwf	127
 12631  127D  087F               	movf	127,w
 12632  127E  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12633                           
 12634                           ;EEPROM_24C1025.c: 30:      ctrl<<=1;
 12635  127F  1003               	clrc
 12636  1280  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12637                           
 12638                           ;EEPROM_24C1025.c: 31:      ctrl |= 0xA0;
 12639  1281  30A0               	movlw	160
 12640  1282  00FF               	movwf	127
 12641  1283  087F               	movf	127,w
 12642  1284  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12643                           
 12644                           ;EEPROM_24C1025.c: 32:      ctrl |= range;
 12645  1285  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12646  1286  00FF               	movwf	127
 12647  1287  087F               	movf	127,w
 12648  1288  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12649                           
 12650                           ;EEPROM_24C1025.c: 34:      I2C_Master_Start();
 12651  1289  160A  158A  20EE  160A  118A  	fcall	_I2C_Master_Start
 12652                           
 12653                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(ctrl);
 12654  128E  1283               	bcf	3,5	;RP0=0, select bank0
 12655  128F  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12656  1290  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12657  1291  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12658  1292  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12659  1293  00A3               	movwf	I2C_Master_Write@d
 12660  1294  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12661  1295  00A4               	movwf	I2C_Master_Write@d+1
 12662  1296  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 12663                           
 12664                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[1]);
 12665  129B  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12666  129C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12667  129D  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12668  129E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12669  129F  00A3               	movwf	I2C_Master_Write@d
 12670  12A0  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12671  12A1  00A4               	movwf	I2C_Master_Write@d+1
 12672  12A2  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 12673                           
 12674                           ;EEPROM_24C1025.c: 37:      I2C_Master_Write(((char *)&mem_add)[0]);
 12675  12A7  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12676  12A8  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12677  12A9  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12678  12AA  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12679  12AB  00A3               	movwf	I2C_Master_Write@d
 12680  12AC  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12681  12AD  00A4               	movwf	I2C_Master_Write@d+1
 12682  12AE  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 12683                           
 12684                           ;EEPROM_24C1025.c: 38:      for(count=0;count<(sizedata-1);count++)
 12685  12B3  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 12686  12B4                     l5693:
 12687  12B4  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12688  12B5  3EFF               	addlw	255
 12689  12B6  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12690  12B7  30FF               	movlw	255
 12691  12B8  1803               	skipnc
 12692  12B9  3000               	movlw	0
 12693  12BA  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12694  12BB  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12695  12BC  3A80               	xorlw	128
 12696  12BD  3C80               	sublw	128
 12697  12BE  1D03               	skipz
 12698  12BF  2AC2               	goto	u5375
 12699  12C0  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12700  12C1  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12701  12C2                     u5375:
 12702  12C2  1803               	btfsc	3,0
 12703  12C3  2B8F               	goto	l5695
 12704  12C4  0064               	clrwdt	;# 
 12705                           
 12706                           ;EEPROM_24C1025.c: 41:           if(mem_add>0x1FFFF) return;
 12707  12C5  1283               	bcf	3,5	;RP0=0, select bank0
 12708  12C6  1303               	bcf	3,6	;RP1=0, select bank0
 12709  12C7  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12710  12C8  1D03               	btfss	3,2
 12711  12C9  0008               	return
 12712  12CA  3002               	movlw	2
 12713  12CB  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12714  12CC  1D03               	skipz
 12715  12CD  2AD6               	goto	u5343
 12716  12CE  3000               	movlw	0
 12717  12CF  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12718  12D0  1D03               	skipz
 12719  12D1  2AD6               	goto	u5343
 12720  12D2  3000               	movlw	0
 12721  12D3  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12722  12D4  1D03               	skipz
 12723  12D5  2AD6               	goto	u5343
 12724  12D6                     u5343:
 12725  12D6  1803               	btfsc	3,0
 12726  12D7  0008               	return
 12727                           
 12728                           ;EEPROM_24C1025.c: 42:           if((mem_add+1)%128==0)
 12729  12D8  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12730  12D9  3E01               	addlw	1
 12731  12DA  397F               	andlw	127
 12732  12DB  1D03               	btfss	3,2
 12733  12DC  2B65               	goto	l5685
 12734                           
 12735                           ;EEPROM_24C1025.c: 43:             {;EEPROM_24C1025.c: 44:             I2C_Master_Write(
      +                          *data);
 12736  12DD  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12737  12DE  0084               	movwf	4
 12738  12DF  1783               	bsf	3,7
 12739  12E0  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12740  12E1  1383               	bcf	3,7
 12741  12E2  0800               	movf	0,w
 12742  12E3  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12743  12E4  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12744  12E5  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12745  12E6  00A3               	movwf	I2C_Master_Write@d
 12746  12E7  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12747  12E8  00A4               	movwf	I2C_Master_Write@d+1
 12748  12E9  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 12749                           
 12750                           ;EEPROM_24C1025.c: 45:             I2C_Master_Stop();
 12751  12EE  160A  158A  20B7  160A  118A  	fcall	_I2C_Master_Stop
 12752                           
 12753                           ;EEPROM_24C1025.c: 47:             my_delay_ms_WDT(5);
 12754  12F3  3000               	movlw	0
 12755  12F4  1283               	bcf	3,5	;RP0=0, select bank0
 12756  12F5  00A3               	movwf	my_delay_ms_WDT@time+3
 12757  12F6  3000               	movlw	0
 12758  12F7  00A2               	movwf	my_delay_ms_WDT@time+2
 12759  12F8  3000               	movlw	0
 12760  12F9  00A1               	movwf	my_delay_ms_WDT@time+1
 12761  12FA  3005               	movlw	5
 12762  12FB  00A0               	movwf	my_delay_ms_WDT@time
 12763  12FC  160A  158A  24B1  160A  118A  	fcall	_my_delay_ms_WDT
 12764                           
 12765                           ;EEPROM_24C1025.c: 48:             mem_add++;
 12766  1301  3001               	movlw	1
 12767  1302  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12768  1303  3000               	movlw	0
 12769  1304  1803               	skipnc
 12770  1305  3001               	movlw	1
 12771  1306  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12772  1307  3000               	movlw	0
 12773  1308  1803               	skipnc
 12774  1309  3001               	movlw	1
 12775  130A  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12776  130B  3000               	movlw	0
 12777  130C  1803               	skipnc
 12778  130D  3001               	movlw	1
 12779  130E  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12780                           
 12781                           ;EEPROM_24C1025.c: 49:             data++;
 12782  130F  3001               	movlw	1
 12783  1310  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12784  1311  1803               	skipnc
 12785  1312  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12786  1313  3000               	movlw	0
 12787  1314  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12788                           
 12789                           ;EEPROM_24C1025.c: 50:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12790  1315  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12791  1316  1D03               	btfss	3,2
 12792  1317  2B26               	goto	l5665
 12793  1318  3001               	movlw	1
 12794  1319  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12795  131A  1D03               	skipz
 12796  131B  2B24               	goto	u5363
 12797  131C  3000               	movlw	0
 12798  131D  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12799  131E  1D03               	skipz
 12800  131F  2B24               	goto	u5363
 12801  1320  3000               	movlw	0
 12802  1321  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12803  1322  1D03               	skipz
 12804  1323  2B24               	goto	u5363
 12805  1324                     u5363:
 12806  1324  1C03               	btfss	3,0
 12807  1325  2B2B               	goto	l5667
 12808  1326                     l5665:
 12809  1326  3008               	movlw	8
 12810  1327  00FF               	movwf	127
 12811  1328  087F               	movf	127,w
 12812  1329  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12813  132A  2B2C               	goto	l5669
 12814  132B                     l5667:
 12815  132B  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12816  132C                     l5669:
 12817                           
 12818                           ;EEPROM_24C1025.c: 51:             ctrl=chip_add;
 12819  132C  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12820  132D  00FF               	movwf	127
 12821  132E  087F               	movf	127,w
 12822  132F  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12823                           
 12824                           ;EEPROM_24C1025.c: 52:             ctrl<<=1;
 12825  1330  1003               	clrc
 12826  1331  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12827                           
 12828                           ;EEPROM_24C1025.c: 53:             ctrl |= 0xA0;
 12829  1332  30A0               	movlw	160
 12830  1333  00FF               	movwf	127
 12831  1334  087F               	movf	127,w
 12832  1335  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12833                           
 12834                           ;EEPROM_24C1025.c: 54:             ctrl |= range;
 12835  1336  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12836  1337  00FF               	movwf	127
 12837  1338  087F               	movf	127,w
 12838  1339  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12839                           
 12840                           ;EEPROM_24C1025.c: 56:             I2C_Master_Start();
 12841  133A  160A  158A  20EE  160A  118A  	fcall	_I2C_Master_Start
 12842                           
 12843                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(ctrl);
 12844  133F  1283               	bcf	3,5	;RP0=0, select bank0
 12845  1340  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12846  1341  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12847  1342  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12848  1343  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12849  1344  00A3               	movwf	I2C_Master_Write@d
 12850  1345  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12851  1346  00A4               	movwf	I2C_Master_Write@d+1
 12852  1347  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 12853                           
 12854                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[1]);
 12855  134C  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12856  134D  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12857  134E  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12858  134F  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12859  1350  00A3               	movwf	I2C_Master_Write@d
 12860  1351  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12861  1352  00A4               	movwf	I2C_Master_Write@d+1
 12862  1353  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 12863                           
 12864                           ;EEPROM_24C1025.c: 59:             I2C_Master_Write(((char *)&mem_add)[0]);
 12865  1358  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12866  1359  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12867  135A  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12868  135B  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12869  135C  00A3               	movwf	I2C_Master_Write@d
 12870  135D  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12871  135E  00A4               	movwf	I2C_Master_Write@d+1
 12872  135F  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 12873                           
 12874                           ;EEPROM_24C1025.c: 60:             }
 12875  1364  2B8A               	goto	l5691
 12876  1365                     l5685:
 12877                           
 12878                           ;EEPROM_24C1025.c: 62:             {;EEPROM_24C1025.c: 63:             I2C_Master_Write(
      +                          *data);
 12879  1365  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12880  1366  0084               	movwf	4
 12881  1367  1783               	bsf	3,7
 12882  1368  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12883  1369  1383               	bcf	3,7
 12884  136A  0800               	movf	0,w
 12885  136B  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12886  136C  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12887  136D  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12888  136E  00A3               	movwf	I2C_Master_Write@d
 12889  136F  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12890  1370  00A4               	movwf	I2C_Master_Write@d+1
 12891  1371  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 12892                           
 12893                           ;EEPROM_24C1025.c: 64:             data++;
 12894  1376  3001               	movlw	1
 12895  1377  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12896  1378  1803               	skipnc
 12897  1379  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12898  137A  3000               	movlw	0
 12899  137B  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12900                           
 12901                           ;EEPROM_24C1025.c: 65:             mem_add++;
 12902  137C  3001               	movlw	1
 12903  137D  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12904  137E  3000               	movlw	0
 12905  137F  1803               	skipnc
 12906  1380  3001               	movlw	1
 12907  1381  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12908  1382  3000               	movlw	0
 12909  1383  1803               	skipnc
 12910  1384  3001               	movlw	1
 12911  1385  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12912  1386  3000               	movlw	0
 12913  1387  1803               	skipnc
 12914  1388  3001               	movlw	1
 12915  1389  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12916  138A                     l5691:
 12917                           
 12918                           ;EEPROM_24C1025.c: 67:      }
 12919  138A  3001               	movlw	1
 12920  138B  00FF               	movwf	127
 12921  138C  087F               	movf	127,w
 12922  138D  07B3               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 12923  138E  2AB4               	goto	l5693
 12924  138F                     l5695:
 12925                           
 12926                           ;EEPROM_24C1025.c: 68:      I2C_Master_Write(*data);
 12927  138F  1283               	bcf	3,5	;RP0=0, select bank0
 12928  1390  1303               	bcf	3,6	;RP1=0, select bank0
 12929  1391  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12930  1392  0084               	movwf	4
 12931  1393  1783               	bsf	3,7
 12932  1394  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12933  1395  1383               	bcf	3,7
 12934  1396  0800               	movf	0,w
 12935  1397  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12936  1398  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12937  1399  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12938  139A  00A3               	movwf	I2C_Master_Write@d
 12939  139B  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12940  139C  00A4               	movwf	I2C_Master_Write@d+1
 12941  139D  160A  118A  2000  160A  118A  	fcall	_I2C_Master_Write
 12942                           
 12943                           ;EEPROM_24C1025.c: 69:      I2C_Master_Stop();
 12944  13A2  160A  158A  20B7  160A  118A  	fcall	_I2C_Master_Stop
 12945                           
 12946                           ;EEPROM_24C1025.c: 71:      my_delay_ms_WDT(5);
 12947  13A7  3000               	movlw	0
 12948  13A8  1283               	bcf	3,5	;RP0=0, select bank0
 12949  13A9  00A3               	movwf	my_delay_ms_WDT@time+3
 12950  13AA  3000               	movlw	0
 12951  13AB  00A2               	movwf	my_delay_ms_WDT@time+2
 12952  13AC  3000               	movlw	0
 12953  13AD  00A1               	movwf	my_delay_ms_WDT@time+1
 12954  13AE  3005               	movlw	5
 12955  13AF  00A0               	movwf	my_delay_ms_WDT@time
 12956  13B0  160A  158A  24B1   	fcall	_my_delay_ms_WDT
 12957  13B3  0008               	return
 12958  13B4                     __end_of_EEPROM_24C1025_Write_Buffer:
 12959                           
 12960                           	psect	text52
 12961  1CB1                     __ptext52:	
 12962 ;; *************** function _my_delay_ms_WDT *****************
 12963 ;; Defined at:
 12964 ;;		line 13 in file "my_delay.c"
 12965 ;; Parameters:    Size  Location     Type
 12966 ;;  time            4    0[BANK0 ] long 
 12967 ;; Auto vars:     Size  Location     Type
 12968 ;;  i               4    6[BANK0 ] long 
 12969 ;; Return value:  Size  Location     Type
 12970 ;;                  1    wreg      void 
 12971 ;; Registers used:
 12972 ;;		wreg, btemp+1
 12973 ;; Tracked objects:
 12974 ;;		On entry : 300/0
 12975 ;;		On exit  : 300/0
 12976 ;;		Unchanged: 0/0
 12977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12978 ;;      Params:         0       4       0       0       0
 12979 ;;      Locals:         0       4       0       0       0
 12980 ;;      Temps:          0       2       0       0       0
 12981 ;;      Totals:         0      10       0       0       0
 12982 ;;Total ram usage:       10 bytes
 12983 ;; Hardware stack levels used:    1
 12984 ;; Hardware stack levels required when called:    1
 12985 ;; This function calls:
 12986 ;;		Nothing
 12987 ;; This function is called by:
 12988 ;;		_EEPROM_24C1025_Write_Buffer
 12989 ;;		_EEPROM_24C1025_Read_Buffer
 12990 ;;		_EEPROM_24C1025_Write_Str
 12991 ;;		_main
 12992 ;; This function uses a non-reentrant model
 12993 ;;
 12994                           
 12995                           
 12996                           ;psect for function _my_delay_ms_WDT
 12997  1CB1                     _my_delay_ms_WDT:
 12998                           
 12999                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 13000                           
 13001                           ;incstack = 0
 13002                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 13003  1CB1  3000               	movlw	0
 13004  1CB2  00A9               	movwf	my_delay_ms_WDT@i+3
 13005  1CB3  3000               	movlw	0
 13006  1CB4  00A8               	movwf	my_delay_ms_WDT@i+2
 13007  1CB5  3000               	movlw	0
 13008  1CB6  00A7               	movwf	my_delay_ms_WDT@i+1
 13009  1CB7  3000               	movlw	0
 13010  1CB8  00A6               	movwf	my_delay_ms_WDT@i
 13011  1CB9                     l3613:
 13012  1CB9  0829               	movf	my_delay_ms_WDT@i+3,w
 13013  1CBA  3A80               	xorlw	128
 13014  1CBB  00FF               	movwf	127
 13015  1CBC  0823               	movf	my_delay_ms_WDT@time+3,w
 13016  1CBD  3A80               	xorlw	128
 13017  1CBE  027F               	subwf	127,w
 13018  1CBF  1D03               	skipz
 13019  1CC0  2CCB               	goto	u2693
 13020  1CC1  0822               	movf	my_delay_ms_WDT@time+2,w
 13021  1CC2  0228               	subwf	my_delay_ms_WDT@i+2,w
 13022  1CC3  1D03               	skipz
 13023  1CC4  2CCB               	goto	u2693
 13024  1CC5  0821               	movf	my_delay_ms_WDT@time+1,w
 13025  1CC6  0227               	subwf	my_delay_ms_WDT@i+1,w
 13026  1CC7  1D03               	skipz
 13027  1CC8  2CCB               	goto	u2693
 13028  1CC9  0820               	movf	my_delay_ms_WDT@time,w
 13029  1CCA  0226               	subwf	my_delay_ms_WDT@i,w
 13030  1CCB                     u2693:
 13031  1CCB  1803               	btfsc	3,0
 13032  1CCC  0008               	return
 13033  1CCD  0064               	clrwdt	;# 
 13034                           
 13035                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 13036  1CCE  3003               	movlw	3
 13037  1CCF  1283               	bcf	3,5	;RP0=0, select bank0
 13038  1CD0  1303               	bcf	3,6	;RP1=0, select bank0
 13039  1CD1  00A5               	movwf	??_my_delay_ms_WDT+1
 13040  1CD2  3097               	movlw	151
 13041  1CD3  00A4               	movwf	??_my_delay_ms_WDT
 13042  1CD4                     u5617:
 13043  1CD4  0BA4               	decfsz	??_my_delay_ms_WDT,f
 13044  1CD5  2CD4               	goto	u5617
 13045  1CD6  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 13046  1CD7  2CD4               	goto	u5617
 13047                           
 13048                           ;my_delay.c: 19:             }
 13049  1CD8  3001               	movlw	1
 13050  1CD9  1283               	bcf	3,5	;RP0=0, select bank0
 13051  1CDA  1303               	bcf	3,6	;RP1=0, select bank0
 13052  1CDB  07A6               	addwf	my_delay_ms_WDT@i,f
 13053  1CDC  3000               	movlw	0
 13054  1CDD  1803               	skipnc
 13055  1CDE  3001               	movlw	1
 13056  1CDF  07A7               	addwf	my_delay_ms_WDT@i+1,f
 13057  1CE0  3000               	movlw	0
 13058  1CE1  1803               	skipnc
 13059  1CE2  3001               	movlw	1
 13060  1CE3  07A8               	addwf	my_delay_ms_WDT@i+2,f
 13061  1CE4  3000               	movlw	0
 13062  1CE5  1803               	skipnc
 13063  1CE6  3001               	movlw	1
 13064  1CE7  07A9               	addwf	my_delay_ms_WDT@i+3,f
 13065  1CE8  2CB9               	goto	l3613
 13066  1CE9                     __end_of_my_delay_ms_WDT:
 13067                           
 13068                           	psect	text53
 13069  1000                     __ptext53:	
 13070 ;; *************** function _I2C_Master_Write *****************
 13071 ;; Defined at:
 13072 ;;		line 79 in file "I2C.c"
 13073 ;; Parameters:    Size  Location     Type
 13074 ;;  d               2    3[BANK0 ] unsigned int 
 13075 ;; Auto vars:     Size  Location     Type
 13076 ;;		None
 13077 ;; Return value:  Size  Location     Type
 13078 ;;                  1    wreg      void 
 13079 ;; Registers used:
 13080 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 13081 ;; Tracked objects:
 13082 ;;		On entry : 300/0
 13083 ;;		On exit  : 300/0
 13084 ;;		Unchanged: 0/0
 13085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13086 ;;      Params:         0       2       0       0       0
 13087 ;;      Locals:         0       0       0       0       0
 13088 ;;      Temps:          0       0       0       0       0
 13089 ;;      Totals:         0       2       0       0       0
 13090 ;;Total ram usage:        2 bytes
 13091 ;; Hardware stack levels used:    1
 13092 ;; Hardware stack levels required when called:    2
 13093 ;; This function calls:
 13094 ;;		_I2C_Master_Wait
 13095 ;; This function is called by:
 13096 ;;		_EEPROM_24C1025_Write_Buffer
 13097 ;;		_EEPROM_24C1025_Read_Buffer
 13098 ;;		_EEPROM_24C1025_Read_Buffer_USART
 13099 ;;		_EEPROM_24C1025_Write_Str
 13100 ;;		_EEPROM_24C1025_Read_Str
 13101 ;; This function uses a non-reentrant model
 13102 ;;
 13103                           
 13104                           
 13105                           ;psect for function _I2C_Master_Write
 13106  1000                     _I2C_Master_Write:
 13107                           
 13108                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 13109                           
 13110                           ;incstack = 0
 13111                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 13112  1000  160A  158A  221D  160A  118A  	fcall	_I2C_Master_Wait
 13113  1005  3A00               	xorlw	0
 13114  1006  1903               	skipnz
 13115  1007  0008               	return
 13116                           
 13117                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 13118  1008  0823               	movf	I2C_Master_Write@d,w
 13119  1009  0093               	movwf	19	;volatile
 13120  100A  0008               	return
 13121  100B                     __end_of_I2C_Master_Write:
 13122                           
 13123                           	psect	text54
 13124  18B7                     __ptext54:	
 13125 ;; *************** function _I2C_Master_Stop *****************
 13126 ;; Defined at:
 13127 ;;		line 70 in file "I2C.c"
 13128 ;; Parameters:    Size  Location     Type
 13129 ;;		None
 13130 ;; Auto vars:     Size  Location     Type
 13131 ;;		None
 13132 ;; Return value:  Size  Location     Type
 13133 ;;                  1    wreg      void 
 13134 ;; Registers used:
 13135 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 13136 ;; Tracked objects:
 13137 ;;		On entry : 300/800
 13138 ;;		On exit  : 200/0
 13139 ;;		Unchanged: 0/0
 13140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13141 ;;      Params:         0       0       0       0       0
 13142 ;;      Locals:         0       0       0       0       0
 13143 ;;      Temps:          0       0       0       0       0
 13144 ;;      Totals:         0       0       0       0       0
 13145 ;;Total ram usage:        0 bytes
 13146 ;; Hardware stack levels used:    1
 13147 ;; Hardware stack levels required when called:    2
 13148 ;; This function calls:
 13149 ;;		_I2C_Master_Wait
 13150 ;; This function is called by:
 13151 ;;		_EEPROM_24C1025_Write_Buffer
 13152 ;;		_EEPROM_24C1025_Read_Buffer
 13153 ;;		_EEPROM_24C1025_Read_Buffer_USART
 13154 ;;		_EEPROM_24C1025_Write_Str
 13155 ;;		_EEPROM_24C1025_Read_Str
 13156 ;; This function uses a non-reentrant model
 13157 ;;
 13158                           
 13159                           
 13160                           ;psect for function _I2C_Master_Stop
 13161  18B7                     _I2C_Master_Stop:
 13162                           
 13163                           ;I2C.c: 72:   if(I2C_Master_Wait())
 13164                           
 13165                           ;incstack = 0
 13166                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 13167  18B7  160A  158A  221D   	fcall	_I2C_Master_Wait
 13168  18BA  3A00               	xorlw	0
 13169                           
 13170                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 13171  18BB  1683               	bsf	3,5	;RP0=1, select bank1
 13172  18BC  1D03               	btfss	3,2
 13173  18BD  1511               	bsf	17,2	;volatile
 13174                           
 13175                           ;I2C.c: 76:   INTCONbits.GIE=1;
 13176                           
 13177                           ;I2C.c: 75:     }
 13178  18BE  178B               	bsf	11,7	;volatile
 13179  18BF  0008               	return
 13180  18C0                     __end_of_I2C_Master_Stop:
 13181                           
 13182                           	psect	text55
 13183  18EE                     __ptext55:	
 13184 ;; *************** function _I2C_Master_Start *****************
 13185 ;; Defined at:
 13186 ;;		line 52 in file "I2C.c"
 13187 ;; Parameters:    Size  Location     Type
 13188 ;;		None
 13189 ;; Auto vars:     Size  Location     Type
 13190 ;;		None
 13191 ;; Return value:  Size  Location     Type
 13192 ;;                  1    wreg      void 
 13193 ;; Registers used:
 13194 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 13195 ;; Tracked objects:
 13196 ;;		On entry : 300/0
 13197 ;;		On exit  : 200/0
 13198 ;;		Unchanged: 0/0
 13199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13200 ;;      Params:         0       0       0       0       0
 13201 ;;      Locals:         0       0       0       0       0
 13202 ;;      Temps:          0       0       0       0       0
 13203 ;;      Totals:         0       0       0       0       0
 13204 ;;Total ram usage:        0 bytes
 13205 ;; Hardware stack levels used:    1
 13206 ;; Hardware stack levels required when called:    2
 13207 ;; This function calls:
 13208 ;;		_I2C_Master_Wait
 13209 ;; This function is called by:
 13210 ;;		_EEPROM_24C1025_Write_Buffer
 13211 ;;		_EEPROM_24C1025_Read_Buffer
 13212 ;;		_EEPROM_24C1025_Read_Buffer_USART
 13213 ;;		_EEPROM_24C1025_Write_Str
 13214 ;;		_EEPROM_24C1025_Read_Str
 13215 ;; This function uses a non-reentrant model
 13216 ;;
 13217                           
 13218                           
 13219                           ;psect for function _I2C_Master_Start
 13220  18EE                     _I2C_Master_Start:
 13221                           
 13222                           ;I2C.c: 54:   INTCONbits.GIE=0;
 13223                           
 13224                           ;incstack = 0
 13225                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 13226  18EE  138B               	bcf	11,7	;volatile
 13227                           
 13228                           ;I2C.c: 55:   Delay_Led_Memory=20;
 13229  18EF  3014               	movlw	20
 13230  18F0  1683               	bsf	3,5	;RP0=1, select bank1
 13231  18F1  00DC               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 13232  18F2  3000               	movlw	0
 13233  18F3  00DD               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 13234                           
 13235                           ;I2C.c: 56:   if(I2C_Master_Wait())
 13236  18F4  160A  158A  221D  160A  158A  	fcall	_I2C_Master_Wait
 13237  18F9  3A00               	xorlw	0
 13238  18FA  1903               	skipnz
 13239  18FB  0008               	return
 13240                           
 13241                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 13242  18FC  1683               	bsf	3,5	;RP0=1, select bank1
 13243  18FD  1411               	bsf	17,0	;volatile
 13244  18FE  0008               	return
 13245  18FF                     __end_of_I2C_Master_Start:
 13246                           
 13247                           	psect	text56
 13248  1A1D                     __ptext56:	
 13249 ;; *************** function _I2C_Master_Wait *****************
 13250 ;; Defined at:
 13251 ;;		line 37 in file "I2C.c"
 13252 ;; Parameters:    Size  Location     Type
 13253 ;;		None
 13254 ;; Auto vars:     Size  Location     Type
 13255 ;;  tempo           1    2[BANK0 ] unsigned char 
 13256 ;; Return value:  Size  Location     Type
 13257 ;;                  1    wreg      unsigned char 
 13258 ;; Registers used:
 13259 ;;		wreg, status,2, status,0, btemp+1
 13260 ;; Tracked objects:
 13261 ;;		On entry : 200/0
 13262 ;;		On exit  : 300/0
 13263 ;;		Unchanged: 0/0
 13264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13265 ;;      Params:         0       0       0       0       0
 13266 ;;      Locals:         0       1       0       0       0
 13267 ;;      Temps:          0       2       0       0       0
 13268 ;;      Totals:         0       3       0       0       0
 13269 ;;Total ram usage:        3 bytes
 13270 ;; Hardware stack levels used:    1
 13271 ;; Hardware stack levels required when called:    1
 13272 ;; This function calls:
 13273 ;;		Nothing
 13274 ;; This function is called by:
 13275 ;;		_I2C_Master_Start
 13276 ;;		_I2C_Master_RepeatedStart
 13277 ;;		_I2C_Master_Stop
 13278 ;;		_I2C_Master_Write
 13279 ;;		_I2C_Master_Read
 13280 ;; This function uses a non-reentrant model
 13281 ;;
 13282                           
 13283                           
 13284                           ;psect for function _I2C_Master_Wait
 13285  1A1D                     _I2C_Master_Wait:
 13286                           
 13287                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 13288                           
 13289                           ;incstack = 0
 13290                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0+btemp+1]
 13291  1A1D  30C8               	movlw	200
 13292  1A1E  00FF               	movwf	127
 13293  1A1F  087F               	movf	127,w
 13294  1A20  1283               	bcf	3,5	;RP0=0, select bank0
 13295  1A21  00A2               	movwf	I2C_Master_Wait@tempo
 13296                           
 13297                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13298  1A22  2A2F               	goto	l3585
 13299  1A23                     l3581:
 13300                           
 13301                           ;I2C.c: 44:          tempo--;
 13302  1A23  3001               	movlw	1
 13303  1A24  02A2               	subwf	I2C_Master_Wait@tempo,f
 13304                           
 13305                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 13306  1A25  3003               	movlw	3
 13307  1A26  1283               	bcf	3,5	;RP0=0, select bank0
 13308  1A27  1303               	bcf	3,6	;RP1=0, select bank0
 13309  1A28  00A1               	movwf	??_I2C_Master_Wait+1
 13310  1A29  3097               	movlw	151
 13311  1A2A  00A0               	movwf	??_I2C_Master_Wait
 13312  1A2B                     u5627:
 13313  1A2B  0BA0               	decfsz	??_I2C_Master_Wait,f
 13314  1A2C  2A2B               	goto	u5627
 13315  1A2D  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 13316  1A2E  2A2B               	goto	u5627
 13317  1A2F                     l3585:
 13318                           
 13319                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13320  1A2F  1683               	bsf	3,5	;RP0=1, select bank1
 13321  1A30  1303               	bcf	3,6	;RP1=0, select bank1
 13322  1A31  1914               	btfsc	20,2	;volatile
 13323  1A32  2A37               	goto	l3579
 13324  1A33  0811               	movf	17,w	;volatile
 13325  1A34  391F               	andlw	31
 13326  1A35  1903               	btfsc	3,2
 13327  1A36  2A3B               	goto	l3589
 13328  1A37                     l3579:
 13329                           
 13330                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 13331  1A37  1283               	bcf	3,5	;RP0=0, select bank0
 13332  1A38  0822               	movf	I2C_Master_Wait@tempo,w
 13333  1A39  1D03               	btfss	3,2
 13334  1A3A  2A23               	goto	l3581
 13335  1A3B                     l3589:
 13336                           
 13337                           ;I2C.c: 49:   return tempo ;
 13338  1A3B  1283               	bcf	3,5	;RP0=0, select bank0
 13339  1A3C  0822               	movf	I2C_Master_Wait@tempo,w
 13340  1A3D  0008               	return
 13341  1A3E                     __end_of_I2C_Master_Wait:
 13342                           
 13343                           	psect	text57
 13344  18D3                     __ptext57:	
 13345 ;; *************** function _ADC_init *****************
 13346 ;; Defined at:
 13347 ;;		line 10 in file "adc.c"
 13348 ;; Parameters:    Size  Location     Type
 13349 ;;		None
 13350 ;; Auto vars:     Size  Location     Type
 13351 ;;		None
 13352 ;; Return value:  Size  Location     Type
 13353 ;;                  1    wreg      void 
 13354 ;; Registers used:
 13355 ;;		wreg, status,2, status,0
 13356 ;; Tracked objects:
 13357 ;;		On entry : 0/100
 13358 ;;		On exit  : 300/0
 13359 ;;		Unchanged: 0/0
 13360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13361 ;;      Params:         0       0       0       0       0
 13362 ;;      Locals:         0       0       0       0       0
 13363 ;;      Temps:          0       0       0       0       0
 13364 ;;      Totals:         0       0       0       0       0
 13365 ;;Total ram usage:        0 bytes
 13366 ;; Hardware stack levels used:    1
 13367 ;; Hardware stack levels required when called:    1
 13368 ;; This function calls:
 13369 ;;		Nothing
 13370 ;; This function is called by:
 13371 ;;		_main
 13372 ;; This function uses a non-reentrant model
 13373 ;;
 13374                           
 13375                           
 13376                           ;psect for function _ADC_init
 13377  18D3                     _ADC_init:
 13378                           
 13379                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13380                           
 13381                           ;incstack = 0
 13382                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13383  18D3  30C0               	movlw	192
 13384  18D4  1283               	bcf	3,5	;RP0=0, select bank0
 13385  18D5  1303               	bcf	3,6	;RP1=0, select bank0
 13386  18D6  049F               	iorwf	31,f	;volatile
 13387                           
 13388                           ;adc.c: 12:      ADCON1=0b10000000;
 13389  18D7  3080               	movlw	128
 13390  18D8  1683               	bsf	3,5	;RP0=1, select bank1
 13391  18D9  009F               	movwf	31	;volatile
 13392                           
 13393                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13394  18DA  179F               	bsf	31,7	;volatile
 13395                           
 13396                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13397  18DB  1283               	bcf	3,5	;RP0=0, select bank0
 13398  18DC  141F               	bsf	31,0	;volatile
 13399  18DD  0008               	return
 13400  18DE                     __end_of_ADC_init:
 13401                           
 13402                           	psect	text58
 13403  1069                     __ptext58:	
 13404 ;; *************** function _isr *****************
 13405 ;; Defined at:
 13406 ;;		line 29 in file "isr.c"
 13407 ;; Parameters:    Size  Location     Type
 13408 ;;		None
 13409 ;; Auto vars:     Size  Location     Type
 13410 ;;  tempo           2    6[COMMON] unsigned int 
 13411 ;; Return value:  Size  Location     Type
 13412 ;;                  1    wreg      void 
 13413 ;; Registers used:
 13414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13415 ;; Tracked objects:
 13416 ;;		On entry : 0/0
 13417 ;;		On exit  : 300/0
 13418 ;;		Unchanged: 0/0
 13419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13420 ;;      Params:         0       0       0       0       0
 13421 ;;      Locals:         2       0       0       0       0
 13422 ;;      Temps:          6       0       0       0       0
 13423 ;;      Totals:         8       0       0       0       0
 13424 ;;Total ram usage:        8 bytes
 13425 ;; Hardware stack levels used:    1
 13426 ;; This function calls:
 13427 ;;		Nothing
 13428 ;; This function is called by:
 13429 ;;		Interrupt level 1
 13430 ;; This function uses a non-reentrant model
 13431 ;;
 13432                           
 13433                           
 13434                           ;psect for function _isr
 13435  1069                     _isr:
 13436                           
 13437                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13438  1069  188B               	btfsc	11,1	;volatile
 13439                           
 13440                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13441  106A  108B               	bcf	11,1	;volatile
 13442                           
 13443                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13444                           
 13445                           ;isr.c: 37:       }
 13446  106B  1C0C               	btfss	12,0	;volatile
 13447  106C  28E4               	goto	i1l5559
 13448                           
 13449                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13450  106D  30B1               	movlw	177
 13451  106E  008F               	movwf	15	;volatile
 13452                           
 13453                           ;isr.c: 42:                 TMR1L=0xF3;
 13454  106F  30F3               	movlw	243
 13455  1070  008E               	movwf	14	;volatile
 13456                           
 13457                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13458  1071  100C               	bcf	12,0	;volatile
 13459                           
 13460                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13461  1072  1683               	bsf	3,5	;RP0=1, select bank1
 13462  1073  1FE3               	btfss	_generic_status^(0+128),7
 13463  1074  2877               	goto	i1l5515
 13464                           
 13465                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13466  1075  13E3               	bcf	_generic_status^(0+128),7
 13467  1076  0064               	clrwdt	;# 
 13468  1077                     i1l5515:
 13469                           
 13470                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13471  1077  300A               	movlw	10
 13472  1078  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 13473  1079  1803               	skipnc
 13474  107A  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 13475  107B  3000               	movlw	0
 13476  107C  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 13477                           
 13478                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13479  107D  3003               	movlw	3
 13480  107E  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13481  107F  30E8               	movlw	232
 13482  1080  1903               	skipnz
 13483  1081  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13484  1082  1C03               	skipc
 13485  1083  2886               	goto	i1l5519
 13486                           
 13487                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13488  1084  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 13489  1085  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 13490  1086                     i1l5519:
 13491                           
 13492                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13493  1086  3001               	movlw	1
 13494  1087  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13495  1088  30F4               	movlw	244
 13496  1089  1903               	skipnz
 13497  108A  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13498  108B  1803               	skipnc
 13499  108C  2891               	goto	i1l644
 13500                           
 13501                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13502  108D  1283               	bcf	3,5	;RP0=0, select bank0
 13503  108E  1303               	bcf	3,6	;RP1=0, select bank0
 13504  108F  1786               	bsf	6,7	;volatile
 13505  1090  2894               	goto	i1l5523
 13506  1091                     i1l644:	
 13507                           ;isr.c: 56:                 else
 13508                           
 13509                           
 13510                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13511  1091  1283               	bcf	3,5	;RP0=0, select bank0
 13512  1092  1303               	bcf	3,6	;RP1=0, select bank0
 13513  1093  1386               	bcf	6,7	;volatile
 13514  1094                     i1l5523:
 13515                           
 13516                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13517  1094  1683               	bsf	3,5	;RP0=1, select bank1
 13518  1095  085A               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 13519  1096  045B               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 13520  1097  1903               	btfsc	3,2
 13521  1098  28A2               	goto	i1l646
 13522                           
 13523                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13524  1099  300A               	movlw	10
 13525  109A  02DA               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 13526  109B  3000               	movlw	0
 13527  109C  1C03               	skipc
 13528  109D  03DB               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13529  109E  02DB               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13530                           
 13531                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13532  109F  1283               	bcf	3,5	;RP0=0, select bank0
 13533  10A0  1706               	bsf	6,6	;volatile
 13534                           
 13535                           ;isr.c: 63:                    }
 13536  10A1  28A4               	goto	i1l5529
 13537  10A2                     i1l646:	
 13538                           ;isr.c: 64:                 else{
 13539                           
 13540                           
 13541                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13542  10A2  1283               	bcf	3,5	;RP0=0, select bank0
 13543  10A3  1306               	bcf	6,6	;volatile
 13544  10A4                     i1l5529:
 13545                           
 13546                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13547  10A4  1683               	bsf	3,5	;RP0=1, select bank1
 13548  10A5  085C               	movf	_Delay_Led_Memory^(0+128),w	;volatile
 13549  10A6  045D               	iorwf	(_Delay_Led_Memory+1)^(0+128),w	;volatile
 13550  10A7  1903               	btfsc	3,2
 13551  10A8  28B2               	goto	i1l648
 13552                           
 13553                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13554  10A9  300A               	movlw	10
 13555  10AA  02DC               	subwf	_Delay_Led_Memory^(0+128),f	;volatile
 13556  10AB  3000               	movlw	0
 13557  10AC  1C03               	skipc
 13558  10AD  03DD               	decf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13559  10AE  02DD               	subwf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13560                           
 13561                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13562  10AF  1283               	bcf	3,5	;RP0=0, select bank0
 13563  10B0  1686               	bsf	6,5	;volatile
 13564                           
 13565                           ;isr.c: 71:                    }
 13566  10B1  28B4               	goto	i1l5535
 13567  10B2                     i1l648:	
 13568                           ;isr.c: 72:                 else{
 13569                           
 13570                           
 13571                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13572  10B2  1283               	bcf	3,5	;RP0=0, select bank0
 13573  10B3  1286               	bcf	6,5	;volatile
 13574  10B4                     i1l5535:
 13575                           
 13576                           ;isr.c: 77:                 tempodecorrido+=10;
 13577  10B4  300A               	movlw	10
 13578  10B5  1683               	bsf	3,5	;RP0=1, select bank1
 13579  10B6  07D2               	addwf	_tempodecorrido^(0+128),f	;volatile
 13580  10B7  1803               	skipnc
 13581  10B8  0AD3               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13582  10B9  3000               	movlw	0
 13583  10BA  07D3               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13584                           
 13585                           ;isr.c: 78:                 milisegundo+=10;
 13586  10BB  300A               	movlw	10
 13587  10BC  07D8               	addwf	_milisegundo^(0+128),f	;volatile
 13588  10BD  1803               	skipnc
 13589  10BE  0AD9               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13590  10BF  3000               	movlw	0
 13591  10C0  07D9               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13592                           
 13593                           ;isr.c: 79:                 if(milisegundo==1000){
 13594  10C1  30E8               	movlw	232
 13595  10C2  0658               	xorwf	_milisegundo^(0+128),w	;volatile
 13596  10C3  3003               	movlw	3
 13597  10C4  1903               	skipnz
 13598  10C5  0659               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13599  10C6  1D03               	btfss	3,2
 13600  10C7  28E4               	goto	i1l5559
 13601                           
 13602                           ;isr.c: 80:                    milisegundo=0;
 13603  10C8  01D8               	clrf	_milisegundo^(0+128)	;volatile
 13604  10C9  01D9               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13605                           
 13606                           ;isr.c: 81:                    segundo++;
 13607  10CA  3001               	movlw	1
 13608  10CB  00FF               	movwf	127
 13609  10CC  087F               	movf	127,w
 13610  10CD  07FD               	addwf	_segundo,f	;volatile
 13611                           
 13612                           ;isr.c: 88:                    if(segundo==60){
 13613  10CE  303C               	movlw	60
 13614  10CF  067D               	xorwf	_segundo,w	;volatile
 13615  10D0  1D03               	btfss	3,2
 13616  10D1  28E4               	goto	i1l5559
 13617                           
 13618                           ;isr.c: 89:                       segundo=0;
 13619  10D2  01FD               	clrf	_segundo	;volatile
 13620                           
 13621                           ;isr.c: 90:                       minuto++;
 13622  10D3  3001               	movlw	1
 13623  10D4  00FF               	movwf	127
 13624  10D5  087F               	movf	127,w
 13625  10D6  07FA               	addwf	_minuto,f	;volatile
 13626                           
 13627                           ;isr.c: 91:                       if(minuto==60){
 13628  10D7  303C               	movlw	60
 13629  10D8  067A               	xorwf	_minuto,w	;volatile
 13630  10D9  1D03               	btfss	3,2
 13631  10DA  28E4               	goto	i1l5559
 13632                           
 13633                           ;isr.c: 92:                          minuto=0;
 13634  10DB  01FA               	clrf	_minuto	;volatile
 13635                           
 13636                           ;isr.c: 93:                          hora++;
 13637  10DC  3001               	movlw	1
 13638  10DD  00FF               	movwf	127
 13639  10DE  087F               	movf	127,w
 13640  10DF  07FC               	addwf	_hora,f	;volatile
 13641                           
 13642                           ;isr.c: 94:                          if(hora==24){
 13643  10E0  3018               	movlw	24
 13644  10E1  067C               	xorwf	_hora,w	;volatile
 13645  10E2  1903               	btfsc	3,2
 13646                           
 13647                           ;isr.c: 95:                             hora=0;
 13648  10E3  01FC               	clrf	_hora	;volatile
 13649  10E4                     i1l5559:	
 13650                           ;isr.c: 99:                 }
 13651                           
 13652                           
 13653                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13654  10E4  1283               	bcf	3,5	;RP0=0, select bank0
 13655  10E5  1E8C               	btfss	12,5	;volatile
 13656  10E6  294B               	goto	i1l662
 13657                           
 13658                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13659  10E7  1683               	bsf	3,5	;RP0=1, select bank1
 13660  10E8  1463               	bsf	_generic_status^(0+128),0
 13661                           
 13662                           ;isr.c: 109:         tempo=30;
 13663  10E9  301E               	movlw	30
 13664  10EA  00F6               	movwf	isr@tempo
 13665  10EB  3000               	movlw	0
 13666  10EC  00F7               	movwf	isr@tempo+1
 13667                           
 13668                           ;isr.c: 110:         count=0;
 13669  10ED  01D4               	clrf	_count^(0+128)	;volatile
 13670  10EE  01D5               	clrf	(_count+1)^(0+128)	;volatile
 13671                           
 13672                           ;isr.c: 111:         pointer=usart_buffer;
 13673  10EF  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13674  10F0  00FF               	movwf	127
 13675  10F1  087F               	movf	127,w
 13676  10F2  00DE               	movwf	_pointer^(0+128)
 13677  10F3                     i1l5581:	
 13678                           ;isr.c: 112:         while(tempo)
 13679                           
 13680                           
 13681                           ;isr.c: 112:         while(tempo)
 13682  10F3  0876               	movf	isr@tempo,w
 13683  10F4  0477               	iorwf	isr@tempo+1,w
 13684  10F5  1903               	btfsc	3,2
 13685  10F6  2926               	goto	i1l5583
 13686                           
 13687                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13688  10F7  1283               	bcf	3,5	;RP0=0, select bank0
 13689  10F8  1303               	bcf	3,6	;RP1=0, select bank0
 13690  10F9  1E8C               	btfss	12,5	;volatile
 13691  10FA  291F               	goto	i1l5579
 13692                           
 13693                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13694  10FB  081A               	movf	26,w	;volatile
 13695  10FC  00FF               	movwf	127
 13696  10FD  1683               	bsf	3,5	;RP0=1, select bank1
 13697  10FE  085E               	movf	_pointer^(0+128),w
 13698  10FF  0084               	movwf	4
 13699  1100  087F               	movf	127,w
 13700  1101  1783               	bsf	3,7	;select IRP bank2
 13701  1102  0080               	movwf	0
 13702                           
 13703                           ;isr.c: 118:                 if(count<32+20 -1)
 13704  1103  0855               	movf	(_count+1)^(0+128),w	;volatile
 13705  1104  3A80               	xorlw	128
 13706  1105  00FF               	movwf	127
 13707  1106  3080               	movlw	128
 13708  1107  027F               	subwf	127,w
 13709  1108  1D03               	skipz
 13710  1109  290C               	goto	u529_25
 13711  110A  3033               	movlw	51
 13712  110B  0254               	subwf	_count^(0+128),w	;volatile
 13713  110C                     u529_25:
 13714  110C  1803               	skipnc
 13715  110D  291A               	goto	i1l5577
 13716                           
 13717                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13718  110E  3001               	movlw	1
 13719  110F  1683               	bsf	3,5	;RP0=1, select bank1
 13720  1110  1303               	bcf	3,6	;RP1=0, select bank1
 13721  1111  07D4               	addwf	_count^(0+128),f	;volatile
 13722  1112  1803               	skipnc
 13723  1113  0AD5               	incf	(_count+1)^(0+128),f	;volatile
 13724  1114  3000               	movlw	0
 13725  1115  07D5               	addwf	(_count+1)^(0+128),f	;volatile
 13726                           
 13727                           ;isr.c: 121:                    pointer++;
 13728  1116  3001               	movlw	1
 13729  1117  00FF               	movwf	127
 13730  1118  087F               	movf	127,w
 13731  1119  07DE               	addwf	_pointer^(0+128),f
 13732  111A                     i1l5577:
 13733                           
 13734                           ;isr.c: 123:                 tempo=30;
 13735  111A  301E               	movlw	30
 13736  111B  00F6               	movwf	isr@tempo
 13737  111C  3000               	movlw	0
 13738  111D  00F7               	movwf	isr@tempo+1
 13739                           
 13740                           ;isr.c: 124:             }
 13741  111E  28F3               	goto	i1l5581
 13742  111F                     i1l5579:
 13743                           
 13744                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13745  111F  3001               	movlw	1
 13746  1120  02F6               	subwf	isr@tempo,f
 13747  1121  3000               	movlw	0
 13748  1122  1C03               	skipc
 13749  1123  03F7               	decf	isr@tempo+1,f
 13750  1124  02F7               	subwf	isr@tempo+1,f
 13751  1125  28F3               	goto	i1l5581
 13752  1126                     i1l5583:
 13753                           
 13754                           ;isr.c: 131:         (*pointer)=0;
 13755  1126  1683               	bsf	3,5	;RP0=1, select bank1
 13756  1127  1303               	bcf	3,6	;RP1=0, select bank1
 13757  1128  085E               	movf	_pointer^(0+128),w
 13758  1129  0084               	movwf	4
 13759  112A  1783               	bsf	3,7	;select IRP bank2
 13760  112B  0180               	clrf	0
 13761                           
 13762                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13763  112C  1283               	bcf	3,5	;RP0=0, select bank0
 13764  112D  1C98               	btfss	24,1	;volatile
 13765  112E  294B               	goto	i1l662
 13766                           
 13767                           ;isr.c: 134:            CREN=0;
 13768  112F  1218               	bcf	24,4	;volatile
 13769                           
 13770                           ;isr.c: 135:            CREN=1;
 13771  1130  1618               	bsf	24,4	;volatile
 13772                           
 13773                           ;isr.c: 136:            tempo=RCREG;
 13774  1131  081A               	movf	26,w	;volatile
 13775  1132  00F0               	movwf	??_isr
 13776  1133  01F1               	clrf	??_isr+1
 13777  1134  0870               	movf	??_isr,w
 13778  1135  00F6               	movwf	isr@tempo
 13779  1136  0871               	movf	??_isr+1,w
 13780  1137  00F7               	movwf	isr@tempo+1
 13781                           
 13782                           ;isr.c: 137:            tempo=RCREG;
 13783  1138  081A               	movf	26,w	;volatile
 13784  1139  00F0               	movwf	??_isr
 13785  113A  01F1               	clrf	??_isr+1
 13786  113B  0870               	movf	??_isr,w
 13787  113C  00F6               	movwf	isr@tempo
 13788  113D  0871               	movf	??_isr+1,w
 13789  113E  00F7               	movwf	isr@tempo+1
 13790                           
 13791                           ;isr.c: 138:            tempo=RCREG;
 13792  113F  081A               	movf	26,w	;volatile
 13793  1140  00F0               	movwf	??_isr
 13794  1141  01F1               	clrf	??_isr+1
 13795  1142  0870               	movf	??_isr,w
 13796  1143  00F6               	movwf	isr@tempo
 13797  1144  0871               	movf	??_isr+1,w
 13798  1145  00F7               	movwf	isr@tempo+1
 13799                           
 13800                           ;isr.c: 139:            usart_buffer[0]=0;
 13801  1146  1703               	bsf	3,6	;RP1=1, select bank2
 13802  1147  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13803                           
 13804                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13805  1148  1683               	bsf	3,5	;RP0=1, select bank1
 13806  1149  1303               	bcf	3,6	;RP1=0, select bank1
 13807  114A  14E3               	bsf	_generic_status^(0+128),1
 13808  114B                     i1l662:
 13809  114B  0875               	movf	??_isr+5,w
 13810  114C  1283               	bcf	3,5	;RP0=0, select bank0
 13811  114D  00FF               	movwf	127
 13812  114E  0874               	movf	??_isr+4,w
 13813  114F  008A               	movwf	10
 13814  1150  0873               	movf	??_isr+3,w
 13815  1151  0084               	movwf	4
 13816  1152  0E72               	swapf	(??_isr+2)^(0+4294967168),w
 13817  1153  0083               	movwf	3
 13818  1154  0EFE               	swapf	126,f
 13819  1155  0E7E               	swapf	126,w
 13820  1156  0009               	retfie
 13821  1157                     __end_of_isr:
 13822  007E                     btemp	set	126	;btemp
 13823  007E                     wtemp0	set	126
 13824                           
 13825                           	psect	intentry
 13826  0004                     __pintentry:	
 13827                           ;incstack = 0
 13828                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13829                           
 13830  0004                     interrupt_function:
 13831  007E                     saved_w	set	btemp
 13832  0004  00FE               	movwf	btemp
 13833  0005  0E03               	swapf	3,w
 13834  0006  00F2               	movwf	??_isr+2
 13835  0007  0804               	movf	4,w
 13836  0008  00F3               	movwf	??_isr+3
 13837  0009  080A               	movf	10,w
 13838  000A  00F4               	movwf	??_isr+4
 13839  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13840  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13841  000D  087F               	movf	btemp+1,w
 13842  000E  00F5               	movwf	??_isr+5
 13843  000F  160A  118A  2869   	ljmp	_isr
 13844                           
 13845                           	psect	config
 13846                           
 13847                           ;Config register CONFIG1 @ 0x2007
 13848                           ;	Oscillator Selection bits
 13849                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 13850                           ;	Watchdog Timer Enable bit
 13851                           ;	WDTE = ON, WDT enabled
 13852                           ;	Power-up Timer Enable bit
 13853                           ;	PWRTE = ON, PWRT enabled
 13854                           ;	RE3/MCLR pin function select bit
 13855                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 13856                           ;	Code Protection bit
 13857                           ;	CP = ON, Program memory code protection is enabled
 13858                           ;	Data Code Protection bit
 13859                           ;	CPD = OFF, Data memory code protection is disabled
 13860                           ;	Brown Out Reset Selection bits
 13861                           ;	BOREN = ON, BOR enabled
 13862                           ;	Internal External Switchover bit
 13863                           ;	IESO = ON, Internal/External Switchover mode is enabled
 13864                           ;	Fail-Safe Clock Monitor Enabled bit
 13865                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13866                           ;	Low Voltage Programming Enable bit
 13867                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 13868                           ;	In-Circuit Debugger Mode bit
 13869                           ;	DEBUG = 0x1, unprogrammed default
 13870  2007                     	org	8199
 13871  2007  2F8C               	dw	12172
 13872                           
 13873                           ;Config register CONFIG2 @ 0x2008
 13874                           ;	Brown-out Reset Selection bit
 13875                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 13876                           ;	Flash Program Memory Self Write Enable bits
 13877                           ;	WRT = OFF, Write protection off
 13878  2008                     	org	8200
 13879  2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    64
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     80      80
    BANK1            80     40      68
    BANK3            96      0      91
    BANK2            96      0      52

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK1[2]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 58
		 -> usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 58
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK1[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK1[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 52
		 -> NULL(NULL[0]), usart_buffer(BANK2[52]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Str@buffer	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_24C1025_Read_Buffer_USART@data	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), EEPROM_24C1025_Write_Int@local(BANK1[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _MediaPlacaVaccum->___flmul
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_USART_put_int
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->___fltol
    ___fltol->___flmul
    ___flmul->___fladd
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Buffer_USART->_I2C_Master_Read
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _Save_Log->_EEPROM_24C1025_Write_Int
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  119692
                                             35 BANK1      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           6     2      4     167
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    16    16      0   20583
                                             69 BANK0      1     1      0
                                              0 BANK1     11    11      0
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4961
                                             43 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4308
                                             23 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1016
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2107
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    1705
                                             14 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     337
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     765
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    19    19      0   96808
                                             16 BANK1     19    19      0
            _EEPROM_24C1025_Fill_All
   _EEPROM_24C1025_Read_Buffer_USART
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               3     2      1     184
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    4     4      0     255
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      44
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     416
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     416
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   13137
                                              9 BANK1      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             69 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    4616
                                             43 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             3     0      3    3099
                                             10 BANK1      3     0      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     2      3     156
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2670
                                              2 BANK1      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 5     3      2    1777
                                              6 BANK1      5     3      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      4     2      2    2219
                                              6 BANK1      4     2      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1584
                                              2 BANK1      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        3     1      2     812
                                             79 BANK0      1     1      0
                                              0 BANK1      2     0      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  2     1      1     812
                                              5 BANK0      2     1      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     991
                                              5 BANK0      8     6      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     624
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   3     2      1     189
                                              3 BANK0      3     2      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     5      3     161
                                              3 BANK0      8     5      3
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    6059
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    7267
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    6763
                                              9 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    7761
                                             23 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    7738
                                             23 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     7      6    7570
                                             10 BANK0     13     7      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Buffer_USART                    13     7      6    6904
                                              9 BANK0     13     7      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2    1090
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8163
                                              9 BANK1      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                             9     3      6    7912
                                              0 BANK1      9     3      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    6985
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     502
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4898
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             _ADC_Media_10bits (ARG)
               ___lwdiv
               ___xxtofl
               _captura
               _my_delay_ms
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               _ADC_Media_10bits (ARG)
                 ___lwdiv
                 ___xxtofl
                 _captura
                 _my_delay_ms
     _EEPROM_24C1025_Read_Buffer_USART
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _USART_putc
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _my_delay_ms_WDT
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           _ADC_Media_10bits (ARG)
             ___lwdiv
             ___xxtofl
             _captura
             _my_delay_ms
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             _ADC_Media_10bits (ARG)
               ___lwdiv
               ___xxtofl
               _captura
               _my_delay_ms
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 _ADC_Media_10bits (ARG)
                   ___lwdiv
                   ___xxtofl
                   _captura
                   _my_delay_ms
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 _ADC_Media_10bits (ARG)
                   ___lwdiv
                   ___xxtofl
                   _captura
                   _my_delay_ms
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 _ADC_Media_10bits (ARG)
                   ___lwdiv
                   ___xxtofl
                   _captura
                   _my_delay_ms
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             _ADC_Media_10bits (ARG)
               ___lwdiv
               ___xxtofl
               _captura
               _my_delay_ms
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               _ADC_Media_10bits (ARG)
                 ___lwdiv
                 ___xxtofl
                 _captura
                 _my_delay_ms
       ___flmul
         __Umul8_16
         ___fladd (ARG)
           _ADC_Media_10bits (ARG)
             ___lwdiv
             ___xxtofl
             _captura
             _my_delay_ms
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             _ADC_Media_10bits (ARG)
               ___lwdiv
               ___xxtofl
               _captura
               _my_delay_ms
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             _ADC_Media_10bits (ARG)
               ___lwdiv
               ___xxtofl
               _captura
               _my_delay_ms
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
       ___fladd (ARG)
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
           _captura
           _my_delay_ms
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           _ADC_Media_10bits (ARG)
             ___lwdiv
             ___xxtofl
             _captura
             _my_delay_ms
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
         ___lwdiv
         ___xxtofl
         _captura
         _my_delay_ms
     ___fldiv
       ___xxtofl (ARG)
     ___flge
     ___flmul
       __Umul8_16
       ___fladd (ARG)
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
           _captura
           _my_delay_ms
     ___flsub
       ___fladd
         _ADC_Media_10bits (ARG)
           ___lwdiv
           ___xxtofl
           _captura
           _my_delay_ms
     ___xxtofl
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     131       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     28      44       7       85.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      5B       9       94.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      34      11       54.2%
DATA                 0      0     131      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Oct 06 15:49:55 2020

                               _USART_putc 18DE                               ___fldiv@aexp 0047  
                             ___fldiv@bexp 0046                                          pc 0002  
                             ___fldiv@sign 003F                           _MediaPlacaVaccum 0037  
          EEPROM_24C1025_Read_Buffer@range 0035           EEPROM_24C1025_Write_Str@chip_add 0031  
                                       fsr 0004   __end_of_EEPROM_24C1025_Read_Buffer_USART 1690  
__size_of_EEPROM_24C1025_Read_Buffer_USART 0170         ??_EEPROM_24C1025_Read_Buffer_USART 002F  
        ?_EEPROM_24C1025_Read_Buffer_USART 0029           _EEPROM_24C1025_Read_Buffer_USART 1520  
                            _USART_put_int 192A                   Decodify_Command@tempchar 00BE  
                      __Umul8_16@word_mpld 0026                 __end_of_RESISTOR_ROOM_TEMP 181C  
             PROCULUS_VP_Write_String@text 00AC                                        l430 0750  
                                      l424 06ED                                        l524 1D15  
                                      l428 06FB                                        l525 1D16  
                                      l551 1A00                                        l519 1CF1  
                                      l439 02EA                                        l800 19A6  
                                      l529 1A46                                        l495 18CA  
                                      l817 199A                                        l880 18E6  
       EEPROM_24C1025_Read_Buffer@chip_add 0034                   Decodify_Command@sizedata 00B7  
                                      _isr 1069                                        fsr0 0004  
                                      indf 0000                  __end_of_EEPROM_Write_Byte 1D25  
                         _ADC_Media_10bits 1E30                               ___flmul@aexp 0059  
                             ___flmul@bexp 005E                     PROCULUS_VP_Write@vetor 00A4  
             ?_EEPROM_24C1025_Write_Buffer 002A                               ___flmul@sign 0058  
                             ___flmul@temp 0063                               ___flmul@prod 005F  
  __end_of_PROCULUS_Control_Register_Write 1C7A   __size_of_PROCULUS_Control_Register_Write 0036  
        ??_PROCULUS_Control_Register_Write 00A3           ?_PROCULUS_Control_Register_Write 00A2  
          _PROCULUS_Control_Register_Write 1C44                               ___fltol@exp1 006E  
                          __end_of_MAX_ADC 1824                                       l1311 0C80  
                                     l1171 1F87                                       l1332 0D00  
                                     l1405 1A72                                       l1190 1ED3  
                                     l1430 076E                                       l1174 1FED  
                                     l1370 0AD6                                       l1346 0989  
                                     l1290 0B2E                                       l4011 1D3B  
                                     l1443 07C4                                       l1444 07CE  
                                     l4021 1D5C                                       l1294 0BC7  
                                     l4103 0B74                                       l1296 0BA5  
                                     l4017 1D51                                       l4009 1D2D  
                                     l5011 0A4A                                       l4115 0BB0  
                                     l4043 0AFC                                       l5021 0A63  
                                     l4221 0CFC                                       l4141 0BF6  
                                     l4133 0BD5                                       l4117 0BB2  
                                     l4125 0BC1                                       l4045 0B04  
                                     l1398 0FF3                                       l5031 0A95  
                                     l4207 0CE8                                       l4143 0BF8  
                                     l4151 0C08                                       l4063 0B23  
                                     l4039 0AF9                                       l4241 0D26  
                                     l4401 07B3                                       l5017 0A61  
                                     l5009 0A2D                                       l4217 0CF8  
                                     l4073 0B38                                       l5105 1D8C  
                                     l4331 0F79                                       l4323 0F45  
                                     l4243 0D28                                       l5043 0AC8  
                                     l5035 0AAE                                       l4171 0C92  
                                     l4163 0C72                                       l4067 0B26  
                                     l6011 08FD                                       l3613 1CB9  
                                     l4325 0F62                                       l4261 0D4D  
                                     l4245 0D30                                       l4413 07EB  
                                     l5141 0061                                       l4503 1674  
                                     l4431 1552                                       l4335 0F7B  
                                     l4271 0D63                                       l4263 0D55  
                                     l5119 1D93                                       l4505 159F  
                                     l4521 1181                                       l4345 0FAD  
                                     l5049 0AD2                                       l4193 0CB3  
                                     l4185 0CA8                                       l3723 1C3A  
                                     l3731 1C41                                       l4507 1679  
                                     l4427 154C                                       l4523 1182  
                                     l4355 0FDC                                       l4259 0D4B  
                                     l4179 0CA1                                       l4187 0CAA  
                                     l5163 01C9                                       l3581 1A23  
                                     l4429 1551                                       l4349 0FC3  
                                     l4381 077D                                       l4197 0CB5  
                                     l5181 0310                                       l5157 00C0  
                                     l5149 00A9                                       l5085 1D72  
                                     l3719 1C27                                       l4471 15FA  
                                     l3815 176F                                       l4623 142D  
                                     l4519 117C                                       l3911 1979  
                                     l4375 0766                                       l3585 1A2F  
                                     l4473 15FF                                       l3817 1774  
                                     l3841 17C2                                       l4641 1486  
                                     l3913 1984                                       l6057 0709  
                                     l3921 1C82                                       l3579 1A37  
                                     l4475 1600                                       l3819 1775  
                                     l3851 17E9                                       l3771 16BF  
                                     l4643 148B                                       l4395 07AE  
                                     l4387 0781                                       l3589 1A3B  
                                     l3773 16C0                                       l4645 148C  
                                     l4717 1B02                                       l3941 1C5C  
                                     l3749 1A6A                                       l4389 0793  
                                     l5197 036F                                       l5189 0358  
                                     l3847 17E4                                       l4583 11BA  
                                     l4743 1BB1                                       l3943 1C71  
                                     l4399 07C2                                       l5625 1275  
                                     l4497 164D                                       l3849 170D  
                                     l3769 16BA                                       l4585 1230  
                                     l4577 120E                                       l3873 1CFB  
                                     l3865 1BE0                                       l4833 1E4C  
                                     l5627 127A                                       l4667 14D9  
                                     l4595 13DA                                       l3875 1CFE  
                                     l3963 1E8F                                       l3867 1C02  
                                     l4771 1E0B                                       l5803 0532  
                                     l4851 199F                                       l4931 0963  
                                     l5629 127B                                       l4677 1500  
                                     l4597 13DF                                       l5717 0820  
                                     l5821 056B                                       l4925 0958  
                                     l4679 1509                                       l4599 13E0  
                                     l5719 083B                                       l3983 1EBF  
                                     l3967 1E98                                       l5815 055C  
                                     l4855 19A2                                       l5665 1326  
                                     l5729 1DA7                                       l4793 1B51  
                                     l4777 19C6                                       l5833 05B1  
                                     l5809 054E                                       l4881 1060  
                                     l4945 097E                                       l4929 095B  
                                     l5691 138A                                       l5667 132B  
                                     l4795 1B6E                                       l3995 1EE2  
                                     l3987 1ECF                                       l5851 061D  
                                     l5827 058B                                       l5771 04A3  
                                     l5755 0439                                       l5907 06FF  
                                     l4867 101B                                       l4891 1FA1  
                                     ?_isr 0070                                       l5669 132C  
                                     l5685 1365                                       l5693 12B4  
                                     l5845 05F1                                       l5749 041F  
                                     l4877 1053                                       l4869 102B  
                                     l4965 09B4                                       l4949 0981  
                                     l5695 138F                                       l5871 069F  
                                     l5863 065D                                       l5839 05D4  
                                     l5783 04DA                                       l5759 0446  
                                     l4991 0A22                                       l4959 09A8  
                                     l4895 1FC7                                       l5865 068E  
                                     l5857 0641                                       l4985 0A03  
                                     l4993 09DF                                       l5883 06C6  
                                     l5795 050A                                       l5779 04CC  
                                     l4995 0A27                                       l5877 06AE  
                                     l5789 04F3                                       l5895 06F1  
                                     l5983 08D0                                       l5889 06E2  
                                     _BETA 1848                                       STR_1 1850  
                                     STR_2 1858                                _statuspower 00E2  
                                     _CREN 00C4                                       u3105 1ED8  
                                     u3300 0B94                                       u4005 0FCE  
                                     u3045 1EA1                                       u3310 0B95  
                                     u3145 1D30                                       u4203 15F8  
                                     u3075 1EC0                                       u3165 1D3C  
                                     u4303 143C                                       u4223 1169  
                                     u3175 1D48                                       u4135 07D6  
                                     u4055 078A                                       u4233 117A  
                                     u3185 1D52                                       u3441 0C33  
                                     u3433 0C1A                                       u3425 0BFC  
                                     u3345 0BB6                                       u2810 1C37  
                                     u3450 0C47                                       u3442 0C34  
                                     u4163 1539                                       u4323 1484  
                                     u4243 11D2                                       u4075 07A6  
                                     u3451 0C48                                       u3443 0C39  
                                     u3452 0C4D                                       u3444 0C3A  
                                     u4173 154A                                       u3453 0C4E  
                                     u3445 0C3F                                       u3446 0C40  
                                     u4183 15B5                                       u4095 07BB  
                                     u3295 0B88                                       u2913 176D  
                                     u4505 1042                                       u5323 1262  
                                     u4283 13C7                                       u2835 19AC  
                                     u4515 1054                                       u2693 1CCB  
                                     u5333 1273                                       u4293 13D8  
                                     u5343 12D6                                       u2855 1A73  
                                     u3815 0E66                                       u3495 0C94  
                                     u2873 16A7                                       u4385 1E17  
                                     u4705 09F1                                       u4561 1FB2  
                                     u4562 1FB3                                       u5363 1324  
                                     u2883 16B8                                       u3915 0F54  
                                     u4475 101F                                       u4563 1FB8  
                                     u3595 0CD2                                       u4564 1FB9  
                                     u2893 1723                                       u4725 09FC  
                                     u4581 1FD8                                       u4565 1FBE  
                                     u5517 084C                                       u4582 1FD9  
                                     u4566 1FBF                                       u5375 12C2  
                                     u5607 168A                                       u3855 0EFA  
                                     u4495 102D                                       u5527 1C9C  
                                     u4735 0A11                                       u4583 1FDE  
                                     u4584 1FDF                                       u5617 1CD4  
                                     u5393 1DD8                                       u5537 19B4  
                                     u3785 0E0D                                       u2993 1C94  
                                     u4585 1FE4                                       u4586 1FE5  
                                     u5627 1A2B                                       u5547 1BD6  
                                     u5557 1D1F                                       u3885 0F31  
                                     u4765 0A31                                       u5567 1A57  
                                     u3895 0F49                                       u4855 0A80  
                                     u4695 09E8                                       u5577 145D  
                                     u3985 0F98                                       u4865 0A9E  
                                     u4785 0A3C                                       u5587 151A  
                                     u3995 0FB6                                       u4875 0AB9  
                                     u5597 17FA                                       u4895 1B87  
                                     _WPUB 0095                       PROCULUS_Buzzer@vetor 00A8  
         __end_of_I2C_Master_RepeatedStart 07FF                                       _main 0844  
                                     _hora 007C          __size_of_EEPROM_24C1025_Write_Int 0027  
                                     btemp 007E          __size_of_EEPROM_24C1025_Write_Str 00F3  
                ?_EEPROM_24C1025_Write_Int 00A0                  ?_EEPROM_24C1025_Write_Str 002A  
              __size_of_EEPROM_Read_String 0020                                       start 0012  
                         __end_of_ADC_init 18DE                           _BALANCE_RESISTOR 184C  
                          ___fldiv@new_exp 0040         EEPROM_24C1025_Read_Buffer@sizedata 002E  
                                    ??_isr 0070                           ?_I2C_Master_Init 002E  
                         ?_I2C_Master_Read 0023                           ?_I2C_Master_Wait 0070  
                         ?_I2C_Master_Stop 0070                             ?_USART_put_int 00A0  
                            ___fltol@sign1 006D                            __end_of___fladd 0D0B  
                                    ?_main 0070                            __end_of___fldiv 0ADE  
                                    _EEADR 010D                            __end_of___flmul 1000  
                          __end_of___flsub 19FD                            __end_of___fltol 1EF1  
                                    _ANSEL 0188                            __end_of___lldiv 1069  
                                    _T1CON 0010                            __end_of___lwdiv 1D61  
                                    i1l644 1091                                      i1l662 114B  
                                    i1l646 10A2                                      i1l648 10B2  
                                    _RCREG 001A                                      _TMR1H 000F  
                                    _TMR1L 000E                                      _SPBRG 0099  
                                    _PORTA 0005                                      _PORTB 0006  
                                    _PORTC 0007                                      _PORTE 0009  
                                    _TRISA 0085                                      _TRISB 0086  
                                    _TRISC 0087            EEPROM_24C1025_Read_Int@chip_add 003D  
                                    _TRISE 0089                                      _TXREG 0019  
                    ADC_Media_10bits@canal 0033                            __end_of_captura 18D3  
                             _usart_buffer 0110                      ADC_Media_10bits@value 0034  
                EEPROM_Read_Integer@result 0028                                      _canal 00E1  
             __size_of_EEPROM_Read_Integer 002A                                      _count 00D4  
                                    _errno 00D0              ??_EEPROM_24C1025_Write_Buffer 0031  
       __size_of_EEPROM_24C1025_Write_Byte 0016                 ?_EEPROM_24C1025_Write_Byte 0037  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E            EEPROM_24C1025_Read_Byte@mem_add 0037  
                             __end_of_BETA 184C                    __size_of_PROCULUS_Delay 001D  
        __size_of_PROCULUS_VP_Write_String 0018                                ?_USART_init 0020  
                          __initialization 0015                  ?_PROCULUS_VP_Write_String 00AA  
                              ?_USART_putc 0070                               __end_of_main 093D  
                           Send_To_MB@size 0021                   __end_of_EEPROM_Read_Byte 1A60  
                                   ??_main 00C3                           __end_of_Save_Log 1F6D  
                         _USART_put_string 1BDC                      EEPROM_Write_Byte@addr 0023  
                    EEPROM_Write_Byte@dado 0020                 __size_of_EEPROM_Write_Byte 003C  
                        ?_I2C_Master_Start 0070                  EEPROM_Write_Byte@last_GIE 0024  
                        ?_I2C_Master_Write 0023                         ??_I2C_Master_Start 0023  
                                   _ADCON1 009F                         ??_I2C_Master_Write 0025  
                PROCULUS_Show_Screen@vetor 00A8                                     _ADRESH 001E  
                                   _ADRESL 009E                                     _EEDATA 010C  
                                   _EECON2 018D                                 _Send_To_MB 1AD2  
                    EEPROM_Write_Integer@i 002C                                     _ANSELH 0189  
             __end_of_PROCULUS_Show_Screen 1914                                     i1l5523 1094  
                                   i1l5515 1077                                     i1l5535 10B4  
                                   i1l5519 1086                                     i1l5529 10A4  
                                   i1l5581 10F3                                     i1l5583 1126  
                                   i1l5559 10E4                                     i1l5577 111A  
                                   i1l5579 111F          __end_of_EEPROM_24C1025_Write_Byte 192A  
                                   u529_25 110C                               ?_my_delay_ms 0020  
                                   _TMR1IE 0460                                     _TMR1CS 0081  
                 ?_EEPROM_24C1025_Fill_All 00A9                                     _SSPADD 0093  
                                   _TRISC3 043B                                     _TRISC4 043C  
                                   _TRISC6 043E                                     _TRISC7 043F  
                                   _SSPCON 0014                                     _SSPBUF 0013  
           EEPROM_24C1025_Fill_All@mem_add 00AC                           __end_of___xxtofl 07F4  
            EEPROM_24C1025_Read_Str@buffer 002D                         PROCULUS_VP_Write@i 00A9  
                 __end_of_Decodify_Command 0751                   ?_EEPROM_24C1025_Read_Int 0037  
                 ?_EEPROM_24C1025_Read_Str 0029                   _I2C_Master_RepeatedStart 07F4  
     __size_of_EEPROM_24C1025_Write_Buffer 016A                                     ___flge 1F6D  
                                ??___fladd 003F                                  ??___fldiv 0036  
                                ??___flmul 0053                                  ??___flsub 0053  
                                ??___fltol 0069                            ??_USART_put_int 006F  
                                ??___lldiv 0028                                     _header 00D6  
                        __end_of_ROOM_TEMP 1820                                  ??___lwdiv 0024  
                                   _buffer 01CA                          _USART_to_Protocol 1DDB  
                          USART_putc@value 0020                                     _minuto 007A  
        EEPROM_24C1025_Read_Buffer@cnt_108 0033                                  ??_captura 0022  
                       ?_USART_to_Protocol 0070               Decodify_Command@add_24LCxxxx 00BF  
                                   _strcpy 19C1                                     _strlen 1972  
        EEPROM_24C1025_Read_Buffer@mem_add 002A           __end_of_EEPROM_24C1025_Read_Byte 1972  
                       __size_of__Umul8_16 0023                                     saved_w 007E  
        EEPROM_24C1025_Write_Byte@chip_add 003C                                  ?_ADC_init 0070  
                      ??_USART_to_Protocol 0020                        __size_of_USART_init 003C  
                      __size_of_USART_putc 0010                   __end_of_MediaPlacaVaccum 03FF  
                               ___flge@ff1 0020                                 ___flge@ff2 0024  
                             ___xxtofl@arg 002A                               ___xxtofl@exp 0029  
                             ___xxtofl@val 0020                           __end_oflog@coeff 1848  
                  __end_of__initialization 0033                      _MediaPlacaVaccum$2372 00A0  
      PROCULUS_Control_Register_Write@size 00A2                                 ___fltol@f1 0065  
                             _Board_Number 00E0                   __end_of_ADC_Media_10bits 1E86  
                           __pcstackCOMMON 0070                   __size_of_PROCULUS_Buzzer 002A  
                __end_of_USART_to_Protocol 1E30                      USART_put_string@vetor 0021  
                      my_delay_ms_WDT@time 0020              __size_of_EEPROM_Write_Integer 0032  
                 __size_of_my_delay_ms_WDT 0038                             _OPTION_REGbits 0081  
                 __end_of_BALANCE_RESISTOR 1850           __end_of_EEPROM_24C1025_Write_Int 1AAA  
         __end_of_EEPROM_24C1025_Write_Str 124A                                 ??_ADC_init 0020  
              __end_of_EEPROM_Write_String 1B79            __end_of_EEPROM_24C1025_Fill_All 1DDB  
                              ?_Send_To_MB 0070                     __size_of_Send_Reply_OK 0009  
                               __pbssBANK1 00C8                                 __pbssBANK2 0110  
                               __pbssBANK3 0190                         _RESISTOR_ROOM_TEMP 1818  
          __end_of_EEPROM_24C1025_Read_Int 1AD2            __end_of_EEPROM_24C1025_Read_Str 1520  
                 ?_Package_Usart_is_for_me 0070                                  ?_Save_Log 00A9  
                           _PROCULUS_Delay 19A4                          __end_of__Umul8_16 1A83  
                               __pmaintext 0844                                    ?___flge 0020  
                      Save_Log@add_datalog 00A9                        _EEPROM_Read_Integer 1AFA  
               PROCULUS_Show_Screen@screen 00A6                                 __pintentry 0004  
                     _PROCULUS_Show_Screen 18FF                                    _T1CKPS0 0084  
                                  _T1CKPS1 0085                                    ?_strcpy 0020  
                                  ?_strlen 0020                          MediaPlacaVaccum@i 00A5  
                                ?___xxtofl 0020                                    _MAX_ADC 1820  
                     ?_EEPROM_Read_Integer 0023                      Decodify_Command@dados 00B4  
              EEPROM_24C1025_Read_Int@data 003E                                    _SSPCON2 0091  
         __end_of_PROCULUS_VP_Write_String 1959                    EEPROM_Read_Integer@addr 0026  
                                  _SSPSTAT 0094                   _EEPROM_24C1025_Read_Byte 1959  
                               __stringtab 1800                        PROCULUS_VP_Write@vp 00A2  
              ??_EEPROM_24C1025_Write_Byte 003C                 __end_of_EEPROM_Read_String 1A1D  
                   __end_of_PROCULUS_Delay 19C1                   __end_of_USART_put_string 1C0F  
                     __size_of_my_delay_ms 0037                                 ??_Save_Log 006F  
                          PROCULUS_Delay@i 0024                                    _Vaccum0 00CC  
                             ??_USART_init 0024                EEPROM_24C1025_Read_Str@ctrl 0033  
                                  _Tensao1 00C8                               ??_USART_putc 0020  
               __size_of_USART_to_Protocol 0055                PROCULUS_Buzzer@time_ms_x_10 00A6  
                          __size_of___flge 0093                                    ___fladd 0ADE  
                                  ___fldiv 093D                   EEPROM_Write_Integer@addr 002B  
                                  ___flmul 0D0B                   EEPROM_Write_Integer@dado 0025  
                                  ___flsub 19DF                                    ___fltol 1E86  
                                  ___lldiv 100B                                    ___lwdiv 1D25  
                            _Send_Reply_OK 18C0                        __size_of_Send_To_MB 0028  
                    ?_PROCULUS_Show_Screen 00A6                                    _captura 18C9  
                         _statuspower_memo 007B                                    __ptext1 1D61  
                                  __ptext2 0037                                    __ptext3 19DF  
                                  __ptext4 0ADE                                    __ptext5 1F6D  
                                  __ptext6 093D                                    __ptext7 198B  
                                  __ptext8 1E30                                    __ptext9 1C7A  
                        ??_PROCULUS_Buzzer 0070                                    _destino 00DF  
                        ?_EEPROM_Read_Byte 0070                            __size_of_strcpy 001E  
                          __size_of_strlen 0019                               __size_of_isr 00EE  
                               ??___xxtofl 0024                         ??_EEPROM_Read_Byte 0020  
                                  _segundo 007D                   __size_of_I2C_Master_Init 0031  
                 __size_of_I2C_Master_Read 0035                             _usart_protocol 0190  
                    ??_EEPROM_Read_Integer 0026                   __size_of_I2C_Master_Wait 0021  
                 __size_of_I2C_Master_Stop 0009              EEPROM_24C1025_Write_Int@local 00A7  
                                  _pointer 00DE              EEPROM_24C1025_Write_Byte@data 003B  
                                  clrloop0 18B0                         __end_of_USART_init 1D9D  
          __end_of_Package_Usart_is_for_me 19A4                         __end_of_USART_putc 18EE  
                        ADC_Media_10bits@i 0036                       end_of_initialization 0033  
                 _EEPROM_24C1025_Write_Int 1A83                          ??_my_delay_ms_WDT 0024  
                 _EEPROM_24C1025_Write_Str 1157                 ??_I2C_Master_RepeatedStart 0023  
                          ?_PROCULUS_Delay 0020                            my_delay_ms@time 0020  
          EEPROM_24C1025_Write_Buffer@data 002F            EEPROM_24C1025_Write_Buffer@ctrl 0036  
                __size_of_I2C_Master_Start 0011                  __size_of_I2C_Master_Write 000B  
                        ?_Decodify_Command 0070                            ___lldiv@divisor 0020  
                          ___lldiv@counter 002D       EEPROM_24C1025_Read_Buffer_USART@data 002E  
     EEPROM_24C1025_Read_Buffer_USART@ctrl 0035                         ??_Decodify_Command 00B0  
                                _RCSTAbits 0018                           I2C_Master_Init@c 002E  
                         I2C_Master_Read@a 0023                             ?_Send_Reply_OK 0070  
                _EEPROM_24C1025_Write_Byte 1914           __size_of_EEPROM_24C1025_Fill_All 003E  
                                  strlen@s 0024                         USART_to_Protocol@i 0021  
                                _PORTAbits 0005                                  _PORTBbits 0006  
                                _PORTCbits 0007                           _Delay_Led_Memory 00DC  
             ??_EEPROM_24C1025_Read_Buffer 0030              EEPROM_24C1025_Write_Str@range 0032  
                                _ROOM_TEMP 181C                                ___fladd@grs 004A  
         __size_of_EEPROM_24C1025_Read_Int 0028    EEPROM_24C1025_Read_Buffer_USART@cnt_117 0032  
         __size_of_EEPROM_24C1025_Read_Str 016C                              ___xxtofl@sign 0028  
      __end_of_EEPROM_24C1025_Write_Buffer 13B4                _EEPROM_24C1025_Write_Buffer 124A  
  EEPROM_24C1025_Read_Buffer_USART@mem_add 0029                                ___fldiv@grs 0042  
                              ___fldiv@rem 003B       PROCULUS_Control_Register_Write@vetor 00A4  
         EEPROM_24C1025_Write_Buffer@count 0033            EEPROM_24C1025_Write_Int@mem_add 00A0  
         EEPROM_24C1025_Write_Buffer@range 0035                          __size_of_ADC_init 000B  
                  Decodify_Command@tempint 00B8                          ?_MediaPlacaVaccum 0070  
                    PROCULUS_VP_Write@size 00A6            EEPROM_24C1025_Read_Str@chip_add 0031  
                              ___flmul@grs 005A                         ??_MediaPlacaVaccum 0065  
                 _PROCULUS_VP_Write_String 1941                                  _TXSTAbits 0098  
      __size_of_EEPROM_24C1025_Read_Buffer 0170                          ?_ADC_Media_10bits 002E  
                   PROCULUS_Delay@tempo_ms 0020                     ??_PROCULUS_Show_Screen 0070  
                       ??_ADC_Media_10bits 0032                             __end_of___flge 2000  
                    __end_of_USART_put_int 1941                                _BAUDCTLbits 0187  
                           __end_of_strcpy 19DF                             __end_of_strlen 198B  
                      start_initialization 0015                                __end_of_isr 1157  
                              USART_init@i 0025                               ??_Send_To_MB 0021  
 EEPROM_24C1025_Read_Buffer_USART@chip_add 0033                          ??_I2C_Master_Init 0032  
                        ??_I2C_Master_Read 0025                          ??_I2C_Master_Wait 0020  
                        ??_I2C_Master_Stop 0023               __end_of_EEPROM_Write_Integer 1BDC  
         EEPROM_24C1025_Write_Int@chip_add 00A6                        Decodify_Command@add 00B6  
                          ??_Send_Reply_OK 0025                                   ??___flge 0028  
                        __size_of_Save_Log 007C                       I2C_Master_Wait@tempo 0022  
                                __Umul8_16 1A60                         __end_of_Send_To_MB 1AFA  
         __size_of_Package_Usart_is_for_me 0019                                   ??_strcpy 0021  
                                 ??_strlen 0023   EEPROM_24C1025_Read_Buffer_USART@sizedata 002D  
               ??_EEPROM_24C1025_Read_Byte 003B         EEPROM_24C1025_Write_Buffer@mem_add 002A  
                                ___fladd@a 003B                                  ___fladd@b 0037  
         EEPROM_24C1025_Write_Byte@mem_add 0037                                  ___fldiv@a 002E  
                                ___fldiv@b 0032                                  ___flmul@a 004F  
                                ___flmul@b 004B                                __pbssCOMMON 0078  
                                ___flsub@a 004B                                  ___flsub@b 004F  
                                ___latbits 0002                              __pcstackBANK0 0020  
                            __pcstackBANK1 00A0                          _PROCULUS_VP_Write 0800  
                        __size_of___xxtofl 00A3                         ?_PROCULUS_VP_Write 00A2  
             __size_of_EEPROM_Write_String 002B                           _I2C_Master_Start 18EE  
                         _I2C_Master_Write 1000                        ??_PROCULUS_VP_Write 00A7  
                           _tempodecorrido 00D2                          ?_USART_put_string 0021  
                          _PROCULUS_Buzzer 1B24                           ___lwdiv@dividend 0022  
           Package_Usart_is_for_me@retorno 0020                         ??_USART_put_string 0023  
                                 ?___fladd 0037                                   ?___fldiv 002E  
                  _EEPROM_24C1025_Fill_All 1D9D                                   ?___flmul 004B  
                                 ?___flsub 004B                                   ?___fltol 0065  
                                 ?___lldiv 0020                                 ?__Umul8_16 0020  
                       _EEPROM_Read_String 19FD                                   ?___lwdiv 0020  
       __end_of_EEPROM_24C1025_Read_Buffer 1800                 _EEPROM_24C1025_Read_Buffer 1690  
                                 ?_captura 0020                                  __pstrings 1800  
                    MediaPlacaVaccum@canal 00A4                            _my_delay_ms_WDT 1CB1  
                  _EEPROM_24C1025_Read_Int 1AAA                    _EEPROM_24C1025_Read_Str 13B4  
                   EEPROM_Read_Integer@ptr 0027                 ??_EEPROM_24C1025_Write_Int 006F  
               ??_EEPROM_24C1025_Write_Str 002F                        ?_EEPROM_Read_String 0023  
                __end_of_PROCULUS_VP_Write 0844                 EEPROM_24C1025_Read_Str@cnt 0030  
                                 _ADC_init 18D3                           ___lwdiv@quotient 0024  
                  EEPROM_Write_Integer@ptr 002A                           ??_PROCULUS_Delay 0022  
           EEPROM_24C1025_Read_Buffer@data 002F             EEPROM_24C1025_Read_Buffer@ctrl 0036  
                            ??_my_delay_ms 0024                  __size_of_EEPROM_Read_Byte 0022  
                        interrupt_function 0004            EEPROM_24C1025_Write_Str@mem_add 002A  
                     ??_EEPROM_Read_String 0024                                  clear_ram0 18AF  
                                 _PIE1bits 008C                                   _PIR1bits 000C  
         PROCULUS_Control_Register_Write@i 00A5                     Decodify_Command@OutPut 00BA  
                          _PT100_TRANSLADA 1810                            _Delay_Led_Usart 00DA  
             EEPROM_24C1025_Read_Byte@data 003C                __end_of_EEPROM_Read_Integer 1B24  
                               _ADCON0bits 001F                                __stringbase 180F  
                               _ADCON1bits 009F                  __size_of_Decodify_Command 0352  
                     _EEPROM_Write_Integer 1BAA             EEPROM_24C1025_Read_Int@mem_add 0037  
                                main@reset 00C6                 ??_PROCULUS_VP_Write_String 0070  
                      I2C_Master_Read@temp 0027                    __end_of_PROCULUS_Buzzer 1B4E  
                           _generic_status 00E3                                 _EECON1bits 018C  
                                 _Save_Log 1EF1                  ??_EEPROM_24C1025_Fill_All 006F  
                      __end_of_my_delay_ms 1CB1               EEPROM_24C1025_Read_Str@range 0032  
                  __end_of_my_delay_ms_WDT 1CE9                               my_delay_ms@i 0026  
                              ??__Umul8_16 0022                  __size_of_MediaPlacaVaccum 03C8  
        __size_of_I2C_Master_RepeatedStart 000B                           __size_of___fladd 022D  
                ??_EEPROM_24C1025_Read_Int 003B                    _Package_Usart_is_for_me 198B  
                         __size_of___fldiv 01A1                  ??_EEPROM_24C1025_Read_Str 002E  
                         __size_of___flmul 02F5                  ?_I2C_Master_RepeatedStart 0070  
                         __size_of___flsub 001E                           __size_of___fltol 006B  
                         __size_of___lldiv 005E                           __size_of___lwdiv 003C  
                       __end_of__stringtab 1810        EEPROM_24C1025_Write_Buffer@chip_add 0034  
                      USART_put_string@ptr 0023                           __size_of_captura 000A  
                    ?_EEPROM_Write_Integer 0025                            _I2C_Master_Init 1B79  
                          _I2C_Master_Read 1C0F                                   ___xxtofl 0751  
               __size_of_PROCULUS_VP_Write 0044                            _I2C_Master_Wait 1A1D  
         EEPROM_24C1025_Read_Byte@chip_add 003B                            _I2C_Master_Stop 18B7  
                __size_of_ADC_Media_10bits 0056                            ___lwdiv@divisor 0020  
                          ___lwdiv@counter 0026                                   __ptext10 18C9  
                                 __ptext11 0751                                   __ptext20 1EF1  
                                 __ptext12 1B79                                   __ptext21 1E86  
                                 __ptext13 100B                                   __ptext30 1C44  
                                 __ptext22 0D0B                                   __ptext14 03FF  
                                 __ptext31 192A                                   __ptext23 1A60  
                                 __ptext15 19C1                                   __ptext40 1914  
                                 __ptext32 19A4                                   __ptext24 1941  
                                 __ptext16 1DDB                                   __ptext41 13B4  
                                 __ptext33 1B4E                                   __ptext25 1972  
                                 __ptext17 1AD2                                   __ptext50 1A83  
                                 __ptext42 1AAA                                   __ptext34 1BAA  
                                 __ptext26 0800                                   __ptext18 18C0  
                                 __ptext51 124A                                   __ptext43 1959  
                                 __ptext35 1CE9                                   __ptext27 18FF  
                                 __ptext19 1BDC                                   __ptext52 1CB1  
                                 __ptext44 1690                                   __ptext36 19FD  
                                 __ptext28 1B24                                   __ptext53 1000  
                                 __ptext45 1520                                   __ptext37 1AFA  
                                 __ptext29 1D25                                   __ptext54 18B7  
                                 __ptext46 18DE                                   __ptext38 1A3E  
                                 __ptext55 18EE                                   __ptext47 07F4  
                                 __ptext39 1157                                   __ptext56 1A1D  
                                 __ptext48 1C0F                                   __ptext57 18D3  
                                 __ptext49 1D9D                                   __ptext58 1069  
                       USART_put_int@value 00A0                             _PT100_CONSTANT 1814  
                     MediaPlacaVaccum@Temp 00A7                                 strcpy@from 0020  
                            __size_of_main 00F9               EEPROM_24C1025_Fill_All@value 00A9  
               PROCULUS_VP_Write_String@vp 00AA                    __end_of_PT100_TRANSLADA 1814  
      EEPROM_24C1025_Write_Buffer@sizedata 002E                                _milisegundo 00D8  
                           _Delay_Led_Tmr0 0078              __size_of_PROCULUS_Show_Screen 0015  
                      _EEPROM_Write_String 1B4E                                   log@coeff 1824  
                 __end_of_I2C_Master_Start 18FF                   __end_of_I2C_Master_Write 100B  
                               _INTCONbits 000B                     __end_of_PT100_CONSTANT 1818  
                                 isr@tempo 0076                       EEPROM_Read_Byte@addr 0022  
                   EEPROM_Read_String@addr 0024                     EEPROM_Read_String@dado 0023  
                         my_delay_ms_WDT@i 0026                                   intlevel1 0000  
                         ?_PROCULUS_Buzzer 00A6                          USART_put_int@dado 006F  
                         _EEPROM_Read_Byte 1A3E                                _my_delay_ms 1C7A  
                     ?_EEPROM_Write_String 0025                           ___lldiv@dividend 0024  
                   __size_of_USART_put_int 0017               EEPROM_24C1025_Write_Int@data 00A4  
                     EEPROM_Read_Integer@i 002A                    EEPROM_Write_String@addr 0026  
                  EEPROM_Write_String@dado 0025                         USART_init@baudrate 0020  
                                stringcode 180A                                 _OSCCONbits 008F  
    EEPROM_24C1025_Read_Buffer_USART@range 0034                  ??_Package_Usart_is_for_me 0020  
                         ?_my_delay_ms_WDT 0020                      __end_of_Send_Reply_OK 18C9  
                  __end_of_I2C_Master_Init 1BAA                    __end_of_I2C_Master_Read 1C44  
                  __end_of_I2C_Master_Wait 1A3E                    __end_of_I2C_Master_Stop 18C0  
             EEPROM_24C1025_Write_Str@data 002E               EEPROM_24C1025_Write_Str@ctrl 0033  
              ?_EEPROM_24C1025_Read_Buffer 002A            EEPROM_24C1025_Fill_All@chip_add 00AB  
                   ??_EEPROM_Write_Integer 0027                     __Umul8_16@multiplicand 0020  
          USART_to_Protocol@usart_protocol 0023                           _Decodify_Command 03FF  
                __size_of_USART_put_string 0033                           ___lldiv@quotient 0029  
                        I2C_Master_Write@d 0023                                   strcpy@cp 0022  
                                 strlen@cp 0023                                   strcpy@to 0021  
                                 stringdir 180A                                   stringtab 1800  
                              _SSPCON2bits 0091                          _EEPROM_Write_Byte 1CE9  
           EEPROM_24C1025_Read_Str@mem_add 0029                              ___fladd@signs 0047  
                       ?_EEPROM_Write_Byte 0020                      ??_EEPROM_Write_String 0026  
                             ___fladd@aexp 0048                               ___fladd@bexp 0049  
        __size_of_EEPROM_24C1025_Read_Byte 0019                  ?_EEPROM_24C1025_Read_Byte 0037  
                      EEPROM_Read_String@c 0025                       __Umul8_16@multiplier 0028  
                      ??_EEPROM_Write_Byte 0021                          __Umul8_16@product 0024  
                               _USART_init 1D61  
