

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec 10 19:41:21 2019

Microchip MPLAB XC8 C Compiler v2.10 (Pro license) build 20190730164152 Og9s 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	plic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text20,local,class=CODE,merge=1,delta=2
    25                           	psect	text21,local,class=CODE,merge=1,delta=2
    26                           	psect	text24,local,class=CODE,merge=1,delta=2
    27                           	psect	text25,local,class=CODE,merge=1,delta=2
    28                           	psect	text30,local,class=CODE,merge=1,delta=2
    29                           	psect	text32,local,class=CODE,merge=1,delta=2
    30                           	psect	text33,local,class=CODE,merge=1,delta=2
    31                           	psect	text44,local,class=CODE,merge=1,delta=2
    32                           	psect	text46,local,class=CODE,merge=1,delta=2
    33                           	psect	text49,local,class=CODE,merge=1,delta=2
    34                           	psect	text51,local,class=CODE,merge=1,delta=2
    35                           	psect	text52,local,class=CODE,merge=1,delta=2
    36                           	psect	text56,local,class=CODE,merge=1,delta=2
    37                           	psect	text66,local,class=CODE,merge=1,delta=2
    38                           	psect	text72,local,class=CODE,merge=1,delta=2
    39                           	psect	text73,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	pa_nodes0,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F886 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458  0000                     	;# 
   459  0001                     	;# 
   460  0002                     	;# 
   461  0003                     	;# 
   462  0004                     	;# 
   463  0005                     	;# 
   464  0006                     	;# 
   465  0007                     	;# 
   466  0009                     	;# 
   467  000A                     	;# 
   468  000B                     	;# 
   469  000C                     	;# 
   470  000D                     	;# 
   471  000E                     	;# 
   472  000E                     	;# 
   473  000F                     	;# 
   474  0010                     	;# 
   475  0011                     	;# 
   476  0012                     	;# 
   477  0013                     	;# 
   478  0014                     	;# 
   479  0015                     	;# 
   480  0015                     	;# 
   481  0016                     	;# 
   482  0017                     	;# 
   483  0018                     	;# 
   484  0019                     	;# 
   485  001A                     	;# 
   486  001B                     	;# 
   487  001B                     	;# 
   488  001C                     	;# 
   489  001D                     	;# 
   490  001E                     	;# 
   491  001F                     	;# 
   492  0081                     	;# 
   493  0085                     	;# 
   494  0086                     	;# 
   495  0087                     	;# 
   496  0089                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  008F                     	;# 
   501  0090                     	;# 
   502  0091                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0096                     	;# 
   510  0097                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009A                     	;# 
   514  009B                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  0105                     	;# 
   520  0107                     	;# 
   521  0108                     	;# 
   522  0109                     	;# 
   523  010C                     	;# 
   524  010C                     	;# 
   525  010D                     	;# 
   526  010E                     	;# 
   527  010F                     	;# 
   528  0185                     	;# 
   529  0187                     	;# 
   530  0188                     	;# 
   531  0189                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  0000                     	;# 
   535  0001                     	;# 
   536  0002                     	;# 
   537  0003                     	;# 
   538  0004                     	;# 
   539  0005                     	;# 
   540  0006                     	;# 
   541  0007                     	;# 
   542  0009                     	;# 
   543  000A                     	;# 
   544  000B                     	;# 
   545  000C                     	;# 
   546  000D                     	;# 
   547  000E                     	;# 
   548  000E                     	;# 
   549  000F                     	;# 
   550  0010                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0013                     	;# 
   554  0014                     	;# 
   555  0015                     	;# 
   556  0015                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001B                     	;# 
   563  001B                     	;# 
   564  001C                     	;# 
   565  001D                     	;# 
   566  001E                     	;# 
   567  001F                     	;# 
   568  0081                     	;# 
   569  0085                     	;# 
   570  0086                     	;# 
   571  0087                     	;# 
   572  0089                     	;# 
   573  008C                     	;# 
   574  008D                     	;# 
   575  008E                     	;# 
   576  008F                     	;# 
   577  0090                     	;# 
   578  0091                     	;# 
   579  0092                     	;# 
   580  0093                     	;# 
   581  0093                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0097                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009A                     	;# 
   590  009B                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  0105                     	;# 
   596  0107                     	;# 
   597  0108                     	;# 
   598  0109                     	;# 
   599  010C                     	;# 
   600  010C                     	;# 
   601  010D                     	;# 
   602  010E                     	;# 
   603  010F                     	;# 
   604  0185                     	;# 
   605  0187                     	;# 
   606  0188                     	;# 
   607  0189                     	;# 
   608  018C                     	;# 
   609  018D                     	;# 
   610  0000                     	;# 
   611  0001                     	;# 
   612  0002                     	;# 
   613  0003                     	;# 
   614  0004                     	;# 
   615  0005                     	;# 
   616  0006                     	;# 
   617  0007                     	;# 
   618  0009                     	;# 
   619  000A                     	;# 
   620  000B                     	;# 
   621  000C                     	;# 
   622  000D                     	;# 
   623  000E                     	;# 
   624  000E                     	;# 
   625  000F                     	;# 
   626  0010                     	;# 
   627  0011                     	;# 
   628  0012                     	;# 
   629  0013                     	;# 
   630  0014                     	;# 
   631  0015                     	;# 
   632  0015                     	;# 
   633  0016                     	;# 
   634  0017                     	;# 
   635  0018                     	;# 
   636  0019                     	;# 
   637  001A                     	;# 
   638  001B                     	;# 
   639  001B                     	;# 
   640  001C                     	;# 
   641  001D                     	;# 
   642  001E                     	;# 
   643  001F                     	;# 
   644  0081                     	;# 
   645  0085                     	;# 
   646  0086                     	;# 
   647  0087                     	;# 
   648  0089                     	;# 
   649  008C                     	;# 
   650  008D                     	;# 
   651  008E                     	;# 
   652  008F                     	;# 
   653  0090                     	;# 
   654  0091                     	;# 
   655  0092                     	;# 
   656  0093                     	;# 
   657  0093                     	;# 
   658  0093                     	;# 
   659  0094                     	;# 
   660  0095                     	;# 
   661  0096                     	;# 
   662  0097                     	;# 
   663  0098                     	;# 
   664  0099                     	;# 
   665  009A                     	;# 
   666  009B                     	;# 
   667  009C                     	;# 
   668  009D                     	;# 
   669  009E                     	;# 
   670  009F                     	;# 
   671  0105                     	;# 
   672  0107                     	;# 
   673  0108                     	;# 
   674  0109                     	;# 
   675  010C                     	;# 
   676  010C                     	;# 
   677  010D                     	;# 
   678  010E                     	;# 
   679  010F                     	;# 
   680  0185                     	;# 
   681  0187                     	;# 
   682  0188                     	;# 
   683  0189                     	;# 
   684  018C                     	;# 
   685  018D                     	;# 
   686  0000                     	;# 
   687  0001                     	;# 
   688  0002                     	;# 
   689  0003                     	;# 
   690  0004                     	;# 
   691  0005                     	;# 
   692  0006                     	;# 
   693  0007                     	;# 
   694  0009                     	;# 
   695  000A                     	;# 
   696  000B                     	;# 
   697  000C                     	;# 
   698  000D                     	;# 
   699  000E                     	;# 
   700  000E                     	;# 
   701  000F                     	;# 
   702  0010                     	;# 
   703  0011                     	;# 
   704  0012                     	;# 
   705  0013                     	;# 
   706  0014                     	;# 
   707  0015                     	;# 
   708  0015                     	;# 
   709  0016                     	;# 
   710  0017                     	;# 
   711  0018                     	;# 
   712  0019                     	;# 
   713  001A                     	;# 
   714  001B                     	;# 
   715  001B                     	;# 
   716  001C                     	;# 
   717  001D                     	;# 
   718  001E                     	;# 
   719  001F                     	;# 
   720  0081                     	;# 
   721  0085                     	;# 
   722  0086                     	;# 
   723  0087                     	;# 
   724  0089                     	;# 
   725  008C                     	;# 
   726  008D                     	;# 
   727  008E                     	;# 
   728  008F                     	;# 
   729  0090                     	;# 
   730  0091                     	;# 
   731  0092                     	;# 
   732  0093                     	;# 
   733  0093                     	;# 
   734  0093                     	;# 
   735  0094                     	;# 
   736  0095                     	;# 
   737  0096                     	;# 
   738  0097                     	;# 
   739  0098                     	;# 
   740  0099                     	;# 
   741  009A                     	;# 
   742  009B                     	;# 
   743  009C                     	;# 
   744  009D                     	;# 
   745  009E                     	;# 
   746  009F                     	;# 
   747  0105                     	;# 
   748  0107                     	;# 
   749  0108                     	;# 
   750  0109                     	;# 
   751  010C                     	;# 
   752  010C                     	;# 
   753  010D                     	;# 
   754  010E                     	;# 
   755  010F                     	;# 
   756  0185                     	;# 
   757  0187                     	;# 
   758  0188                     	;# 
   759  0189                     	;# 
   760  018C                     	;# 
   761  018D                     	;# 
   762  0000                     	;# 
   763  0001                     	;# 
   764  0002                     	;# 
   765  0003                     	;# 
   766  0004                     	;# 
   767  0005                     	;# 
   768  0006                     	;# 
   769  0007                     	;# 
   770  0009                     	;# 
   771  000A                     	;# 
   772  000B                     	;# 
   773  000C                     	;# 
   774  000D                     	;# 
   775  000E                     	;# 
   776  000E                     	;# 
   777  000F                     	;# 
   778  0010                     	;# 
   779  0011                     	;# 
   780  0012                     	;# 
   781  0013                     	;# 
   782  0014                     	;# 
   783  0015                     	;# 
   784  0015                     	;# 
   785  0016                     	;# 
   786  0017                     	;# 
   787  0018                     	;# 
   788  0019                     	;# 
   789  001A                     	;# 
   790  001B                     	;# 
   791  001B                     	;# 
   792  001C                     	;# 
   793  001D                     	;# 
   794  001E                     	;# 
   795  001F                     	;# 
   796  0081                     	;# 
   797  0085                     	;# 
   798  0086                     	;# 
   799  0087                     	;# 
   800  0089                     	;# 
   801  008C                     	;# 
   802  008D                     	;# 
   803  008E                     	;# 
   804  008F                     	;# 
   805  0090                     	;# 
   806  0091                     	;# 
   807  0092                     	;# 
   808  0093                     	;# 
   809  0093                     	;# 
   810  0093                     	;# 
   811  0094                     	;# 
   812  0095                     	;# 
   813  0096                     	;# 
   814  0097                     	;# 
   815  0098                     	;# 
   816  0099                     	;# 
   817  009A                     	;# 
   818  009B                     	;# 
   819  009C                     	;# 
   820  009D                     	;# 
   821  009E                     	;# 
   822  009F                     	;# 
   823  0105                     	;# 
   824  0107                     	;# 
   825  0108                     	;# 
   826  0109                     	;# 
   827  010C                     	;# 
   828  010C                     	;# 
   829  010D                     	;# 
   830  010E                     	;# 
   831  010F                     	;# 
   832  0185                     	;# 
   833  0187                     	;# 
   834  0188                     	;# 
   835  0189                     	;# 
   836  018C                     	;# 
   837  018D                     	;# 
   838  0000                     	;# 
   839  0001                     	;# 
   840  0002                     	;# 
   841  0003                     	;# 
   842  0004                     	;# 
   843  0005                     	;# 
   844  0006                     	;# 
   845  0007                     	;# 
   846  0009                     	;# 
   847  000A                     	;# 
   848  000B                     	;# 
   849  000C                     	;# 
   850  000D                     	;# 
   851  000E                     	;# 
   852  000E                     	;# 
   853  000F                     	;# 
   854  0010                     	;# 
   855  0011                     	;# 
   856  0012                     	;# 
   857  0013                     	;# 
   858  0014                     	;# 
   859  0015                     	;# 
   860  0015                     	;# 
   861  0016                     	;# 
   862  0017                     	;# 
   863  0018                     	;# 
   864  0019                     	;# 
   865  001A                     	;# 
   866  001B                     	;# 
   867  001B                     	;# 
   868  001C                     	;# 
   869  001D                     	;# 
   870  001E                     	;# 
   871  001F                     	;# 
   872  0081                     	;# 
   873  0085                     	;# 
   874  0086                     	;# 
   875  0087                     	;# 
   876  0089                     	;# 
   877  008C                     	;# 
   878  008D                     	;# 
   879  008E                     	;# 
   880  008F                     	;# 
   881  0090                     	;# 
   882  0091                     	;# 
   883  0092                     	;# 
   884  0093                     	;# 
   885  0093                     	;# 
   886  0093                     	;# 
   887  0094                     	;# 
   888  0095                     	;# 
   889  0096                     	;# 
   890  0097                     	;# 
   891  0098                     	;# 
   892  0099                     	;# 
   893  009A                     	;# 
   894  009B                     	;# 
   895  009C                     	;# 
   896  009D                     	;# 
   897  009E                     	;# 
   898  009F                     	;# 
   899  0105                     	;# 
   900  0107                     	;# 
   901  0108                     	;# 
   902  0109                     	;# 
   903  010C                     	;# 
   904  010C                     	;# 
   905  010D                     	;# 
   906  010E                     	;# 
   907  010F                     	;# 
   908  0185                     	;# 
   909  0187                     	;# 
   910  0188                     	;# 
   911  0189                     	;# 
   912  018C                     	;# 
   913  018D                     	;# 
   914  0000                     	;# 
   915  0001                     	;# 
   916  0002                     	;# 
   917  0003                     	;# 
   918  0004                     	;# 
   919  0005                     	;# 
   920  0006                     	;# 
   921  0007                     	;# 
   922  0009                     	;# 
   923  000A                     	;# 
   924  000B                     	;# 
   925  000C                     	;# 
   926  000D                     	;# 
   927  000E                     	;# 
   928  000E                     	;# 
   929  000F                     	;# 
   930  0010                     	;# 
   931  0011                     	;# 
   932  0012                     	;# 
   933  0013                     	;# 
   934  0014                     	;# 
   935  0015                     	;# 
   936  0015                     	;# 
   937  0016                     	;# 
   938  0017                     	;# 
   939  0018                     	;# 
   940  0019                     	;# 
   941  001A                     	;# 
   942  001B                     	;# 
   943  001B                     	;# 
   944  001C                     	;# 
   945  001D                     	;# 
   946  001E                     	;# 
   947  001F                     	;# 
   948  0081                     	;# 
   949  0085                     	;# 
   950  0086                     	;# 
   951  0087                     	;# 
   952  0089                     	;# 
   953  008C                     	;# 
   954  008D                     	;# 
   955  008E                     	;# 
   956  008F                     	;# 
   957  0090                     	;# 
   958  0091                     	;# 
   959  0092                     	;# 
   960  0093                     	;# 
   961  0093                     	;# 
   962  0093                     	;# 
   963  0094                     	;# 
   964  0095                     	;# 
   965  0096                     	;# 
   966  0097                     	;# 
   967  0098                     	;# 
   968  0099                     	;# 
   969  009A                     	;# 
   970  009B                     	;# 
   971  009C                     	;# 
   972  009D                     	;# 
   973  009E                     	;# 
   974  009F                     	;# 
   975  0105                     	;# 
   976  0107                     	;# 
   977  0108                     	;# 
   978  0109                     	;# 
   979  010C                     	;# 
   980  010C                     	;# 
   981  010D                     	;# 
   982  010E                     	;# 
   983  010F                     	;# 
   984  0185                     	;# 
   985  0187                     	;# 
   986  0188                     	;# 
   987  0189                     	;# 
   988  018C                     	;# 
   989  018D                     	;# 
   990  0000                     	;# 
   991  0001                     	;# 
   992  0002                     	;# 
   993  0003                     	;# 
   994  0004                     	;# 
   995  0005                     	;# 
   996  0006                     	;# 
   997  0007                     	;# 
   998  0009                     	;# 
   999  000A                     	;# 
  1000  000B                     	;# 
  1001  000C                     	;# 
  1002  000D                     	;# 
  1003  000E                     	;# 
  1004  000E                     	;# 
  1005  000F                     	;# 
  1006  0010                     	;# 
  1007  0011                     	;# 
  1008  0012                     	;# 
  1009  0013                     	;# 
  1010  0014                     	;# 
  1011  0015                     	;# 
  1012  0015                     	;# 
  1013  0016                     	;# 
  1014  0017                     	;# 
  1015  0018                     	;# 
  1016  0019                     	;# 
  1017  001A                     	;# 
  1018  001B                     	;# 
  1019  001B                     	;# 
  1020  001C                     	;# 
  1021  001D                     	;# 
  1022  001E                     	;# 
  1023  001F                     	;# 
  1024  0081                     	;# 
  1025  0085                     	;# 
  1026  0086                     	;# 
  1027  0087                     	;# 
  1028  0089                     	;# 
  1029  008C                     	;# 
  1030  008D                     	;# 
  1031  008E                     	;# 
  1032  008F                     	;# 
  1033  0090                     	;# 
  1034  0091                     	;# 
  1035  0092                     	;# 
  1036  0093                     	;# 
  1037  0093                     	;# 
  1038  0093                     	;# 
  1039  0094                     	;# 
  1040  0095                     	;# 
  1041  0096                     	;# 
  1042  0097                     	;# 
  1043  0098                     	;# 
  1044  0099                     	;# 
  1045  009A                     	;# 
  1046  009B                     	;# 
  1047  009C                     	;# 
  1048  009D                     	;# 
  1049  009E                     	;# 
  1050  009F                     	;# 
  1051  0105                     	;# 
  1052  0107                     	;# 
  1053  0108                     	;# 
  1054  0109                     	;# 
  1055  010C                     	;# 
  1056  010C                     	;# 
  1057  010D                     	;# 
  1058  010E                     	;# 
  1059  010F                     	;# 
  1060  0185                     	;# 
  1061  0187                     	;# 
  1062  0188                     	;# 
  1063  0189                     	;# 
  1064  018C                     	;# 
  1065  018D                     	;# 
  1066                           
  1067                           	psect	idataBANK3
  1068  0000                     __pidataBANK3:	
  1069                           
  1070                           	psect	strings
  1071  1800                     __pstrings:	
  1072  1800                     stringtab:	
  1073  1800                     __stringtab:	
  1074                           
  1075                           ;	String table - string pointers are 1 byte each
  1076  1800  1BFF               	btfsc	btemp+1,7
  1077  1801  280A               	ljmp	stringcode
  1078  1802  1383               	bcf	3,7
  1079  1803  187F               	btfsc	btemp+1,0
  1080  1804  1783               	bsf	3,7
  1081  1805  0800               	movf	0,w
  1082  1806  0A84               	incf	4,f
  1083  1807  1903               	skipnz
  1084  1808  0AFF               	incf	btemp+1,f
  1085  1809  0008               	return
  1086  180A                     stringcode:	
  1087  180A                     stringdir:	
  1088  180A  3018               	movlw	high stringdir
  1089  180B  008A               	movwf	10
  1090  180C  0804               	movf	4,w
  1091  180D  0A84               	incf	4,f
  1092  180E  0782               	addwf	2,f
  1093  180F                     __stringbase:	
  1094  180F  3400               	retlw	0
  1095  1810                     __end_of__stringtab:	
  1096  1810                     log@coeff:	
  1097  1810  3400               	retlw	0
  1098  1811  3400               	retlw	0
  1099  1812  3400               	retlw	0
  1100  1813  3400               	retlw	0
  1101  1814  34C4               	retlw	196
  1102  1815  34FF               	retlw	255
  1103  1816  347F               	retlw	127
  1104  1817  343F               	retlw	63
  1105  1818  3480               	retlw	128
  1106  1819  34EF               	retlw	239
  1107  181A  34FF               	retlw	255
  1108  181B  34BE               	retlw	190
  1109  181C  3490               	retlw	144
  1110  181D  34E1               	retlw	225
  1111  181E  34A9               	retlw	169
  1112  181F  343E               	retlw	62
  1113  1820  34EC               	retlw	236
  1114  1821  3482               	retlw	130
  1115  1822  3476               	retlw	118
  1116  1823  34BE               	retlw	190
  1117  1824  3482               	retlw	130
  1118  1825  34AD               	retlw	173
  1119  1826  342B               	retlw	43
  1120  1827  343E               	retlw	62
  1121  1828  340E               	retlw	14
  1122  1829  343C               	retlw	60
  1123  182A  34C3               	retlw	195
  1124  182B  34BD               	retlw	189
  1125  182C  3487               	retlw	135
  1126  182D  34D1               	retlw	209
  1127  182E  3413               	retlw	19
  1128  182F  343D               	retlw	61
  1129  1830  3441               	retlw	65
  1130  1831  3478               	retlw	120
  1131  1832  34D3               	retlw	211
  1132  1833  34BB               	retlw	187
  1133  1834                     __end_oflog@coeff:	
  1134  1834                     _BETA:	
  1135                           
  1136                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1137  1834  3400               	retlw	0
  1138  1835  3460               	retlw	96
  1139  1836  3478               	retlw	120
  1140  1837  3445               	retlw	69
  1141  1838                     __end_of_BETA:	
  1142  1838                     _BALANCE_RESISTOR:	
  1143                           
  1144                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1145  1838  3400               	retlw	0
  1146  1839  3440               	retlw	64
  1147  183A  341C               	retlw	28
  1148  183B  3446               	retlw	70
  1149  183C                     __end_of_BALANCE_RESISTOR:	
  1150  0019                     _TXREG	set	25
  1151  0018                     _RCSTAbits	set	24
  1152  001A                     _RCREG	set	26
  1153  000E                     _TMR1L	set	14
  1154  000F                     _TMR1H	set	15
  1155  000C                     _PIR1bits	set	12
  1156  001E                     _ADRESH	set	30
  1157  001F                     _ADCON0bits	set	31
  1158  0005                     _PORTAbits	set	5
  1159  0007                     _PORTCbits	set	7
  1160  0010                     _T1CON	set	16
  1161  000B                     _INTCONbits	set	11
  1162  0006                     _PORTBbits	set	6
  1163  0009                     _PORTE	set	9
  1164  0007                     _PORTC	set	7
  1165  0005                     _PORTA	set	5
  1166  0013                     _SSPBUF	set	19
  1167  0014                     _SSPCON	set	20
  1168  0006                     _PORTB	set	6
  1169  00C4                     _CREN	set	196
  1170  0081                     _TMR1CS	set	129
  1171  0085                     _T1CKPS1	set	133
  1172  0084                     _T1CKPS0	set	132
  1173  008C                     _PIE1bits	set	140
  1174  0099                     _SPBRG	set	153
  1175  0098                     _TXSTAbits	set	152
  1176  009E                     _ADRESL	set	158
  1177  009F                     _ADCON1bits	set	159
  1178  009F                     _ADCON1	set	159
  1179  0095                     _WPUB	set	149
  1180  0081                     _OPTION_REGbits	set	129
  1181  0089                     _TRISE	set	137
  1182  0087                     _TRISC	set	135
  1183  0086                     _TRISB	set	134
  1184  0085                     _TRISA	set	133
  1185  008F                     _OSCCONbits	set	143
  1186  0094                     _SSPSTAT	set	148
  1187  0093                     _SSPADD	set	147
  1188  0091                     _SSPCON2	set	145
  1189  043F                     _TRISC7	set	1087
  1190  043E                     _TRISC6	set	1086
  1191  0460                     _TMR1IE	set	1120
  1192  048C                     _ACKEN	set	1164
  1193  048D                     _ACKDT	set	1165
  1194  048B                     _RCEN	set	1163
  1195  048A                     _PEN	set	1162
  1196  0489                     _RSEN	set	1161
  1197  0488                     _SEN	set	1160
  1198  043C                     _TRISC4	set	1084
  1199  043B                     _TRISC3	set	1083
  1200  010C                     _EEDATA	set	268
  1201  010D                     _EEADR	set	269
  1202  0187                     _BAUDCTLbits	set	391
  1203  018D                     _EECON2	set	397
  1204  018C                     _EECON1bits	set	396
  1205  0189                     _ANSELH	set	393
  1206  0188                     _ANSEL	set	392
  1207  183C                     STR_1:	
  1208  183C  3476               	retlw	118	;'v'
  1209  183D  3431               	retlw	49	;'1'
  1210  183E  342E               	retlw	46	;'.'
  1211  183F  3430               	retlw	48	;'0'
  1212  1840  342E               	retlw	46	;'.'
  1213  1841  3434               	retlw	52	;'4'
  1214  1842  3400               	retlw	0
  1215  1843                     STR_8:	
  1216  1843  344F               	retlw	79	;'O'
  1217  1844  344B               	retlw	75	;'K'
  1218  1845  3400               	retlw	0
  1219  1846                     STR_3:	
  1220  1846  3430               	retlw	48	;'0'
  1221  1847  3400               	retlw	0
  1222  1848                     STR_4:	
  1223  1848  343A               	retlw	58	;':'
  1224  1849  3400               	retlw	0
  1225  1847                     
  1226                           ; #config settings
  1227  0000                     
  1228                           	psect	cinit
  1229  0015                     start_initialization:	
  1230  0015                     __initialization:	
  1231                           
  1232                           ; Initialize objects allocated to BANK3
  1233  0015  1683               	bsf	3,5	;RP0=1, select bank3
  1234  0016  1703               	bsf	3,6	;RP1=1, select bank3
  1235                           
  1236                           ;initializer for _RL1Status
  1237  0017  3001               	movlw	1
  1238  0018  00E1               	movwf	__pdataBANK3& (0+127)
  1239                           
  1240                           ;initializer for _RL0Status
  1241  0019  00E2               	movwf	(__pdataBANK3+1)& (0+127)
  1242  001A  3090               	movlw	low __pbssBANK3
  1243                           
  1244                           ; Clear objects allocated to BANK3
  1245  001B  1783               	bsf	3,7	;select IRP bank2
  1246  001C  0084               	movwf	4
  1247  001D  30DE               	movlw	low (__pbssBANK3+78)
  1248  001E  120A  158A  2007  120A  118A  	fcall	clear_ram0
  1249                           
  1250                           ; Clear objects allocated to BANK2
  1251  0023  3010               	movlw	low __pbssBANK2
  1252  0024  0084               	movwf	4
  1253  0025  3069               	movlw	low (__pbssBANK2+89)
  1254  0026  120A  158A  2007   	fcall	clear_ram0
  1255                           
  1256                           ; Clear objects allocated to COMMON
  1257  0029  01F0               	clrf	__pbssCOMMON& (0+127)
  1258  002A  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1259  002B  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1260  002C  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1261  002D  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1262  002E  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1263  002F  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1264  0030                     end_of_initialization:	
  1265                           ;End of C runtime variable initialization code
  1266                           
  1267  0030                     __end_of__initialization:	
  1268  0030  0183               	clrf	3
  1269  0031  120A  118A  2DD3   	ljmp	l7344	;jump to C main() function
  1270                           
  1271                           	psect	bssCOMMON
  1272  0070                     __pbssCOMMON:	
  1273  0070                     _SetPoint0:	
  1274  0070                     	ds	4
  1275  0074                     _TempoCNT_1:	
  1276  0074                     	ds	1
  1277  0075                     _TempoCNT_0:	
  1278  0075                     	ds	1
  1279  0076                     _generic_status:	
  1280  0076                     	ds	1
  1281                           
  1282                           	psect	bssBANK3
  1283  0190                     __pbssBANK3:	
  1284  0190                     _Temperatura1:	
  1285  0190                     	ds	4
  1286  0194                     _Temperatura0:	
  1287  0194                     	ds	4
  1288  0198                     _SetPoint1:	
  1289  0198                     	ds	4
  1290  019C                     _Histerese0:	
  1291  019C                     	ds	4
  1292  01A0                     _tempodecorrido:	
  1293  01A0                     	ds	2
  1294  01A2                     _count:	
  1295  01A2                     	ds	2
  1296  01A4                     _header:	
  1297  01A4                     	ds	2
  1298  01A6                     _Status1:	
  1299  01A6                     	ds	2
  1300  01A8                     _Status0:	
  1301  01A8                     	ds	2
  1302  01AA                     _milisegundo:	
  1303  01AA                     	ds	2
  1304  01AC                     _Delay_Led_Usart:	
  1305  01AC                     	ds	2
  1306  01AE                     _Delay_Led_Tmr0:	
  1307  01AE                     	ds	2
  1308  01B0                     _Delay_Led_Memory:	
  1309  01B0                     	ds	2
  1310  01B2                     _pointer:	
  1311  01B2                     	ds	1
  1312  01B3                     _destino:	
  1313  01B3                     	ds	1
  1314  01B4                     _Board_Number:	
  1315  01B4                     	ds	1
  1316  01B5                     _canal:	
  1317  01B5                     	ds	1
  1318  01B6                     _TempoOFF_1:	
  1319  01B6                     	ds	1
  1320  01B7                     _TempoON_1:	
  1321  01B7                     	ds	1
  1322  01B8                     _Histerese1:	
  1323  01B8                     	ds	1
  1324  01B9                     _TempoOFF_0:	
  1325  01B9                     	ds	1
  1326  01BA                     _TempoON_0:	
  1327  01BA                     	ds	1
  1328  01BB                     _minuto:	
  1329  01BB                     	ds	1
  1330  01BC                     _hora:	
  1331  01BC                     	ds	1
  1332  01BD                     _segundo:	
  1333  01BD                     	ds	1
  1334  01BE                     _texto:	
  1335  01BE                     	ds	16
  1336  01CE                     _usart_protocol:	
  1337  01CE                     	ds	16
  1338                           
  1339                           	psect	dataBANK3
  1340  01E1                     __pdataBANK3:	
  1341  01E1                     _RL1Status:	
  1342  01E1                     	ds	1
  1343  01E2                     _RL0Status:	
  1344  01E2                     	ds	1
  1345                           
  1346                           	psect	bssBANK2
  1347  0110                     __pbssBANK2:	
  1348  0110                     _buffer:	
  1349  0110                     	ds	64
  1350  0150                     _usart_buffer:	
  1351  0150                     	ds	25
  1352                           
  1353                           	psect	clrtext
  1354  0807                     clear_ram0:	
  1355                           ;	Called with FSR containing the base address, and
  1356                           ;	W with the last address+1
  1357                           
  1358  0807  0064               	clrwdt	;clear the watchdog before getting into this loop
  1359  0808                     clrloop0:	
  1360  0808  0180               	clrf	0	;clear RAM location pointed to by FSR
  1361  0809  0A84               	incf	4,f	;increment pointer
  1362  080A  0604               	xorwf	4,w	;XOR with final address
  1363  080B  1903               	btfsc	3,2	;have we reached the end yet?
  1364  080C  3400               	retlw	0	;all done for this memory range, return
  1365  080D  0604               	xorwf	4,w	;XOR again to restore value
  1366  080E  2808               	goto	clrloop0	;do the next byte
  1367                           
  1368                           	psect	cstackBANK3
  1369  01DE                     __pcstackBANK3:	
  1370  01DE                     ??_main:	
  1371                           
  1372                           ; 1 bytes @ 0x0
  1373  01DE                     	ds	3
  1374                           
  1375                           	psect	cstackBANK1
  1376  00A0                     __pcstackBANK1:	
  1377  00A0                     ?_eval_poly:	
  1378  00A0                     ?___fltol:	
  1379                           ; 4 bytes @ 0x0
  1380                           
  1381  00A0                     ?___fldiv:	
  1382                           ; 4 bytes @ 0x0
  1383                           
  1384  00A0                     ___fltol@f1:	
  1385                           ; 4 bytes @ 0x0
  1386                           
  1387  00A0                     ___fldiv@a:	
  1388                           ; 4 bytes @ 0x0
  1389                           
  1390  00A0                     eval_poly@x:	
  1391                           ; 4 bytes @ 0x0
  1392                           
  1393                           
  1394                           ; 4 bytes @ 0x0
  1395  00A0                     	ds	4
  1396  00A4                     ??___fltol:	
  1397  00A4                     eval_poly@d:	
  1398                           ; 1 bytes @ 0x4
  1399                           
  1400  00A4                     ___fldiv@b:	
  1401                           ; 1 bytes @ 0x4
  1402                           
  1403                           
  1404                           ; 4 bytes @ 0x4
  1405  00A4                     	ds	1
  1406  00A5                     eval_poly@n:	
  1407                           
  1408                           ; 2 bytes @ 0x5
  1409  00A5                     	ds	2
  1410  00A7                     ??_eval_poly:	
  1411                           
  1412                           ; 1 bytes @ 0x7
  1413  00A7                     	ds	1
  1414  00A8                     ?_USART_put_int:	
  1415  00A8                     ?_EEPROM_24C1025_Write_Int:	
  1416                           ; 1 bytes @ 0x8
  1417                           
  1418  00A8                     ??___fldiv:	
  1419                           ; 1 bytes @ 0x8
  1420                           
  1421  00A8                     USART_put_int@value:	
  1422                           ; 1 bytes @ 0x8
  1423                           
  1424  00A8                     EEPROM_24C1025_Write_Int@mem_add:	
  1425                           ; 2 bytes @ 0x8
  1426                           
  1427                           
  1428                           ; 4 bytes @ 0x8
  1429  00A8                     	ds	2
  1430  00AA                     USART_put_int@dado:	
  1431                           
  1432                           ; 1 bytes @ 0xA
  1433  00AA                     	ds	1
  1434  00AB                     ?_PROCULUS_Control_Register_Write:	
  1435  00AB                     ?_PROCULUS_VP_Write:	
  1436                           ; 1 bytes @ 0xB
  1437                           
  1438  00AB                     PROCULUS_Control_Register_Write@size:	
  1439                           ; 1 bytes @ 0xB
  1440                           
  1441  00AB                     PROCULUS_VP_Write@vp:	
  1442                           ; 1 bytes @ 0xB
  1443                           
  1444                           
  1445                           ; 2 bytes @ 0xB
  1446  00AB                     	ds	1
  1447  00AC                     ??_PROCULUS_Control_Register_Write:	
  1448  00AC                     EEPROM_24C1025_Write_Int@data:	
  1449                           ; 1 bytes @ 0xC
  1450                           
  1451  00AC                     ___fldiv@rem:	
  1452                           ; 2 bytes @ 0xC
  1453                           
  1454  00AC                     eval_poly@res:	
  1455                           ; 4 bytes @ 0xC
  1456                           
  1457                           
  1458                           ; 4 bytes @ 0xC
  1459  00AC                     	ds	1
  1460  00AD                     PROCULUS_Control_Register_Write@vetor:	
  1461  00AD                     PROCULUS_VP_Write@vetor:	
  1462                           ; 1 bytes @ 0xD
  1463                           
  1464                           
  1465                           ; 2 bytes @ 0xD
  1466  00AD                     	ds	1
  1467  00AE                     PROCULUS_Control_Register_Write@i:	
  1468  00AE                     EEPROM_24C1025_Write_Int@chip_add:	
  1469                           ; 1 bytes @ 0xE
  1470                           
  1471                           
  1472                           ; 1 bytes @ 0xE
  1473  00AE                     	ds	1
  1474  00AF                     ?_PROCULUS_Show_Screen:	
  1475  00AF                     ?_PROCULUS_Buzzer:	
  1476                           ; 1 bytes @ 0xF
  1477                           
  1478  00AF                     PROCULUS_VP_Write@size:	
  1479                           ; 1 bytes @ 0xF
  1480                           
  1481  00AF                     PROCULUS_Buzzer@time_ms_x_10:	
  1482                           ; 1 bytes @ 0xF
  1483                           
  1484  00AF                     PROCULUS_Show_Screen@screen:	
  1485                           ; 2 bytes @ 0xF
  1486                           
  1487  00AF                     EEPROM_24C1025_Write_Int@local:	
  1488                           ; 2 bytes @ 0xF
  1489                           
  1490                           
  1491                           ; 2 bytes @ 0xF
  1492  00AF                     	ds	1
  1493  00B0                     ??_PROCULUS_VP_Write:	
  1494  00B0                     ?_log:	
  1495                           ; 1 bytes @ 0x10
  1496                           
  1497  00B0                     ___fldiv@sign:	
  1498                           ; 4 bytes @ 0x10
  1499                           
  1500  00B0                     log@x:	
  1501                           ; 1 bytes @ 0x10
  1502                           
  1503                           
  1504                           ; 4 bytes @ 0x10
  1505  00B0                     	ds	1
  1506  00B1                     ?_Save_Log:	
  1507  00B1                     PROCULUS_Buzzer@vetor:	
  1508                           ; 1 bytes @ 0x11
  1509                           
  1510  00B1                     ___fldiv@new_exp:	
  1511                           ; 2 bytes @ 0x11
  1512                           
  1513  00B1                     PROCULUS_Show_Screen@vetor:	
  1514                           ; 2 bytes @ 0x11
  1515                           
  1516  00B1                     Save_Log@add_memory:	
  1517                           ; 3 bytes @ 0x11
  1518                           
  1519                           
  1520                           ; 4 bytes @ 0x11
  1521  00B1                     	ds	1
  1522  00B2                     PROCULUS_VP_Write@i:	
  1523                           
  1524                           ; 1 bytes @ 0x12
  1525  00B2                     	ds	1
  1526  00B3                     ?_PROCULUS_VP_Write_String:	
  1527  00B3                     PROCULUS_VP_Write_String@vp:	
  1528                           ; 1 bytes @ 0x13
  1529                           
  1530  00B3                     ___fldiv@grs:	
  1531                           ; 2 bytes @ 0x13
  1532                           
  1533                           
  1534                           ; 4 bytes @ 0x13
  1535  00B3                     	ds	2
  1536  00B5                     PROCULUS_VP_Write_String@text:	
  1537                           
  1538                           ; 1 bytes @ 0x15
  1539  00B5                     	ds	2
  1540  00B7                     ___fldiv@bexp:	
  1541                           
  1542                           ; 1 bytes @ 0x17
  1543  00B7                     	ds	1
  1544  00B8                     ___fldiv@aexp:	
  1545                           
  1546                           ; 1 bytes @ 0x18
  1547  00B8                     	ds	1
  1548  00B9                     ??_Load_Work:	
  1549  00B9                     ?_ADC_Read_NTC:	
  1550                           ; 1 bytes @ 0x19
  1551                           
  1552                           
  1553                           ; 4 bytes @ 0x19
  1554  00B9                     	ds	4
  1555  00BD                     ??_Decodify_Command:	
  1556                           
  1557                           ; 1 bytes @ 0x1D
  1558  00BD                     	ds	1
  1559  00BE                     ADC_Read_NTC@calc:	
  1560                           
  1561                           ; 4 bytes @ 0x1E
  1562  00BE                     	ds	1
  1563  00BF                     Decodify_Command@hh:	
  1564                           
  1565                           ; 10 bytes @ 0x1F
  1566  00BF                     	ds	3
  1567  00C2                     ADC_Read_NTC@B:	
  1568                           
  1569                           ; 2 bytes @ 0x22
  1570  00C2                     	ds	2
  1571  00C4                     ADC_Read_NTC@resistencia:	
  1572                           
  1573                           ; 4 bytes @ 0x24
  1574  00C4                     	ds	4
  1575  00C8                     ADC_Read_NTC@i:	
  1576                           
  1577                           ; 1 bytes @ 0x28
  1578  00C8                     	ds	1
  1579  00C9                     ADC_Read_NTC@value:	
  1580  00C9                     Decodify_Command@mm:	
  1581                           ; 2 bytes @ 0x29
  1582                           
  1583                           
  1584                           ; 10 bytes @ 0x29
  1585  00C9                     	ds	2
  1586  00CB                     ADC_Read_NTC@temperatura:	
  1587                           
  1588                           ; 4 bytes @ 0x2B
  1589  00CB                     	ds	4
  1590  00CF                     ??_mediatemperaturaNTC:	
  1591                           
  1592                           ; 1 bytes @ 0x2F
  1593  00CF                     	ds	1
  1594  00D0                     _mediatemperaturaNTC$2294:	
  1595                           
  1596                           ; 4 bytes @ 0x30
  1597  00D0                     	ds	3
  1598  00D3                     Decodify_Command@ss:	
  1599                           
  1600                           ; 10 bytes @ 0x33
  1601  00D3                     	ds	1
  1602  00D4                     mediatemperaturaNTC@canal:	
  1603                           
  1604                           ; 1 bytes @ 0x34
  1605  00D4                     	ds	1
  1606  00D5                     mediatemperaturaNTC@Temp:	
  1607                           
  1608                           ; 4 bytes @ 0x35
  1609  00D5                     	ds	4
  1610  00D9                     mediatemperaturaNTC@i:	
  1611                           
  1612                           ; 1 bytes @ 0x39
  1613  00D9                     	ds	4
  1614  00DD                     Decodify_Command@dados:	
  1615                           
  1616                           ; 2 bytes @ 0x3D
  1617  00DD                     	ds	2
  1618  00DF                     Decodify_Command@add:	
  1619                           
  1620                           ; 1 bytes @ 0x3F
  1621  00DF                     	ds	1
  1622  00E0                     Decodify_Command@tempint:	
  1623                           
  1624                           ; 2 bytes @ 0x40
  1625  00E0                     	ds	2
  1626  00E2                     Decodify_Command@OutPut:	
  1627                           
  1628                           ; 4 bytes @ 0x42
  1629  00E2                     	ds	4
  1630  00E6                     Decodify_Command@tempchar:	
  1631                           
  1632                           ; 1 bytes @ 0x46
  1633  00E6                     	ds	1
  1634  00E7                     Decodify_Command@valor:	
  1635                           
  1636                           ; 2 bytes @ 0x47
  1637  00E7                     	ds	2
  1638  00E9                     Decodify_Command@sizedata:	
  1639                           
  1640                           ; 1 bytes @ 0x49
  1641  00E9                     	ds	1
  1642  00EA                     Decodify_Command@add_24LCxxxx:	
  1643                           
  1644                           ; 4 bytes @ 0x4A
  1645  00EA                     	ds	4
  1646  00EE                     main@reset:	
  1647                           
  1648                           ; 2 bytes @ 0x4E
  1649  00EE                     	ds	2
  1650                           
  1651                           	psect	cstackCOMMON
  1652  0077                     __pcstackCOMMON:	
  1653  0077                     ?_ADC_init:	
  1654  0077                     ?_Load_Work:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0077                     ?_mediatemperaturaNTC:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0077                     ?_Auto_Relay0:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0077                     ?_Auto_Relay1:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0077                     ?_Decodify_Command:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669  0077                     ?_USART_to_Protocol:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672  0077                     ?_Send_To_MB:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675  0077                     ?_Send_Reply_OK:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0077                     ?_EEPROM_Read_Byte:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0077                     ?_USART_putc:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0077                     ?_Package_Usart_is_for_me:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0077                     ?_Rele0Ligado:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690  0077                     ?_Rele1Ligado:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693  0077                     ?_Rele0Desligado:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  0077                     ?_Rele1Desligado:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699  0077                     ?_I2C_Master_Wait:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702  0077                     ?_I2C_Master_Start:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  0077                     ?_I2C_Master_RepeatedStart:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0077                     ?_I2C_Master_Stop:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0077                     ?_main:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0077                     ?_isr:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0077                     ??_isr:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0077                     ADC_Read_NTC@canal:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723                           
  1724                           ; 1 bytes @ 0x0
  1725  0077                     	ds	4
  1726  007B                     isr@tempo:	
  1727                           
  1728                           ; 2 bytes @ 0x4
  1729  007B                     	ds	2
  1730                           
  1731                           	psect	cstackBANK0
  1732  0020                     __pcstackBANK0:	
  1733  0020                     ?___fleq:	
  1734  0020                     ?_my_delay_ms_WDT:	
  1735                           ; 1 bit 
  1736                           
  1737  0020                     ??_ADC_init:	
  1738                           ; 1 bytes @ 0x0
  1739                           
  1740  0020                     ?_USART_init:	
  1741                           ; 1 bytes @ 0x0
  1742                           
  1743  0020                     ??_USART_to_Protocol:	
  1744                           ; 1 bytes @ 0x0
  1745                           
  1746  0020                     ?_EEPROM_Write_Byte:	
  1747                           ; 1 bytes @ 0x0
  1748                           
  1749  0020                     ??_EEPROM_Read_Byte:	
  1750                           ; 1 bytes @ 0x0
  1751                           
  1752  0020                     ??_USART_putc:	
  1753                           ; 1 bytes @ 0x0
  1754                           
  1755  0020                     ?_strcpy:	
  1756                           ; 1 bytes @ 0x0
  1757                           
  1758  0020                     ?_strcat:	
  1759                           ; 1 bytes @ 0x0
  1760                           
  1761  0020                     ?_my_delay_ms:	
  1762                           ; 1 bytes @ 0x0
  1763                           
  1764  0020                     ??_Package_Usart_is_for_me:	
  1765                           ; 1 bytes @ 0x0
  1766                           
  1767  0020                     ??_Rele0Ligado:	
  1768                           ; 1 bytes @ 0x0
  1769                           
  1770  0020                     ??_Rele1Ligado:	
  1771                           ; 1 bytes @ 0x0
  1772                           
  1773  0020                     ??_Rele0Desligado:	
  1774                           ; 1 bytes @ 0x0
  1775                           
  1776  0020                     ??_Rele1Desligado:	
  1777                           ; 1 bytes @ 0x0
  1778                           
  1779  0020                     ?_PROCULUS_Delay:	
  1780                           ; 1 bytes @ 0x0
  1781                           
  1782  0020                     ??_I2C_Master_Wait:	
  1783                           ; 1 bytes @ 0x0
  1784                           
  1785  0020                     ??_I2C_Master_Start:	
  1786                           ; 1 bytes @ 0x0
  1787                           
  1788  0020                     ??_I2C_Master_RepeatedStart:	
  1789                           ; 1 bytes @ 0x0
  1790                           
  1791  0020                     ??_I2C_Master_Stop:	
  1792                           ; 1 bytes @ 0x0
  1793                           
  1794  0020                     ?_I2C_Master_Write:	
  1795                           ; 1 bytes @ 0x0
  1796                           
  1797  0020                     ?_strlen:	
  1798                           ; 1 bytes @ 0x0
  1799                           
  1800  0020                     ?_captura:	
  1801                           ; 2 bytes @ 0x0
  1802                           
  1803  0020                     ?__Umul8_16:	
  1804                           ; 2 bytes @ 0x0
  1805                           
  1806  0020                     ?_I2C_Master_Read:	
  1807                           ; 2 bytes @ 0x0
  1808                           
  1809  0020                     ?___lwdiv:	
  1810                           ; 2 bytes @ 0x0
  1811                           
  1812  0020                     ?___lwmod:	
  1813                           ; 2 bytes @ 0x0
  1814                           
  1815  0020                     ?___lldiv:	
  1816                           ; 2 bytes @ 0x0
  1817                           
  1818  0020                     EEPROM_Write_Byte@dado:	
  1819                           ; 4 bytes @ 0x0
  1820                           
  1821  0020                     Package_Usart_is_for_me@retorno:	
  1822                           ; 1 bytes @ 0x0
  1823                           
  1824  0020                     USART_putc@value:	
  1825                           ; 1 bytes @ 0x0
  1826                           
  1827  0020                     strcpy@from:	
  1828                           ; 1 bytes @ 0x0
  1829                           
  1830  0020                     __Umul8_16@multiplicand:	
  1831                           ; 1 bytes @ 0x0
  1832                           
  1833  0020                     I2C_Master_Write@d:	
  1834                           ; 1 bytes @ 0x0
  1835                           
  1836  0020                     I2C_Master_Read@a:	
  1837                           ; 2 bytes @ 0x0
  1838                           
  1839  0020                     PROCULUS_Delay@tempo_ms:	
  1840                           ; 2 bytes @ 0x0
  1841                           
  1842  0020                     ___lwdiv@divisor:	
  1843                           ; 2 bytes @ 0x0
  1844                           
  1845  0020                     ___lwmod@divisor:	
  1846                           ; 2 bytes @ 0x0
  1847                           
  1848  0020                     strcat@from:	
  1849                           ; 2 bytes @ 0x0
  1850                           
  1851  0020                     my_delay_ms@time:	
  1852                           ; 2 bytes @ 0x0
  1853                           
  1854  0020                     my_delay_ms_WDT@time:	
  1855                           ; 4 bytes @ 0x0
  1856                           
  1857  0020                     USART_init@baudrate:	
  1858                           ; 4 bytes @ 0x0
  1859                           
  1860  0020                     ___lldiv@divisor:	
  1861                           ; 4 bytes @ 0x0
  1862                           
  1863  0020                     ___fleq@ff1:	
  1864                           ; 4 bytes @ 0x0
  1865                           
  1866                           
  1867                           ; 4 bytes @ 0x0
  1868  0020                     	ds	1
  1869  0021                     ??_Send_To_MB:	
  1870  0021                     ?_USART_put_string:	
  1871                           ; 1 bytes @ 0x1
  1872                           
  1873  0021                     ??_EEPROM_Write_Byte:	
  1874                           ; 1 bytes @ 0x1
  1875                           
  1876  0021                     ?_USART_put_buffer:	
  1877                           ; 1 bytes @ 0x1
  1878                           
  1879  0021                     ??_strcpy:	
  1880                           ; 1 bytes @ 0x1
  1881                           
  1882  0021                     Send_To_MB@size:	
  1883                           ; 1 bytes @ 0x1
  1884                           
  1885  0021                     USART_put_buffer@size:	
  1886                           ; 1 bytes @ 0x1
  1887                           
  1888  0021                     USART_put_string@vetor:	
  1889                           ; 2 bytes @ 0x1
  1890                           
  1891                           
  1892                           ; 2 bytes @ 0x1
  1893  0021                     	ds	1
  1894  0022                     ?_EEPROM_24C1025_Write_Buffer:	
  1895  0022                     ?_EEPROM_24C1025_Write_Str:	
  1896                           ; 1 bytes @ 0x2
  1897                           
  1898  0022                     ??_strcat:	
  1899                           ; 1 bytes @ 0x2
  1900                           
  1901  0022                     ??_captura:	
  1902                           ; 1 bytes @ 0x2
  1903                           
  1904  0022                     ??_PROCULUS_Delay:	
  1905                           ; 1 bytes @ 0x2
  1906                           
  1907  0022                     ??_I2C_Master_Write:	
  1908                           ; 1 bytes @ 0x2
  1909                           
  1910  0022                     ??_I2C_Master_Read:	
  1911                           ; 1 bytes @ 0x2
  1912                           
  1913  0022                     EEPROM_Read_Byte@addr:	
  1914                           ; 1 bytes @ 0x2
  1915                           
  1916  0022                     strcpy@to:	
  1917                           ; 1 bytes @ 0x2
  1918                           
  1919  0022                     I2C_Master_Read@temp:	
  1920                           ; 1 bytes @ 0x2
  1921                           
  1922  0022                     USART_to_Protocol@i:	
  1923                           ; 2 bytes @ 0x2
  1924                           
  1925  0022                     ___lwdiv@dividend:	
  1926                           ; 2 bytes @ 0x2
  1927                           
  1928  0022                     ___lwmod@dividend:	
  1929                           ; 2 bytes @ 0x2
  1930                           
  1931  0022                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1932                           ; 2 bytes @ 0x2
  1933                           
  1934  0022                     EEPROM_24C1025_Write_Str@mem_add:	
  1935                           ; 4 bytes @ 0x2
  1936                           
  1937                           
  1938                           ; 4 bytes @ 0x2
  1939  0022                     	ds	1
  1940  0023                     ??_USART_put_string:	
  1941  0023                     ?_EEPROM_Read_String:	
  1942                           ; 1 bytes @ 0x3
  1943                           
  1944  0023                     ??_USART_put_buffer:	
  1945                           ; 1 bytes @ 0x3
  1946                           
  1947  0023                     ??_strlen:	
  1948                           ; 1 bytes @ 0x3
  1949                           
  1950  0023                     ??__Umul8_16:	
  1951                           ; 1 bytes @ 0x3
  1952                           
  1953  0023                     ?_EEPROM_Read_Integer:	
  1954                           ; 1 bytes @ 0x3
  1955                           
  1956  0023                     EEPROM_Write_Byte@addr:	
  1957                           ; 2 bytes @ 0x3
  1958                           
  1959  0023                     EEPROM_Read_String@dado:	
  1960                           ; 1 bytes @ 0x3
  1961                           
  1962  0023                     strcat@cp:	
  1963                           ; 1 bytes @ 0x3
  1964                           
  1965  0023                     strcpy@cp:	
  1966                           ; 1 bytes @ 0x3
  1967                           
  1968  0023                     strlen@cp:	
  1969                           ; 1 bytes @ 0x3
  1970                           
  1971  0023                     USART_put_string@ptr:	
  1972                           ; 1 bytes @ 0x3
  1973                           
  1974  0023                     __Umul8_16@product:	
  1975                           ; 2 bytes @ 0x3
  1976                           
  1977                           
  1978                           ; 2 bytes @ 0x3
  1979  0023                     	ds	1
  1980  0024                     ??_my_delay_ms_WDT:	
  1981  0024                     ??_USART_init:	
  1982                           ; 1 bytes @ 0x4
  1983                           
  1984  0024                     ??_EEPROM_Read_String:	
  1985                           ; 1 bytes @ 0x4
  1986                           
  1987  0024                     ?_EEPROM_24C1025_Read_Buffer:	
  1988                           ; 1 bytes @ 0x4
  1989                           
  1990  0024                     ?_EEPROM_24C1025_Read_Str:	
  1991                           ; 1 bytes @ 0x4
  1992                           
  1993  0024                     ??_my_delay_ms:	
  1994                           ; 1 bytes @ 0x4
  1995                           
  1996  0024                     ??___lwdiv:	
  1997                           ; 1 bytes @ 0x4
  1998                           
  1999  0024                     ??___lwmod:	
  2000                           ; 1 bytes @ 0x4
  2001                           
  2002  0024                     EEPROM_Write_Byte@last_GIE:	
  2003                           ; 1 bytes @ 0x4
  2004                           
  2005  0024                     EEPROM_Read_String@addr:	
  2006                           ; 1 bytes @ 0x4
  2007                           
  2008  0024                     USART_init@i:	
  2009                           ; 1 bytes @ 0x4
  2010                           
  2011  0024                     USART_to_Protocol@usart_protocol:	
  2012                           ; 1 bytes @ 0x4
  2013                           
  2014  0024                     ___lwdiv@counter:	
  2015                           ; 1 bytes @ 0x4
  2016                           
  2017  0024                     ___lwmod@counter:	
  2018                           ; 1 bytes @ 0x4
  2019                           
  2020  0024                     strcat@to:	
  2021                           ; 1 bytes @ 0x4
  2022                           
  2023  0024                     strlen@s:	
  2024                           ; 1 bytes @ 0x4
  2025                           
  2026  0024                     PROCULUS_Delay@i:	
  2027                           ; 1 bytes @ 0x4
  2028                           
  2029  0024                     EEPROM_24C1025_Read_Buffer@mem_add:	
  2030                           ; 2 bytes @ 0x4
  2031                           
  2032  0024                     EEPROM_24C1025_Read_Str@mem_add:	
  2033                           ; 4 bytes @ 0x4
  2034                           
  2035  0024                     ___lldiv@dividend:	
  2036                           ; 4 bytes @ 0x4
  2037                           
  2038  0024                     ___fleq@ff2:	
  2039                           ; 4 bytes @ 0x4
  2040                           
  2041                           
  2042                           ; 4 bytes @ 0x4
  2043  0024                     	ds	1
  2044  0025                     ?_EEPROM_Write_Integer:	
  2045  0025                     ??_Send_Reply_OK:	
  2046                           ; 1 bytes @ 0x5
  2047                           
  2048  0025                     ?_EEPROM_Write_String:	
  2049                           ; 1 bytes @ 0x5
  2050                           
  2051  0025                     EEPROM_Write_String@dado:	
  2052                           ; 1 bytes @ 0x5
  2053                           
  2054  0025                     EEPROM_Read_String@c:	
  2055                           ; 1 bytes @ 0x5
  2056                           
  2057  0025                     USART_put_buffer@loop:	
  2058                           ; 1 bytes @ 0x5
  2059                           
  2060  0025                     EEPROM_Write_Integer@dado:	
  2061                           ; 1 bytes @ 0x5
  2062                           
  2063  0025                     ___lwdiv@quotient:	
  2064                           ; 2 bytes @ 0x5
  2065                           
  2066  0025                     __Umul8_16@word_mpld:	
  2067                           ; 2 bytes @ 0x5
  2068                           
  2069                           
  2070                           ; 2 bytes @ 0x5
  2071  0025                     	ds	1
  2072  0026                     ??_EEPROM_Read_Integer:	
  2073  0026                     ??_EEPROM_Write_String:	
  2074                           ; 1 bytes @ 0x6
  2075                           
  2076  0026                     EEPROM_Read_Integer@addr:	
  2077                           ; 1 bytes @ 0x6
  2078                           
  2079  0026                     EEPROM_Write_String@addr:	
  2080                           ; 1 bytes @ 0x6
  2081                           
  2082  0026                     USART_put_buffer@ptr:	
  2083                           ; 1 bytes @ 0x6
  2084                           
  2085  0026                     EEPROM_24C1025_Write_Buffer@sizedata:	
  2086                           ; 1 bytes @ 0x6
  2087                           
  2088  0026                     EEPROM_24C1025_Write_Str@data:	
  2089                           ; 1 bytes @ 0x6
  2090                           
  2091  0026                     my_delay_ms@i:	
  2092                           ; 1 bytes @ 0x6
  2093                           
  2094  0026                     my_delay_ms_WDT@i:	
  2095                           ; 4 bytes @ 0x6
  2096                           
  2097                           
  2098                           ; 4 bytes @ 0x6
  2099  0026                     	ds	1
  2100  0027                     ??_EEPROM_Write_Integer:	
  2101  0027                     ??_EEPROM_24C1025_Write_Str:	
  2102                           ; 1 bytes @ 0x7
  2103                           
  2104  0027                     ?_utoa:	
  2105                           ; 1 bytes @ 0x7
  2106                           
  2107  0027                     EEPROM_Read_Integer@ptr:	
  2108                           ; 1 bytes @ 0x7
  2109                           
  2110  0027                     USART_put_buffer@vetor:	
  2111                           ; 1 bytes @ 0x7
  2112                           
  2113  0027                     __Umul8_16@multiplier:	
  2114                           ; 1 bytes @ 0x7
  2115                           
  2116  0027                     EEPROM_24C1025_Write_Buffer@data:	
  2117                           ; 1 bytes @ 0x7
  2118                           
  2119  0027                     utoa@val:	
  2120                           ; 2 bytes @ 0x7
  2121                           
  2122                           
  2123                           ; 2 bytes @ 0x7
  2124  0027                     	ds	1
  2125  0028                     ??___lldiv:	
  2126  0028                     ??___fleq:	
  2127                           ; 1 bytes @ 0x8
  2128                           
  2129  0028                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2130                           ; 1 bytes @ 0x8
  2131                           
  2132  0028                     EEPROM_24C1025_Read_Str@texto:	
  2133                           ; 1 bytes @ 0x8
  2134                           
  2135  0028                     EEPROM_Read_Integer@result:	
  2136                           ; 1 bytes @ 0x8
  2137                           
  2138  0028                     ___lldiv@quotient:	
  2139                           ; 2 bytes @ 0x8
  2140                           
  2141                           
  2142                           ; 4 bytes @ 0x8
  2143  0028                     	ds	1
  2144  0029                     ??_EEPROM_24C1025_Write_Buffer:	
  2145  0029                     ??_EEPROM_24C1025_Read_Str:	
  2146                           ; 1 bytes @ 0x9
  2147                           
  2148  0029                     EEPROM_Write_Integer@addr:	
  2149                           ; 1 bytes @ 0x9
  2150                           
  2151  0029                     EEPROM_24C1025_Write_Str@chip_add:	
  2152                           ; 1 bytes @ 0x9
  2153                           
  2154  0029                     EEPROM_24C1025_Read_Buffer@data:	
  2155                           ; 1 bytes @ 0x9
  2156                           
  2157  0029                     utoa@base:	
  2158                           ; 2 bytes @ 0x9
  2159                           
  2160                           
  2161                           ; 2 bytes @ 0x9
  2162  0029                     	ds	1
  2163  002A                     EEPROM_Write_Integer@ptr:	
  2164  002A                     EEPROM_Read_Integer@i:	
  2165                           ; 1 bytes @ 0xA
  2166                           
  2167  002A                     EEPROM_24C1025_Write_Str@range:	
  2168                           ; 1 bytes @ 0xA
  2169                           
  2170                           
  2171                           ; 1 bytes @ 0xA
  2172  002A                     	ds	1
  2173  002B                     ??_EEPROM_24C1025_Read_Buffer:	
  2174  002B                     ??_utoa:	
  2175                           ; 1 bytes @ 0xB
  2176                           
  2177  002B                     ?___xxtofl:	
  2178                           ; 1 bytes @ 0xB
  2179                           
  2180  002B                     EEPROM_Write_Integer@i:	
  2181                           ; 4 bytes @ 0xB
  2182                           
  2183  002B                     EEPROM_24C1025_Write_Buffer@count:	
  2184                           ; 1 bytes @ 0xB
  2185                           
  2186  002B                     EEPROM_24C1025_Write_Str@ctrl:	
  2187                           ; 1 bytes @ 0xB
  2188                           
  2189  002B                     EEPROM_24C1025_Read_Str@cnt:	
  2190                           ; 1 bytes @ 0xB
  2191                           
  2192  002B                     utoa@v:	
  2193                           ; 1 bytes @ 0xB
  2194                           
  2195  002B                     ___xxtofl@val:	
  2196                           ; 2 bytes @ 0xB
  2197                           
  2198                           
  2199                           ; 4 bytes @ 0xB
  2200  002B                     	ds	1
  2201  002C                     ?_frexp:	
  2202  002C                     EEPROM_24C1025_Write_Buffer@chip_add:	
  2203                           ; 4 bytes @ 0xC
  2204                           
  2205  002C                     EEPROM_24C1025_Read_Str@chip_add:	
  2206                           ; 1 bytes @ 0xC
  2207                           
  2208  002C                     ___lldiv@counter:	
  2209                           ; 1 bytes @ 0xC
  2210                           
  2211  002C                     frexp@value:	
  2212                           ; 1 bytes @ 0xC
  2213                           
  2214                           
  2215                           ; 4 bytes @ 0xC
  2216  002C                     	ds	1
  2217  002D                     ?_I2C_Master_Init:	
  2218  002D                     EEPROM_24C1025_Write_Buffer@range:	
  2219                           ; 1 bytes @ 0xD
  2220                           
  2221  002D                     EEPROM_24C1025_Read_Buffer@cnt_1519:	
  2222                           ; 1 bytes @ 0xD
  2223                           
  2224  002D                     EEPROM_24C1025_Read_Str@range:	
  2225                           ; 1 bytes @ 0xD
  2226                           
  2227  002D                     utoa@c:	
  2228                           ; 1 bytes @ 0xD
  2229                           
  2230  002D                     I2C_Master_Init@c:	
  2231                           ; 1 bytes @ 0xD
  2232                           
  2233                           
  2234                           ; 4 bytes @ 0xD
  2235  002D                     	ds	1
  2236  002E                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2237  002E                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2238                           ; 1 bytes @ 0xE
  2239                           
  2240  002E                     EEPROM_24C1025_Read_Str@ctrl:	
  2241                           ; 1 bytes @ 0xE
  2242                           
  2243  002E                     utoa@buf:	
  2244                           ; 1 bytes @ 0xE
  2245                           
  2246                           
  2247                           ; 1 bytes @ 0xE
  2248  002E                     	ds	1
  2249  002F                     ?_EEPROM_24C1025_Write_Byte:	
  2250  002F                     ?_EEPROM_24C1025_Fill_All:	
  2251                           ; 1 bytes @ 0xF
  2252                           
  2253  002F                     ?_itoa:	
  2254                           ; 1 bytes @ 0xF
  2255                           
  2256  002F                     ??___xxtofl:	
  2257                           ; 1 bytes @ 0xF
  2258                           
  2259  002F                     EEPROM_24C1025_Read_Buffer@range:	
  2260                           ; 1 bytes @ 0xF
  2261                           
  2262  002F                     EEPROM_24C1025_Fill_All@value:	
  2263                           ; 1 bytes @ 0xF
  2264                           
  2265  002F                     itoa@val:	
  2266                           ; 1 bytes @ 0xF
  2267                           
  2268  002F                     EEPROM_24C1025_Write_Byte@mem_add:	
  2269                           ; 2 bytes @ 0xF
  2270                           
  2271                           
  2272                           ; 4 bytes @ 0xF
  2273  002F                     	ds	1
  2274  0030                     ??_EEPROM_24C1025_Fill_All:	
  2275  0030                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2276                           ; 1 bytes @ 0x10
  2277                           
  2278  0030                     frexp@eptr:	
  2279                           ; 1 bytes @ 0x10
  2280                           
  2281                           
  2282                           ; 1 bytes @ 0x10
  2283  0030                     	ds	1
  2284  0031                     ?_EEPROM_24C1025_Read_Byte:	
  2285  0031                     ??_frexp:	
  2286                           ; 1 bytes @ 0x11
  2287                           
  2288  0031                     ??_I2C_Master_Init:	
  2289                           ; 1 bytes @ 0x11
  2290                           
  2291  0031                     ?_EEPROM_24C1025_Read_Int:	
  2292                           ; 1 bytes @ 0x11
  2293                           
  2294  0031                     itoa@base:	
  2295                           ; 2 bytes @ 0x11
  2296                           
  2297  0031                     EEPROM_24C1025_Read_Byte@mem_add:	
  2298                           ; 2 bytes @ 0x11
  2299                           
  2300  0031                     EEPROM_24C1025_Read_Int@mem_add:	
  2301                           ; 4 bytes @ 0x11
  2302                           
  2303                           
  2304                           ; 4 bytes @ 0x11
  2305  0031                     	ds	1
  2306  0032                     EEPROM_24C1025_Fill_All@chip_add:	
  2307                           
  2308                           ; 1 bytes @ 0x12
  2309  0032                     	ds	1
  2310  0033                     ??_itoa:	
  2311  0033                     EEPROM_24C1025_Write_Byte@data:	
  2312                           ; 1 bytes @ 0x13
  2313                           
  2314  0033                     EEPROM_24C1025_Fill_All@i:	
  2315                           ; 1 bytes @ 0x13
  2316                           
  2317  0033                     ___xxtofl@sign:	
  2318                           ; 1 bytes @ 0x13
  2319                           
  2320                           
  2321                           ; 1 bytes @ 0x13
  2322  0033                     	ds	1
  2323  0034                     ??_EEPROM_24C1025_Write_Byte:	
  2324  0034                     EEPROM_24C1025_Write_Byte@chip_add:	
  2325                           ; 1 bytes @ 0x14
  2326                           
  2327  0034                     ___xxtofl@exp:	
  2328                           ; 1 bytes @ 0x14
  2329                           
  2330  0034                     itoa@buf:	
  2331                           ; 1 bytes @ 0x14
  2332                           
  2333  0034                     EEPROM_24C1025_Fill_All@page:	
  2334                           ; 1 bytes @ 0x14
  2335                           
  2336                           
  2337                           ; 2 bytes @ 0x14
  2338  0034                     	ds	1
  2339  0035                     ??_EEPROM_24C1025_Read_Byte:	
  2340  0035                     ??_EEPROM_24C1025_Read_Int:	
  2341                           ; 1 bytes @ 0x15
  2342                           
  2343  0035                     EEPROM_24C1025_Read_Byte@chip_add:	
  2344                           ; 1 bytes @ 0x15
  2345                           
  2346  0035                     EEPROM_24C1025_Read_Int@chip_add:	
  2347                           ; 1 bytes @ 0x15
  2348                           
  2349  0035                     ___xxtofl@arg:	
  2350                           ; 1 bytes @ 0x15
  2351                           
  2352                           
  2353                           ; 4 bytes @ 0x15
  2354  0035                     	ds	1
  2355  0036                     EEPROM_24C1025_Read_Byte@data:	
  2356  0036                     EEPROM_24C1025_Read_Int@data:	
  2357                           ; 1 bytes @ 0x16
  2358                           
  2359                           
  2360                           ; 2 bytes @ 0x16
  2361  0036                     	ds	3
  2362  0039                     ?___fladd:	
  2363  0039                     ___fladd@b:	
  2364                           ; 4 bytes @ 0x19
  2365                           
  2366                           
  2367                           ; 4 bytes @ 0x19
  2368  0039                     	ds	4
  2369  003D                     ___fladd@a:	
  2370                           
  2371                           ; 4 bytes @ 0x1D
  2372  003D                     	ds	4
  2373  0041                     ??___fladd:	
  2374                           
  2375                           ; 1 bytes @ 0x21
  2376  0041                     	ds	8
  2377  0049                     ___fladd@signs:	
  2378                           
  2379                           ; 1 bytes @ 0x29
  2380  0049                     	ds	1
  2381  004A                     ___fladd@aexp:	
  2382                           
  2383                           ; 1 bytes @ 0x2A
  2384  004A                     	ds	1
  2385  004B                     ___fladd@bexp:	
  2386                           
  2387                           ; 1 bytes @ 0x2B
  2388  004B                     	ds	1
  2389  004C                     ___fladd@grs:	
  2390                           
  2391                           ; 1 bytes @ 0x2C
  2392  004C                     	ds	1
  2393  004D                     ?___flsub:	
  2394  004D                     ___flsub@a:	
  2395                           ; 4 bytes @ 0x2D
  2396                           
  2397                           
  2398                           ; 4 bytes @ 0x2D
  2399  004D                     	ds	4
  2400  0051                     ___flsub@b:	
  2401                           
  2402                           ; 4 bytes @ 0x31
  2403  0051                     	ds	4
  2404  0055                     ?___flge:	
  2405  0055                     ??___flsub:	
  2406                           ; 1 bit 
  2407                           
  2408  0055                     ?___flmul:	
  2409                           ; 1 bytes @ 0x35
  2410                           
  2411  0055                     ___flge@ff1:	
  2412                           ; 4 bytes @ 0x35
  2413                           
  2414  0055                     ___flmul@b:	
  2415                           ; 4 bytes @ 0x35
  2416                           
  2417                           
  2418                           ; 4 bytes @ 0x35
  2419  0055                     	ds	4
  2420  0059                     ___flge@ff2:	
  2421  0059                     ___flmul@a:	
  2422                           ; 4 bytes @ 0x39
  2423                           
  2424                           
  2425                           ; 4 bytes @ 0x39
  2426  0059                     	ds	4
  2427  005D                     ??___flge:	
  2428  005D                     ??___flmul:	
  2429                           ; 1 bytes @ 0x3D
  2430                           
  2431                           
  2432                           ; 1 bytes @ 0x3D
  2433  005D                     	ds	4
  2434  0061                     ??_Auto_Relay0:	
  2435  0061                     ??_Auto_Relay1:	
  2436                           ; 1 bytes @ 0x41
  2437                           
  2438  0061                     ___flmul@sign:	
  2439                           ; 1 bytes @ 0x41
  2440                           
  2441                           
  2442                           ; 1 bytes @ 0x41
  2443  0061                     	ds	1
  2444  0062                     ___flmul@aexp:	
  2445                           
  2446                           ; 1 bytes @ 0x42
  2447  0062                     	ds	1
  2448  0063                     ___flmul@bexp:	
  2449                           
  2450                           ; 1 bytes @ 0x43
  2451  0063                     	ds	1
  2452  0064                     ___flmul@grs:	
  2453                           
  2454                           ; 4 bytes @ 0x44
  2455  0064                     	ds	4
  2456  0068                     ___flmul@prod:	
  2457                           
  2458                           ; 4 bytes @ 0x48
  2459  0068                     	ds	4
  2460  006C                     ___flmul@temp:	
  2461                           
  2462                           ; 2 bytes @ 0x4C
  2463  006C                     	ds	2
  2464  006E                     ??_log:	
  2465  006E                     ___fltol@sign1:	
  2466                           ; 1 bytes @ 0x4E
  2467                           
  2468  006E                     log@exponent:	
  2469                           ; 1 bytes @ 0x4E
  2470                           
  2471                           
  2472                           ; 2 bytes @ 0x4E
  2473  006E                     	ds	1
  2474  006F                     ___fltol@exp1:	
  2475                           
  2476                           ; 1 bytes @ 0x4F
  2477  006F                     	ds	1
  2478  0070                     ??_USART_put_int:	
  2479  0070                     ??_Save_Log:	
  2480                           ; 1 bytes @ 0x50
  2481                           
  2482  0070                     ??_EEPROM_24C1025_Write_Int:	
  2483                           ; 1 bytes @ 0x50
  2484                           
  2485  0070                     ??_PROCULUS_Show_Screen:	
  2486                           ; 1 bytes @ 0x50
  2487                           
  2488  0070                     ??_PROCULUS_Buzzer:	
  2489                           ; 1 bytes @ 0x50
  2490                           
  2491  0070                     ??_PROCULUS_VP_Write_String:	
  2492                           ; 1 bytes @ 0x50
  2493                           
  2494  0070                     ??_ADC_Read_NTC:	
  2495                           ; 1 bytes @ 0x50
  2496                           
  2497                           
  2498                           	psect	maintext
  2499  05D3                     __pmaintext:	
  2500                           ; 1 bytes @ 0x50
  2501 ;;
  2502 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2503 ;;
  2504 ;; *************** function _main *****************
  2505 ;; Defined at:
  2506 ;;		line 143 in file "SlaveLiofilizadorVer1.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;		None
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  reset           2   78[BANK1 ] unsigned int 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      void 
  2513 ;; Registers used:
  2514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2515 ;; Tracked objects:
  2516 ;;		On entry : B00/0
  2517 ;;		On exit  : 300/300
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2520 ;;      Params:         0       0       0       0       0
  2521 ;;      Locals:         0       0       2       0       0
  2522 ;;      Temps:          0       0       0       3       0
  2523 ;;      Totals:         0       0       2       3       0
  2524 ;;Total ram usage:        5 bytes
  2525 ;; Hardware stack levels required when called:    7
  2526 ;; This function calls:
  2527 ;;		_ADC_init
  2528 ;;		_Auto_Relay0
  2529 ;;		_Auto_Relay1
  2530 ;;		_Decodify_Command
  2531 ;;		_EEPROM_Read_Integer
  2532 ;;		_EEPROM_Write_Integer
  2533 ;;		_I2C_Master_Init
  2534 ;;		_Load_Work
  2535 ;;		_USART_init
  2536 ;;		_mediatemperaturaNTC
  2537 ;;		_my_delay_ms_WDT
  2538 ;; This function is called by:
  2539 ;;		Startup code after reset
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           
  2544                           ;psect for function _main
  2545  05D3                     _main:	
  2546  05D3                     l7344:	
  2547                           ;incstack = 0
  2548                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2549                           
  2550                           
  2551                           ;SlaveLiofilizadorVer1.c: 144:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2552  05D3  3002               	movlw	2
  2553  05D4  1683               	bsf	3,5	;RP0=1, select bank3
  2554  05D5  1703               	bsf	3,6	;RP1=1, select bank3
  2555  05D6  00E0               	movwf	(??_main^(0+384)+2)
  2556  05D7  3004               	movlw	4
  2557  05D8  00DF               	movwf	(??_main^(0+384)+1)
  2558  05D9  30B9               	movlw	185
  2559  05DA  00DE               	movwf	??_main^(0+384)
  2560  05DB                     u6537:	
  2561  05DB  0BDE               	decfsz	??_main^(0+384),f
  2562  05DC  2DDB               	goto	u6537
  2563  05DD  0BDF               	decfsz	(??_main^(0+384)+1),f
  2564  05DE  2DDB               	goto	u6537
  2565  05DF  0BE0               	decfsz	(??_main^(0+384)+2),f
  2566  05E0  2DDB               	goto	u6537
  2567  05E1  2DE2               	nop2
  2568                           
  2569                           ;SlaveLiofilizadorVer1.c: 145:      OSCCONbits.IRCF0=1;
  2570  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  2571  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  2572  05E4  160F               	bsf	15,4	;volatile
  2573                           
  2574                           ;SlaveLiofilizadorVer1.c: 146:      OSCCONbits.IRCF1=1;
  2575  05E5  168F               	bsf	15,5	;volatile
  2576                           
  2577                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF2=1;
  2578  05E6  170F               	bsf	15,6	;volatile
  2579                           
  2580                           ;SlaveLiofilizadorVer1.c: 149:      PORTA=0;
  2581  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  2582  05E8  0185               	clrf	5	;volatile
  2583                           
  2584                           ;SlaveLiofilizadorVer1.c: 150:      PORTB=0;
  2585  05E9  0186               	clrf	6	;volatile
  2586                           
  2587                           ;SlaveLiofilizadorVer1.c: 151:      PORTC=0;
  2588  05EA  0187               	clrf	7	;volatile
  2589                           
  2590                           ;SlaveLiofilizadorVer1.c: 152:      PORTE=0;
  2591  05EB  0189               	clrf	9	;volatile
  2592                           
  2593                           ;SlaveLiofilizadorVer1.c: 153:      TRISA=0b11101111;
  2594  05EC  30EF               	movlw	239
  2595  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  2596  05EE  0085               	movwf	5	;volatile
  2597                           
  2598                           ;SlaveLiofilizadorVer1.c: 154:      TRISB=0b00001111;
  2599  05EF  300F               	movlw	15
  2600  05F0  0086               	movwf	6	;volatile
  2601                           
  2602                           ;SlaveLiofilizadorVer1.c: 155:      TRISC=0xF0;
  2603  05F1  30F0               	movlw	240
  2604  05F2  0087               	movwf	7	;volatile
  2605                           
  2606                           ;SlaveLiofilizadorVer1.c: 156:      TRISE=0xFF;
  2607  05F3  30FF               	movlw	255
  2608  05F4  0089               	movwf	9	;volatile
  2609                           
  2610                           ;SlaveLiofilizadorVer1.c: 158:      ANSEL=0x00000011;
  2611  05F5  3011               	movlw	17
  2612  05F6  1703               	bsf	3,6	;RP1=1, select bank3
  2613  05F7  0088               	movwf	8	;volatile
  2614                           
  2615                           ;SlaveLiofilizadorVer1.c: 159:      ANSELH=0x00000000;
  2616  05F8  0189               	clrf	9	;volatile
  2617                           
  2618                           ;SlaveLiofilizadorVer1.c: 161:      OPTION_REGbits.nRBPU=0;
  2619  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  2620  05FA  1381               	bcf	1,7	;volatile
  2621                           
  2622                           ;SlaveLiofilizadorVer1.c: 162:      WPUB=0b00001111;
  2623  05FB  300F               	movlw	15
  2624  05FC  0095               	movwf	21	;volatile
  2625                           
  2626                           ;SlaveLiofilizadorVer1.c: 165:      PORTBbits.RB7 =1;
  2627  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  2628  05FE  1786               	bsf	6,7	;volatile
  2629                           
  2630                           ;SlaveLiofilizadorVer1.c: 166:      PORTBbits.RB6 =1;
  2631  05FF  1706               	bsf	6,6	;volatile
  2632                           
  2633                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB5=1;
  2634  0600  1686               	bsf	6,5	;volatile
  2635                           
  2636                           ;SlaveLiofilizadorVer1.c: 168:      my_delay_ms_WDT(1000);
  2637  0601  3003               	movlw	3
  2638  0602  01A3               	clrf	my_delay_ms_WDT@time+3
  2639  0603  01A2               	clrf	my_delay_ms_WDT@time+2
  2640  0604  00A1               	movwf	my_delay_ms_WDT@time+1
  2641  0605  30E8               	movlw	232
  2642  0606  00A0               	movwf	my_delay_ms_WDT@time
  2643  0607  160A  158A  2506  120A  118A  	fcall	_my_delay_ms_WDT
  2644                           
  2645                           ;SlaveLiofilizadorVer1.c: 170:      OPTION_REGbits.T0CS=0;
  2646  060C  1683               	bsf	3,5	;RP0=1, select bank1
  2647  060D  1281               	bcf	1,5	;volatile
  2648                           
  2649                           ;SlaveLiofilizadorVer1.c: 171:      OPTION_REGbits.PSA =1;
  2650  060E  1581               	bsf	1,3	;volatile
  2651                           
  2652                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.PS0 =1;
  2653  060F  1401               	bsf	1,0	;volatile
  2654                           
  2655                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PS1 =1;
  2656  0610  1481               	bsf	1,1	;volatile
  2657                           
  2658                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS2 =1;
  2659  0611  1501               	bsf	1,2	;volatile
  2660                           
  2661                           ;SlaveLiofilizadorVer1.c: 175:      INTCONbits.T0IE =0;
  2662  0612  128B               	bcf	11,5	;volatile
  2663                           
  2664                           ;SlaveLiofilizadorVer1.c: 176:      INTCONbits.INTE =0;
  2665  0613  120B               	bcf	11,4	;volatile
  2666                           
  2667                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.GIE =1;
  2668  0614  178B               	bsf	11,7	;volatile
  2669                           
  2670                           ;SlaveLiofilizadorVer1.c: 180:      INTCONbits.PEIE = 1;
  2671  0615  170B               	bsf	11,6	;volatile
  2672                           
  2673                           ;SlaveLiofilizadorVer1.c: 181:      T1CKPS0=1;
  2674  0616  1283               	bcf	3,5	;RP0=0, select bank0
  2675  0617  1610               	bsf	16,4	;volatile
  2676                           
  2677                           ;SlaveLiofilizadorVer1.c: 182:      T1CKPS1=1;
  2678  0618  1690               	bsf	16,5	;volatile
  2679                           
  2680                           ;SlaveLiofilizadorVer1.c: 183:      TMR1CS=0;
  2681  0619  1090               	bcf	16,1	;volatile
  2682                           
  2683                           ;SlaveLiofilizadorVer1.c: 184:      TMR1IE=1;
  2684  061A  1683               	bsf	3,5	;RP0=1, select bank1
  2685  061B  140C               	bsf	12,0	;volatile
  2686                           
  2687                           ;SlaveLiofilizadorVer1.c: 185:      T1CON=1;
  2688  061C  3001               	movlw	1
  2689  061D  1283               	bcf	3,5	;RP0=0, select bank0
  2690  061E  0090               	movwf	16	;volatile
  2691  061F  0064               	clrwdt	;# 
  2692                           
  2693                           ;SlaveLiofilizadorVer1.c: 192:      ADC_init();
  2694  0620  120A  118A  27F0  120A  118A  	fcall	_ADC_init
  2695                           
  2696                           ;SlaveLiofilizadorVer1.c: 193:      I2C_Master_Init(100000);
  2697  0625  3001               	movlw	1
  2698  0626  01B0               	clrf	I2C_Master_Init@c+3
  2699  0627  00AF               	movwf	I2C_Master_Init@c+2
  2700  0628  3086               	movlw	134
  2701  0629  00AE               	movwf	I2C_Master_Init@c+1
  2702  062A  30A0               	movlw	160
  2703  062B  00AD               	movwf	I2C_Master_Init@c
  2704  062C  160A  158A  268C  120A  118A  	fcall	_I2C_Master_Init
  2705                           
  2706                           ;SlaveLiofilizadorVer1.c: 194:      USART_init(115200);
  2707  0631  1283               	bcf	3,5	;RP0=0, select bank0
  2708  0632  3001               	movlw	1
  2709  0633  01A3               	clrf	USART_init@baudrate+3
  2710  0634  00A2               	movwf	USART_init@baudrate+2
  2711  0635  30C2               	movlw	194
  2712  0636  00A1               	movwf	USART_init@baudrate+1
  2713  0637  01A0               	clrf	USART_init@baudrate
  2714  0638  160A  158A  2533  120A  118A  	fcall	_USART_init
  2715                           
  2716                           ;SlaveLiofilizadorVer1.c: 200:      {;SlaveLiofilizadorVer1.c: 201:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 202:      reset=EEPROM_Read_Integer(0x10);
  2717  063D  3010               	movlw	16
  2718  063E  120A  118A  259F  120A  118A  	fcall	_EEPROM_Read_Integer
  2719  0643  0824               	movf	?_EEPROM_Read_Integer+1,w
  2720  0644  1683               	bsf	3,5	;RP0=1, select bank1
  2721  0645  00EF               	movwf	(main@reset+1)^(0+128)
  2722  0646  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0647  0823               	movf	?_EEPROM_Read_Integer,w
  2724  0648  1683               	bsf	3,5	;RP0=1, select bank1
  2725  0649  00EE               	movwf	main@reset^(0+128)
  2726                           
  2727                           ;SlaveLiofilizadorVer1.c: 203:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2728  064A  0F6E               	incfsz	main@reset^(0+128),w
  2729  064B  2E58               	goto	l7414
  2730  064C  0A6F               	incf	(main@reset+1)^(0+128),w
  2731  064D  1D03               	btfss	3,2
  2732  064E  2E58               	goto	l7414
  2733  064F  1283               	bcf	3,5	;RP0=0, select bank0
  2734  0650  3010               	movlw	16
  2735  0651  01A5               	clrf	EEPROM_Write_Integer@dado
  2736  0652  01A6               	clrf	EEPROM_Write_Integer@dado+1
  2737  0653  160A  158A  2701  120A  118A  	fcall	_EEPROM_Write_Integer
  2738  0658                     l7414:	
  2739                           
  2740                           ;SlaveLiofilizadorVer1.c: 204:      reset++;
  2741  0658  1683               	bsf	3,5	;RP0=1, select bank1
  2742  0659  1303               	bcf	3,6	;RP1=0, select bank1
  2743  065A  0AEE               	incf	main@reset^(0+128),f
  2744  065B  1903               	skipnz
  2745  065C  0AEF               	incf	(main@reset+1)^(0+128),f
  2746                           
  2747                           ;SlaveLiofilizadorVer1.c: 205:      EEPROM_Write_Integer(0x10,reset);
  2748  065D  086F               	movf	(main@reset+1)^(0+128),w
  2749  065E  1283               	bcf	3,5	;RP0=0, select bank0
  2750  065F  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2751  0660  1683               	bsf	3,5	;RP0=1, select bank1
  2752  0661  086E               	movf	main@reset^(0+128),w
  2753  0662  1283               	bcf	3,5	;RP0=0, select bank0
  2754  0663  00A5               	movwf	EEPROM_Write_Integer@dado
  2755  0664  3010               	movlw	16
  2756  0665  160A  158A  2701  120A  118A  	fcall	_EEPROM_Write_Integer
  2757                           
  2758                           ;SlaveLiofilizadorVer1.c: 206:      };SlaveLiofilizadorVer1.c: 210:      Delay_Led_Tmr0 
      +                          = 0;
  2759  066A  1683               	bsf	3,5	;RP0=1, select bank3
  2760  066B  1703               	bsf	3,6	;RP1=1, select bank3
  2761  066C  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  2762  066D  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  2763                           
  2764                           ;SlaveLiofilizadorVer1.c: 211:      Delay_Led_Usart = 0;
  2765  066E  01AC               	clrf	_Delay_Led_Usart^(0+384)	;volatile
  2766  066F  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2767                           
  2768                           ;SlaveLiofilizadorVer1.c: 212:      Delay_Led_Memory = 0;
  2769  0670  01B0               	clrf	_Delay_Led_Memory^(0+384)	;volatile
  2770  0671  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  2771                           
  2772                           ;SlaveLiofilizadorVer1.c: 214:      segundo=0;
  2773  0672  01BD               	clrf	_segundo^(0+384)	;volatile
  2774                           
  2775                           ;SlaveLiofilizadorVer1.c: 215:      hora=0;
  2776  0673  01BC               	clrf	_hora^(0+384)	;volatile
  2777                           
  2778                           ;SlaveLiofilizadorVer1.c: 216:      PORTCbits.RC0=0;
  2779  0674  1283               	bcf	3,5	;RP0=0, select bank0
  2780  0675  1303               	bcf	3,6	;RP1=0, select bank0
  2781  0676  1007               	bcf	7,0	;volatile
  2782                           
  2783                           ;SlaveLiofilizadorVer1.c: 217:      PORTCbits.RC1=0;
  2784  0677  1087               	bcf	7,1	;volatile
  2785                           
  2786                           ;SlaveLiofilizadorVer1.c: 218:      PORTAbits.RA2=0;
  2787  0678  1105               	bcf	5,2	;volatile
  2788                           
  2789                           ;SlaveLiofilizadorVer1.c: 219:      PORTAbits.RA3=0;
  2790  0679  1185               	bcf	5,3	;volatile
  2791                           
  2792                           ;SlaveLiofilizadorVer1.c: 222:      Board_Number=(((0x0F)&(~PORTB)));
  2793  067A  0906               	comf	6,w	;volatile
  2794  067B  1683               	bsf	3,5	;RP0=1, select bank3
  2795  067C  1703               	bsf	3,6	;RP1=1, select bank3
  2796  067D  00B4               	movwf	_Board_Number^(0+384)
  2797  067E  300F               	movlw	15
  2798  067F  05B4               	andwf	_Board_Number^(0+384),f
  2799                           
  2800                           ;SlaveLiofilizadorVer1.c: 223:      canal=1;
  2801  0680  01B5               	clrf	_canal^(0+384)
  2802  0681  0AB5               	incf	_canal^(0+384),f
  2803                           
  2804                           ;SlaveLiofilizadorVer1.c: 237:      Load_Work();
  2805  0682  120A  118A  24A6  120A  118A  	fcall	_Load_Work
  2806                           
  2807                           ;SlaveLiofilizadorVer1.c: 238:      generic_status.flag_global_hot=0;
  2808  0687  1376               	bcf	_generic_status,6
  2809  0688                     l7444:	
  2810                           
  2811                           ;SlaveLiofilizadorVer1.c: 244:           {;SlaveLiofilizadorVer1.c: 246:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2812  0688  17F6               	bsf	_generic_status,7
  2813                           
  2814                           ;SlaveLiofilizadorVer1.c: 250:          if(++canal==2) canal=0;
  2815  0689  1683               	bsf	3,5	;RP0=1, select bank3
  2816  068A  1703               	bsf	3,6	;RP1=1, select bank3
  2817  068B  3002               	movlw	2
  2818  068C  0AB5               	incf	_canal^(0+384),f
  2819  068D  0635               	xorwf	_canal^(0+384),w
  2820  068E  1903               	btfsc	3,2
  2821  068F  01B5               	clrf	_canal^(0+384)
  2822                           
  2823                           ;SlaveLiofilizadorVer1.c: 251:          mediatemperaturaNTC(canal);
  2824  0690  0835               	movf	_canal^(0+384),w
  2825  0691  160A  118A  2012  120A  118A  	fcall	_mediatemperaturaNTC
  2826                           
  2827                           ;SlaveLiofilizadorVer1.c: 254:          if(generic_status.flag_global_hot)
  2828  0696  1F76               	btfss	_generic_status,6
  2829  0697  2EA3               	goto	l287
  2830                           
  2831                           ;SlaveLiofilizadorVer1.c: 255:             {;SlaveLiofilizadorVer1.c: 256:              
      +                          Auto_Relay0();
  2832  0698  120A  118A  22EE  120A  118A  	fcall	_Auto_Relay0
  2833                           
  2834                           ;SlaveLiofilizadorVer1.c: 257:              Auto_Relay1();
  2835  069D  120A  118A  2348  120A  118A  	fcall	_Auto_Relay1
  2836                           
  2837                           ;SlaveLiofilizadorVer1.c: 258:             }
  2838  06A2  2EA7               	goto	l288
  2839  06A3                     l287:	
  2840                           ;SlaveLiofilizadorVer1.c: 259:          else
  2841                           
  2842                           
  2843                           ;SlaveLiofilizadorVer1.c: 260:             {;SlaveLiofilizadorVer1.c: 261:             P
      +                          ORTCbits.RC0=0;
  2844  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  2845  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  2846  06A5  1007               	bcf	7,0	;volatile
  2847                           
  2848                           ;SlaveLiofilizadorVer1.c: 262:             PORTCbits.RC1=0;
  2849  06A6  1087               	bcf	7,1	;volatile
  2850  06A7                     l288:	
  2851                           ;SlaveLiofilizadorVer1.c: 263:             }
  2852                           
  2853                           
  2854                           ;SlaveLiofilizadorVer1.c: 281:          if(generic_status.flag_usart_rx==1)
  2855  06A7  1C76               	btfss	_generic_status,0
  2856  06A8  2E88               	goto	l7444
  2857                           
  2858                           ;SlaveLiofilizadorVer1.c: 282:             {;SlaveLiofilizadorVer1.c: 283:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2859  06A9  1283               	bcf	3,5	;RP0=0, select bank2
  2860  06AA  1703               	bsf	3,6	;RP1=1, select bank2
  2861  06AB  0850               	movf	_usart_buffer^(0+256),w	;volatile
  2862  06AC  1683               	bsf	3,5	;RP0=1, select bank3
  2863  06AD  00A5               	movwf	(_header+1)^(0+384)
  2864  06AE  1283               	bcf	3,5	;RP0=0, select bank2
  2865  06AF  0851               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2866  06B0  1683               	bsf	3,5	;RP0=1, select bank3
  2867  06B1  00A4               	movwf	_header^(0+384)
  2868                           
  2869                           ;SlaveLiofilizadorVer1.c: 284:             if(header==0xAABB)
  2870  06B2  3ABB               	xorlw	187
  2871  06B3  30AA               	movlw	170
  2872  06B4  1903               	skipnz
  2873  06B5  0625               	xorwf	(_header+1)^(0+384),w
  2874  06B6  1D03               	btfss	3,2
  2875  06B7  2E88               	goto	l7444
  2876                           
  2877                           ;SlaveLiofilizadorVer1.c: 285:                {;SlaveLiofilizadorVer1.c: 286:           
      +                               destino =usart_buffer[3];
  2878  06B8  1283               	bcf	3,5	;RP0=0, select bank2
  2879  06B9  0853               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2880  06BA  1683               	bsf	3,5	;RP0=1, select bank3
  2881  06BB  00B3               	movwf	_destino^(0+384)
  2882                           
  2883                           ;SlaveLiofilizadorVer1.c: 287:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2884  06BC  0634               	xorwf	_Board_Number^(0+384),w
  2885  06BD  1903               	skipnz
  2886  06BE  2EC1               	goto	l7464
  2887  06BF  0F33               	incfsz	_destino^(0+384),w
  2888  06C0  2E88               	goto	l7444
  2889  06C1                     l7464:	
  2890                           
  2891                           ;SlaveLiofilizadorVer1.c: 288:                       {;SlaveLiofilizadorVer1.c: 289:    
      +                                             Delay_Led_Usart=20;
  2892  06C1  3014               	movlw	20
  2893  06C2  00AC               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  2894  06C3  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2895                           
  2896                           ;SlaveLiofilizadorVer1.c: 290:                       Decodify_Command();
  2897  06C4  120A  158A  2044  120A  118A  	fcall	_Decodify_Command
  2898                           
  2899                           ;SlaveLiofilizadorVer1.c: 291:                       generic_status.flag_usart_rx=0;
  2900  06C9  1076               	bcf	_generic_status,0
  2901                           
  2902                           ;SlaveLiofilizadorVer1.c: 294:             }
  2903  06CA  2E88               	goto	l7444
  2904  06CB                     __end_of_main:	
  2905                           
  2906                           	psect	text1
  2907  1D06                     __ptext1:	
  2908 ;; *************** function _my_delay_ms_WDT *****************
  2909 ;; Defined at:
  2910 ;;		line 13 in file "my_delay.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  time            4    0[BANK0 ] long 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  i               4    6[BANK0 ] long 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0, btemp+1
  2919 ;; Tracked objects:
  2920 ;;		On entry : 300/0
  2921 ;;		On exit  : 300/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2924 ;;      Params:         0       4       0       0       0
  2925 ;;      Locals:         0       4       0       0       0
  2926 ;;      Temps:          0       2       0       0       0
  2927 ;;      Totals:         0      10       0       0       0
  2928 ;;Total ram usage:       10 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    1
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_main
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function _my_delay_ms_WDT
  2940  1D06                     _my_delay_ms_WDT:	
  2941                           
  2942                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
  2943                           
  2944                           ;incstack = 0
  2945                           ; Regs used in _my_delay_ms_WDT: [wreg+status,2+status,0+btemp+1]
  2946  1D06  01A6               	clrf	my_delay_ms_WDT@i
  2947  1D07  01A7               	clrf	my_delay_ms_WDT@i+1
  2948  1D08  01A8               	clrf	my_delay_ms_WDT@i+2
  2949  1D09  01A9               	clrf	my_delay_ms_WDT@i+3
  2950  1D0A                     l5348:	
  2951  1D0A  0829               	movf	my_delay_ms_WDT@i+3,w
  2952  1D0B  3A80               	xorlw	128
  2953  1D0C  00FF               	movwf	127
  2954  1D0D  0823               	movf	my_delay_ms_WDT@time+3,w
  2955  1D0E  3A80               	xorlw	128
  2956  1D0F  027F               	subwf	127,w
  2957  1D10  1D03               	skipz
  2958  1D11  2D1C               	goto	u4593
  2959  1D12  0822               	movf	my_delay_ms_WDT@time+2,w
  2960  1D13  0228               	subwf	my_delay_ms_WDT@i+2,w
  2961  1D14  1D03               	skipz
  2962  1D15  2D1C               	goto	u4593
  2963  1D16  0821               	movf	my_delay_ms_WDT@time+1,w
  2964  1D17  0227               	subwf	my_delay_ms_WDT@i+1,w
  2965  1D18  1D03               	skipz
  2966  1D19  2D1C               	goto	u4593
  2967  1D1A  0820               	movf	my_delay_ms_WDT@time,w
  2968  1D1B  0226               	subwf	my_delay_ms_WDT@i,w
  2969  1D1C                     u4593:	
  2970  1D1C  1803               	btfsc	3,0
  2971  1D1D  0008               	return
  2972  1D1E  0064               	clrwdt	;# 
  2973                           
  2974                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
  2975  1D1F  3003               	movlw	3
  2976  1D20  1283               	bcf	3,5	;RP0=0, select bank0
  2977  1D21  1303               	bcf	3,6	;RP1=0, select bank0
  2978  1D22  00A5               	movwf	??_my_delay_ms_WDT+1
  2979  1D23  3097               	movlw	151
  2980  1D24  00A4               	movwf	??_my_delay_ms_WDT
  2981  1D25                     u6547:	
  2982  1D25  0BA4               	decfsz	??_my_delay_ms_WDT,f
  2983  1D26  2D25               	goto	u6547
  2984  1D27  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
  2985  1D28  2D25               	goto	u6547
  2986                           
  2987                           ;my_delay.c: 19:             }
  2988  1D29  1283               	bcf	3,5	;RP0=0, select bank0
  2989  1D2A  1303               	bcf	3,6	;RP1=0, select bank0
  2990  1D2B  0AA6               	incf	my_delay_ms_WDT@i,f
  2991  1D2C  1903               	skipnz
  2992  1D2D  0AA7               	incf	my_delay_ms_WDT@i+1,f
  2993  1D2E  1903               	skipnz
  2994  1D2F  0AA8               	incf	my_delay_ms_WDT@i+2,f
  2995  1D30  1903               	skipnz
  2996  1D31  0AA9               	incf	my_delay_ms_WDT@i+3,f
  2997  1D32  2D0A               	goto	l5348
  2998  1D33                     __end_of_my_delay_ms_WDT:	
  2999                           
  3000                           	psect	text2
  3001  1012                     __ptext2:	
  3002 ;; *************** function _mediatemperaturaNTC *****************
  3003 ;; Defined at:
  3004 ;;		line 675 in file "SlaveLiofilizadorVer1.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  canal           1    wreg     unsigned char 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  canal           1   52[BANK1 ] unsigned char 
  3009 ;;  Temp            4   53[BANK1 ] float 
  3010 ;;  i               1   57[BANK1 ] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 300/300
  3017 ;;		On exit  : 100/100
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3020 ;;      Params:         0       0       0       0       0
  3021 ;;      Locals:         0       0      10       0       0
  3022 ;;      Temps:          0       0       1       0       0
  3023 ;;      Totals:         0       0      11       0       0
  3024 ;;Total ram usage:       11 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    6
  3027 ;; This function calls:
  3028 ;;		_ADC_Read_NTC
  3029 ;;		_Package_Usart_is_for_me
  3030 ;;		_Rele0Ligado
  3031 ;;		_Rele1Ligado
  3032 ;;		___fladd
  3033 ;;		___fldiv
  3034 ;;		___xxtofl
  3035 ;;		_my_delay_ms
  3036 ;; This function is called by:
  3037 ;;		_main
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           
  3042                           ;psect for function _mediatemperaturaNTC
  3043  1012                     _mediatemperaturaNTC:	
  3044                           
  3045                           ;incstack = 0
  3046                           ; Regs used in _mediatemperaturaNTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3047                           ;mediatemperaturaNTC@canal stored from wreg
  3048  1012  1303               	bcf	3,6	;RP1=0, select bank1
  3049  1013  00D4               	movwf	mediatemperaturaNTC@canal^(0+128)
  3050                           
  3051                           ;SlaveLiofilizadorVer1.c: 675: void mediatemperaturaNTC(unsigned char canal);SlaveLiofil
      +                          izadorVer1.c: 676:      {;SlaveLiofilizadorVer1.c: 677:      float Temp;;SlaveLiofilizad
      +                          orVer1.c: 678:      char i;;SlaveLiofilizadorVer1.c: 680:      ADCON0bits.CHS=canal;
  3052  1014  00CF               	movwf	??_mediatemperaturaNTC^(0+128)
  3053  1015  0DCF               	rlf	??_mediatemperaturaNTC^(0+128),f
  3054  1016  0DCF               	rlf	??_mediatemperaturaNTC^(0+128),f
  3055  1017  1283               	bcf	3,5	;RP0=0, select bank0
  3056  1018  081F               	movf	31,w	;volatile
  3057  1019  1683               	bsf	3,5	;RP0=1, select bank1
  3058  101A  064F               	xorwf	??_mediatemperaturaNTC^(0+128),w
  3059  101B  39C3               	andlw	-61
  3060  101C  064F               	xorwf	??_mediatemperaturaNTC^(0+128),w
  3061  101D  1283               	bcf	3,5	;RP0=0, select bank0
  3062  101E  009F               	movwf	31	;volatile
  3063                           
  3064                           ;SlaveLiofilizadorVer1.c: 681:      my_delay_ms(10);
  3065  101F  300A               	movlw	10
  3066  1020  00A0               	movwf	my_delay_ms@time
  3067  1021  01A1               	clrf	my_delay_ms@time+1
  3068  1022  01A2               	clrf	my_delay_ms@time+2
  3069  1023  01A3               	clrf	my_delay_ms@time+3
  3070  1024  27D4  160A  118A   	fcall	_my_delay_ms
  3071                           
  3072                           ;SlaveLiofilizadorVer1.c: 683:      Temp=0;
  3073  1027  1683               	bsf	3,5	;RP0=1, select bank1
  3074  1028  01D5               	clrf	mediatemperaturaNTC@Temp^(0+128)
  3075  1029  01D6               	clrf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3076  102A  01D7               	clrf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3077  102B  01D8               	clrf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3078                           
  3079                           ;SlaveLiofilizadorVer1.c: 685:      for(i=1;i<15;i++)
  3080  102C  01D9               	clrf	mediatemperaturaNTC@i^(0+128)
  3081  102D  0AD9               	incf	mediatemperaturaNTC@i^(0+128),f
  3082  102E                     l7022:	
  3083                           
  3084                           ;SlaveLiofilizadorVer1.c: 686:          {;SlaveLiofilizadorVer1.c: 687:          Temp+=A
      +                          DC_Read_NTC(canal);
  3085  102E  2337  160A  118A   	fcall	_ADC_Read_NTC
  3086  1031  083C               	movf	(?_ADC_Read_NTC+3)^(0+128),w
  3087  1032  00D3               	movwf	(_mediatemperaturaNTC$2294+3)^(0+128)
  3088  1033  083B               	movf	(?_ADC_Read_NTC+2)^(0+128),w
  3089  1034  00D2               	movwf	(_mediatemperaturaNTC$2294+2)^(0+128)
  3090  1035  083A               	movf	(?_ADC_Read_NTC+1)^(0+128),w
  3091  1036  00D1               	movwf	(_mediatemperaturaNTC$2294+1)^(0+128)
  3092  1037  0839               	movf	?_ADC_Read_NTC^(0+128),w
  3093  1038  00D0               	movwf	_mediatemperaturaNTC$2294^(0+128)
  3094                           
  3095                           ;SlaveLiofilizadorVer1.c: 686:          {;SlaveLiofilizadorVer1.c: 687:          Temp+=A
      +                          DC_Read_NTC(canal);
  3096  1039  0853               	movf	(_mediatemperaturaNTC$2294+3)^(0+128),w
  3097  103A  1283               	bcf	3,5	;RP0=0, select bank0
  3098  103B  00BC               	movwf	___fladd@b+3
  3099  103C  1683               	bsf	3,5	;RP0=1, select bank1
  3100  103D  0852               	movf	(_mediatemperaturaNTC$2294+2)^(0+128),w
  3101  103E  1283               	bcf	3,5	;RP0=0, select bank0
  3102  103F  00BB               	movwf	___fladd@b+2
  3103  1040  1683               	bsf	3,5	;RP0=1, select bank1
  3104  1041  0851               	movf	(_mediatemperaturaNTC$2294+1)^(0+128),w
  3105  1042  1283               	bcf	3,5	;RP0=0, select bank0
  3106  1043  00BA               	movwf	___fladd@b+1
  3107  1044  1683               	bsf	3,5	;RP0=1, select bank1
  3108  1045  0850               	movf	_mediatemperaturaNTC$2294^(0+128),w
  3109  1046  1283               	bcf	3,5	;RP0=0, select bank0
  3110  1047  00B9               	movwf	___fladd@b
  3111  1048  1683               	bsf	3,5	;RP0=1, select bank1
  3112  1049  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3113  104A  1283               	bcf	3,5	;RP0=0, select bank0
  3114  104B  00C0               	movwf	___fladd@a+3
  3115  104C  1683               	bsf	3,5	;RP0=1, select bank1
  3116  104D  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3117  104E  1283               	bcf	3,5	;RP0=0, select bank0
  3118  104F  00BF               	movwf	___fladd@a+2
  3119  1050  1683               	bsf	3,5	;RP0=1, select bank1
  3120  1051  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3121  1052  1283               	bcf	3,5	;RP0=0, select bank0
  3122  1053  00BE               	movwf	___fladd@a+1
  3123  1054  1683               	bsf	3,5	;RP0=1, select bank1
  3124  1055  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3125  1056  1283               	bcf	3,5	;RP0=0, select bank0
  3126  1057  00BD               	movwf	___fladd@a
  3127  1058  21C8  160A  118A   	fcall	___fladd
  3128  105B  083C               	movf	?___fladd+3,w
  3129  105C  1683               	bsf	3,5	;RP0=1, select bank1
  3130  105D  00D8               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3131  105E  1283               	bcf	3,5	;RP0=0, select bank0
  3132  105F  083B               	movf	?___fladd+2,w
  3133  1060  1683               	bsf	3,5	;RP0=1, select bank1
  3134  1061  00D7               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3135  1062  1283               	bcf	3,5	;RP0=0, select bank0
  3136  1063  083A               	movf	?___fladd+1,w
  3137  1064  1683               	bsf	3,5	;RP0=1, select bank1
  3138  1065  00D6               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3139  1066  1283               	bcf	3,5	;RP0=0, select bank0
  3140  1067  0839               	movf	?___fladd,w
  3141  1068  1683               	bsf	3,5	;RP0=1, select bank1
  3142  1069  00D5               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3143                           
  3144                           ;SlaveLiofilizadorVer1.c: 688:          if(Package_Usart_is_for_me()==1) break;
  3145  106A  275F  160A  118A   	fcall	_Package_Usart_is_for_me
  3146  106D  3A01               	xorlw	1
  3147  106E  1903               	btfsc	3,2
  3148  106F  2895               	goto	l7050
  3149                           
  3150                           ;SlaveLiofilizadorVer1.c: 690:          if(generic_status.flag_global_hot)
  3151  1070  1F76               	btfss	_generic_status,6
  3152  1071  288E               	goto	l7046
  3153                           
  3154                           ;SlaveLiofilizadorVer1.c: 691:            {;SlaveLiofilizadorVer1.c: 693:            if(
      +                          (TempoCNT_0==0)&&
  3155  1072  0875               	movf	_TempoCNT_0,w	;volatile
  3156  1073  1D03               	btfss	3,2
  3157  1074  2880               	goto	l7038
  3158  1075  1683               	bsf	3,5	;RP0=1, select bank3
  3159  1076  1703               	bsf	3,6	;RP1=1, select bank3
  3160  1077  0B62               	decfsz	_RL0Status^(0+384),w
  3161  1078  2880               	goto	l7038
  3162  1079  0328               	decf	_Status0^(0+384),w
  3163  107A  0429               	iorwf	(_Status0+1)^(0+384),w
  3164  107B  1D03               	btfss	3,2
  3165  107C  2880               	goto	l7038
  3166                           
  3167                           ;SlaveLiofilizadorVer1.c: 695:               (Status0==1)) Rele0Ligado();
  3168  107D  20F0  160A  118A   	fcall	_Rele0Ligado
  3169  1080                     l7038:	
  3170                           
  3171                           ;SlaveLiofilizadorVer1.c: 697:            if((TempoCNT_1==0)&&
  3172  1080  0874               	movf	_TempoCNT_1,w	;volatile
  3173  1081  1D03               	btfss	3,2
  3174  1082  288E               	goto	l7046
  3175  1083  1683               	bsf	3,5	;RP0=1, select bank3
  3176  1084  1703               	bsf	3,6	;RP1=1, select bank3
  3177  1085  0B61               	decfsz	_RL1Status^(0+384),w
  3178  1086  288E               	goto	l7046
  3179  1087  0326               	decf	_Status1^(0+384),w
  3180  1088  0427               	iorwf	(_Status1+1)^(0+384),w
  3181  1089  1D03               	btfss	3,2
  3182  108A  288E               	goto	l7046
  3183                           
  3184                           ;SlaveLiofilizadorVer1.c: 699:               (Status1==1)) Rele1Ligado();
  3185  108B  2107  160A  118A   	fcall	_Rele1Ligado
  3186  108E                     l7046:	
  3187                           
  3188                           ;SlaveLiofilizadorVer1.c: 702:          }
  3189  108E  1683               	bsf	3,5	;RP0=1, select bank1
  3190  108F  1303               	bcf	3,6	;RP1=0, select bank1
  3191  1090  300F               	movlw	15
  3192  1091  0AD9               	incf	mediatemperaturaNTC@i^(0+128),f
  3193  1092  0259               	subwf	mediatemperaturaNTC@i^(0+128),w
  3194  1093  1C03               	skipc
  3195  1094  282E               	goto	l7022
  3196  1095                     l7050:	
  3197                           
  3198                           ;SlaveLiofilizadorVer1.c: 703:      if(i<10)
  3199  1095  300A               	movlw	10
  3200  1096  1683               	bsf	3,5	;RP0=1, select bank1
  3201  1097  0259               	subwf	mediatemperaturaNTC@i^(0+128),w
  3202  1098  1C03               	btfss	3,0
  3203  1099  0008               	return
  3204                           
  3205                           ;SlaveLiofilizadorVer1.c: 708:      if(i==15)
  3206  109A  300F               	movlw	15
  3207  109B  0659               	xorwf	mediatemperaturaNTC@i^(0+128),w
  3208  109C  1D03               	btfss	3,2
  3209  109D  28AD               	goto	l7058
  3210                           
  3211                           ;SlaveLiofilizadorVer1.c: 709:         Temp/=(i-1);
  3212  109E  0859               	movf	mediatemperaturaNTC@i^(0+128),w
  3213  109F  3EFF               	addlw	255
  3214  10A0  1283               	bcf	3,5	;RP0=0, select bank0
  3215  10A1  00AB               	movwf	___xxtofl@val
  3216  10A2  30FF               	movlw	255
  3217  10A3  1803               	skipnc
  3218  10A4  3000               	movlw	0
  3219  10A5  00AC               	movwf	___xxtofl@val+1
  3220  10A6  01AD               	clrf	___xxtofl@val+2
  3221  10A7  1BAC               	btfsc	___xxtofl@val+1,7
  3222  10A8  03AD               	decf	___xxtofl@val+2,f
  3223  10A9  082D               	movf	___xxtofl@val+2,w
  3224  10AA  00AE               	movwf	___xxtofl@val+3
  3225  10AB  3001               	movlw	1
  3226  10AC  28B4               	goto	L1
  3227  10AD                     l7058:	
  3228                           
  3229                           ;SlaveLiofilizadorVer1.c: 711:         Temp/=(i);
  3230  10AD  0859               	movf	mediatemperaturaNTC@i^(0+128),w
  3231  10AE  1283               	bcf	3,5	;RP0=0, select bank0
  3232  10AF  120A  118A  248C  160A  118A  	fcall	PL78	;call to abstracted procedure
  3233  10B4                     L1:	
  3234  10B4  24A9  160A  118A   	fcall	___xxtofl
  3235  10B7  2775  160A  118A   	fcall	PL18	;call to abstracted procedure
  3236  10BA  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3237  10BB  00A7               	movwf	(___fldiv@b+3)^(0+128)
  3238  10BC  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3239  10BD  00A6               	movwf	(___fldiv@b+2)^(0+128)
  3240  10BE  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3241  10BF  00A5               	movwf	(___fldiv@b+1)^(0+128)
  3242  10C0  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3243  10C1  00A4               	movwf	___fldiv@b^(0+128)
  3244  10C2  2517  160A  118A   	fcall	___fldiv
  3245  10C5  0823               	movf	(?___fldiv+3)^(0+128),w
  3246  10C6  00D8               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3247  10C7  0822               	movf	(?___fldiv+2)^(0+128),w
  3248  10C8  00D7               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3249  10C9  0821               	movf	(?___fldiv+1)^(0+128),w
  3250  10CA  00D6               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3251  10CB  0820               	movf	?___fldiv^(0+128),w
  3252  10CC  00D5               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3253                           
  3254                           ;SlaveLiofilizadorVer1.c: 713:      if(canal==0)
  3255  10CD  0854               	movf	mediatemperaturaNTC@canal^(0+128),w
  3256  10CE  1D03               	btfss	3,2
  3257  10CF  28E0               	goto	l7064
  3258                           
  3259                           ;SlaveLiofilizadorVer1.c: 714:         {;SlaveLiofilizadorVer1.c: 715:         Temperatu
      +                          ra0=Temp;
  3260  10D0  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3261  10D1  1703               	bsf	3,6	;RP1=1, select bank3
  3262  10D2  0097               	movwf	(_Temperatura0+3)^(0+384)
  3263  10D3  1303               	bcf	3,6	;RP1=0, select bank1
  3264  10D4  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3265  10D5  1703               	bsf	3,6	;RP1=1, select bank3
  3266  10D6  0096               	movwf	(_Temperatura0+2)^(0+384)
  3267  10D7  1303               	bcf	3,6	;RP1=0, select bank1
  3268  10D8  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3269  10D9  1703               	bsf	3,6	;RP1=1, select bank3
  3270  10DA  0095               	movwf	(_Temperatura0+1)^(0+384)
  3271  10DB  1303               	bcf	3,6	;RP1=0, select bank1
  3272  10DC  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3273  10DD  1703               	bsf	3,6	;RP1=1, select bank3
  3274  10DE  0094               	movwf	_Temperatura0^(0+384)
  3275                           
  3276                           ;SlaveLiofilizadorVer1.c: 716:         }
  3277  10DF  0008               	return
  3278  10E0                     l7064:	
  3279                           
  3280                           ;SlaveLiofilizadorVer1.c: 718:         {;SlaveLiofilizadorVer1.c: 719:         Temperatu
      +                          ra1=Temp;
  3281  10E0  0858               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3282  10E1  1703               	bsf	3,6	;RP1=1, select bank3
  3283  10E2  0093               	movwf	(_Temperatura1+3)^(0+384)
  3284  10E3  1303               	bcf	3,6	;RP1=0, select bank1
  3285  10E4  0857               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3286  10E5  1703               	bsf	3,6	;RP1=1, select bank3
  3287  10E6  0092               	movwf	(_Temperatura1+2)^(0+384)
  3288  10E7  1303               	bcf	3,6	;RP1=0, select bank1
  3289  10E8  0856               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3290  10E9  1703               	bsf	3,6	;RP1=1, select bank3
  3291  10EA  0091               	movwf	(_Temperatura1+1)^(0+384)
  3292  10EB  1303               	bcf	3,6	;RP1=0, select bank1
  3293  10EC  0855               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3294  10ED  1703               	bsf	3,6	;RP1=1, select bank3
  3295  10EE  0090               	movwf	_Temperatura1^(0+384)
  3296  10EF  0008               	return
  3297  10F0                     __end_of_mediatemperaturaNTC:	
  3298  10F0                     __ptext70:	
  3299 ;; *************** function _Rele0Ligado *****************
  3300 ;; Defined at:
  3301 ;;		line 932 in file "SlaveLiofilizadorVer1.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0
  3310 ;; Tracked objects:
  3311 ;;		On entry : 100/300
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3315 ;;      Params:         0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0
  3318 ;;      Totals:         0       0       0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    1
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_mediatemperaturaNTC
  3326 ;;		_Auto_Relay0
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function _Rele0Ligado
  3332  10F0                     _Rele0Ligado:	
  3333  10F0                     l6886:	
  3334                           ;incstack = 0
  3335                           ; Regs used in _Rele0Ligado: [wreg+status,2+status,0]
  3336                           
  3337                           
  3338                           ;SlaveLiofilizadorVer1.c: 935:         if(TempoCNT_0==0)
  3339  10F0  0875               	movf	_TempoCNT_0,w	;volatile
  3340  10F1  1D03               	btfss	3,2
  3341  10F2  0008               	return
  3342                           
  3343                           ;SlaveLiofilizadorVer1.c: 936:             {;SlaveLiofilizadorVer1.c: 939:             i
      +                          f(PORTCbits.RC0==0)
  3344  10F3  1283               	bcf	3,5	;RP0=0, select bank0
  3345  10F4  1303               	bcf	3,6	;RP1=0, select bank0
  3346  10F5  1807               	btfsc	7,0	;volatile
  3347  10F6  28FF               	goto	l6894
  3348                           
  3349                           ;SlaveLiofilizadorVer1.c: 940:               {;SlaveLiofilizadorVer1.c: 941:            
      +                             TempoCNT_0=TempoON_0;
  3350  10F7  1683               	bsf	3,5	;RP0=1, select bank3
  3351  10F8  1703               	bsf	3,6	;RP1=1, select bank3
  3352  10F9  083A               	movf	_TempoON_0^(0+384),w
  3353  10FA  00F5               	movwf	_TempoCNT_0	;volatile
  3354                           
  3355                           ;SlaveLiofilizadorVer1.c: 942:               PORTCbits.RC0=1;
  3356  10FB  1283               	bcf	3,5	;RP0=0, select bank0
  3357  10FC  1303               	bcf	3,6	;RP1=0, select bank0
  3358  10FD  1407               	bsf	7,0	;volatile
  3359                           
  3360                           ;SlaveLiofilizadorVer1.c: 943:               }
  3361  10FE  0008               	return
  3362  10FF                     l6894:	
  3363                           
  3364                           ;SlaveLiofilizadorVer1.c: 945:               {;SlaveLiofilizadorVer1.c: 946:            
      +                             TempoCNT_0=TempoOFF_0;
  3365  10FF  1683               	bsf	3,5	;RP0=1, select bank3
  3366  1100  1703               	bsf	3,6	;RP1=1, select bank3
  3367  1101  0839               	movf	_TempoOFF_0^(0+384),w
  3368  1102  00F5               	movwf	_TempoCNT_0	;volatile
  3369                           
  3370                           ;SlaveLiofilizadorVer1.c: 947:               PORTCbits.RC0=0;
  3371  1103  1283               	bcf	3,5	;RP0=0, select bank0
  3372  1104  1303               	bcf	3,6	;RP1=0, select bank0
  3373  1105  1007               	bcf	7,0	;volatile
  3374  1106  0008               	return
  3375  1107                     __end_of_Rele0Ligado:	
  3376  1107                     __ptext64:	
  3377 ;; *************** function _Rele1Ligado *****************
  3378 ;; Defined at:
  3379 ;;		line 953 in file "SlaveLiofilizadorVer1.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;		None
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;		None
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1    wreg      void 
  3386 ;; Registers used:
  3387 ;;		wreg, status,2, status,0
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/300
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3393 ;;      Params:         0       0       0       0       0
  3394 ;;      Locals:         0       0       0       0       0
  3395 ;;      Temps:          0       0       0       0       0
  3396 ;;      Totals:         0       0       0       0       0
  3397 ;;Total ram usage:        0 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; Hardware stack levels required when called:    1
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_mediatemperaturaNTC
  3404 ;;		_Auto_Relay1
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           
  3409                           ;psect for function _Rele1Ligado
  3410  1107                     _Rele1Ligado:	
  3411  1107                     l6898:	
  3412                           ;incstack = 0
  3413                           ; Regs used in _Rele1Ligado: [wreg+status,2+status,0]
  3414                           
  3415                           
  3416                           ;SlaveLiofilizadorVer1.c: 956:         if(TempoCNT_1==0)
  3417  1107  0874               	movf	_TempoCNT_1,w	;volatile
  3418  1108  1D03               	btfss	3,2
  3419  1109  0008               	return
  3420                           
  3421                           ;SlaveLiofilizadorVer1.c: 957:             {;SlaveLiofilizadorVer1.c: 960:             i
      +                          f(PORTCbits.RC1==0)
  3422  110A  1283               	bcf	3,5	;RP0=0, select bank0
  3423  110B  1303               	bcf	3,6	;RP1=0, select bank0
  3424  110C  1887               	btfsc	7,1	;volatile
  3425  110D  2916               	goto	l6906
  3426                           
  3427                           ;SlaveLiofilizadorVer1.c: 961:               {;SlaveLiofilizadorVer1.c: 962:            
      +                             TempoCNT_1=TempoON_1;
  3428  110E  1683               	bsf	3,5	;RP0=1, select bank3
  3429  110F  1703               	bsf	3,6	;RP1=1, select bank3
  3430  1110  0837               	movf	_TempoON_1^(0+384),w
  3431  1111  00F4               	movwf	_TempoCNT_1	;volatile
  3432                           
  3433                           ;SlaveLiofilizadorVer1.c: 963:               PORTCbits.RC1=1;
  3434  1112  1283               	bcf	3,5	;RP0=0, select bank0
  3435  1113  1303               	bcf	3,6	;RP1=0, select bank0
  3436  1114  1487               	bsf	7,1	;volatile
  3437                           
  3438                           ;SlaveLiofilizadorVer1.c: 964:               }
  3439  1115  0008               	return
  3440  1116                     l6906:	
  3441                           
  3442                           ;SlaveLiofilizadorVer1.c: 966:               {;SlaveLiofilizadorVer1.c: 967:            
      +                             TempoCNT_1=TempoOFF_1;
  3443  1116  1683               	bsf	3,5	;RP0=1, select bank3
  3444  1117  1703               	bsf	3,6	;RP1=1, select bank3
  3445  1118  0836               	movf	_TempoOFF_1^(0+384),w
  3446  1119  00F4               	movwf	_TempoCNT_1	;volatile
  3447                           
  3448                           ;SlaveLiofilizadorVer1.c: 968:               PORTCbits.RC1=0;
  3449  111A  1283               	bcf	3,5	;RP0=0, select bank0
  3450  111B  1303               	bcf	3,6	;RP1=0, select bank0
  3451  111C  1087               	bcf	7,1	;volatile
  3452  111D  0008               	return
  3453  111E                     __end_of_Rele1Ligado:	
  3454  111E                     __ptext9:	
  3455 ;; *************** function _eval_poly *****************
  3456 ;; Defined at:
  3457 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\evalpoly.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  x               4    0[BANK1 ] PTR int 
  3460 ;;  d               1    4[BANK1 ] PTR const 
  3461 ;;		 -> log@coeff(36), 
  3462 ;;  n               2    5[BANK1 ] int 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  res             4   12[BANK1 ] int 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  4    0[BANK1 ] int 
  3467 ;; Registers used:
  3468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 300/100
  3471 ;;		On exit  : 300/100
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3474 ;;      Params:         0       0       7       0       0
  3475 ;;      Locals:         0       0       4       0       0
  3476 ;;      Temps:          0       0       5       0       0
  3477 ;;      Totals:         0       0      16       0       0
  3478 ;;Total ram usage:       16 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    3
  3481 ;; This function calls:
  3482 ;;		___fladd
  3483 ;;		___flmul
  3484 ;; This function is called by:
  3485 ;;		_log
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           
  3490                           ;psect for function _eval_poly
  3491  111E                     _eval_poly:	
  3492                           
  3493                           ;incstack = 0
  3494                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3495  111E  0825               	movf	eval_poly@n^(0+128),w
  3496  111F  00A7               	movwf	??_eval_poly^(0+128)
  3497  1120  3001               	movlw	1
  3498  1121  1003               	clrc
  3499  1122                     L2:	
  3500  1122  0DA7               	rlf	??_eval_poly^(0+128),f
  3501  1123  3EFF               	addlw	-1
  3502  1124  1003               	clrc
  3503  1125  1D03               	skipz
  3504  1126  2922               	goto	L2
  3505  1127  0D27               	rlf	??_eval_poly^(0+128),w
  3506  1128  0724               	addwf	eval_poly@d^(0+128),w
  3507  1129  0084               	movwf	4
  3508  112A  160A  158A  200A  160A  118A  	fcall	stringdir
  3509  112F  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3510  1130  160A  158A  200A  160A  118A  	fcall	stringdir
  3511  1135  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3512  1136  160A  158A  200A  160A  118A  	fcall	stringdir
  3513  113B  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3514  113C  160A  158A  200A  160A  118A  	fcall	stringdir
  3515  1141  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3516  1142  082B               	movf	(??_eval_poly+4)^(0+128),w
  3517  1143  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3518  1144  082A               	movf	(??_eval_poly+3)^(0+128),w
  3519  1145  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3520  1146  0829               	movf	(??_eval_poly+2)^(0+128),w
  3521  1147  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3522  1148  0828               	movf	(??_eval_poly+1)^(0+128),w
  3523  1149                     L4:	
  3524  1149  00AC               	movwf	eval_poly@res^(0+128)
  3525  114A  0825               	movf	eval_poly@n^(0+128),w
  3526  114B  0426               	iorwf	(eval_poly@n+1)^(0+128),w
  3527  114C  1903               	btfsc	3,2
  3528  114D  29BF               	goto	l6316
  3529  114E  30FF               	movlw	-1
  3530  114F  07A5               	addwf	eval_poly@n^(0+128),f
  3531  1150  1C03               	skipc
  3532  1151  03A6               	decf	(eval_poly@n+1)^(0+128),f
  3533  1152  0825               	movf	eval_poly@n^(0+128),w
  3534  1153  00A7               	movwf	??_eval_poly^(0+128)
  3535  1154  3001               	movlw	1
  3536  1155  1003               	clrc
  3537  1156                     L3:	
  3538  1156  0DA7               	rlf	??_eval_poly^(0+128),f
  3539  1157  3EFF               	addlw	-1
  3540  1158  1003               	clrc
  3541  1159  1D03               	skipz
  3542  115A  2956               	goto	L3
  3543  115B  0D27               	rlf	??_eval_poly^(0+128),w
  3544  115C  0724               	addwf	eval_poly@d^(0+128),w
  3545  115D  0084               	movwf	4
  3546  115E  160A  158A  200A  160A  118A  	fcall	stringdir
  3547  1163  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3548  1164  160A  158A  200A  160A  118A  	fcall	stringdir
  3549  1169  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3550  116A  160A  158A  200A  160A  118A  	fcall	stringdir
  3551  116F  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3552  1170  160A  158A  200A  160A  118A  	fcall	stringdir
  3553  1175  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3554  1176  082B               	movf	(??_eval_poly+4)^(0+128),w
  3555  1177  1283               	bcf	3,5	;RP0=0, select bank0
  3556  1178  00BC               	movwf	___fladd@b+3
  3557  1179  1683               	bsf	3,5	;RP0=1, select bank1
  3558  117A  082A               	movf	(??_eval_poly+3)^(0+128),w
  3559  117B  1283               	bcf	3,5	;RP0=0, select bank0
  3560  117C  00BB               	movwf	___fladd@b+2
  3561  117D  1683               	bsf	3,5	;RP0=1, select bank1
  3562  117E  0829               	movf	(??_eval_poly+2)^(0+128),w
  3563  117F  1283               	bcf	3,5	;RP0=0, select bank0
  3564  1180  00BA               	movwf	___fladd@b+1
  3565  1181  1683               	bsf	3,5	;RP0=1, select bank1
  3566  1182  0828               	movf	(??_eval_poly+1)^(0+128),w
  3567  1183  1283               	bcf	3,5	;RP0=0, select bank0
  3568  1184  00B9               	movwf	___fladd@b
  3569  1185  1683               	bsf	3,5	;RP0=1, select bank1
  3570  1186  082F               	movf	(eval_poly@res+3)^(0+128),w
  3571  1187  1283               	bcf	3,5	;RP0=0, select bank0
  3572  1188  00D8               	movwf	___flmul@b+3
  3573  1189  1683               	bsf	3,5	;RP0=1, select bank1
  3574  118A  082E               	movf	(eval_poly@res+2)^(0+128),w
  3575  118B  1283               	bcf	3,5	;RP0=0, select bank0
  3576  118C  00D7               	movwf	___flmul@b+2
  3577  118D  1683               	bsf	3,5	;RP0=1, select bank1
  3578  118E  082D               	movf	(eval_poly@res+1)^(0+128),w
  3579  118F  1283               	bcf	3,5	;RP0=0, select bank0
  3580  1190  00D6               	movwf	___flmul@b+1
  3581  1191  1683               	bsf	3,5	;RP0=1, select bank1
  3582  1192  082C               	movf	eval_poly@res^(0+128),w
  3583  1193  1283               	bcf	3,5	;RP0=0, select bank0
  3584  1194  00D5               	movwf	___flmul@b
  3585  1195  1683               	bsf	3,5	;RP0=1, select bank1
  3586  1196  0823               	movf	(eval_poly@x+3)^(0+128),w
  3587  1197  1283               	bcf	3,5	;RP0=0, select bank0
  3588  1198  00DC               	movwf	___flmul@a+3
  3589  1199  1683               	bsf	3,5	;RP0=1, select bank1
  3590  119A  0822               	movf	(eval_poly@x+2)^(0+128),w
  3591  119B  1283               	bcf	3,5	;RP0=0, select bank0
  3592  119C  00DB               	movwf	___flmul@a+2
  3593  119D  1683               	bsf	3,5	;RP0=1, select bank1
  3594  119E  0821               	movf	(eval_poly@x+1)^(0+128),w
  3595  119F  1283               	bcf	3,5	;RP0=0, select bank0
  3596  11A0  00DA               	movwf	___flmul@a+1
  3597  11A1  1683               	bsf	3,5	;RP0=1, select bank1
  3598  11A2  0820               	movf	eval_poly@x^(0+128),w
  3599  11A3  1283               	bcf	3,5	;RP0=0, select bank0
  3600  11A4  00D9               	movwf	___flmul@a
  3601  11A5  120A  118A  208A  160A  118A  	fcall	___flmul
  3602  11AA  27A1  160A  118A   	fcall	PL30	;call to abstracted procedure
  3603  11AD  21C8  160A  118A   	fcall	___fladd
  3604  11B0  083C               	movf	?___fladd+3,w
  3605  11B1  1683               	bsf	3,5	;RP0=1, select bank1
  3606  11B2  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3607  11B3  1283               	bcf	3,5	;RP0=0, select bank0
  3608  11B4  083B               	movf	?___fladd+2,w
  3609  11B5  1683               	bsf	3,5	;RP0=1, select bank1
  3610  11B6  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3611  11B7  1283               	bcf	3,5	;RP0=0, select bank0
  3612  11B8  083A               	movf	?___fladd+1,w
  3613  11B9  1683               	bsf	3,5	;RP0=1, select bank1
  3614  11BA  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3615  11BB  1283               	bcf	3,5	;RP0=0, select bank0
  3616  11BC  0839               	movf	?___fladd,w
  3617  11BD  1683               	bsf	3,5	;RP0=1, select bank1
  3618  11BE  2949               	goto	L4
  3619  11BF                     l6316:	
  3620  11BF  082F               	movf	(eval_poly@res+3)^(0+128),w
  3621  11C0  00A3               	movwf	(?_eval_poly+3)^(0+128)
  3622  11C1  082E               	movf	(eval_poly@res+2)^(0+128),w
  3623  11C2  00A2               	movwf	(?_eval_poly+2)^(0+128)
  3624  11C3  082D               	movf	(eval_poly@res+1)^(0+128),w
  3625  11C4  00A1               	movwf	(?_eval_poly+1)^(0+128)
  3626  11C5  082C               	movf	eval_poly@res^(0+128),w
  3627  11C6  00A0               	movwf	?_eval_poly^(0+128)
  3628  11C7  0008               	return
  3629  11C8                     __end_of_eval_poly:	
  3630  11C8                     __ptext68:	
  3631 ;; *************** function ___fladd *****************
  3632 ;; Defined at:
  3633 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  b               4   25[BANK0 ] void 
  3636 ;;  a               4   29[BANK0 ] void 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  grs             1   44[BANK0 ] unsigned char 
  3639 ;;  bexp            1   43[BANK0 ] unsigned char 
  3640 ;;  aexp            1   42[BANK0 ] unsigned char 
  3641 ;;  signs           1   41[BANK0 ] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  4   25[BANK0 ] unsigned char 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0, btemp+1
  3646 ;; Tracked objects:
  3647 ;;		On entry : 300/0
  3648 ;;		On exit  : 300/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3651 ;;      Params:         0       8       0       0       0
  3652 ;;      Locals:         0       4       0       0       0
  3653 ;;      Temps:          0       8       0       0       0
  3654 ;;      Totals:         0      20       0       0       0
  3655 ;;Total ram usage:       20 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    1
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_mediatemperaturaNTC
  3662 ;;		_ADC_Read_NTC
  3663 ;;		___flsub
  3664 ;;		_log
  3665 ;;		_eval_poly
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           
  3670                           ;psect for function ___fladd
  3671  11C8                     ___fladd:	
  3672                           
  3673                           ;incstack = 0
  3674                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3675  11C8  083C               	movf	___fladd@b+3,w
  3676  11C9  00C9               	movwf	___fladd@signs
  3677  11CA  3080               	movlw	128
  3678  11CB  05C9               	andwf	___fladd@signs,f
  3679  11CC  1003               	clrc
  3680  11CD  0D3C               	rlf	___fladd@b+3,w
  3681  11CE  00CB               	movwf	___fladd@bexp
  3682  11CF  1BBB               	btfsc	___fladd@b+2,7
  3683  11D0  144B               	bsf	___fladd@bexp,0
  3684  11D1  084B               	movf	___fladd@bexp,w
  3685  11D2  1903               	btfsc	3,2
  3686  11D3  29DC               	goto	l1285
  3687  11D4  0F4B               	incfsz	___fladd@bexp,w
  3688  11D5  29DA               	goto	l1286
  3689  11D6  01B9               	clrf	___fladd@b
  3690  11D7  01BA               	clrf	___fladd@b+1
  3691  11D8  01BB               	clrf	___fladd@b+2
  3692  11D9  01BC               	clrf	___fladd@b+3
  3693  11DA                     l1286:	
  3694  11DA  17BB               	bsf	___fladd@b+2,7
  3695  11DB  29DF               	goto	L19
  3696  11DC                     l1285:	
  3697  11DC  01B9               	clrf	___fladd@b
  3698  11DD  01BA               	clrf	___fladd@b+1
  3699  11DE  01BB               	clrf	___fladd@b+2
  3700  11DF                     L19:	
  3701  11DF  01BC               	clrf	___fladd@b+3
  3702  11E0  0840               	movf	___fladd@a+3,w
  3703  11E1  00CA               	movwf	___fladd@aexp
  3704  11E2  3080               	movlw	128
  3705  11E3  05CA               	andwf	___fladd@aexp,f
  3706  11E4  084A               	movf	___fladd@aexp,w
  3707  11E5  0649               	xorwf	___fladd@signs,w
  3708  11E6  1D03               	btfss	3,2
  3709  11E7  1749               	bsf	___fladd@signs,6
  3710  11E8  1003               	clrc
  3711  11E9  0D40               	rlf	___fladd@a+3,w
  3712  11EA  00CA               	movwf	___fladd@aexp
  3713  11EB  1BBF               	btfsc	___fladd@a+2,7
  3714  11EC  144A               	bsf	___fladd@aexp,0
  3715  11ED  084A               	movf	___fladd@aexp,w
  3716  11EE  1903               	btfsc	3,2
  3717  11EF  29F8               	goto	l1290
  3718  11F0  0F4A               	incfsz	___fladd@aexp,w
  3719  11F1  29F6               	goto	l1291
  3720  11F2  01BD               	clrf	___fladd@a
  3721  11F3  01BE               	clrf	___fladd@a+1
  3722  11F4  01BF               	clrf	___fladd@a+2
  3723  11F5  01C0               	clrf	___fladd@a+3
  3724  11F6                     l1291:	
  3725  11F6  17BF               	bsf	___fladd@a+2,7
  3726  11F7  29FB               	goto	L20
  3727  11F8                     l1290:	
  3728  11F8  01BD               	clrf	___fladd@a
  3729  11F9  01BE               	clrf	___fladd@a+1
  3730  11FA  01BF               	clrf	___fladd@a+2
  3731  11FB                     L20:	
  3732  11FB  01C0               	clrf	___fladd@a+3
  3733  11FC  084B               	movf	___fladd@bexp,w
  3734  11FD  024A               	subwf	___fladd@aexp,w
  3735  11FE  1803               	skipnc
  3736  11FF  2A22               	goto	l3924
  3737  1200  1F49               	btfss	___fladd@signs,6
  3738  1201  2A04               	goto	l3894
  3739  1202  3080               	movlw	128
  3740  1203  06C9               	xorwf	___fladd@signs,f
  3741  1204                     l3894:	
  3742  1204  084B               	movf	___fladd@bexp,w
  3743  1205  00CC               	movwf	___fladd@grs
  3744  1206  084A               	movf	___fladd@aexp,w
  3745  1207  00CB               	movwf	___fladd@bexp
  3746  1208  084C               	movf	___fladd@grs,w
  3747  1209  00CA               	movwf	___fladd@aexp
  3748  120A  0839               	movf	___fladd@b,w
  3749  120B  00CC               	movwf	___fladd@grs
  3750  120C  083D               	movf	___fladd@a,w
  3751  120D  00B9               	movwf	___fladd@b
  3752  120E  084C               	movf	___fladd@grs,w
  3753  120F  00BD               	movwf	___fladd@a
  3754  1210  083A               	movf	___fladd@b+1,w
  3755  1211  00CC               	movwf	___fladd@grs
  3756  1212  083E               	movf	___fladd@a+1,w
  3757  1213  00BA               	movwf	___fladd@b+1
  3758  1214  084C               	movf	___fladd@grs,w
  3759  1215  00BE               	movwf	___fladd@a+1
  3760  1216  083B               	movf	___fladd@b+2,w
  3761  1217  00CC               	movwf	___fladd@grs
  3762  1218  083F               	movf	___fladd@a+2,w
  3763  1219  00BB               	movwf	___fladd@b+2
  3764  121A  084C               	movf	___fladd@grs,w
  3765  121B  00BF               	movwf	___fladd@a+2
  3766  121C  083C               	movf	___fladd@b+3,w
  3767  121D  00CC               	movwf	___fladd@grs
  3768  121E  0840               	movf	___fladd@a+3,w
  3769  121F  00BC               	movwf	___fladd@b+3
  3770  1220  084C               	movf	___fladd@grs,w
  3771  1221  00C0               	movwf	___fladd@a+3
  3772  1222                     l3924:	
  3773  1222  01CC               	clrf	___fladd@grs
  3774  1223  084A               	movf	___fladd@aexp,w
  3775  1224  00C1               	movwf	??___fladd
  3776  1225  01C2               	clrf	??___fladd+1
  3777  1226  0842               	movf	??___fladd+1,w
  3778  1227  00C4               	movwf	??___fladd+3
  3779  1228  084B               	movf	___fladd@bexp,w
  3780  1229  0241               	subwf	??___fladd,w
  3781  122A  00C3               	movwf	??___fladd+2
  3782  122B  1C03               	skipc
  3783  122C  03C4               	decf	??___fladd+3,f
  3784  122D  0844               	movf	??___fladd+3,w
  3785  122E  3A80               	xorlw	128
  3786  122F  00FF               	movwf	127
  3787  1230  3080               	movlw	128
  3788  1231  027F               	subwf	127,w
  3789  1232  1D03               	skipz
  3790  1233  2A36               	goto	u2735
  3791  1234  301A               	movlw	26
  3792  1235  0243               	subwf	??___fladd+2,w
  3793  1236                     u2735:	
  3794  1236  1C03               	skipc
  3795  1237  2A57               	goto	l3940
  3796  1238  1283               	bcf	3,5	;RP0=0, select bank0
  3797  1239  1303               	bcf	3,6	;RP1=0, select bank0
  3798  123A  083C               	movf	___fladd@b+3,w
  3799  123B  043B               	iorwf	___fladd@b+2,w
  3800  123C  043A               	iorwf	___fladd@b+1,w
  3801  123D  0439               	iorwf	___fladd@b,w
  3802  123E  1903               	btfsc	3,2
  3803  123F  2A42               	goto	u2740
  3804  1240  3001               	movlw	1
  3805  1241  2A43               	goto	u2750
  3806  1242                     u2740:	
  3807  1242  3000               	movlw	0
  3808  1243                     u2750:	
  3809  1243  00CC               	movwf	___fladd@grs
  3810  1244  01B9               	clrf	___fladd@b
  3811  1245  01BA               	clrf	___fladd@b+1
  3812  1246  01BB               	clrf	___fladd@b+2
  3813  1247  01BC               	clrf	___fladd@b+3
  3814  1248  084A               	movf	___fladd@aexp,w
  3815  1249  00CB               	movwf	___fladd@bexp
  3816  124A  2A5D               	goto	l1296
  3817  124B                     l1298:	
  3818  124B  1C4C               	btfss	___fladd@grs,0
  3819  124C  2A52               	goto	l1299
  3820  124D  1003               	clrc
  3821  124E  0C4C               	rrf	___fladd@grs,w
  3822  124F  3801               	iorlw	1
  3823  1250  00CC               	movwf	___fladd@grs
  3824  1251  2A54               	goto	l1300
  3825  1252                     l1299:	
  3826  1252  1003               	clrc
  3827  1253  0CCC               	rrf	___fladd@grs,f
  3828  1254                     l1300:	
  3829  1254  27B3  160A  118A   	fcall	PL48	;call to abstracted procedure
  3830  1257                     l3940:	
  3831  1257  1283               	bcf	3,5	;RP0=0, select bank0
  3832  1258  1303               	bcf	3,6	;RP1=0, select bank0
  3833  1259  084A               	movf	___fladd@aexp,w
  3834  125A  024B               	subwf	___fladd@bexp,w
  3835  125B  1C03               	skipc
  3836  125C  2A4B               	goto	l1298
  3837  125D                     l1296:	
  3838  125D  1B49               	btfsc	___fladd@signs,6
  3839  125E  2A86               	goto	l3960
  3840  125F  084B               	movf	___fladd@bexp,w
  3841  1260  1D03               	btfss	3,2
  3842  1261  2A63               	goto	l3946
  3843  1262  2FCF               	ljmp	PL74	;call to abstracted procedure
  3844  1263                     l3946:	
  3845  1263  083D               	movf	___fladd@a,w
  3846  1264  07B9               	addwf	___fladd@b,f
  3847  1265  083E               	movf	___fladd@a+1,w
  3848  1266  1103               	clrz
  3849  1267  1803               	skipnc
  3850  1268  3E01               	addlw	1
  3851  1269  1D03               	btfss	3,2
  3852  126A  07BA               	addwf	___fladd@b+1,f
  3853  126B  083F               	movf	___fladd@a+2,w
  3854  126C  1103               	clrz
  3855  126D  1803               	skipnc
  3856  126E  3E01               	addlw	1
  3857  126F  1D03               	btfss	3,2
  3858  1270  07BB               	addwf	___fladd@b+2,f
  3859  1271  0840               	movf	___fladd@a+3,w
  3860  1272  1103               	clrz
  3861  1273  1803               	skipnc
  3862  1274  3E01               	addlw	1
  3863  1275  1D03               	btfss	3,2
  3864  1276  07BC               	addwf	___fladd@b+3,f
  3865  1277  1C3C               	btfss	___fladd@b+3,0
  3866  1278  2B02               	goto	l3990
  3867  1279  1C4C               	btfss	___fladd@grs,0
  3868  127A  2A80               	goto	l1307
  3869  127B  1003               	clrc
  3870  127C  0C4C               	rrf	___fladd@grs,w
  3871  127D  3801               	iorlw	1
  3872  127E  00CC               	movwf	___fladd@grs
  3873  127F  2A82               	goto	l1308
  3874  1280                     l1307:	
  3875  1280  1003               	clrc
  3876  1281  0CCC               	rrf	___fladd@grs,f
  3877  1282                     l1308:	
  3878  1282  27B3  160A  118A   	fcall	PL48	;call to abstracted procedure
  3879  1285  2B02               	goto	l3990
  3880  1286                     l3960:	
  3881  1286  083C               	movf	___fladd@b+3,w
  3882  1287  3A80               	xorlw	128
  3883  1288  00FF               	movwf	127
  3884  1289  0840               	movf	___fladd@a+3,w
  3885  128A  3A80               	xorlw	128
  3886  128B  027F               	subwf	127,w
  3887  128C  1D03               	skipz
  3888  128D  2A98               	goto	u2853
  3889  128E  083F               	movf	___fladd@a+2,w
  3890  128F  023B               	subwf	___fladd@b+2,w
  3891  1290  1D03               	skipz
  3892  1291  2A98               	goto	u2853
  3893  1292  083E               	movf	___fladd@a+1,w
  3894  1293  023A               	subwf	___fladd@b+1,w
  3895  1294  1D03               	skipz
  3896  1295  2A98               	goto	u2853
  3897  1296  083D               	movf	___fladd@a,w
  3898  1297  0239               	subwf	___fladd@b,w
  3899  1298                     u2853:	
  3900  1298  1803               	skipnc
  3901  1299  2AD8               	goto	l3970
  3902  129A  30FF               	movlw	255
  3903  129B  00C1               	movwf	??___fladd
  3904  129C  00C2               	movwf	??___fladd+1
  3905  129D  00C3               	movwf	??___fladd+2
  3906  129E  00C4               	movwf	??___fladd+3
  3907  129F  083D               	movf	___fladd@a,w
  3908  12A0  00C5               	movwf	??___fladd+4
  3909  12A1  083E               	movf	___fladd@a+1,w
  3910  12A2  00C6               	movwf	??___fladd+5
  3911  12A3  083F               	movf	___fladd@a+2,w
  3912  12A4  00C7               	movwf	??___fladd+6
  3913  12A5  0840               	movf	___fladd@a+3,w
  3914  12A6  00C8               	movwf	??___fladd+7
  3915  12A7  0839               	movf	___fladd@b,w
  3916  12A8  02C5               	subwf	??___fladd+4,f
  3917  12A9  083A               	movf	___fladd@b+1,w
  3918  12AA  1C03               	skipc
  3919  12AB  0F3A               	incfsz	___fladd@b+1,w
  3920  12AC  02C6               	subwf	??___fladd+5,f
  3921  12AD  083B               	movf	___fladd@b+2,w
  3922  12AE  1C03               	skipc
  3923  12AF  0F3B               	incfsz	___fladd@b+2,w
  3924  12B0  02C7               	subwf	??___fladd+6,f
  3925  12B1  083C               	movf	___fladd@b+3,w
  3926  12B2  1C03               	skipc
  3927  12B3  0F3C               	incfsz	___fladd@b+3,w
  3928  12B4  02C8               	subwf	??___fladd+7,f
  3929  12B5  0845               	movf	??___fladd+4,w
  3930  12B6  07C1               	addwf	??___fladd,f
  3931  12B7  0846               	movf	??___fladd+5,w
  3932  12B8  1803               	skipnc
  3933  12B9  0F46               	incfsz	??___fladd+5,w
  3934  12BA  07C2               	addwf	??___fladd+1,f
  3935  12BB  0847               	movf	??___fladd+6,w
  3936  12BC  1803               	skipnc
  3937  12BD  0F47               	incfsz	??___fladd+6,w
  3938  12BE  07C3               	addwf	??___fladd+2,f
  3939  12BF  0848               	movf	??___fladd+7,w
  3940  12C0  1803               	skipnc
  3941  12C1  0A48               	incf	??___fladd+7,w
  3942  12C2  07C4               	addwf	??___fladd+3,f
  3943  12C3  0844               	movf	??___fladd+3,w
  3944  12C4  00BC               	movwf	___fladd@b+3
  3945  12C5  0843               	movf	??___fladd+2,w
  3946  12C6  00BB               	movwf	___fladd@b+2
  3947  12C7  0842               	movf	??___fladd+1,w
  3948  12C8  00BA               	movwf	___fladd@b+1
  3949  12C9  0841               	movf	??___fladd,w
  3950  12CA  00B9               	movwf	___fladd@b
  3951  12CB  3080               	movlw	128
  3952  12CC  06C9               	xorwf	___fladd@signs,f
  3953  12CD  09CC               	comf	___fladd@grs,f
  3954  12CE  0FCC               	incfsz	___fladd@grs,f
  3955  12CF  2AE6               	goto	l1313
  3956  12D0  0AB9               	incf	___fladd@b,f
  3957  12D1  1903               	skipnz
  3958  12D2  0ABA               	incf	___fladd@b+1,f
  3959  12D3  1903               	skipnz
  3960  12D4  0ABB               	incf	___fladd@b+2,f
  3961  12D5  1903               	skipnz
  3962  12D6  0ABC               	incf	___fladd@b+3,f
  3963  12D7  2AE6               	goto	l1313
  3964  12D8                     l3970:	
  3965  12D8  083D               	movf	___fladd@a,w
  3966  12D9  02B9               	subwf	___fladd@b,f
  3967  12DA  083E               	movf	___fladd@a+1,w
  3968  12DB  1C03               	skipc
  3969  12DC  0F3E               	incfsz	___fladd@a+1,w
  3970  12DD  02BA               	subwf	___fladd@b+1,f
  3971  12DE  083F               	movf	___fladd@a+2,w
  3972  12DF  1C03               	skipc
  3973  12E0  0F3F               	incfsz	___fladd@a+2,w
  3974  12E1  02BB               	subwf	___fladd@b+2,f
  3975  12E2  0840               	movf	___fladd@a+3,w
  3976  12E3  1C03               	skipc
  3977  12E4  0F40               	incfsz	___fladd@a+3,w
  3978  12E5  02BC               	subwf	___fladd@b+3,f
  3979  12E6                     l1313:	
  3980  12E6  083C               	movf	___fladd@b+3,w
  3981  12E7  043B               	iorwf	___fladd@b+2,w
  3982  12E8  043A               	iorwf	___fladd@b+1,w
  3983  12E9  0439               	iorwf	___fladd@b,w
  3984  12EA  1D03               	skipz
  3985  12EB  2B00               	goto	l3988
  3986  12EC  084C               	movf	___fladd@grs,w
  3987  12ED  1D03               	btfss	3,2
  3988  12EE  2B00               	goto	l3988
  3989  12EF  2FCF               	ljmp	PL74	;call to abstracted procedure
  3990  12F0                     l3976:	
  3991  12F0  1003               	clrc
  3992  12F1  0DB9               	rlf	___fladd@b,f
  3993  12F2  0DBA               	rlf	___fladd@b+1,f
  3994  12F3  0DBB               	rlf	___fladd@b+2,f
  3995  12F4  0DBC               	rlf	___fladd@b+3,f
  3996  12F5  1BCC               	btfsc	___fladd@grs,7
  3997  12F6  1439               	bsf	___fladd@b,0
  3998  12F7  1C4C               	btfss	___fladd@grs,0
  3999  12F8  2AFB               	goto	l1318
  4000  12F9  1403               	setc
  4001  12FA  2AFC               	goto	L21
  4002  12FB                     l1318:	
  4003  12FB  1003               	clrc
  4004  12FC                     L21:	
  4005  12FC  0DCC               	rlf	___fladd@grs,f
  4006  12FD  084B               	movf	___fladd@bexp,w
  4007  12FE  1D03               	btfss	3,2
  4008  12FF  03CB               	decf	___fladd@bexp,f
  4009  1300                     l3988:	
  4010  1300  1FBB               	btfss	___fladd@b+2,7
  4011  1301  2AF0               	goto	l3976
  4012  1302                     l3990:	
  4013  1302  01CA               	clrf	___fladd@aexp
  4014  1303  1FCC               	btfss	___fladd@grs,7
  4015  1304  2B0D               	goto	l4000
  4016  1305  084C               	movf	___fladd@grs,w
  4017  1306  397F               	andlw	127
  4018  1307  1903               	btfsc	3,2
  4019  1308  1839               	btfsc	___fladd@b,0
  4020  1309  2B0B               	goto	l3996
  4021  130A  2B0D               	goto	l4000
  4022  130B                     l3996:	
  4023  130B  01CA               	clrf	___fladd@aexp
  4024  130C  0ACA               	incf	___fladd@aexp,f
  4025  130D                     l4000:	
  4026  130D  084A               	movf	___fladd@aexp,w
  4027  130E  1903               	btfsc	3,2
  4028  130F  2B20               	goto	l4012
  4029  1310  0AB9               	incf	___fladd@b,f
  4030  1311  1903               	skipnz
  4031  1312  0ABA               	incf	___fladd@b+1,f
  4032  1313  1903               	skipnz
  4033  1314  0ABB               	incf	___fladd@b+2,f
  4034  1315  1903               	skipnz
  4035  1316  0ABC               	incf	___fladd@b+3,f
  4036  1317  1C3C               	btfss	___fladd@b+3,0
  4037  1318  2B20               	goto	l4012
  4038  1319  0D3C               	rlf	___fladd@b+3,w
  4039  131A  0CBC               	rrf	___fladd@b+3,f
  4040  131B  0CBB               	rrf	___fladd@b+2,f
  4041  131C  0CBA               	rrf	___fladd@b+1,f
  4042  131D  0CB9               	rrf	___fladd@b,f
  4043  131E  0F4B               	incfsz	___fladd@bexp,w
  4044  131F  0ACB               	incf	___fladd@bexp,f
  4045  1320                     l4012:	
  4046  1320  0A4B               	incf	___fladd@bexp,w
  4047  1321  1D03               	btfss	3,2
  4048  1322  084B               	movf	___fladd@bexp,w
  4049  1323  1D03               	btfss	3,2
  4050  1324  2B2C               	goto	l4020
  4051  1325  01B9               	clrf	___fladd@b
  4052  1326  01BA               	clrf	___fladd@b+1
  4053  1327  01BB               	clrf	___fladd@b+2
  4054  1328  01BC               	clrf	___fladd@b+3
  4055  1329  084B               	movf	___fladd@bexp,w
  4056  132A  1903               	btfsc	3,2
  4057  132B  01C9               	clrf	___fladd@signs
  4058  132C                     l4020:	
  4059  132C  1C4B               	btfss	___fladd@bexp,0
  4060  132D  2B30               	goto	l1333
  4061  132E  17BB               	bsf	___fladd@b+2,7
  4062  132F  2B31               	goto	l4024
  4063  1330                     l1333:	
  4064  1330  13BB               	bcf	___fladd@b+2,7
  4065  1331                     l4024:	
  4066  1331  1003               	clrc
  4067  1332  0C4B               	rrf	___fladd@bexp,w
  4068  1333  00BC               	movwf	___fladd@b+3
  4069  1334  1BC9               	btfsc	___fladd@signs,7
  4070  1335  17BC               	bsf	___fladd@b+3,7
  4071  1336  0008               	return
  4072  1337                     __end_of___fladd:	
  4073  1337                     __ptext5:	
  4074 ;; *************** function _ADC_Read_NTC *****************
  4075 ;; Defined at:
  4076 ;;		line 56 in file "adc.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;  canal           1    wreg     unsigned char 
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;  canal           1    0[COMMON] unsigned char 
  4081 ;;  temperatura     4   43[BANK1 ] float 
  4082 ;;  resistencia     4   36[BANK1 ] float 
  4083 ;;  calc            4   30[BANK1 ] float 
  4084 ;;  value           2   41[BANK1 ] unsigned int 
  4085 ;;  B               2   34[BANK1 ] int 
  4086 ;;  i               1   40[BANK1 ] unsigned char 
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  4   25[BANK1 ] float 
  4089 ;; Registers used:
  4090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 300/100
  4093 ;;		On exit  : 300/100
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4096 ;;      Params:         0       0       5       0       0
  4097 ;;      Locals:         0       0      17       0       0
  4098 ;;      Temps:          0       0       0       0       0
  4099 ;;      Totals:         0       0      22       0       0
  4100 ;;Total ram usage:       22 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    5
  4103 ;; This function calls:
  4104 ;;		___fladd
  4105 ;;		___fldiv
  4106 ;;		___flmul
  4107 ;;		___flsub
  4108 ;;		___lwdiv
  4109 ;;		___xxtofl
  4110 ;;		_captura
  4111 ;;		_log
  4112 ;; This function is called by:
  4113 ;;		_mediatemperaturaNTC
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           
  4118                           ;psect for function _ADC_Read_NTC
  4119  1337                     _ADC_Read_NTC:	
  4120                           
  4121                           ;adc.c: 57:     int B = 3975;
  4122                           
  4123                           ;incstack = 0
  4124                           ; Regs used in _ADC_Read_NTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4125  1337  3087               	movlw	135
  4126  1338  00C2               	movwf	ADC_Read_NTC@B^(0+128)
  4127  1339  300F               	movlw	15
  4128  133A  00C3               	movwf	(ADC_Read_NTC@B^(0+128)+1)
  4129                           
  4130                           ;adc.c: 58:     float resistencia;;adc.c: 59:     float temperatura;;adc.c: 60:     floa
      +                          t calc;;adc.c: 61:     unsigned int value;;adc.c: 62:     unsigned char i;;adc.c: 64:   
      +                            value=0;
  4131  133B  01C9               	clrf	ADC_Read_NTC@value^(0+128)
  4132  133C  01CA               	clrf	(ADC_Read_NTC@value+1)^(0+128)
  4133                           
  4134                           ;adc.c: 65:     for(i=1;i<=50;i++)
  4135  133D  01C8               	clrf	ADC_Read_NTC@i^(0+128)
  4136  133E  0AC8               	incf	ADC_Read_NTC@i^(0+128),f
  4137  133F                     l6856:	
  4138                           
  4139                           ;adc.c: 66:         value+=captura();
  4140  133F  267E  160A  118A   	fcall	_captura
  4141  1342  0820               	movf	?_captura,w
  4142  1343  1683               	bsf	3,5	;RP0=1, select bank1
  4143  1344  07C9               	addwf	ADC_Read_NTC@value^(0+128),f
  4144  1345  1803               	skipnc
  4145  1346  0ACA               	incf	(ADC_Read_NTC@value+1)^(0+128),f
  4146  1347  1283               	bcf	3,5	;RP0=0, select bank0
  4147  1348  0821               	movf	?_captura+1,w
  4148  1349  1683               	bsf	3,5	;RP0=1, select bank1
  4149  134A  07CA               	addwf	(ADC_Read_NTC@value+1)^(0+128),f
  4150  134B  3033               	movlw	51
  4151  134C  0AC8               	incf	ADC_Read_NTC@i^(0+128),f
  4152  134D  0248               	subwf	ADC_Read_NTC@i^(0+128),w
  4153  134E  1C03               	skipc
  4154  134F  2B3F               	goto	l6856
  4155                           
  4156                           ;adc.c: 67:     value/=(i-1);
  4157  1350  0848               	movf	ADC_Read_NTC@i^(0+128),w
  4158  1351  1283               	bcf	3,5	;RP0=0, select bank0
  4159  1352  00A0               	movwf	___lwdiv@divisor
  4160  1353  30FF               	movlw	255
  4161  1354  01A1               	clrf	___lwdiv@divisor+1
  4162  1355  07A0               	addwf	___lwdiv@divisor,f
  4163  1356  1803               	skipnc
  4164  1357  0AA1               	incf	___lwdiv@divisor+1,f
  4165  1358  07A1               	addwf	___lwdiv@divisor+1,f
  4166  1359  1683               	bsf	3,5	;RP0=1, select bank1
  4167  135A  084A               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  4168  135B  1283               	bcf	3,5	;RP0=0, select bank0
  4169  135C  00A3               	movwf	___lwdiv@dividend+1
  4170  135D  1683               	bsf	3,5	;RP0=1, select bank1
  4171  135E  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4172  135F  1283               	bcf	3,5	;RP0=0, select bank0
  4173  1360  00A2               	movwf	___lwdiv@dividend
  4174  1361  2654  160A  118A   	fcall	___lwdiv
  4175  1364  0821               	movf	?___lwdiv+1,w
  4176  1365  1683               	bsf	3,5	;RP0=1, select bank1
  4177  1366  00CA               	movwf	(ADC_Read_NTC@value+1)^(0+128)
  4178  1367  1283               	bcf	3,5	;RP0=0, select bank0
  4179  1368  0820               	movf	?___lwdiv,w
  4180  1369  1683               	bsf	3,5	;RP0=1, select bank1
  4181  136A  00C9               	movwf	ADC_Read_NTC@value^(0+128)
  4182                           
  4183                           ;adc.c: 68:     resistencia =(1023.0-value);
  4184  136B  2785  160A  118A   	fcall	PL22	;call to abstracted procedure
  4185  136E  24A9  160A  118A   	fcall	___xxtofl
  4186  1371  278F  160A  118A   	fcall	PL26	;call to abstracted procedure
  4187  1374  3044               	movlw	68
  4188  1375  00D4               	movwf	___flsub@b+3
  4189  1376  307F               	movlw	127
  4190  1377  00D3               	movwf	___flsub@b+2
  4191  1378  30C0               	movlw	192
  4192  1379  00D2               	movwf	___flsub@b+1
  4193  137A  01D1               	clrf	___flsub@b
  4194  137B  2638  160A  118A   	fcall	___flsub
  4195  137E  0850               	movf	?___flsub+3,w
  4196  137F  1683               	bsf	3,5	;RP0=1, select bank1
  4197  1380  00C7               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4198  1381  1283               	bcf	3,5	;RP0=0, select bank0
  4199  1382  084F               	movf	?___flsub+2,w
  4200  1383  1683               	bsf	3,5	;RP0=1, select bank1
  4201  1384  00C6               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4202  1385  1283               	bcf	3,5	;RP0=0, select bank0
  4203  1386  084E               	movf	?___flsub+1,w
  4204  1387  1683               	bsf	3,5	;RP0=1, select bank1
  4205  1388  00C5               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4206  1389  1283               	bcf	3,5	;RP0=0, select bank0
  4207  138A  084D               	movf	?___flsub,w
  4208  138B  1683               	bsf	3,5	;RP0=1, select bank1
  4209  138C  00C4               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4210                           
  4211                           ;adc.c: 69:     resistencia*=(10000.0-value);
  4212  138D  3046               	movlw	70
  4213  138E  1283               	bcf	3,5	;RP0=0, select bank0
  4214  138F  00D4               	movwf	___flsub@b+3
  4215  1390  301C               	movlw	28
  4216  1391  00D3               	movwf	___flsub@b+2
  4217  1392  3040               	movlw	64
  4218  1393  00D2               	movwf	___flsub@b+1
  4219  1394  01D1               	clrf	___flsub@b
  4220  1395  1683               	bsf	3,5	;RP0=1, select bank1
  4221  1396  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4222  1397  2785  160A  118A   	fcall	PL22	;call to abstracted procedure
  4223  139A  24A9  160A  118A   	fcall	___xxtofl
  4224  139D  278F  160A  118A   	fcall	PL26	;call to abstracted procedure
  4225  13A0  2638               	fcall	___flsub
  4226  13A1  0850               	movf	?___flsub+3,w
  4227  13A2  00D8               	movwf	___flmul@b+3
  4228  13A3  084F               	movf	?___flsub+2,w
  4229  13A4  00D7               	movwf	___flmul@b+2
  4230  13A5  084E               	movf	?___flsub+1,w
  4231  13A6  00D6               	movwf	___flmul@b+1
  4232  13A7  084D               	movf	?___flsub,w
  4233  13A8  00D5               	movwf	___flmul@b
  4234  13A9  1683               	bsf	3,5	;RP0=1, select bank1
  4235  13AA  0847               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4236  13AB  1283               	bcf	3,5	;RP0=0, select bank0
  4237  13AC  00DC               	movwf	___flmul@a+3
  4238  13AD  1683               	bsf	3,5	;RP0=1, select bank1
  4239  13AE  0846               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4240  13AF  1283               	bcf	3,5	;RP0=0, select bank0
  4241  13B0  00DB               	movwf	___flmul@a+2
  4242  13B1  1683               	bsf	3,5	;RP0=1, select bank1
  4243  13B2  0845               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4244  13B3  1283               	bcf	3,5	;RP0=0, select bank0
  4245  13B4  00DA               	movwf	___flmul@a+1
  4246  13B5  1683               	bsf	3,5	;RP0=1, select bank1
  4247  13B6  0844               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4248  13B7  1283               	bcf	3,5	;RP0=0, select bank0
  4249  13B8  00D9               	movwf	___flmul@a
  4250  13B9  120A  118A  208A  160A  118A  	fcall	___flmul
  4251  13BE  0858               	movf	?___flmul+3,w
  4252  13BF  1683               	bsf	3,5	;RP0=1, select bank1
  4253  13C0  00C7               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4254  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4255  13C2  0857               	movf	?___flmul+2,w
  4256  13C3  1683               	bsf	3,5	;RP0=1, select bank1
  4257  13C4  00C6               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4258  13C5  1283               	bcf	3,5	;RP0=0, select bank0
  4259  13C6  0856               	movf	?___flmul+1,w
  4260  13C7  1683               	bsf	3,5	;RP0=1, select bank1
  4261  13C8  00C5               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4262  13C9  1283               	bcf	3,5	;RP0=0, select bank0
  4263  13CA  0855               	movf	?___flmul,w
  4264  13CB  1683               	bsf	3,5	;RP0=1, select bank1
  4265  13CC  00C4               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4266                           
  4267                           ;adc.c: 70:     temperatura =value*10000.0/resistencia;
  4268  13CD  0847               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4269  13CE  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4270  13CF  0846               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4271  13D0  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4272  13D1  0845               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4273  13D2  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4274  13D3  0844               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4275  13D4  00A0               	movwf	___fldiv@a^(0+128)
  4276  13D5  3046               	movlw	70
  4277  13D6  1283               	bcf	3,5	;RP0=0, select bank0
  4278  13D7  00D8               	movwf	___flmul@b+3
  4279  13D8  301C               	movlw	28
  4280  13D9  00D7               	movwf	___flmul@b+2
  4281  13DA  3040               	movlw	64
  4282  13DB  00D6               	movwf	___flmul@b+1
  4283  13DC  01D5               	clrf	___flmul@b
  4284  13DD  1683               	bsf	3,5	;RP0=1, select bank1
  4285  13DE  0849               	movf	ADC_Read_NTC@value^(0+128),w
  4286  13DF  2785  160A  118A   	fcall	PL22	;call to abstracted procedure
  4287  13E2  24A9  160A  118A   	fcall	___xxtofl
  4288  13E5  27AA               	fcall	PL46	;call to abstracted procedure
  4289  13E6  120A  118A  208A  160A  118A  	fcall	___flmul
  4290  13EB  0858               	movf	?___flmul+3,w
  4291  13EC  1683               	bsf	3,5	;RP0=1, select bank1
  4292  13ED  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4293  13EE  1283               	bcf	3,5	;RP0=0, select bank0
  4294  13EF  0857               	movf	?___flmul+2,w
  4295  13F0  1683               	bsf	3,5	;RP0=1, select bank1
  4296  13F1  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4297  13F2  1283               	bcf	3,5	;RP0=0, select bank0
  4298  13F3  0856               	movf	?___flmul+1,w
  4299  13F4  1683               	bsf	3,5	;RP0=1, select bank1
  4300  13F5  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4301  13F6  1283               	bcf	3,5	;RP0=0, select bank0
  4302  13F7  0855               	movf	?___flmul,w
  4303  13F8  1683               	bsf	3,5	;RP0=1, select bank1
  4304  13F9  00A4               	movwf	___fldiv@b^(0+128)
  4305  13FA  2517  160A  118A   	fcall	___fldiv
  4306  13FD  2798  160A  118A   	fcall	PL28	;call to abstracted procedure
  4307                           
  4308                           ;adc.c: 71:     calc=temperatura;
  4309  1400  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4310  1401  00C1               	movwf	(ADC_Read_NTC@calc+3)^(0+128)
  4311  1402  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4312  1403  00C0               	movwf	(ADC_Read_NTC@calc+2)^(0+128)
  4313  1404  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4314  1405  00BF               	movwf	(ADC_Read_NTC@calc+1)^(0+128)
  4315  1406  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4316  1407  00BE               	movwf	ADC_Read_NTC@calc^(0+128)
  4317                           
  4318                           ;adc.c: 72:     temperatura =log(calc);
  4319  1408  0841               	movf	(ADC_Read_NTC@calc+3)^(0+128),w
  4320  1409  00B3               	movwf	(log@x+3)^(0+128)
  4321  140A  0840               	movf	(ADC_Read_NTC@calc+2)^(0+128),w
  4322  140B  00B2               	movwf	(log@x+2)^(0+128)
  4323  140C  083F               	movf	(ADC_Read_NTC@calc+1)^(0+128),w
  4324  140D  00B1               	movwf	(log@x+1)^(0+128)
  4325  140E  083E               	movf	ADC_Read_NTC@calc^(0+128),w
  4326  140F  00B0               	movwf	log@x^(0+128)
  4327  1410  268C  160A  118A   	fcall	_log
  4328  1413  0833               	movf	(?_log+3)^(0+128),w
  4329  1414  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4330  1415  0832               	movf	(?_log+2)^(0+128),w
  4331  1416  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4332  1417  0831               	movf	(?_log+1)^(0+128),w
  4333  1418  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4334  1419  0830               	movf	?_log^(0+128),w
  4335  141A  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4336                           
  4337                           ;adc.c: 73:     temperatura/=B;
  4338  141B  0842               	movf	ADC_Read_NTC@B^(0+128),w
  4339  141C  1283               	bcf	3,5	;RP0=0, select bank0
  4340  141D  00AB               	movwf	___xxtofl@val
  4341  141E  1683               	bsf	3,5	;RP0=1, select bank1
  4342  141F  0843               	movf	(ADC_Read_NTC@B+1)^(0+128),w
  4343  1420  1283               	bcf	3,5	;RP0=0, select bank0
  4344  1421  27BC  160A  118A   	fcall	PL54	;call to abstracted procedure
  4345  1424  24A9  160A  118A   	fcall	___xxtofl
  4346  1427  2775  160A  118A   	fcall	PL18	;call to abstracted procedure
  4347  142A  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4348  142B  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4349  142C  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4350  142D  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4351  142E  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4352  142F  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4353  1430  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4354  1431  00A4               	movwf	___fldiv@b^(0+128)
  4355  1432  2517  160A  118A   	fcall	___fldiv
  4356  1435  2798  160A  118A   	fcall	PL28	;call to abstracted procedure
  4357                           
  4358                           ;adc.c: 74:     temperatura+=1/(25+273.15);
  4359  1438  303B               	movlw	59
  4360  1439  1283               	bcf	3,5	;RP0=0, select bank0
  4361  143A  00BC               	movwf	___fladd@b+3
  4362  143B  305B               	movlw	91
  4363  143C  00BB               	movwf	___fladd@b+2
  4364  143D  30CF               	movlw	207
  4365  143E  00BA               	movwf	___fladd@b+1
  4366  143F  300F               	movlw	15
  4367  1440  00B9               	movwf	___fladd@b
  4368  1441  1683               	bsf	3,5	;RP0=1, select bank1
  4369  1442  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4370  1443  1283               	bcf	3,5	;RP0=0, select bank0
  4371  1444  00C0               	movwf	___fladd@a+3
  4372  1445  1683               	bsf	3,5	;RP0=1, select bank1
  4373  1446  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4374  1447  1283               	bcf	3,5	;RP0=0, select bank0
  4375  1448  00BF               	movwf	___fladd@a+2
  4376  1449  1683               	bsf	3,5	;RP0=1, select bank1
  4377  144A  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4378  144B  1283               	bcf	3,5	;RP0=0, select bank0
  4379  144C  00BE               	movwf	___fladd@a+1
  4380  144D  1683               	bsf	3,5	;RP0=1, select bank1
  4381  144E  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4382  144F  1283               	bcf	3,5	;RP0=0, select bank0
  4383  1450  00BD               	movwf	___fladd@a
  4384  1451  21C8  160A  118A   	fcall	___fladd
  4385  1454  083C               	movf	?___fladd+3,w
  4386  1455  1683               	bsf	3,5	;RP0=1, select bank1
  4387  1456  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4388  1457  1283               	bcf	3,5	;RP0=0, select bank0
  4389  1458  083B               	movf	?___fladd+2,w
  4390  1459  1683               	bsf	3,5	;RP0=1, select bank1
  4391  145A  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4392  145B  1283               	bcf	3,5	;RP0=0, select bank0
  4393  145C  083A               	movf	?___fladd+1,w
  4394  145D  1683               	bsf	3,5	;RP0=1, select bank1
  4395  145E  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4396  145F  1283               	bcf	3,5	;RP0=0, select bank0
  4397  1460  0839               	movf	?___fladd,w
  4398  1461  1683               	bsf	3,5	;RP0=1, select bank1
  4399  1462  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4400                           
  4401                           ;adc.c: 75:     temperatura =1/temperatura;
  4402  1463  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4403  1464  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4404  1465  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4405  1466  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4406  1467  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4407  1468  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4408  1469  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4409  146A  00A0               	movwf	___fldiv@a^(0+128)
  4410  146B  303F               	movlw	63
  4411  146C  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4412  146D  3080               	movlw	128
  4413  146E  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4414  146F  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4415  1470  01A4               	clrf	___fldiv@b^(0+128)
  4416  1471  2517  160A  118A   	fcall	___fldiv
  4417  1474  2798  160A  118A   	fcall	PL28	;call to abstracted procedure
  4418                           
  4419                           ;adc.c: 76:     temperatura-=273.15;
  4420  1477  3043               	movlw	67
  4421  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4422  1479  00D0               	movwf	___flsub@a+3
  4423  147A  3088               	movlw	136
  4424  147B  00CF               	movwf	___flsub@a+2
  4425  147C  3093               	movlw	147
  4426  147D  00CE               	movwf	___flsub@a+1
  4427  147E  3033               	movlw	51
  4428  147F  00CD               	movwf	___flsub@a
  4429  1480  1683               	bsf	3,5	;RP0=1, select bank1
  4430  1481  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4431  1482  1283               	bcf	3,5	;RP0=0, select bank0
  4432  1483  00D4               	movwf	___flsub@b+3
  4433  1484  1683               	bsf	3,5	;RP0=1, select bank1
  4434  1485  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4435  1486  1283               	bcf	3,5	;RP0=0, select bank0
  4436  1487  00D3               	movwf	___flsub@b+2
  4437  1488  1683               	bsf	3,5	;RP0=1, select bank1
  4438  1489  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4439  148A  1283               	bcf	3,5	;RP0=0, select bank0
  4440  148B  00D2               	movwf	___flsub@b+1
  4441  148C  1683               	bsf	3,5	;RP0=1, select bank1
  4442  148D  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4443  148E  1283               	bcf	3,5	;RP0=0, select bank0
  4444  148F  00D1               	movwf	___flsub@b
  4445  1490  2638               	fcall	___flsub
  4446  1491  0850               	movf	?___flsub+3,w
  4447  1492  1683               	bsf	3,5	;RP0=1, select bank1
  4448  1493  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4449  1494  1283               	bcf	3,5	;RP0=0, select bank0
  4450  1495  084F               	movf	?___flsub+2,w
  4451  1496  1683               	bsf	3,5	;RP0=1, select bank1
  4452  1497  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4453  1498  1283               	bcf	3,5	;RP0=0, select bank0
  4454  1499  084E               	movf	?___flsub+1,w
  4455  149A  1683               	bsf	3,5	;RP0=1, select bank1
  4456  149B  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4457  149C  1283               	bcf	3,5	;RP0=0, select bank0
  4458  149D  084D               	movf	?___flsub,w
  4459  149E  1683               	bsf	3,5	;RP0=1, select bank1
  4460  149F  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4461                           
  4462                           ;adc.c: 78:     return temperatura;
  4463  14A0  084E               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4464  14A1  00BC               	movwf	(?_ADC_Read_NTC+3)^(0+128)
  4465  14A2  084D               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4466  14A3  00BB               	movwf	(?_ADC_Read_NTC+2)^(0+128)
  4467  14A4  084C               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4468  14A5  00BA               	movwf	(?_ADC_Read_NTC+1)^(0+128)
  4469  14A6  084B               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4470  14A7  00B9               	movwf	?_ADC_Read_NTC^(0+128)
  4471  14A8  0008               	return
  4472  14A9                     __end_of_ADC_Read_NTC:	
  4473  14A9                     __ptext63:	
  4474 ;; *************** function ___xxtofl *****************
  4475 ;; Defined at:
  4476 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  sign            1    wreg     unsigned char 
  4479 ;;  val             4   11[BANK0 ] long 
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;  sign            1   19[BANK0 ] unsigned char 
  4482 ;;  arg             4   21[BANK0 ] unsigned long 
  4483 ;;  exp             1   20[BANK0 ] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  4   11[BANK0 ] unsigned char 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0
  4488 ;; Tracked objects:
  4489 ;;		On entry : 300/0
  4490 ;;		On exit  : 300/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4493 ;;      Params:         0       4       0       0       0
  4494 ;;      Locals:         0       6       0       0       0
  4495 ;;      Temps:          0       4       0       0       0
  4496 ;;      Totals:         0      14       0       0       0
  4497 ;;Total ram usage:       14 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    1
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_mediatemperaturaNTC
  4504 ;;		_Auto_Relay1
  4505 ;;		_Load_Work
  4506 ;;		_ADC_Read_NTC
  4507 ;;		_log
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           
  4512                           ;psect for function ___xxtofl
  4513  14A9                     ___xxtofl:	
  4514                           
  4515                           ;incstack = 0
  4516                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4517                           ;___xxtofl@sign stored from wreg
  4518  14A9  00B3               	movwf	___xxtofl@sign
  4519  14AA  0833               	movf	___xxtofl@sign,w
  4520  14AB  1D03               	btfss	3,2
  4521  14AC  1FAE               	btfss	___xxtofl@val+3,7
  4522  14AD  2CBE               	goto	l4354
  4523  14AE  092B               	comf	___xxtofl@val,w
  4524  14AF  00B5               	movwf	___xxtofl@arg
  4525  14B0  092C               	comf	___xxtofl@val+1,w
  4526  14B1  00B6               	movwf	___xxtofl@arg+1
  4527  14B2  092D               	comf	___xxtofl@val+2,w
  4528  14B3  00B7               	movwf	___xxtofl@arg+2
  4529  14B4  092E               	comf	___xxtofl@val+3,w
  4530  14B5  00B8               	movwf	___xxtofl@arg+3
  4531  14B6  0AB5               	incf	___xxtofl@arg,f
  4532  14B7  1903               	skipnz
  4533  14B8  0AB6               	incf	___xxtofl@arg+1,f
  4534  14B9  1903               	skipnz
  4535  14BA  0AB7               	incf	___xxtofl@arg+2,f
  4536  14BB  1903               	skipnz
  4537  14BC  0AB8               	incf	___xxtofl@arg+3,f
  4538  14BD  2CC6               	goto	l1426
  4539  14BE                     l4354:	
  4540  14BE  082E               	movf	___xxtofl@val+3,w
  4541  14BF  00B8               	movwf	___xxtofl@arg+3
  4542  14C0  082D               	movf	___xxtofl@val+2,w
  4543  14C1  00B7               	movwf	___xxtofl@arg+2
  4544  14C2  082C               	movf	___xxtofl@val+1,w
  4545  14C3  00B6               	movwf	___xxtofl@arg+1
  4546  14C4  082B               	movf	___xxtofl@val,w
  4547  14C5  00B5               	movwf	___xxtofl@arg
  4548  14C6                     l1426:	
  4549  14C6  082E               	movf	___xxtofl@val+3,w
  4550  14C7  042D               	iorwf	___xxtofl@val+2,w
  4551  14C8  042C               	iorwf	___xxtofl@val+1,w
  4552  14C9  042B               	iorwf	___xxtofl@val,w
  4553  14CA  1D03               	skipz
  4554  14CB  2CD1               	goto	l4358
  4555  14CC  01AB               	clrf	?___xxtofl
  4556  14CD  01AC               	clrf	?___xxtofl+1
  4557  14CE  01AD               	clrf	?___xxtofl+2
  4558  14CF  01AE               	clrf	?___xxtofl+3
  4559  14D0  0008               	return
  4560  14D1                     l4358:	
  4561  14D1  3096               	movlw	150
  4562  14D2  00B4               	movwf	___xxtofl@exp
  4563  14D3                     l4362:	
  4564  14D3  30FE               	movlw	254
  4565  14D4  0538               	andwf	___xxtofl@arg+3,w
  4566  14D5  1903               	btfsc	3,2
  4567  14D6  2CE7               	goto	l4366
  4568  14D7  0AB4               	incf	___xxtofl@exp,f
  4569  14D8  27C9  160A  118A   	fcall	PL72	;call to abstracted procedure
  4570  14DB  2CD3               	goto	l4362
  4571  14DC                     l4364:	
  4572  14DC  0AB4               	incf	___xxtofl@exp,f
  4573  14DD  0AB5               	incf	___xxtofl@arg,f
  4574  14DE  1903               	skipnz
  4575  14DF  0AB6               	incf	___xxtofl@arg+1,f
  4576  14E0  1903               	skipnz
  4577  14E1  0AB7               	incf	___xxtofl@arg+2,f
  4578  14E2  1903               	skipnz
  4579  14E3  0AB8               	incf	___xxtofl@arg+3,f
  4580  14E4  27C9  160A  118A   	fcall	PL72	;call to abstracted procedure
  4581  14E7                     l4366:	
  4582  14E7  30FF               	movlw	255
  4583  14E8  0538               	andwf	___xxtofl@arg+3,w
  4584  14E9  1903               	btfsc	3,2
  4585  14EA  2CF6               	goto	l4370
  4586  14EB  2CDC               	goto	l4364
  4587  14EC                     l4372:	
  4588  14EC  3002               	movlw	2
  4589  14ED  0234               	subwf	___xxtofl@exp,w
  4590  14EE  1C03               	btfss	3,0
  4591  14EF  2CF8               	goto	l1439
  4592  14F0  03B4               	decf	___xxtofl@exp,f
  4593  14F1  1003               	clrc
  4594  14F2  0DB5               	rlf	___xxtofl@arg,f
  4595  14F3  0DB6               	rlf	___xxtofl@arg+1,f
  4596  14F4  0DB7               	rlf	___xxtofl@arg+2,f
  4597  14F5  0DB8               	rlf	___xxtofl@arg+3,f
  4598  14F6                     l4370:	
  4599  14F6  1FB7               	btfss	___xxtofl@arg+2,7
  4600  14F7  2CEC               	goto	l4372
  4601  14F8                     l1439:	
  4602  14F8  1C34               	btfss	___xxtofl@exp,0
  4603  14F9  13B7               	bcf	___xxtofl@arg+2,7
  4604  14FA  1003               	clrc
  4605  14FB  0CB4               	rrf	___xxtofl@exp,f
  4606  14FC  0834               	movf	___xxtofl@exp,w
  4607  14FD  00B2               	movwf	??___xxtofl+3
  4608  14FE  01B1               	clrf	??___xxtofl+2
  4609  14FF  01B0               	clrf	??___xxtofl+1
  4610  1500  01AF               	clrf	??___xxtofl
  4611  1501  082F               	movf	??___xxtofl,w
  4612  1502  04B5               	iorwf	___xxtofl@arg,f
  4613  1503  0830               	movf	??___xxtofl+1,w
  4614  1504  04B6               	iorwf	___xxtofl@arg+1,f
  4615  1505  0831               	movf	??___xxtofl+2,w
  4616  1506  04B7               	iorwf	___xxtofl@arg+2,f
  4617  1507  0832               	movf	??___xxtofl+3,w
  4618  1508  04B8               	iorwf	___xxtofl@arg+3,f
  4619  1509  0833               	movf	___xxtofl@sign,w
  4620  150A  1D03               	btfss	3,2
  4621  150B  1FAE               	btfss	___xxtofl@val+3,7
  4622  150C  2D0E               	goto	l4384
  4623  150D  17B8               	bsf	___xxtofl@arg+3,7
  4624  150E                     l4384:	
  4625  150E  0838               	movf	___xxtofl@arg+3,w
  4626  150F  00AE               	movwf	?___xxtofl+3
  4627  1510  0837               	movf	___xxtofl@arg+2,w
  4628  1511  00AD               	movwf	?___xxtofl+2
  4629  1512  0836               	movf	___xxtofl@arg+1,w
  4630  1513  00AC               	movwf	?___xxtofl+1
  4631  1514  0835               	movf	___xxtofl@arg,w
  4632  1515  00AB               	movwf	?___xxtofl
  4633  1516  0008               	return
  4634  1517                     __end_of___xxtofl:	
  4635  1517                     __ptext41:	
  4636 ;; *************** function ___fldiv *****************
  4637 ;; Defined at:
  4638 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  a               4    0[BANK1 ] void 
  4641 ;;  b               4    4[BANK1 ] void 
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;  grs             4   19[BANK1 ] unsigned long 
  4644 ;;  rem             4   12[BANK1 ] unsigned long 
  4645 ;;  new_exp         2   17[BANK1 ] int 
  4646 ;;  aexp            1   24[BANK1 ] unsigned char 
  4647 ;;  bexp            1   23[BANK1 ] unsigned char 
  4648 ;;  sign            1   16[BANK1 ] unsigned char 
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  4    0[BANK1 ] unsigned char 
  4651 ;; Registers used:
  4652 ;;		wreg, status,2, status,0, btemp+1
  4653 ;; Tracked objects:
  4654 ;;		On entry : 300/100
  4655 ;;		On exit  : 300/100
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4658 ;;      Params:         0       0       8       0       0
  4659 ;;      Locals:         0       0      13       0       0
  4660 ;;      Temps:          0       0       4       0       0
  4661 ;;      Totals:         0       0      25       0       0
  4662 ;;Total ram usage:       25 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; Hardware stack levels required when called:    1
  4665 ;; This function calls:
  4666 ;;		Nothing
  4667 ;; This function is called by:
  4668 ;;		_mediatemperaturaNTC
  4669 ;;		_Load_Work
  4670 ;;		_ADC_Read_NTC
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           
  4675                           ;psect for function ___fldiv
  4676  1517                     ___fldiv:	
  4677                           
  4678                           ;incstack = 0
  4679                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4680  1517  0827               	movf	(___fldiv@b^(0+128)+3),w
  4681  1518  00B0               	movwf	___fldiv@sign^(0+128)
  4682  1519  3080               	movlw	128
  4683  151A  05B0               	andwf	___fldiv@sign^(0+128),f
  4684  151B  1003               	clrc
  4685  151C  0D27               	rlf	(___fldiv@b^(0+128)+3),w
  4686  151D  00B7               	movwf	___fldiv@bexp^(0+128)
  4687  151E  1BA6               	btfsc	(___fldiv@b^(0+128)+2),7
  4688  151F  1437               	bsf	___fldiv@bexp^(0+128),0
  4689  1520  0837               	movf	___fldiv@bexp^(0+128),w
  4690  1521  1903               	btfsc	3,2
  4691  1522  2D2C               	goto	l1342
  4692  1523  0F37               	incfsz	___fldiv@bexp^(0+128),w
  4693  1524  2D29               	goto	l1343
  4694  1525  01A4               	clrf	___fldiv@b^(0+128)
  4695  1526  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4696  1527  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4697  1528  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4698  1529                     l1343:	
  4699  1529  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  4700  152A  01A7               	clrf	(___fldiv@b^(0+128)+3)
  4701  152B  2D30               	goto	l4702
  4702  152C                     l1342:	
  4703  152C  01A4               	clrf	___fldiv@b^(0+128)
  4704  152D  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4705  152E  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4706  152F  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4707  1530                     l4702:	
  4708  1530  0823               	movf	(___fldiv@a^(0+128)+3),w
  4709  1531  3980               	andlw	128
  4710  1532  06B0               	xorwf	___fldiv@sign^(0+128),f
  4711  1533  1003               	clrc
  4712  1534  0D23               	rlf	(___fldiv@a^(0+128)+3),w
  4713  1535  00B8               	movwf	___fldiv@aexp^(0+128)
  4714  1536  1BA2               	btfsc	(___fldiv@a^(0+128)+2),7
  4715  1537  1438               	bsf	___fldiv@aexp^(0+128),0
  4716  1538  0838               	movf	___fldiv@aexp^(0+128),w
  4717  1539  1903               	btfsc	3,2
  4718  153A  2D44               	goto	l1346
  4719  153B  0F38               	incfsz	___fldiv@aexp^(0+128),w
  4720  153C  2D41               	goto	l1347
  4721  153D  01A0               	clrf	___fldiv@a^(0+128)
  4722  153E  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4723  153F  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4724  1540  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4725  1541                     l1347:	
  4726  1541  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  4727  1542  01A3               	clrf	(___fldiv@a^(0+128)+3)
  4728  1543  2D48               	goto	l4716
  4729  1544                     l1346:	
  4730  1544  01A0               	clrf	___fldiv@a^(0+128)
  4731  1545  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4732  1546  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4733  1547  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4734  1548                     l4716:	
  4735  1548  0823               	movf	(___fldiv@a+3)^(0+128),w
  4736  1549  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  4737  154A  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  4738  154B  0420               	iorwf	___fldiv@a^(0+128),w
  4739  154C  1D03               	skipz
  4740  154D  2D61               	goto	l4728
  4741  154E  3080               	movlw	128
  4742  154F  01A4               	clrf	___fldiv@b^(0+128)
  4743  1550  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4744  1551  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4745  1552  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4746  1553  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  4747  1554  307F               	movlw	127
  4748  1555  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  4749  1556                     L17:	
  4750  1556  0830               	movf	___fldiv@sign^(0+128),w
  4751  1557  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  4752  1558  0827               	movf	(___fldiv@b+3)^(0+128),w
  4753  1559  00A3               	movwf	(?___fldiv+3)^(0+128)
  4754  155A  0826               	movf	(___fldiv@b+2)^(0+128),w
  4755  155B  00A2               	movwf	(?___fldiv+2)^(0+128)
  4756  155C  0825               	movf	(___fldiv@b+1)^(0+128),w
  4757  155D  00A1               	movwf	(?___fldiv+1)^(0+128)
  4758  155E  0824               	movf	___fldiv@b^(0+128),w
  4759  155F  00A0               	movwf	?___fldiv^(0+128)
  4760  1560  0008               	return
  4761  1561                     l4728:	
  4762  1561  0837               	movf	___fldiv@bexp^(0+128),w
  4763  1562  1D03               	btfss	3,2
  4764  1563  2D69               	goto	l4736
  4765  1564  01A0               	clrf	?___fldiv^(0+128)
  4766  1565  01A1               	clrf	(?___fldiv+1)^(0+128)
  4767  1566  01A2               	clrf	(?___fldiv+2)^(0+128)
  4768  1567  01A3               	clrf	(?___fldiv+3)^(0+128)
  4769  1568  0008               	return
  4770  1569                     l4736:	
  4771  1569  0837               	movf	___fldiv@bexp^(0+128),w
  4772  156A  00B1               	movwf	___fldiv@new_exp^(0+128)
  4773  156B  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4774  156C  0838               	movf	___fldiv@aexp^(0+128),w
  4775  156D  02B1               	subwf	___fldiv@new_exp^(0+128),f
  4776  156E  1C03               	skipc
  4777  156F  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4778  1570  307F               	movlw	127
  4779  1571  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4780  1572  1803               	skipnc
  4781  1573  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  4782  1574  0827               	movf	(___fldiv@b+3)^(0+128),w
  4783  1575  00AF               	movwf	(___fldiv@rem+3)^(0+128)
  4784  1576  0826               	movf	(___fldiv@b+2)^(0+128),w
  4785  1577  00AE               	movwf	(___fldiv@rem+2)^(0+128)
  4786  1578  0825               	movf	(___fldiv@b+1)^(0+128),w
  4787  1579  00AD               	movwf	(___fldiv@rem+1)^(0+128)
  4788  157A  0824               	movf	___fldiv@b^(0+128),w
  4789  157B  00AC               	movwf	___fldiv@rem^(0+128)
  4790  157C  01A4               	clrf	___fldiv@b^(0+128)
  4791  157D  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4792  157E  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4793  157F  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4794  1580  01B3               	clrf	___fldiv@grs^(0+128)
  4795  1581  01B4               	clrf	(___fldiv@grs+1)^(0+128)
  4796  1582  01B5               	clrf	(___fldiv@grs+2)^(0+128)
  4797  1583  01B6               	clrf	(___fldiv@grs+3)^(0+128)
  4798  1584  01B8               	clrf	___fldiv@aexp^(0+128)
  4799  1585                     l4762:	
  4800  1585  301A               	movlw	26
  4801  1586  0238               	subwf	___fldiv@aexp^(0+128),w
  4802  1587  1803               	btfsc	3,0
  4803  1588  2DBE               	goto	l4764
  4804  1589  0838               	movf	___fldiv@aexp^(0+128),w
  4805  158A  1903               	btfsc	3,2
  4806  158B  2D9D               	goto	l4754
  4807  158C  1003               	clrc
  4808  158D  0DAC               	rlf	___fldiv@rem^(0+128),f
  4809  158E  0DAD               	rlf	(___fldiv@rem+1)^(0+128),f
  4810  158F  0DAE               	rlf	(___fldiv@rem+2)^(0+128),f
  4811  1590  0DAF               	rlf	(___fldiv@rem+3)^(0+128),f
  4812  1591  1003               	clrc
  4813  1592  0DA4               	rlf	___fldiv@b^(0+128),f
  4814  1593  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4815  1594  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4816  1595  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4817  1596  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4818  1597  1424               	bsf	___fldiv@b^(0+128),0
  4819  1598  1003               	clrc
  4820  1599  0DB3               	rlf	___fldiv@grs^(0+128),f
  4821  159A  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4822  159B  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4823  159C  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4824  159D                     l4754:	
  4825  159D  0823               	movf	(___fldiv@a+3)^(0+128),w
  4826  159E  022F               	subwf	(___fldiv@rem+3)^(0+128),w
  4827  159F  1D03               	skipz
  4828  15A0  2DAB               	goto	u4045
  4829  15A1  0822               	movf	(___fldiv@a+2)^(0+128),w
  4830  15A2  022E               	subwf	(___fldiv@rem+2)^(0+128),w
  4831  15A3  1D03               	skipz
  4832  15A4  2DAB               	goto	u4045
  4833  15A5  0821               	movf	(___fldiv@a+1)^(0+128),w
  4834  15A6  022D               	subwf	(___fldiv@rem+1)^(0+128),w
  4835  15A7  1D03               	skipz
  4836  15A8  2DAB               	goto	u4045
  4837  15A9  0820               	movf	___fldiv@a^(0+128),w
  4838  15AA  022C               	subwf	___fldiv@rem^(0+128),w
  4839  15AB                     u4045:	
  4840  15AB  1C03               	skipc
  4841  15AC  2DBC               	goto	l4760
  4842  15AD  1736               	bsf	(___fldiv@grs^(0+128)+3),6
  4843  15AE  0820               	movf	___fldiv@a^(0+128),w
  4844  15AF  02AC               	subwf	___fldiv@rem^(0+128),f
  4845  15B0  0821               	movf	(___fldiv@a+1)^(0+128),w
  4846  15B1  1C03               	skipc
  4847  15B2  0F21               	incfsz	(___fldiv@a+1)^(0+128),w
  4848  15B3  02AD               	subwf	(___fldiv@rem+1)^(0+128),f
  4849  15B4  0822               	movf	(___fldiv@a+2)^(0+128),w
  4850  15B5  1C03               	skipc
  4851  15B6  0F22               	incfsz	(___fldiv@a+2)^(0+128),w
  4852  15B7  02AE               	subwf	(___fldiv@rem+2)^(0+128),f
  4853  15B8  0823               	movf	(___fldiv@a+3)^(0+128),w
  4854  15B9  1C03               	skipc
  4855  15BA  0F23               	incfsz	(___fldiv@a+3)^(0+128),w
  4856  15BB  02AF               	subwf	(___fldiv@rem+3)^(0+128),f
  4857  15BC                     l4760:	
  4858  15BC  0AB8               	incf	___fldiv@aexp^(0+128),f
  4859  15BD  2D85               	goto	l4762
  4860  15BE                     l4764:	
  4861  15BE  082F               	movf	(___fldiv@rem+3)^(0+128),w
  4862  15BF  042E               	iorwf	(___fldiv@rem+2)^(0+128),w
  4863  15C0  042D               	iorwf	(___fldiv@rem+1)^(0+128),w
  4864  15C1  042C               	iorwf	___fldiv@rem^(0+128),w
  4865  15C2  1D03               	btfss	3,2
  4866  15C3  1433               	bsf	___fldiv@grs^(0+128),0
  4867  15C4                     l4778:	
  4868  15C4  1BA6               	btfsc	(___fldiv@b+2)^(0+128),7
  4869  15C5  2DD7               	goto	l4780
  4870  15C6  1003               	clrc
  4871  15C7  0DA4               	rlf	___fldiv@b^(0+128),f
  4872  15C8  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4873  15C9  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4874  15CA  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4875  15CB  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4876  15CC  1424               	bsf	___fldiv@b^(0+128),0
  4877  15CD  30FF               	movlw	-1
  4878  15CE  1003               	clrc
  4879  15CF  0DB3               	rlf	___fldiv@grs^(0+128),f
  4880  15D0  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4881  15D1  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4882  15D2  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4883  15D3  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4884  15D4  1C03               	skipc
  4885  15D5  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4886  15D6  2DC4               	goto	l4778
  4887  15D7                     l4780:	
  4888  15D7  01B8               	clrf	___fldiv@aexp^(0+128)
  4889  15D8  1FB6               	btfss	(___fldiv@grs+3)^(0+128),7
  4890  15D9  2DED               	goto	l4790
  4891  15DA  0833               	movf	___fldiv@grs^(0+128),w
  4892  15DB  00A8               	movwf	??___fldiv^(0+128)
  4893  15DC  0834               	movf	(___fldiv@grs+1)^(0+128),w
  4894  15DD  00A9               	movwf	(??___fldiv^(0+128)+1)
  4895  15DE  0835               	movf	(___fldiv@grs+2)^(0+128),w
  4896  15DF  00AA               	movwf	(??___fldiv^(0+128)+2)
  4897  15E0  307F               	movlw	127
  4898  15E1  0536               	andwf	(___fldiv@grs+3)^(0+128),w
  4899  15E2  00AB               	movwf	(??___fldiv^(0+128)+3)
  4900  15E3  082B               	movf	(??___fldiv+3)^(0+128),w
  4901  15E4  042A               	iorwf	(??___fldiv+2)^(0+128),w
  4902  15E5  0429               	iorwf	(??___fldiv+1)^(0+128),w
  4903  15E6  0428               	iorwf	??___fldiv^(0+128),w
  4904  15E7  1903               	skipnz
  4905  15E8  1824               	btfsc	___fldiv@b^(0+128),0
  4906  15E9  2DEB               	goto	l4786
  4907  15EA  2DED               	goto	l4790
  4908  15EB                     l4786:	
  4909  15EB  01B8               	clrf	___fldiv@aexp^(0+128)
  4910  15EC  0AB8               	incf	___fldiv@aexp^(0+128),f
  4911  15ED                     l4790:	
  4912  15ED  0838               	movf	___fldiv@aexp^(0+128),w
  4913  15EE  1903               	btfsc	3,2
  4914  15EF  2E01               	goto	l4800
  4915  15F0  0AA4               	incf	___fldiv@b^(0+128),f
  4916  15F1  1903               	skipnz
  4917  15F2  0AA5               	incf	(___fldiv@b+1)^(0+128),f
  4918  15F3  1903               	skipnz
  4919  15F4  0AA6               	incf	(___fldiv@b+2)^(0+128),f
  4920  15F5  1903               	skipnz
  4921  15F6  0AA7               	incf	(___fldiv@b+3)^(0+128),f
  4922  15F7  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  4923  15F8  2E01               	goto	l4800
  4924  15F9  0D27               	rlf	(___fldiv@b+3)^(0+128),w
  4925  15FA  0CA7               	rrf	(___fldiv@b+3)^(0+128),f
  4926  15FB  0CA6               	rrf	(___fldiv@b+2)^(0+128),f
  4927  15FC  0CA5               	rrf	(___fldiv@b+1)^(0+128),f
  4928  15FD  0CA4               	rrf	___fldiv@b^(0+128),f
  4929  15FE  0AB1               	incf	___fldiv@new_exp^(0+128),f
  4930  15FF  1903               	skipnz
  4931  1600  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  4932  1601                     l4800:	
  4933  1601  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  4934  1602  3A80               	xorlw	128
  4935  1603  00FF               	movwf	127
  4936  1604  3080               	movlw	128
  4937  1605  027F               	subwf	127,w
  4938  1606  1D03               	skipz
  4939  1607  2E0A               	goto	u4145
  4940  1608  30FF               	movlw	255
  4941  1609  0231               	subwf	___fldiv@new_exp^(0+128),w
  4942  160A                     u4145:	
  4943  160A  1C03               	skipc
  4944  160B  2E15               	goto	l4806
  4945  160C  30FF               	movlw	255
  4946  160D  1683               	bsf	3,5	;RP0=1, select bank1
  4947  160E  1303               	bcf	3,6	;RP1=0, select bank1
  4948  160F  00B1               	movwf	___fldiv@new_exp^(0+128)
  4949  1610  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4950  1611  01A4               	clrf	___fldiv@b^(0+128)
  4951  1612  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4952  1613  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4953  1614  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4954  1615                     l4806:	
  4955  1615  1683               	bsf	3,5	;RP0=1, select bank1
  4956  1616  1303               	bcf	3,6	;RP1=0, select bank1
  4957  1617  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  4958  1618  3A80               	xorlw	128
  4959  1619  00FF               	movwf	127
  4960  161A  3080               	movlw	128
  4961  161B  027F               	subwf	127,w
  4962  161C  1D03               	skipz
  4963  161D  2E20               	goto	u4155
  4964  161E  3001               	movlw	1
  4965  161F  0231               	subwf	___fldiv@new_exp^(0+128),w
  4966  1620                     u4155:	
  4967  1620  1803               	skipnc
  4968  1621  2E2B               	goto	l4812
  4969  1622  1683               	bsf	3,5	;RP0=1, select bank1
  4970  1623  1303               	bcf	3,6	;RP1=0, select bank1
  4971  1624  01B1               	clrf	___fldiv@new_exp^(0+128)
  4972  1625  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4973  1626  01A4               	clrf	___fldiv@b^(0+128)
  4974  1627  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4975  1628  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4976  1629  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4977  162A  01B0               	clrf	___fldiv@sign^(0+128)
  4978  162B                     l4812:	
  4979  162B  1683               	bsf	3,5	;RP0=1, select bank1
  4980  162C  1303               	bcf	3,6	;RP1=0, select bank1
  4981  162D  0831               	movf	___fldiv@new_exp^(0+128),w
  4982  162E  00B7               	movwf	___fldiv@bexp^(0+128)
  4983  162F  1C37               	btfss	___fldiv@bexp^(0+128),0
  4984  1630  2E33               	goto	l1371
  4985  1631  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  4986  1632  2E34               	goto	l4818
  4987  1633                     l1371:	
  4988  1633  13A6               	bcf	(___fldiv@b^(0+128)+2),7
  4989  1634                     l4818:	
  4990  1634  1003               	clrc
  4991  1635  0C37               	rrf	___fldiv@bexp^(0+128),w
  4992  1636  00A7               	movwf	(___fldiv@b^(0+128)+3)
  4993  1637  2D56               	goto	L17
  4994  1638                     __end_of___fldiv:	
  4995  1638                     __ptext67:	
  4996 ;; *************** function ___flsub *****************
  4997 ;; Defined at:
  4998 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  a               4   45[BANK0 ] void 
  5001 ;;  b               4   49[BANK0 ] void 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  4   45[BANK0 ] void 
  5006 ;; Registers used:
  5007 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 300/0
  5010 ;;		On exit  : 300/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5013 ;;      Params:         0       8       0       0       0
  5014 ;;      Locals:         0       0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0
  5016 ;;      Totals:         0       8       0       0       0
  5017 ;;Total ram usage:        8 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    2
  5020 ;; This function calls:
  5021 ;;		___fladd
  5022 ;; This function is called by:
  5023 ;;		_Auto_Relay0
  5024 ;;		_Auto_Relay1
  5025 ;;		_ADC_Read_NTC
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           
  5030                           ;psect for function ___flsub
  5031  1638                     ___flsub:	
  5032                           
  5033                           ;incstack = 0
  5034                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5035  1638  3080               	movlw	128
  5036  1639  06D0               	xorwf	___flsub@a+3,f
  5037  163A  0854               	movf	___flsub@b+3,w
  5038  163B  00BC               	movwf	___fladd@b+3
  5039  163C  0853               	movf	___flsub@b+2,w
  5040  163D  00BB               	movwf	___fladd@b+2
  5041  163E  0852               	movf	___flsub@b+1,w
  5042  163F  00BA               	movwf	___fladd@b+1
  5043  1640  0851               	movf	___flsub@b,w
  5044  1641  00B9               	movwf	___fladd@b
  5045  1642  0850               	movf	___flsub@a+3,w
  5046  1643  00C0               	movwf	___fladd@a+3
  5047  1644  084F               	movf	___flsub@a+2,w
  5048  1645  00BF               	movwf	___fladd@a+2
  5049  1646  084E               	movf	___flsub@a+1,w
  5050  1647  00BE               	movwf	___fladd@a+1
  5051  1648  084D               	movf	___flsub@a,w
  5052  1649  00BD               	movwf	___fladd@a
  5053  164A  21C8               	fcall	___fladd
  5054  164B  083C               	movf	?___fladd+3,w
  5055  164C  00D0               	movwf	?___flsub+3
  5056  164D  083B               	movf	?___fladd+2,w
  5057  164E  00CF               	movwf	?___flsub+2
  5058  164F  083A               	movf	?___fladd+1,w
  5059  1650  00CE               	movwf	?___flsub+1
  5060  1651  0839               	movf	?___fladd,w
  5061  1652  00CD               	movwf	?___flsub
  5062  1653  0008               	return
  5063  1654                     __end_of___flsub:	
  5064  1654                     __ptext35:	
  5065 ;; *************** function ___lwdiv *****************
  5066 ;; Defined at:
  5067 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  divisor         2    0[BANK0 ] unsigned int 
  5070 ;;  dividend        2    2[BANK0 ] unsigned int 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  quotient        2    5[BANK0 ] unsigned int 
  5073 ;;  counter         1    4[BANK0 ] unsigned char 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  2    0[BANK0 ] unsigned int 
  5076 ;; Registers used:
  5077 ;;		wreg, status,2, status,0
  5078 ;; Tracked objects:
  5079 ;;		On entry : 300/0
  5080 ;;		On exit  : 300/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5083 ;;      Params:         0       4       0       0       0
  5084 ;;      Locals:         0       3       0       0       0
  5085 ;;      Temps:          0       0       0       0       0
  5086 ;;      Totals:         0       7       0       0       0
  5087 ;;Total ram usage:        7 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    1
  5090 ;; This function calls:
  5091 ;;		Nothing
  5092 ;; This function is called by:
  5093 ;;		_ADC_Read_NTC
  5094 ;;		_PROCULUS_Buzzer
  5095 ;;		_utoa
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           
  5100                           ;psect for function ___lwdiv
  5101  1654                     ___lwdiv:	
  5102                           
  5103                           ;incstack = 0
  5104                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5105  1654  01A5               	clrf	___lwdiv@quotient
  5106  1655  01A6               	clrf	___lwdiv@quotient+1
  5107  1656  0820               	movf	___lwdiv@divisor,w
  5108  1657  0421               	iorwf	___lwdiv@divisor+1,w
  5109  1658  1903               	btfsc	3,2
  5110  1659  2E79               	goto	l6286
  5111  165A  01A4               	clrf	___lwdiv@counter
  5112  165B                     L15:	
  5113  165B  0AA4               	incf	___lwdiv@counter,f
  5114  165C  1BA1               	btfsc	___lwdiv@divisor+1,7
  5115  165D  2E62               	goto	l6274
  5116  165E  1003               	clrc
  5117  165F  0DA0               	rlf	___lwdiv@divisor,f
  5118  1660  0DA1               	rlf	___lwdiv@divisor+1,f
  5119  1661  2E5B               	goto	L15
  5120  1662                     l6274:	
  5121  1662  1003               	clrc
  5122  1663  0DA5               	rlf	___lwdiv@quotient,f
  5123  1664  0DA6               	rlf	___lwdiv@quotient+1,f
  5124  1665  0821               	movf	___lwdiv@divisor+1,w
  5125  1666  0223               	subwf	___lwdiv@dividend+1,w
  5126  1667  1D03               	skipz
  5127  1668  2E6B               	goto	u5575
  5128  1669  0820               	movf	___lwdiv@divisor,w
  5129  166A  0222               	subwf	___lwdiv@dividend,w
  5130  166B                     u5575:	
  5131  166B  1C03               	skipc
  5132  166C  2E75               	goto	L16
  5133  166D  0820               	movf	___lwdiv@divisor,w
  5134  166E  02A2               	subwf	___lwdiv@dividend,f
  5135  166F  0821               	movf	___lwdiv@divisor+1,w
  5136  1670  1C03               	skipc
  5137  1671  03A3               	decf	___lwdiv@dividend+1,f
  5138  1672  02A3               	subwf	___lwdiv@dividend+1,f
  5139  1673  1425               	bsf	___lwdiv@quotient,0
  5140  1674  1003               	clrc
  5141  1675                     L16:	
  5142  1675  0CA1               	rrf	___lwdiv@divisor+1,f
  5143  1676  0CA0               	rrf	___lwdiv@divisor,f
  5144  1677  0BA4               	decfsz	___lwdiv@counter,f
  5145  1678  2E62               	goto	l6274
  5146  1679                     l6286:	
  5147  1679  0826               	movf	___lwdiv@quotient+1,w
  5148  167A  00A1               	movwf	?___lwdiv+1
  5149  167B  0825               	movf	___lwdiv@quotient,w
  5150  167C  00A0               	movwf	?___lwdiv
  5151  167D  0008               	return
  5152  167E                     __end_of___lwdiv:	
  5153  167E                     __ptext10:	
  5154 ;; *************** function _captura *****************
  5155 ;; Defined at:
  5156 ;;		line 123 in file "adc.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;		None
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;		None
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  2    0[BANK0 ] unsigned int 
  5163 ;; Registers used:
  5164 ;;		wreg
  5165 ;; Tracked objects:
  5166 ;;		On entry : 300/100
  5167 ;;		On exit  : 300/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5170 ;;      Params:         0       2       0       0       0
  5171 ;;      Locals:         0       0       0       0       0
  5172 ;;      Temps:          0       0       0       0       0
  5173 ;;      Totals:         0       2       0       0       0
  5174 ;;Total ram usage:        2 bytes
  5175 ;; Hardware stack levels used:    1
  5176 ;; Hardware stack levels required when called:    1
  5177 ;; This function calls:
  5178 ;;		Nothing
  5179 ;; This function is called by:
  5180 ;;		_ADC_Read_NTC
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           
  5185                           ;psect for function _captura
  5186  167E                     _captura:	
  5187                           
  5188                           ;adc.c: 124:     ADCON0bits.GO=1;
  5189                           
  5190                           ;incstack = 0
  5191                           ; Regs used in _captura: [wreg]
  5192  167E  1283               	bcf	3,5	;RP0=0, select bank0
  5193  167F  149F               	bsf	31,1	;volatile
  5194  1680                     l450:	
  5195                           ;adc.c: 128:           }
  5196                           
  5197                           
  5198                           ;adc.c: 125:     while(ADCON0bits.GO)
  5199  1680  189F               	btfsc	31,1	;volatile
  5200  1681  2E80               	goto	l450
  5201                           
  5202                           ;adc.c: 129:     return ((ADRESH<<8)+ADRESL);
  5203  1682  081E               	movf	30,w	;volatile
  5204  1683  00A1               	movwf	?_captura+1
  5205  1684  01A0               	clrf	?_captura
  5206  1685  1683               	bsf	3,5	;RP0=1, select bank1
  5207  1686  081E               	movf	30,w	;volatile
  5208  1687  1283               	bcf	3,5	;RP0=0, select bank0
  5209  1688  07A0               	addwf	?_captura,f
  5210  1689  1803               	skipnc
  5211  168A  0AA1               	incf	?_captura+1,f
  5212  168B  0008               	return
  5213  168C                     __end_of_captura:	
  5214  168C                     __ptext6:	
  5215 ;; *************** function _log *****************
  5216 ;; Defined at:
  5217 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\log.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  x               4   16[BANK1 ] float 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;  exponent        2   78[BANK0 ] int 
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  4   16[BANK1 ] int 
  5224 ;; Registers used:
  5225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 300/100
  5228 ;;		On exit  : 300/100
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5231 ;;      Params:         0       0       4       0       0
  5232 ;;      Locals:         0       2       0       0       0
  5233 ;;      Temps:          0       0       0       0       0
  5234 ;;      Totals:         0       2       4       0       0
  5235 ;;Total ram usage:        6 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    4
  5238 ;; This function calls:
  5239 ;;		___fladd
  5240 ;;		___fleq
  5241 ;;		___flge
  5242 ;;		___flmul
  5243 ;;		___xxtofl
  5244 ;;		_eval_poly
  5245 ;;		_frexp
  5246 ;; This function is called by:
  5247 ;;		_ADC_Read_NTC
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           
  5252                           ;psect for function _log
  5253  168C                     _log:	
  5254                           
  5255                           ;incstack = 0
  5256                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5257  168C  0833               	movf	(log@x+3)^(0+128),w
  5258  168D  1283               	bcf	3,5	;RP0=0, select bank0
  5259  168E  00D8               	movwf	___flge@ff1+3
  5260  168F  1683               	bsf	3,5	;RP0=1, select bank1
  5261  1690  0832               	movf	(log@x+2)^(0+128),w
  5262  1691  1283               	bcf	3,5	;RP0=0, select bank0
  5263  1692  00D7               	movwf	___flge@ff1+2
  5264  1693  1683               	bsf	3,5	;RP0=1, select bank1
  5265  1694  0831               	movf	(log@x+1)^(0+128),w
  5266  1695  1283               	bcf	3,5	;RP0=0, select bank0
  5267  1696  00D6               	movwf	___flge@ff1+1
  5268  1697  1683               	bsf	3,5	;RP0=1, select bank1
  5269  1698  0830               	movf	log@x^(0+128),w
  5270  1699  1283               	bcf	3,5	;RP0=0, select bank0
  5271  169A  00D5               	movwf	___flge@ff1
  5272  169B  01D9               	clrf	___flge@ff2
  5273  169C  01DA               	clrf	___flge@ff2+1
  5274  169D  01DB               	clrf	___flge@ff2+2
  5275  169E  01DC               	clrf	___flge@ff2+3
  5276  169F  120A  118A  23BB  160A  118A  	fcall	___flge
  5277  16A4  1803               	btfsc	3,0
  5278  16A5  2EA7               	goto	l6472
  5279  16A6  2FC3               	ljmp	PL60	;call to abstracted procedure
  5280  16A7                     l6472:	
  5281  16A7  1683               	bsf	3,5	;RP0=1, select bank1
  5282  16A8  0833               	movf	(log@x+3)^(0+128),w
  5283  16A9  1283               	bcf	3,5	;RP0=0, select bank0
  5284  16AA  00A3               	movwf	___fleq@ff1+3
  5285  16AB  1683               	bsf	3,5	;RP0=1, select bank1
  5286  16AC  0832               	movf	(log@x+2)^(0+128),w
  5287  16AD  1283               	bcf	3,5	;RP0=0, select bank0
  5288  16AE  00A2               	movwf	___fleq@ff1+2
  5289  16AF  1683               	bsf	3,5	;RP0=1, select bank1
  5290  16B0  0831               	movf	(log@x+1)^(0+128),w
  5291  16B1  1283               	bcf	3,5	;RP0=0, select bank0
  5292  16B2  00A1               	movwf	___fleq@ff1+1
  5293  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  5294  16B4  0830               	movf	log@x^(0+128),w
  5295  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  5296  16B6  160A  158A  27FA  160A  118A  	fcall	PL80	;call to abstracted procedure
  5297  16BB  160A  158A  27C4  160A  118A  	fcall	___fleq
  5298  16C0  1C03               	btfss	3,0
  5299  16C1  2EC3               	goto	l6476
  5300  16C2  2FC3               	ljmp	PL60	;call to abstracted procedure
  5301  16C3                     l6476:	
  5302  16C3  30BF               	movlw	191
  5303  16C4  00BC               	movwf	___fladd@b+3
  5304  16C5  3080               	movlw	128
  5305  16C6  00BB               	movwf	___fladd@b+2
  5306  16C7  3040               	movlw	64
  5307  16C8  01BA               	clrf	___fladd@b+1
  5308  16C9  01B9               	clrf	___fladd@b
  5309  16CA  00D8               	movwf	___flmul@b+3
  5310  16CB  306E               	movlw	(low (log@exponent| 0))& (0+255)
  5311  16CC  01D7               	clrf	___flmul@b+2
  5312  16CD  01D6               	clrf	___flmul@b+1
  5313  16CE  01D5               	clrf	___flmul@b
  5314  16CF  00B0               	movwf	frexp@eptr
  5315  16D0  1683               	bsf	3,5	;RP0=1, select bank1
  5316  16D1  0833               	movf	(log@x+3)^(0+128),w
  5317  16D2  1283               	bcf	3,5	;RP0=0, select bank0
  5318  16D3  00AF               	movwf	frexp@value+3
  5319  16D4  1683               	bsf	3,5	;RP0=1, select bank1
  5320  16D5  0832               	movf	(log@x+2)^(0+128),w
  5321  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  5322  16D7  00AE               	movwf	frexp@value+2
  5323  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  5324  16D9  0831               	movf	(log@x+1)^(0+128),w
  5325  16DA  1283               	bcf	3,5	;RP0=0, select bank0
  5326  16DB  00AD               	movwf	frexp@value+1
  5327  16DC  1683               	bsf	3,5	;RP0=1, select bank1
  5328  16DD  0830               	movf	log@x^(0+128),w
  5329  16DE  1283               	bcf	3,5	;RP0=0, select bank0
  5330  16DF  00AC               	movwf	frexp@value
  5331  16E0  160A  158A  277D  160A  118A  	fcall	_frexp
  5332  16E5  082F               	movf	?_frexp+3,w
  5333  16E6  00DC               	movwf	___flmul@a+3
  5334  16E7  082E               	movf	?_frexp+2,w
  5335  16E8  00DB               	movwf	___flmul@a+2
  5336  16E9  082D               	movf	?_frexp+1,w
  5337  16EA  00DA               	movwf	___flmul@a+1
  5338  16EB  082C               	movf	?_frexp,w
  5339  16EC  00D9               	movwf	___flmul@a
  5340  16ED  120A  118A  208A  160A  118A  	fcall	___flmul
  5341  16F2  27A1  160A  118A   	fcall	PL30	;call to abstracted procedure
  5342  16F5  21C8  160A  118A   	fcall	___fladd
  5343  16F8  083C               	movf	?___fladd+3,w
  5344  16F9  1683               	bsf	3,5	;RP0=1, select bank1
  5345  16FA  00B3               	movwf	(log@x+3)^(0+128)
  5346  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  5347  16FC  083B               	movf	?___fladd+2,w
  5348  16FD  1683               	bsf	3,5	;RP0=1, select bank1
  5349  16FE  00B2               	movwf	(log@x+2)^(0+128)
  5350  16FF  1283               	bcf	3,5	;RP0=0, select bank0
  5351  1700  083A               	movf	?___fladd+1,w
  5352  1701  1683               	bsf	3,5	;RP0=1, select bank1
  5353  1702  00B1               	movwf	(log@x+1)^(0+128)
  5354  1703  1283               	bcf	3,5	;RP0=0, select bank0
  5355  1704  0839               	movf	?___fladd,w
  5356  1705  1683               	bsf	3,5	;RP0=1, select bank1
  5357  1706  00B0               	movwf	log@x^(0+128)
  5358  1707  30FF               	movlw	-1
  5359  1708  1283               	bcf	3,5	;RP0=0, select bank0
  5360  1709  07EE               	addwf	log@exponent,f
  5361  170A  1C03               	skipc
  5362  170B  03EF               	decf	log@exponent+1,f
  5363  170C  1683               	bsf	3,5	;RP0=1, select bank1
  5364  170D  0833               	movf	(log@x+3)^(0+128),w
  5365  170E  00A3               	movwf	(eval_poly@x+3)^(0+128)
  5366  170F  0832               	movf	(log@x+2)^(0+128),w
  5367  1710  00A2               	movwf	(eval_poly@x+2)^(0+128)
  5368  1711  0831               	movf	(log@x+1)^(0+128),w
  5369  1712  00A1               	movwf	(eval_poly@x+1)^(0+128)
  5370  1713  0830               	movf	log@x^(0+128),w
  5371  1714  00A0               	movwf	eval_poly@x^(0+128)
  5372  1715  3001               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  5373  1716  00A4               	movwf	eval_poly@d^(0+128)
  5374  1717  3008               	movlw	8
  5375  1718  00A5               	movwf	eval_poly@n^(0+128)
  5376  1719  01A6               	clrf	(eval_poly@n+1)^(0+128)
  5377  171A  211E  160A  118A   	fcall	_eval_poly
  5378  171D  0823               	movf	(?_eval_poly+3)^(0+128),w
  5379  171E  00B3               	movwf	(log@x+3)^(0+128)
  5380  171F  0822               	movf	(?_eval_poly+2)^(0+128),w
  5381  1720  00B2               	movwf	(log@x+2)^(0+128)
  5382  1721  0821               	movf	(?_eval_poly+1)^(0+128),w
  5383  1722  00B1               	movwf	(log@x+1)^(0+128)
  5384  1723  0820               	movf	?_eval_poly^(0+128),w
  5385  1724  00B0               	movwf	log@x^(0+128)
  5386  1725  0833               	movf	(log@x+3)^(0+128),w
  5387  1726  1283               	bcf	3,5	;RP0=0, select bank0
  5388  1727  00BC               	movwf	___fladd@b+3
  5389  1728  1683               	bsf	3,5	;RP0=1, select bank1
  5390  1729  0832               	movf	(log@x+2)^(0+128),w
  5391  172A  1283               	bcf	3,5	;RP0=0, select bank0
  5392  172B  00BB               	movwf	___fladd@b+2
  5393  172C  1683               	bsf	3,5	;RP0=1, select bank1
  5394  172D  0831               	movf	(log@x+1)^(0+128),w
  5395  172E  1283               	bcf	3,5	;RP0=0, select bank0
  5396  172F  00BA               	movwf	___fladd@b+1
  5397  1730  1683               	bsf	3,5	;RP0=1, select bank1
  5398  1731  0830               	movf	log@x^(0+128),w
  5399  1732  1283               	bcf	3,5	;RP0=0, select bank0
  5400  1733  00B9               	movwf	___fladd@b
  5401  1734  303F               	movlw	63
  5402  1735  00D8               	movwf	___flmul@b+3
  5403  1736  3031               	movlw	49
  5404  1737  00D7               	movwf	___flmul@b+2
  5405  1738  3072               	movlw	114
  5406  1739  00D6               	movwf	___flmul@b+1
  5407  173A  3018               	movlw	24
  5408  173B  00D5               	movwf	___flmul@b
  5409  173C  086E               	movf	log@exponent,w
  5410  173D  00AB               	movwf	___xxtofl@val
  5411  173E  086F               	movf	log@exponent+1,w
  5412  173F  27BC  160A  118A   	fcall	PL54	;call to abstracted procedure
  5413  1742  24A9  160A  118A   	fcall	___xxtofl
  5414  1745  27AA               	fcall	PL46	;call to abstracted procedure
  5415  1746  120A  118A  208A  160A  118A  	fcall	___flmul
  5416  174B  27A1  160A  118A   	fcall	PL30	;call to abstracted procedure
  5417  174E  21C8               	fcall	___fladd
  5418  174F  083C               	movf	?___fladd+3,w
  5419  1750  1683               	bsf	3,5	;RP0=1, select bank1
  5420  1751  00B3               	movwf	(?_log+3)^(0+128)
  5421  1752  1283               	bcf	3,5	;RP0=0, select bank0
  5422  1753  083B               	movf	?___fladd+2,w
  5423  1754  1683               	bsf	3,5	;RP0=1, select bank1
  5424  1755  00B2               	movwf	(?_log+2)^(0+128)
  5425  1756  1283               	bcf	3,5	;RP0=0, select bank0
  5426  1757  083A               	movf	?___fladd+1,w
  5427  1758  1683               	bsf	3,5	;RP0=1, select bank1
  5428  1759  00B1               	movwf	(?_log+1)^(0+128)
  5429  175A  1283               	bcf	3,5	;RP0=0, select bank0
  5430  175B  0839               	movf	?___fladd,w
  5431  175C  1683               	bsf	3,5	;RP0=1, select bank1
  5432  175D  00B0               	movwf	?_log^(0+128)
  5433  175E  0008               	return
  5434  175F                     __end_of_log:	
  5435  175F                     __ptext4:	
  5436 ;; *************** function _Package_Usart_is_for_me *****************
  5437 ;; Defined at:
  5438 ;;		line 8 in file "protocolo.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;		None
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;  retorno         1    0[BANK0 ] unsigned char 
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  1    wreg      unsigned char 
  5445 ;; Registers used:
  5446 ;;		wreg, status,2, status,0
  5447 ;; Tracked objects:
  5448 ;;		On entry : 300/100
  5449 ;;		On exit  : 300/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5452 ;;      Params:         0       0       0       0       0
  5453 ;;      Locals:         0       1       0       0       0
  5454 ;;      Temps:          0       0       0       0       0
  5455 ;;      Totals:         0       1       0       0       0
  5456 ;;Total ram usage:        1 bytes
  5457 ;; Hardware stack levels used:    1
  5458 ;; Hardware stack levels required when called:    1
  5459 ;; This function calls:
  5460 ;;		Nothing
  5461 ;; This function is called by:
  5462 ;;		_mediatemperaturaNTC
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           
  5467                           ;psect for function _Package_Usart_is_for_me
  5468  175F                     _Package_Usart_is_for_me:	
  5469                           
  5470                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5471                           
  5472                           ;incstack = 0
  5473                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5474  175F  1C76               	btfss	_generic_status,0
  5475  1760  2F70               	goto	l5268
  5476                           
  5477                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5478  1761  1283               	bcf	3,5	;RP0=0, select bank2
  5479  1762  1703               	bsf	3,6	;RP1=1, select bank2
  5480  1763  0853               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5481  1764  1683               	bsf	3,5	;RP0=1, select bank3
  5482  1765  0634               	xorwf	_Board_Number^(0+384),w
  5483  1766  1903               	skipnz
  5484  1767  2F6B               	goto	l738
  5485  1768  1283               	bcf	3,5	;RP0=0, select bank2
  5486  1769  0F53               	incfsz	(_usart_buffer^(0+256)+3),w	;volatile
  5487  176A  2F70               	goto	l5268
  5488  176B                     l738:	
  5489                           
  5490                           ;protocolo.c: 13:             retorno=1;
  5491  176B  1283               	bcf	3,5	;RP0=0, select bank0
  5492  176C  1303               	bcf	3,6	;RP1=0, select bank0
  5493  176D  01A0               	clrf	Package_Usart_is_for_me@retorno
  5494  176E  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5495  176F  2F73               	goto	l5272
  5496  1770                     l5268:	
  5497                           
  5498                           ;protocolo.c: 15:             retorno=0;
  5499  1770  1283               	bcf	3,5	;RP0=0, select bank0
  5500  1771  1303               	bcf	3,6	;RP1=0, select bank0
  5501  1772  01A0               	clrf	Package_Usart_is_for_me@retorno
  5502  1773                     l5272:	
  5503                           
  5504                           ;protocolo.c: 21:      return retorno;
  5505  1773  0820               	movf	Package_Usart_is_for_me@retorno,w
  5506  1774  0008               	return
  5507  1775                     __end_of_Package_Usart_is_for_me:	
  5508  1775                     PL18:	
  5509  1775  082E               	movf	?___xxtofl+3,w
  5510  1776  1683               	bsf	3,5	;RP0=1, select bank1
  5511  1777  00A3               	movwf	(___fldiv@a+3)^(0+128)
  5512  1778  1283               	bcf	3,5	;RP0=0, select bank0
  5513  1779  082D               	movf	?___xxtofl+2,w
  5514  177A  1683               	bsf	3,5	;RP0=1, select bank1
  5515  177B  00A2               	movwf	(___fldiv@a+2)^(0+128)
  5516  177C  1283               	bcf	3,5	;RP0=0, select bank0
  5517  177D  082C               	movf	?___xxtofl+1,w
  5518  177E  1683               	bsf	3,5	;RP0=1, select bank1
  5519  177F  00A1               	movwf	(___fldiv@a+1)^(0+128)
  5520  1780  1283               	bcf	3,5	;RP0=0, select bank0
  5521  1781  082B               	movf	?___xxtofl,w
  5522  1782  1683               	bsf	3,5	;RP0=1, select bank1
  5523  1783  00A0               	movwf	___fldiv@a^(0+128)
  5524  1784  0008               	return
  5525  1785                     __end_ofPL18:	
  5526  1785                     PL22:	
  5527  1785  1283               	bcf	3,5	;RP0=0, select bank0
  5528  1786  00AB               	movwf	___xxtofl@val
  5529  1787  1683               	bsf	3,5	;RP0=1, select bank1
  5530  1788  084A               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  5531  1789  1283               	bcf	3,5	;RP0=0, select bank0
  5532  178A  00AC               	movwf	___xxtofl@val+1
  5533  178B  3000               	movlw	0
  5534  178C  01AD               	clrf	___xxtofl@val+2
  5535  178D  01AE               	clrf	___xxtofl@val+3
  5536  178E  0008               	return
  5537  178F                     __end_ofPL22:	
  5538  178F                     PL26:	
  5539  178F  082E               	movf	?___xxtofl+3,w
  5540  1790  00D0               	movwf	___flsub@a+3
  5541  1791  082D               	movf	?___xxtofl+2,w
  5542  1792  00CF               	movwf	___flsub@a+2
  5543  1793  082C               	movf	?___xxtofl+1,w
  5544  1794  00CE               	movwf	___flsub@a+1
  5545  1795  082B               	movf	?___xxtofl,w
  5546  1796  00CD               	movwf	___flsub@a
  5547  1797  0008               	return
  5548  1798                     __end_ofPL26:	
  5549  1798                     PL28:	
  5550  1798  0823               	movf	(?___fldiv+3)^(0+128),w
  5551  1799  00CE               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  5552  179A  0822               	movf	(?___fldiv+2)^(0+128),w
  5553  179B  00CD               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  5554  179C  0821               	movf	(?___fldiv+1)^(0+128),w
  5555  179D  00CC               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  5556  179E  0820               	movf	?___fldiv^(0+128),w
  5557  179F  00CB               	movwf	ADC_Read_NTC@temperatura^(0+128)
  5558  17A0  0008               	return
  5559  17A1                     __end_ofPL28:	
  5560  17A1                     PL30:	
  5561  17A1  0858               	movf	?___flmul+3,w
  5562  17A2  00C0               	movwf	___fladd@a+3
  5563  17A3  0857               	movf	?___flmul+2,w
  5564  17A4  00BF               	movwf	___fladd@a+2
  5565  17A5  0856               	movf	?___flmul+1,w
  5566  17A6  00BE               	movwf	___fladd@a+1
  5567  17A7  0855               	movf	?___flmul,w
  5568  17A8  00BD               	movwf	___fladd@a
  5569  17A9  0008               	return
  5570  17AA                     __end_ofPL30:	
  5571  17AA                     PL46:	
  5572  17AA  082E               	movf	?___xxtofl+3,w
  5573  17AB  00DC               	movwf	___flmul@a+3
  5574  17AC  082D               	movf	?___xxtofl+2,w
  5575  17AD  00DB               	movwf	___flmul@a+2
  5576  17AE  082C               	movf	?___xxtofl+1,w
  5577  17AF  00DA               	movwf	___flmul@a+1
  5578  17B0  082B               	movf	?___xxtofl,w
  5579  17B1  00D9               	movwf	___flmul@a
  5580  17B2  0008               	return
  5581  17B3                     __end_ofPL46:	
  5582  17B3                     PL48:	
  5583  17B3  1839               	btfsc	___fladd@b,0
  5584  17B4  17CC               	bsf	___fladd@grs,7
  5585  17B5  0D3C               	rlf	___fladd@b+3,w
  5586  17B6  0CBC               	rrf	___fladd@b+3,f
  5587  17B7  0CBB               	rrf	___fladd@b+2,f
  5588  17B8  0CBA               	rrf	___fladd@b+1,f
  5589  17B9  0CB9               	rrf	___fladd@b,f
  5590  17BA  0ACB               	incf	___fladd@bexp,f
  5591  17BB  0008               	return
  5592  17BC                     __end_ofPL48:	
  5593  17BC                     PL54:	
  5594  17BC  00AC               	movwf	___xxtofl@val+1
  5595  17BD  3000               	movlw	0
  5596  17BE  1BAC               	btfsc	___xxtofl@val+1,7
  5597  17BF  30FF               	movlw	255
  5598  17C0  00AD               	movwf	___xxtofl@val+2
  5599  17C1  00AE               	movwf	___xxtofl@val+3
  5600  17C2  3401               	retlw	1
  5601  17C3                     __end_ofPL54:	
  5602  17C3                     PL60:	
  5603  17C3  1683               	bsf	3,5	;RP0=1, select bank1
  5604  17C4  01B0               	clrf	?_log^(0+128)
  5605  17C5  01B1               	clrf	(?_log+1)^(0+128)
  5606  17C6  01B2               	clrf	(?_log+2)^(0+128)
  5607  17C7  01B3               	clrf	(?_log+3)^(0+128)
  5608  17C8  0008               	return
  5609  17C9                     __end_ofPL60:	
  5610  17C9                     PL72:	
  5611  17C9  1003               	clrc
  5612  17CA  0CB8               	rrf	___xxtofl@arg+3,f
  5613  17CB  0CB7               	rrf	___xxtofl@arg+2,f
  5614  17CC  0CB6               	rrf	___xxtofl@arg+1,f
  5615  17CD  0CB5               	rrf	___xxtofl@arg,f
  5616  17CE  0008               	return
  5617  17CF                     __end_ofPL72:	
  5618  17CF                     PL74:	
  5619  17CF  01B9               	clrf	?___fladd
  5620  17D0  01BA               	clrf	?___fladd+1
  5621  17D1  01BB               	clrf	?___fladd+2
  5622  17D2  01BC               	clrf	?___fladd+3
  5623  17D3  0008               	return
  5624  17D4                     __end_ofPL74:	
  5625  17D4                     __ptext3:	
  5626 ;; *************** function _my_delay_ms *****************
  5627 ;; Defined at:
  5628 ;;		line 5 in file "my_delay.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  time            4    0[BANK0 ] long 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  i               4    6[BANK0 ] long 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  1    wreg      void 
  5635 ;; Registers used:
  5636 ;;		wreg, status,2, status,0, btemp+1
  5637 ;; Tracked objects:
  5638 ;;		On entry : 300/0
  5639 ;;		On exit  : 300/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5642 ;;      Params:         0       4       0       0       0
  5643 ;;      Locals:         0       4       0       0       0
  5644 ;;      Temps:          0       2       0       0       0
  5645 ;;      Totals:         0      10       0       0       0
  5646 ;;Total ram usage:       10 bytes
  5647 ;; Hardware stack levels used:    1
  5648 ;; Hardware stack levels required when called:    1
  5649 ;; This function calls:
  5650 ;;		Nothing
  5651 ;; This function is called by:
  5652 ;;		_mediatemperaturaNTC
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           
  5657                           ;psect for function _my_delay_ms
  5658  17D4                     _my_delay_ms:	
  5659                           
  5660                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5661                           
  5662                           ;incstack = 0
  5663                           ; Regs used in _my_delay_ms: [wreg+status,2+status,0+btemp+1]
  5664  17D4  01A6               	clrf	my_delay_ms@i
  5665  17D5  01A7               	clrf	my_delay_ms@i+1
  5666  17D6  01A8               	clrf	my_delay_ms@i+2
  5667  17D7  01A9               	clrf	my_delay_ms@i+3
  5668  17D8                     l5218:	
  5669  17D8  0829               	movf	my_delay_ms@i+3,w
  5670  17D9  3A80               	xorlw	128
  5671  17DA  00FF               	movwf	127
  5672  17DB  0823               	movf	my_delay_ms@time+3,w
  5673  17DC  3A80               	xorlw	128
  5674  17DD  027F               	subwf	127,w
  5675  17DE  1D03               	skipz
  5676  17DF  2FEA               	goto	u4453
  5677  17E0  0822               	movf	my_delay_ms@time+2,w
  5678  17E1  0228               	subwf	my_delay_ms@i+2,w
  5679  17E2  1D03               	skipz
  5680  17E3  2FEA               	goto	u4453
  5681  17E4  0821               	movf	my_delay_ms@time+1,w
  5682  17E5  0227               	subwf	my_delay_ms@i+1,w
  5683  17E6  1D03               	skipz
  5684  17E7  2FEA               	goto	u4453
  5685  17E8  0820               	movf	my_delay_ms@time,w
  5686  17E9  0226               	subwf	my_delay_ms@i,w
  5687  17EA                     u4453:	
  5688  17EA  1803               	btfsc	3,0
  5689  17EB  0008               	return
  5690                           
  5691                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5692  17EC  3003               	movlw	3
  5693  17ED  1283               	bcf	3,5	;RP0=0, select bank0
  5694  17EE  1303               	bcf	3,6	;RP1=0, select bank0
  5695  17EF  00A5               	movwf	??_my_delay_ms+1
  5696  17F0  3097               	movlw	151
  5697  17F1  00A4               	movwf	??_my_delay_ms
  5698  17F2                     u6557:	
  5699  17F2  0BA4               	decfsz	??_my_delay_ms,f
  5700  17F3  2FF2               	goto	u6557
  5701  17F4  0BA5               	decfsz	??_my_delay_ms+1,f
  5702  17F5  2FF2               	goto	u6557
  5703                           
  5704                           ;my_delay.c: 10:             }
  5705  17F6  1283               	bcf	3,5	;RP0=0, select bank0
  5706  17F7  1303               	bcf	3,6	;RP1=0, select bank0
  5707  17F8  0AA6               	incf	my_delay_ms@i,f
  5708  17F9  1903               	skipnz
  5709  17FA  0AA7               	incf	my_delay_ms@i+1,f
  5710  17FB  1903               	skipnz
  5711  17FC  0AA8               	incf	my_delay_ms@i+2,f
  5712  17FD  1903               	skipnz
  5713  17FE  0AA9               	incf	my_delay_ms@i+3,f
  5714  17FF  2FD8               	goto	l5218
  5715  1800                     __end_of_my_delay_ms:	
  5716                           
  5717                           	psect	text7
  5718  1F7D                     __ptext7:	
  5719 ;; *************** function _frexp *****************
  5720 ;; Defined at:
  5721 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\frexp.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;  value           4   12[BANK0 ] int 
  5724 ;;  eptr            1   16[BANK0 ] PTR int 
  5725 ;;		 -> log@exponent(2), 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;		None
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  4   12[BANK0 ] PTR int 
  5730 ;; Registers used:
  5731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5732 ;; Tracked objects:
  5733 ;;		On entry : 300/0
  5734 ;;		On exit  : B00/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5737 ;;      Params:         0       5       0       0       0
  5738 ;;      Locals:         0       0       0       0       0
  5739 ;;      Temps:          0       2       0       0       0
  5740 ;;      Totals:         0       7       0       0       0
  5741 ;;Total ram usage:        7 bytes
  5742 ;; Hardware stack levels used:    1
  5743 ;; Hardware stack levels required when called:    2
  5744 ;; This function calls:
  5745 ;;		___fleq
  5746 ;; This function is called by:
  5747 ;;		_log
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           
  5752                           ;psect for function _frexp
  5753  1F7D                     _frexp:	
  5754                           
  5755                           ;incstack = 0
  5756                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5757  1F7D  082F               	movf	frexp@value+3,w
  5758  1F7E  00A3               	movwf	___fleq@ff1+3
  5759  1F7F  082E               	movf	frexp@value+2,w
  5760  1F80  00A2               	movwf	___fleq@ff1+2
  5761  1F81  082D               	movf	frexp@value+1,w
  5762  1F82  00A1               	movwf	___fleq@ff1+1
  5763  1F83  082C               	movf	frexp@value,w
  5764  1F84  27FA  160A  158A   	fcall	PL80	;call to abstracted procedure
  5765  1F87  27C4  160A  158A   	fcall	___fleq
  5766  1F8A  1C03               	btfss	3,0
  5767  1F8B  2F97               	goto	l4396
  5768  1F8C  0830               	movf	frexp@eptr,w
  5769  1F8D  0084               	movwf	4
  5770  1F8E  1383               	bcf	3,7	;select IRP bank0
  5771  1F8F  0180               	clrf	0
  5772  1F90  0A84               	incf	4,f
  5773  1F91  0180               	clrf	0
  5774  1F92  01AC               	clrf	?_frexp
  5775  1F93  01AD               	clrf	?_frexp+1
  5776  1F94  01AE               	clrf	?_frexp+2
  5777  1F95  01AF               	clrf	?_frexp+3
  5778  1F96  0008               	return
  5779  1F97                     l4396:	
  5780  1F97  082F               	movf	frexp@value+3,w
  5781  1F98  397F               	andlw	127
  5782  1F99  00B1               	movwf	??_frexp
  5783  1F9A  01B2               	clrf	??_frexp+1
  5784  1F9B  1003               	clrc
  5785  1F9C  0DB1               	rlf	??_frexp,f
  5786  1F9D  0DB2               	rlf	??_frexp+1,f
  5787  1F9E  0830               	movf	frexp@eptr,w
  5788  1F9F  0084               	movwf	4
  5789  1FA0  0831               	movf	??_frexp,w
  5790  1FA1  1383               	bcf	3,7	;select IRP bank0
  5791  1FA2  0080               	movwf	0
  5792  1FA3  0A84               	incf	4,f
  5793  1FA4  0832               	movf	??_frexp+1,w
  5794  1FA5  0080               	movwf	0
  5795  1FA6  0D2E               	rlf	frexp@value+2,w
  5796  1FA7  0D2E               	rlf	frexp@value+2,w
  5797  1FA8  3901               	andlw	1
  5798  1FA9  00B1               	movwf	??_frexp
  5799  1FAA  01B2               	clrf	??_frexp+1
  5800  1FAB  0830               	movf	frexp@eptr,w
  5801  1FAC  0084               	movwf	4
  5802  1FAD  0831               	movf	??_frexp,w
  5803  1FAE  0480               	iorwf	0,f
  5804  1FAF  0A84               	incf	4,f
  5805  1FB0  0832               	movf	??_frexp+1,w
  5806  1FB1  0480               	iorwf	0,f
  5807  1FB2  0830               	movf	frexp@eptr,w
  5808  1FB3  0084               	movwf	4
  5809  1FB4  3082               	movlw	130
  5810  1FB5  0780               	addwf	0,f
  5811  1FB6  0F84               	incfsz	4,f
  5812  1FB7  0800               	movf	0,w
  5813  1FB8  1803               	skipnc
  5814  1FB9  0A00               	incf	0,w
  5815  1FBA  00FF               	movwf	127
  5816  1FBB  3EFF               	addlw	255
  5817  1FBC  0080               	movwf	0
  5818  1FBD  0384               	decf	4,f
  5819  1FBE  082F               	movf	frexp@value+3,w
  5820  1FBF  3980               	andlw	-128
  5821  1FC0  383F               	iorlw	63
  5822  1FC1  00AF               	movwf	frexp@value+3
  5823  1FC2  13AE               	bcf	frexp@value+2,7
  5824  1FC3  0008               	return
  5825  1FC4                     __end_of_frexp:	
  5826  1FC4                     __ptext8:	
  5827 ;; *************** function ___fleq *****************
  5828 ;; Defined at:
  5829 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  ff1             4    0[BANK0 ] PTR int 
  5832 ;;  ff2             4    4[BANK0 ] PTR int 
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;		None
  5835 ;; Return value:  Size  Location     Type
  5836 ;;		None               void
  5837 ;; Registers used:
  5838 ;;		wreg, status,2, status,0
  5839 ;; Tracked objects:
  5840 ;;		On entry : 300/0
  5841 ;;		On exit  : 300/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5844 ;;      Params:         0       8       0       0       0
  5845 ;;      Locals:         0       0       0       0       0
  5846 ;;      Temps:          0       4       0       0       0
  5847 ;;      Totals:         0      12       0       0       0
  5848 ;;Total ram usage:       12 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; Hardware stack levels required when called:    1
  5851 ;; This function calls:
  5852 ;;		Nothing
  5853 ;; This function is called by:
  5854 ;;		_log
  5855 ;;		_frexp
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           
  5860                           ;psect for function ___fleq
  5861  1FC4                     ___fleq:	
  5862                           
  5863                           ;incstack = 0
  5864                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  5865  1FC4  3080               	movlw	128
  5866  1FC5  01A8               	clrf	??___fleq
  5867  1FC6  01A9               	clrf	??___fleq+1
  5868  1FC7  0522               	andwf	___fleq@ff1+2,w
  5869  1FC8  00AA               	movwf	??___fleq+2
  5870  1FC9  307F               	movlw	127
  5871  1FCA  0523               	andwf	___fleq@ff1+3,w
  5872  1FCB  00AB               	movwf	??___fleq+3
  5873  1FCC  042A               	iorwf	??___fleq+2,w
  5874  1FCD  0429               	iorwf	??___fleq+1,w
  5875  1FCE  0428               	iorwf	??___fleq,w
  5876  1FCF  1D03               	skipz
  5877  1FD0  2FD5               	goto	l3836
  5878  1FD1  01A0               	clrf	___fleq@ff1
  5879  1FD2  01A1               	clrf	___fleq@ff1+1
  5880  1FD3  01A2               	clrf	___fleq@ff1+2
  5881  1FD4  01A3               	clrf	___fleq@ff1+3
  5882  1FD5                     l3836:	
  5883  1FD5  3080               	movlw	128
  5884  1FD6  01A8               	clrf	??___fleq
  5885  1FD7  01A9               	clrf	??___fleq+1
  5886  1FD8  0526               	andwf	___fleq@ff2+2,w
  5887  1FD9  00AA               	movwf	??___fleq+2
  5888  1FDA  307F               	movlw	127
  5889  1FDB  0527               	andwf	___fleq@ff2+3,w
  5890  1FDC  00AB               	movwf	??___fleq+3
  5891  1FDD  042A               	iorwf	??___fleq+2,w
  5892  1FDE  0429               	iorwf	??___fleq+1,w
  5893  1FDF  0428               	iorwf	??___fleq,w
  5894  1FE0  1D03               	skipz
  5895  1FE1  2FE6               	goto	l3840
  5896  1FE2  01A4               	clrf	___fleq@ff2
  5897  1FE3  01A5               	clrf	___fleq@ff2+1
  5898  1FE4  01A6               	clrf	___fleq@ff2+2
  5899  1FE5  01A7               	clrf	___fleq@ff2+3
  5900  1FE6                     l3840:	
  5901  1FE6  0827               	movf	___fleq@ff2+3,w
  5902  1FE7  0623               	xorwf	___fleq@ff1+3,w
  5903  1FE8  1D03               	skipz
  5904  1FE9  2FF4               	goto	u2635
  5905  1FEA  0826               	movf	___fleq@ff2+2,w
  5906  1FEB  0622               	xorwf	___fleq@ff1+2,w
  5907  1FEC  1D03               	skipz
  5908  1FED  2FF4               	goto	u2635
  5909  1FEE  0825               	movf	___fleq@ff2+1,w
  5910  1FEF  0621               	xorwf	___fleq@ff1+1,w
  5911  1FF0  1D03               	skipz
  5912  1FF1  2FF4               	goto	u2635
  5913  1FF2  0824               	movf	___fleq@ff2,w
  5914  1FF3  0620               	xorwf	___fleq@ff1,w
  5915  1FF4                     u2635:	
  5916  1FF4  1903               	skipnz
  5917  1FF5  2FF8               	goto	l3844
  5918  1FF6  1003               	clrc
  5919  1FF7  0008               	return
  5920  1FF8                     l3844:	
  5921  1FF8  1403               	setc
  5922  1FF9  0008               	return
  5923  1FFA                     __end_of___fleq:	
  5924  1FFA                     PL80:	
  5925  1FFA  00A0               	movwf	___fleq@ff1
  5926  1FFB  01A4               	clrf	___fleq@ff2
  5927  1FFC  01A5               	clrf	___fleq@ff2+1
  5928  1FFD  01A6               	clrf	___fleq@ff2+2
  5929  1FFE  01A7               	clrf	___fleq@ff2+3
  5930  1FFF  0008               	return
  5931  2000                     __end_ofPL80:	
  5932                           
  5933                           	psect	text11
  5934  1D33                     __ptext11:	
  5935 ;; *************** function _USART_init *****************
  5936 ;; Defined at:
  5937 ;;		line 18 in file "usart.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  baudrate        4    0[BANK0 ] unsigned long 
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;  i               1    4[BANK0 ] unsigned char 
  5942 ;;  erro            1    0        unsigned char 
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  1    wreg      void 
  5945 ;; Registers used:
  5946 ;;		wreg, status,2, status,0
  5947 ;; Tracked objects:
  5948 ;;		On entry : 300/0
  5949 ;;		On exit  : 300/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5952 ;;      Params:         0       4       0       0       0
  5953 ;;      Locals:         0       1       0       0       0
  5954 ;;      Temps:          0       0       0       0       0
  5955 ;;      Totals:         0       5       0       0       0
  5956 ;;Total ram usage:        5 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; Hardware stack levels required when called:    1
  5959 ;; This function calls:
  5960 ;;		Nothing
  5961 ;; This function is called by:
  5962 ;;		_main
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           
  5967                           ;psect for function _USART_init
  5968  1D33                     _USART_init:	
  5969                           
  5970                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  5971                           
  5972                           ;incstack = 0
  5973                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  5974  1D33  304B               	movlw	75
  5975  1D34  0621               	xorwf	USART_init@baudrate+1,w
  5976  1D35  0420               	iorwf	USART_init@baudrate,w
  5977  1D36  0422               	iorwf	USART_init@baudrate+2,w
  5978  1D37  0423               	iorwf	USART_init@baudrate+3,w
  5979  1D38  1D03               	btfss	3,2
  5980  1D39  2D44               	goto	l6970
  5981                           
  5982                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  5983  1D3A  1798               	bsf	24,7	;volatile
  5984                           
  5985                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  5986  1D3B  1618               	bsf	24,4	;volatile
  5987                           
  5988                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  5989  1D3C  1683               	bsf	3,5	;RP0=1, select bank1
  5990  1D3D  1518               	bsf	24,2	;volatile
  5991                           
  5992                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  5993  1D3E  1218               	bcf	24,4	;volatile
  5994                           
  5995                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  5996  1D3F  1318               	bcf	24,6	;volatile
  5997                           
  5998                           ;usart.c: 32:           SPBRG =12;
  5999  1D40  300C               	movlw	12
  6000  1D41  0099               	movwf	25	;volatile
  6001                           
  6002                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  6003  1D42  170B               	bsf	11,6	;volatile
  6004  1D43  2D5D               	goto	L5
  6005  1D44                     l6970:	
  6006                           ;usart.c: 35:           }
  6007                           
  6008                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  6009                           
  6010  1D44  30C2               	movlw	194
  6011  1D45  0621               	xorwf	USART_init@baudrate+1,w
  6012  1D46  1D03               	skipz
  6013  1D47  2D5E               	goto	l6990
  6014  1D48  0322               	decf	USART_init@baudrate+2,w
  6015  1D49  0420               	iorwf	USART_init@baudrate,w
  6016  1D4A  0423               	iorwf	USART_init@baudrate+3,w
  6017  1D4B  1D03               	btfss	3,2
  6018  1D4C  2D5E               	goto	l6990
  6019                           
  6020                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  6021  1D4D  3010               	movlw	16
  6022  1D4E  1683               	bsf	3,5	;RP0=1, select bank1
  6023  1D4F  0099               	movwf	25	;volatile
  6024                           
  6025                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  6026  1D50  1703               	bsf	3,6	;RP1=1, select bank3
  6027  1D51  1587               	bsf	7,3	;volatile
  6028                           
  6029                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  6030  1D52  1303               	bcf	3,6	;RP1=0, select bank1
  6031  1D53  1518               	bsf	24,2	;volatile
  6032                           
  6033                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  6034  1D54  1283               	bcf	3,5	;RP0=0, select bank0
  6035  1D55  1798               	bsf	24,7	;volatile
  6036                           
  6037                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  6038  1D56  1683               	bsf	3,5	;RP0=1, select bank1
  6039  1D57  1218               	bcf	24,4	;volatile
  6040                           
  6041                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  6042  1D58  1318               	bcf	24,6	;volatile
  6043                           
  6044                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  6045  1D59  1283               	bcf	3,5	;RP0=0, select bank0
  6046  1D5A  1618               	bsf	24,4	;volatile
  6047                           
  6048                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  6049  1D5B  170B               	bsf	11,6	;volatile
  6050                           
  6051                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  6052  1D5C  1683               	bsf	3,5	;RP0=1, select bank1
  6053  1D5D                     L5:	
  6054  1D5D  168C               	bsf	12,5	;volatile
  6055  1D5E                     l6990:	
  6056                           
  6057                           ;usart.c: 68:      TRISC6= 1;
  6058  1D5E  1683               	bsf	3,5	;RP0=1, select bank1
  6059  1D5F  1707               	bsf	7,6	;volatile
  6060                           
  6061                           ;usart.c: 69:      TRISC7= 1;
  6062  1D60  1787               	bsf	7,7	;volatile
  6063                           
  6064                           ;usart.c: 71:      CREN=0;
  6065  1D61  1283               	bcf	3,5	;RP0=0, select bank0
  6066  1D62  1218               	bcf	24,4	;volatile
  6067                           
  6068                           ;usart.c: 72:      CREN=1;
  6069  1D63  1618               	bsf	24,4	;volatile
  6070                           
  6071                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  6072  1D64  01A4               	clrf	USART_init@i
  6073  1D65                     l7004:	
  6074  1D65  081A               	movf	26,w	;volatile
  6075  1D66  300F               	movlw	15
  6076  1D67  0AA4               	incf	USART_init@i,f
  6077  1D68  0224               	subwf	USART_init@i,w
  6078  1D69  1803               	btfsc	3,0
  6079  1D6A  0008               	return
  6080  1D6B  2D65               	goto	l7004
  6081  1D6C                     __end_of_USART_init:	
  6082                           
  6083                           	psect	text12
  6084  1E8C                     __ptext12:	
  6085 ;; *************** function _I2C_Master_Init *****************
  6086 ;; Defined at:
  6087 ;;		line 7 in file "I2C.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;  c               4   13[BANK0 ] const unsigned long 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;		None
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1    wreg      void 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2, status,0, pclath, cstack
  6096 ;; Tracked objects:
  6097 ;;		On entry : 300/0
  6098 ;;		On exit  : 300/100
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6101 ;;      Params:         0       4       0       0       0
  6102 ;;      Locals:         0       0       0       0       0
  6103 ;;      Temps:          0       4       0       0       0
  6104 ;;      Totals:         0       8       0       0       0
  6105 ;;Total ram usage:        8 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    2
  6108 ;; This function calls:
  6109 ;;		___lldiv
  6110 ;; This function is called by:
  6111 ;;		_main
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           
  6116                           ;psect for function _I2C_Master_Init
  6117  1E8C                     _I2C_Master_Init:	
  6118                           
  6119                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  6120                           
  6121                           ;incstack = 0
  6122                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  6123  1E8C  3028               	movlw	40
  6124  1E8D  0094               	movwf	20	;volatile
  6125                           
  6126                           ;I2C.c: 11:   SSPCON2 = 0;
  6127  1E8E  1683               	bsf	3,5	;RP0=1, select bank1
  6128  1E8F  0191               	clrf	17	;volatile
  6129                           
  6130                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  6131  1E90  1283               	bcf	3,5	;RP0=0, select bank0
  6132  1E91  082D               	movf	I2C_Master_Init@c,w
  6133  1E92  00B1               	movwf	??_I2C_Master_Init
  6134  1E93  082E               	movf	I2C_Master_Init@c+1,w
  6135  1E94  00B2               	movwf	??_I2C_Master_Init+1
  6136  1E95  082F               	movf	I2C_Master_Init@c+2,w
  6137  1E96  00B3               	movwf	??_I2C_Master_Init+2
  6138  1E97  0830               	movf	I2C_Master_Init@c+3,w
  6139  1E98  00B4               	movwf	??_I2C_Master_Init+3
  6140  1E99  3002               	movlw	2
  6141  1E9A                     u6115:	
  6142  1E9A  1003               	clrc
  6143  1E9B  0DB1               	rlf	??_I2C_Master_Init,f
  6144  1E9C  0DB2               	rlf	??_I2C_Master_Init+1,f
  6145  1E9D  0DB3               	rlf	??_I2C_Master_Init+2,f
  6146  1E9E  0DB4               	rlf	??_I2C_Master_Init+3,f
  6147  1E9F  3EFF               	addlw	-1
  6148  1EA0  1D03               	skipz
  6149  1EA1  2E9A               	goto	u6115
  6150  1EA2  0834               	movf	??_I2C_Master_Init+3,w
  6151  1EA3  00A3               	movwf	___lldiv@divisor+3
  6152  1EA4  0833               	movf	??_I2C_Master_Init+2,w
  6153  1EA5  00A2               	movwf	___lldiv@divisor+2
  6154  1EA6  0832               	movf	??_I2C_Master_Init+1,w
  6155  1EA7  00A1               	movwf	___lldiv@divisor+1
  6156  1EA8  0831               	movf	??_I2C_Master_Init,w
  6157  1EA9  00A0               	movwf	___lldiv@divisor
  6158  1EAA  307A               	movlw	122
  6159  1EAB  01A7               	clrf	___lldiv@dividend+3
  6160  1EAC  00A6               	movwf	___lldiv@dividend+2
  6161  1EAD  3012               	movlw	18
  6162  1EAE  00A5               	movwf	___lldiv@dividend+1
  6163  1EAF  01A4               	clrf	___lldiv@dividend
  6164  1EB0  26B9               	fcall	___lldiv
  6165  1EB1  0820               	movf	?___lldiv,w
  6166  1EB2  3EFF               	addlw	255
  6167  1EB3  1683               	bsf	3,5	;RP0=1, select bank1
  6168  1EB4  0093               	movwf	19	;volatile
  6169                           
  6170                           ;I2C.c: 13:   SSPSTAT = 0;
  6171  1EB5  0194               	clrf	20	;volatile
  6172                           
  6173                           ;I2C.c: 14:   TRISC3 = 1;
  6174  1EB6  1587               	bsf	7,3	;volatile
  6175                           
  6176                           ;I2C.c: 15:   TRISC4 = 1;
  6177  1EB7  1607               	bsf	7,4	;volatile
  6178  1EB8  0008               	return
  6179  1EB9                     __end_of_I2C_Master_Init:	
  6180  1EB9                     __ptext13:	
  6181 ;; *************** function ___lldiv *****************
  6182 ;; Defined at:
  6183 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  divisor         4    0[BANK0 ] unsigned long 
  6186 ;;  dividend        4    4[BANK0 ] unsigned long 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  quotient        4    8[BANK0 ] unsigned long 
  6189 ;;  counter         1   12[BANK0 ] unsigned char 
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  4    0[BANK0 ] unsigned long 
  6192 ;; Registers used:
  6193 ;;		wreg, status,2, status,0
  6194 ;; Tracked objects:
  6195 ;;		On entry : 300/0
  6196 ;;		On exit  : 300/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6199 ;;      Params:         0       8       0       0       0
  6200 ;;      Locals:         0       5       0       0       0
  6201 ;;      Temps:          0       0       0       0       0
  6202 ;;      Totals:         0      13       0       0       0
  6203 ;;Total ram usage:       13 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:    1
  6206 ;; This function calls:
  6207 ;;		Nothing
  6208 ;; This function is called by:
  6209 ;;		_I2C_Master_Init
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           
  6214                           ;psect for function ___lldiv
  6215  1EB9                     ___lldiv:	
  6216                           
  6217                           ;incstack = 0
  6218                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6219  1EB9  01A8               	clrf	___lldiv@quotient
  6220  1EBA  01A9               	clrf	___lldiv@quotient+1
  6221  1EBB  01AA               	clrf	___lldiv@quotient+2
  6222  1EBC  01AB               	clrf	___lldiv@quotient+3
  6223  1EBD  0823               	movf	___lldiv@divisor+3,w
  6224  1EBE  0422               	iorwf	___lldiv@divisor+2,w
  6225  1EBF  0421               	iorwf	___lldiv@divisor+1,w
  6226  1EC0  0420               	iorwf	___lldiv@divisor,w
  6227  1EC1  1903               	skipnz
  6228  1EC2  2EF8               	goto	l6936
  6229  1EC3  01AC               	clrf	___lldiv@counter
  6230  1EC4                     L6:	
  6231  1EC4  0AAC               	incf	___lldiv@counter,f
  6232  1EC5  1BA3               	btfsc	___lldiv@divisor+3,7
  6233  1EC6  2ECD               	goto	l6924
  6234  1EC7  1003               	clrc
  6235  1EC8  0DA0               	rlf	___lldiv@divisor,f
  6236  1EC9  0DA1               	rlf	___lldiv@divisor+1,f
  6237  1ECA  0DA2               	rlf	___lldiv@divisor+2,f
  6238  1ECB  0DA3               	rlf	___lldiv@divisor+3,f
  6239  1ECC  2EC4               	goto	L6
  6240  1ECD                     l6924:	
  6241  1ECD  1003               	clrc
  6242  1ECE  0DA8               	rlf	___lldiv@quotient,f
  6243  1ECF  0DA9               	rlf	___lldiv@quotient+1,f
  6244  1ED0  0DAA               	rlf	___lldiv@quotient+2,f
  6245  1ED1  0DAB               	rlf	___lldiv@quotient+3,f
  6246  1ED2  0823               	movf	___lldiv@divisor+3,w
  6247  1ED3  0227               	subwf	___lldiv@dividend+3,w
  6248  1ED4  1D03               	skipz
  6249  1ED5  2EE0               	goto	u6095
  6250  1ED6  0822               	movf	___lldiv@divisor+2,w
  6251  1ED7  0226               	subwf	___lldiv@dividend+2,w
  6252  1ED8  1D03               	skipz
  6253  1ED9  2EE0               	goto	u6095
  6254  1EDA  0821               	movf	___lldiv@divisor+1,w
  6255  1EDB  0225               	subwf	___lldiv@dividend+1,w
  6256  1EDC  1D03               	skipz
  6257  1EDD  2EE0               	goto	u6095
  6258  1EDE  0820               	movf	___lldiv@divisor,w
  6259  1EDF  0224               	subwf	___lldiv@dividend,w
  6260  1EE0                     u6095:	
  6261  1EE0  1C03               	skipc
  6262  1EE1  2EF2               	goto	L7
  6263  1EE2  0820               	movf	___lldiv@divisor,w
  6264  1EE3  02A4               	subwf	___lldiv@dividend,f
  6265  1EE4  0821               	movf	___lldiv@divisor+1,w
  6266  1EE5  1C03               	skipc
  6267  1EE6  0F21               	incfsz	___lldiv@divisor+1,w
  6268  1EE7  02A5               	subwf	___lldiv@dividend+1,f
  6269  1EE8  0822               	movf	___lldiv@divisor+2,w
  6270  1EE9  1C03               	skipc
  6271  1EEA  0F22               	incfsz	___lldiv@divisor+2,w
  6272  1EEB  02A6               	subwf	___lldiv@dividend+2,f
  6273  1EEC  0823               	movf	___lldiv@divisor+3,w
  6274  1EED  1C03               	skipc
  6275  1EEE  0F23               	incfsz	___lldiv@divisor+3,w
  6276  1EEF  02A7               	subwf	___lldiv@dividend+3,f
  6277  1EF0  1428               	bsf	___lldiv@quotient,0
  6278  1EF1  1003               	clrc
  6279  1EF2                     L7:	
  6280  1EF2  0CA3               	rrf	___lldiv@divisor+3,f
  6281  1EF3  0CA2               	rrf	___lldiv@divisor+2,f
  6282  1EF4  0CA1               	rrf	___lldiv@divisor+1,f
  6283  1EF5  0CA0               	rrf	___lldiv@divisor,f
  6284  1EF6  0BAC               	decfsz	___lldiv@counter,f
  6285  1EF7  2ECD               	goto	l6924
  6286  1EF8                     l6936:	
  6287  1EF8  082B               	movf	___lldiv@quotient+3,w
  6288  1EF9  00A3               	movwf	?___lldiv+3
  6289  1EFA  082A               	movf	___lldiv@quotient+2,w
  6290  1EFB  00A2               	movwf	?___lldiv+2
  6291  1EFC  0829               	movf	___lldiv@quotient+1,w
  6292  1EFD  00A1               	movwf	?___lldiv+1
  6293  1EFE  0828               	movf	___lldiv@quotient,w
  6294  1EFF  00A0               	movwf	?___lldiv
  6295  1F00  0008               	return
  6296  1F01                     __end_of___lldiv:	
  6297                           
  6298                           	psect	text15
  6299  1C72                     __ptext15:	
  6300 ;; *************** function _strcpy *****************
  6301 ;; Defined at:
  6302 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;  to              1    wreg     PTR unsigned char 
  6305 ;;		 -> texto(16), 
  6306 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  6307 ;;		 -> STR_2(1), 
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;  to              1    2[BANK0 ] PTR unsigned char 
  6310 ;;		 -> texto(16), 
  6311 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  6312 ;;		 -> texto(16), 
  6313 ;; Return value:  Size  Location     Type
  6314 ;;                  1    wreg      PTR unsigned char 
  6315 ;; Registers used:
  6316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6317 ;; Tracked objects:
  6318 ;;		On entry : B00/0
  6319 ;;		On exit  : B00/800
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6322 ;;      Params:         0       1       0       0       0
  6323 ;;      Locals:         0       2       0       0       0
  6324 ;;      Temps:          0       1       0       0       0
  6325 ;;      Totals:         0       4       0       0       0
  6326 ;;Total ram usage:        4 bytes
  6327 ;; Hardware stack levels used:    2
  6328 ;; Hardware stack levels required when called:    1
  6329 ;; This function calls:
  6330 ;;		Nothing
  6331 ;; This function is called by:
  6332 ;;		_Decodify_Command
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           
  6337                           ;psect for function _strcpy
  6338  1C72                     _strcpy:	
  6339                           
  6340                           ;incstack = 0
  6341                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  6342                           ;strcpy@to stored from wreg
  6343  1C72  00A2               	movwf	strcpy@to
  6344  1C73  00A3               	movwf	strcpy@cp
  6345  1C74                     l5186:	
  6346  1C74  0820               	movf	strcpy@from,w
  6347  1C75  0084               	movwf	4
  6348  1C76  160A  158A  200A  160A  158A  	fcall	stringdir
  6349  1C7B  00A1               	movwf	??_strcpy
  6350  1C7C  0823               	movf	strcpy@cp,w
  6351  1C7D  0084               	movwf	4
  6352  1C7E  0821               	movf	??_strcpy,w
  6353  1C7F  1783               	bsf	3,7	;select IRP bank2
  6354  1C80  0080               	movwf	0
  6355  1C81  0800               	movf	0,w
  6356  1C82  1903               	btfsc	3,2
  6357  1C83  0008               	return
  6358  1C84  0AA3               	incf	strcpy@cp,f
  6359  1C85  0AA0               	incf	strcpy@from,f
  6360  1C86  2C74               	goto	l5186
  6361  1C87                     __end_of_strcpy:	
  6362                           
  6363                           	psect	text18
  6364  1E19                     __ptext18:	
  6365 ;; *************** function _utoa *****************
  6366 ;; Defined at:
  6367 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;  buf             1    wreg     PTR unsigned char 
  6370 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6371 ;;  val             2    7[BANK0 ] unsigned int 
  6372 ;;  base            2    9[BANK0 ] int 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  6375 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  6376 ;;  v               2   11[BANK0 ] unsigned int 
  6377 ;;  c               1   13[BANK0 ] unsigned char 
  6378 ;; Return value:  Size  Location     Type
  6379 ;;                  1    wreg      PTR unsigned char 
  6380 ;; Registers used:
  6381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6382 ;; Tracked objects:
  6383 ;;		On entry : 300/0
  6384 ;;		On exit  : B00/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6387 ;;      Params:         0       4       0       0       0
  6388 ;;      Locals:         0       4       0       0       0
  6389 ;;      Temps:          0       0       0       0       0
  6390 ;;      Totals:         0       8       0       0       0
  6391 ;;Total ram usage:        8 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; Hardware stack levels required when called:    2
  6394 ;; This function calls:
  6395 ;;		___lwdiv
  6396 ;;		___lwmod
  6397 ;; This function is called by:
  6398 ;;		_itoa
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           
  6403                           ;psect for function _utoa
  6404  1E19                     _utoa:	
  6405                           
  6406                           ;incstack = 0
  6407                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6408                           ;utoa@buf stored from wreg
  6409  1E19  00AE               	movwf	utoa@buf
  6410  1E1A  0828               	movf	utoa@val+1,w
  6411  1E1B  00AC               	movwf	utoa@v+1
  6412  1E1C  0827               	movf	utoa@val,w
  6413  1E1D  00AB               	movwf	utoa@v
  6414  1E1E                     l6526:	
  6415  1E1E  082A               	movf	utoa@base+1,w
  6416  1E1F  00A1               	movwf	___lwdiv@divisor+1
  6417  1E20  0829               	movf	utoa@base,w
  6418  1E21  00A0               	movwf	___lwdiv@divisor
  6419  1E22  082C               	movf	utoa@v+1,w
  6420  1E23  00A3               	movwf	___lwdiv@dividend+1
  6421  1E24  082B               	movf	utoa@v,w
  6422  1E25  00A2               	movwf	___lwdiv@dividend
  6423  1E26  160A  118A  2654  160A  158A  	fcall	___lwdiv
  6424  1E2B  0821               	movf	?___lwdiv+1,w
  6425  1E2C  00AC               	movwf	utoa@v+1
  6426  1E2D  0820               	movf	?___lwdiv,w
  6427  1E2E  00AB               	movwf	utoa@v
  6428  1E2F  0AAE               	incf	utoa@buf,f
  6429  1E30  042C               	iorwf	utoa@v+1,w
  6430  1E31  1D03               	btfss	3,2
  6431  1E32  2E1E               	goto	l6526
  6432  1E33  082E               	movf	utoa@buf,w
  6433  1E34  0084               	movwf	4
  6434  1E35  1383               	bcf	3,7	;select IRP bank0
  6435  1E36  0180               	clrf	0
  6436  1E37  03AE               	decf	utoa@buf,f
  6437  1E38                     l6536:	
  6438  1E38  082A               	movf	utoa@base+1,w
  6439  1E39  00A1               	movwf	___lwmod@divisor+1
  6440  1E3A  0829               	movf	utoa@base,w
  6441  1E3B  00A0               	movwf	___lwmod@divisor
  6442  1E3C  0828               	movf	utoa@val+1,w
  6443  1E3D  00A3               	movwf	___lwmod@dividend+1
  6444  1E3E  0827               	movf	utoa@val,w
  6445  1E3F  00A2               	movwf	___lwmod@dividend
  6446  1E40  2668               	fcall	___lwmod
  6447  1E41  0820               	movf	?___lwmod,w
  6448  1E42  00AD               	movwf	utoa@c
  6449  1E43  082A               	movf	utoa@base+1,w
  6450  1E44  00A1               	movwf	___lwdiv@divisor+1
  6451  1E45  0829               	movf	utoa@base,w
  6452  1E46  00A0               	movwf	___lwdiv@divisor
  6453  1E47  0828               	movf	utoa@val+1,w
  6454  1E48  00A3               	movwf	___lwdiv@dividend+1
  6455  1E49  0827               	movf	utoa@val,w
  6456  1E4A  00A2               	movwf	___lwdiv@dividend
  6457  1E4B  160A  118A  2654  160A  158A  	fcall	___lwdiv
  6458  1E50  0821               	movf	?___lwdiv+1,w
  6459  1E51  00A8               	movwf	utoa@val+1
  6460  1E52  0820               	movf	?___lwdiv,w
  6461  1E53  00A7               	movwf	utoa@val
  6462  1E54  300A               	movlw	10
  6463  1E55  022D               	subwf	utoa@c,w
  6464  1E56  1C03               	skipc
  6465  1E57  2E5A               	goto	l1453
  6466  1E58  3007               	movlw	7
  6467  1E59  07AD               	addwf	utoa@c,f
  6468  1E5A                     l1453:	
  6469  1E5A  3030               	movlw	48
  6470  1E5B  07AD               	addwf	utoa@c,f
  6471  1E5C  082E               	movf	utoa@buf,w
  6472  1E5D  0084               	movwf	4
  6473  1E5E  082D               	movf	utoa@c,w
  6474  1E5F  1383               	bcf	3,7	;select IRP bank0
  6475  1E60  0080               	movwf	0
  6476  1E61  03AE               	decf	utoa@buf,f
  6477  1E62  0827               	movf	utoa@val,w
  6478  1E63  0428               	iorwf	utoa@val+1,w
  6479  1E64  1D03               	btfss	3,2
  6480  1E65  2E38               	goto	l6536
  6481                           
  6482                           ;	Return value of _utoa is never used
  6483  1E66  0AAE               	incf	utoa@buf,f
  6484  1E67  0008               	return
  6485  1E68                     __end_of_utoa:	
  6486  1E68                     __ptext19:	
  6487 ;; *************** function ___lwmod *****************
  6488 ;; Defined at:
  6489 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  divisor         2    0[BANK0 ] unsigned int 
  6492 ;;  dividend        2    2[BANK0 ] unsigned int 
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  counter         1    4[BANK0 ] unsigned char 
  6495 ;; Return value:  Size  Location     Type
  6496 ;;                  2    0[BANK0 ] unsigned int 
  6497 ;; Registers used:
  6498 ;;		wreg, status,2, status,0
  6499 ;; Tracked objects:
  6500 ;;		On entry : 300/0
  6501 ;;		On exit  : 300/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6504 ;;      Params:         0       4       0       0       0
  6505 ;;      Locals:         0       1       0       0       0
  6506 ;;      Temps:          0       0       0       0       0
  6507 ;;      Totals:         0       5       0       0       0
  6508 ;;Total ram usage:        5 bytes
  6509 ;; Hardware stack levels used:    1
  6510 ;; Hardware stack levels required when called:    1
  6511 ;; This function calls:
  6512 ;;		Nothing
  6513 ;; This function is called by:
  6514 ;;		_utoa
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518                           
  6519                           ;psect for function ___lwmod
  6520  1E68                     ___lwmod:	
  6521                           
  6522                           ;incstack = 0
  6523                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6524  1E68  0820               	movf	___lwmod@divisor,w
  6525  1E69  0421               	iorwf	___lwmod@divisor+1,w
  6526  1E6A  1903               	btfsc	3,2
  6527  1E6B  2E87               	goto	l6306
  6528  1E6C  01A4               	clrf	___lwmod@counter
  6529  1E6D                     L12:	
  6530  1E6D  0AA4               	incf	___lwmod@counter,f
  6531  1E6E  1BA1               	btfsc	___lwmod@divisor+1,7
  6532  1E6F  2E74               	goto	l6298
  6533  1E70  1003               	clrc
  6534  1E71  0DA0               	rlf	___lwmod@divisor,f
  6535  1E72  0DA1               	rlf	___lwmod@divisor+1,f
  6536  1E73  2E6D               	goto	L12
  6537  1E74                     l6298:	
  6538  1E74  0821               	movf	___lwmod@divisor+1,w
  6539  1E75  0223               	subwf	___lwmod@dividend+1,w
  6540  1E76  1D03               	skipz
  6541  1E77  2E7A               	goto	u5615
  6542  1E78  0820               	movf	___lwmod@divisor,w
  6543  1E79  0222               	subwf	___lwmod@dividend,w
  6544  1E7A                     u5615:	
  6545  1E7A  1C03               	skipc
  6546  1E7B  2E83               	goto	L13
  6547  1E7C  0820               	movf	___lwmod@divisor,w
  6548  1E7D  02A2               	subwf	___lwmod@dividend,f
  6549  1E7E  0821               	movf	___lwmod@divisor+1,w
  6550  1E7F  1C03               	skipc
  6551  1E80  03A3               	decf	___lwmod@dividend+1,f
  6552  1E81  02A3               	subwf	___lwmod@dividend+1,f
  6553  1E82  1003               	clrc
  6554  1E83                     L13:	
  6555  1E83  0CA1               	rrf	___lwmod@divisor+1,f
  6556  1E84  0CA0               	rrf	___lwmod@divisor,f
  6557  1E85  0BA4               	decfsz	___lwmod@counter,f
  6558  1E86  2E74               	goto	l6298
  6559  1E87                     l6306:	
  6560  1E87  0823               	movf	___lwmod@dividend+1,w
  6561  1E88  00A1               	movwf	?___lwmod+1
  6562  1E89  0822               	movf	___lwmod@dividend,w
  6563  1E8A  00A0               	movwf	?___lwmod
  6564  1E8B  0008               	return
  6565  1E8C                     __end_of___lwmod:	
  6566                           
  6567                           	psect	text20
  6568  07A5                     __ptext20:	
  6569 ;; *************** function _USART_to_Protocol *****************
  6570 ;; Defined at:
  6571 ;;		line 77 in file "usart.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  usart_protoc    1    wreg     PTR struct .
  6574 ;;		 -> usart_protocol(16), 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  6577 ;;		 -> usart_protocol(16), 
  6578 ;;  i               2    2[BANK0 ] int 
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  1    wreg      void 
  6581 ;; Registers used:
  6582 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6583 ;; Tracked objects:
  6584 ;;		On entry : 300/300
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6588 ;;      Params:         0       0       0       0       0
  6589 ;;      Locals:         0       3       0       0       0
  6590 ;;      Temps:          0       2       0       0       0
  6591 ;;      Totals:         0       5       0       0       0
  6592 ;;Total ram usage:        5 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; Hardware stack levels required when called:    1
  6595 ;; This function calls:
  6596 ;;		Nothing
  6597 ;; This function is called by:
  6598 ;;		_Decodify_Command
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           
  6602                           
  6603                           ;psect for function _USART_to_Protocol
  6604  07A5                     _USART_to_Protocol:	
  6605                           
  6606                           ;incstack = 0
  6607                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  6608                           ;USART_to_Protocol@usart_protocol stored from wreg
  6609  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  6610  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  6611  07A7  00A4               	movwf	USART_to_Protocol@usart_protocol
  6612                           
  6613                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  6614  07A8  0084               	movwf	4
  6615  07A9  1703               	bsf	3,6	;RP1=1, select bank2
  6616  07AA  0851               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  6617  07AB  1783               	bsf	3,7	;select IRP bank2
  6618  07AC  0080               	movwf	0
  6619  07AD  0A84               	incf	4,f
  6620  07AE  0850               	movf	_usart_buffer^(0+256),w	;volatile
  6621  07AF  0080               	movwf	0
  6622                           
  6623                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  6624  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  6625  07B1  0824               	movf	USART_to_Protocol@usart_protocol,w
  6626  07B2  3E02               	addlw	2
  6627  07B3  0084               	movwf	4
  6628  07B4  1703               	bsf	3,6	;RP1=1, select bank2
  6629  07B5  0852               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  6630  07B6  0080               	movwf	0
  6631                           
  6632                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  6633  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  6634  07B8  0824               	movf	USART_to_Protocol@usart_protocol,w
  6635  07B9  3E03               	addlw	3
  6636  07BA  0084               	movwf	4
  6637  07BB  1703               	bsf	3,6	;RP1=1, select bank2
  6638  07BC  0853               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  6639  07BD  0080               	movwf	0
  6640                           
  6641                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  6642  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  6643  07BF  0824               	movf	USART_to_Protocol@usart_protocol,w
  6644  07C0  3E04               	addlw	4
  6645  07C1  0084               	movwf	4
  6646  07C2  1703               	bsf	3,6	;RP1=1, select bank2
  6647  07C3  0854               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  6648  07C4  0080               	movwf	0
  6649                           
  6650                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  6651  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  6652  07C6  0824               	movf	USART_to_Protocol@usart_protocol,w
  6653  07C7  3E05               	addlw	5
  6654  07C8  0084               	movwf	4
  6655  07C9  1703               	bsf	3,6	;RP1=1, select bank2
  6656  07CA  0855               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  6657  07CB  0080               	movwf	0
  6658                           
  6659                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  6660  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  6661  07CD  01A2               	clrf	USART_to_Protocol@i
  6662  07CE  01A3               	clrf	USART_to_Protocol@i+1
  6663  07CF                     l4916:	
  6664  07CF  0824               	movf	USART_to_Protocol@usart_protocol,w
  6665  07D0  3E05               	addlw	5
  6666  07D1  0084               	movwf	4
  6667  07D2  0823               	movf	USART_to_Protocol@i+1,w
  6668  07D3  3A80               	xorlw	128
  6669  07D4  00A0               	movwf	??_USART_to_Protocol
  6670  07D5  3080               	movlw	128
  6671  07D6  0220               	subwf	??_USART_to_Protocol,w
  6672  07D7  1D03               	skipz
  6673  07D8  2FDB               	goto	u4215
  6674  07D9  0800               	movf	0,w
  6675  07DA  0222               	subwf	USART_to_Protocol@i,w
  6676  07DB                     u4215:	
  6677  07DB  1803               	btfsc	3,0
  6678  07DC  0008               	return
  6679                           
  6680                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  6681  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  6682  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  6683  07DF  0822               	movf	USART_to_Protocol@i,w
  6684  07E0  3E56               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  6685  07E1  0084               	movwf	4
  6686  07E2  1783               	bsf	3,7	;select IRP bank2
  6687  07E3  0800               	movf	0,w
  6688  07E4  00A0               	movwf	??_USART_to_Protocol
  6689  07E5  0822               	movf	USART_to_Protocol@i,w
  6690  07E6  0724               	addwf	USART_to_Protocol@usart_protocol,w
  6691  07E7  00A1               	movwf	??_USART_to_Protocol+1
  6692  07E8  3E06               	addlw	6
  6693  07E9  0084               	movwf	4
  6694  07EA  0820               	movf	??_USART_to_Protocol,w
  6695  07EB  0080               	movwf	0
  6696  07EC  0AA2               	incf	USART_to_Protocol@i,f
  6697  07ED  1903               	skipnz
  6698  07EE  0AA3               	incf	USART_to_Protocol@i+1,f
  6699  07EF  2FCF               	goto	l4916
  6700  07F0                     __end_of_USART_to_Protocol:	
  6701                           
  6702                           	psect	text21
  6703  1CBD                     __ptext21:	
  6704 ;; *************** function _USART_put_buffer *****************
  6705 ;; Defined at:
  6706 ;;		line 99 in file "usart.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  vetor           1    wreg     PTR unsigned char 
  6709 ;;		 -> buffer(64), 
  6710 ;;  size            2    1[BANK0 ] unsigned int 
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;  vetor           1    7[BANK0 ] PTR unsigned char 
  6713 ;;		 -> buffer(64), 
  6714 ;;  ptr             1    6[BANK0 ] PTR unsigned char 
  6715 ;;		 -> USART_put_buffer@vetor(1), 
  6716 ;;  loop            1    5[BANK0 ] unsigned char 
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  1    wreg      void 
  6719 ;; Registers used:
  6720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6721 ;; Tracked objects:
  6722 ;;		On entry : 300/0
  6723 ;;		On exit  : 300/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6726 ;;      Params:         0       2       0       0       0
  6727 ;;      Locals:         0       3       0       0       0
  6728 ;;      Temps:          0       2       0       0       0
  6729 ;;      Totals:         0       7       0       0       0
  6730 ;;Total ram usage:        7 bytes
  6731 ;; Hardware stack levels used:    1
  6732 ;; Hardware stack levels required when called:    2
  6733 ;; This function calls:
  6734 ;;		_USART_putc
  6735 ;; This function is called by:
  6736 ;;		_Decodify_Command
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           
  6741                           ;psect for function _USART_put_buffer
  6742  1CBD                     _USART_put_buffer:	
  6743                           
  6744                           ;incstack = 0
  6745                           ; Regs used in _USART_put_buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6746                           ;USART_put_buffer@vetor stored from wreg
  6747  1CBD  00A7               	movwf	USART_put_buffer@vetor
  6748  1CBE  3027               	movlw	(low (USART_put_buffer@vetor| 0))& (0+255)
  6749                           
  6750                           ;usart.c: 99: void USART_put_buffer(char *vetor, unsigned int size);usart.c: 100: {;usar
      +                          t.c: 101:     unsigned char loop=0;
  6751  1CBF  01A5               	clrf	USART_put_buffer@loop
  6752                           
  6753                           ;usart.c: 102:     unsigned char *ptr;;usart.c: 103:     ptr =(unsigned char *) &vetor;
  6754  1CC0  00A6               	movwf	USART_put_buffer@ptr
  6755  1CC1                     l4970:	
  6756                           ;usart.c: 105:     while(loop<size)
  6757                           
  6758                           
  6759                           ;usart.c: 105:     while(loop<size)
  6760  1CC1  0825               	movf	USART_put_buffer@loop,w
  6761  1CC2  00A3               	movwf	??_USART_put_buffer
  6762  1CC3  01A4               	clrf	??_USART_put_buffer+1
  6763  1CC4  0822               	movf	USART_put_buffer@size+1,w
  6764  1CC5  0224               	subwf	??_USART_put_buffer+1,w
  6765  1CC6  1D03               	skipz
  6766  1CC7  2CCA               	goto	u4245
  6767  1CC8  0821               	movf	USART_put_buffer@size,w
  6768  1CC9  0223               	subwf	??_USART_put_buffer,w
  6769  1CCA                     u4245:	
  6770  1CCA  1803               	btfsc	3,0
  6771  1CCB  0008               	return
  6772                           
  6773                           ;usart.c: 106:     {;usart.c: 107:         USART_putc(*(ptr));
  6774  1CCC  0826               	movf	USART_put_buffer@ptr,w
  6775  1CCD  0084               	movwf	4
  6776  1CCE  1383               	bcf	3,7	;select IRP bank0
  6777  1CCF  0800               	movf	0,w
  6778  1CD0  120A  158A  23DD  160A  158A  	fcall	_USART_putc
  6779                           
  6780                           ;usart.c: 108:         ptr++;
  6781  1CD5  1283               	bcf	3,5	;RP0=0, select bank0
  6782  1CD6  0AA6               	incf	USART_put_buffer@ptr,f
  6783                           
  6784                           ;usart.c: 109:         loop++;
  6785  1CD7  0AA5               	incf	USART_put_buffer@loop,f
  6786  1CD8  2CC1               	goto	l4970
  6787  1CD9                     __end_of_USART_put_buffer:	
  6788                           
  6789                           	psect	text24
  6790  1CD9                     __ptext24:	
  6791 ;; *************** function _USART_put_string *****************
  6792 ;; Defined at:
  6793 ;;		line 168 in file "usart.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  6796 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  6799 ;;		 -> STR_8(3), texto(16), STR_1(7), 
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6804 ;; Tracked objects:
  6805 ;;		On entry : 300/0
  6806 ;;		On exit  : 300/100
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6809 ;;      Params:         0       2       0       0       0
  6810 ;;      Locals:         0       2       0       0       0
  6811 ;;      Temps:          0       0       0       0       0
  6812 ;;      Totals:         0       4       0       0       0
  6813 ;;Total ram usage:        4 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; Hardware stack levels required when called:    2
  6816 ;; This function calls:
  6817 ;;		_USART_putc
  6818 ;; This function is called by:
  6819 ;;		_Decodify_Command
  6820 ;;		_Send_Reply_OK
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           
  6825                           ;psect for function _USART_put_string
  6826  1CD9                     _USART_put_string:	
  6827  1CD9                     l6344:	
  6828                           ;incstack = 0
  6829                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6830                           
  6831                           
  6832                           ;usart.c: 168: void USART_put_string(char *vetor);usart.c: 169: {;usart.c: 170:     char
      +                           *ptr;;usart.c: 171:     ptr=vetor;
  6833  1CD9  0821               	movf	USART_put_string@vetor,w
  6834  1CDA  00A3               	movwf	USART_put_string@ptr
  6835  1CDB  0822               	movf	USART_put_string@vetor+1,w
  6836  1CDC  00A4               	movwf	USART_put_string@ptr+1
  6837  1CDD                     l6350:	
  6838                           ;usart.c: 172:     while(*(ptr)){
  6839                           
  6840                           
  6841                           ;usart.c: 172:     while(*(ptr)){
  6842  1CDD  0824               	movf	USART_put_string@ptr+1,w
  6843  1CDE  00FF               	movwf	127
  6844  1CDF  0823               	movf	USART_put_string@ptr,w
  6845  1CE0  0084               	movwf	4
  6846  1CE1  160A  158A  2000  160A  158A  	fcall	stringtab
  6847  1CE6  3A00               	xorlw	0
  6848  1CE7  1903               	btfsc	3,2
  6849  1CE8  2CFC               	goto	l6352
  6850                           
  6851                           ;usart.c: 173:         USART_putc(*(ptr));
  6852  1CE9  0824               	movf	USART_put_string@ptr+1,w
  6853  1CEA  00FF               	movwf	127
  6854  1CEB  0823               	movf	USART_put_string@ptr,w
  6855  1CEC  0084               	movwf	4
  6856  1CED  160A  158A  2000  160A  158A  	fcall	stringtab
  6857  1CF2  120A  158A  23DD  160A  158A  	fcall	_USART_putc
  6858                           
  6859                           ;usart.c: 174:         ptr++;
  6860  1CF7  1283               	bcf	3,5	;RP0=0, select bank0
  6861  1CF8  0AA3               	incf	USART_put_string@ptr,f
  6862  1CF9  1903               	skipnz
  6863  1CFA  0AA4               	incf	USART_put_string@ptr+1,f
  6864  1CFB  2CDD               	goto	l6350
  6865  1CFC                     l6352:	
  6866                           
  6867                           ;usart.c: 176:     USART_putc(*(ptr));
  6868  1CFC  0824               	movf	USART_put_string@ptr+1,w
  6869  1CFD  00FF               	movwf	127
  6870  1CFE  0823               	movf	USART_put_string@ptr,w
  6871  1CFF  0084               	movwf	4
  6872  1D00  160A  158A  2000   	fcall	stringtab
  6873  1D03  120A  158A  2BDD   	ljmp	_USART_putc
  6874  1D06                     __end_of_USART_put_string:	
  6875                           
  6876                           	psect	text25
  6877  0034                     __ptext25:	
  6878 ;; *************** function _Save_Log *****************
  6879 ;; Defined at:
  6880 ;;		line 1000 in file "SlaveLiofilizadorVer1.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;  add_memory      4   17[BANK1 ] unsigned long 
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;		None
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  1    wreg      void 
  6887 ;; Registers used:
  6888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6889 ;; Tracked objects:
  6890 ;;		On entry : 300/100
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6894 ;;      Params:         0       0       4       0       0
  6895 ;;      Locals:         0       0       0       0       0
  6896 ;;      Temps:          0       0       0       0       0
  6897 ;;      Totals:         0       0       4       0       0
  6898 ;;Total ram usage:        4 bytes
  6899 ;; Hardware stack levels used:    1
  6900 ;; Hardware stack levels required when called:    5
  6901 ;; This function calls:
  6902 ;;		_EEPROM_24C1025_Write_Int
  6903 ;;		___flmul
  6904 ;;		___fltol
  6905 ;; This function is called by:
  6906 ;;		_Decodify_Command
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           
  6911                           ;psect for function _Save_Log
  6912  0034                     _Save_Log:	
  6913                           
  6914                           ;SlaveLiofilizadorVer1.c: 1001:      EEPROM_24C1025_Write_Int(0x00, add_memory, Temperat
      +                          ura0*10);
  6915                           
  6916                           ;incstack = 0
  6917                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6918  0034  22D3  120A  118A   	fcall	PL38	;call to abstracted procedure
  6919  0037  0817               	movf	(_Temperatura0+3)^(0+384),w
  6920  0038  1283               	bcf	3,5	;RP0=0, select bank0
  6921  0039  1303               	bcf	3,6	;RP1=0, select bank0
  6922  003A  00DC               	movwf	___flmul@a+3
  6923  003B  1683               	bsf	3,5	;RP0=1, select bank3
  6924  003C  1703               	bsf	3,6	;RP1=1, select bank3
  6925  003D  0816               	movf	(_Temperatura0+2)^(0+384),w
  6926  003E  1283               	bcf	3,5	;RP0=0, select bank0
  6927  003F  1303               	bcf	3,6	;RP1=0, select bank0
  6928  0040  00DB               	movwf	___flmul@a+2
  6929  0041  1683               	bsf	3,5	;RP0=1, select bank3
  6930  0042  1703               	bsf	3,6	;RP1=1, select bank3
  6931  0043  0815               	movf	(_Temperatura0+1)^(0+384),w
  6932  0044  1283               	bcf	3,5	;RP0=0, select bank0
  6933  0045  1303               	bcf	3,6	;RP1=0, select bank0
  6934  0046  00DA               	movwf	___flmul@a+1
  6935  0047  1683               	bsf	3,5	;RP0=1, select bank3
  6936  0048  1703               	bsf	3,6	;RP1=1, select bank3
  6937  0049  0814               	movf	_Temperatura0^(0+384),w
  6938  004A  22DD  120A  118A   	fcall	PL40	;call to abstracted procedure
  6939  004D  208A  120A  118A   	fcall	___flmul
  6940  0050  22B5  120A  118A   	fcall	PL20	;call to abstracted procedure
  6941  0053  2218  120A  118A   	fcall	___fltol
  6942  0056  1683               	bsf	3,5	;RP0=1, select bank1
  6943  0057  0821               	movf	(?___fltol+1)^(0+128),w
  6944  0058  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  6945  0059  0820               	movf	?___fltol^(0+128),w
  6946  005A  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  6947  005B  3000               	movlw	0
  6948  005C  21F9  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
  6949                           
  6950                           ;SlaveLiofilizadorVer1.c: 1002:      EEPROM_24C1025_Write_Int(0x01, add_memory, Temperat
      +                          ura1*10);
  6951  005F  1683               	bsf	3,5	;RP0=1, select bank1
  6952  0060  1303               	bcf	3,6	;RP1=0, select bank1
  6953  0061  22D3  120A  118A   	fcall	PL38	;call to abstracted procedure
  6954  0064  0813               	movf	(_Temperatura1+3)^(0+384),w
  6955  0065  1283               	bcf	3,5	;RP0=0, select bank0
  6956  0066  1303               	bcf	3,6	;RP1=0, select bank0
  6957  0067  00DC               	movwf	___flmul@a+3
  6958  0068  1683               	bsf	3,5	;RP0=1, select bank3
  6959  0069  1703               	bsf	3,6	;RP1=1, select bank3
  6960  006A  0812               	movf	(_Temperatura1+2)^(0+384),w
  6961  006B  1283               	bcf	3,5	;RP0=0, select bank0
  6962  006C  1303               	bcf	3,6	;RP1=0, select bank0
  6963  006D  00DB               	movwf	___flmul@a+2
  6964  006E  1683               	bsf	3,5	;RP0=1, select bank3
  6965  006F  1703               	bsf	3,6	;RP1=1, select bank3
  6966  0070  0811               	movf	(_Temperatura1+1)^(0+384),w
  6967  0071  1283               	bcf	3,5	;RP0=0, select bank0
  6968  0072  1303               	bcf	3,6	;RP1=0, select bank0
  6969  0073  00DA               	movwf	___flmul@a+1
  6970  0074  1683               	bsf	3,5	;RP0=1, select bank3
  6971  0075  1703               	bsf	3,6	;RP1=1, select bank3
  6972  0076  0810               	movf	_Temperatura1^(0+384),w
  6973  0077  22DD  120A  118A   	fcall	PL40	;call to abstracted procedure
  6974  007A  208A  120A  118A   	fcall	___flmul
  6975  007D  22B5  120A  118A   	fcall	PL20	;call to abstracted procedure
  6976  0080  2218  120A  118A   	fcall	___fltol
  6977  0083  1683               	bsf	3,5	;RP0=1, select bank1
  6978  0084  0821               	movf	(?___fltol+1)^(0+128),w
  6979  0085  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  6980  0086  0820               	movf	?___fltol^(0+128),w
  6981  0087  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  6982  0088  3001               	movlw	1
  6983  0089  29F9               	ljmp	_EEPROM_24C1025_Write_Int
  6984  008A                     __end_of_Save_Log:	
  6985  008A                     __ptext27:	
  6986 ;; *************** function ___flmul *****************
  6987 ;; Defined at:
  6988 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;  b               4   53[BANK0 ] long 
  6991 ;;  a               4   57[BANK0 ] long 
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;  prod            4   72[BANK0 ] struct .
  6994 ;;  grs             4   68[BANK0 ] unsigned long 
  6995 ;;  temp            2   76[BANK0 ] struct .
  6996 ;;  bexp            1   67[BANK0 ] unsigned char 
  6997 ;;  aexp            1   66[BANK0 ] unsigned char 
  6998 ;;  sign            1   65[BANK0 ] unsigned char 
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  4   53[BANK0 ] unsigned char 
  7001 ;; Registers used:
  7002 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7003 ;; Tracked objects:
  7004 ;;		On entry : 300/0
  7005 ;;		On exit  : 300/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7008 ;;      Params:         0       8       0       0       0
  7009 ;;      Locals:         0      13       0       0       0
  7010 ;;      Temps:          0       4       0       0       0
  7011 ;;      Totals:         0      25       0       0       0
  7012 ;;Total ram usage:       25 bytes
  7013 ;; Hardware stack levels used:    1
  7014 ;; Hardware stack levels required when called:    2
  7015 ;; This function calls:
  7016 ;;		__Umul8_16
  7017 ;; This function is called by:
  7018 ;;		_Decodify_Command
  7019 ;;		_Save_Log
  7020 ;;		_ADC_Read_NTC
  7021 ;;		_log
  7022 ;;		_eval_poly
  7023 ;; This function uses a non-reentrant model
  7024 ;;
  7025                           
  7026                           
  7027                           ;psect for function ___flmul
  7028  008A                     ___flmul:	
  7029                           
  7030                           ;incstack = 0
  7031                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7032  008A  0858               	movf	___flmul@b+3,w
  7033  008B  00E1               	movwf	___flmul@sign
  7034  008C  3080               	movlw	128
  7035  008D  05E1               	andwf	___flmul@sign,f
  7036  008E  1003               	clrc
  7037  008F  0D58               	rlf	___flmul@b+3,w
  7038  0090  00E3               	movwf	___flmul@bexp
  7039  0091  1BD7               	btfsc	___flmul@b+2,7
  7040  0092  1463               	bsf	___flmul@bexp,0
  7041  0093  0863               	movf	___flmul@bexp,w
  7042  0094  1903               	btfsc	3,2
  7043  0095  289E               	goto	l1378
  7044  0096  0F63               	incfsz	___flmul@bexp,w
  7045  0097  289C               	goto	l1379
  7046  0098  01D5               	clrf	___flmul@b
  7047  0099  01D6               	clrf	___flmul@b+1
  7048  009A  01D7               	clrf	___flmul@b+2
  7049  009B  01D8               	clrf	___flmul@b+3
  7050  009C                     l1379:	
  7051  009C  17D7               	bsf	___flmul@b+2,7
  7052  009D  28A2               	goto	l6046
  7053  009E                     l1378:	
  7054  009E  01D5               	clrf	___flmul@b
  7055  009F  01D6               	clrf	___flmul@b+1
  7056  00A0  01D7               	clrf	___flmul@b+2
  7057  00A1  01D8               	clrf	___flmul@b+3
  7058  00A2                     l6046:	
  7059  00A2  085C               	movf	___flmul@a+3,w
  7060  00A3  3980               	andlw	128
  7061  00A4  06E1               	xorwf	___flmul@sign,f
  7062  00A5  1003               	clrc
  7063  00A6  0D5C               	rlf	___flmul@a+3,w
  7064  00A7  00E2               	movwf	___flmul@aexp
  7065  00A8  1BDB               	btfsc	___flmul@a+2,7
  7066  00A9  1462               	bsf	___flmul@aexp,0
  7067  00AA  0862               	movf	___flmul@aexp,w
  7068  00AB  1903               	btfsc	3,2
  7069  00AC  28B5               	goto	l1382
  7070  00AD  0F62               	incfsz	___flmul@aexp,w
  7071  00AE  28B3               	goto	l1383
  7072  00AF  01D9               	clrf	___flmul@a
  7073  00B0  01DA               	clrf	___flmul@a+1
  7074  00B1  01DB               	clrf	___flmul@a+2
  7075  00B2  01DC               	clrf	___flmul@a+3
  7076  00B3                     l1383:	
  7077  00B3  17DB               	bsf	___flmul@a+2,7
  7078  00B4  28B9               	goto	l6058
  7079  00B5                     l1382:	
  7080  00B5  01D9               	clrf	___flmul@a
  7081  00B6  01DA               	clrf	___flmul@a+1
  7082  00B7  01DB               	clrf	___flmul@a+2
  7083  00B8  01DC               	clrf	___flmul@a+3
  7084  00B9                     l6058:	
  7085  00B9  0862               	movf	___flmul@aexp,w
  7086  00BA  1D03               	btfss	3,2
  7087  00BB  0863               	movf	___flmul@bexp,w
  7088  00BC  1D03               	btfss	3,2
  7089  00BD  28C3               	goto	l6062
  7090  00BE  01D5               	clrf	?___flmul
  7091  00BF  01D6               	clrf	?___flmul+1
  7092  00C0  01D7               	clrf	?___flmul+2
  7093  00C1  01D8               	clrf	?___flmul+3
  7094  00C2  0008               	return
  7095  00C3                     l6062:	
  7096  00C3  0855               	movf	___flmul@b,w
  7097  00C4  00A0               	movwf	__Umul8_16@multiplicand
  7098  00C5  085B               	movf	___flmul@a+2,w
  7099  00C6  21DE  120A  118A   	fcall	__Umul8_16
  7100  00C9  0821               	movf	?__Umul8_16+1,w
  7101  00CA  00ED               	movwf	___flmul@temp+1
  7102  00CB  0820               	movf	?__Umul8_16,w
  7103  00CC  00EC               	movwf	___flmul@temp
  7104  00CD  00E4               	movwf	___flmul@grs
  7105  00CE  01E5               	clrf	___flmul@grs+1
  7106  00CF  01E6               	clrf	___flmul@grs+2
  7107  00D0  01E7               	clrf	___flmul@grs+3
  7108  00D1  086D               	movf	___flmul@temp+1,w
  7109  00D2  00E8               	movwf	___flmul@prod
  7110  00D3  01E9               	clrf	___flmul@prod+1
  7111  00D4  01EA               	clrf	___flmul@prod+2
  7112  00D5  01EB               	clrf	___flmul@prod+3
  7113  00D6  0856               	movf	___flmul@b+1,w
  7114  00D7  00A0               	movwf	__Umul8_16@multiplicand
  7115  00D8  085A               	movf	___flmul@a+1,w
  7116  00D9  21DE  120A  118A   	fcall	__Umul8_16
  7117  00DC  22A6  120A  118A   	fcall	PL16	;call to abstracted procedure
  7118  00DF  1803               	skipnc
  7119  00E0  07E9               	addwf	___flmul@prod+1,f
  7120  00E1  1803               	skipnc
  7121  00E2  07EA               	addwf	___flmul@prod+2,f
  7122  00E3  1803               	skipnc
  7123  00E4  07EB               	addwf	___flmul@prod+3,f
  7124  00E5  0857               	movf	___flmul@b+2,w
  7125  00E6  00A0               	movwf	__Umul8_16@multiplicand
  7126  00E7  0859               	movf	___flmul@a,w
  7127  00E8  21DE  120A  118A   	fcall	__Umul8_16
  7128  00EB  22A6  120A  118A   	fcall	PL16	;call to abstracted procedure
  7129  00EE  22C5  120A  118A   	fcall	PL24	;call to abstracted procedure
  7130  00F1  0856               	movf	___flmul@b+1,w
  7131  00F2  00A0               	movwf	__Umul8_16@multiplicand
  7132  00F3  0859               	movf	___flmul@a,w
  7133  00F4  21DE  120A  118A   	fcall	__Umul8_16
  7134  00F7  2272  120A  118A   	fcall	PL6	;call to abstracted procedure
  7135  00FA  1803               	skipnc
  7136  00FB  3E01               	addlw	1
  7137  00FC  1D03               	btfss	3,2
  7138  00FD  07E7               	addwf	___flmul@grs+3,f
  7139  00FE  0855               	movf	___flmul@b,w
  7140  00FF  00A0               	movwf	__Umul8_16@multiplicand
  7141  0100  085A               	movf	___flmul@a+1,w
  7142  0101  21DE  120A  118A   	fcall	__Umul8_16
  7143  0104  2272  120A  118A   	fcall	PL6	;call to abstracted procedure
  7144  0107  1803               	skipnc
  7145  0108  3E01               	addlw	1
  7146  0109  1D03               	btfss	3,2
  7147  010A  07E7               	addwf	___flmul@grs+3,f
  7148  010B  0866               	movf	___flmul@grs+2,w
  7149  010C  00E7               	movwf	___flmul@grs+3
  7150  010D  0865               	movf	___flmul@grs+1,w
  7151  010E  00E6               	movwf	___flmul@grs+2
  7152  010F  0864               	movf	___flmul@grs,w
  7153  0110  00E5               	movwf	___flmul@grs+1
  7154  0111  01E4               	clrf	___flmul@grs
  7155  0112  0855               	movf	___flmul@b,w
  7156  0113  00A0               	movwf	__Umul8_16@multiplicand
  7157  0114  0859               	movf	___flmul@a,w
  7158  0115  21DE  120A  118A   	fcall	__Umul8_16
  7159  0118  2272  120A  118A   	fcall	PL6	;call to abstracted procedure
  7160  011B  1803               	skipnc
  7161  011C  3E01               	addlw	1
  7162  011D  1D03               	btfss	3,2
  7163  011E  07E7               	addwf	___flmul@grs+3,f
  7164  011F  0856               	movf	___flmul@b+1,w
  7165  0120  00A0               	movwf	__Umul8_16@multiplicand
  7166  0121  085B               	movf	___flmul@a+2,w
  7167  0122  21DE  120A  118A   	fcall	__Umul8_16
  7168  0125  0821               	movf	?__Umul8_16+1,w
  7169  0126  228C  120A  118A   	fcall	PL8	;call to abstracted procedure
  7170  0129  2295  120A  118A   	fcall	PL12	;call to abstracted procedure
  7171  012C  22E7  120A  118A   	fcall	PL58	;call to abstracted procedure
  7172  012F  085A               	movf	___flmul@a+1,w
  7173  0130  21DE  120A  118A   	fcall	__Umul8_16
  7174  0133  0821               	movf	?__Umul8_16+1,w
  7175  0134  228C  120A  118A   	fcall	PL8	;call to abstracted procedure
  7176  0137  2295  120A  118A   	fcall	PL12	;call to abstracted procedure
  7177  013A  22E7  120A  118A   	fcall	PL58	;call to abstracted procedure
  7178  013D  085B               	movf	___flmul@a+2,w
  7179  013E  21DE  120A  118A   	fcall	__Umul8_16
  7180  0141  0821               	movf	?__Umul8_16+1,w
  7181  0142  228C  120A  118A   	fcall	PL8	;call to abstracted procedure
  7182  0145  085F               	movf	??___flmul+2,w
  7183  0146  00E0               	movwf	??___flmul+3
  7184  0147  085E               	movf	??___flmul+1,w
  7185  0148  00DF               	movwf	??___flmul+2
  7186  0149  085D               	movf	??___flmul,w
  7187  014A  00DE               	movwf	??___flmul+1
  7188  014B  01DD               	clrf	??___flmul
  7189  014C  2295  120A  118A   	fcall	PL12	;call to abstracted procedure
  7190  014F  1803               	skipnc
  7191  0150  3E01               	addlw	1
  7192  0151  1D03               	btfss	3,2
  7193  0152  07EB               	addwf	___flmul@prod+3,f
  7194  0153  0867               	movf	___flmul@grs+3,w
  7195  0154  07E8               	addwf	___flmul@prod,f
  7196  0155  3001               	movlw	1
  7197  0156  22C5  120A  118A   	fcall	PL24	;call to abstracted procedure
  7198  0159  0863               	movf	___flmul@bexp,w
  7199  015A  00EC               	movwf	___flmul@temp
  7200  015B  01ED               	clrf	___flmul@temp+1
  7201  015C  0862               	movf	___flmul@aexp,w
  7202  015D  07EC               	addwf	___flmul@temp,f
  7203  015E  1803               	skipnc
  7204  015F  0AED               	incf	___flmul@temp+1,f
  7205  0160  3082               	movlw	-126
  7206  0161                     L14:	
  7207  0161  07EC               	addwf	___flmul@temp,f
  7208  0162  1C03               	skipc
  7209  0163  03ED               	decf	___flmul@temp+1,f
  7210  0164  1BEA               	btfsc	___flmul@prod+2,7
  7211  0165  2974               	goto	l6110
  7212  0166  1003               	clrc
  7213  0167  0DE8               	rlf	___flmul@prod,f
  7214  0168  0DE9               	rlf	___flmul@prod+1,f
  7215  0169  0DEA               	rlf	___flmul@prod+2,f
  7216  016A  0DEB               	rlf	___flmul@prod+3,f
  7217  016B  1BE7               	btfsc	___flmul@grs+3,7
  7218  016C  1468               	bsf	___flmul@prod,0
  7219  016D  30FF               	movlw	-1
  7220  016E  1003               	clrc
  7221  016F  0DE4               	rlf	___flmul@grs,f
  7222  0170  0DE5               	rlf	___flmul@grs+1,f
  7223  0171  0DE6               	rlf	___flmul@grs+2,f
  7224  0172  0DE7               	rlf	___flmul@grs+3,f
  7225  0173  2961               	goto	L14
  7226  0174                     l6110:	
  7227  0174  01E2               	clrf	___flmul@aexp
  7228  0175  1FE7               	btfss	___flmul@grs+3,7
  7229  0176  2989               	goto	l6120
  7230  0177  0864               	movf	___flmul@grs,w
  7231  0178  00DD               	movwf	??___flmul
  7232  0179  0865               	movf	___flmul@grs+1,w
  7233  017A  00DE               	movwf	??___flmul+1
  7234  017B  0866               	movf	___flmul@grs+2,w
  7235  017C  00DF               	movwf	??___flmul+2
  7236  017D  307F               	movlw	127
  7237  017E  0567               	andwf	___flmul@grs+3,w
  7238  017F  00E0               	movwf	??___flmul+3
  7239  0180  045F               	iorwf	??___flmul+2,w
  7240  0181  045E               	iorwf	??___flmul+1,w
  7241  0182  045D               	iorwf	??___flmul,w
  7242  0183  1903               	skipnz
  7243  0184  1868               	btfsc	___flmul@prod,0
  7244  0185  2987               	goto	l6116
  7245  0186  2989               	goto	l6120
  7246  0187                     l6116:	
  7247  0187  01E2               	clrf	___flmul@aexp
  7248  0188  0AE2               	incf	___flmul@aexp,f
  7249  0189                     l6120:	
  7250  0189  0862               	movf	___flmul@aexp,w
  7251  018A  1903               	btfsc	3,2
  7252  018B  299D               	goto	l6130
  7253  018C  0AE8               	incf	___flmul@prod,f
  7254  018D  1903               	skipnz
  7255  018E  0AE9               	incf	___flmul@prod+1,f
  7256  018F  1903               	skipnz
  7257  0190  0AEA               	incf	___flmul@prod+2,f
  7258  0191  1903               	skipnz
  7259  0192  0AEB               	incf	___flmul@prod+3,f
  7260  0193  1C6B               	btfss	___flmul@prod+3,0
  7261  0194  299D               	goto	l6130
  7262  0195  0D6B               	rlf	___flmul@prod+3,w
  7263  0196  0CEB               	rrf	___flmul@prod+3,f
  7264  0197  0CEA               	rrf	___flmul@prod+2,f
  7265  0198  0CE9               	rrf	___flmul@prod+1,f
  7266  0199  0CE8               	rrf	___flmul@prod,f
  7267  019A  0AEC               	incf	___flmul@temp,f
  7268  019B  1903               	skipnz
  7269  019C  0AED               	incf	___flmul@temp+1,f
  7270  019D                     l6130:	
  7271  019D  086D               	movf	___flmul@temp+1,w
  7272  019E  3A80               	xorlw	128
  7273  019F  00FF               	movwf	127
  7274  01A0  3080               	movlw	128
  7275  01A1  027F               	subwf	127,w
  7276  01A2  1D03               	skipz
  7277  01A3  29A6               	goto	u5445
  7278  01A4  30FF               	movlw	255
  7279  01A5  026C               	subwf	___flmul@temp,w
  7280  01A6                     u5445:	
  7281  01A6  1C03               	skipc
  7282  01A7  29B1               	goto	l6134
  7283  01A8  307F               	movlw	127
  7284  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  7285  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  7286  01AB  00EB               	movwf	___flmul@prod+3
  7287  01AC  3080               	movlw	128
  7288  01AD  00EA               	movwf	___flmul@prod+2
  7289  01AE  01E9               	clrf	___flmul@prod+1
  7290  01AF  01E8               	clrf	___flmul@prod
  7291  01B0  29D3               	goto	l1400
  7292  01B1                     l6134:	
  7293  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  7294  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  7295  01B3  086D               	movf	___flmul@temp+1,w
  7296  01B4  3A80               	xorlw	128
  7297  01B5  00FF               	movwf	127
  7298  01B6  3080               	movlw	128
  7299  01B7  027F               	subwf	127,w
  7300  01B8  1D03               	skipz
  7301  01B9  29BC               	goto	u5455
  7302  01BA  3001               	movlw	1
  7303  01BB  026C               	subwf	___flmul@temp,w
  7304  01BC                     u5455:	
  7305  01BC  1803               	skipnc
  7306  01BD  29C6               	goto	l6140
  7307  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  7308  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  7309  01C0  01E8               	clrf	___flmul@prod
  7310  01C1  01E9               	clrf	___flmul@prod+1
  7311  01C2  01EA               	clrf	___flmul@prod+2
  7312  01C3  01EB               	clrf	___flmul@prod+3
  7313  01C4  01E1               	clrf	___flmul@sign
  7314  01C5  29D3               	goto	l1400
  7315  01C6                     l6140:	
  7316  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  7317  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  7318  01C8  086C               	movf	___flmul@temp,w
  7319  01C9  00E3               	movwf	___flmul@bexp
  7320  01CA  307F               	movlw	127
  7321  01CB  05EA               	andwf	___flmul@prod+2,f
  7322  01CC  3000               	movlw	0
  7323  01CD  01EB               	clrf	___flmul@prod+3
  7324  01CE  1863               	btfsc	___flmul@bexp,0
  7325  01CF  17EA               	bsf	___flmul@prod+2,7
  7326  01D0  1003               	clrc
  7327  01D1  0C63               	rrf	___flmul@bexp,w
  7328  01D2  00EB               	movwf	___flmul@prod+3
  7329  01D3                     l1400:	
  7330  01D3  0861               	movf	___flmul@sign,w
  7331  01D4  04EB               	iorwf	___flmul@prod+3,f
  7332  01D5  086B               	movf	___flmul@prod+3,w
  7333  01D6  00D8               	movwf	?___flmul+3
  7334  01D7  086A               	movf	___flmul@prod+2,w
  7335  01D8  00D7               	movwf	?___flmul+2
  7336  01D9  0869               	movf	___flmul@prod+1,w
  7337  01DA  00D6               	movwf	?___flmul+1
  7338  01DB  0868               	movf	___flmul@prod,w
  7339  01DC  00D5               	movwf	?___flmul
  7340  01DD  0008               	return
  7341  01DE                     __end_of___flmul:	
  7342  01DE                     __ptext28:	
  7343 ;; *************** function __Umul8_16 *****************
  7344 ;; Defined at:
  7345 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;  multiplier      1    wreg     unsigned char 
  7348 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;  multiplier      1    7[BANK0 ] unsigned char 
  7351 ;;  word_mpld       2    5[BANK0 ] unsigned int 
  7352 ;;  product         2    3[BANK0 ] unsigned int 
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  2    0[BANK0 ] unsigned int 
  7355 ;; Registers used:
  7356 ;;		wreg, status,2, status,0
  7357 ;; Tracked objects:
  7358 ;;		On entry : 300/0
  7359 ;;		On exit  : 300/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7362 ;;      Params:         0       3       0       0       0
  7363 ;;      Locals:         0       5       0       0       0
  7364 ;;      Temps:          0       0       0       0       0
  7365 ;;      Totals:         0       8       0       0       0
  7366 ;;Total ram usage:        8 bytes
  7367 ;; Hardware stack levels used:    1
  7368 ;; Hardware stack levels required when called:    1
  7369 ;; This function calls:
  7370 ;;		Nothing
  7371 ;; This function is called by:
  7372 ;;		___flmul
  7373 ;; This function uses a non-reentrant model
  7374 ;;
  7375                           
  7376                           
  7377                           ;psect for function __Umul8_16
  7378  01DE                     __Umul8_16:	
  7379                           
  7380                           ;incstack = 0
  7381                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7382                           ;__Umul8_16@multiplier stored from wreg
  7383  01DE  00A7               	movwf	__Umul8_16@multiplier
  7384  01DF  01A3               	clrf	__Umul8_16@product
  7385  01E0  01A4               	clrf	__Umul8_16@product+1
  7386  01E1  0820               	movf	__Umul8_16@multiplicand,w
  7387  01E2  00A5               	movwf	__Umul8_16@word_mpld
  7388  01E3  01A6               	clrf	__Umul8_16@word_mpld+1
  7389  01E4                     l6002:	
  7390  01E4  1C27               	btfss	__Umul8_16@multiplier,0
  7391  01E5  29EC               	goto	l6006
  7392  01E6  0825               	movf	__Umul8_16@word_mpld,w
  7393  01E7  07A3               	addwf	__Umul8_16@product,f
  7394  01E8  1803               	skipnc
  7395  01E9  0AA4               	incf	__Umul8_16@product+1,f
  7396  01EA  0826               	movf	__Umul8_16@word_mpld+1,w
  7397  01EB  07A4               	addwf	__Umul8_16@product+1,f
  7398  01EC                     l6006:	
  7399  01EC  1003               	clrc
  7400  01ED  0DA5               	rlf	__Umul8_16@word_mpld,f
  7401  01EE  0DA6               	rlf	__Umul8_16@word_mpld+1,f
  7402  01EF  1003               	clrc
  7403  01F0  0CA7               	rrf	__Umul8_16@multiplier,f
  7404  01F1  0827               	movf	__Umul8_16@multiplier,w
  7405  01F2  1D03               	btfss	3,2
  7406  01F3  29E4               	goto	l6002
  7407  01F4  0824               	movf	__Umul8_16@product+1,w
  7408  01F5  00A1               	movwf	?__Umul8_16+1
  7409  01F6  0823               	movf	__Umul8_16@product,w
  7410  01F7  00A0               	movwf	?__Umul8_16
  7411  01F8  0008               	return
  7412  01F9                     __end_of__Umul8_16:	
  7413  01F9                     __ptext29:	
  7414 ;; *************** function _EEPROM_24C1025_Write_Int *****************
  7415 ;; Defined at:
  7416 ;;		line 272 in file "EEPROM_24C1025.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  chip_add        1    wreg     unsigned char 
  7419 ;;  mem_add         4    8[BANK1 ] unsigned long 
  7420 ;;  data            2   12[BANK1 ] int 
  7421 ;; Auto vars:     Size  Location     Type
  7422 ;;  chip_add        1   14[BANK1 ] unsigned char 
  7423 ;;  local           2   15[BANK1 ] unsigned char [2]
  7424 ;; Return value:  Size  Location     Type
  7425 ;;                  1    wreg      void 
  7426 ;; Registers used:
  7427 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7428 ;; Tracked objects:
  7429 ;;		On entry : 100/300
  7430 ;;		On exit  : 0/0
  7431 ;;		Unchanged: 0/0
  7432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7433 ;;      Params:         0       0       6       0       0
  7434 ;;      Locals:         0       0       3       0       0
  7435 ;;      Temps:          0       0       0       0       0
  7436 ;;      Totals:         0       0       9       0       0
  7437 ;;Total ram usage:        9 bytes
  7438 ;; Hardware stack levels used:    1
  7439 ;; Hardware stack levels required when called:    4
  7440 ;; This function calls:
  7441 ;;		_EEPROM_24C1025_Write_Buffer
  7442 ;; This function is called by:
  7443 ;;		_Decodify_Command
  7444 ;;		_Save_Log
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           
  7449                           ;psect for function _EEPROM_24C1025_Write_Int
  7450  01F9                     _EEPROM_24C1025_Write_Int:	
  7451                           
  7452                           ;incstack = 0
  7453                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7454                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
  7455  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  7456  01FA  00AE               	movwf	EEPROM_24C1025_Write_Int@chip_add^(0+128)
  7457                           
  7458                           ;EEPROM_24C1025.c: 273:      char local[2];;EEPROM_24C1025.c: 274:      local[0]=((char 
      +                          *)&data)[1];
  7459  01FB  082D               	movf	(EEPROM_24C1025_Write_Int@data^(0+128)+1),w
  7460  01FC  00AF               	movwf	EEPROM_24C1025_Write_Int@local^(0+128)
  7461                           
  7462                           ;EEPROM_24C1025.c: 275:      local[1]=((char *)&data)[0];
  7463  01FD  082C               	movf	EEPROM_24C1025_Write_Int@data^(0+128),w
  7464  01FE  00B0               	movwf	(EEPROM_24C1025_Write_Int@local^(0+128)+1)
  7465                           
  7466                           ;EEPROM_24C1025.c: 276:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
  7467  01FF  082B               	movf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128),w
  7468  0200  1283               	bcf	3,5	;RP0=0, select bank0
  7469  0201  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  7470  0202  1683               	bsf	3,5	;RP0=1, select bank1
  7471  0203  082A               	movf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128),w
  7472  0204  1283               	bcf	3,5	;RP0=0, select bank0
  7473  0205  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  7474  0206  1683               	bsf	3,5	;RP0=1, select bank1
  7475  0207  0829               	movf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128),w
  7476  0208  1283               	bcf	3,5	;RP0=0, select bank0
  7477  0209  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  7478  020A  1683               	bsf	3,5	;RP0=1, select bank1
  7479  020B  0828               	movf	EEPROM_24C1025_Write_Int@mem_add^(0+128),w
  7480  020C  1283               	bcf	3,5	;RP0=0, select bank0
  7481  020D  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  7482  020E  3002               	movlw	2
  7483  020F  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  7484  0210  30AF               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
  7485  0211  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
  7486  0212  01A8               	clrf	EEPROM_24C1025_Write_Buffer@data+1
  7487  0213  1683               	bsf	3,5	;RP0=1, select bank1
  7488  0214  082E               	movf	EEPROM_24C1025_Write_Int@chip_add^(0+128),w
  7489  0215  120A  158A  2E4F   	ljmp	_EEPROM_24C1025_Write_Buffer
  7490  0218                     __end_of_EEPROM_24C1025_Write_Int:	
  7491  0218                     __ptext26:	
  7492 ;; *************** function ___fltol *****************
  7493 ;; Defined at:
  7494 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;  f1              4    0[BANK1 ] void 
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;  exp1            1   79[BANK0 ] unsigned char 
  7499 ;;  sign1           1   78[BANK0 ] unsigned char 
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  4    0[BANK1 ] long 
  7502 ;; Registers used:
  7503 ;;		wreg, status,2, status,0
  7504 ;; Tracked objects:
  7505 ;;		On entry : 300/100
  7506 ;;		On exit  : 200/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7509 ;;      Params:         0       0       4       0       0
  7510 ;;      Locals:         0       2       0       0       0
  7511 ;;      Temps:          0       0       4       0       0
  7512 ;;      Totals:         0       2       8       0       0
  7513 ;;Total ram usage:       10 bytes
  7514 ;; Hardware stack levels used:    1
  7515 ;; Hardware stack levels required when called:    1
  7516 ;; This function calls:
  7517 ;;		Nothing
  7518 ;; This function is called by:
  7519 ;;		_Decodify_Command
  7520 ;;		_Save_Log
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           
  7525                           ;psect for function ___fltol
  7526  0218                     ___fltol:	
  7527                           
  7528                           ;incstack = 0
  7529                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7530  0218  1003               	clrc
  7531  0219  0D22               	rlf	(___fltol@f1+2)^(0+128),w
  7532  021A  0D23               	rlf	(___fltol@f1+3)^(0+128),w
  7533  021B  1283               	bcf	3,5	;RP0=0, select bank0
  7534  021C  00EF               	movwf	___fltol@exp1
  7535  021D  086F               	movf	___fltol@exp1,w
  7536  021E  1D03               	btfss	3,2
  7537  021F  2A26               	goto	l4648
  7538  0220                     l4646:	
  7539  0220  1683               	bsf	3,5	;RP0=1, select bank1
  7540  0221  01A0               	clrf	?___fltol^(0+128)
  7541  0222  01A1               	clrf	(?___fltol+1)^(0+128)
  7542  0223  01A2               	clrf	(?___fltol+2)^(0+128)
  7543  0224  01A3               	clrf	(?___fltol+3)^(0+128)
  7544  0225  0008               	return
  7545  0226                     l4648:	
  7546  0226  1683               	bsf	3,5	;RP0=1, select bank1
  7547  0227  0820               	movf	___fltol@f1^(0+128),w
  7548  0228  00A4               	movwf	??___fltol^(0+128)
  7549  0229  0821               	movf	(___fltol@f1+1)^(0+128),w
  7550  022A  00A5               	movwf	(??___fltol^(0+128)+1)
  7551  022B  0822               	movf	(___fltol@f1+2)^(0+128),w
  7552  022C  00A6               	movwf	(??___fltol^(0+128)+2)
  7553  022D  0823               	movf	(___fltol@f1+3)^(0+128),w
  7554  022E  00A7               	movwf	(??___fltol^(0+128)+3)
  7555  022F  301F               	movlw	31
  7556  0230                     u3875:	
  7557  0230  1003               	clrc
  7558  0231  0CA7               	rrf	(??___fltol^(0+128)+3),f
  7559  0232  0CA6               	rrf	(??___fltol^(0+128)+2),f
  7560  0233  0CA5               	rrf	(??___fltol^(0+128)+1),f
  7561  0234  0CA4               	rrf	??___fltol^(0+128),f
  7562  0235  3EFF               	addlw	-1
  7563  0236  1D03               	skipz
  7564  0237  2A30               	goto	u3875
  7565  0238  0824               	movf	??___fltol^(0+128),w
  7566  0239  1283               	bcf	3,5	;RP0=0, select bank0
  7567  023A  00EE               	movwf	___fltol@sign1
  7568  023B  1683               	bsf	3,5	;RP0=1, select bank1
  7569  023C  3096               	movlw	150
  7570  023D  17A2               	bsf	(___fltol@f1^(0+128)+2),7
  7571  023E  01A3               	clrf	(___fltol@f1+3)^(0+128)
  7572  023F  1283               	bcf	3,5	;RP0=0, select bank0
  7573  0240  02EF               	subwf	___fltol@exp1,f
  7574  0241  1FEF               	btfss	___fltol@exp1,7
  7575  0242  2A52               	goto	l4666
  7576  0243  086F               	movf	___fltol@exp1,w
  7577  0244  3A80               	xorlw	128
  7578  0245  3E97               	addlw	151
  7579  0246  1C03               	btfss	3,0
  7580  0247  2A20               	goto	l4646
  7581  0248                     l4662:	
  7582  0248  1003               	clrc
  7583  0249  1683               	bsf	3,5	;RP0=1, select bank1
  7584  024A  0CA3               	rrf	(___fltol@f1+3)^(0+128),f
  7585  024B  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
  7586  024C  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
  7587  024D  0CA0               	rrf	___fltol@f1^(0+128),f
  7588  024E  1283               	bcf	3,5	;RP0=0, select bank0
  7589  024F  0FEF               	incfsz	___fltol@exp1,f
  7590  0250  2A48               	goto	l4662
  7591  0251  2A62               	goto	l4674
  7592  0252                     l4666:	
  7593  0252  3020               	movlw	32
  7594  0253  026F               	subwf	___fltol@exp1,w
  7595  0254  1803               	btfsc	3,0
  7596  0255  2A20               	goto	l4646
  7597  0256                     l4672:	
  7598  0256  086F               	movf	___fltol@exp1,w
  7599  0257  1903               	btfsc	3,2
  7600  0258  2A62               	goto	l4674
  7601  0259  1003               	clrc
  7602  025A  1683               	bsf	3,5	;RP0=1, select bank1
  7603  025B  0DA0               	rlf	___fltol@f1^(0+128),f
  7604  025C  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
  7605  025D  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
  7606  025E  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
  7607  025F  1283               	bcf	3,5	;RP0=0, select bank0
  7608  0260  03EF               	decf	___fltol@exp1,f
  7609  0261  2A56               	goto	l4672
  7610  0262                     l4674:	
  7611  0262  086E               	movf	___fltol@sign1,w
  7612  0263  1903               	btfsc	3,2
  7613  0264  0008               	return
  7614  0265  1683               	bsf	3,5	;RP0=1, select bank1
  7615  0266  09A0               	comf	___fltol@f1^(0+128),f
  7616  0267  09A1               	comf	(___fltol@f1+1)^(0+128),f
  7617  0268  09A2               	comf	(___fltol@f1+2)^(0+128),f
  7618  0269  09A3               	comf	(___fltol@f1+3)^(0+128),f
  7619  026A  0AA0               	incf	___fltol@f1^(0+128),f
  7620  026B  1903               	skipnz
  7621  026C  0AA1               	incf	(___fltol@f1+1)^(0+128),f
  7622  026D  1903               	skipnz
  7623  026E  0AA2               	incf	(___fltol@f1+2)^(0+128),f
  7624  026F  1903               	skipnz
  7625  0270  0AA3               	incf	(___fltol@f1+3)^(0+128),f
  7626  0271  0008               	return
  7627  0272                     __end_of___fltol:	
  7628  0272                     PL6:	
  7629  0272  0821               	movf	?__Umul8_16+1,w
  7630  0273  00ED               	movwf	___flmul@temp+1
  7631  0274  0820               	movf	?__Umul8_16,w
  7632  0275  00EC               	movwf	___flmul@temp
  7633  0276  00DD               	movwf	??___flmul
  7634  0277  086D               	movf	___flmul@temp+1,w
  7635  0278  00DE               	movwf	??___flmul+1
  7636  0279  01DF               	clrf	??___flmul+2
  7637  027A  01E0               	clrf	??___flmul+3
  7638  027B  085D               	movf	??___flmul,w
  7639  027C  07E4               	addwf	___flmul@grs,f
  7640  027D  085E               	movf	??___flmul+1,w
  7641  027E  1103               	clrz
  7642  027F  1803               	skipnc
  7643  0280  3E01               	addlw	1
  7644  0281  1D03               	btfss	3,2
  7645  0282  07E5               	addwf	___flmul@grs+1,f
  7646  0283  085F               	movf	??___flmul+2,w
  7647  0284  1103               	clrz
  7648  0285  1803               	skipnc
  7649  0286  3E01               	addlw	1
  7650  0287  1D03               	btfss	3,2
  7651  0288  07E6               	addwf	___flmul@grs+2,f
  7652  0289  0860               	movf	??___flmul+3,w
  7653  028A  1103               	clrz
  7654  028B  0008               	return
  7655  028C                     __end_ofPL6:	
  7656  028C                     PL8:	
  7657  028C  00ED               	movwf	___flmul@temp+1
  7658  028D  0820               	movf	?__Umul8_16,w
  7659  028E  00EC               	movwf	___flmul@temp
  7660  028F  00DD               	movwf	??___flmul
  7661  0290  086D               	movf	___flmul@temp+1,w
  7662  0291  00DE               	movwf	??___flmul+1
  7663  0292  01DF               	clrf	??___flmul+2
  7664  0293  01E0               	clrf	??___flmul+3
  7665  0294  0008               	return
  7666  0295                     __end_ofPL8:	
  7667  0295                     PL12:	
  7668  0295  085D               	movf	??___flmul,w
  7669  0296  07E8               	addwf	___flmul@prod,f
  7670  0297  085E               	movf	??___flmul+1,w
  7671  0298  1103               	clrz
  7672  0299  1803               	skipnc
  7673  029A  3E01               	addlw	1
  7674  029B  1D03               	btfss	3,2
  7675  029C  07E9               	addwf	___flmul@prod+1,f
  7676  029D  085F               	movf	??___flmul+2,w
  7677  029E  1103               	clrz
  7678  029F  1803               	skipnc
  7679  02A0  3E01               	addlw	1
  7680  02A1  1D03               	btfss	3,2
  7681  02A2  07EA               	addwf	___flmul@prod+2,f
  7682  02A3  0860               	movf	??___flmul+3,w
  7683  02A4  1103               	clrz
  7684  02A5  0008               	return
  7685  02A6                     __end_ofPL12:	
  7686  02A6                     PL16:	
  7687  02A6  0821               	movf	?__Umul8_16+1,w
  7688  02A7  00ED               	movwf	___flmul@temp+1
  7689  02A8  0820               	movf	?__Umul8_16,w
  7690  02A9  00EC               	movwf	___flmul@temp
  7691  02AA  07E4               	addwf	___flmul@grs,f
  7692  02AB  3001               	movlw	1
  7693  02AC  1803               	skipnc
  7694  02AD  07E5               	addwf	___flmul@grs+1,f
  7695  02AE  1803               	skipnc
  7696  02AF  07E6               	addwf	___flmul@grs+2,f
  7697  02B0  1803               	skipnc
  7698  02B1  07E7               	addwf	___flmul@grs+3,f
  7699  02B2  086D               	movf	___flmul@temp+1,w
  7700  02B3  07E8               	addwf	___flmul@prod,f
  7701  02B4  3401               	retlw	1
  7702  02B5                     __end_ofPL16:	
  7703  02B5                     PL20:	
  7704  02B5  0858               	movf	?___flmul+3,w
  7705  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  7706  02B7  00A3               	movwf	(___fltol@f1+3)^(0+128)
  7707  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  7708  02B9  0857               	movf	?___flmul+2,w
  7709  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  7710  02BB  00A2               	movwf	(___fltol@f1+2)^(0+128)
  7711  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  7712  02BD  0856               	movf	?___flmul+1,w
  7713  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  7714  02BF  00A1               	movwf	(___fltol@f1+1)^(0+128)
  7715  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  7716  02C1  0855               	movf	?___flmul,w
  7717  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  7718  02C3  00A0               	movwf	___fltol@f1^(0+128)
  7719  02C4  0008               	return
  7720  02C5                     __end_ofPL20:	
  7721  02C5                     PL24:	
  7722  02C5  1803               	skipnc
  7723  02C6  07E9               	addwf	___flmul@prod+1,f
  7724  02C7  1803               	skipnc
  7725  02C8  07EA               	addwf	___flmul@prod+2,f
  7726  02C9  1803               	skipnc
  7727  02CA  07EB               	addwf	___flmul@prod+3,f
  7728  02CB  0866               	movf	___flmul@grs+2,w
  7729  02CC  00E7               	movwf	___flmul@grs+3
  7730  02CD  0865               	movf	___flmul@grs+1,w
  7731  02CE  00E6               	movwf	___flmul@grs+2
  7732  02CF  0864               	movf	___flmul@grs,w
  7733  02D0  00E5               	movwf	___flmul@grs+1
  7734  02D1  01E4               	clrf	___flmul@grs
  7735  02D2  0008               	return
  7736  02D3                     __end_ofPL24:	
  7737  02D3                     PL38:	
  7738  02D3  0834               	movf	(Save_Log@add_memory+3)^(0+128),w
  7739  02D4  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  7740  02D5  0833               	movf	(Save_Log@add_memory+2)^(0+128),w
  7741  02D6  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  7742  02D7  0832               	movf	(Save_Log@add_memory+1)^(0+128),w
  7743  02D8  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  7744  02D9  0831               	movf	Save_Log@add_memory^(0+128),w
  7745  02DA  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  7746  02DB  1703               	bsf	3,6	;RP1=1, select bank3
  7747  02DC  0008               	return
  7748  02DD                     __end_ofPL38:	
  7749  02DD                     PL40:	
  7750  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  7751  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  7752  02DF  00D9               	movwf	___flmul@a
  7753  02E0  3041               	movlw	65
  7754  02E1  00D8               	movwf	___flmul@b+3
  7755  02E2  3020               	movlw	32
  7756  02E3  00D7               	movwf	___flmul@b+2
  7757  02E4  01D6               	clrf	___flmul@b+1
  7758  02E5  01D5               	clrf	___flmul@b
  7759  02E6  0008               	return
  7760  02E7                     __end_ofPL40:	
  7761  02E7                     PL58:	
  7762  02E7  1803               	skipnc
  7763  02E8  3E01               	addlw	1
  7764  02E9  1D03               	btfss	3,2
  7765  02EA  07EB               	addwf	___flmul@prod+3,f
  7766  02EB  0857               	movf	___flmul@b+2,w
  7767  02EC  00A0               	movwf	__Umul8_16@multiplicand
  7768  02ED  0008               	return
  7769  02EE                     __end_ofPL58:	
  7770                           
  7771                           	psect	text30
  7772  1C4A                     __ptext30:	
  7773 ;; *************** function _PROCULUS_VP_Write_String *****************
  7774 ;; Defined at:
  7775 ;;		line 205 in file "proculus.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  vp              2   19[BANK1 ] unsigned int 
  7778 ;;  text            1   21[BANK1 ] PTR unsigned char 
  7779 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;		None
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  1    wreg      void 
  7784 ;; Registers used:
  7785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7786 ;; Tracked objects:
  7787 ;;		On entry : 300/100
  7788 ;;		On exit  : 300/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7791 ;;      Params:         0       0       3       0       0
  7792 ;;      Locals:         0       0       0       0       0
  7793 ;;      Temps:          0       0       0       0       0
  7794 ;;      Totals:         0       0       3       0       0
  7795 ;;Total ram usage:        3 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; Hardware stack levels required when called:    4
  7798 ;; This function calls:
  7799 ;;		_PROCULUS_VP_Write
  7800 ;;		_strlen
  7801 ;; This function is called by:
  7802 ;;		_Decodify_Command
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806                           
  7807                           ;psect for function _PROCULUS_VP_Write_String
  7808  1C4A                     _PROCULUS_VP_Write_String:	
  7809                           
  7810                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  7811                           
  7812                           ;incstack = 0
  7813                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7814  1C4A  0834               	movf	(PROCULUS_VP_Write_String@vp+1)^(0+128),w
  7815  1C4B  00AC               	movwf	(PROCULUS_VP_Write@vp+1)^(0+128)
  7816  1C4C  0833               	movf	PROCULUS_VP_Write_String@vp^(0+128),w
  7817  1C4D  00AB               	movwf	PROCULUS_VP_Write@vp^(0+128)
  7818  1C4E  0835               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  7819  1C4F  00AD               	movwf	PROCULUS_VP_Write@vetor^(0+128)
  7820  1C50  3001               	movlw	1
  7821  1C51  00AE               	movwf	(PROCULUS_VP_Write@vetor+1)^(0+128)
  7822  1C52  0835               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  7823  1C53  120A  158A  278D   	fcall	_strlen
  7824  1C56  0820               	movf	?_strlen,w
  7825  1C57  3E01               	addlw	1
  7826  1C58  1683               	bsf	3,5	;RP0=1, select bank1
  7827  1C59  00AF               	movwf	PROCULUS_VP_Write@size^(0+128)
  7828  1C5A  120A  158A  280F   	ljmp	l6502
  7829  1C5D                     __end_of_PROCULUS_VP_Write_String:	
  7830                           
  7831                           	psect	text32
  7832  080F                     __ptext32:	
  7833 ;; *************** function _PROCULUS_VP_Write *****************
  7834 ;; Defined at:
  7835 ;;		line 40 in file "proculus.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  vp              2   11[BANK1 ] unsigned int 
  7838 ;;  vetor           2   13[BANK1 ] PTR unsigned char 
  7839 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  7840 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(10), usart_protocol(16), 
  7841 ;;  size            1   15[BANK1 ] unsigned char 
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;  i               1   18[BANK1 ] unsigned char 
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  1    wreg      void 
  7846 ;; Registers used:
  7847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : B00/900
  7850 ;;		On exit  : 300/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7853 ;;      Params:         0       0       5       0       0
  7854 ;;      Locals:         0       0       1       0       0
  7855 ;;      Temps:          0       0       2       0       0
  7856 ;;      Totals:         0       0       8       0       0
  7857 ;;Total ram usage:        8 bytes
  7858 ;; Hardware stack levels used:    1
  7859 ;; Hardware stack levels required when called:    3
  7860 ;; This function calls:
  7861 ;;		_PROCULUS_Delay
  7862 ;;		_USART_put_int
  7863 ;;		_USART_putc
  7864 ;; This function is called by:
  7865 ;;		_PROCULUS_VP_Write_String
  7866 ;; This function uses a non-reentrant model
  7867 ;;
  7868                           
  7869                           
  7870                           ;psect for function _PROCULUS_VP_Write
  7871  080F                     _PROCULUS_VP_Write:	
  7872  080F                     l6502:	
  7873                           ;incstack = 0
  7874                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7875                           
  7876                           
  7877                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  7878  080F  30A5               	movlw	165
  7879  0810  00A8               	movwf	USART_put_int@value^(0+128)
  7880  0811  305A               	movlw	90
  7881  0812  00A9               	movwf	(USART_put_int@value^(0+128)+1)
  7882  0813  277F  120A  158A   	fcall	_USART_put_int
  7883                           
  7884                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  7885  0816  082F               	movf	PROCULUS_VP_Write@size^(0+128),w
  7886  0817  3E03               	addlw	3
  7887  0818  23DD  120A  158A   	fcall	_USART_putc
  7888                           
  7889                           ;proculus.c: 43:      USART_putc(0x82);
  7890  081B  3082               	movlw	130
  7891  081C  23DD  120A  158A   	fcall	_USART_putc
  7892                           
  7893                           ;proculus.c: 44:      USART_put_int(vp);
  7894  081F  082C               	movf	(PROCULUS_VP_Write@vp+1)^(0+128),w
  7895  0820  00A9               	movwf	(USART_put_int@value+1)^(0+128)
  7896  0821  082B               	movf	PROCULUS_VP_Write@vp^(0+128),w
  7897  0822  00A8               	movwf	USART_put_int@value^(0+128)
  7898  0823  277F  120A  158A   	fcall	_USART_put_int
  7899                           
  7900                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  7901  0826  01B2               	clrf	PROCULUS_VP_Write@i^(0+128)
  7902  0827                     l6514:	
  7903  0827  082F               	movf	PROCULUS_VP_Write@size^(0+128),w
  7904  0828  0232               	subwf	PROCULUS_VP_Write@i^(0+128),w
  7905  0829  1803               	btfsc	3,0
  7906  082A  283D               	goto	l6516
  7907                           
  7908                           ;proculus.c: 46:          USART_putc(vetor[i]);
  7909  082B  0832               	movf	PROCULUS_VP_Write@i^(0+128),w
  7910  082C  072D               	addwf	PROCULUS_VP_Write@vetor^(0+128),w
  7911  082D  00B0               	movwf	??_PROCULUS_VP_Write^(0+128)
  7912  082E  082E               	movf	(PROCULUS_VP_Write@vetor+1)^(0+128),w
  7913  082F  1803               	skipnc
  7914  0830  3E01               	addlw	1
  7915  0831  00B1               	movwf	(??_PROCULUS_VP_Write^(0+128)+1)
  7916  0832  0830               	movf	??_PROCULUS_VP_Write^(0+128),w
  7917  0833  0084               	movwf	4
  7918  0834  1783               	bsf	3,7
  7919  0835  1C31               	btfss	(??_PROCULUS_VP_Write+1)^(0+128),0
  7920  0836  1383               	bcf	3,7
  7921  0837  0800               	movf	0,w
  7922  0838  23DD  120A  158A   	fcall	_USART_putc
  7923  083B  0AB2               	incf	PROCULUS_VP_Write@i^(0+128),f
  7924  083C  2827               	goto	l6514
  7925  083D                     l6516:	
  7926                           
  7927                           ;proculus.c: 48:      PROCULUS_Delay(1);
  7928  083D  1283               	bcf	3,5	;RP0=0, select bank0
  7929  083E  01A0               	clrf	PROCULUS_Delay@tempo_ms
  7930  083F  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  7931  0840  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  7932  0841  160A  158A  2DFF   	ljmp	l4274
  7933  0844                     __end_of_PROCULUS_VP_Write:	
  7934  0844                     __ptext14:	
  7935 ;; *************** function _Decodify_Command *****************
  7936 ;; Defined at:
  7937 ;;		line 302 in file "SlaveLiofilizadorVer1.c"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;		None
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;  ss             10   51[BANK1 ] unsigned char [10]
  7942 ;;  mm             10   41[BANK1 ] unsigned char [10]
  7943 ;;  hh             10   31[BANK1 ] unsigned char [10]
  7944 ;;  sizedata        1   73[BANK1 ] unsigned char 
  7945 ;;  valor           2   71[BANK1 ] int 
  7946 ;;  add             1   63[BANK1 ] unsigned char 
  7947 ;;  add_24LCxxxx    4   74[BANK1 ] unsigned long 
  7948 ;;  OutPut          4   66[BANK1 ] float 
  7949 ;;  tempint         2   64[BANK1 ] int 
  7950 ;;  dados           2   61[BANK1 ] int 
  7951 ;;  tempchar        1   70[BANK1 ] unsigned char 
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  1    wreg      void 
  7954 ;; Registers used:
  7955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7956 ;; Tracked objects:
  7957 ;;		On entry : 300/300
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7961 ;;      Params:         0       0       0       0       0
  7962 ;;      Locals:         0       0      47       0       0
  7963 ;;      Temps:          0       0       2       0       0
  7964 ;;      Totals:         0       0      49       0       0
  7965 ;;Total ram usage:       49 bytes
  7966 ;; Hardware stack levels used:    1
  7967 ;; Hardware stack levels required when called:    6
  7968 ;; This function calls:
  7969 ;;		_EEPROM_24C1025_Fill_All
  7970 ;;		_EEPROM_24C1025_Read_Buffer
  7971 ;;		_EEPROM_24C1025_Read_Byte
  7972 ;;		_EEPROM_24C1025_Read_Int
  7973 ;;		_EEPROM_24C1025_Read_Str
  7974 ;;		_EEPROM_24C1025_Write_Buffer
  7975 ;;		_EEPROM_24C1025_Write_Byte
  7976 ;;		_EEPROM_24C1025_Write_Int
  7977 ;;		_EEPROM_24C1025_Write_Str
  7978 ;;		_EEPROM_Read_Byte
  7979 ;;		_EEPROM_Read_Integer
  7980 ;;		_EEPROM_Read_String
  7981 ;;		_EEPROM_Write_Byte
  7982 ;;		_EEPROM_Write_Integer
  7983 ;;		_EEPROM_Write_String
  7984 ;;		_Load_Work
  7985 ;;		_PROCULUS_Buzzer
  7986 ;;		_PROCULUS_Show_Screen
  7987 ;;		_PROCULUS_VP_Write_String
  7988 ;;		_Save_Log
  7989 ;;		_Send_Reply_OK
  7990 ;;		_Send_To_MB
  7991 ;;		_USART_put_buffer
  7992 ;;		_USART_put_int
  7993 ;;		_USART_put_string
  7994 ;;		_USART_putc
  7995 ;;		_USART_to_Protocol
  7996 ;;		___flmul
  7997 ;;		___fltol
  7998 ;;		_itoa
  7999 ;;		_strcat
  8000 ;;		_strcpy
  8001 ;;		_strlen
  8002 ;; This function is called by:
  8003 ;;		_main
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           
  8008                           ;psect for function _Decodify_Command
  8009  0844                     _Decodify_Command:	
  8010                           
  8011                           ;SlaveLiofilizadorVer1.c: 304:     int dados;;SlaveLiofilizadorVer1.c: 305:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 306:     int tempint;;SlaveLiofilizadorVer1.c: 307:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 308:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 320:     USART_to_Protocol(&usart_protocol);
  8012                           
  8013                           ;incstack = 0
  8014                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8015  0844  30CE               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  8016  0845  120A  118A  27A5  120A  158A  	fcall	_USART_to_Protocol
  8017                           
  8018                           ;SlaveLiofilizadorVer1.c: 322:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  8019  084A  1683               	bsf	3,5	;RP0=1, select bank3
  8020  084B  1703               	bsf	3,6	;RP1=1, select bank3
  8021  084C  0855               	movf	(_usart_protocol^(0+384)+7),w
  8022  084D  1303               	bcf	3,6	;RP1=0, select bank1
  8023  084E  00ED               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  8024                           
  8025                           ;SlaveLiofilizadorVer1.c: 323:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  8026  084F  1703               	bsf	3,6	;RP1=1, select bank3
  8027  0850  0856               	movf	(_usart_protocol^(0+384)+8),w
  8028  0851  1303               	bcf	3,6	;RP1=0, select bank1
  8029  0852  00EC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  8030                           
  8031                           ;SlaveLiofilizadorVer1.c: 324:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  8032  0853  1703               	bsf	3,6	;RP1=1, select bank3
  8033  0854  0857               	movf	(_usart_protocol^(0+384)+9),w
  8034  0855  1303               	bcf	3,6	;RP1=0, select bank1
  8035  0856  00EB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  8036                           
  8037                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  8038  0857  1703               	bsf	3,6	;RP1=1, select bank3
  8039  0858  0858               	movf	(_usart_protocol^(0+384)+10),w
  8040  0859  1303               	bcf	3,6	;RP1=0, select bank1
  8041  085A  00EA               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  8042                           
  8043                           ;SlaveLiofilizadorVer1.c: 332:     switch(usart_protocol.command){
  8044  085B  2B43               	goto	l7336
  8045  085C                     l7124:	
  8046                           
  8047                           ;SlaveLiofilizadorVer1.c: 341:              Send_To_MB(11);
  8048  085C  300B               	movlw	11
  8049  085D  23A1               	fcall	_Send_To_MB
  8050                           
  8051                           ;SlaveLiofilizadorVer1.c: 342:              USART_put_string("v1.0.4");
  8052  085E  302D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  8053  085F  1283               	bcf	3,5	;RP0=0, select bank0
  8054  0860  00A1               	movwf	USART_put_string@vetor
  8055  0861  3080               	movlw	128
  8056  0862  00A2               	movwf	USART_put_string@vetor+1
  8057  0863  160A  158A  2CD9   	ljmp	l6344
  8058  0866                     l7128:	
  8059                           ;SlaveLiofilizadorVer1.c: 343:              break;
  8060                           
  8061                           
  8062                           ;SlaveLiofilizadorVer1.c: 346:              if(usart_protocol.value[0]==0)
  8063  0866  1703               	bsf	3,6	;RP1=1, select bank3
  8064  0867  0854               	movf	(_usart_protocol^(0+384)+6),w
  8065  0868  1D03               	btfss	3,2
  8066  0869  2878               	goto	l7132
  8067                           
  8068                           ;SlaveLiofilizadorVer1.c: 347:                 OutPut=Temperatura0;
  8069  086A  0817               	movf	(_Temperatura0+3)^(0+384),w
  8070  086B  1303               	bcf	3,6	;RP1=0, select bank1
  8071  086C  00E5               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  8072  086D  1703               	bsf	3,6	;RP1=1, select bank3
  8073  086E  0816               	movf	(_Temperatura0+2)^(0+384),w
  8074  086F  1303               	bcf	3,6	;RP1=0, select bank1
  8075  0870  00E4               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  8076  0871  1703               	bsf	3,6	;RP1=1, select bank3
  8077  0872  0815               	movf	(_Temperatura0+1)^(0+384),w
  8078  0873  1303               	bcf	3,6	;RP1=0, select bank1
  8079  0874  00E3               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  8080  0875  1703               	bsf	3,6	;RP1=1, select bank3
  8081  0876  0814               	movf	_Temperatura0^(0+384),w
  8082  0877  2885               	goto	L8
  8083  0878                     l7132:	
  8084                           
  8085                           ;SlaveLiofilizadorVer1.c: 349:                 OutPut=Temperatura1;
  8086  0878  0813               	movf	(_Temperatura1+3)^(0+384),w
  8087  0879  1303               	bcf	3,6	;RP1=0, select bank1
  8088  087A  00E5               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  8089  087B  1703               	bsf	3,6	;RP1=1, select bank3
  8090  087C  0812               	movf	(_Temperatura1+2)^(0+384),w
  8091  087D  1303               	bcf	3,6	;RP1=0, select bank1
  8092  087E  00E4               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  8093  087F  1703               	bsf	3,6	;RP1=1, select bank3
  8094  0880  0811               	movf	(_Temperatura1+1)^(0+384),w
  8095  0881  1303               	bcf	3,6	;RP1=0, select bank1
  8096  0882  00E3               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  8097  0883  1703               	bsf	3,6	;RP1=1, select bank3
  8098  0884  0810               	movf	_Temperatura1^(0+384),w
  8099  0885                     L8:	
  8100  0885  1303               	bcf	3,6	;RP1=0, select bank1
  8101  0886  00E2               	movwf	Decodify_Command@OutPut^(0+128)
  8102                           
  8103                           ;SlaveLiofilizadorVer1.c: 366:              OutPut*=10.0;
  8104  0887  3041               	movlw	65
  8105  0888  1283               	bcf	3,5	;RP0=0, select bank0
  8106  0889  00D8               	movwf	___flmul@b+3
  8107  088A  3020               	movlw	32
  8108  088B  00D7               	movwf	___flmul@b+2
  8109  088C  01D6               	clrf	___flmul@b+1
  8110  088D  01D5               	clrf	___flmul@b
  8111  088E  1683               	bsf	3,5	;RP0=1, select bank1
  8112  088F  0865               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  8113  0890  1283               	bcf	3,5	;RP0=0, select bank0
  8114  0891  00DC               	movwf	___flmul@a+3
  8115  0892  1683               	bsf	3,5	;RP0=1, select bank1
  8116  0893  0864               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  8117  0894  1283               	bcf	3,5	;RP0=0, select bank0
  8118  0895  00DB               	movwf	___flmul@a+2
  8119  0896  1683               	bsf	3,5	;RP0=1, select bank1
  8120  0897  0863               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  8121  0898  1283               	bcf	3,5	;RP0=0, select bank0
  8122  0899  00DA               	movwf	___flmul@a+1
  8123  089A  1683               	bsf	3,5	;RP0=1, select bank1
  8124  089B  0862               	movf	Decodify_Command@OutPut^(0+128),w
  8125  089C  1283               	bcf	3,5	;RP0=0, select bank0
  8126  089D  00D9               	movwf	___flmul@a
  8127  089E  120A  118A  208A  120A  158A  	fcall	___flmul
  8128  08A3  0858               	movf	?___flmul+3,w
  8129  08A4  1683               	bsf	3,5	;RP0=1, select bank1
  8130  08A5  00E5               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  8131  08A6  1283               	bcf	3,5	;RP0=0, select bank0
  8132  08A7  0857               	movf	?___flmul+2,w
  8133  08A8  1683               	bsf	3,5	;RP0=1, select bank1
  8134  08A9  00E4               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  8135  08AA  1283               	bcf	3,5	;RP0=0, select bank0
  8136  08AB  0856               	movf	?___flmul+1,w
  8137  08AC  1683               	bsf	3,5	;RP0=1, select bank1
  8138  08AD  00E3               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  8139  08AE  1283               	bcf	3,5	;RP0=0, select bank0
  8140  08AF  0855               	movf	?___flmul,w
  8141  08B0  1683               	bsf	3,5	;RP0=1, select bank1
  8142  08B1  00E2               	movwf	Decodify_Command@OutPut^(0+128)
  8143                           
  8144                           ;SlaveLiofilizadorVer1.c: 368:              INTCONbits.GIE=0;
  8145  08B2  138B               	bcf	11,7	;volatile
  8146                           
  8147                           ;SlaveLiofilizadorVer1.c: 369:              Send_To_MB(2);
  8148  08B3  3002               	movlw	2
  8149  08B4  23A1               	fcall	_Send_To_MB
  8150                           
  8151                           ;SlaveLiofilizadorVer1.c: 370:              USART_put_int(OutPut);
  8152  08B5  0865               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  8153  08B6  00A3               	movwf	(___fltol@f1+3)^(0+128)
  8154  08B7  0864               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  8155  08B8  00A2               	movwf	(___fltol@f1+2)^(0+128)
  8156  08B9  0863               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  8157  08BA  00A1               	movwf	(___fltol@f1+1)^(0+128)
  8158  08BB  0862               	movf	Decodify_Command@OutPut^(0+128),w
  8159  08BC  00A0               	movwf	___fltol@f1^(0+128)
  8160  08BD  120A  118A  2218  120A  158A  	fcall	___fltol
  8161  08C2  1683               	bsf	3,5	;RP0=1, select bank1
  8162  08C3  0821               	movf	(?___fltol+1)^(0+128),w
  8163  08C4  00A9               	movwf	(USART_put_int@value+1)^(0+128)
  8164  08C5  0820               	movf	?___fltol^(0+128),w
  8165  08C6  00A8               	movwf	USART_put_int@value^(0+128)
  8166  08C7  277F               	fcall	_USART_put_int
  8167                           
  8168                           ;SlaveLiofilizadorVer1.c: 371:              INTCONbits.GIE=1;
  8169  08C8  178B               	bsf	11,7	;volatile
  8170                           
  8171                           ;SlaveLiofilizadorVer1.c: 372:              break;
  8172  08C9  0008               	return
  8173  08CA                     l7144:	
  8174                           
  8175                           ;SlaveLiofilizadorVer1.c: 377:              Save_Log((usart_protocol.value[0]<<8)+(usart
      +                          _protocol.value[1]));
  8176  08CA  1703               	bsf	3,6	;RP1=1, select bank3
  8177  08CB  0854               	movf	(_usart_protocol^(0+384)+6),w
  8178  08CC  1303               	bcf	3,6	;RP1=0, select bank1
  8179  08CD  00BD               	movwf	??_Decodify_Command^(0+128)
  8180  08CE  01BE               	clrf	(??_Decodify_Command^(0+128)+1)
  8181  08CF  00BE               	movwf	(??_Decodify_Command^(0+128)+1)
  8182  08D0  01BD               	clrf	??_Decodify_Command^(0+128)
  8183  08D1  1703               	bsf	3,6	;RP1=1, select bank3
  8184  08D2  0855               	movf	(_usart_protocol^(0+384)+7),w
  8185  08D3  1303               	bcf	3,6	;RP1=0, select bank1
  8186  08D4  073D               	addwf	??_Decodify_Command^(0+128),w
  8187  08D5  00B1               	movwf	Save_Log@add_memory^(0+128)
  8188  08D6  3000               	movlw	0
  8189  08D7  1803               	skipnc
  8190  08D8  3001               	movlw	1
  8191  08D9  073E               	addwf	(??_Decodify_Command+1)^(0+128),w
  8192  08DA  00B2               	movwf	(Save_Log@add_memory+1)^(0+128)
  8193  08DB  01B3               	clrf	(Save_Log@add_memory^(0+128)+2)
  8194  08DC  1BB2               	btfsc	(Save_Log@add_memory^(0+128)+1),7
  8195  08DD  03B3               	decf	(Save_Log@add_memory+2)^(0+128),f
  8196  08DE  0833               	movf	(Save_Log@add_memory^(0+128)+2),w
  8197  08DF  00B4               	movwf	(Save_Log@add_memory+3)^(0+128)
  8198  08E0  120A  118A  2034   	fcall	_Save_Log
  8199                           
  8200                           ;SlaveLiofilizadorVer1.c: 378:              Delay_Led_Tmr0=0;
  8201  08E3  1683               	bsf	3,5	;RP0=1, select bank3
  8202  08E4  1703               	bsf	3,6	;RP1=1, select bank3
  8203  08E5  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  8204  08E6  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  8205                           
  8206                           ;SlaveLiofilizadorVer1.c: 379:              milisegundo=0;
  8207  08E7  01AA               	clrf	_milisegundo^(0+384)	;volatile
  8208  08E8  01AB               	clrf	(_milisegundo+1)^(0+384)	;volatile
  8209                           
  8210                           ;SlaveLiofilizadorVer1.c: 380:              segundo=0;
  8211  08E9  01BD               	clrf	_segundo^(0+384)	;volatile
  8212                           
  8213                           ;SlaveLiofilizadorVer1.c: 381:              break;
  8214  08EA  0008               	return
  8215  08EB                     l7152:	
  8216                           
  8217                           ;SlaveLiofilizadorVer1.c: 385:              if(usart_protocol.value[0]==0)
  8218  08EB  1703               	bsf	3,6	;RP1=1, select bank3
  8219  08EC  0854               	movf	(_usart_protocol^(0+384)+6),w
  8220  08ED  1D03               	btfss	3,2
  8221  08EE  28F1               	goto	l307
  8222                           
  8223                           ;SlaveLiofilizadorVer1.c: 386:                 generic_status.flag_global_hot=0;
  8224  08EF  1376               	bcf	_generic_status,6
  8225  08F0  0008               	return
  8226  08F1                     l307:	
  8227                           ;SlaveLiofilizadorVer1.c: 387:              else
  8228                           
  8229                           
  8230                           ;SlaveLiofilizadorVer1.c: 388:                 generic_status.flag_global_hot=1;
  8231  08F1  1776               	bsf	_generic_status,6
  8232  08F2  0008               	return
  8233  08F3                     l7156:	
  8234                           
  8235                           ;SlaveLiofilizadorVer1.c: 393:              Send_To_MB(2);
  8236  08F3  3002               	movlw	2
  8237  08F4  23A1  120A  158A   	fcall	_Send_To_MB
  8238                           
  8239                           ;SlaveLiofilizadorVer1.c: 403:              USART_put_int(3);
  8240  08F7  3003               	movlw	3
  8241  08F8  00A8               	movwf	USART_put_int@value^(0+128)
  8242  08F9  01A9               	clrf	(USART_put_int@value+1)^(0+128)
  8243  08FA  2F7F               	ljmp	l6174
  8244  08FB                     l7160:	
  8245                           ;SlaveLiofilizadorVer1.c: 405:              break;
  8246                           
  8247                           
  8248                           ;SlaveLiofilizadorVer1.c: 414:              Send_To_MB(3);
  8249  08FB  3003               	movlw	3
  8250  08FC  23A1  120A  158A   	fcall	_Send_To_MB
  8251                           
  8252                           ;SlaveLiofilizadorVer1.c: 415:              Send_Reply_OK();
  8253  08FF  27A0               	fcall	_Send_Reply_OK
  8254                           
  8255                           ;SlaveLiofilizadorVer1.c: 416:              Load_Work();
  8256  0900  120A  118A  2CA6   	ljmp	l6554
  8257  0903                     l7166:	
  8258                           ;SlaveLiofilizadorVer1.c: 417:              break;
  8259                           
  8260                           
  8261                           ;SlaveLiofilizadorVer1.c: 422:              EEPROM_Write_Byte(usart_protocol.value[0],
  8262  0903  1703               	bsf	3,6	;RP1=1, select bank3
  8263  0904  0855               	movf	(_usart_protocol^(0+384)+7),w
  8264  0905  1283               	bcf	3,5	;RP0=0, select bank0
  8265  0906  1303               	bcf	3,6	;RP1=0, select bank0
  8266  0907  00A0               	movwf	EEPROM_Write_Byte@dado
  8267  0908  1683               	bsf	3,5	;RP0=1, select bank3
  8268  0909  1703               	bsf	3,6	;RP1=1, select bank3
  8269  090A  0854               	movf	(_usart_protocol^(0+384)+6),w
  8270  090B  160A  158A  273C  120A  158A  	fcall	_EEPROM_Write_Byte
  8271  0910                     L9:	
  8272                           
  8273                           ;SlaveLiofilizadorVer1.c: 424:              Send_To_MB(3);
  8274  0910  3003               	movlw	3
  8275  0911  23A1  120A  158A   	fcall	_Send_To_MB
  8276                           
  8277                           ;SlaveLiofilizadorVer1.c: 425:              Send_Reply_OK();
  8278  0914  2FA0               	ljmp	l6584
  8279  0915                     l7170:	
  8280                           ;SlaveLiofilizadorVer1.c: 426:              break;
  8281                           
  8282                           
  8283                           ;SlaveLiofilizadorVer1.c: 428:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  8284  0915  1703               	bsf	3,6	;RP1=1, select bank3
  8285  0916  0854               	movf	(_usart_protocol^(0+384)+6),w
  8286  0917  120A  118A  257E  120A  158A  	fcall	_EEPROM_Read_Byte
  8287  091C  1683               	bsf	3,5	;RP0=1, select bank1
  8288  091D  1303               	bcf	3,6	;RP1=0, select bank1
  8289  091E  00E6               	movwf	Decodify_Command@tempchar^(0+128)
  8290                           
  8291                           ;SlaveLiofilizadorVer1.c: 429:              Send_To_MB(1);;
  8292  091F  3001               	movlw	1
  8293  0920  23A1  120A  158A   	fcall	_Send_To_MB
  8294                           
  8295                           ;SlaveLiofilizadorVer1.c: 430:              USART_putc(tempchar);
  8296  0923  0866               	movf	Decodify_Command@tempchar^(0+128),w
  8297  0924  2BDD               	ljmp	_USART_putc
  8298  0925                     l7176:	
  8299                           ;SlaveLiofilizadorVer1.c: 431:              break;
  8300                           
  8301                           
  8302                           ;SlaveLiofilizadorVer1.c: 433:              {;SlaveLiofilizadorVer1.c: 434:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 435:              add=usart_protocol.value[
      +                          0];
  8303  0925  1703               	bsf	3,6	;RP1=1, select bank3
  8304  0926  0854               	movf	(_usart_protocol^(0+384)+6),w
  8305  0927  1303               	bcf	3,6	;RP1=0, select bank1
  8306  0928  00DF               	movwf	Decodify_Command@add^(0+128)
  8307                           
  8308                           ;SlaveLiofilizadorVer1.c: 436:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  8309  0929  1703               	bsf	3,6	;RP1=1, select bank3
  8310  092A  0855               	movf	(_usart_protocol^(0+384)+7),w
  8311  092B  1303               	bcf	3,6	;RP1=0, select bank1
  8312  092C  00DE               	movwf	(Decodify_Command@dados+1)^(0+128)
  8313  092D  1703               	bsf	3,6	;RP1=1, select bank3
  8314  092E  0856               	movf	(_usart_protocol^(0+384)+8),w
  8315  092F  1303               	bcf	3,6	;RP1=0, select bank1
  8316  0930  00DD               	movwf	Decodify_Command@dados^(0+128)
  8317                           
  8318                           ;SlaveLiofilizadorVer1.c: 437:              EEPROM_Write_Integer(add,dados);
  8319  0931  085E               	movf	(Decodify_Command@dados+1)^(0+128),w
  8320  0932  1283               	bcf	3,5	;RP0=0, select bank0
  8321  0933  00A6               	movwf	EEPROM_Write_Integer@dado+1
  8322  0934  1683               	bsf	3,5	;RP0=1, select bank1
  8323  0935  085D               	movf	Decodify_Command@dados^(0+128),w
  8324  0936  1283               	bcf	3,5	;RP0=0, select bank0
  8325  0937  00A5               	movwf	EEPROM_Write_Integer@dado
  8326  0938  1683               	bsf	3,5	;RP0=1, select bank1
  8327  0939  085F               	movf	Decodify_Command@add^(0+128),w
  8328  093A  160A  158A  2701  120A  158A  	fcall	_EEPROM_Write_Integer
  8329  093F  2910               	goto	L9
  8330  0940                     l7184:	
  8331                           ;SlaveLiofilizadorVer1.c: 438:              Send_To_MB(3);
  8332                           
  8333                           
  8334                           ;SlaveLiofilizadorVer1.c: 443:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  8335  0940  1703               	bsf	3,6	;RP1=1, select bank3
  8336  0941  0854               	movf	(_usart_protocol^(0+384)+6),w
  8337  0942  120A  118A  259F  120A  158A  	fcall	_EEPROM_Read_Integer
  8338  0947  0824               	movf	?_EEPROM_Read_Integer+1,w
  8339  0948  1683               	bsf	3,5	;RP0=1, select bank1
  8340  0949  00E1               	movwf	(Decodify_Command@tempint+1)^(0+128)
  8341  094A  1283               	bcf	3,5	;RP0=0, select bank0
  8342  094B  0823               	movf	?_EEPROM_Read_Integer,w
  8343  094C                     L10:	
  8344  094C  1683               	bsf	3,5	;RP0=1, select bank1
  8345  094D  00E0               	movwf	Decodify_Command@tempint^(0+128)
  8346                           
  8347                           ;SlaveLiofilizadorVer1.c: 444:              Send_To_MB(2);
  8348  094E  3002               	movlw	2
  8349  094F  23A1  120A  158A   	fcall	_Send_To_MB
  8350                           
  8351                           ;SlaveLiofilizadorVer1.c: 445:              USART_put_int(tempint);
  8352  0952  0861               	movf	(Decodify_Command@tempint+1)^(0+128),w
  8353  0953  00A9               	movwf	(USART_put_int@value+1)^(0+128)
  8354  0954  0860               	movf	Decodify_Command@tempint^(0+128),w
  8355  0955  00A8               	movwf	USART_put_int@value^(0+128)
  8356  0956  2F7F               	ljmp	l6174
  8357  0957                     l7190:	
  8358                           ;SlaveLiofilizadorVer1.c: 446:              break;
  8359                           
  8360                           
  8361                           ;SlaveLiofilizadorVer1.c: 449:              EEPROM_Write_String(usart_protocol.value[0],
  8362  0957  30D5               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  8363  0958  1283               	bcf	3,5	;RP0=0, select bank0
  8364  0959  00A5               	movwf	EEPROM_Write_String@dado
  8365  095A  1683               	bsf	3,5	;RP0=1, select bank3
  8366  095B  1703               	bsf	3,6	;RP1=1, select bank3
  8367  095C  0854               	movf	(_usart_protocol^(0+384)+6),w
  8368  095D  160A  158A  2724  120A  158A  	fcall	_EEPROM_Write_String
  8369  0962  2910               	goto	L9
  8370  0963                     l7196:	
  8371                           ;SlaveLiofilizadorVer1.c: 451:              Send_To_MB(3);
  8372                           
  8373                           
  8374                           ;SlaveLiofilizadorVer1.c: 455:              {;SlaveLiofilizadorVer1.c: 457:             
      +                           EEPROM_Read_String(usart_protocol.value[0],texto);
  8375  0963  30BE               	movlw	(low (_texto| (0+256)))& (0+255)
  8376  0964  1283               	bcf	3,5	;RP0=0, select bank0
  8377  0965  00A3               	movwf	EEPROM_Read_String@dado
  8378  0966  1683               	bsf	3,5	;RP0=1, select bank3
  8379  0967  1703               	bsf	3,6	;RP1=1, select bank3
  8380  0968  0854               	movf	(_usart_protocol^(0+384)+6),w
  8381  0969  120A  118A  2492  120A  158A  	fcall	_EEPROM_Read_String
  8382                           
  8383                           ;SlaveLiofilizadorVer1.c: 458:              Send_To_MB(sizeof(texto));
  8384  096E  3010               	movlw	16
  8385  096F                     L11:	
  8386  096F  23A1  120A  158A   	fcall	_Send_To_MB
  8387                           
  8388                           ;SlaveLiofilizadorVer1.c: 459:              USART_put_string(texto);
  8389  0972  27EE               	fcall	PL66	;call to abstracted procedure
  8390  0973  160A  158A  2CD9   	ljmp	l6344
  8391  0976                     l7202:	
  8392                           ;SlaveLiofilizadorVer1.c: 460:              break;
  8393                           
  8394                           
  8395                           ;SlaveLiofilizadorVer1.c: 465:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  8396  0976  086D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  8397  0977  1283               	bcf	3,5	;RP0=0, select bank0
  8398  0978  00B2               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  8399  0979  1683               	bsf	3,5	;RP0=1, select bank1
  8400  097A  086C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  8401  097B  1283               	bcf	3,5	;RP0=0, select bank0
  8402  097C  00B1               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  8403  097D  1683               	bsf	3,5	;RP0=1, select bank1
  8404  097E  086B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  8405  097F  1283               	bcf	3,5	;RP0=0, select bank0
  8406  0980  00B0               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  8407  0981  1683               	bsf	3,5	;RP0=1, select bank1
  8408  0982  086A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  8409  0983  1283               	bcf	3,5	;RP0=0, select bank0
  8410  0984  00AF               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  8411  0985  30D9               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  8412  0986  00B3               	movwf	EEPROM_24C1025_Write_Byte@data
  8413  0987  1683               	bsf	3,5	;RP0=1, select bank3
  8414  0988  1703               	bsf	3,6	;RP1=1, select bank3
  8415  0989  0854               	movf	(_usart_protocol^(0+384)+6),w
  8416  098A  160A  158A  245D  120A  158A  	fcall	_EEPROM_24C1025_Write_Byte
  8417  098F  2910               	goto	L9
  8418  0990                     l7208:	
  8419                           ;SlaveLiofilizadorVer1.c: 468:              Send_To_MB(3);
  8420                           
  8421                           
  8422                           ;SlaveLiofilizadorVer1.c: 472:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  8423  0990  086D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  8424  0991  1283               	bcf	3,5	;RP0=0, select bank0
  8425  0992  00B4               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  8426  0993  1683               	bsf	3,5	;RP0=1, select bank1
  8427  0994  086C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  8428  0995  1283               	bcf	3,5	;RP0=0, select bank0
  8429  0996  00B3               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  8430  0997  1683               	bsf	3,5	;RP0=1, select bank1
  8431  0998  086B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  8432  0999  1283               	bcf	3,5	;RP0=0, select bank0
  8433  099A  00B2               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  8434  099B  1683               	bsf	3,5	;RP0=1, select bank1
  8435  099C  086A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  8436  099D  1283               	bcf	3,5	;RP0=0, select bank0
  8437  099E  00B1               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  8438  099F  1683               	bsf	3,5	;RP0=1, select bank3
  8439  09A0  1703               	bsf	3,6	;RP1=1, select bank3
  8440  09A1  0854               	movf	(_usart_protocol^(0+384)+6),w
  8441  09A2  160A  158A  2487  120A  158A  	fcall	_EEPROM_24C1025_Read_Byte
  8442  09A7  1683               	bsf	3,5	;RP0=1, select bank1
  8443  09A8  00E6               	movwf	Decodify_Command@tempchar^(0+128)
  8444                           
  8445                           ;SlaveLiofilizadorVer1.c: 476:              Send_To_MB(1);
  8446  09A9  3001               	movlw	1
  8447  09AA  23A1  120A  158A   	fcall	_Send_To_MB
  8448                           
  8449                           ;SlaveLiofilizadorVer1.c: 477:              USART_putc(tempchar);
  8450  09AD  0866               	movf	Decodify_Command@tempchar^(0+128),w
  8451  09AE  2BDD               	ljmp	_USART_putc
  8452  09AF                     l7214:	
  8453                           ;SlaveLiofilizadorVer1.c: 478:              break;
  8454                           
  8455                           
  8456                           ;SlaveLiofilizadorVer1.c: 480:              {;SlaveLiofilizadorVer1.c: 481:             
      +                           int valor;;SlaveLiofilizadorVer1.c: 482:              ((char *)&valor)[1]=(usart_protoc
      +                          ol.value[5]);
  8457  09AF  1703               	bsf	3,6	;RP1=1, select bank3
  8458  09B0  0859               	movf	(_usart_protocol^(0+384)+11),w
  8459  09B1  1303               	bcf	3,6	;RP1=0, select bank1
  8460  09B2  00E8               	movwf	(Decodify_Command@valor^(0+128)+1)
  8461                           
  8462                           ;SlaveLiofilizadorVer1.c: 483:              ((char *)&valor)[0]=(usart_protocol.value[6]
      +                          );
  8463  09B3  1703               	bsf	3,6	;RP1=1, select bank3
  8464  09B4  085A               	movf	(_usart_protocol^(0+384)+12),w
  8465  09B5  1303               	bcf	3,6	;RP1=0, select bank1
  8466  09B6  00E7               	movwf	Decodify_Command@valor^(0+128)
  8467                           
  8468                           ;SlaveLiofilizadorVer1.c: 484:              EEPROM_24C1025_Write_Int(usart_protocol.valu
      +                          e[0],
  8469  09B7  086D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  8470  09B8  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  8471  09B9  086C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  8472  09BA  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  8473  09BB  086B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  8474  09BC  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  8475  09BD  086A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  8476  09BE  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  8477  09BF  0868               	movf	(Decodify_Command@valor+1)^(0+128),w
  8478  09C0  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  8479  09C1  0867               	movf	Decodify_Command@valor^(0+128),w
  8480  09C2  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  8481  09C3  1703               	bsf	3,6	;RP1=1, select bank3
  8482  09C4  0854               	movf	(_usart_protocol^(0+384)+6),w
  8483  09C5  120A  118A  21F9  120A  158A  	fcall	_EEPROM_24C1025_Write_Int
  8484  09CA  2910               	goto	L9
  8485  09CB                     l7222:	
  8486                           ;SlaveLiofilizadorVer1.c: 487:              Send_To_MB(3);
  8487                           
  8488                           
  8489                           ;SlaveLiofilizadorVer1.c: 492:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  8490  09CB  086D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  8491  09CC  1283               	bcf	3,5	;RP0=0, select bank0
  8492  09CD  00B4               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  8493  09CE  1683               	bsf	3,5	;RP0=1, select bank1
  8494  09CF  086C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  8495  09D0  1283               	bcf	3,5	;RP0=0, select bank0
  8496  09D1  00B3               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  8497  09D2  1683               	bsf	3,5	;RP0=1, select bank1
  8498  09D3  086B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  8499  09D4  1283               	bcf	3,5	;RP0=0, select bank0
  8500  09D5  00B2               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  8501  09D6  1683               	bsf	3,5	;RP0=1, select bank1
  8502  09D7  086A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  8503  09D8  1283               	bcf	3,5	;RP0=0, select bank0
  8504  09D9  00B1               	movwf	EEPROM_24C1025_Read_Int@mem_add
  8505  09DA  1683               	bsf	3,5	;RP0=1, select bank3
  8506  09DB  1703               	bsf	3,6	;RP1=1, select bank3
  8507  09DC  0854               	movf	(_usart_protocol^(0+384)+6),w
  8508  09DD  160A  158A  24A2  120A  158A  	fcall	_EEPROM_24C1025_Read_Int
  8509  09E2  0832               	movf	?_EEPROM_24C1025_Read_Int+1,w
  8510  09E3  1683               	bsf	3,5	;RP0=1, select bank1
  8511  09E4  00E1               	movwf	(Decodify_Command@tempint+1)^(0+128)
  8512  09E5  1283               	bcf	3,5	;RP0=0, select bank0
  8513  09E6  0831               	movf	?_EEPROM_24C1025_Read_Int,w
  8514  09E7  294C               	goto	L10
  8515  09E8                     l7228:	
  8516                           ;SlaveLiofilizadorVer1.c: 494:              Send_To_MB(2);
  8517                           
  8518                           
  8519                           ;SlaveLiofilizadorVer1.c: 500:              {;SlaveLiofilizadorVer1.c: 501:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 502:              sizedata=usart_protocol.value
      +                          [5];
  8520  09E8  1703               	bsf	3,6	;RP1=1, select bank3
  8521  09E9  0859               	movf	(_usart_protocol^(0+384)+11),w
  8522  09EA  1303               	bcf	3,6	;RP1=0, select bank1
  8523  09EB  00E9               	movwf	Decodify_Command@sizedata^(0+128)
  8524                           
  8525                           ;SlaveLiofilizadorVer1.c: 503:              EEPROM_24C1025_Read_Buffer(usart_protocol.va
      +                          lue[0],
  8526  09EC  086D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  8527  09ED  1283               	bcf	3,5	;RP0=0, select bank0
  8528  09EE  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  8529  09EF  1683               	bsf	3,5	;RP0=1, select bank1
  8530  09F0  086C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  8531  09F1  1283               	bcf	3,5	;RP0=0, select bank0
  8532  09F2  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  8533  09F3  1683               	bsf	3,5	;RP0=1, select bank1
  8534  09F4  086B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  8535  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  8536  09F6  00A5               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  8537  09F7  1683               	bsf	3,5	;RP0=1, select bank1
  8538  09F8  086A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  8539  09F9  1283               	bcf	3,5	;RP0=0, select bank0
  8540  09FA  00A4               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  8541  09FB  1683               	bsf	3,5	;RP0=1, select bank1
  8542  09FC  0869               	movf	Decodify_Command@sizedata^(0+128),w
  8543  09FD  1283               	bcf	3,5	;RP0=0, select bank0
  8544  09FE  00A8               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  8545  09FF  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
  8546  0A00  00A9               	movwf	EEPROM_24C1025_Read_Buffer@data
  8547  0A01  3001               	movlw	1
  8548  0A02  00AA               	movwf	EEPROM_24C1025_Read_Buffer@data+1
  8549  0A03  1683               	bsf	3,5	;RP0=1, select bank3
  8550  0A04  1703               	bsf	3,6	;RP1=1, select bank3
  8551  0A05  0854               	movf	(_usart_protocol^(0+384)+6),w
  8552  0A06  256F  120A  158A   	fcall	_EEPROM_24C1025_Read_Buffer
  8553                           
  8554                           ;SlaveLiofilizadorVer1.c: 510:              Send_To_MB(sizedata);
  8555  0A09  1683               	bsf	3,5	;RP0=1, select bank1
  8556  0A0A  1303               	bcf	3,6	;RP1=0, select bank1
  8557  0A0B  0869               	movf	Decodify_Command@sizedata^(0+128),w
  8558  0A0C  23A1               	fcall	_Send_To_MB
  8559                           
  8560                           ;SlaveLiofilizadorVer1.c: 511:              USART_put_buffer(buffer,sizedata);
  8561  0A0D  0869               	movf	Decodify_Command@sizedata^(0+128),w
  8562  0A0E  1283               	bcf	3,5	;RP0=0, select bank0
  8563  0A0F  00A1               	movwf	USART_put_buffer@size
  8564  0A10  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
  8565  0A11  01A2               	clrf	USART_put_buffer@size+1
  8566  0A12  160A  158A  2CBD   	ljmp	_USART_put_buffer
  8567  0A15                     l7236:	
  8568                           ;SlaveLiofilizadorVer1.c: 512:              };SlaveLiofilizadorVer1.c: 513:             
      +                           break;
  8569                           
  8570                           
  8571                           ;SlaveLiofilizadorVer1.c: 516:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  8572  0A15  086D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  8573  0A16  1283               	bcf	3,5	;RP0=0, select bank0
  8574  0A17  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  8575  0A18  1683               	bsf	3,5	;RP0=1, select bank1
  8576  0A19  086C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  8577  0A1A  1283               	bcf	3,5	;RP0=0, select bank0
  8578  0A1B  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  8579  0A1C  1683               	bsf	3,5	;RP0=1, select bank1
  8580  0A1D  086B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  8581  0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  8582  0A1F  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  8583  0A20  1683               	bsf	3,5	;RP0=1, select bank1
  8584  0A21  086A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  8585  0A22  1283               	bcf	3,5	;RP0=0, select bank0
  8586  0A23  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  8587  0A24  1683               	bsf	3,5	;RP0=1, select bank3
  8588  0A25  1703               	bsf	3,6	;RP1=1, select bank3
  8589  0A26  0859               	movf	(_usart_protocol^(0+384)+11),w
  8590  0A27  1283               	bcf	3,5	;RP0=0, select bank0
  8591  0A28  1303               	bcf	3,6	;RP1=0, select bank0
  8592  0A29  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  8593  0A2A  30DA               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  8594  0A2B  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
  8595  0A2C  3001               	movlw	1
  8596  0A2D  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  8597  0A2E  1683               	bsf	3,5	;RP0=1, select bank3
  8598  0A2F  1703               	bsf	3,6	;RP1=1, select bank3
  8599  0A30  0854               	movf	(_usart_protocol^(0+384)+6),w
  8600  0A31  264F  120A  158A   	fcall	_EEPROM_24C1025_Write_Buffer
  8601  0A34  2910               	goto	L9
  8602  0A35                     l7242:	
  8603                           ;SlaveLiofilizadorVer1.c: 521:              Send_To_MB(3);
  8604                           
  8605                           
  8606                           ;SlaveLiofilizadorVer1.c: 526:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  8607  0A35  086D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  8608  0A36  1283               	bcf	3,5	;RP0=0, select bank0
  8609  0A37  00A5               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  8610  0A38  1683               	bsf	3,5	;RP0=1, select bank1
  8611  0A39  086C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  8612  0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  8613  0A3B  00A4               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  8614  0A3C  1683               	bsf	3,5	;RP0=1, select bank1
  8615  0A3D  086B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  8616  0A3E  1283               	bcf	3,5	;RP0=0, select bank0
  8617  0A3F  00A3               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  8618  0A40  1683               	bsf	3,5	;RP0=1, select bank1
  8619  0A41  086A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  8620  0A42  1283               	bcf	3,5	;RP0=0, select bank0
  8621  0A43  00A2               	movwf	EEPROM_24C1025_Write_Str@mem_add
  8622  0A44  30D9               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  8623  0A45  00A6               	movwf	EEPROM_24C1025_Write_Str@data
  8624  0A46  1683               	bsf	3,5	;RP0=1, select bank3
  8625  0A47  1703               	bsf	3,6	;RP1=1, select bank3
  8626  0A48  0854               	movf	(_usart_protocol^(0+384)+6),w
  8627  0A49  23EE  120A  158A   	fcall	_EEPROM_24C1025_Write_Str
  8628  0A4C  2910               	goto	L9
  8629  0A4D                     l7248:	
  8630                           ;SlaveLiofilizadorVer1.c: 529:              Send_To_MB(3);
  8631                           
  8632                           
  8633                           ;SlaveLiofilizadorVer1.c: 533:              {;SlaveLiofilizadorVer1.c: 534:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  8634  0A4D  086D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  8635  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  8636  0A4F  00A7               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  8637  0A50  1683               	bsf	3,5	;RP0=1, select bank1
  8638  0A51  086C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  8639  0A52  1283               	bcf	3,5	;RP0=0, select bank0
  8640  0A53  00A6               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  8641  0A54  1683               	bsf	3,5	;RP0=1, select bank1
  8642  0A55  086B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  8643  0A56  1283               	bcf	3,5	;RP0=0, select bank0
  8644  0A57  00A5               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  8645  0A58  1683               	bsf	3,5	;RP0=1, select bank1
  8646  0A59  086A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  8647  0A5A  1283               	bcf	3,5	;RP0=0, select bank0
  8648  0A5B  00A4               	movwf	EEPROM_24C1025_Read_Str@mem_add
  8649  0A5C  30BE               	movlw	(low (_texto| (0+256)))& (0+255)
  8650  0A5D  00A8               	movwf	EEPROM_24C1025_Read_Str@texto
  8651  0A5E  1683               	bsf	3,5	;RP0=1, select bank3
  8652  0A5F  1703               	bsf	3,6	;RP1=1, select bank3
  8653  0A60  0854               	movf	(_usart_protocol^(0+384)+6),w
  8654  0A61  248A  120A  158A   	fcall	_EEPROM_24C1025_Read_Str
  8655                           
  8656                           ;SlaveLiofilizadorVer1.c: 538:              Send_To_MB(strlen(texto));
  8657  0A64  30BE               	movlw	(low (_texto| (0+256)))& (0+255)
  8658  0A65  278D  120A  158A   	fcall	_strlen
  8659  0A68  0820               	movf	?_strlen,w
  8660  0A69  296F               	goto	L11
  8661  0A6A                     l7252:	
  8662                           
  8663                           ;SlaveLiofilizadorVer1.c: 544:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  8664  0A6A  1703               	bsf	3,6	;RP1=1, select bank3
  8665  0A6B  0855               	movf	(_usart_protocol^(0+384)+7),w
  8666  0A6C  1283               	bcf	3,5	;RP0=0, select bank0
  8667  0A6D  1303               	bcf	3,6	;RP1=0, select bank0
  8668  0A6E  00AF               	movwf	EEPROM_24C1025_Fill_All@value
  8669  0A6F  1683               	bsf	3,5	;RP0=1, select bank3
  8670  0A70  1703               	bsf	3,6	;RP1=1, select bank3
  8671  0A71  0854               	movf	(_usart_protocol^(0+384)+6),w
  8672  0A72  160A  158A  256C  120A  158A  	fcall	_EEPROM_24C1025_Fill_All
  8673  0A77  2910               	goto	L9
  8674  0A78                     l7258:	
  8675                           ;SlaveLiofilizadorVer1.c: 546:              Send_To_MB(3);
  8676                           
  8677                           
  8678                           ;SlaveLiofilizadorVer1.c: 551:              {;SlaveLiofilizadorVer1.c: 552:             
      +                           char hh[10];;SlaveLiofilizadorVer1.c: 553:              char mm[10];;SlaveLiofilizadorV
      +                          er1.c: 554:              char ss[10];;SlaveLiofilizadorVer1.c: 556:              itoa(hh
      +                          ,hora,10);
  8679  0A78  1703               	bsf	3,6	;RP1=1, select bank3
  8680  0A79  083C               	movf	_hora^(0+384),w	;volatile
  8681  0A7A  27CF  120A  158A   	fcall	PL50	;call to abstracted procedure
  8682  0A7D  30BF               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  8683  0A7E  01B2               	clrf	itoa@base+1
  8684  0A7F  2765  120A  158A   	fcall	_itoa
  8685                           
  8686                           ;SlaveLiofilizadorVer1.c: 557:              itoa(mm,minuto,10);
  8687  0A82  1683               	bsf	3,5	;RP0=1, select bank3
  8688  0A83  1703               	bsf	3,6	;RP1=1, select bank3
  8689  0A84  083B               	movf	_minuto^(0+384),w	;volatile
  8690  0A85  27CF  120A  158A   	fcall	PL50	;call to abstracted procedure
  8691  0A88  30C9               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  8692  0A89  01B2               	clrf	itoa@base+1
  8693  0A8A  2765  120A  158A   	fcall	_itoa
  8694                           
  8695                           ;SlaveLiofilizadorVer1.c: 558:              itoa(ss,segundo,10);
  8696  0A8D  1683               	bsf	3,5	;RP0=1, select bank3
  8697  0A8E  1703               	bsf	3,6	;RP1=1, select bank3
  8698  0A8F  083D               	movf	_segundo^(0+384),w	;volatile
  8699  0A90  27CF  120A  158A   	fcall	PL50	;call to abstracted procedure
  8700  0A93  30D3               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  8701  0A94  01B2               	clrf	itoa@base+1
  8702  0A95  2765               	fcall	_itoa
  8703                           
  8704                           ;SlaveLiofilizadorVer1.c: 561:              strcpy(texto,"");
  8705  0A96  3038               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  8706  0A97  00A0               	movwf	strcpy@from
  8707  0A98  30BE               	movlw	(low (_texto| (0+256)))& (0+255)
  8708  0A99  160A  158A  2472  120A  158A  	fcall	_strcpy
  8709                           
  8710                           ;SlaveLiofilizadorVer1.c: 562:              if (hh[1]==0)
  8711  0A9E  1683               	bsf	3,5	;RP0=1, select bank1
  8712  0A9F  0840               	movf	(Decodify_Command@hh^(0+128)+1),w
  8713  0AA0  1D03               	btfss	3,2
  8714  0AA1  2AAA               	goto	l7266
  8715                           
  8716                           ;SlaveLiofilizadorVer1.c: 563:                 {;SlaveLiofilizadorVer1.c: 564:          
      +                                 strcat(texto,"0");
  8717  0AA2  27D6  120A  158A   	fcall	PL52	;call to abstracted procedure
  8718  0AA5  23BD  120A  158A   	fcall	_strcat
  8719                           
  8720                           ;SlaveLiofilizadorVer1.c: 565:                 hh[2]=0;
  8721  0AA8  1683               	bsf	3,5	;RP0=1, select bank1
  8722  0AA9  01C1               	clrf	(Decodify_Command@hh^(0+128)+2)
  8723  0AAA                     l7266:	
  8724                           
  8725                           ;SlaveLiofilizadorVer1.c: 567:              strcat(texto,hh);
  8726  0AAA  30BF               	movlw	(low (Decodify_Command@hh| 0))& (0+255)
  8727  0AAB  1283               	bcf	3,5	;RP0=0, select bank0
  8728  0AAC  00A0               	movwf	strcat@from
  8729  0AAD  30BE               	movlw	(low (_texto| (0+256)))& (0+255)
  8730  0AAE  01A1               	clrf	strcat@from+1
  8731  0AAF  23BD  120A  158A   	fcall	_strcat
  8732                           
  8733                           ;SlaveLiofilizadorVer1.c: 568:              strcat(texto,":");
  8734  0AB2  27E3  120A  158A   	fcall	PL62	;call to abstracted procedure
  8735  0AB5  23BD  120A  158A   	fcall	_strcat
  8736                           
  8737                           ;SlaveLiofilizadorVer1.c: 569:              if(mm[1]==0)
  8738  0AB8  1683               	bsf	3,5	;RP0=1, select bank1
  8739  0AB9  084A               	movf	(Decodify_Command@mm^(0+128)+1),w
  8740  0ABA  1D03               	btfss	3,2
  8741  0ABB  2AC4               	goto	l7276
  8742                           
  8743                           ;SlaveLiofilizadorVer1.c: 570:                 {;SlaveLiofilizadorVer1.c: 571:          
      +                                 strcat(texto,"0");
  8744  0ABC  27D6  120A  158A   	fcall	PL52	;call to abstracted procedure
  8745  0ABF  23BD  120A  158A   	fcall	_strcat
  8746                           
  8747                           ;SlaveLiofilizadorVer1.c: 572:                 mm[2]=0;
  8748  0AC2  1683               	bsf	3,5	;RP0=1, select bank1
  8749  0AC3  01CB               	clrf	(Decodify_Command@mm^(0+128)+2)
  8750  0AC4                     l7276:	
  8751                           
  8752                           ;SlaveLiofilizadorVer1.c: 574:              strcat(texto,mm);
  8753  0AC4  30C9               	movlw	(low (Decodify_Command@mm| 0))& (0+255)
  8754  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  8755  0AC6  00A0               	movwf	strcat@from
  8756  0AC7  30BE               	movlw	(low (_texto| (0+256)))& (0+255)
  8757  0AC8  01A1               	clrf	strcat@from+1
  8758  0AC9  23BD  120A  158A   	fcall	_strcat
  8759                           
  8760                           ;SlaveLiofilizadorVer1.c: 575:              strcat(texto,":");
  8761  0ACC  27E3  120A  158A   	fcall	PL62	;call to abstracted procedure
  8762  0ACF  23BD  120A  158A   	fcall	_strcat
  8763                           
  8764                           ;SlaveLiofilizadorVer1.c: 576:              if(ss[1]==0)
  8765  0AD2  1683               	bsf	3,5	;RP0=1, select bank1
  8766  0AD3  0854               	movf	(Decodify_Command@ss^(0+128)+1),w
  8767  0AD4  1D03               	btfss	3,2
  8768  0AD5  2ADE               	goto	l7286
  8769                           
  8770                           ;SlaveLiofilizadorVer1.c: 577:                 {;SlaveLiofilizadorVer1.c: 578:          
      +                                 strcat(texto,"0");
  8771  0AD6  27D6  120A  158A   	fcall	PL52	;call to abstracted procedure
  8772  0AD9  23BD  120A  158A   	fcall	_strcat
  8773                           
  8774                           ;SlaveLiofilizadorVer1.c: 579:                 ss[2]=0;
  8775  0ADC  1683               	bsf	3,5	;RP0=1, select bank1
  8776  0ADD  01D5               	clrf	(Decodify_Command@ss^(0+128)+2)
  8777  0ADE                     l7286:	
  8778                           
  8779                           ;SlaveLiofilizadorVer1.c: 581:              strcat(texto,ss);
  8780  0ADE  30D3               	movlw	(low (Decodify_Command@ss| 0))& (0+255)
  8781  0ADF  1283               	bcf	3,5	;RP0=0, select bank0
  8782  0AE0  00A0               	movwf	strcat@from
  8783  0AE1  30BE               	movlw	(low (_texto| (0+256)))& (0+255)
  8784  0AE2  01A1               	clrf	strcat@from+1
  8785  0AE3  23BD  120A  158A   	fcall	_strcat
  8786                           
  8787                           ;SlaveLiofilizadorVer1.c: 582:              Send_To_MB(strlen(texto));
  8788  0AE6  30BE               	movlw	(low (_texto| (0+256)))& (0+255)
  8789  0AE7  278D  120A  158A   	fcall	_strlen
  8790  0AEA  0820               	movf	?_strlen,w
  8791  0AEB  23A1  120A  158A   	fcall	_Send_To_MB
  8792                           
  8793                           ;SlaveLiofilizadorVer1.c: 583:              USART_put_string(texto);
  8794  0AEE  27EE               	fcall	PL66	;call to abstracted procedure
  8795  0AEF  160A  158A  24D9  120A  158A  	fcall	_USART_put_string
  8796                           
  8797                           ;SlaveLiofilizadorVer1.c: 584:              USART_putc(0);
  8798  0AF4  3000               	movlw	0
  8799  0AF5  2BDD               	ljmp	_USART_putc
  8800  0AF6                     l7294:	
  8801                           ;SlaveLiofilizadorVer1.c: 585:              };SlaveLiofilizadorVer1.c: 586:             
      +                           break;
  8802                           
  8803                           
  8804                           ;SlaveLiofilizadorVer1.c: 589:              hora=usart_protocol.value[0];
  8805  0AF6  1703               	bsf	3,6	;RP1=1, select bank3
  8806  0AF7  0854               	movf	(_usart_protocol^(0+384)+6),w
  8807  0AF8  00BC               	movwf	_hora^(0+384)	;volatile
  8808                           
  8809                           ;SlaveLiofilizadorVer1.c: 590:              minuto=usart_protocol.value[1];
  8810  0AF9  0855               	movf	(_usart_protocol^(0+384)+7),w
  8811  0AFA  00BB               	movwf	_minuto^(0+384)	;volatile
  8812                           
  8813                           ;SlaveLiofilizadorVer1.c: 591:              segundo=usart_protocol.value[2];
  8814  0AFB  0856               	movf	(_usart_protocol^(0+384)+8),w
  8815  0AFC  00BD               	movwf	_segundo^(0+384)	;volatile
  8816  0AFD  2910               	goto	L9
  8817  0AFE                     l7300:	
  8818                           ;SlaveLiofilizadorVer1.c: 592:              Send_To_MB(3);
  8819                           
  8820                           
  8821                           ;SlaveLiofilizadorVer1.c: 597:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  8822  0AFE  1703               	bsf	3,6	;RP1=1, select bank3
  8823  0AFF  0854               	movf	(_usart_protocol^(0+384)+6),w
  8824  0B00  1303               	bcf	3,6	;RP1=0, select bank1
  8825  0B01  00AF               	movwf	PROCULUS_Show_Screen@screen^(0+128)
  8826  0B02  01B0               	clrf	(PROCULUS_Show_Screen@screen+1)^(0+128)
  8827  0B03  160A  158A  25A7  120A  158A  	fcall	_PROCULUS_Show_Screen
  8828  0B08  2910               	goto	L9
  8829  0B09                     l7306:	
  8830                           ;SlaveLiofilizadorVer1.c: 598:              Send_To_MB(3);
  8831                           
  8832                           
  8833                           ;SlaveLiofilizadorVer1.c: 603:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  8834  0B09  1703               	bsf	3,6	;RP1=1, select bank3
  8835  0B0A  0854               	movf	(_usart_protocol^(0+384)+6),w
  8836  0B0B  1303               	bcf	3,6	;RP1=0, select bank1
  8837  0B0C  00B0               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  8838  0B0D  1703               	bsf	3,6	;RP1=1, select bank3
  8839  0B0E  0855               	movf	(_usart_protocol^(0+384)+7),w
  8840  0B0F  1303               	bcf	3,6	;RP1=0, select bank1
  8841  0B10  00AF               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  8842  0B11  160A  158A  25B1  120A  158A  	fcall	_PROCULUS_Buzzer
  8843  0B16  2910               	goto	L9
  8844  0B17                     l7312:	
  8845                           ;SlaveLiofilizadorVer1.c: 605:              Send_To_MB(3);
  8846                           
  8847                           
  8848                           ;SlaveLiofilizadorVer1.c: 609:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  8849  0B17  1703               	bsf	3,6	;RP1=1, select bank3
  8850  0B18  0854               	movf	(_usart_protocol^(0+384)+6),w
  8851  0B19  1303               	bcf	3,6	;RP1=0, select bank1
  8852  0B1A  00B4               	movwf	(PROCULUS_VP_Write_String@vp+1)^(0+128)
  8853  0B1B  1703               	bsf	3,6	;RP1=1, select bank3
  8854  0B1C  0855               	movf	(_usart_protocol^(0+384)+7),w
  8855  0B1D  1303               	bcf	3,6	;RP1=0, select bank1
  8856  0B1E  00B3               	movwf	PROCULUS_VP_Write_String@vp^(0+128)
  8857  0B1F  30D6               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  8858  0B20  00B5               	movwf	PROCULUS_VP_Write_String@text^(0+128)
  8859  0B21  160A  158A  244A  120A  158A  	fcall	_PROCULUS_VP_Write_String
  8860  0B26  2910               	goto	L9
  8861  0B27                     l7318:	
  8862                           ;SlaveLiofilizadorVer1.c: 612:              Send_To_MB(3);
  8863                           
  8864                           
  8865                           ;SlaveLiofilizadorVer1.c: 618:              if(usart_protocol.value[0]==0)
  8866  0B27  1703               	bsf	3,6	;RP1=1, select bank3
  8867  0B28  0854               	movf	(_usart_protocol^(0+384)+6),w
  8868  0B29  1D03               	btfss	3,2
  8869  0B2A  2B36               	goto	l7324
  8870                           
  8871                           ;SlaveLiofilizadorVer1.c: 619:                 {;SlaveLiofilizadorVer1.c: 620:          
      +                                 if(!usart_protocol.value[1])
  8872  0B2B  0855               	movf	(_usart_protocol^(0+384)+7),w
  8873  0B2C  1D03               	btfss	3,2
  8874  0B2D  2B32               	goto	l336
  8875                           
  8876                           ;SlaveLiofilizadorVer1.c: 621:                    PORTCbits.RC0=0;
  8877  0B2E  1283               	bcf	3,5	;RP0=0, select bank0
  8878  0B2F  1303               	bcf	3,6	;RP1=0, select bank0
  8879  0B30  1007               	bcf	7,0	;volatile
  8880  0B31  2910               	goto	L9
  8881  0B32                     l336:	
  8882                           ;SlaveLiofilizadorVer1.c: 622:                 else
  8883                           
  8884                           
  8885                           ;SlaveLiofilizadorVer1.c: 623:                    PORTCbits.RC0=1;
  8886  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  8887  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  8888  0B34  1407               	bsf	7,0	;volatile
  8889  0B35  2910               	goto	L9
  8890  0B36                     l7324:	
  8891  0B36  0B54               	decfsz	(_usart_protocol^(0+384)+6),w
  8892  0B37  2910               	goto	L9
  8893                           
  8894                           ;SlaveLiofilizadorVer1.c: 626:                      {;SlaveLiofilizadorVer1.c: 627:     
      +                                            if(!usart_protocol.value[1])
  8895  0B38  0855               	movf	(_usart_protocol^(0+384)+7),w
  8896  0B39  1D03               	btfss	3,2
  8897  0B3A  2B3F               	goto	l340
  8898                           
  8899                           ;SlaveLiofilizadorVer1.c: 628:                          PORTCbits.RC1=0;
  8900  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  8901  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  8902  0B3D  1087               	bcf	7,1	;volatile
  8903  0B3E  2910               	goto	L9
  8904  0B3F                     l340:	
  8905                           ;SlaveLiofilizadorVer1.c: 629:                       else
  8906                           
  8907                           
  8908                           ;SlaveLiofilizadorVer1.c: 630:                          PORTCbits.RC1=1;
  8909  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  8910  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  8911  0B41  1487               	bsf	7,1	;volatile
  8912  0B42  2910               	goto	L9
  8913  0B43                     l7336:	
  8914                           ;SlaveLiofilizadorVer1.c: 632:              Send_To_MB(3);
  8915                           
  8916  0B43  1703               	bsf	3,6	;RP1=1, select bank3
  8917  0B44  0852               	movf	(_usart_protocol^(0+384)+4),w
  8918  0B45  1303               	bcf	3,6	;RP1=0, select bank1
  8919  0B46  00BD               	movwf	??_Decodify_Command^(0+128)
  8920  0B47  01BE               	clrf	(??_Decodify_Command^(0+128)+1)
  8921                           
  8922                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8923                           ; Switch size 1, requested type "space"
  8924                           ; Number of cases is 1, Range of values is 0 to 0
  8925                           ; switch strategies available:
  8926                           ; Name         Instructions Cycles
  8927                           ; simple_byte            4     3 (average)
  8928                           ; direct_byte           11     8 (fixed)
  8929                           ; jumptable            260     6 (fixed)
  8930                           ;	Chosen strategy is simple_byte
  8931  0B48  083E               	movf	(??_Decodify_Command+1)^(0+128),w
  8932  0B49  3A00               	xorlw	0	; case 0
  8933  0B4A  1903               	skipnz
  8934  0B4B  2B4D               	goto	l7500
  8935  0B4C  2BA0               	goto	l342
  8936  0B4D                     l7500:	
  8937                           
  8938                           ; Switch size 1, requested type "space"
  8939                           ; Number of cases is 27, Range of values is 1 to 43
  8940                           ; switch strategies available:
  8941                           ; Name         Instructions Cycles
  8942                           ; simple_byte           82    42 (average)
  8943                           ; direct_byte          140    11 (fixed)
  8944                           ; jumptable            263     9 (fixed)
  8945                           ;	Chosen strategy is simple_byte
  8946  0B4D  083D               	movf	??_Decodify_Command^(0+128),w
  8947  0B4E  3A01               	xorlw	1	; case 1
  8948  0B4F  1903               	skipnz
  8949  0B50  28FB               	goto	l7160
  8950  0B51  3A03               	xorlw	3	; case 2
  8951  0B52  1903               	skipnz
  8952  0B53  28CA               	goto	l7144
  8953  0B54  3A01               	xorlw	1	; case 3
  8954  0B55  1903               	skipnz
  8955  0B56  28F3               	goto	l7156
  8956  0B57  3A0B               	xorlw	11	; case 8
  8957  0B58  1903               	skipnz
  8958  0B59  2903               	goto	l7166
  8959  0B5A  3A01               	xorlw	1	; case 9
  8960  0B5B  1903               	skipnz
  8961  0B5C  2915               	goto	l7170
  8962  0B5D  3A03               	xorlw	3	; case 10
  8963  0B5E  1903               	skipnz
  8964  0B5F  2925               	goto	l7176
  8965  0B60  3A01               	xorlw	1	; case 11
  8966  0B61  1903               	skipnz
  8967  0B62  2940               	goto	l7184
  8968  0B63  3A07               	xorlw	7	; case 12
  8969  0B64  1903               	skipnz
  8970  0B65  2957               	goto	l7190
  8971  0B66  3A01               	xorlw	1	; case 13
  8972  0B67  1903               	skipnz
  8973  0B68  2963               	goto	l7196
  8974  0B69  3A1C               	xorlw	28	; case 17
  8975  0B6A  1903               	skipnz
  8976  0B6B  2976               	goto	l7202
  8977  0B6C  3A03               	xorlw	3	; case 18
  8978  0B6D  1903               	skipnz
  8979  0B6E  2990               	goto	l7208
  8980  0B6F  3A01               	xorlw	1	; case 19
  8981  0B70  1903               	skipnz
  8982  0B71  29AF               	goto	l7214
  8983  0B72  3A07               	xorlw	7	; case 20
  8984  0B73  1903               	skipnz
  8985  0B74  29CB               	goto	l7222
  8986  0B75  3A01               	xorlw	1	; case 21
  8987  0B76  1903               	skipnz
  8988  0B77  2A35               	goto	l7242
  8989  0B78  3A03               	xorlw	3	; case 22
  8990  0B79  1903               	skipnz
  8991  0B7A  2A4D               	goto	l7248
  8992  0B7B  3A01               	xorlw	1	; case 23
  8993  0B7C  1903               	skipnz
  8994  0B7D  2A15               	goto	l7236
  8995  0B7E  3A0F               	xorlw	15	; case 24
  8996  0B7F  1903               	skipnz
  8997  0B80  29E8               	goto	l7228
  8998  0B81  3A01               	xorlw	1	; case 25
  8999  0B82  1903               	skipnz
  9000  0B83  2A6A               	goto	l7252
  9001  0B84  3A03               	xorlw	3	; case 26
  9002  0B85  1903               	skipnz
  9003  0B86  2866               	goto	l7128
  9004  0B87  3A04               	xorlw	4	; case 30
  9005  0B88  1903               	skipnz
  9006  0B89  2AF6               	goto	l7294
  9007  0B8A  3A01               	xorlw	1	; case 31
  9008  0B8B  1903               	skipnz
  9009  0B8C  2A78               	goto	l7258
  9010  0B8D  3A3F               	xorlw	63	; case 32
  9011  0B8E  1903               	skipnz
  9012  0B8F  2AFE               	goto	l7300
  9013  0B90  3A01               	xorlw	1	; case 33
  9014  0B91  1903               	skipnz
  9015  0B92  2B09               	goto	l7306
  9016  0B93  3A05               	xorlw	5	; case 36
  9017  0B94  1903               	skipnz
  9018  0B95  2B17               	goto	l7312
  9019  0B96  3A02               	xorlw	2	; case 38
  9020  0B97  1903               	skipnz
  9021  0B98  2B27               	goto	l7318
  9022  0B99  3A0C               	xorlw	12	; case 42
  9023  0B9A  1903               	skipnz
  9024  0B9B  28EB               	goto	l7152
  9025  0B9C  3A01               	xorlw	1	; case 43
  9026  0B9D  1903               	skipnz
  9027  0B9E  285C               	goto	l7124
  9028  0B9F  2BA0               	goto	l342
  9029  0BA0                     l342:	
  9030  0BA0  0008               	return
  9031  0BA1                     __end_of_Decodify_Command:	
  9032  0BA1                     __ptext22:	
  9033 ;; *************** function _Send_To_MB *****************
  9034 ;; Defined at:
  9035 ;;		line 642 in file "SlaveLiofilizadorVer1.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;  size            1    wreg     unsigned char 
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;  size            1    1[BANK0 ] unsigned char 
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  1    wreg      void 
  9042 ;; Registers used:
  9043 ;;		wreg, status,2, status,0, pclath, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/100
  9046 ;;		On exit  : 300/100
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9049 ;;      Params:         0       0       0       0       0
  9050 ;;      Locals:         0       1       0       0       0
  9051 ;;      Temps:          0       0       0       0       0
  9052 ;;      Totals:         0       1       0       0       0
  9053 ;;Total ram usage:        1 bytes
  9054 ;; Hardware stack levels used:    1
  9055 ;; Hardware stack levels required when called:    2
  9056 ;; This function calls:
  9057 ;;		_USART_putc
  9058 ;; This function is called by:
  9059 ;;		_Decodify_Command
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           
  9064                           ;psect for function _Send_To_MB
  9065  0BA1                     _Send_To_MB:	
  9066                           
  9067                           ;incstack = 0
  9068                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  9069                           ;Send_To_MB@size stored from wreg
  9070  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  9071  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  9072  0BA3  00A1               	movwf	Send_To_MB@size
  9073                           
  9074                           ;SlaveLiofilizadorVer1.c: 644:      USART_putc(0xAA);
  9075  0BA4  30AA               	movlw	170
  9076  0BA5  23DD  120A  158A   	fcall	_USART_putc
  9077                           
  9078                           ;SlaveLiofilizadorVer1.c: 645:      USART_putc(0xBB);
  9079  0BA8  30BB               	movlw	187
  9080  0BA9  23DD  120A  158A   	fcall	_USART_putc
  9081                           
  9082                           ;SlaveLiofilizadorVer1.c: 646:      USART_putc(Board_Number);
  9083  0BAC  1703               	bsf	3,6	;RP1=1, select bank3
  9084  0BAD  0834               	movf	_Board_Number^(0+384),w
  9085  0BAE  23DD  120A  158A   	fcall	_USART_putc
  9086                           
  9087                           ;SlaveLiofilizadorVer1.c: 647:      USART_putc(0x00);
  9088  0BB1  3000               	movlw	0
  9089  0BB2  23DD  120A  158A   	fcall	_USART_putc
  9090                           
  9091                           ;SlaveLiofilizadorVer1.c: 648:      USART_putc(usart_protocol.command);
  9092  0BB5  1703               	bsf	3,6	;RP1=1, select bank3
  9093  0BB6  0852               	movf	(_usart_protocol^(0+384)+4),w
  9094  0BB7  23DD  120A  158A   	fcall	_USART_putc
  9095                           
  9096                           ;SlaveLiofilizadorVer1.c: 649:      USART_putc(size);
  9097  0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  9098  0BBB  0821               	movf	Send_To_MB@size,w
  9099  0BBC  2BDD               	ljmp	_USART_putc
  9100  0BBD                     __end_of_Send_To_MB:	
  9101  0BBD                     __ptext16:	
  9102 ;; *************** function _strcat *****************
  9103 ;; Defined at:
  9104 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;  to              1    wreg     PTR unsigned char 
  9107 ;;		 -> texto(16), 
  9108 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  9109 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  9110 ;;		 -> STR_3(2), Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;  to              1    4[BANK0 ] PTR unsigned char 
  9113 ;;		 -> texto(16), 
  9114 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  9115 ;;		 -> texto(16), 
  9116 ;; Return value:  Size  Location     Type
  9117 ;;                  1    wreg      PTR unsigned char 
  9118 ;; Registers used:
  9119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  9120 ;; Tracked objects:
  9121 ;;		On entry : B00/800
  9122 ;;		On exit  : B00/800
  9123 ;;		Unchanged: 0/0
  9124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9125 ;;      Params:         0       2       0       0       0
  9126 ;;      Locals:         0       2       0       0       0
  9127 ;;      Temps:          0       1       0       0       0
  9128 ;;      Totals:         0       5       0       0       0
  9129 ;;Total ram usage:        5 bytes
  9130 ;; Hardware stack levels used:    2
  9131 ;; Hardware stack levels required when called:    1
  9132 ;; This function calls:
  9133 ;;		Nothing
  9134 ;; This function is called by:
  9135 ;;		_Decodify_Command
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           
  9140                           ;psect for function _strcat
  9141  0BBD                     _strcat:	
  9142                           
  9143                           ;incstack = 0
  9144                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  9145                           ;strcat@to stored from wreg
  9146  0BBD  00A4               	movwf	strcat@to
  9147  0BBE  00A3               	movwf	strcat@cp
  9148  0BBF                     l5192:	
  9149  0BBF  0823               	movf	strcat@cp,w
  9150  0BC0  0084               	movwf	4
  9151  0BC1  0800               	movf	0,w
  9152  0BC2  1903               	btfsc	3,2
  9153  0BC3  2BCA               	goto	l5196
  9154  0BC4  0AA3               	incf	strcat@cp,f
  9155  0BC5  2BBF               	goto	l5192
  9156  0BC6                     l5194:	
  9157  0BC6  0AA3               	incf	strcat@cp,f
  9158  0BC7  0AA0               	incf	strcat@from,f
  9159  0BC8  1903               	skipnz
  9160  0BC9  0AA1               	incf	strcat@from+1,f
  9161  0BCA                     l5196:	
  9162  0BCA  0821               	movf	strcat@from+1,w
  9163  0BCB  00FF               	movwf	127
  9164  0BCC  0820               	movf	strcat@from,w
  9165  0BCD  0084               	movwf	4
  9166  0BCE  160A  158A  2000  120A  158A  	fcall	stringtab
  9167  0BD3  00A2               	movwf	??_strcat
  9168  0BD4  0823               	movf	strcat@cp,w
  9169  0BD5  0084               	movwf	4
  9170  0BD6  0822               	movf	??_strcat,w
  9171  0BD7  1783               	bsf	3,7	;select IRP bank2
  9172  0BD8  0080               	movwf	0
  9173  0BD9  0800               	movf	0,w
  9174  0BDA  1903               	btfsc	3,2
  9175  0BDB  0008               	return
  9176  0BDC  2BC6               	goto	l5194
  9177  0BDD                     __end_of_strcat:	
  9178  0BDD                     __ptext38:	
  9179 ;; *************** function _USART_putc *****************
  9180 ;; Defined at:
  9181 ;;		line 89 in file "usart.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;  value           1    wreg     unsigned char 
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;  value           1    0[BANK0 ] unsigned char 
  9186 ;; Return value:  Size  Location     Type
  9187 ;;                  1    wreg      void 
  9188 ;; Registers used:
  9189 ;;		wreg
  9190 ;; Tracked objects:
  9191 ;;		On entry : 0/100
  9192 ;;		On exit  : 300/100
  9193 ;;		Unchanged: 0/0
  9194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9195 ;;      Params:         0       0       0       0       0
  9196 ;;      Locals:         0       1       0       0       0
  9197 ;;      Temps:          0       0       0       0       0
  9198 ;;      Totals:         0       1       0       0       0
  9199 ;;Total ram usage:        1 bytes
  9200 ;; Hardware stack levels used:    1
  9201 ;; Hardware stack levels required when called:    1
  9202 ;; This function calls:
  9203 ;;		Nothing
  9204 ;; This function is called by:
  9205 ;;		_Decodify_Command
  9206 ;;		_Send_To_MB
  9207 ;;		_PROCULUS_Control_Register_Write
  9208 ;;		_PROCULUS_VP_Write
  9209 ;;		_USART_put_buffer
  9210 ;;		_USART_put_int
  9211 ;;		_USART_put_string
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215                           
  9216                           ;psect for function _USART_putc
  9217  0BDD                     _USART_putc:	
  9218                           
  9219                           ;incstack = 0
  9220                           ; Regs used in _USART_putc: [wreg]
  9221                           ;USART_putc@value stored from wreg
  9222  0BDD  1283               	bcf	3,5	;RP0=0, select bank0
  9223  0BDE  1303               	bcf	3,6	;RP1=0, select bank0
  9224  0BDF  00A0               	movwf	USART_putc@value
  9225                           
  9226                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
  9227  0BE0  3014               	movlw	20
  9228  0BE1  1683               	bsf	3,5	;RP0=1, select bank3
  9229  0BE2  1703               	bsf	3,6	;RP1=1, select bank3
  9230  0BE3  00AC               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  9231  0BE4  01AD               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  9232  0BE5                     l796:	
  9233                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
  9234                           
  9235  0BE5  1303               	bcf	3,6	;RP1=0, select bank1
  9236  0BE6  1C98               	btfss	24,1	;volatile
  9237  0BE7  2BE5               	goto	l796
  9238                           
  9239                           ;usart.c: 93:     TXREG=value;
  9240  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  9241  0BE9  0820               	movf	USART_putc@value,w
  9242  0BEA  0099               	movwf	25	;volatile
  9243                           
  9244                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
  9245  0BEB  1683               	bsf	3,5	;RP0=1, select bank1
  9246  0BEC  1698               	bsf	24,5	;volatile
  9247  0BED  0008               	return
  9248  0BEE                     __end_of_USART_putc:	
  9249  0BEE                     __ptext48:	
  9250 ;; *************** function _EEPROM_24C1025_Write_Str *****************
  9251 ;; Defined at:
  9252 ;;		line 135 in file "EEPROM_24C1025.c"
  9253 ;; Parameters:    Size  Location     Type
  9254 ;;  chip_add        1    wreg     unsigned char 
  9255 ;;  mem_add         4    2[BANK0 ] unsigned long 
  9256 ;;  data            1    6[BANK0 ] PTR unsigned char 
  9257 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;  chip_add        1    9[BANK0 ] unsigned char 
  9260 ;;  ctrl            1   11[BANK0 ] unsigned char 
  9261 ;;  range           1   10[BANK0 ] unsigned char 
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  1    wreg      void 
  9264 ;; Registers used:
  9265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9266 ;; Tracked objects:
  9267 ;;		On entry : 300/300
  9268 ;;		On exit  : 0/0
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9271 ;;      Params:         0       5       0       0       0
  9272 ;;      Locals:         0       3       0       0       0
  9273 ;;      Temps:          0       2       0       0       0
  9274 ;;      Totals:         0      10       0       0       0
  9275 ;;Total ram usage:       10 bytes
  9276 ;; Hardware stack levels used:    1
  9277 ;; Hardware stack levels required when called:    3
  9278 ;; This function calls:
  9279 ;;		_I2C_Master_Start
  9280 ;;		_I2C_Master_Stop
  9281 ;;		_I2C_Master_Write
  9282 ;; This function is called by:
  9283 ;;		_Decodify_Command
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287                           
  9288                           ;psect for function _EEPROM_24C1025_Write_Str
  9289  0BEE                     _EEPROM_24C1025_Write_Str:	
  9290                           
  9291                           ;incstack = 0
  9292                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9293                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
  9294  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  9295  0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  9296  0BF0  00A9               	movwf	EEPROM_24C1025_Write_Str@chip_add
  9297                           
  9298                           ;EEPROM_24C1025.c: 137:      unsigned char ctrl;;EEPROM_24C1025.c: 139:      if(mem_add>
      +                          0x1FFFF) return;
  9299  0BF1  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9300  0BF2  1D03               	btfss	3,2
  9301  0BF3  0008               	return
  9302  0BF4  3002               	movlw	2
  9303  0BF5  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9304  0BF6  1D03               	skipz
  9305  0BF7  2BFE               	goto	u5853
  9306  0BF8  3000               	movlw	0
  9307  0BF9  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9308  0BFA  1D03               	skipz
  9309  0BFB  2BFE               	goto	u5853
  9310  0BFC  3000               	movlw	0
  9311  0BFD  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9312  0BFE                     u5853:	
  9313  0BFE  1803               	btfsc	3,0
  9314  0BFF  0008               	return
  9315  0C00                     L18:	
  9316                           
  9317                           ;EEPROM_24C1025.c: 141:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9318  0C00  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9319  0C01  1D03               	btfss	3,2
  9320  0C02  2C0F               	goto	l6630
  9321  0C03  3001               	movlw	1
  9322  0C04  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9323  0C05  1D03               	skipz
  9324  0C06  2C0D               	goto	u5863
  9325  0C07  3000               	movlw	0
  9326  0C08  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9327  0C09  1D03               	skipz
  9328  0C0A  2C0D               	goto	u5863
  9329  0C0B  3000               	movlw	0
  9330  0C0C  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9331  0C0D                     u5863:	
  9332  0C0D  1C03               	btfss	3,0
  9333  0C0E  2C12               	goto	l6632
  9334  0C0F                     l6630:	
  9335  0C0F  3008               	movlw	8
  9336  0C10  00AA               	movwf	EEPROM_24C1025_Write_Str@range
  9337  0C11  2C13               	goto	l6634
  9338  0C12                     l6632:	
  9339  0C12  01AA               	clrf	EEPROM_24C1025_Write_Str@range
  9340  0C13                     l6634:	
  9341                           
  9342                           ;EEPROM_24C1025.c: 142:      ctrl=chip_add;
  9343  0C13  0829               	movf	EEPROM_24C1025_Write_Str@chip_add,w
  9344  0C14  00AB               	movwf	EEPROM_24C1025_Write_Str@ctrl
  9345  0C15  30A0               	movlw	160
  9346                           
  9347                           ;EEPROM_24C1025.c: 143:      ctrl<<=1;
  9348  0C16  1003               	clrc
  9349  0C17  0DAB               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
  9350                           
  9351                           ;EEPROM_24C1025.c: 144:      ctrl |= 0xA0;
  9352  0C18  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  9353                           
  9354                           ;EEPROM_24C1025.c: 145:      ctrl |= range;
  9355  0C19  082A               	movf	EEPROM_24C1025_Write_Str@range,w
  9356  0C1A  04AB               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  9357                           
  9358                           ;EEPROM_24C1025.c: 147:      I2C_Master_Start();
  9359  0C1B  272C  120A  158A   	fcall	_I2C_Master_Start
  9360                           
  9361                           ;EEPROM_24C1025.c: 148:      I2C_Master_Write(ctrl);
  9362  0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  9363  0C1F  082B               	movf	EEPROM_24C1025_Write_Str@ctrl,w
  9364  0C20  00A0               	movwf	I2C_Master_Write@d
  9365  0C21  01A1               	clrf	I2C_Master_Write@d+1
  9366  0C22  2726  120A  158A   	fcall	_I2C_Master_Write
  9367                           
  9368                           ;EEPROM_24C1025.c: 149:      I2C_Master_Write(((char *)&mem_add)[1]);
  9369  0C25  0823               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9370  0C26  00A0               	movwf	I2C_Master_Write@d
  9371  0C27  01A1               	clrf	I2C_Master_Write@d+1
  9372  0C28  2726  120A  158A   	fcall	_I2C_Master_Write
  9373                           
  9374                           ;EEPROM_24C1025.c: 150:      I2C_Master_Write(((char *)&mem_add)[0]);
  9375  0C2B  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  9376  0C2C  00A0               	movwf	I2C_Master_Write@d
  9377  0C2D  01A1               	clrf	I2C_Master_Write@d+1
  9378  0C2E  2726  120A  158A   	fcall	_I2C_Master_Write
  9379  0C31                     l6694:	
  9380                           ;EEPROM_24C1025.c: 151:      while(*data)
  9381                           
  9382                           
  9383                           ;EEPROM_24C1025.c: 151:      while(*data)
  9384  0C31  0826               	movf	EEPROM_24C1025_Write_Str@data,w
  9385  0C32  0084               	movwf	4
  9386  0C33  1783               	bsf	3,7	;select IRP bank2
  9387  0C34  0800               	movf	0,w
  9388  0C35  1903               	btfsc	3,2
  9389  0C36  2C78               	goto	l6696
  9390                           
  9391                           ;EEPROM_24C1025.c: 152:           {;EEPROM_24C1025.c: 153:           if(mem_add>0x1FFFF)
      +                           return;
  9392  0C37  0825               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9393  0C38  1D03               	btfss	3,2
  9394  0C39  0008               	return
  9395  0C3A  3002               	movlw	2
  9396  0C3B  0224               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9397  0C3C  1D03               	skipz
  9398  0C3D  2C44               	goto	u5873
  9399  0C3E  3000               	movlw	0
  9400  0C3F  0223               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9401  0C40  1D03               	skipz
  9402  0C41  2C44               	goto	u5873
  9403  0C42  3000               	movlw	0
  9404  0C43  0222               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9405  0C44                     u5873:	
  9406  0C44  1803               	btfsc	3,0
  9407  0C45  0008               	return
  9408                           
  9409                           ;EEPROM_24C1025.c: 154:           if((mem_add+1)%128==0)
  9410  0C46  0822               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  9411  0C47  3E01               	addlw	1
  9412  0C48  397F               	andlw	127
  9413  0C49  1D03               	btfss	3,2
  9414  0C4A  2C69               	goto	l6688
  9415                           
  9416                           ;EEPROM_24C1025.c: 155:             {;EEPROM_24C1025.c: 156:             I2C_Master_Writ
      +                          e(*data);
  9417  0C4B  27FA  120A  158A   	fcall	PL70	;call to abstracted procedure
  9418  0C4E  2726  120A  158A   	fcall	_I2C_Master_Write
  9419                           
  9420                           ;EEPROM_24C1025.c: 157:             I2C_Master_Stop();
  9421  0C51  2734  120A  158A   	fcall	_I2C_Master_Stop
  9422                           
  9423                           ;EEPROM_24C1025.c: 159:             _delay((unsigned long)((5)*(8000000/4000.0)));
  9424  0C54  300D               	movlw	13
  9425  0C55  1283               	bcf	3,5	;RP0=0, select bank0
  9426  0C56  1303               	bcf	3,6	;RP1=0, select bank0
  9427  0C57  00A8               	movwf	??_EEPROM_24C1025_Write_Str+1
  9428  0C58  30FB               	movlw	251
  9429  0C59  00A7               	movwf	??_EEPROM_24C1025_Write_Str
  9430  0C5A                     u6607:	
  9431  0C5A  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
  9432  0C5B  2C5A               	goto	u6607
  9433  0C5C  0BA8               	decfsz	??_EEPROM_24C1025_Write_Str+1,f
  9434  0C5D  2C5A               	goto	u6607
  9435                           
  9436                           ;EEPROM_24C1025.c: 160:             mem_add++;
  9437  0C5E  1283               	bcf	3,5	;RP0=0, select bank0
  9438  0C5F  1303               	bcf	3,6	;RP1=0, select bank0
  9439  0C60  0AA2               	incf	EEPROM_24C1025_Write_Str@mem_add,f
  9440  0C61  1903               	skipnz
  9441  0C62  0AA3               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
  9442  0C63  1903               	skipnz
  9443  0C64  0AA4               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
  9444  0C65  1903               	skipnz
  9445  0C66  0AA5               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
  9446                           
  9447                           ;EEPROM_24C1025.c: 161:             data++;
  9448  0C67  0AA6               	incf	EEPROM_24C1025_Write_Str@data,f
  9449  0C68  2C00               	goto	L18
  9450  0C69                     l6688:	
  9451                           ;EEPROM_24C1025.c: 162:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9452                           
  9453                           
  9454                           ;EEPROM_24C1025.c: 174:             {;EEPROM_24C1025.c: 175:             I2C_Master_Writ
      +                          e(*data);
  9455  0C69  27FA  120A  158A   	fcall	PL70	;call to abstracted procedure
  9456  0C6C  2726  120A  158A   	fcall	_I2C_Master_Write
  9457                           
  9458                           ;EEPROM_24C1025.c: 176:             data++;
  9459  0C6F  0AA6               	incf	EEPROM_24C1025_Write_Str@data,f
  9460                           
  9461                           ;EEPROM_24C1025.c: 177:             mem_add++;
  9462  0C70  0AA2               	incf	EEPROM_24C1025_Write_Str@mem_add,f
  9463  0C71  1903               	skipnz
  9464  0C72  0AA3               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
  9465  0C73  1903               	skipnz
  9466  0C74  0AA4               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
  9467  0C75  1903               	skipnz
  9468  0C76  0AA5               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
  9469  0C77  2C31               	goto	l6694
  9470  0C78                     l6696:	
  9471                           
  9472                           ;EEPROM_24C1025.c: 180:      I2C_Master_Write(0);
  9473  0C78  01A0               	clrf	I2C_Master_Write@d
  9474  0C79  01A1               	clrf	I2C_Master_Write@d+1
  9475  0C7A  2726  120A  158A   	fcall	_I2C_Master_Write
  9476                           
  9477                           ;EEPROM_24C1025.c: 181:      I2C_Master_Stop();
  9478  0C7D  2734  120A  158A   	fcall	_I2C_Master_Stop
  9479                           
  9480                           ;EEPROM_24C1025.c: 182:      _delay((unsigned long)((650)*(8000000/4000000.0)));
  9481  0C80  30B9               	movlw	185
  9482  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  9483  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  9484  0C83  00A7               	movwf	??_EEPROM_24C1025_Write_Str
  9485  0C84                     u6617:	
  9486  0C84  2C85               	nop2
  9487  0C85  2C86               	nop2
  9488  0C86  0BA7               	decfsz	??_EEPROM_24C1025_Write_Str,f
  9489  0C87  2C84               	goto	u6617
  9490  0C88  2C89               	nop2
  9491  0C89  0008               	return
  9492  0C8A                     __end_of_EEPROM_24C1025_Write_Str:	
  9493  0C8A                     __ptext50:	
  9494 ;; *************** function _EEPROM_24C1025_Read_Str *****************
  9495 ;; Defined at:
  9496 ;;		line 189 in file "EEPROM_24C1025.c"
  9497 ;; Parameters:    Size  Location     Type
  9498 ;;  chip_add        1    wreg     unsigned char 
  9499 ;;  mem_add         4    4[BANK0 ] unsigned long 
  9500 ;;  texto           1    8[BANK0 ] PTR unsigned char 
  9501 ;;		 -> texto(16), 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  chip_add        1   12[BANK0 ] unsigned char 
  9504 ;;  ctrl            1   14[BANK0 ] unsigned char 
  9505 ;;  range           1   13[BANK0 ] unsigned char 
  9506 ;;  cnt             1   11[BANK0 ] unsigned char 
  9507 ;; Return value:  Size  Location     Type
  9508 ;;                  1    wreg      void 
  9509 ;; Registers used:
  9510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9511 ;; Tracked objects:
  9512 ;;		On entry : 300/300
  9513 ;;		On exit  : 0/0
  9514 ;;		Unchanged: 0/0
  9515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9516 ;;      Params:         0       5       0       0       0
  9517 ;;      Locals:         0       4       0       0       0
  9518 ;;      Temps:          0       2       0       0       0
  9519 ;;      Totals:         0      11       0       0       0
  9520 ;;Total ram usage:       11 bytes
  9521 ;; Hardware stack levels used:    1
  9522 ;; Hardware stack levels required when called:    3
  9523 ;; This function calls:
  9524 ;;		_I2C_Master_Read
  9525 ;;		_I2C_Master_RepeatedStart
  9526 ;;		_I2C_Master_Start
  9527 ;;		_I2C_Master_Stop
  9528 ;;		_I2C_Master_Write
  9529 ;; This function is called by:
  9530 ;;		_Decodify_Command
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           
  9535                           ;psect for function _EEPROM_24C1025_Read_Str
  9536  0C8A                     _EEPROM_24C1025_Read_Str:	
  9537                           
  9538                           ;incstack = 0
  9539                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9540                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
  9541  0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  9542  0C8B  1303               	bcf	3,6	;RP1=0, select bank0
  9543  0C8C  00AC               	movwf	EEPROM_24C1025_Read_Str@chip_add
  9544                           
  9545                           ;EEPROM_24C1025.c: 191:      unsigned char range=0;
  9546  0C8D  01AD               	clrf	EEPROM_24C1025_Read_Str@range
  9547                           
  9548                           ;EEPROM_24C1025.c: 192:      unsigned char ctrl;;EEPROM_24C1025.c: 194:      if(mem_add>
      +                          0x1FFFF) return;
  9549  0C8E  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  9550  0C8F  1D03               	btfss	3,2
  9551  0C90  0008               	return
  9552  0C91  3002               	movlw	2
  9553  0C92  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  9554  0C93  1D03               	skipz
  9555  0C94  2C9B               	goto	u5913
  9556  0C95  3000               	movlw	0
  9557  0C96  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  9558  0C97  1D03               	skipz
  9559  0C98  2C9B               	goto	u5913
  9560  0C99  3000               	movlw	0
  9561  0C9A  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  9562  0C9B                     u5913:	
  9563  0C9B  1803               	btfsc	3,0
  9564  0C9C  0008               	return
  9565                           
  9566                           ;EEPROM_24C1025.c: 196:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9567  0C9D  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  9568  0C9E  1D03               	btfss	3,2
  9569  0C9F  2CAC               	goto	l6708
  9570  0CA0  3001               	movlw	1
  9571  0CA1  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  9572  0CA2  1D03               	skipz
  9573  0CA3  2CAA               	goto	u5923
  9574  0CA4  3000               	movlw	0
  9575  0CA5  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  9576  0CA6  1D03               	skipz
  9577  0CA7  2CAA               	goto	u5923
  9578  0CA8  3000               	movlw	0
  9579  0CA9  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  9580  0CAA                     u5923:	
  9581  0CAA  1C03               	btfss	3,0
  9582  0CAB  2CAF               	goto	l6710
  9583  0CAC                     l6708:	
  9584  0CAC  3008               	movlw	8
  9585  0CAD  00AD               	movwf	EEPROM_24C1025_Read_Str@range
  9586  0CAE  2CB0               	goto	l6712
  9587  0CAF                     l6710:	
  9588  0CAF  01AD               	clrf	EEPROM_24C1025_Read_Str@range
  9589  0CB0                     l6712:	
  9590                           
  9591                           ;EEPROM_24C1025.c: 197:      ctrl=chip_add;
  9592                           
  9593                           ;EEPROM_24C1025.c: 198:      ctrl<<=1;
  9594                           
  9595                           ;EEPROM_24C1025.c: 199:      ctrl |= 0xA0;
  9596                           
  9597                           ;EEPROM_24C1025.c: 200:      ctrl |= 0b00000001;
  9598                           
  9599                           ;EEPROM_24C1025.c: 201:      ctrl |= range;
  9600  0CB0  27BC  120A  158A   	fcall	PL42	;call to abstracted procedure
  9601                           
  9602                           ;EEPROM_24C1025.c: 203:      I2C_Master_Start();
  9603  0CB3  272C  120A  158A   	fcall	_I2C_Master_Start
  9604                           
  9605                           ;EEPROM_24C1025.c: 204:      I2C_Master_Write(ctrl & 0xFE);
  9606  0CB6  27F4  120A  158A   	fcall	PL68	;call to abstracted procedure
  9607  0CB9  2726  120A  158A   	fcall	_I2C_Master_Write
  9608                           
  9609                           ;EEPROM_24C1025.c: 205:      I2C_Master_Write(((char *)&mem_add)[1]);
  9610  0CBC  0825               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
  9611  0CBD  00A0               	movwf	I2C_Master_Write@d
  9612  0CBE  01A1               	clrf	I2C_Master_Write@d+1
  9613  0CBF  2726  120A  158A   	fcall	_I2C_Master_Write
  9614                           
  9615                           ;EEPROM_24C1025.c: 206:      I2C_Master_Write(((char *)&mem_add)[0]);
  9616  0CC2  0824               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  9617  0CC3  00A0               	movwf	I2C_Master_Write@d
  9618  0CC4  01A1               	clrf	I2C_Master_Write@d+1
  9619  0CC5  2726  120A  158A   	fcall	_I2C_Master_Write
  9620                           
  9621                           ;EEPROM_24C1025.c: 207:      I2C_Master_RepeatedStart();
  9622  0CC8  2762  120A  158A   	fcall	_I2C_Master_RepeatedStart
  9623                           
  9624                           ;EEPROM_24C1025.c: 208:      I2C_Master_Write(ctrl);
  9625  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  9626  0CCC  082E               	movf	EEPROM_24C1025_Read_Str@ctrl,w
  9627  0CCD  00A0               	movwf	I2C_Master_Write@d
  9628  0CCE  01A1               	clrf	I2C_Master_Write@d+1
  9629  0CCF  2726  120A  158A   	fcall	_I2C_Master_Write
  9630                           
  9631                           ;EEPROM_24C1025.c: 210:      cnt=0;
  9632  0CD2  01AB               	clrf	EEPROM_24C1025_Read_Str@cnt
  9633  0CD3                     l6736:	
  9634                           
  9635                           ;EEPROM_24C1025.c: 212:            if(mem_add>0x1FFFF) break;
  9636  0CD3  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  9637  0CD4  1D03               	btfss	3,2
  9638  0CD5  2D5D               	goto	l6790
  9639  0CD6  3002               	movlw	2
  9640  0CD7  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  9641  0CD8  1D03               	skipz
  9642  0CD9  2CE0               	goto	u5933
  9643  0CDA  3000               	movlw	0
  9644  0CDB  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  9645  0CDC  1D03               	skipz
  9646  0CDD  2CE0               	goto	u5933
  9647  0CDE  3000               	movlw	0
  9648  0CDF  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  9649  0CE0                     u5933:	
  9650  0CE0  1803               	btfsc	3,0
  9651  0CE1  2D5D               	goto	l6790
  9652                           
  9653                           ;EEPROM_24C1025.c: 213:            if((mem_add+1)%128==0)
  9654  0CE2  0824               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  9655  0CE3  3E01               	addlw	1
  9656  0CE4  397F               	andlw	127
  9657  0CE5  1D03               	btfss	3,2
  9658  0CE6  2D3E               	goto	l6780
  9659                           
  9660                           ;EEPROM_24C1025.c: 214:              {;EEPROM_24C1025.c: 215:              (*texto)=I2C_
      +                          Master_Read(0);
  9661  0CE7  0828               	movf	EEPROM_24C1025_Read_Str@texto,w
  9662  0CE8  0084               	movwf	4
  9663  0CE9  01A0               	clrf	I2C_Master_Read@a
  9664  0CEA  01A1               	clrf	I2C_Master_Read@a+1
  9665  0CEB  2737  120A  158A   	fcall	_I2C_Master_Read
  9666  0CEE  0820               	movf	?_I2C_Master_Read,w
  9667  0CEF  1783               	bsf	3,7	;select IRP bank2
  9668  0CF0  0080               	movwf	0
  9669                           
  9670                           ;EEPROM_24C1025.c: 216:              I2C_Master_Stop();
  9671  0CF1  2734  120A  158A   	fcall	_I2C_Master_Stop
  9672                           
  9673                           ;EEPROM_24C1025.c: 218:              _delay((unsigned long)((5)*(8000000/4000.0)));
  9674  0CF4  300D               	movlw	13
  9675  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  9676  0CF6  1303               	bcf	3,6	;RP1=0, select bank0
  9677  0CF7  00AA               	movwf	??_EEPROM_24C1025_Read_Str+1
  9678  0CF8  30FB               	movlw	251
  9679  0CF9  00A9               	movwf	??_EEPROM_24C1025_Read_Str
  9680  0CFA                     u6627:	
  9681  0CFA  0BA9               	decfsz	??_EEPROM_24C1025_Read_Str,f
  9682  0CFB  2CFA               	goto	u6627
  9683  0CFC  0BAA               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
  9684  0CFD  2CFA               	goto	u6627
  9685                           
  9686                           ;EEPROM_24C1025.c: 219:              mem_add++;
  9687  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  9688  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  9689  0D00  0AA4               	incf	EEPROM_24C1025_Read_Str@mem_add,f
  9690  0D01  1903               	skipnz
  9691  0D02  0AA5               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
  9692  0D03  1903               	skipnz
  9693  0D04  0AA6               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
  9694  0D05  1903               	skipnz
  9695  0D06  0AA7               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
  9696                           
  9697                           ;EEPROM_24C1025.c: 220:              texto++;
  9698  0D07  0AA8               	incf	EEPROM_24C1025_Read_Str@texto,f
  9699                           
  9700                           ;EEPROM_24C1025.c: 221:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9701  0D08  0827               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  9702  0D09  1D03               	btfss	3,2
  9703  0D0A  2D17               	goto	l6754
  9704  0D0B  3001               	movlw	1
  9705  0D0C  0226               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  9706  0D0D  1D03               	skipz
  9707  0D0E  2D15               	goto	u5953
  9708  0D0F  3000               	movlw	0
  9709  0D10  0225               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  9710  0D11  1D03               	skipz
  9711  0D12  2D15               	goto	u5953
  9712  0D13  3000               	movlw	0
  9713  0D14  0224               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  9714  0D15                     u5953:	
  9715  0D15  1C03               	btfss	3,0
  9716  0D16  2D1A               	goto	l6756
  9717  0D17                     l6754:	
  9718  0D17  3008               	movlw	8
  9719  0D18  00AD               	movwf	EEPROM_24C1025_Read_Str@range
  9720  0D19  2D1B               	goto	l6758
  9721  0D1A                     l6756:	
  9722  0D1A  01AD               	clrf	EEPROM_24C1025_Read_Str@range
  9723  0D1B                     l6758:	
  9724                           
  9725                           ;EEPROM_24C1025.c: 222:              ctrl=chip_add;
  9726                           
  9727                           ;EEPROM_24C1025.c: 223:              ctrl<<=1;
  9728                           
  9729                           ;EEPROM_24C1025.c: 224:              ctrl |= 0xA0;
  9730                           
  9731                           ;EEPROM_24C1025.c: 225:              ctrl |= 0b00000001;
  9732                           
  9733                           ;EEPROM_24C1025.c: 226:              ctrl |= range;
  9734  0D1B  27BC  120A  158A   	fcall	PL42	;call to abstracted procedure
  9735                           
  9736                           ;EEPROM_24C1025.c: 228:              I2C_Master_Start();
  9737  0D1E  272C  120A  158A   	fcall	_I2C_Master_Start
  9738                           
  9739                           ;EEPROM_24C1025.c: 229:              I2C_Master_Write(ctrl & 0xFE);
  9740  0D21  27F4  120A  158A   	fcall	PL68	;call to abstracted procedure
  9741  0D24  2726  120A  158A   	fcall	_I2C_Master_Write
  9742                           
  9743                           ;EEPROM_24C1025.c: 230:              I2C_Master_Write(((char *)&mem_add)[1]);
  9744  0D27  0825               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
  9745  0D28  00A0               	movwf	I2C_Master_Write@d
  9746  0D29  01A1               	clrf	I2C_Master_Write@d+1
  9747  0D2A  2726  120A  158A   	fcall	_I2C_Master_Write
  9748                           
  9749                           ;EEPROM_24C1025.c: 231:              I2C_Master_Write(((char *)&mem_add)[0]);
  9750  0D2D  0824               	movf	EEPROM_24C1025_Read_Str@mem_add,w
  9751  0D2E  00A0               	movwf	I2C_Master_Write@d
  9752  0D2F  01A1               	clrf	I2C_Master_Write@d+1
  9753  0D30  2726  120A  158A   	fcall	_I2C_Master_Write
  9754                           
  9755                           ;EEPROM_24C1025.c: 232:              I2C_Master_RepeatedStart();
  9756  0D33  2762  120A  158A   	fcall	_I2C_Master_RepeatedStart
  9757                           
  9758                           ;EEPROM_24C1025.c: 233:              I2C_Master_Write(ctrl);
  9759  0D36  1283               	bcf	3,5	;RP0=0, select bank0
  9760  0D37  082E               	movf	EEPROM_24C1025_Read_Str@ctrl,w
  9761  0D38  00A0               	movwf	I2C_Master_Write@d
  9762  0D39  01A1               	clrf	I2C_Master_Write@d+1
  9763  0D3A  2726  120A  158A   	fcall	_I2C_Master_Write
  9764                           
  9765                           ;EEPROM_24C1025.c: 234:              }
  9766  0D3D  2D56               	goto	l6788
  9767  0D3E                     l6780:	
  9768                           
  9769                           ;EEPROM_24C1025.c: 236:              {;EEPROM_24C1025.c: 237:              (*texto)=I2C_
      +                          Master_Read(1);
  9770  0D3E  0828               	movf	EEPROM_24C1025_Read_Str@texto,w
  9771  0D3F  0084               	movwf	4
  9772  0D40  01A0               	clrf	I2C_Master_Read@a
  9773  0D41  0AA0               	incf	I2C_Master_Read@a,f
  9774  0D42  01A1               	clrf	I2C_Master_Read@a+1
  9775  0D43  2737  120A  158A   	fcall	_I2C_Master_Read
  9776  0D46  0820               	movf	?_I2C_Master_Read,w
  9777  0D47  1783               	bsf	3,7	;select IRP bank2
  9778  0D48  0080               	movwf	0
  9779                           
  9780                           ;EEPROM_24C1025.c: 238:              if((*texto)==0)break;
  9781  0D49  0828               	movf	EEPROM_24C1025_Read_Str@texto,w
  9782  0D4A  0084               	movwf	4
  9783  0D4B  0800               	movf	0,w
  9784  0D4C  1903               	btfsc	3,2
  9785  0D4D  2D5D               	goto	l6790
  9786                           
  9787                           ;EEPROM_24C1025.c: 239:              texto++;
  9788  0D4E  0AA8               	incf	EEPROM_24C1025_Read_Str@texto,f
  9789                           
  9790                           ;EEPROM_24C1025.c: 240:              mem_add++;
  9791  0D4F  0AA4               	incf	EEPROM_24C1025_Read_Str@mem_add,f
  9792  0D50  1903               	skipnz
  9793  0D51  0AA5               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
  9794  0D52  1903               	skipnz
  9795  0D53  0AA6               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
  9796  0D54  1903               	skipnz
  9797  0D55  0AA7               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
  9798  0D56                     l6788:	
  9799                           
  9800                           ;EEPROM_24C1025.c: 242:        }while((cnt++)<64);
  9801  0D56  082B               	movf	EEPROM_24C1025_Read_Str@cnt,w
  9802  0D57  0AAB               	incf	EEPROM_24C1025_Read_Str@cnt,f
  9803  0D58  00A9               	movwf	??_EEPROM_24C1025_Read_Str
  9804  0D59  3040               	movlw	64
  9805  0D5A  0229               	subwf	??_EEPROM_24C1025_Read_Str,w
  9806  0D5B  1C03               	skipc
  9807  0D5C  2CD3               	goto	l6736
  9808  0D5D                     l6790:	
  9809                           
  9810                           ;EEPROM_24C1025.c: 244:      I2C_Master_Read(0);
  9811  0D5D  01A0               	clrf	I2C_Master_Read@a
  9812  0D5E  01A1               	clrf	I2C_Master_Read@a+1
  9813  0D5F  2737  120A  158A   	fcall	_I2C_Master_Read
  9814                           
  9815                           ;EEPROM_24C1025.c: 245:      I2C_Master_Stop();
  9816  0D62  2734  120A  158A   	fcall	_I2C_Master_Stop
  9817                           
  9818                           ;EEPROM_24C1025.c: 246:      _delay((unsigned long)((650)*(8000000/4000000.0)));
  9819  0D65  30B9               	movlw	185
  9820  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  9821  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  9822  0D68  00A9               	movwf	??_EEPROM_24C1025_Read_Str
  9823  0D69                     u6637:	
  9824  0D69  2D6A               	nop2
  9825  0D6A  2D6B               	nop2
  9826  0D6B  0BA9               	decfsz	??_EEPROM_24C1025_Read_Str,f
  9827  0D6C  2D69               	goto	u6637
  9828  0D6D  2D6E               	nop2
  9829  0D6E  0008               	return
  9830  0D6F                     __end_of_EEPROM_24C1025_Read_Str:	
  9831  0D6F                     __ptext53:	
  9832 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
  9833 ;; Defined at:
  9834 ;;		line 69 in file "EEPROM_24C1025.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;  chip_add        1    wreg     unsigned char 
  9837 ;;  mem_add         4    4[BANK0 ] unsigned long 
  9838 ;;  sizedata        1    8[BANK0 ] unsigned char 
  9839 ;;  data            2    9[BANK0 ] PTR unsigned char 
  9840 ;;		 -> EEPROM_24C1025_Read_Int@data(2), buffer(64), 
  9841 ;; Auto vars:     Size  Location     Type
  9842 ;;  chip_add        1   14[BANK0 ] unsigned char 
  9843 ;;  cnt             1   13[BANK0 ] unsigned char 
  9844 ;;  ctrl            1   16[BANK0 ] unsigned char 
  9845 ;;  range           1   15[BANK0 ] unsigned char 
  9846 ;;  cnt             1    0        unsigned char 
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  1    wreg      void 
  9849 ;; Registers used:
  9850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/300
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9856 ;;      Params:         0       7       0       0       0
  9857 ;;      Locals:         0       4       0       0       0
  9858 ;;      Temps:          0       2       0       0       0
  9859 ;;      Totals:         0      13       0       0       0
  9860 ;;Total ram usage:       13 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; Hardware stack levels required when called:    3
  9863 ;; This function calls:
  9864 ;;		_I2C_Master_Read
  9865 ;;		_I2C_Master_RepeatedStart
  9866 ;;		_I2C_Master_Start
  9867 ;;		_I2C_Master_Stop
  9868 ;;		_I2C_Master_Write
  9869 ;; This function is called by:
  9870 ;;		_Decodify_Command
  9871 ;;		_EEPROM_24C1025_Read_Byte
  9872 ;;		_EEPROM_24C1025_Read_Int
  9873 ;; This function uses a non-reentrant model
  9874 ;;
  9875                           
  9876                           
  9877                           ;psect for function _EEPROM_24C1025_Read_Buffer
  9878  0D6F                     _EEPROM_24C1025_Read_Buffer:	
  9879                           
  9880                           ;incstack = 0
  9881                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9882                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
  9883  0D6F  1283               	bcf	3,5	;RP0=0, select bank0
  9884  0D70  1303               	bcf	3,6	;RP1=0, select bank0
  9885  0D71  00AE               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
  9886                           
  9887                           ;EEPROM_24C1025.c: 76:      unsigned char ctrl;;EEPROM_24C1025.c: 78:      if(mem_add>0x
      +                          1FFFF) return;
  9888  0D72  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  9889  0D73  1D03               	btfss	3,2
  9890  0D74  0008               	return
  9891  0D75  3002               	movlw	2
  9892  0D76  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  9893  0D77  1D03               	skipz
  9894  0D78  2D7F               	goto	u5683
  9895  0D79  3000               	movlw	0
  9896  0D7A  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9897  0D7B  1D03               	skipz
  9898  0D7C  2D7F               	goto	u5683
  9899  0D7D  3000               	movlw	0
  9900  0D7E  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9901  0D7F                     u5683:	
  9902  0D7F  1803               	btfsc	3,0
  9903  0D80  0008               	return
  9904                           
  9905                           ;EEPROM_24C1025.c: 80:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9906  0D81  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  9907  0D82  1D03               	btfss	3,2
  9908  0D83  2D90               	goto	l6366
  9909  0D84  3001               	movlw	1
  9910  0D85  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  9911  0D86  1D03               	skipz
  9912  0D87  2D8E               	goto	u5693
  9913  0D88  3000               	movlw	0
  9914  0D89  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9915  0D8A  1D03               	skipz
  9916  0D8B  2D8E               	goto	u5693
  9917  0D8C  3000               	movlw	0
  9918  0D8D  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9919  0D8E                     u5693:	
  9920  0D8E  1C03               	btfss	3,0
  9921  0D8F  2D93               	goto	l6368
  9922  0D90                     l6366:	
  9923  0D90  3008               	movlw	8
  9924  0D91  00AF               	movwf	EEPROM_24C1025_Read_Buffer@range
  9925  0D92  2D94               	goto	l6370
  9926  0D93                     l6368:	
  9927  0D93  01AF               	clrf	EEPROM_24C1025_Read_Buffer@range
  9928  0D94                     l6370:	
  9929                           
  9930                           ;EEPROM_24C1025.c: 81:      ctrl=chip_add;
  9931                           
  9932                           ;EEPROM_24C1025.c: 82:      ctrl<<=1;
  9933                           
  9934                           ;EEPROM_24C1025.c: 83:      ctrl |= 0xA0;
  9935                           
  9936                           ;EEPROM_24C1025.c: 84:      ctrl |= 0b00000001;
  9937                           
  9938                           ;EEPROM_24C1025.c: 85:      ctrl |= range;
  9939  0D94  27B2  120A  158A   	fcall	PL36	;call to abstracted procedure
  9940                           
  9941                           ;EEPROM_24C1025.c: 87:      I2C_Master_Start();
  9942  0D97  272C  120A  158A   	fcall	_I2C_Master_Start
  9943                           
  9944                           ;EEPROM_24C1025.c: 88:      I2C_Master_Write(ctrl & 0xFE);
  9945  0D9A  27E8  120A  158A   	fcall	PL64	;call to abstracted procedure
  9946  0D9D  2726  120A  158A   	fcall	_I2C_Master_Write
  9947                           
  9948                           ;EEPROM_24C1025.c: 89:      I2C_Master_Write(((char *)&mem_add)[1]);
  9949  0DA0  0825               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9950  0DA1  00A0               	movwf	I2C_Master_Write@d
  9951  0DA2  01A1               	clrf	I2C_Master_Write@d+1
  9952  0DA3  2726  120A  158A   	fcall	_I2C_Master_Write
  9953                           
  9954                           ;EEPROM_24C1025.c: 90:      I2C_Master_Write(((char *)&mem_add)[0]);
  9955  0DA6  0824               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9956  0DA7  00A0               	movwf	I2C_Master_Write@d
  9957  0DA8  01A1               	clrf	I2C_Master_Write@d+1
  9958  0DA9  2726  120A  158A   	fcall	_I2C_Master_Write
  9959                           
  9960                           ;EEPROM_24C1025.c: 91:      I2C_Master_RepeatedStart();
  9961  0DAC  2762  120A  158A   	fcall	_I2C_Master_RepeatedStart
  9962                           
  9963                           ;EEPROM_24C1025.c: 92:      I2C_Master_Write(ctrl);
  9964  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  9965  0DB0  0830               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
  9966  0DB1  00A0               	movwf	I2C_Master_Write@d
  9967  0DB2  01A1               	clrf	I2C_Master_Write@d+1
  9968  0DB3  2726  120A  158A   	fcall	_I2C_Master_Write
  9969                           
  9970                           ;EEPROM_24C1025.c: 94:      for(char cnt=0;cnt<(sizedata);cnt++)
  9971  0DB6  01AD               	clrf	EEPROM_24C1025_Read_Buffer@cnt_1519
  9972  0DB7                     l6446:	
  9973  0DB7  0828               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
  9974  0DB8  022D               	subwf	EEPROM_24C1025_Read_Buffer@cnt_1519,w
  9975  0DB9  1803               	btfsc	3,0
  9976  0DBA  2E3D               	goto	l6448
  9977                           
  9978                           ;EEPROM_24C1025.c: 95:         {;EEPROM_24C1025.c: 96:            if(mem_add>0x1FFFF) br
      +                          eak;
  9979  0DBB  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
  9980  0DBC  1D03               	btfss	3,2
  9981  0DBD  2E3D               	goto	l6448
  9982  0DBE  3002               	movlw	2
  9983  0DBF  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
  9984  0DC0  1D03               	skipz
  9985  0DC1  2DC8               	goto	u5703
  9986  0DC2  3000               	movlw	0
  9987  0DC3  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
  9988  0DC4  1D03               	skipz
  9989  0DC5  2DC8               	goto	u5703
  9990  0DC6  3000               	movlw	0
  9991  0DC7  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9992  0DC8                     u5703:	
  9993  0DC8  1803               	btfsc	3,0
  9994  0DC9  2E3D               	goto	l6448
  9995                           
  9996                           ;EEPROM_24C1025.c: 97:            if((mem_add+1)%128==0)
  9997  0DCA  0824               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
  9998  0DCB  3E01               	addlw	1
  9999  0DCC  397F               	andlw	127
 10000  0DCD  1D03               	btfss	3,2
 10001  0DCE  2E27               	goto	l6438
 10002                           
 10003                           ;EEPROM_24C1025.c: 98:              {;EEPROM_24C1025.c: 99:              (*data)=I2C_Mas
      +                          ter_Read(0);
 10004  0DCF  27DC  120A  158A   	fcall	PL56	;call to abstracted procedure
 10005  0DD2  01A1               	clrf	I2C_Master_Read@a+1
 10006  0DD3  2737  120A  158A   	fcall	_I2C_Master_Read
 10007  0DD6  0820               	movf	?_I2C_Master_Read,w
 10008  0DD7  0080               	movwf	0
 10009                           
 10010                           ;EEPROM_24C1025.c: 100:              I2C_Master_Stop();
 10011  0DD8  2734  120A  158A   	fcall	_I2C_Master_Stop
 10012                           
 10013                           ;EEPROM_24C1025.c: 102:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10014  0DDB  300D               	movlw	13
 10015  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
 10016  0DDD  1303               	bcf	3,6	;RP1=0, select bank0
 10017  0DDE  00AC               	movwf	??_EEPROM_24C1025_Read_Buffer+1
 10018  0DDF  30FB               	movlw	251
 10019  0DE0  00AB               	movwf	??_EEPROM_24C1025_Read_Buffer
 10020  0DE1                     u6647:	
 10021  0DE1  0BAB               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 10022  0DE2  2DE1               	goto	u6647
 10023  0DE3  0BAC               	decfsz	??_EEPROM_24C1025_Read_Buffer+1,f
 10024  0DE4  2DE1               	goto	u6647
 10025                           
 10026                           ;EEPROM_24C1025.c: 103:              mem_add++;
 10027  0DE5  1283               	bcf	3,5	;RP0=0, select bank0
 10028  0DE6  1303               	bcf	3,6	;RP1=0, select bank0
 10029  0DE7  0AA4               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
 10030  0DE8  1903               	skipnz
 10031  0DE9  0AA5               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 10032  0DEA  1903               	skipnz
 10033  0DEB  0AA6               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 10034  0DEC  1903               	skipnz
 10035  0DED  0AA7               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 10036                           
 10037                           ;EEPROM_24C1025.c: 104:              data++;
 10038  0DEE  0AA9               	incf	EEPROM_24C1025_Read_Buffer@data,f
 10039  0DEF  1903               	skipnz
 10040  0DF0  0AAA               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 10041                           
 10042                           ;EEPROM_24C1025.c: 105:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10043  0DF1  0827               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10044  0DF2  1D03               	btfss	3,2
 10045  0DF3  2E00               	goto	l6412
 10046  0DF4  3001               	movlw	1
 10047  0DF5  0226               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10048  0DF6  1D03               	skipz
 10049  0DF7  2DFE               	goto	u5723
 10050  0DF8  3000               	movlw	0
 10051  0DF9  0225               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10052  0DFA  1D03               	skipz
 10053  0DFB  2DFE               	goto	u5723
 10054  0DFC  3000               	movlw	0
 10055  0DFD  0224               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10056  0DFE                     u5723:	
 10057  0DFE  1C03               	btfss	3,0
 10058  0DFF  2E03               	goto	l6414
 10059  0E00                     l6412:	
 10060  0E00  3008               	movlw	8
 10061  0E01  00AF               	movwf	EEPROM_24C1025_Read_Buffer@range
 10062  0E02  2E04               	goto	l6416
 10063  0E03                     l6414:	
 10064  0E03  01AF               	clrf	EEPROM_24C1025_Read_Buffer@range
 10065  0E04                     l6416:	
 10066                           
 10067                           ;EEPROM_24C1025.c: 106:              ctrl=chip_add;
 10068                           
 10069                           ;EEPROM_24C1025.c: 107:              ctrl<<=1;
 10070                           
 10071                           ;EEPROM_24C1025.c: 108:              ctrl |= 0xA0;
 10072                           
 10073                           ;EEPROM_24C1025.c: 109:              ctrl |= 0b00000001;
 10074                           
 10075                           ;EEPROM_24C1025.c: 110:              ctrl |= range;
 10076  0E04  27B2  120A  158A   	fcall	PL36	;call to abstracted procedure
 10077                           
 10078                           ;EEPROM_24C1025.c: 112:              I2C_Master_Start();
 10079  0E07  272C  120A  158A   	fcall	_I2C_Master_Start
 10080                           
 10081                           ;EEPROM_24C1025.c: 113:              I2C_Master_Write(ctrl & 0xFE);
 10082  0E0A  27E8  120A  158A   	fcall	PL64	;call to abstracted procedure
 10083  0E0D  2726  120A  158A   	fcall	_I2C_Master_Write
 10084                           
 10085                           ;EEPROM_24C1025.c: 114:              I2C_Master_Write(((char *)&mem_add)[1]);
 10086  0E10  0825               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10087  0E11  00A0               	movwf	I2C_Master_Write@d
 10088  0E12  01A1               	clrf	I2C_Master_Write@d+1
 10089  0E13  2726  120A  158A   	fcall	_I2C_Master_Write
 10090                           
 10091                           ;EEPROM_24C1025.c: 115:              I2C_Master_Write(((char *)&mem_add)[0]);
 10092  0E16  0824               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10093  0E17  00A0               	movwf	I2C_Master_Write@d
 10094  0E18  01A1               	clrf	I2C_Master_Write@d+1
 10095  0E19  2726  120A  158A   	fcall	_I2C_Master_Write
 10096                           
 10097                           ;EEPROM_24C1025.c: 116:              I2C_Master_RepeatedStart();
 10098  0E1C  2762  120A  158A   	fcall	_I2C_Master_RepeatedStart
 10099                           
 10100                           ;EEPROM_24C1025.c: 117:              I2C_Master_Write(ctrl);
 10101  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
 10102  0E20  0830               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10103  0E21  00A0               	movwf	I2C_Master_Write@d
 10104  0E22  01A1               	clrf	I2C_Master_Write@d+1
 10105  0E23  2726  120A  158A   	fcall	_I2C_Master_Write
 10106                           
 10107                           ;EEPROM_24C1025.c: 118:              }
 10108  0E26  2E3B               	goto	l6444
 10109  0E27                     l6438:	
 10110                           
 10111                           ;EEPROM_24C1025.c: 120:              {;EEPROM_24C1025.c: 121:              (*data)=I2C_M
      +                          aster_Read(1);
 10112  0E27  27DC  120A  158A   	fcall	PL56	;call to abstracted procedure
 10113  0E2A  0AA0               	incf	I2C_Master_Read@a,f
 10114  0E2B  01A1               	clrf	I2C_Master_Read@a+1
 10115  0E2C  2737  120A  158A   	fcall	_I2C_Master_Read
 10116  0E2F  0820               	movf	?_I2C_Master_Read,w
 10117  0E30  0080               	movwf	0
 10118                           
 10119                           ;EEPROM_24C1025.c: 122:              data++;
 10120  0E31  0AA9               	incf	EEPROM_24C1025_Read_Buffer@data,f
 10121  0E32  1903               	skipnz
 10122  0E33  0AAA               	incf	EEPROM_24C1025_Read_Buffer@data+1,f
 10123                           
 10124                           ;EEPROM_24C1025.c: 123:              mem_add++;
 10125  0E34  0AA4               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
 10126  0E35  1903               	skipnz
 10127  0E36  0AA5               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 10128  0E37  1903               	skipnz
 10129  0E38  0AA6               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 10130  0E39  1903               	skipnz
 10131  0E3A  0AA7               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 10132  0E3B                     l6444:	
 10133                           
 10134                           ;EEPROM_24C1025.c: 125:         }
 10135  0E3B  0AAD               	incf	EEPROM_24C1025_Read_Buffer@cnt_1519,f
 10136  0E3C  2DB7               	goto	l6446
 10137  0E3D                     l6448:	
 10138                           
 10139                           ;EEPROM_24C1025.c: 126:         I2C_Master_Read(0);
 10140  0E3D  01A0               	clrf	I2C_Master_Read@a
 10141  0E3E  01A1               	clrf	I2C_Master_Read@a+1
 10142  0E3F  2737  120A  158A   	fcall	_I2C_Master_Read
 10143                           
 10144                           ;EEPROM_24C1025.c: 127:         I2C_Master_Stop();
 10145  0E42  2734  120A  158A   	fcall	_I2C_Master_Stop
 10146                           
 10147                           ;EEPROM_24C1025.c: 128:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 10148  0E45  30B9               	movlw	185
 10149  0E46  1283               	bcf	3,5	;RP0=0, select bank0
 10150  0E47  1303               	bcf	3,6	;RP1=0, select bank0
 10151  0E48  00AB               	movwf	??_EEPROM_24C1025_Read_Buffer
 10152  0E49                     u6657:	
 10153  0E49  2E4A               	nop2
 10154  0E4A  2E4B               	nop2
 10155  0E4B  0BAB               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 10156  0E4C  2E49               	goto	u6657
 10157  0E4D  2E4E               	nop2
 10158  0E4E  0008               	return
 10159  0E4F                     __end_of_EEPROM_24C1025_Read_Buffer:	
 10160  0E4F                     __ptext57:	
 10161 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 10162 ;; Defined at:
 10163 ;;		line 10 in file "EEPROM_24C1025.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;  chip_add        1    wreg     unsigned char 
 10166 ;;  mem_add         4    2[BANK0 ] unsigned long 
 10167 ;;  sizedata        1    6[BANK0 ] unsigned char 
 10168 ;;  data            2    7[BANK0 ] PTR unsigned char 
 10169 ;;		 -> EEPROM_24C1025_Write_Int@local(2), buffer(64), usart_protocol.value(10), usart_protocol(16), 
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;  chip_add        1   12[BANK0 ] unsigned char 
 10172 ;;  ctrl            1   14[BANK0 ] unsigned char 
 10173 ;;  range           1   13[BANK0 ] unsigned char 
 10174 ;;  count           1   11[BANK0 ] unsigned char 
 10175 ;; Return value:  Size  Location     Type
 10176 ;;                  1    wreg      void 
 10177 ;; Registers used:
 10178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10179 ;; Tracked objects:
 10180 ;;		On entry : 0/300
 10181 ;;		On exit  : 0/0
 10182 ;;		Unchanged: 0/0
 10183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10184 ;;      Params:         0       7       0       0       0
 10185 ;;      Locals:         0       4       0       0       0
 10186 ;;      Temps:          0       2       0       0       0
 10187 ;;      Totals:         0      13       0       0       0
 10188 ;;Total ram usage:       13 bytes
 10189 ;; Hardware stack levels used:    1
 10190 ;; Hardware stack levels required when called:    3
 10191 ;; This function calls:
 10192 ;;		_I2C_Master_Start
 10193 ;;		_I2C_Master_Stop
 10194 ;;		_I2C_Master_Write
 10195 ;; This function is called by:
 10196 ;;		_Decodify_Command
 10197 ;;		_EEPROM_24C1025_Write_Byte
 10198 ;;		_EEPROM_24C1025_Write_Int
 10199 ;;		_EEPROM_24C1025_Fill_All
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           
 10204                           ;psect for function _EEPROM_24C1025_Write_Buffer
 10205  0E4F                     _EEPROM_24C1025_Write_Buffer:	
 10206                           
 10207                           ;incstack = 0
 10208                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+pclath+cstack
      +                          ]
 10209                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 10210  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
 10211  0E50  1303               	bcf	3,6	;RP1=0, select bank0
 10212  0E51  00AC               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 10213                           
 10214                           ;EEPROM_24C1025.c: 16:      unsigned char ctrl;;EEPROM_24C1025.c: 17:      unsigned char
      +                           count;;EEPROM_24C1025.c: 19:      if(mem_add>0x1FFFF) return;
 10215  0E52  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 10216  0E53  1D03               	btfss	3,2
 10217  0E54  0008               	return
 10218  0E55  3002               	movlw	2
 10219  0E56  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 10220  0E57  1D03               	skipz
 10221  0E58  2E5F               	goto	u5493
 10222  0E59  3000               	movlw	0
 10223  0E5A  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 10224  0E5B  1D03               	skipz
 10225  0E5C  2E5F               	goto	u5493
 10226  0E5D  3000               	movlw	0
 10227  0E5E  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 10228  0E5F                     u5493:	
 10229  0E5F  1803               	btfsc	3,0
 10230  0E60  0008               	return
 10231                           
 10232                           ;EEPROM_24C1025.c: 21:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10233  0E61  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 10234  0E62  1D03               	btfss	3,2
 10235  0E63  2E70               	goto	l6188
 10236  0E64  3001               	movlw	1
 10237  0E65  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 10238  0E66  1D03               	skipz
 10239  0E67  2E6E               	goto	u5503
 10240  0E68  3000               	movlw	0
 10241  0E69  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 10242  0E6A  1D03               	skipz
 10243  0E6B  2E6E               	goto	u5503
 10244  0E6C  3000               	movlw	0
 10245  0E6D  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 10246  0E6E                     u5503:	
 10247  0E6E  1C03               	btfss	3,0
 10248  0E6F  2E73               	goto	l6190
 10249  0E70                     l6188:	
 10250  0E70  3008               	movlw	8
 10251  0E71  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 10252  0E72  2E74               	goto	l6192
 10253  0E73                     l6190:	
 10254  0E73  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 10255  0E74                     l6192:	
 10256                           
 10257                           ;EEPROM_24C1025.c: 22:      ctrl=chip_add;
 10258                           
 10259                           ;EEPROM_24C1025.c: 23:      ctrl<<=1;
 10260                           
 10261                           ;EEPROM_24C1025.c: 24:      ctrl |= 0xA0;
 10262                           
 10263                           ;EEPROM_24C1025.c: 25:      ctrl |= range;
 10264  0E74  27C6  120A  158A   	fcall	PL44	;call to abstracted procedure
 10265                           
 10266                           ;EEPROM_24C1025.c: 27:      I2C_Master_Start();
 10267  0E77  272C  120A  158A   	fcall	_I2C_Master_Start
 10268                           
 10269                           ;EEPROM_24C1025.c: 28:      I2C_Master_Write(ctrl);
 10270  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
 10271  0E7B  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 10272  0E7C  00A0               	movwf	I2C_Master_Write@d
 10273  0E7D  01A1               	clrf	I2C_Master_Write@d+1
 10274  0E7E  2726  120A  158A   	fcall	_I2C_Master_Write
 10275                           
 10276                           ;EEPROM_24C1025.c: 29:      I2C_Master_Write(((char *)&mem_add)[1]);
 10277  0E81  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 10278  0E82  00A0               	movwf	I2C_Master_Write@d
 10279  0E83  01A1               	clrf	I2C_Master_Write@d+1
 10280  0E84  2726  120A  158A   	fcall	_I2C_Master_Write
 10281                           
 10282                           ;EEPROM_24C1025.c: 30:      I2C_Master_Write(((char *)&mem_add)[0]);
 10283  0E87  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 10284  0E88  00A0               	movwf	I2C_Master_Write@d
 10285  0E89  01A1               	clrf	I2C_Master_Write@d+1
 10286  0E8A  2726  120A  158A   	fcall	_I2C_Master_Write
 10287                           
 10288                           ;EEPROM_24C1025.c: 31:      for(count=0;count<(sizedata-1);count++)
 10289  0E8D  01AB               	clrf	EEPROM_24C1025_Write_Buffer@count
 10290  0E8E                     l6256:	
 10291  0E8E  0826               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 10292  0E8F  3EFF               	addlw	255
 10293  0E90  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 10294  0E91  30FF               	movlw	255
 10295  0E92  1803               	skipnc
 10296  0E93  3000               	movlw	0
 10297  0E94  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 10298  0E95  3A80               	xorlw	128
 10299  0E96  3C80               	sublw	128
 10300  0E97  1D03               	skipz
 10301  0E98  2E9B               	goto	u5545
 10302  0E99  0829               	movf	??_EEPROM_24C1025_Write_Buffer,w
 10303  0E9A  022B               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 10304  0E9B                     u5545:	
 10305  0E9B  1803               	btfsc	3,0
 10306  0E9C  2F11               	goto	l6258
 10307                           
 10308                           ;EEPROM_24C1025.c: 32:           {;EEPROM_24C1025.c: 33:           if(mem_add>0x1FFFF) r
      +                          eturn;
 10309  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
 10310  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
 10311  0E9F  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 10312  0EA0  1D03               	btfss	3,2
 10313  0EA1  0008               	return
 10314  0EA2  3002               	movlw	2
 10315  0EA3  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 10316  0EA4  1D03               	skipz
 10317  0EA5  2EAC               	goto	u5513
 10318  0EA6  3000               	movlw	0
 10319  0EA7  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 10320  0EA8  1D03               	skipz
 10321  0EA9  2EAC               	goto	u5513
 10322  0EAA  3000               	movlw	0
 10323  0EAB  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 10324  0EAC                     u5513:	
 10325  0EAC  1803               	btfsc	3,0
 10326  0EAD  0008               	return
 10327                           
 10328                           ;EEPROM_24C1025.c: 34:           if((mem_add+1)%128==0)
 10329  0EAE  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 10330  0EAF  3E01               	addlw	1
 10331  0EB0  397F               	andlw	127
 10332  0EB1  1D03               	btfss	3,2
 10333  0EB2  2EFF               	goto	l6248
 10334                           
 10335                           ;EEPROM_24C1025.c: 35:             {;EEPROM_24C1025.c: 36:             I2C_Master_Write(
      +                          *data);
 10336  0EB3  27A9  120A  158A   	fcall	PL32	;call to abstracted procedure
 10337  0EB6  2726  120A  158A   	fcall	_I2C_Master_Write
 10338                           
 10339                           ;EEPROM_24C1025.c: 37:             I2C_Master_Stop();
 10340  0EB9  2734  120A  158A   	fcall	_I2C_Master_Stop
 10341                           
 10342                           ;EEPROM_24C1025.c: 39:             _delay((unsigned long)((5)*(8000000/4000.0)));
 10343  0EBC  300D               	movlw	13
 10344  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
 10345  0EBE  1303               	bcf	3,6	;RP1=0, select bank0
 10346  0EBF  00AA               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 10347  0EC0  30FB               	movlw	251
 10348  0EC1  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 10349  0EC2                     u6667:	
 10350  0EC2  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 10351  0EC3  2EC2               	goto	u6667
 10352  0EC4  0BAA               	decfsz	??_EEPROM_24C1025_Write_Buffer+1,f
 10353  0EC5  2EC2               	goto	u6667
 10354                           
 10355                           ;EEPROM_24C1025.c: 40:             mem_add++;
 10356  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
 10357  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
 10358  0EC8  0AA2               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
 10359  0EC9  1903               	skipnz
 10360  0ECA  0AA3               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 10361  0ECB  1903               	skipnz
 10362  0ECC  0AA4               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 10363  0ECD  1903               	skipnz
 10364  0ECE  0AA5               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 10365                           
 10366                           ;EEPROM_24C1025.c: 41:             data++;
 10367  0ECF  0AA7               	incf	EEPROM_24C1025_Write_Buffer@data,f
 10368  0ED0  1903               	skipnz
 10369  0ED1  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 10370                           
 10371                           ;EEPROM_24C1025.c: 42:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10372  0ED2  0825               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 10373  0ED3  1D03               	btfss	3,2
 10374  0ED4  2EE1               	goto	l6228
 10375  0ED5  3001               	movlw	1
 10376  0ED6  0224               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 10377  0ED7  1D03               	skipz
 10378  0ED8  2EDF               	goto	u5533
 10379  0ED9  3000               	movlw	0
 10380  0EDA  0223               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 10381  0EDB  1D03               	skipz
 10382  0EDC  2EDF               	goto	u5533
 10383  0EDD  3000               	movlw	0
 10384  0EDE  0222               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 10385  0EDF                     u5533:	
 10386  0EDF  1C03               	btfss	3,0
 10387  0EE0  2EE4               	goto	l6230
 10388  0EE1                     l6228:	
 10389  0EE1  3008               	movlw	8
 10390  0EE2  00AD               	movwf	EEPROM_24C1025_Write_Buffer@range
 10391  0EE3  2EE5               	goto	l6232
 10392  0EE4                     l6230:	
 10393  0EE4  01AD               	clrf	EEPROM_24C1025_Write_Buffer@range
 10394  0EE5                     l6232:	
 10395                           
 10396                           ;EEPROM_24C1025.c: 43:             ctrl=chip_add;
 10397                           
 10398                           ;EEPROM_24C1025.c: 44:             ctrl<<=1;
 10399                           
 10400                           ;EEPROM_24C1025.c: 45:             ctrl |= 0xA0;
 10401                           
 10402                           ;EEPROM_24C1025.c: 46:             ctrl |= range;
 10403  0EE5  27C6  120A  158A   	fcall	PL44	;call to abstracted procedure
 10404                           
 10405                           ;EEPROM_24C1025.c: 48:             I2C_Master_Start();
 10406  0EE8  272C  120A  158A   	fcall	_I2C_Master_Start
 10407                           
 10408                           ;EEPROM_24C1025.c: 49:             I2C_Master_Write(ctrl);
 10409  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
 10410  0EEC  082E               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 10411  0EED  00A0               	movwf	I2C_Master_Write@d
 10412  0EEE  01A1               	clrf	I2C_Master_Write@d+1
 10413  0EEF  2726  120A  158A   	fcall	_I2C_Master_Write
 10414                           
 10415                           ;EEPROM_24C1025.c: 50:             I2C_Master_Write(((char *)&mem_add)[1]);
 10416  0EF2  0823               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 10417  0EF3  00A0               	movwf	I2C_Master_Write@d
 10418  0EF4  01A1               	clrf	I2C_Master_Write@d+1
 10419  0EF5  2726  120A  158A   	fcall	_I2C_Master_Write
 10420                           
 10421                           ;EEPROM_24C1025.c: 51:             I2C_Master_Write(((char *)&mem_add)[0]);
 10422  0EF8  0822               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 10423  0EF9  00A0               	movwf	I2C_Master_Write@d
 10424  0EFA  01A1               	clrf	I2C_Master_Write@d+1
 10425  0EFB  2726  120A  158A   	fcall	_I2C_Master_Write
 10426                           
 10427                           ;EEPROM_24C1025.c: 52:             }
 10428  0EFE  2F0F               	goto	l6254
 10429  0EFF                     l6248:	
 10430                           
 10431                           ;EEPROM_24C1025.c: 54:             {;EEPROM_24C1025.c: 55:             I2C_Master_Write(
      +                          *data);
 10432  0EFF  27A9  120A  158A   	fcall	PL32	;call to abstracted procedure
 10433  0F02  2726  120A  158A   	fcall	_I2C_Master_Write
 10434                           
 10435                           ;EEPROM_24C1025.c: 56:             data++;
 10436  0F05  0AA7               	incf	EEPROM_24C1025_Write_Buffer@data,f
 10437  0F06  1903               	skipnz
 10438  0F07  0AA8               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 10439                           
 10440                           ;EEPROM_24C1025.c: 57:             mem_add++;
 10441  0F08  0AA2               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
 10442  0F09  1903               	skipnz
 10443  0F0A  0AA3               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 10444  0F0B  1903               	skipnz
 10445  0F0C  0AA4               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 10446  0F0D  1903               	skipnz
 10447  0F0E  0AA5               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 10448  0F0F                     l6254:	
 10449                           
 10450                           ;EEPROM_24C1025.c: 59:      }
 10451  0F0F  0AAB               	incf	EEPROM_24C1025_Write_Buffer@count,f
 10452  0F10  2E8E               	goto	l6256
 10453  0F11                     l6258:	
 10454                           
 10455                           ;EEPROM_24C1025.c: 60:      I2C_Master_Write(*data);
 10456  0F11  1283               	bcf	3,5	;RP0=0, select bank0
 10457  0F12  1303               	bcf	3,6	;RP1=0, select bank0
 10458  0F13  27A9  120A  158A   	fcall	PL32	;call to abstracted procedure
 10459  0F16  2726  120A  158A   	fcall	_I2C_Master_Write
 10460                           
 10461                           ;EEPROM_24C1025.c: 61:      I2C_Master_Stop();
 10462  0F19  2734  120A  158A   	fcall	_I2C_Master_Stop
 10463                           
 10464                           ;EEPROM_24C1025.c: 62:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 10465  0F1C  30B9               	movlw	185
 10466  0F1D  1283               	bcf	3,5	;RP0=0, select bank0
 10467  0F1E  1303               	bcf	3,6	;RP1=0, select bank0
 10468  0F1F  00A9               	movwf	??_EEPROM_24C1025_Write_Buffer
 10469  0F20                     u6677:	
 10470  0F20  2F21               	nop2
 10471  0F21  2F22               	nop2
 10472  0F22  0BA9               	decfsz	??_EEPROM_24C1025_Write_Buffer,f
 10473  0F23  2F20               	goto	u6677
 10474  0F24  2F25               	nop2
 10475  0F25  0008               	return
 10476  0F26                     __end_of_EEPROM_24C1025_Write_Buffer:	
 10477  0F26                     __ptext58:	
 10478 ;; *************** function _I2C_Master_Write *****************
 10479 ;; Defined at:
 10480 ;;		line 64 in file "I2C.c"
 10481 ;; Parameters:    Size  Location     Type
 10482 ;;  d               2    0[BANK0 ] unsigned int 
 10483 ;; Auto vars:     Size  Location     Type
 10484 ;;		None
 10485 ;; Return value:  Size  Location     Type
 10486 ;;                  1    wreg      void 
 10487 ;; Registers used:
 10488 ;;		wreg, status,2, status,0, pclath, cstack
 10489 ;; Tracked objects:
 10490 ;;		On entry : 300/0
 10491 ;;		On exit  : 300/0
 10492 ;;		Unchanged: 0/0
 10493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10494 ;;      Params:         0       2       0       0       0
 10495 ;;      Locals:         0       0       0       0       0
 10496 ;;      Temps:          0       0       0       0       0
 10497 ;;      Totals:         0       2       0       0       0
 10498 ;;Total ram usage:        2 bytes
 10499 ;; Hardware stack levels used:    1
 10500 ;; Hardware stack levels required when called:    2
 10501 ;; This function calls:
 10502 ;;		_I2C_Master_Wait
 10503 ;; This function is called by:
 10504 ;;		_EEPROM_24C1025_Write_Buffer
 10505 ;;		_EEPROM_24C1025_Read_Buffer
 10506 ;;		_EEPROM_24C1025_Write_Str
 10507 ;;		_EEPROM_24C1025_Read_Str
 10508 ;; This function uses a non-reentrant model
 10509 ;;
 10510                           
 10511                           
 10512                           ;psect for function _I2C_Master_Write
 10513  0F26                     _I2C_Master_Write:	
 10514                           
 10515                           ;I2C.c: 64: void I2C_Master_Write(unsigned d);I2C.c: 65: {;I2C.c: 66:   generic_status.f
      +                          lag_main_loop_WDT=1;
 10516                           
 10517                           ;incstack = 0
 10518                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10519  0F26  17F6               	bsf	_generic_status,7
 10520                           
 10521                           ;I2C.c: 67:   I2C_Master_Wait();
 10522  0F27  2759               	fcall	_I2C_Master_Wait
 10523                           
 10524                           ;I2C.c: 68:   SSPBUF = d;
 10525  0F28  1283               	bcf	3,5	;RP0=0, select bank0
 10526  0F29  0820               	movf	I2C_Master_Write@d,w
 10527  0F2A  0093               	movwf	19	;volatile
 10528  0F2B  0008               	return
 10529  0F2C                     __end_of_I2C_Master_Write:	
 10530  0F2C                     __ptext60:	
 10531 ;; *************** function _I2C_Master_Start *****************
 10532 ;; Defined at:
 10533 ;;		line 45 in file "I2C.c"
 10534 ;; Parameters:    Size  Location     Type
 10535 ;;		None
 10536 ;; Auto vars:     Size  Location     Type
 10537 ;;		None
 10538 ;; Return value:  Size  Location     Type
 10539 ;;                  1    wreg      void 
 10540 ;; Registers used:
 10541 ;;		wreg, status,2, status,0, pclath, cstack
 10542 ;; Tracked objects:
 10543 ;;		On entry : 300/0
 10544 ;;		On exit  : 300/100
 10545 ;;		Unchanged: 0/0
 10546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10547 ;;      Params:         0       0       0       0       0
 10548 ;;      Locals:         0       0       0       0       0
 10549 ;;      Temps:          0       0       0       0       0
 10550 ;;      Totals:         0       0       0       0       0
 10551 ;;Total ram usage:        0 bytes
 10552 ;; Hardware stack levels used:    1
 10553 ;; Hardware stack levels required when called:    2
 10554 ;; This function calls:
 10555 ;;		_I2C_Master_Wait
 10556 ;; This function is called by:
 10557 ;;		_EEPROM_24C1025_Write_Buffer
 10558 ;;		_EEPROM_24C1025_Read_Buffer
 10559 ;;		_EEPROM_24C1025_Write_Str
 10560 ;;		_EEPROM_24C1025_Read_Str
 10561 ;; This function uses a non-reentrant model
 10562 ;;
 10563                           
 10564                           
 10565                           ;psect for function _I2C_Master_Start
 10566  0F2C                     _I2C_Master_Start:	
 10567                           
 10568                           ;I2C.c: 47:   Delay_Led_Memory=20;
 10569                           
 10570                           ;incstack = 0
 10571                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10572  0F2C  3014               	movlw	20
 10573  0F2D  1683               	bsf	3,5	;RP0=1, select bank3
 10574  0F2E  1703               	bsf	3,6	;RP1=1, select bank3
 10575  0F2F  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 10576  0F30  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 10577                           
 10578                           ;I2C.c: 48:   I2C_Master_Wait();
 10579  0F31  2759               	fcall	_I2C_Master_Wait
 10580                           
 10581                           ;I2C.c: 49:   SEN = 1;
 10582  0F32  1411               	bsf	17,0	;volatile
 10583  0F33  0008               	return
 10584  0F34                     __end_of_I2C_Master_Start:	
 10585  0F34                     __ptext59:	
 10586 ;; *************** function _I2C_Master_Stop *****************
 10587 ;; Defined at:
 10588 ;;		line 58 in file "I2C.c"
 10589 ;; Parameters:    Size  Location     Type
 10590 ;;		None
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;		None
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  1    wreg      void 
 10595 ;; Registers used:
 10596 ;;		wreg, status,2, status,0, pclath, cstack
 10597 ;; Tracked objects:
 10598 ;;		On entry : 300/800
 10599 ;;		On exit  : 300/100
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10602 ;;      Params:         0       0       0       0       0
 10603 ;;      Locals:         0       0       0       0       0
 10604 ;;      Temps:          0       0       0       0       0
 10605 ;;      Totals:         0       0       0       0       0
 10606 ;;Total ram usage:        0 bytes
 10607 ;; Hardware stack levels used:    1
 10608 ;; Hardware stack levels required when called:    2
 10609 ;; This function calls:
 10610 ;;		_I2C_Master_Wait
 10611 ;; This function is called by:
 10612 ;;		_EEPROM_24C1025_Write_Buffer
 10613 ;;		_EEPROM_24C1025_Read_Buffer
 10614 ;;		_EEPROM_24C1025_Write_Str
 10615 ;;		_EEPROM_24C1025_Read_Str
 10616 ;; This function uses a non-reentrant model
 10617 ;;
 10618                           
 10619                           
 10620                           ;psect for function _I2C_Master_Stop
 10621  0F34                     _I2C_Master_Stop:	
 10622                           
 10623                           ;I2C.c: 60:   I2C_Master_Wait();
 10624                           
 10625                           ;incstack = 0
 10626                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 10627  0F34  2759               	fcall	_I2C_Master_Wait
 10628                           
 10629                           ;I2C.c: 61:   PEN = 1;
 10630  0F35  1511               	bsf	17,2	;volatile
 10631  0F36  0008               	return
 10632  0F37                     __end_of_I2C_Master_Stop:	
 10633  0F37                     __ptext55:	
 10634 ;; *************** function _I2C_Master_Read *****************
 10635 ;; Defined at:
 10636 ;;		line 71 in file "I2C.c"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;  a               2    0[BANK0 ] unsigned short 
 10639 ;; Auto vars:     Size  Location     Type
 10640 ;;  temp            2    2[BANK0 ] unsigned short 
 10641 ;; Return value:  Size  Location     Type
 10642 ;;                  2    0[BANK0 ] unsigned short 
 10643 ;; Registers used:
 10644 ;;		wreg, status,2, status,0, pclath, cstack
 10645 ;; Tracked objects:
 10646 ;;		On entry : 300/0
 10647 ;;		On exit  : 300/0
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10650 ;;      Params:         0       2       0       0       0
 10651 ;;      Locals:         0       2       0       0       0
 10652 ;;      Temps:          0       0       0       0       0
 10653 ;;      Totals:         0       4       0       0       0
 10654 ;;Total ram usage:        4 bytes
 10655 ;; Hardware stack levels used:    1
 10656 ;; Hardware stack levels required when called:    2
 10657 ;; This function calls:
 10658 ;;		_I2C_Master_Wait
 10659 ;; This function is called by:
 10660 ;;		_EEPROM_24C1025_Read_Buffer
 10661 ;;		_EEPROM_24C1025_Read_Str
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           
 10666                           ;psect for function _I2C_Master_Read
 10667  0F37                     _I2C_Master_Read:	
 10668                           
 10669                           ;I2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 72: {;I2C.c: 73:   u
      +                          nsigned short temp;;I2C.c: 74:   generic_status.flag_main_loop_WDT=1;
 10670                           
 10671                           ;incstack = 0
 10672                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 10673  0F37  17F6               	bsf	_generic_status,7
 10674                           
 10675                           ;I2C.c: 75:   I2C_Master_Wait();
 10676  0F38  2759  120A  158A   	fcall	_I2C_Master_Wait
 10677                           
 10678                           ;I2C.c: 76:   RCEN = 1;
 10679  0F3B  1591               	bsf	17,3	;volatile
 10680                           
 10681                           ;I2C.c: 77:   I2C_Master_Wait();
 10682  0F3C  2759  120A  158A   	fcall	_I2C_Master_Wait
 10683                           
 10684                           ;I2C.c: 78:   temp = SSPBUF;
 10685  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
 10686  0F40  0813               	movf	19,w	;volatile
 10687  0F41  00A2               	movwf	I2C_Master_Read@temp
 10688  0F42  01A3               	clrf	I2C_Master_Read@temp+1
 10689                           
 10690                           ;I2C.c: 79:   I2C_Master_Wait();
 10691  0F43  2759  120A  158A   	fcall	_I2C_Master_Wait
 10692                           
 10693                           ;I2C.c: 80:   ACKDT = (a)?0:1;
 10694  0F46  1283               	bcf	3,5	;RP0=0, select bank0
 10695  0F47  0820               	movf	I2C_Master_Read@a,w
 10696  0F48  0421               	iorwf	I2C_Master_Read@a+1,w
 10697  0F49  1D03               	btfss	3,2
 10698  0F4A  2F4F               	goto	u5470
 10699  0F4B  1683               	bsf	3,5	;RP0=1, select bank1
 10700  0F4C  1303               	bcf	3,6	;RP1=0, select bank1
 10701  0F4D  1691               	bsf	17,5	;volatile
 10702  0F4E  2F52               	goto	l6168
 10703  0F4F                     u5470:	
 10704  0F4F  1683               	bsf	3,5	;RP0=1, select bank1
 10705  0F50  1303               	bcf	3,6	;RP1=0, select bank1
 10706  0F51  1291               	bcf	17,5	;volatile
 10707  0F52                     l6168:	
 10708                           
 10709                           ;I2C.c: 81:   ACKEN = 1;
 10710  0F52  1611               	bsf	17,4	;volatile
 10711                           
 10712                           ;I2C.c: 82:   return temp;
 10713  0F53  1283               	bcf	3,5	;RP0=0, select bank0
 10714  0F54  0823               	movf	I2C_Master_Read@temp+1,w
 10715  0F55  00A1               	movwf	?_I2C_Master_Read+1
 10716  0F56  0822               	movf	I2C_Master_Read@temp,w
 10717  0F57  00A0               	movwf	?_I2C_Master_Read
 10718  0F58  0008               	return
 10719  0F59                     __end_of_I2C_Master_Read:	
 10720  0F59                     __ptext61:	
 10721 ;; *************** function _I2C_Master_Wait *****************
 10722 ;; Defined at:
 10723 ;;		line 40 in file "I2C.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;		None
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;		None
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  1    wreg      void 
 10730 ;; Registers used:
 10731 ;;		wreg, status,2
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 300/100
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10737 ;;      Params:         0       0       0       0       0
 10738 ;;      Locals:         0       0       0       0       0
 10739 ;;      Temps:          0       0       0       0       0
 10740 ;;      Totals:         0       0       0       0       0
 10741 ;;Total ram usage:        0 bytes
 10742 ;; Hardware stack levels used:    1
 10743 ;; Hardware stack levels required when called:    1
 10744 ;; This function calls:
 10745 ;;		Nothing
 10746 ;; This function is called by:
 10747 ;;		_I2C_Master_Start
 10748 ;;		_I2C_Master_RepeatedStart
 10749 ;;		_I2C_Master_Stop
 10750 ;;		_I2C_Master_Write
 10751 ;;		_I2C_Master_Read
 10752 ;; This function uses a non-reentrant model
 10753 ;;
 10754                           
 10755                           
 10756                           ;psect for function _I2C_Master_Wait
 10757  0F59                     _I2C_Master_Wait:	
 10758  0F59                     l49:	
 10759                           ;I2C.c: 42:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 10760                           
 10761                           ;incstack = 0
 10762                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 10763                           
 10764  0F59  1683               	bsf	3,5	;RP0=1, select bank1
 10765  0F5A  1303               	bcf	3,6	;RP1=0, select bank1
 10766  0F5B  1914               	btfsc	20,2	;volatile
 10767  0F5C  2F59               	goto	l49
 10768  0F5D  0811               	movf	17,w	;volatile
 10769  0F5E  391F               	andlw	31
 10770  0F5F  1903               	btfsc	3,2
 10771  0F60  0008               	return
 10772  0F61  2F59               	goto	l49
 10773  0F62                     __end_of_I2C_Master_Wait:	
 10774  0F62                     __ptext54:	
 10775 ;; *************** function _I2C_Master_RepeatedStart *****************
 10776 ;; Defined at:
 10777 ;;		line 52 in file "I2C.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;		None
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;		None
 10782 ;; Return value:  Size  Location     Type
 10783 ;;                  1    wreg      void 
 10784 ;; Registers used:
 10785 ;;		wreg, status,2, status,0, pclath, cstack
 10786 ;; Tracked objects:
 10787 ;;		On entry : 300/0
 10788 ;;		On exit  : 300/100
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10791 ;;      Params:         0       0       0       0       0
 10792 ;;      Locals:         0       0       0       0       0
 10793 ;;      Temps:          0       0       0       0       0
 10794 ;;      Totals:         0       0       0       0       0
 10795 ;;Total ram usage:        0 bytes
 10796 ;; Hardware stack levels used:    1
 10797 ;; Hardware stack levels required when called:    2
 10798 ;; This function calls:
 10799 ;;		_I2C_Master_Wait
 10800 ;; This function is called by:
 10801 ;;		_EEPROM_24C1025_Read_Buffer
 10802 ;;		_EEPROM_24C1025_Read_Str
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           
 10807                           ;psect for function _I2C_Master_RepeatedStart
 10808  0F62                     _I2C_Master_RepeatedStart:	
 10809                           
 10810                           ;I2C.c: 54:   I2C_Master_Wait();
 10811                           
 10812                           ;incstack = 0
 10813                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 10814  0F62  2759               	fcall	_I2C_Master_Wait
 10815                           
 10816                           ;I2C.c: 55:   RSEN = 1;
 10817  0F63  1491               	bsf	17,1	;volatile
 10818  0F64  0008               	return
 10819  0F65                     __end_of_I2C_Master_RepeatedStart:	
 10820  0F65                     __ptext17:	
 10821 ;; *************** function _itoa *****************
 10822 ;; Defined at:
 10823 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
 10824 ;; Parameters:    Size  Location     Type
 10825 ;;  buf             1    wreg     PTR unsigned char 
 10826 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
 10827 ;;  val             2   15[BANK0 ] int 
 10828 ;;  base            2   17[BANK0 ] int 
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;  buf             1   20[BANK0 ] PTR unsigned char 
 10831 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
 10832 ;;  cp              1    0        PTR unsigned char 
 10833 ;;		 -> Decodify_Command@ss(10), Decodify_Command@mm(10), Decodify_Command@hh(10), 
 10834 ;; Return value:  Size  Location     Type
 10835 ;;                  1    wreg      PTR unsigned char 
 10836 ;; Registers used:
 10837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10838 ;; Tracked objects:
 10839 ;;		On entry : 300/0
 10840 ;;		On exit  : B00/0
 10841 ;;		Unchanged: 0/0
 10842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10843 ;;      Params:         0       4       0       0       0
 10844 ;;      Locals:         0       2       0       0       0
 10845 ;;      Temps:          0       0       0       0       0
 10846 ;;      Totals:         0       6       0       0       0
 10847 ;;Total ram usage:        6 bytes
 10848 ;; Hardware stack levels used:    1
 10849 ;; Hardware stack levels required when called:    3
 10850 ;; This function calls:
 10851 ;;		_utoa
 10852 ;; This function is called by:
 10853 ;;		_Decodify_Command
 10854 ;; This function uses a non-reentrant model
 10855 ;;
 10856                           
 10857                           
 10858                           ;psect for function _itoa
 10859  0F65                     _itoa:	
 10860                           
 10861                           ;incstack = 0
 10862                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10863                           ;itoa@buf stored from wreg
 10864  0F65  00B4               	movwf	itoa@buf
 10865  0F66  1FB0               	btfss	itoa@val+1,7
 10866  0F67  2F73               	goto	l6828
 10867  0F68  0834               	movf	itoa@buf,w
 10868  0F69  0084               	movwf	4
 10869  0F6A  302D               	movlw	45
 10870  0F6B  1383               	bcf	3,7	;select IRP bank0
 10871  0F6C  0080               	movwf	0
 10872  0F6D  0AB4               	incf	itoa@buf,f
 10873  0F6E  09AF               	comf	itoa@val,f
 10874  0F6F  09B0               	comf	itoa@val+1,f
 10875  0F70  0AAF               	incf	itoa@val,f
 10876  0F71  1903               	skipnz
 10877  0F72  0AB0               	incf	itoa@val+1,f
 10878  0F73                     l6828:	
 10879  0F73  0830               	movf	itoa@val+1,w
 10880  0F74  00A8               	movwf	utoa@val+1
 10881  0F75  082F               	movf	itoa@val,w
 10882  0F76  00A7               	movwf	utoa@val
 10883  0F77  0832               	movf	itoa@base+1,w
 10884  0F78  00AA               	movwf	utoa@base+1
 10885  0F79  0831               	movf	itoa@base,w
 10886  0F7A  00A9               	movwf	utoa@base
 10887  0F7B  0834               	movf	itoa@buf,w
 10888  0F7C  160A  158A  2E19   	ljmp	_utoa
 10889  0F7F                     __end_of_itoa:	
 10890  0F7F                     __ptext37:	
 10891 ;; *************** function _USART_put_int *****************
 10892 ;; Defined at:
 10893 ;;		line 138 in file "usart.c"
 10894 ;; Parameters:    Size  Location     Type
 10895 ;;  value           2    8[BANK1 ] int 
 10896 ;; Auto vars:     Size  Location     Type
 10897 ;;  dado            1   10[BANK1 ] PTR unsigned char 
 10898 ;;		 -> USART_put_int@value(2), 
 10899 ;; Return value:  Size  Location     Type
 10900 ;;                  1    wreg      void 
 10901 ;; Registers used:
 10902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10903 ;; Tracked objects:
 10904 ;;		On entry : 300/100
 10905 ;;		On exit  : 300/100
 10906 ;;		Unchanged: 0/0
 10907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10908 ;;      Params:         0       0       2       0       0
 10909 ;;      Locals:         0       0       1       0       0
 10910 ;;      Temps:          0       0       0       0       0
 10911 ;;      Totals:         0       0       3       0       0
 10912 ;;Total ram usage:        3 bytes
 10913 ;; Hardware stack levels used:    1
 10914 ;; Hardware stack levels required when called:    2
 10915 ;; This function calls:
 10916 ;;		_USART_putc
 10917 ;; This function is called by:
 10918 ;;		_Decodify_Command
 10919 ;;		_PROCULUS_Control_Register_Write
 10920 ;;		_PROCULUS_VP_Write
 10921 ;; This function uses a non-reentrant model
 10922 ;;
 10923                           
 10924                           
 10925                           ;psect for function _USART_put_int
 10926  0F7F                     _USART_put_int:	
 10927  0F7F                     l6174:	
 10928                           ;incstack = 0
 10929                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10930                           
 10931                           
 10932                           ;usart.c: 139:      char *dado;;usart.c: 140:      dado=(char*)&value;
 10933  0F7F  30A8               	movlw	(low (USART_put_int@value| 0))& (0+255)
 10934  0F80  00AA               	movwf	USART_put_int@dado^(0+128)
 10935                           
 10936                           ;usart.c: 141:      USART_putc(*(dado+1));
 10937  0F81  0A2A               	incf	USART_put_int@dado^(0+128),w
 10938  0F82  0084               	movwf	4
 10939  0F83  1383               	bcf	3,7	;select IRP bank0
 10940  0F84  0800               	movf	0,w
 10941  0F85  23DD  120A  158A   	fcall	_USART_putc
 10942                           
 10943                           ;usart.c: 142:      USART_putc(*dado);
 10944  0F88  082A               	movf	USART_put_int@dado^(0+128),w
 10945  0F89  0084               	movwf	4
 10946  0F8A  1383               	bcf	3,7	;select IRP bank0
 10947  0F8B  0800               	movf	0,w
 10948  0F8C  2BDD               	ljmp	_USART_putc
 10949  0F8D                     __end_of_USART_put_int:	
 10950  0F8D                     __ptext31:	
 10951 ;; *************** function _strlen *****************
 10952 ;; Defined at:
 10953 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
 10954 ;; Parameters:    Size  Location     Type
 10955 ;;  s               1    wreg     PTR const unsigned char 
 10956 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
 10957 ;; Auto vars:     Size  Location     Type
 10958 ;;  s               1    4[BANK0 ] PTR const unsigned char 
 10959 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
 10960 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
 10961 ;;		 -> texto(16), usart_protocol.value(10), usart_protocol(16), 
 10962 ;; Return value:  Size  Location     Type
 10963 ;;                  2    0[BANK0 ] unsigned int 
 10964 ;; Registers used:
 10965 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10966 ;; Tracked objects:
 10967 ;;		On entry : 0/300
 10968 ;;		On exit  : B00/800
 10969 ;;		Unchanged: 0/0
 10970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10971 ;;      Params:         0       3       0       0       0
 10972 ;;      Locals:         0       2       0       0       0
 10973 ;;      Temps:          0       0       0       0       0
 10974 ;;      Totals:         0       5       0       0       0
 10975 ;;Total ram usage:        5 bytes
 10976 ;; Hardware stack levels used:    1
 10977 ;; Hardware stack levels required when called:    1
 10978 ;; This function calls:
 10979 ;;		Nothing
 10980 ;; This function is called by:
 10981 ;;		_Decodify_Command
 10982 ;;		_PROCULUS_VP_Write_String
 10983 ;; This function uses a non-reentrant model
 10984 ;;
 10985                           
 10986                           
 10987                           ;psect for function _strlen
 10988  0F8D                     _strlen:	
 10989                           
 10990                           ;incstack = 0
 10991                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 10992                           ;strlen@s stored from wreg
 10993  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
 10994  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
 10995  0F8F  00A4               	movwf	strlen@s
 10996  0F90  00A3               	movwf	strlen@cp
 10997  0F91                     l6456:	
 10998  0F91  0823               	movf	strlen@cp,w
 10999  0F92  0084               	movwf	4
 11000  0F93  1783               	bsf	3,7	;select IRP bank2
 11001  0F94  0800               	movf	0,w
 11002  0F95  1903               	btfsc	3,2
 11003  0F96  2F99               	goto	l6458
 11004  0F97  0AA3               	incf	strlen@cp,f
 11005  0F98  2F91               	goto	l6456
 11006  0F99                     l6458:	
 11007  0F99  0824               	movf	strlen@s,w
 11008  0F9A  0223               	subwf	strlen@cp,w
 11009  0F9B  00A0               	movwf	?_strlen
 11010  0F9C  01A1               	clrf	?_strlen+1
 11011  0F9D  1BA0               	btfsc	?_strlen,7
 11012  0F9E  03A1               	decf	?_strlen+1,f
 11013  0F9F  0008               	return
 11014  0FA0                     __end_of_strlen:	
 11015  0FA0                     __ptext23:	
 11016 ;; *************** function _Send_Reply_OK *****************
 11017 ;; Defined at:
 11018 ;;		line 653 in file "SlaveLiofilizadorVer1.c"
 11019 ;; Parameters:    Size  Location     Type
 11020 ;;		None
 11021 ;; Auto vars:     Size  Location     Type
 11022 ;;		None
 11023 ;; Return value:  Size  Location     Type
 11024 ;;                  1    wreg      void 
 11025 ;; Registers used:
 11026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11027 ;; Tracked objects:
 11028 ;;		On entry : 100/100
 11029 ;;		On exit  : 300/100
 11030 ;;		Unchanged: 0/0
 11031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11032 ;;      Params:         0       0       0       0       0
 11033 ;;      Locals:         0       0       0       0       0
 11034 ;;      Temps:          0       0       0       0       0
 11035 ;;      Totals:         0       0       0       0       0
 11036 ;;Total ram usage:        0 bytes
 11037 ;; Hardware stack levels used:    1
 11038 ;; Hardware stack levels required when called:    3
 11039 ;; This function calls:
 11040 ;;		_USART_put_string
 11041 ;; This function is called by:
 11042 ;;		_Decodify_Command
 11043 ;; This function uses a non-reentrant model
 11044 ;;
 11045                           
 11046                           
 11047                           ;psect for function _Send_Reply_OK
 11048  0FA0                     _Send_Reply_OK:	
 11049  0FA0                     l6584:	
 11050                           ;incstack = 0
 11051                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11052                           
 11053                           
 11054                           ;SlaveLiofilizadorVer1.c: 654:      USART_put_string("OK");
 11055  0FA0  3034               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
 11056  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
 11057  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
 11058  0FA3  00A1               	movwf	USART_put_string@vetor
 11059  0FA4  3080               	movlw	128
 11060  0FA5  00A2               	movwf	USART_put_string@vetor+1
 11061  0FA6  160A  158A  2CD9   	ljmp	l6344
 11062  0FA9                     __end_of_Send_Reply_OK:	
 11063  0FA9                     PL32:	
 11064  0FA9  0827               	movf	EEPROM_24C1025_Write_Buffer@data,w
 11065  0FAA  0084               	movwf	4
 11066  0FAB  1783               	bsf	3,7
 11067  0FAC  1C28               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 11068  0FAD  1383               	bcf	3,7
 11069  0FAE  0800               	movf	0,w
 11070  0FAF  00A0               	movwf	I2C_Master_Write@d
 11071  0FB0  01A1               	clrf	I2C_Master_Write@d+1
 11072  0FB1  0008               	return
 11073  0FB2                     __end_ofPL32:	
 11074  0FB2                     PL36:	
 11075  0FB2  082E               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11076  0FB3  00B0               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11077  0FB4  30A0               	movlw	160
 11078  0FB5  1003               	clrc
 11079  0FB6  0DB0               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11080  0FB7  04B0               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11081  0FB8  1430               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11082  0FB9  082F               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11083  0FBA  04B0               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11084  0FBB  0008               	return
 11085  0FBC                     __end_ofPL36:	
 11086  0FBC                     PL42:	
 11087  0FBC  082C               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 11088  0FBD  00AE               	movwf	EEPROM_24C1025_Read_Str@ctrl
 11089  0FBE  30A0               	movlw	160
 11090  0FBF  1003               	clrc
 11091  0FC0  0DAE               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 11092  0FC1  04AE               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11093  0FC2  142E               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 11094  0FC3  082D               	movf	EEPROM_24C1025_Read_Str@range,w
 11095  0FC4  04AE               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11096  0FC5  0008               	return
 11097  0FC6                     __end_ofPL42:	
 11098  0FC6                     PL44:	
 11099  0FC6  082C               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 11100  0FC7  00AE               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 11101  0FC8  30A0               	movlw	160
 11102  0FC9  1003               	clrc
 11103  0FCA  0DAE               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11104  0FCB  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11105  0FCC  082D               	movf	EEPROM_24C1025_Write_Buffer@range,w
 11106  0FCD  04AE               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11107  0FCE  0008               	return
 11108  0FCF                     __end_ofPL44:	
 11109  0FCF                     PL50:	
 11110  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
 11111  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
 11112  0FD1  00AF               	movwf	itoa@val
 11113  0FD2  300A               	movlw	10
 11114  0FD3  01B0               	clrf	itoa@val+1
 11115  0FD4  00B1               	movwf	itoa@base
 11116  0FD5  0008               	return
 11117  0FD6                     __end_ofPL50:	
 11118  0FD6                     PL52:	
 11119  0FD6  3037               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
 11120  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
 11121  0FD8  00A0               	movwf	strcat@from
 11122  0FD9  3080               	movlw	128
 11123  0FDA  00A1               	movwf	strcat@from+1
 11124  0FDB  34BE               	retlw	(low (_texto| (0+256)))& (0+255)
 11125  0FDC                     __end_ofPL52:	
 11126  0FDC                     PL56:	
 11127  0FDC  0829               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11128  0FDD  0084               	movwf	4
 11129  0FDE  1783               	bsf	3,7
 11130  0FDF  1C2A               	btfss	EEPROM_24C1025_Read_Buffer@data+1,0
 11131  0FE0  1383               	bcf	3,7
 11132  0FE1  01A0               	clrf	I2C_Master_Read@a
 11133  0FE2  0008               	return
 11134  0FE3                     __end_ofPL56:	
 11135  0FE3                     PL62:	
 11136  0FE3  3039               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
 11137  0FE4  00A0               	movwf	strcat@from
 11138  0FE5  3080               	movlw	128
 11139  0FE6  00A1               	movwf	strcat@from+1
 11140  0FE7  34BE               	retlw	(low (_texto| (0+256)))& (0+255)
 11141  0FE8                     __end_ofPL62:	
 11142  0FE8                     PL64:	
 11143  0FE8  1283               	bcf	3,5	;RP0=0, select bank0
 11144  0FE9  0830               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11145  0FEA  39FE               	andlw	254
 11146  0FEB  00A0               	movwf	I2C_Master_Write@d
 11147  0FEC  01A1               	clrf	I2C_Master_Write@d+1
 11148  0FED  0008               	return
 11149  0FEE                     __end_ofPL64:	
 11150  0FEE                     PL66:	
 11151  0FEE  30BE               	movlw	(low (_texto| (0+256)))& (0+255)
 11152  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
 11153  0FF0  00A1               	movwf	USART_put_string@vetor
 11154  0FF1  3001               	movlw	1
 11155  0FF2  00A2               	movwf	USART_put_string@vetor+1
 11156  0FF3  0008               	return
 11157  0FF4                     __end_ofPL66:	
 11158  0FF4                     PL68:	
 11159  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
 11160  0FF5  082E               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11161  0FF6  39FE               	andlw	254
 11162  0FF7  00A0               	movwf	I2C_Master_Write@d
 11163  0FF8  01A1               	clrf	I2C_Master_Write@d+1
 11164  0FF9  0008               	return
 11165  0FFA                     __end_ofPL68:	
 11166  0FFA                     PL70:	
 11167  0FFA  0826               	movf	EEPROM_24C1025_Write_Str@data,w
 11168  0FFB  0084               	movwf	4
 11169  0FFC  0800               	movf	0,w
 11170  0FFD  00A0               	movwf	I2C_Master_Write@d
 11171  0FFE  01A1               	clrf	I2C_Master_Write@d+1
 11172  0FFF  0008               	return
 11173  1000                     __end_ofPL70:	
 11174                           
 11175                           	psect	text33
 11176  1DA7                     __ptext33:	
 11177 ;; *************** function _PROCULUS_Show_Screen *****************
 11178 ;; Defined at:
 11179 ;;		line 243 in file "proculus.c"
 11180 ;; Parameters:    Size  Location     Type
 11181 ;;  screen          2   15[BANK1 ] unsigned int 
 11182 ;; Auto vars:     Size  Location     Type
 11183 ;;  vetor           3   17[BANK1 ] unsigned char [3]
 11184 ;; Return value:  Size  Location     Type
 11185 ;;                  1    wreg      void 
 11186 ;; Registers used:
 11187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11188 ;; Tracked objects:
 11189 ;;		On entry : 300/100
 11190 ;;		On exit  : 300/0
 11191 ;;		Unchanged: 0/0
 11192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11193 ;;      Params:         0       0       2       0       0
 11194 ;;      Locals:         0       0       3       0       0
 11195 ;;      Temps:          0       0       0       0       0
 11196 ;;      Totals:         0       0       5       0       0
 11197 ;;Total ram usage:        5 bytes
 11198 ;; Hardware stack levels used:    1
 11199 ;; Hardware stack levels required when called:    4
 11200 ;; This function calls:
 11201 ;;		_PROCULUS_Control_Register_Write
 11202 ;; This function is called by:
 11203 ;;		_Decodify_Command
 11204 ;; This function uses a non-reentrant model
 11205 ;;
 11206                           
 11207                           
 11208                           ;psect for function _PROCULUS_Show_Screen
 11209  1DA7                     _PROCULUS_Show_Screen:	
 11210                           
 11211                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
 11212                           
 11213                           ;incstack = 0
 11214                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11215  1DA7  3003               	movlw	3
 11216  1DA8  00B1               	movwf	PROCULUS_Show_Screen@vetor^(0+128)
 11217                           
 11218                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
 11219  1DA9  0830               	movf	(PROCULUS_Show_Screen@screen^(0+128)+1),w
 11220  1DAA  00B2               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+1)
 11221                           
 11222                           ;proculus.c: 247:      vetor[2] = (char) screen;
 11223  1DAB  082F               	movf	PROCULUS_Show_Screen@screen^(0+128),w
 11224  1DAC  00B3               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+2)
 11225                           
 11226                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
 11227  1DAD  3003               	movlw	3
 11228  1DAE  00AB               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
 11229  1DAF  30B1               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
 11230  1DB0  2DD1               	ljmp	_PROCULUS_Control_Register_Write
 11231  1DB1                     __end_of_PROCULUS_Show_Screen:	
 11232  1DB1                     __ptext34:	
 11233 ;; *************** function _PROCULUS_Buzzer *****************
 11234 ;; Defined at:
 11235 ;;		line 223 in file "proculus.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  time_ms_x_10    2   15[BANK1 ] unsigned int 
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;  vetor           2   17[BANK1 ] unsigned char [2]
 11240 ;; Return value:  Size  Location     Type
 11241 ;;                  1    wreg      void 
 11242 ;; Registers used:
 11243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11244 ;; Tracked objects:
 11245 ;;		On entry : 300/100
 11246 ;;		On exit  : 300/0
 11247 ;;		Unchanged: 0/0
 11248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11249 ;;      Params:         0       0       2       0       0
 11250 ;;      Locals:         0       0       2       0       0
 11251 ;;      Temps:          0       0       0       0       0
 11252 ;;      Totals:         0       0       4       0       0
 11253 ;;Total ram usage:        4 bytes
 11254 ;; Hardware stack levels used:    1
 11255 ;; Hardware stack levels required when called:    4
 11256 ;; This function calls:
 11257 ;;		_PROCULUS_Control_Register_Write
 11258 ;;		___lwdiv
 11259 ;; This function is called by:
 11260 ;;		_Decodify_Command
 11261 ;; This function uses a non-reentrant model
 11262 ;;
 11263                           
 11264                           
 11265                           ;psect for function _PROCULUS_Buzzer
 11266  1DB1                     _PROCULUS_Buzzer:	
 11267                           
 11268                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
 11269                           
 11270                           ;incstack = 0
 11271                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11272  1DB1  300A               	movlw	10
 11273  1DB2  1283               	bcf	3,5	;RP0=0, select bank0
 11274  1DB3  00A0               	movwf	___lwdiv@divisor
 11275  1DB4  01A1               	clrf	___lwdiv@divisor+1
 11276  1DB5  1683               	bsf	3,5	;RP0=1, select bank1
 11277  1DB6  0830               	movf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128),w
 11278  1DB7  1283               	bcf	3,5	;RP0=0, select bank0
 11279  1DB8  00A3               	movwf	___lwdiv@dividend+1
 11280  1DB9  1683               	bsf	3,5	;RP0=1, select bank1
 11281  1DBA  082F               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
 11282  1DBB  1283               	bcf	3,5	;RP0=0, select bank0
 11283  1DBC  00A2               	movwf	___lwdiv@dividend
 11284  1DBD  160A  118A  2654  160A  158A  	fcall	___lwdiv
 11285  1DC2  0821               	movf	?___lwdiv+1,w
 11286  1DC3  1683               	bsf	3,5	;RP0=1, select bank1
 11287  1DC4  00B0               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
 11288  1DC5  1283               	bcf	3,5	;RP0=0, select bank0
 11289  1DC6  0820               	movf	?___lwdiv,w
 11290  1DC7  1683               	bsf	3,5	;RP0=1, select bank1
 11291  1DC8  00AF               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
 11292                           
 11293                           ;proculus.c: 226:      vetor[0]=0x02;
 11294  1DC9  3002               	movlw	2
 11295  1DCA  00B1               	movwf	PROCULUS_Buzzer@vetor^(0+128)
 11296                           
 11297                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
 11298  1DCB  082F               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
 11299  1DCC  00B2               	movwf	(PROCULUS_Buzzer@vetor^(0+128)+1)
 11300                           
 11301                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
 11302  1DCD  3002               	movlw	2
 11303  1DCE  00AB               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
 11304  1DCF  30B1               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
 11305  1DD0  2DD1               	ljmp	_PROCULUS_Control_Register_Write
 11306  1DD1                     __end_of_PROCULUS_Buzzer:	
 11307  1DD1                     __ptext36:	
 11308 ;; *************** function _PROCULUS_Control_Register_Write *****************
 11309 ;; Defined at:
 11310 ;;		line 13 in file "proculus.c"
 11311 ;; Parameters:    Size  Location     Type
 11312 ;;  vetor           1    wreg     PTR unsigned char 
 11313 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 11314 ;;  size            1   11[BANK1 ] unsigned char 
 11315 ;; Auto vars:     Size  Location     Type
 11316 ;;  vetor           1   13[BANK1 ] PTR unsigned char 
 11317 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
 11318 ;;  i               1   14[BANK1 ] unsigned char 
 11319 ;; Return value:  Size  Location     Type
 11320 ;;                  1    wreg      void 
 11321 ;; Registers used:
 11322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11323 ;; Tracked objects:
 11324 ;;		On entry : 300/100
 11325 ;;		On exit  : 300/0
 11326 ;;		Unchanged: 0/0
 11327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11328 ;;      Params:         0       0       1       0       0
 11329 ;;      Locals:         0       0       2       0       0
 11330 ;;      Temps:          0       0       1       0       0
 11331 ;;      Totals:         0       0       4       0       0
 11332 ;;Total ram usage:        4 bytes
 11333 ;; Hardware stack levels used:    1
 11334 ;; Hardware stack levels required when called:    3
 11335 ;; This function calls:
 11336 ;;		_PROCULUS_Delay
 11337 ;;		_USART_put_int
 11338 ;;		_USART_putc
 11339 ;; This function is called by:
 11340 ;;		_PROCULUS_Buzzer
 11341 ;;		_PROCULUS_Show_Screen
 11342 ;; This function uses a non-reentrant model
 11343 ;;
 11344                           
 11345                           
 11346                           ;psect for function _PROCULUS_Control_Register_Write
 11347  1DD1                     _PROCULUS_Control_Register_Write:	
 11348                           
 11349                           ;incstack = 0
 11350                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
 11351                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
 11352  1DD1  00AD               	movwf	PROCULUS_Control_Register_Write@vetor^(0+128)
 11353                           
 11354                           ;proculus.c: 14:      USART_put_int(0x5AA5);
 11355  1DD2  30A5               	movlw	165
 11356  1DD3  00A8               	movwf	USART_put_int@value^(0+128)
 11357  1DD4  305A               	movlw	90
 11358  1DD5  00A9               	movwf	(USART_put_int@value^(0+128)+1)
 11359  1DD6  120A  158A  277F  160A  158A  	fcall	_USART_put_int
 11360                           
 11361                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
 11362  1DDB  082B               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
 11363  1DDC  3E01               	addlw	1
 11364  1DDD  120A  158A  23DD  160A  158A  	fcall	_USART_putc
 11365                           
 11366                           ;proculus.c: 16:      USART_putc(0x80);
 11367  1DE2  3080               	movlw	128
 11368  1DE3  120A  158A  23DD  160A  158A  	fcall	_USART_putc
 11369                           
 11370                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
 11371  1DE8  01AE               	clrf	PROCULUS_Control_Register_Write@i^(0+128)
 11372  1DE9                     l6498:	
 11373  1DE9  082B               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
 11374  1DEA  022E               	subwf	PROCULUS_Control_Register_Write@i^(0+128),w
 11375  1DEB  1803               	btfsc	3,0
 11376  1DEC  2DFA               	goto	l6500
 11377                           
 11378                           ;proculus.c: 18:          USART_putc(vetor[i]);
 11379  1DED  082E               	movf	PROCULUS_Control_Register_Write@i^(0+128),w
 11380  1DEE  072D               	addwf	PROCULUS_Control_Register_Write@vetor^(0+128),w
 11381  1DEF  00AC               	movwf	??_PROCULUS_Control_Register_Write^(0+128)
 11382  1DF0  0084               	movwf	4
 11383  1DF1  1383               	bcf	3,7	;select IRP bank0
 11384  1DF2  0800               	movf	0,w
 11385  1DF3  120A  158A  23DD  160A  158A  	fcall	_USART_putc
 11386  1DF8  0AAE               	incf	PROCULUS_Control_Register_Write@i^(0+128),f
 11387  1DF9  2DE9               	goto	l6498
 11388  1DFA                     l6500:	
 11389                           
 11390                           ;proculus.c: 19:      PROCULUS_Delay(1);
 11391  1DFA  1283               	bcf	3,5	;RP0=0, select bank0
 11392  1DFB  01A0               	clrf	PROCULUS_Delay@tempo_ms
 11393  1DFC  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
 11394  1DFD  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
 11395  1DFE  2DFF               	ljmp	l4274
 11396  1DFF                     __end_of_PROCULUS_Control_Register_Write:	
 11397  1DFF                     __ptext39:	
 11398 ;; *************** function _PROCULUS_Delay *****************
 11399 ;; Defined at:
 11400 ;;		line 267 in file "proculus.c"
 11401 ;; Parameters:    Size  Location     Type
 11402 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
 11403 ;; Auto vars:     Size  Location     Type
 11404 ;;  i               2    4[BANK0 ] unsigned int 
 11405 ;; Return value:  Size  Location     Type
 11406 ;;                  1    wreg      void 
 11407 ;; Registers used:
 11408 ;;		wreg, status,2, status,0
 11409 ;; Tracked objects:
 11410 ;;		On entry : 300/800
 11411 ;;		On exit  : 300/0
 11412 ;;		Unchanged: 0/0
 11413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11414 ;;      Params:         0       2       0       0       0
 11415 ;;      Locals:         0       2       0       0       0
 11416 ;;      Temps:          0       2       0       0       0
 11417 ;;      Totals:         0       6       0       0       0
 11418 ;;Total ram usage:        6 bytes
 11419 ;; Hardware stack levels used:    1
 11420 ;; Hardware stack levels required when called:    1
 11421 ;; This function calls:
 11422 ;;		Nothing
 11423 ;; This function is called by:
 11424 ;;		_PROCULUS_Control_Register_Write
 11425 ;;		_PROCULUS_VP_Write
 11426 ;; This function uses a non-reentrant model
 11427 ;;
 11428                           
 11429                           
 11430                           ;psect for function _PROCULUS_Delay
 11431  1DFF                     _PROCULUS_Delay:	
 11432  1DFF                     l4274:	
 11433                           ;incstack = 0
 11434                           ; Regs used in _PROCULUS_Delay: [wreg+status,2+status,0]
 11435                           
 11436                           
 11437                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
 11438  1DFF  01A4               	clrf	PROCULUS_Delay@i
 11439  1E00  01A5               	clrf	PROCULUS_Delay@i+1
 11440  1E01                     l4280:	
 11441  1E01  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
 11442  1E02  0225               	subwf	PROCULUS_Delay@i+1,w
 11443  1E03  1D03               	skipz
 11444  1E04  2E07               	goto	u3395
 11445  1E05  0820               	movf	PROCULUS_Delay@tempo_ms,w
 11446  1E06  0224               	subwf	PROCULUS_Delay@i,w
 11447  1E07                     u3395:	
 11448  1E07  1803               	btfsc	3,0
 11449  1E08  0008               	return
 11450                           
 11451                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
 11452  1E09  3003               	movlw	3
 11453  1E0A  1283               	bcf	3,5	;RP0=0, select bank0
 11454  1E0B  1303               	bcf	3,6	;RP1=0, select bank0
 11455  1E0C  00A3               	movwf	??_PROCULUS_Delay+1
 11456  1E0D  3097               	movlw	151
 11457  1E0E  00A2               	movwf	??_PROCULUS_Delay
 11458  1E0F                     u6567:	
 11459  1E0F  0BA2               	decfsz	??_PROCULUS_Delay,f
 11460  1E10  2E0F               	goto	u6567
 11461  1E11  0BA3               	decfsz	??_PROCULUS_Delay+1,f
 11462  1E12  2E0F               	goto	u6567
 11463                           
 11464                           ;proculus.c: 270:     }
 11465  1E13  1283               	bcf	3,5	;RP0=0, select bank0
 11466  1E14  1303               	bcf	3,6	;RP1=0, select bank0
 11467  1E15  0AA4               	incf	PROCULUS_Delay@i,f
 11468  1E16  1903               	skipnz
 11469  1E17  0AA5               	incf	PROCULUS_Delay@i+1,f
 11470  1E18  2E01               	goto	l4280
 11471  1E19                     __end_of_PROCULUS_Delay:	
 11472                           
 11473                           	psect	text44
 11474  1F01                     __ptext44:	
 11475 ;; *************** function _EEPROM_Write_Integer *****************
 11476 ;; Defined at:
 11477 ;;		line 68 in file "eeprom.c"
 11478 ;; Parameters:    Size  Location     Type
 11479 ;;  addr            1    wreg     unsigned char 
 11480 ;;  dado            2    5[BANK0 ] unsigned int 
 11481 ;; Auto vars:     Size  Location     Type
 11482 ;;  addr            1    9[BANK0 ] unsigned char 
 11483 ;;  i               1   11[BANK0 ] unsigned char 
 11484 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
 11485 ;;		 -> EEPROM_Write_Integer@dado(2), 
 11486 ;;  addr_memo       1    0        unsigned char 
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  1    wreg      void 
 11489 ;; Registers used:
 11490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11491 ;; Tracked objects:
 11492 ;;		On entry : 200/0
 11493 ;;		On exit  : 0/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11496 ;;      Params:         0       2       0       0       0
 11497 ;;      Locals:         0       3       0       0       0
 11498 ;;      Temps:          0       2       0       0       0
 11499 ;;      Totals:         0       7       0       0       0
 11500 ;;Total ram usage:        7 bytes
 11501 ;; Hardware stack levels used:    1
 11502 ;; Hardware stack levels required when called:    2
 11503 ;; This function calls:
 11504 ;;		_EEPROM_Write_Byte
 11505 ;; This function is called by:
 11506 ;;		_main
 11507 ;;		_Decodify_Command
 11508 ;; This function uses a non-reentrant model
 11509 ;;
 11510                           
 11511                           
 11512                           ;psect for function _EEPROM_Write_Integer
 11513  1F01                     _EEPROM_Write_Integer:	
 11514                           
 11515                           ;incstack = 0
 11516                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11517                           ;EEPROM_Write_Integer@addr stored from wreg
 11518  1F01  1283               	bcf	3,5	;RP0=0, select bank0
 11519  1F02  00A9               	movwf	EEPROM_Write_Integer@addr
 11520                           
 11521                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
 11522  1F03  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
 11523  1F04  00AA               	movwf	EEPROM_Write_Integer@ptr
 11524                           
 11525                           ;eeprom.c: 75:       for (i=0;i<2;i++)
 11526  1F05  01AB               	clrf	EEPROM_Write_Integer@i
 11527  1F06                     l4862:	
 11528                           
 11529                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
 11530  1F06  082A               	movf	EEPROM_Write_Integer@ptr,w
 11531  1F07  0084               	movwf	4
 11532  1F08  1383               	bcf	3,7	;select IRP bank0
 11533  1F09  0800               	movf	0,w
 11534  1F0A  00A0               	movwf	EEPROM_Write_Byte@dado
 11535  1F0B  0829               	movf	EEPROM_Write_Integer@addr,w
 11536  1F0C  273C  160A  158A   	fcall	_EEPROM_Write_Byte
 11537  1F0F  1283               	bcf	3,5	;RP0=0, select bank0
 11538  1F10  1303               	bcf	3,6	;RP1=0, select bank0
 11539  1F11  3002               	movlw	2
 11540  1F12  0AAA               	incf	EEPROM_Write_Integer@ptr,f
 11541  1F13  0AA9               	incf	EEPROM_Write_Integer@addr,f
 11542  1F14  0AAB               	incf	EEPROM_Write_Integer@i,f
 11543  1F15  022B               	subwf	EEPROM_Write_Integer@i,w
 11544  1F16  1C03               	skipc
 11545  1F17  2F06               	goto	l4862
 11546                           
 11547                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
 11548  1F18  304E               	movlw	78
 11549  1F19  1283               	bcf	3,5	;RP0=0, select bank0
 11550  1F1A  1303               	bcf	3,6	;RP1=0, select bank0
 11551  1F1B  00A8               	movwf	??_EEPROM_Write_Integer+1
 11552  1F1C  30EA               	movlw	234
 11553  1F1D  00A7               	movwf	??_EEPROM_Write_Integer
 11554  1F1E                     u6577:	
 11555  1F1E  0BA7               	decfsz	??_EEPROM_Write_Integer,f
 11556  1F1F  2F1E               	goto	u6577
 11557  1F20  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
 11558  1F21  2F1E               	goto	u6577
 11559  1F22  0000               	nop
 11560  1F23  0008               	return
 11561  1F24                     __end_of_EEPROM_Write_Integer:	
 11562  1F24                     __ptext43:	
 11563 ;; *************** function _EEPROM_Write_String *****************
 11564 ;; Defined at:
 11565 ;;		line 97 in file "eeprom.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;  addr            1    wreg     unsigned char 
 11568 ;;  dado            1    5[BANK0 ] PTR unsigned char 
 11569 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 11570 ;; Auto vars:     Size  Location     Type
 11571 ;;  addr            1    6[BANK0 ] unsigned char 
 11572 ;; Return value:  Size  Location     Type
 11573 ;;                  1    wreg      void 
 11574 ;; Registers used:
 11575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11576 ;; Tracked objects:
 11577 ;;		On entry : 300/300
 11578 ;;		On exit  : 0/0
 11579 ;;		Unchanged: 0/0
 11580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11581 ;;      Params:         0       1       0       0       0
 11582 ;;      Locals:         0       1       0       0       0
 11583 ;;      Temps:          0       0       0       0       0
 11584 ;;      Totals:         0       2       0       0       0
 11585 ;;Total ram usage:        2 bytes
 11586 ;; Hardware stack levels used:    1
 11587 ;; Hardware stack levels required when called:    2
 11588 ;; This function calls:
 11589 ;;		_EEPROM_Write_Byte
 11590 ;; This function is called by:
 11591 ;;		_Decodify_Command
 11592 ;; This function uses a non-reentrant model
 11593 ;;
 11594                           
 11595                           
 11596                           ;psect for function _EEPROM_Write_String
 11597  1F24                     _EEPROM_Write_String:	
 11598                           
 11599                           ;incstack = 0
 11600                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11601                           ;EEPROM_Write_String@addr stored from wreg
 11602  1F24  1283               	bcf	3,5	;RP0=0, select bank0
 11603  1F25  1303               	bcf	3,6	;RP1=0, select bank0
 11604  1F26  00A6               	movwf	EEPROM_Write_String@addr
 11605  1F27                     l6594:	
 11606                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
 11607                           
 11608                           
 11609                           ;eeprom.c: 99:     while(*dado)
 11610  1F27  0825               	movf	EEPROM_Write_String@dado,w
 11611  1F28  0084               	movwf	4
 11612  1F29  1783               	bsf	3,7	;select IRP bank2
 11613  1F2A  0800               	movf	0,w
 11614  1F2B  1903               	btfsc	3,2
 11615  1F2C  2F38               	goto	l6596
 11616                           
 11617                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
 11618  1F2D  2777  160A  158A   	fcall	PL76	;call to abstracted procedure
 11619  1F30  273C  160A  158A   	fcall	_EEPROM_Write_Byte
 11620                           
 11621                           ;eeprom.c: 102:      addr++;
 11622  1F33  1283               	bcf	3,5	;RP0=0, select bank0
 11623  1F34  1303               	bcf	3,6	;RP1=0, select bank0
 11624  1F35  0AA6               	incf	EEPROM_Write_String@addr,f
 11625                           
 11626                           ;eeprom.c: 103:      dado++;
 11627  1F36  0AA5               	incf	EEPROM_Write_String@dado,f
 11628  1F37  2F27               	goto	l6594
 11629  1F38                     l6596:	
 11630                           
 11631                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
 11632  1F38  2777  160A  158A   	fcall	PL76	;call to abstracted procedure
 11633  1F3B  2F3C               	ljmp	_EEPROM_Write_Byte
 11634  1F3C                     __end_of_EEPROM_Write_String:	
 11635  1F3C                     __ptext45:	
 11636 ;; *************** function _EEPROM_Write_Byte *****************
 11637 ;; Defined at:
 11638 ;;		line 21 in file "eeprom.c"
 11639 ;; Parameters:    Size  Location     Type
 11640 ;;  addr            1    wreg     unsigned char 
 11641 ;;  dado            1    0[BANK0 ] unsigned char 
 11642 ;; Auto vars:     Size  Location     Type
 11643 ;;  addr            1    3[BANK0 ] unsigned char 
 11644 ;;  last_GIE        1    4[BANK0 ] unsigned char 
 11645 ;; Return value:  Size  Location     Type
 11646 ;;                  1    wreg      void 
 11647 ;; Registers used:
 11648 ;;		wreg, status,2, status,0
 11649 ;; Tracked objects:
 11650 ;;		On entry : 0/300
 11651 ;;		On exit  : 0/0
 11652 ;;		Unchanged: 0/0
 11653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11654 ;;      Params:         0       1       0       0       0
 11655 ;;      Locals:         0       2       0       0       0
 11656 ;;      Temps:          0       2       0       0       0
 11657 ;;      Totals:         0       5       0       0       0
 11658 ;;Total ram usage:        5 bytes
 11659 ;; Hardware stack levels used:    1
 11660 ;; Hardware stack levels required when called:    1
 11661 ;; This function calls:
 11662 ;;		Nothing
 11663 ;; This function is called by:
 11664 ;;		_Decodify_Command
 11665 ;;		_EEPROM_Write_Integer
 11666 ;;		_EEPROM_Write_String
 11667 ;; This function uses a non-reentrant model
 11668 ;;
 11669                           
 11670                           
 11671                           ;psect for function _EEPROM_Write_Byte
 11672  1F3C                     _EEPROM_Write_Byte:	
 11673                           
 11674                           ;incstack = 0
 11675                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
 11676                           ;EEPROM_Write_Byte@addr stored from wreg
 11677  1F3C  1283               	bcf	3,5	;RP0=0, select bank0
 11678  1F3D  1303               	bcf	3,6	;RP1=0, select bank0
 11679  1F3E  00A3               	movwf	EEPROM_Write_Byte@addr
 11680                           
 11681                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
 11682  1F3F  3014               	movlw	20
 11683  1F40  1683               	bsf	3,5	;RP0=1, select bank3
 11684  1F41  1703               	bsf	3,6	;RP1=1, select bank3
 11685  1F42  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 11686  1F43  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 11687  1F44                     l474:	
 11688                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
 11689                           
 11690  1F44  188C               	btfsc	12,1	;volsfr
 11691  1F45  2F44               	goto	l474
 11692                           
 11693                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
 11694  1F46  1F8B               	btfss	11,7	;volatile
 11695  1F47  2F4D               	goto	l4456
 11696                           
 11697                           ;eeprom.c: 28:           last_GIE=1;
 11698  1F48  1283               	bcf	3,5	;RP0=0, select bank0
 11699  1F49  1303               	bcf	3,6	;RP1=0, select bank0
 11700  1F4A  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 11701  1F4B  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
 11702  1F4C  2F50               	goto	l4458
 11703  1F4D                     l4456:	
 11704                           
 11705                           ;eeprom.c: 30:           last_GIE=0;
 11706  1F4D  1283               	bcf	3,5	;RP0=0, select bank0
 11707  1F4E  1303               	bcf	3,6	;RP1=0, select bank0
 11708  1F4F  01A4               	clrf	EEPROM_Write_Byte@last_GIE
 11709  1F50                     l4458:	
 11710                           
 11711                           ;eeprom.c: 32:        EEADR=addr;
 11712  1F50  0823               	movf	EEPROM_Write_Byte@addr,w
 11713  1F51  1703               	bsf	3,6	;RP1=1, select bank2
 11714  1F52  008D               	movwf	13	;volatile
 11715                           
 11716                           ;eeprom.c: 33:        EEDATA=dado;
 11717  1F53  1303               	bcf	3,6	;RP1=0, select bank0
 11718  1F54  0820               	movf	EEPROM_Write_Byte@dado,w
 11719  1F55  1703               	bsf	3,6	;RP1=1, select bank2
 11720  1F56  008C               	movwf	12	;volatile
 11721                           
 11722                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
 11723  1F57  1683               	bsf	3,5	;RP0=1, select bank3
 11724  1F58  138C               	bcf	12,7	;volsfr
 11725                           
 11726                           ;eeprom.c: 35:        EECON1bits.WREN=1;
 11727  1F59  150C               	bsf	12,2	;volsfr
 11728                           
 11729                           ;eeprom.c: 36:        INTCONbits.GIE=0;
 11730  1F5A  138B               	bcf	11,7	;volatile
 11731                           
 11732                           ;eeprom.c: 37:        EECON2=0x55;
 11733  1F5B  3055               	movlw	85
 11734  1F5C  008D               	movwf	13	;volsfr
 11735                           
 11736                           ;eeprom.c: 38:        EECON2=0xAA;
 11737  1F5D  30AA               	movlw	170
 11738  1F5E  008D               	movwf	13	;volsfr
 11739                           
 11740                           ;eeprom.c: 39:        EECON1bits.WR=1;
 11741  1F5F  148C               	bsf	12,1	;volsfr
 11742                           
 11743                           ;eeprom.c: 41:        if(last_GIE==1)
 11744  1F60  1283               	bcf	3,5	;RP0=0, select bank0
 11745  1F61  1303               	bcf	3,6	;RP1=0, select bank0
 11746  1F62  0324               	decf	EEPROM_Write_Byte@last_GIE,w
 11747  1F63  1D03               	btfss	3,2
 11748  1F64  2F67               	goto	l479
 11749                           
 11750                           ;eeprom.c: 42:           INTCONbits.GIE=1;
 11751  1F65  178B               	bsf	11,7	;volatile
 11752  1F66  2F68               	goto	l480
 11753  1F67                     l479:	
 11754                           ;eeprom.c: 43:        else
 11755                           
 11756                           
 11757                           ;eeprom.c: 44:           INTCONbits.GIE=0;
 11758  1F67  138B               	bcf	11,7	;volatile
 11759  1F68                     l480:	
 11760                           
 11761                           ;eeprom.c: 46:        EECON1bits.WREN=0;
 11762  1F68  1683               	bsf	3,5	;RP0=1, select bank3
 11763  1F69  1703               	bsf	3,6	;RP1=1, select bank3
 11764  1F6A  110C               	bcf	12,2	;volsfr
 11765                           
 11766                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
 11767  1F6B  304E               	movlw	78
 11768  1F6C  1283               	bcf	3,5	;RP0=0, select bank0
 11769  1F6D  1303               	bcf	3,6	;RP1=0, select bank0
 11770  1F6E  00A2               	movwf	??_EEPROM_Write_Byte+1
 11771  1F6F  30EA               	movlw	234
 11772  1F70  00A1               	movwf	??_EEPROM_Write_Byte
 11773  1F71                     u6587:	
 11774  1F71  0BA1               	decfsz	??_EEPROM_Write_Byte,f
 11775  1F72  2F71               	goto	u6587
 11776  1F73  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
 11777  1F74  2F71               	goto	u6587
 11778  1F75  0000               	nop
 11779  1F76  0008               	return
 11780  1F77                     __end_of_EEPROM_Write_Byte:	
 11781  1F77                     PL76:	
 11782  1F77  0825               	movf	EEPROM_Write_String@dado,w
 11783  1F78  0084               	movwf	4
 11784  1F79  0800               	movf	0,w
 11785  1F7A  00A0               	movwf	EEPROM_Write_Byte@dado
 11786  1F7B  0826               	movf	EEPROM_Write_String@addr,w
 11787  1F7C  0008               	return
 11788  1F7D                     __end_ofPL76:	
 11789                           
 11790                           	psect	text46
 11791  0492                     __ptext46:	
 11792 ;; *************** function _EEPROM_Read_String *****************
 11793 ;; Defined at:
 11794 ;;		line 109 in file "eeprom.c"
 11795 ;; Parameters:    Size  Location     Type
 11796 ;;  addr            1    wreg     unsigned char 
 11797 ;;  dado            1    3[BANK0 ] PTR unsigned char 
 11798 ;;		 -> texto(16), 
 11799 ;; Auto vars:     Size  Location     Type
 11800 ;;  addr            1    4[BANK0 ] unsigned char 
 11801 ;;  c               1    5[BANK0 ] unsigned char 
 11802 ;; Return value:  Size  Location     Type
 11803 ;;                  1    wreg      void 
 11804 ;; Registers used:
 11805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11806 ;; Tracked objects:
 11807 ;;		On entry : 300/300
 11808 ;;		On exit  : B00/800
 11809 ;;		Unchanged: 0/0
 11810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11811 ;;      Params:         0       1       0       0       0
 11812 ;;      Locals:         0       2       0       0       0
 11813 ;;      Temps:          0       0       0       0       0
 11814 ;;      Totals:         0       3       0       0       0
 11815 ;;Total ram usage:        3 bytes
 11816 ;; Hardware stack levels used:    1
 11817 ;; Hardware stack levels required when called:    2
 11818 ;; This function calls:
 11819 ;;		_EEPROM_Read_Byte
 11820 ;; This function is called by:
 11821 ;;		_Decodify_Command
 11822 ;; This function uses a non-reentrant model
 11823 ;;
 11824                           
 11825                           
 11826                           ;psect for function _EEPROM_Read_String
 11827  0492                     _EEPROM_Read_String:	
 11828                           
 11829                           ;incstack = 0
 11830                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11831                           ;EEPROM_Read_String@addr stored from wreg
 11832  0492  1283               	bcf	3,5	;RP0=0, select bank0
 11833  0493  1303               	bcf	3,6	;RP1=0, select bank0
 11834  0494  00A4               	movwf	EEPROM_Read_String@addr
 11835  0495                     l506:	
 11836                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
 11837                           
 11838                           
 11839                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
 11840  0495  0824               	movf	EEPROM_Read_String@addr,w
 11841  0496  257E  120A  118A   	fcall	_EEPROM_Read_Byte
 11842  0499  1303               	bcf	3,6	;RP1=0, select bank0
 11843  049A  00A5               	movwf	EEPROM_Read_String@c
 11844  049B  0AA4               	incf	EEPROM_Read_String@addr,f
 11845                           
 11846                           ;eeprom.c: 114:         *(dado++)=c;
 11847  049C  0823               	movf	EEPROM_Read_String@dado,w
 11848  049D  0084               	movwf	4
 11849  049E  0825               	movf	EEPROM_Read_String@c,w
 11850  049F  1783               	bsf	3,7	;select IRP bank2
 11851  04A0  0080               	movwf	0
 11852  04A1  0AA3               	incf	EEPROM_Read_String@dado,f
 11853                           
 11854                           ;eeprom.c: 116:       }while(c);
 11855  04A2  0825               	movf	EEPROM_Read_String@c,w
 11856  04A3  1903               	btfsc	3,2
 11857  04A4  0008               	return
 11858  04A5  2C95               	goto	l506
 11859  04A6                     __end_of_EEPROM_Read_String:	
 11860  04A6                     __ptext40:	
 11861 ;; *************** function _Load_Work *****************
 11862 ;; Defined at:
 11863 ;;		line 977 in file "SlaveLiofilizadorVer1.c"
 11864 ;; Parameters:    Size  Location     Type
 11865 ;;		None
 11866 ;; Auto vars:     Size  Location     Type
 11867 ;;		None
 11868 ;; Return value:  Size  Location     Type
 11869 ;;                  1    wreg      void 
 11870 ;; Registers used:
 11871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11872 ;; Tracked objects:
 11873 ;;		On entry : 100/300
 11874 ;;		On exit  : 300/200
 11875 ;;		Unchanged: 0/0
 11876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11877 ;;      Params:         0       0       0       0       0
 11878 ;;      Locals:         0       0       0       0       0
 11879 ;;      Temps:          0       0       4       0       0
 11880 ;;      Totals:         0       0       4       0       0
 11881 ;;Total ram usage:        4 bytes
 11882 ;; Hardware stack levels used:    1
 11883 ;; Hardware stack levels required when called:    3
 11884 ;; This function calls:
 11885 ;;		_EEPROM_Read_Byte
 11886 ;;		_EEPROM_Read_Integer
 11887 ;;		___fldiv
 11888 ;;		___xxtofl
 11889 ;; This function is called by:
 11890 ;;		_main
 11891 ;;		_Decodify_Command
 11892 ;; This function uses a non-reentrant model
 11893 ;;
 11894                           
 11895                           
 11896                           ;psect for function _Load_Work
 11897  04A6                     _Load_Work:	
 11898  04A6                     l6554:	
 11899                           ;incstack = 0
 11900                           ; Regs used in _Load_Work: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11901                           
 11902                           
 11903                           ;SlaveLiofilizadorVer1.c: 980:      SetPoint0 = EEPROM_Read_Integer(0);
 11904  04A6  3000               	movlw	0
 11905  04A7  259F  120A  118A   	fcall	_EEPROM_Read_Integer
 11906  04AA  25BA               	fcall	PL14	;call to abstracted procedure
 11907  04AB  160A  118A  24A9  120A  118A  	fcall	___xxtofl
 11908  04B0  082E               	movf	?___xxtofl+3,w
 11909  04B1  00F3               	movwf	_SetPoint0+3	;volatile
 11910  04B2  082D               	movf	?___xxtofl+2,w
 11911  04B3  00F2               	movwf	_SetPoint0+2	;volatile
 11912  04B4  082C               	movf	?___xxtofl+1,w
 11913  04B5  00F1               	movwf	_SetPoint0+1	;volatile
 11914  04B6  082B               	movf	?___xxtofl,w
 11915  04B7  00F0               	movwf	_SetPoint0	;volatile
 11916                           
 11917                           ;SlaveLiofilizadorVer1.c: 981:      SetPoint0/=10;
 11918  04B8  3041               	movlw	65
 11919  04B9  1683               	bsf	3,5	;RP0=1, select bank1
 11920  04BA  00A3               	movwf	(___fldiv@a+3)^(0+128)
 11921  04BB  3020               	movlw	32
 11922  04BC  00A2               	movwf	(___fldiv@a+2)^(0+128)
 11923  04BD  01A1               	clrf	(___fldiv@a+1)^(0+128)
 11924  04BE  01A0               	clrf	___fldiv@a^(0+128)
 11925  04BF  0873               	movf	_SetPoint0+3,w	;volatile
 11926  04C0  00A7               	movwf	(___fldiv@b+3)^(0+128)
 11927  04C1  0872               	movf	_SetPoint0+2,w	;volatile
 11928  04C2  00A6               	movwf	(___fldiv@b+2)^(0+128)
 11929  04C3  0871               	movf	_SetPoint0+1,w	;volatile
 11930  04C4  00A5               	movwf	(___fldiv@b+1)^(0+128)
 11931  04C5  0870               	movf	_SetPoint0,w	;volatile
 11932  04C6  00A4               	movwf	___fldiv@b^(0+128)
 11933  04C7  160A  118A  2517  120A  118A  	fcall	___fldiv
 11934  04CC  0823               	movf	(?___fldiv+3)^(0+128),w
 11935  04CD  00F3               	movwf	_SetPoint0+3	;volatile
 11936  04CE  0822               	movf	(?___fldiv+2)^(0+128),w
 11937  04CF  00F2               	movwf	_SetPoint0+2	;volatile
 11938  04D0  0821               	movf	(?___fldiv+1)^(0+128),w
 11939  04D1  00F1               	movwf	_SetPoint0+1	;volatile
 11940  04D2  0820               	movf	?___fldiv^(0+128),w
 11941  04D3  00F0               	movwf	_SetPoint0	;volatile
 11942                           
 11943                           ;SlaveLiofilizadorVer1.c: 982:      TempoON_0 = EEPROM_Read_Byte(2);
 11944  04D4  3002               	movlw	2
 11945  04D5  257E  120A  118A   	fcall	_EEPROM_Read_Byte
 11946  04D8  1683               	bsf	3,5	;RP0=1, select bank3
 11947  04D9  00BA               	movwf	_TempoON_0^(0+384)
 11948                           
 11949                           ;SlaveLiofilizadorVer1.c: 983:      TempoOFF_0= EEPROM_Read_Byte(3);
 11950  04DA  3003               	movlw	3
 11951  04DB  257E  120A  118A   	fcall	_EEPROM_Read_Byte
 11952  04DE  1683               	bsf	3,5	;RP0=1, select bank3
 11953  04DF  00B9               	movwf	_TempoOFF_0^(0+384)
 11954                           
 11955                           ;SlaveLiofilizadorVer1.c: 984:      Histerese0= EEPROM_Read_Byte(4);
 11956  04E0  3004               	movlw	4
 11957  04E1  257E               	fcall	_EEPROM_Read_Byte
 11958  04E2  1303               	bcf	3,6	;RP1=0, select bank0
 11959  04E3  00AB               	movwf	___xxtofl@val
 11960  04E4  3000               	movlw	0
 11961  04E5  01AC               	clrf	___xxtofl@val+1
 11962  04E6  01AD               	clrf	___xxtofl@val+2
 11963  04E7  01AE               	clrf	___xxtofl@val+3
 11964  04E8  160A  118A  24A9  120A  118A  	fcall	___xxtofl
 11965  04ED  082E               	movf	?___xxtofl+3,w
 11966  04EE  1683               	bsf	3,5	;RP0=1, select bank3
 11967  04EF  1703               	bsf	3,6	;RP1=1, select bank3
 11968  04F0  009F               	movwf	(_Histerese0+3)^(0+384)
 11969  04F1  1283               	bcf	3,5	;RP0=0, select bank0
 11970  04F2  1303               	bcf	3,6	;RP1=0, select bank0
 11971  04F3  082D               	movf	?___xxtofl+2,w
 11972  04F4  1683               	bsf	3,5	;RP0=1, select bank3
 11973  04F5  1703               	bsf	3,6	;RP1=1, select bank3
 11974  04F6  009E               	movwf	(_Histerese0+2)^(0+384)
 11975  04F7  1283               	bcf	3,5	;RP0=0, select bank0
 11976  04F8  1303               	bcf	3,6	;RP1=0, select bank0
 11977  04F9  082C               	movf	?___xxtofl+1,w
 11978  04FA  1683               	bsf	3,5	;RP0=1, select bank3
 11979  04FB  1703               	bsf	3,6	;RP1=1, select bank3
 11980  04FC  009D               	movwf	(_Histerese0+1)^(0+384)
 11981  04FD  1283               	bcf	3,5	;RP0=0, select bank0
 11982  04FE  1303               	bcf	3,6	;RP1=0, select bank0
 11983  04FF  082B               	movf	?___xxtofl,w
 11984  0500  1683               	bsf	3,5	;RP0=1, select bank3
 11985  0501  1703               	bsf	3,6	;RP1=1, select bank3
 11986  0502  009C               	movwf	_Histerese0^(0+384)
 11987                           
 11988                           ;SlaveLiofilizadorVer1.c: 985:      Status0 = EEPROM_Read_Integer(5);
 11989  0503  3005               	movlw	5
 11990  0504  259F  120A  118A   	fcall	_EEPROM_Read_Integer
 11991  0507  0824               	movf	?_EEPROM_Read_Integer+1,w
 11992  0508  1683               	bsf	3,5	;RP0=1, select bank3
 11993  0509  1703               	bsf	3,6	;RP1=1, select bank3
 11994  050A  00A9               	movwf	(_Status0+1)^(0+384)
 11995  050B  1283               	bcf	3,5	;RP0=0, select bank0
 11996  050C  1303               	bcf	3,6	;RP1=0, select bank0
 11997  050D  0823               	movf	?_EEPROM_Read_Integer,w
 11998  050E  1683               	bsf	3,5	;RP0=1, select bank3
 11999  050F  1703               	bsf	3,6	;RP1=1, select bank3
 12000  0510  00A8               	movwf	_Status0^(0+384)
 12001                           
 12002                           ;SlaveLiofilizadorVer1.c: 987:      SetPoint1 = EEPROM_Read_Integer(7);
 12003  0511  3007               	movlw	7
 12004  0512  259F  120A  118A   	fcall	_EEPROM_Read_Integer
 12005  0515  25BA               	fcall	PL14	;call to abstracted procedure
 12006  0516  160A  118A  24A9  120A  118A  	fcall	___xxtofl
 12007  051B  082E               	movf	?___xxtofl+3,w
 12008  051C  1683               	bsf	3,5	;RP0=1, select bank3
 12009  051D  1703               	bsf	3,6	;RP1=1, select bank3
 12010  051E  009B               	movwf	(_SetPoint1+3)^(0+384)	;volatile
 12011  051F  1283               	bcf	3,5	;RP0=0, select bank0
 12012  0520  1303               	bcf	3,6	;RP1=0, select bank0
 12013  0521  082D               	movf	?___xxtofl+2,w
 12014  0522  1683               	bsf	3,5	;RP0=1, select bank3
 12015  0523  1703               	bsf	3,6	;RP1=1, select bank3
 12016  0524  009A               	movwf	(_SetPoint1+2)^(0+384)	;volatile
 12017  0525  1283               	bcf	3,5	;RP0=0, select bank0
 12018  0526  1303               	bcf	3,6	;RP1=0, select bank0
 12019  0527  082C               	movf	?___xxtofl+1,w
 12020  0528  1683               	bsf	3,5	;RP0=1, select bank3
 12021  0529  1703               	bsf	3,6	;RP1=1, select bank3
 12022  052A  0099               	movwf	(_SetPoint1+1)^(0+384)	;volatile
 12023  052B  1283               	bcf	3,5	;RP0=0, select bank0
 12024  052C  1303               	bcf	3,6	;RP1=0, select bank0
 12025  052D  082B               	movf	?___xxtofl,w
 12026  052E  1683               	bsf	3,5	;RP0=1, select bank3
 12027  052F  1703               	bsf	3,6	;RP1=1, select bank3
 12028  0530  0098               	movwf	_SetPoint1^(0+384)	;volatile
 12029                           
 12030                           ;SlaveLiofilizadorVer1.c: 988:      SetPoint1/=10;
 12031  0531  3041               	movlw	65
 12032  0532  1303               	bcf	3,6	;RP1=0, select bank1
 12033  0533  00A3               	movwf	(___fldiv@a+3)^(0+128)
 12034  0534  3020               	movlw	32
 12035  0535  00A2               	movwf	(___fldiv@a+2)^(0+128)
 12036  0536  01A1               	clrf	(___fldiv@a+1)^(0+128)
 12037  0537  01A0               	clrf	___fldiv@a^(0+128)
 12038  0538  1703               	bsf	3,6	;RP1=1, select bank3
 12039  0539  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
 12040  053A  1303               	bcf	3,6	;RP1=0, select bank1
 12041  053B  00A7               	movwf	(___fldiv@b+3)^(0+128)
 12042  053C  1703               	bsf	3,6	;RP1=1, select bank3
 12043  053D  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
 12044  053E  1303               	bcf	3,6	;RP1=0, select bank1
 12045  053F  00A6               	movwf	(___fldiv@b+2)^(0+128)
 12046  0540  1703               	bsf	3,6	;RP1=1, select bank3
 12047  0541  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
 12048  0542  1303               	bcf	3,6	;RP1=0, select bank1
 12049  0543  00A5               	movwf	(___fldiv@b+1)^(0+128)
 12050  0544  1703               	bsf	3,6	;RP1=1, select bank3
 12051  0545  0818               	movf	_SetPoint1^(0+384),w	;volatile
 12052  0546  1303               	bcf	3,6	;RP1=0, select bank1
 12053  0547  00A4               	movwf	___fldiv@b^(0+128)
 12054  0548  160A  118A  2517  120A  118A  	fcall	___fldiv
 12055  054D  0823               	movf	(?___fldiv+3)^(0+128),w
 12056  054E  1703               	bsf	3,6	;RP1=1, select bank3
 12057  054F  009B               	movwf	(_SetPoint1+3)^(0+384)	;volatile
 12058  0550  1303               	bcf	3,6	;RP1=0, select bank1
 12059  0551  0822               	movf	(?___fldiv+2)^(0+128),w
 12060  0552  1703               	bsf	3,6	;RP1=1, select bank3
 12061  0553  009A               	movwf	(_SetPoint1+2)^(0+384)	;volatile
 12062  0554  1303               	bcf	3,6	;RP1=0, select bank1
 12063  0555  0821               	movf	(?___fldiv+1)^(0+128),w
 12064  0556  1703               	bsf	3,6	;RP1=1, select bank3
 12065  0557  0099               	movwf	(_SetPoint1+1)^(0+384)	;volatile
 12066  0558  1303               	bcf	3,6	;RP1=0, select bank1
 12067  0559  0820               	movf	?___fldiv^(0+128),w
 12068  055A  1703               	bsf	3,6	;RP1=1, select bank3
 12069  055B  0098               	movwf	_SetPoint1^(0+384)	;volatile
 12070                           
 12071                           ;SlaveLiofilizadorVer1.c: 989:      TempoON_1 = EEPROM_Read_Byte(9);
 12072  055C  3009               	movlw	9
 12073  055D  257E  120A  118A   	fcall	_EEPROM_Read_Byte
 12074  0560  1683               	bsf	3,5	;RP0=1, select bank3
 12075  0561  00B7               	movwf	_TempoON_1^(0+384)
 12076                           
 12077                           ;SlaveLiofilizadorVer1.c: 990:      TempoOFF_1= EEPROM_Read_Byte(10);
 12078  0562  300A               	movlw	10
 12079  0563  257E  120A  118A   	fcall	_EEPROM_Read_Byte
 12080  0566  1683               	bsf	3,5	;RP0=1, select bank3
 12081  0567  00B6               	movwf	_TempoOFF_1^(0+384)
 12082                           
 12083                           ;SlaveLiofilizadorVer1.c: 991:      Histerese1= EEPROM_Read_Byte(11);
 12084  0568  300B               	movlw	11
 12085  0569  257E  120A  118A   	fcall	_EEPROM_Read_Byte
 12086  056C  1683               	bsf	3,5	;RP0=1, select bank3
 12087  056D  00B8               	movwf	_Histerese1^(0+384)
 12088                           
 12089                           ;SlaveLiofilizadorVer1.c: 992:      Status1 = EEPROM_Read_Integer(12);
 12090  056E  300C               	movlw	12
 12091  056F  259F  120A  118A   	fcall	_EEPROM_Read_Integer
 12092  0572  0824               	movf	?_EEPROM_Read_Integer+1,w
 12093  0573  1683               	bsf	3,5	;RP0=1, select bank3
 12094  0574  1703               	bsf	3,6	;RP1=1, select bank3
 12095  0575  00A7               	movwf	(_Status1+1)^(0+384)
 12096  0576  1283               	bcf	3,5	;RP0=0, select bank0
 12097  0577  1303               	bcf	3,6	;RP1=0, select bank0
 12098  0578  0823               	movf	?_EEPROM_Read_Integer,w
 12099  0579  1683               	bsf	3,5	;RP0=1, select bank3
 12100  057A  1703               	bsf	3,6	;RP1=1, select bank3
 12101  057B  00A6               	movwf	_Status1^(0+384)
 12102                           
 12103                           ;SlaveLiofilizadorVer1.c: 994:      statuspower.bits=EEPROM_Read_Byte(14);
 12104  057C  300E               	movlw	14
 12105  057D  2D7E               	ljmp	_EEPROM_Read_Byte
 12106  057E                     __end_of_Load_Work:	
 12107  057E                     __ptext47:	
 12108 ;; *************** function _EEPROM_Read_Byte *****************
 12109 ;; Defined at:
 12110 ;;		line 52 in file "eeprom.c"
 12111 ;; Parameters:    Size  Location     Type
 12112 ;;  addr            1    wreg     unsigned char 
 12113 ;; Auto vars:     Size  Location     Type
 12114 ;;  addr            1    2[BANK0 ] unsigned char 
 12115 ;; Return value:  Size  Location     Type
 12116 ;;                  1    wreg      unsigned char 
 12117 ;; Registers used:
 12118 ;;		wreg
 12119 ;; Tracked objects:
 12120 ;;		On entry : 0/300
 12121 ;;		On exit  : 300/200
 12122 ;;		Unchanged: 0/0
 12123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12124 ;;      Params:         0       0       0       0       0
 12125 ;;      Locals:         0       1       0       0       0
 12126 ;;      Temps:          0       2       0       0       0
 12127 ;;      Totals:         0       3       0       0       0
 12128 ;;Total ram usage:        3 bytes
 12129 ;; Hardware stack levels used:    1
 12130 ;; Hardware stack levels required when called:    1
 12131 ;; This function calls:
 12132 ;;		Nothing
 12133 ;; This function is called by:
 12134 ;;		_Decodify_Command
 12135 ;;		_Load_Work
 12136 ;;		_EEPROM_Read_Integer
 12137 ;;		_EEPROM_Read_String
 12138 ;; This function uses a non-reentrant model
 12139 ;;
 12140                           
 12141                           
 12142                           ;psect for function _EEPROM_Read_Byte
 12143  057E                     _EEPROM_Read_Byte:	
 12144                           
 12145                           ;incstack = 0
 12146                           ; Regs used in _EEPROM_Read_Byte: [wreg]
 12147                           ;EEPROM_Read_Byte@addr stored from wreg
 12148  057E  1283               	bcf	3,5	;RP0=0, select bank0
 12149  057F  1303               	bcf	3,6	;RP1=0, select bank0
 12150  0580  00A2               	movwf	EEPROM_Read_Byte@addr
 12151                           
 12152                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
 12153  0581  3014               	movlw	20
 12154  0582  1683               	bsf	3,5	;RP0=1, select bank3
 12155  0583  1703               	bsf	3,6	;RP1=1, select bank3
 12156  0584  00B0               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 12157  0585  01B1               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 12158  0586                     l484:	
 12159                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
 12160                           
 12161  0586  188C               	btfsc	12,1	;volsfr
 12162  0587  2D86               	goto	l484
 12163                           
 12164                           ;eeprom.c: 57:    EEADR=addr;
 12165  0588  1283               	bcf	3,5	;RP0=0, select bank0
 12166  0589  1303               	bcf	3,6	;RP1=0, select bank0
 12167  058A  0822               	movf	EEPROM_Read_Byte@addr,w
 12168  058B  1703               	bsf	3,6	;RP1=1, select bank2
 12169  058C  008D               	movwf	13	;volatile
 12170                           
 12171                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
 12172  058D  1683               	bsf	3,5	;RP0=1, select bank3
 12173  058E  138C               	bcf	12,7	;volsfr
 12174                           
 12175                           ;eeprom.c: 59:    EECON1bits.RD=1;
 12176  058F  140C               	bsf	12,0	;volsfr
 12177                           
 12178                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
 12179  0590  304E               	movlw	78
 12180  0591  1283               	bcf	3,5	;RP0=0, select bank0
 12181  0592  1303               	bcf	3,6	;RP1=0, select bank0
 12182  0593  00A1               	movwf	??_EEPROM_Read_Byte+1
 12183  0594  30EA               	movlw	234
 12184  0595  00A0               	movwf	??_EEPROM_Read_Byte
 12185  0596                     u6597:	
 12186  0596  0BA0               	decfsz	??_EEPROM_Read_Byte,f
 12187  0597  2D96               	goto	u6597
 12188  0598  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
 12189  0599  2D96               	goto	u6597
 12190  059A  0000               	nop
 12191                           
 12192                           ;eeprom.c: 61:    return EEDATA;
 12193  059B  1283               	bcf	3,5	;RP0=0, select bank2
 12194  059C  1703               	bsf	3,6	;RP1=1, select bank2
 12195  059D  080C               	movf	12,w	;volatile
 12196  059E  0008               	return
 12197  059F                     __end_of_EEPROM_Read_Byte:	
 12198  059F                     __ptext42:	
 12199 ;; *************** function _EEPROM_Read_Integer *****************
 12200 ;; Defined at:
 12201 ;;		line 81 in file "eeprom.c"
 12202 ;; Parameters:    Size  Location     Type
 12203 ;;  addr            1    wreg     unsigned char 
 12204 ;; Auto vars:     Size  Location     Type
 12205 ;;  addr            1    6[BANK0 ] unsigned char 
 12206 ;;  result          2    8[BANK0 ] unsigned int 
 12207 ;;  i               1   10[BANK0 ] unsigned char 
 12208 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
 12209 ;;		 -> EEPROM_Read_Integer@result(2), 
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  2    3[BANK0 ] unsigned int 
 12212 ;; Registers used:
 12213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : B00/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12219 ;;      Params:         0       3       0       0       0
 12220 ;;      Locals:         0       5       0       0       0
 12221 ;;      Temps:          0       0       0       0       0
 12222 ;;      Totals:         0       8       0       0       0
 12223 ;;Total ram usage:        8 bytes
 12224 ;; Hardware stack levels used:    1
 12225 ;; Hardware stack levels required when called:    2
 12226 ;; This function calls:
 12227 ;;		_EEPROM_Read_Byte
 12228 ;; This function is called by:
 12229 ;;		_main
 12230 ;;		_Decodify_Command
 12231 ;;		_Load_Work
 12232 ;; This function uses a non-reentrant model
 12233 ;;
 12234                           
 12235                           
 12236                           ;psect for function _EEPROM_Read_Integer
 12237  059F                     _EEPROM_Read_Integer:	
 12238                           
 12239                           ;incstack = 0
 12240                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12241                           ;EEPROM_Read_Integer@addr stored from wreg
 12242  059F  1283               	bcf	3,5	;RP0=0, select bank0
 12243  05A0  1303               	bcf	3,6	;RP1=0, select bank0
 12244  05A1  00A6               	movwf	EEPROM_Read_Integer@addr
 12245                           
 12246                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
 12247  05A2  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
 12248  05A3  00A7               	movwf	EEPROM_Read_Integer@ptr
 12249                           
 12250                           ;eeprom.c: 87:       for (i=0;i<2;i++)
 12251  05A4  01AA               	clrf	EEPROM_Read_Integer@i
 12252  05A5                     l6328:	
 12253                           
 12254                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
 12255  05A5  0827               	movf	EEPROM_Read_Integer@ptr,w
 12256  05A6  0084               	movwf	4
 12257  05A7  0826               	movf	EEPROM_Read_Integer@addr,w
 12258  05A8  257E  120A  118A   	fcall	_EEPROM_Read_Byte
 12259  05AB  1383               	bcf	3,7	;select IRP bank0
 12260  05AC  0080               	movwf	0
 12261  05AD  1303               	bcf	3,6	;RP1=0, select bank0
 12262  05AE  3002               	movlw	2
 12263  05AF  0AA6               	incf	EEPROM_Read_Integer@addr,f
 12264  05B0  0AA7               	incf	EEPROM_Read_Integer@ptr,f
 12265  05B1  0AAA               	incf	EEPROM_Read_Integer@i,f
 12266  05B2  022A               	subwf	EEPROM_Read_Integer@i,w
 12267  05B3  1C03               	skipc
 12268  05B4  2DA5               	goto	l6328
 12269                           
 12270                           ;eeprom.c: 89:       return result;
 12271  05B5  0829               	movf	EEPROM_Read_Integer@result+1,w
 12272  05B6  00A4               	movwf	?_EEPROM_Read_Integer+1
 12273  05B7  0828               	movf	EEPROM_Read_Integer@result,w
 12274  05B8  00A3               	movwf	?_EEPROM_Read_Integer
 12275  05B9  0008               	return
 12276  05BA                     __end_of_EEPROM_Read_Integer:	
 12277  05BA                     PL14:	
 12278  05BA  0823               	movf	?_EEPROM_Read_Integer,w
 12279  05BB  1683               	bsf	3,5	;RP0=1, select bank1
 12280  05BC  00B9               	movwf	??_Load_Work^(0+128)
 12281  05BD  1283               	bcf	3,5	;RP0=0, select bank0
 12282  05BE  0824               	movf	?_EEPROM_Read_Integer+1,w
 12283  05BF  1683               	bsf	3,5	;RP0=1, select bank1
 12284  05C0  00BA               	movwf	(??_Load_Work^(0+128)+1)
 12285  05C1  01BB               	clrf	(??_Load_Work^(0+128)+2)
 12286  05C2  01BC               	clrf	(??_Load_Work^(0+128)+3)
 12287  05C3  083C               	movf	(??_Load_Work+3)^(0+128),w
 12288  05C4  1283               	bcf	3,5	;RP0=0, select bank0
 12289  05C5  00AE               	movwf	___xxtofl@val+3
 12290  05C6  1683               	bsf	3,5	;RP0=1, select bank1
 12291  05C7  083B               	movf	(??_Load_Work+2)^(0+128),w
 12292  05C8  1283               	bcf	3,5	;RP0=0, select bank0
 12293  05C9  00AD               	movwf	___xxtofl@val+2
 12294  05CA  1683               	bsf	3,5	;RP0=1, select bank1
 12295  05CB  083A               	movf	(??_Load_Work+1)^(0+128),w
 12296  05CC  1283               	bcf	3,5	;RP0=0, select bank0
 12297  05CD  00AC               	movwf	___xxtofl@val+1
 12298  05CE  1683               	bsf	3,5	;RP0=1, select bank1
 12299  05CF  0839               	movf	??_Load_Work^(0+128),w
 12300  05D0  1283               	bcf	3,5	;RP0=0, select bank0
 12301  05D1  00AB               	movwf	___xxtofl@val
 12302  05D2  3400               	retlw	0
 12303  05D3                     __end_ofPL14:	
 12304                           
 12305                           	psect	text49
 12306  1C5D                     __ptext49:	
 12307 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 12308 ;; Defined at:
 12309 ;;		line 261 in file "EEPROM_24C1025.c"
 12310 ;; Parameters:    Size  Location     Type
 12311 ;;  chip_add        1    wreg     unsigned char 
 12312 ;;  mem_add         4   15[BANK0 ] unsigned long 
 12313 ;;  data            1   19[BANK0 ] PTR unsigned char 
 12314 ;;		 -> usart_protocol.value(10), usart_protocol(16), 
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;  chip_add        1   20[BANK0 ] unsigned char 
 12317 ;; Return value:  Size  Location     Type
 12318 ;;                  1    wreg      void 
 12319 ;; Registers used:
 12320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12321 ;; Tracked objects:
 12322 ;;		On entry : 300/300
 12323 ;;		On exit  : 0/0
 12324 ;;		Unchanged: 0/0
 12325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12326 ;;      Params:         0       5       0       0       0
 12327 ;;      Locals:         0       1       0       0       0
 12328 ;;      Temps:          0       0       0       0       0
 12329 ;;      Totals:         0       6       0       0       0
 12330 ;;Total ram usage:        6 bytes
 12331 ;; Hardware stack levels used:    1
 12332 ;; Hardware stack levels required when called:    4
 12333 ;; This function calls:
 12334 ;;		_EEPROM_24C1025_Write_Buffer
 12335 ;; This function is called by:
 12336 ;;		_Decodify_Command
 12337 ;; This function uses a non-reentrant model
 12338 ;;
 12339                           
 12340                           
 12341                           ;psect for function _EEPROM_24C1025_Write_Byte
 12342  1C5D                     _EEPROM_24C1025_Write_Byte:	
 12343                           
 12344                           ;incstack = 0
 12345                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12346                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 12347  1C5D  1283               	bcf	3,5	;RP0=0, select bank0
 12348  1C5E  1303               	bcf	3,6	;RP1=0, select bank0
 12349  1C5F  00B4               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 12350                           
 12351                           ;EEPROM_24C1025.c: 262:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, data);
 12352  1C60  0832               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 12353  1C61  00A5               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12354  1C62  0831               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 12355  1C63  00A4               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12356  1C64  0830               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 12357  1C65  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12358  1C66  082F               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 12359  1C67  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12360  1C68  01A6               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 12361  1C69  0AA6               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 12362  1C6A  0833               	movf	EEPROM_24C1025_Write_Byte@data,w
 12363  1C6B  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 12364  1C6C  3001               	movlw	1
 12365  1C6D  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12366  1C6E  0834               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 12367  1C6F  120A  158A  2E4F   	ljmp	_EEPROM_24C1025_Write_Buffer
 12368  1C72                     __end_of_EEPROM_24C1025_Write_Byte:	
 12369                           
 12370                           	psect	text51
 12371  1CA2                     __ptext51:	
 12372 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 12373 ;; Defined at:
 12374 ;;		line 280 in file "EEPROM_24C1025.c"
 12375 ;; Parameters:    Size  Location     Type
 12376 ;;  chip_add        1    wreg     unsigned char 
 12377 ;;  mem_add         4   17[BANK0 ] unsigned long 
 12378 ;; Auto vars:     Size  Location     Type
 12379 ;;  chip_add        1   21[BANK0 ] unsigned char 
 12380 ;;  data            2   22[BANK0 ] unsigned char [2]
 12381 ;; Return value:  Size  Location     Type
 12382 ;;                  2   17[BANK0 ] unsigned int 
 12383 ;; Registers used:
 12384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12385 ;; Tracked objects:
 12386 ;;		On entry : 300/300
 12387 ;;		On exit  : 300/0
 12388 ;;		Unchanged: 0/0
 12389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12390 ;;      Params:         0       4       0       0       0
 12391 ;;      Locals:         0       3       0       0       0
 12392 ;;      Temps:          0       0       0       0       0
 12393 ;;      Totals:         0       7       0       0       0
 12394 ;;Total ram usage:        7 bytes
 12395 ;; Hardware stack levels used:    1
 12396 ;; Hardware stack levels required when called:    4
 12397 ;; This function calls:
 12398 ;;		_EEPROM_24C1025_Read_Buffer
 12399 ;; This function is called by:
 12400 ;;		_Decodify_Command
 12401 ;; This function uses a non-reentrant model
 12402 ;;
 12403                           
 12404                           
 12405                           ;psect for function _EEPROM_24C1025_Read_Int
 12406  1CA2                     _EEPROM_24C1025_Read_Int:	
 12407                           
 12408                           ;incstack = 0
 12409                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12410                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 12411  1CA2  1283               	bcf	3,5	;RP0=0, select bank0
 12412  1CA3  1303               	bcf	3,6	;RP1=0, select bank0
 12413  1CA4  00B5               	movwf	EEPROM_24C1025_Read_Int@chip_add
 12414                           
 12415                           ;EEPROM_24C1025.c: 281:     char data[2];;EEPROM_24C1025.c: 282:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 12416  1CA5  0834               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 12417  1CA6  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 12418  1CA7  0833               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 12419  1CA8  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 12420  1CA9  0832               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 12421  1CAA  00A5               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 12422  1CAB  0831               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 12423  1CAC  00A4               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 12424  1CAD  3002               	movlw	2
 12425  1CAE  00A8               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 12426  1CAF  3036               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 12427  1CB0  00A9               	movwf	EEPROM_24C1025_Read_Buffer@data
 12428  1CB1  01AA               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 12429  1CB2  0835               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 12430  1CB3  120A  158A  256F   	fcall	_EEPROM_24C1025_Read_Buffer
 12431                           
 12432                           ;EEPROM_24C1025.c: 283:     return (data[0]<<8)+data[1];
 12433  1CB6  1283               	bcf	3,5	;RP0=0, select bank0
 12434  1CB7  1303               	bcf	3,6	;RP1=0, select bank0
 12435  1CB8  0836               	movf	EEPROM_24C1025_Read_Int@data,w
 12436  1CB9  00B2               	movwf	?_EEPROM_24C1025_Read_Int+1
 12437  1CBA  0837               	movf	EEPROM_24C1025_Read_Int@data+1,w
 12438  1CBB  00B1               	movwf	?_EEPROM_24C1025_Read_Int
 12439  1CBC  0008               	return
 12440  1CBD                     __end_of_EEPROM_24C1025_Read_Int:	
 12441                           
 12442                           	psect	text52
 12443  1C87                     __ptext52:	
 12444 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 12445 ;; Defined at:
 12446 ;;		line 266 in file "EEPROM_24C1025.c"
 12447 ;; Parameters:    Size  Location     Type
 12448 ;;  chip_add        1    wreg     unsigned char 
 12449 ;;  mem_add         4   17[BANK0 ] unsigned long 
 12450 ;; Auto vars:     Size  Location     Type
 12451 ;;  chip_add        1   21[BANK0 ] unsigned char 
 12452 ;;  data            1   22[BANK0 ] PTR unsigned char 
 12453 ;; Return value:  Size  Location     Type
 12454 ;;                  1    wreg      unsigned char 
 12455 ;; Registers used:
 12456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12457 ;; Tracked objects:
 12458 ;;		On entry : 300/300
 12459 ;;		On exit  : B00/0
 12460 ;;		Unchanged: 0/0
 12461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12462 ;;      Params:         0       4       0       0       0
 12463 ;;      Locals:         0       2       0       0       0
 12464 ;;      Temps:          0       0       0       0       0
 12465 ;;      Totals:         0       6       0       0       0
 12466 ;;Total ram usage:        6 bytes
 12467 ;; Hardware stack levels used:    1
 12468 ;; Hardware stack levels required when called:    4
 12469 ;; This function calls:
 12470 ;;		_EEPROM_24C1025_Read_Buffer
 12471 ;; This function is called by:
 12472 ;;		_Decodify_Command
 12473 ;; This function uses a non-reentrant model
 12474 ;;
 12475                           
 12476                           
 12477                           ;psect for function _EEPROM_24C1025_Read_Byte
 12478  1C87                     _EEPROM_24C1025_Read_Byte:	
 12479                           
 12480                           ;incstack = 0
 12481                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12482                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 12483  1C87  1283               	bcf	3,5	;RP0=0, select bank0
 12484  1C88  1303               	bcf	3,6	;RP1=0, select bank0
 12485  1C89  00B5               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 12486                           
 12487                           ;EEPROM_24C1025.c: 267:     char *data;;EEPROM_24C1025.c: 268:     EEPROM_24C1025_Read_B
      +                          uffer(chip_add, mem_add, 1, data);
 12488  1C8A  0834               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 12489  1C8B  00A7               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 12490  1C8C  0833               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 12491  1C8D  00A6               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 12492  1C8E  0832               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 12493  1C8F  00A5               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 12494  1C90  0831               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 12495  1C91  00A4               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 12496  1C92  01A8               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 12497  1C93  0AA8               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 12498  1C94  0836               	movf	EEPROM_24C1025_Read_Byte@data,w
 12499  1C95  00A9               	movwf	EEPROM_24C1025_Read_Buffer@data
 12500  1C96  01AA               	clrf	EEPROM_24C1025_Read_Buffer@data+1
 12501  1C97  0835               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 12502  1C98  120A  158A  256F   	fcall	_EEPROM_24C1025_Read_Buffer
 12503                           
 12504                           ;EEPROM_24C1025.c: 269:     return *data;
 12505  1C9B  1283               	bcf	3,5	;RP0=0, select bank0
 12506  1C9C  1303               	bcf	3,6	;RP1=0, select bank0
 12507  1C9D  0836               	movf	EEPROM_24C1025_Read_Byte@data,w
 12508  1C9E  0084               	movwf	4
 12509  1C9F  1383               	bcf	3,7	;select IRP bank0
 12510  1CA0  0800               	movf	0,w
 12511  1CA1  0008               	return
 12512  1CA2                     __end_of_EEPROM_24C1025_Read_Byte:	
 12513                           
 12514                           	psect	text56
 12515  1D6C                     __ptext56:	
 12516 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12517 ;; Defined at:
 12518 ;;		line 287 in file "EEPROM_24C1025.c"
 12519 ;; Parameters:    Size  Location     Type
 12520 ;;  chip_add        1    wreg     unsigned char 
 12521 ;;  value           1   15[BANK0 ] unsigned char 
 12522 ;; Auto vars:     Size  Location     Type
 12523 ;;  chip_add        1   18[BANK0 ] unsigned char 
 12524 ;;  page            2   20[BANK0 ] unsigned int 
 12525 ;;  i               1   19[BANK0 ] unsigned char 
 12526 ;; Return value:  Size  Location     Type
 12527 ;;                  1    wreg      void 
 12528 ;; Registers used:
 12529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12530 ;; Tracked objects:
 12531 ;;		On entry : 300/300
 12532 ;;		On exit  : 300/0
 12533 ;;		Unchanged: 0/0
 12534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12535 ;;      Params:         0       1       0       0       0
 12536 ;;      Locals:         0       4       0       0       0
 12537 ;;      Temps:          0       2       0       0       0
 12538 ;;      Totals:         0       7       0       0       0
 12539 ;;Total ram usage:        7 bytes
 12540 ;; Hardware stack levels used:    1
 12541 ;; Hardware stack levels required when called:    4
 12542 ;; This function calls:
 12543 ;;		_EEPROM_24C1025_Write_Buffer
 12544 ;; This function is called by:
 12545 ;;		_Decodify_Command
 12546 ;; This function uses a non-reentrant model
 12547 ;;
 12548                           
 12549                           
 12550                           ;psect for function _EEPROM_24C1025_Fill_All
 12551  1D6C                     _EEPROM_24C1025_Fill_All:	
 12552                           
 12553                           ;incstack = 0
 12554                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 12555                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12556  1D6C  1283               	bcf	3,5	;RP0=0, select bank0
 12557  1D6D  1303               	bcf	3,6	;RP1=0, select bank0
 12558  1D6E  00B2               	movwf	EEPROM_24C1025_Fill_All@chip_add
 12559                           
 12560                           ;EEPROM_24C1025.c: 291:      for(i=0;i<128;i++) buffer[i]=value;
 12561  1D6F  01B3               	clrf	EEPROM_24C1025_Fill_All@i
 12562  1D70                     l6800:	
 12563  1D70  0833               	movf	EEPROM_24C1025_Fill_All@i,w
 12564  1D71  3E10               	addlw	(low (_buffer| (0+256)))& (0+255)
 12565  1D72  0084               	movwf	4
 12566  1D73  082F               	movf	EEPROM_24C1025_Fill_All@value,w
 12567  1D74  1783               	bsf	3,7	;select IRP bank2
 12568  1D75  0080               	movwf	0
 12569  1D76  3080               	movlw	128
 12570  1D77  0AB3               	incf	EEPROM_24C1025_Fill_All@i,f
 12571  1D78  0233               	subwf	EEPROM_24C1025_Fill_All@i,w
 12572  1D79  1C03               	skipc
 12573  1D7A  2D70               	goto	l6800
 12574                           
 12575                           ;EEPROM_24C1025.c: 292:      for(page=0;page<1024;page++)
 12576  1D7B  01B4               	clrf	EEPROM_24C1025_Fill_All@page
 12577  1D7C  01B5               	clrf	EEPROM_24C1025_Fill_All@page+1
 12578  1D7D                     l6812:	
 12579                           
 12580                           ;EEPROM_24C1025.c: 293:         {;EEPROM_24C1025.c: 294:         EEPROM_24C1025_Write_Bu
      +                          ffer(chip_add, (page*128), 128, buffer);
 12581  1D7D  0835               	movf	EEPROM_24C1025_Fill_All@page+1,w
 12582  1D7E  00B1               	movwf	??_EEPROM_24C1025_Fill_All+1
 12583  1D7F  0834               	movf	EEPROM_24C1025_Fill_All@page,w
 12584  1D80  00B0               	movwf	??_EEPROM_24C1025_Fill_All
 12585  1D81  3007               	movlw	7
 12586  1D82  00FF               	movwf	127
 12587  1D83                     u5995:	
 12588  1D83  1003               	clrc
 12589  1D84  0DB0               	rlf	??_EEPROM_24C1025_Fill_All,f
 12590  1D85  0DB1               	rlf	??_EEPROM_24C1025_Fill_All+1,f
 12591  1D86  0BFF               	decfsz	127,f
 12592  1D87  2D83               	goto	u5995
 12593  1D88  0830               	movf	??_EEPROM_24C1025_Fill_All,w
 12594  1D89  00A2               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12595  1D8A  0831               	movf	??_EEPROM_24C1025_Fill_All+1,w
 12596  1D8B  00A3               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12597  1D8C  3080               	movlw	128
 12598  1D8D  01A4               	clrf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12599  1D8E  01A5               	clrf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12600  1D8F  00A6               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12601  1D90  3010               	movlw	(low (_buffer| (0+256)))& (0+255)
 12602  1D91  00A7               	movwf	EEPROM_24C1025_Write_Buffer@data
 12603  1D92  3001               	movlw	1
 12604  1D93  00A8               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12605  1D94  0832               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 12606  1D95  120A  158A  264F  160A  158A  	fcall	_EEPROM_24C1025_Write_Buffer
 12607                           
 12608                           ;EEPROM_24C1025.c: 295:         }
 12609  1D9A  1283               	bcf	3,5	;RP0=0, select bank0
 12610  1D9B  1303               	bcf	3,6	;RP1=0, select bank0
 12611  1D9C  0AB4               	incf	EEPROM_24C1025_Fill_All@page,f
 12612  1D9D  1903               	skipnz
 12613  1D9E  0AB5               	incf	EEPROM_24C1025_Fill_All@page+1,f
 12614  1D9F  3004               	movlw	4
 12615  1DA0  0235               	subwf	EEPROM_24C1025_Fill_All@page+1,w
 12616  1DA1  3000               	movlw	0
 12617  1DA2  1903               	skipnz
 12618  1DA3  0234               	subwf	EEPROM_24C1025_Fill_All@page,w
 12619  1DA4  1803               	btfsc	3,0
 12620  1DA5  0008               	return
 12621  1DA6  2D7D               	goto	l6812
 12622  1DA7                     __end_of_EEPROM_24C1025_Fill_All:	
 12623                           
 12624                           	psect	text66
 12625  02EE                     __ptext66:	
 12626 ;; *************** function _Auto_Relay0 *****************
 12627 ;; Defined at:
 12628 ;;		line 852 in file "SlaveLiofilizadorVer1.c"
 12629 ;; Parameters:    Size  Location     Type
 12630 ;;		None
 12631 ;; Auto vars:     Size  Location     Type
 12632 ;;		None
 12633 ;; Return value:  Size  Location     Type
 12634 ;;                  1    wreg      void 
 12635 ;; Registers used:
 12636 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12637 ;; Tracked objects:
 12638 ;;		On entry : 100/300
 12639 ;;		On exit  : 0/0
 12640 ;;		Unchanged: 0/0
 12641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12642 ;;      Params:         0       0       0       0       0
 12643 ;;      Locals:         0       0       0       0       0
 12644 ;;      Temps:          0       0       0       0       0
 12645 ;;      Totals:         0       0       0       0       0
 12646 ;;Total ram usage:        0 bytes
 12647 ;; Hardware stack levels used:    1
 12648 ;; Hardware stack levels required when called:    3
 12649 ;; This function calls:
 12650 ;;		_Rele0Desligado
 12651 ;;		_Rele0Ligado
 12652 ;;		___flge
 12653 ;;		___flsub
 12654 ;; This function is called by:
 12655 ;;		_main
 12656 ;; This function uses a non-reentrant model
 12657 ;;
 12658                           
 12659                           
 12660                           ;psect for function _Auto_Relay0
 12661  02EE                     _Auto_Relay0:	
 12662                           
 12663                           ;SlaveLiofilizadorVer1.c: 853:              if(Status0==0)
 12664                           
 12665                           ;incstack = 0
 12666                           ; Regs used in _Auto_Relay0: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12667  02EE  1703               	bsf	3,6	;RP1=1, select bank3
 12668  02EF  0828               	movf	_Status0^(0+384),w
 12669  02F0  0429               	iorwf	(_Status0+1)^(0+384),w
 12670  02F1  1D03               	btfss	3,2
 12671  02F2  2AF4               	goto	l7070
 12672  02F3                     l7068:	
 12673                           
 12674                           ;SlaveLiofilizadorVer1.c: 854:                  {;SlaveLiofilizadorVer1.c: 855:         
      +                                   Rele0Desligado();
 12675  02F3  2C29               	ljmp	l6910
 12676  02F4                     l7070:	
 12677                           ;SlaveLiofilizadorVer1.c: 856:                  }
 12678                           
 12679                           
 12680                           ;SlaveLiofilizadorVer1.c: 858:                  {;SlaveLiofilizadorVer1.c: 860:         
      +                                   if (Temperatura0<=(SetPoint0-Histerese0))
 12681  02F4  081F               	movf	(_Histerese0+3)^(0+384),w
 12682  02F5  1283               	bcf	3,5	;RP0=0, select bank0
 12683  02F6  1303               	bcf	3,6	;RP1=0, select bank0
 12684  02F7  00D0               	movwf	___flsub@a+3
 12685  02F8  1683               	bsf	3,5	;RP0=1, select bank3
 12686  02F9  1703               	bsf	3,6	;RP1=1, select bank3
 12687  02FA  081E               	movf	(_Histerese0+2)^(0+384),w
 12688  02FB  1283               	bcf	3,5	;RP0=0, select bank0
 12689  02FC  1303               	bcf	3,6	;RP1=0, select bank0
 12690  02FD  00CF               	movwf	___flsub@a+2
 12691  02FE  1683               	bsf	3,5	;RP0=1, select bank3
 12692  02FF  1703               	bsf	3,6	;RP1=1, select bank3
 12693  0300  081D               	movf	(_Histerese0+1)^(0+384),w
 12694  0301  1283               	bcf	3,5	;RP0=0, select bank0
 12695  0302  1303               	bcf	3,6	;RP1=0, select bank0
 12696  0303  00CE               	movwf	___flsub@a+1
 12697  0304  1683               	bsf	3,5	;RP0=1, select bank3
 12698  0305  1703               	bsf	3,6	;RP1=1, select bank3
 12699  0306  081C               	movf	_Histerese0^(0+384),w
 12700  0307  1283               	bcf	3,5	;RP0=0, select bank0
 12701  0308  1303               	bcf	3,6	;RP1=0, select bank0
 12702  0309  00CD               	movwf	___flsub@a
 12703  030A  0873               	movf	_SetPoint0+3,w	;volatile
 12704  030B  00D4               	movwf	___flsub@b+3
 12705  030C  0872               	movf	_SetPoint0+2,w	;volatile
 12706  030D  00D3               	movwf	___flsub@b+2
 12707  030E  0871               	movf	_SetPoint0+1,w	;volatile
 12708  030F  00D2               	movwf	___flsub@b+1
 12709  0310  0870               	movf	_SetPoint0,w	;volatile
 12710  0311  00D1               	movwf	___flsub@b
 12711  0312  160A  118A  2638  120A  118A  	fcall	___flsub
 12712  0317  2484  120A  118A   	fcall	PL34	;call to abstracted procedure
 12713  031A  2462  120A  118A   	fcall	PL4	;call to abstracted procedure
 12714  031D  23BB  120A  118A   	fcall	___flge
 12715  0320  1C03               	btfss	3,0
 12716  0321  2B2E               	goto	l7076
 12717                           
 12718                           ;SlaveLiofilizadorVer1.c: 861:                     {;SlaveLiofilizadorVer1.c: 862:      
      +                                         RL0Status=1;
 12719  0322  1683               	bsf	3,5	;RP0=1, select bank3
 12720  0323  1703               	bsf	3,6	;RP1=1, select bank3
 12721  0324  01E2               	clrf	_RL0Status^(0+384)
 12722  0325  0AE2               	incf	_RL0Status^(0+384),f
 12723  0326  2B2B               	goto	l7074
 12724  0327                     l7078:	
 12725                           
 12726                           ;SlaveLiofilizadorVer1.c: 866:                           {;SlaveLiofilizadorVer1.c: 867:
      +                                                     if(RL0Status==1)
 12727  0327  1683               	bsf	3,5	;RP0=1, select bank3
 12728  0328  1703               	bsf	3,6	;RP1=1, select bank3
 12729  0329  0B62               	decfsz	_RL0Status^(0+384),w
 12730  032A  2AF3               	goto	l7068
 12731  032B                     l7074:	
 12732                           
 12733                           ;SlaveLiofilizadorVer1.c: 863:                     Rele0Ligado();
 12734  032B  160A  118A  28F0   	ljmp	l6886
 12735  032E                     l7076:	
 12736                           ;SlaveLiofilizadorVer1.c: 864:                     }
 12737                           
 12738  032E  247C  120A  118A   	fcall	PL10	;call to abstracted procedure
 12739  0331  2462  120A  118A   	fcall	PL4	;call to abstracted procedure
 12740  0334  23BB  120A  118A   	fcall	___flge
 12741  0337  1803               	btfsc	3,0
 12742  0338  2B27               	goto	l7078
 12743  0339  247C  120A  118A   	fcall	PL10	;call to abstracted procedure
 12744  033C  2462  120A  118A   	fcall	PL4	;call to abstracted procedure
 12745  033F  23BB  120A  118A   	fcall	___flge
 12746  0342  1803               	btfsc	3,0
 12747  0343  0008               	return
 12748                           
 12749                           ;SlaveLiofilizadorVer1.c: 877:                           {;SlaveLiofilizadorVer1.c: 878:
      +                                                     RL0Status=0;
 12750  0344  1683               	bsf	3,5	;RP0=1, select bank3
 12751  0345  1703               	bsf	3,6	;RP1=1, select bank3
 12752  0346  01E2               	clrf	_RL0Status^(0+384)
 12753  0347  2AF3               	goto	l7068
 12754  0348                     __end_of_Auto_Relay0:	
 12755  0348                     __ptext62:	
 12756 ;; *************** function _Auto_Relay1 *****************
 12757 ;; Defined at:
 12758 ;;		line 888 in file "SlaveLiofilizadorVer1.c"
 12759 ;; Parameters:    Size  Location     Type
 12760 ;;		None
 12761 ;; Auto vars:     Size  Location     Type
 12762 ;;		None
 12763 ;; Return value:  Size  Location     Type
 12764 ;;                  1    wreg      void 
 12765 ;; Registers used:
 12766 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12767 ;; Tracked objects:
 12768 ;;		On entry : 0/300
 12769 ;;		On exit  : 0/0
 12770 ;;		Unchanged: 0/0
 12771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12772 ;;      Params:         0       0       0       0       0
 12773 ;;      Locals:         0       0       0       0       0
 12774 ;;      Temps:          0       0       0       0       0
 12775 ;;      Totals:         0       0       0       0       0
 12776 ;;Total ram usage:        0 bytes
 12777 ;; Hardware stack levels used:    1
 12778 ;; Hardware stack levels required when called:    3
 12779 ;; This function calls:
 12780 ;;		_Rele1Desligado
 12781 ;;		_Rele1Ligado
 12782 ;;		___flge
 12783 ;;		___flsub
 12784 ;;		___xxtofl
 12785 ;; This function is called by:
 12786 ;;		_main
 12787 ;; This function uses a non-reentrant model
 12788 ;;
 12789                           
 12790                           
 12791                           ;psect for function _Auto_Relay1
 12792  0348                     _Auto_Relay1:	
 12793                           
 12794                           ;SlaveLiofilizadorVer1.c: 889:              if(Status1==0)
 12795                           
 12796                           ;incstack = 0
 12797                           ; Regs used in _Auto_Relay1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12798  0348  1683               	bsf	3,5	;RP0=1, select bank3
 12799  0349  1703               	bsf	3,6	;RP1=1, select bank3
 12800  034A  0826               	movf	_Status1^(0+384),w
 12801  034B  0427               	iorwf	(_Status1+1)^(0+384),w
 12802  034C  1D03               	btfss	3,2
 12803  034D  2B4F               	goto	l7094
 12804  034E                     l7092:	
 12805                           
 12806                           ;SlaveLiofilizadorVer1.c: 890:                  {;SlaveLiofilizadorVer1.c: 891:         
      +                                   Rele1Desligado();
 12807  034E  2C2D               	ljmp	l6912
 12808  034F                     l7094:	
 12809                           ;SlaveLiofilizadorVer1.c: 892:                  }
 12810                           
 12811                           
 12812                           ;SlaveLiofilizadorVer1.c: 894:                  {;SlaveLiofilizadorVer1.c: 896:         
      +                                   if (Temperatura1<=(SetPoint1-Histerese1))
 12813  034F  0838               	movf	_Histerese1^(0+384),w
 12814  0350  1283               	bcf	3,5	;RP0=0, select bank0
 12815  0351  1303               	bcf	3,6	;RP1=0, select bank0
 12816  0352  248C               	fcall	PL78	;call to abstracted procedure
 12817  0353  160A  118A  24A9  120A  118A  	fcall	___xxtofl
 12818  0358  160A  118A  278F  120A  118A  	fcall	PL26	;call to abstracted procedure
 12819  035D  1683               	bsf	3,5	;RP0=1, select bank3
 12820  035E  1703               	bsf	3,6	;RP1=1, select bank3
 12821  035F  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
 12822  0360  1283               	bcf	3,5	;RP0=0, select bank0
 12823  0361  1303               	bcf	3,6	;RP1=0, select bank0
 12824  0362  00D4               	movwf	___flsub@b+3
 12825  0363  1683               	bsf	3,5	;RP0=1, select bank3
 12826  0364  1703               	bsf	3,6	;RP1=1, select bank3
 12827  0365  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
 12828  0366  1283               	bcf	3,5	;RP0=0, select bank0
 12829  0367  1303               	bcf	3,6	;RP1=0, select bank0
 12830  0368  00D3               	movwf	___flsub@b+2
 12831  0369  1683               	bsf	3,5	;RP0=1, select bank3
 12832  036A  1703               	bsf	3,6	;RP1=1, select bank3
 12833  036B  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
 12834  036C  1283               	bcf	3,5	;RP0=0, select bank0
 12835  036D  1303               	bcf	3,6	;RP1=0, select bank0
 12836  036E  00D2               	movwf	___flsub@b+1
 12837  036F  1683               	bsf	3,5	;RP0=1, select bank3
 12838  0370  1703               	bsf	3,6	;RP1=1, select bank3
 12839  0371  0818               	movf	_SetPoint1^(0+384),w	;volatile
 12840  0372  1283               	bcf	3,5	;RP0=0, select bank0
 12841  0373  1303               	bcf	3,6	;RP1=0, select bank0
 12842  0374  00D1               	movwf	___flsub@b
 12843  0375  160A  118A  2638  120A  118A  	fcall	___flsub
 12844  037A  2484  120A  118A   	fcall	PL34	;call to abstracted procedure
 12845  037D  00D5               	movwf	___flge@ff1
 12846  037E  1683               	bsf	3,5	;RP0=1, select bank3
 12847  037F  1703               	bsf	3,6	;RP1=1, select bank3
 12848  0380  0813               	movf	(_Temperatura1+3)^(0+384),w
 12849  0381  1283               	bcf	3,5	;RP0=0, select bank0
 12850  0382  1303               	bcf	3,6	;RP1=0, select bank0
 12851  0383  00DC               	movwf	___flge@ff2+3
 12852  0384  1683               	bsf	3,5	;RP0=1, select bank3
 12853  0385  1703               	bsf	3,6	;RP1=1, select bank3
 12854  0386  0812               	movf	(_Temperatura1+2)^(0+384),w
 12855  0387  1283               	bcf	3,5	;RP0=0, select bank0
 12856  0388  1303               	bcf	3,6	;RP1=0, select bank0
 12857  0389  00DB               	movwf	___flge@ff2+2
 12858  038A  1683               	bsf	3,5	;RP0=1, select bank3
 12859  038B  1703               	bsf	3,6	;RP1=1, select bank3
 12860  038C  0811               	movf	(_Temperatura1+1)^(0+384),w
 12861  038D  1283               	bcf	3,5	;RP0=0, select bank0
 12862  038E  1303               	bcf	3,6	;RP1=0, select bank0
 12863  038F  00DA               	movwf	___flge@ff2+1
 12864  0390  1683               	bsf	3,5	;RP0=1, select bank3
 12865  0391  1703               	bsf	3,6	;RP1=1, select bank3
 12866  0392  0810               	movf	_Temperatura1^(0+384),w
 12867  0393  1283               	bcf	3,5	;RP0=0, select bank0
 12868  0394  1303               	bcf	3,6	;RP1=0, select bank0
 12869  0395  00D9               	movwf	___flge@ff2
 12870  0396  23BB  120A  118A   	fcall	___flge
 12871  0399  1C03               	btfss	3,0
 12872  039A  2BA7               	goto	l7100
 12873                           
 12874                           ;SlaveLiofilizadorVer1.c: 897:                     {;SlaveLiofilizadorVer1.c: 898:      
      +                                         RL1Status=1;
 12875  039B  1683               	bsf	3,5	;RP0=1, select bank3
 12876  039C  1703               	bsf	3,6	;RP1=1, select bank3
 12877  039D  01E1               	clrf	_RL1Status^(0+384)
 12878  039E  0AE1               	incf	_RL1Status^(0+384),f
 12879  039F  2BA4               	goto	l7098
 12880  03A0                     l7102:	
 12881                           
 12882                           ;SlaveLiofilizadorVer1.c: 902:                           {;SlaveLiofilizadorVer1.c: 903:
      +                                                     if(RL1Status==1)
 12883  03A0  1683               	bsf	3,5	;RP0=1, select bank3
 12884  03A1  1703               	bsf	3,6	;RP1=1, select bank3
 12885  03A2  0B61               	decfsz	_RL1Status^(0+384),w
 12886  03A3  2B4E               	goto	l7092
 12887  03A4                     l7098:	
 12888                           
 12889                           ;SlaveLiofilizadorVer1.c: 899:                     Rele1Ligado();
 12890  03A4  160A  118A  2907   	ljmp	l6898
 12891  03A7                     l7100:	
 12892                           ;SlaveLiofilizadorVer1.c: 900:                     }
 12893                           
 12894  03A7  2431  120A  118A   	fcall	PL2	;call to abstracted procedure
 12895  03AA  23BB  120A  118A   	fcall	___flge
 12896  03AD  1803               	btfsc	3,0
 12897  03AE  2BA0               	goto	l7102
 12898  03AF  2431  120A  118A   	fcall	PL2	;call to abstracted procedure
 12899  03B2  23BB  120A  118A   	fcall	___flge
 12900  03B5  1803               	btfsc	3,0
 12901  03B6  0008               	return
 12902                           
 12903                           ;SlaveLiofilizadorVer1.c: 913:                           {;SlaveLiofilizadorVer1.c: 914:
      +                                                     RL1Status=0;
 12904  03B7  1683               	bsf	3,5	;RP0=1, select bank3
 12905  03B8  1703               	bsf	3,6	;RP1=1, select bank3
 12906  03B9  01E1               	clrf	_RL1Status^(0+384)
 12907  03BA  2B4E               	goto	l7092
 12908  03BB                     __end_of_Auto_Relay1:	
 12909  03BB                     __ptext69:	
 12910 ;; *************** function ___flge *****************
 12911 ;; Defined at:
 12912 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
 12913 ;; Parameters:    Size  Location     Type
 12914 ;;  ff1             4   53[BANK0 ] unsigned char 
 12915 ;;  ff2             4   57[BANK0 ] unsigned char 
 12916 ;; Auto vars:     Size  Location     Type
 12917 ;;		None
 12918 ;; Return value:  Size  Location     Type
 12919 ;;		None               void
 12920 ;; Registers used:
 12921 ;;		wreg, status,2, status,0
 12922 ;; Tracked objects:
 12923 ;;		On entry : 300/0
 12924 ;;		On exit  : 300/0
 12925 ;;		Unchanged: 0/0
 12926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12927 ;;      Params:         0       8       0       0       0
 12928 ;;      Locals:         0       0       0       0       0
 12929 ;;      Temps:          0       4       0       0       0
 12930 ;;      Totals:         0      12       0       0       0
 12931 ;;Total ram usage:       12 bytes
 12932 ;; Hardware stack levels used:    1
 12933 ;; Hardware stack levels required when called:    1
 12934 ;; This function calls:
 12935 ;;		Nothing
 12936 ;; This function is called by:
 12937 ;;		_Auto_Relay0
 12938 ;;		_Auto_Relay1
 12939 ;;		_log
 12940 ;; This function uses a non-reentrant model
 12941 ;;
 12942                           
 12943                           
 12944                           ;psect for function ___flge
 12945  03BB                     ___flge:	
 12946                           
 12947                           ;incstack = 0
 12948                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12949  03BB  3080               	movlw	128
 12950  03BC  01DD               	clrf	??___flge
 12951  03BD  01DE               	clrf	??___flge+1
 12952  03BE  0557               	andwf	___flge@ff1+2,w
 12953  03BF  00DF               	movwf	??___flge+2
 12954  03C0  307F               	movlw	127
 12955  03C1  0558               	andwf	___flge@ff1+3,w
 12956  03C2  00E0               	movwf	??___flge+3
 12957  03C3  045F               	iorwf	??___flge+2,w
 12958  03C4  045E               	iorwf	??___flge+1,w
 12959  03C5  045D               	iorwf	??___flge,w
 12960  03C6  1D03               	skipz
 12961  03C7  2BCC               	goto	l4286
 12962  03C8  01D5               	clrf	___flge@ff1
 12963  03C9  01D6               	clrf	___flge@ff1+1
 12964  03CA  01D7               	clrf	___flge@ff1+2
 12965  03CB  01D8               	clrf	___flge@ff1+3
 12966  03CC                     l4286:	
 12967  03CC  3080               	movlw	128
 12968  03CD  01DD               	clrf	??___flge
 12969  03CE  01DE               	clrf	??___flge+1
 12970  03CF  055B               	andwf	___flge@ff2+2,w
 12971  03D0  00DF               	movwf	??___flge+2
 12972  03D1  307F               	movlw	127
 12973  03D2  055C               	andwf	___flge@ff2+3,w
 12974  03D3  00E0               	movwf	??___flge+3
 12975  03D4  045F               	iorwf	??___flge+2,w
 12976  03D5  045E               	iorwf	??___flge+1,w
 12977  03D6  045D               	iorwf	??___flge,w
 12978  03D7  1D03               	skipz
 12979  03D8  2BDD               	goto	l1174
 12980  03D9  01D9               	clrf	___flge@ff2
 12981  03DA  01DA               	clrf	___flge@ff2+1
 12982  03DB  01DB               	clrf	___flge@ff2+2
 12983  03DC  01DC               	clrf	___flge@ff2+3
 12984  03DD                     l1174:	
 12985  03DD  1FD8               	btfss	___flge@ff1+3,7
 12986  03DE  2BFA               	goto	l4292
 12987  03DF  3080               	movlw	128
 12988  03E0  01DD               	clrf	??___flge
 12989  03E1  01DE               	clrf	??___flge+1
 12990  03E2  01DF               	clrf	??___flge+2
 12991  03E3  00E0               	movwf	??___flge+3
 12992  03E4  0855               	movf	___flge@ff1,w
 12993  03E5  02DD               	subwf	??___flge,f
 12994  03E6  0856               	movf	___flge@ff1+1,w
 12995  03E7  1C03               	skipc
 12996  03E8  0F56               	incfsz	___flge@ff1+1,w
 12997  03E9  02DE               	subwf	??___flge+1,f
 12998  03EA  0857               	movf	___flge@ff1+2,w
 12999  03EB  1C03               	skipc
 13000  03EC  0F57               	incfsz	___flge@ff1+2,w
 13001  03ED  02DF               	subwf	??___flge+2,f
 13002  03EE  0858               	movf	___flge@ff1+3,w
 13003  03EF  1C03               	skipc
 13004  03F0  0F58               	incfsz	___flge@ff1+3,w
 13005  03F1  02E0               	subwf	??___flge+3,f
 13006  03F2  0860               	movf	??___flge+3,w
 13007  03F3  00D8               	movwf	___flge@ff1+3
 13008  03F4  085F               	movf	??___flge+2,w
 13009  03F5  00D7               	movwf	___flge@ff1+2
 13010  03F6  085E               	movf	??___flge+1,w
 13011  03F7  00D6               	movwf	___flge@ff1+1
 13012  03F8  085D               	movf	??___flge,w
 13013  03F9  00D5               	movwf	___flge@ff1
 13014  03FA                     l4292:	
 13015  03FA  1FDC               	btfss	___flge@ff2+3,7
 13016  03FB  2C17               	goto	l1176
 13017  03FC  3080               	movlw	128
 13018  03FD  01DD               	clrf	??___flge
 13019  03FE  01DE               	clrf	??___flge+1
 13020  03FF  01DF               	clrf	??___flge+2
 13021  0400  00E0               	movwf	??___flge+3
 13022  0401  0859               	movf	___flge@ff2,w
 13023  0402  02DD               	subwf	??___flge,f
 13024  0403  085A               	movf	___flge@ff2+1,w
 13025  0404  1C03               	skipc
 13026  0405  0F5A               	incfsz	___flge@ff2+1,w
 13027  0406  02DE               	subwf	??___flge+1,f
 13028  0407  085B               	movf	___flge@ff2+2,w
 13029  0408  1C03               	skipc
 13030  0409  0F5B               	incfsz	___flge@ff2+2,w
 13031  040A  02DF               	subwf	??___flge+2,f
 13032  040B  085C               	movf	___flge@ff2+3,w
 13033  040C  1C03               	skipc
 13034  040D  0F5C               	incfsz	___flge@ff2+3,w
 13035  040E  02E0               	subwf	??___flge+3,f
 13036  040F  0860               	movf	??___flge+3,w
 13037  0410  00DC               	movwf	___flge@ff2+3
 13038  0411  085F               	movf	??___flge+2,w
 13039  0412  00DB               	movwf	___flge@ff2+2
 13040  0413  085E               	movf	??___flge+1,w
 13041  0414  00DA               	movwf	___flge@ff2+1
 13042  0415  085D               	movf	??___flge,w
 13043  0416  00D9               	movwf	___flge@ff2
 13044  0417                     l1176:	
 13045  0417  3080               	movlw	128
 13046  0418  06D8               	xorwf	___flge@ff1+3,f
 13047  0419  06DC               	xorwf	___flge@ff2+3,f
 13048  041A  085C               	movf	___flge@ff2+3,w
 13049  041B  0258               	subwf	___flge@ff1+3,w
 13050  041C  1D03               	skipz
 13051  041D  0008               	return
 13052  041E  085B               	movf	___flge@ff2+2,w
 13053  041F  0257               	subwf	___flge@ff1+2,w
 13054  0420  1D03               	skipz
 13055  0421  0008               	return
 13056  0422  085A               	movf	___flge@ff2+1,w
 13057  0423  0256               	subwf	___flge@ff1+1,w
 13058  0424  1D03               	skipz
 13059  0425  0008               	return
 13060  0426  0859               	movf	___flge@ff2,w
 13061  0427  0255               	subwf	___flge@ff1,w
 13062  0428  0008               	return
 13063  0429                     __end_of___flge:	
 13064  0429                     __ptext71:	
 13065 ;; *************** function _Rele0Desligado *****************
 13066 ;; Defined at:
 13067 ;;		line 923 in file "SlaveLiofilizadorVer1.c"
 13068 ;; Parameters:    Size  Location     Type
 13069 ;;		None
 13070 ;; Auto vars:     Size  Location     Type
 13071 ;;		None
 13072 ;; Return value:  Size  Location     Type
 13073 ;;                  1    wreg      void 
 13074 ;; Registers used:
 13075 ;;		None
 13076 ;; Tracked objects:
 13077 ;;		On entry : 100/300
 13078 ;;		On exit  : 300/0
 13079 ;;		Unchanged: 0/0
 13080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13081 ;;      Params:         0       0       0       0       0
 13082 ;;      Locals:         0       0       0       0       0
 13083 ;;      Temps:          0       0       0       0       0
 13084 ;;      Totals:         0       0       0       0       0
 13085 ;;Total ram usage:        0 bytes
 13086 ;; Hardware stack levels used:    1
 13087 ;; Hardware stack levels required when called:    1
 13088 ;; This function calls:
 13089 ;;		Nothing
 13090 ;; This function is called by:
 13091 ;;		_Auto_Relay0
 13092 ;; This function uses a non-reentrant model
 13093 ;;
 13094                           
 13095                           
 13096                           ;psect for function _Rele0Desligado
 13097  0429                     _Rele0Desligado:	
 13098  0429                     l6910:	
 13099                           ;incstack = 0
 13100                           ; Regs used in _Rele0Desligado: []
 13101                           
 13102                           
 13103                           ;SlaveLiofilizadorVer1.c: 924:      PORTCbits.RC0=0;
 13104  0429  1283               	bcf	3,5	;RP0=0, select bank0
 13105  042A  1303               	bcf	3,6	;RP1=0, select bank0
 13106  042B  1007               	bcf	7,0	;volatile
 13107  042C  0008               	return
 13108  042D                     __end_of_Rele0Desligado:	
 13109  042D                     __ptext65:	
 13110 ;; *************** function _Rele1Desligado *****************
 13111 ;; Defined at:
 13112 ;;		line 927 in file "SlaveLiofilizadorVer1.c"
 13113 ;; Parameters:    Size  Location     Type
 13114 ;;		None
 13115 ;; Auto vars:     Size  Location     Type
 13116 ;;		None
 13117 ;; Return value:  Size  Location     Type
 13118 ;;                  1    wreg      void 
 13119 ;; Registers used:
 13120 ;;		None
 13121 ;; Tracked objects:
 13122 ;;		On entry : 0/300
 13123 ;;		On exit  : 300/0
 13124 ;;		Unchanged: 0/0
 13125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13126 ;;      Params:         0       0       0       0       0
 13127 ;;      Locals:         0       0       0       0       0
 13128 ;;      Temps:          0       0       0       0       0
 13129 ;;      Totals:         0       0       0       0       0
 13130 ;;Total ram usage:        0 bytes
 13131 ;; Hardware stack levels used:    1
 13132 ;; Hardware stack levels required when called:    1
 13133 ;; This function calls:
 13134 ;;		Nothing
 13135 ;; This function is called by:
 13136 ;;		_Auto_Relay1
 13137 ;; This function uses a non-reentrant model
 13138 ;;
 13139                           
 13140                           
 13141                           ;psect for function _Rele1Desligado
 13142  042D                     _Rele1Desligado:	
 13143  042D                     l6912:	
 13144                           ;incstack = 0
 13145                           ; Regs used in _Rele1Desligado: []
 13146                           
 13147                           
 13148                           ;SlaveLiofilizadorVer1.c: 928:      PORTCbits.RC1=0;
 13149  042D  1283               	bcf	3,5	;RP0=0, select bank0
 13150  042E  1303               	bcf	3,6	;RP1=0, select bank0
 13151  042F  1087               	bcf	7,1	;volatile
 13152  0430  0008               	return
 13153  0431                     __end_of_Rele1Desligado:	
 13154  0431                     PL2:	
 13155  0431  1683               	bsf	3,5	;RP0=1, select bank3
 13156  0432  1703               	bsf	3,6	;RP1=1, select bank3
 13157  0433  081B               	movf	(_SetPoint1+3)^(0+384),w	;volatile
 13158  0434  1283               	bcf	3,5	;RP0=0, select bank0
 13159  0435  1303               	bcf	3,6	;RP1=0, select bank0
 13160  0436  00D8               	movwf	___flge@ff1+3
 13161  0437  1683               	bsf	3,5	;RP0=1, select bank3
 13162  0438  1703               	bsf	3,6	;RP1=1, select bank3
 13163  0439  081A               	movf	(_SetPoint1+2)^(0+384),w	;volatile
 13164  043A  1283               	bcf	3,5	;RP0=0, select bank0
 13165  043B  1303               	bcf	3,6	;RP1=0, select bank0
 13166  043C  00D7               	movwf	___flge@ff1+2
 13167  043D  1683               	bsf	3,5	;RP0=1, select bank3
 13168  043E  1703               	bsf	3,6	;RP1=1, select bank3
 13169  043F  0819               	movf	(_SetPoint1+1)^(0+384),w	;volatile
 13170  0440  1283               	bcf	3,5	;RP0=0, select bank0
 13171  0441  1303               	bcf	3,6	;RP1=0, select bank0
 13172  0442  00D6               	movwf	___flge@ff1+1
 13173  0443  1683               	bsf	3,5	;RP0=1, select bank3
 13174  0444  1703               	bsf	3,6	;RP1=1, select bank3
 13175  0445  0818               	movf	_SetPoint1^(0+384),w	;volatile
 13176  0446  1283               	bcf	3,5	;RP0=0, select bank0
 13177  0447  1303               	bcf	3,6	;RP1=0, select bank0
 13178  0448  00D5               	movwf	___flge@ff1
 13179  0449  1683               	bsf	3,5	;RP0=1, select bank3
 13180  044A  1703               	bsf	3,6	;RP1=1, select bank3
 13181  044B  0813               	movf	(_Temperatura1+3)^(0+384),w
 13182  044C  1283               	bcf	3,5	;RP0=0, select bank0
 13183  044D  1303               	bcf	3,6	;RP1=0, select bank0
 13184  044E  00DC               	movwf	___flge@ff2+3
 13185  044F  1683               	bsf	3,5	;RP0=1, select bank3
 13186  0450  1703               	bsf	3,6	;RP1=1, select bank3
 13187  0451  0812               	movf	(_Temperatura1+2)^(0+384),w
 13188  0452  1283               	bcf	3,5	;RP0=0, select bank0
 13189  0453  1303               	bcf	3,6	;RP1=0, select bank0
 13190  0454  00DB               	movwf	___flge@ff2+2
 13191  0455  1683               	bsf	3,5	;RP0=1, select bank3
 13192  0456  1703               	bsf	3,6	;RP1=1, select bank3
 13193  0457  0811               	movf	(_Temperatura1+1)^(0+384),w
 13194  0458  1283               	bcf	3,5	;RP0=0, select bank0
 13195  0459  1303               	bcf	3,6	;RP1=0, select bank0
 13196  045A  00DA               	movwf	___flge@ff2+1
 13197  045B  1683               	bsf	3,5	;RP0=1, select bank3
 13198  045C  1703               	bsf	3,6	;RP1=1, select bank3
 13199  045D  0810               	movf	_Temperatura1^(0+384),w
 13200  045E  1283               	bcf	3,5	;RP0=0, select bank0
 13201  045F  1303               	bcf	3,6	;RP1=0, select bank0
 13202  0460  00D9               	movwf	___flge@ff2
 13203  0461  0008               	return
 13204  0462                     __end_ofPL2:	
 13205  0462                     PL4:	
 13206  0462  00D5               	movwf	___flge@ff1
 13207  0463  1683               	bsf	3,5	;RP0=1, select bank3
 13208  0464  1703               	bsf	3,6	;RP1=1, select bank3
 13209  0465  0817               	movf	(_Temperatura0+3)^(0+384),w
 13210  0466  1283               	bcf	3,5	;RP0=0, select bank0
 13211  0467  1303               	bcf	3,6	;RP1=0, select bank0
 13212  0468  00DC               	movwf	___flge@ff2+3
 13213  0469  1683               	bsf	3,5	;RP0=1, select bank3
 13214  046A  1703               	bsf	3,6	;RP1=1, select bank3
 13215  046B  0816               	movf	(_Temperatura0+2)^(0+384),w
 13216  046C  1283               	bcf	3,5	;RP0=0, select bank0
 13217  046D  1303               	bcf	3,6	;RP1=0, select bank0
 13218  046E  00DB               	movwf	___flge@ff2+2
 13219  046F  1683               	bsf	3,5	;RP0=1, select bank3
 13220  0470  1703               	bsf	3,6	;RP1=1, select bank3
 13221  0471  0815               	movf	(_Temperatura0+1)^(0+384),w
 13222  0472  1283               	bcf	3,5	;RP0=0, select bank0
 13223  0473  1303               	bcf	3,6	;RP1=0, select bank0
 13224  0474  00DA               	movwf	___flge@ff2+1
 13225  0475  1683               	bsf	3,5	;RP0=1, select bank3
 13226  0476  1703               	bsf	3,6	;RP1=1, select bank3
 13227  0477  0814               	movf	_Temperatura0^(0+384),w
 13228  0478  1283               	bcf	3,5	;RP0=0, select bank0
 13229  0479  1303               	bcf	3,6	;RP1=0, select bank0
 13230  047A  00D9               	movwf	___flge@ff2
 13231  047B  0008               	return
 13232  047C                     __end_ofPL4:	
 13233  047C                     PL10:	
 13234  047C  0873               	movf	_SetPoint0+3,w	;volatile
 13235  047D  00D8               	movwf	___flge@ff1+3
 13236  047E  0872               	movf	_SetPoint0+2,w	;volatile
 13237  047F  00D7               	movwf	___flge@ff1+2
 13238  0480  0871               	movf	_SetPoint0+1,w	;volatile
 13239  0481  00D6               	movwf	___flge@ff1+1
 13240  0482  0870               	movf	_SetPoint0,w	;volatile
 13241  0483  0008               	return
 13242  0484                     __end_ofPL10:	
 13243  0484                     PL34:	
 13244  0484  0850               	movf	?___flsub+3,w
 13245  0485  00D8               	movwf	___flge@ff1+3
 13246  0486  084F               	movf	?___flsub+2,w
 13247  0487  00D7               	movwf	___flge@ff1+2
 13248  0488  084E               	movf	?___flsub+1,w
 13249  0489  00D6               	movwf	___flge@ff1+1
 13250  048A  084D               	movf	?___flsub,w
 13251  048B  0008               	return
 13252  048C                     __end_ofPL34:	
 13253  048C                     PL78:	
 13254  048C  00AB               	movwf	___xxtofl@val
 13255  048D  3001               	movlw	1
 13256  048E  01AC               	clrf	___xxtofl@val+1
 13257  048F  01AD               	clrf	___xxtofl@val+2
 13258  0490  01AE               	clrf	___xxtofl@val+3
 13259  0491  0008               	return
 13260  0492                     __end_ofPL78:	
 13261                           
 13262                           	psect	text72
 13263  07F0                     __ptext72:	
 13264 ;; *************** function _ADC_init *****************
 13265 ;; Defined at:
 13266 ;;		line 10 in file "adc.c"
 13267 ;; Parameters:    Size  Location     Type
 13268 ;;		None
 13269 ;; Auto vars:     Size  Location     Type
 13270 ;;		None
 13271 ;; Return value:  Size  Location     Type
 13272 ;;                  1    wreg      void 
 13273 ;; Registers used:
 13274 ;;		wreg, status,2, status,0
 13275 ;; Tracked objects:
 13276 ;;		On entry : 0/100
 13277 ;;		On exit  : 300/0
 13278 ;;		Unchanged: 0/0
 13279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13280 ;;      Params:         0       0       0       0       0
 13281 ;;      Locals:         0       0       0       0       0
 13282 ;;      Temps:          0       0       0       0       0
 13283 ;;      Totals:         0       0       0       0       0
 13284 ;;Total ram usage:        0 bytes
 13285 ;; Hardware stack levels used:    1
 13286 ;; Hardware stack levels required when called:    1
 13287 ;; This function calls:
 13288 ;;		Nothing
 13289 ;; This function is called by:
 13290 ;;		_main
 13291 ;; This function uses a non-reentrant model
 13292 ;;
 13293                           
 13294                           
 13295                           ;psect for function _ADC_init
 13296  07F0                     _ADC_init:	
 13297                           
 13298                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13299                           
 13300                           ;incstack = 0
 13301                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13302  07F0  30C0               	movlw	192
 13303  07F1  1283               	bcf	3,5	;RP0=0, select bank0
 13304  07F2  1303               	bcf	3,6	;RP1=0, select bank0
 13305  07F3  049F               	iorwf	31,f	;volatile
 13306                           
 13307                           ;adc.c: 12:      ADCON1=0b10000000;
 13308  07F4  3080               	movlw	128
 13309  07F5  1683               	bsf	3,5	;RP0=1, select bank1
 13310  07F6  009F               	movwf	31	;volatile
 13311                           
 13312                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13313  07F7  179F               	bsf	31,7	;volatile
 13314                           
 13315                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13316  07F8  1283               	bcf	3,5	;RP0=0, select bank0
 13317  07F9  141F               	bsf	31,0	;volatile
 13318  07FA  0008               	return
 13319  07FB                     __end_of_ADC_init:	
 13320                           
 13321                           	psect	text73
 13322  06CB                     __ptext73:	
 13323 ;; *************** function _isr *****************
 13324 ;; Defined at:
 13325 ;;		line 29 in file "isr.c"
 13326 ;; Parameters:    Size  Location     Type
 13327 ;;		None
 13328 ;; Auto vars:     Size  Location     Type
 13329 ;;  tempo           2    4[COMMON] unsigned int 
 13330 ;; Return value:  Size  Location     Type
 13331 ;;                  1    wreg      void 
 13332 ;; Registers used:
 13333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13334 ;; Tracked objects:
 13335 ;;		On entry : 0/0
 13336 ;;		On exit  : 300/0
 13337 ;;		Unchanged: 0/0
 13338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13339 ;;      Params:         0       0       0       0       0
 13340 ;;      Locals:         2       0       0       0       0
 13341 ;;      Temps:          4       0       0       0       0
 13342 ;;      Totals:         6       0       0       0       0
 13343 ;;Total ram usage:        6 bytes
 13344 ;; Hardware stack levels used:    1
 13345 ;; This function calls:
 13346 ;;		Nothing
 13347 ;; This function is called by:
 13348 ;;		Interrupt level 1
 13349 ;; This function uses a non-reentrant model
 13350 ;;
 13351                           
 13352                           
 13353                           ;psect for function _isr
 13354  06CB                     _isr:	
 13355                           
 13356                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13357  06CB  188B               	btfsc	11,1	;volatile
 13358                           
 13359                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13360  06CC  108B               	bcf	11,1	;volatile
 13361                           
 13362                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13363                           
 13364                           ;isr.c: 37:       }
 13365  06CD  1C0C               	btfss	12,0	;volatile
 13366  06CE  2F44               	goto	i1l5930
 13367                           
 13368                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13369  06CF  30B1               	movlw	177
 13370  06D0  008F               	movwf	15	;volatile
 13371                           
 13372                           ;isr.c: 42:                 TMR1L=0xF3;
 13373  06D1  30F3               	movlw	243
 13374  06D2  008E               	movwf	14	;volatile
 13375                           
 13376                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13377  06D3  100C               	bcf	12,0	;volatile
 13378                           
 13379                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13380  06D4  1FF6               	btfss	_generic_status,7
 13381  06D5  2ED8               	goto	i1l5878
 13382                           
 13383                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13384  06D6  13F6               	bcf	_generic_status,7
 13385  06D7  0064               	clrwdt	;# 
 13386  06D8                     i1l5878:	
 13387                           
 13388                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13389  06D8  300A               	movlw	10
 13390  06D9  1683               	bsf	3,5	;RP0=1, select bank3
 13391  06DA  1703               	bsf	3,6	;RP1=1, select bank3
 13392  06DB  07AE               	addwf	_Delay_Led_Tmr0^(0+384),f	;volatile
 13393  06DC  1803               	skipnc
 13394  06DD  0AAF               	incf	(_Delay_Led_Tmr0+1)^(0+384),f	;volatile
 13395                           
 13396                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13397  06DE  3003               	movlw	3
 13398  06DF  022F               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13399  06E0  30E8               	movlw	232
 13400  06E1  1903               	skipnz
 13401  06E2  022E               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13402  06E3  1C03               	skipc
 13403  06E4  2EE7               	goto	i1l5882
 13404                           
 13405                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13406  06E5  01AE               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
 13407  06E6  01AF               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
 13408  06E7                     i1l5882:	
 13409                           
 13410                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13411  06E7  3001               	movlw	1
 13412  06E8  022F               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13413  06E9  30F4               	movlw	244
 13414  06EA  1903               	skipnz
 13415  06EB  022E               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13416  06EC  1803               	skipnc
 13417  06ED  2EF2               	goto	i1l563
 13418                           
 13419                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13420  06EE  1283               	bcf	3,5	;RP0=0, select bank0
 13421  06EF  1303               	bcf	3,6	;RP1=0, select bank0
 13422  06F0  1786               	bsf	6,7	;volatile
 13423  06F1  2EF5               	goto	i1l5886
 13424  06F2                     i1l563:	
 13425                           ;isr.c: 56:                 else
 13426                           
 13427                           
 13428                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13429  06F2  1283               	bcf	3,5	;RP0=0, select bank0
 13430  06F3  1303               	bcf	3,6	;RP1=0, select bank0
 13431  06F4  1386               	bcf	6,7	;volatile
 13432  06F5                     i1l5886:	
 13433                           
 13434                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13435  06F5  1683               	bsf	3,5	;RP0=1, select bank3
 13436  06F6  1703               	bsf	3,6	;RP1=1, select bank3
 13437  06F7  082C               	movf	_Delay_Led_Usart^(0+384),w	;volatile
 13438  06F8  042D               	iorwf	(_Delay_Led_Usart+1)^(0+384),w	;volatile
 13439  06F9  1903               	btfsc	3,2
 13440  06FA  2F05               	goto	i1l565
 13441                           
 13442                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13443  06FB  300A               	movlw	10
 13444  06FC  02AC               	subwf	_Delay_Led_Usart^(0+384),f	;volatile
 13445  06FD  3000               	movlw	0
 13446  06FE  1C03               	skipc
 13447  06FF  03AD               	decf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13448  0700  02AD               	subwf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13449                           
 13450                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13451  0701  1283               	bcf	3,5	;RP0=0, select bank0
 13452  0702  1303               	bcf	3,6	;RP1=0, select bank0
 13453  0703  1706               	bsf	6,6	;volatile
 13454                           
 13455                           ;isr.c: 63:                    }
 13456  0704  2F08               	goto	i1l5892
 13457  0705                     i1l565:	
 13458                           ;isr.c: 64:                 else{
 13459                           
 13460                           
 13461                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13462  0705  1283               	bcf	3,5	;RP0=0, select bank0
 13463  0706  1303               	bcf	3,6	;RP1=0, select bank0
 13464  0707  1306               	bcf	6,6	;volatile
 13465  0708                     i1l5892:	
 13466                           
 13467                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13468  0708  1683               	bsf	3,5	;RP0=1, select bank3
 13469  0709  1703               	bsf	3,6	;RP1=1, select bank3
 13470  070A  0830               	movf	_Delay_Led_Memory^(0+384),w	;volatile
 13471  070B  0431               	iorwf	(_Delay_Led_Memory+1)^(0+384),w	;volatile
 13472  070C  1903               	btfsc	3,2
 13473  070D  2F18               	goto	i1l567
 13474                           
 13475                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13476  070E  300A               	movlw	10
 13477  070F  02B0               	subwf	_Delay_Led_Memory^(0+384),f	;volatile
 13478  0710  3000               	movlw	0
 13479  0711  1C03               	skipc
 13480  0712  03B1               	decf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13481  0713  02B1               	subwf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13482                           
 13483                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13484  0714  1283               	bcf	3,5	;RP0=0, select bank0
 13485  0715  1303               	bcf	3,6	;RP1=0, select bank0
 13486  0716  1686               	bsf	6,5	;volatile
 13487                           
 13488                           ;isr.c: 71:                    }
 13489  0717  2F1B               	goto	i1l5898
 13490  0718                     i1l567:	
 13491                           ;isr.c: 72:                 else{
 13492                           
 13493                           
 13494                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13495  0718  1283               	bcf	3,5	;RP0=0, select bank0
 13496  0719  1303               	bcf	3,6	;RP1=0, select bank0
 13497  071A  1286               	bcf	6,5	;volatile
 13498  071B                     i1l5898:	
 13499                           
 13500                           ;isr.c: 77:                 tempodecorrido+=10;
 13501  071B  300A               	movlw	10
 13502  071C  1683               	bsf	3,5	;RP0=1, select bank3
 13503  071D  1703               	bsf	3,6	;RP1=1, select bank3
 13504  071E  07A0               	addwf	_tempodecorrido^(0+384),f	;volatile
 13505  071F  1803               	skipnc
 13506  0720  0AA1               	incf	(_tempodecorrido+1)^(0+384),f	;volatile
 13507                           
 13508                           ;isr.c: 78:                 milisegundo+=10;
 13509  0721  07AA               	addwf	_milisegundo^(0+384),f	;volatile
 13510  0722  1803               	skipnc
 13511  0723  0AAB               	incf	(_milisegundo+1)^(0+384),f	;volatile
 13512                           
 13513                           ;isr.c: 79:                 if(milisegundo==1000){
 13514  0724  30E8               	movlw	232
 13515  0725  062A               	xorwf	_milisegundo^(0+384),w	;volatile
 13516  0726  3003               	movlw	3
 13517  0727  1903               	skipnz
 13518  0728  062B               	xorwf	(_milisegundo+1)^(0+384),w	;volatile
 13519  0729  1D03               	btfss	3,2
 13520  072A  2F44               	goto	i1l5930
 13521                           
 13522                           ;isr.c: 80:                    milisegundo=0;
 13523  072B  01AA               	clrf	_milisegundo^(0+384)	;volatile
 13524  072C  01AB               	clrf	(_milisegundo+1)^(0+384)	;volatile
 13525                           
 13526                           ;isr.c: 81:                    segundo++;
 13527  072D  0ABD               	incf	_segundo^(0+384),f	;volatile
 13528                           
 13529                           ;isr.c: 84:                    if(TempoCNT_0>0) TempoCNT_0--;
 13530  072E  0875               	movf	_TempoCNT_0,w	;volatile
 13531  072F  1D03               	btfss	3,2
 13532  0730  03F5               	decf	_TempoCNT_0,f	;volatile
 13533                           
 13534                           ;isr.c: 85:                    if(TempoCNT_1>0) TempoCNT_1--;
 13535  0731  0874               	movf	_TempoCNT_1,w	;volatile
 13536  0732  1D03               	btfss	3,2
 13537  0733  03F4               	decf	_TempoCNT_1,f	;volatile
 13538                           
 13539                           ;isr.c: 88:                    if(segundo==60){
 13540  0734  303C               	movlw	60
 13541  0735  063D               	xorwf	_segundo^(0+384),w	;volatile
 13542  0736  1D03               	btfss	3,2
 13543  0737  2F44               	goto	i1l5930
 13544                           
 13545                           ;isr.c: 89:                       segundo=0;
 13546  0738  01BD               	clrf	_segundo^(0+384)	;volatile
 13547                           
 13548                           ;isr.c: 90:                       minuto++;
 13549  0739  0ABB               	incf	_minuto^(0+384),f	;volatile
 13550                           
 13551                           ;isr.c: 91:                       if(minuto==60){
 13552  073A  303C               	movlw	60
 13553  073B  063B               	xorwf	_minuto^(0+384),w	;volatile
 13554  073C  1D03               	btfss	3,2
 13555  073D  2F44               	goto	i1l5930
 13556                           
 13557                           ;isr.c: 92:                          minuto=0;
 13558  073E  01BB               	clrf	_minuto^(0+384)	;volatile
 13559                           
 13560                           ;isr.c: 93:                          hora++;
 13561  073F  0ABC               	incf	_hora^(0+384),f	;volatile
 13562                           
 13563                           ;isr.c: 94:                          if(hora==24){
 13564  0740  3018               	movlw	24
 13565  0741  063C               	xorwf	_hora^(0+384),w	;volatile
 13566  0742  1903               	btfsc	3,2
 13567                           
 13568                           ;isr.c: 95:                             hora=0;
 13569  0743  01BC               	clrf	_hora^(0+384)	;volatile
 13570  0744                     i1l5930:	
 13571                           ;isr.c: 99:                 }
 13572                           
 13573                           
 13574                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13575  0744  1283               	bcf	3,5	;RP0=0, select bank0
 13576  0745  1303               	bcf	3,6	;RP1=0, select bank0
 13577  0746  1E8C               	btfss	12,5	;volatile
 13578  0747  2F99               	goto	i1l583
 13579  0748  301E               	movlw	30
 13580                           
 13581                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13582  0749  1476               	bsf	_generic_status,0
 13583                           
 13584                           ;isr.c: 109:         tempo=30;
 13585  074A  00FB               	movwf	isr@tempo
 13586  074B  01FC               	clrf	isr@tempo+1
 13587                           
 13588                           ;isr.c: 110:         count=0;
 13589  074C  1683               	bsf	3,5	;RP0=1, select bank3
 13590  074D  1703               	bsf	3,6	;RP1=1, select bank3
 13591  074E  01A2               	clrf	_count^(0+384)	;volatile
 13592  074F  01A3               	clrf	(_count+1)^(0+384)	;volatile
 13593                           
 13594                           ;isr.c: 111:         pointer=usart_buffer;
 13595  0750  3050               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13596  0751  00B2               	movwf	_pointer^(0+384)
 13597  0752                     i1l5950:	
 13598                           ;isr.c: 112:         while(tempo)
 13599                           
 13600                           
 13601                           ;isr.c: 112:         while(tempo)
 13602  0752  087B               	movf	isr@tempo,w
 13603  0753  047C               	iorwf	isr@tempo+1,w
 13604  0754  1903               	btfsc	3,2
 13605  0755  2F81               	goto	i1l5952
 13606                           
 13607                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13608  0756  1283               	bcf	3,5	;RP0=0, select bank0
 13609  0757  1303               	bcf	3,6	;RP1=0, select bank0
 13610  0758  1E8C               	btfss	12,5	;volatile
 13611  0759  2F7A               	goto	i1l5948
 13612                           
 13613                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13614  075A  1683               	bsf	3,5	;RP0=1, select bank3
 13615  075B  1703               	bsf	3,6	;RP1=1, select bank3
 13616  075C  0832               	movf	_pointer^(0+384),w
 13617  075D  0084               	movwf	4
 13618  075E  1283               	bcf	3,5	;RP0=0, select bank0
 13619  075F  1303               	bcf	3,6	;RP1=0, select bank0
 13620  0760  081A               	movf	26,w	;volatile
 13621  0761  1783               	bsf	3,7	;select IRP bank2
 13622  0762  0080               	movwf	0
 13623                           
 13624                           ;isr.c: 118:                 if(count<25 -1)
 13625  0763  1683               	bsf	3,5	;RP0=1, select bank3
 13626  0764  1703               	bsf	3,6	;RP1=1, select bank3
 13627  0765  0823               	movf	(_count+1)^(0+384),w	;volatile
 13628  0766  3A80               	xorlw	128
 13629  0767  00FF               	movwf	127
 13630  0768  3080               	movlw	128
 13631  0769  027F               	subwf	127,w
 13632  076A  1D03               	skipz
 13633  076B  2F6E               	goto	u516_25
 13634  076C  3018               	movlw	24
 13635  076D  0222               	subwf	_count^(0+384),w	;volatile
 13636  076E                     u516_25:	
 13637  076E  1803               	skipnc
 13638  076F  2F76               	goto	i1l5946
 13639                           
 13640                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13641  0770  1683               	bsf	3,5	;RP0=1, select bank3
 13642  0771  1703               	bsf	3,6	;RP1=1, select bank3
 13643  0772  0AA2               	incf	_count^(0+384),f	;volatile
 13644  0773  1903               	skipnz
 13645  0774  0AA3               	incf	(_count+1)^(0+384),f	;volatile
 13646                           
 13647                           ;isr.c: 121:                    pointer++;
 13648  0775  0AB2               	incf	_pointer^(0+384),f
 13649  0776                     i1l5946:	
 13650                           
 13651                           ;isr.c: 123:                 tempo=30;
 13652  0776  301E               	movlw	30
 13653  0777  00FB               	movwf	isr@tempo
 13654  0778  01FC               	clrf	isr@tempo+1
 13655                           
 13656                           ;isr.c: 124:             }
 13657  0779  2F52               	goto	i1l5950
 13658  077A                     i1l5948:	
 13659                           
 13660                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13661  077A  3001               	movlw	1
 13662  077B  02FB               	subwf	isr@tempo,f
 13663  077C  3000               	movlw	0
 13664  077D  1C03               	skipc
 13665  077E  03FC               	decf	isr@tempo+1,f
 13666  077F  02FC               	subwf	isr@tempo+1,f
 13667  0780  2F52               	goto	i1l5950
 13668  0781                     i1l5952:	
 13669                           
 13670                           ;isr.c: 131:         (*pointer)=0;
 13671  0781  1683               	bsf	3,5	;RP0=1, select bank3
 13672  0782  1703               	bsf	3,6	;RP1=1, select bank3
 13673  0783  0832               	movf	_pointer^(0+384),w
 13674  0784  0084               	movwf	4
 13675  0785  1783               	bsf	3,7	;select IRP bank2
 13676  0786  0180               	clrf	0
 13677                           
 13678                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13679  0787  1283               	bcf	3,5	;RP0=0, select bank0
 13680  0788  1303               	bcf	3,6	;RP1=0, select bank0
 13681  0789  1C98               	btfss	24,1	;volatile
 13682  078A  2F99               	goto	i1l583
 13683                           
 13684                           ;isr.c: 134:            CREN=0;
 13685  078B  1218               	bcf	24,4	;volatile
 13686                           
 13687                           ;isr.c: 135:            CREN=1;
 13688  078C  1618               	bsf	24,4	;volatile
 13689                           
 13690                           ;isr.c: 136:            tempo=RCREG;
 13691  078D  081A               	movf	26,w	;volatile
 13692  078E  00FB               	movwf	isr@tempo
 13693  078F  01FC               	clrf	isr@tempo+1
 13694                           
 13695                           ;isr.c: 137:            tempo=RCREG;
 13696  0790  081A               	movf	26,w	;volatile
 13697  0791  00FB               	movwf	isr@tempo
 13698  0792  01FC               	clrf	isr@tempo+1
 13699                           
 13700                           ;isr.c: 138:            tempo=RCREG;
 13701  0793  081A               	movf	26,w	;volatile
 13702  0794  00FB               	movwf	isr@tempo
 13703  0795  01FC               	clrf	isr@tempo+1
 13704                           
 13705                           ;isr.c: 139:            usart_buffer[0]=0;
 13706  0796  1703               	bsf	3,6	;RP1=1, select bank2
 13707  0797  01D0               	clrf	_usart_buffer^(0+256)	;volatile
 13708                           
 13709                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13710  0798  14F6               	bsf	_generic_status,1
 13711  0799                     i1l583:	
 13712  0799  087A               	movf	??_isr+3,w
 13713  079A  1303               	bcf	3,6	;RP1=0, select bank0
 13714  079B  00FF               	movwf	127
 13715  079C  0879               	movf	??_isr+2,w
 13716  079D  008A               	movwf	10
 13717  079E  0878               	movf	??_isr+1,w
 13718  079F  0084               	movwf	4
 13719  07A0  0E77               	swapf	??_isr^(0+4294967168),w
 13720  07A1  0083               	movwf	3
 13721  07A2  0EFE               	swapf	126,f
 13722  07A3  0E7E               	swapf	126,w
 13723  07A4  0009               	retfie
 13724  07A5                     __end_of_isr:	
 13725  007E                     btemp	set	126	;btemp
 13726  007E                     wtemp0	set	126
 13727                           
 13728                           	psect	intentry
 13729  0004                     __pintentry:	
 13730                           ;incstack = 0
 13731                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13732                           
 13733  0004                     interrupt_function:	
 13734  007E                     saved_w	set	btemp
 13735  0004  00FE               	movwf	btemp
 13736  0005  0E03               	swapf	3,w
 13737  0006  00F7               	movwf	??_isr
 13738  0007  0804               	movf	4,w
 13739  0008  00F8               	movwf	??_isr+1
 13740  0009  080A               	movf	10,w
 13741  000A  00F9               	movwf	??_isr+2
 13742  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13743  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13744  000D  087F               	movf	btemp+1,w
 13745  000E  00FA               	movwf	??_isr+3
 13746  000F  120A  118A  2ECB   	ljmp	_isr


Data Sizes:
    Strings     14
    Constant    44
    Data        2
    BSS         174
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK3            96      3      83
    BANK2            96      0      89

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(1) Largest target is 36
		 -> log@coeff(CODE[36]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_2(CODE[1]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 

    EEPROM_24C1025_Write_Byte@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_24C1025_Read_Str@texto	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), buffer(BANK2[64]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> EEPROM_24C1025_Write_Int@local(BANK1[2]), buffer(BANK2[64]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[3]), texto(BANK3[16]), STR_1(CODE[7]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK1[2]), 

    USART_put_buffer@vetor	PTR unsigned char  size(1) Largest target is 64
		 -> buffer(BANK2[64]), 

    USART_put_buffer@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> USART_put_buffer@vetor(BANK0[1]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 16
		 -> usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 16
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK1[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK1[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 25
		 -> NULL(NULL[0]), usart_buffer(BANK2[25]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 16
		 -> usart_protocol.value(BANK3[10]), usart_protocol(BANK3[16]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> texto(BANK3[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> Decodify_Command@ss(BANK1[10]), Decodify_Command@mm(BANK1[10]), Decodify_Command@hh(BANK1[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _ADC_Read_NTC->_log
    _log->___flmul
    _frexp->___fleq
    _eval_poly->___flmul
    _I2C_Master_Init->___lldiv
    _Decodify_Command->___fltol
    _itoa->_utoa
    _utoa->___lwdiv
    _USART_put_buffer->_USART_putc
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->___fltol
    ___fltol->___flmul
    ___flmul->___flsub
    _EEPROM_24C1025_Write_Int->___fltol
    _USART_put_int->___fltol
    ___fldiv->___flmul
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_I2C_Master_Write
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_I2C_Master_Read
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Write_Buffer->_I2C_Master_Write
    _Auto_Relay1->___flge
    ___xxtofl->_EEPROM_Read_Integer
    _Auto_Relay0->___flge
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flge->___flsub

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command
    _mediatemperaturaNTC->_ADC_Read_NTC
    _ADC_Read_NTC->___fldiv
    _log->_eval_poly
    _Decodify_Command->_Load_Work
    _Save_Log->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _Load_Work->___fldiv

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  156250
                                             78 BANK1      2     2      0
                                              0 BANK3      3     3      0
                           _ADC_init
                        _Auto_Relay0
                        _Auto_Relay1
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                          _Load_Work
                         _USART_init
                _mediatemperaturaNTC
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     122
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _mediatemperaturaNTC                                 11    11      0   50861
                                             47 BANK1     11    11      0
                       _ADC_Read_NTC
            _Package_Usart_is_for_me
                        _Rele0Ligado
                        _Rele1Ligado
                            ___fladd
                            ___fldiv
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     248
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Read_NTC                                        23    18      5   42641
                                             25 BANK1     22    17      5
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___lwdiv
                           ___xxtofl
                            _captura
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   23460
                                             78 BANK0      2     2      0
                                             16 BANK1      4     0      4
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     896
                                             12 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     520
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     9      7    9716
                                              0 BANK1     16     9      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           6     2      4     220
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    49    49      0   85928
                                             29 BANK1     49    49      0
            _EEPROM_24C1025_Fill_All
         _EEPROM_24C1025_Read_Buffer
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                          _Load_Work
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                   _USART_put_buffer
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                               _itoa
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               5     3      2     970
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 6     2      4    2941
                                             15 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     4      4    2060
                                              7 BANK0      8     4      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USART_put_buffer                                     7     5      2     224
                                              1 BANK0      7     5      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      53
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     602
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     602
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   11644
                                             17 BANK1      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             78 BANK0      2     2      0
                                              0 BANK1      8     4      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5434
                                             53 BANK0     25    17      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            8     5      3     980
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                             9     3      6    5601
                                              8 BANK1      9     3      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             3     0      3    3333
                                             19 BANK1      3     0      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     2      3     238
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2822
                                             11 BANK1      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 5     3      2    2095
                                             15 BANK1      5     3      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      4     2      2    3050
                                             15 BANK1      4     2      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     992
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1829
                                             11 BANK1      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        3     1      2     964
                                              8 BANK1      3     1      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Load_Work                                            4     4      0    3953
                                             25 BANK1      4     4      0
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2544
                                              0 BANK1     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Integer                                  8     5      3     229
                                              3 BANK0      8     5      3
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  2     1      1     623
                                              5 BANK0      2     1      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     727
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     372
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   3     2      1     245
                                              3 BANK0      3     2      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    3886
                                              2 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    5127
                                             15 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    4596
                                              4 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              7     3      4    5486
                                             17 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    5440
                                             17 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          14     7      7    5226
                                              4 BANK0     13     6      7
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2     605
                                              0 BANK0      4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     6      1    5207
                                             15 BANK0      7     6      1
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    4854
                                              2 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    3091
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Auto_Relay1                                          0     0      0    7379
                     _Rele1Desligado
                        _Rele1Ligado
                             ___flge
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1158
                                             11 BANK0     14    10      4
                   _EEPROM_Read_Byte (ARG)
                _EEPROM_Read_Integer (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele1Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele1Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Auto_Relay0                                          0     0      0    6221
                     _Rele0Desligado
                        _Rele0Ligado
                             ___flge
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4723
                                             45 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    3758
                                             25 BANK0     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    1498
                                             53 BANK0     12     4      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele0Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele0Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  6     6      0      28
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Auto_Relay0
     _Rele0Desligado
     _Rele0Ligado
     ___flge
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___flsub
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
   _Auto_Relay1
     _Rele1Desligado
     _Rele1Ligado
     ___flge
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___flsub
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___xxtofl
       _EEPROM_Read_Byte (ARG)
       _EEPROM_Read_Integer (ARG)
         _EEPROM_Read_Byte
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Buffer
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_RepeatedStart
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Buffer
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _EEPROM_24C1025_Write_Int
       _EEPROM_24C1025_Write_Buffer
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _Load_Work
       _EEPROM_Read_Byte
       _EEPROM_Read_Integer
         _EEPROM_Read_Byte
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___flsub (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _EEPROM_Read_Byte (ARG)
                     _EEPROM_Read_Integer (ARG)
                       _EEPROM_Read_Byte
                   _frexp (ARG)
                     ___fleq
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___flsub (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _EEPROM_Read_Byte (ARG)
                     _EEPROM_Read_Integer (ARG)
                       _EEPROM_Read_Byte
                   _frexp (ARG)
                     ___fleq
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
         _USART_putc
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___flsub (ARG)
                 ___fladd
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _EEPROM_Read_Byte (ARG)
                     _EEPROM_Read_Integer (ARG)
                       _EEPROM_Read_Byte
                   _frexp (ARG)
                     ___fleq
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___flsub (ARG)
               ___fladd
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
       ___flmul
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_buffer
       _USART_putc
     _USART_put_int
       _USART_putc
       ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
     _USART_put_string
       _USART_putc
     _USART_putc
     _USART_to_Protocol
     ___flmul
       __Umul8_16
       ___fladd (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
       _frexp (ARG)
         ___fleq
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _strcat
     _strcpy
     _strlen
   _EEPROM_Read_Integer
     _EEPROM_Read_Byte
   _EEPROM_Write_Integer
     _EEPROM_Write_Byte
   _I2C_Master_Init
     ___lldiv
   _Load_Work
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___xxtofl
       _EEPROM_Read_Byte (ARG)
       _EEPROM_Read_Integer (ARG)
         _EEPROM_Read_Byte
   _USART_init
   _mediatemperaturaNTC
     _ADC_Read_NTC
       ___fladd
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___flmul
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___flsub
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
       ___lwdiv
       ___xxtofl
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
       _captura
       _log
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___fleq
         ___flge
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flsub (ARG)
             ___fladd
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _eval_poly
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
               _frexp (ARG)
                 ___fleq
             ___flsub (ARG)
               ___fladd
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _EEPROM_Read_Byte (ARG)
                   _EEPROM_Read_Integer (ARG)
                     _EEPROM_Read_Byte
                 _frexp (ARG)
                   ___fleq
               ___xxtofl (ARG)
                 _EEPROM_Read_Byte (ARG)
                 _EEPROM_Read_Integer (ARG)
                   _EEPROM_Read_Byte
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
         _frexp
           ___fleq
     _Package_Usart_is_for_me
     _Rele0Ligado
     _Rele1Ligado
     ___fladd
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
       _frexp (ARG)
         ___fleq
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___flsub (ARG)
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _EEPROM_Read_Byte (ARG)
               _EEPROM_Read_Integer (ARG)
                 _EEPROM_Read_Byte
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
         ___xxtofl (ARG)
           _EEPROM_Read_Byte (ARG)
           _EEPROM_Read_Integer (ARG)
             _EEPROM_Read_Byte
         _frexp (ARG)
           ___fleq
       ___xxtofl (ARG)
         _EEPROM_Read_Byte (ARG)
         _EEPROM_Read_Integer (ARG)
           _EEPROM_Read_Byte
     ___xxtofl
       _EEPROM_Read_Byte (ARG)
       _EEPROM_Read_Integer (ARG)
         _EEPROM_Read_Byte
     _my_delay_ms
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      3      53       9       86.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      59      11       92.7%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     50      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     159      12        0.0%
ABS                  0      0     159       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec 10 19:41:21 2019

                              _USART_putc 0BDD                                __CFG_CP$ON 0000  
                            ___fldiv@aexp 00B8                              ___fldiv@bexp 00B7  
                                       pc 0002                              ___fldiv@sign 00B0  
                                      PL2 0431                                        PL4 0462  
                                      PL6 0272                                        PL8 028C  
                                      l49 0F59           EEPROM_24C1025_Read_Buffer@range 002F  
        EEPROM_24C1025_Write_Str@chip_add 0029                                        fsr 0004  
                           _USART_put_int 0F7F                  Decodify_Command@tempchar 00E6  
                     __Umul8_16@word_mpld 0025                                       PL10 047C  
                                     PL20 02B5                                       PL12 0295  
                                     PL30 17A1                                       PL22 1785  
                                     PL14 05BA                                       PL40 02DD  
                                     PL32 0FA9                                       PL24 02C5  
                                     PL16 02A6                                       PL50 0FCF  
                                     PL42 0FBC                                       PL34 0484  
                                     PL26 178F                                       PL18 1775  
                                     PL60 17C3                                       PL52 0FD6  
                                     PL44 0FC6                                       PL36 0FB2  
                                     PL28 1798                                       PL70 0FFA  
                                     PL62 0FE3                                       PL54 17BC  
                                     PL46 17AA                                       PL38 02D3  
                                     PL80 1FFA                                       PL72 17C9  
                                     PL64 0FE8                                       PL56 0FDC  
                                     PL48 17B3                                       PL74 17CF  
                                     PL66 0FEE                                       PL58 02E7  
                                     PL76 1F77                                       PL68 0FF4  
                                     PL78 048C        EEPROM_24C1025_Read_Buffer@cnt_1519 002D  
            PROCULUS_VP_Write_String@text 00B5                                       l307 08F1  
                                     l340 0B3F                                       l342 0BA0  
                                     l336 0B32                                       l506 0495  
                                     l450 1680                                       l287 06A3  
                                     l480 1F68                                       l288 06A7  
                                     l474 1F44                                       l484 0586  
                                     l479 1F67                                       l738 176B  
                                     l796 0BE5                                       _PEN 048A  
                            __CFG_CPD$OFF 0000                                       _SEN 0488  
      EEPROM_24C1025_Read_Buffer@chip_add 002E                  Decodify_Command@sizedata 00E9  
                                     _log 168C                                       _isr 06CB  
                                     fsr0 0004                             ??_Auto_Relay0 0061  
                           ??_Auto_Relay1 0061                                       indf 0000  
               __end_of_EEPROM_Write_Byte 1F77                              __CFG_IESO$ON 0000  
                            ___flmul@aexp 0062                              ___flmul@bexp 0063  
                  PROCULUS_VP_Write@vetor 00AD              ?_EEPROM_24C1025_Write_Buffer 0022  
                            ___flmul@sign 0061                              ___flmul@temp 006C  
                            ___flmul@prod 0068   __end_of_PROCULUS_Control_Register_Write 1DFF  
__size_of_PROCULUS_Control_Register_Write 002E         ??_PROCULUS_Control_Register_Write 00AC  
        ?_PROCULUS_Control_Register_Write 00AB           _PROCULUS_Control_Register_Write 1DD1  
                            __CFG_LVP$OFF 0000                     ??_mediatemperaturaNTC 00CF  
                            ___fltol@exp1 006F                                      l1300 1254  
                                    l1400 01D3                                      l1313 12E6  
                                    l1307 1280                                      l1308 1282  
                                    l1333 1330                                      l1174 03DD  
                                    l1318 12FB                                      l1342 152C  
                                    l1343 1529                                      l1176 0417  
                                    l4000 130D                                      l1290 11F8  
                                    l1426 14C6                                      l1346 1544  
                                    l1291 11F6                                      l1371 1633  
                                    l1347 1541                                      l4020 132C  
                                    l4012 1320                                      l1285 11DC  
                                    l1453 1E5A                                      l1286 11DA  
                                    l1382 00B5                                      l1439 14F8  
                                    l1383 00B3                                      l4024 1331  
                                    l1296 125D                                      l1298 124B  
                                    l1378 009E                                      l1299 1252  
                                    l1379 009C                                      l6002 01E4  
                                    l6006 01EC                                      l6110 0174  
                                    l4280 1E01                                      l6120 0189  
                                    l4370 14F6                                      l4362 14D3  
                                    l4354 14BE                                      l4274 1DFF  
                                    l6130 019D                                      l5218 17D8  
                                    l4292 03FA                                      l4372 14EC  
                                    l4364 14DC                                      l7100 03A7  
                                    l6140 01C6                                      l6116 0187  
                                    l7004 1D65                                      l4286 03CC  
                                    l4366 14E7                                      l4358 14D1  
                                    l7102 03A0                                      l6230 0EE4  
                                    l4702 1530                                      l6134 01B1  
                                    l6062 00C3                                      l6046 00A2  
                                    l7022 102E                                      l4384 150E  
                                    l6232 0EE5                                      l4456 1F4D  
                                    l4800 1601                                      l5192 0BBF  
                                    l3840 1FE6                                      l5272 1773  
                                    l4458 1F50                                      l6058 00B9  
                                    l6306 1E87                                      l5194 0BC6  
                                    l5186 1C74                                      l7202 0976  
                                    l7050 1095                                      l3940 1257  
                                    l3924 1222                                      l6228 0EE1  
                                    l6412 0E00                                      l4812 162B  
                                    l4716 1548                                      l6500 1DFA  
                                    l5196 0BCA                                      l7300 0AFE  
                                    l7132 0878                                      l7124 085C  
                                    l6316 11BF                                      l3844 1FF8  
                                    l3836 1FD5                                      l4396 1F97  
                                    l5268 1770                                      l5348 1D0A  
                                    l7070 02F4                                      l6254 0F0F  
                                    l6190 0E73                                      l6414 0E03  
                                    l4806 1615                                      l6174 0F7F  
                                    l6502 080F                                      l4662 0248  
                                    l4646 0220                                      l6350 1CDD  
                                    l7222 09CB                                      l7214 09AF  
                                    l7038 1080                                      l7046 108E  
                                    l3960 1286                                      l6248 0EFF  
                                    l6256 0E8E                                      l6192 0E74  
                                    l6168 0F52                                      l6416 0E04  
                                    l6328 05A5                                      l4760 15BC  
                                    l4736 1569                                      l4728 1561  
                                    l4672 0256                                      l4648 0226  
                                    l6352 1CFC                                      l6344 1CD9  
                                    l7312 0B17                                      l7208 0990  
                                    l7160 08FB                                      l7152 08EB  
                                    l7144 08CA                                      l7128 0866  
                                    l7064 10E0                                      l3970 12D8  
                                    l3946 1263                                      l7074 032B  
                                    l6258 0F11                                      l6370 0D94  
                                    l4818 1634                                      l4754 159D  
                                    l4762 1585                                      l6274 1662  
                                    l6514 0827                                      l4674 0262  
                                    l4666 0252                                      l7306 0B09  
                                    l7242 0A35                                      l7170 0915  
                                    l7058 10AD                                      l7076 032E  
                                    l7068 02F3                                      l7092 034E  
                                    l6188 0E70                                      l6444 0E3B  
                                    l4780 15D7                                      l4764 15BE  
                                    l6516 083D                                      l4916 07CF  
                                    l7500 0B4D                                      l7324 0B36  
                                    l7252 0A6A                                      l7236 0A15  
                                    l7228 09E8                                      l7156 08F3  
                                    ?_log 00B0                                      l3990 1302  
                                    l3894 1204                                      l7078 0327  
                                    l7094 034F                                      l6438 0E27  
                                    l6446 0DB7                                      l6366 0D90  
                                    l6710 0CAF                                      l6630 0C0F  
                                    l4862 1F06                                      l4790 15ED  
                                    l6286 1679                                      l6526 1E1E  
                                    l7318 0B27                                      l7190 0957  
                                    l7166 0903                                      l7414 0658  
                                    l3976 12F0                                      l6800 1D70  
                                    l6448 0E3D                                      l6368 0D93  
                                    l6712 0CB0                                      l6632 0C12  
                                    l6456 0F91                                      l6536 1E38  
                                    l7248 0A4D                                      l7184 0940  
                                    l7176 0925                                      l7336 0B43  
                                    l6472 16A7                                      l7344 05D3  
                                    l7098 03A4                                      l6634 0C13  
                                    l4786 15EB                                      l4778 15C4  
                                    l6554 04A6                                      l6458 0F99  
                                    l4970 1CC1                                      l6298 1E74  
                                    l7266 0AAA                                      l7258 0A78  
                                    l3996 130B                                      l3988 1300  
                                    l6812 1D7D                                      l6708 0CAC  
                                    l7276 0AC4                                      l7196 0963  
                                    l6476 16C3                                      l7444 0688  
                                    ?_isr 0077                                      l6910 0429  
                                    l7294 0AF6                                      l7286 0ADE  
                                    l6912 042D                                      l6736 0CD3  
                                    l6584 0FA0                                      l7464 06C1  
                                    l6906 1116                                      l6754 0D17  
                                    l6594 1F27                                      l6498 1DE9  
                                    l6756 0D1A                                      l6780 0D3E  
                                    l6596 1F38                                      l6828 0F73  
                                    l6924 1ECD                                      l6758 0D1B  
                                    l6790 0D5D                                      l6694 0C31  
                                    l6696 0C78                                      l6688 0C69  
                                    l6936 1EF8                                      l6856 133F  
                                    l6970 1D44                                      l6788 0D56  
                                    l6894 10FF                                      l6886 10F0  
                                    l6990 1D5E                                      l6898 1107  
                                    _BETA 1834                                      STR_1 183C  
                            __CFG_WDTE$ON 0000                                      STR_2 1847  
                                    STR_3 1846                                      STR_4 1848  
                                    STR_5 1846                                      STR_6 1848  
                                    STR_7 1846                                      STR_8 1843  
                                    _CREN 00C4                                      u4045 15AB  
                                    u4215 07DB                                      u4145 160A  
                                    u4155 1620                                      u2635 1FF4  
                                    u2740 1242                                      u4245 1CCA  
                                    u2750 1243                                      u2735 1236  
                                    u3395 1E07                                      u6115 1E9A  
                                    u2853 1298                                      u4453 17EA  
                                    u5503 0E6E                                      u5513 0EAC  
                                    _RCEN 048B                                      u5533 0EDF  
                                    u5445 01A6                                      u5470 0F4F  
                                    u5703 0DC8                                      u5455 01BC  
                                    u5615 1E7A                                      u6095 1EE0  
                                    u5545 0E9B                                      u4593 1D1C  
                                    u5723 0DFE                                      u3875 0230  
                                    u5493 0E5F                                      u6607 0C5A  
                                    u5575 166B                                      u5913 0C9B  
                                    u6617 0C84                                      u6537 05DB  
                                    u5683 0D7F                                      u6627 0CFA  
                                    u5923 0CAA                                      u6547 1D25  
                                    u5693 0D8E                                      u6637 0D69  
                                    u5933 0CE0                                      u5853 0BFE  
                                    u6557 17F2                                      u6647 0DE1  
                                    u5863 0C0D                                      u6567 1E0F  
                                    u6657 0E49                                      u5953 0D15  
                                    u5873 0C44                                      u6577 1F1E  
                                    u6667 0EC2                                      u6587 1F71  
                                    u6677 0F20                                      u6597 0596  
                                    u5995 1D83                                      _RSEN 0489  
                                    _WPUB 0095                      PROCULUS_Buzzer@vetor 00B1  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
        __end_of_I2C_Master_RepeatedStart 0F65                                      _main 05D3  
                                    _hora 01BC                                      _itoa 0F65  
       __size_of_EEPROM_24C1025_Write_Int 001F                                      btemp 007E  
                                    _utoa 1E19         __size_of_EEPROM_24C1025_Write_Str 009C  
                                    log@x 00B0                 ?_EEPROM_24C1025_Write_Int 00A8  
                           __CFG_BOREN$ON 0000                 ?_EEPROM_24C1025_Write_Str 0022  
             __size_of_EEPROM_Read_String 0014                                      start 0012  
                        __end_of_ADC_init 07FB                          _BALANCE_RESISTOR 1838  
                         ___fldiv@new_exp 00B1        EEPROM_24C1025_Read_Buffer@sizedata 0028  
                           ??_Rele0Ligado 0020                             ??_Rele1Ligado 0020  
                                   ??_log 006E                                     ??_isr 0077  
                        ?_I2C_Master_Init 002D                          ?_I2C_Master_Read 0020  
                        ?_I2C_Master_Wait 0077                          ?_I2C_Master_Stop 0077  
                          ?_USART_put_int 00A8                     __size_of_ADC_Read_NTC 0172  
                           ___fltol@sign1 006E                           __end_of___fladd 1337  
                                   ?_main 0077                                     _ACKEN 048C  
                                   _ACKDT 048D                           __end_of___fldiv 1638  
                                   ?_itoa 002F                                     _EEADR 010D  
                         __end_of___flmul 01DE                           __end_of___flsub 1654  
                         __end_of___fltol 0272                                     _ANSEL 0188  
                         __end_of___lldiv 1F01                                     ?_utoa 0027  
                                   _T1CON 0010                           __end_of___lwdiv 167E  
                         __end_of___lwmod 1E8C                                     i1l563 06F2  
                                   i1l565 0705                                     i1l583 0799  
                                   i1l567 0718                                     _RCREG 001A  
                                   _TMR1H 000F                                     _TMR1L 000E  
                                   _SPBRG 0099                                     _PORTA 0005  
                                   _PORTB 0006                                     _PORTC 0007  
                                   _PORTE 0009                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
         EEPROM_24C1025_Read_Int@chip_add 0035                                     _TRISE 0089  
                                   _TXREG 0019                           __end_of_captura 168C  
                           __CFG_PWRTE$ON 0000                              _usart_buffer 0150  
               EEPROM_Read_Integer@result 0028                                     _canal 01B5  
            __size_of_EEPROM_Read_Integer 001B                                     _count 01A2  
                                   _frexp 1F7D             ??_EEPROM_24C1025_Write_Buffer 0029  
      __size_of_EEPROM_24C1025_Write_Byte 0015                                     _texto 01BE  
              ?_EEPROM_24C1025_Write_Byte 002F                       __end_of_Auto_Relay0 0348  
                     __end_of_Auto_Relay1 03BB                                     pclath 000A  
                                   utoa@c 002D                                     utoa@v 002B  
                                   status 0003                                     wtemp0 007E  
                 ADC_Read_NTC@resistencia 00C4           EEPROM_24C1025_Read_Byte@mem_add 0031  
                            __end_of_BETA 1838                   ADC_Read_NTC@temperatura 00CB  
                 __size_of_PROCULUS_Delay 001A                            __CFG_MCLRE$OFF 0000  
       __size_of_PROCULUS_VP_Write_String 0013                               ?_USART_init 0020  
                         __initialization 0015                 ?_PROCULUS_VP_Write_String 00B3  
                            _ADC_Read_NTC 1337                               ?_USART_putc 0077  
                             log@exponent 006E                              __end_of_main 06CB  
                              _Histerese0 019C                                _Histerese1 01B8  
                            __end_of_itoa 0F7F                              __end_of_utoa 1E68  
                          Send_To_MB@size 0021                          _USART_put_buffer 1CBD  
                __end_of_EEPROM_Read_Byte 059F                                    ??_main 01DE  
                                  ??_itoa 0033                          __end_of_Save_Log 008A  
                                  ??_utoa 002B                       __end_of_Rele0Ligado 1107  
                        _USART_put_string 1CD9                       __end_of_Rele1Ligado 111E  
                   EEPROM_Write_Byte@addr 0023                     EEPROM_Write_Byte@dado 0020  
              __size_of_EEPROM_Write_Byte 003B                         ?_I2C_Master_Start 0077  
               EEPROM_Write_Byte@last_GIE 0024                  _mediatemperaturaNTC$2294 00D0  
                       ?_I2C_Master_Write 0020                        ??_I2C_Master_Start 0020  
                                  _ADCON1 009F                        ??_I2C_Master_Write 0022  
               PROCULUS_Show_Screen@vetor 00B1                                    ?_frexp 002C  
                                  _ADRESH 001E                                    _ADRESL 009E  
                                  _EEDATA 010C                                    _EECON2 018D  
                      Save_Log@add_memory 00B1                                _Send_To_MB 0BA1  
                   EEPROM_Write_Integer@i 002B                                    _ANSELH 0189  
            __end_of_PROCULUS_Show_Screen 1DB1                            _Rele0Desligado 0429  
                                  i1l5930 0744                                    i1l5950 0752  
                                  i1l5952 0781                                    i1l5946 0776  
                                  i1l5882 06E7                                    i1l5948 077A  
                                  i1l5892 0708                                    i1l5886 06F5  
                                  i1l5878 06D8                                    i1l5898 071B  
                                  u516_25 076E         __end_of_EEPROM_24C1025_Write_Byte 1C72  
                            ?_my_delay_ms 0020                                    _TMR1IE 0460  
                                  _TMR1CS 0081                  ?_EEPROM_24C1025_Fill_All 002F  
                      __size_of_Load_Work 00D8                                    _SSPADD 0093  
                                  _TRISC3 043B                                    _TRISC4 043C  
                                  _TRISC6 043E                                    _TRISC7 043F  
                                  _SSPCON 0014                                    _SSPBUF 0013  
                        __end_of___xxtofl 1517                            _Rele1Desligado 042D  
                      PROCULUS_VP_Write@i 00B2                  __end_of_Decodify_Command 0BA1  
                              _TempoCNT_0 0075                                _TempoCNT_1 0074  
                              _TempoOFF_0 01B9                                _TempoOFF_1 01B6  
                ?_EEPROM_24C1025_Read_Int 0031                  ?_EEPROM_24C1025_Read_Str 0024  
                _I2C_Master_RepeatedStart 0F62      __size_of_EEPROM_24C1025_Write_Buffer 00D7  
                                  ___flge 03BB                                    ___fleq 1FC4  
                               ??___fladd 0041                                 ??___fldiv 00A8  
                               ??___flmul 005D                                 ??___flsub 0055  
                               ??___fltol 00A4                           ??_USART_put_int 0070  
                               ??___lldiv 0028                                    _header 01A4  
                               ??___lwdiv 0024                                 ??___lwmod 0024  
                                  _buffer 0110                         _USART_to_Protocol 07A5  
                         USART_putc@value 0020                                    _minuto 01BB  
                               ??_captura 0022                        ?_USART_to_Protocol 0077  
            Decodify_Command@add_24LCxxxx 00EA                                    _strcat 0BBD  
                                  _strcpy 1C72                                    _strlen 0F8D  
       EEPROM_24C1025_Read_Buffer@mem_add 0024          __end_of_EEPROM_24C1025_Read_Byte 1CA2  
                      __size_of__Umul8_16 001B                               _Auto_Relay0 02EE  
                             _Auto_Relay1 0348                                    saved_w 007E  
       EEPROM_24C1025_Write_Byte@chip_add 0034                                 ?_ADC_init 0077  
                     ??_USART_to_Protocol 0020                       __size_of_USART_init 0039  
                  __end_of_Rele0Desligado 042D                       __size_of_USART_putc 0011  
                              ___flge@ff1 0055                                ___flge@ff2 0059  
                  __end_of_Rele1Desligado 0431                              ___xxtofl@arg 0035  
                            ___xxtofl@exp 0034                              ___xxtofl@val 002B  
                              ___fleq@ff1 0020                                ___fleq@ff2 0024  
                        __end_oflog@coeff 1834                   __end_of__initialization 0030  
     PROCULUS_Control_Register_Write@size 00AB                              eval_poly@res 00AC  
                              ___fltol@f1 00A0                              _Board_Number 01B4  
                          __pcstackCOMMON 0077                  __size_of_PROCULUS_Buzzer 0020  
               __end_of_USART_to_Protocol 07F0                              __pidataBANK3 0000  
                             _Rele0Ligado 10F0                             __end_of_frexp 1FC4  
                             _Rele1Ligado 1107                     USART_put_string@vetor 0021  
                              __end_ofPL2 0462                                __end_ofPL4 047C  
                              __end_ofPL6 028C                                __end_ofPL8 0295  
                       __end_of_Load_Work 057E                       my_delay_ms_WDT@time 0020  
           __size_of_EEPROM_Write_Integer 0023                  __size_of_my_delay_ms_WDT 002D  
                          _OPTION_REGbits 0081                  __end_of_BALANCE_RESISTOR 183C  
        __end_of_EEPROM_24C1025_Write_Int 0218                        Decodify_Command@hh 00BF  
                      Decodify_Command@mm 00C9          __end_of_EEPROM_24C1025_Write_Str 0C8A  
                      Decodify_Command@ss 00D3                      USART_put_buffer@loop 0025  
                    USART_put_buffer@size 0021                                ??_ADC_init 0020  
             __end_of_EEPROM_Write_String 1F3C           __end_of_EEPROM_24C1025_Fill_All 1DA7  
                         ?_Rele0Desligado 0077                                   ??_frexp 0031  
                             ?_Send_To_MB 0077                    __size_of_Send_Reply_OK 0009  
                              __pbssBANK2 0110                                __pbssBANK3 0190  
                      __size_of_eval_poly 00AA                           ?_Rele1Desligado 0077  
         __end_of_EEPROM_24C1025_Read_Int 1CBD           __end_of_EEPROM_24C1025_Read_Str 0D6F  
                ?_Package_Usart_is_for_me 0077                                 ?_Save_Log 00B1  
                          _PROCULUS_Delay 1DFF                         __end_of__Umul8_16 01F9  
                              __pmaintext 05D3                                   ?___flge 0055  
                                 ?___fleq 0020                       _EEPROM_Read_Integer 059F  
              PROCULUS_Show_Screen@screen 00AF                                __pintentry 0004  
                    mediatemperaturaNTC@i 00D9                      _PROCULUS_Show_Screen 1DA7  
                                 ?_strcat 0020                                   _T1CKPS0 0084  
                                 _T1CKPS1 0085                                   ?_strcpy 0020  
                                 ?_strlen 0020               __end_of_mediatemperaturaNTC 10F0  
                               ?___xxtofl 002B                      ?_EEPROM_Read_Integer 0023  
                   Decodify_Command@dados 00DD               EEPROM_24C1025_Read_Int@data 0036  
                                 _SSPCON2 0091          __end_of_PROCULUS_VP_Write_String 1C5D  
                 EEPROM_Read_Integer@addr 0026                                   _SSPSTAT 0094  
                _EEPROM_24C1025_Read_Byte 1C87                                __stringtab 1800  
                   Decodify_Command@valor 00E7                       PROCULUS_VP_Write@vp 00AB  
             ??_EEPROM_24C1025_Write_Byte 0034                  __end_of_USART_put_buffer 1CD9  
              __end_of_EEPROM_Read_String 04A6                    __end_of_PROCULUS_Delay 1E19  
                __end_of_USART_put_string 1D06                      __size_of_my_delay_ms 002C  
                              ??_Save_Log 0070                           PROCULUS_Delay@i 0024  
                            ??_USART_init 0024               EEPROM_24C1025_Read_Str@ctrl 002E  
                            ??_USART_putc 0020                __size_of_USART_to_Protocol 004B  
             PROCULUS_Buzzer@time_ms_x_10 00AF                                   _Status0 01A8  
                                 _Status1 01A6                           __size_of___flge 006E  
                         __size_of___fleq 0036                                   ___fladd 11C8  
                                 ___fldiv 1517                  EEPROM_Write_Integer@addr 0029  
                                 ___flmul 008A                  EEPROM_Write_Integer@dado 0025  
                                 ___flsub 1638                                   ___fltol 0218  
                                 ___lldiv 1EB9                                   ___lwdiv 1654  
                                 ___lwmod 1E68                             _Send_Reply_OK 0FA0  
                     __size_of_Send_To_MB 001C                     ?_PROCULUS_Show_Screen 00AF  
                       __end_of_eval_poly 11C8                                   _captura 167E  
                                 __ptext1 1D06                                   __ptext2 1012  
                                 __ptext3 17D4                                   __ptext4 175F  
                                 __ptext5 1337                                   __ptext6 168C  
                                 __ptext7 1F7D                                   __ptext8 1FC4  
                                 __ptext9 111E                         ??_PROCULUS_Buzzer 0070  
                                 _destino 01B3                         ?_EEPROM_Read_Byte 0077  
                         __size_of_strcat 0020                           __size_of_strcpy 0015  
                         __size_of_strlen 0013                              __size_of_log 00D3  
                            __size_of_isr 00DA                                ??___xxtofl 002F  
                      ??_EEPROM_Read_Byte 0020                                   _segundo 01BD  
                __size_of_I2C_Master_Init 002D                  __size_of_I2C_Master_Read 0022  
                          _usart_protocol 01CE                     ??_EEPROM_Read_Integer 0026  
                __size_of_I2C_Master_Wait 0009                  __size_of_I2C_Master_Stop 0003  
           EEPROM_24C1025_Write_Int@local 00AF                                   _pointer 01B2  
           EEPROM_24C1025_Write_Byte@data 0033                                   clrloop0 0808  
                      __end_of_USART_init 1D6C           __end_of_Package_Usart_is_for_me 1775  
                      __end_of_USART_putc 0BEE                      end_of_initialization 0030  
                _EEPROM_24C1025_Write_Int 01F9                         ??_my_delay_ms_WDT 0024  
                _EEPROM_24C1025_Write_Str 0BEE                ??_I2C_Master_RepeatedStart 0020  
                                 itoa@buf 0034                                   itoa@val 002F  
                         ?_PROCULUS_Delay 0020                           my_delay_ms@time 0020  
         EEPROM_24C1025_Write_Buffer@data 0027           EEPROM_24C1025_Write_Buffer@ctrl 002E  
                        ADC_Read_NTC@calc 00BE                 __size_of_I2C_Master_Start 0008  
               __size_of_I2C_Master_Write 0006                         ?_Decodify_Command 0077  
                         ___lldiv@divisor 0020                           ___lldiv@counter 002C  
                               _RL0Status 01E2                                 _RL1Status 01E1  
                      ??_Decodify_Command 00BD                                 _RCSTAbits 0018  
                        I2C_Master_Init@c 002D                          I2C_Master_Read@a 0020  
                          ?_Send_Reply_OK 0077                                   utoa@buf 002E  
               _EEPROM_24C1025_Write_Byte 1C5D                                   utoa@val 0027  
        __size_of_EEPROM_24C1025_Fill_All 003B                                   strlen@s 0024  
                      USART_to_Protocol@i 0022                                 _PORTAbits 0005  
                               _PORTBbits 0006                                 _PORTCbits 0007  
                        _Delay_Led_Memory 01B0              ??_EEPROM_24C1025_Read_Buffer 002B  
           EEPROM_24C1025_Write_Str@range 002A                  mediatemperaturaNTC@canal 00D4  
                             ___fladd@grs 004C          __size_of_EEPROM_24C1025_Read_Int 001B  
        __size_of_EEPROM_24C1025_Read_Str 00E5                              ?_Auto_Relay0 0077  
                            ?_Auto_Relay1 0077                             ___xxtofl@sign 0033  
     __end_of_EEPROM_24C1025_Write_Buffer 0F26               _EEPROM_24C1025_Write_Buffer 0E4F  
                             ___fldiv@grs 00B3                               ___fldiv@rem 00AC  
    PROCULUS_Control_Register_Write@vetor 00AD          EEPROM_24C1025_Write_Buffer@count 002B  
         EEPROM_24C1025_Write_Int@mem_add 00A8          EEPROM_24C1025_Write_Buffer@range 002D  
                       __size_of_ADC_init 000B                   Decodify_Command@tempint 00E0  
                   PROCULUS_VP_Write@size 00AF           EEPROM_24C1025_Read_Str@chip_add 002C  
                             ___flmul@grs 0064                  _PROCULUS_VP_Write_String 1C4A  
                               _TXSTAbits 0098       __size_of_EEPROM_24C1025_Read_Buffer 00E0  
                  PROCULUS_Delay@tempo_ms 0020                    ??_PROCULUS_Show_Screen 0070  
                            ?_Rele0Ligado 0077                              ?_Rele1Ligado 0077  
                          __end_of___flge 0429                            __end_of___fleq 1FFA  
                   __end_of_USART_put_int 0F8D                               _BAUDCTLbits 0187  
                        ??_Rele0Desligado 0020                            __end_of_strcat 0BDD  
                          __end_of_strcpy 1C87                            __end_of_strlen 0FA0  
                             __end_ofPL10 0484                               __end_ofPL20 02C5  
                             __end_ofPL12 02A6                               __end_ofPL30 17AA  
                             __end_ofPL22 178F                               __end_ofPL14 05D3  
                             __end_ofPL40 02E7                               __end_ofPL32 0FB2  
                             __end_ofPL24 02D3                               __end_ofPL16 02B5  
                             __end_ofPL50 0FD6                               __end_ofPL42 0FC6  
                             __end_ofPL34 048C                               __end_ofPL26 1798  
                             __end_ofPL18 1785                               __end_ofPL60 17C9  
                             __end_ofPL52 0FDC                               __end_ofPL44 0FCF  
                             __end_ofPL36 0FBC                               __end_ofPL28 17A1  
                             __end_ofPL70 1000                               __end_ofPL62 0FE8  
                             __end_ofPL54 17C3                               __end_ofPL46 17B3  
                             __end_ofPL38 02DD                               __end_ofPL80 2000  
                             __end_ofPL72 17CF                               __end_ofPL64 0FEE  
                             __end_ofPL56 0FE3                               __end_ofPL48 17BC  
                             __end_ofPL74 17D4                               __end_ofPL66 0FF4  
                             __end_ofPL58 02EE                               __end_ofPL76 1F7D  
                             __end_ofPL68 0FFA                               __end_ofPL78 0492  
                     start_initialization 0015                                eval_poly@d 00A4  
                              eval_poly@n 00A5                                eval_poly@x 00A0  
                        ??_Rele1Desligado 0020                                 _Load_Work 04A6  
                             __end_of_log 175F                               __end_of_isr 07A5  
                             USART_init@i 0024                              ??_Send_To_MB 0021  
                              frexp@value 002C                         ??_I2C_Master_Init 0031  
                       ??_I2C_Master_Read 0022                         ??_I2C_Master_Wait 0020  
                       ??_I2C_Master_Stop 0020              __end_of_EEPROM_Write_Integer 1F24  
        EEPROM_24C1025_Write_Int@chip_add 00AE                                 _SetPoint0 0070  
                               _SetPoint1 0198                  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                     Decodify_Command@add 00DF                                 _TempoON_0 01BA  
                               _TempoON_1 01B7                     USART_put_buffer@vetor 0027  
                         ??_Send_Reply_OK 0025                                  ??___flge 005D  
                                ??___fleq 0028                         __size_of_Save_Log 0056  
                               __Umul8_16 01DE                               __pdataBANK3 01E1  
                      __end_of_Send_To_MB 0BBD          __size_of_Package_Usart_is_for_me 0016  
                                ??_strcat 0022                                  ??_strcpy 0021  
                                ??_strlen 0023                ??_EEPROM_24C1025_Read_Byte 0035  
      EEPROM_24C1025_Write_Buffer@mem_add 0022                                 ___fladd@a 003D  
                               ___fladd@b 0039          EEPROM_24C1025_Write_Byte@mem_add 002F  
                               ___fldiv@a 00A0                                 ___fldiv@b 00A4  
                               ___flmul@a 0059                                 ___flmul@b 0055  
                             __pbssCOMMON 0070                                 ___flsub@a 004D  
                               ___flsub@b 0051                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                           __pcstackBANK3 01DE                                ?_Load_Work 0077  
                       _PROCULUS_VP_Write 080F                         __size_of___xxtofl 006E  
                      ?_PROCULUS_VP_Write 00AB                       USART_put_buffer@ptr 0026  
                       ?_USART_put_buffer 0021              __size_of_EEPROM_Write_String 0018  
                        _I2C_Master_Start 0F2C                        ??_USART_put_buffer 0023  
                        _I2C_Master_Write 0F26                       ??_PROCULUS_VP_Write 00B0  
                          _tempodecorrido 01A0                         ?_USART_put_string 0021  
                         _PROCULUS_Buzzer 1DB1                          ___lwdiv@dividend 0022  
                           ?_ADC_Read_NTC 00B9            Package_Usart_is_for_me@retorno 0020  
                      ??_USART_put_string 0023                                  ?___fladd 0039  
                                ?___fldiv 00A0                   _EEPROM_24C1025_Fill_All 1D6C  
                                ?___flmul 0055                                  ?___flsub 004D  
                                ?___fltol 00A0                                  ?___lldiv 0020  
                              ?__Umul8_16 0020                        _EEPROM_Read_String 0492  
                                ?___lwdiv 0020                                  ?___lwmod 0020  
      __end_of_EEPROM_24C1025_Read_Buffer 0E4F                _EEPROM_24C1025_Read_Buffer 0D6F  
                                ?_captura 0020                                 __pstrings 1800  
                         _my_delay_ms_WDT 1D06                   _EEPROM_24C1025_Read_Int 1CA2  
                 _EEPROM_24C1025_Read_Str 0C8A                    EEPROM_Read_Integer@ptr 0027  
              ??_EEPROM_24C1025_Write_Int 0070                ??_EEPROM_24C1025_Write_Str 0027  
                     ?_EEPROM_Read_String 0023                                 _eval_poly 111E  
               __end_of_PROCULUS_VP_Write 0844                EEPROM_24C1025_Read_Str@cnt 002B  
                                _ADC_init 07F0                          ___lwdiv@quotient 0025  
                 EEPROM_Write_Integer@ptr 002A                      __size_of_Auto_Relay0 005A  
                    __size_of_Auto_Relay1 0073                          ??_PROCULUS_Delay 0022  
                          __size_of_frexp 0047            EEPROM_24C1025_Read_Buffer@data 0029  
            __size_of_mediatemperaturaNTC 00DE            EEPROM_24C1025_Read_Buffer@ctrl 0030  
                           ??_my_delay_ms 0024                 __size_of_EEPROM_Read_Byte 0021  
                       interrupt_function 0004           EEPROM_24C1025_Write_Str@mem_add 0022  
                    ??_EEPROM_Read_String 0024                                 clear_ram0 0807  
                                _PIE1bits 008C                            ??_ADC_Read_NTC 0070  
                                _PIR1bits 000C          PROCULUS_Control_Register_Write@i 00AE  
                  Decodify_Command@OutPut 00E2                   mediatemperaturaNTC@Temp 00D5  
                         _Delay_Led_Usart 01AC              EEPROM_24C1025_Read_Byte@data 0036  
                    __size_of_Rele0Ligado 0017                      __size_of_Rele1Ligado 0017  
             __end_of_EEPROM_Read_Integer 05BA                                _ADCON0bits 001F  
                             __stringbase 180F                                _ADCON1bits 009F  
               __size_of_Decodify_Command 035D                      _EEPROM_Write_Integer 1F01  
          EEPROM_24C1025_Read_Int@mem_add 0031                                ?_eval_poly 00A0  
                               main@reset 00EE                               ??_Load_Work 00B9  
              ??_PROCULUS_VP_Write_String 0070                       I2C_Master_Read@temp 0022  
                 __end_of_PROCULUS_Buzzer 1DD1                            _generic_status 0076  
                               frexp@eptr 0030                                _EECON1bits 018C  
                                _Save_Log 0034                 ??_EEPROM_24C1025_Fill_All 0030  
                     __end_of_my_delay_ms 1800              EEPROM_24C1025_Read_Str@range 002D  
            EEPROM_24C1025_Read_Str@texto 0028                   __end_of_my_delay_ms_WDT 1D33  
                            my_delay_ms@i 0026                             ADC_Read_NTC@B 00C2  
                           ADC_Read_NTC@i 00C8                               ??__Umul8_16 0023  
       __size_of_I2C_Master_RepeatedStart 0003                          __size_of___fladd 016F  
               ??_EEPROM_24C1025_Read_Int 0035                   _Package_Usart_is_for_me 175F  
                        __size_of___fldiv 0121                 ??_EEPROM_24C1025_Read_Str 0029  
                        __size_of___flmul 0154                 ?_I2C_Master_RepeatedStart 0077  
                        __size_of___flsub 001C                          __size_of___fltol 005A  
                        __size_of___lldiv 0048                          __size_of___lwdiv 002A  
                        __size_of___lwmod 0024                        __end_of__stringtab 1810  
     EEPROM_24C1025_Write_Buffer@chip_add 002C                       USART_put_string@ptr 0023  
                EEPROM_24C1025_Fill_All@i 0033                          __size_of_captura 000E  
                   ?_EEPROM_Write_Integer 0025                              _Temperatura0 0194  
                            _Temperatura1 0190                           _I2C_Master_Init 1E8C  
                         _I2C_Master_Read 0F37                                  ___xxtofl 14A9  
              __size_of_PROCULUS_VP_Write 0035                           _I2C_Master_Wait 0F59  
                              strcat@from 0020          EEPROM_24C1025_Read_Byte@chip_add 0035  
                         _I2C_Master_Stop 0F34                           ___lwdiv@divisor 0020  
                         ___lwdiv@counter 0024                                  __ptext10 167E  
                                __ptext11 1D33                                  __ptext20 07A5  
                                __ptext12 1E8C                                  __ptext21 1CBD  
                                __ptext13 1EB9                                  __ptext30 1C4A  
                                __ptext22 0BA1                                  __ptext14 0844  
                                __ptext31 0F8D                                  __ptext23 0FA0  
                                __ptext15 1C72                                  __ptext40 04A6  
                                __ptext32 080F                                  __ptext24 1CD9  
                                __ptext16 0BBD                                  __ptext41 1517  
                                __ptext33 1DA7                                  __ptext25 0034  
                                __ptext17 0F65                                  __ptext50 0C8A  
                                __ptext42 059F                                  __ptext34 1DB1  
                                __ptext26 0218                                  __ptext18 1E19  
                                __ptext51 1CA2                                  __ptext43 1F24  
                                __ptext35 1654                                  __ptext27 008A  
                                __ptext19 1E68                                  __ptext60 0F2C  
                                __ptext52 1C87                                  __ptext44 1F01  
                                __ptext36 1DD1                                  __ptext28 01DE  
                                __ptext61 0F59                                  __ptext53 0D6F  
                                __ptext45 1F3C                                  __ptext37 0F7F  
                                __ptext29 01F9                                  __ptext70 10F0  
                                __ptext62 0348                                  __ptext54 0F62  
                                __ptext46 0492                                  __ptext38 0BDD  
                                __ptext71 0429                                  __ptext63 14A9  
                                __ptext55 0F37                                  __ptext47 057E  
                                __ptext39 1DFF                                  __ptext72 07F0  
                                __ptext64 1107                                  __ptext56 1D6C  
                                __ptext48 0BEE                                  __ptext73 06CB  
                                __ptext65 042D                                  __ptext57 0E4F  
                                __ptext49 1C5D                                  __ptext66 02EE  
                                __ptext58 0F26                                  __ptext67 1638  
                                __ptext59 0F34                                  __ptext68 11C8  
                                __ptext69 03BB                         __CFG_BOR4V$BOR40V 0000  
                      USART_put_int@value 00A8                                strcpy@from 0020  
                           __size_of_main 00F8                             __size_of_itoa 001A  
                           __size_of_utoa 004F              EEPROM_24C1025_Fill_All@value 002F  
              PROCULUS_VP_Write_String@vp 00B3       EEPROM_24C1025_Write_Buffer@sizedata 0026  
                             _milisegundo 01AA                            _Delay_Led_Tmr0 01AE  
           __size_of_PROCULUS_Show_Screen 000A                       _EEPROM_Write_String 1F24  
                                log@coeff 1810                  __end_of_I2C_Master_Start 0F34  
                __end_of_I2C_Master_Write 0F2C                                _INTCONbits 000B  
                             ??_eval_poly 00A7                      __end_of_ADC_Read_NTC 14A9  
                                isr@tempo 007B                                  itoa@base 0031  
                    EEPROM_Read_Byte@addr 0022                    EEPROM_Read_String@addr 0024  
                  EEPROM_Read_String@dado 0023                          my_delay_ms_WDT@i 0026  
                                intlevel1 0000                          ?_PROCULUS_Buzzer 00AF  
                       USART_put_int@dado 00AA                          _EEPROM_Read_Byte 057E  
                             _my_delay_ms 17D4                         ADC_Read_NTC@canal 0077  
                        ___lwmod@dividend 0022                      ?_EEPROM_Write_String 0025  
                        ___lldiv@dividend 0024                    __size_of_USART_put_int 000E  
            EEPROM_24C1025_Write_Int@data 00AC                      EEPROM_Read_Integer@i 002A  
                 EEPROM_Write_String@addr 0026                   EEPROM_Write_String@dado 0025  
                       ADC_Read_NTC@value 00C9                        USART_init@baudrate 0020  
             EEPROM_24C1025_Fill_All@page 0034                                 stringcode 180A  
                              _OSCCONbits 008F                 ??_Package_Usart_is_for_me 0020  
                        ?_my_delay_ms_WDT 0020                     __end_of_Send_Reply_OK 0FA9  
                     _mediatemperaturaNTC 1012                   __end_of_I2C_Master_Init 1EB9  
                 __end_of_I2C_Master_Read 0F59                   __end_of_I2C_Master_Wait 0F62  
                 __end_of_I2C_Master_Stop 0F37              EEPROM_24C1025_Write_Str@data 0026  
            EEPROM_24C1025_Write_Str@ctrl 002B                 __size_of_USART_put_buffer 001C  
             ?_EEPROM_24C1025_Read_Buffer 0024           EEPROM_24C1025_Fill_All@chip_add 0032  
                  ??_EEPROM_Write_Integer 0027                                  utoa@base 0029  
                  __Umul8_16@multiplicand 0020           USART_to_Protocol@usart_protocol 0024  
                        _Decodify_Command 0844                                  strcat@cp 0023  
                                strcat@to 0024                 __size_of_USART_put_string 002D  
                        ___lldiv@quotient 0028                         I2C_Master_Write@d 0020  
                         ___lwmod@divisor 0020                                  strcpy@cp 0023  
                                strlen@cp 0023                                  strcpy@to 0022  
                         ___lwmod@counter 0024                                  stringdir 180A  
                                stringtab 1800                         _EEPROM_Write_Byte 1F3C  
          EEPROM_24C1025_Read_Str@mem_add 0024                             ___fladd@signs 0049  
                    ?_mediatemperaturaNTC 0077                        ?_EEPROM_Write_Byte 0020  
                   ??_EEPROM_Write_String 0026                   __size_of_Rele0Desligado 0004  
                            ___fladd@aexp 004A                              ___fladd@bexp 004B  
       __size_of_EEPROM_24C1025_Read_Byte 001B                 ?_EEPROM_24C1025_Read_Byte 0031  
                     EEPROM_Read_String@c 0025                      __Umul8_16@multiplier 0027  
                 __size_of_Rele1Desligado 0004                       ??_EEPROM_Write_Byte 0021  
                       __Umul8_16@product 0023                                _USART_init 1D33  
